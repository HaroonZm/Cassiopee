================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

def read_input():
    return int(input()), list(map(int, input().split()))

def extract_even_positions(v, n):
    return v[0:n:2]

def extract_odd_positions(v, n):
    return v[1:n:2]

def count_elements(lst):
    return Counter(lst)

def get_most_common(counter):
    return counter.most_common()

def get_first_element(c):
    return c[0][0]

def get_first_count(c):
    return c[0][1]

def get_second_count(c):
    return c[1][1] if len(c) > 1 else 0

def are_both_lengths_one(c1, c2):
    return len(c1) == 1 and len(c2) == 1

def is_length_one(c):
    return len(c) == 1

def calculate_output_different_elements(n, c1, c2):
    return n - get_first_count(c1) - get_first_count(c2)

def calculate_output_both_lengths_one(n):
    return n // 2

def calculate_output_c1_one(n, c1, c2):
    return n - get_first_count(c1) - get_second_count(c2)

def calculate_output_c2_one(n, c1, c2):
    return n - get_second_count(c1) - get_first_count(c2)

def calculate_output_both_more_than_one(n, c1, c2):
    return n - max(get_second_count(c1) + get_first_count(c2),
                   get_first_count(c1) + get_second_count(c2))

def main():
    n, v = read_input()
    v1 = extract_even_positions(v, n)
    v2 = extract_odd_positions(v, n)
    cc1 = count_elements(v1)
    cc2 = count_elements(v2)
    c1 = get_most_common(cc1)
    c2 = get_most_common(cc2)

    if get_first_element(c1) != get_first_element(c2):
        print(calculate_output_different_elements(n, c1, c2))
    else:
        if are_both_lengths_one(c1, c2):
            print(calculate_output_both_lengths_one(n))
        elif is_length_one(c1) and not is_length_one(c2):
            print(calculate_output_c1_one(n, c1, c2))
        elif is_length_one(c2) and not is_length_one(c1):
            print(calculate_output_c2_one(n, c1, c2))
        else:
            print(calculate_output_both_more_than_one(n, c1, c2))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004284043679945171
    2. '\(' → logprob: -8.250428199768066
    3. '\' → logprob: -10.125428199768066
    4. '.' → logprob: -10.625428199768066
    5. '\n' → logprob: -10.875428199768066
    6. 'newline' → logprob: -11.125428199768066
    7. '```' → logprob: -11.375428199768066
    8. 'a' → logprob: -11.625428199768066
    9. 'import' → logprob: -11.875428199768066
    10. ' (' → logprob: -12.000428199768066

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001178439473733306
    2. 'a' → logprob: -7.75117826461792
    3. '.' → logprob: -8.251178741455078
    4. '\(' → logprob: -9.126178741455078
    5. '(
' → logprob: -9.251178741455078
    6. '\n' → logprob: -9.751178741455078
    7. 'newline' → logprob: -9.751178741455078
    8. '\' → logprob: -10.001178741455078
    9. ',' → logprob: -10.751178741455078
    10. '```' → logprob: -11.626178741455078

Token 6: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008866838761605322
    2. '  ' → logprob: -7.875886917114258
    3. ' ' → logprob: -9.125886917114258
    4. ' space' → logprob: -9.250886917114258
    5. ' Counter' → logprob: -10.125886917114258
    6. ' ```' → logprob: -10.375886917114258
    7. '_counter' → logprob: -10.625886917114258
    8. '_' → logprob: -10.750886917114258
    9. ' counter' → logprob: -10.750886917114258
    10. ' process' → logprob: -11.000886917114258

Token 7: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20803283154964447
    2. '_' → logprob: -1.7080328464508057
    3. '_line' → logprob: -5.833032608032227
    4. '_file' → logprob: -6.583032608032227
    5. ' (' → logprob: -7.958032608032227
    6. '(file' → logprob: -8.083032608032227
    7. '_data' → logprob: -8.583032608032227
    8. '_text' → logprob: -8.583032608032227
    9. '(line' → logprob: -8.833032608032227
    10. '(filename' → logprob: -9.083032608032227

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13203854858875275
    2. '():' → logprob: -2.2570385932922363
    3. '_' → logprob: -4.257038593292236
    4. '(_' → logprob: -7.132038593292236
    5. '```' → logprob: -7.382038593292236
    6. '):' → logprob: -7.632038593292236
    7. '(_:' → logprob: -7.882038593292236
    8. '_line' → logprob: -8.007038116455078
    9. '()' → logprob: -8.507038116455078
    10. '(:' → logprob: -8.507038116455078

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02912752702832222
    2. ' return' → logprob: -4.779127597808838
    3. '\' → logprob: -5.404127597808838
    4. '```' → logprob: -5.654127597808838
    5. '<|end|>' → logprob: -5.779127597808838
    6. '(' → logprob: -6.154127597808838
    7. 'return' → logprob: -6.529127597808838
    8. '    
' → logprob: -7.029127597808838
    9. '    ' → logprob: -7.279127597808838
    10. ' ' → logprob: -7.529127597808838

Token 10: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5563961863517761
    2. 'return' (adapté à ' return') → logprob: -1.431396245956421
    3. 'line' → logprob: -2.806396245956421
    4. 'text' → logprob: -2.931396245956421
    5. 'data' → logprob: -3.431396245956421
    6. 'input' → logprob: -3.931396245956421
    7. ' line' → logprob: -4.681396007537842
    8. 'user' → logprob: -4.806396007537842
    9. ' return' → logprob: -6.181396007537842
    10. 'n' → logprob: -7.556396007537842

Token 11: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11957914382219315
    2. 'input' → logprob: -2.3695790767669678
    3. ' ' → logprob: -3.9945790767669678
    4. ' int' → logprob: -8.369579315185547
    5. ' list' → logprob: -8.869579315185547
    6. '"' → logprob: -9.244579315185547
    7. '  ' → logprob: -9.744579315185547
    8. 'int' → logprob: -9.994579315185547
    9. ' open' → logprob: -9.994579315185547
    10. ' []' → logprob: -10.369579315185547

Token 12: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5762884616851807
    2. '(' → logprob: -0.8262884616851807
    3. 'input' → logprob: -8.076288223266602
    4. '('' → logprob: -11.076288223266602
    5. '()' → logprob: -11.826288223266602
    6. '(open' → logprob: -12.451288223266602
    7. '(
' → logprob: -13.326288223266602
    8. '("("' → logprob: -13.826288223266602
    9. ' (' → logprob: -14.076288223266602
    10. '(eval' → logprob: -14.451288223266602

Token 13: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07951687276363373
    2. ')' → logprob: -3.204516887664795
    3. '()))' → logprob: -3.954516887664795
    4. '()' → logprob: -4.329516887664795
    5. '))' → logprob: -5.704516887664795
    6. '(' → logprob: -8.954516410827637
    7. ' ())' → logprob: -10.829516410827637
    8. '().' → logprob: -11.829516410827637
    9. '()),' → logprob: -12.079516410827637
    10. '`()' → logprob: -12.454516410827637

Token 14: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.523204505443573
    2. ' ' → logprob: -2.6482045650482178
    3. ' []' → logprob: -2.6482045650482178
    4. ' input' → logprob: -2.8982045650482178
    5. '[]' → logprob: -3.2732045650482178
    6. '<|end|>' → logprob: -3.5232045650482178
    7. 'read' → logprob: -4.148204326629639
    8. '[' → logprob: -4.273204326629639
    9. ' (' → logprob: -4.398204326629639
    10. '()' → logprob: -4.648204326629639

Token 15: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09028078615665436
    2. '(map' → logprob: -3.090280771255493
    3. '()' → logprob: -3.590280771255493
    4. '(input' → logprob: -4.465281009674072
    5. '(int' → logprob: -6.965281009674072
    6. '(range' → logprob: -7.840281009674072
    7. '(read' → logprob: -9.715280532836914
    8. '(C' → logprob: -9.840280532836914
    9. '(eval' → logprob: -10.090280532836914
    10. '(filter' → logprob: -10.215280532836914

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03489842638373375
    2. '(' → logprob: -3.409898519515991
    3. '(str' → logprob: -6.784898281097412
    4. '(input' → logprob: -9.90989875793457
    5. '(lambda' → logprob: -10.15989875793457
    6. '(
' → logprob: -11.28489875793457
    7. 'int' → logprob: -12.03489875793457
    8. ' (' → logprob: -12.40989875793457
    9. '(eval' → logprob: -13.03489875793457
    10. '(ord' → logprob: -13.65989875793457

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009799322579056025
    2. ',input' → logprob: -7.125979900360107
    3. '(' → logprob: -9.000980377197266
    4. 'input' → logprob: -11.000980377197266
    5. ' (' → logprob: -11.375980377197266
    6. ',' → logprob: -11.500980377197266
    7. '))' → logprob: -12.500980377197266
    8. ')' → logprob: -12.875980377197266
    9. ' input' → logprob: -13.000980377197266
    10. '=input' → logprob: -13.500980377197266

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06200141832232475
    2. ' input' → logprob: -2.8120014667510986
    3. ')' → logprob: -11.93700122833252
    4. ',input' → logprob: -11.93700122833252
    5. '   ' → logprob: -12.06200122833252
    6. ' ' → logprob: -12.31200122833252
    7. '(input' → logprob: -12.43700122833252
    8. '	input' → logprob: -13.06200122833252
    9. '=input' → logprob: -13.68700122833252
    10. '))' → logprob: -14.43700122833252

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012584454379975796
    2. '()))' → logprob: -6.876258373260498
    3. '()' → logprob: -8.876258850097656
    4. '())' → logprob: -9.751258850097656
    5. '))' → logprob: -11.251258850097656
    6. ' ().' → logprob: -12.501258850097656
    7. '(' → logprob: -12.876258850097656
    8. '())))' → logprob: -12.876258850097656
    9. '()));' → logprob: -13.376258850097656
    10. '(input' → logprob: -14.001258850097656

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006771737709641457
    2. 'strip' → logprob: -5.006771564483643
    3. 'rstrip' → logprob: -9.8817720413208
    4. ' split' → logprob: -12.2567720413208
    5. '(split' → logprob: -15.5067720413208
    6. 'read' → logprob: -15.6317720413208
    7. 'spl' → logprob: -16.256771087646484
    8. ' strip' → logprob: -16.381771087646484
    9. '.split' → logprob: -18.131771087646484
    10. '   ' → logprob: -18.381771087646484

Token 21: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6800194978713989
    2. '))' → logprob: -0.8050194978713989
    3. ')))' → logprob: -3.4300193786621094
    4. '())))' → logprob: -5.305019378662109
    5. '())' → logprob: -5.680019378662109
    6. '()' → logprob: -5.805019378662109
    7. ')' → logprob: -6.430019378662109
    8. '(' → logprob: -7.180019378662109
    9. '   ' → logprob: -9.93001937866211
    10. '()))
' → logprob: -10.05501937866211

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07831047475337982
    2. '
' → logprob: -2.703310489654541
    3. '

' → logprob: -5.328310489654541
    4. '```' → logprob: -6.328310489654541
    5. 'n' → logprob: -7.953310489654541
    6. '\n' → logprob: -8.203310012817383
    7. '\' → logprob: -8.578310012817383
    8. 'd' → logprob: -8.828310012817383
    9. 'counter' → logprob: -9.203310012817383
    10. '
' → logprob: -9.203310012817383

Token 23: ' extract' (ID: 13424)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0576945543289185
    2. ' main' → logprob: -1.4326945543289185
    3. ' calculate' → logprob: -1.9326945543289185
    4. ' counter' → logprob: -2.807694435119629
    5. ' solve' → logprob: -3.307694435119629
    6. ' process' → logprob: -3.307694435119629
    7. ' find' → logprob: -3.557694435119629
    8. ' compute' → logprob: -3.682694435119629
    9. '_counter' → logprob: -4.057694435119629
    10. ' get' → logprob: -4.182694435119629

Token 24: '_even' (ID: 186029)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8543319702148438
    2. '_unique' → logprob: -1.8543319702148438
    3. '_values' → logprob: -2.4793319702148438
    4. '_numbers' → logprob: -2.7293319702148438
    5. '_elements' → logprob: -2.9793319702148438
    6. '_ids' → logprob: -2.9793319702148438
    7. '_counts' → logprob: -3.3543319702148438
    8. '_items' → logprob: -3.8543319702148438
    9. '_max' → logprob: -4.354331970214844
    10. '_sub' → logprob: -4.479331970214844

Token 25: '_positions' (ID: 93193)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.1237119510769844
    2. '_' → logprob: -2.2487120628356934
    3. '_elements' → logprob: -5.623712062835693
    4. '_indices' → logprob: -5.998712062835693
    5. 's' → logprob: -6.373712062835693
    6. '_values' → logprob: -6.873712062835693
    7. '_s' → logprob: -7.373712062835693
    8. '(' → logprob: -8.123711585998535
    9. '_number' → logprob: -8.373711585998535
    10. '_digits' → logprob: -8.873711585998535

Token 26: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010779914446175098
    2. ' (' → logprob: -5.135779857635498
    3. '(lst' → logprob: -6.385779857635498
    4. '(list' → logprob: -8.135780334472656
    5. '(_' → logprob: -8.385780334472656
    6. '(data' → logprob: -8.510780334472656
    7. '(nums' → logprob: -8.760780334472656
    8. '(indices' → logprob: -8.760780334472656
    9. '():' → logprob: -8.885780334472656
    10. '(line' → logprob: -9.010780334472656

Token 27: ',' (ID: 11)
  Prédit: 'ector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ector' → logprob: -0.8140755891799927
    2. 'ectors' → logprob: -1.5640755891799927
    3. 'ec' → logprob: -1.6890755891799927
    4. 'al' → logprob: -2.064075469970703
    5. 'alue' → logprob: -4.564075469970703
    6. ')' → logprob: -4.939075469970703
    7. 'ecs' → logprob: -5.564075469970703
    8. 'als' → logprob: -5.689075469970703
    9. 'e' → logprob: -5.814075469970703
    10. 'ect' → logprob: -5.939075469970703

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.6048871278762817
    2. ' positions' → logprob: -1.6048871278762817
    3. ' indices' → logprob: -2.479887008666992
    4. ' len' → logprob: -2.979887008666992
    5. ' even' → logprob: -3.104887008666992
    6. ' k' → logprob: -3.354887008666992
    7. 'n' → logprob: -3.354887008666992
    8. ' start' → logprob: -3.479887008666992
    9. 'even' → logprob: -3.604887008666992
    10. 'indices' → logprob: -3.729887008666992

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00986221618950367
    2. '):
' → logprob: -4.759862422943115
    3. ')' → logprob: -6.759862422943115
    4. ' ):' → logprob: -10.759861946105957
    5. '):
' → logprob: -11.134861946105957
    6. ',' → logprob: -11.509861946105957
    7. '):

' → logprob: -11.884861946105957
    8. ')):' → logprob: -11.884861946105957
    9. '=' → logprob: -12.384861946105957
    10. 'u' → logprob: -12.634861946105957

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001509739668108523
    2. ' return' → logprob: -6.626509666442871
    3. 'return' → logprob: -9.251509666442871
    4. '    
' → logprob: -10.376509666442871
    5. '[' → logprob: -11.376509666442871
    6. '       ' → logprob: -12.001509666442871
    7. ' ' → logprob: -12.126509666442871
    8. '[]' → logprob: -12.126509666442871
    9. '```' → logprob: -12.251509666442871
    10. '  ' → logprob: -12.501509666442871

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4763851761817932
    2. '   ' → logprob: -1.1013851165771484
    3. 'return' (adapté à ' return') → logprob: -3.7263851165771484
    4. ' [' → logprob: -3.9763851165771484
    5. '[' → logprob: -6.226385116577148
    6. ' result' → logprob: -7.101385116577148
    7. '[]' → logprob: -8.351385116577148
    8. ' ' → logprob: -8.601385116577148
    9. 'result' → logprob: -8.851385116577148
    10. ' []' → logprob: -9.601385116577148

Token 32: ' v' (ID: 323)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08245328068733215
    2. '[v' → logprob: -2.5824532508850098
    3. '[' → logprob: -6.08245325088501
    4. ' v' → logprob: -7.08245325088501
    5. '   ' → logprob: -8.457453727722168
    6. ' ' → logprob: -9.082453727722168
    7. 'v' → logprob: -10.082453727722168
    8. '[i' → logprob: -11.582453727722168
    9. '[n' → logprob: -11.707453727722168
    10. '  ' → logprob: -11.832453727722168

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015038289711810648
    2. '[:]' → logprob: -9.500150680541992
    3. '[:' → logprob: -10.500150680541992
    4. '[::-' → logprob: -11.000150680541992
    5. '<|end|>' → logprob: -11.750150680541992
    6. '```' → logprob: -12.875150680541992
    7. '[:-' → logprob: -13.000150680541992
    8. '[]' → logprob: -13.000150680541992
    9. ' ' → logprob: -13.375150680541992
    10. '[n' → logprob: -13.375150680541992

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011467931792140007
    2. '::' → logprob: -5.011467933654785
    3. '0' → logprob: -5.386467933654785
    4. ':' → logprob: -9.636467933654785
    5. '::-' → logprob: -9.761467933654785
    6. '```' → logprob: -11.886467933654785
    7. 'n' → logprob: -12.011467933654785
    8. '2' → logprob: -12.011467933654785
    9. 'i' → logprob: -12.511467933654785
    10. ' ' → logprob: -12.636467933654785

Token 35: ':n' (ID: 20109)
  Prédit: '::'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.014605793170630932
    2. ':n' → logprob: -4.26460599899292
    3. ':' → logprob: -7.76460599899292
    4. ':v' → logprob: -12.639605522155762
    5. 'n' → logprob: -12.764605522155762
    6. ':::' → logprob: -13.014605522155762
    7. '::
' → logprob: -13.139605522155762
    8. '2' → logprob: -13.389605522155762
    9. ' :' → logprob: -13.514605522155762
    10. '::-' → logprob: -13.514605522155762

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004159837495535612
    2. '*' → logprob: -6.254159927368164
    3. '2' → logprob: -6.379159927368164
    4. '0' → logprob: -9.004159927368164
    5. ' ' → logprob: -9.254159927368164
    6. '```' → logprob: -9.379159927368164
    7. '1' → logprob: -9.629159927368164
    8. '6' → logprob: -10.004159927368164
    9. ' :' → logprob: -10.754159927368164
    10. ' *' → logprob: -11.254159927368164

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -16.187501907348633
    4. ']' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '

' → logprob: -16.812501907348633
    7. '3' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '
' → logprob: -17.250001907348633
    10. '۲' → logprob: -17.812501907348633

Token 38: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001354824344161898
    2. ')' → logprob: -9.87513542175293
    3. '])' → logprob: -10.12513542175293
    4. ')]' → logprob: -10.62513542175293
    5. ' ]' → logprob: -11.12513542175293
    6. ']
' → logprob: -13.37513542175293
    7. '2' → logprob: -13.87513542175293
    8. '1' → logprob: -14.00013542175293
    9. ']

' → logprob: -15.00013542175293
    10. '3' → logprob: -15.12513542175293

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32387304306030273
    2. '<|end|>' → logprob: -1.4488730430603027
    3. '<|end|>' → logprob: -3.6988730430603027
    4. '
' → logprob: -5.073873043060303
    5. 'v' → logprob: -5.698873043060303
    6. ')' → logprob: -5.823873043060303
    7. '[' → logprob: -6.823873043060303
    8. '#' → logprob: -7.198873043060303
    9. ' def' → logprob: -7.323873043060303
    10. '```' → logprob: -7.698873043060303

Token 40: ' extract' (ID: 13424)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.9412416815757751
    2. ' extract' → logprob: -1.06624174118042
    3. ' find' → logprob: -2.44124174118042
    4. ' process' → logprob: -3.06624174118042
    5. ' calculate' → logprob: -4.31624174118042
    6. ' reverse' → logprob: -4.31624174118042
    7. ' is' → logprob: -4.44124174118042
    8. ' filter' → logprob: -4.44124174118042
    9. ' sum' → logprob: -4.69124174118042
    10. ' counter' → logprob: -4.94124174118042

Token 41: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016210908070206642
    2. '_even' → logprob: -4.141211032867432
    3. 'odd' → logprob: -10.141210556030273
    4. '_v' → logprob: -10.641210556030273
    5. '_all' → logprob: -10.891210556030273
    6. '_every' → logprob: -11.516210556030273
    7. '_at' → logprob: -11.641210556030273
    8. '(v' → logprob: -11.641210556030273
    9. '```' → logprob: -11.766210556030273
    10. ' _' → logprob: -12.266210556030273

Token 42: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.577334463596344
    2. 'even' → logprob: -0.827334463596344
    3. 'positions' → logprob: -7.702334403991699
    4. '```' → logprob: -8.0773344039917
    5. 'v' → logprob: -8.8273344039917
    6. '_even' → logprob: -9.3273344039917
    7. 'values' → logprob: -10.2023344039917
    8. '``' → logprob: -10.6398344039917
    9. 'all' → logprob: -10.7023344039917
    10. 'evenodd' → logprob: -10.8273344039917

Token 43: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -2.5822400857578032e-05
    2. 'positions' → logprob: -11.375025749206543
    3. '(v' → logprob: -12.625025749206543
    4. 's' → logprob: -13.000025749206543
    5. '_indices' → logprob: -13.125025749206543
    6. '(_' → logprob: -13.250025749206543
    7. '(' → logprob: -13.375025749206543
    8. '```' → logprob: -14.125025749206543
    9. 'Positions' → logprob: -14.375025749206543
    10. '_' → logprob: -14.625025749206543

Token 44: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00012415809032972902
    2. '(' → logprob: -9.125123977661133
    3. ' (' → logprob: -11.125123977661133
    4. '(s' → logprob: -16.625123977661133
    5. ' ' → logprob: -16.750123977661133
    6. '```' → logprob: -17.000123977661133
    7. '(n' → logprob: -17.125123977661133
    8. ',' → logprob: -17.375123977661133
    9. '?v' → logprob: -18.000123977661133
    10. '<|end|>' → logprob: -18.000123977661133

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017676468705758452
    2. ' ,' → logprob: -6.501767635345459
    3. ',n' → logprob: -9.251768112182617
    4. ',v' → logprob: -9.251768112182617
    5. '   ' → logprob: -9.876768112182617
    6. '[' → logprob: -12.001768112182617
    7. ' ' → logprob: -12.501768112182617
    8. ')' → logprob: -12.626768112182617
    9. '(' → logprob: -13.501768112182617
    10. '  ' → logprob: -13.876768112182617

Token 46: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1615705043077469
    2. ' n' → logprob: -1.9115705490112305
    3. '   ' → logprob: -6.7865705490112305
    4. ' ' → logprob: -9.41157054901123
    5. 'v' → logprob: -10.66157054901123
    6. '1' → logprob: -10.91157054901123
    7. '	n' → logprob: -11.16157054901123
    8. '0' → logprob: -11.28657054901123
    9. ' v' → logprob: -11.28657054901123
    10. '  ' → logprob: -11.41157054901123

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004895838908851147
    2. '):
' → logprob: -5.5048956871032715
    3. ')' → logprob: -7.1298956871032715
    4. '):
' → logprob: -11.87989616394043
    5. ' ):' → logprob: -12.37989616394043
    6. '   ' → logprob: -12.87989616394043
    7. '):

' → logprob: -14.12989616394043
    8. ':' → logprob: -14.25489616394043
    9. ' ' → logprob: -15.25489616394043
    10. ')
' → logprob: -15.62989616394043

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004424539860337973
    2. 'v' → logprob: -6.254424571990967
    3. ' return' → logprob: -6.504424571990967
    4. ' v' → logprob: -7.504424571990967
    5. 'return' → logprob: -7.754424571990967
    6. '    ' → logprob: -12.254424095153809
    7. '	v' → logprob: -12.629424095153809
    8. ' ' → logprob: -13.379424095153809
    9. '```' → logprob: -13.379424095153809
    10. '  ' → logprob: -13.754424095153809

Token 49: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10330236703157425
    2. 'return' (adapté à ' return') → logprob: -2.978302478790283
    3. 'v' → logprob: -3.228302478790283
    4. ' return' → logprob: -4.978302478790283
    5. ' v' → logprob: -7.228302478790283
    6. '```' → logprob: -12.103302001953125
    7. '[v' → logprob: -12.353302001953125
    8. ' ' → logprob: -12.353302001953125
    9. '	v' → logprob: -12.978302001953125
    10. '?v' → logprob: -12.978302001953125

Token 50: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.055134113878011703
    2. 'v' → logprob: -2.9301340579986572
    3. '   ' → logprob: -8.555133819580078
    4. '[v' → logprob: -10.555133819580078
    5. '	v' → logprob: -11.305133819580078
    6. '[' → logprob: -11.680133819580078
    7. ' ' → logprob: -12.805133819580078
    8. '(v' → logprob: -12.930133819580078
    9. '    ' → logprob: -13.430133819580078
    10. '?v' → logprob: -13.430133819580078

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010724655585363507
    2. '1' → logprob: -6.876072406768799
    3. '```' → logprob: -11.001072883605957
    4. 'def' → logprob: -12.876072883605957
    5. '   ' → logprob: -13.001072883605957
    6. '0' → logprob: -13.001072883605957
    7. '[:' → logprob: -13.001072883605957
    8. '2' → logprob: -13.001072883605957
    9. ' [' → logprob: -13.126072883605957
    10. '(' → logprob: -13.376072883605957

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.334533878136426e-05
    2. '0' → logprob: -10.875042915344238
    3. ' ' → logprob: -11.750042915344238
    4. '   ' → logprob: -12.125042915344238
    5. '```' → logprob: -12.937542915344238
    6. '
' → logprob: -14.062542915344238
    7. '(' → logprob: -14.250042915344238
    8. 'n' → logprob: -14.312542915344238
    9. '2' → logprob: -14.312542915344238
    10. '

' → logprob: -14.437542915344238

Token 53: ':n' (ID: 20109)
  Prédit: ':n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':n' → logprob: -6.742448022123426e-05
    2. 'n' → logprob: -10.375067710876465
    3. '	n' → logprob: -11.000067710876465
    4. ',n' → logprob: -11.625067710876465
    5. ':' → logprob: -12.250067710876465
    6. '<n' → logprob: -13.125067710876465
    7. '   ' → logprob: -13.375067710876465
    8. ';n' → logprob: -13.875067710876465
    9. ' :' → logprob: -15.375067710876465
    10. '-n' → logprob: -15.625067710876465

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003876077476888895
    2. ']' → logprob: -6.503876209259033
    3. '])' → logprob: -6.878876209259033
    4. '2' → logprob: -7.628876209259033
    5. ',' → logprob: -7.753876209259033
    6. ')' → logprob: -9.253875732421875
    7. '   ' → logprob: -9.503875732421875
    8. '1' → logprob: -9.628875732421875
    9. '6' → logprob: -10.003875732421875
    10. ' ' → logprob: -10.003875732421875

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.25
    4. '   ' → logprob: -18.375
    5. '  ' → logprob: -18.8125
    6. '۲' → logprob: -18.8125
    7. '<|end|>' → logprob: -19.9375
    8. '२' → logprob: -19.9375
    9. '２' → logprob: -20.0625
    10. '1' → logprob: -20.0625

Token 56: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045142605900764465
    2. ']' → logprob: -3.170142650604248
    3. '])' → logprob: -6.170142650604248
    4. ')]' → logprob: -10.17014217376709
    5. '）' → logprob: -11.79514217376709
    6. '   ' → logprob: -13.54514217376709
    7. ')])' → logprob: -13.67014217376709
    8. '])]' → logprob: -14.29514217376709
    9. ')
' → logprob: -14.92014217376709
    10. ' )' → logprob: -15.79514217376709

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007541201775893569
    2. '
' → logprob: -7.625754356384277
    3. '```' → logprob: -8.625754356384277
    4. '<|end|>' → logprob: -10.625754356384277
    5. '

' → logprob: -11.125754356384277
    6. '<|end|>' → logprob: -11.750754356384277
    7. 'for' → logprob: -11.750754356384277
    8. '``' → logprob: -12.625754356384277
    9. '#' → logprob: -12.750754356384277
    10. 'v' → logprob: -12.875754356384277

Token 58: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2530091106891632
    2. ' main' → logprob: -2.128009080886841
    3. ' find' → logprob: -3.128009080886841
    4. ' get' → logprob: -4.50300931930542
    5. ' calculate' → logprob: -4.50300931930542
    6. ' most' → logprob: -4.87800931930542
    7. ' process' → logprob: -5.00300931930542
    8. ' analyze' → logprob: -5.25300931930542
    9. ' compute' → logprob: -5.37800931930542
    10. ' counter' → logprob: -6.00300931930542

Token 59: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7512584328651428
    2. '(' → logprob: -1.501258373260498
    3. '_elements' → logprob: -2.126258373260498
    4. '_occ' → logprob: -2.251258373260498
    5. '_values' → logprob: -3.876258373260498
    6. '_tokens' → logprob: -4.251258373260498
    7. '_counter' → logprob: -4.876258373260498
    8. 's' → logprob: -4.876258373260498
    9. '_counts' → logprob: -5.251258373260498
    10. '_chars' → logprob: -5.501258373260498

Token 60: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5245642066001892
    2. '(v' → logprob: -0.8995642066001892
    3. ' (' → logprob: -8.274563789367676
    4. '(elements' → logprob: -8.649563789367676
    5. '(s' → logprob: -8.774563789367676
    6. '(n' → logprob: -9.024563789367676
    7. '(lst' → logprob: -9.274563789367676
    8. '(counter' → logprob: -9.774563789367676
    9. '(values' → logprob: -9.774563789367676
    10. '(chain' → logprob: -10.524563789367676

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001074611209332943
    2. ')' → logprob: -7.12607479095459
    3. ' ):' → logprob: -8.87607479095459
    4. '):
' → logprob: -9.37607479095459
    5. '   ' → logprob: -11.37607479095459
    6. '(' → logprob: -11.50107479095459
    7. '):
' → logprob: -11.62607479095459
    8. '(lst' → logprob: -12.12607479095459
    9. '):

' → logprob: -13.00107479095459
    10. ',' → logprob: -13.25107479095459

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4927099645137787
    2. 'Counter' → logprob: -0.9927099943161011
    3. 'return' → logprob: -4.367710113525391
    4. ' return' → logprob: -5.742710113525391
    5. ' Counter' → logprob: -6.242710113525391
    6. '    
' → logprob: -8.99271011352539
    7. '(C' → logprob: -9.61771011352539
    8. '	C' → logprob: -9.61771011352539
    9. ' ' → logprob: -9.74271011352539
    10. '.Counter' → logprob: -9.86771011352539

Token 63: ' return' (ID: 622)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.3812408447265625
    2. 'return' (adapté à ' return') → logprob: -1.5062408447265625
    3. '   ' → logprob: -2.5062408447265625
    4. ' return' → logprob: -4.3812408447265625
    5. ' Counter' → logprob: -7.1312408447265625
    6. ' ' → logprob: -9.131240844726562
    7. '```' → logprob: -9.256240844726562
    8. 'Return' → logprob: -10.131240844726562
    9. '
' → logprob: -10.631240844726562
    10. '    ' → logprob: -11.131240844726562

Token 64: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.043056052178144455
    2. ' Counter' → logprob: -3.168056011199951
    3. '   ' → logprob: -10.04305648803711
    4. '.Counter' → logprob: -12.79305648803711
    5. ' ' → logprob: -12.91805648803711
    6. '	C' → logprob: -13.91805648803711
    7. ' counter' → logprob: -13.91805648803711
    8. 'len' → logprob: -14.04305648803711
    9. '  ' → logprob: -14.04305648803711
    10. 'counter' → logprob: -14.29305648803711

Token 65: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012619714252650738
    2. '(lst' → logprob: -4.387619495391846
    3. '(
' → logprob: -10.262619972229004
    4. '(ls' → logprob: -10.762619972229004
    5. '(list' → logprob: -10.887619972229004
    6. '(

' → logprob: -11.762619972229004
    7. '(l' → logprob: -12.012619972229004
    8. '("("' → logprob: -12.387619972229004
    9. ' (' → logprob: -12.887619972229004
    10. '(ll' → logprob: -13.262619972229004

Token 66: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '())' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '))' → logprob: -15.000001907348633
    5. '()' → logprob: -15.875001907348633
    6. ' )' → logprob: -16.000001907348633
    7. ').' → logprob: -16.250001907348633
    8. '(' → logprob: -16.500001907348633
    9. ')return' → logprob: -17.375001907348633
    10. ')`' → logprob: -17.375001907348633

Token 67: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023486497811973095
    2. '<|end|>' → logprob: -6.50234842300415
    3. '<|end|>' → logprob: -7.50234842300415
    4. '
' → logprob: -9.377348899841309
    5. '```' → logprob: -9.752348899841309
    6. 'for' → logprob: -10.502348899841309
    7. '

' → logprob: -10.877348899841309
    8. ')' → logprob: -10.877348899841309
    9. 'print' → logprob: -11.627348899841309
    10. '\' → logprob: -11.627348899841309

Token 68: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9319732189178467
    2. 'main' → logprob: -0.9319732189178467
    3. 'most' → logprob: -2.5569732189178467
    4. ' most' → logprob: -3.3069732189178467
    5. ' find' → logprob: -3.8069732189178467
    6. 'max' → logprob: -3.9319732189178467
    7. ' max' → logprob: -4.556973457336426
    8. 'find' → logprob: -4.681973457336426
    9. 'is' → logprob: -5.431973457336426
    10. 'merge' → logprob: -5.556973457336426

Token 69: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.03209258243441582
    2. '_max' → logprob: -3.657092571258545
    3. '_counter' → logprob: -6.282092571258545
    4. '_common' → logprob: -6.532092571258545
    5. '_' → logprob: -7.657092571258545
    6. '_unique' → logprob: -7.657092571258545
    7. '_top' → logprob: -8.157093048095703
    8. '_elements' → logprob: -8.532093048095703
    9. '_total' → logprob: -9.032093048095703
    10. '_counts' → logprob: -9.407093048095703

Token 70: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.009263334795832634
    2. 'ax' → logprob: -4.759263515472412
    3. 'ajor' → logprob: -8.134263038635254
    4. 'ode' → logprob: -8.259263038635254
    5. 'a' → logprob: -10.509263038635254
    6. 'odes' → logprob: -11.134263038635254
    7. '```' → logprob: -11.384263038635254
    8. 'aj' → logprob: -11.759263038635254
    9. ' ost' → logprob: -12.509263038635254
    10. 'in' → logprob: -13.134263038635254

Token 71: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0003558423195499927
    2. 'common' → logprob: -8.00035572052002
    3. '_' → logprob: -11.37535572052002
    4. '_f' → logprob: -12.50035572052002
    5. ' common' → logprob: -13.37535572052002
    6. '_counter' → logprob: -13.75035572052002
    7. '	common' → logprob: -14.37535572052002
    8. '_com' → logprob: -15.00035572052002
    9. '_comm' → logprob: -15.12535572052002
    10. '_COMMON' → logprob: -15.37535572052002

Token 72: '(counter' (ID: 85625)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05782978981733322
    2. '()' → logprob: -3.5578298568725586
    3. '().' → logprob: -4.807829856872559
    4. ').' → logprob: -4.932829856872559
    5. '(' → logprob: -5.807829856872559
    6. ')(' → logprob: -6.182829856872559
    7. ' ' → logprob: -6.682829856872559
    8. '   ' → logprob: -6.932829856872559
    9. '()).' → logprob: -7.057829856872559
    10. '())' → logprob: -7.307829856872559

Token 74: '   ' (ID: 271)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0031217450741678476
    2. '()' → logprob: -6.753121852874756
    3. '():' → logprob: -7.628121852874756
    4. ').' → logprob: -7.628121852874756
    5. '.' → logprob: -7.753121852874756
    6. ')' → logprob: -8.503121376037598
    7. '():
' → logprob: -9.253121376037598
    8. '   ' → logprob: -10.003121376037598
    9. '(' → logprob: -10.128121376037598
    10. '):' → logprob: -10.378121376037598

Token 75: ' return' (ID: 622)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.15686021745204926
    2. 'most' → logprob: -2.281860113143921
    3. '.' → logprob: -4.6568603515625
    4. '.m' → logprob: -4.9068603515625
    5. '   ' → logprob: -5.1568603515625
    6. ')' → logprob: -5.1568603515625
    7. ').' → logprob: -5.5318603515625
    8. 'return' (adapté à ' return') → logprob: -5.7818603515625
    9. '_counter' → logprob: -6.1568603515625
    10. ' counter' → logprob: -6.7818603515625

Token 76: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.47409987449645996
    2. ' counter' → logprob: -0.97409987449646
    3. '   ' → logprob: -11.724100112915039
    4. '(counter' → logprob: -12.349100112915039
    5. '[counter' → logprob: -12.724100112915039
    6. '	counter' → logprob: -12.849100112915039
    7. '  ' → logprob: -13.099100112915039
    8. 'ounter' → logprob: -14.349100112915039
    9. '_counter' → logprob: -14.599100112915039
    10. '.counter' → logprob: -14.849100112915039

Token 77: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.00010139751975657418
    2. '.' → logprob: -9.375101089477539
    3. 'most' → logprob: -11.875101089477539
    4. ' most' → logprob: -12.125101089477539
    5. ' .' → logprob: -13.250101089477539
    6. '<|end|>' → logprob: -14.250101089477539
    7. 'Most' → logprob: -14.625101089477539
    8. '().' → logprob: -15.000101089477539
    9. ' ' → logprob: -15.625101089477539
    10. ').' → logprob: -16.00010108947754

Token 78: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -4.320199877838604e-07
    2. 'most' → logprob: -15.0
    3. ' ost' → logprob: -17.625
    4. '```' → logprob: -20.375
    5. 'ост' → logprob: -20.5
    6. 'Most' → logprob: -21.125
    7. 'OST' → logprob: -21.375
    8. 'ist' → logprob: -21.875
    9. 'st' → logprob: -22.5
    10. 'ostat' → logprob: -22.875

Token 79: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.01106173824518919
    2. 'common' → logprob: -4.511061668395996
    3. '_comm' → logprob: -12.886061668395996
    4. ' common' → logprob: -13.136061668395996
    5. 'Common' → logprob: -13.261061668395996
    6. '_COMMON' → logprob: -13.761061668395996
    7. 'commons' → logprob: -13.761061668395996
    8. '_Common' → logprob: -13.761061668395996
    9. '(common' → logprob: -14.136061668395996
    10. '_m' → logprob: -14.386061668395996

Token 80: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004754072520881891
    2. '()' → logprob: -5.754754066467285
    3. '()(' → logprob: -6.504754066467285
    4. ' (' → logprob: -10.379754066467285
    5. '```' → logprob: -10.754754066467285
    6. '1' → logprob: -12.129754066467285
    7. '<|end|>' → logprob: -12.379754066467285
    8. '((' → logprob: -12.629754066467285
    9. '("("' → logprob: -12.879754066467285
    10. '(n' → logprob: -13.004754066467285

Token 81: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05275890231132507
    2. '<|end|>' → logprob: -3.6777589321136475
    3. '()' → logprob: -4.427758693695068
    4. 'def' → logprob: -4.927758693695068
    5. '[' → logprob: -5.677758693695068
    6. '<|end|>' → logprob: -6.552758693695068
    7. '()[' → logprob: -7.177758693695068
    8. '```' → logprob: -7.177758693695068
    9. ',' → logprob: -9.302759170532227
    10. ')' → logprob: -9.802759170532227

Token 82: ' get' (ID: 717)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.381711721420288
    2. ' main' → logprob: -1.381711721420288
    3. ' max' → logprob: -1.756711721420288
    4. ' get' → logprob: -1.881711721420288
    5. ' ' → logprob: -2.631711721420288
    6. '_' → logprob: -3.756711721420288
    7. ' most' → logprob: -4.381711959838867
    8. ' count' → logprob: -4.381711959838867
    9. ' sort' → logprob: -4.631711959838867
    10. ' def' → logprob: -5.256711959838867

Token 83: '_first' (ID: 29347)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.018160473555326462
    2. '_max' → logprob: -4.518160343170166
    3. '_common' → logprob: -5.268160343170166
    4. 'max' → logprob: -8.393160820007324
    5. '_unique' → logprob: -8.393160820007324
    6. '_' → logprob: -8.393160820007324
    7. '_top' → logprob: -8.643160820007324
    8. '(' → logprob: -9.268160820007324
    9. '_best' → logprob: -9.393160820007324
    10. '_high' → logprob: -9.518160820007324

Token 84: '_element' (ID: 21131)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2288241684436798
    2. '(' → logprob: -2.1038241386413574
    3. '_' → logprob: -3.6038241386413574
    4. '_element' → logprob: -4.103824138641357
    5. '_common' → logprob: -4.353824138641357
    6. '_token' → logprob: -5.728824138641357
    7. '_key' → logprob: -5.728824138641357
    8. '_occ' → logprob: -6.353824138641357
    9. '_candidate' → logprob: -6.478824138641357
    10. '<|end|>' → logprob: -6.603824138641357

Token 85: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7939417362213135
    2. '(counter' → logprob: -1.1689417362213135
    3. 's' → logprob: -2.9189417362213135
    4. '_count' → logprob: -3.0439417362213135
    5. '(s' → logprob: -3.6689417362213135
    6. '_counter' → logprob: -4.043941497802734
    7. '_' → logprob: -4.543941497802734
    8. '(count' → logprob: -4.668941497802734
    9. '<|end|>' → logprob: -4.793941497802734
    10. '_counts' → logprob: -4.918941497802734

Token 86: '):
' (ID: 1883)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.019000524654984474
    2. 'ount' → logprob: -4.14400053024292
    3. 'om' → logprob: -5.89400053024292
    4. 'o' → logprob: -10.019000053405762
    5. ')' → logprob: -10.144000053405762
    6. 'oun' → logprob: -10.644000053405762
    7. 'ol' → logprob: -10.644000053405762
    8. 'onter' → logprob: -11.019000053405762
    9. 'ont' → logprob: -11.144000053405762
    10. 'ounters' → logprob: -11.644000053405762

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6410632133483887
    2. ' return' → logprob: -1.0160632133483887
    3. 'return' → logprob: -2.2660632133483887
    4. ' ' → logprob: -7.141063213348389
    5. '  ' → logprob: -7.141063213348389
    6. ' counter' → logprob: -7.141063213348389
    7. ' c' → logprob: -7.266063213348389
    8. ')' → logprob: -7.391063213348389
    9. '    
' → logprob: -7.391063213348389
    10. '[]' → logprob: -7.516063213348389

Token 88: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4129376709461212
    2. ' return' → logprob: -1.1629376411437988
    3. '   ' → logprob: -3.662937641143799
    4. 'c' → logprob: -10.287938117980957
    5. ' c' → logprob: -11.537938117980957
    6. '    
' → logprob: -11.662938117980957
    7. 'next' → logprob: -12.662938117980957
    8. '  ' → logprob: -13.037938117980957
    9. '	return' → logprob: -13.162938117980957
    10. '    ' → logprob: -13.287938117980957

Token 89: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.24251776933670044
    2. ' c' → logprob: -1.9925177097320557
    3. ' next' → logprob: -3.6175177097320557
    4. ' list' → logprob: -3.7425177097320557
    5. 'list' → logprob: -3.9925177097320557
    6. 'next' → logprob: -4.617517948150635
    7. ' ' → logprob: -9.492517471313477
    8. '   ' → logprob: -11.117517471313477
    9. '  ' → logprob: -11.742517471313477
    10. '	c' → logprob: -12.555017471313477

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009337326046079397
    2. '.' → logprob: -8.375933647155762
    3. '.m' → logprob: -8.500933647155762
    4. '(' → logprob: -8.875933647155762
    5. '()[' → logprob: -9.125933647155762
    6. '<|end|>' → logprob: -9.375933647155762
    7. '[
' → logprob: -10.000933647155762
    8. '()' → logprob: -10.625933647155762
    9. '.[' → logprob: -11.250933647155762
    10. ' [' → logprob: -11.375933647155762

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.000019073486328
    3. '1' → logprob: -15.062519073486328
    4. '   ' → logprob: -15.125019073486328
    5. '
' → logprob: -15.250019073486328
    6. '[' → logprob: -15.500019073486328
    7. '][' → logprob: -16.000019073486328
    8. '00' → logprob: -16.312519073486328
    9. '```' → logprob: -16.500019073486328
    10. ']' → logprob: -16.812519073486328

Token 92: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11625117063522339
    2. ']' → logprob: -2.241251230239868
    3. '])' → logprob: -5.741250991821289
    4. ')' → logprob: -9.491250991821289
    5. '])[' → logprob: -9.866250991821289
    6. ')][' → logprob: -10.241250991821289
    7. ')]' → logprob: -11.241250991821289
    8. ' ][' → logprob: -11.491250991821289
    9. '[' → logprob: -11.991250991821289
    10. ')[' → logprob: -11.991250991821289

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004622968845069408
    2. '1' → logprob: -5.379622936248779
    3. ' ' → logprob: -12.879623413085938
    4. ']' → logprob: -16.629623413085938
    5. '   ' → logprob: -17.129623413085938
    6. '```' → logprob: -17.567123413085938
    7. '۰' → logprob: -17.817123413085938
    8. '  ' → logprob: -18.317123413085938
    9. '
' → logprob: -18.317123413085938
    10. '01' → logprob: -18.567123413085938

Token 94: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04340140521526337
    2. ']' → logprob: -3.1684014797210693
    3. '}' → logprob: -8.418401718139648
    4. '])' → logprob: -9.418401718139648
    5. ' )' → logprob: -10.418401718139648
    6. ')]' → logprob: -10.793401718139648
    7. '<|end|>' → logprob: -10.793401718139648
    8. '）' → logprob: -11.168401718139648
    9. ' ]' → logprob: -12.543401718139648
    10. '   ' → logprob: -13.293401718139648

Token 95: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046055540442466736
    2. '<|end|>' → logprob: -3.171055555343628
    3. '<|end|>' → logprob: -7.046055316925049
    4. '
' → logprob: -7.171055316925049
    5. 'n' → logprob: -8.296055793762207
    6. '#' → logprob: -8.421055793762207
    7. '\' → logprob: -8.671055793762207
    8. '```' → logprob: -8.671055793762207
    9. '

' → logprob: -9.421055793762207
    10. ')' → logprob: -9.546055793762207

Token 96: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6963931918144226
    2. ' most' → logprob: -1.1963932514190674
    3. ' max' → logprob: -2.5713932514190674
    4. ' get' → logprob: -3.0713932514190674
    5. ' find' → logprob: -3.0713932514190674
    6. ' def' → logprob: -5.446393013000488
    7. ' count' → logprob: -5.696393013000488
    8. ' solve' → logprob: -5.696393013000488
    9. ' maximize' → logprob: -6.071393013000488
    10. ' merge' → logprob: -6.446393013000488

Token 97: '_first' (ID: 29347)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.09359736740589142
    2. '_m' → logprob: -2.968597412109375
    3. '_first' → logprob: -3.468597412109375
    4. '_max' → logprob: -5.468597412109375
    5. '_frequency' → logprob: -6.968597412109375
    6. '_count' → logprob: -7.843597412109375
    7. '_' → logprob: -7.968597412109375
    8. '_last' → logprob: -8.218597412109375
    9. '_value' → logprob: -9.093597412109375
    10. '_two' → logprob: -9.093597412109375

Token 98: '_count' (ID: 7536)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.006050851196050644
    2. '_elements' → logprob: -5.381051063537598
    3. 'element' → logprob: -8.006051063537598
    4. '<|end|>' → logprob: -8.881051063537598
    5. '_value' → logprob: -9.006051063537598
    6. '(' → logprob: -9.006051063537598
    7. '_' → logprob: -9.506051063537598
    8. '_index' → logprob: -10.256051063537598
    9. '_frequency' → logprob: -10.256051063537598
    10. '_second' → logprob: -10.381051063537598

Token 99: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.004627002868801355
    2. '(' → logprob: -5.379627227783203
    3. ' (' → logprob: -12.004627227783203
    4. '(s' → logprob: -15.879627227783203
    5. '(count' → logprob: -16.004627227783203
    6. '(
' → logprob: -16.379627227783203
    7. '(counter' → logprob: -17.004627227783203
    8. '(C' → logprob: -17.004627227783203
    9. '(a' → logprob: -17.879627227783203
    10. '(

' → logprob: -17.879627227783203

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11494030058383942
    2. ')' → logprob: -2.2399404048919678
    3. '):
' → logprob: -7.114940166473389
    4. '[' → logprob: -7.489940166473389
    5. ')[' → logprob: -8.864940643310547
    6. ' ):' → logprob: -8.864940643310547
    7. ')]' → logprob: -9.114940643310547
    8. ']):' → logprob: -9.489940643310547
    9. ']' → logprob: -9.864940643310547
    10. ' )' → logprob: -10.239940643310547

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17487609386444092
    2. ' return' → logprob: -1.924876093864441
    3. ' c' → logprob: -4.4248762130737305
    4. 'return' → logprob: -6.2998762130737305
    5. 'c' → logprob: -8.29987621307373
    6. ' ' → logprob: -8.79987621307373
    7. '    ' → logprob: -9.29987621307373
    8. '  ' → logprob: -9.42487621307373
    9. ' =' → logprob: -9.67487621307373
    10. '	return' → logprob: -10.54987621307373

Token 102: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2912805676460266
    2. 'return' (adapté à ' return') → logprob: -1.7912805080413818
    3. '   ' → logprob: -2.541280508041382
    4. ' c' → logprob: -5.416280746459961
    5. 'c' → logprob: -5.916280746459961
    6. ' ' → logprob: -10.666280746459961
    7. '  ' → logprob: -11.416280746459961
    8. '    ' → logprob: -12.791280746459961
    9. '	return' → logprob: -13.291280746459961
    10. '```' → logprob: -13.291280746459961

Token 103: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1002078503370285
    2. 'c' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.100208282470703
    4. '   ' → logprob: -14.850208282470703
    5. '	c' → logprob: -16.850208282470703
    6. '  ' → logprob: -16.975208282470703
    7. ')c' → logprob: -17.475208282470703
    8. '```' → logprob: -17.475208282470703
    9. '(c' → logprob: -17.850208282470703
    10. '_c' → logprob: -17.850208282470703

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004147032741457224
    2. '.m' → logprob: -8.125414848327637
    3. 'most' → logprob: -9.875414848327637
    4. '.c' → logprob: -10.750414848327637
    5. '0' → logprob: -11.625414848327637
    6. '(' → logprob: -11.625414848327637
    7. 'c' → logprob: -11.750414848327637
    8. '.' → logprob: -12.375414848327637
    9. '()[' → logprob: -12.375414848327637
    10. '```' → logprob: -12.875414848327637

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.875003814697266
    3. '][' → logprob: -13.875003814697266
    4. '[' → logprob: -16.250003814697266
    5. '1' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '```' → logprob: -17.625003814697266
    8. ']' → logprob: -18.000003814697266
    9. '  ' → logprob: -19.375003814697266
    10. '
' → logprob: -19.625003814697266

Token 106: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.41866585687967e-06
    2. ']' → logprob: -12.625008583068848
    3. ' ][' → logprob: -13.000008583068848
    4. ']][' → logprob: -13.625008583068848
    5. '[' → logprob: -13.875008583068848
    6. ')][' → logprob: -14.375008583068848
    7. '])[' → logprob: -17.50000762939453
    8. '"][' → logprob: -17.50000762939453
    9. ')[' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.12500762939453

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '][' → logprob: -16.625
    3. ' ' → logprob: -17.125
    4. ']' → logprob: -18.5
    5. '   ' → logprob: -18.75
    6. '0' → logprob: -19.125
    7. '[' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. '4' → logprob: -19.5
    10. '

' → logprob: -20.0

Token 108: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.25
    3. '}' → logprob: -17.125
    4. '()' → logprob: -18.125
    5. '）' → logprob: -18.625
    6. ')}' → logprob: -19.0
    7. '),' → logprob: -19.25
    8. ')return' → logprob: -19.25
    9. ' )' → logprob: -19.375
    10. ')

' → logprob: -19.375

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010103991371579468
    2. '<|end|>' → logprob: -10.000101089477539
    3. '
' → logprob: -10.875101089477539
    4. 'n' → logprob: -11.500101089477539
    5. '```' → logprob: -11.500101089477539
    6. '

' → logprob: -11.750101089477539
    7. 'if' → logprob: -13.375101089477539
    8. '\' → logprob: -13.625101089477539
    9. '#' → logprob: -13.750101089477539
    10. '  
' → logprob: -14.000101089477539

Token 110: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029341131448745728
    2. 'main' → logprob: -4.154341220855713
    3. ' solve' → logprob: -5.029341220855713
    4. ' find' → logprob: -6.154341220855713
    5. ' def' → logprob: -6.404341220855713
    6. ' most' → logprob: -6.779341220855713
    7. 'solve' → logprob: -7.154341220855713
    8. 'most' → logprob: -8.404340744018555
    9. ' max' → logprob: -8.779340744018555
    10. 'def' → logprob: -8.904340744018555

Token 111: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.06753844767808914
    2. '_m' → logprob: -2.8175384998321533
    3. '_first' → logprob: -6.192538261413574
    4. '_unique' → logprob: -7.442538261413574
    5. '_max' → logprob: -7.567538261413574
    6. '_common' → logprob: -7.942538261413574
    7. '_counter' → logprob: -7.942538261413574
    8. '_last' → logprob: -7.942538261413574
    9. '_two' → logprob: -8.817538261413574
    10. '_al' → logprob: -8.817538261413574

Token 112: '_count' (ID: 7536)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.002807963639497757
    2. '_elements' → logprob: -6.002808094024658
    3. '_count' → logprob: -8.2528076171875
    4. '_elem' → logprob: -11.0028076171875
    5. '_common' → logprob: -11.1278076171875
    6. '```' → logprob: -11.8778076171875
    7. 'element' → logprob: -12.5028076171875
    8. '_m' → logprob: -12.5028076171875
    9. '_' → logprob: -13.0028076171875
    10. '_code' → logprob: -13.1278076171875

Token 113: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.625001907348633
    3. '(counter' → logprob: -14.750001907348633
    4. 'def' → logprob: -17.000001907348633
    5. ' (' → logprob: -17.125001907348633
    6. '(C' → logprob: -17.625001907348633
    7. '(
' → logprob: -17.875001907348633
    8. '(s' → logprob: -17.875001907348633
    9. '(count' → logprob: -18.250001907348633
    10. '```' → logprob: -18.750001907348633

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11751674115657806
    2. '):
' → logprob: -2.2425167560577393
    3. '(c' → logprob: -5.74251651763916
    4. 'c' → logprob: -6.99251651763916
    5. ')' → logprob: -8.74251651763916
    6. '):
' → logprob: -9.24251651763916
    7. '   ' → logprob: -9.24251651763916
    8. '):

' → logprob: -9.61751651763916
    9. ',c' → logprob: -9.99251651763916
    10. ',' → logprob: -10.49251651763916

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02690207213163376
    2. ' return' → logprob: -4.026902198791504
    3. 'return' → logprob: -4.776902198791504
    4. 'if' → logprob: -9.276902198791504
    5. 'try' → logprob: -9.526902198791504
    6. ' if' → logprob: -9.776902198791504
    7. ' try' → logprob: -10.026902198791504
    8. '```' → logprob: -11.276902198791504
    9. ' ' → logprob: -12.901902198791504
    10. '    
' → logprob: -13.151902198791504

Token 116: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8769444823265076
    2. 'def' → logprob: -0.8769444823265076
    3. '   ' → logprob: -1.8769445419311523
    4. 'c' → logprob: -4.626944541931152
    5. ' return' → logprob: -5.501944541931152
    6. 'lambda' → logprob: -8.001944541931152
    7. 'if' → logprob: -8.876944541931152
    8. '```' → logprob: -9.251944541931152
    9. '
' → logprob: -9.376944541931152
    10. 'try' → logprob: -9.376944541931152

Token 117: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17982469499111176
    2. ' c' → logprob: -1.804824709892273
    3. '0' → logprob: -10.179824829101562
    4. ' ' → logprob: -10.554824829101562
    5. '   ' → logprob: -11.554824829101562
    6. '  ' → logprob: -13.679824829101562
    7. '(c' → logprob: -14.054824829101562
    8. '1' → logprob: -14.304824829101562
    9. '2' → logprob: -14.429824829101562
    10. '    ' → logprob: -14.429824829101562

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010634170612320304
    2. '1' → logprob: -6.876063346862793
    3. '2' → logprob: -10.501063346862793
    4. ' [' → logprob: -14.876063346862793
    5. ' ' → logprob: -15.001063346862793
    6. '```' → logprob: -15.126063346862793
    7. 's' → logprob: -15.251063346862793
    8. 'len' → logprob: -15.501063346862793
    9. 'and' → logprob: -15.626063346862793
    10. '[-' → logprob: -15.626063346862793

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.875003814697266
    3. '0' → logprob: -13.500003814697266
    4. '   ' → logprob: -16.500003814697266
    5. '[' → logprob: -16.750003814697266
    6. '-' → logprob: -17.125003814697266
    7. '][' → logprob: -17.125003814697266
    8. '  ' → logprob: -17.250003814697266
    9. '```' → logprob: -17.312503814697266
    10. ')' → logprob: -17.687503814697266

Token 120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011522514978423715
    2. ' ][' → logprob: -9.500115394592285
    3. '[' → logprob: -10.875115394592285
    4. ']' → logprob: -11.000115394592285
    5. ']][' → logprob: -13.375115394592285
    6. '   ' → logprob: -13.750115394592285
    7. ')][' → logprob: -13.750115394592285
    8. ' [' → logprob: -15.625115394592285
    9. '()][' → logprob: -15.875115394592285
    10. '"][' → logprob: -16.00011444091797

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '][' → logprob: -12.00001049041748
    3. '0' → logprob: -13.25001049041748
    4. ' ' → logprob: -13.37501049041748
    5. '[' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.125009536743164
    7. '-' → logprob: -16.500009536743164
    8. '
' → logprob: -17.500009536743164
    9. '```' → logprob: -17.562509536743164
    10. ']' → logprob: -17.812509536743164

Token 122: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -14.12500286102295
    3. 'def' → logprob: -14.12500286102295
    4. '),' → logprob: -14.62500286102295
    5. '}' → logprob: -14.75000286102295
    6. '<|end|>' → logprob: -15.12500286102295
    7. ' )' → logprob: -15.62500286102295
    8. ')}' → logprob: -16.000003814697266
    9. ')

' → logprob: -17.000003814697266
    10. ')return' → logprob: -17.250003814697266

Token 123: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31566092371940613
    2. '<|end|>' → logprob: -1.3156609535217285
    3. '```' → logprob: -7.6906609535217285
    4. '
' → logprob: -7.6906609535217285
    5. ',' → logprob: -7.9406609535217285
    6. '<|end|>' → logprob: -8.06566047668457
    7. '#' → logprob: -8.31566047668457
    8. '

' → logprob: -8.81566047668457
    9. '[' → logprob: -8.94066047668457
    10. ':' → logprob: -9.31566047668457

Token 124: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015860427811276168
    2. ' len' → logprob: -8.750158309936523
    3. '(len' → logprob: -16.500158309936523
    4. '   ' → logprob: -18.750158309936523
    5. 'length' → logprob: -19.500158309936523
    6. '1' → logprob: -20.375158309936523
    7. '	len' → logprob: -20.375158309936523
    8. '  ' → logprob: -21.000158309936523
    9. ' ' → logprob: -21.250158309936523
    10. '
' → logprob: -21.625158309936523

Token 125: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00014072739577386528
    2. 'c' → logprob: -9.000141143798828
    3. '(' → logprob: -11.000141143798828
    4. ' c' → logprob: -15.000141143798828
    5. ' (' → logprob: -15.500141143798828
    6. '(counter' → logprob: -16.750141143798828
    7. '(
' → logprob: -17.250141143798828
    8. '	c' → logprob: -17.875141143798828
    9. ')c' → logprob: -18.875141143798828
    10. '(count' → logprob: -20.125141143798828

Token 126: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5587705969810486
    2. ')' → logprob: -1.0587706565856934
    3. ')>' → logprob: -2.6837706565856934
    4. ' >' → logprob: -4.683770656585693
    5. 'c' → logprob: -6.308770656585693
    6. ' c' → logprob: -7.183770656585693
    7. '(c' → logprob: -7.308770656585693
    8. ')c' → logprob: -8.308770179748535
    9. '()>' → logprob: -9.683770179748535
    10. ' )' → logprob: -10.433770179748535

Token 127: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004645503591746092
    2. ' >' → logprob: -5.379645347595215
    3. '>=' → logprob: -11.004645347595215
    4. '()>' → logprob: -12.629645347595215
    5. 'c' → logprob: -13.754645347595215
    6. ' ' → logprob: -14.129645347595215
    7. '[' → logprob: -14.379645347595215
    8. ' >=' → logprob: -14.629645347595215
    9. '&gt' → logprob: -15.004645347595215
    10. ' c' → logprob: -15.129645347595215

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '>' → logprob: -17.250158309936523
    4. '<|end|>' → logprob: -18.125158309936523
    5. '
' → logprob: -18.375158309936523
    6. '   ' → logprob: -18.875158309936523
    7. '```' → logprob: -19.312658309936523
    8. 'c' → logprob: -19.437658309936523
    9. '0' → logprob: -19.437658309936523
    10. '۱' → logprob: -19.500158309936523

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '>' → logprob: -16.5625057220459
    4. '=' → logprob: -17.3750057220459
    5. '0' → logprob: -17.4375057220459
    6. '
' → logprob: -17.6250057220459
    7. '

' → logprob: -18.0625057220459
    8. '```' → logprob: -18.1875057220459
    9. '۱' → logprob: -18.3125057220459
    10. '2' → logprob: -18.3125057220459

Token 130: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06196948140859604
    2. 'else' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.811969757080078
    4. 'c' → logprob: -15.936969757080078
    5. ' and' → logprob: -16.311969757080078
    6. ',' → logprob: -16.561969757080078
    7. '	else' → logprob: -16.561969757080078
    8. ' c' → logprob: -16.686969757080078
    9. ' ' → logprob: -16.686969757080078
    10. ')' → logprob: -16.811969757080078

Token 131: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'c' → logprob: -16.750059127807617
    4. '   ' → logprob: -17.500059127807617
    5. '1' → logprob: -18.000059127807617
    6. 'v' → logprob: -18.625059127807617
    7. 'counter' → logprob: -18.625059127807617
    8. ' ' → logprob: -18.875059127807617
    9. '000' → logprob: -18.875059127807617
    10. '00' → logprob: -18.875059127807617

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -15.125008583068848
    4. 'c' → logprob: -16.62500762939453
    5. '(' → logprob: -17.62500762939453
    6. '   ' → logprob: -17.75000762939453
    7. '000' → logprob: -17.87500762939453
    8. '00' → logprob: -18.25000762939453
    9. '[' → logprob: -18.50000762939453
    10. 'counter' → logprob: -18.75000762939453

Token 133: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059351544827222824
    2. '
' → logprob: -3.0593514442443848
    3. '<|end|>' → logprob: -4.559351444244385
    4. '

' → logprob: -8.934351921081543
    5. '```' → logprob: -10.309351921081543
    6. '<|end|>' → logprob: -11.059351921081543
    7. '  
' → logprob: -11.309351921081543
    8. '
' → logprob: -11.309351921081543
    9. '\n' → logprob: -11.809351921081543
    10. '\' → logprob: -12.184351921081543

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006264181574806571
    2. '
' → logprob: -7.625626564025879
    3. '<|end|>' → logprob: -9.500626564025879
    4. '

' → logprob: -11.000626564025879
    5. '```' → logprob: -11.000626564025879
    6. '#' → logprob: -11.875626564025879
    7. '<|end|>' → logprob: -12.125626564025879
    8. 'n' → logprob: -12.375626564025879
    9. ' def' → logprob: -12.750626564025879
    10. 'import' → logprob: -13.125626564025879

Token 135: ' are' (ID: 553)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06227430701255798
    2. ' solve' → logprob: -3.687274217605591
    3. 'main' → logprob: -4.93727445602417
    4. ' max' → logprob: -5.06227445602417
    5. ' minimal' → logprob: -5.06227445602417
    6. ' def' → logprob: -5.18727445602417
    7. ' calculate' → logprob: -6.56227445602417
    8. 'def' → logprob: -6.68727445602417
    9. ' minimize' → logprob: -6.68727445602417
    10. ' min' → logprob: -6.81227445602417

Token 136: '_b' (ID: 1535)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0677904561161995
    2. '_d' → logprob: -3.8177905082702637
    3. '_elements' → logprob: -4.442790508270264
    4. '_dist' → logprob: -4.942790508270264
    5. '_' → logprob: -5.817790508270264
    6. '_all' → logprob: -5.942790508270264
    7. '_op' → logprob: -5.942790508270264
    8. '_same' → logprob: -6.067790508270264
    9. '_adj' → logprob: -6.317790508270264
    10. '_c' → logprob: -6.567790508270264

Token 137: 'oth' (ID: 1661)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.08873473107814789
    2. 'ad' → logprob: -3.8387346267700195
    3. 'equal' → logprob: -4.2137346267700195
    4. 'different' → logprob: -4.8387346267700195
    5. 'ifferent' → logprob: -5.0887346267700195
    6. '_equal' → logprob: -5.0887346267700195
    7. 'oth' → logprob: -5.2137346267700195
    8. 'e' → logprob: -5.4637346267700195
    9. 'alance' → logprob: -5.9637346267700195
    10. 'elow' → logprob: -5.9637346267700195

Token 138: '_lengths' (ID: 139878)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.6099492907524109
    2. '_d' → logprob: -1.3599493503570557
    3. '_dist' → logprob: -2.4849493503570557
    4. '_' → logprob: -2.9849493503570557
    5. '_equal' → logprob: -3.3599493503570557
    6. '_same' → logprob: -5.359949111938477
    7. '_unique' → logprob: -5.359949111938477
    8. 'different' → logprob: -5.984949111938477
    9. '_elements' → logprob: -6.109949111938477
    10. '_common' → logprob: -6.234949111938477

Token 139: '_one' (ID: 26979)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3244175314903259
    2. '(' → logprob: -2.5744175910949707
    3. '_equal' → logprob: -2.5744175910949707
    4. '(d' → logprob: -2.6994175910949707
    5. '(lst' → logprob: -3.5744175910949707
    6. '_d' → logprob: -5.199417591094971
    7. '(a' → logprob: -5.324417591094971
    8. '(equal' → logprob: -5.324417591094971
    9. ' (' → logprob: -5.574417591094971
    10. '(s' → logprob: -5.574417591094971

Token 140: '(c' (ID: 2410)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.40936702489852905
    2. '(v' → logprob: -1.1593670845031738
    3. '(l' → logprob: -4.534367084503174
    4. '(s' → logprob: -4.659367084503174
    5. '(' → logprob: -6.659367084503174
    6. '(ls' → logprob: -7.909367084503174
    7. '(a' → logprob: -9.034366607666016
    8. '(list' → logprob: -9.659366607666016
    9. '(len' → logprob: -10.034366607666016
    10. '(c' → logprob: -10.034366607666016

Token 141: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49193915724754333
    2. '(c' → logprob: -1.4919391870498657
    3. '):
' → logprob: -1.8669391870498657
    4. ')' → logprob: -5.116939067840576
    5. '):

' → logprob: -5.991939067840576
    6. 'c' → logprob: -8.741939544677734
    7. '(' → logprob: -9.116939544677734
    8. '):
' → logprob: -9.366939544677734
    9. ':' → logprob: -10.741939544677734
    10. ')c' → logprob: -10.866939544677734

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09874184429645538
    2. '):' → logprob: -2.5987417697906494
    3. ',c' → logprob: -4.8487420082092285
    4. ')' → logprob: -5.0987420082092285
    5. '):
' → logprob: -5.4737420082092285
    6. '(c' → logprob: -6.7237420082092285
    7. ' ,' → logprob: -8.97374153137207
    8. ' and' → logprob: -10.09874153137207
    9. 'and' → logprob: -10.09874153137207
    10. ',
' → logprob: -10.59874153137207

Token 143: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07889948040246964
    2. ' c' → logprob: -2.578899383544922
    3. ',' → logprob: -13.078899383544922
    4. ' ' → logprob: -13.453899383544922
    5. '	c' → logprob: -13.703899383544922
    6. ')' → logprob: -13.828899383544922
    7. ',c' → logprob: -14.203899383544922
    8. ')c' → logprob: -14.203899383544922
    9. '):
' → logprob: -14.453899383544922
    10. '   ' → logprob: -14.828899383544922

Token 144: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0441506952047348
    2. '[' → logprob: -3.2941505908966064
    3. ')' → logprob: -5.9191508293151855
    4. '):' → logprob: -6.1691508293151855
    5. '):
' → logprob: -7.2941508293151855
    6. '(' → logprob: -9.544150352478027
    7. ',' → logprob: -9.669150352478027
    8. '):

' → logprob: -9.669150352478027
    9. '),' → logprob: -9.919150352478027
    10. 'c' → logprob: -9.919150352478027

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035049907863140106
    2. '):
' → logprob: -3.4100499153137207
    3. ')' → logprob: -6.910049915313721
    4. '(c' → logprob: -7.910049915313721
    5. '):

' → logprob: -10.660049438476562
    6. ' ):' → logprob: -12.535049438476562
    7. '):
' → logprob: -12.785049438476562
    8. '(' → logprob: -12.785049438476562
    9. ',' → logprob: -13.410049438476562
    10. ':' → logprob: -13.910049438476562

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010235115041723475
    2. 'return' → logprob: -9.625102043151855
    3. ' return' → logprob: -10.250102043151855
    4. '	return' → logprob: -14.875102043151855
    5. 'def' → logprob: -16.250102996826172
    6. '```' → logprob: -16.750102996826172
    7. '    
' → logprob: -17.000102996826172
    8. ':return' → logprob: -17.125102996826172
    9. '  ' → logprob: -17.250102996826172
    10. '    ' → logprob: -17.375102996826172

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001073419232852757
    2. ' return' → logprob: -7.251073360443115
    3. '   ' → logprob: -8.001073837280273
    4. 'def' → logprob: -10.501073837280273
    5. '
' → logprob: -14.751073837280273
    6. 'len' → logprob: -15.251073837280273
    7. '	return' → logprob: -16.251073837280273
    8. ':return' → logprob: -17.626073837280273
    9. '```' → logprob: -17.626073837280273
    10. '  ' → logprob: -18.126073837280273

Token 148: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0021987867075949907
    2. ' len' → logprob: -6.127198696136475
    3. '(len' → logprob: -11.377199172973633
    4. 'get' → logprob: -13.252199172973633
    5. ' ' → logprob: -15.877199172973633
    6. 'sum' → logprob: -16.502199172973633
    7. '   ' → logprob: -16.502199172973633
    8. '(' → logprob: -17.002199172973633
    9. '  ' → logprob: -17.002199172973633
    10. '	len' → logprob: -17.127199172973633

Token 149: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.250004768371582
    4. 'c' → logprob: -16.375003814697266
    5. '(
' → logprob: -18.000003814697266
    6. ')c' → logprob: -18.125003814697266
    7. '(s' → logprob: -19.000003814697266
    8. 's' → logprob: -19.000003814697266
    9. '(C' → logprob: -19.125003814697266
    10. ')' → logprob: -20.000003814697266

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02595049887895584
    2. '[' → logprob: -3.7759504318237305
    3. ')' → logprob: -6.2759504318237305
    4. 'c' → logprob: -7.2759504318237305
    5. 's' → logprob: -10.40095043182373
    6. ')==' → logprob: -10.52595043182373
    7. '(' → logprob: -10.77595043182373
    8. '(c' → logprob: -11.02595043182373
    9. ')c' → logprob: -11.40095043182373
    10. ' c' → logprob: -11.65095043182373

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008666571229696274
    2. ')==' → logprob: -4.758666515350342
    3. '==' → logprob: -10.1336669921875
    4. '[' → logprob: -11.8836669921875
    5. '1' → logprob: -13.1336669921875
    6. ' )' → logprob: -13.6336669921875
    7. '(' → logprob: -14.5086669921875
    8. 'and' → logprob: -15.0086669921875
    9. '()' → logprob: -15.5086669921875
    10. ' ==' → logprob: -15.6336669921875

Token 152: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00865286123007536
    2. ' ==' → logprob: -4.758652687072754
    3. '()==' → logprob: -11.258652687072754
    4. 'and' → logprob: -11.383652687072754
    5. ')==' → logprob: -12.508652687072754
    6. '[' → logprob: -12.633652687072754
    7. '=' → logprob: -13.383652687072754
    8. ']==' → logprob: -13.758652687072754
    9. '1' → logprob: -14.008652687072754
    10. '<=' → logprob: -14.008652687072754

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. 'and' → logprob: -16.500295639038086
    4. '
' → logprob: -16.750295639038086
    5. '   ' → logprob: -17.250295639038086
    6. '```' → logprob: -17.375295639038086
    7. '  ' → logprob: -17.500295639038086
    8. '<|end|>' → logprob: -18.125295639038086
    9. '2' → logprob: -18.375295639038086
    10. '[' → logprob: -18.812795639038086

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'and' → logprob: -15.375040054321289
    4. '
' → logprob: -16.12504005432129
    5. '<|end|>' → logprob: -17.12504005432129
    6. '2' → logprob: -18.00004005432129
    7. '```' → logprob: -18.50004005432129
    8. ' and' → logprob: -18.62504005432129
    9. 'def' → logprob: -18.75004005432129
    10. '  ' → logprob: -18.93754005432129

Token 155: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06198202446103096
    2. 'and' → logprob: -2.8119819164276123
    3. ' or' → logprob: -11.561982154846191
    4. '<|end|>' → logprob: -12.811982154846191
    5. ' ' → logprob: -13.936982154846191
    6. ',' → logprob: -14.811982154846191
    7. '	and' → logprob: -15.061982154846191
    8. '   ' → logprob: -15.561982154846191
    9. 'def' → logprob: -16.436981201171875
    10. 'or' → logprob: -16.561981201171875

Token 156: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014168326742947102
    2. ' len' → logprob: -4.2641682624816895
    3. '   ' → logprob: -12.639168739318848
    4. '(len' → logprob: -14.389168739318848
    5. '  ' → logprob: -14.889168739318848
    6. '	len' → logprob: -15.014168739318848
    7. ' ' → logprob: -15.139168739318848
    8. '    ' → logprob: -16.26416778564453
    9. '<len' → logprob: -18.01416778564453
    10. '[len' → logprob: -18.13916778564453

Token 157: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. 'c' → logprob: -16.75
    4. ' (' → logprob: -16.875
    5. '(
' → logprob: -20.5
    6. '©' → logprob: -21.75
    7. ')c' → logprob: -22.375
    8. '	c' → logprob: -22.5
    9. '(con' → logprob: -23.0
    10. '(s' → logprob: -23.125

Token 158: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.160676971077919
    2. '2' → logprob: -1.9106769561767578
    3. '_c' → logprob: -8.410676956176758
    4. '(c' → logprob: -8.910676956176758
    5. ' c' → logprob: -9.410676956176758
    6. '_' → logprob: -11.660676956176758
    7. ')' → logprob: -13.535676956176758
    8. ')c' → logprob: -13.910676956176758
    9. '	c' → logprob: -14.035676956176758
    10. 's' → logprob: -15.410676956176758

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025458165910094976
    2. '==' → logprob: -6.3775458335876465
    3. ')==' → logprob: -7.1275458335876465
    4. ' ==' → logprob: -10.377545356750488
    5. 'def' → logprob: -13.002545356750488
    6. ' )' → logprob: -13.252545356750488
    7. '[' → logprob: -13.252545356750488
    8. '()' → logprob: -13.752545356750488
    9. ']==' → logprob: -15.252545356750488
    10. '1' → logprob: -15.252545356750488

Token 160: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023250484839081764
    2. ' ==' → logprob: -3.7732505798339844
    3. '()==' → logprob: -13.648250579833984
    4. '1' → logprob: -13.773250579833984
    5. ' ' → logprob: -14.023250579833984
    6. ')==' → logprob: -14.148250579833984
    7. '=' → logprob: -14.523250579833984
    8. ')' → logprob: -15.523250579833984
    9. ']==' → logprob: -15.648250579833984
    10. '>' → logprob: -16.773250579833984

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004080301150679588
    2. ' ' → logprob: -5.504080295562744
    3. '   ' → logprob: -14.254080772399902
    4. '2' → logprob: -14.879080772399902
    5. '  ' → logprob: -15.254080772399902
    6. '<|end|>' → logprob: -15.754080772399902
    7. '0' → logprob: -16.191579818725586
    8. '
' → logprob: -16.254079818725586
    9. '```' → logprob: -16.879079818725586
    10. 'def' → logprob: -17.316579818725586

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.125045776367188
    4. '  ' → logprob: -18.125045776367188
    5. '<|end|>' → logprob: -18.562545776367188
    6. '2' → logprob: -18.625045776367188
    7. '۱' → logprob: -18.625045776367188
    8. '
' → logprob: -19.062545776367188
    9. '```' → logprob: -19.187545776367188
    10. 'def' → logprob: -19.500045776367188

Token 163: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25232061743736267
    2. '<|end|>' → logprob: -1.502320647239685
    3. '<|end|>' → logprob: -8.502320289611816
    4. '
' → logprob: -9.377320289611816
    5. '#' → logprob: -9.877320289611816
    6. ')' → logprob: -11.252320289611816
    7. '```' → logprob: -11.502320289611816
    8. ' def' → logprob: -11.752320289611816
    9. '

' → logprob: -11.877320289611816
    10. ':' → logprob: -13.502320289611816

Token 164: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010778261348605156
    2. 'n' → logprob: -6.876077651977539
    3. '#' → logprob: -11.251077651977539
    4. 'if' → logprob: -11.626077651977539
    5. '(n' → logprob: -12.126077651977539
    6. 'print' → logprob: -12.501077651977539
    7. ' def' → logprob: -13.126077651977539
    8. '```' → logprob: -13.501077651977539
    9. 'from' → logprob: -13.751077651977539
    10. 'for' → logprob: -13.876077651977539

Token 165: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06427250057458878
    2. ' def' → logprob: -3.689272403717041
    3. 'min' → logprob: -3.939272403717041
    4. 'main' → logprob: -5.064272403717041
    5. ' main' → logprob: -5.564272403717041
    6. 'minimal' → logprob: -5.939272403717041
    7. ' minimal' → logprob: -6.689272403717041
    8. 'solve' → logprob: -6.939272403717041
    9. ' min' → logprob: -7.314272403717041
    10. ' minimize' → logprob: -7.439272403717041

Token 166: '_length' (ID: 11514)
  Prédit: '_same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_same' → logprob: -1.3085038661956787
    2. 'def' → logprob: -1.4335038661956787
    3. '_even' → logprob: -1.5585038661956787
    4. 'instance' → logprob: -2.4335038661956787
    5. '_c' → logprob: -3.9335038661956787
    6. '_' → logprob: -4.183504104614258
    7. '_equal' → logprob: -4.308504104614258
    8. 'lambda' → logprob: -4.308504104614258
    9. ' lambda' → logprob: -4.558504104614258
    10. '_b' → logprob: -4.933504104614258

Token 167: '_one' (ID: 26979)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3840474784374237
    2. '_one' → logprob: -1.509047508239746
    3. '_two' → logprob: -2.634047508239746
    4. '_' → logprob: -5.384047508239746
    5. '(v' → logprob: -5.634047508239746
    6. '>' → logprob: -5.634047508239746
    7. '_g' → logprob: -5.884047508239746
    8. '_less' → logprob: -5.884047508239746
    9. '_equal' → logprob: -6.884047508239746
    10. '(' → logprob: -7.009047508239746

Token 168: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0011834424221888185
    2. '(lst' → logprob: -7.25118350982666
    3. '(' → logprob: -8.75118350982666
    4. '(counter' → logprob: -9.12618350982666
    5. '(v' → logprob: -9.75118350982666
    6. '(s' → logprob: -10.00118350982666
    7. '(length' → logprob: -10.50118350982666
    8. '(len' → logprob: -10.50118350982666
    9. '(l' → logprob: -11.12618350982666
    10. '(a' → logprob: -12.50118350982666

Token 169: '):
' (ID: 1883)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0021209961269050837
    2. '(counter' → logprob: -6.6271209716796875
    3. 'ounter' → logprob: -7.6271209716796875
    4. '1' → logprob: -9.252120971679688
    5. '(s' → logprob: -9.752120971679688
    6. '(' → logprob: -10.627120971679688
    7. ')' → logprob: -10.752120971679688
    8. 'c' → logprob: -10.877120971679688
    9. '(len' → logprob: -11.127120971679688
    10. ')(' → logprob: -11.502120971679688

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001585793448612094
    2. ' return' → logprob: -6.501585960388184
    3. 'return' → logprob: -9.626585960388184
    4. '	return' → logprob: -12.376585960388184
    5. 'def' → logprob: -12.876585960388184
    6. '(c' → logprob: -13.251585960388184
    7. ' ' → logprob: -13.626585960388184
    8. '  ' → logprob: -13.751585960388184
    9. ':return' → logprob: -13.751585960388184
    10. ':' → logprob: -13.876585960388184

Token 171: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13633307814598083
    2. ' return' → logprob: -2.6363329887390137
    3. '   ' → logprob: -2.8863329887390137
    4. 'def' → logprob: -10.886333465576172
    5. '
' → logprob: -11.011333465576172
    6. 'len' → logprob: -11.886333465576172
    7. '	return' → logprob: -14.386333465576172
    8. '  ' → logprob: -14.511333465576172
    9. ' ' → logprob: -14.511333465576172
    10. '```' → logprob: -15.886333465576172

Token 172: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008618593215942383
    2. ' len' → logprob: -4.758618354797363
    3. '(len' → logprob: -12.758618354797363
    4. '   ' → logprob: -13.633618354797363
    5. '  ' → logprob: -17.50861930847168
    6. '[len' → logprob: -17.75861930847168
    7. '	len' → logprob: -17.88361930847168
    8. ' ' → logprob: -18.00861930847168
    9. 'length' → logprob: -18.88361930847168
    10. '=len' → logprob: -20.00861930847168

Token 173: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. 'c' → logprob: -15.375004768371582
    4. ' (' → logprob: -16.2500057220459
    5. ')c' → logprob: -18.5000057220459
    6. '(
' → logprob: -19.8750057220459
    7. '(code' → logprob: -20.0000057220459
    8. ')' → logprob: -20.7500057220459
    9. '(count' → logprob: -21.1250057220459
    10. '	c' → logprob: -21.2500057220459

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025775201618671417
    2. '(c' → logprob: -4.15077543258667
    3. 'c' → logprob: -5.40077543258667
    4. ')==' → logprob: -5.52577543258667
    5. '==' → logprob: -7.02577543258667
    6. ')c' → logprob: -8.525774955749512
    7. ' c' → logprob: -9.650774955749512
    8. '[c' → logprob: -11.150774955749512
    9. ' ==' → logprob: -11.275774955749512
    10. '[' → logprob: -11.775774955749512

Token 175: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25263214111328125
    2. ' ==' → logprob: -1.5026321411132812
    3. '()==' → logprob: -8.002632141113281
    4. ' c' → logprob: -8.752632141113281
    5. 'c' → logprob: -10.002632141113281
    6. '()' → logprob: -10.127632141113281
    7. '(c' → logprob: -10.377632141113281
    8. ' ' → logprob: -10.502632141113281
    9. '[' → logprob: -10.627632141113281
    10. ')==' → logprob: -11.002632141113281

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -13.875059127807617
    4. '```' → logprob: -17.625059127807617
    5. '  ' → logprob: -18.250059127807617
    6. '(' → logprob: -18.250059127807617
    7. '0' → logprob: -18.500059127807617
    8. '=' → logprob: -19.000059127807617
    9. '[' → logprob: -19.500059127807617
    10. '`' → logprob: -20.687559127807617

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.75
    4. '<|end|>' → logprob: -18.0
    5. '0' → logprob: -18.125
    6. '۱' → logprob: -19.0
    7. '   ' → logprob: -19.375
    8. '`' → logprob: -20.75
    9. '１' → logprob: -20.8125
    10. '१' → logprob: -20.9375

Token 178: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017772804712876678
    2. 'n' → logprob: -6.376777172088623
    3. 'if' → logprob: -9.626777648925781
    4. 'print' → logprob: -12.751777648925781
    5. '(n' → logprob: -13.501777648925781
    6. 'N' → logprob: -13.876777648925781
    7. '#' → logprob: -14.001777648925781
    8. 'for' → logprob: -14.751777648925781
    9. '```' → logprob: -14.751777648925781
    10. 'from' → logprob: -14.876777648925781

Token 179: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005325427744537592
    2. 'n' → logprob: -5.2553253173828125
    3. 'if' → logprob: -9.630325317382812
    4. '#' → logprob: -12.005325317382812
    5. 'print' → logprob: -12.130325317382812
    6. 'N' → logprob: -12.755325317382812
    7. 'ndef' → logprob: -12.880325317382812
    8. ' def' → logprob: -13.255325317382812
    9. 't' → logprob: -13.380325317382812
    10. '(n' → logprob: -13.755325317382812

Token 180: ' calculate' (ID: 17950)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5025288462638855
    2. ' def' → logprob: -1.2525289058685303
    3. ' main' → logprob: -2.7525289058685303
    4. ' get' → logprob: -4.502528667449951
    5. 'main' → logprob: -5.752528667449951
    6. ' max' → logprob: -5.752528667449951
    7. ' is' → logprob: -5.752528667449951
    8. ' all' → logprob: -5.877528667449951
    9. ' are' → logprob: -5.877528667449951
    10. 'are' → logprob: -5.877528667449951

Token 181: '_output' (ID: 16732)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7164582014083862
    2. '(' → logprob: -0.9664582014083862
    3. '(
' → logprob: -4.341458320617676
    4. '<|end|>' → logprob: -4.341458320617676
    5. '_frequency' → logprob: -4.716458320617676
    6. '(a' → logprob: -4.966458320617676
    7. '_total' → logprob: -5.091458320617676
    8. '_' → logprob: -5.341458320617676
    9. '(total' → logprob: -5.341458320617676
    10. '_score' → logprob: -5.466458320617676

Token 182: '_d' (ID: 1565)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0390695333480835
    2. '(c' → logprob: -1.1640695333480835
    3. '(a' → logprob: -2.039069652557373
    4. '(n' → logprob: -2.789069652557373
    5. '(e' → logprob: -2.914069652557373
    6. '(counter' → logprob: -3.414069652557373
    7. '(' → logprob: -4.039069652557373
    8. '(lst' → logprob: -4.039069652557373
    9. '(arr' → logprob: -5.914069652557373
    10. '(m' → logprob: -6.039069652557373

Token 183: 'ifferent' (ID: 27336)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.5284547805786133
    2. 'iff' → logprob: -1.7784547805786133
    3. 'ist' → logprob: -2.5284547805786133
    4. 'ifferent' → logprob: -2.7784547805786133
    5. 'if' → logprob: -3.1534547805786133
    6. 'ifference' → logprob: -3.1534547805786133
    7. 'e' → logprob: -5.278454780578613
    8. 'is' → logprob: -6.028454780578613
    9. 'eep' → logprob: -6.903454780578613
    10. 'iffer' → logprob: -7.153454780578613

Token 184: '_elements' (ID: 53344)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1074340343475342
    2. '_elements' → logprob: -1.4824340343475342
    3. '_counts' → logprob: -1.7324340343475342
    4. '(counter' → logprob: -2.232434034347534
    5. '(' → logprob: -3.232434034347534
    6. '_keys' → logprob: -3.482434034347534
    7. '_values' → logprob: -3.732434034347534
    8. 's' → logprob: -4.857434272766113
    9. '_types' → logprob: -4.982434272766113
    10. '_positions' → logprob: -5.232434272766113

Token 185: '(n' (ID: 2406)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.02741265296936035
    2. '(counter' → logprob: -4.277412414550781
    3. '(e' → logprob: -4.652412414550781
    4. '(' → logprob: -6.152412414550781
    5. '(a' → logprob: -7.777412414550781
    6. '(v' → logprob: -8.277412414550781
    7. '(m' → logprob: -8.527412414550781
    8. '(s' → logprob: -9.027412414550781
    9. '(count' → logprob: -9.277412414550781
    10. '(first' → logprob: -9.402412414550781

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003076586639508605
    2. ' ,' → logprob: -6.503076553344727
    3. ',c' → logprob: -7.128076553344727
    4. '):' → logprob: -8.253076553344727
    5. '):
' → logprob: -8.878076553344727
    6. ',v' → logprob: -9.378076553344727
    7. '1' → logprob: -9.753076553344727
    8. '   ' → logprob: -9.878076553344727
    9. ',
' → logprob: -10.253076553344727
    10. 'v' → logprob: -10.628076553344727

Token 187: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5551689267158508
    2. ' c' → logprob: -1.930168867111206
    3. 'count' → logprob: -1.930168867111206
    4. 'cnt' → logprob: -3.805168867111206
    5. ' count' → logprob: -4.055169105529785
    6. 'most' → logprob: -4.305169105529785
    7. 'counter' → logprob: -4.680169105529785
    8. 'first' → logprob: -4.680169105529785
    9. 'freq' → logprob: -4.930169105529785
    10. 'even' → logprob: -4.930169105529785

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000227496653678827
    2. ',' → logprob: -8.500227928161621
    3. 'ounter' → logprob: -11.875227928161621
    4. ')' → logprob: -12.875227928161621
    5. '):' → logprob: -13.125227928161621
    6. ' ,' → logprob: -13.250227928161621
    7. 'ount' → logprob: -13.250227928161621
    8. 'def' → logprob: -13.625227928161621
    9. '   ' → logprob: -13.750227928161621
    10. '_' → logprob: -14.000227928161621

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011266445508226752
    2. ',c' → logprob: -7.251126766204834
    3. ' ,' → logprob: -8.001126289367676
    4. '1' → logprob: -10.001126289367676
    5. 'c' → logprob: -10.876126289367676
    6. ',
' → logprob: -12.126126289367676
    7. '):
' → logprob: -13.001126289367676
    8. '   ' → logprob: -13.251126289367676
    9. '_,' → logprob: -13.501126289367676
    10. '):' → logprob: -13.626126289367676

Token 190: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002986392646562308
    2. ' c' → logprob: -8.125298500061035
    3. 'counter' → logprob: -13.750298500061035
    4. 'count' → logprob: -14.625298500061035
    5. '   ' → logprob: -14.875298500061035
    6. ')' → logprob: -15.500298500061035
    7. ' ' → logprob: -15.750298500061035
    8. '  ' → logprob: -16.25029945373535
    9. ')c' → logprob: -16.62529945373535
    10. 'n' → logprob: -17.25029945373535

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -13.625001907348633
    3. '1' → logprob: -15.625001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.375001907348633
    6. '_' → logprob: -17.000001907348633
    7. '
' → logprob: -17.625001907348633
    8. ')' → logprob: -18.125001907348633
    9. '

' → logprob: -18.250001907348633
    10. '_,' → logprob: -18.625001907348633

Token 192: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006016721948981285
    2. '):' → logprob: -5.131016731262207
    3. '):
' → logprob: -10.006016731262207
    4. ',c' → logprob: -10.756016731262207
    5. ' ,' → logprob: -11.506016731262207
    6. '   ' → logprob: -12.006016731262207
    7. ',n' → logprob: -13.756016731262207
    8. ':' → logprob: -13.881016731262207
    9. ',
' → logprob: -14.006016731262207
    10. ')' → logprob: -14.006016731262207

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021557629224844277
    2. '```' → logprob: -9.250215530395508
    3. '):
' → logprob: -10.250215530395508
    4. ':
' → logprob: -11.125215530395508
    5. 'max' → logprob: -11.750215530395508
    6. '):' → logprob: -11.750215530395508
    7. ':' → logprob: -11.875215530395508
    8. 'count' → logprob: -12.250215530395508
    9. ',' → logprob: -12.375215530395508
    10. 'return' → logprob: -12.500215530395508

Token 194: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18408514559268951
    2. 'min' → logprob: -2.0590851306915283
    3. 'n' → logprob: -4.184085369110107
    4. 'res' → logprob: -4.559085369110107
    5. 'total' → logprob: -5.809085369110107
    6. '   ' → logprob: -6.059085369110107
    7. 'max' → logprob: -6.184085369110107
    8. 'most' → logprob: -6.309085369110107
    9. 'result' → logprob: -6.559085369110107
    10. 'if' → logprob: -7.059085369110107

Token 195: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5326629877090454
    2. 'min' → logprob: -0.9076629877090454
    3. ' n' → logprob: -5.782662868499756
    4. '(n' → logprob: -5.907662868499756
    5. '(min' → logprob: -6.157662868499756
    6. 'sum' → logprob: -7.407662868499756
    7. ' min' → logprob: -7.532662868499756
    8. 'len' → logprob: -8.407663345336914
    9. ' (' → logprob: -9.657663345336914
    10. '(' → logprob: -9.907663345336914

Token 196: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38809606432914734
    2. '-' → logprob: -1.1380960941314697
    3. 'def' → logprob: -7.138095855712891
    4. ')' → logprob: -9.63809585571289
    5. ',' → logprob: -9.63809585571289
    6. '<|end|>' → logprob: -9.88809585571289
    7. ' ' → logprob: -10.38809585571289
    8. ' //' → logprob: -10.38809585571289
    9. '//' → logprob: -10.76309585571289
    10. '   ' → logprob: -10.76309585571289

Token 197: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.11077546328306198
    2. '(get' → logprob: -2.4857754707336426
    3. 'max' → logprob: -3.9857754707336426
    4. ' get' → logprob: -6.485775470733643
    5. '(max' → logprob: -7.610775470733643
    6. 'c' → logprob: -7.735775470733643
    7. '(c' → logprob: -8.610774993896484
    8. ' (' → logprob: -8.860774993896484
    9. '(' → logprob: -9.360774993896484
    10. 'calculate' → logprob: -9.360774993896484

Token 198: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0011400962248444557
    2. '_second' → logprob: -6.876140117645264
    3. '_max' → logprob: -9.626139640808105
    4. 'first' → logprob: -10.626139640808105
    5. 'max' → logprob: -12.626139640808105
    6. '_count' → logprob: -12.751139640808105
    7. 'First' → logprob: -12.751139640808105
    8. '_m' → logprob: -12.876139640808105
    9. '```' → logprob: -13.626139640808105
    10. '(first' → logprob: -13.876139640808105

Token 199: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0031876976136118174
    2. '_element' → logprob: -5.753187656402588
    3. '_elements' → logprob: -12.253188133239746
    4. 'count' → logprob: -12.753188133239746
    5. '_counts' → logprob: -14.128188133239746
    6. '_elem' → logprob: -14.253188133239746
    7. '_first' → logprob: -15.503188133239746
    8. '_counter' → logprob: -15.753188133239746
    9. '```' → logprob: -16.00318717956543
    10. '_' → logprob: -16.25318717956543

Token 200: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0008174888207577169
    2. '(' → logprob: -7.25081729888916
    3. ' (' → logprob: -9.62581729888916
    4. '(_' → logprob: -11.25081729888916
    5. '_(' → logprob: -11.50081729888916
    6. '_c' → logprob: -12.12581729888916
    7. '_' → logprob: -12.12581729888916
    8. '(get' → logprob: -12.37581729888916
    9. '```' → logprob: -14.00081729888916
    10. '(C' → logprob: -14.25081729888916

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002653182251378894
    2. 'c' → logprob: -6.377653121948242
    3. '(c' → logprob: -7.002653121948242
    4. ')' → logprob: -11.627653121948242
    5. ')c' → logprob: -11.627653121948242
    6. 'get' → logprob: -11.752653121948242
    7. '(get' → logprob: -13.127653121948242
    8. '```' → logprob: -13.252653121948242
    9. 's' → logprob: -13.377653121948242
    10. '
' → logprob: -13.377653121948242

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021646523382514715
    2. ' )' → logprob: -6.252164840698242
    3. '())' → logprob: -8.377164840698242
    4. '()' → logprob: -13.002164840698242
    5. ' ())' → logprob: -13.502164840698242
    6. '[' → logprob: -14.002164840698242
    7. ')-' → logprob: -14.877164840698242
    8. '   ' → logprob: -15.752164840698242
    9. '')' → logprob: -16.002164840698242
    10. ')
' → logprob: -16.127164840698242

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5231882333755493
    2. ' -' → logprob: -0.8981882333755493
    3. ' ' → logprob: -10.023188591003418
    4. '   ' → logprob: -12.523188591003418
    5. ' ' → logprob: -12.898188591003418
    6. '()' → logprob: -13.023188591003418
    7. '[' → logprob: -13.273188591003418
    8. '+' → logprob: -13.273188591003418
    9. '  ' → logprob: -13.398188591003418
    10. 'def' → logprob: -13.648188591003418

Token 204: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0004324573092162609
    2. ' get' → logprob: -7.75043249130249
    3. '(get' → logprob: -13.625432014465332
    4. '[get' → logprob: -15.250432014465332
    5. ')get' → logprob: -15.875432014465332
    6. '	get' → logprob: -16.50043296813965
    7. '_get' → logprob: -16.62543296813965
    8. '.get' → logprob: -17.00043296813965
    9. '@get' → logprob: -17.37543296813965
    10. '=get' → logprob: -18.37543296813965

Token 205: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.00021867557370569557
    2. '_second' → logprob: -8.500218391418457
    3. 'first' → logprob: -11.125218391418457
    4. 'First' → logprob: -15.375218391418457
    5. '_FIRST' → logprob: -16.250219345092773
    6. ' first' → logprob: -18.375219345092773
    7. '(first' → logprob: -18.375219345092773
    8. 'second' → logprob: -18.625219345092773
    9. 's' → logprob: -19.125219345092773
    10. '_First' → logprob: -19.250219345092773

Token 206: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.45848218582978e-06
    2. 'count' → logprob: -13.00000286102295
    3. '_' → logprob: -16.375001907348633
    4. '_counts' → logprob: -16.875001907348633
    5. '_c' → logprob: -17.125001907348633
    6. '_counter' → logprob: -19.125001907348633
    7. ' count' → logprob: -19.375001907348633
    8. 'Count' → logprob: -19.500001907348633
    9. '[' → logprob: -19.875001907348633
    10. '_token' → logprob: -20.125001907348633

Token 207: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00035488870344124734
    2. '(' → logprob: -8.125354766845703
    3. ' (' → logprob: -9.750354766845703
    4. '(
' → logprob: -14.625354766845703
    5. 'c' → logprob: -16.750354766845703
    6. '(counter' → logprob: -17.625354766845703
    7. '(s' → logprob: -17.875354766845703
    8. ')c' → logprob: -18.125354766845703
    9. '```' → logprob: -18.500354766845703
    10. ',c' → logprob: -18.875354766845703

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.8961017202818766e-05
    2. ')' → logprob: -10.250059127807617
    3. 'c' → logprob: -11.125059127807617
    4. '[' → logprob: -12.500059127807617
    5. 's' → logprob: -13.125059127807617
    6. ')c' → logprob: -13.875059127807617
    7. '_' → logprob: -14.375059127807617
    8. ' ' → logprob: -15.250059127807617
    9. '1' → logprob: -15.437559127807617
    10. '[c' → logprob: -15.937559127807617

Token 209: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.44574936106801e-05
    2. ')+' → logprob: -10.12507438659668
    3. '+' → logprob: -10.87507438659668
    4. ' )' → logprob: -12.00007438659668
    5. ' +' → logprob: -12.37507438659668
    6. '   ' → logprob: -13.00007438659668
    7. ')
' → logprob: -13.87507438659668
    8. '}' → logprob: -14.62507438659668
    9. 'def' → logprob: -15.00007438659668
    10. ' ' → logprob: -15.37507438659668

Token 210: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.849109119386412e-06
    2. '<|end|>' → logprob: -11.750009536743164
    3. '
' → logprob: -13.750009536743164
    4. '

' → logprob: -14.750009536743164
    5. '#' → logprob: -15.625009536743164
    6. ' def' → logprob: -15.875009536743164
    7. '<|end|>' → logprob: -17.000009536743164
    8. ')' → logprob: -17.000009536743164
    9. '  
' → logprob: -17.625009536743164
    10. '\' → logprob: -17.750009536743164

Token 211: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.22993825376033783
    2. 'calculate' → logprob: -1.854938268661499
    3. 'def' → logprob: -3.229938268661499
    4. ' def' → logprob: -4.72993803024292
    5. ' solve' → logprob: -8.729938507080078
    6. ' main' → logprob: -8.979938507080078
    7. 'solve' → logprob: -10.104938507080078
    8. ' is' → logprob: -10.354938507080078
    9. ' combine' → logprob: -10.729938507080078
    10. 'alculate' → logprob: -10.854938507080078

Token 212: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.00010103991371579468
    2. 'output' → logprob: -10.625101089477539
    3. ' _' → logprob: -10.875101089477539
    4. '```' → logprob: -11.500101089477539
    5. '_input' → logprob: -12.000101089477539
    6. ''_' → logprob: -12.125101089477539
    7. 'def' → logprob: -12.375101089477539
    8. '_' → logprob: -12.375101089477539
    9. '"_' → logprob: -12.625101089477539
    10. 'Output' → logprob: -12.750101089477539

Token 213: '_b' (ID: 1535)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06784014403820038
    2. '(c' → logprob: -3.067840099334717
    3. '(' → logprob: -4.192840099334717
    4. 'def' → logprob: -6.692840099334717
    5. '(s' → logprob: -6.817840099334717
    6. '_same' → logprob: -7.442840099334717
    7. 'different' → logprob: -7.942840099334717
    8. 'same' → logprob: -8.567840576171875
    9. '(d' → logprob: -8.817840576171875
    10. 'd' → logprob: -9.942840576171875

Token 214: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -2.4987974029500037e-05
    2. ' oth' → logprob: -11.750024795532227
    3. 'o' → logprob: -12.500024795532227
    4. 'ot' → logprob: -12.750024795532227
    5. 'othe' → logprob: -12.875024795532227
    6. 'both' → logprob: -12.875024795532227
    7. 'ad' → logprob: -14.250024795532227
    8. 'reak' → logprob: -14.375024795532227
    9. 'are' → logprob: -14.625024795532227
    10. 'OTH' → logprob: -15.250024795532227

Token 215: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.0008408344583585858
    2. '_length' → logprob: -7.375840663909912
    3. '_elements' → logprob: -9.12584114074707
    4. '_d' → logprob: -10.87584114074707
    5. '```' → logprob: -11.25084114074707
    6. '(_' → logprob: -11.75084114074707
    7. 'length' → logprob: -11.87584114074707
    8. '_have' → logprob: -11.87584114074707
    9. '_are' → logprob: -12.00084114074707
    10. '_len' → logprob: -12.00084114074707

Token 216: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0007024224614724517
    2. '_two' → logprob: -7.375702381134033
    3. '```' → logprob: -11.125702857971191
    4. 'one' → logprob: -11.375702857971191
    5. '_three' → logprob: -11.625702857971191
    6. 'def' → logprob: -12.625702857971191
    7. '_are' → logprob: -12.625702857971191
    8. '_' → logprob: -12.750702857971191
    9. '_under' → logprob: -12.750702857971191
    10. '_d' → logprob: -12.875702857971191

Token 217: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005864443723112345
    2. '(c' → logprob: -5.25586462020874
    3. '(' → logprob: -7.38086462020874
    4. ' (' → logprob: -12.755864143371582
    5. '(s' → logprob: -13.380864143371582
    6. '(
' → logprob: -13.880864143371582
    7. '(d' → logprob: -14.505864143371582
    8. 'def' → logprob: -15.130864143371582
    9. '(a' → logprob: -15.380864143371582
    10. '(b' → logprob: -15.630864143371582

Token 218: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019567293929867446
    2. ',c' → logprob: -8.625195503234863
    3. ',
' → logprob: -11.500195503234863
    4. ' ,' → logprob: -12.625195503234863
    5. ',n' → logprob: -13.875195503234863
    6. 'c' → logprob: -14.250195503234863
    7. '‌,' → logprob: -15.375195503234863
    8. '   ' → logprob: -15.500195503234863
    9. ',

' → logprob: -15.750195503234863
    10. '):
' → logprob: -15.875195503234863

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004535980988293886
    2. '1' → logprob: -6.379536151885986
    3. '0' → logprob: -6.629536151885986
    4. '2' → logprob: -7.754536151885986
    5. 'return' → logprob: -8.129535675048828
    6. '=' → logprob: -8.629535675048828
    7. '    
' → logprob: -9.254535675048828
    8. 'n' → logprob: -9.379535675048828
    9. ' return' → logprob: -9.754535675048828
    10. '9' → logprob: -10.004535675048828

Token 220: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9807053804397583
    2. 'n' → logprob: -1.3557053804397583
    3. '2' → logprob: -1.9807053804397583
    4. '1' → logprob: -2.1057052612304688
    5. 'return' (adapté à ' return') → logprob: -2.6057052612304688
    6. '0' → logprob: -3.7307052612304688
    7. ' n' → logprob: -5.105705261230469
    8. ' ' → logprob: -6.730705261230469
    9. ' return' → logprob: -7.230705261230469
    10. 'min' → logprob: -7.730705261230469

Token 221: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009606543462723494
    2. '(n' → logprob: -7.375960826873779
    3. '0' → logprob: -9.000960350036621
    4. ' n' → logprob: -9.250960350036621
    5. 'int' → logprob: -10.000960350036621
    6. '1' → logprob: -10.750960350036621
    7. 'min' → logprob: -10.875960350036621
    8. '2' → logprob: -11.000960350036621
    9. '(' → logprob: -12.250960350036621
    10. ' (' → logprob: -13.250960350036621

Token 222: ' //' (ID: 602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07825855910778046
    2. 'n' → logprob: -2.703258514404297
    3. 'if' → logprob: -4.953258514404297
    4. ',' → logprob: -7.328258514404297
    5. '```' → logprob: -8.703258514404297
    6. 'print' → logprob: -9.328258514404297
    7. '(n' → logprob: -9.578258514404297
    8. '#' → logprob: -9.578258514404297
    9. ' def' → logprob: -9.953258514404297
    10. '
' → logprob: -10.703258514404297

Token 223: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '２' → logprob: -18.50006675720215
    4. '۲' → logprob: -18.75006675720215
    5. '२' → logprob: -19.50006675720215
    6. '202' → logprob: -20.00006675720215
    7. '22' → logprob: -20.37506675720215
    8. '  ' → logprob: -20.50006675720215
    9. 'two' → logprob: -20.50006675720215
    10. '٢' → logprob: -20.50006675720215

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '２' → logprob: -18.3750057220459
    4. '

' → logprob: -19.5000057220459
    5. '۲' → logprob: -20.1250057220459
    6. '
' → logprob: -20.2500057220459
    7. '२' → logprob: -21.5000057220459
    8. '```' → logprob: -21.5000057220459
    9. '₂' → logprob: -21.7500057220459
    10. '٢' → logprob: -22.3750057220459

Token 225: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005408661440014839
    2. '<|end|>' → logprob: -5.255408763885498
    3. 'else' → logprob: -9.75540828704834
    4. '<|end|>' → logprob: -10.50540828704834
    5. '
' → logprob: -10.75540828704834
    6. 'elif' → logprob: -11.50540828704834
    7. '

' → logprob: -11.63040828704834
    8. '*' → logprob: -11.88040828704834
    9. '#' → logprob: -12.13040828704834
    10. '```' → logprob: -12.13040828704834

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001109020784497261
    2. 'n' → logprob: -7.6261091232299805
    3. '<|end|>' → logprob: -8.25110912322998
    4. 'if' → logprob: -8.37610912322998
    5. '#' → logprob: -10.00110912322998
    6. '
' → logprob: -10.50110912322998
    7. '(n' → logprob: -10.87610912322998
    8. ' def' → logprob: -11.75110912322998
    9. '```' → logprob: -12.12610912322998
    10. '<|end|>' → logprob: -12.37610912322998

Token 227: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21081744134426117
    2. ' solve' → logprob: -2.710817337036133
    3. ' calculate' → logprob: -2.960817337036133
    4. 'main' → logprob: -3.710817337036133
    5. 'def' → logprob: -3.960817337036133
    6. ' def' → logprob: -4.210817337036133
    7. 'calculate' → logprob: -5.460817337036133
    8. 'solve' → logprob: -5.460817337036133
    9. ' resolve' → logprob: -6.835817337036133
    10. ' process' → logprob: -6.960817337036133

Token 228: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.00024763107649050653
    2. 'output' → logprob: -8.375247955322266
    3. '_' → logprob: -11.625247955322266
    4. 'Output' → logprob: -12.500247955322266
    5. '_input' → logprob: -14.250247955322266
    6. 'def' → logprob: -14.375247955322266
    7. '```' → logprob: -14.375247955322266
    8. ' output' → logprob: -15.250247955322266
    9. '_difference' → logprob: -15.625247955322266
    10. '_max' → logprob: -15.625247955322266

Token 229: '_c' (ID: 1303)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.4166993498802185
    2. '(' → logprob: -1.9166994094848633
    3. '(n' → logprob: -1.9166994094848633
    4. '_' → logprob: -4.166699409484863
    5. '_b' → logprob: -4.291699409484863
    6. '_diff' → logprob: -4.916699409484863
    7. ' (' → logprob: -5.166699409484863
    8. '_c' → logprob: -7.291699409484863
    9. 'def' → logprob: -7.416699409484863
    10. '_difference' → logprob: -7.541699409484863

Token 230: '1' (ID: 16)
  Prédit: 'alculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.08639103919267654
    2. 'ount' → logprob: -3.086390972137451
    3. 'ounter' → logprob: -3.836390972137451
    4. 'ont' → logprob: -5.336390972137451
    5. 'both' → logprob: -6.086390972137451
    6. 'on' → logprob: -6.336390972137451
    7. 'al' → logprob: -6.336390972137451
    8. 'ifferent' → logprob: -7.836390972137451
    9. 'ounted' → logprob: -7.961390972137451
    10. '_b' → logprob: -7.961390972137451

Token 231: '_one' (ID: 26979)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.9350720047950745
    2. '_m' → logprob: -1.9350719451904297
    3. '(n' → logprob: -2.0600719451904297
    4. '_diff' → logprob: -2.6850719451904297
    5. '_length' → logprob: -2.6850719451904297
    6. '_d' → logprob: -2.9350719451904297
    7. '_first' → logprob: -3.4350719451904297
    8. '_len' → logprob: -3.4350719451904297
    9. '(' → logprob: -4.06007194519043
    10. '_lengths' → logprob: -5.06007194519043

Token 232: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.013111169449985027
    2. '(c' → logprob: -5.513111114501953
    3. '_length' → logprob: -5.513111114501953
    4. '(' → logprob: -5.888111114501953
    5. 'def' → logprob: -6.513111114501953
    6. '_' → logprob: -8.513111114501953
    7. '_len' → logprob: -9.263111114501953
    8. ' (' → logprob: -9.388111114501953
    9. '_count' → logprob: -9.638111114501953
    10. '_(' → logprob: -10.013111114501953

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046165118692442775
    2. ',c' → logprob: -8.00046157836914
    3. ' ,' → logprob: -9.50046157836914
    4. 'c' → logprob: -11.12546157836914
    5. ',
' → logprob: -11.25046157836914
    6. '):' → logprob: -11.75046157836914
    7. '   ' → logprob: -12.37546157836914
    8. ' c' → logprob: -12.62546157836914
    9. '):
' → logprob: -13.00046157836914
    10. ',n' → logprob: -13.12546157836914

Token 234: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.035121850669384
    2. ' c' → logprob: -3.7851219177246094
    3. 'get' → logprob: -4.535121917724609
    4. ' get' → logprob: -6.910121917724609
    5. 'calculate' → logprob: -10.28512191772461
    6. 'n' → logprob: -10.91012191772461
    7. '   ' → logprob: -11.41012191772461
    8. ')' → logprob: -12.78512191772461
    9. '  ' → logprob: -13.41012191772461
    10. 'def' → logprob: -13.47262191772461

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05517992377281189
    2. '2' → logprob: -2.9301798343658447
    3. ',' → logprob: -8.305179595947266
    4. '):' → logprob: -10.805179595947266
    5. '):
' → logprob: -11.180179595947266
    6. ')' → logprob: -12.055179595947266
    7. 'def' → logprob: -13.180179595947266
    8. 'c' → logprob: -13.555179595947266
    9. '
' → logprob: -13.555179595947266
    10. '```' → logprob: -13.680179595947266

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021033499797340482
    2. '):' → logprob: -9.500210762023926
    3. '):
' → logprob: -9.625210762023926
    4. ' ,' → logprob: -9.875210762023926
    5. ',c' → logprob: -11.625210762023926
    6. '   ' → logprob: -12.250210762023926
    7. ',
' → logprob: -13.250210762023926
    8. 'c' → logprob: -14.625210762023926
    9. ',n' → logprob: -15.000210762023926
    10. '  ' → logprob: -15.000210762023926

Token 237: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017256340943276882
    2. ' c' → logprob: -6.376725673675537
    3. 'get' → logprob: -11.626725196838379
    4. 'counter' → logprob: -12.251725196838379
    5. ')' → logprob: -12.626725196838379
    6. 'calculate' → logprob: -13.251725196838379
    7. 'count' → logprob: -14.126725196838379
    8. '   ' → logprob: -14.376725196838379
    9. ' get' → logprob: -14.626725196838379
    10. '  ' → logprob: -14.876725196838379

Token 238: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -13.50000286102295
    3. 'c' → logprob: -15.12500286102295
    4. 'def' → logprob: -15.62500286102295
    5. ' ' → logprob: -15.62500286102295
    6. ',' → logprob: -16.250001907348633
    7. 's' → logprob: -16.750001907348633
    8. '```' → logprob: -16.750001907348633
    9. '1' → logprob: -16.812501907348633
    10. '=' → logprob: -17.437501907348633

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2785947322845459
    2. '):
' → logprob: -1.528594732284546
    3. ',' → logprob: -3.653594732284546
    4. '   ' → logprob: -8.903594970703125
    5. '):
' → logprob: -8.903594970703125
    6. ')' → logprob: -9.653594970703125
    7. '):

' → logprob: -9.903594970703125
    8. '[' → logprob: -11.778594970703125
    9. 'def' → logprob: -12.403594970703125
    10. ':' → logprob: -12.528594970703125

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027682865038514137
    2. '```' → logprob: -8.625276565551758
    3. 'def' → logprob: -10.250276565551758
    4. 'return' → logprob: -11.500276565551758
    5. '``' → logprob: -11.750276565551758
    6. 'if' → logprob: -12.125276565551758
    7. '=' → logprob: -12.125276565551758
    8. 'count' → logprob: -12.375276565551758
    9. 'max' → logprob: -12.625276565551758
    10. 'v' → logprob: -12.875276565551758

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.051115456968545914
    2. 'min' → logprob: -3.5511155128479004
    3. 'n' → logprob: -4.0511155128479
    4. '   ' → logprob: -6.1761155128479
    5. ' return' → logprob: -7.3011155128479
    6. 'max' → logprob: -7.5511155128479
    7. 'def' → logprob: -8.676115036010742
    8. 'c' → logprob: -10.051115036010742
    9. 'if' → logprob: -10.176115036010742
    10. 'minimum' → logprob: -10.176115036010742

Token 242: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09842979162931442
    2. '(n' → logprob: -2.8484296798706055
    3. ' n' → logprob: -3.5984296798706055
    4. 'min' → logprob: -5.8484296798706055
    5. ' (' → logprob: -5.9734296798706055
    6. 'len' → logprob: -6.4734296798706055
    7. 'calculate' → logprob: -7.2234296798706055
    8. '(len' → logprob: -8.598429679870605
    9. '(min' → logprob: -8.723429679870605
    10. 'get' → logprob: -9.473429679870605

Token 243: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3075181543827057
    2. ' //' → logprob: -1.8075181245803833
    3. '//' → logprob: -2.932518243789673
    4. '-' → logprob: -3.057518243789673
    5. '   ' → logprob: -8.682518005371094
    6. ' ' → logprob: -8.807518005371094
    7. '#' → logprob: -10.432518005371094
    8. '  ' → logprob: -11.557518005371094
    9. ' #' → logprob: -11.557518005371094
    10. ',' → logprob: -12.057518005371094

Token 244: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0008079635445028543
    2. ' get' → logprob: -7.125807762145996
    3. '(get' → logprob: -13.500807762145996
    4. 'c' → logprob: -13.750807762145996
    5. 'max' → logprob: -14.500807762145996
    6. '_get' → logprob: -16.000808715820312
    7. '[get' → logprob: -16.500808715820312
    8. '=get' → logprob: -16.875808715820312
    9. '   ' → logprob: -16.875808715820312
    10. 'calculate' → logprob: -17.125808715820312

Token 245: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.2015751153230667
    2. 'first' → logprob: -1.7015751600265503
    3. ' first' → logprob: -8.95157527923584
    4. '_second' → logprob: -10.82657527923584
    5. 'First' → logprob: -11.95157527923584
    6. 'second' → logprob: -12.32657527923584
    7. 'count' → logprob: -14.45157527923584
    8. '	first' → logprob: -14.82657527923584
    9. ' ' → logprob: -15.32657527923584
    10. '_FIRST' → logprob: -16.201574325561523

Token 246: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0003360582049936056
    2. 'count' → logprob: -8.000335693359375
    3. ' count' → logprob: -15.625335693359375
    4. '_' → logprob: -16.500335693359375
    5. '_counts' → logprob: -16.750335693359375
    6. '_c' → logprob: -16.750335693359375
    7. '_first' → logprob: -17.250335693359375
    8. 'Count' → logprob: -17.375335693359375
    9. ' ' → logprob: -17.625335693359375
    10. '_counter' → logprob: -17.875335693359375

Token 247: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0011793931480497122
    2. '(' → logprob: -6.751179218292236
    3. ' (' → logprob: -11.626179695129395
    4. '(s' → logprob: -16.001178741455078
    5. '(
' → logprob: -17.001178741455078
    6. '(C' → logprob: -17.376178741455078
    7. ' c' → logprob: -17.626178741455078
    8. 'c' → logprob: -17.751178741455078
    9. '(counter' → logprob: -17.751178741455078
    10. '(count' → logprob: -18.251178741455078

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004715514834970236
    2. 'c' → logprob: -5.504715442657471
    3. '(c' → logprob: -7.629715442657471
    4. ')c' → logprob: -9.379715919494629
    5. ')' → logprob: -10.129715919494629
    6. '2' → logprob: -11.254715919494629
    7. ' c' → logprob: -12.129715919494629
    8. '(' → logprob: -13.254715919494629
    9. ')(' → logprob: -13.254715919494629
    10. ']' → logprob: -14.254715919494629

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003558423195499927
    2. ' )' → logprob: -8.00035572052002
    3. '[' → logprob: -11.50035572052002
    4. ')-' → logprob: -12.25035572052002
    5. '())' → logprob: -13.25035572052002
    6. ' -' → logprob: -13.75035572052002
    7. '()' → logprob: -14.62535572052002
    8. '-' → logprob: -14.87535572052002
    9. '-)' → logprob: -15.00035572052002
    10. ')
' → logprob: -15.25035572052002

Token 250: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27487629652023315
    2. '-' → logprob: -2.274876356124878
    3. ' -' → logprob: -2.274876356124878
    4. '<|end|>' → logprob: -3.649876356124878
    5. ' ' → logprob: -4.899876117706299
    6. '   ' → logprob: -8.524876594543457
    7. ')' → logprob: -8.649876594543457
    8. '*' → logprob: -8.774876594543457
    9. 'if' → logprob: -9.649876594543457
    10. '#' → logprob: -9.649876594543457

Token 251: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0017381247598677874
    2. ' get' → logprob: -6.37673807144165
    3. 'c' → logprob: -11.626738548278809
    4. 'second' → logprob: -11.876738548278809
    5. 'max' → logprob: -12.001738548278809
    6. '(get' → logprob: -12.001738548278809
    7. '   ' → logprob: -12.876738548278809
    8. ' ' → logprob: -14.001738548278809
    9. ' c' → logprob: -14.251738548278809
    10. '2' → logprob: -14.626738548278809

Token 252: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.07932683080434799
    2. 'second' → logprob: -2.579326868057251
    3. '_first' → logprob: -7.829326629638672
    4. 'Second' → logprob: -10.829326629638672
    5. 'first' → logprob: -11.329326629638672
    6. 'get' → logprob: -12.954326629638672
    7. ' second' → logprob: -13.204326629638672
    8. '_' → logprob: -14.079326629638672
    9. '
' → logprob: -14.579326629638672
    10. '(second' → logprob: -14.704326629638672

Token 253: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9981420336989686e-05
    2. '_c' → logprob: -11.500020027160645
    3. 'count' → logprob: -12.625020027160645
    4. ' _' → logprob: -12.750020027160645
    5. '_' → logprob: -13.375020027160645
    6. '_counter' → logprob: -14.500020027160645
    7. '_counts' → logprob: -14.625020027160645
    8. '_get' → logprob: -15.125020027160645
    9. '_cont' → logprob: -16.500019073486328
    10. 'c' → logprob: -16.500019073486328

Token 254: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.625
    3. '(' → logprob: -16.0
    4. 'c' → logprob: -17.125
    5. '(
' → logprob: -18.25
    6. '(counter' → logprob: -20.125
    7. '(count' → logprob: -20.125
    8. '```' → logprob: -20.5
    9. '(con' → logprob: -20.875
    10. '(get' → logprob: -21.375

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011570196511456743
    2. 'c' → logprob: -9.125115394592285
    3. '(c' → logprob: -12.125115394592285
    4. '(' → logprob: -14.500115394592285
    5. ')' → logprob: -14.625115394592285
    6. ')c' → logprob: -15.875115394592285
    7. 's' → logprob: -16.3751163482666
    8. ' c' → logprob: -17.5001163482666
    9. '```' → logprob: -17.7501163482666
    10. '(
' → logprob: -18.5001163482666

Token 256: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003154432924930006
    2. '())' → logprob: -8.87531566619873
    3. ' )' → logprob: -10.12531566619873
    4. ')c' → logprob: -10.12531566619873
    5. '   ' → logprob: -10.87531566619873
    6. ')
' → logprob: -11.12531566619873
    7. ')+' → logprob: -11.12531566619873
    8. '(c' → logprob: -11.25031566619873
    9. '()' → logprob: -11.37531566619873
    10. '))' → logprob: -11.37531566619873

Token 257: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.05762140080332756
    2. 'calculate' → logprob: -2.932621479034424
    3. 'def' → logprob: -6.057621479034424
    4. ' def' → logprob: -7.932621479034424
    5. ' ' → logprob: -11.682621002197266
    6. 'alculate' → logprob: -12.057621002197266
    7. ' define' → logprob: -12.432621002197266
    8. 'c' → logprob: -12.557621002197266
    9. '_cal' → logprob: -13.057621002197266
    10. ' extract' → logprob: -13.307621002197266

Token 259: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -1.2471589798224159e-05
    2. 'output' → logprob: -11.875012397766113
    3. 'def' → logprob: -12.625012397766113
    4. 'Output' → logprob: -13.875012397766113
    5. '_input' → logprob: -15.000012397766113
    6. '```' → logprob: -15.000012397766113
    7. '_outputs' → logprob: -16.12501335144043
    8. '_' → logprob: -16.37501335144043
    9. '_OUTPUT' → logprob: -16.87501335144043
    10. ' _' → logprob: -16.87501335144043

Token 260: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.06299763172864914
    2. '_b' → logprob: -2.812997579574585
    3. '_d' → logprob: -7.562997817993164
    4. '_a' → logprob: -7.812997817993164
    5. '(n' → logprob: -9.687997817993164
    6. '_' → logprob: -11.812997817993164
    7. '_diff' → logprob: -11.812997817993164
    8. '(' → logprob: -12.187997817993164
    9. '_n' → logprob: -12.312997817993164
    10. '_same' → logprob: -12.937997817993164

Token 261: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006897944025695324
    2. '2' → logprob: -5.006897926330566
    3. 'alculate' → logprob: -9.256897926330566
    4. '_' → logprob: -10.881897926330566
    5. '```' → logprob: -10.881897926330566
    6. '_one' → logprob: -11.131897926330566
    7. 'calculate' → logprob: -12.256897926330566
    8. 'o' → logprob: -12.756897926330566
    9. '_two' → logprob: -12.881897926330566
    10. 'def' → logprob: -13.006897926330566

Token 262: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -2.935296834039036e-06
    2. '_two' → logprob: -14.37500286102295
    3. '(n' → logprob: -14.62500286102295
    4. '_once' → logprob: -14.87500286102295
    5. '```' → logprob: -14.87500286102295
    6. '(one' → logprob: -15.00000286102295
    7. '_ONE' → logprob: -15.25000286102295
    8. '_on' → logprob: -15.50000286102295
    9. '_three' → logprob: -16.125003814697266
    10. '(' → logprob: -16.750003814697266

Token 263: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002964935847558081
    2. '(' → logprob: -8.125296592712402
    3. '(
' → logprob: -15.500296592712402
    4. 'n' → logprob: -16.000295639038086
    5. ' (' → logprob: -16.375295639038086
    6. 'def' → logprob: -17.000295639038086
    7. '```' → logprob: -19.125295639038086
    8. '(s' → logprob: -19.750295639038086
    9. 's' → logprob: -20.375295639038086
    10. '(

' → logprob: -20.500295639038086

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.429896944202483e-05
    2. ',c' → logprob: -10.125043869018555
    3. ' ,' → logprob: -12.500043869018555
    4. ',
' → logprob: -15.125043869018555
    5. 'c' → logprob: -16.000043869018555
    6. ' c' → logprob: -17.000043869018555
    7. '   ' → logprob: -18.375043869018555
    8. ',n' → logprob: -19.000043869018555
    9. '_,' → logprob: -20.250043869018555
    10. ',

' → logprob: -20.250043869018555

Token 265: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015024791937321424
    2. ' c' → logprob: -6.501502513885498
    3. 'get' → logprob: -16.126502990722656
    4. '   ' → logprob: -16.751502990722656
    5. '  ' → logprob: -18.001502990722656
    6. ' ' → logprob: -18.251502990722656
    7. 'calculate' → logprob: -18.501502990722656
    8. ' get' → logprob: -18.876502990722656
    9. '
' → logprob: -19.001502990722656
    10. '	c' → logprob: -19.126502990722656

Token 266: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0039131189696490765
    2. '1' → logprob: -5.628912925720215
    3. ',' → logprob: -8.128912925720215
    4. 'c' → logprob: -11.628912925720215
    5. '```' → logprob: -12.253912925720215
    6. '   ' → logprob: -13.378912925720215
    7. ',c' → logprob: -14.003912925720215
    8. ' ' → logprob: -14.253912925720215
    9. 'def' → logprob: -14.878912925720215
    10. ')' → logprob: -15.128912925720215

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',c' → logprob: -10.375039100646973
    3. ' ,' → logprob: -12.125039100646973
    4. ',
' → logprob: -13.250039100646973
    5. ',n' → logprob: -15.750039100646973
    6. ')' → logprob: -17.500038146972656
    7. ',v' → logprob: -17.875038146972656
    8. 'c' → logprob: -18.000038146972656
    9. '   ' → logprob: -18.125038146972656
    10. ',

' → logprob: -18.250038146972656

Token 268: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004882152716163546
    2. ' c' → logprob: -7.62548828125
    3. '   ' → logprob: -16.00048828125
    4. ' ' → logprob: -17.50048828125
    5. '  ' → logprob: -18.00048828125
    6. '	c' → logprob: -18.00048828125
    7. '    ' → logprob: -19.37548828125
    8. '
' → logprob: -19.62548828125
    9. 'calculate' → logprob: -19.75048828125
    10. 'get' → logprob: -20.00048828125

Token 269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014829324558377266
    2. '1' → logprob: -4.639829158782959
    3. ')' → logprob: -5.639829158782959
    4. ',' → logprob: -6.764829158782959
    5. '):' → logprob: -8.889829635620117
    6. 'c' → logprob: -9.139829635620117
    7. '):
' → logprob: -10.264829635620117
    8. '   ' → logprob: -11.264829635620117
    9. ',c' → logprob: -11.389829635620117
    10. '```' → logprob: -11.389829635620117

Token 270: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20144960284233093
    2. '):' → logprob: -1.7014496326446533
    3. '):
' → logprob: -10.576449394226074
    4. '):

' → logprob: -11.826449394226074
    5. ')' → logprob: -12.701449394226074
    6. '   ' → logprob: -15.951449394226074
    7. '():
' → logprob: -16.57645034790039
    8. ')
' → logprob: -16.70145034790039
    9. ' ):
' → logprob: -16.82645034790039
    10. ':' → logprob: -17.32645034790039

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3319124011322856e-05
    2. 'return' → logprob: -11.000022888183594
    3. ' return' → logprob: -12.000022888183594
    4. 'def' → logprob: -15.250022888183594
    5. '       ' → logprob: -15.875022888183594
    6. '	return' → logprob: -17.500022888183594
    7. '=' → logprob: -18.375022888183594
    8. ' =' → logprob: -18.625022888183594
    9. ' ' → logprob: -18.750022888183594
    10. '```' → logprob: -18.875022888183594

Token 272: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03283679857850075
    2. ' return' → logprob: -3.5328369140625
    3. '   ' → logprob: -5.7828369140625
    4. '	return' → logprob: -13.9078369140625
    5. ' ' → logprob: -15.5328369140625
    6. 'n' → logprob: -15.7828369140625
    7. 'def' → logprob: -16.1578369140625
    8. '=' → logprob: -16.2828369140625
    9. '       ' → logprob: -16.7828369140625
    10. '  ' → logprob: -16.9078369140625

Token 273: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692947685718536
    2. 'n' → logprob: -2.126929521560669
    3. '   ' → logprob: -13.75192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '(n' → logprob: -15.87692928314209
    6. '	n' → logprob: -16.251930236816406
    7. ' ' → logprob: -18.501930236816406
    8. '  ' → logprob: -18.626930236816406
    9. '_n' → logprob: -18.751930236816406
    10. '    ' → logprob: -19.251930236816406

Token 274: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009809806942939758
    2. '-' → logprob: -4.634809970855713
    3. ' ' → logprob: -10.134809494018555
    4. '   ' → logprob: -11.634809494018555
    5. ' ' → logprob: -13.134809494018555
    6. ' -
' → logprob: -14.009809494018555
    7. '  ' → logprob: -14.634809494018555
    8. ' //' → logprob: -14.884809494018555
    9. ')' → logprob: -15.259809494018555
    10. '_' → logprob: -15.384809494018555

Token 275: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.01815052703022957
    2. ' get' → logprob: -4.018150329589844
    3. '(get' → logprob: -15.518150329589844
    4. '   ' → logprob: -15.768150329589844
    5. 'calculate' → logprob: -17.268150329589844
    6. '.get' → logprob: -17.393150329589844
    7. '	get' → logprob: -17.643150329589844
    8. ' ' → logprob: -17.768150329589844
    9. '[get' → logprob: -17.768150329589844
    10. '_get' → logprob: -17.893150329589844

Token 276: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.006731949746608734
    2. 'first' → logprob: -5.256731986999512
    3. '_second' → logprob: -6.506731986999512
    4. 'second' → logprob: -12.631731986999512
    5. 'First' → logprob: -15.506731986999512
    6. ' first' → logprob: -15.631731986999512
    7. '_FIRST' → logprob: -17.506731033325195
    8. '_' → logprob: -17.881731033325195
    9. '	first' → logprob: -18.131731033325195
    10. '[first' → logprob: -18.131731033325195

Token 277: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.941850526549388e-06
    2. 'count' → logprob: -11.750007629394531
    3. 'Count' → logprob: -18.00000762939453
    4. '_counts' → logprob: -18.00000762939453
    5. '_counter' → logprob: -19.12500762939453
    6. '_get' → logprob: -19.25000762939453
    7. '_c' → logprob: -19.25000762939453
    8. 'c' → logprob: -19.50000762939453
    9. '(count' → logprob: -19.50000762939453
    10. ' count' → logprob: -19.62500762939453

Token 278: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. 'c' → logprob: -15.125001907348633
    4. ' (' → logprob: -16.000001907348633
    5. '(
' → logprob: -19.375001907348633
    6. '©' → logprob: -21.000001907348633
    7. ')c' → logprob: -21.000001907348633
    8. '(

' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '	c' → logprob: -21.250001907348633

Token 279: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004281659494154155
    2. '1' → logprob: -8.000428199768066
    3. '(c' → logprob: -9.750428199768066
    4. ')c' → logprob: -10.625428199768066
    5. ' c' → logprob: -11.625428199768066
    6. ')' → logprob: -14.125428199768066
    7. ',c' → logprob: -16.25042724609375
    8. 's' → logprob: -16.50042724609375
    9. '(' → logprob: -16.50042724609375
    10. '_c' → logprob: -16.62542724609375

Token 280: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6944198608398438
    2. ',' → logprob: -0.6944198608398438
    3. ' -' → logprob: -7.319419860839844
    4. ' ,' → logprob: -8.319419860839844
    5. '-' → logprob: -8.569419860839844
    6. '),' → logprob: -9.944419860839844
    7. ',c' → logprob: -10.569419860839844
    8. ' )' → logprob: -10.819419860839844
    9. ')c' → logprob: -10.944419860839844
    10. ' ' → logprob: -11.194419860839844

Token 281: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4741393029689789
    2. '-' → logprob: -0.9741393327713013
    3. ' ' → logprob: -9.974139213562012
    4. ')' → logprob: -12.099139213562012
    5. '   ' → logprob: -12.599139213562012
    6. '  ' → logprob: -13.849139213562012
    7. ' -
' → logprob: -14.099139213562012
    8. '(' → logprob: -14.224139213562012
    9. ' ' → logprob: -14.224139213562012
    10. ',' → logprob: -14.474139213562012

Token 282: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0336492694914341
    2. ' get' → logprob: -3.408649206161499
    3. '(get' → logprob: -13.033649444580078
    4. 'n' → logprob: -14.283649444580078
    5. '
' → logprob: -15.783649444580078
    6. '.get' → logprob: -16.283649444580078
    7. 'c' → logprob: -16.658649444580078
    8. '[get' → logprob: -16.658649444580078
    9. 'def' → logprob: -16.783649444580078
    10. ' ' → logprob: -16.908649444580078

Token 283: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0002858881198335439
    2. 'first' → logprob: -8.875286102294922
    3. '_second' → logprob: -8.875286102294922
    4. 'First' → logprob: -12.375286102294922
    5. '[first' → logprob: -14.250286102294922
    6. '(first' → logprob: -14.625286102294922
    7. '_FIRST' → logprob: -15.000286102294922
    8. ' first' → logprob: -15.500286102294922
    9. '```' → logprob: -16.000286102294922
    10. '_First' → logprob: -16.125286102294922

Token 284: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '_counts' → logprob: -16.0
    3. 'count' → logprob: -17.375
    4. '_counter' → logprob: -18.5
    5. '_' → logprob: -19.125
    6. '_c' → logprob: -19.25
    7. '```' → logprob: -19.375
    8. ' _' → logprob: -20.25
    9. '(count' → logprob: -20.625
    10. '_element' → logprob: -20.625

Token 285: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -16.375015258789062
    4. 'c' → logprob: -16.625015258789062
    5. '(
' → logprob: -17.250015258789062
    6. ')c' → logprob: -20.000015258789062
    7. '<c' → logprob: -21.000015258789062
    8. '(counter' → logprob: -21.125015258789062
    9. '(C' → logprob: -21.250015258789062
    10. '	c' → logprob: -21.375015258789062

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005235767923295498
    2. 'c' → logprob: -5.25523567199707
    3. ' c' → logprob: -14.38023567199707
    4. '(c' → logprob: -14.50523567199707
    5. ')c' → logprob: -14.63023567199707
    6. ')' → logprob: -15.50523567199707
    7. '[c' → logprob: -17.13023567199707
    8. 's' → logprob: -17.75523567199707
    9. '	c' → logprob: -17.88023567199707
    10. '₂' → logprob: -18.00523567199707

Token 287: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.25
    4. ' )' → logprob: -17.25
    5. '))' → logprob: -18.75
    6. '),' → logprob: -19.375
    7. ')

' → logprob: -19.625
    8. ')`' → logprob: -19.625
    9. ')}' → logprob: -20.125
    10. '}' → logprob: -20.25

Token 288: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.511406809295295e-06
    2. 'n' → logprob: -12.000006675720215
    3. ' def' → logprob: -16.1250057220459
    4. 'for' → logprob: -16.1250057220459
    5. '#' → logprob: -17.0000057220459
    6. '```' → logprob: -18.3750057220459
    7. 'ndef' → logprob: -18.3750057220459
    8. 'if' → logprob: -19.3750057220459
    9. '(n' → logprob: -20.2500057220459
    10. 'print' → logprob: -20.7500057220459

Token 289: ' calculate' (ID: 17950)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18294571340084076
    2. ' main' → logprob: -2.057945728302002
    3. 'def' → logprob: -3.307945728302002
    4. 'solve' → logprob: -6.307945728302002
    5. 'calculate' → logprob: -7.807945728302002
    6. ' def' → logprob: -8.057945251464844
    7. ' solve' → logprob: -8.807945251464844
    8. 'process' → logprob: -9.182945251464844
    9. ' calculate' → logprob: -11.432945251464844
    10. 'min' → logprob: -11.557945251464844

Token 290: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -4.3226136767771095e-05
    2. 'output' → logprob: -11.250042915344238
    3. '_' → logprob: -11.500042915344238
    4. '```' → logprob: -12.000042915344238
    5. 'def' → logprob: -12.750042915344238
    6. ' _' → logprob: -13.125042915344238
    7. '_input' → logprob: -13.250042915344238
    8. '_final' → logprob: -13.375042915344238
    9. 'Output' → logprob: -14.000042915344238
    10. '_answer' → logprob: -14.500042915344238

Token 291: '_b' (ID: 1535)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8493343591690063
    2. '_d' → logprob: -1.4743343591690063
    3. '(' → logprob: -1.8493343591690063
    4. '_diff' → logprob: -2.849334239959717
    5. '_' → logprob: -3.099334239959717
    6. '_c' → logprob: -3.349334239959717
    7. '_b' → logprob: -3.724334239959717
    8. ' (' → logprob: -5.349334239959717
    9. '_s' → logprob: -6.099334239959717
    10. 'def' → logprob: -6.224334239959717

Token 292: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -1.1994775377388578e-05
    2. ' oth' → logprob: -12.125012397766113
    3. 'both' → logprob: -12.750012397766113
    4. 'ot' → logprob: -13.375012397766113
    5. 'o' → logprob: -14.375012397766113
    6. 'othe' → logprob: -14.875012397766113
    7. 'other' → logprob: -15.375012397766113
    8. 'OTH' → logprob: -15.625012397766113
    9. '_' → logprob: -16.000011444091797
    10. '
' → logprob: -16.375011444091797

Token 293: '_more' (ID: 86501)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.0027548300568014383
    2. '_length' → logprob: -6.1277546882629395
    3. '_one' → logprob: -8.252755165100098
    4. '_' → logprob: -9.752755165100098
    5. '_c' → logprob: -10.377755165100098
    6. '_counts' → logprob: -10.502755165100098
    7. '_len' → logprob: -10.752755165100098
    8. '_same' → logprob: -10.877755165100098
    9. '_elements' → logprob: -11.252755165100098
    10. '_d' → logprob: -11.252755165100098

Token 294: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.6523480415344238
    2. '_elements' → logprob: -1.2773480415344238
    3. '_lengths' → logprob: -1.9023480415344238
    4. '_one' → logprob: -3.652348041534424
    5. '_two' → logprob: -5.152348041534424
    6. '_len' → logprob: -5.527348041534424
    7. '(n' → logprob: -5.777348041534424
    8. '_length' → logprob: -5.777348041534424
    9. '_' → logprob: -6.152348041534424
    10. '_counts' → logprob: -6.527348041534424

Token 295: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0008451257599517703
    2. 'one' → logprob: -7.125844955444336
    3. '_once' → logprob: -10.750844955444336
    4. '_two' → logprob: -12.250844955444336
    5. '(one' → logprob: -12.250844955444336
    6. 'One' → logprob: -12.500844955444336
    7. '_than' → logprob: -13.750844955444336
    8. '1' → logprob: -13.875844955444336
    9. '_ONE' → logprob: -13.875844955444336
    10. '_' → logprob: -14.500844955444336

Token 296: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.500012397766113
    3. '(
' → logprob: -14.750012397766113
    4. ' (' → logprob: -14.750012397766113
    5. 'def' → logprob: -15.000012397766113
    6. '(c' → logprob: -15.000012397766113
    7. 's' → logprob: -16.125011444091797
    8. 'n' → logprob: -16.625011444091797
    9. '```' → logprob: -17.250011444091797
    10. '(s' → logprob: -17.750011444091797

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.228561349213123e-05
    2. ',c' → logprob: -10.125052452087402
    3. ' ,' → logprob: -11.875052452087402
    4. ',
' → logprob: -12.625052452087402
    5. 'c' → logprob: -14.000052452087402
    6. ',n' → logprob: -14.250052452087402
    7. '   ' → logprob: -15.500052452087402
    8. '):
' → logprob: -17.750051498413086
    9. ' c' → logprob: -17.750051498413086
    10. 'n' → logprob: -18.125051498413086

Token 298: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11282975226640701
    2. ' c' → logprob: -2.2378296852111816
    3. '   ' → logprob: -12.23783016204834
    4. ',' → logprob: -14.86283016204834
    5. ' ' → logprob: -14.98783016204834
    6. ')c' → logprob: -14.98783016204834
    7. '	c' → logprob: -15.11283016204834
    8. '
' → logprob: -15.23783016204834
    9. '       ' → logprob: -15.23783016204834
    10. '    ' → logprob: -15.36283016204834

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. 'def' → logprob: -13.62500286102295
    3. '   ' → logprob: -14.25000286102295
    4. ',' → logprob: -14.37500286102295
    5. ' ' → logprob: -15.87500286102295
    6. ')' → logprob: -16.750001907348633
    7. '...' → logprob: -17.125001907348633
    8. '```' → logprob: -17.375001907348633
    9. '2' → logprob: -17.500001907348633
    10. '=' → logprob: -17.875001907348633

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002738522016443312
    2. ',c' → logprob: -8.375273704528809
    3. ' ,' → logprob: -10.625273704528809
    4. ',
' → logprob: -11.000273704528809
    5. 'c' → logprob: -13.750273704528809
    6. ',

' → logprob: -14.875273704528809
    7. ',n' → logprob: -15.625273704528809
    8. 'def' → logprob: -15.875273704528809
    9. ' c' → logprob: -16.125274658203125
    10. '   ' → logprob: -16.500274658203125

Token 301: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1002265140414238
    2. ' c' → logprob: -2.350226402282715
    3. '   ' → logprob: -11.350226402282715
    4. ' ' → logprob: -12.975226402282715
    5. '  ' → logprob: -13.225226402282715
    6. '    ' → logprob: -13.725226402282715
    7. ',' → logprob: -14.475226402282715
    8. '	c' → logprob: -15.225226402282715
    9. 'def' → logprob: -15.350226402282715
    10. '     ' → logprob: -15.600226402282715

Token 302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002208781661465764
    2. ',' → logprob: -6.127208709716797
    3. '   ' → logprob: -12.002208709716797
    4. ',c' → logprob: -12.127208709716797
    5. ' ,' → logprob: -12.252208709716797
    6. ' ' → logprob: -13.502208709716797
    7. ',
' → logprob: -14.252208709716797
    8. 'c' → logprob: -14.377208709716797
    9. '```' → logprob: -14.502208709716797
    10. '1' → logprob: -14.502208709716797

Token 303: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0790509507060051
    2. '):' → logprob: -2.5790510177612305
    3. ',' → logprob: -9.57905101776123
    4. '):
' → logprob: -9.70405101776123
    5. '   ' → logprob: -10.70405101776123
    6. '):

' → logprob: -11.82905101776123
    7. ')' → logprob: -14.45405101776123
    8. ' ):
' → logprob: -15.32905101776123
    9. ':' → logprob: -15.70405101776123
    10. ' ):' → logprob: -16.454050064086914

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015929419314488769
    2. 'min' → logprob: -8.001592636108398
    3. 'max' → logprob: -8.376592636108398
    4. '    
' → logprob: -8.501592636108398
    5. 'def' → logprob: -8.876592636108398
    6. ' max' → logprob: -9.251592636108398
    7. 'c' → logprob: -9.376592636108398
    8. ' min' → logprob: -9.626592636108398
    9. ' first' → logprob: -9.751592636108398
    10. 'first' → logprob: -9.876592636108398

Token 305: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2640455961227417
    2. 'return' (adapté à ' return') → logprob: -1.2640455961227417
    3. 'min' → logprob: -2.1390457153320312
    4. ' min' → logprob: -2.5140457153320312
    5. '   ' → logprob: -2.7640457153320312
    6. 'res' → logprob: -3.7640457153320312
    7. 'first' → logprob: -3.7640457153320312
    8. 'c' → logprob: -3.7640457153320312
    9. ' first' → logprob: -3.8890457153320312
    10. ' res' → logprob: -4.014045715332031

Token 306: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5995457768440247
    2. 'min' → logprob: -0.8495457768440247
    3. ' min' → logprob: -4.349545955657959
    4. ' n' → logprob: -4.599545955657959
    5. '   ' → logprob: -8.2245454788208
    6. ' ' → logprob: -10.3495454788208
    7. 'max' → logprob: -10.5995454788208
    8. '  ' → logprob: -10.7245454788208
    9. '	min' → logprob: -12.5995454788208
    10. '    ' → logprob: -13.4745454788208

Token 307: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026392607018351555
    2. '-' → logprob: -3.651392698287964
    3. '   ' → logprob: -10.276392936706543
    4. '//' → logprob: -10.776392936706543
    5. ' ' → logprob: -11.151392936706543
    6. ' //' → logprob: -12.401392936706543
    7. '#' → logprob: -12.526392936706543
    8. ' -
' → logprob: -12.651392936706543
    9. 'def' → logprob: -12.901392936706543
    10. '  ' → logprob: -13.776392936706543

Token 308: ' max' (ID: 2999)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00015943869948387146
    2. ' get' → logprob: -8.75015926361084
    3. '(get' → logprob: -14.50015926361084
    4. 'max' → logprob: -14.75015926361084
    5. '[get' → logprob: -17.375160217285156
    6. ' ' → logprob: -17.875160217285156
    7. '   ' → logprob: -18.250160217285156
    8. '.get' → logprob: -19.500160217285156
    9. ')get' → logprob: -19.625160217285156
    10. '	get' → logprob: -19.875160217285156

Token 309: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.004837007261812687
    2. '(' → logprob: -6.0048370361328125
    3. '(
' → logprob: -6.6298370361328125
    4. 'get' → logprob: -6.8798370361328125
    5. '[get' → logprob: -12.504837036132812
    6. '((' → logprob: -13.129837036132812
    7. '(

' → logprob: -13.129837036132812
    8. '([
' → logprob: -14.379837036132812
    9. ' (' → logprob: -14.754837036132812
    10. '   ' → logprob: -15.254837036132812

Token 310: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.00012035090912831947
    2. 'first' → logprob: -9.375120162963867
    3. '_second' → logprob: -10.500120162963867
    4. 'First' → logprob: -12.250120162963867
    5. '```' → logprob: -14.250120162963867
    6. '[first' → logprob: -14.500120162963867
    7. '_FIRST' → logprob: -14.625120162963867
    8. ' first' → logprob: -14.875120162963867
    9. '(first' → logprob: -14.875120162963867
    10. '[' → logprob: -15.375120162963867

Token 311: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -15.125
    3. '_first' → logprob: -17.375
    4. '```' → logprob: -17.625
    5. '_counter' → logprob: -17.75
    6. '_get' → logprob: -17.75
    7. '_counts' → logprob: -18.0
    8. '_c' → logprob: -18.125
    9. '_code' → logprob: -19.125
    10. 'Count' → logprob: -19.25

Token 312: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.56102097814437e-05
    2. ' (' → logprob: -10.750045776367188
    3. '(counter' → logprob: -12.125045776367188
    4. ')' → logprob: -12.375045776367188
    5. ')c' → logprob: -12.375045776367188
    6. ')(' → logprob: -12.625045776367188
    7. '```' → logprob: -12.750045776367188
    8. '(' → logprob: -13.750045776367188
    9. '[c' → logprob: -14.125045776367188
    10. 'c' → logprob: -14.500045776367188

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027212556451559067
    2. '(c' → logprob: -4.027212619781494
    3. 'c' → logprob: -4.777212619781494
    4. ')c' → logprob: -8.277212142944336
    5. ')' → logprob: -8.902212142944336
    6. ' c' → logprob: -9.652212142944336
    7. 's' → logprob: -9.902212142944336
    8. 'def' → logprob: -10.027212142944336
    9. ',c' → logprob: -11.027212142944336
    10. '[c' → logprob: -11.902212142944336

Token 314: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10625451803207397
    2. ')' → logprob: -3.1062545776367188
    3. ',' → logprob: -3.1062545776367188
    4. '(c' → logprob: -5.231254577636719
    5. ',c' → logprob: -6.106254577636719
    6. 'c' → logprob: -6.856254577636719
    7. ')c' → logprob: -6.981254577636719
    8. ' ),' → logprob: -7.356254577636719
    9. ')+' → logprob: -7.606254577636719
    10. ' ,' → logprob: -8.231254577636719

Token 315: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6840505599975586
    2. ' +' → logprob: -0.9340505599975586
    3. ' ,' → logprob: -2.6840505599975586
    4. '+' → logprob: -3.9340505599975586
    5. '(),' → logprob: -5.309050559997559
    6. ',get' → logprob: -5.434050559997559
    7. ')' → logprob: -6.559050559997559
    8. ' ' → logprob: -7.059050559997559
    9. '()' → logprob: -7.309050559997559
    10. ',c' → logprob: -7.934050559997559

Token 316: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00701503362506628
    2. ' get' → logprob: -5.007015228271484
    3. '(get' → logprob: -8.382015228271484
    4. '[get' → logprob: -9.632015228271484
    5. '.get' → logprob: -13.382015228271484
    6. '=get' → logprob: -13.757015228271484
    7. ')get' → logprob: -14.007015228271484
    8. ',get' → logprob: -14.632015228271484
    9. '	get' → logprob: -14.882015228271484
    10. '_get' → logprob: -15.257015228271484

Token 317: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.01435165572911501
    2. 'first' → logprob: -4.889351844787598
    3. '_second' → logprob: -5.014351844787598
    4. 'second' → logprob: -9.889351844787598
    5. 'First' → logprob: -10.889351844787598
    6. ' first' → logprob: -12.639351844787598
    7. '(first' → logprob: -13.514351844787598
    8. '[' → logprob: -13.514351844787598
    9. '_' → logprob: -13.764351844787598
    10. '```' → logprob: -14.764351844787598

Token 318: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.704273118884885e-07
    2. 'count' → logprob: -14.375000953674316
    3. 'Count' → logprob: -18.5
    4. '_c' → logprob: -18.75
    5. '_counter' → logprob: -18.75
    6. '_counts' → logprob: -18.75
    7. ' count' → logprob: -19.25
    8. '(' → logprob: -19.5
    9. '_get' → logprob: -20.25
    10. '(_' → logprob: -20.25

Token 319: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.012733661569654942
    2. '(' → logprob: -4.387733459472656
    3. ' (' → logprob: -8.512733459472656
    4. ')' → logprob: -11.262733459472656
    5. '(
' → logprob: -12.387733459472656
    6. 'c' → logprob: -13.387733459472656
    7. ',' → logprob: -13.637733459472656
    8. ',c' → logprob: -14.262733459472656
    9. '(

' → logprob: -14.387733459472656
    10. ')c' → logprob: -14.512733459472656

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003626081394031644
    2. 'c' → logprob: -5.628625869750977
    3. '(c' → logprob: -10.878625869750977
    4. ' c' → logprob: -13.128625869750977
    5. '1' → logprob: -13.378625869750977
    6. ')c' → logprob: -13.753625869750977
    7. ')' → logprob: -13.878625869750977
    8. 's' → logprob: -15.003625869750977
    9. ',c' → logprob: -15.128625869750977
    10. '[c' → logprob: -15.378625869750977

Token 321: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007967629469931126
    2. ' ,' → logprob: -5.507967472076416
    3. ',
' → logprob: -6.132967472076416
    4. '(),' → logprob: -6.507967472076416
    5. '   ' → logprob: -9.632967948913574
    6. ',get' → logprob: -10.132967948913574
    7. ',n' → logprob: -10.382967948913574
    8. '),' → logprob: -11.007967948913574
    9. ',c' → logprob: -11.257967948913574
    10. ' ,
' → logprob: -11.382967948913574

Token 322: '                  ' (ID: 8854)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.22547446191310883
    2. 'get' → logprob: -1.60047447681427
    3. '   ' → logprob: -11.47547435760498
    4. '    ' → logprob: -11.60047435760498
    5. '(get' → logprob: -12.10047435760498
    6. ')' → logprob: -12.97547435760498
    7. '                ' → logprob: -12.97547435760498
    8. '                    ' → logprob: -13.10047435760498
    9. ' ' → logprob: -13.22547435760498
    10. ' max' → logprob: -13.22547435760498

Token 323: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.004896908067166805
    2. ' get' → logprob: -5.379897117614746
    3. '                  ' → logprob: -9.379897117614746
    4. '              ' → logprob: -9.879897117614746
    5. '          ' → logprob: -10.629897117614746
    6. '   ' → logprob: -10.754897117614746
    7. '      ' → logprob: -10.879897117614746
    8. '                ' → logprob: -11.629897117614746
    9. '                 ' → logprob: -12.004897117614746
    10. '            ' → logprob: -12.004897117614746

Token 324: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.10467939078807831
    2. 'first' → logprob: -2.7296793460845947
    3. 'First' → logprob: -3.7296793460845947
    4. '[first' → logprob: -5.479679584503174
    5. 'get' → logprob: -6.229679584503174
    6. ' first' → logprob: -6.354679584503174
    7. ':first' → logprob: -7.104679584503174
    8. '[get' → logprob: -7.229679584503174
    9. ' get' → logprob: -8.604679107666016
    10. '_second' → logprob: -8.854679107666016

Token 325: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.512236498361744e-07
    2. 'count' → logprob: -14.750000953674316
    3. 'Count' → logprob: -17.5
    4. ' count' → logprob: -17.75
    5. '_counter' → logprob: -18.0
    6. '_counts' → logprob: -18.0
    7. '```' → logprob: -18.75
    8. '[' → logprob: -18.875
    9. '_c' → logprob: -19.25
    10. '_code' → logprob: -19.25

Token 326: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.3902033970225602e-05
    2. 'c' → logprob: -11.625014305114746
    3. ')c' → logprob: -12.375014305114746
    4. '(' → logprob: -15.375014305114746
    5. ')' → logprob: -15.875014305114746
    6. '[c' → logprob: -16.00001335144043
    7. ' (' → logprob: -17.12501335144043
    8. ')(' → logprob: -17.25001335144043
    9. '<c' → logprob: -17.25001335144043
    10. ',c' → logprob: -17.37501335144043

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000876208592671901
    2. 'c' → logprob: -7.250876426696777
    3. '2' → logprob: -9.000876426696777
    4. ')c' → logprob: -10.750876426696777
    5. '(c' → logprob: -11.375876426696777
    6. ')' → logprob: -12.375876426696777
    7. ' c' → logprob: -12.500876426696777
    8. '[c' → logprob: -14.375876426696777
    9. ',c' → logprob: -14.625876426696777
    10. '```' → logprob: -15.125876426696777

Token 328: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029426366090774536
    2. ')+' → logprob: -6.2529425621032715
    3. '()' → logprob: -7.7529425621032715
    4. '+' → logprob: -7.7529425621032715
    5. ' +' → logprob: -9.37794303894043
    6. ' )' → logprob: -10.50294303894043
    7. '   ' → logprob: -10.87794303894043
    8. '())' → logprob: -12.50294303894043
    9. '()+' → logprob: -12.50294303894043
    10. ']' → logprob: -12.87794303894043

Token 329: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0622180737555027
    2. '+' → logprob: -2.812218189239502
    3. ')' → logprob: -8.687217712402344
    4. '()' → logprob: -10.187217712402344
    5. ')+' → logprob: -11.312217712402344
    6. '()+' → logprob: -11.937217712402344
    7. '   ' → logprob: -12.062217712402344
    8. ' +
' → logprob: -12.312217712402344
    9. '                  ' → logprob: -12.312217712402344
    10. ' ' → logprob: -12.437217712402344

Token 330: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.47408467531204224
    2. ' get' → logprob: -0.9740846753120422
    3. '(get' → logprob: -11.974084854125977
    4. '[get' → logprob: -14.974084854125977
    5. '	get' → logprob: -15.474084854125977
    6. ' ' → logprob: -16.099084854125977
    7. ')get' → logprob: -16.099084854125977
    8. '_get' → logprob: -16.099084854125977
    9. '                  ' → logprob: -16.474084854125977
    10. '=get' → logprob: -16.599084854125977

Token 331: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.47483742237091064
    2. 'second' → logprob: -0.9748374223709106
    3. 'get' → logprob: -7.474837303161621
    4. ' second' → logprob: -9.349837303161621
    5. '[' → logprob: -9.599837303161621
    6. 'Second' → logprob: -10.474837303161621
    7. '	second' → logprob: -12.849837303161621
    8. '(second' → logprob: -13.224837303161621
    9. '-second' → logprob: -13.474837303161621
    10. '[get' → logprob: -13.849837303161621

Token 332: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.723352049040841e-06
    2. 'count' → logprob: -12.500004768371582
    3. 'Count' → logprob: -13.875004768371582
    4. '_COUNT' → logprob: -17.375003814697266
    5. ' count' → logprob: -18.750003814697266
    6. '(count' → logprob: -18.750003814697266
    7. '_Count' → logprob: -19.125003814697266
    8. '```' → logprob: -19.125003814697266
    9. '(' → logprob: -19.250003814697266
    10. '_counts' → logprob: -19.250003814697266

Token 333: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -13.875001907348633
    3. '(' → logprob: -14.250001907348633
    4. 'c' → logprob: -17.875001907348633
    5. ')' → logprob: -18.250001907348633
    6. '(
' → logprob: -19.000001907348633
    7. ')c' → logprob: -19.875001907348633
    8. '```' → logprob: -20.000001907348633
    9. '(C' → logprob: -21.500001907348633
    10. ')(' → logprob: -21.625001907348633

Token 334: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. 'c' → logprob: -11.750007629394531
    3. ')' → logprob: -17.50000762939453
    4. 's' → logprob: -18.12500762939453
    5. ')c' → logprob: -18.87500762939453
    6. '```' → logprob: -19.25000762939453
    7. '[' → logprob: -19.37500762939453
    8. ' ' → logprob: -19.50000762939453
    9. '２' → logprob: -19.50000762939453
    10. '[c' → logprob: -19.50000762939453

Token 335: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014257526956498623
    2. '))' → logprob: -4.264257431030273
    3. ')))' → logprob: -9.889257431030273
    4. ')
' → logprob: -10.389257431030273
    5. '   ' → logprob: -12.014257431030273
    6. '                  ' → logprob: -12.764257431030273
    7. ' )' → logprob: -13.389257431030273
    8. ')`' → logprob: -14.889257431030273
    9. '))
' → logprob: -15.014257431030273
    10. '               ' → logprob: -15.389257431030273

Token 336: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.9153885558771435e-06
    2. 'n' → logprob: -12.375005722045898
    3. '```' → logprob: -13.875005722045898
    4. 'v' → logprob: -16.0000057220459
    5. '(n' → logprob: -16.1250057220459
    6. 'for' → logprob: -16.3750057220459
    7. 'ndef' → logprob: -16.6250057220459
    8. ' def' → logprob: -16.8750057220459
    9. '(' → logprob: -17.2500057220459
    10. '#' → logprob: -17.6250057220459

Token 337: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002395986346527934
    2. ' def' → logprob: -6.127396106719971
    3. 'main' → logprob: -9.252395629882812
    4. 'n' → logprob: -9.502395629882812
    5. ' main' → logprob: -10.877395629882812
    6. 'v' → logprob: -11.627395629882812
    7. ' n' → logprob: -12.627395629882812
    8. 'lambda' → logprob: -13.127395629882812
    9. '
' → logprob: -13.252395629882812
    10. 'ndef' → logprob: -13.502395629882812

Token 338: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003392767102923244
    2. '():
' → logprob: -8.00033950805664
    3. ' ():' → logprob: -12.62533950805664
    4. '()' → logprob: -14.75033950805664
    5. '():
' → logprob: -16.62533950805664
    6. '(' → logprob: -17.37533950805664
    7. '():

' → logprob: -18.25033950805664
    8. ':' → logprob: -18.75033950805664
    9. '(":' → logprob: -19.87533950805664
    10. '().' → logprob: -20.12533950805664

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014329095371067524
    2. 'n' → logprob: -4.264328956604004
    3. ' n' → logprob: -9.014328956604004
    4. '(n' → logprob: -10.139328956604004
    5. 'def' → logprob: -13.139328956604004
    6. '	n' → logprob: -13.639328956604004
    7. '```' → logprob: -14.639328956604004
    8. '()' → logprob: -15.389328956604004
    9. '       ' → logprob: -15.889328956604004
    10. '(' → logprob: -16.26432991027832

Token 340: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0028108209371566772
    2. '   ' → logprob: -6.002810955047607
    3. ' n' → logprob: -8.00281047821045
    4. '	n' → logprob: -14.87781047821045
    5. '```' → logprob: -16.377811431884766
    6. 'def' → logprob: -16.627811431884766
    7. 'if' → logprob: -17.002811431884766
    8. ' ' → logprob: -17.377811431884766
    9. '  ' → logprob: -17.627811431884766
    10. '
' → logprob: -19.002811431884766

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007889019907452166
    2. ',v' → logprob: -7.875788688659668
    3. ' =' → logprob: -8.250788688659668
    4. '=' → logprob: -8.875788688659668
    5. 'v' → logprob: -12.000788688659668
    6. ' ,' → logprob: -14.125788688659668
    7. '=v' → logprob: -15.500788688659668
    8. '   ' → logprob: -15.750788688659668
    9. ')' → logprob: -15.875788688659668
    10. ' v' → logprob: -16.125789642333984

Token 342: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.038055144250392914
    2. ' v' → logprob: -3.288055181503296
    3. 'lst' → logprob: -12.413055419921875
    4. 'arr' → logprob: -12.663055419921875
    5. 'vector' → logprob: -13.413055419921875
    6. 'values' → logprob: -13.538055419921875
    7. ' lst' → logprob: -13.913055419921875
    8. ' vector' → logprob: -14.538055419921875
    9. 'vec' → logprob: -14.913055419921875
    10. '	v' → logprob: -15.288055419921875

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759950280189514
    2. '=' → logprob: -0.8259950280189514
    3. '   ' → logprob: -9.825995445251465
    4. 'v' → logprob: -15.075995445251465
    5. ' ' → logprob: -15.200995445251465
    6. '    ' → logprob: -15.325995445251465
    7. '=v' → logprob: -15.325995445251465
    8. ',' → logprob: -15.450995445251465
    9. ')' → logprob: -15.700995445251465
    10. '  ' → logprob: -16.32599449157715

Token 344: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.12692810595035553
    2. 'read' → logprob: -2.1269280910491943
    3. '	read' → logprob: -18.501928329467773
    4. '(read' → logprob: -21.126928329467773
    5. '   ' → logprob: -21.376928329467773
    6. '_read' → logprob: -22.626928329467773
    7. '.read' → logprob: -23.376928329467773
    8. 're' → logprob: -24.876928329467773
    9. ' reads' → logprob: -25.251928329467773
    10. '  ' → logprob: -25.376928329467773

Token 345: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1517960956552997e-05
    2. '_' → logprob: -11.750011444091797
    3. 'input' → logprob: -13.875011444091797
    4. '_inputs' → logprob: -13.875011444091797
    5. '```' → logprob: -14.250011444091797
    6. '(' → logprob: -15.625011444091797
    7. '(input' → logprob: -15.625011444091797
    8. '_output' → logprob: -15.875011444091797
    9. '_in' → logprob: -16.125011444091797
    10. '(_' → logprob: -16.375011444091797

Token 346: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012840177863836288
    2. '()
' → logprob: -4.387840270996094
    3. '   ' → logprob: -8.137840270996094
    4. '()\' → logprob: -11.137840270996094
    5. '();' → logprob: -12.262840270996094
    6. 'v' → logprob: -12.762840270996094
    7. '(' → logprob: -12.887840270996094
    8. ')' → logprob: -13.012840270996094
    9. '()

' → logprob: -13.137840270996094
    10. '()
' → logprob: -13.637840270996094

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0222526416182518
    2. '
' → logprob: -4.897252559661865
    3. '    
' → logprob: -5.147252559661865
    4. 'c' → logprob: -5.397252559661865
    5. 'v' → logprob: -6.772252559661865
    6. '```' → logprob: -7.147252559661865
    7. ' c' → logprob: -7.522252559661865
    8. '  
' → logprob: -8.272253036499023
    9. 'e' → logprob: -8.272253036499023
    10. '[' → logprob: -8.647253036499023

Token 348: ' v' (ID: 323)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.24576684832572937
    2. 'ev' → logprob: -2.4957668781280518
    3. 'e' → logprob: -2.7457668781280518
    4. 'c' → logprob: -3.7457668781280518
    5. ' even' → logprob: -3.9957668781280518
    6. 'v' (adapté à ' v') → logprob: -4.245766639709473
    7. '   ' → logprob: -5.245766639709473
    8. ' ev' → logprob: -5.620766639709473
    9. ' v' → logprob: -6.245766639709473
    10. ' e' → logprob: -6.495766639709473

Token 349: '1' (ID: 16)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.005781835410743952
    2. 'even' → logprob: -5.255781650543213
    3. '_' → logprob: -8.130782127380371
    4. ' =' → logprob: -10.005782127380371
    5. '_v' → logprob: -10.255782127380371
    6. '=' → logprob: -10.380782127380371
    7. 'v' → logprob: -10.880782127380371
    8. '_e' → logprob: -10.880782127380371
    9. '_ev' → logprob: -10.880782127380371
    10. '_len' → logprob: -11.255782127380371

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029760440811514854
    2. '=' → logprob: -3.5297603607177734
    3. ',' → logprob: -11.779760360717773
    4. '   ' → logprob: -13.654760360717773
    5. ' ' → logprob: -14.404760360717773
    6. '=v' → logprob: -15.279760360717773
    7. '[' → logprob: -16.029760360717773
    8. ' =
' → logprob: -16.529760360717773
    9. 'v' → logprob: -16.779760360717773
    10. ',v' → logprob: -17.279760360717773

Token 351: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.47431689500808716
    2. ' extract' → logprob: -0.9743168950080872
    3. ' v' → logprob: -8.724316596984863
    4. 'v' → logprob: -9.474316596984863
    5. ' ' → logprob: -16.09931755065918
    6. '.extract' → logprob: -16.47431755065918
    7. 'ex' → logprob: -16.47431755065918
    8. '   ' → logprob: -16.59931755065918
    9. '_extract' → logprob: -16.97431755065918
    10. ' ' → logprob: -17.72431755065918

Token 352: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.0032307098153978586
    2. '_' → logprob: -5.753230571746826
    3. 'even' → logprob: -10.253231048583984
    4. '_v' → logprob: -11.003231048583984
    5. 'v' → logprob: -14.503231048583984
    6. '(v' → logprob: -14.753231048583984
    7. '```' → logprob: -17.878231048583984
    8. '_ev' → logprob: -17.878231048583984
    9. 'Even' → logprob: -18.128231048583984
    10. '_every' → logprob: -18.128231048583984

Token 353: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.750001907348633
    3. 'positions' → logprob: -15.000001907348633
    4. '(v' → logprob: -15.000001907348633
    5. '_pos' → logprob: -15.750001907348633
    6. '(_' → logprob: -15.875001907348633
    7. '(' → logprob: -15.875001907348633
    8. 's' → logprob: -16.625001907348633
    9. '_places' → logprob: -16.875001907348633
    10. '```' → logprob: -17.125001907348633

Token 354: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.500005722045898
    3. ' (' → logprob: -13.250005722045898
    4. '?v' → logprob: -19.7500057220459
    5. '   ' → logprob: -20.0000057220459
    6. '```' → logprob: -20.1250057220459
    7. ',v' → logprob: -20.2500057220459
    8. '(V' → logprob: -20.5000057220459
    9. ' ' → logprob: -21.0000057220459
    10. '[v' → logprob: -21.1250057220459

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005063567776232958
    2. ',v' → logprob: -5.505063533782959
    3. ' ,' → logprob: -7.380063533782959
    4. ',n' → logprob: -8.130064010620117
    5. '(v' → logprob: -10.505064010620117
    6. '(n' → logprob: -11.005064010620117
    7. '   ' → logprob: -11.880064010620117
    8. '(' → logprob: -11.880064010620117
    9. ')' → logprob: -12.255064010620117
    10. 'v' → logprob: -12.755064010620117

Token 356: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007104054093360901
    2. ' n' → logprob: -7.250710487365723
    3. 'len' → logprob: -15.250710487365723
    4. '   ' → logprob: -15.375710487365723
    5. ')n' → logprob: -17.625709533691406
    6. ')' → logprob: -18.000709533691406
    7. '	n' → logprob: -18.125709533691406
    8. ' len' → logprob: -19.375709533691406
    9. ' ' → logprob: -20.125709533691406
    10. '    ' → logprob: -20.125709533691406

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014165983535349369
    2. ')
' → logprob: -4.264165878295898
    3. ')
' → logprob: -13.389165878295898
    4. ')

' → logprob: -15.014165878295898
    5. '   ' → logprob: -15.139165878295898
    6. ')v' → logprob: -15.764165878295898
    7. ' )' → logprob: -16.5141658782959
    8. '),' → logprob: -17.2641658782959
    9. 'v' → logprob: -18.1391658782959
    10. ' )
' → logprob: -18.5141658782959

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041116468608379364
    2. '
' → logprob: -3.54111647605896
    3. 'v' → logprob: -4.541116237640381
    4. '    
' → logprob: -7.541116237640381
    5. ' v' → logprob: -9.791116714477539
    6. '  
' → logprob: -10.666116714477539
    7. 'n' → logprob: -11.791116714477539
    8. '
' → logprob: -11.916116714477539
    9. ' 
' → logprob: -12.541116714477539
    10. '	v' → logprob: -12.916116714477539

Token 359: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.10148602724075317
    2. '   ' → logprob: -2.3514859676361084
    3. ' v' → logprob: -6.7264862060546875
    4. 'c' → logprob: -9.476486206054688
    5. '
' → logprob: -13.476486206054688
    6. '	v' → logprob: -13.851486206054688
    7. ' c' → logprob: -14.851486206054688
    8. '    
' → logprob: -16.101486206054688
    9. ' ' → logprob: -16.351486206054688
    10. '  ' → logprob: -17.101486206054688

Token 360: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007874715374782681
    2. '1' → logprob: -7.375787258148193
    3. '=' → logprob: -9.375787734985352
    4. '[' → logprob: -9.875787734985352
    5. ' =' → logprob: -10.875787734985352
    6. '_' → logprob: -13.375787734985352
    7. '3' → logprob: -13.875787734985352
    8. '   ' → logprob: -14.125787734985352
    9. 'v' → logprob: -14.625787734985352
    10. ' ' → logprob: -14.625787734985352

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. '=v' → logprob: -15.225207328796387
    4. ' v' → logprob: -16.22520637512207
    5. 'v' → logprob: -16.35020637512207
    6. ' ' → logprob: -16.97520637512207
    7. '   ' → logprob: -17.10020637512207
    8. ',' → logprob: -17.72520637512207
    9. ' =)' → logprob: -18.60020637512207
    10. ')' → logprob: -18.85020637512207

Token 362: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.10020699352025986
    2. ' extract' → logprob: -2.3502070903778076
    3. ' v' → logprob: -15.475207328796387
    4. 'v' → logprob: -16.47520637512207
    5. '.extract' → logprob: -17.10020637512207
    6. '_extract' → logprob: -18.85020637512207
    7. ' ' → logprob: -19.10020637512207
    8. 'ex' → logprob: -19.47520637512207
    9. '   ' → logprob: -20.10020637512207
    10. 'Extract' → logprob: -20.60020637512207

Token 363: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.173704271830502e-06
    2. 'odd' → logprob: -12.75000286102295
    3. '_even' → logprob: -16.000003814697266
    4. 'v' → logprob: -17.750003814697266
    5. ' odd' → logprob: -18.125003814697266
    6. 'Odd' → logprob: -18.375003814697266
    7. '```' → logprob: -18.625003814697266
    8. '[' → logprob: -18.625003814697266
    9. '(v' → logprob: -19.250003814697266
    10. '_od' → logprob: -19.500003814697266

Token 364: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -9.088346359931165e-07
    2. ' odd' → logprob: -14.500000953674316
    3. 'v' → logprob: -15.750000953674316
    4. 'n' → logprob: -15.750000953674316
    5. '_' → logprob: -17.375
    6. 'od' → logprob: -17.5
    7. 'even' → logprob: -17.5
    8. 'old' → logprob: -18.0
    9. 'Odd' → logprob: -18.0
    10. '1' → logprob: -20.0

Token 365: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -3.8889261304575484e-06
    2. '(v' → logprob: -13.250003814697266
    3. 'positions' → logprob: -13.375003814697266
    4. '```' → logprob: -15.375003814697266
    5. '_' → logprob: -16.375003814697266
    6. '(_' → logprob: -16.750003814697266
    7. '(' → logprob: -16.875003814697266
    8. 'Positions' → logprob: -17.125003814697266
    9. 's' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.500003814697266

Token 366: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -11.375014305114746
    3. ' (' → logprob: -12.875014305114746
    4. '<|end|>' → logprob: -17.12501335144043
    5. '(
' → logprob: -17.87501335144043
    6. '```' → logprob: -18.75001335144043
    7. 'v' → logprob: -18.87501335144043
    8. ' v' → logprob: -18.87501335144043
    9. '[v' → logprob: -19.37501335144043
    10. '<v' → logprob: -19.62501335144043

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032317206263542175
    2. ',v' → logprob: -3.6573171615600586
    3. '(v' → logprob: -5.157317161560059
    4. ' ,' → logprob: -9.032317161560059
    5. 'v' → logprob: -9.657317161560059
    6. ' v' → logprob: -10.907317161560059
    7. ')' → logprob: -10.907317161560059
    8. '   ' → logprob: -11.657317161560059
    9. ',n' → logprob: -12.032317161560059
    10. '(' → logprob: -12.532317161560059

Token 368: ' n' (ID: 297)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014199945144355297
    2. ' v' → logprob: -4.264199733734131
    3. 'n' → logprob: -10.264200210571289
    4. ' n' → logprob: -13.389200210571289
    5. '   ' → logprob: -18.13920021057129
    6. '	v' → logprob: -18.51420021057129
    7. ')v' → logprob: -19.01420021057129
    8. ')' → logprob: -19.13920021057129
    9. '(v' → logprob: -19.13920021057129
    10. ' ' → logprob: -20.01420021057129

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ')
' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.37501049041748
    4. ' )' → logprob: -16.625011444091797
    5. ')

' → logprob: -17.250011444091797
    6. '),' → logprob: -17.500011444091797
    7. '))' → logprob: -17.500011444091797
    8. ')
' → logprob: -18.125011444091797
    9. ')v' → logprob: -18.125011444091797
    10. 'v' → logprob: -18.500011444091797

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013331283815205097
    2. 'c' → logprob: -4.388331413269043
    3. ' c' → logprob: -7.138331413269043
    4. '```' → logprob: -11.763331413269043
    5. '    
' → logprob: -11.888331413269043
    6. ' counter' → logprob: -12.388331413269043
    7. '
' → logprob: -12.513331413269043
    8. 'counter' → logprob: -12.638331413269043
    9. '	c' → logprob: -15.263331413269043
    10. 'def' → logprob: -15.763331413269043

Token 371: ' cc' (ID: 22988)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0026764876674860716
    2. '   ' → logprob: -6.252676486968994
    3. ' c' → logprob: -7.252676486968994
    4. 'counter' → logprob: -10.377676963806152
    5. '```' → logprob: -13.127676963806152
    6. 'cnt' → logprob: -13.752676963806152
    7. 'count' → logprob: -13.752676963806152
    8. '
' → logprob: -13.877676963806152
    9. 'from' → logprob: -14.127676963806152
    10. ' counter' → logprob: -14.127676963806152

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014288094826042652
    2. 'v' → logprob: -6.626428604125977
    3. '_' → logprob: -10.501428604125977
    4. 'c' → logprob: -10.501428604125977
    5. '_v' → logprob: -10.501428604125977
    6. 'ount' → logprob: -11.251428604125977
    7. 'ounter' → logprob: -12.751428604125977
    8. 'o' → logprob: -13.626428604125977
    9. '=' → logprob: -13.876428604125977
    10. '_c' → logprob: -14.626428604125977

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761659145355225
    2. '=' → logprob: -0.8261659145355225
    3. '1' → logprob: -8.701166152954102
    4. 'ount' → logprob: -10.076166152954102
    5. 'ounter' → logprob: -11.076166152954102
    6. ',' → logprob: -14.201166152954102
    7. ' ' → logprob: -14.576166152954102
    8. '   ' → logprob: -14.701166152954102
    9. '_' → logprob: -15.701166152954102
    10. 'o' → logprob: -16.0761661529541

Token 374: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2820137143135071
    2. 'get' → logprob: -1.5320136547088623
    3. ' count' → logprob: -3.9070136547088623
    4. ' get' → logprob: -4.657013893127441
    5. 'counter' → logprob: -10.907013893127441
    6. 'Counter' → logprob: -11.157013893127441
    7. '   ' → logprob: -12.907013893127441
    8. '(count' → logprob: -13.532013893127441
    9. ' ' → logprob: -13.782013893127441
    10. '(get' → logprob: -14.032013893127441

Token 375: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.005019206088036299
    2. '(v' → logprob: -5.380019187927246
    3. 'elements' → logprob: -7.880019187927246
    4. 'Elements' → logprob: -11.255019187927246
    5. 's' → logprob: -13.005019187927246
    6. '(' → logprob: -13.380019187927246
    7. ' elements' → logprob: -14.130019187927246
    8. '_(' → logprob: -14.130019187927246
    9. '_ELEMENTS' → logprob: -14.255019187927246
    10. '(c' → logprob: -14.505019187927246

Token 376: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.625001907348633
    3. 'v' → logprob: -14.000001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '(c' → logprob: -18.750001907348633
    6. '(vc' → logprob: -19.125001907348633
    7. '(
' → logprob: -20.125001907348633
    8. 'def' → logprob: -20.250001907348633
    9. '(list' → logprob: -20.500001907348633
    10. '(cc' → logprob: -20.625001907348633

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '(v' → logprob: -13.375001907348633
    3. ')' → logprob: -16.000001907348633
    4. '(' → logprob: -17.125001907348633
    5. 'v' → logprob: -17.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. ')
' → logprob: -19.125001907348633
    8. '[v' → logprob: -19.125001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '
' → logprob: -19.500001907348633

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19905567169189453
    2. '(v' → logprob: -1.8240556716918945
    3. '())' → logprob: -4.3240556716918945
    4. '(' → logprob: -5.6990556716918945
    5. ')
' → logprob: -6.1990556716918945
    6. '())
' → logprob: -8.574055671691895
    7. '()' → logprob: -8.949055671691895
    8. ')v' → logprob: -10.199055671691895
    9. '(cc' → logprob: -10.324055671691895
    10. ' )' → logprob: -10.449055671691895

Token 379: '   ' (ID: 271)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.04390658810734749
    2. '   ' → logprob: -3.1689066886901855
    3. ' cc' → logprob: -7.0439066886901855
    4. 'c' → logprob: -10.543906211853027
    5. '	cc' → logprob: -12.418906211853027
    6. '
' → logprob: -13.918906211853027
    7. '    
' → logprob: -14.043906211853027
    8. ' ' → logprob: -14.293906211853027
    9. '_cc' → logprob: -15.043906211853027
    10. 'counter' → logprob: -15.543906211853027

Token 380: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -9.014684110297821e-06
    2. ' cc' → logprob: -12.000008583068848
    3. '   ' → logprob: -12.875008583068848
    4. 'c' → logprob: -15.375008583068848
    5. '	cc' → logprob: -17.250009536743164
    6. ' ' → logprob: -17.375009536743164
    7. 'ccc' → logprob: -17.500009536743164
    8. '    
' → logprob: -18.375009536743164
    9. '
' → logprob: -18.875009536743164
    10. 'print' → logprob: -19.500009536743164

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '=' → logprob: -14.250000953674316
    3. 'c' → logprob: -15.250000953674316
    4. ' =' → logprob: -17.375001907348633
    5. ' ' → logprob: -17.875001907348633
    6. 'counter' → logprob: -18.500001907348633
    7. 'count' → logprob: -18.625001907348633
    8. '_counter' → logprob: -19.000001907348633
    9. '1' → logprob: -19.625001907348633
    10. '_' → logprob: -20.625001907348633

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. ' ' → logprob: -16.200939178466797
    4. ' =
' → logprob: -16.325939178466797
    5. ',' → logprob: -16.575939178466797
    6. '=
' → logprob: -16.575939178466797
    7. '   ' → logprob: -17.325939178466797
    8. ')' → logprob: -18.075939178466797
    9. ' ' → logprob: -18.200939178466797
    10. '＝' → logprob: -18.325939178466797

Token 383: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00012356207298580557
    2. ' count' → logprob: -9.000123977661133
    3. '(count' → logprob: -16.375123977661133
    4. 'counter' → logprob: -16.750123977661133
    5. 'cc' → logprob: -18.250123977661133
    6. '   ' → logprob: -19.000123977661133
    7. ' ' → logprob: -19.500123977661133
    8. 'c' → logprob: -20.250123977661133
    9. '	count' → logprob: -20.375123977661133
    10. '[count' → logprob: -21.500123977661133

Token 384: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -6.869017852295656e-06
    2. 'elements' → logprob: -12.125006675720215
    3. 'Elements' → logprob: -13.875006675720215
    4. '_ELEMENTS' → logprob: -15.125006675720215
    5. '_' → logprob: -16.37500762939453
    6. '2' → logprob: -18.50000762939453
    7. '```' → logprob: -18.87500762939453
    8. ' elements' → logprob: -19.12500762939453
    9. 's' → logprob: -19.12500762939453
    10. '.Elements' → logprob: -19.25000762939453

Token 385: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.2729995988775045e-06
    2. 'v' → logprob: -12.125006675720215
    3. '(' → logprob: -14.375006675720215
    4. ' (' → logprob: -16.0000057220459
    5. '
' → logprob: -17.6250057220459
    6. '[v' → logprob: -17.7500057220459
    7. '<v' → logprob: -18.7500057220459
    8. ' v' → logprob: -19.1250057220459
    9. '(
' → logprob: -19.5000057220459
    10. '	v' → logprob: -20.2500057220459

Token 386: '2' (ID: 17)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.030764421448111534
    2. '2' → logprob: -3.53076434135437
    3. '(v' → logprob: -7.280764579772949
    4. '[v' → logprob: -9.15576457977295
    5. ')' → logprob: -9.28076457977295
    6. ' v' → logprob: -9.53076457977295
    7. '[' → logprob: -10.65576457977295
    8. ')v' → logprob: -11.03076457977295
    9. '$v' → logprob: -12.53076457977295
    10. '<v' → logprob: -12.65576457977295

Token 387: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4034345187828876e-05
    2. ')
' → logprob: -11.00002384185791
    3. '())' → logprob: -12.12502384185791
    4. '()' → logprob: -14.50002384185791
    5. ' )' → logprob: -14.75002384185791
    6. '   ' → logprob: -15.25002384185791
    7. ')c' → logprob: -15.62502384185791
    8. '))' → logprob: -15.87502384185791
    9. ')

' → logprob: -15.87502384185791
    10. '[' → logprob: -17.125024795532227

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022522391751408577
    2. 'c' → logprob: -4.147522449493408
    3. ' c' → logprob: -5.272522449493408
    4. 'cc' → logprob: -8.02252197265625
    5. '    
' → logprob: -8.39752197265625
    6. '```' → logprob: -8.39752197265625
    7. ' cc' → logprob: -8.77252197265625
    8. '
' → logprob: -10.02252197265625
    9. 'v' → logprob: -10.39752197265625
    10. '[' → logprob: -10.39752197265625

Token 389: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.022381115704774857
    2. 'mc' → logprob: -4.39738130569458
    3. 'common' → logprob: -5.64738130569458
    4. ' c' → logprob: -6.02238130569458
    5. '   ' → logprob: -7.02238130569458
    6. 'm' → logprob: -7.27238130569458
    7. 'sc' → logprob: -7.64738130569458
    8. 'most' → logprob: -8.022380828857422
    9. 'pc' → logprob: -8.647380828857422
    10. 'cc' → logprob: -8.772380828857422

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023455452173948288
    2. 'c' → logprob: -3.7734553813934326
    3. 'cc' → logprob: -8.523455619812012
    4. '_' → logprob: -13.023455619812012
    5. '=' → logprob: -13.273455619812012
    6. ' =' → logprob: -13.523455619812012
    7. 'v' → logprob: -13.898455619812012
    8. 'cs' → logprob: -14.273455619812012
    9. 'count' → logprob: -14.523455619812012
    10. '_c' → logprob: -14.773455619812012

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03369215130805969
    2. '=' → logprob: -3.4086921215057373
    3. ',' → logprob: -10.033692359924316
    4. ' ' → logprob: -14.033692359924316
    5. 's' → logprob: -14.533692359924316
    6. 'c' → logprob: -14.783692359924316
    7. '=c' → logprob: -15.783692359924316
    8. ' =
' → logprob: -15.908692359924316
    9. '   ' → logprob: -16.03369140625
    10. ',c' → logprob: -16.28369140625

Token 392: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03807087242603302
    2. ' get' → logprob: -3.2880709171295166
    3. 'cc' → logprob: -10.538070678710938
    4. ' cc' → logprob: -13.413070678710938
    5. '   ' → logprob: -14.413070678710938
    6. '(get' → logprob: -15.663070678710938
    7. '[get' → logprob: -15.663070678710938
    8. ' ' → logprob: -15.913070678710938
    9. '.get' → logprob: -16.163070678710938
    10. 'list' → logprob: -16.663070678710938

Token 393: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.6937942504882812
    2. 'most' → logprob: -0.6937942504882812
    3. 'm' → logprob: -7.443794250488281
    4. ' most' → logprob: -9.943794250488281
    5. 'first' → logprob: -12.318794250488281
    6. 'Most' → logprob: -12.693794250488281
    7. '(m' → logprob: -13.818794250488281
    8. 'get' → logprob: -14.068794250488281
    9. '_first' → logprob: -14.693794250488281
    10. '-most' → logprob: -14.818794250488281

Token 394: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -3.8889261304575484e-06
    2. 'most' → logprob: -12.500003814697266
    3. '[' → logprob: -17.000003814697266
    4. 'o' → logprob: -17.125003814697266
    5. 'ост' → logprob: -17.500003814697266
    6. '```' → logprob: -17.750003814697266
    7. ' ost' → logprob: -18.250003814697266
    8. '`' → logprob: -18.250003814697266
    9. 'Most' → logprob: -18.375003814697266
    10. 'common' → logprob: -18.375003814697266

Token 395: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.00017421995289623737
    2. '_' → logprob: -9.000174522399902
    3. 'common' → logprob: -10.125174522399902
    4. '_comm' → logprob: -11.875174522399902
    5. '_com' → logprob: -13.250174522399902
    6. '(_' → logprob: -14.750174522399902
    7. ')_' → logprob: -15.000174522399902
    8. '_c' → logprob: -15.000174522399902
    9. '(common' → logprob: -15.000174522399902
    10. ' common' → logprob: -15.875174522399902

Token 396: '(cc' (ID: 70624)
  Prédit: '(cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cc' → logprob: -2.069664333248511e-05
    2. '(counter' → logprob: -11.500020980834961
    3. '(CC' → logprob: -11.875020980834961
    4. '(' → logprob: -13.250020980834961
    5. '(c' → logprob: -14.125020980834961
    6. '(count' → logprob: -14.625020980834961
    7. ' (' → logprob: -14.750020980834961
    8. '(C' → logprob: -17.00002098083496
    9. '(cnt' → logprob: -17.00002098083496
    10. '(cd' → logprob: -17.62502098083496

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.500001907348633
    3. ')' → logprob: -14.500001907348633
    4. '```' → logprob: -17.250001907348633
    5. ')(' → logprob: -17.500001907348633
    6. '()' → logprob: -18.000001907348633
    7. '2' → logprob: -18.875001907348633
    8. '())' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.250001907348633
    10. ')[' → logprob: -19.875001907348633

Token 398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4226441979408264
    2. ')
' → logprob: -1.1726441383361816
    3. '()' → logprob: -4.047644138336182
    4. '()
' → logprob: -4.422644138336182
    5. '())
' → logprob: -5.922644138336182
    6. '())' → logprob: -6.422644138336182
    7. '(c' → logprob: -7.922644138336182
    8. ')c' → logprob: -8.29764461517334
    9. '(v' → logprob: -8.67264461517334
    10. '   ' → logprob: -8.92264461517334

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003914187662303448
    2. 'c' → logprob: -5.7539143562316895
    3. ' c' → logprob: -7.7539143562316895
    4. '
' → logprob: -8.253913879394531
    5. '    
' → logprob: -10.253913879394531
    6. '	c' → logprob: -12.878913879394531
    7. '[' → logprob: -13.128913879394531
    8. '<|end|>' → logprob: -13.378913879394531
    9. ' ' → logprob: -13.503913879394531
    10. '```' → logprob: -13.878913879394531

Token 400: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0008708444074727595
    2. ' c' → logprob: -7.125870704650879
    3. '   ' → logprob: -9.625870704650879
    4. '	c' → logprob: -15.875870704650879
    5. '```' → logprob: -16.000871658325195
    6. '
' → logprob: -16.625871658325195
    7. '    
' → logprob: -17.000871658325195
    8. 'if' → logprob: -17.375871658325195
    9. ' ' → logprob: -18.000871658325195
    10. ' if' → logprob: -18.375871658325195

Token 401: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. '[' → logprob: -11.62501335144043
    3. ' =' → logprob: -13.50001335144043
    4. ' ' → logprob: -13.50001335144043
    5. '=' → logprob: -13.87501335144043
    6. '_' → logprob: -14.25001335144043
    7. '.' → logprob: -15.25001335144043
    8. '   ' → logprob: -16.12501335144043
    9. ',' → logprob: -16.37501335144043
    10. '1' → logprob: -17.00001335144043

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395956993103
    2. ' =' → logprob: -0.8259395956993103
    3. '=get' → logprob: -15.825939178466797
    4. ',' → logprob: -17.325939178466797
    5. '=}' → logprob: -17.950939178466797
    6. ' ' → logprob: -18.200939178466797
    7. ' =)' → logprob: -18.700939178466797
    8. ')' → logprob: -18.825939178466797
    9. ' =
' → logprob: -18.950939178466797
    10. '＝' → logprob: -19.325939178466797

Token 403: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.038045283406972885
    2. ' get' → logprob: -3.2880451679229736
    3. '(get' → logprob: -13.413044929504395
    4. '[get' → logprob: -13.663044929504395
    5. '=get' → logprob: -14.913044929504395
    6. '.get' → logprob: -15.288044929504395
    7. '	get' → logprob: -15.413044929504395
    8. 'c' → logprob: -16.66304588317871
    9. ')get' → logprob: -17.03804588317871
    10. '   ' → logprob: -17.16304588317871

Token 404: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -6.988221684878226e-06
    2. 'most' → logprob: -12.625006675720215
    3. '_' → logprob: -13.375006675720215
    4. 'ost' → logprob: -13.750006675720215
    5. 'm' → logprob: -14.250006675720215
    6. 'get' → logprob: -15.875006675720215
    7. '_first' → logprob: -16.00000762939453
    8. 's' → logprob: -17.62500762939453
    9. '_common' → logprob: -18.00000762939453
    10. '_c' → logprob: -18.00000762939453

Token 405: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -9.758300438988954e-05
    2. 'most' → logprob: -9.250097274780273
    3. 'common' → logprob: -13.875097274780273
    4. '[' → logprob: -15.625097274780273
    5. '_common' → logprob: -15.750097274780273
    6. '_' → logprob: -16.125097274780273
    7. 'c' → logprob: -16.500097274780273
    8. 'ост' → logprob: -17.000097274780273
    9. 'Most' → logprob: -18.000097274780273
    10. 'o' → logprob: -18.250097274780273

Token 406: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.00043102685594931245
    2. 'common' → logprob: -7.750431060791016
    3. 'Common' → logprob: -16.000431060791016
    4. 'c' → logprob: -16.625431060791016
    5. '_c' → logprob: -17.125431060791016
    6. '(common' → logprob: -17.625431060791016
    7. ' common' → logprob: -17.750431060791016
    8. '_' → logprob: -18.000431060791016
    9. '_comm' → logprob: -18.125431060791016
    10. '.common' → logprob: -18.250431060791016

Token 407: '(cc' (ID: 70624)
  Prédit: '(cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cc' → logprob: -1.9361264946837764e-07
    2. 'cc' → logprob: -16.5
    3. '(CC' → logprob: -16.75
    4. '(' → logprob: -17.5
    5. '(counter' → logprob: -18.375
    6. '	cc' → logprob: -18.875
    7. ' (' → logprob: -19.25
    8. ' cc' → logprob: -20.25
    9. '(cd' → logprob: -20.5
    10. '(
' → logprob: -21.0

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. 'cc' → logprob: -12.375007629394531
    3. 'c' → logprob: -12.625007629394531
    4. ')' → logprob: -15.875007629394531
    5. '(' → logprob: -16.00000762939453
    6. '1' → logprob: -17.37500762939453
    7. '(cc' → logprob: -17.62500762939453
    8. '۲' → logprob: -18.75000762939453
    9. '(c' → logprob: -18.75000762939453
    10. '[' → logprob: -18.75000762939453

Token 409: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. '()' → logprob: -9.500088691711426
    3. '   ' → logprob: -12.250088691711426
    4. '())' → logprob: -12.625088691711426
    5. ' )' → logprob: -12.875088691711426
    6. ')
' → logprob: -13.000088691711426
    7. ' ' → logprob: -15.125088691711426
    8. ')

' → logprob: -15.625088691711426
    9. '‌' → logprob: -17.87508773803711
    10. '  ' → logprob: -17.87508773803711

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001368807745166123
    2. ' if' → logprob: -7.626368999481201
    3. 'if' → logprob: -8.001368522644043
    4. '```' → logprob: -8.001368522644043
    5. '    
' → logprob: -9.001368522644043
    6. '<|end|>' → logprob: -9.626368522644043
    7. '
' → logprob: -11.126368522644043
    8. '  
' → logprob: -13.751368522644043
    9. 'def' → logprob: -14.376368522644043
    10. '	if' → logprob: -14.501368522644043

Token 411: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.380904672667384e-05
    2. 'i' → logprob: -10.625033378601074
    3. ' if' → logprob: -11.875033378601074
    4. '   ' → logprob: -13.125033378601074
    5. '```' → logprob: -14.500033378601074
    6. 'result' → logprob: -19.37503433227539
    7. 'print' → logprob: -19.50003433227539
    8. 'x' → logprob: -20.00003433227539
    9. 'for' → logprob: -20.00003433227539
    10. '#' → logprob: -20.25003433227539

Token 412: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.09001748263835907
    2. 'get' → logprob: -2.965017557144165
    3. ' c' → logprob: -3.465017557144165
    4. ' are' → logprob: -6.340017318725586
    5. 'c' → logprob: -7.465017318725586
    6. 'are' → logprob: -7.965017318725586
    7. ' is' → logprob: -8.340017318725586
    8. '(get' → logprob: -8.965017318725586
    9. '   ' → logprob: -9.590017318725586
    10. ' len' → logprob: -10.340017318725586

Token 413: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -17.25
    3. '```' → logprob: -17.25
    4. '_last' → logprob: -17.625
    5. '_second' → logprob: -17.75
    6. 'First' → logprob: -18.125
    7. '_f' → logprob: -18.25
    8. '_FIRST' → logprob: -19.0
    9. '_best' → logprob: -19.0
    10. 'first' → logprob: -19.0

Token 414: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -1.8550976164988242e-05
    2. '_elements' → logprob: -11.500018119812012
    3. '_first' → logprob: -11.875018119812012
    4. '_elem' → logprob: -14.250018119812012
    5. '_count' → logprob: -15.875018119812012
    6. 'element' → logprob: -16.000019073486328
    7. '_' → logprob: -16.125019073486328
    8. '```' → logprob: -16.625019073486328
    9. '_value' → logprob: -17.125019073486328
    10. '_key' → logprob: -17.250019073486328

Token 415: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.392202976712724e-06
    2. ' (' → logprob: -12.375006675720215
    3. '(' → logprob: -13.125006675720215
    4. '(cc' → logprob: -17.2500057220459
    5. ')' → logprob: -17.3750057220459
    6. 'c' → logprob: -17.5000057220459
    7. ')c' → logprob: -18.0000057220459
    8. '(s' → logprob: -18.1250057220459
    9. ')(' → logprob: -19.2500057220459
    10. '(
' → logprob: -19.3750057220459

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -13.875000953674316
    3. '2' → logprob: -16.500001907348633
    4. ' ' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '_' → logprob: -18.750001907348633
    7. '```' → logprob: -19.562501907348633
    8. '(' → logprob: -19.687501907348633
    9. '۱' → logprob: -20.125001907348633
    10. ',' → logprob: -20.375001907348633

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004952482995577157
    2. ' )' → logprob: -8.125494956970215
    3. ')!=' → logprob: -9.000494956970215
    4. '!=' → logprob: -10.000494956970215
    5. ' !=' → logprob: -11.250494956970215
    6. '()' → logprob: -12.000494956970215
    7. ')==' → logprob: -12.125494956970215
    8. '==' → logprob: -12.500494956970215
    9. '()!=' → logprob: -14.875494956970215
    10. '```' → logprob: -15.000494956970215

Token 418: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5785636901855469
    2. '!=' → logprob: -0.8285636901855469
    3. ' !=' → logprob: -6.703563690185547
    4. '=' → logprob: -6.953563690185547
    5. ' ==' → logprob: -7.828563690185547
    6. ')' → logprob: -10.828563690185547
    7. '()!=' → logprob: -11.828563690185547
    8. '```' → logprob: -13.078563690185547
    9. '==
' → logprob: -13.203563690185547
    10. '()==' → logprob: -13.453563690185547

Token 419: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.20141655206680298
    2. ' get' → logprob: -1.7014164924621582
    3. '(get' → logprob: -13.076416969299316
    4. ' ' → logprob: -14.576416969299316
    5. '   ' → logprob: -15.951416969299316
    6. '	get' → logprob: -15.951416969299316
    7. '[get' → logprob: -16.201416015625
    8. ')get' → logprob: -16.451416015625
    9. '.get' → logprob: -16.701416015625
    10. '
' → logprob: -17.076416015625

Token 420: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -9.088346359931165e-07
    2. 'first' → logprob: -14.500000953674316
    3. '_second' → logprob: -15.250000953674316
    4. 'First' → logprob: -15.750000953674316
    5. '_FIRST' → logprob: -18.125
    6. '(first' → logprob: -18.5
    7. '_First' → logprob: -18.75
    8. '(' → logprob: -18.875
    9. '_last' → logprob: -19.125
    10. ' first' → logprob: -19.375

Token 421: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -5.1689596148207784e-05
    2. 'element' → logprob: -9.875051498413086
    3. 'Element' → logprob: -17.000051498413086
    4. ' element' → logprob: -17.125051498413086
    5. '_ELEMENT' → logprob: -17.875051498413086
    6. '_elem' → logprob: -19.375051498413086
    7. '_elements' → logprob: -19.375051498413086
    8. '(element' → logprob: -20.125051498413086
    9. 'ELEMENT' → logprob: -20.125051498413086
    10. '_object' → logprob: -20.375051498413086

Token 422: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.870950215263292e-05
    2. ' (' → logprob: -10.000048637390137
    3. '(' → logprob: -12.750048637390137
    4. '(
' → logprob: -16.375049591064453
    5. ')c' → logprob: -16.750049591064453
    6. ')' → logprob: -17.250049591064453
    7. 'c' → logprob: -17.375049591064453
    8. '```' → logprob: -18.000049591064453
    9. ',' → logprob: -18.250049591064453
    10. ')(' → logprob: -18.250049591064453

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.25
    3. '1' → logprob: -17.125
    4. '```' → logprob: -17.75
    5. ' ' → logprob: -18.625
    6. 'c' → logprob: -18.75
    7. '   ' → logprob: -19.875
    8. '۲' → logprob: -19.875
    9. ')c' → logprob: -20.5
    10. '₂' → logprob: -20.625

Token 424: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05428910627961159
    2. ':' → logprob: -3.0542891025543213
    3. '):
' → logprob: -5.1792893409729
    4. ':
' → logprob: -10.929288864135742
    5. ')' → logprob: -11.054288864135742
    6. ' ):' → logprob: -11.554288864135742
    7. '   ' → logprob: -12.179288864135742
    8. ' and' → logprob: -13.429288864135742
    9. ' :' → logprob: -13.804288864135742
    10. '):
' → logprob: -14.804288864135742

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.305326966568828e-05
    2. 'print' → logprob: -10.375093460083008
    3. ':' → logprob: -10.500093460083008
    4. 'return' → logprob: -11.500093460083008
    5. '   ' → logprob: -11.875093460083008
    6. ' return' → logprob: -12.000093460083008
    7. '
' → logprob: -12.500093460083008
    8. '```' → logprob: -13.375093460083008
    9. ' print' → logprob: -13.500093460083008
    10. ':
' → logprob: -14.125093460083008

Token 426: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0021050558425486088
    2. '   ' → logprob: -6.252105236053467
    3. ' print' → logprob: -8.877104759216309
    4. '       ' → logprob: -10.377104759216309
    5. '
' → logprob: -13.002104759216309
    6. '```' → logprob: -13.627104759216309
    7. 'result' → logprob: -14.002104759216309
    8. 'return' → logprob: -14.127104759216309
    9. '	print' → logprob: -16.002105712890625
    10. '    
' → logprob: -16.377105712890625

Token 427: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013515453319996595
    2. '(n' → logprob: -6.876351356506348
    3. '(' → logprob: -8.126351356506348
    4. 'calculate' → logprob: -11.251351356506348
    5. '(
' → logprob: -12.126351356506348
    6. '(calc' → logprob: -13.501351356506348
    7. 'n' → logprob: -13.876351356506348
    8. '(max' → logprob: -14.001351356506348
    9. '((' → logprob: -14.251351356506348
    10. '(cal' → logprob: -15.376351356506348

Token 428: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.0060804798267781734
    2. '[' → logprob: -5.256080627441406
    3. '1' → logprob: -7.381080627441406
    4. 'calculate' → logprob: -9.006080627441406
    5. 'al' → logprob: -10.381080627441406
    6. 'alc' → logprob: -10.631080627441406
    7. ')' → logprob: -10.756080627441406
    8. '[]' → logprob: -12.756080627441406
    9. 'aculate' → logprob: -12.756080627441406
    10. '[n' → logprob: -13.006080627441406

Token 429: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -3.531315314830863e-06
    2. 'output' → logprob: -12.750003814697266
    3. '_' → logprob: -15.000003814697266
    4. ' _' → logprob: -16.625003814697266
    5. '_input' → logprob: -16.875003814697266
    6. '_out' → logprob: -17.125003814697266
    7. '```' → logprob: -17.250003814697266
    8. '"_' → logprob: -17.750003814697266
    9. 'Output' → logprob: -17.875003814697266
    10. '_OUTPUT' → logprob: -18.500003814697266

Token 430: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.179569077678025e-05
    2. '_output' → logprob: -10.250041961669922
    3. '_difference' → logprob: -12.250041961669922
    4. 'd' → logprob: -14.750041961669922
    5. 'different' → logprob: -14.750041961669922
    6. '_' → logprob: -15.375041961669922
    7. '_diff' → logprob: -15.625041961669922
    8. '_D' → logprob: -16.625041961669922
    9. ' _' → logprob: -16.750041961669922
    10. '```' → logprob: -17.250041961669922

Token 431: 'ifferent' (ID: 27336)
  Prédit: 'ifferent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifferent' → logprob: -4.60414821645827e-06
    2. 'if' → logprob: -13.625004768371582
    3. 'different' → logprob: -13.625004768371582
    4. 'iffer' → logprob: -13.750004768371582
    5. 'ffer' → logprob: -14.875004768371582
    6. ' if' → logprob: -16.000003814697266
    7. '
' → logprob: -16.000003814697266
    8. '```' → logprob: -16.250003814697266
    9. 'iff' → logprob: -16.375003814697266
    10. 'ifer' → logprob: -16.625003814697266

Token 432: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.625001907348633
    3. '_output' → logprob: -15.125001907348633
    4. '_element' → logprob: -16.125001907348633
    5. 'elements' → logprob: -16.500001907348633
    6. '_e' → logprob: -16.500001907348633
    7. '_items' → logprob: -18.000001907348633
    8. ' _' → logprob: -18.250001907348633
    9. '
' → logprob: -18.625001907348633
    10. '_parts' → logprob: -19.000001907348633

Token 433: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012213163427077234
    2. '(' → logprob: -9.7501220703125
    3. ' (' → logprob: -10.3751220703125
    4. ')(' → logprob: -10.8751220703125
    5. ')' → logprob: -11.2501220703125
    6. '(
' → logprob: -14.8751220703125
    7. ' ' → logprob: -17.0001220703125
    8. ',' → logprob: -17.3751220703125
    9. ')n' → logprob: -17.3751220703125
    10. ')(
' → logprob: -17.5001220703125

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012627013027668
    2. ',c' → logprob: -4.387627124786377
    3. ' ,' → logprob: -9.387626647949219
    4. ',
' → logprob: -11.387626647949219
    5. '(c' → logprob: -11.887626647949219
    6. 'c' → logprob: -12.012626647949219
    7. '(' → logprob: -12.512626647949219
    8. ')' → logprob: -12.512626647949219
    9. '   ' → logprob: -14.512626647949219
    10. ' c' → logprob: -15.012626647949219

Token 435: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.602024900028482e-05
    2. ' c' → logprob: -9.750085830688477
    3. 'cc' → logprob: -10.500085830688477
    4. ')c' → logprob: -17.000085830688477
    5. '   ' → logprob: -17.250085830688477
    6. '
' → logprob: -18.250085830688477
    7. '	c' → logprob: -19.000085830688477
    8. '       ' → logprob: -19.375085830688477
    9. ' cc' → logprob: -19.500085830688477
    10. '    ' → logprob: -20.125085830688477

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'c' → logprob: -18.0
    3. ',' → logprob: -19.0
    4. ')' → logprob: -19.25
    5. ' ' → logprob: -19.25
    6. '１' → logprob: -20.125
    7. '```' → logprob: -20.9375
    8. '
' → logprob: -21.125
    9. 'cc' → logprob: -21.4375
    10. '   ' → logprob: -21.5

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039230400579981506
    2. ',c' → logprob: -7.875392436981201
    3. ' ,' → logprob: -11.750391960144043
    4. ',
' → logprob: -12.875391960144043
    5. 'c' → logprob: -13.500391960144043
    6. ',

' → logprob: -16.37539291381836
    7. ' c' → logprob: -16.75039291381836
    8. '   ' → logprob: -16.87539291381836
    9. '‌,' → logprob: -18.00039291381836
    10. ',
' → logprob: -18.62539291381836

Token 438: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.12507438659668
    4. '  ' → logprob: -18.62507438659668
    5. ')c' → logprob: -19.50007438659668
    6. '	c' → logprob: -19.75007438659668
    7. '       ' → logprob: -20.00007438659668
    8. '    ' → logprob: -20.00007438659668
    9. '$c' → logprob: -20.75007438659668
    10. ' ' → logprob: -20.75007438659668

Token 439: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '22' → logprob: -19.0
    3. '1' → logprob: -20.0
    4. '۲' → logprob: -20.75
    5. '))' → logprob: -21.3125
    6. '```' → logprob: -21.5625
    7. ')' → logprob: -21.8125
    8. '7' → logprob: -21.875
    9. ' ' → logprob: -22.0
    10. '[' → logprob: -22.0625

Token 440: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006632337463088334
    2. '))' → logprob: -7.7506632804870605
    3. ')
' → logprob: -8.375662803649902
    4. '   ' → logprob: -13.875662803649902
    5. '())' → logprob: -15.000662803649902
    6. ' )' → logprob: -15.500662803649902
    7. '))
' → logprob: -15.625662803649902
    8. ')))' → logprob: -15.875662803649902
    9. ')

' → logprob: -16.50066375732422
    10. '`)' → logprob: -16.75066375732422

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005054433364421129
    2. 'elif' → logprob: -6.005054473876953
    3. 'else' → logprob: -6.005054473876953
    4. '```' → logprob: -9.380054473876953
    5. ' else' → logprob: -11.380054473876953
    6. ' elif' → logprob: -11.505054473876953
    7. '    
' → logprob: -13.755054473876953
    8. '	elif' → logprob: -14.505054473876953
    9. '
' → logprob: -15.005054473876953
    10. ')' → logprob: -15.005054473876953

Token 442: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04373704642057419
    2. 'elif' → logprob: -3.5437369346618652
    3. 'else' (adapté à ' else') → logprob: -4.293736934661865
    4. ' elif' → logprob: -8.793737411499023
    5. ' else' → logprob: -9.918737411499023
    6. '```' → logprob: -10.418737411499023
    7. '    
' → logprob: -13.668737411499023
    8. ' ' → logprob: -13.668737411499023
    9. '	elif' → logprob: -13.793737411499023
    10. '  ' → logprob: -14.543737411499023

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2538965046405792
    2. ':
' → logprob: -1.5038964748382568
    3. '       ' → logprob: -6.753896713256836
    4. ' if' → logprob: -7.378896713256836
    5. 'if' → logprob: -9.628896713256836
    6. '   ' → logprob: -10.003896713256836
    7. ' :
' → logprob: -10.753896713256836
    8. ',' → logprob: -11.753896713256836
    9. ' :' → logprob: -11.878896713256836
    10. '):
' → logprob: -12.128896713256836

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004874369595199823
    2. ' if' → logprob: -5.379874229431152
    3. 'if' → logprob: -8.379874229431152
    4. '   ' → logprob: -11.129874229431152
    5. '```' → logprob: -12.879874229431152
    6. '    ' → logprob: -13.004874229431152
    7. '     ' → logprob: -13.379874229431152
    8. '      ' → logprob: -13.379874229431152
    9. '           ' → logprob: -13.629874229431152
    10. '        
' → logprob: -15.504874229431152

Token 445: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03303772583603859
    2. ' if' → logprob: -3.5330376625061035
    3. '   ' → logprob: -6.0330376625061035
    4. '       ' → logprob: -7.0330376625061035
    5. '    ' → logprob: -14.658038139343262
    6. ' ' → logprob: -15.033038139343262
    7. '	if' → logprob: -15.283038139343262
    8. '           ' → logprob: -15.908038139343262
    9. '     ' → logprob: -16.158037185668945
    10. '
' → logprob: -16.158037185668945

Token 446: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.25241321325302124
    2. ' are' → logprob: -1.502413272857666
    3. '(' → logprob: -8.127412796020508
    4. '   ' → logprob: -9.002412796020508
    5. ' ' → logprob: -10.877412796020508
    6. ' (' → logprob: -11.127412796020508
    7. ' not' → logprob: -11.502412796020508
    8. ' is' → logprob: -11.752412796020508
    9. '  ' → logprob: -12.127412796020508
    10. '    ' → logprob: -13.502412796020508

Token 447: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.062003422528505325
    2. 'both' → logprob: -2.8120033740997314
    3. ' both' → logprob: -10.312003135681152
    4. '(b' → logprob: -13.312003135681152
    5. 'b' → logprob: -14.687003135681152
    6. '(c' → logprob: -15.187003135681152
    7. 'Both' → logprob: -15.937003135681152
    8. '(' → logprob: -17.43700408935547
    9. 'are' → logprob: -18.06200408935547
    10. 'not' → logprob: -18.43700408935547

Token 448: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.000498701527249068
    2. 'both' → logprob: -7.6254987716674805
    3. '_b' → logprob: -12.12549877166748
    4. '```' → logprob: -14.12549877166748
    5. '{' → logprob: -14.62549877166748
    6. 'Both' → logprob: -14.62549877166748
    7. 'th' → logprob: -14.75049877166748
    8. '[' → logprob: -15.00049877166748
    9. '#' → logprob: -15.00049877166748
    10. '...' → logprob: -15.12549877166748

Token 449: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.00015979631280060858
    2. 'length' → logprob: -9.250160217285156
    3. '(length' → logprob: -10.250160217285156
    4. '_length' → logprob: -10.875160217285156
    5. '_b' → logprob: -12.250160217285156
    6. '(c' → logprob: -13.500160217285156
    7. '```' → logprob: -14.625160217285156
    8. 'both' → logprob: -14.750160217285156
    9. 'Lengths' → logprob: -14.750160217285156
    10. ' lengths' → logprob: -15.000160217285156

Token 450: '_one' (ID: 26979)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018542731180787086
    2. '_one' → logprob: -4.018542766571045
    3. '(one' → logprob: -7.893542766571045
    4. 'one' → logprob: -11.518542289733887
    5. 'One' → logprob: -11.893542289733887
    6. '(' → logprob: -13.518542289733887
    7. ' (' → logprob: -14.643542289733887
    8. '_ONE' → logprob: -14.893542289733887
    9. ' one' → logprob: -15.518542289733887
    10. '(len' → logprob: -15.893542289733887

Token 451: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.226628895296017e-06
    2. ' (' → logprob: -12.000007629394531
    3. '(' → logprob: -13.875007629394531
    4. '(
' → logprob: -18.62500762939453
    5. '(s' → logprob: -19.37500762939453
    6. '(cc' → logprob: -19.37500762939453
    7. '(ci' → logprob: -19.87500762939453
    8. ':' → logprob: -20.00000762939453
    9. 'c' → logprob: -20.37500762939453
    10. '((' → logprob: -20.50000762939453

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.375000953674316
    3. ',' → logprob: -15.250000953674316
    4. 'c' → logprob: -17.125001907348633
    5. '(c' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. '১' → logprob: -17.625001907348633
    8. ' ' → logprob: -17.875001907348633
    9. ')c' → logprob: -17.937501907348633
    10. '(' → logprob: -17.937501907348633

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004697595722973347
    2. ',c' → logprob: -5.379697799682617
    3. ' ,' → logprob: -9.504697799682617
    4. '(c' → logprob: -13.504697799682617
    5. ',
' → logprob: -14.379697799682617
    6. 'c' → logprob: -14.754697799682617
    7. 'and' → logprob: -15.504697799682617
    8. ' and' → logprob: -15.504697799682617
    9. ' c' → logprob: -16.379697799682617
    10. '   ' → logprob: -16.754697799682617

Token 454: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014199706725776196
    2. ' c' → logprob: -4.264199733734131
    3. '   ' → logprob: -11.389199256896973
    4. '       ' → logprob: -11.889199256896973
    5. ')c' → logprob: -12.139199256896973
    6. ')' → logprob: -12.264199256896973
    7. '
' → logprob: -12.389199256896973
    8. '           ' → logprob: -13.764199256896973
    9. '(c' → logprob: -14.389199256896973
    10. ' ' → logprob: -14.639199256896973

Token 455: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. ',' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.500006675720215
    4. ')' → logprob: -14.625006675720215
    5. '```' → logprob: -15.000006675720215
    6. '   ' → logprob: -16.68750762939453
    7. '
' → logprob: -16.75000762939453
    8. ' ,' → logprob: -17.06250762939453
    9. 'def' → logprob: -17.12500762939453
    10. '),' → logprob: -17.37500762939453

Token 456: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015927258878946304
    2. '():' → logprob: -5.015927314758301
    3. '):
' → logprob: -5.140927314758301
    4. ':' → logprob: -5.890927314758301
    5. '():
' → logprob: -8.0159273147583
    6. '()' → logprob: -8.6409273147583
    7. '   ' → logprob: -11.1409273147583
    8. ')' → logprob: -11.2659273147583
    9. '       ' → logprob: -11.8909273147583
    10. ':
' → logprob: -12.2659273147583

Token 457: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001182052365038544
    2. 'print' → logprob: -9.250118255615234
    3. ' print' → logprob: -11.375118255615234
    4. '           ' → logprob: -11.500118255615234
    5. '
' → logprob: -15.750118255615234
    6. '   ' → logprob: -16.000118255615234
    7. ',' → logprob: -17.000118255615234
    8. '      ' → logprob: -17.375118255615234
    9. '```' → logprob: -17.500118255615234
    10. '     ' → logprob: -18.250118255615234

Token 458: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21829597651958466
    2. 'print' (adapté à ' print') → logprob: -1.718295931816101
    3. ' print' → logprob: -4.218296051025391
    4. '           ' → logprob: -6.218296051025391
    5. '               ' → logprob: -10.96829605102539
    6. '   ' → logprob: -12.21829605102539
    7. '```' → logprob: -13.96829605102539
    8. '	print' → logprob: -14.09329605102539
    9. '(print' → logprob: -15.96829605102539
    10. '     ' → logprob: -15.96829605102539

Token 459: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.750004768371582
    3. 'calculate' → logprob: -13.125004768371582
    4. '(calc' → logprob: -16.1250057220459
    5. '(cal' → logprob: -17.0000057220459
    6. '((' → logprob: -17.2500057220459
    7. ' (' → logprob: -18.0000057220459
    8. '(
' → logprob: -18.2500057220459
    9. ' calculate' → logprob: -18.3750057220459
    10. 'c' → logprob: -19.2500057220459

Token 460: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.0031635798513889313
    2. 'n' → logprob: -6.003163814544678
    3. 'ual' → logprob: -8.12816333770752
    4. 'calculate' → logprob: -9.87816333770752
    5. '/' → logprob: -10.12816333770752
    6. 'nt' → logprob: -10.25316333770752
    7. '[' → logprob: -10.75316333770752
    8. 'alu' → logprob: -10.75316333770752
    9. '```' → logprob: -10.75316333770752
    10. 'aculate' → logprob: -11.00316333770752

Token 461: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -7.517272024415433e-05
    2. 'output' → logprob: -9.500075340270996
    3. 'Output' → logprob: -15.375075340270996
    4. '```' → logprob: -17.12507438659668
    5. '
' → logprob: -18.37507438659668
    6. '_outputs' → logprob: -19.00007438659668
    7. '_' → logprob: -19.87507438659668
    8. '_OUTPUT' → logprob: -19.87507438659668
    9. '_input' → logprob: -19.87507438659668
    10. ' _' → logprob: -20.12507438659668

Token 462: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1756367712223437e-05
    2. 'both' → logprob: -11.375011444091797
    3. 'b' → logprob: -15.375011444091797
    4. 'calculate' → logprob: -18.125011444091797
    5. '```' → logprob: -18.125011444091797
    6. '(b' → logprob: -19.000011444091797
    7. '
' → logprob: -19.500011444091797
    8. 'Both' → logprob: -19.625011444091797
    9. '_c' → logprob: -19.875011444091797
    10. ' both' → logprob: -20.250011444091797

Token 463: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.0005532711511477828
    2. 'both' → logprob: -7.500553131103516
    3. 'other' → logprob: -16.375553131103516
    4. 'othe' → logprob: -16.875553131103516
    5. '
' → logprob: -17.125553131103516
    6. 'ot' → logprob: -17.375553131103516
    7. '

' → logprob: -18.875553131103516
    8. 'o' → logprob: -18.875553131103516
    9. 'Both' → logprob: -18.875553131103516
    10. '0' → logprob: -19.000553131103516

Token 464: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.0002775438770186156
    2. 'length' → logprob: -8.875277519226074
    3. '_length' → logprob: -9.000277519226074
    4. '_more' → logprob: -12.000277519226074
    5. '```' → logprob: -12.125277519226074
    6. '
' → logprob: -13.875277519226074
    7. '_one' → logprob: -14.250277519226074
    8. '_b' → logprob: -15.500277519226074
    9. '-length' → logprob: -15.750277519226074
    10. '_less' → logprob: -15.750277519226074

Token 465: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -1.9385402993066236e-05
    2. 'one' → logprob: -11.000019073486328
    3. '(one' → logprob: -13.500019073486328
    4. 'One' → logprob: -14.000019073486328
    5. '_ONE' → logprob: -15.500019073486328
    6. '_once' → logprob: -16.000019073486328
    7. '```' → logprob: -17.125019073486328
    8. ' one' → logprob: -17.875019073486328
    9. '-one' → logprob: -18.125019073486328
    10. ')' → logprob: -18.375019073486328

Token 466: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.375000953674316
    3. ' (' → logprob: -15.500000953674316
    4. ')(' → logprob: -16.875
    5. ')' → logprob: -17.625
    6. '```' → logprob: -18.5
    7. 'n' → logprob: -18.625
    8. '(
' → logprob: -20.75
    9. ')n' → logprob: -21.625
    10. '\(' → logprob: -22.25

Token 467: '))
' (ID: 2210)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1285085529088974
    2. '())
' → logprob: -2.3785085678100586
    3. ')' → logprob: -3.6285085678100586
    4. ')
' → logprob: -7.128508567810059
    5. '()' → logprob: -8.003508567810059
    6. '())
' → logprob: -9.378508567810059
    7. '(n' → logprob: -9.878508567810059
    8. '   ' → logprob: -10.628508567810059
    9. '())

' → logprob: -11.003508567810059
    10. '))' → logprob: -11.503508567810059

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018935515254270285
    2. 'elif' → logprob: -9.250189781188965
    3. 'else' → logprob: -10.250189781188965
    4. '   ' → logprob: -10.750189781188965
    5. '```' → logprob: -11.000189781188965
    6. ' else' → logprob: -11.625189781188965
    7. '<|end|>' → logprob: -12.125189781188965
    8. ' elif' → logprob: -12.500189781188965
    9. '           ' → logprob: -14.125189781188965
    10. ')' → logprob: -15.500189781188965

Token 469: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25232061743736267
    2. 'else' → logprob: -2.0023205280303955
    3. 'elif' (adapté à ' elif') → logprob: -2.5023205280303955
    4. ' else' → logprob: -5.377320766448975
    5. ' elif' → logprob: -7.252320766448975
    6. '```' → logprob: -7.877320766448975
    7. '   ' → logprob: -8.127320289611816
    8. '           ' → logprob: -10.252320289611816
    9. '
' → logprob: -10.502320289611816
    10. '     ' → logprob: -12.002320289611816

Token 470: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.523129940032959
    2. ' is' → logprob: -0.898129940032959
    3. '(is' → logprob: -12.648130416870117
    4. '   ' → logprob: -13.398130416870117
    5. 'len' → logprob: -14.523130416870117
    6. '	is' → logprob: -15.273130416870117
    7. 'are' → logprob: -15.523130416870117
    8. ' are' → logprob: -15.648130416870117
    9. ' ' → logprob: -15.773130416870117
    10. ' len' → logprob: -15.898130416870117

Token 471: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.896309739408025e-07
    2. 'length' → logprob: -14.250000953674316
    3. '_l' → logprob: -16.625
    4. '_' → logprob: -19.875
    5. '_le' → logprob: -20.25
    6. '_len' → logprob: -20.75
    7. '_lengths' → logprob: -21.0
    8. '_LENGTH' → logprob: -21.125
    9. ' length' → logprob: -21.25
    10. 'Length' → logprob: -21.375

Token 472: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -4.320199877838604e-07
    2. '_once' → logprob: -15.625
    3. 'one' → logprob: -16.875
    4. 'One' → logprob: -17.875
    5. '_ONE' → logprob: -18.25
    6. '```' → logprob: -18.5
    7. '_on' → logprob: -18.625
    8. '_only' → logprob: -18.625
    9. '(one' → logprob: -18.625
    10. '_two' → logprob: -20.125

Token 473: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -12.87500286102295
    3. '(' → logprob: -15.62500286102295
    4. 'c' → logprob: -17.750003814697266
    5. '```' → logprob: -19.750003814697266
    6. ')c' → logprob: -19.875003814697266
    7. '   ' → logprob: -20.000003814697266
    8. '(
' → logprob: -20.250003814697266
    9. ')(' → logprob: -20.375003814697266
    10. '(C' → logprob: -20.500003814697266

Token 474: '1' (ID: 16)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.11015848815441132
    2. '1' → logprob: -2.8601584434509277
    3. 'c' → logprob: -3.1101584434509277
    4. '2' → logprob: -6.235158443450928
    5. ')' → logprob: -8.360158920288086
    6. ')c' → logprob: -9.610158920288086
    7. '   ' → logprob: -9.735158920288086
    8. ')(' → logprob: -10.360158920288086
    9. ',c' → logprob: -10.610158920288086
    10. ' c' → logprob: -11.110158920288086

Token 475: ')' (ID: 8)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.003737491322681308
    2. '):' → logprob: -5.753737449645996
    3. ',' → logprob: -8.003737449645996
    4. '):
' → logprob: -8.628737449645996
    5. ' (' → logprob: -10.753737449645996
    6. ')' → logprob: -11.253737449645996
    7. '(' → logprob: -12.753737449645996
    8. ':' → logprob: -13.128737449645996
    9. ')(' → logprob: -13.628737449645996
    10. ')c' → logprob: -13.628737449645996

Token 476: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5846922993659973
    2. '(c' → logprob: -0.8346922993659973
    3. ':
' → logprob: -5.334692478179932
    4. ' and' → logprob: -6.834692478179932
    5. 'and' → logprob: -7.459692478179932
    6. '(' → logprob: -7.584692478179932
    7. '):' → logprob: -7.959692478179932
    8. '       ' → logprob: -8.459692001342773
    9. '(n' → logprob: -8.459692001342773
    10. '   ' → logprob: -8.584692001342773

Token 477: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.10065776854753494
    2. 'not' → logprob: -2.4756577014923096
    3. ' not' → logprob: -5.100657939910889
    4. ' is' → logprob: -5.350657939910889
    5. 'len' → logprob: -7.475657939910889
    6. 'get' → logprob: -9.22565746307373
    7. 'True' → logprob: -9.47565746307373
    8. '(is' → logprob: -11.10065746307373
    9. 'print' → logprob: -11.47565746307373
    10. ' len' → logprob: -11.60065746307373

Token 478: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0013332172529771924
    2. ' is' → logprob: -6.626333236694336
    3. '(is' → logprob: -11.876333236694336
    4. 'len' → logprob: -15.626333236694336
    5. ' ' → logprob: -17.626333236694336
    6. 'are' → logprob: -18.001333236694336
    7. '	is' → logprob: -18.001333236694336
    8. '(' → logprob: -18.126333236694336
    9. '
' → logprob: -18.126333236694336
    10. '   ' → logprob: -18.376333236694336

Token 479: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00014048899174667895
    2. 'length' → logprob: -8.875140190124512
    3. 'is' → logprob: -14.750140190124512
    4. 'Length' → logprob: -16.375141143798828
    5. ' length' → logprob: -18.000141143798828
    6. '_is' → logprob: -18.250141143798828
    7. 'ength' → logprob: -18.250141143798828
    8. '_l' → logprob: -18.500141143798828
    9. '(is' → logprob: -18.625141143798828
    10. '```' → logprob: -18.625141143798828

Token 480: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0004354373668320477
    2. '(c' → logprob: -8.500435829162598
    3. 'One' → logprob: -9.000435829162598
    4. 'one' → logprob: -9.375435829162598
    5. '(len' → logprob: -11.625435829162598
    6. '(one' → logprob: -11.750435829162598
    7. '1' → logprob: -12.500435829162598
    8. '_ONE' → logprob: -14.000435829162598
    9. '(' → logprob: -14.625435829162598
    10. '_' → logprob: -14.875435829162598

Token 481: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.87501049041748
    3. ' (' → logprob: -12.62501049041748
    4. '(
' → logprob: -15.62501049041748
    5. '```' → logprob: -17.125011444091797
    6. 'c' → logprob: -17.875011444091797
    7. '(s' → logprob: -19.000011444091797
    8. '(com' → logprob: -19.250011444091797
    9. '((' → logprob: -19.250011444091797
    10. '(code' → logprob: -19.375011444091797

Token 482: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004690418136306107
    2. '(c' → logprob: -7.750469207763672
    3. 'c' → logprob: -10.250469207763672
    4. '1' → logprob: -14.000469207763672
    5. '[c' → logprob: -14.125469207763672
    6. '
' → logprob: -14.875469207763672
    7. ')' → logprob: -15.000469207763672
    8. ')c' → logprob: -15.125469207763672
    9. '   ' → logprob: -16.875469207763672
    10. '```' → logprob: -17.000469207763672

Token 483: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1080443263053894
    2. ':' → logprob: -2.608044385910034
    3. '():' → logprob: -4.358044147491455
    4. '(' → logprob: -4.608044147491455
    5. '(c' → logprob: -5.358044147491455
    6. '):
' → logprob: -7.483044147491455
    7. ' ):' → logprob: -8.733044624328613
    8. '(n' → logprob: -9.108044624328613
    9. '   ' → logprob: -9.108044624328613
    10. '():
' → logprob: -9.358044624328613

Token 484: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05278807505965233
    2. '           ' → logprob: -3.552788019180298
    3. 'print' → logprob: -4.677788257598877
    4. ' print' → logprob: -5.052788257598877
    5. ':' → logprob: -5.177788257598877
    6. '(print' → logprob: -7.427788257598877
    7. ':
' → logprob: -8.052787780761719
    8. '```' → logprob: -8.677787780761719
    9. '   ' → logprob: -9.052787780761719
    10. '(' → logprob: -9.927787780761719

Token 485: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18359407782554626
    2. ' print' → logprob: -1.9335941076278687
    3. '       ' → logprob: -3.808593988418579
    4. '           ' → logprob: -7.433594226837158
    5. '(print' → logprob: -8.68359375
    6. '   ' → logprob: -9.18359375
    7. '```' → logprob: -10.05859375
    8. '	print' → logprob: -12.30859375
    9. '(' → logprob: -13.05859375
    10. '               ' → logprob: -13.18359375

Token 486: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.750004768371582
    3. 'calculate' → logprob: -13.875004768371582
    4. '(calc' → logprob: -14.250004768371582
    5. '(cal' → logprob: -14.625004768371582
    6. ' calculate' → logprob: -16.6250057220459
    7. '(
' → logprob: -17.3750057220459
    8. ' (' → logprob: -17.3750057220459
    9. '(C' → logprob: -18.8750057220459
    10. 'c' → logprob: -19.2500057220459

Token 487: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.00036502102739177644
    2. 'calculate' → logprob: -8.375365257263184
    3. '(c' → logprob: -9.375365257263184
    4. 'alc' → logprob: -10.625365257263184
    5. 'al' → logprob: -10.750365257263184
    6. 'culate' → logprob: -12.875365257263184
    7. 'alu' → logprob: -14.875365257263184
    8. 'aculate' → logprob: -15.000365257263184
    9. 'ulate' → logprob: -15.625365257263184
    10. 'c' → logprob: -15.875365257263184

Token 488: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -9.662937372922897e-05
    2. 'output' → logprob: -9.250096321105957
    3. 'Output' → logprob: -15.125096321105957
    4. 'calculate' → logprob: -16.000097274780273
    5. '_' → logprob: -17.625097274780273
    6. '```' → logprob: -17.875097274780273
    7. '(c' → logprob: -18.000097274780273
    8. '_out' → logprob: -18.625097274780273
    9. '``' → logprob: -18.750097274780273
    10. 'c' → logprob: -18.750097274780273

Token 489: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.842555426876061e-06
    2. 'c' → logprob: -12.250004768371582
    3. '```' → logprob: -18.3750057220459
    4. '(c' → logprob: -20.5000057220459
    5. 'C' → logprob: -20.5000057220459
    6. '_' → logprob: -20.7500057220459
    7. '	c' → logprob: -20.7500057220459
    8. ' c' → logprob: -20.8750057220459
    9. 's' → logprob: -21.1250057220459
    10. 'calculate' → logprob: -21.2500057220459

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016146517009474337
    2. '2' → logprob: -8.750161170959473
    3. 'c' → logprob: -13.875161170959473
    4. '_one' → logprob: -14.812661170959473
    5. 'one' → logprob: -14.937661170959473
    6. 'alculate' → logprob: -14.937661170959473
    7. '_c' → logprob: -16.12516212463379
    8. 'l' → logprob: -16.18766212463379
    9. 's' → logprob: -16.25016212463379
    10. '１' → logprob: -16.37516212463379

Token 491: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: 0.0
    2. '_ONE' → logprob: -17.75
    3. '_two' → logprob: -18.375
    4. '_once' → logprob: -18.375
    5. '_more' → logprob: -19.125
    6. '_' → logprob: -19.375
    7. '_on' → logprob: -19.375
    8. '_o' → logprob: -19.625
    9. '```' → logprob: -20.5
    10. '
' → logprob: -20.5

Token 492: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -16.750001907348633
    4. ')' → logprob: -17.875001907348633
    5. '```' → logprob: -18.000001907348633
    6. ')(' → logprob: -18.375001907348633
    7. '   ' → logprob: -20.000001907348633
    8. '(
' → logprob: -20.000001907348633
    9. ' ' → logprob: -21.000001907348633
    10. 'n' → logprob: -22.500001907348633

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005197895807214081
    2. ',c' → logprob: -7.625519752502441
    3. ' ,' → logprob: -10.375519752502441
    4. ',
' → logprob: -15.250519752502441
    5. 'c' → logprob: -16.500520706176758
    6. '   ' → logprob: -16.500520706176758
    7. '(c' → logprob: -17.000520706176758
    8. ')' → logprob: -17.625520706176758
    9. ' c' → logprob: -18.500520706176758
    10. '           ' → logprob: -18.875520706176758

Token 494: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009115827269852161
    2. ' c' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.250911712646484
    4. 'cc' → logprob: -18.125911712646484
    5. ')c' → logprob: -18.625911712646484
    6. '    ' → logprob: -19.250911712646484
    7. '	c' → logprob: -19.750911712646484
    8. '  ' → logprob: -20.875911712646484
    9. ' ' → logprob: -21.000911712646484
    10. '$c' → logprob: -21.625911712646484

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003035266126971692
    2. '2' → logprob: -8.125303268432617
    3. 'c' → logprob: -12.375303268432617
    4. ',' → logprob: -14.000303268432617
    5. ' ' → logprob: -14.125303268432617
    6. '```' → logprob: -14.500303268432617
    7. '   ' → logprob: -15.062803268432617
    8. ' c' → logprob: -15.187803268432617
    9. ')' → logprob: -16.187803268432617
    10. '
' → logprob: -16.812803268432617

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003351782448589802
    2. ',c' → logprob: -5.75335168838501
    3. ' ,' → logprob: -8.878352165222168
    4. 'c' → logprob: -10.378352165222168
    5. ' c' → logprob: -13.128352165222168
    6. '   ' → logprob: -13.503352165222168
    7. ',
' → logprob: -16.75335121154785
    8. '  ' → logprob: -17.37835121154785
    9. '    ' → logprob: -17.75335121154785
    10. '‌,' → logprob: -17.75335121154785

Token 497: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004078997299075127
    2. ' c' → logprob: -5.5040788650512695
    3. '   ' → logprob: -14.87907886505127
    4. ' ' → logprob: -16.629079818725586
    5. '  ' → logprob: -16.629079818725586
    6. '	c' → logprob: -17.254079818725586
    7. '    ' → logprob: -17.379079818725586
    8. ')c' → logprob: -17.754079818725586
    9. 'cc' → logprob: -17.879079818725586
    10. '     ' → logprob: -19.379079818725586

Token 498: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'c' → logprob: -17.875
    3. '۲' → logprob: -18.0
    4. ' ' → logprob: -18.125
    5. '２' → logprob: -18.625
    6. '₂' → logprob: -19.75
    7. ')' → logprob: -19.875
    8. '```' → logprob: -19.875
    9. '२' → logprob: -20.125
    10. '   ' → logprob: -20.125

Token 499: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.24147531390190125
    2. ')' → logprob: -1.7414753437042236
    3. '))
' → logprob: -3.2414753437042236
    4. ')
' → logprob: -8.991475105285645
    5. '   ' → logprob: -10.366475105285645
    6. '))
' → logprob: -12.616475105285645
    7. '))

' → logprob: -12.866475105285645
    8. ' ' → logprob: -14.241475105285645
    9. ')))' → logprob: -14.241475105285645
    10. '       ' → logprob: -15.491475105285645

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005096645909361541
    2. 'else' → logprob: -8.000509262084961
    3. 'elif' → logprob: -9.250509262084961
    4. '   ' → logprob: -9.875509262084961
    5. ' else' → logprob: -10.750509262084961
    6. ' elif' → logprob: -12.875509262084961
    7. '
' → logprob: -14.125509262084961
    8. '    
' → logprob: -14.375509262084961
    9. ')' → logprob: -14.750509262084961
    10. '```' → logprob: -14.875509262084961

Token 501: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02867412380874157
    2. 'else' → logprob: -3.9036741256713867
    3. 'elif' (adapté à ' elif') → logprob: -5.153674125671387
    4. ' else' → logprob: -6.153674125671387
    5. ' elif' → logprob: -8.653674125671387
    6. '   ' → logprob: -11.028674125671387
    7. '```' → logprob: -13.278674125671387
    8. '
' → logprob: -13.403674125671387
    9. '	' → logprob: -15.278674125671387
    10. ' ' → logprob: -15.403674125671387

Token 502: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14215831458568573
    2. 'is' → logprob: -2.267158269882202
    3. ' not' → logprob: -3.892158269882202
    4. 'not' → logprob: -4.767158508300781
    5. '(is' → logprob: -12.892158508300781
    6. '   ' → logprob: -14.517158508300781
    7. '	is' → logprob: -15.142158508300781
    8. '(not' → logprob: -15.142158508300781
    9. ' ' → logprob: -15.517158508300781
    10. '_is' → logprob: -16.64215850830078

Token 503: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.2664456789934775e-06
    2. 'length' → logprob: -13.875000953674316
    3. '_' → logprob: -15.875000953674316
    4. '_l' → logprob: -16.875001907348633
    5. '```' → logprob: -18.750001907348633
    6. '\' → logprob: -19.375001907348633
    7. ' _' → logprob: -19.875001907348633
    8. '_LENGTH' → logprob: -20.000001907348633
    9. 'not' → logprob: -20.000001907348633
    10. '_lengths' → logprob: -20.125001907348633

Token 504: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -6.704273118884885e-07
    2. 'one' → logprob: -15.125000953674316
    3. '_only' → logprob: -16.625
    4. '_two' → logprob: -16.625
    5. '_none' → logprob: -16.875
    6. '1' → logprob: -17.375
    7. '_' → logprob: -17.375
    8. '_once' → logprob: -17.875
    9. '_not' → logprob: -17.875
    10. 'One' → logprob: -17.875

Token 505: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -13.750000953674316
    3. '(' → logprob: -17.750001907348633
    4. 'c' → logprob: -18.250001907348633
    5. '(
' → logprob: -19.250001907348633
    6. '(not' → logprob: -19.250001907348633
    7. '(C' → logprob: -19.375001907348633
    8. '```' → logprob: -19.625001907348633
    9. '(s' → logprob: -20.875001907348633
    10. '(com' → logprob: -21.250001907348633

Token 506: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002222516923211515
    2. '(c' → logprob: -8.625222206115723
    3. 'c' → logprob: -10.125222206115723
    4. ')' → logprob: -14.250222206115723
    5. ')c' → logprob: -14.875222206115723
    6. '1' → logprob: -15.000222206115723
    7. '[c' → logprob: -15.125222206115723
    8. '   ' → logprob: -15.250222206115723
    9. '```' → logprob: -15.375222206115723
    10. ' ' → logprob: -15.375222206115723

Token 507: ')' (ID: 8)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08898603171110153
    2. '(c' → logprob: -2.5889859199523926
    3. ')' → logprob: -4.963985919952393
    4. '(' → logprob: -6.463985919952393
    5. ',' → logprob: -7.713985919952393
    6. ' (' → logprob: -8.21398639678955
    7. 'and' → logprob: -8.71398639678955
    8. ' and' → logprob: -8.71398639678955
    9. ')(' → logprob: -9.08898639678955
    10. 'c' → logprob: -9.21398639678955

Token 508: ' and' (ID: 326)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.206621453166008
    2. ' and' → logprob: -1.7066214084625244
    3. 'and' → logprob: -5.4566216468811035
    4. '(' → logprob: -7.3316216468811035
    5. ' (' → logprob: -8.331621170043945
    6. '==' → logprob: -11.081621170043945
    7. '   ' → logprob: -12.581621170043945
    8. ',' → logprob: -13.081621170043945
    9. '(not' → logprob: -13.081621170043945
    10. '```' → logprob: -13.456621170043945

Token 509: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0788998156785965
    2. ' not' → logprob: -2.57889986038208
    3. '(not' → logprob: -11.578899383544922
    4. '   ' → logprob: -14.828899383544922
    5. '       ' → logprob: -16.453899383544922
    6. '           ' → logprob: -16.828899383544922
    7. '	not' → logprob: -16.828899383544922
    8. '
' → logprob: -18.078899383544922
    9. 'is' → logprob: -18.453899383544922
    10. '```' → logprob: -18.453899383544922

Token 510: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.1689596148207784e-05
    2. ' is' → logprob: -10.000051498413086
    3. '(is' → logprob: -12.000051498413086
    4. ')is' → logprob: -19.875051498413086
    5. '_is' → logprob: -20.000051498413086
    6. '.is' → logprob: -20.375051498413086
    7. '	is' → logprob: -20.875051498413086
    8. '(' → logprob: -21.250051498413086
    9. '```' → logprob: -21.750051498413086
    10. '"is' → logprob: -22.000051498413086

Token 511: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.0339031834737398e-05
    2. 'length' → logprob: -11.125020027160645
    3. 'is' → logprob: -12.125020027160645
    4. 'Length' → logprob: -17.75002098083496
    5. '_LENGTH' → logprob: -18.00002098083496
    6. '(is' → logprob: -18.50002098083496
    7. ' length' → logprob: -18.87502098083496
    8. ' is' → logprob: -19.25002098083496
    9. '_lengths' → logprob: -19.25002098083496
    10. '```' → logprob: -19.37502098083496

Token 512: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.00013250234769657254
    2. 'one' → logprob: -9.37513256072998
    3. '_length' → logprob: -10.12513256072998
    4. 'One' → logprob: -12.00013256072998
    5. 'is' → logprob: -15.12513256072998
    6. '_' → logprob: -15.75013256072998
    7. '1' → logprob: -15.75013256072998
    8. '(one' → logprob: -15.87513256072998
    9. '```' → logprob: -16.000131607055664
    10. '_ONE' → logprob: -16.125131607055664

Token 513: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.896309739408025e-07
    2. 'c' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.250000953674316
    4. '```' → logprob: -16.75
    5. '(' → logprob: -18.625
    6. '(
' → logprob: -19.5
    7. '   ' → logprob: -20.25
    8. ')c' → logprob: -20.5
    9. '	c' → logprob: -21.0
    10. '(C' → logprob: -21.0

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. 'c' → logprob: -13.25000286102295
    3. '2' → logprob: -15.12500286102295
    4. '(' → logprob: -15.62500286102295
    5. '```' → logprob: -15.87500286102295
    6. ')' → logprob: -16.500001907348633
    7. '(c' → logprob: -16.687501907348633
    8. '
' → logprob: -17.062501907348633
    9. ' c' → logprob: -17.500001907348633
    10. 's' → logprob: -17.625001907348633

Token 515: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027240507304668427
    2. '):
' → logprob: -3.902240514755249
    3. '(c' → logprob: -5.40224027633667
    4. ':' → logprob: -6.90224027633667
    5. '   ' → logprob: -7.15224027633667
    6. '       ' → logprob: -9.027240753173828
    7. ')' → logprob: -9.152240753173828
    8. '(n' → logprob: -9.527240753173828
    9. '(' → logprob: -11.152240753173828
    10. '):

' → logprob: -11.277240753173828

Token 516: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01647699438035488
    2. '           ' → logprob: -4.391477108001709
    3. 'print' → logprob: -6.266477108001709
    4. ' print' → logprob: -6.516477108001709
    5. '(' → logprob: -8.64147663116455
    6. '(print' → logprob: -9.01647663116455
    7. '   ' → logprob: -9.26647663116455
    8. '```' → logprob: -10.39147663116455
    9. '               ' → logprob: -10.51647663116455
    10. ':' → logprob: -11.01647663116455

Token 517: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0036032749339938164
    2. '           ' → logprob: -6.253603458404541
    3. ' print' → logprob: -6.503603458404541
    4. '       ' → logprob: -9.003602981567383
    5. '(print' → logprob: -10.503602981567383
    6. '   ' → logprob: -11.003602981567383
    7. '               ' → logprob: -12.878602981567383
    8. '```' → logprob: -13.003602981567383
    9. 'calculate' → logprob: -14.003602981567383
    10. '          ' → logprob: -14.253602981567383

Token 518: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.226628895296017e-06
    2. 'calculate' → logprob: -11.875007629394531
    3. 'c' → logprob: -16.25000762939453
    4. '```' → logprob: -17.25000762939453
    5. '(print' → logprob: -17.25000762939453
    6. '	c' → logprob: -17.75000762939453
    7. '(
' → logprob: -18.00000762939453
    8. ' (' → logprob: -18.25000762939453
    9. '(' → logprob: -18.62500762939453
    10. 'alculate' → logprob: -18.75000762939453

Token 519: 'alculate' (ID: 80190)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.38800397515296936
    2. 'alculate' → logprob: -1.138003945350647
    3. '(c' → logprob: -7.263003826141357
    4. '_cal' → logprob: -8.263004302978516
    5. 'c' → logprob: -10.013004302978516
    6. 'culate' → logprob: -10.138004302978516
    7. '.calculate' → logprob: -11.138004302978516
    8. 't' → logprob: -11.138004302978516
    9. '_c' → logprob: -11.513004302978516
    10. 'al' → logprob: -11.638004302978516

Token 520: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -2.570319702499546e-05
    2. 'output' → logprob: -10.625025749206543
    3. 'calculate' → logprob: -13.875025749206543
    4. 'Output' → logprob: -15.125025749206543
    5. '```' → logprob: -17.500024795532227
    6. 'OUTPUT' → logprob: -17.750024795532227
    7. '-output' → logprob: -18.375024795532227
    8. '_OUTPUT' → logprob: -18.375024795532227
    9. 'print' → logprob: -18.500024795532227
    10. '_outputs' → logprob: -18.750024795532227

Token 521: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.4121114822482923e-06
    2. '_one' → logprob: -13.375003814697266
    3. '(n' → logprob: -13.875003814697266
    4. '(c' → logprob: -15.000003814697266
    5. '```' → logprob: -15.625003814697266
    6. 'c' → logprob: -16.375003814697266
    7. '__' → logprob: -16.375003814697266
    8. '(' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '_' → logprob: -17.750003814697266

Token 522: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.286852345103398e-05
    2. '2' → logprob: -10.125042915344238
    3. '```' → logprob: -14.500042915344238
    4. '_' → logprob: -14.875042915344238
    5. 'c' → logprob: -15.000042915344238
    6. 'one' → logprob: -15.125042915344238
    7. '(' → logprob: -15.375042915344238
    8. '_one' → logprob: -15.500042915344238
    9. 'def' → logprob: -15.625042915344238
    10. ')' → logprob: -16.000041961669922

Token 523: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -6.2729995988775045e-06
    2. '_o' → logprob: -12.500006675720215
    3. '_c' → logprob: -13.625006675720215
    4. '_on' → logprob: -14.500006675720215
    5. '_ONE' → logprob: -14.750006675720215
    6. 'One' → logprob: -16.1250057220459
    7. '_two' → logprob: -16.2500057220459
    8. 'one' → logprob: -16.2500057220459
    9. '(one' → logprob: -17.0000057220459
    10. '_once' → logprob: -17.0000057220459

Token 524: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.625001907348633
    4. 'n' → logprob: -17.375001907348633
    5. ')' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. ')(' → logprob: -18.375001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '           ' → logprob: -20.750001907348633

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.845798710244708e-05
    2. ',c' → logprob: -11.125038146972656
    3. '(n' → logprob: -11.375038146972656
    4. ' ,' → logprob: -12.250038146972656
    5. ',n' → logprob: -12.250038146972656
    6. ')' → logprob: -13.875038146972656
    7. 'c' → logprob: -14.250038146972656
    8. '(c' → logprob: -14.875038146972656
    9. '(' → logprob: -14.875038146972656
    10. ',
' → logprob: -16.375038146972656

Token 526: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01112292055040598
    2. 'c' → logprob: -4.511122703552246
    3. ' n' → logprob: -9.511122703552246
    4. ' c' → logprob: -14.136122703552246
    5. '(n' → logprob: -15.386122703552246
    6. '   ' → logprob: -16.136123657226562
    7. '	n' → logprob: -17.511123657226562
    8. '```' → logprob: -18.386123657226562
    9. '       ' → logprob: -18.511123657226562
    10. ')' → logprob: -18.636123657226562

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.244413766078651e-05
    2. '2' → logprob: -9.500082015991211
    3. 'c' → logprob: -12.625082015991211
    4. ')' → logprob: -13.625082015991211
    5. '```' → logprob: -14.375082015991211
    6. ' ' → logprob: -14.750082015991211
    7. 's' → logprob: -15.125082015991211
    8. '
' → logprob: -15.312582015991211
    9. 'l' → logprob: -15.437582015991211
    10. ')
' → logprob: -15.750082015991211

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000639765290543437
    2. ',c' → logprob: -7.375639915466309
    3. ' ,' → logprob: -11.375639915466309
    4. 'c' → logprob: -13.875639915466309
    5. ',
' → logprob: -14.375639915466309
    6. ',n' → logprob: -16.750638961791992
    7. ' c' → logprob: -18.250638961791992
    8. '   ' → logprob: -18.250638961791992
    9. ',v' → logprob: -18.875638961791992
    10. ')' → logprob: -19.000638961791992

Token 529: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007100477814674377
    2. ' c' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.625709533691406
    4. '	c' → logprob: -18.250709533691406
    5. ')c' → logprob: -19.625709533691406
    6. '  ' → logprob: -20.000709533691406
    7. ' ' → logprob: -20.000709533691406
    8. '    ' → logprob: -20.000709533691406
    9. '$c' → logprob: -20.500709533691406
    10. '       ' → logprob: -20.750709533691406

Token 530: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ')' → logprob: -13.125004768371582
    3. ',' → logprob: -13.125004768371582
    4. '```' → logprob: -14.375004768371582
    5. '),' → logprob: -15.875004768371582
    6. '))' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.3750057220459
    8. ' ' → logprob: -16.8750057220459
    9. '[' → logprob: -17.0000057220459
    10. 'c' → logprob: -17.2500057220459

Token 531: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049206171184778214
    2. ')
' → logprob: -3.049206256866455
    3. '):
' → logprob: -7.799206256866455
    4. '):' → logprob: -9.299205780029297
    5. '   ' → logprob: -9.549205780029297
    6. '       ' → logprob: -10.799205780029297
    7. '))' → logprob: -11.299205780029297
    8. ')
' → logprob: -11.924205780029297
    9. '))
' → logprob: -13.049205780029297
    10. ')

' → logprob: -14.174205780029297

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03980701416730881
    2. 'else' → logprob: -3.414807081222534
    3. ' else' → logprob: -5.789806842803955
    4. '   ' → logprob: -5.789806842803955
    5. '```' → logprob: -11.914807319641113
    6. '<|end|>' → logprob: -12.414807319641113
    7. 'elif' → logprob: -12.539807319641113
    8. '	' → logprob: -12.664807319641113
    9. '	else' → logprob: -12.914807319641113
    10. '           ' → logprob: -13.789807319641113

Token 533: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0591721273958683
    2. '       ' → logprob: -3.0591721534729004
    3. ' else' → logprob: -4.5591721534729
    4. '   ' → logprob: -9.809171676635742
    5. '           ' → logprob: -14.309171676635742
    6. '```' → logprob: -14.434171676635742
    7. '	else' → logprob: -14.809171676635742
    8. '     ' → logprob: -15.059171676635742
    9. '      ' → logprob: -15.184171676635742
    10. 'elif' → logprob: -15.309171676635742

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048980649560689926
    2. ':
' → logprob: -3.048980712890625
    3. '       ' → logprob: -7.923980712890625
    4. '           ' → logprob: -10.798980712890625
    5. '):' → logprob: -13.048980712890625
    6. '   ' → logprob: -13.673980712890625
    7. 'print' → logprob: -13.798980712890625
    8. '(' → logprob: -13.923980712890625
    9. ':
' → logprob: -13.923980712890625
    10. '{' → logprob: -14.298980712890625

Token 535: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006304710987024009
    2. 'print' → logprob: -7.5006303787231445
    3. ' print' → logprob: -9.625630378723145
    4. '           ' → logprob: -12.000630378723145
    5. '   ' → logprob: -12.750630378723145
    6. '```' → logprob: -13.250630378723145
    7. '      ' → logprob: -15.375630378723145
    8. '(print' → logprob: -16.00063133239746
    9. '     ' → logprob: -16.37563133239746
    10. '(' → logprob: -16.75063133239746

Token 536: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0445127372804563e-05
    2. ' print' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.87501049041748
    4. '       ' → logprob: -16.875009536743164
    5. '           ' → logprob: -17.125009536743164
    6. '```' → logprob: -19.750009536743164
    7. '(print' → logprob: -19.875009536743164
    8. 'calculate' → logprob: -21.125009536743164
    9. ' ' → logprob: -21.250009536743164
    10. '	print' → logprob: -21.500009536743164

Token 537: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.375004768371582
    3. '(
' → logprob: -14.625004768371582
    4. 'calculate' → logprob: -16.1250057220459
    5. '(calc' → logprob: -17.8750057220459
    6. '(C' → logprob: -18.2500057220459
    7. '(cal' → logprob: -18.8750057220459
    8. ' (' → logprob: -19.1250057220459
    9. ' calculate' → logprob: -20.0000057220459
    10. 'c' → logprob: -20.2500057220459

Token 538: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.0006604921072721481
    2. '(c' → logprob: -7.875660419464111
    3. 'calculate' → logprob: -8.87566089630127
    4. 'al' → logprob: -9.25066089630127
    5. 'alc' → logprob: -10.75066089630127
    6. '_al' → logprob: -11.37566089630127
    7. '_cal' → logprob: -12.50066089630127
    8. 'culate' → logprob: -13.12566089630127
    9. 'aculate' → logprob: -13.62566089630127
    10. '(al' → logprob: -13.75066089630127

Token 539: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -4.842555426876061e-06
    2. 'output' → logprob: -12.250004768371582
    3. '```' → logprob: -18.2500057220459
    4. 'Output' → logprob: -18.8750057220459
    5. '"_' → logprob: -19.2500057220459
    6. '_out' → logprob: -19.3750057220459
    7. '   ' → logprob: -19.7500057220459
    8. '_outputs' → logprob: -19.7500057220459
    9. '_input' → logprob: -20.1250057220459
    10. 'calculate' → logprob: -20.6250057220459

Token 540: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1756367712223437e-05
    2. '_c' → logprob: -11.625011444091797
    3. 'both' → logprob: -13.625011444091797
    4. '_more' → logprob: -13.625011444091797
    5. 'b' → logprob: -16.250011444091797
    6. '```' → logprob: -16.500011444091797
    7. '_B' → logprob: -18.000011444091797
    8. 'Both' → logprob: -18.125011444091797
    9. 's' → logprob: -18.500011444091797
    10. '_multiple' → logprob: -18.625011444091797

Token 541: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -1.8624639324116288e-06
    2. 'both' → logprob: -13.250001907348633
    3. 'other' → logprob: -18.875001907348633
    4. 'othe' → logprob: -20.625001907348633
    5. 'othesis' → logprob: -20.875001907348633
    6. ' oth' → logprob: -21.125001907348633
    7. 'oths' → logprob: -21.250001907348633
    8. 'ot' → logprob: -21.625001907348633
    9. '```' → logprob: -22.000001907348633
    10. '>' → logprob: -22.375001907348633

Token 542: '_more' (ID: 86501)
  Prédit: '_more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_more' → logprob: -1.0280383548888494e-06
    2. 'more' → logprob: -14.000000953674316
    3. '_m' → logprob: -15.750000953674316
    4. '```' → logprob: -17.000001907348633
    5. '_MORE' → logprob: -18.625001907348633
    6. 's' → logprob: -19.000001907348633
    7. 'More' → logprob: -19.500001907348633
    8. ' _' → logprob: -19.625001907348633
    9. ' more' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.750001907348633

Token 543: '_than' (ID: 134758)
  Prédit: '_than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.006728279870003462
    2. '_more' → logprob: -5.006728172302246
    3. '_th' → logprob: -13.006728172302246
    4. 'than' → logprob: -13.131728172302246
    5. '_length' → logprob: -13.756728172302246
    6. '_elements' → logprob: -13.756728172302246
    7. '_b' → logprob: -14.006728172302246
    8. '_count' → logprob: -14.131728172302246
    9. '_less' → logprob: -14.131728172302246
    10. '_lengths' → logprob: -14.506728172302246

Token 544: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0003074566484428942
    2. 'one' → logprob: -8.125307083129883
    3. 'One' → logprob: -12.125307083129883
    4. '(one' → logprob: -13.750307083129883
    5. '```' → logprob: -13.875307083129883
    6. '_once' → logprob: -14.000307083129883
    7. ' one' → logprob: -14.000307083129883
    8. '_more' → logprob: -14.625307083129883
    9. '1' → logprob: -14.750307083129883
    10. ')' → logprob: -14.750307083129883

Token 545: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.822646693966817e-06
    2. ')' → logprob: -12.000007629394531
    3. ' (' → logprob: -14.000007629394531
    4. ')(' → logprob: -14.750007629394531
    5. '(' → logprob: -15.500007629394531
    6. ')
' → logprob: -15.750007629394531
    7. '```' → logprob: -16.87500762939453
    8. '   ' → logprob: -18.12500762939453
    9. 'n' → logprob: -19.75000762939453
    10. '(
' → logprob: -20.00000762939453

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024321437813341618
    2. ',c' → logprob: -7.127432346343994
    3. '))' → logprob: -7.252432346343994
    4. '   ' → logprob: -7.752432346343994
    5. ' ,' → logprob: -7.877432346343994
    6. ')' → logprob: -9.877431869506836
    7. '))
' → logprob: -11.252431869506836
    8. ',
' → logprob: -11.502431869506836
    9. '  ' → logprob: -12.127431869506836
    10. 'c' → logprob: -12.252431869506836

Token 547: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014175730757415295
    2. ' c' → logprob: -4.264175891876221
    3. 'cc' → logprob: -11.389175415039062
    4. '   ' → logprob: -14.639175415039062
    5. ')c' → logprob: -15.389175415039062
    6. ' cc' → logprob: -16.139175415039062
    7. '       ' → logprob: -17.389175415039062
    8. '	c' → logprob: -17.389175415039062
    9. ' ' → logprob: -17.389175415039062
    10. ')' → logprob: -17.514175415039062

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023607931507285684
    2. '2' → logprob: -8.375236511230469
    3. ',' → logprob: -12.750236511230469
    4. ')' → logprob: -14.625236511230469
    5. '[' → logprob: -14.625236511230469
    6. ' ' → logprob: -14.750236511230469
    7. 'c' → logprob: -14.875236511230469
    8. '```' → logprob: -15.375236511230469
    9. '))' → logprob: -15.750236511230469
    10. '   ' → logprob: -15.875236511230469

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015181333583313972
    2. ',c' → logprob: -8.875151634216309
    3. ' ,' → logprob: -11.500151634216309
    4. '   ' → logprob: -14.000151634216309
    5. ',
' → logprob: -14.250151634216309
    6. 'c' → logprob: -15.375151634216309
    7. '[' → logprob: -18.125152587890625
    8. '```' → logprob: -18.375152587890625
    9. '  ' → logprob: -18.750152587890625
    10. '‌,' → logprob: -18.750152587890625

Token 550: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00029708960209973156
    2. ' c' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.125297546386719
    4. '  ' → logprob: -16.75029754638672
    5. '    ' → logprob: -17.37529754638672
    6. 'cc' → logprob: -17.37529754638672
    7. '	c' → logprob: -17.87529754638672
    8. ')c' → logprob: -17.87529754638672
    9. '     ' → logprob: -18.00029754638672
    10. '       ' → logprob: -18.00029754638672

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. 'c' → logprob: -15.125000953674316
    3. '[' → logprob: -15.750000953674316
    4. ' ' → logprob: -16.25
    5. '```' → logprob: -16.625
    6. '))' → logprob: -16.75
    7. '   ' → logprob: -17.5
    8. '۲' → logprob: -18.0
    9. '
' → logprob: -18.125
    10. ',' → logprob: -18.375

Token 552: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007352970424108207
    2. '))
' → logprob: -7.875735282897949
    3. ')' → logprob: -8.00073528289795
    4. '   ' → logprob: -11.00073528289795
    5. ')))' → logprob: -13.37573528289795
    6. ')
' → logprob: -14.37573528289795
    7. '       ' → logprob: -14.75073528289795
    8. ' ' → logprob: -15.00073528289795
    9. '()))' → logprob: -15.62573528289795
    10. ' ))' → logprob: -15.87573528289795

Token 553: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019653895869851112
    2. '(' → logprob: -6.251965522766113
    3. '()
' → logprob: -10.626965522766113
    4. '#' → logprob: -13.001965522766113
    5. '()`' → logprob: -13.126965522766113
    6. '(
' → logprob: -13.251965522766113
    7. '()

' → logprob: -13.501965522766113
    8. '();' → logprob: -13.626965522766113
    9. ' ()' → logprob: -14.126965522766113
    10. '()<' → logprob: -14.751965522766113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 552
Tokens correctement prédits (1ère position, stricte): 310
Tokens correctement prédits (1ère position, avec adaptation): 330
Tokens correctement prédits (top 10): 494
Précision stricte (1ère position): 56.16%
Précision adaptée (1ère position): 59.78%
Précision (top 10): 89.49%
================================================================================
