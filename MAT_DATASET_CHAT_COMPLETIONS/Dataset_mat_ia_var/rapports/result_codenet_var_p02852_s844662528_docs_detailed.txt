================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Main function to solve the shortest path problem described.
    Given a board of N squares (with some blocked), determine the sequence
    of dice rolls (1-M per move) that moves a player from start to finish in
    the smallest number of moves, ensuring lexicographically smallest for ties.
    Greedy approach is applied backward from the goal.
    """
    # Read two integers, N (number of spaces) and M (max dice value per move)
    N, M = map(int, input().split())
    # Read the string S (path) and reverse it (so goal is S[0], start S[N])
    S = input()[::-1]

    # List to store moves made (in reverse order, from goal backward)
    ans = []
    # Current position; start from the goal (position 0)
    now = 0

    while True:
        # Check if we can reach or exceed the start in one move
        if now + M >= N:
            # Add the final step that brings us to the start and terminate
            ans.append(N - now)
            break

        # Try to make the largest possible move (M steps forward)
        step = M
        # If destination square is blocked, decrement step size greedily
        while S[now + step] == '1':
            step -= 1
            # If no possible moves remain, the path is blocked
            if step == 0:
                print(-1)
                return

        # Move to the next position
        now += step
        # Record the step size taken
        ans.append(step)

    # Output the sequence of moves, in correct order from start to finish
    print(*ans[::-1])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.35815900564193726
    2. '(' → logprob: -1.858159065246582
    3. '   ' → logprob: -3.108159065246582
    4. '\n' → logprob: -3.108159065246582
    5. ''' → logprob: -4.608159065246582
    6. ' 
' → logprob: -4.733159065246582
    7. ' ' → logprob: -4.733159065246582
    8. '    
' → logprob: -4.983159065246582
    9. '```' → logprob: -5.483159065246582
    10. ' return' → logprob: -6.358159065246582

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5994746685028076
    2. '   ' → logprob: -1.4744746685028076
    3. 'pass' → logprob: -2.0994746685028076
    4. 'return' → logprob: -2.8494746685028076
    5. '#' → logprob: -4.224474906921387
    6. 'p' → logprob: -5.224474906921387
    7. '```' → logprob: -5.724474906921387
    8. 'r' → logprob: -5.724474906921387
    9. '\' → logprob: -5.849474906921387
    10. 'a' → logprob: -6.099474906921387

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7377256751060486
    2. 'This' → logprob: -1.8627257347106934
    3. 'Calculate' → logprob: -1.9877257347106934
    4. 'Initialize' → logprob: -2.4877257347106934
    5. '   ' → logprob: -3.7377257347106934
    6. 'Returns' → logprob: -3.8627257347106934
    7. 'Run' → logprob: -3.9877257347106934
    8. 'Show' → logprob: -5.112725734710693
    9. 'Runs' → logprob: -5.237725734710693
    10. 'Starts' → logprob: -5.237725734710693

Token 6: ' Main' (ID: 7956)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'This' → logprob: -1.6862215995788574
    2. 'Calculate' → logprob: -1.6862215995788574
    3. 'Run' → logprob: -1.8112215995788574
    4. '   ' → logprob: -2.0612215995788574
    5. 'Initialize' → logprob: -2.3112215995788574
    6. '"""' → logprob: -3.5612215995788574
    7. 'Print' → logprob: -3.8112215995788574
    8. 'Process' → logprob: -3.8112215995788574
    9. 'Main' (adapté à ' Main') → logprob: -3.9362215995788574
    10. 'Initial' → logprob: -4.186221599578857

Token 7: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07774826139211655
    2. '   ' → logprob: -3.2027482986450195
    3. ' ' → logprob: -4.4527482986450195
    4. '()' → logprob: -4.9527482986450195
    5. ' function' → logprob: -5.3277482986450195
    6. '```' → logprob: -5.7027482986450195
    7. '_function' → logprob: -6.4527482986450195
    8. '\' → logprob: -7.2027482986450195
    9. ')' → logprob: -7.2027482986450195
    10. '():' → logprob: -7.3277482986450195

Token 8: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6090649962425232
    2. '```' → logprob: -0.9840649962425232
    3. '"""' → logprob: -3.109065055847168
    4. ' to' → logprob: -4.234065055847168
    5. 'def' → logprob: -5.234065055847168
    6. '.' → logprob: -5.359065055847168
    7. ')' → logprob: -5.984065055847168
    8. '()' → logprob: -6.609065055847168
    9. '"""
' → logprob: -6.609065055847168
    10. '``' → logprob: -6.734065055847168

Token 9: ' solve' (ID: 17722)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.22494931519031525
    2. ' start' → logprob: -2.349949359893799
    3. ' execute' → logprob: -3.974949359893799
    4. ' initialize' → logprob: -4.099949359893799
    5. ' process' → logprob: -4.224949359893799
    6. 'run' → logprob: -4.224949359893799
    7. 'start' → logprob: -4.599949359893799
    8. '   ' → logprob: -4.974949359893799
    9. ' perform' → logprob: -5.099949359893799
    10. ' handle' → logprob: -5.099949359893799

Token 10: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.05732021480798721
    2. '   ' → logprob: -3.6823201179504395
    3. 'the' → logprob: -3.8073201179504395
    4. ' problem' → logprob: -5.6823201179504395
    5. 'problem' → logprob: -6.9323201179504395
    6. '<|end|>' → logprob: -7.1823201179504395
    7. 'def' → logprob: -7.4323201179504395
    8. '"""' → logprob: -7.5573201179504395
    9. ' a' → logprob: -7.5573201179504395
    10. '```' → logprob: -8.432320594787598

Token 11: ' shortest' (ID: 70564)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.10576839745044708
    2. 'problem' → logprob: -3.1057684421539307
    3. ' ' → logprob: -4.230768203735352
    4. '   ' → logprob: -4.355768203735352
    5. 's' → logprob: -5.105768203735352
    6. ' given' → logprob: -5.480768203735352
    7. ' puzzle' → logprob: -5.730768203735352
    8. ' equation' → logprob: -6.230768203735352
    9. ' quadratic' → logprob: -6.730768203735352
    10. ' N' → logprob: -6.855768203735352

Token 12: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.0028361345175653696
    2. 'path' → logprob: -6.627836227416992
    3. '_path' → logprob: -7.127836227416992
    4. ' paths' → logprob: -7.502836227416992
    5. '   ' → logprob: -10.127836227416992
    6. ' distance' → logprob: -10.127836227416992
    7. '_paths' → logprob: -10.377836227416992
    8. '_' → logprob: -11.127836227416992
    9. ' ' → logprob: -11.377836227416992
    10. '-path' → logprob: -12.002836227416992

Token 13: ' problem' (ID: 4792)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03174111247062683
    2. '"""
' → logprob: -4.406741142272949
    3. ' problem' → logprob: -5.406741142272949
    4. ' for' → logprob: -5.531741142272949
    5. '.' → logprob: -6.156741142272949
    6. '```' → logprob: -6.281741142272949
    7. '
' → logprob: -6.906741142272949
    8. '"""' → logprob: -6.906741142272949
    9. ' in' → logprob: -7.156741142272949
    10. '    ' → logprob: -7.406741142272949

Token 14: ' described' (ID: 13394)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.115641288459301
    2. '"""' → logprob: -3.1156413555145264
    3. '```' → logprob: -3.3656413555145264
    4. '"""
' → logprob: -3.6156413555145264
    5. '`' → logprob: -6.740641117095947
    6. '
' → logprob: -7.240641117095947
    7. '    
' → logprob: -8.115641593933105
    8. '"' → logprob: -8.240641593933105
    9. '""' → logprob: -8.490641593933105
    10. '.' → logprob: -8.615641593933105

Token 15: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1634775847196579
    2. '.' → logprob: -2.538477659225464
    3. '"""' → logprob: -3.538477659225464
    4. ' in' → logprob: -3.913477659225464
    5. '```' → logprob: -4.913477420806885
    6. '"""
' → logprob: -5.413477420806885
    7. ' for' → logprob: -5.663477420806885
    8. ' by' → logprob: -6.288477420806885
    9. ' using' → logprob: -6.288477420806885
    10. '    ' → logprob: -7.163477420806885

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033497707918286324
    2. '"""' → logprob: -5.878349781036377
    3. '```' → logprob: -7.753349781036377
    4. '"""
' → logprob: -9.628349304199219
    5. '`' → logprob: -11.378349304199219
    6. '"' → logprob: -11.878349304199219
    7. '    
' → logprob: -11.878349304199219
    8. '    ' → logprob: -12.128349304199219
    9. '
' → logprob: -12.628349304199219
    10. '\n' → logprob: -13.003349304199219

Token 17: ' Given' (ID: 29844)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011346896179020405
    2. '"""' → logprob: -4.636346817016602
    3. '```' → logprob: -7.636346817016602
    4. '    ' → logprob: -7.886346817016602
    5. '    
' → logprob: -9.011346817016602
    6. ' """' → logprob: -9.011346817016602
    7. ')' → logprob: -9.136346817016602
    8. '\n' → logprob: -9.261346817016602
    9. '       ' → logprob: -9.886346817016602
    10. '#' → logprob: -10.011346817016602

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16913136839866638
    2. ' the' → logprob: -2.419131278991699
    3. ' an' → logprob: -3.044131278991699
    4. 'a' → logprob: -4.919131278991699
    5. ' graph' → logprob: -5.919131278991699
    6. ' input' → logprob: -6.294131278991699
    7. ' start' → logprob: -6.419131278991699
    8. '   ' → logprob: -6.669131278991699
    9. 'the' → logprob: -7.044131278991699
    10. '    ' → logprob: -7.419131278991699

Token 19: ' board' (ID: 6796)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.9724337458610535
    2. ' grid' → logprob: -1.3474338054656982
    3. ' directed' → logprob: -1.7224338054656982
    4. ' weighted' → logprob: -3.0974338054656982
    5. ' list' → logprob: -3.2224338054656982
    6. ' tree' → logprob: -3.8474338054656982
    7. ' matrix' → logprob: -4.472433567047119
    8. 'graph' → logprob: -4.722433567047119
    9. ' ' → logprob: -4.909933567047119
    10. ' city' → logprob: -5.472433567047119

Token 20: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6743064522743225
    2. '   ' → logprob: -0.7993064522743225
    3. ' ,' → logprob: -3.9243063926696777
    4. ':' → logprob: -4.924306392669678
    5. ' and' → logprob: -5.924306392669678
    6. ' with' → logprob: -5.924306392669678
    7. '```' → logprob: -6.049306392669678
    8. '    ' → logprob: -7.299306392669678
    9. '.' → logprob: -7.549306392669678
    10. 'def' → logprob: -7.549306392669678

Token 21: ' N' (ID: 478)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.7248473763465881
    2. ' chess' → logprob: -2.3498473167419434
    3. ' strings' → logprob: -2.5998473167419434
    4. ' cells' → logprob: -3.3498473167419434
    5. ' n' → logprob: -3.3498473167419434
    6. 'size' → logprob: -3.7873473167419434
    7. ' characters' → logprob: -3.7873473167419434
    8. ' N' → logprob: -3.7873473167419434
    9. ' ' → logprob: -4.287347316741943
    10. ' knights' → logprob: -4.412347316741943

Token 22: ' squares' (ID: 57269)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.15480761229991913
    2. ' rows' → logprob: -3.0298075675964355
    3. 'x' → logprob: -3.4048075675964355
    4. ' ' → logprob: -4.7798075675964355
    5. ' cells' → logprob: -4.9048075675964355
    6. ' lines' → logprob: -5.0298075675964355
    7. '-' → logprob: -5.0298075675964355
    8. ' and' → logprob: -5.2798075675964355
    9. '   ' → logprob: -5.4048075675964355
    10. ' by' → logprob: -5.7798075675964355

Token 23: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019213270395994186
    2. ' ,' → logprob: -4.1442131996154785
    3. '   ' → logprob: -6.3942131996154785
    4. ' with' → logprob: -7.3942131996154785
    5. ' and' → logprob: -7.8942131996154785
    6. '.' → logprob: -8.644213676452637
    7. ',
' → logprob: -9.519213676452637
    8. ' for' → logprob: -9.644213676452637
    9. ':' → logprob: -10.019213676452637
    10. ' (' → logprob: -10.394213676452637

Token 24: 'with' (ID: 6332)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5238837599754333
    2. ')' → logprob: -1.0238838195800781
    3. ',' → logprob: -3.648883819580078
    4. ' with' → logprob: -4.773883819580078
    5. ' ),' → logprob: -5.398883819580078
    6. ' )' → logprob: -5.898883819580078
    7. 'with' → logprob: -6.898883819580078
    8. '   ' → logprob: -7.023883819580078
    9. ' where' → logprob: -7.398883819580078
    10. ' and' → logprob: -7.523883819580078

Token 25: ' some' (ID: 1236)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.293828010559082
    2. ' a' → logprob: -2.293828010559082
    3. ' N' → logprob: -2.731328010559082
    4. 'N' → logprob: -3.106328010559082
    5. 'tele' → logprob: -3.231328010559082
    6. ' obstacles' → logprob: -3.543828010559082
    7. 'each' → logprob: -3.606328010559082
    8. ' portals' → logprob: -3.731328010559082
    9. ' each' → logprob: -3.793828010559082
    10. ' the' → logprob: -3.856328010559082

Token 26: ' blocked' (ID: 35275)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.4128154516220093
    2. ' blocked' → logprob: -1.7878154516220093
    3. ' obstacles' → logprob: -2.162815570831299
    4. ' squares' → logprob: -2.537815570831299
    5. ' empty' → logprob: -3.412815570831299
    6. ' special' → logprob: -3.662815570831299
    7. 'of' → logprob: -3.725315570831299
    8. 'blocked' → logprob: -3.787815570831299
    9. ' safe' → logprob: -4.225315570831299
    10. ' spaces' → logprob: -4.287815570831299

Token 27: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3680818974971771
    2. ' squares' → logprob: -2.11808180809021
    3. ')' → logprob: -3.24308180809021
    4. ' and' → logprob: -3.36808180809021
    5. ' spaces' → logprob: -3.49308180809021
    6. ' ones' → logprob: -3.74308180809021
    7. 's' → logprob: -4.243082046508789
    8. ' ),' → logprob: -4.368082046508789
    9. ' cells' → logprob: -4.868082046508789
    10. ' or' → logprob: -5.243082046508789

Token 28: ' determine' (ID: 11433)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.3527277708053589
    2. '   ' → logprob: -1.3527277708053589
    3. ' find' → logprob: -1.3527277708053589
    4. ' we' → logprob: -2.8527278900146484
    5. ' the' → logprob: -3.3527278900146484
    6. ' ,' → logprob: -3.6027278900146484
    7. ',' → logprob: -3.7277278900146484
    8. ' ' → logprob: -3.8527278900146484
    9. ' return' → logprob: -4.227727890014648
    10. ' and' → logprob: -4.977727890014648

Token 29: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.037433184683322906
    2. ' if' → logprob: -3.41243314743042
    3. 'the' → logprob: -6.41243314743042
    4. ' which' → logprob: -7.16243314743042
    5. ' ' → logprob: -7.53743314743042
    6. ' whether' → logprob: -8.412433624267578
    7. '```' → logprob: -9.037433624267578
    8. ' how' → logprob: -9.287433624267578
    9. ' a' → logprob: -9.412433624267578
    10. '  ' → logprob: -9.912433624267578

Token 30: ' sequence' (ID: 16281)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.4641202986240387
    2. ' number' → logprob: -1.5891202688217163
    3. ' best' → logprob: -2.589120388031006
    4. ' next' → logprob: -2.839120388031006
    5. ' ' → logprob: -5.339120388031006
    6. ' minimum' → logprob: -5.589120388031006
    7. ' most' → logprob: -5.714120388031006
    8. ' few' → logprob: -5.964120388031006
    9. 's' → logprob: -6.089120388031006
    10. ' minimal' → logprob: -6.339120388031006

Token 31: '
' (ID: 198)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4056554436683655
    2. '```' → logprob: -2.0306553840637207
    3. ' to' → logprob: -3.0306553840637207
    4. '    ' → logprob: -3.4056553840637207
    5. ' that' → logprob: -3.4056553840637207
    6. '`' → logprob: -3.9056553840637207
    7. '   ' → logprob: -4.280655384063721
    8. ''' → logprob: -4.530655384063721
    9. ' for' → logprob: -4.655655384063721
    10. ' ' → logprob: -4.655655384063721

Token 32: '   ' (ID: 271)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.304132342338562
    2. ' to' → logprob: -2.1791324615478516
    3. '   ' → logprob: -2.6791324615478516
    4. '    ' → logprob: -3.1791324615478516
    5. ' that' → logprob: -4.054132461547852
    6. ' for' → logprob: -4.554132461547852
    7. ' ' → logprob: -5.929132461547852
    8. '<|end|>' → logprob: -6.804132461547852
    9. '_' → logprob: -6.929132461547852
    10. '  ' → logprob: -7.054132461547852

Token 33: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12067614495754242
    2. ' to' → logprob: -2.495676040649414
    3. ' that' → logprob: -4.120676040649414
    4. ' for' → logprob: -4.995676040649414
    5. '   ' → logprob: -5.120676040649414
    6. '    ' → logprob: -7.495676040649414
    7. '```' → logprob: -8.245676040649414
    8. ' in' → logprob: -8.495676040649414
    9. ' from' → logprob: -8.620676040649414
    10. ' with' → logprob: -8.745676040649414

Token 34: ' dice' (ID: 22078)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.1695033311843872
    2. ' jumps' → logprob: -2.7945032119750977
    3. ' steps' → logprob: -3.4195032119750977
    4. 'moves' → logprob: -3.6695032119750977
    5. ' squares' → logprob: -4.169503211975098
    6. ' dice' → logprob: -5.294503211975098
    7. ' positions' → logprob: -5.794503211975098
    8. ' valid' → logprob: -6.419503211975098
    9. 'steps' → logprob: -6.794503211975098
    10. 'dice' → logprob: -7.107003211975098

Token 35: ' rolls' (ID: 46838)
  Prédit: ' rolls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rolls' → logprob: -0.44787317514419556
    2. ' throws' → logprob: -1.0728731155395508
    3. ' moves' → logprob: -4.697873115539551
    4. ' roll' → logprob: -5.197873115539551
    5. '_roll' → logprob: -6.072873115539551
    6. 's' → logprob: -7.572873115539551
    7. '   ' → logprob: -8.19787311553955
    8. 'roll' → logprob: -8.32287311553955
    9. ' ' → logprob: -8.32287311553955
    10. 'throws' → logprob: -8.69787311553955

Token 36: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.540614902973175
    2. ' that' → logprob: -1.0406148433685303
    3. ' ' → logprob: -3.5406148433685303
    4. '   ' → logprob: -3.7906148433685303
    5. ' needed' → logprob: -5.540615081787109
    6. ' for' → logprob: -6.290615081787109
    7. 'to' → logprob: -6.540615081787109
    8. '    ' → logprob: -6.665615081787109
    9. ' (' → logprob: -7.290615081787109
    10. '.' → logprob: -7.540615081787109

Token 37: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0898278951644897
    2. ' to' → logprob: -1.2148278951644897
    3. ' )' → logprob: -1.7148278951644897
    4. ' that' → logprob: -1.8398278951644897
    5. ' ' → logprob: -5.089828014373779
    6. 'to' → logprob: -5.214828014373779
    7. ' needed' → logprob: -6.214828014373779
    8. ' which' → logprob: -6.464828014373779
    9. ' and' → logprob: -6.464828014373779
    10. ' the' → logprob: -6.589828014373779

Token 38: '-M' (ID: 6189)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3785398304462433
    2. ' through' → logprob: -1.628539800643921
    3. '-' → logprob: -2.253539800643921
    4. 'to' → logprob: -4.8785400390625
    5. ' <=' → logprob: -6.3785400390625
    6. ',' → logprob: -6.7535400390625
    7. ')' → logprob: -7.2535400390625
    8. ' ' → logprob: -7.5035400390625
    9. '+' → logprob: -7.8785400390625
    10. 'through' → logprob: -7.8785400390625

Token 39: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060139987617731094
    2. ' )' → logprob: -5.506013870239258
    3. ' steps' → logprob: -7.256013870239258
    4. ' moves' → logprob: -7.506013870239258
    5. 's' → logprob: -8.756013870239258
    6. ' dice' → logprob: -9.381013870239258
    7. 'dice' → logprob: -9.631013870239258
    8. ' to' → logprob: -10.006013870239258
    9. '')' → logprob: -10.381013870239258
    10. '-' → logprob: -10.506013870239258

Token 40: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.7555147409439087
    2. ' roll' → logprob: -1.2555147409439087
    3. 'roll' → logprob: -2.005514621734619
    4. ' turn' → logprob: -2.880514621734619
    5. 'move' → logprob: -3.380514621734619
    6. 'turn' → logprob: -4.505514621734619
    7. 'dice' → logprob: -5.755514621734619
    8. ' step' → logprob: -6.505514621734619
    9. ' dice' → logprob: -6.880514621734619
    10. 'step' → logprob: -7.005514621734619

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0629870858974755e-05
    2. ' )' → logprob: -10.12506103515625
    3. ' to' → logprob: -12.00006103515625
    4. '   ' → logprob: -12.62506103515625
    5. ' that' → logprob: -12.62506103515625
    6. ')
' → logprob: -13.25006103515625
    7. '')' → logprob: -13.62506103515625
    8. '")' → logprob: -13.75006103515625
    9. ' ' → logprob: -14.00006103515625
    10. '```' → logprob: -14.37506103515625

Token 42: ' that' (ID: 484)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6815763711929321
    2. ' that' → logprob: -0.8065763711929321
    3. ')' → logprob: -3.6815762519836426
    4. '   ' → logprob: -4.056576251983643
    5. ' for' → logprob: -6.556576251983643
    6. ',' → logprob: -6.681576251983643
    7. 'to' → logprob: -7.431576251983643
    8. 'that' → logprob: -7.806576251983643
    9. '    ' → logprob: -8.0565767288208
    10. ' def' → logprob: -8.3065767288208

Token 43: ' moves' (ID: 19523)
  Prédit: ' leads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leads' → logprob: -0.06235349178314209
    2. ' allows' → logprob: -3.8123536109924316
    3. ' lead' → logprob: -4.062353610992432
    4. ' results' → logprob: -4.937353610992432
    5. ' reaches' → logprob: -5.937353610992432
    6. ' allow' → logprob: -5.937353610992432
    7. ' minimize' → logprob: -6.187353610992432
    8. ' minimizes' → logprob: -6.437353610992432
    9. ' achieves' → logprob: -6.812353610992432
    10. ' yields' → logprob: -7.187353610992432

Token 44: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.18026785552501678
    2. ' a' → logprob: -1.9302678108215332
    3. ' from' → logprob: -4.180267810821533
    4. ' you' → logprob: -6.680267810821533
    5. 'the' → logprob: -6.805267810821533
    6. 'a' → logprob: -7.305267810821533
    7. 'from' → logprob: -7.555267810821533
    8. ' player' → logprob: -8.930268287658691
    9. ' an' → logprob: -9.055268287658691
    10. ' ' → logprob: -9.180268287658691

Token 45: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.03281822055578232
    2. ' token' → logprob: -4.53281831741333
    3. 'player' → logprob: -4.78281831741333
    4. ' pawn' → logprob: -4.90781831741333
    5. ' piece' → logprob: -6.65781831741333
    6. ' knight' → logprob: -7.28281831741333
    7. 'll' → logprob: -7.65781831741333
    8. 'l' → logprob: -7.78281831741333
    9. ' person' → logprob: -7.90781831741333
    10. 'pawn' → logprob: -7.90781831741333

Token 46: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.05133381113409996
    2. 'from' → logprob: -3.0513339042663574
    3. ' to' → logprob: -6.426333904266357
    4. ' across' → logprob: -7.426333904266357
    5. ' through' → logprob: -8.0513334274292
    6. ' ' → logprob: -9.9263334274292
    7. 'to' → logprob: -10.6763334274292
    8. ' on' → logprob: -10.6763334274292
    9. ' one' → logprob: -10.9263334274292
    10. ' the' → logprob: -11.3013334274292

Token 47: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7698389887809753
    2. ' start' → logprob: -1.2698390483856201
    3. ' square' → logprob: -1.8948390483856201
    4. ' position' → logprob: -2.76983904838562
    5. 'the' → logprob: -4.269838809967041
    6. 'start' → logprob: -4.644838809967041
    7. 'square' → logprob: -5.394838809967041
    8. ' starting' → logprob: -5.519838809967041
    9. ' one' → logprob: -6.144838809967041
    10. '0' → logprob: -6.144838809967041

Token 48: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007852907292544842
    2. ' (' → logprob: -5.882853031158447
    3. ' position' → logprob: -6.257853031158447
    4. 'to' → logprob: -6.382853031158447
    5. '   ' → logprob: -8.382852554321289
    6. '(' → logprob: -8.507852554321289
    7. ' ' → logprob: -8.507852554321289
    8. 'ing' → logprob: -8.507852554321289
    9. ' at' → logprob: -8.632852554321289
    10. ' point' → logprob: -9.632852554321289

Token 49: ' finish' (ID: 9115)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7649078965187073
    2. ' end' → logprob: -0.7649078965187073
    3. 'end' → logprob: -3.6399078369140625
    4. ' finish' → logprob: -3.8899078369140625
    5. ' ' → logprob: -4.3899078369140625
    6. ' a' → logprob: -6.0149078369140625
    7. ' target' → logprob: -6.3899078369140625
    8. ' goal' → logprob: -6.5149078369140625
    9. 'the' → logprob: -7.0149078369140625
    10. ' position' → logprob: -7.2649078369140625

Token 50: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06710479408502579
    2. '    ' → logprob: -3.4421048164367676
    3. '.' → logprob: -3.9421048164367676
    4. ':' → logprob: -5.692104816436768
    5. '
' → logprob: -6.067104816436768
    6. ',' → logprob: -6.192104816436768
    7. ' ' → logprob: -7.067104816436768
    8. '"' → logprob: -7.442104816436768
    9. ' with' → logprob: -7.567104816436768
    10. ' in' → logprob: -7.567104816436768

Token 51: '
' (ID: 198)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.032029200345277786
    2. 'the' → logprob: -4.282029151916504
    3. ' minimal' → logprob: -4.657029151916504
    4. ' minimum' → logprob: -5.282029151916504
    5. ' few' → logprob: -7.032029151916504
    6. ' a' → logprob: -7.157029151916504
    7. ' least' → logprob: -7.657029151916504
    8. ' as' → logprob: -7.907029151916504
    9. 'minimum' → logprob: -7.907029151916504
    10. 'minimal' → logprob: -9.157029151916504

Token 52: '   ' (ID: 271)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07349584996700287
    2. ' minimal' → logprob: -3.198495864868164
    3. 'the' → logprob: -4.198495864868164
    4. ' minimum' → logprob: -5.198495864868164
    5. '   ' → logprob: -5.823495864868164
    6. ' least' → logprob: -5.948495864868164
    7. ' few' → logprob: -6.698495864868164
    8. ' at' → logprob: -7.198495864868164
    9. ' as' → logprob: -7.448495864868164
    10. ' a' → logprob: -7.823495864868164

Token 53: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21964131295681
    2. 'the' (adapté à ' the') → logprob: -1.8446413278579712
    3. ' minimal' → logprob: -3.8446412086486816
    4. ' minimum' → logprob: -4.969641208648682
    5. ' least' → logprob: -5.594641208648682
    6. ' few' → logprob: -6.094641208648682
    7. 'minimum' → logprob: -6.844641208648682
    8. ' a' → logprob: -7.344641208648682
    9. ' at' → logprob: -7.594641208648682
    10. ' as' → logprob: -7.594641208648682

Token 54: ' smallest' (ID: 42173)
  Prédit: ' few'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' few' → logprob: -0.25788187980651855
    2. ' minimum' → logprob: -1.8828818798065186
    3. ' least' → logprob: -3.1328818798065186
    4. ' minimal' → logprob: -4.132882118225098
    5. 'minimum' → logprob: -5.007882118225098
    6. ' shortest' → logprob: -5.382882118225098
    7. 'few' → logprob: -5.632882118225098
    8. 'least' → logprob: -8.007882118225098
    9. 'minimal' → logprob: -8.382882118225098
    10. ' smallest' → logprob: -9.507882118225098

Token 55: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.010059800930321217
    2. 'number' → logprob: -5.260059833526611
    3. ' possible' → logprob: -5.510059833526611
    4. 'possible' → logprob: -8.010059356689453
    5. ' steps' → logprob: -8.135059356689453
    6. ' amount' → logprob: -9.635059356689453
    7. 'steps' → logprob: -10.885059356689453
    8. ' moves' → logprob: -11.510059356689453
    9. ' sequence' → logprob: -11.635059356689453
    10. ' time' → logprob: -11.635059356689453

Token 56: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.006179052405059338
    2. 'of' → logprob: -5.131178855895996
    3. '<|end|>' → logprob: -9.006178855895996
    4. ' ' → logprob: -9.381178855895996
    5. '<|end|>' → logprob: -11.381178855895996
    6. '  ' → logprob: -11.756178855895996
    7. '   ' → logprob: -12.006178855895996
    8. '
' → logprob: -12.506178855895996
    9. '	of' → logprob: -12.631178855895996
    10. '    ' → logprob: -13.506178855895996

Token 57: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.023530328646302223
    2. ' steps' → logprob: -3.8985302448272705
    3. 'moves' → logprob: -6.27353048324585
    4. ' dice' → logprob: -7.27353048324585
    5. ' turns' → logprob: -8.898530006408691
    6. ' rolls' → logprob: -9.773530006408691
    7. '_moves' → logprob: -10.023530006408691
    8. ' ' → logprob: -10.523530006408691
    9. ' spaces' → logprob: -10.648530006408691
    10. ' jumps' → logprob: -10.773530006408691

Token 58: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29145774245262146
    2. '.' → logprob: -1.5414577722549438
    3. '"""' → logprob: -4.041457653045654
    4. '```' → logprob: -4.916457653045654
    5. ':' → logprob: -5.666457653045654
    6. '\n' → logprob: -6.291457653045654
    7. '"' → logprob: -6.416457653045654
    8. ')' → logprob: -6.666457653045654
    9. '
' → logprob: -6.791457653045654
    10. ',' → logprob: -6.916457653045654

Token 59: ' ensuring' (ID: 26386)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010002082213759422
    2. '    ' → logprob: -5.135002136230469
    3. ' ' → logprob: -6.385002136230469
    4. '.' → logprob: -7.635002136230469
    5. '"' → logprob: -8.135002136230469
    6. '  ' → logprob: -8.885002136230469
    7. ' and' → logprob: -8.885002136230469
    8. '
' → logprob: -9.010002136230469
    9. ' with' → logprob: -9.010002136230469
    10. '```' → logprob: -9.510002136230469

Token 60: ' lex' (ID: 37772)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4160730540752411
    2. ' that' → logprob: -1.6660730838775635
    3. ' all' → logprob: -2.5410730838775635
    4. ' each' → logprob: -3.1660730838775635
    5. ' no' → logprob: -4.541072845458984
    6. ' a' → logprob: -4.916072845458984
    7. '   ' → logprob: -6.041072845458984
    8. ' there' → logprob: -6.291072845458984
    9. 'the' → logprob: -6.291072845458984
    10. ' they' → logprob: -6.541072845458984

Token 61: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.07532722502946854
    2. 'i' → logprob: -2.825327157974243
    3. ' ' → logprob: -5.575327396392822
    4. '-' → logprob: -6.200327396392822
    5. '```' → logprob: -6.200327396392822
    6. '_' → logprob: -6.700327396392822
    7. ' i' → logprob: -7.325327396392822
    8. '   ' → logprob: -7.325327396392822
    9. 'ically' → logprob: -7.575327396392822
    10. '­i' → logprob: -7.825327396392822

Token 62: 'ographically' (ID: 121004)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.16222842037677765
    2. 'ally' → logprob: -1.9122284650802612
    3. 'aly' → logprob: -6.787228584289551
    4. 'ality' → logprob: -7.287228584289551
    5. '```' → logprob: -9.78722858428955
    6. ' al' → logprob: -9.91222858428955
    7. 'all' → logprob: -11.66222858428955
    8. 'alty' → logprob: -12.09972858428955
    9. '...' → logprob: -12.34972858428955
    10. 'ly' → logprob: -12.41222858428955

Token 63: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.6429892182350159
    2. ' minimal' → logprob: -0.7679892182350159
    3. ' smaller' → logprob: -4.767989158630371
    4. ' increasing' → logprob: -7.142989158630371
    5. ' least' → logprob: -8.517989158630371
    6. ' ordered' → logprob: -8.892989158630371
    7. ' sorted' → logprob: -9.017989158630371
    8. ' first' → logprob: -9.267989158630371
    9. ' possible' → logprob: -9.267989158630371
    10. ' greater' → logprob: -9.642989158630371

Token 64: ' for' (ID: 395)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5677130818367004
    2. '_' → logprob: -1.6927130222320557
    3. ' possible' → logprob: -2.4427130222320557
    4. ' ' → logprob: -2.6927130222320557
    5. ' solution' → logprob: -3.0677130222320557
    6. '_possible' → logprob: -4.567713260650635
    7. ' path' → logprob: -5.192713260650635
    8. '```' → logprob: -5.692713260650635
    9. ' code' → logprob: -6.067713260650635
    10. '_solution' → logprob: -6.067713260650635

Token 65: ' ties' (ID: 35664)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.48972606658935547
    2. ' the' → logprob: -1.1147260665893555
    3. ' every' → logprob: -3.1147260665893555
    4. ' a' → logprob: -5.7397260665893555
    5. ' all' → logprob: -5.7397260665893555
    6. ' ' → logprob: -6.4897260665893555
    7. ' possible' → logprob: -6.7397260665893555
    8. 'each' → logprob: -6.8647260665893555
    9. ' moves' → logprob: -7.1147260665893555
    10. ' shortest' → logprob: -7.1147260665893555

Token 66: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0661277025938034
    2. '
' → logprob: -3.4411277770996094
    3. '\' → logprob: -4.691127777099609
    4. '    
' → logprob: -4.941127777099609
    5. '\n' → logprob: -5.441127777099609
    6. ':' → logprob: -5.566127777099609
    7. '```' → logprob: -5.691127777099609
    8. '    ' → logprob: -7.191127777099609
    9. ' ' → logprob: -7.316127777099609
    10. '  
' → logprob: -7.941127777099609

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008020737208425999
    2. '
' → logprob: -6.008020877838135
    3. '"""' → logprob: -6.008020877838135
    4. '    
' → logprob: -7.008020877838135
    5. '\n' → logprob: -7.508020877838135
    6. '```' → logprob: -7.633020877838135
    7. '"""
' → logprob: -8.133020401000977
    8. '    ' → logprob: -8.633020401000977
    9. '"' → logprob: -8.758020401000977
    10. '\' → logprob: -9.258020401000977

Token 68: ' Gre' (ID: 6454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03385534510016441
    2. '
' → logprob: -3.908855438232422
    3. '\n' → logprob: -5.283855438232422
    4. '    
' → logprob: -6.033855438232422
    5. '```' → logprob: -6.533855438232422
    6. '"""' → logprob: -6.658855438232422
    7. '    ' → logprob: -6.783855438232422
    8. '\' → logprob: -7.283855438232422
    9. ' 
' → logprob: -8.158855438232422
    10. 'n' → logprob: -8.658855438232422

Token 69: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: -0.10924491286277771
    2. 'ed' → logprob: -3.1092448234558105
    3. 'at' → logprob: -3.3592448234558105
    4. 'ath' → logprob: -5.1092448234558105
    5. 'atly' → logprob: -5.2342448234558105
    6. 'atest' → logprob: -5.8592448234558105
    7. 'ep' → logprob: -6.1092448234558105
    8. 'en' → logprob: -6.9842448234558105
    9. 'y' → logprob: -7.1092448234558105
    10. 'a' → logprob: -7.1092448234558105

Token 70: ' approach' (ID: 7139)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1563810557126999
    2. '-' → logprob: -3.531381130218506
    3. '<|end|>' → logprob: -3.531381130218506
    4. ' ' → logprob: -3.656381130218506
    5. ' approach' → logprob: -4.531381130218506
    6. ')' → logprob: -4.531381130218506
    7. ',' → logprob: -4.531381130218506
    8. ':' → logprob: -4.781381130218506
    9. '<|end|>' → logprob: -5.656381130218506
    10. '   ' → logprob: -6.531381130218506

Token 71: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44214463233947754
    2. '   ' → logprob: -1.0671446323394775
    3. ' :' → logprob: -5.942144393920898
    4. '
' → logprob: -6.192144393920898
    5. ')' → logprob: -6.942144393920898
    6. '    
' → logprob: -7.067144393920898
    7. '    ' → logprob: -7.067144393920898
    8. ':
' → logprob: -7.192144393920898
    9. '```' → logprob: -7.192144393920898
    10. ' ' → logprob: -7.317144393920898

Token 72: ' applied' (ID: 13335)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4293296337127686
    2. ' None' → logprob: -1.4293296337127686
    3. ' BFS' → logprob: -1.9293296337127686
    4. ' not' → logprob: -2.4293296337127686
    5. ' a' → logprob: -2.8043296337127686
    6. 'b' → logprob: -3.3043296337127686
    7. ' bfs' → logprob: -3.5543296337127686
    8. ' using' → logprob: -3.8043296337127686
    9. ' to' → logprob: -3.9293296337127686
    10. 'None' → logprob: -4.554329872131348

Token 73: ' backward' (ID: 58986)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7045935988426208
    2. '   ' → logprob: -0.9545935988426208
    3. '.' → logprob: -2.7045936584472656
    4. ' :' → logprob: -3.5795936584472656
    5. ',' → logprob: -5.204593658447266
    6. '    ' → logprob: -5.329593658447266
    7. '```' → logprob: -5.829593658447266
    8. ')' → logprob: -5.954593658447266
    9. '_' → logprob: -6.204593658447266
    10. ':
' → logprob: -6.704593658447266

Token 74: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6243407726287842
    2. ':' → logprob: -1.3743407726287842
    3. '
' → logprob: -2.124340772628784
    4. '\' → logprob: -3.999340772628784
    5. '\n' → logprob: -4.124341011047363
    6. ' ' → logprob: -4.499341011047363
    7. '```' → logprob: -4.999341011047363
    8. '    
' → logprob: -5.249341011047363
    9. '    ' → logprob: -5.374341011047363
    10. ' 
' → logprob: -5.624341011047363

Token 75: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.028183652088046074
    2. ' end' → logprob: -4.528183460235596
    3. ' finish' → logprob: -4.903183460235596
    4. 'the' → logprob: -5.403183460235596
    5. ' ' → logprob: -6.778183460235596
    6. 'end' → logprob: -6.903183460235596
    7. ' N' → logprob: -7.153183460235596
    8. ' destination' → logprob: -7.278183460235596
    9. 'finish' → logprob: -7.778183460235596
    10. ' target' → logprob: -8.653183937072754

Token 76: ' goal' (ID: 8583)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10896646231412888
    2. 'end' → logprob: -3.10896635055542
    3. ' finish' → logprob: -3.10896635055542
    4. 'finish' → logprob: -5.73396635055542
    5. ' goal' → logprob: -5.85896635055542
    6. ' target' → logprob: -5.85896635055542
    7. ' destination' → logprob: -6.23396635055542
    8. ' last' → logprob: -6.60896635055542
    9. ' ' → logprob: -7.73396635055542
    10. ' final' → logprob: -7.98396635055542

Token 77: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6516128182411194
    2. '   ' → logprob: -1.5266127586364746
    3. ':' → logprob: -1.6516127586364746
    4. '\' → logprob: -3.4016127586364746
    5. '\n' → logprob: -4.401612758636475
    6. 'n' → logprob: -5.276612758636475
    7. ':
' → logprob: -5.776612758636475
    8. ' ' → logprob: -5.901612758636475
    9. '```' → logprob: -5.901612758636475
    10. '    
' → logprob: -6.151612758636475

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018042705953121185
    2. '"""' → logprob: -5.01804256439209
    3. '"' → logprob: -5.64304256439209
    4. '
' → logprob: -6.39304256439209
    5. '```' → logprob: -6.64304256439209
    6. ' ' → logprob: -7.14304256439209
    7. '    ' → logprob: -7.26804256439209
    8. ' """' → logprob: -7.39304256439209
    9. ')' → logprob: -7.51804256439209
    10. 'n' → logprob: -7.51804256439209

Token 79: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.065784752368927
    2. '"""' → logprob: -2.9407846927642822
    3. '```' → logprob: -5.315784931182861
    4. '"' → logprob: -6.315784931182861
    5. '    ' → logprob: -6.565784931182861
    6. ' """' → logprob: -7.190784931182861
    7. '"""
' (adapté à ' """
') → logprob: -8.190784454345703
    8. '`' → logprob: -8.190784454345703
    9. ')' → logprob: -8.440784454345703
    10. '""' → logprob: -8.440784454345703

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21686506271362305
    2. '
' → logprob: -1.966865062713623
    3. '    ' → logprob: -3.841865062713623
    4. 'n' → logprob: -4.341865062713623
    5. '    
' → logprob: -4.341865062713623
    6. 'import' → logprob: -6.216865062713623
    7. '\n' → logprob: -6.341865062713623
    8. '\' → logprob: -7.216865062713623
    9. ' 
' → logprob: -7.216865062713623
    10. '     
' → logprob: -7.591865062713623

Token 81: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5293476581573486
    2. 'n' → logprob: -1.7793476581573486
    3. '
' → logprob: -1.9043476581573486
    4. 'import' → logprob: -3.2793476581573486
    5. '    
' → logprob: -4.5293474197387695
    6. ' import' → logprob: -4.6543474197387695
    7. '    ' → logprob: -5.1543474197387695
    8. ' N' → logprob: -5.2793474197387695
    9. 'N' → logprob: -5.4043474197387695
    10. ' n' → logprob: -5.4043474197387695

Token 82: ' Read' (ID: 5405)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9392803907394409
    2. 'n' → logprob: -2.1892805099487305
    3. '   ' → logprob: -2.1892805099487305
    4. ' #' → logprob: -2.1892805099487305
    5. ' N' → logprob: -2.6892805099487305
    6. ' n' → logprob: -2.9392805099487305
    7. '#' → logprob: -3.5642805099487305
    8. ' import' → logprob: -3.9392805099487305
    9. 'N' → logprob: -4.1892805099487305
    10. '    ' → logprob: -4.5642805099487305

Token 83: ' two' (ID: 1920)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.991133987903595
    2. '   ' → logprob: -0.991133987903595
    3. ' N' → logprob: -2.11613392829895
    4. 'n' → logprob: -2.99113392829895
    5. ' n' → logprob: -3.86613392829895
    6. '_' → logprob: -4.366134166717529
    7. ' ' → logprob: -4.491134166717529
    8. '```' → logprob: -4.866134166717529
    9. ' =' → logprob: -5.241134166717529
    10. '  ' → logprob: -5.241134166717529

Token 84: ' integers' (ID: 54912)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.09835178405046463
    2. ' integers' → logprob: -2.9733517169952393
    3. ' spaces' → logprob: -5.098351955413818
    4. ' ' → logprob: -5.098351955413818
    5. ' input' → logprob: -5.348351955413818
    6. ' =' → logprob: -5.348351955413818
    7. '   ' → logprob: -5.473351955413818
    8. ' more' → logprob: -6.223351955413818
    9. '_lines' → logprob: -6.223351955413818
    10. ' words' → logprob: -6.348351955413818

Token 85: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6026470065116882
    2. 'n' → logprob: -1.852647066116333
    3. ' N' → logprob: -1.977647066116333
    4. ' ' → logprob: -3.227647066116333
    5. '    ' → logprob: -3.477647066116333
    6. ' n' → logprob: -3.977647066116333
    7. '(n' → logprob: -4.727646827697754
    8. '    
' → logprob: -4.727646827697754
    9. 'N' → logprob: -4.852646827697754
    10. '(' → logprob: -5.102646827697754

Token 86: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.33801543712615967
    2. ' n' → logprob: -1.3380154371261597
    3. 'N' → logprob: -4.088015556335449
    4. 'n' → logprob: -4.963015556335449
    5. ' ' → logprob: -8.46301555633545
    6. '    ' → logprob: -8.83801555633545
    7. '   ' → logprob: -9.08801555633545
    8. ' ' → logprob: -10.21301555633545
    9. '	N' → logprob: -10.58801555633545
    10. '	n' → logprob: -10.71301555633545

Token 87: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07453964650630951
    2. ' =' → logprob: -2.8245396614074707
    3. '   ' → logprob: -5.574539661407471
    4. '=' → logprob: -5.699539661407471
    5. ' and' → logprob: -6.199539661407471
    6. '(N' → logprob: -7.074539661407471
    7. ',n' → logprob: -7.199539661407471
    8. '(' → logprob: -7.949539661407471
    9. ',N' → logprob: -7.949539661407471
    10. '(n' → logprob: -8.574539184570312

Token 88: 'number' (ID: 8096)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030759455636143684
    2. ' ,' → logprob: -3.530759572982788
    3. ')' → logprob: -7.280759334564209
    4. ',M' → logprob: -9.655759811401367
    5. ',N' → logprob: -9.905759811401367
    6. ' ' → logprob: -10.155759811401367
    7. ' )' → logprob: -10.155759811401367
    8. '=' → logprob: -10.780759811401367
    9. '  ' → logprob: -11.030759811401367
    10. ',int' → logprob: -11.030759811401367

Token 89: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15402184426784515
    2. ',' → logprob: -2.279021739959717
    3. ')' → logprob: -3.779021739959717
    4. ' of' → logprob: -5.029021739959717
    5. ' =' → logprob: -5.154021739959717
    6. '   ' → logprob: -6.154021739959717
    7. 'of' → logprob: -6.529021739959717
    8. '_of' → logprob: -7.904021739959717
    9. '=int' → logprob: -8.279022216796875
    10. ' ,' → logprob: -8.529022216796875

Token 90: ' spaces' (ID: 18608)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07437698543071747
    2. ' squares' → logprob: -2.8243770599365234
    3. ' spaces' → logprob: -4.949377059936523
    4. 's' → logprob: -6.074377059936523
    5. ')' → logprob: -6.949377059936523
    6. ' )' → logprob: -7.449377059936523
    7. ' ,' → logprob: -8.699377059936523
    8. 'spaces' → logprob: -8.824377059936523
    9. ' s' → logprob: -9.199377059936523
    10. ' players' → logprob: -9.199377059936523

Token 91: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15356892347335815
    2. ')' → logprob: -2.028568983078003
    3. '   ' → logprob: -5.278568744659424
    4. '=' → logprob: -5.653568744659424
    5. ' )' → logprob: -7.028568744659424
    6. ' =' → logprob: -7.653568744659424
    7. ' ,' → logprob: -8.278569221496582
    8. '):' → logprob: -8.403569221496582
    9. ' ' → logprob: -9.528569221496582
    10. '),' → logprob: -10.028569221496582

Token 92: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17600208520889282
    2. ',' → logprob: -1.926002025604248
    3. '    ' → logprob: -5.801002025604248
    4. ' ' → logprob: -5.926002025604248
    5. ' ,' → logprob: -5.926002025604248
    6. '  ' → logprob: -6.676002025604248
    7. '    
' → logprob: -6.801002025604248
    8. '```' → logprob: -6.801002025604248
    9. 'n' → logprob: -7.051002025604248
    10. ')' → logprob: -7.676002025604248

Token 93: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.38715988397598267
    2. 'M' → logprob: -1.137159824371338
    3. ' ' → logprob: -8.887160301208496
    4. '   ' → logprob: -10.137160301208496
    5. '"' → logprob: -10.512160301208496
    6. '    ' → logprob: -10.637160301208496
    7. '  ' → logprob: -10.762160301208496
    8. 'space' → logprob: -11.887160301208496
    9. 'm' → logprob: -12.012160301208496
    10. ' ' → logprob: -12.387160301208496

Token 94: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5362085103988647
    2. '   ' → logprob: -1.0362085103988647
    3. '=' → logprob: -3.1612086296081543
    4. ',' → logprob: -5.786208629608154
    5. '<|end|>' → logprob: -5.911208629608154
    6. '    ' → logprob: -6.161208629608154
    7. '  ' → logprob: -6.286208629608154
    8. '    
' → logprob: -6.786208629608154
    9. ':' → logprob: -6.911208629608154
    10. 'n' → logprob: -6.911208629608154

Token 95: 'max' (ID: 3228)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.38985949754714966
    2. ')' → logprob: -1.1398594379425049
    3. ' ' → logprob: -5.889859676361084
    4. ',' → logprob: -10.389859199523926
    5. ''' → logprob: -10.389859199523926
    6. 'space' → logprob: -10.389859199523926
    7. ' ,' → logprob: -11.014859199523926
    8. 'a' → logprob: -11.264859199523926
    9. ' a' → logprob: -11.389859199523926
    10. ' =' → logprob: -11.389859199523926

Token 96: ' dice' (ID: 22078)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6751171350479126
    2. ' )' → logprob: -0.8001171350479126
    3. ' dice' → logprob: -4.425117015838623
    4. 'dice' → logprob: -4.550117015838623
    5. ' moves' → logprob: -5.300117015838623
    6. ' ' → logprob: -5.925117015838623
    7. '<|end|>' → logprob: -5.925117015838623
    8. '_moves' → logprob: -6.550117015838623
    9. 'moves' → logprob: -7.050117015838623
    10. ' number' → logprob: -7.050117015838623

Token 97: ' value' (ID: 1432)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.43305861949920654
    2. ')' → logprob: -1.1830586194992065
    3. '_roll' → logprob: -3.433058738708496
    4. ' roll' → logprob: -5.183058738708496
    5. ' rolls' → logprob: -5.808058738708496
    6. ' value' → logprob: -6.808058738708496
    7. '_faces' → logprob: -7.058058738708496
    8. 'roll' → logprob: -7.558058738708496
    9. ' ' → logprob: -7.808058738708496
    10. '_value' → logprob: -8.183058738708496

Token 98: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024960694834589958
    2. '):' → logprob: -3.77496075630188
    3. ',' → logprob: -7.399960517883301
    4. '=' → logprob: -7.649960517883301
    5. '   ' → logprob: -7.774960517883301
    6. ' )' → logprob: -8.8999605178833
    7. '),' → logprob: -10.8999605178833
    8. '):
' → logprob: -11.5249605178833
    9. ')
' → logprob: -11.7749605178833
    10. ':' → logprob: -11.7749605178833

Token 99: ' move' (ID: 5275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7211270332336426
    2. ' move' → logprob: -1.0961270332336426
    3. ')' → logprob: -2.4711270332336426
    4. ' )' → logprob: -2.5961270332336426
    5. ' roll' → logprob: -4.846127033233643
    6. ' dice' → logprob: -5.346127033233643
    7. '  ' → logprob: -5.971127033233643
    8. ' turn' → logprob: -6.096127033233643
    9. 'move' → logprob: -6.971127033233643
    10. 'dice' → logprob: -7.596127033233643

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02544240839779377
    2. '):' → logprob: -3.775442361831665
    3. ',' → logprob: -6.275442600250244
    4. '   ' → logprob: -9.400442123413086
    5. '),' → logprob: -9.650442123413086
    6. ' )' → logprob: -9.775442123413086
    7. '):
' → logprob: -10.525442123413086
    8. '=' → logprob: -10.650442123413086
    9. ')
' → logprob: -10.775442123413086
    10. ':' → logprob: -11.275442123413086

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025873947888612747
    2. '\n' → logprob: -4.650874137878418
    3. '    
' → logprob: -4.900874137878418
    4. '
' → logprob: -5.025874137878418
    5. 'n' → logprob: -7.150874137878418
    6. ' 
' → logprob: -8.400874137878418
    7. '\' → logprob: -8.525874137878418
    8. '       ' → logprob: -8.775874137878418
    9. '    ' → logprob: -9.400874137878418
    10. '  
' → logprob: -9.400874137878418

Token 102: ' N' (ID: 478)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3039202094078064
    2. '\n' → logprob: -2.428920269012451
    3. '    
' → logprob: -2.428920269012451
    4. '   ' → logprob: -3.303920269012451
    5. '
' → logprob: -3.803920269012451
    6. 'n' → logprob: -4.303920269012451
    7. '  
' → logprob: -5.428920269012451
    8. 'N' (adapté à ' N') → logprob: -6.053920269012451
    9. ' N' → logprob: -6.178920269012451
    10. '   
' → logprob: -6.678920269012451

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010962257510982454
    2. ' ,' → logprob: -9.250109672546387
    3. ',
' → logprob: -12.000109672546387
    4. ',M' → logprob: -12.125109672546387
    5. ',N' → logprob: -14.625109672546387
    6. '=' → logprob: -14.625109672546387
    7. ',m' → logprob: -15.625109672546387
    8. ',int' → logprob: -16.00010871887207
    9. '   ' → logprob: -16.12510871887207
    10. '<|end|>' → logprob: -16.37510871887207

Token 104: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.15070465207099915
    2. '<|end|>' → logprob: -2.5257046222686768
    3. ' ' → logprob: -3.5257046222686768
    4. 'M' → logprob: -3.5257046222686768
    5. ' ' → logprob: -8.150704383850098
    6. '  ' → logprob: -8.275704383850098
    7. '<|end|>' → logprob: -8.900704383850098
    8. 'space' → logprob: -9.525704383850098
    9. ')' → logprob: -9.775704383850098
    10. ' =' → logprob: -10.275704383850098

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198135390877724
    2. '=' → logprob: -2.811981439590454
    3. ',' → logprob: -12.186981201171875
    4. '=input' → logprob: -12.186981201171875
    5. '=int' → logprob: -13.186981201171875
    6. ' =
' → logprob: -14.436981201171875
    7. '<|end|>' → logprob: -14.811981201171875
    8. ')' → logprob: -15.311981201171875
    9. '=
' → logprob: -16.061981201171875
    10. ' ' → logprob: -16.936981201171875

Token 106: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -4.203409844194539e-05
    2. 'map' → logprob: -10.125041961669922
    3. ' list' → logprob: -13.500041961669922
    4. ' ' → logprob: -15.125041961669922
    5. '	map' → logprob: -15.625041961669922
    6. ' input' → logprob: -16.875041961669922
    7. ' int' → logprob: -17.250041961669922
    8. ' mapa' → logprob: -17.250041961669922
    9. ' ' → logprob: -17.875041961669922
    10. ' [' → logprob: -18.125041961669922

Token 107: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05936209857463837
    2. '(' → logprob: -2.9343621730804443
    3. '(input' → logprob: -6.059361934661865
    4. '(str' → logprob: -6.184361934661865
    5. '(list' → logprob: -11.059362411499023
    6. '(lambda' → logprob: -11.059362411499023
    7. ' (' → logprob: -11.434362411499023
    8. '(
' → logprob: -11.809362411499023
    9. 'int' → logprob: -11.934362411499023
    10. '(eval' → logprob: -12.809362411499023

Token 108: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22208252549171448
    2. '(' → logprob: -2.3470826148986816
    3. 'input' → logprob: -3.2220826148986816
    4. ',' → logprob: -3.2220826148986816
    5. ')' → logprob: -4.597082614898682
    6. ',input' → logprob: -4.722082614898682
    7. '(int' → logprob: -6.347082614898682
    8. ' input' → logprob: -6.597082614898682
    9. '```' → logprob: -8.097082138061523
    10. '<|end|>' → logprob: -8.222082138061523

Token 109: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868711292743683
    2. 'input' → logprob: -1.136871099472046
    3. '(input' → logprob: -16.636871337890625
    4. ' ' → logprob: -17.511871337890625
    5. '=input' → logprob: -17.761871337890625
    6. '   ' → logprob: -18.386871337890625
    7. '	input' → logprob: -18.636871337890625
    8. ',input' → logprob: -18.636871337890625
    9. ')' → logprob: -19.011871337890625
    10. '<input' → logprob: -20.386871337890625

Token 110: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07318678498268127
    2. '())' → logprob: -2.8231868743896484
    3. '()' → logprob: -4.573186874389648
    4. ')' → logprob: -7.698186874389648
    5. '()>' → logprob: -8.698186874389648
    6. '());' → logprob: -10.448186874389648
    7. '(' → logprob: -10.698186874389648
    8. '(),' → logprob: -10.823186874389648
    9. '()[' → logprob: -11.073186874389648
    10. '()">' → logprob: -11.323186874389648

Token 111: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011711753904819489
    2. 'strip' → logprob: -6.751171112060547
    3. 'rstrip' → logprob: -14.251171112060547
    4. ' split' → logprob: -16.501171112060547
    5. 'read' → logprob: -16.501171112060547
    6. 'spl' → logprob: -16.876171112060547
    7. '(split' → logprob: -17.626171112060547
    8. '_split' → logprob: -19.001171112060547
    9. ')' → logprob: -19.626171112060547
    10. 'plit' → logprob: -21.251171112060547

Token 112: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034273360506631434
    2. '())' → logprob: -8.62534236907959
    3. '()' → logprob: -9.12534236907959
    4. '))' → logprob: -10.25034236907959
    5. '(' → logprob: -11.62534236907959
    6. ' )' → logprob: -12.37534236907959
    7. ')`' → logprob: -13.62534236907959
    8. '),' → logprob: -14.00034236907959
    9. ')
' → logprob: -14.25034236907959
    10. ')))' → logprob: -14.62534236907959

Token 113: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024228490889072418
    2. '\n' → logprob: -5.149228572845459
    3. '<|end|>' → logprob: -5.649228572845459
    4. '```' → logprob: -6.149228572845459
    5. ' 
' → logprob: -6.149228572845459
    6. '  
' → logprob: -6.274228572845459
    7. '    
' → logprob: -6.274228572845459
    8. '' → logprob: -6.524228572845459
    9. '   ' → logprob: -6.774228572845459
    10. '\' → logprob: -7.274228572845459

Token 114: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05546709522604942
    2. '\n' → logprob: -3.055467128753662
    3. ' 
' → logprob: -6.305467128753662
    4. '    
' → logprob: -6.555467128753662
    5. '```' → logprob: -6.930467128753662
    6. '   ' → logprob: -7.555467128753662
    7. '\' → logprob: -7.930467128753662
    8. '  
' → logprob: -8.055466651916504
    9. '<|end|>' → logprob: -8.305466651916504
    10. '[' → logprob: -8.430466651916504

Token 115: ' Read' (ID: 5405)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.36431974172592163
    2. ' board' → logprob: -1.7393198013305664
    3. 'blocked' → logprob: -2.7393198013305664
    4. ' blocked' → logprob: -3.3643198013305664
    5. 'b' → logprob: -4.989319801330566
    6. ' squares' → logprob: -5.614319801330566
    7. '#' → logprob: -5.864319801330566
    8. 's' → logprob: -5.989319801330566
    9. 'dist' → logprob: -6.489319801330566
    10. 'dp' → logprob: -6.739319801330566

Token 116: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04484836757183075
    2. 'blocked' → logprob: -4.044848442077637
    3. '(' → logprob: -4.544848442077637
    4. ' a' → logprob: -5.919848442077637
    5. 'the' → logprob: -6.044848442077637
    6. ' blocked' → logprob: -6.044848442077637
    7. ' the' → logprob: -6.669848442077637
    8. 'board' → logprob: -6.794848442077637
    9. ' board' → logprob: -7.294848442077637
    10. '   ' → logprob: -7.669848442077637

Token 117: ' string' (ID: 1621)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocked' → logprob: -0.7481444478034973
    2. ' board' → logprob: -1.2481443881988525
    3. 'board' → logprob: -1.9981443881988525
    4. ' blocked' → logprob: -2.7481443881988525
    5. ' next' → logprob: -5.373144626617432
    6. 'b' → logprob: -5.498144626617432
    7. 's' → logprob: -5.873144626617432
    8. ' squares' → logprob: -5.998144626617432
    9. ' line' → logprob: -5.998144626617432
    10. 'positions' → logprob: -6.123144626617432

Token 118: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5602738261222839
    2. ' =' → logprob: -2.3102738857269287
    3. 'blocked' → logprob: -2.6852738857269287
    4. '()' → logprob: -2.9352738857269287
    5. 'board' → logprob: -3.1852738857269287
    6. ' s' → logprob: -3.1852738857269287
    7. '   ' → logprob: -3.6852738857269287
    8. 'S' → logprob: -3.8102738857269287
    9. ' S' → logprob: -4.43527364730835
    10. ' blocked' → logprob: -4.56027364730835

Token 119: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1626686304807663
    2. '=' → logprob: -1.9126685857772827
    3. '   ' → logprob: -6.037668704986572
    4. '    ' → logprob: -11.412668228149414
    5. 's' → logprob: -11.912668228149414
    6. '(' → logprob: -11.912668228149414
    7. '=input' → logprob: -12.162668228149414
    8. '```' → logprob: -12.412668228149414
    9. ' ' → logprob: -12.662668228149414
    10. 'S' → logprob: -12.787668228149414

Token 120: 'path' (ID: 4189)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09615371376276016
    2. ' input' → logprob: -2.471153736114502
    3. ')' → logprob: -5.221153736114502
    4. '(input' → logprob: -6.846153736114502
    5. 's' → logprob: -8.221153259277344
    6. '()' → logprob: -9.096153259277344
    7. ' ' → logprob: -9.971153259277344
    8. ' )' → logprob: -10.096153259277344
    9. '=input' → logprob: -10.221153259277344
    10. '   ' → logprob: -10.596153259277344

Token 121: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38239267468452454
    2. ')' → logprob: -1.6323926448822021
    3. '=' → logprob: -2.382392644882202
    4. '   ' → logprob: -4.007392883300781
    5. ' )' → logprob: -5.257392883300781
    6. 'string' → logprob: -6.382392883300781
    7. ')=' → logprob: -7.632392883300781
    8. '")' → logprob: -7.757392883300781
    9. ' of' → logprob: -8.007392883300781
    10. '  ' → logprob: -8.257392883300781

Token 122: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8535414338111877
    2. ' =' → logprob: -0.9785414338111877
    3. 'S' → logprob: -1.728541374206543
    4. '=' → logprob: -4.603541374206543
    5. ' S' → logprob: -4.978541374206543
    6. '    
' → logprob: -6.228541374206543
    7. '
' → logprob: -7.603541374206543
    8. 's' → logprob: -8.353541374206543
    9. ' 
' → logprob: -8.478541374206543
    10. '=S' → logprob: -8.728541374206543

Token 123: ' reverse' (ID: 18199)
  Prédit: ' blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocked' → logprob: -1.3044251203536987
    2. 'blocked' → logprob: -1.4294251203536987
    3. ' input' → logprob: -1.8044251203536987
    4. 'input' → logprob: -1.9294251203536987
    5. ' S' → logprob: -3.9294252395629883
    6. 's' → logprob: -3.9294252395629883
    7. ' spaces' → logprob: -4.866925239562988
    8. ' obstacles' → logprob: -4.991925239562988
    9. ' M' → logprob: -5.366925239562988
    10. ' the' → logprob: -5.429425239562988

Token 124: ' it' (ID: 480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013880803249776363
    2. 'S' → logprob: -4.888880729675293
    3. ' ()' → logprob: -6.388880729675293
    4. '(' → logprob: -6.513880729675293
    5. 's' → logprob: -7.263880729675293
    6. '_input' → logprob: -7.638880729675293
    7. '().' → logprob: -8.013880729675293
    8. '_s' → logprob: -8.263880729675293
    9. ' =' → logprob: -8.513880729675293
    10. '(S' → logprob: -8.638880729675293

Token 125: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19769737124443054
    2. '   ' → logprob: -2.572697401046753
    3. '=' → logprob: -2.697697401046753
    4. 'S' → logprob: -4.072697162628174
    5. ' S' → logprob: -4.822697162628174
    6. '(S' → logprob: -5.572697162628174
    7. '=S' → logprob: -6.197697162628174
    8. '(' → logprob: -6.822697162628174
    9. '()' → logprob: -7.322697162628174
    10. ')' → logprob: -7.447697162628174

Token 126: 'so' (ID: 786)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.22819706797599792
    2. ')' → logprob: -1.9781970977783203
    3. ')[' → logprob: -3.9781970977783203
    4. '()[' → logprob: -5.10319709777832
    5. 'S' → logprob: -5.22819709777832
    6. '()' → logprob: -5.35319709777832
    7. '[' → logprob: -5.60319709777832
    8. ' )' → logprob: -5.72819709777832
    9. ' S' → logprob: -5.72819709777832
    10. 's' → logprob: -5.72819709777832

Token 127: ' goal' (ID: 8583)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.9390352964401245
    2. ' the' → logprob: -1.1890352964401245
    3. ' that' → logprob: -1.6890352964401245
    4. ' we' → logprob: -3.064035415649414
    5. ' it's' → logprob: -3.564035415649414
    6. ' S' → logprob: -4.189035415649414
    7. ' you' → logprob: -5.064035415649414
    8. ' its' → logprob: -5.689035415649414
    9. ' to' → logprob: -5.814035415649414
    10. 'the' → logprob: -5.814035415649414

Token 128: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.776438295841217
    2. ' =' → logprob: -0.776438295841217
    3. ' is' → logprob: -3.4014382362365723
    4. ')' → logprob: -3.6514382362365723
    5. '   ' → logprob: -5.526438236236572
    6. ' )' → logprob: -6.026438236236572
    7. 's' → logprob: -6.276438236236572
    8. '_path' → logprob: -6.401438236236572
    9. '_s' → logprob: -6.401438236236572
    10. 'is' → logprob: -7.026438236236572

Token 129: ' S' (ID: 336)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.12106616050004959
    2. 'at' → logprob: -2.996066093444824
    3. ' the' → logprob: -4.246066093444824
    4. ' first' → logprob: -4.871066093444824
    5. ')' → logprob: -5.121066093444824
    6. ' now' → logprob: -5.371066093444824
    7. 's' → logprob: -5.996066093444824
    8. 'the' → logprob: -6.371066093444824
    9. ' processed' → logprob: -6.496066093444824
    10. ' to' → logprob: -6.621066093444824

Token 130: '[' (ID: 58)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.02543148212134838
    2. '[' → logprob: -3.9004313945770264
    3. ' reversed' → logprob: -6.7754316329956055
    4. '.reverse' → logprob: -7.1504316329956055
    5. '[-' → logprob: -7.6504316329956055
    6. 're' → logprob: -8.275431632995605
    7. ')' → logprob: -8.650431632995605
    8. '.index' → logprob: -8.650431632995605
    9. '=' → logprob: -8.900431632995605
    10. ' =' → logprob: -9.025431632995605

Token 131: '0' (ID: 15)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.25695258378982544
    2. ':' → logprob: -1.8819525241851807
    3. ' :' → logprob: -3.8819525241851807
    4. '-' → logprob: -4.00695276260376
    5. '::' → logprob: -4.75695276260376
    6. ':]' → logprob: -5.00695276260376
    7. '[::-' → logprob: -5.25695276260376
    8. '1' → logprob: -6.13195276260376
    9. ':
' → logprob: -6.25695276260376
    10. ':-' → logprob: -6.50695276260376

Token 132: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.023429950699210167
    2. ']' → logprob: -4.023429870605469
    3. ':' → logprob: -6.398429870605469
    4. ' ])' → logprob: -7.023429870605469
    5. '][' → logprob: -7.398429870605469
    6. ')' → logprob: -7.523429870605469
    7. '[::-' → logprob: -7.898429870605469
    8. '],' → logprob: -8.273429870605469
    9. ']):' → logprob: -8.398429870605469
    10. ']).' → logprob: -9.398429870605469

Token 133: ' start' (ID: 1604)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.21771909296512604
    2. 'S' → logprob: -2.717719078063965
    3. ')' → logprob: -2.842719078063965
    4. ' and' → logprob: -4.342719078063965
    5. ' so' → logprob: -4.592719078063965
    6. ' the' → logprob: -5.217719078063965
    7. ' start' → logprob: -5.467719078063965
    8. '   ' → logprob: -5.592719078063965
    9. ' )' → logprob: -5.592719078063965
    10. 's' → logprob: -5.842719078063965

Token 134: ' S' (ID: 336)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9745157957077026
    2. ' at' → logprob: -1.3495157957077026
    3. '=' → logprob: -1.8495157957077026
    4. ')' → logprob: -2.599515914916992
    5. ' =' → logprob: -2.974515914916992
    6. ':' → logprob: -4.224515914916992
    7. ' from' → logprob: -4.224515914916992
    8. 'index' → logprob: -5.224515914916992
    9. '):
' → logprob: -5.724515914916992
    10. ' as' → logprob: -5.724515914916992

Token 135: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8376832008361816
    2. '[-' → logprob: -1.8376832008361816
    3. ':]' → logprob: -2.3376832008361816
    4. '-' → logprob: -2.4626832008361816
    5. '[::-' → logprob: -2.5876832008361816
    6. ':' → logprob: -2.9626832008361816
    7. ']' → logprob: -3.0876832008361816
    8. '])' → logprob: -4.462683200836182
    9. '::-' → logprob: -4.587683200836182
    10. '1' → logprob: -4.712683200836182

Token 136: '])
' (ID: 5169)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004114138428121805
    2. ' -' → logprob: -5.629114151000977
    3. '])' → logprob: -8.129114151000977
    4. ':' → logprob: -9.129114151000977
    5. '1' → logprob: -9.754114151000977
    6. ']' → logprob: -10.504114151000977
    7. '::-' → logprob: -12.004114151000977
    8. ']-' → logprob: -12.379114151000977
    9. ':]' → logprob: -12.504114151000977
    10. '])-' → logprob: -13.629114151000977

Token 137: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6381287574768066
    2. '   ' → logprob: -0.8881287574768066
    3. ' S' → logprob: -2.8881287574768066
    4. '
' → logprob: -6.513128757476807
    5. '    
' → logprob: -6.513128757476807
    6. ' 
' → logprob: -7.888128757476807
    7. 's' → logprob: -8.013128280639648
    8. ' =' → logprob: -8.513128280639648
    9. '```' → logprob: -8.763128280639648
    10. '\n' → logprob: -8.888128280639648

Token 138: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.08900216966867447
    2. ' S' → logprob: -2.4640021324157715
    3. 's' → logprob: -9.83900260925293
    4. 'path' → logprob: -12.58900260925293
    5. ' path' → logprob: -12.58900260925293
    6. ' s' → logprob: -13.83900260925293
    7. '   ' → logprob: -14.46400260925293
    8. '```' → logprob: -15.58900260925293
    9. 'import' → logprob: -16.08900260925293
    10. ' ' → logprob: -16.21400260925293

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141801238059998
    2. '=' → logprob: -1.7014180421829224
    3. '=input' → logprob: -13.076417922973633
    4. ' ' → logprob: -14.826417922973633
    5. 's' → logprob: -15.326417922973633
    6. ' ' → logprob: -15.451417922973633
    7. '_' → logprob: -15.576417922973633
    8. '  ' → logprob: -15.701417922973633
    9. '_=' → logprob: -15.701417922973633
    10. ',' → logprob: -15.826417922973633

Token 140: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868890106678009
    2. ' input' → logprob: -1.1368889808654785
    3. 'list' → logprob: -11.386889457702637
    4. ' list' → logprob: -12.386889457702637
    5. ' ' → logprob: -14.136889457702637
    6. '(input' → logprob: -14.511889457702637
    7. '	input' → logprob: -15.261889457702637
    8. '[input' → logprob: -15.511889457702637
    9. '   ' → logprob: -15.761889457702637
    10. '<input' → logprob: -15.886889457702637

Token 141: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07896964997053146
    2. '().' → logprob: -2.578969717025757
    3. '()[' → logprob: -9.828969955444336
    4. '(' → logprob: -11.453969955444336
    5. ' ()' → logprob: -12.953969955444336
    6. '()`' → logprob: -13.203969955444336
    7. '()]' → logprob: -13.203969955444336
    8. '())' → logprob: -13.453969955444336
    9. '();' → logprob: -13.703969955444336
    10. '().'' → logprob: -13.703969955444336

Token 142: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.440258264541626
    2. '::-' → logprob: -1.065258264541626
    3. ' :' → logprob: -4.940258026123047
    4. '::' → logprob: -5.815258026123047
    5. ':
' → logprob: -8.065258026123047
    6. '<' → logprob: -8.065258026123047
    7. ':<' → logprob: -8.315258026123047
    8. '[::-' → logprob: -8.440258026123047
    9. ':N' → logprob: -9.690258026123047
    10. '
' → logprob: -10.190258026123047

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004484269011300057
    2. '-' → logprob: -7.875448226928711
    3. 'None' → logprob: -9.875448226928711
    4. '::-' → logprob: -12.500448226928711
    5. ' ' → logprob: -12.750448226928711
    6. '```' → logprob: -12.875448226928711
    7. '``' → logprob: -13.000448226928711
    8. ']' → logprob: -14.000448226928711
    9. '2' → logprob: -14.375448226928711
    10. '
' → logprob: -14.375448226928711

Token 144: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010402000043541193
    2. ']' → logprob: -9.375103950500488
    3. ' )' → logprob: -11.125103950500488
    4. ')
' → logprob: -13.500103950500488
    5. '   ' → logprob: -14.625103950500488
    6. ')]' → logprob: -14.875103950500488
    7. '])' → logprob: -14.875103950500488
    8. '")' → logprob: -15.000103950500488
    9. '）' → logprob: -15.000103950500488
    10. '}' → logprob: -15.750103950500488

Token 145: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1482865810394287
    2. '   ' → logprob: -2.8982865810394287
    3. '    
' → logprob: -3.5232865810394287
    4. '\n' → logprob: -4.023286819458008
    5. ' 
' → logprob: -4.273286819458008
    6. '<|end|>' → logprob: -4.648286819458008
    7. '  
' → logprob: -5.023286819458008
    8. '```' → logprob: -6.523286819458008
    9. '   
' → logprob: -7.273286819458008
    10. 'newline' → logprob: -7.898286819458008

Token 146: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4180837571620941
    2. 'dist' → logprob: -1.2930837869644165
    3. 'from' → logprob: -2.793083667755127
    4. 'distance' → logprob: -6.793083667755127
    5. '#' (adapté à ' #') → logprob: -6.918083667755127
    6. 'd' → logprob: -7.793083667755127
    7. 'DP' → logprob: -7.793083667755127
    8. 'import' → logprob: -8.043084144592285
    9. '   ' → logprob: -8.043084144592285
    10. 'visited' → logprob: -8.168084144592285

Token 147: ' List' (ID: 2655)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8054709434509277
    2. 'from' → logprob: -0.9304709434509277
    3. 'dist' → logprob: -1.9304709434509277
    4. '#' → logprob: -5.305470943450928
    5. 'import' → logprob: -5.930470943450928
    6. ' from' → logprob: -6.805470943450928
    7. 'INF' → logprob: -6.805470943450928
    8. 'visited' → logprob: -7.055470943450928
    9. ' dist' → logprob: -7.430470943450928
    10. 'distance' → logprob: -7.680470943450928

Token 148: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9860875606536865
    2. '_dp' → logprob: -1.6110875606536865
    3. 'dp' → logprob: -2.3610875606536865
    4. '_' → logprob: -2.3610875606536865
    5. '_moves' → logprob: -2.3610875606536865
    6. '_of' → logprob: -2.9860875606536865
    7. '_next' → logprob: -4.611087799072266
    8. '_dist' → logprob: -4.736087799072266
    9. 'dist' → logprob: -4.736087799072266
    10. 'of' → logprob: -5.111087799072266

Token 149: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.8096097111701965
    2. 'store' → logprob: -1.6846096515655518
    3. 'dp' → logprob: -1.8096096515655518
    4. 'find' → logprob: -4.559609889984131
    5. 'append' → logprob: -4.559609889984131
    6. '_move' → logprob: -4.684609889984131
    7. 'dist' → logprob: -4.809609889984131
    8. ' =' → logprob: -4.809609889984131
    9. 'keep' → logprob: -4.809609889984131
    10. 'move' → logprob: -4.809609889984131

Token 150: ' moves' (ID: 19523)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3277130126953125
    2. ' dp' → logprob: -1.4527130126953125
    3. 'dist' → logprob: -3.5777130126953125
    4. ' dist' → logprob: -4.5777130126953125
    5. ' distances' → logprob: -6.3277130126953125
    6. ' next' → logprob: -6.5777130126953125
    7. ' steps' → logprob: -7.8277130126953125
    8. ' ans' → logprob: -7.8277130126953125
    9. ' moves' → logprob: -7.9527130126953125
    10. ' min' → logprob: -8.077713012695312

Token 151: ' made' (ID: 2452)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6426705718040466
    2. 'dp' → logprob: -1.3926706314086914
    3. 'moves' → logprob: -1.7676706314086914
    4. '=' → logprob: -4.392670631408691
    5. ' dp' → logprob: -4.892670631408691
    6. '   ' → logprob: -5.017670631408691
    7. ' moves' → logprob: -5.267670631408691
    8. 'dist' → logprob: -5.517670631408691
    9. 'steps' → logprob: -5.767670631408691
    10. '=[]' → logprob: -5.767670631408691

Token 152: ' (' (ID: 350)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.1376742124557495
    2. 'dp' → logprob: -3.012674331665039
    3. ' moves' → logprob: -3.012674331665039
    4. ' =' → logprob: -5.137674331665039
    5. 'steps' → logprob: -5.637674331665039
    6. ' dp' → logprob: -5.637674331665039
    7. ' ans' → logprob: -5.887674331665039
    8. '[]' → logprob: -6.262674331665039
    9. '=[]' → logprob: -6.262674331665039
    10. '   ' → logprob: -6.262674331665039

Token 153: 'in' (ID: 258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8059049248695374
    2. '[])' → logprob: -1.3059048652648926
    3. '[]' → logprob: -1.5559048652648926
    4. 'moves' → logprob: -3.0559048652648926
    5. ' [])' → logprob: -4.430904865264893
    6. ' moves' → logprob: -4.805904865264893
    7. ']' → logprob: -6.555904865264893
    8. ' []' → logprob: -7.305904865264893
    9. 'steps' → logprob: -7.430904865264893
    10. '[' → logprob: -8.05590534210205

Token 154: ' reverse' (ID: 18199)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1155668497085571
    2. 'reverse' → logprob: -1.8655668497085571
    3. 'terms' → logprob: -2.1155667304992676
    4. '[]' → logprob: -2.3655667304992676
    5. 'range' → logprob: -2.8655667304992676
    6. '[])' → logprob: -2.9905667304992676
    7. 'M' → logprob: -3.3655667304992676
    8. 'the' → logprob: -3.6155667304992676
    9. 'order' → logprob: -4.365566730499268
    10. ' [])' → logprob: -4.365566730499268

Token 155: ' order' (ID: 2569)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019892461597919464
    2. '_moves' → logprob: -4.144892692565918
    3. 'moves' → logprob: -7.019892692565918
    4. ']' → logprob: -7.519892692565918
    5. 'order' → logprob: -7.894892692565918
    6. ' )' → logprob: -8.144892692565918
    7. ' order' → logprob: -8.394892692565918
    8. '=' → logprob: -8.519892692565918
    9. '_steps' → logprob: -8.644892692565918
    10. '=[]' → logprob: -9.019892692565918

Token 156: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003421997418627143
    2. ']' → logprob: -5.753421783447266
    3. '   ' → logprob: -10.003421783447266
    4. 'moves' → logprob: -10.003421783447266
    5. ',' → logprob: -10.128421783447266
    6. ' )' → logprob: -10.753421783447266
    7. '=' → logprob: -10.753421783447266
    8. ' =' → logprob: -10.878421783447266
    9. ':' → logprob: -11.003421783447266
    10. '_moves' → logprob: -11.878421783447266

Token 157: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5155360102653503
    2. 'moves' → logprob: -1.5155360698699951
    3. ' moves' → logprob: -2.640536069869995
    4. 'steps' → logprob: -3.390536069869995
    5. ' steps' → logprob: -3.515536069869995
    6. '[]' → logprob: -5.015535831451416
    7. '[])' → logprob: -5.515535831451416
    8. ' )' → logprob: -5.640535831451416
    9. ']' → logprob: -5.765535831451416
    10. '#' → logprob: -5.890535831451416

Token 158: ' goal' (ID: 8583)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.0869662761688232
    2. 'the' → logprob: -2.0869662761688232
    3. ' start' → logprob: -2.3369662761688232
    4. '0' → logprob: -2.4619662761688232
    5. 'S' → logprob: -2.5869662761688232
    6. ' the' → logprob: -2.5869662761688232
    7. ')' → logprob: -2.8369662761688232
    8. ' S' → logprob: -3.4619662761688232
    9. ' ' → logprob: -3.7119662761688232
    10. '1' → logprob: -4.086966514587402

Token 159: ' backward' (ID: 58986)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6837733387947083
    2. ')' → logprob: -1.1837732791900635
    3. 'to' → logprob: -1.6837732791900635
    4. ',' → logprob: -7.433773517608643
    5. '):' → logprob: -7.683773517608643
    6. ' )' → logprob: -7.808773517608643
    7. '   ' → logprob: -7.933773517608643
    8. 'moves' → logprob: -8.433773040771484
    9. 'positions' → logprob: -8.808773040771484
    10. '=' → logprob: -9.183773040771484

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040302498382516205
    2. 'moves' → logprob: -9.00040340423584
    3. '   ' → logprob: -9.12540340423584
    4. ']' → logprob: -10.37540340423584
    5. '):' → logprob: -10.50040340423584
    6. ' moves' → logprob: -10.62540340423584
    7. ' to' → logprob: -10.62540340423584
    8. ' )' → logprob: -10.75040340423584
    9. 'to' → logprob: -12.00040340423584
    10. ',' → logprob: -12.00040340423584

Token 161: '   ' (ID: 271)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.11699260026216507
    2. ' moves' → logprob: -2.366992712020874
    3. '   ' → logprob: -5.491992473602295
    4. 'steps' → logprob: -6.116992473602295
    5. 'dp' → logprob: -6.241992473602295
    6. 'path' → logprob: -6.366992473602295
    7. ' path' → logprob: -6.741992473602295
    8. ' ans' → logprob: -6.741992473602295
    9. 'ans' → logprob: -7.366992473602295
    10. 'res' → logprob: -7.491992473602295

Token 162: ' ans' (ID: 3345)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.25120437145233154
    2. ' moves' → logprob: -2.376204490661621
    3. 'dp' → logprob: -2.876204490661621
    4. 'path' → logprob: -3.626204490661621
    5. ' path' → logprob: -4.501204490661621
    6. ' dp' → logprob: -5.001204490661621
    7. 'steps' → logprob: -5.126204490661621
    8. 'res' → logprob: -5.251204490661621
    9. 'ans' (adapté à ' ans') → logprob: -5.251204490661621
    10. ' ans' → logprob: -6.501204490661621

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06205574795603752
    2. '=' → logprob: -2.812055826187134
    3. '=[]' → logprob: -9.437055587768555
    4. '_' → logprob: -13.062055587768555
    5. ',' → logprob: -13.562055587768555
    6. ' ' → logprob: -13.812055587768555
    7. '.' → logprob: -14.187055587768555
    8. 's' → logprob: -14.312055587768555
    9. '[]' → logprob: -14.312055587768555
    10. '[' → logprob: -15.187055587768555

Token 164: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02994486317038536
    2. ' []' → logprob: -3.529944896697998
    3. '[' → logprob: -8.65494441986084
    4. '[]
' → logprob: -11.77994441986084
    5. ' [' → logprob: -12.15494441986084
    6. '[]}' → logprob: -13.52994441986084
    7. '[]

' → logprob: -13.65494441986084
    8. '[],' → logprob: -13.77994441986084
    9. ' ' → logprob: -13.90494441986084
    10. '[]"' → logprob: -14.40494441986084

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5773274302482605
    2. ' for' → logprob: -1.5773274898529053
    3. 'for' → logprob: -2.4523274898529053
    4. 'dp' → logprob: -4.077327251434326
    5. ' next' → logprob: -4.327327251434326
    6. ' current' → logprob: -4.327327251434326
    7. 'pos' → logprob: -4.327327251434326
    8. 'current' → logprob: -4.452327251434326
    9. 'dist' → logprob: -4.577327251434326
    10. ' i' → logprob: -4.577327251434326

Token 166: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0100237131118774
    2. 'dist' → logprob: -1.5100237131118774
    3. 'for' → logprob: -1.8850237131118774
    4. 'from' → logprob: -2.510023593902588
    5. 'pos' → logprob: -2.885023593902588
    6. ' for' → logprob: -3.635023593902588
    7. ' from' → logprob: -4.385023593902588
    8. ' dist' → logprob: -4.510023593902588
    9. 'import' → logprob: -4.760023593902588
    10. ' dp' → logprob: -4.760023593902588

Token 167: ' Current' (ID: 14536)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9880601763725281
    2. 'dp' → logprob: -0.9880601763725281
    3. 'dist' → logprob: -2.363060235977173
    4. 'i' → logprob: -3.238060235977173
    5. 'cur' → logprob: -3.363060235977173
    6. 'from' → logprob: -4.363059997558594
    7. 'for' → logprob: -4.613059997558594
    8. 'd' → logprob: -4.738059997558594
    9. 'last' → logprob: -5.113059997558594
    10. 'import' → logprob: -5.488059997558594

Token 168: ' position' (ID: 4010)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.11950034648180008
    2. ' =' → logprob: -3.1195003986358643
    3. '_position' → logprob: -3.6195003986358643
    4. '=' → logprob: -3.8695003986358643
    5. 'pos' → logprob: -3.9945003986358643
    6. 'position' → logprob: -6.744500160217285
    7. 'Pos' → logprob: -7.619500160217285
    8. '_idx' → logprob: -8.869500160217285
    9. '_' → logprob: -8.994500160217285
    10. '_index' → logprob: -9.119500160217285

Token 169: ';' (ID: 26)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042781632393598557
    2. '=' → logprob: -3.5427815914154053
    3. 'pos' → logprob: -4.542781829833984
    4. ' pos' → logprob: -6.542781829833984
    5. ' i' → logprob: -8.042781829833984
    6. 'i' → logprob: -8.667781829833984
    7. 'p' → logprob: -8.667781829833984
    8. ' p' → logprob: -8.792781829833984
    9. ' cur' → logprob: -11.667781829833984
    10. 'cur' → logprob: -11.667781829833984

Token 170: ' start' (ID: 1604)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3490756154060364
    2. ' pos' → logprob: -1.3490755558013916
    3. ' cur' → logprob: -4.599075794219971
    4. ' i' → logprob: -5.349075794219971
    5. ' p' → logprob: -5.349075794219971
    6. 'p' → logprob: -5.599075794219971
    7. 'cur' → logprob: -5.599075794219971
    8. 'i' → logprob: -6.224075794219971
    9. ' N' → logprob: -6.599075794219971
    10. 'N' → logprob: -6.849075794219971

Token 171: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144541561603546
    2. '=' → logprob: -1.701445460319519
    3. '=int' → logprob: -11.951445579528809
    4. 'pos' → logprob: -12.201445579528809
    5. ',' → logprob: -12.326445579528809
    6. '=N' → logprob: -12.951445579528809
    7. ' ' → logprob: -13.326445579528809
    8. 's' → logprob: -13.451445579528809
    9. 'position' → logprob: -13.826445579528809
    10. '<|end|>' → logprob: -13.826445579528809

Token 172: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10447818040847778
    2. 'N' → logprob: -2.354478120803833
    3. ' ' → logprob: -6.104478359222412
    4. ' N' → logprob: -6.354478359222412
    5. '1' → logprob: -8.229477882385254
    6. 'len' → logprob: -11.729477882385254
    7. 'S' → logprob: -12.354477882385254
    8. 'n' → logprob: -12.354477882385254
    9. '`' → logprob: -13.729477882385254
    10. 's' → logprob: -14.291977882385254

Token 173: ' goal' (ID: 8583)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026748403906822205
    2. ' ' → logprob: -4.026748180389404
    3. 'N' → logprob: -5.401748180389404
    4. 'goal' → logprob: -6.776748180389404
    5. ' N' → logprob: -7.151748180389404
    6. ' end' → logprob: -7.151748180389404
    7. 'end' → logprob: -7.526748180389404
    8. ' goal' → logprob: -8.026748657226562
    9. 'position' → logprob: -9.276748657226562
    10. ' position' → logprob: -9.401748657226562

Token 174: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3699797987937927
    2. 'pos' → logprob: -1.4949798583984375
    3. '=' → logprob: -2.6199798583984375
    4. ' pos' → logprob: -5.1199798583984375
    5. 'p' → logprob: -5.7449798583984375
    6. 'i' → logprob: -6.2449798583984375
    7. ',' → logprob: -7.8699798583984375
    8. 'cur' → logprob: -8.494979858398438
    9. ' i' → logprob: -8.994979858398438
    10. ' p' → logprob: -9.244979858398438

Token 175: 'position' (ID: 4504)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31359586119651794
    2. '0' → logprob: -1.3135958909988403
    3. ' N' → logprob: -8.43859577178955
    4. ' ' → logprob: -9.93859577178955
    5. 'n' → logprob: -11.06359577178955
    6. ')' → logprob: -11.31359577178955
    7. 'len' → logprob: -11.31359577178955
    8. '1' → logprob: -11.81359577178955
    9. 'pos' → logprob: -12.81359577178955
    10. 'S' → logprob: -12.81359577178955

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5977986454963684
    2. ' =' → logprob: -1.2227985858917236
    3. '=' → logprob: -2.0977985858917236
    4. ' ' → logprob: -3.8477985858917236
    5. ' N' → logprob: -4.972798824310303
    6. 'N' → logprob: -5.972798824310303
    7. ')' → logprob: -7.472798824310303
    8. ':' → logprob: -7.722798824310303
    9. '=N' → logprob: -7.847798824310303
    10. 's' → logprob: -8.597798347473145

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12734413146972656
    2. 'N' → logprob: -2.1273441314697266
    3. '=' → logprob: -8.752344131469727
    4. ' N' → logprob: -9.002344131469727
    5. ' ' → logprob: -9.877344131469727
    6. '=N' → logprob: -10.252344131469727
    7. ')' → logprob: -11.252344131469727
    8. ' =' → logprob: -11.252344131469727
    9. '`' → logprob: -12.002344131469727
    10. '#' → logprob: -12.752344131469727

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006970656104385853
    2. ' )' → logprob: -7.375697135925293
    3. '   ' → logprob: -10.375697135925293
    4. '0' → logprob: -11.250697135925293
    5. '#' → logprob: -12.000697135925293
    6. ')
' → logprob: -12.375697135925293
    7. ',' → logprob: -12.500697135925293
    8. '=' → logprob: -13.000697135925293
    9. '```' → logprob: -13.375697135925293
    10. ')#' → logprob: -14.000697135925293

Token 179: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.022044630721211433
    2. 'cur' → logprob: -4.897044658660889
    3. ' pos' → logprob: -4.897044658660889
    4. 'i' → logprob: -5.522044658660889
    5. 'p' → logprob: -7.022044658660889
    6. ' cur' → logprob: -7.772044658660889
    7. '   ' → logprob: -7.772044658660889
    8. 'position' → logprob: -8.14704418182373
    9. 'current' → logprob: -8.52204418182373
    10. 'curr' → logprob: -8.64704418182373

Token 180: ' now' (ID: 1954)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15891438722610474
    2. 'cur' → logprob: -2.40891432762146
    3. ' pos' → logprob: -4.283914566040039
    4. ' cur' → logprob: -4.533914566040039
    5. 'now' (adapté à ' now') → logprob: -5.033914566040039
    6. 'x' → logprob: -5.283914566040039
    7. 'p' → logprob: -5.408914566040039
    8. 'i' → logprob: -5.408914566040039
    9. 'curr' → logprob: -6.158914566040039
    10. 'c' → logprob: -6.408914566040039

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020861029624939
    2. '=' → logprob: -2.3502085208892822
    3. ',' → logprob: -13.850208282470703
    4. ' ' → logprob: -15.225208282470703
    5. '=int' → logprob: -15.225208282470703
    6. ')' → logprob: -16.225208282470703
    7. '＝' → logprob: -16.225208282470703
    8. ' =)' → logprob: -16.225208282470703
    9. ' =
' → logprob: -16.600208282470703
    10. ' ' → logprob: -16.850208282470703

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0050791106186807156
    2. 'N' → logprob: -6.00507926940918
    3. ' ' → logprob: -6.00507926940918
    4. ' N' → logprob: -9.00507926940918
    5. '1' → logprob: -11.75507926940918
    6. '   ' → logprob: -13.88007926940918
    7. 'n' → logprob: -14.88007926940918
    8. '```' → logprob: -15.44257926940918
    9. 'len' → logprob: -15.69257926940918
    10. '`' → logprob: -15.75507926940918

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16153277456760406
    2. 'N' → logprob: -1.9115327596664429
    3. ' ' → logprob: -7.036532878875732
    4. ' N' → logprob: -7.911532878875732
    5. 'len' → logprob: -10.036532402038574
    6. '1' → logprob: -11.786532402038574
    7. 'n' → logprob: -12.536532402038574
    8. 'int' → logprob: -13.911532402038574
    9. '   ' → logprob: -14.099032402038574
    10. '  ' → logprob: -14.411532402038574

Token 184: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18052983283996582
    2. '\n' → logprob: -3.180529832839966
    3. ' 
' → logprob: -3.555529832839966
    4. '   ' → logprob: -3.680529832839966
    5. ' while' → logprob: -4.055529594421387
    6. '<|end|>' → logprob: -4.055529594421387
    7. 'while' → logprob: -4.180529594421387
    8. '    
' → logprob: -4.680529594421387
    9. '```' → logprob: -5.555529594421387
    10. '  
' → logprob: -6.055529594421387

Token 185: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04207804426550865
    2. '   ' → logprob: -3.2920780181884766
    3. ' while' → logprob: -5.542078018188477
    4. 'for' → logprob: -9.542078018188477
    5. '
' → logprob: -11.167078018188477
    6. '```' → logprob: -11.292078018188477
    7. '	while' → logprob: -11.667078018188477
    8. 'import' → logprob: -13.917078018188477
    9. '    
' → logprob: -14.167078018188477
    10. 'from' → logprob: -15.042078018188477

Token 186: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00013762809976469725
    2. 'for' → logprob: -9.000137329101562
    3. 'from' → logprob: -11.625137329101562
    4. ' while' → logprob: -12.500137329101562
    5. 'import' → logprob: -13.875137329101562
    6. '   ' → logprob: -15.375137329101562
    7. 'visited' → logprob: -16.125137329101562
    8. 'While' → logprob: -16.625137329101562
    9. 'wh' → logprob: -17.375137329101562
    10. 'next' → logprob: -18.125137329101562

Token 187: ' True' (ID: 6432)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.004679799545556307
    2. 'now' → logprob: -5.7546796798706055
    3. ' True' → logprob: -6.6296796798706055
    4. 'True' → logprob: -9.254679679870605
    5. '(now' → logprob: -10.129679679870605
    6. '	now' → logprob: -11.504679679870605
    7. ' S' → logprob: -11.629679679870605
    8. 'Now' → logprob: -12.129679679870605
    9. ' ' → logprob: -12.254679679870605
    10. 'S' → logprob: -12.504679679870605

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.898723561083898e-05
    2. ':
' → logprob: -10.375079154968262
    3. '       ' → logprob: -11.000079154968262
    4. ' :' → logprob: -11.125079154968262
    5. '   ' → logprob: -11.875079154968262
    6. '):' → logprob: -12.500079154968262
    7. ',' → logprob: -13.125079154968262
    8. '    ' → logprob: -14.375079154968262
    9. '<|end|>' → logprob: -14.375079154968262
    10. '=' → logprob: -14.750079154968262

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004509038757532835
    2. '   ' → logprob: -6.254508972167969
    3. ' if' → logprob: -6.379508972167969
    4. '    ' → logprob: -7.379508972167969
    5. '<|end|>' → logprob: -9.379508972167969
    6. '        
' → logprob: -10.379508972167969
    7. ' 
' → logprob: -10.754508972167969
    8. '    
' → logprob: -10.879508972167969
    9. ',' → logprob: -11.004508972167969
    10. 'if' → logprob: -11.504508972167969

Token 190: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45247748494148254
    2. 'if' → logprob: -1.7024774551391602
    3. '       ' → logprob: -2.07747745513916
    4. '    ' → logprob: -3.82747745513916
    5. '   ' → logprob: -4.70247745513916
    6. ' next' → logprob: -4.95247745513916
    7. 'next' → logprob: -5.20247745513916
    8. ' found' → logprob: -5.45247745513916
    9. 'found' → logprob: -5.95247745513916
    10. ' for' → logprob: -7.07747745513916

Token 191: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19580239057540894
    2. ' if' → logprob: -2.6958024501800537
    3. 'found' → logprob: -2.8208024501800537
    4. '   ' → logprob: -3.3208024501800537
    5. 'next' → logprob: -5.820802211761475
    6. 'for' → logprob: -5.945802211761475
    7. ' found' → logprob: -6.070802211761475
    8. 'move' → logprob: -6.695802211761475
    9. 'm' → logprob: -6.695802211761475
    10. ' moved' → logprob: -6.945802211761475

Token 192: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012810396030545235
    2. 'if' → logprob: -4.387810230255127
    3. ' now' → logprob: -8.387810707092285
    4. ' for' → logprob: -9.887810707092285
    5. ' ' → logprob: -12.137810707092285
    6. 'for' → logprob: -12.637810707092285
    7. ' ' → logprob: -12.762810707092285
    8. 'now' → logprob: -12.762810707092285
    9. '    ' → logprob: -12.887810707092285
    10. '   ' → logprob: -14.262810707092285

Token 193: ' we' (ID: 581)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.03365238755941391
    2. ' now' → logprob: -3.4086523056030273
    3. '(now' → logprob: -13.158652305603027
    4. '[now' → logprob: -13.408652305603027
    5. 'nown' → logprob: -13.783652305603027
    6. 'S' → logprob: -14.408652305603027
    7. '	now' → logprob: -14.658652305603027
    8. '_now' → logprob: -15.158652305603027
    9. 'Now' → logprob: -15.408652305603027
    10. '   ' → logprob: -15.533652305603027

Token 194: ' can' (ID: 665)
  Prédit: ''ve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ve' → logprob: -0.6854687333106995
    2. ' have' → logprob: -1.3104686737060547
    3. ' reached' → logprob: -1.9354686737060547
    4. 'have' → logprob: -2.6854686737060547
    5. ' are' → logprob: -5.185468673706055
    6. 're' → logprob: -5.810468673706055
    7. '   ' → logprob: -6.060468673706055
    8. 'are' → logprob: -6.935468673706055
    9. 've' → logprob: -7.310468673706055
    10. ''re' → logprob: -8.060468673706055

Token 195: ' reach' (ID: 7627)
  Prédit: ' reach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.46117690205574036
    2. ' move' → logprob: -2.211176872253418
    3. ' break' → logprob: -2.961176872253418
    4. 'reach' → logprob: -3.086176872253418
    5. '   ' → logprob: -3.211176872253418
    6. ' jump' → logprob: -3.586176872253418
    7. 'jump' → logprob: -3.836176872253418
    8. ' return' → logprob: -3.836176872253418
    9. 'return' → logprob: -4.461176872253418
    10. 'move' → logprob: -4.711176872253418

Token 196: ' or' (ID: 503)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.0807405337691307
    2. 'now' → logprob: -2.705740451812744
    3. ' the' → logprob: -5.080740451812744
    4. ' N' → logprob: -6.080740451812744
    5. ' next' → logprob: -6.955740451812744
    6. 'the' → logprob: -8.205740928649902
    7. 'next' → logprob: -8.455740928649902
    8. ' a' → logprob: -8.580740928649902
    9. 'N' → logprob: -8.830740928649902
    10. ' if' → logprob: -9.455740928649902

Token 197: ' exceed' (ID: 23275)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.8734874129295349
    2. ' break' → logprob: -1.6234874725341797
    3. ' have' → logprob: -1.7484874725341797
    4. ' passed' → logprob: -3.2484874725341797
    5. ' surpass' → logprob: -3.2484874725341797
    6. ' reach' → logprob: -3.9984874725341797
    7. ' are' → logprob: -3.9984874725341797
    8. ' now' → logprob: -4.12348747253418
    9. ' reached' → logprob: -4.37348747253418
    10. ' exceed' → logprob: -4.49848747253418

Token 198: ' the' (ID: 290)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015553402714431286
    2. ' N' → logprob: -4.6405534744262695
    3. 'now' → logprob: -5.5155534744262695
    4. ' now' → logprob: -6.5155534744262695
    5. '       ' → logprob: -9.26555347442627
    6. ' the' → logprob: -9.51555347442627
    7. 'the' → logprob: -9.64055347442627
    8. '   ' → logprob: -10.51555347442627
    9. 'n' → logprob: -11.64055347442627
    10. 'end' → logprob: -13.39055347442627

Token 199: ' start' (ID: 1604)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03238599747419357
    2. ' N' → logprob: -3.532386064529419
    3. 'end' → logprob: -7.28238582611084
    4. 'n' → logprob: -7.53238582611084
    5. '   ' → logprob: -7.78238582611084
    6. ' end' → logprob: -8.15738582611084
    7. 'length' → logprob: -8.15738582611084
    8. ' length' → logprob: -9.15738582611084
    9. 'len' → logprob: -10.28238582611084
    10. 'now' → logprob: -10.78238582611084

Token 200: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49001458287239075
    2. ' =' → logprob: -2.7400145530700684
    3. ' or' → logprob: -2.9900145530700684
    4. ' :' → logprob: -3.2400145530700684
    5. ' ' → logprob: -3.3650145530700684
    6. '+' → logprob: -3.3650145530700684
    7. '    ' → logprob: -3.4900145530700684
    8. ' (' → logprob: -3.6150145530700684
    9. '=' → logprob: -3.9900145530700684
    10. ' from' → logprob: -4.115014553070068

Token 201: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.8623583316802979
    2. 'now' → logprob: -2.112358331680298
    3. ' the' → logprob: -2.612358331680298
    4. 'N' → logprob: -2.737358331680298
    5. 'one' → logprob: -2.862358331680298
    6. ' range' → logprob: -2.862358331680298
    7. 'range' → logprob: -2.862358331680298
    8. ' now' → logprob: -2.987358331680298
    9. ' this' → logprob: -3.737358331680298
    10. ' N' → logprob: -3.862358331680298

Token 202: ' move' (ID: 5275)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.22127988934516907
    2. ' move' → logprob: -1.9712798595428467
    3. 'step' → logprob: -3.5962798595428467
    4. 'move' → logprob: -3.7212798595428467
    5. '   ' → logprob: -5.846280097961426
    6. ' ' → logprob: -6.221280097961426
    7. ' jump' → logprob: -7.096280097961426
    8. '+' → logprob: -7.221280097961426
    9. '_move' → logprob: -7.721280097961426
    10. '  ' → logprob: -9.221280097961426

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.627280592918396
    2. ':' → logprob: -1.877280592918396
    3. ' if' → logprob: -2.0022807121276855
    4. '   ' → logprob: -2.2522807121276855
    5. '    ' → logprob: -3.5022807121276855
    6. '        ' → logprob: -4.6272807121276855
    7. 'if' → logprob: -5.2522807121276855
    8. ',' → logprob: -5.2522807121276855
    9. '+' → logprob: -5.6272807121276855
    10. '[' → logprob: -5.8772807121276855

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016687925904989243
    2. '<|end|>' → logprob: -4.516687870025635
    3. '        ' → logprob: -6.766687870025635
    4. ':' → logprob: -6.766687870025635
    5. '   ' → logprob: -6.766687870025635
    6. ' if' → logprob: -7.391687870025635
    7. '    ' → logprob: -7.641687870025635
    8. ' ' → logprob: -8.141688346862793
    9. ',' → logprob: -9.141688346862793
    10. '[' → logprob: -9.266688346862793

Token 205: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40420740842819214
    2. '       ' → logprob: -1.154207468032837
    3. 'if' (adapté à ' if') → logprob: -4.904207229614258
    4. ' for' → logprob: -6.029207229614258
    5. '        ' → logprob: -6.404207229614258
    6. ' next' → logprob: -6.779207229614258
    7. '    ' → logprob: -6.904207229614258
    8. '        
' → logprob: -6.904207229614258
    9. '   ' → logprob: -7.654207229614258
    10. ' 
' → logprob: -8.029207229614258

Token 206: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.1023503914475441
    2. ' now' → logprob: -2.3523504734039307
    3. 'N' → logprob: -6.352350234985352
    4. ' N' → logprob: -8.727350234985352
    5. 'M' → logprob: -9.602350234985352
    6. '   ' → logprob: -9.727350234985352
    7. '(now' → logprob: -9.977350234985352
    8. ' M' → logprob: -11.227350234985352
    9. 'n' → logprob: -11.852350234985352
    10. 'len' → logprob: -11.977350234985352

Token 207: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11234413832426071
    2. '+' → logprob: -2.3623440265655518
    3. ' >=' → logprob: -4.737344264984131
    4. ' ==' → logprob: -5.987344264984131
    5. '>=' → logprob: -7.862344264984131
    6. '==' → logprob: -8.112343788146973
    7. ' ' → logprob: -10.362343788146973
    8. ' +=' → logprob: -10.737343788146973
    9. ' <=' → logprob: -11.487343788146973
    10. ' >' → logprob: -11.737343788146973

Token 208: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002406090497970581
    2. ' M' → logprob: -8.375240325927734
    3. 'N' → logprob: -11.875240325927734
    4. '1' → logprob: -13.125240325927734
    5. '   ' → logprob: -14.250240325927734
    6. 'm' → logprob: -16.000240325927734
    7. ' ' → logprob: -17.000240325927734
    8. '[M' → logprob: -17.250240325927734
    9. '>M' → logprob: -17.375240325927734
    10. '100' → logprob: -17.625240325927734

Token 209: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22580000758171082
    2. ' >=' → logprob: -1.6008000373840332
    3. '>' → logprob: -8.100799560546875
    4. ' >' → logprob: -9.600799560546875
    5. '   ' → logprob: -12.475799560546875
    6. ' ' → logprob: -12.475799560546875
    7. '+' → logprob: -12.975799560546875
    8. ']>=' → logprob: -13.100799560546875
    9. ')>=' → logprob: -13.850799560546875
    10. '==' → logprob: -13.850799560546875

Token 210: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.6656825866666622e-05
    2. ' N' → logprob: -10.87502670288086
    3. '   ' → logprob: -11.87502670288086
    4. 'len' → logprob: -14.25002670288086
    5. 'n' → logprob: -16.62502670288086
    6. '       ' → logprob: -18.25002670288086
    7. ' ' → logprob: -18.75002670288086
    8. '    ' → logprob: -20.00002670288086
    9. '  ' → logprob: -20.12502670288086
    10. '	N' → logprob: -20.62502670288086

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001953133614733815
    2. ':
' → logprob: -6.751953125
    3. ' and' → logprob: -7.251953125
    4. '):' → logprob: -10.126953125
    5. 'and' → logprob: -11.126953125
    6. ' :' → logprob: -11.751953125
    7. '       ' → logprob: -12.501953125
    8. ' or' → logprob: -13.751953125
    9. ':

' → logprob: -13.876953125
    10. ')' → logprob: -13.876953125

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07155190408229828
    2. '       ' → logprob: -2.69655179977417
    3. ':' → logprob: -7.07155179977417
    4. ':
' → logprob: -8.821552276611328
    5. '#' → logprob: -9.071552276611328
    6. '<|end|>' → logprob: -9.071552276611328
    7. '0' → logprob: -9.196552276611328
    8. '```' → logprob: -9.946552276611328
    9. '        
' → logprob: -10.446552276611328
    10. ',' → logprob: -10.446552276611328

Token 213: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5455121397972107
    2. ' ans' → logprob: -0.9205121397972107
    3. '   ' → logprob: -4.2955121994018555
    4. 'break' → logprob: -5.5455121994018555
    5. '       ' → logprob: -6.4205121994018555
    6. '           ' → logprob: -6.4205121994018555
    7. ' break' → logprob: -7.1705121994018555
    8. '	ans' → logprob: -7.9205121994018555
    9. 'print' → logprob: -9.545512199401855
    10. '(ans' → logprob: -10.545512199401855

Token 214: ' Add' (ID: 4063)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.31218570470809937
    2. 'ans' → logprob: -1.4371857643127441
    3. '           ' → logprob: -3.937185764312744
    4. '       ' → logprob: -5.687185764312744
    5. 'break' → logprob: -5.687185764312744
    6. '   ' → logprob: -6.062185764312744
    7. ' break' → logprob: -7.062185764312744
    8. '	ans' → logprob: -7.812185764312744
    9. 'answer' → logprob: -7.937185764312744
    10. '(ans' → logprob: -10.187185287475586

Token 215: ' the' (ID: 290)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.816299557685852
    2. '1' → logprob: -1.191299557685852
    3. ' N' → logprob: -1.566299557685852
    4. 'str' → logprob: -4.0662994384765625
    5. ' str' → logprob: -4.5662994384765625
    6. ' ' → logprob: -4.6912994384765625
    7. '0' → logprob: -5.6912994384765625
    8. ' (' → logprob: -7.1912994384765625
    9. '[N' → logprob: -7.3162994384765625
    10. '`' → logprob: -7.6912994384765625

Token 216: ' final' (ID: 1721)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4930301010608673
    2. 'str' → logprob: -1.368030071258545
    3. ' N' → logprob: -2.368030071258545
    4. ' str' → logprob: -3.743030071258545
    5. '`' → logprob: -5.618030071258545
    6. 'next' → logprob: -6.118030071258545
    7. '1' → logprob: -6.493030071258545
    8. ' ' → logprob: -6.993030071258545
    9. 'M' → logprob: -7.118030071258545
    10. '(str' → logprob: -7.243030071258545

Token 217: ' step' (ID: 5983)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.7546178102493286
    2. ' move' → logprob: -1.8796178102493286
    3. ' N' → logprob: -2.129617691040039
    4. 'str' → logprob: -2.629617691040039
    5. 'step' → logprob: -2.754617691040039
    6. 'N' → logprob: -2.879617691040039
    7. ' str' → logprob: -4.504617691040039
    8. ' step' → logprob: -4.754617691040039
    9. '[N' → logprob: -4.879617691040039
    10. '"' → logprob: -5.254617691040039

Token 218: ' that' (ID: 484)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08816756308078766
    2. '           ' → logprob: -3.588167667388916
    3. ' N' → logprob: -3.963167667388916
    4. 'N' → logprob: -4.588167667388916
    5. '   ' → logprob: -4.963167667388916
    6. '[' → logprob: -5.713167667388916
    7. ' ans' → logprob: -5.963167667388916
    8. ' [' → logprob: -6.088167667388916
    9. '[N' → logprob: -6.213167667388916
    10. 'append' → logprob: -6.463167667388916

Token 219: ' brings' (ID: 15476)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.9261267185211182
    2. ' moves' → logprob: -1.6761267185211182
    3. 're' → logprob: -2.176126718521118
    4. ' reaches' → logprob: -2.676126718521118
    5. 'break' → logprob: -3.301126718521118
    6. 's' → logprob: -3.676126718521118
    7. 'ans' → logprob: -3.801126718521118
    8. 'ends' → logprob: -3.926126718521118
    9. ' ans' → logprob: -4.051126480102539
    10. 'brid' → logprob: -4.301126480102539

Token 220: ' us' (ID: 765)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7224839329719543
    2. ' us' → logprob: -1.3474838733673096
    3. ' now' → logprob: -2.2224838733673096
    4. 'now' → logprob: -2.2224838733673096
    5. 'the' → logprob: -3.5974838733673096
    6. ' player' → logprob: -5.472484111785889
    7. 'player' → logprob: -5.972484111785889
    8. 'us' → logprob: -6.097484111785889
    9. ' to' → logprob: -7.972484111785889
    10. 'from' → logprob: -8.72248363494873

Token 221: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26762449741363525
    2. 'to' → logprob: -2.0176243782043457
    3. ' from' → logprob: -3.1426243782043457
    4. 'from' → logprob: -3.2676243782043457
    5. ' back' → logprob: -4.767624378204346
    6. ' directly' → logprob: -5.142624378204346
    7. 'back' → logprob: -5.767624378204346
    8. ' closer' → logprob: -7.142624378204346
    9. ' home' → logprob: -7.892624378204346
    10. 'clos' → logprob: -8.017624855041504

Token 222: ' the' (ID: 290)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0025649568997323513
    2. ' N' → logprob: -6.002564907073975
    3. 'the' → logprob: -9.627565383911133
    4. ' the' → logprob: -11.502565383911133
    5. 'now' → logprob: -12.127565383911133
    6. 'n' → logprob: -12.627565383911133
    7. 'start' → logprob: -13.377565383911133
    8. '   ' → logprob: -13.877565383911133
    9. ' now' → logprob: -14.377565383911133
    10. 'end' → logprob: -14.752565383911133

Token 223: ' start' (ID: 1604)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005090614315122366
    2. ' N' → logprob: -6.005090713500977
    3. 'end' → logprob: -6.755090713500977
    4. 'start' → logprob: -7.130090713500977
    5. 'finish' → logprob: -7.755090713500977
    6. ' end' → logprob: -9.505090713500977
    7. ' finish' → logprob: -9.755090713500977
    8. ' start' → logprob: -11.005090713500977
    9. 'goal' → logprob: -11.130090713500977
    10. 'n' → logprob: -11.130090713500977

Token 224: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37109002470970154
    2. '       ' → logprob: -2.1210899353027344
    3. '   ' → logprob: -2.8710899353027344
    4. ' ans' → logprob: -2.9960899353027344
    5. ',' → logprob: -4.121089935302734
    6. ' and' → logprob: -4.246089935302734
    7. '.append' → logprob: -4.371089935302734
    8. '[' → logprob: -4.746089935302734
    9. '(ans' → logprob: -4.871089935302734
    10. ' +' → logprob: -5.121089935302734

Token 225: ' terminate' (ID: 58400)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5359160900115967
    2. ' break' → logprob: -0.9109160900115967
    3. '   ' → logprob: -4.660916328430176
    4. '       ' → logprob: -6.910916328430176
    5. 'return' → logprob: -7.285916328430176
    6. '           ' → logprob: -7.410916328430176
    7. '
' → logprob: -8.035916328430176
    8. ' return' → logprob: -8.410916328430176
    9. '	break' → logprob: -9.535916328430176
    10. '    ' → logprob: -9.535916328430176

Token 226: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12938351929187775
    2. ' ans' → logprob: -2.5043835639953613
    3. 'ans' → logprob: -3.6293835639953613
    4. '
' → logprob: -5.004383563995361
    5. '(ans' → logprob: -5.504383563995361
    6. '               ' → logprob: -6.879383563995361
    7. '       ' → logprob: -7.754383563995361
    8. '   ' → logprob: -8.754383087158203
    9. '            
' → logprob: -9.004383087158203
    10. '0' → logprob: -9.254383087158203

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023026609793305397
    2. '               ' → logprob: -4.898026466369629
    3. '       ' → logprob: -5.148026466369629
    4. ' ans' → logprob: -5.523026466369629
    5. '\n' → logprob: -6.898026466369629
    6. ' 
' → logprob: -7.273026466369629
    7. '[' → logprob: -7.273026466369629
    8. '            
' → logprob: -7.773026466369629
    9. '   ' → logprob: -7.898026466369629
    10. '(ans' → logprob: -8.023026466369629

Token 228: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5760374069213867
    2. 'ans' (adapté à ' ans') → logprob: -0.8260374069213867
    3. '           ' → logprob: -10.076037406921387
    4. 'print' → logprob: -11.201037406921387
    5. '	ans' → logprob: -11.326037406921387
    6. '(ans' → logprob: -11.451037406921387
    7. '   ' → logprob: -11.576037406921387
    8. 'break' → logprob: -13.076037406921387
    9. ' print' → logprob: -13.076037406921387
    10. 'answer' → logprob: -13.201037406921387

Token 229: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003362966235727072
    2. '.' → logprob: -8.000336647033691
    3. ' .' → logprob: -15.000336647033691
    4. '.app' → logprob: -15.250336647033691
    5. '.extend' → logprob: -16.125335693359375
    6. '.ap' → logprob: -16.750335693359375
    7. 'append' → logprob: -18.000335693359375
    8. '+.' → logprob: -19.125335693359375
    9. '.Append' → logprob: -19.375335693359375
    10. '​.' → logprob: -19.500335693359375

Token 230: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.087957002222538
    2. '(' → logprob: -2.5879569053649902
    3. '(str' → logprob: -4.96295690536499
    4. '('' → logprob: -6.58795690536499
    5. '((' → logprob: -7.71295690536499
    6. '(M' → logprob: -9.712957382202148
    7. '("' → logprob: -9.837957382202148
    8. '(n' → logprob: -9.962957382202148
    9. '(S' → logprob: -11.712957382202148
    10. '(max' → logprob: -11.837957382202148

Token 231: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09206900745630264
    2. '-' → logprob: -2.467068910598755
    3. '-now' → logprob: -5.842069149017334
    4. ')' → logprob: -8.967068672180176
    5. '[now' → logprob: -10.092068672180176
    6. ' now' → logprob: -10.842068672180176
    7. ' ' → logprob: -11.467068672180176
    8. 'now' → logprob: -11.842068672180176
    9. '   ' → logprob: -12.092068672180176
    10. '_now' → logprob: -13.467068672180176

Token 232: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -7.672236824873835e-05
    2. ' now' → logprob: -9.500076293945312
    3. '[now' → logprob: -14.125076293945312
    4. '1' → logprob: -14.375076293945312
    5. '_now' → logprob: -14.750076293945312
    6. '	now' → logprob: -16.625076293945312
    7. 'nown' → logprob: -16.750076293945312
    8. '   ' → logprob: -17.875076293945312
    9. 'Now' → logprob: -18.000076293945312
    10. '.now' → logprob: -18.125076293945312

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18112149834632874
    2. ')
' → logprob: -1.8061214685440063
    3. ' )' → logprob: -7.056121349334717
    4. ' )
' → logprob: -7.931121349334717
    5. ')
' → logprob: -9.181121826171875
    6. ')`
' → logprob: -10.931121826171875
    7. '       ' → logprob: -12.056121826171875
    8. '   ' → logprob: -12.181121826171875
    9. ')`' → logprob: -12.306121826171875
    10. '           ' → logprob: -12.306121826171875

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.8444881536415778e-05
    2. '       ' → logprob: -10.625028610229492
    3. '   ' → logprob: -12.875028610229492
    4. '
' → logprob: -13.750028610229492
    5. '               ' → logprob: -15.500028610229492
    6. '            
' → logprob: -15.875028610229492
    7. 'break' → logprob: -16.500028610229492
    8. '		' → logprob: -17.250028610229492
    9. '          ' → logprob: -17.750028610229492
    10. '    
' → logprob: -17.875028610229492

Token 235: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5786571502685547
    2. '       ' → logprob: -0.8286571502685547
    3. 'break' (adapté à ' break') → logprob: -6.578657150268555
    4. ' break' → logprob: -7.203657150268555
    5. '   ' → logprob: -7.703657150268555
    6. '	break' → logprob: -9.828657150268555
    7. '
' → logprob: -10.203657150268555
    8. '               ' → logprob: -10.828657150268555
    9. '        
' → logprob: -12.703657150268555
    10. '      ' → logprob: -13.078657150268555

Token 236: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007592313922941685
    2. '
' → logprob: -5.63259220123291
    3. '        
' → logprob: -5.63259220123291
    4. '   ' → logprob: -9.13259220123291
    5. '    
' → logprob: -9.50759220123291
    6. ')' → logprob: -10.13259220123291
    7. ' 
' → logprob: -10.38259220123291
    8. '       
' → logprob: -10.75759220123291
    9. '  
' → logprob: -11.00759220123291
    10. '\n' → logprob: -11.38259220123291

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009092770516872406
    2. '        
' → logprob: -5.134092807769775
    3. '   ' → logprob: -7.009092807769775
    4. '    
' → logprob: -7.259092807769775
    5. '
' → logprob: -7.384092807769775
    6. '        ' → logprob: -8.759092330932617
    7. '\n' → logprob: -9.134092330932617
    8. ' 
' → logprob: -9.509092330932617
    9. '    ' → logprob: -9.634092330932617
    10. '       
' → logprob: -9.634092330932617

Token 238: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33431023359298706
    2. 'found' → logprob: -2.459310293197632
    3. 'next' → logprob: -2.584310293197632
    4. '       ' → logprob: -3.709310293197632
    5. 'possible' → logprob: -4.084310054779053
    6. 'step' → logprob: -4.084310054779053
    7. '#' (adapté à ' #') → logprob: -4.209310054779053
    8. '   ' → logprob: -4.334310054779053
    9. 'best' → logprob: -4.709310054779053
    10. 'move' → logprob: -4.709310054779053

Token 239: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4805704653263092
    2. 'found' → logprob: -2.1055705547332764
    3. 'next' → logprob: -2.2305705547332764
    4. 'step' → logprob: -3.7305705547332764
    5. 'best' → logprob: -3.7305705547332764
    6. 'ok' → logprob: -4.230570316314697
    7. '#' → logprob: -4.355570316314697
    8. 'candidate' → logprob: -4.605570316314697
    9. 'possible' → logprob: -4.730570316314697
    10. 'move' → logprob: -4.855570316314697

Token 240: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23419348895549774
    2. ' all' → logprob: -2.6091935634613037
    3. 'all' → logprob: -2.8591935634613037
    4. '   ' → logprob: -3.6091935634613037
    5. 'steps' → logprob: -4.484193325042725
    6. ' steps' → logprob: -4.609193325042725
    7. ':
' → logprob: -4.859193325042725
    8. '    ' → logprob: -5.859193325042725
    9. 'for' → logprob: -6.234193325042725
    10. 'to' → logprob: -6.234193325042725

Token 241: ' make' (ID: 1520)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7421904802322388
    2. 'range' → logprob: -1.1171904802322388
    3. ' move' → logprob: -3.117190361022949
    4. 'for' → logprob: -3.117190361022949
    5. 'move' → logprob: -3.617190361022949
    6. ' find' → logprob: -3.742190361022949
    7. ' for' → logprob: -4.117190361022949
    8. 'i' → logprob: -4.992190361022949
    9. ' next' → logprob: -5.367190361022949
    10. 'next' → logprob: -5.367190361022949

Token 242: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8582324981689453
    2. ' the' → logprob: -1.2332324981689453
    3. ' next' → logprob: -2.4832324981689453
    4. ' steps' → logprob: -2.6082324981689453
    5. ' i' → logprob: -3.7332324981689453
    6. ' step' → logprob: -3.7332324981689453
    7. ' dice' → logprob: -4.233232498168945
    8. 'i' → logprob: -5.108232498168945
    9. 'a' → logprob: -5.108232498168945
    10. ' move' → logprob: -5.233232498168945

Token 243: ' largest' (ID: 10574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3508233428001404
    2. 'next' → logprob: -2.225823402404785
    3. 'step' → logprob: -2.975823402404785
    4. ' for' → logprob: -3.225823402404785
    5. ' next' → logprob: -3.225823402404785
    6. 'move' → logprob: -3.475823402404785
    7. 'found' → logprob: -4.975823402404785
    8. ' step' → logprob: -5.350823402404785
    9. 'best' → logprob: -5.475823402404785
    10. ' move' → logprob: -5.475823402404785

Token 244: ' possible' (ID: 4149)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8342374563217163
    2. ' possible' → logprob: -1.5842374563217163
    3. 'step' → logprob: -1.8342374563217163
    4. 'possible' → logprob: -2.209237575531006
    5. ' move' → logprob: -2.959237575531006
    6. 'move' → logprob: -4.209237575531006
    7. 'dice' → logprob: -4.709237575531006
    8. ' dice' → logprob: -4.959237575531006
    9. ' i' → logprob: -6.084237575531006
    10. ' jump' → logprob: -6.709237575531006

Token 245: ' move' (ID: 5275)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5567178726196289
    2. 'move' → logprob: -1.681717872619629
    3. 'dice' → logprob: -2.181717872619629
    4. ' move' → logprob: -2.806717872619629
    5. ' step' → logprob: -3.056717872619629
    6. ' dice' → logprob: -5.056717872619629
    7. 'roll' → logprob: -5.431717872619629
    8. 'jump' → logprob: -5.931717872619629
    9. ' roll' → logprob: -6.431717872619629
    10. 'j' → logprob: -6.931717872619629

Token 246: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1596752405166626
    2. ' for' → logprob: -1.1596752405166626
    3. ' from' → logprob: -1.9096752405166626
    4. 'from' → logprob: -2.409675121307373
    5. '       ' → logprob: -3.284675121307373
    6. 'for' → logprob: -3.409675121307373
    7. ',' → logprob: -3.534675121307373
    8. '        ' → logprob: -5.034675121307373
    9. ' ' → logprob: -5.284675121307373
    10. ' with' → logprob: -5.534675121307373

Token 247: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5698255300521851
    2. ' M' → logprob: -1.444825530052185
    3. 'i' → logprob: -3.0698256492614746
    4. ' i' → logprob: -3.4448256492614746
    5. 'range' → logprob: -3.9448256492614746
    6. 'd' → logprob: -4.194825649261475
    7. 'for' → logprob: -4.194825649261475
    8. ' range' → logprob: -4.819825649261475
    9. 'step' → logprob: -4.819825649261475
    10. 'm' → logprob: -4.944825649261475

Token 248: ' steps' (ID: 10331)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3193664252758026
    2. ')' → logprob: -1.944366455078125
    3. ' ,' → logprob: -2.194366455078125
    4. ' )' → logprob: -4.944366455078125
    5. '-' → logprob: -5.444366455078125
    6. ' -' → logprob: -6.069366455078125
    7. ' down' → logprob: -6.944366455078125
    8. ',
' → logprob: -7.194366455078125
    9. '   ' → logprob: -7.444366455078125
    10. '+' → logprob: -7.944366455078125

Token 249: ' forward' (ID: 6687)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45665833353996277
    2. ')' → logprob: -1.3316583633422852
    3. '       ' → logprob: -3.081658363342285
    4. ' ,' → logprob: -3.331658363342285
    5. ' )' → logprob: -4.956658363342285
    6. '        ' → logprob: -5.706658363342285
    7. 'from' → logprob: -5.956658363342285
    8. ' down' → logprob: -6.456658363342285
    9. '-' → logprob: -6.581658363342285
    10. ' -' → logprob: -7.706658363342285

Token 250: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40412092208862305
    2. ')' → logprob: -1.279120922088623
    3. ' ,' → logprob: -3.904120922088623
    4. '       ' → logprob: -4.029120922088623
    5. ' )' → logprob: -5.279120922088623
    6. '-' → logprob: -5.404120922088623
    7. ' -' → logprob: -6.154120922088623
    8. 'from' → logprob: -6.404120922088623
    9. '        ' → logprob: -7.029120922088623
    10. '           ' → logprob: -7.904120922088623

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019841039553284645
    2. ' for' → logprob: -4.144841194152832
    3. '<|end|>' → logprob: -6.769841194152832
    4. 'for' → logprob: -7.019841194152832
    5. '        
' → logprob: -8.019841194152832
    6. '        ' → logprob: -8.144841194152832
    7. ',' → logprob: -8.394841194152832
    8. ' to' → logprob: -8.644841194152832
    9. ' from' → logprob: -8.769841194152832
    10. ')' → logprob: -9.519841194152832

Token 252: ' step' (ID: 5983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0316922701895237
    2. ' for' → logprob: -3.5316922664642334
    3. 'move' → logprob: -7.0316925048828125
    4. 'step' (adapté à ' step') → logprob: -7.2816925048828125
    5. 'found' → logprob: -8.906692504882812
    6. '       ' → logprob: -9.281692504882812
    7. '   ' → logprob: -10.031692504882812
    8. ' move' → logprob: -10.781692504882812
    9. 'i' → logprob: -11.031692504882812
    10. ' found' → logprob: -11.281692504882812

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07946887612342834
    2. '=' → logprob: -2.5794689655303955
    3. 'for' → logprob: -7.954468727111816
    4. ' in' → logprob: -9.329468727111816
    5. 's' → logprob: -9.829468727111816
    6. ' for' → logprob: -10.579468727111816
    7. 'in' → logprob: -11.454468727111816
    8. 'range' → logprob: -11.579468727111816
    9. ' ' → logprob: -11.704468727111816
    10. '_range' → logprob: -12.204468727111816

Token 254: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.040477290749549866
    2. ' M' → logprob: -3.2904772758483887
    3. '0' → logprob: -6.290477275848389
    4. 'None' → logprob: -7.915477275848389
    5. '   ' → logprob: -9.165477752685547
    6. ' ' → logprob: -10.415477752685547
    7. ' None' → logprob: -10.665477752685547
    8. '-' → logprob: -10.790477752685547
    9. 'min' → logprob: -11.165477752685547
    10. ' -' → logprob: -12.165477752685547

Token 255: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3303047716617584
    2. '<|end|>' → logprob: -1.705304741859436
    3. 'for' → logprob: -3.2053048610687256
    4. '+' → logprob: -3.7053048610687256
    5. ' for' → logprob: -4.4553046226501465
    6. ',' → logprob: -5.3303046226501465
    7. 'while' → logprob: -5.9553046226501465
    8. '       ' → logprob: -6.2053046226501465
    9. '-' → logprob: -6.4553046226501465
    10. '   ' → logprob: -6.5803046226501465

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37027204036712646
    2. '
' → logprob: -2.120272159576416
    3. ' while' → logprob: -2.370272159576416
    4. 'while' → logprob: -2.620272159576416
    5. '<|end|>' → logprob: -4.245272159576416
    6. '        
' → logprob: -5.745272159576416
    7. '   ' → logprob: -5.995272159576416
    8. ' 
' → logprob: -6.995272159576416
    9. '  
' → logprob: -7.745272159576416
    10. '	while' → logprob: -7.870272159576416

Token 257: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0842032432556152
    2. ' while' → logprob: -1.2092032432556152
    3. '       ' → logprob: -1.7092032432556152
    4. '
' → logprob: -1.8342032432556152
    5. '        
' → logprob: -4.334203243255615
    6. ' 
' → logprob: -5.959203243255615
    7. '<|end|>' → logprob: -6.334203243255615
    8. '  
' → logprob: -6.709203243255615
    9. '    
' → logprob: -7.084203243255615
    10. '   ' → logprob: -7.334203243255615

Token 258: ' If' (ID: 1843)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009900340810418129
    2. ' while' → logprob: -4.6349005699157715
    3. 'While' → logprob: -9.384900093078613
    4. '       ' → logprob: -10.134900093078613
    5. 'found' → logprob: -11.509900093078613
    6. 'for' → logprob: -12.259900093078613
    7. '   ' → logprob: -12.759900093078613
    8. ' While' → logprob: -14.009900093078613
    9. '	while' → logprob: -14.884900093078613
    10. 'if' → logprob: -14.884900093078613

Token 259: ' destination' (ID: 13330)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.42673158645629883
    2. ' S' → logprob: -1.1767315864562988
    3. ' step' → logprob: -3.676731586456299
    4. 'step' → logprob: -4.551731586456299
    5. ' not' → logprob: -5.926731586456299
    6. 'not' → logprob: -8.42673110961914
    7. ' ' → logprob: -9.05173110961914
    8. 's' → logprob: -9.92673110961914
    9. ' now' → logprob: -10.11423110961914
    10. 'now' → logprob: -10.48923110961914

Token 260: ' square' (ID: 13749)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.621370792388916
    2. ' is' → logprob: -1.621370792388916
    3. 'is' → logprob: -1.746370792388916
    4. ' -' → logprob: -1.996370792388916
    5. '>' → logprob: -2.496370792388916
    6. ' >' → logprob: -3.621370792388916
    7. '>=' → logprob: -3.621370792388916
    8. 's' → logprob: -4.121370792388916
    9. ' >=' → logprob: -4.246370792388916
    10. 'S' → logprob: -4.246370792388916

Token 261: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8750712275505066
    2. ' is' → logprob: -1.0000712871551514
    3. 's' → logprob: -3.0000712871551514
    4. '>=' → logprob: -3.2500712871551514
    5. ' >=' → logprob: -3.6250712871551514
    6. '   ' → logprob: -4.250071048736572
    7. 'S' → logprob: -4.375071048736572
    8. ' ==' → logprob: -4.500071048736572
    9. '>' → logprob: -4.500071048736572
    10. '==' → logprob: -4.625071048736572

Token 262: ' blocked' (ID: 35275)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8039406538009644
    2. ' S' → logprob: -1.4289406538009644
    3. 'blocked' → logprob: -1.6789406538009644
    4. ' blocked' → logprob: -2.303940773010254
    5. ' '#'' → logprob: -4.803940773010254
    6. ''#' → logprob: -5.178940773010254
    7. ''s' → logprob: -6.053940773010254
    8. 'Blocked' → logprob: -6.178940773010254
    9. ' not' → logprob: -6.178940773010254
    10. ' '' → logprob: -6.553940773010254

Token 263: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.021568620577454567
    2. 'or' → logprob: -3.896568536758423
    3. ' and' → logprob: -7.646568775177002
    4. '           ' → logprob: -9.396568298339844
    5. 'and' → logprob: -9.396568298339844
    6. '   ' → logprob: -9.396568298339844
    7. '       ' → logprob: -9.646568298339844
    8. ',' → logprob: -10.021568298339844
    9. ' ' → logprob: -10.396568298339844
    10. ':' → logprob: -10.771568298339844

Token 264: ' decrement' (ID: 121877)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.01711421273648739
    2. 'step' → logprob: -4.267114162445068
    3. ' while' → logprob: -6.017114162445068
    4. 'while' → logprob: -7.767114162445068
    5. '       ' → logprob: -10.392114639282227
    6. '           ' → logprob: -10.517114639282227
    7. '	step' → logprob: -11.517114639282227
    8. '(step' → logprob: -11.892114639282227
    9. '        ' → logprob: -13.142114639282227
    10. '    ' → logprob: -13.392114639282227

Token 265: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.47410833835601807
    2. 'step' → logprob: -0.9741083383560181
    3. '(step' → logprob: -10.974108695983887
    4. '	step' → logprob: -11.599108695983887
    5. '1' → logprob: -12.974108695983887
    6. ' ' → logprob: -14.349108695983887
    7. '       ' → logprob: -15.224108695983887
    8. '   ' → logprob: -15.224108695983887
    9. '_step' → logprob: -15.349108695983887
    10. '           ' → logprob: -15.474108695983887

Token 266: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6117796897888184
    2. 'while' → logprob: -1.4867796897888184
    3. '<|end|>' → logprob: -1.8617796897888184
    4. ' while' → logprob: -3.7367796897888184
    5. '<|end|>' → logprob: -3.7367796897888184
    6. '           ' → logprob: -4.486779689788818
    7. ' step' → logprob: -5.736779689788818
    8. '-' → logprob: -6.236779689788818
    9. '        ' → logprob: -6.486779689788818
    10. '(step' → logprob: -6.611779689788818

Token 267: ' greed' (ID: 103438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6904224157333374
    2. 'while' → logprob: -0.9404224157333374
    3. ' while' → logprob: -2.565422534942627
    4. '-' → logprob: -3.815422534942627
    5. '<|end|>' → logprob: -6.065422534942627
    6. ' -' → logprob: -6.315422534942627
    7. '
' → logprob: -6.315422534942627
    8. '           ' → logprob: -6.940422534942627
    9. ' -=' → logprob: -7.940422534942627
    10. '<|end|>' → logprob: -8.065422058105469

Token 268: 'ily' (ID: 1810)
  Prédit: 'ily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ily' → logprob: -0.4018389880657196
    2. 'ully' → logprob: -1.651839017868042
    3. 'fully' → logprob: -3.526839017868042
    4. 'ently' → logprob: -3.776839017868042
    5. 'y' → logprob: -4.401838779449463
    6. 'ul' → logprob: -4.526838779449463
    7. 'ally' → logprob: -4.526838779449463
    8. 'antly' → logprob: -4.776838779449463
    9. '       ' → logprob: -5.401838779449463
    10. '   ' → logprob: -5.401838779449463

Token 269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.713297426700592
    2. '-' → logprob: -1.4632973670959473
    3. 'while' → logprob: -2.4632973670959473
    4. ' while' → logprob: -2.7132973670959473
    5. '<|end|>' → logprob: -3.0882973670959473
    6. '
' → logprob: -3.5882973670959473
    7. '           ' → logprob: -4.463297367095947
    8. ' -' → logprob: -4.463297367095947
    9. '        ' → logprob: -5.213297367095947
    10. ' ' → logprob: -5.338297367095947

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0758894681930542
    2. ' while' → logprob: -3.0758895874023438
    3. 'while' → logprob: -4.575889587402344
    4. '<|end|>' → logprob: -4.825889587402344
    5. '        
' → logprob: -5.950889587402344
    6. '        ' → logprob: -6.200889587402344
    7. ' 
' → logprob: -7.075889587402344
    8. '-' → logprob: -7.450889587402344
    9. ' ' → logprob: -7.575889587402344
    10. ' until' → logprob: -8.450889587402344

Token 271: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.943901002407074
    2. ' while' → logprob: -1.0689010620117188
    3. '       ' → logprob: -1.3189010620117188
    4. '	while' → logprob: -9.943901062011719
    5. ' step' → logprob: -11.693901062011719
    6. 'step' → logprob: -12.318901062011719
    7. '   ' → logprob: -12.443901062011719
    8. '        
' → logprob: -12.818901062011719
    9. 'While' → logprob: -12.943901062011719
    10. '           ' → logprob: -13.193901062011719

Token 272: ' S' (ID: 336)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.4621765911579132
    2. ' step' → logprob: -1.5871765613555908
    3. 'S' → logprob: -1.9621765613555908
    4. ' S' → logprob: -3.712176561355591
    5. '(step' → logprob: -8.337176322937012
    6. '(S' → logprob: -9.462176322937012
    7. ' not' → logprob: -9.462176322937012
    8. 'not' → logprob: -9.712176322937012
    9. ' ' → logprob: -10.087176322937012
    10. '   ' → logprob: -10.462176322937012

Token 273: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.008625566959381104
    2. '[' → logprob: -4.758625507354736
    3. '[next' → logprob: -11.758625984191895
    4. '[(' → logprob: -14.633625984191895
    5. '[pos' → logprob: -14.883625984191895
    6. 'now' → logprob: -14.883625984191895
    7. '```' → logprob: -15.008625984191895
    8. '   ' → logprob: -15.383625984191895
    9. 'step' → logprob: -15.633625984191895
    10. ' [' → logprob: -15.883625984191895

Token 274: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25217676162719727
    2. ' +' → logprob: -1.5021767616271973
    3. '[' → logprob: -8.627176284790039
    4. ']' → logprob: -10.752176284790039
    5. '+
' → logprob: -11.752176284790039
    6. '+[' → logprob: -11.752176284790039
    7. '   ' → logprob: -11.877176284790039
    8. '+]' → logprob: -12.752176284790039
    9. ' +
' → logprob: -12.877176284790039
    10. '[now' → logprob: -13.002176284790039

Token 275: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -4.584861744660884e-05
    2. ' step' → logprob: -10.000045776367188
    3. '(step' → logprob: -15.000045776367188
    4. '1' → logprob: -17.625045776367188
    5. '   ' → logprob: -17.750045776367188
    6. '	step' → logprob: -18.375045776367188
    7. ' ' → logprob: -18.750045776367188
    8. '
' → logprob: -19.875045776367188
    9. 'Step' → logprob: -20.125045776367188
    10. '.step' → logprob: -20.625045776367188

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03958085551857948
    2. ']==' → logprob: -3.539580821990967
    3. ']=='' → logprob: -5.039580821990967
    4. '==' → logprob: -6.539580821990967
    5. ' ==' → logprob: -7.289580821990967
    6. ' ]' → logprob: -7.414580821990967
    7. '[' → logprob: -8.539581298828125
    8. '=='' → logprob: -8.664581298828125
    9. ']!=' → logprob: -10.039581298828125
    10. ''' → logprob: -10.789581298828125

Token 277: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06090976297855377
    2. ' ==' → logprob: -3.0609097480773926
    3. '!=' → logprob: -4.810909748077393
    4. '=='' → logprob: -6.060909748077393
    5. ' !=' → logprob: -7.685909748077393
    6. 'is' → logprob: -7.810909748077393
    7. '=' → logprob: -8.56091022491455
    8. ']==' → logprob: -9.31091022491455
    9. '==
' → logprob: -9.56091022491455
    10. ' ' → logprob: -9.56091022491455

Token 278: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11774268001317978
    2. ''#' → logprob: -2.2427427768707275
    3. '"' → logprob: -6.492742538452148
    4. ''x' → logprob: -6.617742538452148
    5. ''*' → logprob: -6.867742538452148
    6. ''o' → logprob: -8.742742538452148
    7. '"#' → logprob: -8.992742538452148
    8. ''C' → logprob: -9.242742538452148
    9. ''O' → logprob: -9.492742538452148
    10. ''A' → logprob: -9.617742538452148

Token 279: '1' (ID: 16)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.690466046333313
    2. '#' → logprob: -0.815466046333313
    3. ''' → logprob: -3.0654659271240234
    4. '1' → logprob: -5.065465927124023
    5. 'X' → logprob: -6.940465927124023
    6. '0' → logprob: -7.065465927124023
    7. '"#' → logprob: -7.065465927124023
    8. ''x' → logprob: -8.940465927124023
    9. '"' → logprob: -9.190465927124023
    10. 'x' → logprob: -9.315465927124023

Token 280: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01790688745677471
    2. '':
' → logprob: -4.642906665802002
    3. '':' → logprob: -5.267906665802002
    4. ' and' → logprob: -5.892906665802002
    5. ':' → logprob: -9.64290714263916
    6. ':
' → logprob: -10.14290714263916
    7. ' '' → logprob: -10.14290714263916
    8. 'and' → logprob: -10.39290714263916
    9. '':
' → logprob: -11.76790714263916
    10. ''s' → logprob: -12.64290714263916

Token 281: '           ' (ID: 352)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5530978441238403
    2. '           ' → logprob: -1.0530978441238403
    3. 'step' → logprob: -3.428097724914551
    4. '
' → logprob: -3.803097724914551
    5. '       ' → logprob: -5.178097724914551
    6. '(step' → logprob: -5.178097724914551
    7. '               ' → logprob: -5.928097724914551
    8. ' and' → logprob: -6.303097724914551
    9. '   ' → logprob: -6.303097724914551
    10. ' ' → logprob: -7.803097724914551

Token 282: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.0004307884373702109
    2. ' step' → logprob: -7.750430583953857
    3. '           ' → logprob: -17.500431060791016
    4. '	step' → logprob: -17.500431060791016
    5. '(step' → logprob: -17.625431060791016
    6. '   ' → logprob: -17.625431060791016
    7. 'Step' → logprob: -20.500431060791016
    8. '       ' → logprob: -20.750431060791016
    9. '.step' → logprob: -21.125431060791016
    10. '```' → logprob: -21.375431060791016

Token 283: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07236824184656143
    2. ' -=' → logprob: -2.8223681449890137
    3. '-' → logprob: -4.572368144989014
    4. ' -' → logprob: -11.572368621826172
    5. '+=' → logprob: -13.072368621826172
    6. '=' → logprob: -14.572368621826172
    7. '```' → logprob: -14.822368621826172
    8. '.' → logprob: -15.072368621826172
    9. '   ' → logprob: -15.447368621826172
    10. ')' → logprob: -17.197368621826172

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. '```' → logprob: -18.500024795532227
    5. '<|end|>' → logprob: -19.312524795532227
    6. '
' → logprob: -19.625024795532227
    7. '  ' → logprob: -19.687524795532227
    8. ' ' → logprob: -20.000024795532227
    9. '0' → logprob: -20.500024795532227
    10. 's' → logprob: -20.812524795532227

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.125
    4. '
' → logprob: -20.0
    5. '```' → logprob: -20.25
    6. '１' → logprob: -21.875
    7. '0' → logprob: -22.1875
    8. '  ' → logprob: -22.375
    9. '۱' → logprob: -22.5625
    10. '       ' → logprob: -23.0

Token 286: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6381754279136658
    2. '<|end|>' → logprob: -0.8881754279136658
    3. '
' → logprob: -3.0131754875183105
    4. '        
' → logprob: -5.7631754875183105
    5. '<|end|>' → logprob: -5.7631754875183105
    6. ' if' → logprob: -7.2631754875183105
    7. '#' → logprob: -7.3881754875183105
    8. ')' → logprob: -7.6381754875183105
    9. '           ' → logprob: -7.7631754875183105
    10. '```' → logprob: -7.8881754875183105

Token 288: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2747993469238281
    2. '       ' → logprob: -1.3997993469238281
    3. '<|end|>' → logprob: -1.5247993469238281
    4. 'if' → logprob: -1.7747993469238281
    5. '           ' → logprob: -3.399799346923828
    6. '#' (adapté à ' #') → logprob: -3.524799346923828
    7. '
' → logprob: -4.399799346923828
    8. '```' → logprob: -6.149799346923828
    9. 'print' → logprob: -6.524799346923828
    10. '<|end|>' → logprob: -6.649799346923828

Token 289: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.032972101122140884
    2. ' if' → logprob: -3.5329720973968506
    3. '           ' → logprob: -6.78297233581543
    4. 'assert' → logprob: -7.28297233581543
    5. '#' → logprob: -7.40797233581543
    6. 'print' → logprob: -7.78297233581543
    7. 'If' → logprob: -8.78297233581543
    8. '       ' → logprob: -9.03297233581543
    9. '0' → logprob: -9.78297233581543
    10. '
' → logprob: -11.40797233581543

Token 290: ' no' (ID: 860)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.014163747429847717
    2. ' step' → logprob: -4.264163970947266
    3. '(step' → logprob: -15.889163970947266
    4. '	step' → logprob: -16.139163970947266
    5. ' ' → logprob: -17.514163970947266
    6. '   ' → logprob: -17.764163970947266
    7. 'Step' → logprob: -18.139163970947266
    8. '  ' → logprob: -18.889163970947266
    9. ' ' → logprob: -20.639163970947266
    10. '0' → logprob: -20.764163970947266

Token 291: ' possible' (ID: 4149)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5119624137878418
    2. ' step' → logprob: -1.6369624137878418
    3. ' more' → logprob: -2.511962413787842
    4. 'more' → logprob: -2.761962413787842
    5. 'steps' → logprob: -3.761962413787842
    6. ' valid' → logprob: -3.886962413787842
    7. ' steps' → logprob: -4.761962413787842
    8. 'valid' → logprob: -5.636962413787842
    9. 'possible' → logprob: -6.136962413787842
    10. ' possible' → logprob: -6.511962413787842

Token 292: ' moves' (ID: 19523)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5709555745124817
    2. 'step' → logprob: -1.445955514907837
    3. ' steps' → logprob: -1.820955514907837
    4. 'steps' → logprob: -3.320955514907837
    5. ' moves' → logprob: -7.570955753326416
    6. 'moves' → logprob: -8.445955276489258
    7. '(step' → logprob: -9.070955276489258
    8. ' move' → logprob: -9.070955276489258
    9. ' valid' → logprob: -9.195955276489258
    10. 'move' → logprob: -9.820955276489258

Token 293: ' remain' (ID: 12760)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.937443196773529
    2. ' or' → logprob: -1.4374432563781738
    3. ':' → logprob: -2.187443256378174
    4. '           ' → logprob: -2.687443256378174
    5. ' left' → logprob: -3.437443256378174
    6. 'left' → logprob: -3.687443256378174
    7. ' (' → logprob: -3.812443256378174
    8. '<|end|>' → logprob: -3.812443256378174
    9. '       ' → logprob: -4.062443256378174
    10. ':
' → logprob: -4.437443256378174

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1175206899642944
    2. ':' → logprob: -1.6175206899642944
    3. ' and' → logprob: -2.117520809173584
    4. '           ' → logprob: -2.117520809173584
    5. '==' → logprob: -2.492520809173584
    6. ':
' → logprob: -2.742520809173584
    7. ' ==' → logprob: -3.492520809173584
    8. '               ' → logprob: -3.617520809173584
    9. ' or' → logprob: -4.367520809173584
    10. ' (' → logprob: -5.117520809173584

Token 295: ' the' (ID: 290)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.43362724781036377
    2. 'print' → logprob: -1.0586272478103638
    3. '               ' → logprob: -5.933627128601074
    4. ' break' → logprob: -7.558627128601074
    5. ' if' → logprob: -7.683627128601074
    6. '           ' → logprob: -7.808627128601074
    7. ' step' → logprob: -8.183627128601074
    8. '   ' → logprob: -9.433627128601074
    9. 'if' → logprob: -9.433627128601074
    10. '```' → logprob: -9.558627128601074

Token 296: ' path' (ID: 3104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0740770548582077
    2. ' print' → logprob: -2.8240771293640137
    3. ' step' → logprob: -5.699077129364014
    4. '           ' → logprob: -5.949077129364014
    5. '#' → logprob: -6.074077129364014
    6. 'step' → logprob: -6.574077129364014
    7. 'if' → logprob: -7.574077129364014
    8. ' raise' → logprob: -8.199076652526855
    9. 'raise' → logprob: -8.199076652526855
    10. 'break' → logprob: -8.699076652526855

Token 297: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2321239560842514
    2. '=' → logprob: -1.7321239709854126
    3. ' is' → logprob: -3.732123851776123
    4. 'is' → logprob: -6.232123851776123
    5. '           ' → logprob: -6.482123851776123
    6. 'print' → logprob: -7.732123851776123
    7. ' ' → logprob: -8.107124328613281
    8. ' cannot' → logprob: -8.232124328613281
    9. '=None' → logprob: -8.357124328613281
    10. '   ' → logprob: -8.732124328613281

Token 298: ' blocked' (ID: 35275)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13391751050949097
    2. 'im' → logprob: -2.6339175701141357
    3. '-im' → logprob: -3.2589175701141357
    4. ' impossible' → logprob: -4.883917331695557
    5. 'print' → logprob: -5.133917331695557
    6. ' -' → logprob: -7.008917331695557
    7. 'not' → logprob: -9.008917808532715
    8. '   ' → logprob: -9.133917808532715
    9. '"' → logprob: -9.133917808532715
    10. 'invalid' → logprob: -9.508917808532715

Token 299: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06278549879789352
    2. ',' → logprob: -3.6877853870391846
    3. '               ' → logprob: -4.437785625457764
    4. ' and' → logprob: -4.437785625457764
    5. ' if' → logprob: -4.937785625457764
    6. ' or' → logprob: -6.437785625457764
    7. 'if' → logprob: -6.937785625457764
    8. 'and' → logprob: -7.062785625457764
    9. '       ' → logprob: -7.687785625457764
    10. ':' → logprob: -8.062785148620605

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025200152304023504
    2. 'if' → logprob: -6.7525200843811035
    3. ' if' → logprob: -6.7525200843811035
    4. '               ' → logprob: -9.127519607543945
    5. '       ' → logprob: -10.627519607543945
    6. ',' → logprob: -11.002519607543945
    7. '   ' → logprob: -11.127519607543945
    8. '```' → logprob: -12.252519607543945
    9. '                   ' → logprob: -12.877519607543945
    10. ' and' → logprob: -13.502519607543945

Token 301: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08417888730764389
    2. '           ' → logprob: -2.584178924560547
    3. ' if' → logprob: -5.334178924560547
    4. 'print' → logprob: -7.834178924560547
    5. '0' → logprob: -10.834178924560547
    6. '       ' → logprob: -11.709178924560547
    7. '   ' → logprob: -12.334178924560547
    8. '```' → logprob: -12.459178924560547
    9. 'import' → logprob: -12.584178924560547
    10. '               ' → logprob: -12.584178924560547

Token 302: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.001170225441455841
    2. ' step' → logprob: -6.7511701583862305
    3. '	step' → logprob: -17.751171112060547
    4. '(step' → logprob: -18.126171112060547
    5. 'Step' → logprob: -18.376171112060547
    6. '   ' → logprob: -18.626171112060547
    7. ' ' → logprob: -19.751171112060547
    8. '0' → logprob: -20.626171112060547
    9. '  ' → logprob: -20.626171112060547
    10. ' ' → logprob: -21.251171112060547

Token 303: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31511375308036804
    2. '==' → logprob: -1.3151137828826904
    3. '<' → logprob: -6.940113544464111
    4. ' <' → logprob: -7.440113544464111
    5. '<=' → logprob: -9.06511402130127
    6. ' <=' → logprob: -9.31511402130127
    7. '0' → logprob: -9.44011402130127
    8. ' ' → logprob: -12.44011402130127
    9. '==
' → logprob: -13.31511402130127
    10. '==-' → logprob: -13.81511402130127

Token 304: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.500097274780273
    4. '۰' → logprob: -16.875097274780273
    5. '00' → logprob: -17.250097274780273
    6. '  ' → logprob: -17.375097274780273
    7. '000' → logprob: -17.375097274780273
    8. '０' → logprob: -17.500097274780273
    9. '=' → logprob: -18.250097274780273
    10. '
' → logprob: -18.687597274780273

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. '-' → logprob: -14.375041007995605
    4. '   ' → logprob: -15.937541007995605
    5. '00' → logprob: -16.125041961669922
    6. '000' → logprob: -16.187541961669922
    7. ' -' → logprob: -16.437541961669922
    8. '۰' → logprob: -16.625041961669922
    9. '０' → logprob: -17.125041961669922
    10. '  ' → logprob: -17.250041961669922

Token 306: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02632979489862919
    2. ':' → logprob: -3.776329755783081
    3. '               ' → logprob: -6.02632999420166
    4. '           ' → logprob: -7.52632999420166
    5. ':

' → logprob: -10.27632999420166
    6. '):
' → logprob: -10.90132999420166
    7. ' and' → logprob: -11.15132999420166
    8. ' or' → logprob: -11.27632999420166
    9. ':return' → logprob: -11.40132999420166
    10. '():
' → logprob: -11.52632999420166

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2552661895751953
    2. '           ' → logprob: -2.2552661895751953
    3. 'print' → logprob: -2.2552661895751953
    4. ' print' → logprob: -4.630266189575195
    5. 'return' → logprob: -6.255266189575195
    6. '       ' → logprob: -6.380266189575195
    7. '   ' → logprob: -6.755266189575195
    8. ' return' → logprob: -7.380266189575195
    9. 'break' → logprob: -9.130266189575195
    10. 'raise' → logprob: -9.255266189575195

Token 308: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007281707599759102
    2. '               ' → logprob: -5.75728178024292
    3. '                   ' → logprob: -5.88228178024292
    4. ' print' → logprob: -7.13228178024292
    5. '   ' → logprob: -8.382281303405762
    6. 'return' → logprob: -9.007281303405762
    7. 'break' → logprob: -9.382281303405762
    8. '           ' → logprob: -10.132281303405762
    9. 'raise' → logprob: -11.382281303405762
    10. '       ' → logprob: -12.007281303405762

Token 309: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00675219064578414
    2. '(-' → logprob: -5.006752014160156
    3. '("-' → logprob: -11.756752014160156
    4. '"-' → logprob: -11.756752014160156
    5. ' -' → logprob: -12.006752014160156
    6. '0' → logprob: -12.131752014160156
    7. '(' → logprob: -12.131752014160156
    8. '-im' → logprob: -14.131752014160156
    9. '
' → logprob: -14.756752014160156
    10. '()-' → logprob: -14.756752014160156

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '2' → logprob: -17.375001907348633
    4. ')' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '１' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '```' → logprob: -20.125001907348633
    9. '0' → logprob: -20.562501907348633
    10. '۱' → logprob: -20.937501907348633

Token 311: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.019641997292637825
    2. ')' → logprob: -4.519641876220703
    3. '               ' → logprob: -4.769641876220703
    4. ')
' → logprob: -9.894641876220703
    5. ')return' → logprob: -11.394641876220703
    6. '                   ' → logprob: -12.519641876220703
    7. 'return' → logprob: -13.394641876220703
    8. '           ' → logprob: -13.394641876220703
    9. ')

' → logprob: -13.519641876220703
    10. ')`
' → logprob: -13.769641876220703

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000455340719781816
    2. 'return' → logprob: -7.875455379486084
    3. ' return' → logprob: -10.500454902648926
    4. '
' → logprob: -10.625454902648926
    5. '                
' → logprob: -11.000454902648926
    6. ')
' → logprob: -12.875454902648926
    7. ')' → logprob: -13.750454902648926
    8. '                   ' → logprob: -14.250454902648926
    9. '```' → logprob: -14.625454902648926
    10. '           ' → logprob: -15.125454902648926

Token 313: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05366835743188858
    2. '               ' → logprob: -3.053668260574341
    3. ' return' → logprob: -5.30366849899292
    4. '
' → logprob: -9.303668022155762
    5. '                
' → logprob: -13.678668022155762
    6. '	return' → logprob: -13.803668022155762
    7. '```' → logprob: -14.803668022155762
    8. '                   ' → logprob: -15.678668022155762
    9. '   ' → logprob: -15.678668022155762
    10. ':return' → logprob: -15.803668022155762

Token 314: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11656343191862106
    2. '<|end|>' → logprob: -2.741563320159912
    3. '
' → logprob: -3.616563320159912
    4. '        
' → logprob: -4.116563320159912
    5. '<|end|>' → logprob: -6.866563320159912
    6. '           ' → logprob: -7.991563320159912
    7. '    
' → logprob: -8.49156379699707
    8. '            
' → logprob: -8.74156379699707
    9. ')' → logprob: -9.11656379699707
    10. '        

' → logprob: -9.49156379699707

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0895569920539856
    2. '<|end|>' → logprob: -2.714556932449341
    3. '
' → logprob: -4.71455717086792
    4. '        
' → logprob: -5.21455717086792
    5. '<|end|>' → logprob: -5.71455717086792
    6. ')' → logprob: -7.08955717086792
    7. '```' → logprob: -8.964556694030762
    8. '    
' → logprob: -9.839556694030762
    9. ',' → logprob: -9.839556694030762
    10. '[' → logprob: -9.964556694030762

Token 316: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45717763900756836
    2. 'now' → logprob: -1.3321776390075684
    3. ' now' → logprob: -2.8321776390075684
    4. 'ans' → logprob: -3.4571776390075684
    5. '   ' → logprob: -4.832177639007568
    6. ' ans' → logprob: -7.332177639007568
    7. 'next' → logprob: -7.332177639007568
    8. 'Now' → logprob: -7.457177639007568
    9. '        
' → logprob: -7.582177639007568
    10. '[now' → logprob: -7.707177639007568

Token 317: ' Move' (ID: 25485)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012176171876490116
    2. 'now' → logprob: -6.751217842102051
    3. ' ans' → logprob: -10.62621784210205
    4. '   ' → logprob: -11.50121784210205
    5. 'Now' → logprob: -12.50121784210205
    6. '       ' → logprob: -12.62621784210205
    7. ' now' → logprob: -13.50121784210205
    8. 'answer' → logprob: -13.75121784210205
    9. '#' → logprob: -14.12621784210205
    10. '	ans' → logprob: -14.62621784210205

Token 318: ' to' (ID: 316)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.1826118677854538
    2. 'now' → logprob: -1.8076118230819702
    3. ' =' → logprob: -6.93261194229126
    4. '   ' → logprob: -7.68261194229126
    5. '=' → logprob: -8.307611465454102
    6. ' +=' → logprob: -8.807611465454102
    7. ' ans' → logprob: -8.807611465454102
    8. '       ' → logprob: -8.932611465454102
    9. '_now' → logprob: -8.932611465454102
    10. '[now' → logprob: -9.057611465454102

Token 319: ' the' (ID: 290)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.3490428924560547
    2. ' now' → logprob: -1.2240428924560547
    3. 'next' → logprob: -8.349042892456055
    4. ' the' → logprob: -8.849042892456055
    5. ' next' → logprob: -9.599042892456055
    6. '[now' → logprob: -9.849042892456055
    7. 'the' → logprob: -9.974042892456055
    8. '(now' → logprob: -10.474042892456055
    9. ' ' → logprob: -12.099042892456055
    10. '   ' → logprob: -12.474042892456055

Token 320: ' next' (ID: 2613)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.43120864033699036
    2. ' now' → logprob: -1.056208610534668
    3. 'next' → logprob: -6.806208610534668
    4. ' next' → logprob: -6.806208610534668
    5. '[now' → logprob: -8.806208610534668
    6. 'step' → logprob: -10.806208610534668
    7. 'nown' → logprob: -11.056208610534668
    8. 'ans' → logprob: -11.306208610534668
    9. ' step' → logprob: -11.306208610534668
    10. 'new' → logprob: -11.306208610534668

Token 321: ' position' (ID: 4010)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.8122109770774841
    2. ' position' → logprob: -1.437211036682129
    3. 'position' → logprob: -1.812211036682129
    4. 'now' → logprob: -1.937211036682129
    5. 'pos' → logprob: -5.687211036682129
    6. '   ' → logprob: -5.937211036682129
    7. ' step' → logprob: -6.187211036682129
    8. 'step' → logprob: -7.187211036682129
    9. ' square' → logprob: -7.437211036682129
    10. 'square' → logprob: -8.062211036682129

Token 322: '
' (ID: 198)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0721198245882988
    2. '
' → logprob: -3.57211971282959
    3. ' now' → logprob: -3.82211971282959
    4. '+=' → logprob: -5.44711971282959
    5. '       ' → logprob: -5.57211971282959
    6. '[now' → logprob: -5.57211971282959
    7. '=' → logprob: -5.82211971282959
    8. ' =' → logprob: -6.57211971282959
    9. ' +=' → logprob: -6.94711971282959
    10. '   ' → logprob: -7.07211971282959

Token 323: '       ' (ID: 309)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.14918293058872223
    2. 'now' → logprob: -2.0241830348968506
    3. '   ' → logprob: -5.5241827964782715
    4. ' =' → logprob: -6.6491827964782715
    5. '       ' → logprob: -7.1491827964782715
    6. '[now' → logprob: -8.64918327331543
    7. '=' → logprob: -9.52418327331543
    8. ' ans' → logprob: -9.77418327331543
    9. '	now' → logprob: -10.52418327331543
    10. ',' → logprob: -11.14918327331543

Token 324: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.004336714278906584
    2. ' now' → logprob: -5.879336833953857
    3. 'ans' → logprob: -6.504336833953857
    4. '   ' → logprob: -10.6293363571167
    5. ' ans' → logprob: -12.7543363571167
    6. '       ' → logprob: -13.3793363571167
    7. '           ' → logprob: -13.6293363571167
    8. '	now' → logprob: -13.7543363571167
    9. 'next' → logprob: -14.5043363571167
    10. 'Now' → logprob: -14.6293363571167

Token 325: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10023622214794159
    2. ' +=' → logprob: -2.350236177444458
    3. '=' → logprob: -10.475235939025879
    4. ']+=' → logprob: -14.725235939025879
    5. '+=(' → logprob: -15.100235939025879
    6. ' =' → logprob: -15.100235939025879
    7. '+' → logprob: -15.225235939025879
    8. '```' → logprob: -16.975236892700195
    9. '+="' → logprob: -17.100236892700195
    10. '+='' → logprob: -17.350236892700195

Token 326: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0024756586644798517
    2. ' step' → logprob: -6.002475738525391
    3. '(step' → logprob: -18.75247573852539
    4. '	step' → logprob: -19.00247573852539
    5. 'Step' → logprob: -19.12747573852539
    6. '   ' → logprob: -19.62747573852539
    7. ' ' → logprob: -20.12747573852539
    8. '.step' → logprob: -21.62747573852539
    9. '_step' → logprob: -21.62747573852539
    10. '```' → logprob: -22.25247573852539

Token 327: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2324899584054947
    2. '       ' → logprob: -1.8574899435043335
    3. '
' → logprob: -3.232490062713623
    4. 'ans' → logprob: -4.982490062713623
    5. '```' → logprob: -6.482490062713623
    6. ' ans' → logprob: -6.732490062713623
    7. '    
' → logprob: -7.232490062713623
    8. '	ans' → logprob: -8.232489585876465
    9. '(ans' → logprob: -8.357489585876465
    10. ',' → logprob: -8.607489585876465

Token 328: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5390723943710327
    2. '```' → logprob: -1.4140723943710327
    3. 'ans' → logprob: -2.4140725135803223
    4. ' ans' → logprob: -3.4140725135803223
    5. '
' → logprob: -3.5390725135803223
    6. '    
' → logprob: -5.539072513580322
    7. '(ans' → logprob: -5.539072513580322
    8. '<|end|>' → logprob: -5.789072513580322
    9. '``' → logprob: -5.914072513580322
    10. ')' → logprob: -6.289072513580322

Token 329: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.704273118884885e-07
    2. ' ans' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '       ' → logprob: -18.0
    5. '	ans' → logprob: -18.75
    6. '(ans' → logprob: -19.25
    7. '
' → logprob: -19.5
    8. '#' (adapté à ' #') → logprob: -19.625
    9. 'answer' → logprob: -20.75
    10. '```' → logprob: -21.375

Token 330: ' Record' (ID: 14574)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006423805025406182
    2. ' ans' → logprob: -7.3756422996521
    3. 'append' → logprob: -11.625642776489258
    4. '   ' → logprob: -12.500642776489258
    5. 'Append' → logprob: -14.000642776489258
    6. '       ' → logprob: -14.125642776489258
    7. '	ans' → logprob: -14.250642776489258
    8. '#' → logprob: -15.125642776489258
    9. '(ans' → logprob: -16.000642776489258
    10. '           ' → logprob: -16.375642776489258

Token 331: ' the' (ID: 290)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.03278476372361183
    2. ' step' → logprob: -3.5327847003936768
    3. '(step' → logprob: -6.157784938812256
    4. 'ans' → logprob: -7.032784938812256
    5. ' ans' → logprob: -11.032784461975098
    6. '(ans' → logprob: -11.532784461975098
    7. 'the' → logprob: -12.657784461975098
    8. '	step' → logprob: -14.907784461975098
    9. 'answer' → logprob: -15.282784461975098
    10. ' the' → logprob: -15.407784461975098

Token 332: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.7818534970283508
    2. 'ans' → logprob: -1.031853437423706
    3. ' step' → logprob: -2.156853437423706
    4. ' ans' → logprob: -2.656853437423706
    5. 'move' → logprob: -9.656853675842285
    6. 'answer' → logprob: -9.906853675842285
    7. ' move' → logprob: -10.031853675842285
    8. '   ' → logprob: -11.156853675842285
    9. 'steps' → logprob: -11.156853675842285
    10. 'token' → logprob: -11.656853675842285

Token 333: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10770431160926819
    2. 'ans' → logprob: -3.1077044010162354
    3. '   ' → logprob: -3.6077044010162354
    4. ' ans' → logprob: -3.7327044010162354
    5. '(ans' → logprob: -5.357704162597656
    6. '
' → logprob: -8.357704162597656
    7. '	ans' → logprob: -8.482704162597656
    8. '           ' → logprob: -8.482704162597656
    9. '.append' → logprob: -8.607704162597656
    10. 'step' → logprob: -8.607704162597656

Token 334: ' taken' (ID: 6697)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6304020881652832
    2. '   ' → logprob: -1.0054020881652832
    3. '
' → logprob: -3.255402088165283
    4. ' ans' → logprob: -3.380402088165283
    5. 'ans' → logprob: -3.630402088165283
    6. '(ans' → logprob: -6.755402088165283
    7. '	ans' → logprob: -8.005401611328125
    8. '    
' → logprob: -8.380401611328125
    9. '        
' → logprob: -8.380401611328125
    10. ',' → logprob: -8.380401611328125

Token 335: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5970266461372375
    2. '   ' → logprob: -1.0970265865325928
    3. ' ans' → logprob: -2.3470265865325928
    4. '       ' → logprob: -4.222026824951172
    5. '
' → logprob: -5.847026824951172
    6. '(ans' → logprob: -6.472026824951172
    7. '	ans' → logprob: -7.222026824951172
    8. '```' → logprob: -9.722026824951172
    9. '    
' → logprob: -9.847026824951172
    10. ' ' → logprob: -11.097026824951172

Token 336: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.015352554619312286
    2. ' ans' → logprob: -4.390352725982666
    3. '   ' → logprob: -6.140352725982666
    4. '(ans' → logprob: -7.765352725982666
    5. '
' → logprob: -8.765352249145508
    6. '	ans' → logprob: -9.765352249145508
    7. '```' → logprob: -10.765352249145508
    8. '       ' → logprob: -11.015352249145508
    9. '_ans' → logprob: -13.015352249145508
    10. '`' → logprob: -13.515352249145508

Token 337: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005536287208087742
    2. ' ans' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.125554084777832
    4. '	ans' → logprob: -15.625554084777832
    5. '(ans' → logprob: -15.875554084777832
    6. 'answer' → logprob: -17.125553131103516
    7. '       ' → logprob: -17.500553131103516
    8. 'anst' → logprob: -19.125553131103516
    9. '
' → logprob: -19.125553131103516
    10. '```' → logprob: -19.125553131103516

Token 338: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.668304245569743e-05
    2. '.' → logprob: -10.000046730041504
    3. '.app' → logprob: -13.750046730041504
    4. '.ap' → logprob: -16.750045776367188
    5. ' .' → logprob: -17.375045776367188
    6. '.add' → logprob: -17.500045776367188
    7. '.Append' → logprob: -17.875045776367188
    8. '.push' → logprob: -18.250045776367188
    9. '.extend' → logprob: -18.250045776367188
    10. ').' → logprob: -18.375045776367188

Token 339: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -1.0280383548888494e-06
    2. 'step' → logprob: -14.250000953674316
    3. '(' → logprob: -14.750000953674316
    4. ' step' → logprob: -20.000001907348633
    5. ' (' → logprob: -21.625001907348633
    6. '(
' → logprob: -21.875001907348633
    7. '	step' → logprob: -22.750001907348633
    8. '(space' → logprob: -23.375001907348633
    9. '((' → logprob: -24.250001907348633
    10. '()' → logprob: -24.500001907348633

Token 340: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -11.125016212463379
    3. ' )' → logprob: -13.750016212463379
    4. '   ' → logprob: -16.500017166137695
    5. '<|end|>' → logprob: -16.625017166137695
    6. ')

' → logprob: -16.750017166137695
    7. '       ' → logprob: -17.250017166137695
    8. ')return' → logprob: -17.375017166137695
    9. '))' → logprob: -17.500017166137695
    10. ')#' → logprob: -17.750017166137695

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021462105214595795
    2. '<|end|>' → logprob: -4.0214619636535645
    3. 'return' → logprob: -7.0214619636535645
    4. '    
' → logprob: -7.1464619636535645
    5. '```' → logprob: -7.1464619636535645
    6. ')' → logprob: -8.146462440490723
    7. '
' → logprob: -8.521462440490723
    8. '       ' → logprob: -9.771462440490723
    9. 'print' → logprob: -9.896462440490723
    10. 'if' → logprob: -10.146462440490723

Token 342: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10432299971580505
    2. '    
' → logprob: -2.854322910308838
    3. '
' → logprob: -3.979322910308838
    4. 'print' → logprob: -4.354322910308838
    5. 'for' → logprob: -5.229322910308838
    6. '  
' → logprob: -6.854322910308838
    7. ' for' → logprob: -6.854322910308838
    8. 'ans' → logprob: -7.229322910308838
    9. 'return' → logprob: -7.979322910308838
    10. ' 
' → logprob: -8.229323387145996

Token 343: ' Output' (ID: 18315)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2745923697948456
    2. 'print' → logprob: -1.649592399597168
    3. '#' → logprob: -3.274592399597168
    4. 'for' → logprob: -5.524592399597168
    5. '   ' → logprob: -5.774592399597168
    6. ' ans' → logprob: -6.024592399597168
    7. ' print' → logprob: -8.649592399597168
    8. '
' → logprob: -8.649592399597168
    9. '#print' → logprob: -9.649592399597168
    10. 'Ans' → logprob: -9.899592399597168

Token 344: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03153900429606438
    2. ' print' → logprob: -4.406538963317871
    3. ''' → logprob: -4.531538963317871
    4. '   ' → logprob: -5.406538963317871
    5. '"' → logprob: -6.906538963317871
    6. 'for' → logprob: -6.906538963317871
    7. '
' → logprob: -7.281538963317871
    8. ''\' → logprob: -7.781538963317871
    9. '"\' → logprob: -8.531538963317871
    10. ' for' → logprob: -9.031538963317871

Token 345: ' sequence' (ID: 16281)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2987554669380188
    2. ''' → logprob: -1.798755407333374
    3. 'ans' → logprob: -3.298755407333374
    4. '
' → logprob: -4.298755645751953
    5. ' len' → logprob: -4.298755645751953
    6. ''\' → logprob: -4.673755645751953
    7. ' '' → logprob: -5.048755645751953
    8. '"' → logprob: -5.548755645751953
    9. '\n' → logprob: -6.048755645751953
    10. ' ans' → logprob: -6.423755645751953

Token 346: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1067931652069092
    2. '   ' → logprob: -1.3567931652069092
    3. 'print' → logprob: -1.4817931652069092
    4. '[::-' → logprob: -1.7317931652069092
    5. ' of' → logprob: -6.231793403625488
    6. '[' → logprob: -6.481793403625488
    7. '    
' → logprob: -6.731793403625488
    8. 'for' → logprob: -6.856793403625488
    9. ' print' → logprob: -7.856793403625488
    10. '#' → logprob: -8.106793403625488

Token 347: ' moves' (ID: 19523)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8769916296005249
    2. 'moves' → logprob: -1.001991629600525
    3. 'steps' → logprob: -1.626991629600525
    4. ' moves' → logprob: -4.3769917488098145
    5. 'answers' → logprob: -5.7519917488098145
    6. ' ans' → logprob: -6.3769917488098145
    7. ' steps' → logprob: -6.8769917488098145
    8. 'print' → logprob: -8.251991271972656
    9. 'step' → logprob: -8.251991271972656
    10. 'answer' → logprob: -8.376991271972656

Token 348: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007125230971723795
    2. '   ' → logprob: -5.007125377655029
    3. '
' → logprob: -8.632124900817871
    4. 'for' → logprob: -8.757124900817871
    5. ' print' → logprob: -10.382124900817871
    6. '\n' → logprob: -11.257124900817871
    7. '    
' → logprob: -11.382124900817871
    8. '```' → logprob: -11.382124900817871
    9. '\' → logprob: -12.632124900817871
    10. ' for' → logprob: -13.882124900817871

Token 349: ' in' (ID: 306)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17344988882541656
    2. '"' → logprob: -2.173449993133545
    3. 'print' → logprob: -3.923449993133545
    4. ' '' → logprob: -4.548449993133545
    5. 'end' → logprob: -4.673449993133545
    6. '[::-' → logprob: -6.173449993133545
    7. ' ans' → logprob: -7.048449993133545
    8. '
' → logprob: -7.923449993133545
    9. ' print' → logprob: -7.923449993133545
    10. ' 
' → logprob: -8.048449516296387

Token 350: ' correct' (ID: 6145)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5523269772529602
    2. ''' → logprob: -1.3023269176483154
    3. ' ans' → logprob: -2.9273269176483154
    4. 're' → logprob: -2.9273269176483154
    5. '"' → logprob: -3.8023269176483154
    6. 'reverse' → logprob: -4.8023271560668945
    7. ' reversed' → logprob: -5.4273271560668945
    8. '[::-' → logprob: -5.6773271560668945
    9. ' '' → logprob: -5.9273271560668945
    10. ' reverse' → logprob: -7.3023271560668945

Token 351: ' order' (ID: 2569)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.20437194406986237
    2. ' ans' → logprob: -2.454371929168701
    3. ' order' → logprob: -3.329371929168701
    4. '[' → logprob: -3.454371929168701
    5. 'ans' → logprob: -3.954371929168701
    6. '(ans' → logprob: -5.829371929168701
    7. ' reverse' → logprob: -6.329371929168701
    8. ' [' → logprob: -6.329371929168701
    9. 'reverse' → logprob: -6.829371929168701
    10. 'order' → logprob: -6.954371929168701

Token 352: ' from' (ID: 591)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005652756430208683
    2. '
' → logprob: -5.630652904510498
    3. '   ' → logprob: -6.380652904510498
    4. 'for' → logprob: -9.25565242767334
    5. '    
' → logprob: -9.88065242767334
    6. ' print' → logprob: -9.88065242767334
    7. '('\' → logprob: -10.13065242767334
    8. ''\' → logprob: -10.38065242767334
    9. '"\' → logprob: -10.88065242767334
    10. '\n' → logprob: -10.88065242767334

Token 353: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09935855865478516
    2. ' start' → logprob: -2.474358558654785
    3. 'end' → logprob: -5.224358558654785
    4. 'the' → logprob: -6.599358558654785
    5. ' the' → logprob: -6.724358558654785
    6. 'finish' → logprob: -6.849358558654785
    7. ' end' → logprob: -7.599358558654785
    8. ' finish' → logprob: -8.099358558654785
    9. 'last' → logprob: -8.724358558654785
    10. 'ans' → logprob: -8.974358558654785

Token 354: ' to' (ID: 316)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.2112402319908142
    2. '   ' → logprob: -2.336240291595459
    3. 'print' → logprob: -2.586240291595459
    4. '[' → logprob: -4.711240291595459
    5. '
' → logprob: -5.211240291595459
    6. ',' → logprob: -6.336240291595459
    7. ' print' → logprob: -7.711240291595459
    8. '()[' → logprob: -7.836240291595459
    9. '(ans' → logprob: -8.3362398147583
    10. '    
' → logprob: -8.3362398147583

Token 355: ' finish' (ID: 9115)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.0481480360031128
    2. 'finish' → logprob: -1.0481480360031128
    3. ' finish' → logprob: -1.5481480360031128
    4. ' end' → logprob: -2.5481481552124023
    5. 'goal' → logprob: -5.048148155212402
    6. ' goal' → logprob: -6.548148155212402
    7. ' the' → logprob: -10.298148155212402
    8. 'start' → logprob: -10.798148155212402
    9. 'the' → logprob: -11.173148155212402
    10. ' ' → logprob: -11.673148155212402

Token 356: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16202984750270844
    2. '
' → logprob: -3.41202974319458
    3. '   ' → logprob: -3.41202974319458
    4. ''\' → logprob: -3.91202974319458
    5. '[::-' → logprob: -4.03702974319458
    6. 'ans' → logprob: -4.66202974319458
    7. '\n' → logprob: -4.91202974319458
    8. '"\' → logprob: -5.03702974319458
    9. '('\' → logprob: -5.03702974319458
    10. '    
' → logprob: -5.53702974319458

Token 357: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08018968999385834
    2. '   ' → logprob: -2.5801897048950195
    3. '```' → logprob: -7.2051897048950195
    4. 'ans' → logprob: -8.33018970489502
    5. 'for' → logprob: -8.83018970489502
    6. '    
' → logprob: -9.58018970489502
    7. '
' → logprob: -10.20518970489502
    8. '``' → logprob: -10.33018970489502
    9. ' print' → logprob: -10.83018970489502
    10. '(ans' → logprob: -12.45518970489502

Token 358: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00025204161647707224
    2. ' print' → logprob: -8.375251770019531
    3. '   ' → logprob: -11.000251770019531
    4. '
' → logprob: -13.375251770019531
    5. 'for' → logprob: -13.375251770019531
    6. 'ans' → logprob: -14.375251770019531
    7. '    
' → logprob: -14.500251770019531
    8. '```' → logprob: -14.875251770019531
    9. '`' → logprob: -16.50025177001953
    10. ''' → logprob: -17.50025177001953

Token 359: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.17420610785484314
    2. '('' → logprob: -1.9242061376571655
    3. '("' → logprob: -4.924206256866455
    4. '(' → logprob: -5.049206256866455
    5. '(len' → logprob: -9.549205780029297
    6. '(ans' → logprob: -9.549205780029297
    7. '(*(' → logprob: -10.799205780029297
    8. '()' → logprob: -11.299205780029297
    9. ' (*' → logprob: -11.799205780029297
    10. '(sum' → logprob: -12.674205780029297

Token 360: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002485169330611825
    2. 're' → logprob: -6.002485275268555
    3. '(ans' → logprob: -12.252485275268555
    4. ' ans' → logprob: -12.627485275268555
    5. 'rev' → logprob: -13.627485275268555
    6. '[::-' → logprob: -16.002485275268555
    7. '	ans' → logprob: -16.502485275268555
    8. ' reversed' → logprob: -17.627485275268555
    9. 'answer' → logprob: -17.627485275268555
    10. 'ANS' → logprob: -18.377485275268555

Token 361: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.00013524403038900346
    2. ')' → logprob: -9.00013542175293
    3. '[' → logprob: -11.37513542175293
    4. '[:-' → logprob: -15.87513542175293
    5. '[:' → logprob: -16.00013542175293
    6. ' [' → logprob: -17.00013542175293
    7. ')
' → logprob: -17.75013542175293
    8. ',' → logprob: -17.87513542175293
    9. ' )' → logprob: -18.37513542175293
    10. '   ' → logprob: -18.62513542175293

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11015709489583969
    2. 'sed' → logprob: -3.110157012939453
    3. 'se' → logprob: -3.485157012939453
    4. '[' → logprob: -4.485157012939453
    5. 's' → logprob: -5.485157012939453
    6. 'erse' → logprob: -5.610157012939453
    7. '```' → logprob: -5.985157012939453
    8. 'ed' → logprob: -6.110157012939453
    9. ')' → logprob: -6.610157012939453
    10. '-' → logprob: -7.610157012939453

Token 363: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -17.375
    4. '))' → logprob: -17.375
    5. ')`' → logprob: -17.5
    6. '())' → logprob: -18.125
    7. '`)' → logprob: -18.375
    8. '()' → logprob: -18.875
    9. '),' → logprob: -19.5
    10. ')}' → logprob: -19.625

Token 364: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12876148521900177
    2. '__' → logprob: -2.5037615299224854
    3. '_' → logprob: -3.2537615299224854
    4. ' _' → logprob: -8.503761291503906
    5. ' ' → logprob: -9.878761291503906
    6. '___' → logprob: -9.878761291503906
    7. ' ' → logprob: -10.253761291503906
    8. '_main' → logprob: -11.003761291503906
    9. '_name' → logprob: -11.253761291503906
    10. ' ___' → logprob: -11.878761291503906

Token 366: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003684401512145996
    2. '==' → logprob: -5.8786845207214355
    3. ' ==' → logprob: -7.7536845207214355
    4. '_' → logprob: -8.878684043884277
    5. '__.__' → logprob: -9.753684043884277
    6. 'name' → logprob: -10.003684043884277
    7. '__[' → logprob: -10.128684043884277
    8. ' __' → logprob: -10.253684043884277
    9. '=="' → logprob: -10.878684043884277
    10. '__["' → logprob: -11.753684043884277

Token 367: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006327360169962049
    2. '__.__' → logprob: -7.3756327629089355
    3. '__.' → logprob: -12.875632286071777
    4. '____' → logprob: -14.000632286071777
    5. '==' → logprob: -14.000632286071777
    6. '__["' → logprob: -14.250632286071777
    7. '__('' → logprob: -14.375632286071777
    8. '___' → logprob: -15.875632286071777
    9. '=="' → logprob: -16.000633239746094
    10. '__("' → logprob: -16.125633239746094

Token 368: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47175002098083496
    2. '==' → logprob: -1.471750020980835
    3. ' ==' → logprob: -2.096750020980835
    4. '=="' → logprob: -3.971750020980835
    5. '=='' → logprob: -5.346750259399414
    6. '___' → logprob: -11.096750259399414
    7. '__.__' → logprob: -11.221750259399414
    8. '_' → logprob: -11.221750259399414
    9. '"' → logprob: -11.346750259399414
    10. '===' → logprob: -11.346750259399414

Token 369: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004085643216967583
    2. ''' → logprob: -5.504085540771484
    3. ' "__' → logprob: -12.129085540771484
    4. '__' → logprob: -13.254085540771484
    5. ' '__' → logprob: -16.629085540771484
    6. '"user' → logprob: -16.754085540771484
    7. '"name' → logprob: -17.254085540771484
    8. ' ' → logprob: -18.629085540771484
    9. ''"' → logprob: -18.754085540771484
    10. '("__' → logprob: -18.754085540771484

Token 370: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005550591740757227
    2. '__' → logprob: -7.500555038452148
    3. 'name' → logprob: -13.625555038452148
    4. '_main' → logprob: -14.625555038452148
    5. '"' → logprob: -15.625555038452148
    6. '__":
' → logprob: -16.50055503845215
    7. ' main' → logprob: -17.25055503845215
    8. 'built' → logprob: -17.25055503845215
    9. '主' → logprob: -17.50055503845215
    10. '_MAIN' → logprob: -18.37555503845215

Token 371: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.030109355226159096
    2. '__' → logprob: -3.530109405517578
    3. '__:' → logprob: -8.530109405517578
    4. '__':
' → logprob: -8.780109405517578
    5. '__.' → logprob: -12.780109405517578
    6. '__["' → logprob: -13.530109405517578
    7. ':' → logprob: -13.655109405517578
    8. '():
' → logprob: -14.530109405517578
    9. '__",' → logprob: -15.155109405517578
    10. '__.__' → logprob: -15.280109405517578

Token 372: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.056514251977205276
    2. '   ' → logprob: -3.556514263153076
    3. 'main' → logprob: -3.681514263153076
    4. '    
' → logprob: -7.431514263153076
    5. '	main' → logprob: -7.681514263153076
    6. '(main' → logprob: -9.681513786315918
    7. '```' → logprob: -10.681513786315918
    8. '_main' → logprob: -10.806513786315918
    9. ' 
' → logprob: -10.931513786315918
    10. '    ' → logprob: -11.681513786315918

Token 373: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.896309739408025e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -16.625
    4. '   ' → logprob: -18.75
    5. '_main' → logprob: -19.25
    6. '(main' → logprob: -21.625
    7. 'import' → logprob: -21.625
    8. '.main' → logprob: -22.25
    9. 'Main' → logprob: -23.375
    10. 'mainwindow' → logprob: -23.875

Token 374: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 372
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 233
Précision stricte (1ère position): 24.46%
Précision adaptée (1ère position): 27.42%
Précision (top 10): 62.63%
================================================================================
