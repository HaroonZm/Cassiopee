================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
from pprint import pprint as pp
from pprint import pformat as pf
import math
import bisect

class Player():
    A = 0
    B = 1
    C = 2

    def __init__(self, data, op_list):
        self.data = data
        self.op_list = op_list
        self.move_history = ["X"] * len(self.op_list)
        self.key = 0
        self.ans = "Yes"
        self.flg_out = False
        self.flg_foresight = False
        s = sum(data)
        if s == 2:
            self.flg_foresight = True
        elif s == 0:
            self.ans = "No"
            self.flg_out = True

    def has_next_op(self):
        if self.key + 1 < len(self.op_list):
            return True
        else:
            return False

    def play(self):
        for key, op in enumerate(self.op_list):
            if self.flg_out:
                break
            self.key = key
            self.read_op(op)

    def read_op(self, op):
        if op == "AB":
            self.do(self.A, self.B)
        if op == "AC":
            self.do(self.A, self.C)
        if op == "BC":
            self.do(self.B, self.C)

    def do(self, x, y):
        if self.data[x] < self.data[y]:
            self.move(y, x)
        elif self.data[x] > self.data[y]:
            self.move(x, y)
        else:
            if self.flg_foresight:
                if self.is_next_used(x):
                    self.move(y, x)
                else:
                    self.move(x, y)
            else:
                self.move(x, y)

    def move(self, frm, to):
        self.move_history[self.key] = self.num_to_char(to)
        self.data[frm] -= 1
        self.data[to] += 1
        if self.data[frm] < 0:
            self.ans = "No"
            self.flg_out = True

    @staticmethod
    def num_to_char(z):
        chars = ['A', 'B', 'C']
        return chars[z]

    def is_next_used(self, z):
        if not self.has_next_op():
            return False
        next_op = self.op_list[self.key + 1]
        if self.num_to_char(z) in next_op:
            return True
        else:
            return False

    def print_ans(self):
        print(self.ans)
        if self.ans == "No":
            return
        for h in self.move_history:
            print(h)

if __name__ == '__main__':
    n, a, b, c = list(map(int, input().split()))
    data = [a, b, c]
    op_list = [""] * n
    for i in range(n):
        op_list[i] = input()
    p = Player(data, op_list)
    p.play()
    p.print_ans()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.007317567011341e-05
    2. '[' → logprob: -11.250089645385742
    3. '.import' → logprob: -11.625089645385742
    4. '.readline' → logprob: -11.750089645385742
    5. '```' → logprob: -11.750089645385742
    6. ' .' → logprob: -12.000089645385742
    7. '.
' → logprob: -12.500089645385742
    8. '.`' → logprob: -12.625089645385742
    9. '`.' → logprob: -12.875089645385742
    10. '.user' → logprob: -12.875089645385742

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037562556099146605
    2. 'ursive' → logprob: -6.378756046295166
    3. 'limit' → logprob: -7.003756046295166
    4. 'ur' → logprob: -7.503756046295166
    5. 'urse' → logprob: -9.253756523132324
    6. 'urs' → logprob: -9.503756523132324
    7. '_limit' → logprob: -9.628756523132324
    8. 'ut' → logprob: -9.753756523132324
    9. 'u' → logprob: -10.003756523132324
    10. 't' → logprob: -10.128756523132324

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4403606057167053
    2. 'limit' → logprob: -1.0653605461120605
    3. '_depth' → logprob: -4.5653605461120605
    4. 'depth' → logprob: -7.5653605461120605
    5. '_' → logprob: -8.315361022949219
    6. '_rate' → logprob: -10.065361022949219
    7. 'lim' → logprob: -10.190361022949219
    8. '_factor' → logprob: -10.440361022949219
    9. '(' → logprob: -10.565361022949219
    10. '_stack' → logprob: -10.690361022949219

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16029003262519836
    2. '100' → logprob: -1.910290002822876
    3. '300' → logprob: -10.910289764404297
    4. ' ' → logprob: -11.035289764404297
    5. '500' → logprob: -11.285289764404297
    6. '150' → logprob: -12.160289764404297
    7. '999' → logprob: -12.660289764404297
    8. '1' → logprob: -12.785289764404297
    9. '200' → logprob: -12.785289764404297
    10. '   ' → logprob: -13.285289764404297

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011197781190276146
    2. '000' → logprob: -5.136197566986084
    3. '00' → logprob: -5.261197566986084
    4. '4' → logprob: -10.136198043823242
    5. '**' → logprob: -11.136198043823242
    6. ')' → logprob: -12.636198043823242
    7. '6' → logprob: -12.636198043823242
    8. '2' → logprob: -13.386198043823242
    9. '```' → logprob: -14.011198043823242
    10. '3' → logprob: -14.136198043823242

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0019331586081534624
    2. '9' → logprob: -6.5019330978393555
    3. '6' → logprob: -8.001933097839355
    4. '8' → logprob: -9.251933097839355
    5. ' ' → logprob: -16.501934051513672
    6. '```' → logprob: -17.001934051513672
    7. '(' → logprob: -18.376934051513672
    8. ')' → logprob: -19.501934051513672
    9. '``' → logprob: -20.126934051513672
    10. '0' → logprob: -20.876934051513672

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8559373021125793
    2. '\n' → logprob: -1.3559372425079346
    3. '
' → logprob: -1.4809372425079346
    4. '
' → logprob: -3.4809372425079346
    5. ')' → logprob: -4.230937480926514
    6. 'def' → logprob: -4.855937480926514
    7. '(
' → logprob: -4.980937480926514
    8. '#' → logprob: -5.105937480926514
    9. '

' → logprob: -5.355937480926514
    10. '' → logprob: -5.605937480926514

Token 14: ' pprint' (ID: 123034)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6349740028381348
    2. ' math' → logprob: -0.8849740028381348
    3. ' functools' → logprob: -3.8849740028381348
    4. ' ' → logprob: -4.134974002838135
    5. ' typing' → logprob: -5.009974002838135
    6. 'collections' → logprob: -5.134974002838135
    7. ' threading' → logprob: -5.259974002838135
    8. ' itertools' → logprob: -7.509974002838135
    9. ' time' → logprob: -7.634974002838135
    10. ' os' → logprob: -7.759974002838135

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004375409800559282
    2. 'import' → logprob: -5.504375457763672
    3. '.' → logprob: -8.754375457763672
    4. ' ' → logprob: -9.379375457763672
    5. ' pprint' → logprob: -10.129375457763672
    6. '	import' → logprob: -12.379375457763672
    7. ' importar' → logprob: -13.129375457763672
    8. '.import' → logprob: -13.379375457763672
    9. ' impor' → logprob: -13.504375457763672
    10. ' Import' → logprob: -13.754375457763672

Token 16: ' pprint' (ID: 123034)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39927420020103455
    2. ' pprint' → logprob: -1.149274230003357
    3. 'pp' → logprob: -4.3992743492126465
    4. ' pp' → logprob: -11.399273872375488
    5. 'pretty' → logprob: -11.774273872375488
    6. ' p' → logprob: -12.274273872375488
    7. 'Pretty' → logprob: -12.399273872375488
    8. '.p' → logprob: -12.649273872375488
    9. 'ppt' → logprob: -13.024273872375488
    10. 'pst' → logprob: -13.149273872375488

Token 17: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5284716486930847
    2. 'import' → logprob: -1.1534717082977295
    3. '\' → logprob: -3.0284717082977295
    4. '
' → logprob: -4.77847146987915
    5. '```' → logprob: -4.77847146987915
    6. '

' → logprob: -5.27847146987915
    7. '\n' → logprob: -5.40347146987915
    8. '' → logprob: -5.52847146987915
    9. 'from' → logprob: -5.65347146987915
    10. '#' → logprob: -5.90347146987915

Token 18: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.06224685162305832
    2. 'p' → logprob: -2.812246799468994
    3. ' pp' → logprob: -8.437247276306152
    4. 'ppt' → logprob: -10.187247276306152
    5. 'ppy' → logprob: -11.062247276306152
    6. '_pp' → logprob: -13.187247276306152
    7. '	pp' → logprob: -13.312247276306152
    8. 'pps' → logprob: -13.312247276306152
    9. ' p' → logprob: -13.562247276306152
    10. 'ppi' → logprob: -13.687247276306152

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3904111981391907
    2. 'import' → logprob: -2.140411138534546
    3. 'def' → logprob: -2.265411138534546
    4. '' → logprob: -3.515411138534546
    5. '

' → logprob: -3.640411138534546
    6. '\' → logprob: -4.390411376953125
    7. '\n' → logprob: -5.140411376953125
    8. '```' → logprob: -5.390411376953125
    9. '(' → logprob: -6.140411376953125
    10. '#' → logprob: -6.140411376953125

Token 20: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.175508514046669
    2. '
' → logprob: -2.425508499145508
    3. 'import' → logprob: -4.050508499145508
    4. '```' → logprob: -4.050508499145508
    5. '

' → logprob: -4.800508499145508
    6. '\' → logprob: -4.800508499145508
    7. '\n' → logprob: -5.425508499145508
    8. '`' → logprob: -5.925508499145508
    9. 'd' → logprob: -6.050508499145508
    10. '' → logprob: -6.175508499145508

Token 21: ' pprint' (ID: 123034)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7299759387969971
    2. ' collections' → logprob: -0.7299759387969971
    3. ' itertools' → logprob: -4.104975700378418
    4. 'collections' → logprob: -4.729975700378418
    5. ' typing' → logprob: -5.604975700378418
    6. 'math' → logprob: -5.854975700378418
    7. ' functools' → logprob: -6.729975700378418
    8. ' random' → logprob: -7.104975700378418
    9. ' ' → logprob: -7.229975700378418
    10. ' copy' → logprob: -8.229975700378418

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03909042477607727
    2. 'import' → logprob: -3.289090394973755
    3. ' ' → logprob: -7.789090633392334
    4. '.' → logprob: -8.289090156555176
    5. '_import' → logprob: -8.789090156555176
    6. '<|end|>' → logprob: -9.539090156555176
    7. ' as' → logprob: -9.789090156555176
    8. '	import' → logprob: -10.789090156555176
    9. 'from' → logprob: -11.789090156555176
    10. ' Import' → logprob: -12.164090156555176

Token 23: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1030687466263771
    2. ' p' → logprob: -2.6030688285827637
    3. 'Pretty' → logprob: -4.603068828582764
    4. ' Pretty' → logprob: -5.228068828582764
    5. ' pprint' → logprob: -5.228068828582764
    6. 'pp' → logprob: -5.978068828582764
    7. 'Counter' → logprob: -9.353068351745605
    8. ' pp' → logprob: -9.353068351745605
    9. '.p' → logprob: -9.603068351745605
    10. 'deque' → logprob: -9.728068351745605

Token 24: 'format' (ID: 4078)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.166274756193161
    2. 'p' → logprob: -2.1662747859954834
    3. 'r' → logprob: -3.4162747859954834
    4. 'pr' → logprob: -5.916274547576904
    5. 'format' → logprob: -5.916274547576904
    6. 'printf' → logprob: -9.791275024414062
    7. 'pretty' → logprob: -10.291275024414062
    8. 'pp' → logprob: -10.291275024414062
    9. 'prin' → logprob: -10.791275024414062
    10. 'rp' → logprob: -10.916275024414062

Token 25: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5549107193946838
    2. 'import' → logprob: -1.304910659790039
    3. '\n' → logprob: -3.054910659790039
    4. 'from' → logprob: -4.054910659790039
    5. '

' → logprob: -4.179910659790039
    6. ',' → logprob: -4.679910659790039
    7. '\' → logprob: -4.804910659790039
    8. '()' → logprob: -4.804910659790039
    9. '(
' → logprob: -5.179910659790039
    10. ')' → logprob: -5.429910659790039

Token 26: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' → logprob: -0.051375944167375565
    2. ' pf' → logprob: -3.0513758659362793
    3. 'pp' → logprob: -6.426375865936279
    4. 'p' → logprob: -6.801375865936279
    5. '_pf' → logprob: -10.801376342773438
    6. ' p' → logprob: -10.926376342773438
    7. ' pp' → logprob: -12.301376342773438
    8. 'spf' → logprob: -12.301376342773438
    9. 'PF' → logprob: -12.926376342773438
    10. 'fmt' → logprob: -13.426376342773438

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6418087482452393
    2. 'import' → logprob: -1.7668087482452393
    3. '\n' → logprob: -2.5168087482452393
    4. '' → logprob: -3.1418087482452393
    5. '\' → logprob: -3.2668087482452393
    6. '

' → logprob: -3.3918087482452393
    7. ' ' → logprob: -3.6418087482452393
    8. 'def' → logprob: -4.51680850982666
    9. 'n' → logprob: -4.76680850982666
    10. '#' → logprob: -4.89180850982666

Token 28: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3126617670059204
    2. '

' → logprob: -1.5626617670059204
    3. 'import' → logprob: -3.437661647796631
    4. 'def' → logprob: -4.062661647796631
    5. '```' → logprob: -6.187661647796631
    6. '' → logprob: -6.812661647796631
    7. '


' → logprob: -6.937661647796631
    8. '\n' → logprob: -7.062661647796631
    9. '
' → logprob: -7.187661647796631
    10. '#' → logprob: -7.312661647796631

Token 29: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.08146394044160843
    2. ' math' → logprob: -2.9564640522003174
    3. ' json' → logprob: -4.456463813781738
    4. ' numpy' → logprob: -5.456463813781738
    5. ' re' → logprob: -5.956463813781738
    6. ' collections' → logprob: -5.956463813781738
    7. ' threading' → logprob: -6.331463813781738
    8. ' ' → logprob: -6.831463813781738
    9. ' random' → logprob: -6.956463813781738
    10. ' itertools' → logprob: -7.331463813781738

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2621353268623352
    2. '

' → logprob: -1.6371352672576904
    3. '\' → logprob: -4.7621355056762695
    4. 'import' → logprob: -5.1371355056762695
    5. '\n' → logprob: -5.3871355056762695
    6. '' → logprob: -5.8871355056762695
    7. 'def' → logprob: -6.0121355056762695
    8. '


' → logprob: -6.0121355056762695
    9. '
' → logprob: -6.0121355056762695
    10. ' 

' → logprob: -6.5121355056762695

Token 31: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4166881740093231
    2. 'import' → logprob: -1.7916882038116455
    3. '

' → logprob: -2.2916882038116455
    4. 'def' → logprob: -3.9166882038116455
    5. '\n' → logprob: -4.541687965393066
    6. '\' → logprob: -4.791687965393066
    7. ',' → logprob: -5.041687965393066
    8. '```' → logprob: -5.416687965393066
    9. '' → logprob: -5.541687965393066
    10. ' 

' → logprob: -5.791687965393066

Token 32: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.18956676125526428
    2. ' itertools' → logprob: -2.5645668506622314
    3. ' random' → logprob: -2.8145668506622314
    4. ' collections' → logprob: -4.439566612243652
    5. ' sys' → logprob: -5.064566612243652
    6. ' functools' → logprob: -5.189566612243652
    7. 'os' → logprob: -5.689566612243652
    8. ' numpy' → logprob: -5.689566612243652
    9. 'random' → logprob: -6.064566612243652
    10. ' operator' → logprob: -7.064566612243652

Token 33: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.6060808522743173e-05
    2. 'e' → logprob: -11.250025749206543
    3. 'ec' → logprob: -11.500025749206543
    4. 't' → logprob: -13.375025749206543
    5. 'ected' → logprob: -14.750025749206543
    6. 'ection' → logprob: -15.000025749206543
    7. '```' → logprob: -15.625025749206543
    8. 'ectl' → logprob: -16.37502670288086
    9. 'ector' → logprob: -16.62502670288086
    10. 'ects' → logprob: -17.00002670288086

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.404096782207489
    2. 'import' → logprob: -1.7790968418121338
    3. '

' → logprob: -2.154096841812134
    4. '<|end|>' → logprob: -4.154096603393555
    5. 'def' → logprob: -5.279096603393555
    6. '\n' → logprob: -5.404096603393555
    7. '```' → logprob: -5.654096603393555
    8. ' 

' → logprob: -5.904096603393555
    9. '#' → logprob: -5.904096603393555
    10. '' → logprob: -5.904096603393555

Token 35: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.537340521812439
    2. '

' → logprob: -1.162340521812439
    3. 'import' → logprob: -2.7873406410217285
    4. 'def' → logprob: -3.6623406410217285
    5. '


' → logprob: -5.5373406410217285
    6. '
' → logprob: -5.7873406410217285
    7. '\n' → logprob: -6.0373406410217285
    8. '\' → logprob: -6.9123406410217285
    9. '```' → logprob: -7.0373406410217285
    10. 'class' → logprob: -7.2873406410217285

Token 36: ' Player' (ID: 12487)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Node' → logprob: -1.0686758756637573
    2. ' Tree' → logprob: -1.5686758756637573
    3. ' Segment' → logprob: -1.5686758756637573
    4. ' Solution' → logprob: -2.068675994873047
    5. ' Binary' → logprob: -2.943675994873047
    6. ' Sorted' → logprob: -3.693675994873047
    7. ' Seg' → logprob: -5.068675994873047
    8. ' My' → logprob: -5.443675994873047
    9. ' Solver' → logprob: -5.568675994873047
    10. ' S' → logprob: -5.943675994873047

Token 37: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045605594641529024
    2. '(' → logprob: -7.875455856323242
    3. '():' → logprob: -10.125455856323242
    4. ':
' → logprob: -11.375455856323242
    5. ' :' → logprob: -11.875455856323242
    6. '<|end|>' → logprob: -12.375455856323242
    7. '(object' → logprob: -13.000455856323242
    8. '):' → logprob: -13.000455856323242
    9. '(Abstract' → logprob: -13.625455856323242
    10. ':**' → logprob: -13.750455856323242

Token 38: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7296726703643799
    2. '   ' → logprob: -1.2296726703643799
    3. '<|end|>' → logprob: -2.10467267036438
    4. ':' → logprob: -2.85467267036438
    5. '    
' → logprob: -4.979672431945801
    6. '    ' → logprob: -4.979672431945801
    7. ' def' → logprob: -5.104672431945801
    8. ' 
' → logprob: -5.229672431945801
    9. '  ' → logprob: -5.354672431945801
    10. '
' → logprob: -5.729672431945801

Token 39: ' A' (ID: 355)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4675402045249939
    2. 'def' → logprob: -1.9675402641296387
    3. '   ' → logprob: -2.0925402641296387
    4. ' ' → logprob: -3.2175402641296387
    5. ' pass' → logprob: -3.4675402641296387
    6. '    ' → logprob: -4.217540264129639
    7. '    
' → logprob: -4.467540264129639
    8. ' 
' → logprob: -5.092540264129639
    9. 'pass' → logprob: -6.342540264129639
    10. '<|end|>' → logprob: -6.967540264129639

Token 40: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8443136215209961
    2. 'I' → logprob: -1.594313621520996
    3. 'rray' → logprob: -1.844313621520996
    4. 'd' → logprob: -3.094313621520996
    5. 'r' → logprob: -3.219313621520996
    6. ':' → logprob: -3.469313621520996
    7. 'b' → logprob: -4.219313621520996
    8. 'rg' → logprob: -4.594313621520996
    9. 'll' → logprob: -4.844313621520996
    10. 'B' → logprob: -5.094313621520996

Token 41: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.34216001629829407
    2. '[]' → logprob: -1.4671599864959717
    3. ' ' → logprob: -3.3421599864959717
    4. '0' → logprob: -4.717160224914551
    5. '[' → logprob: -5.217160224914551
    6. ' [' → logprob: -5.592160224914551
    7. '100' → logprob: -6.217160224914551
    8. '10' → logprob: -6.967160224914551
    9. '[int' → logprob: -7.092160224914551
    10. '1' → logprob: -7.342160224914551

Token 42: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05090973526239395
    2. '[' → logprob: -3.6759097576141357
    3. '0' → logprob: -4.675909519195557
    4. '1' → logprob: -5.925909519195557
    5. '[int' → logprob: -5.925909519195557
    6. 'math' → logprob: -6.175909519195557
    7. '{}' → logprob: -6.425909519195557
    8. '100' → logprob: -6.425909519195557
    9. ' []' → logprob: -6.675909519195557
    10. '10' → logprob: -7.425909519195557

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5793144106864929
    2. '<|end|>' → logprob: -1.8293144702911377
    3. ' ' → logprob: -2.0793144702911377
    4. '
' → logprob: -2.7043144702911377
    5. '  ' → logprob: -3.5793144702911377
    6. '    
' → logprob: -4.079314231872559
    7. '    ' → logprob: -4.204314231872559
    8. 'x' → logprob: -4.954314231872559
    9. '<|end|>' → logprob: -5.579314231872559
    10. ' #' → logprob: -6.079314231872559

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22630131244659424
    2. '<|end|>' → logprob: -2.2263011932373047
    3. ' ' → logprob: -3.1013011932373047
    4. '  ' → logprob: -3.7263011932373047
    5. '
' → logprob: -4.476301193237305
    6. '    
' → logprob: -5.226301193237305
    7. '    ' → logprob: -6.226301193237305
    8. '<|end|>' → logprob: -6.726301193237305
    9. 'class' → logprob: -7.226301193237305
    10. '   
' → logprob: -7.351301193237305

Token 45: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.8570278286933899
    2. '   ' → logprob: -1.2320277690887451
    3. 'B' (adapté à ' B') → logprob: -1.7320277690887451
    4. ' def' → logprob: -2.982027769088745
    5. 'def' → logprob: -3.482027769088745
    6. ' ' → logprob: -5.732028007507324
    7. '_' → logprob: -5.982028007507324
    8. ' =' → logprob: -6.232028007507324
    9. ' score' → logprob: -6.232028007507324
    10. 'I' → logprob: -6.607028007507324

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700212001800537
    2. '=' → logprob: -2.127002239227295
    3. ' ' → logprob: -9.877001762390137
    4. '   ' → logprob: -11.002001762390137
    5. '  ' → logprob: -12.752001762390137
    6. ',' → logprob: -13.502001762390137
    7. '    ' → logprob: -14.627001762390137
    8. '0' → logprob: -15.002001762390137
    9. '<|end|>' → logprob: -15.252001762390137
    10. ' =
' → logprob: -15.752001762390137

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8119469285011292
    2. '1' → logprob: -1.0619468688964844
    3. '0' → logprob: -1.5619468688964844
    4. '100' → logprob: -8.811946868896484
    5. '   ' → logprob: -8.936946868896484
    6. '  ' → logprob: -9.811946868896484
    7. '10' → logprob: -9.811946868896484
    8. '2' → logprob: -11.561946868896484
    9. ' -' → logprob: -11.686946868896484
    10. '-' → logprob: -11.749446868896484

Token 48: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41325637698173523
    2. '1' → logprob: -1.1632564067840576
    3. ' ' → logprob: -3.6632564067840576
    4. '100' → logprob: -9.288256645202637
    5. '   ' → logprob: -9.663256645202637
    6. '10' → logprob: -10.038256645202637
    7. '2' → logprob: -10.413256645202637
    8. '  ' → logprob: -10.600756645202637
    9. '-' → logprob: -10.975756645202637
    10. '3' → logprob: -11.538256645202637

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.305090993642807
    2. '
' → logprob: -1.5550910234451294
    3. '<|end|>' → logprob: -4.05509090423584
    4. '    
' → logprob: -4.68009090423584
    5. 'def' → logprob: -5.05509090423584
    6. '```' → logprob: -5.43009090423584
    7. ' ' → logprob: -6.05509090423584
    8. ':' → logprob: -6.30509090423584
    9. '<|end|>' → logprob: -6.43009090423584
    10. '  ' → logprob: -6.68009090423584

Token 51: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0929345116019249
    2. 'def' → logprob: -3.0929346084594727
    3. '
' → logprob: -4.342934608459473
    4. ':' → logprob: -4.592934608459473
    5. '    
' → logprob: -4.717934608459473
    6. ' def' → logprob: -4.842934608459473
    7. ' ' → logprob: -7.092934608459473
    8. '\n' → logprob: -7.592934608459473
    9. '	def' → logprob: -7.967934608459473
    10. '  ' → logprob: -8.342934608459473

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04863812401890755
    2. '=' → logprob: -3.048638105392456
    3. '   ' → logprob: -10.798638343811035
    4. '  ' → logprob: -10.923638343811035
    5. ' ' → logprob: -11.423638343811035
    6. '    ' → logprob: -14.548638343811035
    7. '0' → logprob: -15.173638343811035
    8. ':' → logprob: -15.673638343811035
    9. '.' → logprob: -16.54863739013672
    10. ')' → logprob: -16.92363739013672

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.523289680480957
    2. '2' → logprob: -0.898289680480957
    3. '0' → logprob: -8.898289680480957
    4. '  ' → logprob: -11.273289680480957
    5. '-' → logprob: -12.585789680480957
    6. '   ' → logprob: -13.023289680480957
    7. '1' → logprob: -13.210789680480957
    8. ' -' → logprob: -13.273289680480957
    9. '(' → logprob: -14.085789680480957
    10. '    ' → logprob: -14.335789680480957

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10022522509098053
    2. ' ' → logprob: -2.3502252101898193
    3. '0' → logprob: -11.350225448608398
    4. '  ' → logprob: -12.600225448608398
    5. '   ' → logprob: -13.225225448608398
    6. '1' → logprob: -14.787725448608398
    7. '    ' → logprob: -15.725225448608398
    8. '```' → logprob: -15.725225448608398
    9. '3' → logprob: -16.1627254486084
    10. 'None' → logprob: -16.3502254486084

Token 55: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8162930011749268
    2. '   ' → logprob: -0.8162930011749268
    3. 'def' → logprob: -2.5662930011749268
    4. '    
' → logprob: -3.6912930011749268
    5. ':' → logprob: -5.316292762756348
    6. ' def' → logprob: -5.941292762756348
    7. '	def' → logprob: -6.691292762756348
    8. '<|end|>' → logprob: -7.316292762756348
    9. '<|end|>' → logprob: -7.316292762756348
    10. ' ' → logprob: -7.691292762756348

Token 57: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008876794017851353
    2. '   ' → logprob: -5.383876800537109
    3. '@' → logprob: -6.508876800537109
    4. ' def' → logprob: -6.758876800537109
    5. 'D' → logprob: -7.633876800537109
    6. 'score' → logprob: -9.38387680053711
    7. 'S' → logprob: -9.50887680053711
    8. 'name' → logprob: -9.63387680053711
    9. '_' → logprob: -9.63387680053711
    10. 'moves' → logprob: -9.75887680053711

Token 58: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.019095860421657562
    2. ' ' → logprob: -4.6440958976745605
    3. ' _' → logprob: -5.1440958976745605
    4. ' init' → logprob: -6.6440958976745605
    5. '_init' → logprob: -7.1440958976745605
    6. '__' → logprob: -7.5190958976745605
    7. '_' → logprob: -7.7690958976745605
    8. ' def' → logprob: -8.769095420837402
    9. ' ' → logprob: -9.144095420837402
    10. 'init' → logprob: -9.519095420837402

Token 59: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5048530030981055e-06
    2. 'ini' → logprob: -13.500001907348633
    3. '_init' → logprob: -17.625001907348633
    4. 'i' → logprob: -17.875001907348633
    5. 'int' → logprob: -18.500001907348633
    6. 'in' → logprob: -18.875001907348633
    7. 'inite' → logprob: -19.500001907348633
    8. ' init' → logprob: -19.500001907348633
    9. 'call' → logprob: -20.625001907348633
    10. 'new' → logprob: -20.875001907348633

Token 60: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04898768290877342
    2. '__' → logprob: -3.048987627029419
    3. '(' → logprob: -9.17398738861084
    4. '__(
' → logprob: -9.17398738861084
    5. '__('' → logprob: -9.67398738861084
    6. '__((' → logprob: -9.79898738861084
    7. '(self' → logprob: -10.42398738861084
    8. '__(*' → logprob: -10.79898738861084
    9. '_(' → logprob: -11.79898738861084
    10. '___' → logprob: -12.04898738861084

Token 61: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -17.500059127807617
    4. ')' → logprob: -18.125059127807617
    5. ' ' → logprob: -18.375059127807617
    6. '	self' → logprob: -18.625059127807617
    7. 's' → logprob: -18.625059127807617
    8. '_self' → logprob: -19.250059127807617
    9. ',self' → logprob: -19.375059127807617
    10. ',' → logprob: -19.875059127807617

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012769035529345274
    2. ' ,' → logprob: -7.251276969909668
    3. 'self' → logprob: -7.626276969909668
    4. ',self' → logprob: -9.751276969909668
    5. ')' → logprob: -12.251276969909668
    6. '(self' → logprob: -12.501276969909668
    7. '<|end|>' → logprob: -12.751276969909668
    8. '<|end|>' → logprob: -13.001276969909668
    9. '_,' → logprob: -13.626276969909668
    10. ' self' → logprob: -13.626276969909668

Token 63: ' data' (ID: 1238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4791596233844757
    2. 'name' → logprob: -1.8541595935821533
    3. ' self' → logprob: -1.9791595935821533
    4. ' name' → logprob: -2.6041595935821533
    5. ')' → logprob: -6.354159832000732
    6. 'score' → logprob: -6.729159832000732
    7. 'player' → logprob: -6.854159832000732
    8. ' player' → logprob: -7.104159832000732
    9. 'scores' → logprob: -7.229159832000732
    10. '   ' → logprob: -7.354159832000732

Token 64: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001008515479043126
    2. ')' → logprob: -7.6260085105896
    3. ':' → logprob: -8.626008987426758
    4. ',' → logprob: -8.626008987426758
    5. '=None' → logprob: -10.001008987426758
    6. '=' → logprob: -10.126008987426758
    7. ' ):' → logprob: -10.376008987426758
    8. '):
' → logprob: -10.501008987426758
    9. '_data' → logprob: -12.001008987426758
    10. '   ' → logprob: -13.376008987426758

Token 65: ' op' (ID: 991)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.1334160566329956
    2. ' index' → logprob: -1.3834160566329956
    3. ' player' → logprob: -2.508416175842285
    4. ' scores' → logprob: -3.008416175842285
    5. ' name' → logprob: -3.258416175842285
    6. ' n' → logprob: -3.383416175842285
    7. ' hand' → logprob: -4.133416175842285
    8. ' players' → logprob: -4.133416175842285
    9. ' score' → logprob: -4.258416175842285
    10. ' start' → logprob: -4.258416175842285

Token 66: '_list' (ID: 4162)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.07083739340305328
    2. 'ponents' → logprob: -2.9458374977111816
    3. 'p' → logprob: -5.070837497711182
    4. 't' → logprob: -5.445837497711182
    5. 'tim' → logprob: -6.945837497711182
    6. 'onent' → logprob: -7.820837497711182
    7. ')' → logprob: -7.945837497711182
    8. 'tion' → logprob: -8.320837020874023
    9. 's' → logprob: -8.445837020874023
    10. 'pon' → logprob: -8.570837020874023

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011517672101035714
    2. '):
' → logprob: -7.3761515617370605
    3. '=' → logprob: -8.376152038574219
    4. ')' → logprob: -8.626152038574219
    5. ',' → logprob: -10.001152038574219
    6. '=None' → logprob: -10.376152038574219
    7. '):
' → logprob: -11.126152038574219
    8. ':' → logprob: -11.751152038574219
    9. ' ):' → logprob: -12.126152038574219
    10. '=[]' → logprob: -12.751152038574219

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8526744246482849
    2. ':' → logprob: -1.4776744842529297
    3. '):' → logprob: -1.7276744842529297
    4. ',' → logprob: -2.4776744842529297
    5. ')' → logprob: -2.6026744842529297
    6. '<|end|>' → logprob: -5.22767448425293
    7. '():' → logprob: -6.35267448425293
    8. '.' → logprob: -6.60267448425293
    9. '<|end|>' → logprob: -7.72767448425293
    10. '=' → logprob: -8.85267448425293

Token 69: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.581893801689148
    2. '       ' → logprob: -1.206893801689148
    3. 'self' (adapté à ' self') → logprob: -1.956893801689148
    4. '   ' → logprob: -8.331893920898438
    5. '	self' → logprob: -8.581893920898438
    6. ' ' → logprob: -8.956893920898438
    7. '	' → logprob: -10.081893920898438
    8. ' ' → logprob: -10.581893920898438
    9. '        ' → logprob: -10.956893920898438
    10. '    ' → logprob: -11.581893920898438

Token 70: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.5883350968360901
    2. '.' → logprob: -0.8383350968360901
    3. ' .' → logprob: -5.088335037231445
    4. 'data' → logprob: -6.088335037231445
    5. ' =' → logprob: -6.213335037231445
    6. '=data' → logprob: -7.088335037231445
    7. '=' → logprob: -7.463335037231445
    8. '_data' → logprob: -8.588335037231445
    9. '._' → logprob: -9.588335037231445
    10. ' data' → logprob: -10.338335037231445

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576298713684082
    2. '=' → logprob: -0.826298713684082
    3. '[' → logprob: -9.201298713684082
    4. ')' → logprob: -9.326298713684082
    5. ',' → logprob: -9.451298713684082
    6. '.' → logprob: -9.826298713684082
    7. '=data' → logprob: -11.326298713684082
    8. '   ' → logprob: -12.451298713684082
    9. ']' → logprob: -12.951298713684082
    10. '[:]' → logprob: -12.951298713684082

Token 72: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.31326520442962646
    2. 'data' → logprob: -1.3132652044296265
    3. '	data' → logprob: -13.688264846801758
    4. 'Data' → logprob: -14.313264846801758
    5. '[data' → logprob: -14.688264846801758
    6. '$data' → logprob: -15.688264846801758
    7. '_data' → logprob: -15.813264846801758
    8. 'dat' → logprob: -16.063264846801758
    9. 'deque' → logprob: -16.063264846801758
    10. ' ' → logprob: -16.188264846801758

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024904031306505203
    2. '
' → logprob: -6.627490520477295
    3. '<|end|>' → logprob: -7.127490520477295
    4. 'self' → logprob: -8.752490043640137
    5. '        
' → logprob: -9.252490043640137
    6. '<|end|>' → logprob: -9.752490043640137
    7. ',' → logprob: -11.627490043640137
    8. ' self' → logprob: -12.252490043640137
    9. '   ' → logprob: -12.502490043640137
    10. '      ' → logprob: -12.627490043640137

Token 75: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47850337624549866
    2. ' self' → logprob: -1.2285033464431763
    3. '       ' → logprob: -2.478503465652466
    4. '
' → logprob: -5.728503227233887
    5. '	self' → logprob: -9.103503227233887
    6. ' ' → logprob: -9.728503227233887
    7. '   ' → logprob: -10.103503227233887
    8. '
' → logprob: -10.603503227233887
    9. '(self' → logprob: -10.853503227233887
    10. 'op' → logprob: -11.103503227233887

Token 76: '.op' (ID: 19357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6300709247589111
    2. '.op' → logprob: -0.8800709247589111
    3. '._' → logprob: -4.005070686340332
    4. '.data' → logprob: -4.630070686340332
    5. '.current' → logprob: -6.005070686340332
    6. ' .' → logprob: -6.130070686340332
    7. '.player' → logprob: -6.255070686340332
    8. '.next' → logprob: -6.380070686340332
    9. '_op' → logprob: -6.630070686340332
    10. '.index' → logprob: -6.630070686340332

Token 77: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0006757391383871436
    2. 's' → logprob: -7.875675678253174
    3. '_' → logprob: -8.750676155090332
    4. 'list' → logprob: -10.000676155090332
    5. ' _' → logprob: -10.875676155090332
    6. '_idx' → logprob: -11.000676155090332
    7. '_index' → logprob: -11.125676155090332
    8. '_count' → logprob: -12.125676155090332
    9. ' =' → logprob: -12.500676155090332
    10. '_lst' → logprob: -12.500676155090332

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022686660289764
    2. '=' → logprob: -1.910226821899414
    3. ' ' → logprob: -13.660226821899414
    4. ')' → logprob: -14.535226821899414
    5. '=[]' → logprob: -14.910226821899414
    6. '.' → logprob: -15.785226821899414
    7. ',' → logprob: -15.910226821899414
    8. '[' → logprob: -16.035226821899414
    9. '=data' → logprob: -16.535226821899414
    10. '[:]' → logprob: -16.660226821899414

Token 79: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.10021615028381348
    2. ' op' → logprob: -2.3502161502838135
    3. '	op' → logprob: -12.225215911865234
    4. '[]' → logprob: -13.225215911865234
    5. 'opf' → logprob: -14.225215911865234
    6. 'list' → logprob: -14.350215911865234
    7. '[' → logprob: -14.975215911865234
    8. 'data' → logprob: -15.225215911865234
    9. ' ' → logprob: -15.600215911865234
    10. '(op' → logprob: -15.600215911865234

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00086834846297279
    2. '_' → logprob: -7.125868320465088
    3. 'ist' → logprob: -10.750868797302246
    4. '_l' → logprob: -11.500868797302246
    5. ' _' → logprob: -11.750868797302246
    6. 'list' → logprob: -12.000868797302246
    7. '_lst' → logprob: -12.000868797302246
    8. '_li' → logprob: -13.125868797302246
    9. '._' → logprob: -13.250868797302246
    10. '.' → logprob: -13.500868797302246

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6456984877586365
    2. '<|end|>' → logprob: -0.8956984877586365
    3. '   ' → logprob: -3.6456985473632812
    4. ' ' → logprob: -4.645698547363281
    5. '    
' → logprob: -5.270698547363281
    6. '<|end|>' → logprob: -5.270698547363281
    7. ' 
' → logprob: -5.395698547363281
    8. '\n' → logprob: -5.520698547363281
    9. ')' → logprob: -5.895698547363281
    10. ',' → logprob: -6.270698547363281

Token 83: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '.move' (ID: 24425)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0025341638829559088
    2. '.data' → logprob: -7.50253438949585
    3. ' .' → logprob: -7.62753438949585
    4. '._' → logprob: -7.75253438949585
    5. '.current' → logprob: -8.502533912658691
    6. '.op' → logprob: -9.002533912658691
    7. '.count' → logprob: -10.252533912658691
    8. '.is' → logprob: -10.377533912658691
    9. '.player' → logprob: -10.502533912658691
    10. '.next' → logprob: -10.502533912658691

Token 85: '_history' (ID: 45451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5798956751823425
    2. '_idx' → logprob: -1.4548957347869873
    3. '_index' → logprob: -1.8298957347869873
    4. '_' → logprob: -3.4548957347869873
    5. ' =' → logprob: -5.454895496368408
    6. '_i' → logprob: -5.579895496368408
    7. '_count' → logprob: -6.454895496368408
    8. '=' → logprob: -6.579895496368408
    9. '_id' → logprob: -6.704895496368408
    10. 'ed' → logprob: -7.704895496368408

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10117999464273453
    2. '=' → logprob: -2.351180076599121
    3. '=[]' → logprob: -6.976180076599121
    4. '[:]' → logprob: -11.226180076599121
    5. ' ' → logprob: -11.351180076599121
    6. '[' → logprob: -12.851180076599121
    7. '[]' → logprob: -12.976180076599121
    8. ' []' → logprob: -13.101180076599121
    9. ' =[' → logprob: -13.601180076599121
    10. ',' → logprob: -13.851180076599121

Token 87: ' ["' (ID: 9129)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2520834505558014
    2. ' []' → logprob: -1.502083420753479
    3. '[' → logprob: -9.627083778381348
    4. ' ' → logprob: -9.627083778381348
    5. '[]
' → logprob: -11.252083778381348
    6. '[]}' → logprob: -12.002083778381348
    7. '[:]' → logprob: -14.377083778381348
    8. '[]

' → logprob: -14.627083778381348
    9. '[],' → logprob: -14.752083778381348
    10. ' []
' → logprob: -14.752083778381348

Token 88: 'X' (ID: 55)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.25694549083709717
    2. ' "]' → logprob: -2.6319456100463867
    3. 'A' → logprob: -3.2569456100463867
    4. 'start' → logprob: -3.6319456100463867
    5. 'C' → logprob: -4.381945610046387
    6. 'S' → logprob: -4.506945610046387
    7. ']' → logprob: -4.506945610046387
    8. 'B' → logprob: -4.756945610046387
    9. '"' → logprob: -4.756945610046387
    10. 's' → logprob: -5.131945610046387

Token 89: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0009702988318167627
    2. '"' → logprob: -7.375970363616943
    3. ' "]' → logprob: -8.500969886779785
    4. ']' → logprob: -9.875969886779785
    5. '",' → logprob: -10.000969886779785
    6. '']' → logprob: -11.125969886779785
    7. 'X' → logprob: -12.250969886779785
    8. '"}' → logprob: -12.750969886779785
    9. ',' → logprob: -13.125969886779785
    10. ')' → logprob: -13.250969886779785

Token 90: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0510832071304321
    2. '10' → logprob: -1.5510832071304321
    3. '20' → logprob: -2.4260830879211426
    4. '3' → logprob: -2.6760830879211426
    5. '100' → logprob: -2.9260830879211426
    6. ' len' → logprob: -3.0510830879211426
    7. '5' → logprob: -3.1760830879211426
    8. '50' → logprob: -3.4260830879211426
    9. 'len' → logprob: -3.5510830879211426
    10. '30' → logprob: -3.9260830879211426

Token 92: '(self' (ID: 2402)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.03205852583050728
    2. '(self' → logprob: -3.9070584774017334
    3. '(' → logprob: -4.5320587158203125
    4. '(op' → logprob: -7.2820587158203125
    5. '(
' → logprob: -13.657058715820312
    6. '(dat' → logprob: -14.282058715820312
    7. 'data' → logprob: -14.407058715820312
    8. ' (' → logprob: -14.532058715820312
    9. '(d' → logprob: -15.282058715820312
    10. '(this' → logprob: -15.657058715820312

Token 93: '.op' (ID: 19357)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.16385550796985626
    2. '.op' → logprob: -1.9138555526733398
    3. '.' → logprob: -5.66385555267334
    4. '.move' → logprob: -9.91385555267334
    5. 'op' → logprob: -10.41385555267334
    6. '.o' → logprob: -11.16385555267334
    7. 'data' → logprob: -11.28885555267334
    8. '.dat' → logprob: -11.28885555267334
    9. ' .' → logprob: -11.53885555267334
    10. '.
' → logprob: -11.91385555267334

Token 94: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -11.750008583068848
    3. '_l' → logprob: -14.750008583068848
    4. 'list' → logprob: -16.125009536743164
    5. ' _' → logprob: -16.250009536743164
    6. '_li' → logprob: -16.750009536743164
    7. 'o' → logprob: -18.250009536743164
    8. '__' → logprob: -18.250009536743164
    9. '_data' → logprob: -18.500009536743164
    10. '_lst' → logprob: -18.500009536743164

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. ' )' → logprob: -10.250043869018555
    3. ')
' → logprob: -12.000043869018555
    4. '   ' → logprob: -14.125043869018555
    5. '<|end|>' → logprob: -14.375043869018555
    6. '       ' → logprob: -15.000043869018555
    7. ' ' → logprob: -16.125043869018555
    8. ']' → logprob: -16.250043869018555
    9. '),' → logprob: -16.250043869018555
    10. ')return' → logprob: -16.875043869018555

Token 96: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16536933183670044
    2. '.current' → logprob: -2.4153692722320557
    3. '.score' → logprob: -4.915369510650635
    4. '.cur' → logprob: -5.290369510650635
    5. '.op' → logprob: -5.415369510650635
    6. '.history' → logprob: -5.540369510650635
    7. '.best' → logprob: -5.665369510650635
    8. '.index' → logprob: -5.790369510650635
    9. '._' → logprob: -5.790369510650635
    10. '.turn' → logprob: -5.915369510650635

Token 99: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9867454767227173
    2. ' =' → logprob: -1.2367454767227173
    3. '_map' → logprob: -2.3617453575134277
    4. '=' → logprob: -3.1117453575134277
    5. '_index' → logprob: -3.8617453575134277
    6. '_indices' → logprob: -3.9867453575134277
    7. '_idx' → logprob: -4.111745357513428
    8. '_list' → logprob: -4.361745357513428
    9. '_history' → logprob: -4.486745357513428
    10. 's' → logprob: -4.611745357513428

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.102370023727417
    2. '""' → logprob: -2.102370023727417
    3. ' ' → logprob: -2.352370023727417
    4. 'None' → logprob: -2.602370023727417
    5. 'data' → logprob: -2.727370023727417
    6. ' None' → logprob: -3.102370023727417
    7. 'tuple' → logprob: -3.352370023727417
    8. ' tuple' → logprob: -3.477370023727417
    9. ' data' → logprob: -3.602370023727417
    10. ' []' → logprob: -3.852370023727417

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9158389568328857
    2. 'self' → logprob: -1.9158389568328857
    3. 'data' → logprob: -1.9158389568328857
    4. 'tuple' → logprob: -2.1658389568328857
    5. 'hash' → logprob: -2.1658389568328857
    6. '{}' → logprob: -2.9158389568328857
    7. '""' → logprob: -3.0408389568328857
    8. '()' → logprob: -3.2908389568328857
    9. '(' → logprob: -3.4158389568328857
    10. ' tuple' → logprob: -3.7908389568328857

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020449157804250717
    2. ' .' → logprob: -4.020449161529541
    3. ' ' → logprob: -6.145449161529541
    4. '_' → logprob: -9.395448684692383
    5. '[' → logprob: -11.770448684692383
    6. ',' → logprob: -11.770448684692383
    7. ')' → logprob: -12.645448684692383
    8. '  ' → logprob: -12.770448684692383
    9. '._' → logprob: -12.770448684692383
    10. '<|end|>' → logprob: -12.770448684692383

Token 106: 'ans' (ID: 616)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2217196226119995
    2. 'op' → logprob: -1.9717196226119995
    3. 'move' → logprob: -2.221719741821289
    4. 'key' → logprob: -2.471719741821289
    5. 'idx' → logprob: -2.721719741821289
    6. 'len' → logprob: -2.846719741821289
    7. 'pos' → logprob: -3.596719741821289
    8. 'last' → logprob: -3.971719741821289
    9. 'prev' → logprob: -4.096719741821289
    10. 'score' → logprob: -4.096719741821289

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18632228672504425
    2. ' =' → logprob: -2.4363222122192383
    3. '_' → logprob: -2.5613222122192383
    4. '_idx' → logprob: -6.311322212219238
    5. 's' → logprob: -7.561322212219238
    6. '_=' → logprob: -7.811322212219238
    7. ')' → logprob: -8.061322212219238
    8. '_index' → logprob: -8.311322212219238
    9. '_count' → logprob: -8.436322212219238
    10. '=[]' → logprob: -9.061322212219238

Token 108: ' "' (ID: 392)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.39373546838760376
    2. '0' → logprob: -1.518735408782959
    3. '""' → logprob: -3.643735408782959
    4. 'None' → logprob: -3.643735408782959
    5. ' []' → logprob: -4.018735408782959
    6. '-' → logprob: -4.643735408782959
    7. 'False' → logprob: -5.018735408782959
    8. '[' → logprob: -5.143735408782959
    9. ' ' → logprob: -5.393735408782959
    10. '"' → logprob: -5.643735408782959

Token 109: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014970259740948677
    2. 'X' → logprob: -5.014970302581787
    3. '"""' → logprob: -5.889970302581787
    4. '?' → logprob: -6.514970302581787
    5. ' "' → logprob: -6.764970302581787
    6. '""' → logprob: -7.139970302581787
    7. '?"' → logprob: -7.264970302581787
    8. ''' → logprob: -8.389969825744629
    9. 'N' → logprob: -9.139969825744629
    10. '")' → logprob: -9.514969825744629

Token 110: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003934967797249556
    2. '\n' → logprob: -5.628934860229492
    3. ' "' → logprob: -9.128934860229492
    4. '"
' → logprob: -10.003934860229492
    5. '"""' → logprob: -10.628934860229492
    6. '   ' → logprob: -10.628934860229492
    7. ',' → logprob: -10.878934860229492
    8. 'def' → logprob: -10.878934860229492
    9. '<|end|>' → logprob: -11.128934860229492
    10. '"#' → logprob: -11.253934860229492

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6375275254249573
    2. 'def' → logprob: -1.6375274658203125
    3. '<|end|>' → logprob: -1.6375274658203125
    4. '
' → logprob: -3.3875274658203125
    5. ' def' → logprob: -3.8875274658203125
    6. '    
' → logprob: -4.5125274658203125
    7. '<|end|>' → logprob: -5.1375274658203125
    8. ' ' → logprob: -5.5125274658203125
    9. ' 
' → logprob: -6.6375274658203125
    10. '	def' → logprob: -6.6375274658203125

Token 112: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '.f' (ID: 1196)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00723685510456562
    2. 'def' → logprob: -5.882236957550049
    3. '_' → logprob: -6.757236957550049
    4. '   ' → logprob: -7.882236957550049
    5. '.key' → logprob: -8.00723648071289
    6. ' ' → logprob: -8.50723648071289
    7. '.next' → logprob: -8.75723648071289
    8. '.move' → logprob: -8.75723648071289
    9. '.current' → logprob: -8.88223648071289
    10. ' .' → logprob: -8.88223648071289

Token 114: 'lg' (ID: 15632)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.111504077911377
    2. 'lag' → logprob: -1.361504077911377
    3. 'irst' → logprob: -1.736504077911377
    4. 'l' → logprob: -3.236504077911377
    5. 'rom' → logprob: -3.986504077911377
    6. 'ilter' → logprob: -4.111504077911377
    7. 'inished' → logprob: -4.236504077911377
    8. 'ind' → logprob: -4.236504077911377
    9. 'i' → logprob: -4.611504077911377
    10. 'inal' → logprob: -4.736504077911377

Token 115: '_out' (ID: 12171)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0872679054737091
    2. '_' → logprob: -2.8372678756713867
    3. '=' → logprob: -4.212267875671387
    4. ' ' → logprob: -5.337267875671387
    5. 'alse' → logprob: -6.837267875671387
    6. '=False' → logprob: -8.087267875671387
    7. '  ' → logprob: -8.212267875671387
    8. 'ault' → logprob: -8.212267875671387
    9. '=True' → logprob: -8.462267875671387
    10. '   ' → logprob: -8.462267875671387

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43714916706085205
    2. '=' → logprob: -1.062149167060852
    3. '_' → logprob: -4.9371490478515625
    4. ' ' → logprob: -8.437149047851562
    5. 'ed' → logprob: -8.937149047851562
    6. 'o' → logprob: -8.937149047851562
    7. 'side' → logprob: -9.437149047851562
    8. '_=' → logprob: -9.437149047851562
    9. '1' → logprob: -9.687149047851562
    10. ')' → logprob: -9.937149047851562

Token 117: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07157211005687714
    2. ' False' → logprob: -2.6965720653533936
    3. '0' → logprob: -6.821572303771973
    4. 'True' → logprob: -7.821572303771973
    5. ' True' → logprob: -9.571572303771973
    6. ' ' → logprob: -10.696572303771973
    7. '[]' → logprob: -10.696572303771973
    8. '[' → logprob: -11.571572303771973
    9. '(False' → logprob: -12.321572303771973
    10. 'F' → logprob: -12.571572303771973

Token 118: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4782673716545105
    2. '<|end|>' → logprob: -1.7282674312591553
    3. '
' → logprob: -2.3532674312591553
    4. 'def' → logprob: -2.6032674312591553
    5. '    
' → logprob: -4.353267192840576
    6. ' ' → logprob: -5.228267192840576
    7. ' def' → logprob: -5.728267192840576
    8. ' 
' → logprob: -5.978267192840576
    9. '<|end|>' → logprob: -5.978267192840576
    10. ')' → logprob: -6.728267192840576

Token 120: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5869839191436768
    2. '
' → logprob: -1.8369839191436768
    3. '   ' → logprob: -1.9619839191436768
    4. ' def' → logprob: -2.5869839191436768
    5. '<|end|>' → logprob: -2.9619839191436768
    6. '    
' → logprob: -5.461983680725098
    7. '<|end|>' → logprob: -5.711983680725098
    8. '       ' → logprob: -5.711983680725098
    9. ' ' → logprob: -5.961983680725098
    10. '	def' → logprob: -6.461983680725098

Token 121: '.f' (ID: 1196)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12157667428255081
    2. '.current' → logprob: -3.9965767860412598
    3. '.next' → logprob: -4.99657678604126
    4. '.pos' → logprob: -5.24657678604126
    5. '.op' → logprob: -5.24657678604126
    6. '.is' → logprob: -5.37157678604126
    7. '.score' → logprob: -5.62157678604126
    8. '.f' → logprob: -5.74657678604126
    9. '.out' → logprob: -5.74657678604126
    10. '.turn' → logprob: -5.74657678604126

Token 122: 'lg' (ID: 15632)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3607622981071472
    2. 'lg' → logprob: -1.235762357711792
    3. '	l' → logprob: -5.110762119293213
    4. 'lag' → logprob: -5.735762119293213
    5. ' l' → logprob: -7.485762119293213
    6. '_l' → logprob: -7.860762119293213
    7. '```' → logprob: -8.048262596130371
    8. '_' → logprob: -8.235762596130371
    9. 'lags' → logprob: -8.423262596130371
    10. '   ' → logprob: -8.923262596130371

Token 123: '_' (ID: 62)
  Prédit: '_out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.512031078338623
    2. '_' → logprob: -2.137031078338623
    3. '_in' → logprob: -2.512031078338623
    4. '_end' → logprob: -4.012031078338623
    5. '_continue' → logprob: -4.012031078338623
    6. '_pass' → logprob: -4.137031078338623
    7. '_win' → logprob: -4.137031078338623
    8. '_reset' → logprob: -4.887031078338623
    9. '_stop' → logprob: -5.262031078338623
    10. '_game' → logprob: -5.387031078338623

Token 124: 'fo' (ID: 1070)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.8023040294647217
    2. 'end' → logprob: -2.4273040294647217
    3. 'win' → logprob: -2.5523040294647217
    4. 'in' → logprob: -3.1773040294647217
    5. 'continue' → logprob: -3.3023040294647217
    6. 'stop' → logprob: -3.5523040294647217
    7. 'finish' → logprob: -3.9273040294647217
    8. 'first' → logprob: -4.552304267883301
    9. 'loop' → logprob: -4.677304267883301
    10. 'lose' → logprob: -4.802304267883301

Token 125: 'res' (ID: 430)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.6013785600662231
    2. 'r' → logprob: -1.2263785600662231
    3. 'und' → logprob: -2.3513784408569336
    4. 'ur' → logprob: -3.2263784408569336
    5. 'u' → logprob: -4.351378440856934
    6. 'll' → logprob: -5.476378440856934
    7. 'ld' → logprob: -6.476378440856934
    8. 'ot' → logprob: -7.101378440856934
    9. 'reach' → logprob: -7.476378440856934
    10. 're' → logprob: -7.851378440856934

Token 126: 'ight' (ID: 583)
  Prédit: 'ee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ee' → logprob: -0.5033239126205444
    2. 'ight' → logprob: -1.3783239126205444
    3. 't' → logprob: -2.628324031829834
    4. 'e' → logprob: -2.878324031829834
    5. 'cast' → logprob: -4.753324031829834
    6. 'et' → logprob: -5.753324031829834
    7. 'een' → logprob: -6.753324031829834
    8. 'see' → logprob: -7.753324031829834
    9. 'eed' → logprob: -7.878324031829834
    10. 'se' → logprob: -8.878323554992676

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5234856605529785
    2. ' =' → logprob: -0.8984856605529785
    3. ' ' → logprob: -8.02348518371582
    4. ')' → logprob: -11.89848518371582
    5. ',' → logprob: -12.14848518371582
    6. '=True' → logprob: -12.39848518371582
    7. '=False' → logprob: -12.52348518371582
    8. 's' → logprob: -12.64848518371582
    9. '_' → logprob: -12.77348518371582
    10. '  ' → logprob: -13.64848518371582

Token 128: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08230278640985489
    2. 'True' → logprob: -2.8323028087615967
    3. ' False' → logprob: -4.082302570343018
    4. ' True' → logprob: -5.957302570343018
    5. '0' → logprob: -7.457302570343018
    6. '[]' → logprob: -9.832303047180176
    7. ' ' → logprob: -11.582303047180176
    8. '[' → logprob: -11.707303047180176
    9. 'len' → logprob: -11.707303047180176
    10. '1' → logprob: -12.582303047180176

Token 129: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6921720504760742
    2. '<|end|>' → logprob: -1.8171720504760742
    3. '   ' → logprob: -2.442172050476074
    4. 'def' → logprob: -2.567172050476074
    5. '       ' → logprob: -3.067172050476074
    6. '
' → logprob: -3.192172050476074
    7. ' def' → logprob: -3.442172050476074
    8. ' 
' → logprob: -4.442172050476074
    9. ')' → logprob: -4.817172050476074
    10. 'self' → logprob: -5.442172050476074

Token 132: ' =' (ID: 314)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elf' → logprob: -1.2664456789934775e-06
    2. 'self' → logprob: -13.875000953674316
    3. 'def' → logprob: -15.625000953674316
    4. 'el' → logprob: -18.125001907348633
    5. ' elf' → logprob: -18.375001907348633
    6. 'e' → logprob: -18.625001907348633
    7. 'elif' → logprob: -19.000001907348633
    8. 'elp' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. 'ef' → logprob: -19.625001907348633

Token 133: ' sum' (ID: 4215)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.09553825855255127
    2. 'elf' → logprob: -2.7205381393432617
    3. 'et' → logprob: -3.7205381393432617
    4. 'tr' → logprob: -6.970538139343262
    5. 'el' → logprob: -10.095538139343262
    6. 'ys' → logprob: -10.345538139343262
    7. 'orted' → logprob: -11.345538139343262
    8. '
' → logprob: -12.595538139343262
    9. 'td' → logprob: -12.720538139343262
    10. 'u' → logprob: -12.720538139343262

Token 134: '(data' (ID: 4819)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7249175906181335
    2. '(data' → logprob: -0.7249175906181335
    3. '(' → logprob: -3.4749176502227783
    4. 'data' → logprob: -9.3499174118042
    5. ' (' → logprob: -9.7249174118042
    6. '([' → logprob: -9.7249174118042
    7. 'self' → logprob: -10.2249174118042
    8. '(s' → logprob: -11.0999174118042
    9. '(
' → logprob: -11.3499174118042
    10. '(len' → logprob: -11.9749174118042

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005735247395932674
    2. '[' → logprob: -7.875573635101318
    3. ' )' → logprob: -8.62557315826416
    4. '[:' → logprob: -12.12557315826416
    5. ')
' → logprob: -13.50057315826416
    6. '[])' → logprob: -13.50057315826416
    7. ')>' → logprob: -13.87557315826416
    8. '.values' → logprob: -13.87557315826416
    9. '[:-' → logprob: -14.50057315826416
    10. ' ' → logprob: -15.00057315826416

Token 136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' if' (ID: 538)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.5066646933555603
    2. ' self' → logprob: -1.256664752960205
    3. 'self' → logprob: -2.756664752960205
    4. '       ' → logprob: -4.131664752960205
    5. 'if' (adapté à ' if') → logprob: -4.256664752960205
    6. ' if' → logprob: -4.381664752960205
    7. 'f' → logprob: -5.506664752960205
    8. ' for' → logprob: -7.506664752960205
    9. 'for' → logprob: -8.006664276123047
    10. ' ' → logprob: -8.256664276123047

Token 138: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.009424779564142227
    2. 's' → logprob: -5.259424686431885
    3. ' self' → logprob: -7.009424686431885
    4. ' data' → logprob: -7.134424686431885
    5. ' len' → logprob: -7.134424686431885
    6. ' ' → logprob: -7.384424686431885
    7. ' not' → logprob: -7.884424686431885
    8. ' any' → logprob: -8.884425163269043
    9. ' all' → logprob: -8.884425163269043
    10. ' (' → logprob: -9.634425163269043

Token 139: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47275882959365845
    2. ' ==' → logprob: -1.2227587699890137
    3. '>' → logprob: -3.7227587699890137
    4. ' >' → logprob: -4.472758769989014
    5. '!=' → logprob: -4.722758769989014
    6. '<' → logprob: -4.847758769989014
    7. '<=' → logprob: -4.972758769989014
    8. ' !=' → logprob: -5.097758769989014
    9. ' <=' → logprob: -5.472758769989014
    10. ' <' → logprob: -5.472758769989014

Token 140: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1606341451406479
    2. '0' → logprob: -1.910634160041809
    3. '1' → logprob: -8.03563404083252
    4. '  ' → logprob: -10.53563404083252
    5. '3' → logprob: -12.03563404083252
    6. '=' → logprob: -12.09813404083252
    7. '2' → logprob: -12.22313404083252
    8. '20' → logprob: -12.72313404083252
    9. '10' → logprob: -12.78563404083252
    10. '   ' → logprob: -12.78563404083252

Token 141: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030641069170087576
    2. '1' → logprob: -6.503064155578613
    3. ' ' → logprob: -6.753064155578613
    4. '3' → logprob: -9.378064155578613
    5. '2' → logprob: -9.878064155578613
    6. '100' → logprob: -10.253064155578613
    7. '10' → logprob: -10.628064155578613
    8. '15' → logprob: -10.753064155578613
    9. '4' → logprob: -11.003064155578613
    10. '9' → logprob: -11.253064155578613

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08328766375780106
    2. ':
' → logprob: -2.5832877159118652
    3. ' and' → logprob: -6.458287715911865
    4. '0' → logprob: -6.833287715911865
    5. ' :' → logprob: -6.958287715911865
    6. ' :
' → logprob: -8.458287239074707
    7. ' or' → logprob: -8.583287239074707
    8. '3' → logprob: -9.583287239074707
    9. '2' → logprob: -10.083287239074707
    10. '6' → logprob: -10.333287239074707

Token 143: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21739733219146729
    2. '           ' → logprob: -2.0923972129821777
    3. ':' → logprob: -3.0923972129821777
    4. ' self' → logprob: -4.342397212982178
    5. ':
' → logprob: -5.342397212982178
    6. 'self' → logprob: -5.717397212982178
    7. '   ' → logprob: -6.467397212982178
    8. ' and' → logprob: -6.842397212982178
    9. '0' → logprob: -7.592397212982178
    10. ',' → logprob: -7.717397212982178

Token 144: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.37727439403533936
    2. 'self' (adapté à ' self') → logprob: -1.6272743940353394
    3. '       ' → logprob: -2.252274513244629
    4. ' for' → logprob: -6.002274513244629
    5. '   ' → logprob: -6.127274513244629
    6. ' if' → logprob: -6.252274513244629
    7. 'if' → logprob: -6.502274513244629
    8. '           ' → logprob: -6.752274513244629
    9. 'for' → logprob: -7.627274513244629
    10. '
' → logprob: -8.064774513244629

Token 145: '.f' (ID: 1196)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23588576912879944
    2. '.f' → logprob: -1.610885739326477
    3. ' .' → logprob: -4.6108856201171875
    4. '.fl' → logprob: -9.485885620117188
    5. ' ' → logprob: -10.110885620117188
    6. '.fml' → logprob: -10.360885620117188
    7. '<|end|>' → logprob: -10.610885620117188
    8. '<|end|>' → logprob: -10.735885620117188
    9. '.setdefault' → logprob: -10.985885620117188
    10. 'self' → logprob: -10.985885620117188

Token 146: 'lg' (ID: 15632)
  Prédit: 'lg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.0068039484322071075
    2. 'l' → logprob: -5.0068039894104
    3. '_' → logprob: -9.756803512573242
    4. '_l' → logprob: -11.381803512573242
    5. 'g' → logprob: -12.631803512573242
    6. '1' → logprob: -13.381803512573242
    7. ' lg' → logprob: -13.506803512573242
    8. '  ' → logprob: -13.756803512573242
    9. '
' → logprob: -14.006803512573242
    10. '`' → logprob: -14.006803512573242

Token 147: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000574836041778326
    2. '_out' → logprob: -7.625575065612793
    3. '._' → logprob: -9.875575065612793
    4. '_f' → logprob: -11.500575065612793
    5. '.' → logprob: -11.625575065612793
    6. ' _' → logprob: -12.000575065612793
    7. '__' → logprob: -13.375575065612793
    8. 'f' → logprob: -13.375575065612793
    9. 'out' → logprob: -14.500575065612793
    10. '=_' → logprob: -14.500575065612793

Token 148: 'fo' (ID: 1070)
  Prédit: 'fo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.018871380016207695
    2. 'out' → logprob: -4.018871307373047
    3. '_' → logprob: -8.143871307373047
    4. '_out' → logprob: -8.643871307373047
    5. 'fore' → logprob: -9.893871307373047
    6. 'o' → logprob: -10.393871307373047
    7. 'f' → logprob: -10.768871307373047
    8. ' fo' → logprob: -10.893871307373047
    9. 'fl' → logprob: -11.081371307373047
    10. 'ou' → logprob: -11.206371307373047

Token 149: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.016738565638661385
    2. 're' → logprob: -4.516738414764404
    3. 'r' → logprob: -6.141738414764404
    4. 'rs' → logprob: -6.516738414764404
    5. 'ress' → logprob: -7.766738414764404
    6. 'rest' → logprob: -8.141738891601562
    7. '```' → logprob: -8.766738891601562
    8. 'resh' → logprob: -9.141738891601562
    9. 'resize' → logprob: -9.266738891601562
    10. 'reset' → logprob: -9.516738891601562

Token 150: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.0022771733347326517
    2. 'igh' → logprob: -6.377277374267578
    3. 'ig' → logprob: -7.627277374267578
    4. 'i' → logprob: -10.002277374267578
    5. '```' → logprob: -11.377277374267578
    6. 'igth' → logprob: -11.752277374267578
    7. 'ighted' → logprob: -12.502277374267578
    8. 'IGHT' → logprob: -13.127277374267578
    9. '_' → logprob: -13.252277374267578
    10. '``' → logprob: -13.252277374267578

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329596042633057
    2. '=' → logprob: -1.3132959604263306
    3. '=True' → logprob: -10.3132963180542
    4. ' ' → logprob: -14.5632963180542
    5. '=False' → logprob: -15.3132963180542
    6. ' |=' → logprob: -16.313295364379883
    7. '[' → logprob: -17.188295364379883
    8. '＝' → logprob: -17.313295364379883
    9. '=

' → logprob: -17.313295364379883
    10. ',' → logprob: -17.688295364379883

Token 152: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.008223290555179119
    2. ' True' → logprob: -4.883223056793213
    3. 'False' → logprob: -7.508223056793213
    4. '(True' → logprob: -10.758223533630371
    5. '1' → logprob: -11.133223533630371
    6. 'Tr' → logprob: -11.258223533630371
    7. 'self' → logprob: -11.758223533630371
    8. 'not' → logprob: -12.758223533630371
    9. '   ' → logprob: -13.633223533630371
    10. ' False' → logprob: -13.758223533630371

Token 153: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' elif' (ID: 9497)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7886110544204712
    2. '<|end|>' → logprob: -0.7886110544204712
    3. ':' → logprob: -3.2886109352111816
    4. '   ' → logprob: -4.413610935211182
    5. ' 
' → logprob: -4.788610935211182
    6. '       ' → logprob: -4.788610935211182
    7. '
' → logprob: -5.038610935211182
    8. '#' → logprob: -5.663610935211182
    9. '<|end|>' → logprob: -5.913610935211182
    10. ',' → logprob: -6.038610935211182

Token 156: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0148261534050107
    2. 's' → logprob: -4.26482629776001
    3. ' ' → logprob: -8.639825820922852
    4. ' len' → logprob: -9.264825820922852
    5. ' sum' → logprob: -9.514825820922852
    6. ' self' → logprob: -9.514825820922852
    7. '0' → logprob: -10.139825820922852
    8. ' data' → logprob: -10.389825820922852
    9. 'len' → logprob: -10.764825820922852
    10. ' False' → logprob: -10.764825820922852

Token 157: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01337938942015171
    2. '==' → logprob: -4.3883795738220215
    3. ' ' → logprob: -7.2633795738220215
    4. ' >' → logprob: -9.888379096984863
    5. ' <' → logprob: -10.013379096984863
    6. ' <=' → logprob: -11.013379096984863
    7. ' >=' → logprob: -11.388379096984863
    8. ' !=' → logprob: -11.388379096984863
    9. ' =' → logprob: -11.638379096984863
    10. ' in' → logprob: -11.638379096984863

Token 158: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13053561747074127
    2. '1' → logprob: -2.50553560256958
    3. '3' → logprob: -3.63053560256958
    4. '0' → logprob: -4.25553560256958
    5. '4' → logprob: -10.943036079406738
    6. '7' → logprob: -11.943036079406738
    7. '6' → logprob: -12.568036079406738
    8. '  ' → logprob: -12.630536079406738
    9. '5' → logprob: -13.193036079406738
    10. '10' → logprob: -13.318036079406738

Token 159: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8080146312713623
    2. '3' → logprob: -0.8080146312713623
    3. '0' → logprob: -2.3080146312713623
    4. ' ' → logprob: -4.808014869689941
    5. '4' → logprob: -7.308014869689941
    6. '6' → logprob: -9.995514869689941
    7. '
' → logprob: -10.745514869689941
    8. '5' → logprob: -10.808014869689941
    9. '   ' → logprob: -11.370514869689941
    10. '7' → logprob: -11.495514869689941

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012582055293023586
    2. ':
' → logprob: -4.387581825256348
    3. ' or' → logprob: -10.012581825256348
    4. ' :' → logprob: -11.762581825256348
    5. ' and' → logprob: -11.887581825256348
    6. ':

' → logprob: -12.512581825256348
    7. '<|end|>' → logprob: -12.637581825256348
    8. ',' → logprob: -13.137581825256348
    9. ':
' → logprob: -14.137581825256348
    10. '       ' → logprob: -14.262581825256348

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035780325531959534
    2. '       ' → logprob: -3.410780429840088
    3. '
' → logprob: -6.410780429840088
    4. 'self' → logprob: -8.28577995300293
    5. ' self' → logprob: -9.16077995300293
    6. '   ' → logprob: -9.78577995300293
    7. ':' → logprob: -10.78577995300293
    8. '         ' → logprob: -11.28577995300293
    9. '	       ' → logprob: -11.91077995300293
    10. '          ' → logprob: -12.03577995300293

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6170732378959656
    2. ' self' → logprob: -1.2420732975006104
    3. '       ' → logprob: -2.2420732975006104
    4. '           ' → logprob: -3.2420732975006104
    5. '   ' → logprob: -4.492073059082031
    6. ' ' → logprob: -4.992073059082031
    7. '
' → logprob: -5.492073059082031
    8. '	self' → logprob: -5.992073059082031
    9. '  ' → logprob: -7.742073059082031
    10. '0' → logprob: -8.617073059082031

Token 163: '.' (ID: 13)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.6328369379043579
    2. '.' → logprob: -0.7578369379043579
    3. ' .' → logprob: -9.507837295532227
    4. 'self' → logprob: -10.257837295532227
    5. '<|end|>' → logprob: -11.132837295532227
    6. '.answer' → logprob: -11.382837295532227
    7. '.fl' → logprob: -11.632837295532227
    8. '.
' → logprob: -11.757837295532227
    9. 'f' → logprob: -11.882837295532227
    10. '<|end|>' → logprob: -12.132837295532227

Token 164: 'ans' (ID: 616)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.1230187863111496
    2. 'ans' → logprob: -2.248018741607666
    3. 'f' → logprob: -4.998018741607666
    4. 'flag' → logprob: -6.373018741607666
    5. 'err' → logprob: -8.623019218444824
    6. '
' → logprob: -8.873019218444824
    7. 'exit' → logprob: -9.248019218444824
    8. 'fg' → logprob: -9.373019218444824
    9. 'op' → logprob: -9.498019218444824
    10. '  ' → logprob: -9.498019218444824

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198863685131073
    2. '=' → logprob: -2.811988592147827
    3. ' ' → logprob: -11.061988830566406
    4. ' ="' → logprob: -13.311988830566406
    5. ' +=' → logprob: -13.936988830566406
    6. 's' → logprob: -14.936988830566406
    7. '<|end|>' → logprob: -15.186988830566406
    8. '＝' → logprob: -15.311988830566406
    9. ' ='' → logprob: -15.561988830566406
    10. '  ' → logprob: -15.811988830566406

Token 166: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.35406750440597534
    2. '"No' → logprob: -1.3540675640106201
    3. ' "' → logprob: -3.22906756401062
    4. ' ' → logprob: -8.7290678024292
    5. ''' → logprob: -9.9790678024292
    6. ' No' → logprob: -10.1040678024292
    7. 'No' → logprob: -10.1040678024292
    8. '"N' → logprob: -10.6040678024292
    9. ' Yes' → logprob: -11.4790678024292
    10. '""' → logprob: -11.4790678024292

Token 167: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0012514196569100022
    2. '"No' → logprob: -7.251251220703125
    3. 'Yes' → logprob: -8.376251220703125
    4. '"' → logprob: -8.501251220703125
    5. ' No' → logprob: -10.376251220703125
    6. 'Impossible' → logprob: -10.751251220703125
    7. '-' → logprob: -11.126251220703125
    8. 'None' → logprob: -11.876251220703125
    9. 'NO' → logprob: -12.251251220703125
    10. 'Draw' → logprob: -12.376251220703125

Token 168: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0006323783891275525
    2. '"
' → logprob: -8.125632286071777
    3. '\n' → logprob: -9.250632286071777
    4. '<|end|>' → logprob: -9.375632286071777
    5. ' "' → logprob: -9.875632286071777
    6. '
' → logprob: -10.000632286071777
    7. ')"' → logprob: -11.375632286071777
    8. ')' → logprob: -11.750632286071777
    9. '"""' → logprob: -11.875632286071777
    10. '```' → logprob: -12.000632286071777

Token 169: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7510107159614563
    2. 'return' → logprob: -1.2510106563568115
    3. ' return' → logprob: -1.5010106563568115
    4. '       ' → logprob: -4.251010894775391
    5. '   ' → logprob: -6.251010894775391
    6. '
' → logprob: -7.376010894775391
    7. 'def' → logprob: -7.626010894775391
    8. '	return' → logprob: -7.626010894775391
    9. '               ' → logprob: -8.37601089477539
    10. '<|end|>' → logprob: -8.50101089477539

Token 171: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.06504834443330765
    2. '.' → logprob: -2.8150484561920166
    3. '.
' → logprob: -6.9400482177734375
    4. '
' → logprob: -7.0650482177734375
    5. ' .' → logprob: -7.9400482177734375
    6. '.fl' → logprob: -8.190048217773438
    7. '<|end|>' → logprob: -8.940048217773438
    8. '.exit' → logprob: -9.315048217773438
    9. '.flag' → logprob: -9.565048217773438
    10. '.fml' → logprob: -10.440048217773438

Token 172: 'lg' (ID: 15632)
  Prédit: 'lg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.0001867326645879075
    2. 'l' → logprob: -9.250186920166016
    3. 'lag' → logprob: -10.000186920166016
    4. 'g' → logprob: -11.375186920166016
    5. 'rg' → logprob: -12.000186920166016
    6. '
' → logprob: -12.125186920166016
    7. '   ' → logprob: -12.250186920166016
    8. '       ' → logprob: -12.750186920166016
    9. '  ' → logprob: -12.875186920166016
    10. ' ' → logprob: -13.250186920166016

Token 173: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.012518247589468956
    2. '_' → logprob: -4.387518405914307
    3. ' _' → logprob: -13.012517929077148
    4. '_in' → logprob: -13.762517929077148
    5. '_OUT' → logprob: -13.887517929077148
    6. '_f' → logprob: -14.637517929077148
    7. '_output' → logprob: -14.887517929077148
    8. '_Out' → logprob: -14.887517929077148
    9. '_o' → logprob: -15.012517929077148
    10. '=_' → logprob: -15.512517929077148

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014181364327669144
    2. '=' → logprob: -4.264181137084961
    3. '=True' → logprob: -11.264181137084961
    4. ' ' → logprob: -12.264181137084961
    5. ' |=' → logprob: -16.51418113708496
    6. '=true' → logprob: -17.13918113708496
    7. ' True' → logprob: -17.51418113708496
    8. ' =
' → logprob: -17.76418113708496
    9. 'True' → logprob: -18.01418113708496
    10. '  ' → logprob: -18.38918113708496

Token 175: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002036595979006961
    2. ' True' → logprob: -8.500204086303711
    3. '=True' → logprob: -15.625204086303711
    4. 'False' → logprob: -17.25020408630371
    5. '(True' → logprob: -18.25020408630371
    6. 'T' → logprob: -19.37520408630371
    7. 'Tr' → logprob: -19.87520408630371
    8. '1' → logprob: -20.00020408630371
    9. '   ' → logprob: -20.12520408630371
    10. '  ' → logprob: -20.25020408630371

Token 176: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.054812319576740265
    2. '   ' → logprob: -3.054812431335449
    3. ' def' → logprob: -5.429812431335449
    4. '    
' → logprob: -6.804812431335449
    5. ' ' → logprob: -8.67981243133545
    6. ' 
' → logprob: -9.30481243133545
    7. '        
' → logprob: -9.55481243133545
    8. '
' → logprob: -9.67981243133545
    9. '	def' → logprob: -9.67981243133545
    10. '       ' → logprob: -10.30481243133545

Token 179: ' has' (ID: 853)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.7102909088134766
    2. ' play' → logprob: -1.3352909088134766
    3. ' solve' → logprob: -3.0852909088134766
    4. ' move' → logprob: -3.2102909088134766
    5. ' can' → logprob: -3.4602909088134766
    6. 'dfs' → logprob: -3.7102909088134766
    7. ' simulate' → logprob: -4.085290908813477
    8. ' next' → logprob: -4.460290908813477
    9. ' search' → logprob: -4.460290908813477
    10. ' make' → logprob: -5.335290908813477

Token 180: '_next' (ID: 25436)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.9532477855682373
    2. '_move' → logprob: -1.3282477855682373
    3. '_next' → logprob: -1.4532477855682373
    4. '_op' → logprob: -3.3282477855682373
    5. '_out' → logprob: -3.7032477855682373
    6. '_' → logprob: -3.8282477855682373
    7. '_w' → logprob: -4.453248023986816
    8. '_moves' → logprob: -4.953248023986816
    9. '_data' → logprob: -6.078248023986816
    10. '_more' → logprob: -6.453248023986816

Token 181: '_op' (ID: 20111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6188090443611145
    2. '(self' → logprob: -0.8688090443611145
    3. '_move' → logprob: -3.3688089847564697
    4. '()' → logprob: -5.368809223175049
    5. '_' → logprob: -6.243809223175049
    6. 'self' → logprob: -7.743809223175049
    7. '_step' → logprob: -9.11880874633789
    8. '_token' → logprob: -9.36880874633789
    9. ' (' → logprob: -9.74380874633789
    10. '_self' → logprob: -9.99380874633789

Token 182: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006009306525811553
    2. '(' → logprob: -7.500600814819336
    3. '(s' → logprob: -10.625600814819336
    4. 'self' → logprob: -11.500600814819336
    5. ' (' → logprob: -12.000600814819336
    6. '()' → logprob: -12.625600814819336
    7. '_(' → logprob: -14.125600814819336
    8. 's' → logprob: -14.125600814819336
    9. '_' → logprob: -14.750600814819336
    10. '(
' → logprob: -14.750600814819336

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05553893372416496
    2. ')' → logprob: -3.9305388927459717
    3. ',' → logprob: -5.055539131164551
    4. '):
' → logprob: -5.180539131164551
    5. '(self' → logprob: -5.305539131164551
    6. ' ):' → logprob: -5.305539131164551
    7. '()' → logprob: -5.555539131164551
    8. 'self' → logprob: -5.680539131164551
    9. '(' → logprob: -6.055539131164551
    10. '():' → logprob: -6.180539131164551

Token 184: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7989814877510071
    2. '()' → logprob: -0.9239814877510071
    3. '(self' → logprob: -2.4239814281463623
    4. '():' → logprob: -2.9239814281463623
    5. '(
' → logprob: -5.173981666564941
    6. ':' → logprob: -6.048981666564941
    7. '       ' → logprob: -7.298981666564941
    8. '()
' → logprob: -7.923981666564941
    9. 'self' → logprob: -8.048981666564941
    10. '():
' → logprob: -8.298981666564941

Token 185: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06704705208539963
    2. ' return' → logprob: -3.067047119140625
    3. '       ' → logprob: -4.067047119140625
    4. 'for' → logprob: -7.192047119140625
    5. ' for' → logprob: -8.317047119140625
    6. '    ' → logprob: -9.942047119140625
    7. 'self' → logprob: -9.942047119140625
    8. '   ' → logprob: -10.317047119140625
    9. '	return' → logprob: -11.692047119140625
    10. 'if' (adapté à ' if') → logprob: -11.817047119140625

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012447139248251915
    2. ' self' → logprob: -4.762447357177734
    3. '"' → logprob: -6.262447357177734
    4. 'not' → logprob: -6.762447357177734
    5. 'len' → logprob: -7.887447357177734
    6. ' not' → logprob: -8.512447357177734
    7. 'any' → logprob: -9.637447357177734
    8. 'all' → logprob: -10.137447357177734
    9. 'sum' → logprob: -11.637447357177734
    10. '"B' → logprob: -11.637447357177734

Token 187: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.020118802785873413
    2. '.' → logprob: -4.270118713378906
    3. '.f' → logprob: -5.270118713378906
    4. '.move' → logprob: -7.895118713378906
    5. ' .' → logprob: -8.645118713378906
    6. '.op' → logprob: -9.395118713378906
    7. '.current' → logprob: -10.020118713378906
    8. '.next' → logprob: -10.270118713378906
    9. '.has' → logprob: -10.770118713378906
    10. '.
' → logprob: -11.645118713378906

Token 188: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02580668032169342
    2. '+' → logprob: -4.900806903839111
    3. ' >=' → logprob: -5.150806903839111
    4. '<' → logprob: -5.275806903839111
    5. '<len' → logprob: -5.525806903839111
    6. ' +' → logprob: -5.900806903839111
    7. '>=' → logprob: -8.275806427001953
    8. ' ' → logprob: -8.900806427001953
    9. ' ==' → logprob: -12.025806427001953
    10. '==' → logprob: -13.650806427001953

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028252042829990387
    2. ' ' → logprob: -5.8778252601623535
    3. 'len' → logprob: -11.752824783325195
    4. '+' → logprob: -12.252824783325195
    5. '2' → logprob: -12.752824783325195
    6. '<|end|>' → logprob: -12.877824783325195
    7. '0' → logprob: -15.252824783325195
    8. '   ' → logprob: -15.377824783325195
    9. 'import' → logprob: -15.377824783325195
    10. '10' → logprob: -15.752824783325195

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000192812061868608
    2. ' ' → logprob: -8.625192642211914
    3. 'len' → logprob: -11.500192642211914
    4. '2' → logprob: -13.750192642211914
    5. '<len' → logprob: -14.875192642211914
    6. '<|end|>' → logprob: -14.875192642211914
    7. '+' → logprob: -15.000192642211914
    8. '   ' → logprob: -15.250192642211914
    9. '  ' → logprob: -16.125192642211914
    10. '0' → logprob: -16.125192642211914

Token 191: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1621023267507553
    2. '<' → logprob: -1.9121023416519165
    3. ' ' → logprob: -7.412102222442627
    4. '<len' → logprob: -7.537102222442627
    5. ' >=' → logprob: -8.537102699279785
    6. ' <=' → logprob: -8.662102699279785
    7. ')' → logprob: -9.162102699279785
    8. '<|end|>' → logprob: -9.537102699279785
    9. '<size' → logprob: -9.912102699279785
    10. '>=' → logprob: -10.537102699279785

Token 192: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1269325166940689
    2. ' len' → logprob: -2.1269326210021973
    3. '	len' → logprob: -13.376932144165039
    4. '(len' → logprob: -13.751932144165039
    5. '=len' → logprob: -14.376932144165039
    6. '   ' → logprob: -14.501932144165039
    7. '[len' → logprob: -15.626932144165039
    8. ' ' → logprob: -16.12693214416504
    9. 'self' → logprob: -16.25193214416504
    10. '<len' → logprob: -16.37693214416504

Token 193: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003181040519848466
    2. '(' → logprob: -5.753180980682373
    3. '(this' → logprob: -13.128181457519531
    4. '(
' → logprob: -14.128181457519531
    5. ' (' → logprob: -15.253181457519531
    6. 'self' → logprob: -15.378181457519531
    7. '(

' → logprob: -16.87818145751953
    8. '(s' → logprob: -17.12818145751953
    9. ' self' → logprob: -17.75318145751953
    10. '<|end|>' → logprob: -18.87818145751953

Token 194: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0001037815964082256
    2. 'self' → logprob: -9.625103950500488
    3. '.self' → logprob: -10.750103950500488
    4. '.' → logprob: -11.750103950500488
    5. '(op' → logprob: -12.500103950500488
    6. ' .' → logprob: -12.750103950500488
    7. 'op' → logprob: -14.500103950500488
    8. '(self' → logprob: -14.750103950500488
    9. ' self' → logprob: -15.375103950500488
    10. '_op' → logprob: -16.125102996826172

Token 195: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. 'list' → logprob: -19.125
    3. '_' → logprob: -19.375
    4. ')' → logprob: -19.625
    5. 's' → logprob: -20.5
    6. ')_' → logprob: -20.625
    7. '_op' → logprob: -20.875
    8. '_lst' → logprob: -21.125
    9. 'List' → logprob: -21.75
    10. 'self' → logprob: -22.0

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01573554240167141
    2. ')' → logprob: -4.265735626220703
    3. '):
' → logprob: -6.515735626220703
    4. ' ):' → logprob: -9.640735626220703
    5. '   ' → logprob: -12.265735626220703
    6. '       ' → logprob: -12.390735626220703
    7. '[' → logprob: -12.765735626220703
    8. ':' → logprob: -12.765735626220703
    9. '():' → logprob: -13.265735626220703
    10. '):
' → logprob: -13.515735626220703

Token 197: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05119519308209419
    2. ':
' → logprob: -3.9261951446533203
    3. ':return' → logprob: -4.17619514465332
    4. ' and' → logprob: -4.67619514465332
    5. '       ' → logprob: -5.42619514465332
    6. '<|end|>' → logprob: -7.55119514465332
    7. '():' → logprob: -8.42619514465332
    8. '<|end|>' → logprob: -9.42619514465332
    9. 'and' → logprob: -9.67619514465332
    10. ' :' → logprob: -9.80119514465332

Token 198: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8585087060928345
    2. ' return' → logprob: -1.2335087060928345
    3. ':' → logprob: -2.233508586883545
    4. '       ' → logprob: -2.358508586883545
    5. ':return' → logprob: -3.233508586883545
    6. '           ' → logprob: -4.608508586883545
    7. '<|end|>' → logprob: -5.358508586883545
    8. ' ' → logprob: -5.358508586883545
    9. ':
' → logprob: -5.483508586883545
    10. ' 
' → logprob: -5.483508586883545

Token 199: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '(True' → logprob: -18.038042068481445
    4. '1' → logprob: -19.538042068481445
    5. 'False' → logprob: -20.538042068481445
    6. '   ' → logprob: -20.538042068481445
    7. 'Tr' → logprob: -20.913042068481445
    8. '=True' → logprob: -22.038042068481445
    9. 'self' → logprob: -22.288042068481445
    10. 'true' → logprob: -23.288042068481445

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10765593498945236
    2. ' 
' → logprob: -3.1076560020446777
    3. '<|end|>' → logprob: -3.7326560020446777
    4. '\n' → logprob: -4.232656002044678
    5. ' ' → logprob: -4.857656002044678
    6. '       ' → logprob: -5.857656002044678
    7. 'else' → logprob: -6.107656002044678
    8. ' else' → logprob: -6.607656002044678
    9. '  
' → logprob: -7.232656002044678
    10. 'return' → logprob: -7.357656002044678

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0591191053390503
    2. '	' → logprob: -2.18411922454834
    3. '\n' → logprob: -2.43411922454834
    4. '<|end|>' → logprob: -2.55911922454834
    5. '   ' → logprob: -2.68411922454834
    6. ' 
' → logprob: -2.80911922454834
    7. ' ' → logprob: -2.93411922454834
    8. 'else' → logprob: -3.18411922454834
    9. '
' → logprob: -3.43411922454834
    10. 'return' → logprob: -3.93411922454834

Token 202: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.634597659111023
    2. 'else' (adapté à ' else') → logprob: -2.0095977783203125
    3. ' else' → logprob: -2.0095977783203125
    4. '<|end|>' → logprob: -2.5095977783203125
    5. '
' → logprob: -2.7595977783203125
    6. ' 
' → logprob: -3.2595977783203125
    7. '\n' → logprob: -5.0095977783203125
    8. '       ' → logprob: -6.3845977783203125
    9. 'False' → logprob: -6.3845977783203125
    10. 'return' → logprob: -6.8845977783203125

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29633766412734985
    2. ':
' → logprob: -1.421337604522705
    3. ':return' → logprob: -4.546337604522705
    4. ' :
' → logprob: -6.921337604522705
    5. '       ' → logprob: -7.171337604522705
    6. '
' → logprob: -7.421337604522705
    7. 'False' → logprob: -7.421337604522705
    8. 'return' → logprob: -8.296338081359863
    9. '           ' → logprob: -8.421338081359863
    10. ' :' → logprob: -8.546338081359863

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18840467929840088
    2. ' return' → logprob: -2.3134045600891113
    3. 'return' → logprob: -3.3134045600891113
    4. '       ' → logprob: -3.8134045600891113
    5. ' False' → logprob: -5.063404560089111
    6. 'False' → logprob: -5.188404560089111
    7. '	       ' → logprob: -6.688404560089111
    8. '   ' → logprob: -8.18840503692627
    9. '	return' → logprob: -8.43840503692627
    10. '0' → logprob: -9.43840503692627

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35988539457321167
    2. 'False' → logprob: -1.6098854541778564
    3. ' return' → logprob: -2.3598854541778564
    4. ' False' → logprob: -4.859885215759277
    5. '           ' → logprob: -8.859885215759277
    6. '       ' → logprob: -12.234885215759277
    7. '   ' → logprob: -12.984885215759277
    8. '               ' → logprob: -14.609885215759277
    9. ':return' → logprob: -15.109885215759277
    10. '	return' → logprob: -15.484885215759277

Token 206: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -17.148244857788086
    4. '=False' → logprob: -17.523244857788086
    5. '   ' → logprob: -20.023244857788086
    6. '
' → logprob: -22.523244857788086
    7. 'F' → logprob: -22.648244857788086
    8. '.False' → logprob: -22.648244857788086
    9. 'None' → logprob: -23.273244857788086
    10. '_false' → logprob: -23.648244857788086

Token 207: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01717163436114788
    2. '   ' → logprob: -4.767171859741211
    3. ' def' → logprob: -4.767171859741211
    4. '    
' → logprob: -12.267171859741211
    5. ' 
' → logprob: -12.392171859741211
    6. '	def' → logprob: -13.517171859741211
    7. ' ' → logprob: -14.017171859741211
    8. '@' → logprob: -14.017171859741211
    9. '       ' → logprob: -14.017171859741211
    10. '_' → logprob: -14.017171859741211

Token 210: ' play' (ID: 2107)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5730413198471069
    2. 'next' → logprob: -1.573041319847107
    3. ' get' → logprob: -2.9480414390563965
    4. '_next' → logprob: -3.0730414390563965
    5. ' move' → logprob: -3.6980414390563965
    6. ' def' → logprob: -4.4480414390563965
    7. 'get' → logprob: -4.5730414390563965
    8. 'def' → logprob: -4.5730414390563965
    9. ' can' → logprob: -4.8230414390563965
    10. 'move' → logprob: -4.9480414390563965

Token 211: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.031555525958538055
    2. '(' → logprob: -4.406555652618408
    3. '_next' → logprob: -4.406555652618408
    4. '()' → logprob: -5.906555652618408
    5. '_op' → logprob: -5.906555652618408
    6. '_move' → logprob: -7.906555652618408
    7. 'self' → logprob: -8.28155517578125
    8. '_self' → logprob: -9.40655517578125
    9. '_step' → logprob: -9.53155517578125
    10. '_' → logprob: -9.65655517578125

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43472567200660706
    2. ',' → logprob: -1.0597256422042847
    3. '):
' → logprob: -5.434725761413574
    4. ',key' → logprob: -7.059725761413574
    5. 'self' → logprob: -8.684725761413574
    6. ')' → logprob: -8.809725761413574
    7. ',index' → logprob: -9.559725761413574
    8. ',self' → logprob: -9.684725761413574
    9. ',next' → logprob: -9.934725761413574
    10. ' ):' → logprob: -10.059725761413574

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000476190383778885
    2. ',' → logprob: -9.125475883483887
    3. '   ' → logprob: -9.250475883483887
    4. '        
' → logprob: -9.625475883483887
    5. ' if' → logprob: -9.750475883483887
    6. '    ' → logprob: -11.250475883483887
    7. ')' → logprob: -11.250475883483887
    8. '(' → logprob: -11.500475883483887
    9. ':' → logprob: -11.500475883483887
    10. ' ' → logprob: -11.625475883483887

Token 214: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21492315828800201
    2. 'i' → logprob: -2.214923143386841
    3. '       ' → logprob: -3.589923143386841
    4. 'self' → logprob: -3.714923143386841
    5. 'for' (adapté à ' for') → logprob: -4.71492338180542
    6. ' if' → logprob: -5.21492338180542
    7. 'pass' → logprob: -5.58992338180542
    8. 'pos' → logprob: -5.96492338180542
    9. 'k' → logprob: -6.46492338180542
    10. '#' → logprob: -6.46492338180542

Token 215: ' key' (ID: 2140)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26632174849510193
    2. ' idx' → logprob: -1.6413217782974243
    3. ' op' → logprob: -3.3913216590881348
    4. ' self' → logprob: -5.766321659088135
    5. 'i' → logprob: -7.141321659088135
    6. ' _' → logprob: -7.516321659088135
    7. ' index' → logprob: -7.766321659088135
    8. ' key' → logprob: -8.141322135925293
    9. ' move' → logprob: -8.391322135925293
    10. 'op' → logprob: -8.766322135925293

Token 216: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004494208376854658
    2. ',' → logprob: -6.1294941902160645
    3. 'in' → logprob: -6.1294941902160645
    4. ' ,' → logprob: -9.504494667053223
    5. ' ' → logprob: -10.129494667053223
    6. ' =' → logprob: -12.629494667053223
    7. '   ' → logprob: -13.629494667053223
    8. 'self' → logprob: -13.754494667053223
    9. '_' → logprob: -14.004494667053223
    10. ' i' → logprob: -14.004494667053223

Token 217: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7084673047065735
    2. ' op' → logprob: -0.7084673047065735
    3. ' move' → logprob: -5.583467483520508
    4. 'move' → logprob: -6.083467483520508
    5. 'player' → logprob: -7.208467483520508
    6. ' player' → logprob: -7.208467483520508
    7. '(op' → logprob: -7.333467483520508
    8. 'val' → logprob: -7.770967483520508
    9. ' next' → logprob: -8.020967483520508
    10. 'ch' → logprob: -8.145967483520508

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03521967679262161
    2. 'in' → logprob: -3.410219669342041
    3. '_' → logprob: -6.910219669342041
    4. ',' → logprob: -8.2852201461792
    5. 's' → logprob: -8.9102201461792
    6. '_in' → logprob: -9.7852201461792
    7. ' _' → logprob: -9.7852201461792
    8. ' ' → logprob: -10.6602201461792
    9. '   ' → logprob: -11.6602201461792
    10. '_list' → logprob: -12.0352201461792

Token 219: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.008615161292254925
    2. ' enumerate' → logprob: -4.758615016937256
    3. 'self' → logprob: -15.133615493774414
    4. 'enum' → logprob: -16.133615493774414
    5. 'zip' → logprob: -16.633615493774414
    6. 'en' → logprob: -16.758615493774414
    7. '   ' → logprob: -17.133615493774414
    8. '(en' → logprob: -17.633615493774414
    9. '
' → logprob: -18.508615493774414
    10. '```' → logprob: -19.133615493774414

Token 220: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33256885409355164
    2. ' self' → logprob: -1.332568883895874
    3. '(self' → logprob: -3.957568883895874
    4. ' (' → logprob: -12.957569122314453
    5. 'enumer' → logprob: -13.082569122314453
    6. '(' → logprob: -13.457569122314453
    7. ' enumerate' → logprob: -13.707569122314453
    8. '	self' → logprob: -13.707569122314453
    9. ')' → logprob: -13.832569122314453
    10. '   ' → logprob: -13.957569122314453

Token 221: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -8.613945101387799e-05
    2. '.' → logprob: -10.375085830688477
    3. 'self' → logprob: -10.750085830688477
    4. ' .' → logprob: -10.750085830688477
    5. 'op' → logprob: -11.875085830688477
    6. '_op' → logprob: -13.000085830688477
    7. '._' → logprob: -14.000085830688477
    8. '.self' → logprob: -14.625085830688477
    9. '	op' → logprob: -14.750085830688477
    10. ' op' → logprob: -15.000085830688477

Token 222: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -14.25000286102295
    3. 'list' → logprob: -14.50000286102295
    4. 'List' → logprob: -14.75000286102295
    5. '_' → logprob: -15.37500286102295
    6. '[' → logprob: -16.125001907348633
    7. 's' → logprob: -16.625001907348633
    8. '):' → logprob: -16.625001907348633
    9. ')]' → logprob: -16.625001907348633
    10. '._' → logprob: -16.625001907348633

Token 223: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002759226132184267
    2. '):
' → logprob: -6.0027594566345215
    3. ' ):' → logprob: -9.002758979797363
    4. '():' → logprob: -9.377758979797363
    5. ':' → logprob: -10.002758979797363
    6. '       ' → logprob: -11.127758979797363
    7. '[' → logprob: -12.502758979797363
    8. '[]):' → logprob: -12.627758979797363
    9. '):
' → logprob: -13.252758979797363
    10. ')' → logprob: -13.252758979797363

Token 224: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22152645885944366
    2. '           ' → logprob: -2.3465263843536377
    3. '<|end|>' → logprob: -2.5965263843536377
    4. '       ' → logprob: -4.346526622772217
    5. '():' → logprob: -5.221526622772217
    6. ',' → logprob: -5.971526622772217
    7. '<|end|>' → logprob: -6.221526622772217
    8. '        ' → logprob: -6.846526622772217
    9. ' :' → logprob: -6.846526622772217
    10. '):' → logprob: -6.846526622772217

Token 225: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23341260850429535
    2. ' if' → logprob: -2.233412504196167
    3. '            ' → logprob: -2.983412504196167
    4. '           ' → logprob: -3.858412504196167
    5. ' self' → logprob: -3.983412504196167
    6. ' 
' → logprob: -5.983412742614746
    7. 'if' (adapté à ' if') → logprob: -6.608412742614746
    8. 'self' → logprob: -6.983412742614746
    9. '               ' → logprob: -6.983412742614746
    10. ' ' → logprob: -6.983412742614746

Token 226: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19833818078041077
    2. ' op' → logprob: -1.9483381509780884
    3. 'self' → logprob: -3.948338270187378
    4. ' not' → logprob: -4.323338031768799
    5. 'op' → logprob: -5.448338031768799
    6. ' (' → logprob: -9.448338508605957
    7. '   ' → logprob: -9.698338508605957
    8. ' isinstance' → logprob: -9.698338508605957
    9. 'not' → logprob: -9.948338508605957
    10. ' ' → logprob: -9.948338508605957

Token 227: '.f' (ID: 1196)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.568182110786438
    2. '.move' → logprob: -1.693182110786438
    3. '.key' → logprob: -2.0681819915771484
    4. ' .' → logprob: -2.9431819915771484
    5. '.f' → logprob: -3.3181819915771484
    6. '.has' → logprob: -4.693181991577148
    7. '.op' → logprob: -4.818181991577148
    8. '.data' → logprob: -4.943181991577148
    9. ' move' → logprob: -5.443181991577148
    10. 'move' → logprob: -6.693181991577148

Token 228: 'lg' (ID: 15632)
  Prédit: 'lg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -9.162282367469743e-05
    2. 'l' → logprob: -9.875091552734375
    3. 'lng' → logprob: -11.750091552734375
    4. '_' → logprob: -12.500091552734375
    5. 'fl' → logprob: -12.750091552734375
    6. 'ng' → logprob: -13.125091552734375
    7. 'lag' → logprob: -13.125091552734375
    8. 'lj' → logprob: -13.125091552734375
    9. 'lf' → logprob: -13.250091552734375
    10. 'rg' → logprob: -13.375091552734375

Token 229: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.10021799057722092
    2. '_' → logprob: -2.3502180576324463
    3. '_f' → logprob: -12.850217819213867
    4. 'out' → logprob: -13.600217819213867
    5. '   ' → logprob: -13.725217819213867
    6. '_in' → logprob: -13.975217819213867
    7. '_
' → logprob: -14.225217819213867
    8. '       ' → logprob: -14.475217819213867
    9. '_OUT' → logprob: -14.725217819213867
    10. ' ' → logprob: -15.100217819213867

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3158154785633087
    2. ':
' → logprob: -1.3158154487609863
    3. ' or' → logprob: -6.815815448760986
    4. '==' → logprob: -7.190815448760986
    5. ' ==' → logprob: -7.565815448760986
    6. ':return' → logprob: -9.690815925598145
    7. ' and' → logprob: -9.815815925598145
    8. ' :
' → logprob: -11.065815925598145
    9. ' :' → logprob: -11.190815925598145
    10. '[' → logprob: -11.815815925598145

Token 231: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007952123996801674
    2. ':' → logprob: -8.125795364379883
    3. ':
' → logprob: -8.625795364379883
    4. '           ' → logprob: -8.750795364379883
    5. '                
' → logprob: -10.000795364379883
    6. ' and' → logprob: -11.000795364379883
    7. '<|end|>' → logprob: -11.000795364379883
    8. ',' → logprob: -11.625795364379883
    9. '():
' → logprob: -12.125795364379883
    10. '       ' → logprob: -12.125795364379883

Token 232: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22854086756706238
    2. ' break' → logprob: -2.2285408973693848
    3. '                   ' → logprob: -2.7285408973693848
    4. 'break' (adapté à ' break') → logprob: -3.7285408973693848
    5. '	break' → logprob: -5.978540897369385
    6. '			' → logprob: -6.478540897369385
    7. '				' → logprob: -6.978540897369385
    8. ' return' → logprob: -7.603540897369385
    9. '	           ' → logprob: -7.603540897369385
    10. '	               ' → logprob: -8.353540420532227

Token 233: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2252122163772583
    2. '            
' → logprob: -1.8502122163772583
    3. '
' → logprob: -4.475212097167969
    4. '<|end|>' → logprob: -4.850212097167969
    5. ' 
' → logprob: -4.975212097167969
    6. '  
' → logprob: -5.100212097167969
    7. '    
' → logprob: -6.100212097167969
    8. '            ' → logprob: -6.350212097167969
    9. '                
' → logprob: -6.600212097167969
    10. '        
' → logprob: -6.725212097167969

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15103209018707275
    2. '            
' → logprob: -2.401031970977783
    3. ' 
' → logprob: -4.026031970977783
    4. '            ' → logprob: -4.526031970977783
    5. ' ' → logprob: -4.901031970977783
    6. '<|end|>' → logprob: -5.901031970977783
    7. '  
' → logprob: -6.276031970977783
    8. '    
' → logprob: -6.651031970977783
    9. '
' → logprob: -6.776031970977783
    10. '               ' → logprob: -7.151031970977783

Token 235: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.661954939365387
    2. ' if' → logprob: -1.1619548797607422
    3. ' self' → logprob: -2.161954879760742
    4. 'if' → logprob: -3.411954879760742
    5. 'self' (adapté à ' self') → logprob: -4.161954879760742
    6. '            
' → logprob: -6.786954879760742
    7. 'result' → logprob: -7.536954879760742
    8. ' result' → logprob: -7.661954879760742
    9. ' for' → logprob: -7.661954879760742
    10. ' move' → logprob: -7.911954879760742

Token 236: '.key' (ID: 8839)
  Prédit: '.move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.21488653123378754
    2. '.' → logprob: -1.7148865461349487
    3. ' .' → logprob: -5.089886665344238
    4. '.key' → logprob: -5.214886665344238
    5. '.play' → logprob: -7.339886665344238
    6. '.data' → logprob: -7.714886665344238
    7. '.op' → logprob: -8.339886665344238
    8. '._' → logprob: -8.464886665344238
    9. 'move' → logprob: -10.339886665344238
    10. ' move' → logprob: -10.714886665344238

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1125033050775528
    2. ' +=' → logprob: -2.3625032901763916
    3. '=' → logprob: -4.612503528594971
    4. ' ' → logprob: -6.487503528594971
    5. '+=' → logprob: -7.237503528594971
    6. ' ==' → logprob: -9.987503051757812
    7. ' =
' → logprob: -12.987503051757812
    8. ' =)' → logprob: -14.237503051757812
    9. ' |=' → logprob: -14.487503051757812
    10. ' +' → logprob: -14.612503051757812

Token 238: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.575939416885376
    2. 'key' → logprob: -0.825939416885376
    3. '	key' → logprob: -18.575939178466797
    4. 'k' → logprob: -19.325939178466797
    5. '_key' → logprob: -19.575939178466797
    6. '(key' → logprob: -20.325939178466797
    7. '$key' → logprob: -21.825939178466797
    8. 'Key' → logprob: -21.950939178466797
    9. '
' → logprob: -22.325939178466797
    10. ' ' → logprob: -22.325939178466797

Token 239: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003939598333090544
    2. '            
' → logprob: -6.503939628601074
    3. '
' → logprob: -6.878939628601074
    4. '<|end|>' → logprob: -7.628939628601074
    5. '<|end|>' → logprob: -8.628939628601074
    6. ',' → logprob: -9.003939628601074
    7. '  
' → logprob: -9.003939628601074
    8. ' 
' → logprob: -9.503939628601074
    9. '		' → logprob: -9.503939628601074
    10. ' if' → logprob: -10.003939628601074

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028322376310825348
    2. '<|end|>' → logprob: -4.278322219848633
    3. '            
' → logprob: -4.903322219848633
    4. ' 
' → logprob: -6.403322219848633
    5. '<|end|>' → logprob: -7.028322219848633
    6. ',' → logprob: -7.278322219848633
    7. ' ' → logprob: -7.278322219848633
    8. '  
' → logprob: -7.403322219848633
    9. '            ' → logprob: -7.903322219848633
    10. '       ' → logprob: -8.403322219848633

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7920368909835815
    2. 'if' → logprob: -1.4170368909835815
    3. 'res' → logprob: -2.417037010192871
    4. '           ' → logprob: -2.542037010192871
    5. 'result' → logprob: -2.917037010192871
    6. 'op' → logprob: -2.917037010192871
    7. ' self' → logprob: -4.792037010192871
    8. ' if' → logprob: -5.417037010192871
    9. 'ret' → logprob: -5.417037010192871
    10. 'for' → logprob: -6.542037010192871

Token 242: '.read' (ID: 7211)
  Prédit: '.move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.7840057611465454
    2. '.' → logprob: -1.2840057611465454
    3. '._' → logprob: -2.034005641937256
    4. '.play' → logprob: -2.659005641937256
    5. '.execute' → logprob: -4.659005641937256
    6. '.do' → logprob: -4.659005641937256
    7. '.data' → logprob: -4.784005641937256
    8. '.op' → logprob: -4.909005641937256
    9. '.perform' → logprob: -5.284005641937256
    10. '.process' → logprob: -5.659005641937256

Token 243: '_op' (ID: 20111)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.047519270330667496
    2. '(op' → logprob: -3.2975192070007324
    3. '_op' → logprob: -5.047519207000732
    4. '()
' → logprob: -7.172519207000732
    5. '_' → logprob: -7.297519207000732
    6. '(' → logprob: -7.422519207000732
    7. 'op' → logprob: -7.547519207000732
    8. '_token' → logprob: -9.79751968383789
    9. '_next' → logprob: -9.92251968383789
    10. ' ()' → logprob: -10.04751968383789

Token 244: '(op' (ID: 34275)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017133781220763922
    2. '(op' → logprob: -7.251713275909424
    3. '()
' → logprob: -7.626713275909424
    4. '(' → logprob: -7.626713275909424
    5. ' ()' → logprob: -11.501713752746582
    6. '(
' → logprob: -12.751713752746582
    7. '();' → logprob: -12.751713752746582
    8. '()`' → logprob: -13.126713752746582
    9. '()\' → logprob: -13.376713752746582
    10. '[]' → logprob: -13.626713752746582

Token 245: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0020742492051795e-05
    2. ' )' → logprob: -10.750049591064453
    3. '())' → logprob: -11.250049591064453
    4. ')
' → logprob: -11.375049591064453
    5. '()' → logprob: -12.875049591064453
    6. '       ' → logprob: -14.750049591064453
    7. '   ' → logprob: -15.125049591064453
    8. '))' → logprob: -16.250049591064453
    9. '           ' → logprob: -16.375049591064453
    10. '[' → logprob: -16.375049591064453

Token 246: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9194207191467285
    2. '_' → logprob: -1.7944207191467285
    3. '   ' → logprob: -1.7944207191467285
    4. '<|end|>' → logprob: -2.2944207191467285
    5. ':' → logprob: -2.6694207191467285
    6. '       ' → logprob: -3.4194207191467285
    7. ' ' → logprob: -3.7944207191467285
    8. '()' → logprob: -4.1694207191467285
    9. '    ' → logprob: -5.4194207191467285
    10. ')' → logprob: -5.7944207191467285

Token 248: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3189071714878082
    2. 'read' → logprob: -1.3189071416854858
    3. ' next' → logprob: -7.318907260894775
    4. ' play' → logprob: -7.443907260894775
    5. '_read' → logprob: -7.818907260894775
    6. '_' → logprob: -7.818907260894775
    7. 'play' → logprob: -8.068906784057617
    8. ' continue' → logprob: -8.193906784057617
    9. 'def' → logprob: -8.318906784057617
    10. ' def' → logprob: -8.568906784057617

Token 249: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.0206513199955225
    2. '_' → logprob: -3.895651340484619
    3. '_opcode' → logprob: -10.395650863647461
    4. '_operator' → logprob: -10.520650863647461
    5. '_operation' → logprob: -11.645650863647461
    6. ' _' → logprob: -11.770650863647461
    7. '(' → logprob: -11.770650863647461
    8. '(op' → logprob: -12.145650863647461
    9. 'op' → logprob: -12.145650863647461
    10. '_ops' → logprob: -12.645650863647461

Token 250: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05632462725043297
    2. '(' → logprob: -2.9313247203826904
    3. '(op' → logprob: -6.681324481964111
    4. ' (' → logprob: -9.18132495880127
    5. '(s' → logprob: -9.93132495880127
    6. '(
' → logprob: -10.68132495880127
    7. '(sel' → logprob: -12.68132495880127
    8. 'self' → logprob: -13.55632495880127
    9. '(se' → logprob: -13.68132495880127
    10. ')(' → logprob: -13.80632495880127

Token 251: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5728212594985962
    2. ',' → logprob: -0.9478212594985962
    3. ')' → logprob: -3.1978211402893066
    4. 'self' → logprob: -5.572821140289307
    5. '):
' → logprob: -5.947821140289307
    6. '(self' → logprob: -7.947821140289307
    7. '[' → logprob: -8.322821617126465
    8. '(op' → logprob: -8.697821617126465
    9. '(' → logprob: -8.947821617126465
    10. ')(' → logprob: -9.447821617126465

Token 252: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1444924920797348
    2. ' op' → logprob: -2.0194923877716064
    3. 's' → logprob: -7.5194926261901855
    4. 'c' → logprob: -8.644492149353027
    5. 'ch' → logprob: -8.644492149353027
    6. ')' → logprob: -8.644492149353027
    7. 'self' → logprob: -9.144492149353027
    8. ' s' → logprob: -9.269492149353027
    9. 'line' → logprob: -9.644492149353027
    10. 'token' → logprob: -9.644492149353027

Token 253: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012606900185346603
    2. '):
' → logprob: -4.387607097625732
    3. ')' → logprob: -10.012606620788574
    4. ':' → logprob: -10.387606620788574
    5. '):
' → logprob: -11.137606620788574
    6. ' ):' → logprob: -12.512606620788574
    7. '   ' → logprob: -13.387606620788574
    8. '):

' → logprob: -14.262606620788574
    9. '       ' → logprob: -15.012606620788574
    10. '():' → logprob: -15.137606620788574

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0558834969997406
    2. ' ' → logprob: -3.8058834075927734
    3. ':' → logprob: -4.055883407592773
    4. '    ' → logprob: -5.930883407592773
    5. '        
' → logprob: -6.305883407592773
    6. '        ' → logprob: -6.430883407592773
    7. ')' → logprob: -6.430883407592773
    8. ',' → logprob: -6.430883407592773
    9. ' 
' → logprob: -6.930883407592773
    10. '(' → logprob: -7.180883407592773

Token 255: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35689300298690796
    2. ' if' → logprob: -1.8568930625915527
    3. ' ' → logprob: -2.9818930625915527
    4. 'if' (adapté à ' if') → logprob: -3.2318930625915527
    5. '        ' → logprob: -3.2318930625915527
    6. '    ' → logprob: -6.106893062591553
    7. '#' → logprob: -6.481893062591553
    8. '(' → logprob: -6.606893062591553
    9. ')' → logprob: -6.981893062591553
    10. '_' → logprob: -6.981893062591553

Token 256: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.03452180325984955
    2. 'op' → logprob: -4.159521579742432
    3. ' self' → logprob: -4.159521579742432
    4. 'self' → logprob: -6.034521579742432
    5. ' not' → logprob: -8.65952205657959
    6. ' isinstance' → logprob: -10.40952205657959
    7. '	op' → logprob: -10.90952205657959
    8. ' ' → logprob: -10.90952205657959
    9. ' len' → logprob: -11.03452205657959
    10. '(op' → logprob: -11.40952205657959

Token 257: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08730756491422653
    2. '==' → logprob: -2.7123074531555176
    3. '[' → logprob: -4.087307453155518
    4. ')' → logprob: -8.462307929992676
    5. ' in' → logprob: -9.712307929992676
    6. '.startswith' → logprob: -10.337307929992676
    7. ' ' → logprob: -10.587307929992676
    8. ' )' → logprob: -10.837307929992676
    9. '=="' → logprob: -11.212307929992676
    10. ' =="' → logprob: -11.462307929992676

Token 258: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0498828887939453
    2. 'self' → logprob: -1.1748828887939453
    3. '"A' → logprob: -2.1748828887939453
    4. '"+' → logprob: -2.6748828887939453
    5. ''A' → logprob: -3.0498828887939453
    6. ''' → logprob: -3.0498828887939453
    7. 'Player' → logprob: -4.174882888793945
    8. ''+' → logprob: -4.299882888793945
    9. '0' → logprob: -5.174882888793945
    10. '"+"' → logprob: -5.299882888793945

Token 259: 'AB' (ID: 2912)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2451227903366089
    2. '"' → logprob: -2.1201229095458984
    3. 'P' → logprob: -2.3701229095458984
    4. 'R' → logprob: -2.4951229095458984
    5. '?' → logprob: -2.6201229095458984
    6. 'pass' → logprob: -3.1201229095458984
    7. '-' → logprob: -3.8701229095458984
    8. '?"' → logprob: -3.9951229095458984
    9. 'B' → logprob: -4.120122909545898
    10. 'undo' → logprob: -4.370122909545898

Token 260: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.6221680641174316
    2. '":' → logprob: -0.8721680641174316
    3. '"' → logprob: -3.1221680641174316
    4. '":
' → logprob: -7.872168064117432
    5. '"):
' → logprob: -8.247167587280273
    6. ':' → logprob: -9.247167587280273
    7. ':
' → logprob: -9.622167587280273
    8. ' "' → logprob: -9.622167587280273
    9. '"):' → logprob: -9.622167587280273
    10. '":

' → logprob: -9.747167587280273

Token 261: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8764724135398865
    2. '           ' → logprob: -1.2514724731445312
    3. ':
' → logprob: -1.5014724731445312
    4. ' and' → logprob: -2.8764724731445312
    5. '       ' → logprob: -5.376472473144531
    6. '":' → logprob: -5.501472473144531
    7. '"' → logprob: -5.501472473144531
    8. ',' → logprob: -6.876472473144531
    9. ' or' → logprob: -6.876472473144531
    10. '":
' → logprob: -7.001472473144531

Token 262: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6438304781913757
    2. '           ' → logprob: -1.5188305377960205
    3. 'self' (adapté à ' self') → logprob: -1.6438305377960205
    4. ' if' → logprob: -3.0188305377960205
    5. ' self' → logprob: -4.518830299377441
    6. 'pass' → logprob: -6.893830299377441
    7. 's' → logprob: -7.393830299377441
    8. 'return' → logprob: -8.393830299377441
    9. '               ' → logprob: -8.768830299377441
    10. '#' → logprob: -9.018830299377441

Token 263: '.do' (ID: 25750)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.8732846975326538
    2. '.data' → logprob: -1.4982846975326538
    3. '.move' → logprob: -2.6232848167419434
    4. '.play' → logprob: -2.8732848167419434
    5. '.check' → logprob: -2.9982848167419434
    6. '.op' → logprob: -3.4982848167419434
    7. '.' → logprob: -3.8732848167419434
    8. '.process' → logprob: -3.8732848167419434
    9. '.do' → logprob: -4.373284816741943
    10. '.A' → logprob: -4.873284816741943

Token 264: '(self' (ID: 2402)
  Prédit: '_AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_AB' → logprob: -0.36234310269355774
    2. '_ab' → logprob: -1.7373430728912354
    3. 'AB' → logprob: -2.9873430728912354
    4. '_op' → logprob: -3.4873430728912354
    5. '_move' → logprob: -3.7373430728912354
    6. '_play' → logprob: -5.6123433113098145
    7. '_' → logprob: -5.7373433113098145
    8. '_continue' → logprob: -6.6123433113098145
    9. '()' → logprob: -6.7373433113098145
    10. '_remove' → logprob: -6.9873433113098145

Token 265: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.30194956064224243
    2. ',' → logprob: -2.1769495010375977
    3. '.Player' → logprob: -3.5519495010375977
    4. ')' → logprob: -3.6769495010375977
    5. '.' → logprob: -3.8019495010375977
    6. ' ,' → logprob: -4.051949501037598
    7. 'A' → logprob: -4.301949501037598
    8. ' ' → logprob: -4.551949501037598
    9. ' .' → logprob: -5.051949501037598
    10. 'Player' → logprob: -5.051949501037598

Token 266: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2541985809803009
    2. ',' → logprob: -1.6291985511779785
    3. ' )' → logprob: -4.1291985511779785
    4. ' ,' → logprob: -4.5041985511779785
    5. ')
' → logprob: -7.7541985511779785
    6. ',B' → logprob: -8.254199028015137
    7. '+' → logprob: -9.379199028015137
    8. ' +' → logprob: -9.879199028015137
    9. ',self' → logprob: -9.879199028015137
    10. 'B' → logprob: -10.254199028015137

Token 267: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011057252995669842
    2. ' self' → logprob: -4.511057376861572
    3. '	self' → logprob: -12.636056900024414
    4. '   ' → logprob: -12.886056900024414
    5. ' ' → logprob: -13.511056900024414
    6. '       ' → logprob: -14.761056900024414
    7. '  ' → logprob: -14.761056900024414
    8. '           ' → logprob: -14.886056900024414
    9. 'elf' → logprob: -15.386056900024414
    10. '    ' → logprob: -16.136056900024414

Token 268: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.18152174353599548
    2. 'B' → logprob: -2.0565216541290283
    3. '.' → logprob: -4.056521892547607
    4. ' B' → logprob: -4.306521892547607
    5. ')' → logprob: -5.806521892547607
    6. ',' → logprob: -6.056521892547607
    7. ' .' → logprob: -6.931521892547607
    8. ' ' → logprob: -8.05652141571045
    9. '_B' → logprob: -9.30652141571045
    10. ',B' → logprob: -9.30652141571045

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044890373828820884
    2. ')
' → logprob: -7.750448703765869
    3. ' )' → logprob: -12.500449180603027
    4. ',' → logprob: -12.625449180603027
    5. ')return' → logprob: -12.750449180603027
    6. '<|end|>' → logprob: -13.125449180603027
    7. '           ' → logprob: -13.625449180603027
    8. '       ' → logprob: -14.000449180603027
    9. ')}' → logprob: -14.250449180603027
    10. ')
' → logprob: -14.375449180603027

Token 270: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7304644584655762
    2. '<|end|>' → logprob: -1.3554644584655762
    3. '       ' → logprob: -1.8554644584655762
    4. ' elif' → logprob: -2.355464458465576
    5. ')' → logprob: -5.105464458465576
    6. '	elif' → logprob: -6.605464458465576
    7. '<|end|>' → logprob: -7.480464458465576
    8. '.' → logprob: -7.605464458465576
    9. ',' → logprob: -8.980464935302734
    10. '   ' → logprob: -9.105464935302734

Token 272: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.00010115911572938785
    2. 'op' → logprob: -9.500101089477539
    3. ' ' → logprob: -11.125101089477539
    4. '(op' → logprob: -12.375101089477539
    5. '	op' → logprob: -12.625101089477539
    6. ' ' → logprob: -13.125101089477539
    7. ' self' → logprob: -14.250101089477539
    8. ' o' → logprob: -15.000101089477539
    9. '_op' → logprob: -15.250101089477539
    10. 'self' → logprob: -15.500101089477539

Token 273: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005933775100857019
    2. '==' → logprob: -5.13093376159668
    3. ' ' → logprob: -12.88093376159668
    4. ' =' → logprob: -14.00593376159668
    5. ' =="' → logprob: -14.00593376159668
    6. '=' → logprob: -15.50593376159668
    7. ' ==
' → logprob: -15.63093376159668
    8. '[' → logprob: -15.63093376159668
    9. ' ===' → logprob: -16.13093376159668
    10. ' ' → logprob: -16.13093376159668

Token 274: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.06996378302574158
    2. '"' → logprob: -2.6949636936187744
    3. '"C' → logprob: -10.944963455200195
    4. ' ' → logprob: -12.319963455200195
    5. ''' → logprob: -12.944963455200195
    6. ' '' → logprob: -13.944963455200195
    7. ' ' → logprob: -14.444963455200195
    8. '"B' → logprob: -14.819963455200195
    9. '=' → logprob: -14.944963455200195
    10. '"A' → logprob: -15.194963455200195

Token 275: 'AC' (ID: 2436)
  Prédit: 'BC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BC' → logprob: -0.03387712314724922
    2. 'AC' → logprob: -3.40887713432312
    3. ' BC' → logprob: -8.5338773727417
    4. 'CA' → logprob: -12.0338773727417
    5. ' AC' → logprob: -12.1588773727417
    6. 'ABC' → logprob: -12.4088773727417
    7. 'C' → logprob: -12.5338773727417
    8. 'AB' → logprob: -12.7838773727417
    9. 'BA' → logprob: -13.0338773727417
    10. 'CB' → logprob: -13.1588773727417

Token 276: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.1550597995519638
    2. '":
' → logprob: -2.655059814453125
    3. '"):
' → logprob: -3.030059814453125
    4. '"):' → logprob: -3.905059814453125
    5. '"' → logprob: -6.155059814453125
    6. '):
' → logprob: -6.530059814453125
    7. '):' → logprob: -7.530059814453125
    8. ':' → logprob: -8.030059814453125
    9. '":
' → logprob: -9.530059814453125
    10. ':
' → logprob: -9.530059814453125

Token 277: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5902121067047119
    2. ':
' → logprob: -1.465212106704712
    3. '           ' → logprob: -1.590212106704712
    4. ' self' → logprob: -5.965211868286133
    5. 'self' → logprob: -6.090211868286133
    6. '       ' → logprob: -6.215211868286133
    7. '<|end|>' → logprob: -7.090211868286133
    8. '(self' → logprob: -7.340211868286133
    9. '():
' → logprob: -7.840211868286133
    10. ',' → logprob: -7.965211868286133

Token 278: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868919909000397
    2. 'self' (adapté à ' self') → logprob: -1.1368919610977173
    3. ' ' → logprob: -11.511892318725586
    4. '       ' → logprob: -12.136892318725586
    5. '	self' → logprob: -12.636892318725586
    6. '(self' → logprob: -13.511892318725586
    7. '           ' → logprob: -14.761892318725586
    8. ' ' → logprob: -15.886892318725586
    9. '[self' → logprob: -15.886892318725586
    10. '_self' → logprob: -16.136892318725586

Token 279: '.do' (ID: 25750)
  Prédit: '.do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.do' → logprob: -0.002188449027016759
    2. '.' → logprob: -6.252188682556152
    3. ' do' → logprob: -8.752188682556152
    4. 'do' → logprob: -9.252188682556152
    5. ' .' → logprob: -12.127188682556152
    6. '	do' → logprob: -15.127188682556152
    7. '#do' → logprob: -16.377187728881836
    8. '_do' → logprob: -17.877187728881836
    9. '.Do' → logprob: -18.127187728881836
    10. ' ' → logprob: -18.127187728881836

Token 280: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014165983535349369
    2. '(' → logprob: -4.264165878295898
    3. '(
' → logprob: -13.014165878295898
    4. ' (' → logprob: -15.889165878295898
    5. 'self' → logprob: -16.8891658782959
    6. '(

' → logprob: -17.5141658782959
    7. '('' → logprob: -18.0141658782959
    8. '(s' → logprob: -18.6391658782959
    9. '(sel' → logprob: -19.0141658782959
    10. ' self' → logprob: -19.0141658782959

Token 281: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.0001673061487963423
    2. '.' → logprob: -8.875166893005371
    3. ' .' → logprob: -11.000166893005371
    4. '.А' → logprob: -12.250166893005371
    5. '.C' → logprob: -12.625166893005371
    6. 'A' → logprob: -13.625166893005371
    7. '.I' → logprob: -15.125166893005371
    8. '(A' → logprob: -15.375166893005371
    9. 'self' → logprob: -15.625166893005371
    10. '.
' → logprob: -16.125167846679688

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.949026571121067e-05
    2. ' ,' → logprob: -9.250099182128906
    3. ',
' → logprob: -13.000099182128906
    4. ')' → logprob: -14.500099182128906
    5. ',self' → logprob: -14.875099182128906
    6. '),' → logprob: -16.375099182128906
    7. '<|end|>' → logprob: -17.250099182128906
    8. ',

' → logprob: -18.375099182128906
    9. ',\
' → logprob: -18.500099182128906
    10. 'self' → logprob: -18.625099182128906

Token 283: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326258182525635
    2. 'self' → logprob: -1.3132625818252563
    3. '	self' → logprob: -15.063262939453125
    4. ' ' → logprob: -15.313262939453125
    5. '(self' → logprob: -15.813262939453125
    6. 'C' → logprob: -16.438262939453125
    7. 's' → logprob: -17.313262939453125
    8. '[self' → logprob: -17.438262939453125
    9. ' ' → logprob: -17.563262939453125
    10. '   ' → logprob: -17.688262939453125

Token 284: '.C' (ID: 2010)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20515602827072144
    2. 'C' → logprob: -2.330156087875366
    3. '.C' → logprob: -2.455156087875366
    4. ' C' → logprob: -7.080155849456787
    5. ',C' → logprob: -7.455155849456787
    6. ' ,' → logprob: -7.830155849456787
    7. '.' → logprob: -7.955155849456787
    8. ',
' → logprob: -8.955156326293945
    9. ')' → logprob: -11.080156326293945
    10. '[' → logprob: -11.830156326293945

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.266944157890975e-05
    2. ')
' → logprob: -9.875072479248047
    3. '       ' → logprob: -11.000072479248047
    4. ' )' → logprob: -12.625072479248047
    5. '<|end|>' → logprob: -14.750072479248047
    6. '),' → logprob: -15.750072479248047
    7. ')\
' → logprob: -15.875072479248047
    8. '   ' → logprob: -16.250072479248047
    9. ')#' → logprob: -16.375072479248047
    10. ')return' → logprob: -16.875072479248047

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1004498228430748
    2. '<|end|>' → logprob: -2.350449800491333
    3. '<|end|>' → logprob: -10.100449562072754
    4. ')' → logprob: -10.225449562072754
    5. '```' → logprob: -10.225449562072754
    6. '()' → logprob: -10.600449562072754
    7. ' if' → logprob: -10.850449562072754
    8. '        
' → logprob: -11.225449562072754
    9. 'if' → logprob: -11.475449562072754
    10. '      ' → logprob: -11.600449562072754

Token 287: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046376071870326996
    2. 'if' (adapté à ' if') → logprob: -3.2963759899139404
    3. ' if' → logprob: -4.7963762283325195
    4. 'elif' → logprob: -11.29637622833252
    5. '   ' → logprob: -11.54637622833252
    6. ' ' → logprob: -12.04637622833252
    7. '<|end|>' → logprob: -12.29637622833252
    8. '```' → logprob: -13.54637622833252
    9. '           ' → logprob: -13.79637622833252
    10. ')' → logprob: -14.04637622833252

Token 288: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.004183821380138397
    2. '(op' → logprob: -5.754183769226074
    3. 'op' → logprob: -7.004183769226074
    4. ' (' → logprob: -9.379183769226074
    5. '	op' → logprob: -12.629183769226074
    6. '(' → logprob: -12.879183769226074
    7. 'self' → logprob: -12.879183769226074
    8. ' self' → logprob: -13.004183769226074
    9. ' ' → logprob: -14.004183769226074
    10. ' ' → logprob: -14.879183769226074

Token 289: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048590321093797684
    2. '==' → logprob: -3.0485904216766357
    3. '=' → logprob: -13.673590660095215
    4. ' =' → logprob: -14.298590660095215
    5. ')' → logprob: -15.423590660095215
    6. '=="' → logprob: -15.423590660095215
    7. ' ' → logprob: -15.673590660095215
    8. ')==' → logprob: -16.1735897064209
    9. ' =="' → logprob: -16.2985897064209
    10. '==
' → logprob: -16.5485897064209

Token 290: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5409631729125977
    2. '"' → logprob: -0.9159631729125977
    3. '"B' → logprob: -4.040963172912598
    4. '"C' → logprob: -9.665963172912598
    5. ' ' → logprob: -10.665963172912598
    6. ''' → logprob: -12.165963172912598
    7. '("' → logprob: -12.665963172912598
    8. '"A' → logprob: -13.165963172912598
    9. ' ' → logprob: -14.415963172912598
    10. ' '' → logprob: -15.040963172912598

Token 291: 'BC' (ID: 7551)
  Prédit: 'BC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BC' → logprob: -0.038126640021800995
    2. 'B' → logprob: -3.2881267070770264
    3. ' BC' → logprob: -9.538126945495605
    4. ' B' → logprob: -12.538126945495605
    5. 'bc' → logprob: -12.788126945495605
    6. 'Ｂ' → logprob: -13.163126945495605
    7. 'BA' → logprob: -13.788126945495605
    8. 'CB' → logprob: -14.288126945495605
    9. 'C' → logprob: -14.663126945495605
    10. '"B' → logprob: -15.038126945495605

Token 292: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5657541751861572
    2. '"):
' → logprob: -1.5657541751861572
    3. '":
' → logprob: -1.5657541751861572
    4. '"):' → logprob: -4.940753936767578
    5. '):
' → logprob: -5.815753936767578
    6. ':
' → logprob: -6.190753936767578
    7. ':' → logprob: -6.815753936767578
    8. '"' → logprob: -8.315753936767578
    9. '):' → logprob: -8.690753936767578
    10. '":
' → logprob: -9.190753936767578

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026502134278416634
    2. 'self' → logprob: -6.252650260925293
    3. '       ' → logprob: -7.627650260925293
    4. ' self' → logprob: -8.627650260925293
    5. '(self' → logprob: -10.252650260925293
    6. '   ' → logprob: -12.002650260925293
    7. '          ' → logprob: -12.252650260925293
    8. '         ' → logprob: -13.502650260925293
    9. '		' → logprob: -13.502650260925293
    10. '               ' → logprob: -13.627650260925293

Token 294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006791513413190842
    2. ' self' → logprob: -5.006791591644287
    3. '       ' → logprob: -9.506791114807129
    4. '	self' → logprob: -14.381791114807129
    5. '(self' → logprob: -14.631791114807129
    6. '           ' → logprob: -14.631791114807129
    7. '[self' → logprob: -16.506792068481445
    8. ' ' → logprob: -16.631792068481445
    9. ' ' → logprob: -17.006792068481445
    10. '   ' → logprob: -17.256792068481445

Token 295: '.do' (ID: 25750)
  Prédit: '.do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.do' → logprob: -0.0013370281085371971
    2. '.' → logprob: -6.751337051391602
    3. 'do' → logprob: -8.876337051391602
    4. ' do' → logprob: -10.626337051391602
    5. ' .' → logprob: -13.251337051391602
    6. '#do' → logprob: -14.876337051391602
    7. '.
' → logprob: -15.126337051391602
    8. '	do' → logprob: -15.501337051391602
    9. '.Do' → logprob: -15.876337051391602
    10. '..' → logprob: -17.0013370513916

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.500012397766113
    3. 'self' → logprob: -13.125012397766113
    4. ' (' → logprob: -15.500012397766113
    5. ' self' → logprob: -16.62501335144043
    6. '(
' → logprob: -17.00001335144043
    7. '(s' → logprob: -17.75001335144043
    8. ' ' → logprob: -18.87501335144043
    9. '<|end|>' → logprob: -19.00001335144043
    10. '=self' → logprob: -19.37501335144043

Token 297: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.0004336493439041078
    2. '.' → logprob: -8.125433921813965
    3. ' .' → logprob: -9.500433921813965
    4. 'B' → logprob: -10.500433921813965
    5. 'self' → logprob: -10.500433921813965
    6. ' B' → logprob: -12.125433921813965
    7. '	B' → logprob: -14.875433921813965
    8. ',' → logprob: -15.000433921813965
    9. '   ' → logprob: -15.250433921813965
    10. '(B' → logprob: -15.375433921813965

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.64839569455944e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',self' → logprob: -13.750076293945312
    4. ',
' → logprob: -14.625076293945312
    5. '<|end|>' → logprob: -17.875076293945312
    6. ' ' → logprob: -18.375076293945312
    7. 'self' → logprob: -18.375076293945312
    8. ')' → logprob: -18.500076293945312
    9. '‌,' → logprob: -19.375076293945312
    10. '，' → logprob: -19.500076293945312

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011049000546336174
    2. ' self' → logprob: -4.511048793792725
    3. 'C' → logprob: -14.636049270629883
    4. '   ' → logprob: -15.386049270629883
    5. '	self' → logprob: -15.636049270629883
    6. '(self' → logprob: -16.136049270629883
    7. ' ' → logprob: -16.261049270629883
    8. '       ' → logprob: -16.761049270629883
    9. '  ' → logprob: -17.261049270629883
    10. 's' → logprob: -17.261049270629883

Token 300: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0027419927064329386
    2. ',' → logprob: -6.252741813659668
    3. '.C' → logprob: -7.377741813659668
    4. ' C' → logprob: -9.002741813659668
    5. ',C' → logprob: -9.877741813659668
    6. ')' → logprob: -12.127741813659668
    7. '.' → logprob: -13.627741813659668
    8. '	C' → logprob: -13.752741813659668
    9. '  ' → logprob: -14.002741813659668
    10. 'c' → logprob: -14.002741813659668

Token 301: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002445317804813385
    2. ')
' → logprob: -8.375244140625
    3. '       ' → logprob: -11.750244140625
    4. ' )' → logprob: -12.625244140625
    5. '<|end|>' → logprob: -13.500244140625
    6. ')#' → logprob: -15.375244140625
    7. ')return' → logprob: -15.625244140625
    8. '()' → logprob: -15.875244140625
    9. '   ' → logprob: -16.000244140625
    10. ')

' → logprob: -16.250244140625

Token 302: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41496771574020386
    2. 'def' (adapté à ' def') → logprob: -1.2899677753448486
    3. '<|end|>' → logprob: -3.5399677753448486
    4. '  
' → logprob: -5.1649675369262695
    5. ' ' → logprob: -5.2899675369262695
    6. '    
' → logprob: -5.4149675369262695
    7. '	def' → logprob: -5.4149675369262695
    8. ' def' → logprob: -5.4149675369262695
    9. ':' → logprob: -6.0399675369262695
    10. '       ' → logprob: -6.1649675369262695

Token 304: ' do' (ID: 621)
  Prédit: ' do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' do' → logprob: -0.6933634281158447
    2. 'do' → logprob: -0.6933634281158447
    3. ' ' → logprob: -9.693363189697266
    4. '  ' → logprob: -10.693363189697266
    5. '	do' → logprob: -10.693363189697266
    6. '   ' → logprob: -11.505863189697266
    7. '_do' → logprob: -11.693363189697266
    8. 'def' → logprob: -11.755863189697266
    9. '
' → logprob: -12.005863189697266
    10. ' is' → logprob: -12.130863189697266

Token 305: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07986615598201752
    2. '(self' → logprob: -2.5798661708831787
    3. ' (' → logprob: -7.0798659324646
    4. '(s' → logprob: -9.454866409301758
    5. '(
' → logprob: -9.954866409301758
    6. ' ' → logprob: -13.204866409301758
    7. 'self' → logprob: -13.454866409301758
    8. '(sel' → logprob: -14.329866409301758
    9. '   ' → logprob: -14.454866409301758
    10. '(

' → logprob: -14.579866409301758

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002627662615850568
    2. ' ,' → logprob: -8.875263214111328
    3. 'self' → logprob: -9.625263214111328
    4. '(self' → logprob: -9.875263214111328
    5. ',self' → logprob: -12.750263214111328
    6. ' ' → logprob: -14.125263214111328
    7. '(' → logprob: -14.750263214111328
    8. ' self' → logprob: -15.000263214111328
    9. ',
' → logprob: -15.500263214111328
    10. '_,' → logprob: -15.750263214111328

Token 307: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3892679810523987
    2. 'a' → logprob: -1.514267921447754
    3. 'p' → logprob: -3.389267921447754
    4. 'i' → logprob: -3.514267921447754
    5. ' x' → logprob: -3.764267921447754
    6. ' a' → logprob: -4.889267921447754
    7. 'idx' → logprob: -6.389267921447754
    8. ' p' → logprob: -6.639267921447754
    9. ' i' → logprob: -6.639267921447754
    10. 'player' → logprob: -6.764267921447754

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ' ,' → logprob: -8.625182151794434
    3. ',
' → logprob: -14.000182151794434
    4. ',x' → logprob: -14.750182151794434
    5. ',y' → logprob: -14.875182151794434
    6. ' ' → logprob: -15.625182151794434
    7. '   ' → logprob: -15.625182151794434
    8. '‌,' → logprob: -16.625181198120117
    9. '<|end|>' → logprob: -16.875181198120117
    10. ',n' → logprob: -16.875181198120117

Token 309: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693145871162415
    2. ' y' → logprob: -2.1269314289093018
    3. '   ' → logprob: -13.376931190490723
    4. '	y' → logprob: -14.001931190490723
    5. ' ' → logprob: -14.251931190490723
    6. '  ' → logprob: -15.376931190490723
    7. '    ' → logprob: -15.626931190490723
    8. ' ' → logprob: -18.75193214416504
    9. '    
' → logprob: -19.37693214416504
    10. '
' → logprob: -19.50193214416504

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04861143231391907
    2. '):
' → logprob: -3.0486114025115967
    3. ')' → logprob: -11.673611640930176
    4. '):
' → logprob: -11.673611640930176
    5. ' ):' → logprob: -12.798611640930176
    6. '):

' → logprob: -13.173611640930176
    7. ':' → logprob: -13.548611640930176
    8. '   ' → logprob: -14.298611640930176
    9. '       ' → logprob: -16.17361068725586
    10. ' ):
' → logprob: -16.29861068725586

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22111736238002777
    2. 'if' → logprob: -1.971117377281189
    3. ' if' → logprob: -2.8461172580718994
    4. 'data' → logprob: -7.8461174964904785
    5. 'd' → logprob: -8.22111701965332
    6. 'a' → logprob: -9.47111701965332
    7. 'x' → logprob: -10.09611701965332
    8. '   ' → logprob: -10.09611701965332
    9. ' data' → logprob: -10.72111701965332
    10. ' ' → logprob: -10.97111701965332

Token 312: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021627187728881836
    2. '       ' → logprob: -4.396627426147461
    3. 'd' → logprob: -5.521627426147461
    4. 'a' → logprob: -5.646627426147461
    5. 'data' → logprob: -7.271627426147461
    6. ' if' → logprob: -7.396627426147461
    7. 'dx' → logprob: -9.271627426147461
    8. '#' → logprob: -10.021627426147461
    9. 'v' → logprob: -10.396627426147461
    10. 'cnt' → logprob: -11.146627426147461

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007749063428491354
    2. ' self' → logprob: -4.882749080657959
    3. '(self' → logprob: -9.8827486038208
    4. '   ' → logprob: -10.6327486038208
    5. 'not' → logprob: -10.6327486038208
    6. ' not' → logprob: -11.0077486038208
    7. 'x' → logprob: -11.8827486038208
    8. ' ' → logprob: -12.0077486038208
    9. '	self' → logprob: -12.5077486038208
    10. '[self' → logprob: -13.0077486038208

Token 314: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -4.4060561776859686e-05
    2. '.' → logprob: -10.125043869018555
    3. ' .' → logprob: -12.875043869018555
    4. '.f' → logprob: -14.125043869018555
    5. 'data' → logprob: -15.375043869018555
    6. '.x' → logprob: -15.750043869018555
    7. '.player' → logprob: -17.125043869018555
    8. 'A' → logprob: -17.375043869018555
    9. '.key' → logprob: -17.375043869018555
    10. '.d' → logprob: -17.500043869018555

Token 315: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.00001049041748
    3. 'x' → logprob: -13.12501049041748
    4. ' [' → logprob: -13.25001049041748
    5. '   ' → logprob: -16.375009536743164
    6. '```' → logprob: -16.625009536743164
    7. ',x' → logprob: -17.000009536743164
    8. '][' → logprob: -17.250009536743164
    9. '[int' → logprob: -17.375009536743164
    10. ' x' → logprob: -17.375009536743164

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.544379711151123
    2. ']==' → logprob: -1.419379711151123
    3. '==' → logprob: -2.294379711151123
    4. ' ==' → logprob: -2.794379711151123
    5. '>' → logprob: -4.794379711151123
    6. ')' → logprob: -5.919379711151123
    7. ' >' → logprob: -6.544379711151123
    8. ']>' → logprob: -7.044379711151123
    9. ')==' → logprob: -7.294379711151123
    10. ' <' → logprob: -7.419379711151123

Token 317: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043484609574079514
    2. ' ==' → logprob: -3.793484687805176
    3. '>' → logprob: -4.043484687805176
    4. '<' → logprob: -6.293484687805176
    5. ' >' → logprob: -8.043484687805176
    6. '==
' → logprob: -9.168484687805176
    7. '<=' → logprob: -9.668484687805176
    8. ' <' → logprob: -9.793484687805176
    9. '>=' → logprob: -9.793484687805176
    10. '0' → logprob: -11.418484687805176

Token 318: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003915614914149046
    2. ' self' → logprob: -5.753915786743164
    3. '=' → logprob: -7.503915786743164
    4. '=self' → logprob: -9.128915786743164
    5. '1' → logprob: -9.628915786743164
    6. '0' → logprob: -13.378915786743164
    7. ' ' → logprob: -13.378915786743164
    8. '>' → logprob: -13.503915786743164
    9. '=>' → logprob: -13.503915786743164
    10. '  ' → logprob: -13.503915786743164

Token 319: '.data' (ID: 3885)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0015910346992313862
    2. ' data' → logprob: -6.626591205596924
    3. '.data' → logprob: -9.126590728759766
    4. '=' → logprob: -9.251590728759766
    5. 'y' → logprob: -11.001590728759766
    6. '1' → logprob: -11.376590728759766
    7. '[data' → logprob: -12.501590728759766
    8. '0' → logprob: -12.626590728759766
    9. '=data' → logprob: -12.626590728759766
    10. '100' → logprob: -13.126590728759766

Token 320: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.003324580378830433
    2. 'y' → logprob: -5.878324508666992
    3. '[' → logprob: -7.753324508666992
    4. '[x' → logprob: -10.378324508666992
    5. ' [' → logprob: -11.003324508666992
    6. '=' → logprob: -12.003324508666992
    7. '][' → logprob: -12.003324508666992
    8. ' y' → logprob: -12.253324508666992
    9. ',y' → logprob: -12.503324508666992
    10. '+' → logprob: -12.628324508666992

Token 321: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35058531165122986
    2. '):
' → logprob: -1.2255853414535522
    3. ')' → logprob: -6.350585460662842
    4. ':' → logprob: -9.225584983825684
    5. ' ):' → logprob: -9.350584983825684
    6. '):
' → logprob: -9.725584983825684
    7. ' ):
' → logprob: -9.850584983825684
    8. ':
' → logprob: -10.225584983825684
    9. ']:' → logprob: -11.225584983825684
    10. '       ' → logprob: -11.225584983825684

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5051512718200684
    2. ':
' → logprob: -2.0051512718200684
    3. '       ' → logprob: -2.1301512718200684
    4. ':' → logprob: -2.3801512718200684
    5. ',' → logprob: -4.130151271820068
    6. '
' → logprob: -5.005151271820068
    7. '):
' → logprob: -5.005151271820068
    8. '<|end|>' → logprob: -5.130151271820068
    9. '\n' → logprob: -5.630151271820068
    10. ' 
' → logprob: -6.630151271820068

Token 323: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5162276029586792
    2. 'x' → logprob: -1.5162276029586792
    3. '           ' → logprob: -1.8912276029586792
    4. ' x' → logprob: -4.141227722167969
    5. ' self' → logprob: -4.641227722167969
    6. 'data' → logprob: -6.266227722167969
    7. '               ' → logprob: -6.391227722167969
    8. 'y' → logprob: -6.766227722167969
    9. '   ' → logprob: -7.266227722167969
    10. '       ' → logprob: -7.391227722167969

Token 324: '.move' (ID: 24425)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.018214326351881027
    2. '.' → logprob: -4.143214225769043
    3. '.move' → logprob: -6.518214225769043
    4. 'data' → logprob: -7.768214225769043
    5. ' .' → logprob: -9.018214225769043
    6. '.key' → logprob: -10.143214225769043
    7. 'move' → logprob: -10.893214225769043
    8. '           ' → logprob: -11.143214225769043
    9. ' data' → logprob: -11.143214225769043
    10. ' move' → logprob: -11.268214225769043

Token 325: '(y' (ID: 14684)
  Prédit: '_history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_history' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.625001907348633
    3. 'history' → logprob: -15.500001907348633
    4. ' history' → logprob: -17.750001907348633
    5. ' _' → logprob: -18.000001907348633
    6. '_HISTORY' → logprob: -18.125001907348633
    7. 'History' → logprob: -18.250001907348633
    8. 's' → logprob: -18.625001907348633
    9. '_hist' → logprob: -19.125001907348633
    10. '_
' → logprob: -19.875001907348633

Token 326: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00865605752915144
    2. ']' → logprob: -5.008656024932861
    3. ' )' → logprob: -7.008656024932861
    4. ')
' → logprob: -7.258656024932861
    5. '])' → logprob: -9.13365650177002
    6. ')]' → logprob: -9.38365650177002
    7. ']+=' → logprob: -9.88365650177002
    8. ' ]' → logprob: -11.25865650177002
    9. ')=' → logprob: -11.63365650177002
    10. ' )
' → logprob: -11.75865650177002

Token 327: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002671768015716225
    2. ' x' → logprob: -9.000267028808594
    3. ')' → logprob: -9.750267028808594
    4. '0' → logprob: -10.500267028808594
    5. '1' → logprob: -11.375267028808594
    6. '-' → logprob: -11.625267028808594
    7. ')x' → logprob: -11.750267028808594
    8. ''x' → logprob: -11.750267028808594
    9. '"x' → logprob: -12.500267028808594
    10. '+' → logprob: -12.750267028808594

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789816603064537
    2. ')
' → logprob: -2.578981637954712
    3. ')
' → logprob: -9.453981399536133
    4. ')

' → logprob: -11.703981399536133
    5. ' )' → logprob: -13.078981399536133
    6. ' )
' → logprob: -13.703981399536133
    7. '       ' → logprob: -14.703981399536133
    8. ',' → logprob: -14.703981399536133
    9. ')`
' → logprob: -14.828981399536133
    10. '),' → logprob: -15.578981399536133

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025197509676218033
    2. '<|end|>' → logprob: -3.9001975059509277
    3. '
' → logprob: -6.025197505950928
    4. '   ' → logprob: -7.650197505950928
    5. '\n' → logprob: -7.775197505950928
    6. '  
' → logprob: -8.150197982788086
    7. 'elif' → logprob: -8.900197982788086
    8. ')' → logprob: -8.900197982788086
    9. ' 
' → logprob: -9.025197982788086
    10. '	' → logprob: -9.150197982788086

Token 330: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.078305184841156
    2. 'else' → logprob: -2.953305244445801
    3. ' elif' → logprob: -4.453305244445801
    4. '       ' → logprob: -4.703305244445801
    5. 'elif' (adapté à ' elif') → logprob: -6.078305244445801
    6. ' ' → logprob: -10.0783052444458
    7. '   ' → logprob: -10.2033052444458
    8. '
' → logprob: -11.3283052444458
    9. '<|end|>' → logprob: -11.3283052444458
    10. ' 
' → logprob: -11.5783052444458

Token 331: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6326348781585693
    2. 'self' → logprob: -0.7576348781585693
    3. ' ' → logprob: -11.257635116577148
    4. '	self' → logprob: -11.632635116577148
    5. '   ' → logprob: -12.507635116577148
    6. '           ' → logprob: -13.132635116577148
    7. '    ' → logprob: -13.257635116577148
    8. '(self' → logprob: -13.382635116577148
    9. '       ' → logprob: -13.632635116577148
    10. '[self' → logprob: -14.007635116577148

Token 332: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00016074994346126914
    2. '.' → logprob: -9.000161170959473
    3. 'data' → logprob: -10.500161170959473
    4. ' .' → logprob: -12.500161170959473
    5. ' data' → logprob: -13.375161170959473
    6. '[data' → logprob: -13.500161170959473
    7. '<data' → logprob: -14.625161170959473
    8. '.move' → logprob: -14.750161170959473
    9. 'move' → logprob: -14.875161170959473
    10. '.user' → logprob: -15.250161170959473

Token 333: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.3795937522663735e-05
    2. '[' → logprob: -11.12502384185791
    3. ' [' → logprob: -12.25002384185791
    4. '```' → logprob: -13.50002384185791
    5. 'x' → logprob: -13.87502384185791
    6. '[y' → logprob: -14.12502384185791
    7. '[
' → logprob: -14.37502384185791
    8. '>' → logprob: -16.250022888183594
    9. '>[' → logprob: -16.375022888183594
    10. '>x' → logprob: -16.750022888183594

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01046817097812891
    2. '[' → logprob: -5.510468006134033
    3. ' >' → logprob: -6.135468006134033
    4. ' <' → logprob: -6.510468006134033
    5. '>' → logprob: -6.760468006134033
    6. ' ]' → logprob: -7.635468006134033
    7. ']>' → logprob: -7.635468006134033
    8. '[y' → logprob: -8.510468482971191
    9. '[x' → logprob: -9.260468482971191
    10. ')' → logprob: -9.260468482971191

Token 335: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5236042737960815
    2. '>' → logprob: -0.8986042737960815
    3. '[' → logprob: -8.148604393005371
    4. ' ' → logprob: -10.023604393005371
    5. '==' → logprob: -10.023604393005371
    6. ' ==' → logprob: -10.148604393005371
    7. ' <' → logprob: -10.273604393005371
    8. '<' → logprob: -11.773604393005371
    9. ']' → logprob: -12.023604393005371
    10. ' >=' → logprob: -12.773604393005371

Token 336: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.350171834230423
    2. 'self' → logprob: -1.2251718044281006
    3. '[self' → logprob: -6.72517204284668
    4. '<|end|>' → logprob: -8.35017204284668
    5. ' ' → logprob: -8.85017204284668
    6. ' y' → logprob: -9.85017204284668
    7. '(self' → logprob: -10.35017204284668
    8. 'y' → logprob: -11.47517204284668
    9. '=self' → logprob: -11.72517204284668
    10. '[' → logprob: -12.22517204284668

Token 337: '.data' (ID: 3885)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.028533251956105232
    2. '[' → logprob: -3.6535332202911377
    3. '[x' → logprob: -6.653533458709717
    4. ' [' → logprob: -7.153533458709717
    5. 'y' → logprob: -9.153532981872559
    6. ' y' → logprob: -10.653532981872559
    7. '[
' → logprob: -11.028532981872559
    8. '[data' → logprob: -12.403532981872559
    9. '```' → logprob: -12.903532981872559
    10. ' ' → logprob: -13.528532981872559

Token 338: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.012548616155982018
    2. '[' → logprob: -4.637548446655273
    3. '[x' → logprob: -5.887548446655273
    4. '```' → logprob: -12.012548446655273
    5. '[
' → logprob: -12.762548446655273
    6. ' [' → logprob: -12.887548446655273
    7. ']' → logprob: -14.262548446655273
    8. 'y' → logprob: -14.387548446655273
    9. '[z' → logprob: -14.387548446655273
    10. '[user' → logprob: -14.887548446655273

Token 339: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01765276864171028
    2. ':' → logprob: -4.517652988433838
    3. '):
' → logprob: -5.267652988433838
    4. ']:' → logprob: -6.892652988433838
    5. ' ):' → logprob: -8.14265251159668
    6. '       ' → logprob: -10.39265251159668
    7. ')' → logprob: -11.14265251159668
    8. '):
' → logprob: -11.39265251159668
    9. '[' → logprob: -11.39265251159668
    10. '           ' → logprob: -11.64265251159668

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00412957277148962
    2. '       ' → logprob: -5.629129409790039
    3. 'self' → logprob: -9.004129409790039
    4. '          ' → logprob: -9.254129409790039
    5. ',' → logprob: -9.379129409790039
    6. '   ' → logprob: -10.129129409790039
    7. ' self' → logprob: -10.254129409790039
    8. ' ' → logprob: -10.504129409790039
    9. '               ' → logprob: -10.629129409790039
    10. '	       ' → logprob: -11.879129409790039

Token 341: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47419485449790955
    2. 'self' (adapté à ' self') → logprob: -0.9741948843002319
    3. '           ' → logprob: -9.099194526672363
    4. '(self' → logprob: -13.224194526672363
    5. ' ' → logprob: -13.349194526672363
    6. '	self' → logprob: -13.849194526672363
    7. ' ' → logprob: -14.974194526672363
    8. ' s' → logprob: -15.224194526672363
    9. '            ' → logprob: -15.599194526672363
    10. '       ' → logprob: -15.599194526672363

Token 342: '.move' (ID: 24425)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.023323392495512962
    2. '.move' → logprob: -4.0233235359191895
    3. ' move' → logprob: -5.2733235359191895
    4. '.' → logprob: -10.398323059082031
    5. '	move' → logprob: -13.273323059082031
    6. ' .' → logprob: -14.023323059082031
    7. '_move' → logprob: -16.14832305908203
    8. ' ' → logprob: -16.27332305908203
    9. '(move' → logprob: -16.89832305908203
    10. 'm' → logprob: -17.02332305908203

Token 343: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001314295077463612
    2. '(' → logprob: -9.000131607055664
    3. 'x' → logprob: -11.750131607055664
    4. '(
' → logprob: -16.375131607055664
    5. ' (' → logprob: -17.750131607055664
    6. ' x' → logprob: -18.500131607055664
    7. '(y' → logprob: -19.125131607055664
    8. ',x' → logprob: -20.500131607055664
    9. '(self' → logprob: -21.250131607055664
    10. '	x' → logprob: -21.375131607055664

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012320445966906846
    2. ' ,' → logprob: -9.125123023986816
    3. ',y' → logprob: -11.375123023986816
    4. 'y' → logprob: -13.625123023986816
    5. ')' → logprob: -14.000123023986816
    6. ' y' → logprob: -15.000123023986816
    7. ',
' → logprob: -15.125123023986816
    8. '<|end|>' → logprob: -16.875123977661133
    9. '```' → logprob: -17.000123977661133
    10. '),' → logprob: -17.625123977661133

Token 345: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0040785204619169235
    2. ' y' → logprob: -5.504078388214111
    3. ')y' → logprob: -17.879077911376953
    4. '	y' → logprob: -18.004077911376953
    5. ')' → logprob: -18.754077911376953
    6. '<|end|>' → logprob: -19.004077911376953
    7. ''y' → logprob: -20.629077911376953
    8. 'x' → logprob: -21.004077911376953
    9. '(y' → logprob: -21.754077911376953
    10. 'yb' → logprob: -22.254077911376953

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041247038170695305
    2. ')
' → logprob: -5.504124641418457
    3. '       ' → logprob: -10.879124641418457
    4. ' )' → logprob: -11.379124641418457
    5. '<|end|>' → logprob: -12.754124641418457
    6. '()' → logprob: -13.379124641418457
    7. '
' → logprob: -13.379124641418457
    8. '())' → logprob: -13.754124641418457
    9. ')return' → logprob: -13.879124641418457
    10. ')\' → logprob: -13.879124641418457

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26172348856925964
    2. 'else' → logprob: -1.511723518371582
    3. ' else' → logprob: -4.636723518371582
    4. '<|end|>' → logprob: -10.636723518371582
    5. '	else' → logprob: -11.136723518371582
    6. '```' → logprob: -11.761723518371582
    7. 'elif' → logprob: -12.636723518371582
    8. '	' → logprob: -12.636723518371582
    9. '[' → logprob: -14.261723518371582
    10. ')' → logprob: -14.386723518371582

Token 348: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4482998251914978
    2. '       ' → logprob: -1.1982998847961426
    3. ' else' → logprob: -2.8232998847961426
    4. 'elif' → logprob: -9.323299407958984
    5. '	else' → logprob: -10.948299407958984
    6. '   ' → logprob: -11.573299407958984
    7. '<|end|>' → logprob: -11.698299407958984
    8. '
' → logprob: -11.698299407958984
    9. '        
' → logprob: -12.198299407958984
    10. '        ' → logprob: -12.198299407958984

Token 349: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3526379466056824
    2. ':' → logprob: -1.2276380062103271
    3. '       ' → logprob: -5.852637767791748
    4. '           ' → logprob: -6.727637767791748
    5. '   ' → logprob: -10.102638244628906
    6. ':

' → logprob: -11.227638244628906
    7. '):
' → logprob: -11.477638244628906
    8. ' if' → logprob: -11.727638244628906
    9. ' :
' → logprob: -11.977638244628906
    10. '          ' → logprob: -12.227638244628906

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021766355261206627
    2. ' self' → logprob: -4.396766185760498
    3. 'self' → logprob: -4.896766185760498
    4. '       ' → logprob: -7.521766185760498
    5. ' if' → logprob: -7.771766185760498
    6. '   ' → logprob: -7.896766185760498
    7. ' pass' → logprob: -9.396766662597656
    8. 'if' → logprob: -9.396766662597656
    9. 'pass' → logprob: -9.896766662597656
    10. '#' → logprob: -10.021766662597656

Token 351: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5964356660842896
    2. 'if' (adapté à ' if') → logprob: -0.8464356660842896
    3. '           ' → logprob: -4.221435546875
    4. 'pass' → logprob: -6.471435546875
    5. 'for' → logprob: -7.096435546875
    6. '#' → logprob: -7.221435546875
    7. ' if' → logprob: -8.096435546875
    8. ' self' → logprob: -8.096435546875
    9. '       ' → logprob: -8.346435546875
    10. 'z' → logprob: -8.721435546875

Token 352: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.13910628855228424
    2. 'self' → logprob: -2.139106273651123
    3. ' not' → logprob: -4.514106273651123
    4. '   ' → logprob: -8.264106750488281
    5. ' op' → logprob: -9.014106750488281
    6. 'not' → logprob: -9.014106750488281
    7. ' ' → logprob: -9.139106750488281
    8. 'x' → logprob: -9.389106750488281
    9. '	self' → logprob: -9.389106750488281
    10. ' (' → logprob: -9.639106750488281

Token 353: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0014071364421397448
    2. '.data' → logprob: -6.751407146453857
    3. '.move' → logprob: -9.2514066696167
    4. '.has' → logprob: -9.6264066696167
    5. '.' → logprob: -10.1264066696167
    6. '.key' → logprob: -10.6264066696167
    7. 'data' → logprob: -12.3764066696167
    8. '.fl' → logprob: -13.8764066696167
    9. 'A' → logprob: -14.0014066696167
    10. '.player' → logprob: -14.2514066696167

Token 354: 'lg' (ID: 15632)
  Prédit: 'lg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -9.376848902320489e-05
    2. 'l' → logprob: -9.375093460083008
    3. 'lf' → logprob: -12.000093460083008
    4. 'lag' → logprob: -14.375093460083008
    5. '_' → logprob: -14.375093460083008
    6. 'fg' → logprob: -14.750093460083008
    7. 'g' → logprob: -15.625093460083008
    8. '_l' → logprob: -16.000093460083008
    9. 'fl' → logprob: -16.000093460083008
    10. ' lg' → logprob: -16.250093460083008

Token 355: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.27099974633893e-05
    2. '_out' → logprob: -11.625012397766113
    3. ' _' → logprob: -13.375012397766113
    4. '_f' → logprob: -14.250012397766113
    5. 'fo' → logprob: -14.500012397766113
    6. 'out' → logprob: -16.06251335144043
    7. '‌' → logprob: -16.37501335144043
    8. '[' → logprob: -17.06251335144043
    9. '__' → logprob: -17.06251335144043
    10. '_
' → logprob: -17.25001335144043

Token 356: 'fo' (ID: 1070)
  Prédit: 'fo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.009132102131843567
    2. 'out' → logprob: -4.759131908416748
    3. 'fore' → logprob: -7.884131908416748
    4. 'outs' → logprob: -10.009132385253906
    5. 'fl' → logprob: -10.259132385253906
    6. ' fores' → logprob: -10.509132385253906
    7. '
' → logprob: -11.884132385253906
    8. '_out' → logprob: -12.759132385253906
    9. '_' → logprob: -12.759132385253906
    10. '```' → logprob: -12.884132385253906

Token 357: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002034038072451949
    2. 'ress' → logprob: -7.0020341873168945
    3. 'ores' → logprob: -8.752034187316895
    4. 'rs' → logprob: -9.002034187316895
    5. 'resp' → logprob: -9.252034187316895
    6. 'r' → logprob: -9.627034187316895
    7. 'resi' → logprob: -10.002034187316895
    8. 'resize' → logprob: -10.002034187316895
    9. 'rest' → logprob: -10.002034187316895
    10. 'resh' → logprob: -10.127034187316895

Token 358: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -3.79811754100956e-05
    2. 'igh' → logprob: -10.875038146972656
    3. 'i' → logprob: -12.500038146972656
    4. 'ig' → logprob: -12.875038146972656
    5. '```' → logprob: -13.125038146972656
    6. '_' → logprob: -13.625038146972656
    7. '=' → logprob: -13.750038146972656
    8. 'ighted' → logprob: -13.750038146972656
    9. 'IGHT' → logprob: -13.875038146972656
    10. 'ght' → logprob: -13.875038146972656

Token 359: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15119454264640808
    2. ':
' → logprob: -2.1511945724487305
    3. ' and' → logprob: -3.7761945724487305
    4. 'and' → logprob: -7.2761945724487305
    5. '==' → logprob: -8.90119457244873
    6. '           ' → logprob: -9.52619457244873
    7. ' ==' → logprob: -10.27619457244873
    8. ' or' → logprob: -10.40119457244873
    9. '               ' → logprob: -11.15119457244873
    10. ':

' → logprob: -11.15119457244873

Token 360: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23052982985973358
    2. '           ' → logprob: -1.98052978515625
    3. ' self' → logprob: -2.85552978515625
    4. ' for' → logprob: -5.98052978515625
    5. 'self' → logprob: -6.23052978515625
    6. ' if' → logprob: -6.35552978515625
    7. '   ' → logprob: -6.48052978515625
    8. '       ' → logprob: -7.98052978515625
    9. ',' → logprob: -8.10552978515625
    10. ' ' → logprob: -8.35552978515625

Token 361: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.621942400932312
    2. 'self' → logprob: -1.371942400932312
    3. '           ' → logprob: -2.3719425201416016
    4. '               ' → logprob: -3.2469425201416016
    5. 'a' → logprob: -4.246942520141602
    6. '#' → logprob: -4.746942520141602
    7. 'for' → logprob: -4.996942520141602
    8. ' if' → logprob: -5.371942520141602
    9. 'x' → logprob: -5.621942520141602
    10. 'p' → logprob: -5.746942520141602

Token 362: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28763043880462646
    2. 'self' → logprob: -1.6626304388046265
    3. ' not' → logprob: -2.912630558013916
    4. 'not' → logprob: -6.412630558013916
    5. ' x' → logprob: -6.412630558013916
    6. 'x' → logprob: -7.162630558013916
    7. ' op' → logprob: -7.912630558013916
    8. ' (' → logprob: -8.037630081176758
    9. ' ' → logprob: -8.412630081176758
    10. 'op' → logprob: -8.537630081176758

Token 363: '.is' (ID: 3109)
  Prédit: '.has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.06265484541654587
    2. '.f' → logprob: -3.687654733657837
    3. '.data' → logprob: -4.062654972076416
    4. '.move' → logprob: -4.437654972076416
    5. '.key' → logprob: -5.437654972076416
    6. '.do' → logprob: -6.687654972076416
    7. '.' → logprob: -7.687654972076416
    8. '.can' → logprob: -9.062654495239258
    9. '.have' → logprob: -9.687654495239258
    10. '.op' → logprob: -9.812654495239258

Token 364: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.2752677202224731
    2. '_w' → logprob: -1.6502677202224731
    3. '_possible' → logprob: -2.2752676010131836
    4. '_win' → logprob: -2.5252676010131836
    5. '_move' → logprob: -2.5252676010131836
    6. '_' → logprob: -3.2752676010131836
    7. '_can' → logprob: -3.4002676010131836
    8. '_out' → logprob: -3.7752676010131836
    9. '_ok' → logprob: -4.025267601013184
    10. 'Next' → logprob: -4.525267601013184

Token 365: '_used' (ID: 67016)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.04857386276125908
    2. '_out' → logprob: -3.7985739707946777
    3. '_move' → logprob: -4.173573970794678
    4. 'op' → logprob: -5.798573970794678
    5. '(x' → logprob: -6.298573970794678
    6. '_key' → logprob: -6.923573970794678
    7. '_' → logprob: -7.423573970794678
    8. 'move' → logprob: -7.548573970794678
    9. '_possible' → logprob: -7.923573970794678
    10. '_step' → logprob: -8.04857349395752

Token 366: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20155522227287292
    2. '(y' → logprob: -2.0765552520751953
    3. '(' → logprob: -3.5765552520751953
    4. '(self' → logprob: -4.451555252075195
    5. '():' → logprob: -4.826555252075195
    6. '()' → logprob: -5.326555252075195
    7. '((' → logprob: -6.076555252075195
    8. '(op' → logprob: -6.826555252075195
    9. ' (' → logprob: -8.326555252075195
    10. '_op' → logprob: -8.576555252075195

Token 367: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5443586707115173
    2. '):
' → logprob: -1.044358730316162
    3. ')' → logprob: -3.169358730316162
    4. ',' → logprob: -3.794358730316162
    5. '+' → logprob: -7.419358730316162
    6. '):
' → logprob: -8.044358253479004
    7. '):

' → logprob: -8.169358253479004
    8. '               ' → logprob: -8.169358253479004
    9. '                   ' → logprob: -8.169358253479004
    10. ' +' → logprob: -8.294358253479004

Token 368: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10765882581472397
    2. ':
' → logprob: -3.232658863067627
    3. ' and' → logprob: -3.607658863067627
    4. ':' → logprob: -4.857658863067627
    5. '                       ' → logprob: -4.982658863067627
    6. ' or' → logprob: -5.232658863067627
    7. '():
' → logprob: -5.482658863067627
    8. '               ' → logprob: -5.607658863067627
    9. '<|end|>' → logprob: -6.607658863067627
    10. '           ' → logprob: -6.732658863067627

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04027532786130905
    2. ' self' → logprob: -3.2902753353118896
    3. '                   ' → logprob: -6.1652750968933105
    4. '               ' → logprob: -10.290275573730469
    5. ' ' → logprob: -10.915275573730469
    6. 'if' → logprob: -11.415275573730469
    7. 'elf' → logprob: -11.540275573730469
    8. '   ' → logprob: -11.665275573730469
    9. '                       ' → logprob: -11.790275573730469
    10. '
' → logprob: -12.165275573730469

Token 370: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0037149270065128803
    2. 'move' → logprob: -5.6287150382995605
    3. '.' → logprob: -9.378714561462402
    4. '	move' → logprob: -11.753714561462402
    5. ' move' → logprob: -12.128714561462402
    6. ' .' → logprob: -12.503714561462402
    7. ' ' → logprob: -12.753714561462402
    8. 'f' → logprob: -13.378714561462402
    9. ':' → logprob: -13.378714561462402
    10. '
' → logprob: -14.003714561462402

Token 371: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.07094089686870575
    2. '(x' → logprob: -2.6959409713745117
    3. 'y' → logprob: -7.195940971374512
    4. '(' → logprob: -8.945940971374512
    5. 'x' → logprob: -9.195940971374512
    6. '   ' → logprob: -11.570940971374512
    7. ' (' → logprob: -12.445940971374512
    8. '(
' → logprob: -12.570940971374512
    9. ' y' → logprob: -13.570940971374512
    10. '	y' → logprob: -14.070940971374512

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015014449309092015
    2. ',x' → logprob: -9.500149726867676
    3. ' ,' → logprob: -9.625149726867676
    4. ')' → logprob: -11.875149726867676
    5. '(x' → logprob: -14.875149726867676
    6. ',
' → logprob: -14.875149726867676
    7. '```' → logprob: -14.875149726867676
    8. ' x' → logprob: -15.125149726867676
    9. ',y' → logprob: -15.250149726867676
    10. '   ' → logprob: -15.250149726867676

Token 373: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861456897109747
    2. ' x' → logprob: -4.758614540100098
    3. 'y' → logprob: -17.633615493774414
    4. '	x' → logprob: -17.633615493774414
    5. ' ' → logprob: -17.758615493774414
    6. '   ' → logprob: -19.508615493774414
    7. ' y' → logprob: -19.883615493774414
    8. ')x' → logprob: -20.008615493774414
    9. ')' → logprob: -21.008615493774414
    10. '(x' → logprob: -21.133615493774414

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942898631095886
    2. ')
' → logprob: -0.6942898631095886
    3. '               ' → logprob: -6.819289684295654
    4. '                   ' → logprob: -11.069290161132812
    5. ')
' → logprob: -11.069290161132812
    6. ')

' → logprob: -12.069290161132812
    7. '           ' → logprob: -12.319290161132812
    8. '       ' → logprob: -12.569290161132812
    9. ' )
' → logprob: -13.444290161132812
    10. '   ' → logprob: -14.444290161132812

Token 375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007084991782903671
    2. 'else' → logprob: -5.132084846496582
    3. ' else' → logprob: -7.007084846496582
    4. '<|end|>' → logprob: -9.007084846496582
    5. '                   ' → logprob: -10.007084846496582
    6. '           ' → logprob: -10.257084846496582
    7. 'elif' → logprob: -10.632084846496582
    8. '       ' → logprob: -12.382084846496582
    9. '                ' → logprob: -12.632084846496582
    10. '			' → logprob: -13.007084846496582

Token 376: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4496401250362396
    2. 'else' (adapté à ' else') → logprob: -1.324640154838562
    3. '               ' → logprob: -2.4496400356292725
    4. '           ' → logprob: -5.324640274047852
    5. 'elif' → logprob: -5.699640274047852
    6. ' elif' → logprob: -6.449640274047852
    7. '                   ' → logprob: -10.699640274047852
    8. '
' → logprob: -10.949640274047852
    9. '            ' → logprob: -11.324640274047852
    10. '	else' → logprob: -11.449640274047852

Token 377: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3522544205188751
    2. ':' → logprob: -1.8522543907165527
    3. '                   ' → logprob: -1.9772543907165527
    4. '               ' → logprob: -7.102254390716553
    5. '):
' → logprob: -8.727254867553711
    6. '           ' → logprob: -8.727254867553711
    7. '                       ' → logprob: -9.352254867553711
    8. ',' → logprob: -9.602254867553711
    9. ' :
' → logprob: -9.602254867553711
    10. '   ' → logprob: -9.727254867553711

Token 378: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37910619378089905
    2. 'self' → logprob: -1.2541061639785767
    3. ' self' → logprob: -3.754106283187866
    4. '               ' → logprob: -5.254106044769287
    5. '           ' → logprob: -7.254106044769287
    6. '   ' → logprob: -8.004106521606445
    7. '	self' → logprob: -8.504106521606445
    8. '                       ' → logprob: -9.004106521606445
    9. '[self' → logprob: -10.254106521606445
    10. '       ' → logprob: -10.754106521606445

Token 379: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019501789938658476
    2. ' self' → logprob: -6.251950263977051
    3. '                   ' → logprob: -10.87695026397705
    4. '	self' → logprob: -14.00195026397705
    5. '           ' → logprob: -14.25195026397705
    6. '   ' → logprob: -14.75195026397705
    7. '               ' → logprob: -15.00195026397705
    8. '                       ' → logprob: -16.376949310302734
    9. ' ' → logprob: -16.501949310302734
    10. '[self' → logprob: -16.626949310302734

Token 380: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.02992682345211506
    2. 'move' → logprob: -3.5299267768859863
    3. '.' → logprob: -8.904927253723145
    4. ' move' → logprob: -10.279927253723145
    5. '	move' → logprob: -12.279927253723145
    6. ' .' → logprob: -13.779927253723145
    7. '(move' → logprob: -16.154926300048828
    8. '_move' → logprob: -16.404926300048828
    9. '.m' → logprob: -16.654926300048828
    10. ').' → logprob: -16.904926300048828

Token 381: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.780830830801278e-05
    2. '(' → logprob: -9.37508773803711
    3. 'x' → logprob: -12.75008773803711
    4. '(
' → logprob: -16.87508773803711
    5. '(y' → logprob: -17.00008773803711
    6. ' (' → logprob: -18.25008773803711
    7. ' x' → logprob: -18.50008773803711
    8. '	x' → logprob: -18.87508773803711
    9. '   ' → logprob: -20.25008773803711
    10. ',x' → logprob: -20.62508773803711

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014978687977418303
    2. ',y' → logprob: -9.250149726867676
    3. ' ,' → logprob: -9.875149726867676
    4. ')' → logprob: -14.375149726867676
    5. ',x' → logprob: -14.500149726867676
    6. '<|end|>' → logprob: -14.500149726867676
    7. '(y' → logprob: -15.125149726867676
    8. 'y' → logprob: -15.750149726867676
    9. ' y' → logprob: -16.500150680541992
    10. '(' → logprob: -16.875150680541992

Token 383: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011703446507453918
    2. ' y' → logprob: -6.7511701583862305
    3. 'x' → logprob: -15.87617015838623
    4. '	y' → logprob: -19.501171112060547
    5. '<|end|>' → logprob: -19.501171112060547
    6. ')y' → logprob: -20.876171112060547
    7. ' ' → logprob: -21.626171112060547
    8. ''y' → logprob: -22.001171112060547
    9. 'y's' → logprob: -22.251171112060547
    10. '   ' → logprob: -22.626171112060547

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007107630372047424
    2. ')
' → logprob: -7.250710964202881
    3. ' )' → logprob: -15.250710487365723
    4. ')

' → logprob: -15.625710487365723
    5. '<|end|>' → logprob: -16.50071144104004
    6. ')
' → logprob: -16.62571144104004
    7. '       ' → logprob: -16.87571144104004
    8. ')#' → logprob: -17.75071144104004
    9. ')return' → logprob: -18.00071144104004
    10. '               ' → logprob: -18.00071144104004

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036665869411081076
    2. 'else' → logprob: -5.628666400909424
    3. ' else' → logprob: -10.378666877746582
    4. '               ' → logprob: -10.753666877746582
    5. 'def' → logprob: -11.503666877746582
    6. '       ' → logprob: -13.503666877746582
    7. '...' → logprob: -14.378666877746582
    8. '{
' → logprob: -14.378666877746582
    9. 'elif' → logprob: -14.753666877746582
    10. '   ' → logprob: -14.878666877746582

Token 386: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7797593474388123
    2. 'else' (adapté à ' else') → logprob: -0.9047593474388123
    3. '<|end|>' → logprob: -2.154759407043457
    4. '       ' → logprob: -4.279759407043457
    5. '
' → logprob: -5.404759407043457
    6. '	else' → logprob: -7.404759407043457
    7. ' ' → logprob: -7.529759407043457
    8. '           ' → logprob: -7.779759407043457
    9. 'elif' → logprob: -8.279759407043457
    10. '<|end|>' → logprob: -8.404759407043457

Token 387: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4568997025489807
    2. '               ' → logprob: -1.331899642944336
    3. ':' → logprob: -2.456899642944336
    4. '           ' → logprob: -4.081899642944336
    5. '       ' → logprob: -9.581899642944336
    6. '                   ' → logprob: -10.831899642944336
    7. '   ' → logprob: -11.081899642944336
    8. '):
' → logprob: -11.081899642944336
    9. '():
' → logprob: -11.206899642944336
    10. 'self' → logprob: -11.706899642944336

Token 388: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4907681941986084
    2. 'self' → logprob: -0.9907681941986084
    3. ' self' → logprob: -4.9907684326171875
    4. '               ' → logprob: -5.2407684326171875
    5. '       ' → logprob: -5.8657684326171875
    6. '   ' → logprob: -7.2407684326171875
    7. 'pass' → logprob: -7.2407684326171875
    8. ' pass' → logprob: -9.740768432617188
    9. '                   ' → logprob: -10.115768432617188
    10. 'if' → logprob: -10.490768432617188

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01712815836071968
    2. '               ' → logprob: -4.517127990722656
    3. ' self' → logprob: -5.392127990722656
    4. '           ' → logprob: -7.392127990722656
    5. '                   ' → logprob: -8.392127990722656
    6. '   ' → logprob: -8.642127990722656
    7. 'if' → logprob: -9.017127990722656
    8. 'return' → logprob: -9.142127990722656
    9. '       ' → logprob: -9.642127990722656
    10. 'pass' → logprob: -9.892127990722656

Token 390: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0019567059352993965
    2. '.' → logprob: -7.126956939697266
    3. 'move' → logprob: -7.251956939697266
    4. '.f' → logprob: -7.751956939697266
    5. 'f' → logprob: -12.501956939697266
    6. '.mov' → logprob: -13.001956939697266
    7. '.do' → logprob: -13.626956939697266
    8. ' move' → logprob: -13.751956939697266
    9. ' .' → logprob: -13.751956939697266
    10. '	move' → logprob: -14.876956939697266

Token 391: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000632139970548451
    2. '(' → logprob: -7.375632286071777
    3. '()' → logprob: -12.750632286071777
    4. 'x' → logprob: -13.000632286071777
    5. '(
' → logprob: -15.625632286071777
    6. '(None' → logprob: -16.50063133239746
    7. '(y' → logprob: -17.12563133239746
    8. '('' → logprob: -17.12563133239746
    9. '<|end|>' → logprob: -17.12563133239746
    10. '(s' → logprob: -17.25063133239746

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017195509281009436
    2. ',y' → logprob: -9.375171661376953
    3. ' ,' → logprob: -9.500171661376953
    4. ')' → logprob: -12.000171661376953
    5. '<|end|>' → logprob: -13.125171661376953
    6. ',x' → logprob: -13.750171661376953
    7. ',
' → logprob: -13.875171661376953
    8. ' y' → logprob: -14.250171661376953
    9. '+' → logprob: -15.125171661376953
    10. 'y' → logprob: -15.250171661376953

Token 393: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06196768581867218
    2. ' y' → logprob: -2.811967611312866
    3. 'x' → logprob: -17.186967849731445
    4. ')' → logprob: -17.436967849731445
    5. '<|end|>' → logprob: -17.686967849731445
    6. ')y' → logprob: -18.186967849731445
    7. '	y' → logprob: -18.936967849731445
    8. ' ' → logprob: -19.811967849731445
    9. 'Y' → logprob: -20.936967849731445
    10. ',y' → logprob: -21.186967849731445

Token 394: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008068907191045582
    2. ')
' → logprob: -7.12580680847168
    3. '<|end|>' → logprob: -13.62580680847168
    4. ' )' → logprob: -14.87580680847168
    5. ')

' → logprob: -15.00080680847168
    6. '       ' → logprob: -15.87580680847168
    7. '
' → logprob: -16.12580680847168
    8. ')return' → logprob: -16.37580680847168
    9. ')#' → logprob: -17.00080680847168
    10. '),' → logprob: -17.12580680847168

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10448913276195526
    2. 'def' → logprob: -3.3544890880584717
    3. '       ' → logprob: -3.4794890880584717
    4. '    
' → logprob: -4.979489326477051
    5. ' ' → logprob: -5.229489326477051
    6. '  ' → logprob: -5.354489326477051
    7. '<|end|>' → logprob: -5.354489326477051
    8. ' def' → logprob: -6.479489326477051
    9. '  
' → logprob: -6.604489326477051
    10. '```' → logprob: -6.729489326477051

Token 396: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2622166872024536
    2. '(
' → logprob: -3.262216567993164
    3. '_' → logprob: -3.387216567993164
    4. ')' → logprob: -3.387216567993164
    5. 'def' (adapté à ' def') → logprob: -3.637216567993164
    6. '   ' → logprob: -3.762216567993164
    7. '<|end|>' → logprob: -4.137216567993164
    8. ' ' → logprob: -4.262216567993164
    9. ',' → logprob: -4.512216567993164
    10. ':' → logprob: -5.262216567993164

Token 397: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.6849690079689026
    2. 'move' → logprob: -1.0599689483642578
    3. ' is' → logprob: -2.434968948364258
    4. 'is' → logprob: -2.809968948364258
    5. ' has' → logprob: -7.309968948364258
    6. 'has' → logprob: -7.809968948364258
    7. ' can' → logprob: -8.059968948364258
    8. 'can' → logprob: -9.434968948364258
    9. '_move' → logprob: -10.434968948364258
    10. '	move' → logprob: -11.122468948364258

Token 398: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.643152740551159e-05
    2. '(' → logprob: -10.250036239624023
    3. '(s' → logprob: -14.000036239624023
    4. 'self' → logprob: -16.375036239624023
    5. ' (' → logprob: -17.375036239624023
    6. '(
' → logprob: -17.875036239624023
    7. '(sel' → logprob: -18.750036239624023
    8. 's' → logprob: -18.875036239624023
    9. '(Self' → logprob: -18.875036239624023
    10. '   ' → logprob: -19.000036239624023

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. 'self' → logprob: -11.750014305114746
    3. ' ,' → logprob: -12.125014305114746
    4. '(self' → logprob: -14.125014305114746
    5. ',x' → logprob: -16.000015258789062
    6. ',self' → logprob: -16.000015258789062
    7. ',
' → logprob: -16.500015258789062
    8. ')' → logprob: -17.375015258789062
    9. '   ' → logprob: -17.625015258789062
    10. ' self' → logprob: -18.250015258789062

Token 400: ' frm' (ID: 45032)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.5051040053367615
    2. 'winner' → logprob: -1.6301040649414062
    3. 'w' → logprob: -3.1301040649414062
    4. 'from' → logprob: -3.5051040649414062
    5. 'x' → logprob: -3.5051040649414062
    6. 'to' → logprob: -3.6301040649414062
    7. 'a' → logprob: -4.005104064941406
    8. ' winner' → logprob: -4.630104064941406
    9. ' win' → logprob: -4.630104064941406
    10. 'self' → logprob: -5.380104064941406

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006295174825936556
    2. ' ,' → logprob: -7.375629425048828
    3. '_,' → logprob: -13.250629425048828
    4. ',
' → logprob: -14.250629425048828
    5. 'self' → logprob: -15.500629425048828
    6. '‌,' → logprob: -16.750629425048828
    7. ',x' → logprob: -17.000629425048828
    8. ')' → logprob: -17.125629425048828
    9. ' ' → logprob: -17.250629425048828
    10. ',self' → logprob: -17.625629425048828

Token 402: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -5.4192871175473556e-05
    2. ' to' → logprob: -9.875054359436035
    3. '	to' → logprob: -13.000054359436035
    4. 't' → logprob: -15.375054359436035
    5. 'too' → logprob: -16.12505340576172
    6. 'To' → logprob: -16.75005340576172
    7. '_to' → logprob: -17.12505340576172
    8. '(to' → logprob: -17.87505340576172
    9. '[to' → logprob: -17.87505340576172
    10. 'toc' → logprob: -18.62505340576172

Token 403: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1270807683467865
    2. '):
' → logprob: -2.1270806789398193
    3. '):
' → logprob: -9.002080917358398
    4. ')' → logprob: -11.377080917358398
    5. ' ):' → logprob: -11.377080917358398
    6. '):

' → logprob: -12.877080917358398
    7. ',' → logprob: -13.377080917358398
    8. ' ):
' → logprob: -14.127080917358398
    9. ':' → logprob: -14.752080917358398
    10. '   ' → logprob: -15.127080917358398

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005670187063515186
    2. '   ' → logprob: -6.380670070648193
    3. ' self' → logprob: -6.380670070648193
    4. 'self' → logprob: -7.255670070648193
    5. ' if' → logprob: -7.380670070648193
    6. ' ' → logprob: -8.380670547485352
    7. '	' → logprob: -9.005670547485352
    8. 'if' → logprob: -9.255670547485352
    9. '```' → logprob: -9.255670547485352
    10. '
' → logprob: -9.505670547485352

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05938546732068062
    2. 'if' → logprob: -3.4343855381011963
    3. '       ' → logprob: -3.6843855381011963
    4. ' self' → logprob: -8.809385299682617
    5. '   ' → logprob: -9.309385299682617
    6. ' if' → logprob: -10.309385299682617
    7. '	self' → logprob: -11.309385299682617
    8. '           ' → logprob: -12.059385299682617
    9. '#' → logprob: -12.809385299682617
    10. '```' → logprob: -13.934385299682617

Token 406: '.move' (ID: 24425)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.500004768371582
    3. '.move' → logprob: -14.000004768371582
    4. 'data' → logprob: -14.750004768371582
    5. ' .' → logprob: -16.6250057220459
    6. ').' → logprob: -17.6250057220459
    7. '
' → logprob: -18.2500057220459
    8. '.dat' → logprob: -18.6250057220459
    9. '.Data' → logprob: -18.8750057220459
    10. '].' → logprob: -19.1250057220459

Token 407: '_history' (ID: 45451)
  Prédit: '_history'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_history' → logprob: -9.221884101862088e-05
    2. '[' → logprob: -9.500092506408691
    3. 's' → logprob: -11.875092506408691
    4. '[to' → logprob: -12.875092506408691
    5. 'history' → logprob: -13.000092506408691
    6. '[_' → logprob: -13.250092506408691
    7. '[from' → logprob: -14.125092506408691
    8. '_hist' → logprob: -14.125092506408691
    9. 'History' → logprob: -14.375092506408691
    10. '_HISTORY' → logprob: -14.625092506408691

Token 408: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0006314247148111463
    2. '[' → logprob: -7.375631332397461
    3. 'self' → logprob: -13.000631332397461
    4. '[to' → logprob: -13.375631332397461
    5. ' self' → logprob: -14.625631332397461
    6. ' [' → logprob: -15.250631332397461
    7. '[
' → logprob: -15.375631332397461
    8. '	self' → logprob: -17.12563133239746
    9. 'frm' → logprob: -17.87563133239746
    10. '```' → logprob: -17.87563133239746

Token 409: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.375000953674316
    3. 'key' → logprob: -15.625000953674316
    4. ' .' → logprob: -17.125
    5. ' key' → logprob: -18.5
    6. '.
' → logprob: -18.875
    7. '.move' → logprob: -19.125
    8. '.Key' → logprob: -20.25
    9. ':key' → logprob: -20.75
    10. '_key' → logprob: -20.875

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002930366899818182
    2. ']=' → logprob: -8.250292778015137
    3. ' ]' → logprob: -10.375292778015137
    4. ']="' → logprob: -14.875292778015137
    5. ']+=' → logprob: -16.375293731689453
    6. '=' → logprob: -16.875293731689453
    7. ']='' → logprob: -17.125293731689453
    8. '][' → logprob: -17.750293731689453
    9. '[' → logprob: -17.750293731689453
    10. ']
' → logprob: -18.000293731689453

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14561456441879272
    2. '=' → logprob: -2.0206146240234375
    3. '[' → logprob: -6.0206146240234375
    4. ']' → logprob: -8.645614624023438
    5. '+=' → logprob: -8.645614624023438
    6. ' +=' → logprob: -9.020614624023438
    7. ']=' → logprob: -11.770614624023438
    8. ' ="' → logprob: -11.895614624023438
    9. '[to' → logprob: -12.520614624023438
    10. ' ' → logprob: -12.895614624023438

Token 412: ' self' (ID: 1051)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.19248664379119873
    2. '"' → logprob: -2.4424867630004883
    3. '["' → logprob: -2.5674867630004883
    4. ' chr' → logprob: -5.067486763000488
    5. '['' → logprob: -7.067486763000488
    6. '(chr' → logprob: -7.067486763000488
    7. 'str' → logprob: -7.317486763000488
    8. ''' → logprob: -7.442486763000488
    9. ' "' → logprob: -7.567486763000488
    10. '"A' → logprob: -7.692486763000488

Token 413: '.num' (ID: 19403)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1412211656570435
    2. 'op' → logprob: -1.1412211656570435
    3. 'frm' → logprob: -2.516221046447754
    4. 'data' → logprob: -3.016221046447754
    5. 'f' → logprob: -3.141221046447754
    6. '["' → logprob: -3.516221046447754
    7. 'to' → logprob: -3.641221046447754
    8. '.frm' → logprob: -3.766221046447754
    9. ' ' → logprob: -3.891221046447754
    10. '[' → logprob: -3.891221046447754

Token 414: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.31686949729919434
    2. 'to' → logprob: -1.9418694972991943
    3. '2' → logprob: -2.4418694972991943
    4. 's' → logprob: -3.4418694972991943
    5. 'ber' → logprob: -5.066869735717773
    6. '[' → logprob: -7.191869735717773
    7. 'To' → logprob: -7.566869735717773
    8. 'str' → logprob: -8.191869735717773
    9. '(frm' → logprob: -8.441869735717773
    10. 't' → logprob: -8.566869735717773

Token 415: '_char' (ID: 23398)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.39944177865982056
    2. '_str' → logprob: -1.5244417190551758
    3. 'name' → logprob: -2.774441719055176
    4. '_to' → logprob: -3.899441719055176
    5. '_name' → logprob: -4.524441719055176
    6. 'to' → logprob: -5.149441719055176
    7. 'ber' → logprob: -5.774441719055176
    8. 'ame' → logprob: -6.149441719055176
    9. '_char' → logprob: -6.149441719055176
    10. '2' → logprob: -6.649441719055176

Token 416: '(to' (ID: 24042)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13304421305656433
    2. '(frm' → logprob: -2.3830442428588867
    3. '[self' → logprob: -3.7580442428588867
    4. '[' → logprob: -4.883044242858887
    5. '(' → logprob: -7.133044242858887
    6. 'self' → logprob: -8.883044242858887
    7. '(fr' → logprob: -9.383044242858887
    8. '(ord' → logprob: -9.508044242858887
    9. '((' → logprob: -9.883044242858887
    10. '[(' → logprob: -9.883044242858887

Token 417: ')
' (ID: 446)
  Prédit: '(frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(frm' → logprob: -0.19059301912784576
    2. '[' → logprob: -2.3155930042266846
    3. '(to' → logprob: -3.0655930042266846
    4. ')' → logprob: -3.9405930042266846
    5. '())' → logprob: -6.065593242645264
    6. '()[' → logprob: -6.440593242645264
    7. '[to' → logprob: -6.565593242645264
    8. 'frm' → logprob: -6.815593242645264
    9. '(self' → logprob: -7.315593242645264
    10. '(fr' → logprob: -7.815593242645264

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028462447226047516
    2. '
' → logprob: -6.3778462409973145
    3. 'self' → logprob: -7.5028462409973145
    4. '        
' → logprob: -8.627846717834473
    5. '	' → logprob: -9.127846717834473
    6. ' self' → logprob: -9.502846717834473
    7. '   ' → logprob: -10.252846717834473
    8. '  
' → logprob: -10.502846717834473
    9. ' 
' → logprob: -10.627846717834473
    10. ' ' → logprob: -11.127846717834473

Token 419: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02062048576772213
    2. '       ' → logprob: -4.145620346069336
    3. ' self' → logprob: -5.395620346069336
    4. '	self' → logprob: -10.520620346069336
    5. '   ' → logprob: -12.770620346069336
    6. '	' → logprob: -13.520620346069336
    7. '```' → logprob: -13.520620346069336
    8. ' ' → logprob: -13.770620346069336
    9. '[self' → logprob: -14.020620346069336
    10. '(self' → logprob: -14.395620346069336

Token 420: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00034177995985373855
    2. '.' → logprob: -8.875341415405273
    3. '.move' → logprob: -9.125341415405273
    4. ' .' → logprob: -10.375341415405273
    5. 'data' → logprob: -10.875341415405273
    6. '.update' → logprob: -10.875341415405273
    7. '.change' → logprob: -11.875341415405273
    8. '`.' → logprob: -12.875341415405273
    9. '
' → logprob: -13.125341415405273
    10. ').' → logprob: -13.875341415405273

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01818225532770157
    2. '[to' → logprob: -4.018182277679443
    3. '[from' → logprob: -10.393181800842285
    4. '```' → logprob: -14.643181800842285
    5. '[data' → logprob: -15.643181800842285
    6. ')[' → logprob: -15.768181800842285
    7. 'to' → logprob: -15.768181800842285
    8. '[src' → logprob: -15.893181800842285
    9. ' [' → logprob: -16.0181827545166
    10. '(frm' → logprob: -16.5181827545166

Token 422: 'frm' (ID: 51488)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2816787362098694
    2. 'frm' → logprob: -1.4066786766052246
    3. 'fr' → logprob: -8.156679153442383
    4. '[to' → logprob: -9.031679153442383
    5. '(frm' → logprob: -10.281679153442383
    6. ' to' → logprob: -10.531679153442383
    7. ' frm' → logprob: -10.656679153442383
    8. '[' → logprob: -11.281679153442383
    9. 'from' → logprob: -11.406679153442383
    10. 'form' → logprob: -13.156679153442383

Token 423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00862036645412445
    2. ']-' → logprob: -4.758620262145996
    3. ']+=' → logprob: -12.133620262145996
    4. ' ]' → logprob: -15.258620262145996
    5. ']
' → logprob: -16.008621215820312
    6. '-' → logprob: -17.008621215820312
    7. '']' → logprob: -17.508621215820312
    8. ' -' → logprob: -18.383621215820312
    9. '-=' → logprob: -18.383621215820312
    10. ']

' → logprob: -18.633621215820312

Token 424: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.06701706349849701
    2. ' -=' → logprob: -2.817017078399658
    3. '-' → logprob: -5.317017078399658
    4. '=' → logprob: -9.1920166015625
    5. '+=' → logprob: -11.3170166015625
    6. ']-' → logprob: -12.3170166015625
    7. ']' → logprob: -12.8170166015625
    8. ' -' → logprob: -12.9420166015625
    9. '[' → logprob: -13.3170166015625
    10. '>' → logprob: -13.3170166015625

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '１' → logprob: -18.625001907348633
    5. '
' → logprob: -19.375001907348633
    6. '+' → logprob: -20.000001907348633
    7. 'a' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.500001907348633
    9. 'from' → logprob: -20.625001907348633
    10. '-' → logprob: -20.750001907348633

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '<|end|>' → logprob: -18.875001907348633
    5. '-' → logprob: -19.625001907348633
    6. '
' → logprob: -19.875001907348633
    7. '１' → logprob: -20.125001907348633
    8. '  ' → logprob: -20.125001907348633
    9. '+' → logprob: -20.375001907348633
    10. '=' → logprob: -21.000001907348633

Token 427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.5027299822540954e-05
    2. '
' → logprob: -11.125055313110352
    3. '   ' → logprob: -11.125055313110352
    4. '<|end|>' → logprob: -11.625055313110352
    5. 'self' → logprob: -12.125055313110352
    6. '	' → logprob: -13.250055313110352
    7. ',' → logprob: -13.375055313110352
    8. '        
' → logprob: -13.875055313110352
    9. ' ' → logprob: -13.875055313110352
    10. '           ' → logprob: -14.000055313110352

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030648186802864075
    2. 'self' → logprob: -5.8780646324157715
    3. '   ' → logprob: -9.37806510925293
    4. '+' → logprob: -9.37806510925293
    5. ' self' → logprob: -10.62806510925293
    6. '
' → logprob: -10.62806510925293
    7. '        
' → logprob: -11.25306510925293
    8. ' ' → logprob: -12.00306510925293
    9. ' +' → logprob: -12.12806510925293
    10. '[self' → logprob: -13.12806510925293

Token 429: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00023321842309087515
    2. '       ' → logprob: -8.87523365020752
    3. ' self' → logprob: -9.37523365020752
    4. '[self' → logprob: -11.87523365020752
    5. 'to' → logprob: -14.12523365020752
    6. '	self' → logprob: -15.50023365020752
    7. 'data' → logprob: -15.62523365020752
    8. '           ' → logprob: -15.62523365020752
    9. '
' → logprob: -16.000232696533203
    10. '(self' → logprob: -16.125232696533203

Token 430: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -3.7697225252486533e-06
    2. 'data' → logprob: -12.625003814697266
    3. '.' → logprob: -14.750003814697266
    4. '[data' → logprob: -17.625003814697266
    5. ' data' → logprob: -18.375003814697266
    6. ' .' → logprob: -18.875003814697266
    7. '\data' → logprob: -18.875003814697266
    8. '.dat' → logprob: -20.000003814697266
    9. '<data' → logprob: -20.000003814697266
    10. '	data' → logprob: -20.125003814697266

Token 431: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. 'to' → logprob: -17.25
    4. '[from' → logprob: -17.375
    5. '
' → logprob: -17.625
    6. '```' → logprob: -18.25
    7. ' [' → logprob: -19.375
    8. '[
' → logprob: -19.5
    9. '[tmp' → logprob: -20.625
    10. '

' → logprob: -20.75

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017555028898641467
    2. ']+=' → logprob: -6.376755714416504
    3. ' ]' → logprob: -9.876755714416504
    4. ')' → logprob: -14.251755714416504
    5. ' +=' → logprob: -14.751755714416504
    6. '+=' → logprob: -15.001755714416504
    7. '[' → logprob: -15.626755714416504
    8. '']' → logprob: -16.001754760742188
    9. ']+' → logprob: -16.001754760742188
    10. '"]' → logprob: -16.501754760742188

Token 433: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1603068858385086
    2. ' +=' → logprob: -1.9103069305419922
    3. ']+=' → logprob: -9.410306930541992
    4. '=' → logprob: -14.910306930541992
    5. ' ' → logprob: -15.660306930541992
    6. '+' → logprob: -15.660306930541992
    7. ' ' → logprob: -17.660306930541992
    8. '>' → logprob: -17.910306930541992
    9. '[' → logprob: -18.035306930541992
    10. '```' → logprob: -18.035306930541992

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '<|end|>' → logprob: -18.00247573852539
    4. '```' → logprob: -18.12747573852539
    5. '   ' → logprob: -18.25247573852539
    6. '0' → logprob: -18.25247573852539
    7. '  ' → logprob: -19.37747573852539
    8. '2' → logprob: -20.12747573852539
    9. '-' → logprob: -20.62747573852539
    10. '１' → logprob: -20.75247573852539

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -19.250003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '0' → logprob: -20.875003814697266
    6. '```' → logprob: -21.375003814697266
    7. '  ' → logprob: -22.000003814697266
    8. '
' → logprob: -22.125003814697266
    9. '１' → logprob: -22.375003814697266
    10. '-' → logprob: -22.625003814697266

Token 436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01642400026321411
    2. 'if' → logprob: -4.641424179077148
    3. ' if' → logprob: -5.266424179077148
    4. '<|end|>' → logprob: -7.516424179077148
    5. '   ' → logprob: -8.016424179077148
    6. '
' → logprob: -8.141424179077148
    7. 'def' → logprob: -9.016424179077148
    8. '```' → logprob: -9.891424179077148
    9. ',' → logprob: -10.141424179077148
    10. '	' → logprob: -10.391424179077148

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11602307856082916
    2. '<|end|>' → logprob: -3.116023063659668
    3. 'if' → logprob: -3.241023063659668
    4. 'def' → logprob: -4.241023063659668
    5. ' if' → logprob: -4.991023063659668
    6. '   ' → logprob: -6.116023063659668
    7. 'return' → logprob: -7.116023063659668
    8. 'self' → logprob: -8.116023063659668
    9. ' ' → logprob: -8.241023063659668
    10. '```' → logprob: -8.366023063659668

Token 438: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00046498890151269734
    2. '       ' → logprob: -8.375465393066406
    3. ' if' → logprob: -8.500465393066406
    4. 'def' → logprob: -11.000465393066406
    5. 'self' → logprob: -11.750465393066406
    6. '#' → logprob: -12.500465393066406
    7. '   ' → logprob: -13.125465393066406
    8. '	if' → logprob: -15.625465393066406
    9. '```' → logprob: -15.875465393066406
    10. 'for' → logprob: -16.500465393066406

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5327868461608887
    2. ' self' → logprob: -1.0327868461608887
    3. 'min' → logprob: -3.7827868461608887
    4. ' min' → logprob: -3.7827868461608887
    5. 'sum' → logprob: -5.907786846160889
    6. 'max' → logprob: -6.282786846160889
    7. ' any' → logprob: -6.407786846160889
    8. '0' → logprob: -6.407786846160889
    9. ' max' → logprob: -6.907786846160889
    10. ' sum' → logprob: -7.032786846160889

Token 440: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.002379450248554349
    2. '.check' → logprob: -6.752379417419434
    3. '.f' → logprob: -6.877379417419434
    4. '.is' → logprob: -9.252379417419434
    5. '.has' → logprob: -9.877379417419434
    6. '.' → logprob: -11.127379417419434
    7. '.move' → logprob: -11.627379417419434
    8. 'data' → logprob: -13.377379417419434
    9. '.d' → logprob: -13.502379417419434
    10. '.get' → logprob: -14.627379417419434

Token 441: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018161412328481674
    2. '[to' → logprob: -4.018161296844482
    3. '[from' → logprob: -11.51816177368164
    4. ' [' → logprob: -14.51816177368164
    5. 'to' → logprob: -15.76816177368164
    6. '[x' → logprob: -15.89316177368164
    7. '[in' → logprob: -16.01816177368164
    8. '==' → logprob: -16.01816177368164
    9. '[data' → logprob: -16.14316177368164
    10. '[out' → logprob: -16.39316177368164

Token 442: 'frm' (ID: 51488)
  Prédit: 'frm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.0171769130975008
    2. 'to' → logprob: -4.142177104949951
    3. '[to' → logprob: -7.267177104949951
    4. '[' → logprob: -8.142176628112793
    5. '(frm' → logprob: -9.517176628112793
    6. '[from' → logprob: -10.642176628112793
    7. 'fr' → logprob: -10.892176628112793
    8. 'from' → logprob: -11.017176628112793
    9. ' frm' → logprob: -11.767176628112793
    10. '0' → logprob: -12.392176628112793

Token 443: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12193563580513
    2. ' ==' → logprob: -2.2469356060028076
    3. ']==' → logprob: -5.746935844421387
    4. ']' → logprob: -5.996935844421387
    5. '<' → logprob: -6.371935844421387
    6. '<=' → logprob: -6.496935844421387
    7. ' <=' → logprob: -9.121935844421387
    8. ' <' → logprob: -10.121935844421387
    9. ' ' → logprob: -11.371935844421387
    10. '=' → logprob: -12.246935844421387

Token 444: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10755883902311325
    2. '<' → logprob: -2.6075587272644043
    3. ' ==' → logprob: -3.6075587272644043
    4. '<=' → logprob: -6.982558727264404
    5. ' <' → logprob: -8.482559204101562
    6. ' <=' → logprob: -11.732559204101562
    7. ' ' → logprob: -14.982559204101562
    8. '=' → logprob: -15.232559204101562
    9. '===' → logprob: -15.732559204101562
    10. '==-' → logprob: -16.482559204101562

Token 445: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038717821007594466
    2. ' ' → logprob: -7.875387191772461
    3. '1' → logprob: -12.250387191772461
    4. '=' → logprob: -13.000387191772461
    5. '2' → logprob: -17.87538719177246
    6. '   ' → logprob: -19.00038719177246
    7. '==' → logprob: -19.12538719177246
    8. '۰' → logprob: -19.18788719177246
    9. '０' → logprob: -19.31288719177246
    10. '>' → logprob: -19.37538719177246

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '=' → logprob: -14.500001907348633
    4. '1' → logprob: -16.625001907348633
    5. '０' → logprob: -18.625001907348633
    6. '۰' → logprob: -19.125001907348633
    7. '```' → logprob: -20.562501907348633
    8. '   ' → logprob: -20.937501907348633
    9. 'zero' → logprob: -21.125001907348633
    10. 'at' → logprob: -21.312501907348633

Token 447: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1473602056503296
    2. ':' → logprob: -2.022360324859619
    3. ' or' → logprob: -5.397360324859619
    4. '       ' → logprob: -9.647359848022461
    5. '           ' → logprob: -10.397359848022461
    6. ' and' → logprob: -10.772359848022461
    7. ':
' → logprob: -11.772359848022461
    8. '   ' → logprob: -12.022359848022461
    9. ' :
' → logprob: -12.397359848022461
    10. '):
' → logprob: -12.897359848022461

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003643058007583022
    2. '       ' → logprob: -9.000364303588867
    3. '   ' → logprob: -9.125364303588867
    4. ' self' → logprob: -9.875364303588867
    5. 'self' → logprob: -10.125364303588867
    6. '
' → logprob: -10.875364303588867
    7. '               ' → logprob: -11.875364303588867
    8. '```' → logprob: -12.250364303588867
    9. ' ' → logprob: -12.375364303588867
    10. '            
' → logprob: -13.750364303588867

Token 449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17857296764850616
    2. '           ' → logprob: -2.3035728931427
    3. ' self' → logprob: -2.8035728931427
    4. '   ' → logprob: -6.053573131561279
    5. '       ' → logprob: -7.428573131561279
    6. ' ' → logprob: -9.678572654724121
    7. '	self' → logprob: -10.553572654724121
    8. '               ' → logprob: -12.053572654724121
    9. '  ' → logprob: -13.178572654724121
    10. '```' → logprob: -14.678572654724121

Token 450: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01417174469679594
    2. '.f' → logprob: -4.264171600341797
    3. '.fl' → logprob: -12.264171600341797
    4. 'ans' → logprob: -13.889171600341797
    5. '.flag' → logprob: -14.389171600341797
    6. ' .' → logprob: -14.389171600341797
    7. '.
' → logprob: -14.639171600341797
    8. 'f' → logprob: -15.264171600341797
    9. '.answer' → logprob: -15.389171600341797
    10. '.err' → logprob: -16.139171600341797

Token 451: 'ans' (ID: 616)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.1427774578332901
    2. 'ans' → logprob: -2.017777442932129
    3. 'flag' → logprob: -9.767777442932129
    4. 'f' → logprob: -11.017777442932129
    5. 'fg' → logprob: -12.267777442932129
    6. 'fr' → logprob: -12.892777442932129
    7. '   ' → logprob: -13.017777442932129
    8. '
' → logprob: -13.267777442932129
    9. 'flt' → logprob: -13.267777442932129
    10. 'out' → logprob: -13.517777442932129

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931493282318115
    2. ' =' → logprob: -0.6931493282318115
    3. ' ' → logprob: -13.69314956665039
    4. '="' → logprob: -15.19314956665039
    5. ' ="' → logprob: -15.81814956665039
    6. '＝' → logprob: -16.19314956665039
    7. '```' → logprob: -16.44314956665039
    8. ')' → logprob: -16.69314956665039
    9. '"' → logprob: -16.69314956665039
    10. '[' → logprob: -16.94314956665039

Token 453: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.002558660926297307
    2. '"' → logprob: -6.252558708190918
    3. ' "' → logprob: -7.377558708190918
    4. 'No' → logprob: -12.752558708190918
    5. ' No' → logprob: -14.252558708190918
    6. '“No' → logprob: -14.627558708190918
    7. ' ' → logprob: -15.502558708190918
    8. '	' → logprob: -15.752558708190918
    9. '"N' → logprob: -15.752558708190918
    10. ''' → logprob: -15.877558708190918

Token 454: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.000206401280593127
    2. '"No' → logprob: -8.500205993652344
    3. '"' → logprob: -12.875205993652344
    4. 'Impossible' → logprob: -16.125205993652344
    5. ' No' → logprob: -16.500205993652344
    6. ''' → logprob: -17.000205993652344
    7. '_No' → logprob: -17.125205993652344
    8. '-No' → logprob: -18.125205993652344
    9. '.No' → logprob: -18.375205993652344
    10. 'NO' → logprob: -18.625205993652344

Token 455: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19008953869342804
    2. '\n' → logprob: -2.190089464187622
    3. '           ' → logprob: -3.440089464187622
    4. '
' → logprob: -4.190089702606201
    5. '<|end|>' → logprob: -4.940089702606201
    6. '"
' → logprob: -6.065089702606201
    7. '       ' → logprob: -6.190089702606201
    8. '               ' → logprob: -7.315089702606201
    9. '")' → logprob: -7.565089702606201
    10. 'return' → logprob: -7.690089702606201

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000668713531922549
    2. '<|end|>' → logprob: -7.875668525695801
    3. 'return' → logprob: -8.7506685256958
    4. ' return' → logprob: -9.5006685256958
    5. '		' → logprob: -10.7506685256958
    6. '               ' → logprob: -11.6256685256958
    7. '       ' → logprob: -11.7506685256958
    8. '<|end|>' → logprob: -12.5006685256958
    9. '
' → logprob: -12.7506685256958
    10. '   ' → logprob: -13.1256685256958

Token 457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18019242584705353
    2. '           ' → logprob: -1.930192470550537
    3. ' self' → logprob: -3.930192470550537
    4. '       ' → logprob: -9.180191993713379
    5. '   ' → logprob: -10.930191993713379
    6. '	self' → logprob: -12.180191993713379
    7. ' ' → logprob: -13.305191993713379
    8. '               ' → logprob: -13.680191993713379
    9. '```' → logprob: -15.305191993713379
    10. 'return' → logprob: -15.680191993713379

Token 458: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.014485608786344528
    2. '.' → logprob: -4.264485836029053
    3. ' .' → logprob: -8.389485359191895
    4. '
' → logprob: -10.764485359191895
    5. 'fl' → logprob: -11.764485359191895
    6. '.fl' → logprob: -11.764485359191895
    7. '.
' → logprob: -11.764485359191895
    8. '.fml' → logprob: -11.889485359191895
    9. '	fl' → logprob: -12.139485359191895
    10. 'Flg' → logprob: -12.514485359191895

Token 459: 'lg' (ID: 15632)
  Prédit: 'lg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.003178544342517853
    2. 'l' → logprob: -5.753178596496582
    3. 'lag' → logprob: -15.253178596496582
    4. 'lng' → logprob: -16.003177642822266
    5. '\' → logprob: -16.253177642822266
    6. '	l' → logprob: -16.753177642822266
    7. '
' → logprob: -16.753177642822266
    8. ' lg' → logprob: -16.878177642822266
    9. ' l' → logprob: -17.003177642822266
    10. 'lf' → logprob: -17.128177642822266

Token 460: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -1.4974866644479334e-05
    2. '_' → logprob: -11.125015258789062
    3. '_OUT' → logprob: -16.875015258789062
    4. 'out' → logprob: -17.375015258789062
    5. ' _' → logprob: -18.125015258789062
    6. '_Out' → logprob: -19.125015258789062
    7. '_in' → logprob: -19.250015258789062
    8. '\' → logprob: -19.250015258789062
    9. 'Out' → logprob: -20.500015258789062
    10. '_outline' → logprob: -20.750015258789062

Token 461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725001811981
    2. ' =' → logprob: -1.1368725299835205
    3. '=True' → logprob: -13.511872291564941
    4. ' ' → logprob: -16.261873245239258
    5. '[' → logprob: -18.636873245239258
    6. '＝' → logprob: -19.386873245239258
    7. 'True' → logprob: -19.636873245239258
    8. '  ' → logprob: -20.136873245239258
    9. '=
' → logprob: -20.511873245239258
    10. '	' → logprob: -20.511873245239258

Token 462: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '=True' → logprob: -18.000158309936523
    4. '(True' → logprob: -19.375158309936523
    5. '.True' → logprob: -23.375158309936523
    6. 'true' → logprob: -23.875158309936523
    7. '_true' → logprob: -24.125158309936523
    8. '1' → logprob: -24.500158309936523
    9. 'False' → logprob: -24.750158309936523
    10. '   ' → logprob: -25.875158309936523

Token 463: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11487695574760437
    2. '       ' → logprob: -2.6148769855499268
    3. '<|end|>' → logprob: -3.3648769855499268
    4. '
' → logprob: -7.489876747131348
    5. '<|end|>' → logprob: -9.364876747131348
    6. '   ' → logprob: -10.239876747131348
    7. ' return' → logprob: -10.614876747131348
    8. '               ' → logprob: -10.989876747131348
    9. '		' → logprob: -11.114876747131348
    10. 'return' → logprob: -11.864876747131348

Token 464: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030953336507081985
    2. '<|end|>' → logprob: -3.9059534072875977
    3. '   ' → logprob: -4.780953407287598
    4. ' def' → logprob: -7.030953407287598
    5. '       ' → logprob: -8.030953407287598
    6. ')' → logprob: -8.655953407287598
    7. ' ' → logprob: -9.280953407287598
    8. '	def' → logprob: -9.405953407287598
    9. 'return' → logprob: -9.530953407287598
    10. '<|end|>' → logprob: -9.530953407287598

Token 466: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.38749200105667114
    2. 'staticmethod' → logprob: -1.1374919414520264
    3. 'classmethod' → logprob: -7.3874921798706055
    4. 'dat' → logprob: -13.512492179870605
    5. ' property' → logprob: -14.762492179870605
    6. 'static' → logprob: -17.38749122619629
    7. '@property' → logprob: -17.38749122619629
    8. '@' → logprob: -18.13749122619629
    9. 'cache' → logprob: -19.51249122619629
    10. 'l' → logprob: -20.76249122619629

Token 467: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008071291376836598
    2. ' def' → logprob: -7.625807285308838
    3. '   ' → logprob: -8.75080680847168
    4. '
' → logprob: -8.75080680847168
    5. '  
' → logprob: -13.75080680847168
    6. '    
' → logprob: -14.50080680847168
    7. '	def' → logprob: -15.00080680847168
    8. ' ' → logprob: -15.87580680847168
    9. ':def' → logprob: -16.00080680847168
    10. '(def' → logprob: -16.50080680847168

Token 468: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011081460979767144
    2. '
' → logprob: -9.500110626220703
    3. ' def' → logprob: -10.625110626220703
    4. '   ' → logprob: -11.500110626220703
    5. '  
' → logprob: -14.000110626220703
    6. '    
' → logprob: -14.375110626220703
    7. '	def' → logprob: -17.750110626220703
    8. ' 
' → logprob: -17.875110626220703
    9. '```' → logprob: -17.875110626220703
    10. ' ' → logprob: -18.125110626220703

Token 469: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.4849443838757e-06
    2. 'num' → logprob: -12.500004768371582
    3. '
' → logprob: -14.625004768371582
    4. ' def' → logprob: -15.125004768371582
    5. '   ' → logprob: -17.875003814697266
    6. 'char' → logprob: -18.750003814697266
    7. '```' → logprob: -20.500003814697266
    8. 'chr' → logprob: -21.125003814697266
    9. '    
' → logprob: -21.625003814697266
    10. '	def' → logprob: -21.875003814697266

Token 470: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -3.128163257315464e-07
    2. ' num' → logprob: -15.25
    3. 'char' → logprob: -18.25
    4. 'nums' → logprob: -21.25
    5. '	num' → logprob: -21.25
    6. '_num' → logprob: -22.25
    7. 'number' → logprob: -22.75
    8. '(num' → logprob: -22.875
    9. 'Num' → logprob: -23.0
    10. '   ' → logprob: -23.0

Token 471: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.054500666621607e-06
    2. 'to' → logprob: -13.12500286102295
    3. '_' → logprob: -14.25000286102295
    4. 'To' → logprob: -15.25000286102295
    5. '_t' → logprob: -16.500003814697266
    6. '_TO' → logprob: -17.375003814697266
    7. ' _' → logprob: -18.500003814697266
    8. ' to' → logprob: -19.000003814697266
    9. '2' → logprob: -19.250003814697266
    10. '__' → logprob: -19.375003814697266

Token 472: '_char' (ID: 23398)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -5.872261317563243e-05
    2. '_char' → logprob: -9.750059127807617
    3. 'chr' → logprob: -15.000059127807617
    4. 'str' → logprob: -18.000059127807617
    5. ' char' → logprob: -18.375059127807617
    6. '<char' → logprob: -19.125059127807617
    7. 'chars' → logprob: -19.875059127807617
    8. '-char' → logprob: -20.250059127807617
    9. 'Char' → logprob: -20.375059127807617
    10. '.char' → logprob: -20.500059127807617

Token 473: '(z' (ID: 27674)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.049336668103933334
    2. '(n' → logprob: -3.0493366718292236
    3. '(x' → logprob: -7.4243364334106445
    4. '(i' → logprob: -9.299336433410645
    5. '(' → logprob: -10.049336433410645
    6. '(number' → logprob: -12.049336433410645
    7. '(idx' → logprob: -13.174336433410645
    8. '(cls' → logprob: -13.174336433410645
    9. '(c' → logprob: -13.424336433410645
    10. '(k' → logprob: -13.549336433410645

Token 474: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0060051134787499905
    2. '):
' → logprob: -5.13100528717041
    3. ')' → logprob: -9.63100528717041
    4. ':' → logprob: -12.50600528717041
    5. ' ):' → logprob: -12.63100528717041
    6. '):
' → logprob: -13.75600528717041
    7. '   ' → logprob: -13.88100528717041
    8. ',' → logprob: -13.88100528717041
    9. '):

' → logprob: -15.25600528717041
    10. ')：' → logprob: -16.131004333496094

Token 475: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3229023218154907
    2. ' return' → logprob: -1.6979023218154907
    3. '   ' → logprob: -2.697902202606201
    4. '       ' → logprob: -4.697902202606201
    5. '"' → logprob: -4.822902202606201
    6. '	return' → logprob: -5.447902202606201
    7. '["' → logprob: -6.197902202606201
    8. 'chr' → logprob: -7.072902202606201
    9. '['' → logprob: -7.697902202606201
    10. ' chr' → logprob: -8.69790267944336

Token 476: ' chars' (ID: 47991)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024172518402338028
    2. '"' → logprob: -3.89917254447937
    3. ' return' → logprob: -6.524172306060791
    4. '["' → logprob: -6.774172306060791
    5. 'chr' → logprob: -7.149172306060791
    6. '   ' → logprob: -9.14917278289795
    7. '['' → logprob: -10.27417278289795
    8. ''' → logprob: -10.52417278289795
    9. 'if' → logprob: -11.39917278289795
    10. '	return' → logprob: -11.52417278289795

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38702791929244995
    2. ' =' → logprob: -1.1370279788970947
    3. '=['' → logprob: -9.012027740478516
    4. '=[' → logprob: -11.137027740478516
    5. '=["' → logprob: -12.387027740478516
    6. '=[]' → logprob: -12.512027740478516
    7. '=[
' → logprob: -12.762027740478516
    8. ' =[' → logprob: -13.137027740478516
    9. '=
' → logprob: -13.762027740478516
    10. 'return' → logprob: -14.012027740478516

Token 478: ' ['' (ID: 5140)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.055422548204660416
    2. '['' → logprob: -3.55542254447937
    3. '"' → logprob: -3.80542254447937
    4. ' ["' → logprob: -6.305422782897949
    5. ' ['' → logprob: -7.180422782897949
    6. '"A' → logprob: -8.30542278289795
    7. ' "' → logprob: -8.55542278289795
    8. ''' → logprob: -10.43042278289795
    9. '("' → logprob: -11.05542278289795
    10. '"C' → logprob: -11.55542278289795

Token 479: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008827611454762518
    2. ''A' → logprob: -7.125882625579834
    3. '"A' → logprob: -9.500883102416992
    4. ''' → logprob: -13.625883102416992
    5. '"' → logprob: -14.125883102416992
    6. ' A' → logprob: -14.375883102416992
    7. 'a' → logprob: -15.125883102416992
    8. '_A' → logprob: -15.125883102416992
    9. 'Ａ' → logprob: -15.625883102416992
    10. '\'' → logprob: -17.125883102416992

Token 480: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.001182607957161963
    2. '','' → logprob: -6.751182556152344
    3. ''' → logprob: -11.376182556152344
    4. '',"' → logprob: -14.251182556152344
    5. '",' → logprob: -15.376182556152344
    6. 'B' → logprob: -16.376182556152344
    7. '',
' → logprob: -16.751182556152344
    8. ' ',' → logprob: -17.251182556152344
    9. '"',' → logprob: -18.251182556152344
    10. ''',' → logprob: -19.001182556152344

Token 481: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014200054109096527
    2. ' '' → logprob: -4.264200210571289
    3. 'B' → logprob: -10.639200210571289
    4. ' B' → logprob: -11.889200210571289
    5. '"B' → logprob: -13.014200210571289
    6. ''S' → logprob: -13.639200210571289
    7. ''A' → logprob: -14.139200210571289
    8. ' ' → logprob: -15.014200210571289
    9. ''b' → logprob: -15.389200210571289
    10. ''T' → logprob: -15.514200210571289

Token 482: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.1888679839321412e-05
    2. ''' → logprob: -10.750021934509277
    3. ' B' → logprob: -14.750021934509277
    4. 'C' → logprob: -19.00002098083496
    5. '	B' → logprob: -19.00002098083496
    6. '"B' → logprob: -19.75002098083496
    7. '
' → logprob: -20.12502098083496
    8. ' ' → logprob: -20.37502098083496
    9. 'b' → logprob: -20.37502098083496
    10. '   ' → logprob: -21.00002098083496

Token 483: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0004207826859783381
    2. ',' → logprob: -8.000420570373535
    3. 'C' → logprob: -10.250420570373535
    4. ''C' → logprob: -10.375420570373535
    5. '','' → logprob: -11.500420570373535
    6. ''' → logprob: -12.125420570373535
    7. ','' → logprob: -13.750420570373535
    8. '",' → logprob: -14.250420570373535
    9. ' ',' → logprob: -14.250420570373535
    10. '',
' → logprob: -14.625420570373535

Token 484: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0019628899171948433
    2. ' '' → logprob: -6.251962661743164
    3. 'C' → logprob: -10.501962661743164
    4. ''' → logprob: -12.126962661743164
    5. ' C' → logprob: -14.126962661743164
    6. '"C' → logprob: -15.626962661743164
    7. ' ' → logprob: -15.876962661743164
    8. ''A' → logprob: -16.001962661743164
    9. ''S' → logprob: -16.126962661743164
    10. '  ' → logprob: -17.001962661743164

Token 485: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04860473424196243
    2. ''C' → logprob: -3.048604726791382
    3. ''' → logprob: -11.173604965209961
    4. ' C' → logprob: -12.923604965209961
    5. ' '' → logprob: -15.173604965209961
    6. '']' → logprob: -15.423604965209961
    7. '['' → logprob: -15.673604965209961
    8. '"C' → logprob: -16.29860496520996
    9. '`' → logprob: -17.04860496520996
    10. '   ' → logprob: -17.67360496520996

Token 486: '']
' (ID: 9756)
  Prédit: '']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']
' → logprob: -0.25277242064476013
    2. '']' → logprob: -1.5027724504470825
    3. ']
' → logprob: -7.377772331237793
    4. ']' → logprob: -9.002772331237793
    5. '']
' → logprob: -9.377772331237793
    6. ''][' → logprob: -12.002772331237793
    7. '']

' → logprob: -13.377772331237793
    8. ''' → logprob: -13.502772331237793
    9. '       ' → logprob: -15.252772331237793
    10. '"]
' → logprob: -15.377772331237793

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11782339215278625
    2. 'return' → logprob: -2.367823362350464
    3. ' return' → logprob: -4.367823600769043
    4. '
' → logprob: -5.867823600769043
    5. '	return' → logprob: -6.742823600769043
    6. '   ' → logprob: -7.742823600769043
    7. '[' → logprob: -9.367823600769043
    8. '<|end|>' → logprob: -9.367823600769043
    9. '```' → logprob: -10.242823600769043
    10. '	' → logprob: -10.242823600769043

Token 488: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05389418452978134
    2. ' return' → logprob: -3.303894281387329
    3. '       ' → logprob: -4.30389404296875
    4. '   ' → logprob: -6.30389404296875
    5. '	return' → logprob: -7.92889404296875
    6. ' ' → logprob: -12.30389404296875
    7. ':return' → logprob: -12.42889404296875
    8. '
' → logprob: -12.80389404296875
    9. '<|end|>' → logprob: -12.92889404296875
    10. '```' → logprob: -13.17889404296875

Token 489: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.004079470410943031
    2. ' chars' → logprob: -5.504079341888428
    3. '(chars' → logprob: -13.879079818725586
    4. 'char' → logprob: -16.129079818725586
    5. 'chr' → logprob: -17.504079818725586
    6. 'Chars' → logprob: -19.004079818725586
    7. '_chars' → logprob: -19.754079818725586
    8. 'characters' → logprob: -20.254079818725586
    9. 'c' → logprob: -20.879079818725586
    10. 'ch' → logprob: -21.379079818725586

Token 490: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.375000953674316
    3. 'z' → logprob: -15.375000953674316
    4. '[
' → logprob: -16.250001907348633
    5. ' [' → logprob: -18.500001907348633
    6. '[int' → logprob: -19.250001907348633
    7. '```' → logprob: -20.000001907348633
    8. '(z' → logprob: -20.250001907348633
    9. '	z' → logprob: -21.000001907348633
    10. '[[' → logprob: -21.000001907348633

Token 491: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016231719637289643
    2. '[' → logprob: -7.126623153686523
    3. '[z' → logprob: -7.126623153686523
    4. ' ]' → logprob: -11.501623153686523
    5. ']
' → logprob: -13.501623153686523
    6. '[
' → logprob: -13.626623153686523
    7. '<|end|>' → logprob: -14.126623153686523
    8. '][' → logprob: -14.751623153686523
    9. '[self' → logprob: -15.626623153686523
    10. 'z' → logprob: -16.251623153686523

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3067397177219391
    2. 'def' → logprob: -1.4317396879196167
    3. ' def' → logprob: -3.8067398071289062
    4. '```' → logprob: -6.181739807128906
    5. '<|end|>' → logprob: -7.681739807128906
    6. '	def' → logprob: -8.431739807128906
    7. ' ' → logprob: -8.806739807128906
    8. '       ' → logprob: -9.931739807128906
    9. '<|end|>' → logprob: -10.681739807128906
    10. '
' → logprob: -11.181739807128906

Token 493: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.050101395696401596
    2. '   ' → logprob: -3.3001012802124023
    3. ' def' → logprob: -4.425101280212402
    4. ' ' → logprob: -11.925101280212402
    5. '	def' → logprob: -12.925101280212402
    6. '
' → logprob: -13.175101280212402
    7. '```' → logprob: -13.550101280212402
    8. '  ' → logprob: -13.800101280212402
    9. '    
' → logprob: -14.050101280212402
    10. '       ' → logprob: -16.80010223388672

Token 494: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.11282805353403091
    2. ' is' → logprob: -2.237828016281128
    3. 'has' → logprob: -13.237828254699707
    4. 'num' → logprob: -14.112828254699707
    5. ' has' → logprob: -14.862828254699707
    6. '_is' → logprob: -14.862828254699707
    7. 'move' → logprob: -14.987828254699707
    8. '	is' → logprob: -15.237828254699707
    9. 'def' → logprob: -15.487828254699707
    10. '   ' → logprob: -15.737828254699707

Token 495: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.4259644558478612e-05
    2. '_used' → logprob: -11.500014305114746
    3. 'next' → logprob: -12.625014305114746
    4. 'Next' → logprob: -15.375014305114746
    5. ' next' → logprob: -16.00001335144043
    6. '_' → logprob: -16.12501335144043
    7. '_has' → logprob: -16.62501335144043
    8. '_NEXT' → logprob: -16.87501335144043
    9. '_possible' → logprob: -17.75001335144043
    10. '_first' → logprob: -17.87501335144043

Token 496: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.200166469876422e-06
    2. 'used' → logprob: -12.625004768371582
    3. '_use' → logprob: -14.375004768371582
    4. '_op' → logprob: -14.875004768371582
    5. '_using' → logprob: -15.375004768371582
    6. '_' → logprob: -15.750004768371582
    7. '_next' → logprob: -16.1250057220459
    8. 'Used' → logprob: -16.2500057220459
    9. '_USED' → logprob: -16.2500057220459
    10. '_usage' → logprob: -16.3750057220459

Token 497: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.375032424926758
    3. '(s' → logprob: -14.875032424926758
    4. ' (' → logprob: -14.875032424926758
    5. '(sel' → logprob: -16.375032424926758
    6. 'self' → logprob: -18.500032424926758
    7. '(Self' → logprob: -18.750032424926758
    8. '(se' → logprob: -19.125032424926758
    9. '(
' → logprob: -19.250032424926758
    10. ' ' → logprob: -19.500032424926758

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032658842392265797
    2. '(self' → logprob: -5.878265857696533
    3. ' ,' → logprob: -8.003266334533691
    4. 'self' → logprob: -9.253266334533691
    5. ' (' → logprob: -11.503266334533691
    6. ')' → logprob: -12.253266334533691
    7. ',self' → logprob: -12.878266334533691
    8. '):
' → logprob: -13.128266334533691
    9. ' ' → logprob: -13.253266334533691
    10. ',
' → logprob: -13.378266334533691

Token 499: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6592567563056946
    2. ' x' → logprob: -1.6592566967010498
    3. 'z' → logprob: -2.40925669670105
    4. ' z' → logprob: -2.78425669670105
    5. ' idx' → logprob: -3.90925669670105
    6. 'a' → logprob: -4.034256935119629
    7. 'frm' → logprob: -4.034256935119629
    8. 'op' → logprob: -4.159256935119629
    9. 'idx' → logprob: -4.409256935119629
    10. 'to' → logprob: -4.659256935119629

Token 500: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133825659751892
    2. '):' → logprob: -1.313382625579834
    3. ' ):
' → logprob: -9.938382148742676
    4. ' ):' → logprob: -10.313382148742676
    5. ')' → logprob: -10.938382148742676
    6. '):
' → logprob: -11.188382148742676
    7. '   ' → logprob: -12.688382148742676
    8. '):

' → logprob: -13.063382148742676
    9. '():
' → logprob: -14.188382148742676
    10. '()):
' → logprob: -14.688382148742676

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028786025941371918
    2. 'if' → logprob: -4.4037861824035645
    3. 'for' → logprob: -4.4037861824035645
    4. 'next' → logprob: -5.9037861824035645
    5. 'return' → logprob: -7.6537861824035645
    6. ' for' → logprob: -8.028785705566406
    7. ' if' → logprob: -8.278785705566406
    8. 'key' → logprob: -10.528785705566406
    9. 'pos' → logprob: -10.653785705566406
    10. ' next' → logprob: -11.028785705566406

Token 502: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15146884322166443
    2. 'for' → logprob: -2.6514687538146973
    3. 'return' → logprob: -3.0264687538146973
    4. 'next' → logprob: -4.026468753814697
    5. '       ' → logprob: -5.901468753814697
    6. 'idx' → logprob: -8.526469230651855
    7. 'try' → logprob: -8.651469230651855
    8. 'self' → logprob: -8.776469230651855
    9. ' if' → logprob: -9.276469230651855
    10. '#' → logprob: -9.776469230651855

Token 503: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5942443013191223
    2. ' not' → logprob: -1.3442442417144775
    3. 'self' → logprob: -1.7192442417144775
    4. 'not' → logprob: -4.969244480133057
    5. ' z' → logprob: -7.219244480133057
    6. 'z' → logprob: -8.094244003295898
    7. ' (' → logprob: -10.719244003295898
    8. ' len' → logprob: -11.094244003295898
    9. '	self' → logprob: -11.469244003295898
    10. '(self' → logprob: -11.594244003295898

Token 504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5764358043670654
    2. ' self' → logprob: -0.8264358043670654
    3. '(self' → logprob: -7.8264360427856445
    4. ' (' → logprob: -9.701436042785645
    5. '(' → logprob: -10.826436042785645
    6. ' hasattr' → logprob: -12.451436042785645
    7. '	self' → logprob: -12.576436042785645
    8. 'Self' → logprob: -14.138936042785645
    9. 'has' → logprob: -14.201436042785645
    10. ' ' → logprob: -14.201436042785645

Token 505: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.010470886714756489
    2. 'has' → logprob: -4.635470867156982
    3. ' has' → logprob: -7.260470867156982
    4. ' .' → logprob: -12.01047134399414
    5. '.' → logprob: -12.88547134399414
    6. '_has' → logprob: -13.63547134399414
    7. '.key' → logprob: -14.13547134399414
    8. '	has' → logprob: -14.38547134399414
    9. '.have' → logprob: -15.13547134399414
    10. '(has' → logprob: -16.26047134399414

Token 506: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.5570885807392187e-05
    2. ' _' → logprob: -12.000015258789062
    3. 'next' → logprob: -12.375015258789062
    4. '_' → logprob: -12.750015258789062
    5. ' next' → logprob: -14.125015258789062
    6. 'Next' → logprob: -14.250015258789062
    7. '_NEXT' → logprob: -15.125015258789062
    8. '下一' → logprob: -16.375015258789062
    9. '```' → logprob: -16.500015258789062
    10. '(next' → logprob: -17.000015258789062

Token 507: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -1.0280383548888494e-06
    2. 'op' → logprob: -14.875000953674316
    3. '_ops' → logprob: -15.125000953674316
    4. '_' → logprob: -15.875000953674316
    5. 'Op' → logprob: -17.375001907348633
    6. '_key' → logprob: -17.500001907348633
    7. '()' → logprob: -17.625001907348633
    8. '_operation' → logprob: -17.625001907348633
    9. '_oc' → logprob: -17.625001907348633
    10. '```' → logprob: -17.750001907348633

Token 508: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2578828036785126
    2. '():
' → logprob: -1.507882833480835
    3. '()' → logprob: -5.132882595062256
    4. ' ():' → logprob: -11.382883071899414
    5. '():
' → logprob: -11.632883071899414
    6. ':' → logprob: -11.882883071899414
    7. '(' → logprob: -12.257883071899414
    8. '():

' → logprob: -13.757883071899414
    9. '()):
' → logprob: -14.132883071899414
    10. '().' → logprob: -14.507883071899414

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005962575785815716
    2. '
' → logprob: -5.880962371826172
    3. ' return' → logprob: -7.005962371826172
    4. ':
' → logprob: -7.380962371826172
    5. ':' → logprob: -7.630962371826172
    6. 'return' → logprob: -7.755962371826172
    7. ':return' → logprob: -8.005962371826172
    8. '```' → logprob: -9.880962371826172
    9. '		' → logprob: -10.005962371826172
    10. '       ' → logprob: -10.130962371826172

Token 510: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16063617169857025
    2. '           ' → logprob: -2.1606361865997314
    3. ' return' → logprob: -3.4106361865997314
    4. '               ' → logprob: -10.035635948181152
    5. '	return' → logprob: -10.160635948181152
    6. '   ' → logprob: -10.410635948181152
    7. '       ' → logprob: -12.035635948181152
    8. '{return' → logprob: -13.160635948181152
    9. ' ' → logprob: -13.410635948181152
    10. '
' → logprob: -14.160635948181152

Token 511: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.05576331913471222
    2. 'True' → logprob: -2.9307632446289062
    3. 'self' → logprob: -7.805763244628906
    4. ' False' → logprob: -7.805763244628906
    5. ' True' → logprob: -10.055763244628906
    6. '(False' → logprob: -11.430763244628906
    7. '0' → logprob: -12.680763244628906
    8. '(True' → logprob: -12.930763244628906
    9. '   ' → logprob: -13.180763244628906
    10. 'z' → logprob: -13.305763244628906

Token 512: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09813103079795837
    2. '       ' → logprob: -2.473130941390991
    3. '<|end|>' → logprob: -4.84813117980957
    4. '	' → logprob: -7.72313117980957
    5. '\n' → logprob: -8.97313117980957
    6. '  
' → logprob: -8.97313117980957
    7. '
' → logprob: -8.97313117980957
    8. '        
' → logprob: -9.34813117980957
    9. '		
' → logprob: -9.47313117980957
    10. ' 
' → logprob: -9.97313117980957

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13702277839183807
    2. '
' → logprob: -2.1370227336883545
    3. '	' → logprob: -5.012022972106934
    4. '<|end|>' → logprob: -7.262022972106934
    5. 'return' → logprob: -7.387022972106934
    6. '		
' → logprob: -7.512022972106934
    7. '        
' → logprob: -8.012022972106934
    8. 'if' → logprob: -8.262022972106934
    9. '  
' → logprob: -8.637022972106934
    10. 'self' → logprob: -9.137022972106934

Token 514: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18315228819847107
    2. 'next' (adapté à ' next') → logprob: -2.433152198791504
    3. 'return' → logprob: -2.933152198791504
    4. 'if' → logprob: -4.058152198791504
    5. ' next' → logprob: -5.808152198791504
    6. ' if' → logprob: -6.558152198791504
    7. ' return' → logprob: -6.683152198791504
    8. 'self' → logprob: -7.058152198791504
    9. 'n' → logprob: -7.558152198791504
    10. 'pos' → logprob: -8.308152198791504

Token 515: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.06776215881109238
    2. '_key' → logprob: -2.8177621364593506
    3. 'op' → logprob: -6.44276237487793
    4. '_token' → logprob: -6.56776237487793
    5. '_move' → logprob: -6.69276237487793
    6. '_char' → logprob: -7.31776237487793
    7. '_' → logprob: -7.44276237487793
    8. '_z' → logprob: -9.81776237487793
    9. 'key' → logprob: -10.19276237487793
    10. '_index' → logprob: -10.44276237487793

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014176322147250175
    2. '=' → logprob: -4.264176368713379
    3. 's' → logprob: -12.639176368713379
    4. ' ' → logprob: -12.889176368713379
    5. '_idx' → logprob: -13.764176368713379
    6. '_tokens' → logprob: -13.764176368713379
    7. '       ' → logprob: -14.514176368713379
    8. '_index' → logprob: -14.639176368713379
    9. ':' → logprob: -14.639176368713379
    10. ' =
' → logprob: -14.764176368713379

Token 517: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0160394124686718
    2. ' self' → logprob: -4.1410393714904785
    3. '[self' → logprob: -13.391039848327637
    4. '	self' → logprob: -13.516039848327637
    5. '(self' → logprob: -14.266039848327637
    6. '       ' → logprob: -14.516039848327637
    7. '   ' → logprob: -15.141039848327637
    8. '=self' → logprob: -15.641039848327637
    9. 'this' → logprob: -16.26603889465332
    10. '`' → logprob: -16.51603889465332

Token 518: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0001561009994475171
    2. 'op' → logprob: -8.87515640258789
    3. 'self' → logprob: -11.37515640258789
    4. '_op' → logprob: -13.00015640258789
    5. ' op' → logprob: -13.62515640258789
    6. '	op' → logprob: -13.87515640258789
    7. '.user' → logprob: -15.62515640258789
    8. '   ' → logprob: -16.87515640258789
    9. '_.' → logprob: -17.12515640258789
    10. '.' → logprob: -17.12515640258789

Token 519: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.869017852295656e-06
    2. 'list' → logprob: -12.375006675720215
    3. 's' → logprob: -13.625006675720215
    4. 'er' → logprob: -14.000006675720215
    5. '_lst' → logprob: -16.37500762939453
    6. '[_' → logprob: -16.50000762939453
    7. 'self' → logprob: -16.62500762939453
    8. '[' → logprob: -16.87500762939453
    9. 'List' → logprob: -17.12500762939453
    10. '_LIST' → logprob: -17.25000762939453

Token 520: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -4.584861744660884e-05
    2. 'self' → logprob: -10.000045776367188
    3. '       ' → logprob: -15.625045776367188
    4. '[' → logprob: -16.000045776367188
    5. '(self' → logprob: -17.375045776367188
    6. ' self' → logprob: -18.500045776367188
    7. '[
' → logprob: -19.500045776367188
    8. '   ' → logprob: -19.625045776367188
    9. '[next' → logprob: -20.125045776367188
    10. '           ' → logprob: -20.250045776367188

Token 521: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0004889304982498288
    2. 'key' → logprob: -7.625488758087158
    3. '.' → logprob: -15.000489234924316
    4. '   ' → logprob: -15.250489234924316
    5. ' key' → logprob: -15.375489234924316
    6. '_key' → logprob: -17.75048828125
    7. '	key' → logprob: -17.87548828125
    8. ' ' → logprob: -18.12548828125
    9. 'self' → logprob: -18.12548828125
    10. ':key' → logprob: -18.37548828125

Token 522: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740826487541199
    2. ' +' → logprob: -0.9740826487541199
    3. ']' → logprob: -12.474082946777344
    4. '   ' → logprob: -14.849082946777344
    5. '+
' → logprob: -14.974082946777344
    6. ']+' → logprob: -15.349082946777344
    7. '＋' → logprob: -15.349082946777344
    8. '	' → logprob: -15.849082946777344
    9. ' +
' → logprob: -16.099082946777344
    10. '+self' → logprob: -16.099082946777344

Token 523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.625011444091797
    4. '
' → logprob: -19.000011444091797
    5. '```' → logprob: -19.125011444091797
    6. '<|end|>' → logprob: -20.375011444091797
    7. '+' → logprob: -20.687511444091797
    8. '１' → logprob: -21.000011444091797
    9. '۱' → logprob: -21.062511444091797
    10. '[' → logprob: -21.187511444091797

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.7500057220459
    4. '```' → logprob: -18.0000057220459
    5. '<|end|>' → logprob: -18.2500057220459
    6. '0' → logprob: -18.2500057220459
    7. '  ' → logprob: -19.2500057220459
    8. '+' → logprob: -19.3750057220459
    9. '{' → logprob: -19.3750057220459
    10. '[' → logprob: -19.6250057220459

Token 525: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2076757848262787
    2. ']
' → logprob: -1.957675814628601
    3. '].' → logprob: -3.0826756954193115
    4. ']

' → logprob: -8.33267593383789
    5. '][' → logprob: -8.95767593383789
    6. ' ]' → logprob: -9.33267593383789
    7. ']
' → logprob: -10.83267593383789
    8. ' ]
' → logprob: -11.20767593383789
    9. '[' → logprob: -12.08267593383789
    10. ' ].' → logprob: -12.20767593383789

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015141471289098263
    2. '	' → logprob: -5.390141487121582
    3. '<|end|>' → logprob: -6.015141487121582
    4. '
' → logprob: -6.265141487121582
    5. '```' → logprob: -6.765141487121582
    6. ' if' → logprob: -7.265141487121582
    7. '        
' → logprob: -7.265141487121582
    8. '[' → logprob: -7.390141487121582
    9. '  
' → logprob: -7.640141487121582
    10. 'return' → logprob: -7.765141487121582

Token 527: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0537431500852108
    2. 'if' (adapté à ' if') → logprob: -3.3037431240081787
    3. ' return' → logprob: -5.178743362426758
    4. 'in' → logprob: -5.678743362426758
    5. ' if' → logprob: -5.928743362426758
    6. ' in' → logprob: -6.053743362426758
    7. '           ' → logprob: -7.428743362426758
    8. '       ' → logprob: -7.553743362426758
    9. 'z' → logprob: -8.553743362426758
    10. 'import' → logprob: -9.428743362426758

Token 528: ' self' (ID: 1051)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.22415824234485626
    2. 'z' → logprob: -2.34915828704834
    3. 'self' → logprob: -2.59915828704834
    4. ''z' → logprob: -4.47415828704834
    5. 'num' → logprob: -4.59915828704834
    6. ''' → logprob: -5.34915828704834
    7. 'chars' → logprob: -6.47415828704834
    8. '"' → logprob: -7.09915828704834
    9. 'chr' → logprob: -7.34915828704834
    10. '('' → logprob: -8.22415828704834

Token 529: '.num' (ID: 19403)
  Prédit: '.A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -1.156626582145691
    2. 'num' → logprob: -1.156626582145691
    3. 'A' → logprob: -1.781626582145691
    4. 'data' → logprob: -2.9066267013549805
    5. '.key' → logprob: -3.0316267013549805
    6. 'key' → logprob: -3.1566267013549805
    7. '.num' → logprob: -4.0316267013549805
    8. '.' → logprob: -4.5316267013549805
    9. '.data' → logprob: -5.4066267013549805
    10. 'f' → logprob: -5.6566267013549805

Token 530: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.292907877039397e-06
    2. 'to' → logprob: -13.50000286102295
    3. '_t' → logprob: -14.00000286102295
    4. 'To' → logprob: -15.12500286102295
    5. ' _' → logprob: -15.50000286102295
    6. '```' → logprob: -15.50000286102295
    7. '_' → logprob: -16.125003814697266
    8. 't' → logprob: -17.000003814697266
    9. ' to' → logprob: -17.125003814697266
    10. '_TO' → logprob: -17.500003814697266

Token 531: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.07889209687709808
    2. 'char' → logprob: -2.5788919925689697
    3. 'Char' → logprob: -13.82889175415039
    4. 'num' → logprob: -14.07889175415039
    5. '<char' → logprob: -15.82889175415039
    6. '_num' → logprob: -16.20389175415039
    7. '_chars' → logprob: -16.45389175415039
    8. 'chars' → logprob: -16.95389175415039
    9. '_CHAR' → logprob: -17.07889175415039
    10. ' char' → logprob: -17.20389175415039

Token 532: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -14.625006675720215
    4. '[z' → logprob: -15.750006675720215
    5. '(Z' → logprob: -16.5000057220459
    6. '(x' → logprob: -17.0000057220459
    7. '(y' → logprob: -17.2500057220459
    8. 'z' → logprob: -17.2500057220459
    9. '	z' → logprob: -17.3750057220459
    10. '(n' → logprob: -17.7500057220459

Token 533: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008375686593353748
    2. '())' → logprob: -4.883375644683838
    3. '()' → logprob: -7.508375644683838
    4. ' )' → logprob: -8.758376121520996
    5. '")' → logprob: -10.508376121520996
    6. ' ())' → logprob: -11.758376121520996
    7. '')' → logprob: -11.883376121520996
    8. '   ' → logprob: -12.133376121520996
    9. '`)' → logprob: -12.508376121520996
    10. 'in' → logprob: -13.383376121520996

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7204537987709045
    2. '()' → logprob: -1.2204537391662598
    3. 'in' → logprob: -2.0954537391662598
    4. ' not' → logprob: -2.4704537391662598
    5. 'not' → logprob: -4.97045373916626
    6. ')' → logprob: -5.59545373916626
    7. ' ()' → logprob: -10.095454216003418
    8. ']' → logprob: -10.595454216003418
    9. '}' → logprob: -10.845454216003418
    10. '[]' → logprob: -12.095454216003418

Token 535: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1602276712656021
    2. ' next' → logprob: -1.910227656364441
    3. '[next' → logprob: -13.16022777557373
    4. '(next' → logprob: -13.41022777557373
    5. '	next' → logprob: -17.035226821899414
    6. '.next' → logprob: -18.910226821899414
    7. '_next' → logprob: -19.410226821899414
    8. ' nex' → logprob: -19.785226821899414
    9. ',next' → logprob: -20.035226821899414
    10. 'n' → logprob: -20.535226821899414

Token 536: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -4.096126576769166e-05
    2. 'next' → logprob: -11.000041007995605
    3. '_next' → logprob: -11.750041007995605
    4. 'op' → logprob: -11.875041007995605
    5. '(next' → logprob: -12.125041007995605
    6. 'Op' → logprob: -13.375041007995605
    7. '_ops' → logprob: -13.875041007995605
    8. '[next' → logprob: -14.500041007995605
    9. ' next' → logprob: -15.500041007995605
    10. '_OP' → logprob: -15.625041007995605

Token 537: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4229213297367096
    2. ':
' → logprob: -1.4229212999343872
    3. '<|end|>' → logprob: -2.4229214191436768
    4. ':return' → logprob: -4.422921180725098
    5. '<|end|>' → logprob: -7.172921180725098
    6. '):
' → logprob: -7.422921180725098
    7. ' and' → logprob: -7.922921180725098
    8. ')' → logprob: -8.172921180725098
    9. ' :
' → logprob: -8.172921180725098
    10. ' :' → logprob: -8.797921180725098

Token 538: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3545248210430145
    2. '           ' → logprob: -1.604524850845337
    3. ':' → logprob: -2.729524850845337
    4. ':return' → logprob: -4.229524612426758
    5. '       ' → logprob: -4.854524612426758
    6. ' :
' → logprob: -5.104524612426758
    7. '
' → logprob: -7.104524612426758
    8. ' return' → logprob: -7.479524612426758
    9. ' and' → logprob: -7.854524612426758
    10. ' :' → logprob: -7.979524612426758

Token 539: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8863793015480042
    2. ' True' → logprob: -1.3863792419433594
    3. 'True' → logprob: -1.7613792419433594
    4. 'return' (adapté à ' return') → logprob: -2.7613792419433594
    5. ' return' → logprob: -2.8863792419433594
    6. '
' → logprob: -3.3863792419433594
    7. '               ' → logprob: -4.761379241943359
    8. '       ' → logprob: -6.636379241943359
    9. ' 
' → logprob: -7.011379241943359
    10. ' ' → logprob: -7.761379241943359

Token 540: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004436587623786181
    2. ' True' → logprob: -7.750443458557129
    3. 'False' → logprob: -11.250443458557129
    4. 'self' → logprob: -19.500444412231445
    5. '   ' → logprob: -20.125444412231445
    6. '(True' → logprob: -20.250444412231445
    7. ' False' → logprob: -20.375444412231445
    8. 'true' → logprob: -20.625444412231445
    9. '1' → logprob: -22.125444412231445
    10. 'Tr' → logprob: -22.500444412231445

Token 541: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002347815316170454
    2. '	' → logprob: -6.627347946166992
    3. 'return' → logprob: -7.877347946166992
    4. '<|end|>' → logprob: -7.877347946166992
    5. '
' → logprob: -8.627347946166992
    6. '	return' → logprob: -10.752347946166992
    7. ' return' → logprob: -10.877347946166992
    8. 'else' → logprob: -11.377347946166992
    9. '   ' → logprob: -11.502347946166992
    10. '               ' → logprob: -13.127347946166992

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031941127963364124
    2. 'return' → logprob: -6.253194332122803
    3. '	' → logprob: -7.128194332122803
    4. 'else' → logprob: -8.003193855285645
    5. '	return' → logprob: -10.128193855285645
    6. '   ' → logprob: -10.378193855285645
    7. ' return' → logprob: -10.753193855285645
    8. ' else' → logprob: -11.753193855285645
    9. '<|end|>' → logprob: -11.878193855285645
    10. '```' → logprob: -12.003193855285645

Token 543: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031502656638622284
    2. 'return' → logprob: -6.003150463104248
    3. 'else' (adapté à ' else') → logprob: -7.503150463104248
    4. '	' → logprob: -9.87814998626709
    5. '   ' → logprob: -10.62814998626709
    6. ' return' → logprob: -11.25314998626709
    7. ' else' → logprob: -11.75314998626709
    8. '
' → logprob: -11.87814998626709
    9. '           ' → logprob: -12.12814998626709
    10. '	return' → logprob: -12.25314998626709

Token 544: ':
' (ID: 734)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.09444594383239746
    2. 'False' → logprob: -2.5944459438323975
    3. '           ' → logprob: -4.719446182250977
    4. '(False' → logprob: -5.594446182250977
    5. ':' → logprob: -7.094446182250977
    6. '       ' → logprob: -7.344446182250977
    7. '=False' → logprob: -7.344446182250977
    8. ':
' → logprob: -8.594446182250977
    9. ' false' → logprob: -8.719446182250977
    10. ' return' → logprob: -9.344446182250977

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5999817252159119
    2. 'False' → logprob: -1.0999817848205566
    3. ' False' → logprob: -2.2249817848205566
    4. ' return' → logprob: -5.099981784820557
    5. 'return' → logprob: -5.974981784820557
    6. '       ' → logprob: -7.099981784820557
    7. '   ' → logprob: -8.599981307983398
    8. ' false' → logprob: -8.599981307983398
    9. '               ' → logprob: -8.849981307983398
    10. '(False' → logprob: -9.224981307983398

Token 546: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.010686976835131645
    2. 'return' (adapté à ' return') → logprob: -5.260686874389648
    3. ' False' → logprob: -5.260686874389648
    4. ' return' → logprob: -8.635686874389648
    5. '           ' → logprob: -9.635686874389648
    6. 'false' → logprob: -13.760686874389648
    7. '               ' → logprob: -14.135686874389648
    8. '       ' → logprob: -14.260686874389648
    9. '=False' → logprob: -14.635686874389648
    10. '(False' → logprob: -14.635686874389648

Token 547: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -21.125261306762695
    4. '=False' → logprob: -22.375261306762695
    5. '   ' → logprob: -24.500261306762695
    6. 'false' → logprob: -24.875261306762695
    7. '_false' → logprob: -25.375261306762695
    8. 'True' → logprob: -25.500261306762695
    9. '.False' → logprob: -25.500261306762695
    10. 'None' → logprob: -26.750261306762695

Token 548: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.19144755601882935
    2. '<|end|>' → logprob: -1.9414474964141846
    3. '#' → logprob: -4.066447734832764
    4. 'player' → logprob: -4.691447734832764
    5. '```' → logprob: -6.566447734832764
    6. 'if' → logprob: -7.066447734832764
    7. '<|end|>' → logprob: -7.316447734832764
    8. '...' → logprob: -7.566447734832764
    9. '   ' → logprob: -7.941447734832764
    10. 'pass' → logprob: -9.316447257995605

Token 551: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -2.054234266281128
    2. 'try' → logprob: -2.304234266281128
    3. 'reset' → logprob: -2.304234266281128
    4. 'main' → logprob: -2.304234266281128
    5. ' try' → logprob: -2.804234266281128
    6. 'has' → logprob: -2.929234266281128
    7. 'play' → logprob: -3.054234266281128
    8. ' play' → logprob: -3.054234266281128
    9. 'reverse' → logprob: -3.179234266281128
    10. 'get' → logprob: -3.804234266281128

Token 552: '_ans' (ID: 146254)
  Prédit: '_history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_history' → logprob: -1.2529830932617188
    2. '_result' → logprob: -1.3779830932617188
    3. '_move' → logprob: -1.6279830932617188
    4. '_' → logprob: -1.7529830932617188
    5. '()' → logprob: -3.0029830932617188
    6. '_moves' → logprob: -3.6279830932617188
    7. '_answer' → logprob: -4.627983093261719
    8. '_ans' → logprob: -6.502983093261719
    9. '_results' → logprob: -6.877983093261719
    10. '_solution' → logprob: -7.002983093261719

Token 553: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002883095294237137
    2. '(' → logprob: -5.877882957458496
    3. 'self' → logprob: -9.877882957458496
    4. '   ' → logprob: -11.502882957458496
    5. ' (' → logprob: -12.127882957458496
    6. '(s' → logprob: -12.502882957458496
    7. '_(' → logprob: -13.127882957458496
    8. '(
' → logprob: -13.377882957458496
    9. 's' → logprob: -13.877882957458496
    10. '       ' → logprob: -14.127882957458496

Token 554: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2491837590932846
    2. '):' → logprob: -1.8741837739944458
    3. '(self' → logprob: -2.8741836547851562
    4. 'self' → logprob: -4.999183654785156
    5. ',' → logprob: -6.124183654785156
    6. '   ' → logprob: -7.624183654785156
    7. '       ' → logprob: -7.999183654785156
    8. ')' → logprob: -8.124183654785156
    9. ')(' → logprob: -8.249183654785156
    10. '):

' → logprob: -8.499183654785156

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06846284121274948
    2. 'print' → logprob: -3.31846284866333
    3. '   ' → logprob: -4.31846284866333
    4. 'if' → logprob: -4.94346284866333
    5. ' if' → logprob: -4.94346284866333
    6. ' print' → logprob: -6.06846284866333
    7. '```' → logprob: -9.943462371826172
    8. '	' → logprob: -11.943462371826172
    9. ' ' → logprob: -12.068462371826172
    10. ' for' → logprob: -13.068462371826172

Token 556: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07948407530784607
    2. 'if' → logprob: -2.579483985900879
    3. '       ' → logprob: -7.579483985900879
    4. ' if' → logprob: -10.204483985900879
    5. ' print' → logprob: -10.579483985900879
    6. 'pp' → logprob: -11.454483985900879
    7. 'for' → logprob: -11.704483985900879
    8. '   ' → logprob: -13.329483985900879
    9. 'return' → logprob: -15.954483985900879
    10. 'p' → logprob: -16.204484939575195

Token 557: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.375000953674316
    3. '("' → logprob: -14.875000953674316
    4. 'self' → logprob: -15.875000953674316
    5. ' (' → logprob: -17.250001907348633
    6. '((' → logprob: -17.625001907348633
    7. '(f' → logprob: -17.875001907348633
    8. '(
' → logprob: -18.125001907348633
    9. '('' → logprob: -20.500001907348633
    10. '(len' → logprob: -20.625001907348633

Token 558: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.226628895296017e-06
    2. ' .' → logprob: -11.875007629394531
    3. ').' → logprob: -16.50000762939453
    4. '
' → logprob: -16.87500762939453
    5. '.answer' → logprob: -17.50000762939453
    6. '".' → logprob: -17.87500762939453
    7. '.
' → logprob: -18.00000762939453
    8. '.op' → logprob: -18.12500762939453
    9. '.key' → logprob: -18.87500762939453
    10. '.out' → logprob: -19.25000762939453

Token 559: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.704273118884885e-07
    2. '(ans' → logprob: -16.0
    3. 'A' → logprob: -16.75
    4. '
' → logprob: -16.875
    5. '   ' → logprob: -16.875
    6. 'move' → logprob: -17.0
    7. 'a' → logprob: -17.125
    8. 'f' → logprob: -17.5
    9. 'print' → logprob: -17.75
    10. ' ans' → logprob: -17.875

Token 560: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00020449401927180588
    2. ')' → logprob: -8.500204086303711
    3. ' )
' → logprob: -14.875204086303711
    4. '())
' → logprob: -15.125204086303711
    5. ')
' → logprob: -16.12520408630371
    6. '   ' → logprob: -16.25020408630371
    7. '")
' → logprob: -16.37520408630371
    8. '       ' → logprob: -16.87520408630371
    9. '')
' → logprob: -18.50020408630371
    10. ')

' → logprob: -19.00020408630371

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07413659989833832
    2. 'for' → logprob: -2.69913649559021
    3. 'if' → logprob: -5.699136734008789
    4. '   ' → logprob: -7.949136734008789
    5. ' for' → logprob: -8.074136734008789
    6. '```' → logprob: -9.824136734008789
    7. '<|end|>' → logprob: -9.949136734008789
    8. ' ' → logprob: -10.449136734008789
    9. '	' → logprob: -11.199136734008789
    10. ' if' → logprob: -11.449136734008789

Token 562: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038196295499801636
    2. 'if' (adapté à ' if') → logprob: -3.288196325302124
    3. '       ' → logprob: -8.788196563720703
    4. 'print' → logprob: -13.163196563720703
    5. ' for' → logprob: -15.163196563720703
    6. '   ' → logprob: -16.788196563720703
    7. ' if' → logprob: -17.663196563720703
    8. '	for' → logprob: -19.163196563720703
    9. '        
' → logprob: -21.163196563720703
    10. 'return' → logprob: -21.413196563720703

Token 563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10970660299062729
    2. 'not' → logprob: -2.9847066402435303
    3. ' self' → logprob: -3.3597066402435303
    4. ' not' → logprob: -3.9847066402435303
    5. ' ' → logprob: -13.23470687866211
    6. '   ' → logprob: -13.35970687866211
    7. '	self' → logprob: -14.60970687866211
    8. '(self' → logprob: -14.73470687866211
    9. '  ' → logprob: -15.10970687866211
    10. '(not' → logprob: -15.85970687866211

Token 564: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.266944157890975e-05
    2. '.f' → logprob: -9.750072479248047
    3. '.data' → logprob: -11.750072479248047
    4. '.move' → logprob: -12.250072479248047
    5. 'ans' → logprob: -14.125072479248047
    6. '.op' → logprob: -15.625072479248047
    7. '.answer' → logprob: -16.000072479248047
    8. ' .' → logprob: -16.125072479248047
    9. 'move' → logprob: -16.500072479248047
    10. 'data' → logprob: -16.625072479248047

Token 565: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011737081513274461
    2. 'fl' → logprob: -9.375117301940918
    3. 'not' → logprob: -10.625117301940918
    4. '   ' → logprob: -12.750117301940918
    5. 'f' → logprob: -13.625117301940918
    6. ' ans' → logprob: -13.750117301940918
    7. '  ' → logprob: -14.375117301940918
    8. '
' → logprob: -14.375117301940918
    9. '(ans' → logprob: -15.125117301940918
    10. 'move' → logprob: -15.375117301940918

Token 566: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3135516941547394
    2. ' ==' → logprob: -1.313551664352417
    3. '=="' → logprob: -8.813551902770996
    4. '==
' → logprob: -9.438551902770996
    5. '=' → logprob: -10.313551902770996
    6. '!=' → logprob: -11.313551902770996
    7. ' !=' → logprob: -12.313551902770996
    8. ' ' → logprob: -12.688551902770996
    9. '=='' → logprob: -12.813551902770996
    10. '[' → logprob: -13.063551902770996

Token 567: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0036796480417251587
    2. '"No' → logprob: -5.8786797523498535
    3. ' "' → logprob: -7.6286797523498535
    4. ''' → logprob: -8.253679275512695
    5. 'Yes' → logprob: -9.628679275512695
    6. '   ' → logprob: -10.003679275512695
    7. '“Yes' → logprob: -11.378679275512695
    8. '	' → logprob: -13.128679275512695
    9. ' ' → logprob: -13.628679275512695
    10. ' Yes' → logprob: -14.753679275512695

Token 568: 'No' (ID: 3160)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.3856492842023727e-06
    2. 'No' → logprob: -13.750000953674316
    3. 'Ye' → logprob: -16.500001907348633
    4. 'YES' → logprob: -16.750001907348633
    5. '"' → logprob: -18.125001907348633
    6. ' Yes' → logprob: -18.500001907348633
    7. '\n' → logprob: -19.250001907348633
    8. '
' → logprob: -20.125001907348633
    9. 'Y' → logprob: -20.500001907348633
    10. '   ' → logprob: -21.750001907348633

Token 569: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7544840574264526
    2. '":
' → logprob: -1.0044840574264526
    3. ':' → logprob: -2.129484176635742
    4. '":' → logprob: -3.379484176635742
    5. '):
' → logprob: -5.504484176635742
    6. '"' → logprob: -5.754484176635742
    7. '   ' → logprob: -6.629484176635742
    8. '"):
' → logprob: -6.879484176635742
    9. ':return' → logprob: -8.254484176635742
    10. '       ' → logprob: -8.254484176635742

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016706773021724075
    2. ' return' → logprob: -9.625166893005371
    3. 'return' → logprob: -10.000166893005371
    4. '	       ' → logprob: -10.250166893005371
    5. '   ' → logprob: -11.625166893005371
    6. '		' → logprob: -12.625166893005371
    7. '       ' → logprob: -12.875166893005371
    8. '	   ' → logprob: -13.375166893005371
    9. '	return' → logprob: -13.625166893005371
    10. '    	   ' → logprob: -14.500166893005371

Token 571: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16213729977607727
    2. '           ' → logprob: -1.9121372699737549
    3. ' return' → logprob: -6.287137508392334
    4. '   ' → logprob: -10.412137031555176
    5. '
' → logprob: -11.787137031555176
    6. '	return' → logprob: -12.162137031555176
    7. '       ' → logprob: -12.537137031555176
    8. '		' → logprob: -13.912137031555176
    9. 'print' → logprob: -13.912137031555176
    10. '               ' → logprob: -14.287137031555176

Token 572: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2028990238904953
    2. 'for' → logprob: -1.9528989791870117
    3. '   ' → logprob: -3.2028989791870117
    4. ' for' → logprob: -6.952898979187012
    5. '           ' → logprob: -9.327898979187012
    6. '
' → logprob: -10.452898979187012
    7. '	for' → logprob: -10.952898979187012
    8. '	' → logprob: -11.702898979187012
    9. '	   ' → logprob: -11.702898979187012
    10. 'print' → logprob: -12.077898979187012

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008373909629881382
    2. 'for' → logprob: -5.258373737335205
    3. '   ' → logprob: -5.883373737335205
    4. ' for' → logprob: -8.133374214172363
    5. '```' → logprob: -11.133374214172363
    6. '           ' → logprob: -11.633374214172363
    7. 'print' → logprob: -11.633374214172363
    8. '	' → logprob: -11.633374214172363
    9. '	   ' → logprob: -12.258374214172363
    10. '	for' → logprob: -12.508374214172363

Token 574: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39602574706077576
    2. '       ' → logprob: -1.1460257768630981
    3. ' for' → logprob: -5.396025657653809
    4. '   ' → logprob: -5.396025657653809
    5. '	for' → logprob: -11.146025657653809
    6. '	' → logprob: -11.521025657653809
    7. ' ' → logprob: -12.021025657653809
    8. '           ' → logprob: -12.146025657653809
    9. '	   ' → logprob: -13.146025657653809
    10. 'print' → logprob: -13.271025657653809

Token 575: ' h' (ID: 312)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4668121635913849
    2. 'ch' → logprob: -1.4668121337890625
    3. 'move' → logprob: -3.2168121337890625
    4. 'x' → logprob: -3.2168121337890625
    5. 'm' → logprob: -3.3418121337890625
    6. 'v' → logprob: -4.8418121337890625
    7. 'i' → logprob: -4.9668121337890625
    8. 'mv' → logprob: -5.9668121337890625
    9. 'h' → logprob: -6.0918121337890625
    10. 'mh' → logprob: -6.4668121337890625

Token 576: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3701757490634918
    2. 'istory' → logprob: -1.2451757192611694
    3. 'in' → logprob: -4.370175838470459
    4. 'ist' → logprob: -5.370175838470459
    5. 'i' → logprob: -5.745175838470459
    6. '   ' → logprob: -7.995175838470459
    7. 'e' → logprob: -8.6201753616333
    8. '_' → logprob: -8.6201753616333
    9. 'story' → logprob: -9.8701753616333
    10. ' ' → logprob: -10.1201753616333

Token 577: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.644463479053229e-05
    2. ' self' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.125046730041504
    4. '(self' → logprob: -16.250045776367188
    5. '       ' → logprob: -17.000045776367188
    6. 'range' → logprob: -18.250045776367188
    7. 'player' → logprob: -18.875045776367188
    8. '	self' → logprob: -19.000045776367188
    9. '[self' → logprob: -19.500045776367188
    10. ' ' → logprob: -19.750045776367188

Token 578: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0011726059019565582
    2. 'move' → logprob: -6.7511725425720215
    3. '.' → logprob: -14.00117301940918
    4. ' move' → logprob: -14.37617301940918
    5. '_move' → logprob: -14.37617301940918
    6. '	move' → logprob: -15.75117301940918
    7. ' .' → logprob: -16.50117301940918
    8. '._' → logprob: -17.12617301940918
    9. '   ' → logprob: -17.12617301940918
    10. '.Move' → logprob: -17.62617301940918

Token 579: '_history' (ID: 45451)
  Prédit: '_history'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_history' → logprob: -6.034592388459714e-06
    2. 's' → logprob: -12.500005722045898
    3. '_' → logprob: -13.875005722045898
    4. '_hist' → logprob: -14.375005722045898
    5. 'history' → logprob: -14.750005722045898
    6. '_HISTORY' → logprob: -16.3750057220459
    7. '_h' → logprob: -16.5000057220459
    8. ' _' → logprob: -16.7500057220459
    9. '   ' → logprob: -18.2500057220459
    10. 'self' → logprob: -18.3750057220459

Token 580: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2834029793739319
    2. ':' → logprob: -1.408402919769287
    3. '[:-' → logprob: -6.908402919769287
    4. '           ' → logprob: -8.033403396606445
    5. '       ' → logprob: -8.033403396606445
    6. '[' → logprob: -8.408403396606445
    7. 'print' → logprob: -9.158403396606445
    8. '[:' → logprob: -9.408403396606445
    9. '[::-' → logprob: -9.533403396606445
    10. '   ' → logprob: -9.533403396606445

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04008454829454422
    2. 'print' → logprob: -3.4150846004486084
    3. ' print' → logprob: -5.290084362030029
    4. '       ' → logprob: -6.790084362030029
    5. '   ' → logprob: -8.415084838867188
    6. '	       ' → logprob: -11.540084838867188
    7. '	print' → logprob: -12.540084838867188
    8. '               ' → logprob: -12.665084838867188
    9. ' ' → logprob: -12.790084838867188
    10. '```' → logprob: -13.040084838867188

Token 582: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003984485287219286
    2. ' print' → logprob: -5.753984451293945
    3. '           ' → logprob: -7.128984451293945
    4. '       ' → logprob: -12.503984451293945
    5. '   ' → logprob: -14.378984451293945
    6. '	print' → logprob: -14.878984451293945
    7. '```' → logprob: -16.378984451293945
    8. '.print' → logprob: -16.628984451293945
    9. '               ' → logprob: -16.753984451293945
    10. '            
' → logprob: -18.128984451293945

Token 583: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0009124171338044107
    2. 'h' → logprob: -7.000912189483643
    3. '(' → logprob: -13.8759126663208
    4. ' h' → logprob: -18.875911712646484
    5. '(
' → logprob: -20.375911712646484
    6. '	h' → logprob: -20.750911712646484
    7. '[h' → logprob: -21.250911712646484
    8. ',h' → logprob: -22.375911712646484
    9. '<h' → logprob: -22.750911712646484
    10. '((' → logprob: -23.000911712646484

Token 584: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.250003814697266
    3. '<|end|>' → logprob: -14.250003814697266
    4. ' )' → logprob: -14.875003814697266
    5. '       ' → logprob: -15.250003814697266
    6. '")' → logprob: -15.625003814697266
    7. '())' → logprob: -16.125003814697266
    8. '   ' → logprob: -17.000003814697266
    9. '()' → logprob: -17.625003814697266
    10. '}' → logprob: -18.000003814697266

Token 585: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6272353529930115
    2. '<|end|>' → logprob: -1.0022354125976562
    3. 'player' → logprob: -2.8772354125976562
    4. '```' → logprob: -3.7522354125976562
    5. 'n' → logprob: -5.502235412597656
    6. '[' → logprob: -5.627235412597656
    7. '[player' → logprob: -6.002235412597656
    8. ')' → logprob: -6.502235412597656
    9. '<|end|>' → logprob: -6.752235412597656
    10. 'x' → logprob: -6.877235412597656

Token 586: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04860350117087364
    2. '__' → logprob: -3.0486035346984863
    3. 'name' → logprob: -11.673603057861328
    4. '_name' → logprob: -12.548603057861328
    5. '_' → logprob: -13.548603057861328
    6. 'Name' → logprob: -13.798603057861328
    7. ' ' → logprob: -14.423603057861328
    8. ' name' → logprob: -15.173603057861328
    9. ' ' → logprob: -15.423603057861328
    10. ' "__' → logprob: -15.423603057861328

Token 587: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06386616826057434
    2. ' __' → logprob: -2.813866138458252
    3. 'name' → logprob: -7.063866138458252
    4. ' ==' → logprob: -7.438866138458252
    5. '.__' → logprob: -8.68886661529541
    6. '__":
' → logprob: -10.18886661529541
    7. 'if' → logprob: -10.43886661529541
    8. '__.' → logprob: -10.56386661529541
    9. '==' → logprob: -10.68886661529541
    10. '__':
' → logprob: -10.81386661529541

Token 588: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012379679828882217
    2. ' ==' → logprob: -6.876237869262695
    3. '==' → logprob: -8.626237869262695
    4. '=="' → logprob: -11.751237869262695
    5. '__.__' → logprob: -12.876237869262695
    6. '__":
' → logprob: -13.001237869262695
    7. '_' → logprob: -13.126237869262695
    8. '__.' → logprob: -13.251237869262695
    9. '__[' → logprob: -13.251237869262695
    10. '__':
' → logprob: -13.751237869262695

Token 589: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10403792560100555
    2. ' ==' → logprob: -2.3540380001068115
    3. '==' → logprob: -5.979037761688232
    4. '=="' → logprob: -7.354037761688232
    5. '__":
' → logprob: -8.10403823852539
    6. '_' → logprob: -9.22903823852539
    7. '__':
' → logprob: -9.60403823852539
    8. '__.__' → logprob: -9.85403823852539
    9. '___' → logprob: -10.85403823852539
    10. '=='' → logprob: -10.97903823852539

Token 590: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00872613675892353
    2. ''' → logprob: -4.758726119995117
    3. ' "__' → logprob: -9.133726119995117
    4. '__' → logprob: -13.008726119995117
    5. ' '__' → logprob: -14.133726119995117
    6. '"name' → logprob: -15.133726119995117
    7. '"user' → logprob: -16.008726119995117
    8. '"class' → logprob: -16.883726119995117
    9. '"_' → logprob: -16.883726119995117
    10. '   ' → logprob: -17.883726119995117

Token 591: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007100477814674377
    2. 'name' → logprob: -7.2507100105285645
    3. '__' → logprob: -17.375709533691406
    4. 'm' → logprob: -17.875709533691406
    5. ''' → logprob: -18.125709533691406
    6. 'ma' → logprob: -18.125709533691406
    7. ' main' → logprob: -18.375709533691406
    8. '_main' → logprob: -18.500709533691406
    9. '"' → logprob: -19.875709533691406
    10. ' '__' → logprob: -20.250709533691406

Token 592: '__':
' (ID: 39314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18535800278186798
    2. '__':
' → logprob: -2.0603580474853516
    3. '__:' → logprob: -3.5603580474853516
    4. '__' → logprob: -5.435358047485352
    5. ':
' → logprob: -5.935358047485352
    6. '__":
' → logprob: -6.060358047485352
    7. '():
' → logprob: -6.435358047485352
    8. '():' → logprob: -6.560358047485352
    9. '':' → logprob: -7.435358047485352
    10. '>:' → logprob: -9.060358047485352

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018742237240076065
    2. '```' → logprob: -5.268742084503174
    3. ' data' → logprob: -5.643742084503174
    4. ' input' → logprob: -5.768742084503174
    5. 'n' → logprob: -6.518742084503174
    6. ' n' → logprob: -6.643742084503174
    7. 'a' → logprob: -6.768742084503174
    8. 'input' → logprob: -7.393742084503174
    9. 'data' → logprob: -7.518742084503174
    10. 'import' → logprob: -8.518742561340332

Token 594: ' n' (ID: 297)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6287946105003357
    2. 'n' (adapté à ' n') → logprob: -1.5037946701049805
    3. 'N' → logprob: -1.8787946701049805
    4. 'a' → logprob: -2.8787946701049805
    5. '   ' → logprob: -3.8787946701049805
    6. 'A' → logprob: -4.7537946701049805
    7. 'abc' → logprob: -6.3787946701049805
    8. 'import' → logprob: -6.7537946701049805
    9. 'd' → logprob: -7.0037946701049805
    10. ' data' → logprob: -7.5037946701049805

Token 595: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09931819885969162
    2. ',' → logprob: -2.474318265914917
    3. '=' → logprob: -4.599318027496338
    4. '=int' → logprob: -8.724318504333496
    5. ' ,' → logprob: -9.599318504333496
    6. '=input' → logprob: -11.599318504333496
    7. ',n' → logprob: -11.724318504333496
    8. ',m' → logprob: -12.974318504333496
    9. ',int' → logprob: -13.099318504333496
    10. ' ' → logprob: -13.224318504333496

Token 596: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1289582252502441
    2. 'm' → logprob: -1.3789582252502441
    3. 'a' → logprob: -2.128958225250244
    4. 'q' → logprob: -2.128958225250244
    5. 'x' → logprob: -3.003958225250244
    6. ' =' → logprob: -3.503958225250244
    7. 'abc' → logprob: -3.503958225250244
    8. '=' → logprob: -4.003958225250244
    9. 'op' → logprob: -4.878958225250244
    10. 'A' → logprob: -4.878958225250244

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014935573562979698
    2. ',b' → logprob: -6.751493453979492
    3. 'b' → logprob: -8.251493453979492
    4. ' ,' → logprob: -10.001493453979492
    5. ' =' → logprob: -11.876493453979492
    6. '=' → logprob: -12.376493453979492
    7. 's' → logprob: -13.376493453979492
    8. ' ' → logprob: -13.751493453979492
    9. 'm' → logprob: -15.126493453979492
    10. ' b' → logprob: -15.251493453979492

Token 598: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010306637705070898
    2. 'c' → logprob: -9.875102996826172
    3. ' b' → logprob: -9.875102996826172
    4. 'bc' → logprob: -16.500102996826172
    5. ',b' → logprob: -17.125102996826172
    6. 'k' → logprob: -18.500102996826172
    7. ' ' → logprob: -19.375102996826172
    8. 'n' → logprob: -19.500102996826172
    9. 'a' → logprob: -19.625102996826172
    10. '*b' → logprob: -19.625102996826172

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. 'c' → logprob: -11.500016212463379
    3. ' ,' → logprob: -12.500016212463379
    4. ',c' → logprob: -13.000016212463379
    5. '=' → logprob: -17.125017166137695
    6. '_,' → logprob: -17.625017166137695
    7. 'import' → logprob: -17.875017166137695
    8. ' =' → logprob: -18.375017166137695
    9. 's' → logprob: -19.000017166137695
    10. ' c' → logprob: -19.250017166137695

Token 600: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.014684110297821e-06
    2. ' c' → logprob: -11.625008583068848
    3. 'cc' → logprob: -17.750009536743164
    4. '  ' → logprob: -18.625009536743164
    5. '	c' → logprob: -18.875009536743164
    6. '   ' → logprob: -18.875009536743164
    7. '_c' → logprob: -19.875009536743164
    8. ' ' → logprob: -20.375009536743164
    9. 'C' → logprob: -21.000009536743164
    10. 'ct' → logprob: -21.375009536743164

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615399710834026
    2. ' =' → logprob: -4.758615493774414
    3. '=input' → logprob: -14.633615493774414
    4. ',' → logprob: -15.008615493774414
    5. '=sys' → logprob: -16.883615493774414
    6. '=list' → logprob: -17.383615493774414
    7. '=line' → logprob: -17.383615493774414
    8. '＝' → logprob: -18.508615493774414
    9. ')' → logprob: -18.633615493774414
    10. ')=' → logprob: -18.883615493774414

Token 602: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00020985817536711693
    2. ' map' → logprob: -8.50020980834961
    3. 'list' → logprob: -12.00020980834961
    4. '(map' → logprob: -16.37520980834961
    5. '[' → logprob: -16.75020980834961
    6. '	map' → logprob: -17.37520980834961
    7. 'sys' → logprob: -18.37520980834961
    8. 'input' → logprob: -18.87520980834961
    9. '.map' → logprob: -20.00020980834961
    10. '_map' → logprob: -20.00020980834961

Token 603: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.5107177862082608e-05
    2. 'map' → logprob: -10.625024795532227
    3. '(' → logprob: -15.000024795532227
    4. '()' → logprob: -16.000024795532227
    5. ' map' → logprob: -16.125024795532227
    6. '(
' → logprob: -16.500024795532227
    7. '.map' → logprob: -17.375024795532227
    8. '	map' → logprob: -17.625024795532227
    9. '_map' → logprob: -17.750024795532227
    10. '(m' → logprob: -18.000024795532227

Token 604: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00041327282087877393
    2. 'int' → logprob: -7.875413417816162
    3. '(' → logprob: -10.500412940979004
    4. '<int' → logprob: -12.875412940979004
    5. '(
' → logprob: -13.500412940979004
    6. '=int' → logprob: -14.875412940979004
    7. ',int' → logprob: -14.875412940979004
    8. ' int' → logprob: -14.875412940979004
    9. '(str' → logprob: -15.375412940979004
    10. '[int' → logprob: -15.500412940979004

Token 605: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.28028300404548645
    2. ',' → logprob: -1.530282974243164
    3. 'input' → logprob: -4.030282974243164
    4. '(input' → logprob: -5.155282974243164
    5. ',int' → logprob: -5.655282974243164
    6. '(sys' → logprob: -8.530282974243164
    7. ' input' → logprob: -8.655282974243164
    8. '(int' → logprob: -8.780282974243164
    9. '(' → logprob: -9.030282974243164
    10. '   ' → logprob: -9.155282974243164

Token 606: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.147740689106286e-05
    2. ' input' → logprob: -9.75007152557373
    3. 'sys' → logprob: -11.25007152557373
    4. '   ' → logprob: -16.625070571899414
    5. ' sys' → logprob: -18.750070571899414
    6. 'str' → logprob: -19.000070571899414
    7. ' ' → logprob: -19.375070571899414
    8. 'int' → logprob: -19.625070571899414
    9. 'stdin' → logprob: -20.000070571899414
    10. 'Input' → logprob: -20.375070571899414

Token 607: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.008129963040119e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -16.250003814697266
    4. '.split' → logprob: -16.375003814697266
    5. '(' → logprob: -17.125003814697266
    6. '()
' → logprob: -18.500003814697266
    7. ' .' → logprob: -18.750003814697266
    8. '()))' → logprob: -18.750003814697266
    9. 'split' → logprob: -18.875003814697266
    10. '()[' → logprob: -19.375003814697266

Token 608: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.572941179503687e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -16.250045776367188
    4. 'rstrip' → logprob: -16.750045776367188
    5. '(split' → logprob: -17.000045776367188
    6. 'spl' → logprob: -17.500045776367188
    7. '.split' → logprob: -20.125045776367188
    8. '().' → logprob: -21.000045776367188
    9. ')' → logprob: -22.500045776367188
    10. 's' → logprob: -22.750045776367188

Token 609: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04459724202752113
    2. '()' → logprob: -3.2945971488952637
    3. '))' → logprob: -5.044597148895264
    4. '(' → logprob: -9.794597625732422
    5. '()))
' → logprob: -11.419597625732422
    6. '())' → logprob: -11.794597625732422
    7. '()));' → logprob: -11.794597625732422
    8. '('' → logprob: -12.669597625732422
    9. '(),' → logprob: -13.419597625732422
    10. '().' → logprob: -13.794597625732422

Token 610: '   ' (ID: 271)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.004176698625087738
    2. 'data' → logprob: -5.754176616668701
    3. ' op' → logprob: -7.129176616668701
    4. 'd' → logprob: -9.12917709350586
    5. 'ops' → logprob: -9.75417709350586
    6. '   ' → logprob: -12.12917709350586
    7. ' data' → logprob: -12.12917709350586
    8. 's' → logprob: -12.37917709350586
    9. 'l' → logprob: -12.87917709350586
    10. '	op' → logprob: -12.87917709350586

Token 611: ' data' (ID: 1238)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0011398615315556526
    2. 'd' → logprob: -8.126139640808105
    3. 'data' (adapté à ' data') → logprob: -8.501139640808105
    4. 'lst' → logprob: -8.626139640808105
    5. 'l' → logprob: -9.001139640808105
    6. 'ops' → logprob: -9.251139640808105
    7. 'q' → logprob: -10.001139640808105
    8. 'L' → logprob: -10.126139640808105
    9. 'm' → logprob: -10.251139640808105
    10. 'D' → logprob: -10.751139640808105

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055008769035339355
    2. ' =' → logprob: -2.930008888244629
    3. '=[' → logprob: -9.180008888244629
    4. '[' → logprob: -10.805008888244629
    5. 'data' → logprob: -14.555008888244629
    6. '```' → logprob: -14.680008888244629
    7. '=data' → logprob: -14.805008888244629
    8. '＝' → logprob: -14.930008888244629
    9. 's' → logprob: -15.305008888244629
    10. ',' → logprob: -15.555008888244629

Token 613: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00010306637705070898
    2. ' [' → logprob: -9.250102996826172
    3. '[' → logprob: -12.000102996826172
    4. '[A' → logprob: -14.125102996826172
    5. '[n' → logprob: -17.125102996826172
    6. '   ' → logprob: -18.000102996826172
    7. '[data' → logprob: -18.750102996826172
    8. '[b' → logprob: -18.875102996826172
    9. '[e' → logprob: -19.625102996826172
    10. '[
' → logprob: -19.875102996826172

Token 614: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.320199877838604e-07
    2. ' a' → logprob: -15.5
    3. '[a' → logprob: -16.0
    4. '   ' → logprob: -18.875
    5. '	a' → logprob: -19.75
    6. '[' → logprob: -22.625
    7. 'а' → logprob: -23.125
    8. '
' → logprob: -23.375
    9. 'A' → logprob: -23.375
    10. '  ' → logprob: -23.375

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02329578995704651
    2. ',b' → logprob: -3.7732958793640137
    3. ' ,' → logprob: -9.898295402526855
    4. ',
' → logprob: -16.773296356201172
    5. 'b' → logprob: -16.898296356201172
    6. ',B' → logprob: -17.023296356201172
    7. ',n' → logprob: -18.898296356201172
    8. ',m' → logprob: -21.148296356201172
    9. ',int' → logprob: -21.148296356201172
    10. ',c' → logprob: -21.273296356201172

Token 616: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233882926404476
    2. ' b' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.380233764648438
    4. '	b' → logprob: -18.755233764648438
    5. ' ' → logprob: -21.380233764648438
    6. '  ' → logprob: -21.505233764648438
    7. '    ' → logprob: -21.755233764648438
    8. ',b' → logprob: -22.255233764648438
    9. '
' → logprob: -23.130233764648438
    10. ')b' → logprob: -23.880233764648438

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007054025190882385
    2. ',c' → logprob: -7.625705242156982
    3. ' ,' → logprob: -8.50070571899414
    4. 'c' → logprob: -11.37570571899414
    5. ',
' → logprob: -13.00070571899414
    6. '   ' → logprob: -16.37570571899414
    7. '```' → logprob: -16.50070571899414
    8. '[' → logprob: -16.87570571899414
    9. ' c' → logprob: -16.87570571899414
    10. ',C' → logprob: -17.37570571899414

Token 618: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013260759878903627
    2. ' c' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.376325607299805
    4. '	c' → logprob: -16.876325607299805
    5. '
' → logprob: -17.501325607299805
    6. ' ' → logprob: -18.126325607299805
    7. ')c' → logprob: -19.501325607299805
    8. '  ' → logprob: -19.626325607299805
    9. '%c' → logprob: -20.251325607299805
    10. '    ' → logprob: -20.251325607299805

Token 619: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004071971052326262
    2. ',' → logprob: -8.875407218933105
    3. ']
' → logprob: -8.875407218933105
    4. ' ]' → logprob: -9.625407218933105
    5. ')' → logprob: -9.875407218933105
    6. '])' → logprob: -12.125407218933105
    7. '   ' → logprob: -13.750407218933105
    8. ')]' → logprob: -14.500407218933105
    9. '<|end|>' → logprob: -14.875407218933105
    10. '
' → logprob: -15.000407218933105

Token 620: '   ' (ID: 271)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0006212961161509156
    2. ' op' → logprob: -8.12562084197998
    3. 'ops' → logprob: -8.62562084197998
    4. '   ' → logprob: -9.00062084197998
    5. '	op' → logprob: -11.25062084197998
    6. 'OP' → logprob: -13.12562084197998
    7. 'operations' → logprob: -13.25062084197998
    8. 'n' → logprob: -13.37562084197998
    9. '_op' → logprob: -13.50062084197998
    10. '```' → logprob: -14.25062084197998

Token 621: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -2.816093228830141e-06
    2. 'ops' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.75000286102295
    4. ' op' → logprob: -15.12500286102295
    5. '    
' → logprob: -16.875001907348633
    6. '_op' → logprob: -16.875001907348633
    7. 'q' → logprob: -17.000001907348633
    8. 'Q' → logprob: -17.875001907348633
    9. 'OP' → logprob: -18.000001907348633
    10. 'L' → logprob: -18.000001907348633

Token 622: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.584239938296378e-06
    2. 's' → logprob: -12.000007629394531
    3. '_' → logprob: -14.500007629394531
    4. '_lst' → logprob: -14.875007629394531
    5. ' =' → logprob: -15.375007629394531
    6. 'list' → logprob: -15.875007629394531
    7. '_lists' → logprob: -16.75000762939453
    8. '_l' → logprob: -17.37500762939453
    9. '=_' → logprob: -17.37500762939453
    10. ' _' → logprob: -17.75000762939453

Token 623: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '=input' → logprob: -15.90475082397461
    4. '=[]' → logprob: -17.15475082397461
    5. '＝' → logprob: -17.27975082397461
    6. '=
' → logprob: -18.77975082397461
    7. ' =
' → logprob: -19.40475082397461
    8. '=list' → logprob: -19.65475082397461
    9. '=

' → logprob: -19.90475082397461
    10. '[' → logprob: -19.90475082397461

Token 624: ' ["' (ID: 9129)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.13395681977272034
    2. '[' → logprob: -2.1339569091796875
    3. '[list' → logprob: -5.6339569091796875
    4. '[n' → logprob: -7.2589569091796875
    5. '[item' → logprob: -7.6339569091796875
    6. '[i' → logprob: -7.8839569091796875
    7. '[str' → logprob: -8.008956909179688
    8. '[index' → logprob: -8.508956909179688
    9. '[array' → logprob: -8.883956909179688
    10. '[ip' → logprob: -9.008956909179688

Token 625: '"]' (ID: 2601)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.384836888173595e-05
    2. ' input' → logprob: -10.1250638961792
    3. '[input' → logprob: -11.3750638961792
    4. '(input' → logprob: -11.5000638961792
    5. '<input' → logprob: -14.1250638961792
    6. 'for' → logprob: -14.2500638961792
    7. '"' → logprob: -15.2500638961792
    8. '=input' → logprob: -15.6250638961792
    9. ',input' → logprob: -16.250062942504883
    10. '""' → logprob: -16.875062942504883

Token 626: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06593085080385208
    2. ' for' → logprob: -3.4409308433532715
    3. '[n' → logprob: -4.0659308433532715
    4. '<|end|>' → logprob: -5.4409308433532715
    5. '+' → logprob: -5.5659308433532715
    6. '*n' → logprob: -6.1909308433532715
    7. '*' → logprob: -6.4409308433532715
    8. '
' → logprob: -6.9409308433532715
    9. 'n' → logprob: -8.06593132019043
    10. '[' → logprob: -8.06593132019043

Token 627: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.511406809295295e-06
    2. '(n' → logprob: -12.250006675720215
    3. ' n' → logprob: -13.500006675720215
    4. '	n' → logprob: -15.000006675720215
    5. '(' → logprob: -17.8750057220459
    6. '[n' → logprob: -18.2500057220459
    7. '_n' → logprob: -18.5000057220459
    8. '<|end|>' → logprob: -19.5000057220459
    9. ')n' → logprob: -20.0000057220459
    10. 'N' → logprob: -20.1250057220459

Token 628: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 629: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022174416109919548
    2. ' for' → logprob: -4.27217435836792
    3. '<|end|>' → logprob: -4.89717435836792
    4. 'n' → logprob: -8.647174835205078
    5. ')' → logprob: -8.897174835205078
    6. '[' → logprob: -9.147174835205078
    7. 'i' → logprob: -10.397174835205078
    8. '<|end|>' → logprob: -11.022174835205078
    9. '   ' → logprob: -11.522174835205078
    10. '.' → logprob: -12.272174835205078

Token 630: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008085522567853332
    2. ' for' → logprob: -7.1258087158203125
    3. '	for' → logprob: -13.250808715820312
    4. '   ' → logprob: -13.500808715820312
    5. '<|end|>' → logprob: -14.750808715820312
    6. 'n' → logprob: -15.250808715820312
    7. '[' → logprob: -16.750808715820312
    8. ')' → logprob: -16.750808715820312
    9. 'import' → logprob: -17.375808715820312
    10. '
' → logprob: -17.375808715820312

Token 631: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027134892297908664
    2. ' i' → logprob: -8.250271797180176
    3. '_i' → logprob: -11.875271797180176
    4. '_' → logprob: -12.750271797180176
    5. 'key' → logprob: -16.37527084350586
    6. 'idx' → logprob: -17.12527084350586
    7. 'k' → logprob: -17.62527084350586
    8. '	i' → logprob: -17.75027084350586
    9. 'I' → logprob: -18.25027084350586
    10. '_key' → logprob: -18.75027084350586

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008738666772842407
    2. 'in' → logprob: -4.7587385177612305
    3. ' ' → logprob: -9.75873851776123
    4. 'n' → logprob: -9.88373851776123
    5. ' i' → logprob: -11.88373851776123
    6. ' n' → logprob: -12.25873851776123
    7. '	in' → logprob: -13.75873851776123
    8. '  ' → logprob: -14.38373851776123
    9. ',' → logprob: -14.63373851776123
    10. '_' → logprob: -14.75873851776123

Token 633: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018159886822104454
    2. ' range' → logprob: -4.018159866333008
    3. 'in' → logprob: -11.643159866333008
    4. 'n' → logprob: -15.268159866333008
    5. ' in' → logprob: -15.393159866333008
    6. 'i' → logprob: -15.518159866333008
    7. '_' → logprob: -16.018159866333008
    8. '(range' → logprob: -16.393159866333008
    9. 'rang' → logprob: -16.518159866333008
    10. 'r' → logprob: -16.643159866333008

Token 634: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03805273771286011
    2. 'n' → logprob: -3.288052797317505
    3. '	n' → logprob: -12.288052558898926
    4. ' n' → logprob: -12.538052558898926
    5. '(' → logprob: -12.913052558898926
    6. ' (' → logprob: -15.163052558898926
    7. '
' → logprob: -15.788052558898926
    8. '(
' → logprob: -16.538053512573242
    9. '<n' → logprob: -16.788053512573242
    10. '   ' → logprob: -17.038053512573242

Token 635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06290808320045471
    2. '):
' → logprob: -2.812908172607422
    3. ':' → logprob: -7.187908172607422
    4. ',' → logprob: -9.937908172607422
    5. '():' → logprob: -10.187908172607422
    6. ')' → logprob: -10.437908172607422
    7. '   ' → logprob: -10.687908172607422
    8. '():
' → logprob: -11.312908172607422
    9. ' ):' → logprob: -11.437908172607422
    10. '):
' → logprob: -12.187908172607422

Token 636: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11393643170595169
    2. '       ' → logprob: -2.488936424255371
    3. ' op' → logprob: -4.363936424255371
    4. '	op' → logprob: -4.488936424255371
    5. 'op' → logprob: -7.488936424255371
    6. '(op' → logprob: -9.613936424255371
    7. '<|end|>' → logprob: -9.738936424255371
    8. '```' → logprob: -11.738936424255371
    9. '<|end|>' → logprob: -12.113936424255371
    10. ' ' → logprob: -12.238936424255371

Token 637: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.00044496997725218534
    2. ' op' → logprob: -7.7504448890686035
    3. '   ' → logprob: -11.250445365905762
    4. '	op' → logprob: -14.000445365905762
    5. '_op' → logprob: -14.875445365905762
    6. '       ' → logprob: -15.875445365905762
    7. 'OP' → logprob: -17.250444412231445
    8. '(op' → logprob: -17.750444412231445
    9. '.op' → logprob: -17.875444412231445
    10. 'opt' → logprob: -19.625444412231445

Token 638: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1131020188331604
    2. ' =' → logprob: -2.2381019592285156
    3. '=input' → logprob: -8.363101959228516
    4. '   ' → logprob: -11.613101959228516
    5. '_=' → logprob: -12.113101959228516
    6. '_input' → logprob: -12.238101959228516
    7. 'input' → logprob: -12.613101959228516
    8. '_list' → logprob: -12.613101959228516
    9. '_' → logprob: -12.988101959228516
    10. '.=' → logprob: -13.113101959228516

Token 639: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -13.000004768371582
    3. '[int' → logprob: -13.375004768371582
    4. '[
' → logprob: -15.250004768371582
    5. '[input' → logprob: -15.750004768371582
    6. '=' → logprob: -16.625003814697266
    7. ' [' → logprob: -17.375003814697266
    8. ' =' → logprob: -18.000003814697266
    9. '[in' → logprob: -18.000003814697266
    10. '[str' → logprob: -18.375003814697266

Token 640: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197037547826767
    2. ' =' → logprob: -2.8119704723358154
    3. '=input' → logprob: -13.061970710754395
    4. ')=' → logprob: -15.436970710754395
    5. ' ' → logprob: -16.061969757080078
    6. ')' → logprob: -16.186969757080078
    7. '＝' → logprob: -16.311969757080078
    8. ',' → logprob: -17.561969757080078
    9. ']=' → logprob: -17.936969757080078
    10. ' =
' → logprob: -18.061969757080078

Token 641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003357006062287837
    2. ' =' → logprob: -8.000335693359375
    3. '=input' → logprob: -15.125335693359375
    4. '＝' → logprob: -18.875335693359375
    5. '.=' → logprob: -19.375335693359375
    6. '+=' → logprob: -19.750335693359375
    7. '=

' → logprob: -21.000335693359375
    8. '=
' → logprob: -21.500335693359375
    9. '=in' → logprob: -21.500335693359375
    10. '=sys' → logprob: -21.875335693359375

Token 642: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.704273118884885e-07
    2. ' input' → logprob: -14.250000953674316
    3. 'str' → logprob: -19.375
    4. '(input' → logprob: -20.125
    5. '<input' → logprob: -21.875
    6. '	input' → logprob: -22.5
    7. '=input' → logprob: -23.0
    8. 'inp' → logprob: -24.25
    9. '[input' → logprob: -24.5
    10. ',input' → logprob: -25.0

Token 643: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014175849966704845
    2. '().' → logprob: -4.264175891876221
    3. ' ()' → logprob: -11.764175415039062
    4. '()
' → logprob: -12.889175415039062
    5. '.strip' → logprob: -14.764175415039062
    6. '();' → logprob: -15.139175415039062
    7. '（）' → logprob: -15.639175415039062
    8. '()<' → logprob: -15.764175415039062
    9. '()>' → logprob: -15.889175415039062
    10. '(' → logprob: -15.889175415039062

Token 644: '   ' (ID: 271)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.2077416330575943
    2. 'p' → logprob: -1.707741618156433
    3. 'pl' → logprob: -5.207741737365723
    4. '   ' → logprob: -7.457741737365723
    5. 'ply' → logprob: -8.832741737365723
    6. 'P' → logprob: -10.082741737365723
    7. ' player' → logprob: -10.832741737365723
    8. 'plt' → logprob: -11.957741737365723
    9. 'pp' → logprob: -12.207741737365723
    10. ' p' → logprob: -12.332741737365723

Token 645: ' p' (ID: 275)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.028411366045475006
    2. 'p' (adapté à ' p') → logprob: -3.778411388397217
    3. 'pl' → logprob: -5.278411388397217
    4. 'ply' → logprob: -11.028410911560059
    5. ' player' → logprob: -11.028410911560059
    6. 'game' → logprob: -11.778410911560059
    7. 'P' → logprob: -12.028410911560059
    8. ' p' → logprob: -13.778410911560059
    9. 'pp' → logprob: -13.778410911560059
    10. 'plt' → logprob: -13.903410911560059

Token 646: ' =' (ID: 314)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layer' → logprob: -0.0632578432559967
    2. ' =' → logprob: -2.813257932662964
    3. '=' → logprob: -6.813257694244385
    4. 'layers' → logprob: -9.438258171081543
    5. 'lay' → logprob: -9.563258171081543
    6. 'r' → logprob: -11.063258171081543
    7. 'Layer' → logprob: -11.688258171081543
    8. '_layer' → logprob: -12.938258171081543
    9. '1' → logprob: -13.063258171081543
    10. 'l' → logprob: -13.063258171081543

Token 647: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.00033546582562848926
    2. ' Player' → logprob: -8.000335693359375
    3. '	Player' → logprob: -17.750335693359375
    4. '(Player' → logprob: -19.250335693359375
    5. '_Player' → logprob: -19.750335693359375
    6. '.Player' → logprob: -21.250335693359375
    7. '<Player' → logprob: -21.250335693359375
    8. 'player' → logprob: -21.875335693359375
    9. '_player' → logprob: -22.000335693359375
    10. 'Players' → logprob: -23.625335693359375

Token 648: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.00011033779446734115
    2. 'data' → logprob: -9.125110626220703
    3. '(' → logprob: -14.250110626220703
    4. '[data' → logprob: -14.750110626220703
    5. '([' → logprob: -15.500110626220703
    6. ' data' → logprob: -17.125110626220703
    7. ' (' → logprob: -17.250110626220703
    8. ')data' → logprob: -17.250110626220703
    9. '(
' → logprob: -17.500110626220703
    10. '=data' → logprob: -17.875110626220703

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',
' → logprob: -16.750001907348633
    4. 'op' → logprob: -19.125001907348633
    5. '(op' → logprob: -19.125001907348633
    6. ',opt' → logprob: -21.000001907348633
    7. ',p' → logprob: -21.625001907348633
    8. '，' → logprob: -21.750001907348633
    9. ')' → logprob: -22.000001907348633
    10. '.op' → logprob: -22.500001907348633

Token 650: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.10020678490400314
    2. ' op' → logprob: -2.3502068519592285
    3. '	op' → logprob: -15.60020637512207
    4. '(op' → logprob: -16.97520637512207
    5. 'opf' → logprob: -17.22520637512207
    6. '_op' → logprob: -17.97520637512207
    7. '.op' → logprob: -18.97520637512207
    8. '-op' → logprob: -19.47520637512207
    9. 'ops' → logprob: -19.85020637512207
    10. ')' → logprob: -19.97520637512207

Token 651: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.027225754223764e-05
    2. 'list' → logprob: -9.750060081481934
    3. 'op' → logprob: -13.375060081481934
    4. 'List' → logprob: -15.375060081481934
    5. 'ist' → logprob: -16.25006103515625
    6. '.op' → logprob: -19.00006103515625
    7. 'lst' → logprob: -19.50006103515625
    8. '_op' → logprob: -20.00006103515625
    9. '_LIST' → logprob: -20.12506103515625
    10. 'l' → logprob: -20.12506103515625

Token 652: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20142892003059387
    2. ')' → logprob: -1.7014288902282715
    3. ')
' → logprob: -11.57642936706543
    4. ')p' → logprob: -12.20142936706543
    5. ')

' → logprob: -14.20142936706543
    6. ' )
' → logprob: -14.95142936706543
    7. ').' → logprob: -15.95142936706543
    8. ');
' → logprob: -16.95142936706543
    9. '   ' → logprob: -17.07642936706543
    10. 'p' → logprob: -17.45142936706543

Token 653: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.32392441527918e-05
    2. '   ' → logprob: -10.375053405761719
    3. ' p' → logprob: -10.750053405761719
    4. 'play' → logprob: -15.250053405761719
    5. '```' → logprob: -15.500053405761719
    6. '
' → logprob: -16.87505340576172
    7. 'player' → logprob: -17.75005340576172
    8. '	p' → logprob: -18.12505340576172
    9. 'pp' → logprob: -19.00005340576172
    10. '<|end|>' → logprob: -19.25005340576172

Token 654: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -7.896309739408025e-07
    2. ' p' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -18.25
    5. '
' → logprob: -20.125
    6. '	p' → logprob: -22.0
    7. '``' → logprob: -22.75
    8. '    
' → logprob: -22.875
    9. '<|end|>' → logprob: -23.0
    10. ')p' → logprob: -23.125

Token 655: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -1.8670179997570813e-05
    2. 'play' → logprob: -11.000019073486328
    3. '.' → logprob: -13.250019073486328
    4. '.move' → logprob: -16.625019073486328
    5. ' .' → logprob: -16.875019073486328
    6. ' play' → logprob: -17.000019073486328
    7. '.run' → logprob: -17.125019073486328
    8. '	play' → logprob: -18.125019073486328
    9. '.print' → logprob: -18.375019073486328
    10. '.Play' → logprob: -18.625019073486328

Token 656: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7298904061317444
    2. '
' → logprob: -1.6048903465270996
    3. 'p' → logprob: -1.9798903465270996
    4. '()' → logprob: -2.2298903465270996
    5. '<|end|>' → logprob: -3.7298903465270996
    6. '   ' → logprob: -4.1048903465271
    7. '(p' → logprob: -4.4798903465271
    8. 'if' → logprob: -5.9798903465271
    9. 'print' → logprob: -6.1048903465271
    10. ',p' → logprob: -6.6048903465271

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3149332106113434
    2. 'p' → logprob: -1.314933180809021
    3. ' p' → logprob: -6.4399333000183105
    4. '
' → logprob: -10.314932823181152
    5. '```' → logprob: -11.439932823181152
    6. '  ' → logprob: -11.939932823181152
    7. '<|end|>' → logprob: -12.064932823181152
    8. '	p' → logprob: -12.064932823181152
    9. ' ' → logprob: -12.314932823181152
    10. '    
' → logprob: -13.314932823181152

Token 658: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.5
    4. '
' → logprob: -20.875
    5. 'if' → logprob: -21.125
    6. '	p' → logprob: -22.5
    7. '```' → logprob: -22.5
    8. 'pp' → logprob: -22.75
    9. '    
' → logprob: -23.875
    10. '(p' → logprob: -24.25

Token 659: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.0001640876434976235
    2. '.' → logprob: -8.750164031982422
    3. 'print' → logprob: -12.125164031982422
    4. '.
' → logprob: -16.625164031982422
    5. '.println' → logprob: -16.750164031982422
    6. ' .' → logprob: -17.375164031982422
    7. '​.' → logprob: -18.125164031982422
    8. '.show' → logprob: -18.375164031982422
    9. '\.' → logprob: -18.375164031982422
    10. '.p' → logprob: -18.625164031982422

Token 660: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00020866614067927003
    2. 'ans' → logprob: -8.875208854675293
    3. 'Ans' → logprob: -9.625208854675293
    4. '(ans' → logprob: -12.875208854675293
    5. '	ans' → logprob: -16.000207901000977
    6. '()' → logprob: -17.375207901000977
    7. '_an' → logprob: -17.750207901000977
    8. 'ANS' → logprob: -18.250207901000977
    9. '_answer' → logprob: -18.625207901000977
    10. ' Ans' → logprob: -18.875207901000977

Token 661: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 659
Tokens correctement prédits (1ère position, stricte): 277
Tokens correctement prédits (1ère position, avec adaptation): 314
Tokens correctement prédits (top 10): 549
Précision stricte (1ère position): 42.03%
Précision adaptée (1ère position): 47.65%
Précision (top 10): 83.31%
================================================================================
