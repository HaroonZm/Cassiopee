================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
numbers = input().split()
even_count = 0
odd_count = 0
even_35_count = 0

for i in range(n):
    num = int(numbers[i])
    if num % 2 == 0:
        even_count = even_count + 1
        if num % 3 == 0 or num % 5 == 0:
            even_35_count = even_35_count + 1
    else:
        odd_count = odd_count + 1

if even_count == even_35_count:
    print("APPROVED")
else:
    print("DENIED")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008236800786107779
    2. ''' → logprob: -8.250823974609375
    3. '('' → logprob: -8.750823974609375
    4. '(n' → logprob: -9.000823974609375
    5. '`' → logprob: -9.125823974609375
    6. '```' → logprob: -9.500823974609375
    7. '("("' → logprob: -11.125823974609375
    8. '()' → logprob: -11.125823974609375
    9. '_' → logprob: -11.375823974609375
    10. ')' → logprob: -11.625823974609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'numbers' (ID: 85055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6432508826255798
    2. 'i' → logprob: -1.5182509422302246
    3. 'if' → logprob: -2.1432509422302246
    4. 's' → logprob: -2.6432509422302246
    5. 'f' → logprob: -4.768250942230225
    6. ' ' → logprob: -4.768250942230225
    7. 'x' → logprob: -5.143250942230225
    8. '#' → logprob: -5.143250942230225
    9. ''' → logprob: -5.643250942230225
    10. ' for' → logprob: -5.643250942230225

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031637754291296005
    2. '.' → logprob: -3.781637668609619
    3. '[]' → logprob: -6.281637668609619
    4. '.append' → logprob: -6.406637668609619
    5. '[:]' → logprob: -6.781637668609619
    6. '[n' → logprob: -7.281637668609619
    7. '```' → logprob: -7.531637668609619
    8. '\[' → logprob: -7.656637668609619
    9. '[i' → logprob: -8.281638145446777
    10. '[count' → logprob: -8.406638145446777

Token 7: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.05805512145161629
    2. '[]' → logprob: -3.6830551624298096
    3. ' list' → logprob: -3.9330551624298096
    4. 'list' → logprob: -4.9330549240112305
    5. ' [' → logprob: -5.9330549240112305
    6. '[' → logprob: -6.5580549240112305
    7. ' ' → logprob: -8.43305492401123
    8. '[input' → logprob: -9.30805492401123
    9. 'input' → logprob: -10.30805492401123
    10. ' input' → logprob: -10.43305492401123

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005604157689958811
    2. '('' → logprob: -6.005604267120361
    3. ''' → logprob: -6.130604267120361
    4. '()' → logprob: -8.005603790283203
    5. '"' → logprob: -8.380603790283203
    6. '("("' → logprob: -9.005603790283203
    7. ')' → logprob: -9.880603790283203
    8. '(
' → logprob: -10.130603790283203
    9. '```' → logprob: -10.255603790283203
    10. ' (' → logprob: -10.505603790283203

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005663761985488236
    2. 'strip' → logprob: -7.500566482543945
    3. 's' → logprob: -12.375566482543945
    4. ' split' → logprob: -12.500566482543945
    5. 'spl' → logprob: -12.875566482543945
    6. 'rstrip' → logprob: -13.500566482543945
    7. 'sp' → logprob: -14.250566482543945
    8. 'replace' → logprob: -14.375566482543945
    9. 'rs' → logprob: -15.750566482543945
    10. '```' → logprob: -17.375566482543945

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09615251421928406
    2. '()' → logprob: -2.4711525440216064
    3. '('' → logprob: -5.721152305603027
    4. '("("' → logprob: -6.221152305603027
    5. '`' → logprob: -7.721152305603027
    6. '"' → logprob: -7.846152305603027
    7. '`()' → logprob: -8.596152305603027
    8. '(
' → logprob: -8.721152305603027
    9. '((' → logprob: -8.721152305603027
    10. '```' → logprob: -8.846152305603027

Token 11: 'even' (ID: 28689)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3684821128845215
    2. '[' → logprob: -2.4934821128845215
    3. 'numbers' → logprob: -2.4934821128845215
    4. 'result' → logprob: -2.9934821128845215
    5. 'nums' → logprob: -4.1184821128845215
    6. 'num' → logprob: -4.2434821128845215
    7. 'sum' → logprob: -4.3684821128845215
    8. 'n' → logprob: -4.3684821128845215
    9. 'count' → logprob: -4.6184821128845215
    10. 's' → logprob: -4.7434821128845215

Token 12: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012024848721921444
    2. '_numbers' → logprob: -4.762024879455566
    3. 's' → logprob: -6.137024879455566
    4. '_s' → logprob: -8.137024879455566
    5. '_num' → logprob: -8.762024879455566
    6. '_nums' → logprob: -8.762024879455566
    7. '_count' → logprob: -9.137024879455566
    8. '_counts' → logprob: -9.137024879455566
    9. '[]' → logprob: -9.512024879455566
    10. '()' → logprob: -10.387024879455566

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0262262225151062
    2. ' =' → logprob: -4.526226043701172
    3. ' ' → logprob: -5.526226043701172
    4. ' +=' → logprob: -5.776226043701172
    5. '_space' → logprob: -6.276226043701172
    6. '=' → logprob: -6.401226043701172
    7. ' _' → logprob: -6.776226043701172
    8. '[' → logprob: -6.776226043701172
    9. ')' → logprob: -7.151226043701172
    10. 's' → logprob: -8.651226043701172

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38946226239204407
    2. '0' → logprob: -1.1394622325897217
    3. ' sum' → logprob: -6.764462471008301
    4. 'sum' → logprob: -6.889462471008301
    5. 'numbers' → logprob: -8.6394624710083
    6. ' numbers' → logprob: -8.7644624710083
    7. ' len' → logprob: -10.3894624710083
    8. 'len' → logprob: -10.5144624710083
    9. ' n' → logprob: -11.5144624710083
    10. ' ' → logprob: -13.0769624710083

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017982310382649302
    2. 'sum' → logprob: -6.626798152923584
    3. 'numbers' → logprob: -8.001798629760742
    4. ' ' → logprob: -9.126798629760742
    5. 'len' → logprob: -11.001798629760742
    6. ' sum' → logprob: -12.376798629760742
    7. '`' → logprob: -13.001798629760742
    8. ' numbers' → logprob: -13.626798629760742
    9. '1' → logprob: -14.751798629760742
    10. '"' → logprob: -14.876798629760742

Token 16: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012366730719804764
    2. ' for' → logprob: -4.887366771697998
    3. '\n' → logprob: -5.387366771697998
    4. '
' → logprob: -9.01236629486084
    5. '```' → logprob: -10.38736629486084
    6. '\' → logprob: -11.38736629486084
    7. '' → logprob: -12.51236629486084
    8. 'newline' → logprob: -13.51236629486084
    9. '<|end|>' → logprob: -14.01236629486084
    10. '.for' → logprob: -14.26236629486084

Token 17: 'odd' (ID: 18303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008114131633192301
    2. ' for' → logprob: -7.625811576843262
    3. '```' → logprob: -8.125811576843262
    4. '\n' → logprob: -10.625811576843262
    5. '``' → logprob: -13.625811576843262
    6. '
' → logprob: -14.500811576843262
    7. '`' → logprob: -14.625811576843262
    8. '\' → logprob: -15.250811576843262
    9. '	for' → logprob: -15.375811576843262
    10. 'newline' → logprob: -16.375810623168945

Token 18: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6953705549240112
    2. '_count' → logprob: -0.6953705549240112
    3. '_counts' → logprob: -6.570370674133301
    4. ' _' → logprob: -8.1953706741333
    5. '_counter' → logprob: -9.5703706741333
    6. '_num' → logprob: -10.0703706741333
    7. '_s' → logprob: -10.1953706741333
    8. '_c' → logprob: -10.1953706741333
    9. '_number' → logprob: -10.1953706741333
    10. '_n' → logprob: -10.8203706741333

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028395876288414
    2. '=' → logprob: -5.8778395652771
    3. ' +=' → logprob: -10.877840042114258
    4. ' ' → logprob: -11.252840042114258
    5. ' |=' → logprob: -14.252840042114258
    6. ' =
' → logprob: -14.252840042114258
    7. ' =)' → logprob: -14.627840042114258
    8. ')' → logprob: -14.877840042114258
    9. '<|end|>' → logprob: -15.502840042114258
    10. ' )' → logprob: -16.127840042114258

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2014296054840088
    2. '0' → logprob: -1.7014296054840088
    3. ' n' → logprob: -11.95142936706543
    4. ' len' → logprob: -12.57642936706543
    5. '1' → logprob: -13.45142936706543
    6. 'len' → logprob: -13.57642936706543
    7. ' ' → logprob: -13.82642936706543
    8. 'n' → logprob: -13.82642936706543
    9. '  ' → logprob: -14.95142936706543
    10. ')' → logprob: -16.01392936706543

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282858997583389
    2. ' ' → logprob: -2.237828493118286
    3. ' n' → logprob: -13.612828254699707
    4. 'n' → logprob: -13.612828254699707
    5. 'len' → logprob: -13.862828254699707
    6. '1' → logprob: -13.987828254699707
    7. '  ' → logprob: -14.675328254699707
    8. ' ' → logprob: -15.112828254699707
    9. ')' → logprob: -15.737828254699707
    10. ' len' → logprob: -15.862828254699707

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026858307421207428
    2. '
' → logprob: -4.401858329772949
    3. '\n' → logprob: -4.901858329772949
    4. ' for' → logprob: -5.276858329772949
    5. '```' → logprob: -6.526858329772949
    6. '' → logprob: -9.02685832977295
    7. '
' → logprob: -9.65185832977295
    8. '\' → logprob: -11.40185832977295
    9. ' 
' → logprob: -11.52685832977295
    10. 'newline' → logprob: -11.77685832977295

Token 23: 'even' (ID: 28689)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007671024068258703
    2. '```' → logprob: -8.12576675415039
    3. '
' → logprob: -8.37576675415039
    4. '\n' → logprob: -8.75076675415039
    5. ' for' → logprob: -9.62576675415039
    6. 'n' → logprob: -12.12576675415039
    7. '' → logprob: -12.12576675415039
    8. '\' → logprob: -14.00076675415039
    9. '`' → logprob: -14.12576675415039
    10. 'For' → logprob: -14.25076675415039

Token 24: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04357568547129631
    2. '_count' → logprob: -3.1685757637023926
    3. '_counts' → logprob: -8.418575286865234
    4. ' _' → logprob: -8.543575286865234
    5. '_sum' → logprob: -10.668575286865234
    6. 's' → logprob: -11.168575286865234
    7. '_numbers' → logprob: -11.293575286865234
    8. '_=' → logprob: -11.543575286865234
    9. '_

' → logprob: -11.918575286865234
    10. ')' → logprob: -12.043575286865234

Token 25: '35' (ID: 2467)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39114394783973694
    2. 'sum' → logprob: -1.1411439180374146
    3. 'numbers' → logprob: -5.641143798828125
    4. 'indices' → logprob: -8.141143798828125
    5. 'list' → logprob: -9.266143798828125
    6. 'index' → logprob: -9.266143798828125
    7. 'indexes' → logprob: -9.891143798828125
    8. '_count' → logprob: -10.141143798828125
    9. '_sum' → logprob: -10.266143798828125
    10. 'values' → logprob: -10.641143798828125

Token 26: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0578923374414444
    2. '_' → logprob: -3.057892322540283
    3. '_sum' → logprob: -6.057892322540283
    4. ' =' → logprob: -6.557892322540283
    5. '5' → logprob: -6.932892322540283
    6. 'count' → logprob: -7.182892322540283
    7. '0' → logprob: -7.182892322540283
    8. '7' → logprob: -7.432892322540283
    9. '_counts' → logprob: -7.807892322540283
    10. '=' → logprob: -7.932892322540283

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013647767715156078
    2. '=' → logprob: -4.388647556304932
    3. ' ' → logprob: -7.513647556304932
    4. '_' → logprob: -7.638647556304932
    5. ' +=' → logprob: -9.76364803314209
    6. 's' → logprob: -11.38864803314209
    7. ')' → logprob: -11.88864803314209
    8. 'space' → logprob: -11.88864803314209
    9. '_space' → logprob: -12.26364803314209
    10. ' _' → logprob: -12.38864803314209

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231296420097351
    2. '0' → logprob: -0.8981296420097351
    3. '1' → logprob: -13.5231294631958
    4. ' len' → logprob: -14.1481294631958
    5. ' ' → logprob: -14.2731294631958
    6. 'len' → logprob: -14.3981294631958
    7. 'sum' → logprob: -14.7731294631958
    8. ' sum' → logprob: -14.8356294631958
    9. ')' → logprob: -14.8356294631958
    10. ' numbers' → logprob: -15.2106294631958

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003601021133363247
    2. ' ' → logprob: -5.62860107421875
    3. '1' → logprob: -15.12860107421875
    4. 'len' → logprob: -15.37860107421875
    5. 'sum' → logprob: -15.75360107421875
    6. ')' → logprob: -16.62860107421875
    7. '  ' → logprob: -16.94110107421875
    8. 'n' → logprob: -16.94110107421875
    9. '3' → logprob: -17.31610107421875
    10. '2' → logprob: -17.56610107421875

Token 30: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03041202947497368
    2. '\n' → logprob: -4.030412197113037
    3. '
' → logprob: -4.905412197113037
    4. ' for' → logprob: -5.530412197113037
    5. '' → logprob: -8.280411720275879
    6. '
' → logprob: -8.530411720275879
    7. '```' → logprob: -8.655411720275879
    8. '\' → logprob: -9.780411720275879
    9. 'newline' → logprob: -10.280411720275879
    10. 'n' → logprob: -10.405411720275879

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.281485836254433e-05
    2. '
' → logprob: -9.750092506408691
    3. '```' → logprob: -11.000092506408691
    4. ' for' → logprob: -11.625092506408691
    5. '\n' → logprob: -11.750092506408691
    6. '' → logprob: -15.750092506408691
    7. '``' → logprob: -15.875092506408691
    8. '	for' → logprob: -16.250093460083008
    9. '\' → logprob: -16.250093460083008
    10. 'For' → logprob: -16.500093460083008

Token 32: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4466291666030884
    2. ' i' → logprob: -1.0716291666030884
    3. ' number' → logprob: -4.696629047393799
    4. ' n' → logprob: -5.446629047393799
    5. ' _' → logprob: -6.321629047393799
    6. '_' → logprob: -6.696629047393799
    7. ' num' → logprob: -6.821629047393799
    8. 'i' → logprob: -9.571629524230957
    9. ' x' → logprob: -10.446629524230957
    10. ' ' → logprob: -10.571629524230957

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08464605361223221
    2. ' ' → logprob: -2.584645986557007
    3. 'in' → logprob: -5.334646224975586
    4. '  ' → logprob: -7.959646224975586
    5. ' i' → logprob: -8.334646224975586
    6. '[' → logprob: -9.584646224975586
    7. '<|end|>' → logprob: -9.709646224975586
    8. ' n' → logprob: -9.959646224975586
    9. ' ,' → logprob: -10.459646224975586
    10. ' ```' → logprob: -10.959646224975586

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11080501973628998
    2. ' numbers' → logprob: -2.360805034637451
    3. 'range' → logprob: -5.110805034637451
    4. ' ' → logprob: -6.110805034637451
    5. ' n' → logprob: -6.735805034637451
    6. 'numbers' → logprob: -6.860805034637451
    7. 'n' → logprob: -10.735804557800293
    8. ' number' → logprob: -11.985804557800293
    9. '(numbers' → logprob: -12.235804557800293
    10. ' in' → logprob: -12.360804557800293

Token 35: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02410247176885605
    2. '(n' → logprob: -3.7741024494171143
    3. ' (' → logprob: -7.149102687835693
    4. '(
' → logprob: -10.024102210998535
    5. '(len' → logprob: -10.774102210998535
    6. ' ' → logprob: -13.024102210998535
    7. '(

' → logprob: -13.524102210998535
    8. '(range' → logprob: -14.774102210998535
    9. '（' → logprob: -15.024102210998535
    10. ')' → logprob: -15.024102210998535

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026679472997784615
    2. ')' → logprob: -3.651679515838623
    3. ' ):' → logprob: -8.401679039001465
    4. '):
' → logprob: -9.151679039001465
    5. ' )' → logprob: -11.026679039001465
    6. '+' → logprob: -11.276679039001465
    7. ':' → logprob: -11.776679039001465
    8. '[i' → logprob: -13.401679039001465
    9. '[' → logprob: -13.401679039001465
    10. ' ' → logprob: -13.776679039001465

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3848743438720703
    2. ' if' → logprob: -1.8848743438720703
    3. ' ' → logprob: -2.5098743438720703
    4. '    
' → logprob: -3.5098743438720703
    5. ' 
' → logprob: -4.13487434387207
    6. ' numbers' → logprob: -4.38487434387207
    7. '    ' → logprob: -4.63487434387207
    8. '     
' → logprob: -4.88487434387207
    9. 'if' → logprob: -6.25987434387207
    10. ' n' → logprob: -7.00987434387207

Token 38: ' num' (ID: 2269)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4976135194301605
    2. '   ' → logprob: -1.622613549232483
    3. ' num' → logprob: -2.1226134300231934
    4. 'if' → logprob: -3.8726134300231934
    5. 'num' (adapté à ' num') → logprob: -3.8726134300231934
    6. ' numbers' → logprob: -4.122613430023193
    7. ' number' → logprob: -4.622613430023193
    8. '    ' → logprob: -6.497613430023193
    9. ' x' → logprob: -6.747613430023193
    10. 'number' → logprob: -6.747613430023193

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017611300572752953
    2. '=' → logprob: -4.142611503601074
    3. 's' → logprob: -6.892611503601074
    4. '=int' → logprob: -8.142611503601074
    5. ' ' → logprob: -8.392611503601074
    6. ')' → logprob: -10.892611503601074
    7. ']' → logprob: -12.017611503601074
    8. '   ' → logprob: -12.017611503601074
    9. '  ' → logprob: -13.267611503601074
    10. '    ' → logprob: -13.392611503601074

Token 40: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759544968605042
    2. ' int' → logprob: -0.8259544968605042
    3. '   ' → logprob: -12.45095443725586
    4. ' ' → logprob: -12.57595443725586
    5. '(int' → logprob: -13.32595443725586
    6. '[int' → logprob: -13.57595443725586
    7. '	int' → logprob: -13.57595443725586
    8. '    ' → logprob: -13.95095443725586
    9. '=int' → logprob: -14.20095443725586
    10. ' numbers' → logprob: -14.57595443725586

Token 41: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.00193280098028481
    2. '(' → logprob: -6.251932621002197
    3. '(number' → logprob: -13.251933097839355
    4. ' (' → logprob: -13.751933097839355
    5. 'numbers' → logprob: -14.376933097839355
    6. '(n' → logprob: -15.251933097839355
    7. ' numbers' → logprob: -15.376933097839355
    8. '(num' → logprob: -15.751933097839355
    9. '(
' → logprob: -17.12693214416504
    10. '(nums' → logprob: -17.37693214416504

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00983247347176075
    2. '[' → logprob: -4.634832382202148
    3. ')' → logprob: -10.259832382202148
    4. '[num' → logprob: -10.634832382202148
    5. ' [' → logprob: -11.759832382202148
    6. '[n' → logprob: -12.634832382202148
    7. '[
' → logprob: -13.009832382202148
    8. ')[' → logprob: -13.384832382202148
    9. '[I' → logprob: -13.884832382202148
    10. '\[' → logprob: -15.259832382202148

Token 43: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038360210601240396
    2. '])' → logprob: -8.500383377075195
    3. ')
' → logprob: -9.125383377075195
    4. ' )' → logprob: -10.250383377075195
    5. '))' → logprob: -10.500383377075195
    6. '   ' → logprob: -13.000383377075195
    7. '`)' → logprob: -13.375383377075195
    8. ']' → logprob: -14.000383377075195
    9. '})' → logprob: -14.625383377075195
    10. ')
' → logprob: -14.750383377075195

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037303533405065536
    2. '    
' → logprob: -4.287303447723389
    3. ' 
' → logprob: -4.662303447723389
    4. '
' → logprob: -5.787303447723389
    5. '```' → logprob: -6.037303447723389
    6. '   
' → logprob: -6.412303447723389
    7. '<|end|>' → logprob: -6.412303447723389
    8. '  
' → logprob: -6.662303447723389
    9. '    ' → logprob: -6.912303447723389
    10. ' ' → logprob: -7.037303447723389

Token 45: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5564694404602051
    2. '   ' → logprob: -1.931469440460205
    3. ' if' → logprob: -2.056469440460205
    4. ' ' → logprob: -2.306469440460205
    5. 'if' (adapté à ' if') → logprob: -3.681469440460205
    6. '```' → logprob: -4.806469440460205
    7. '    
' → logprob: -4.931469440460205
    8. '    ' → logprob: -5.431469440460205
    9. '     
' → logprob: -5.806469440460205
    10. '   
' → logprob: -5.931469440460205

Token 46: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.004584161099046469
    2. 'num' → logprob: -5.879584312438965
    3. ' ' → logprob: -6.379584312438965
    4. '(num' → logprob: -9.754584312438965
    5. ' (' → logprob: -11.504584312438965
    6. ' ' → logprob: -12.504584312438965
    7. '	num' → logprob: -13.004584312438965
    8. ',num' → logprob: -13.254584312438965
    9. '<num' → logprob: -13.629584312438965
    10. ' n' → logprob: -14.129584312438965

Token 47: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0016085283132269979
    2. '%' → logprob: -7.126608371734619
    3. ' ' → logprob: -7.126608371734619
    4. ' ' → logprob: -15.376608848571777
    5. ')' → logprob: -16.12660789489746
    6. '  ' → logprob: -17.87660789489746
    7. ' )' → logprob: -18.00160789489746
    8. ' %
' → logprob: -18.37660789489746
    9. '   ' → logprob: -18.50160789489746
    10. ' %=' → logprob: -18.87660789489746

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20142103731632233
    2. ' ' → logprob: -1.7014210224151611
    3. '3' → logprob: -12.826420783996582
    4. '```' → logprob: -13.451420783996582
    5. '4' → logprob: -14.326420783996582
    6. '`' → logprob: -15.451420783996582
    7. ' ' → logprob: -15.576420783996582
    8. ')' → logprob: -15.576420783996582
    9. '6' → logprob: -15.638920783996582
    10. '36' → logprob: -15.638920783996582

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014180023572407663
    2. ' ' → logprob: -8.875142097473145
    3. '```' → logprob: -14.000142097473145
    4. '3' → logprob: -15.000142097473145
    5. '==' → logprob: -15.187642097473145
    6. '1' → logprob: -16.687641143798828
    7. '  ' → logprob: -16.687641143798828
    8. '10' → logprob: -17.000141143798828
    9. '   ' → logprob: -17.250141143798828
    10. '6' → logprob: -17.375141143798828

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23063914477825165
    2. '==' → logprob: -1.605639100074768
    3. '=' → logprob: -5.8556389808654785
    4. ' ' → logprob: -6.3556389808654785
    5. '0' → logprob: -7.9806389808654785
    6. ')' → logprob: -8.980639457702637
    7. ' =' → logprob: -9.230639457702637
    8. ')==' → logprob: -11.355639457702637
    9. '```' → logprob: -11.605639457702637
    10. '===' → logprob: -12.105639457702637

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326025724411011
    2. ' ' → logprob: -0.7576025724411011
    3. '1' → logprob: -13.75760269165039
    4. '2' → logprob: -14.00760269165039
    5. '=' → logprob: -14.88260269165039
    6. '==' → logprob: -15.25760269165039
    7. ' ' → logprob: -15.50760269165039
    8. ' ==' → logprob: -15.57010269165039
    9. ')' → logprob: -16.00760269165039
    10. '  ' → logprob: -16.07010269165039

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017032715259119868
    2. ' ' → logprob: -6.376703262329102
    3. '1' → logprob: -14.126703262329102
    4. '==' → logprob: -17.2517032623291
    5. '۰' → logprob: -17.2517032623291
    6. '2' → logprob: -17.5642032623291
    7. '```' → logprob: -17.5642032623291
    8. '  ' → logprob: -17.6892032623291
    9. '=' → logprob: -17.7517032623291
    10. ' ' → logprob: -17.9392032623291

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015252856246661395
    2. ' :' → logprob: -9.750152587890625
    3. ':
' → logprob: -10.000152587890625
    4. ' and' → logprob: -10.500152587890625
    5. '):' → logprob: -11.375152587890625
    6. ':**' → logprob: -12.250152587890625
    7. 'and' → logprob: -13.000152587890625
    8. '<|end|>' → logprob: -14.125152587890625
    9. '   ' → logprob: -14.375152587890625
    10. ':

' → logprob: -15.250152587890625

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026415130123496056
    2. '   ' → logprob: -3.7764151096343994
    3. ' ' → logprob: -7.2764153480529785
    4. 'even' → logprob: -7.2764153480529785
    5. ' even' → logprob: -7.9014153480529785
    6. '        
' → logprob: -7.9014153480529785
    7. '    ' → logprob: -8.02641487121582
    8. '    
' → logprob: -9.02641487121582
    9. ':' → logprob: -9.52641487121582
    10. ' 
' → logprob: -9.90141487121582

Token 55: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.31904304027557373
    2. 'even' (adapté à ' even') → logprob: -1.3190430402755737
    3. '       ' → logprob: -5.944043159484863
    4. '           ' → logprob: -6.694043159484863
    5. '   ' → logprob: -6.694043159484863
    6. ' ' → logprob: -9.069043159484863
    7. '```' → logprob: -9.194043159484863
    8. ' ' → logprob: -9.319043159484863
    9. '            
' → logprob: -9.444043159484863
    10. ' 
' → logprob: -9.569043159484863

Token 56: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.9292415749514475e-05
    2. '_' → logprob: -10.250039100646973
    3. ' _' → logprob: -13.375039100646973
    4. '_counts' → logprob: -14.250039100646973
    5. '_counter' → logprob: -14.750039100646973
    6. '```' → logprob: -15.000039100646973
    7. '_code' → logprob: -15.750039100646973
    8. '\' → logprob: -16.12504005432129
    9. '_sum' → logprob: -16.37504005432129
    10. '"_' → logprob: -16.50004005432129

Token 57: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03805594891309738
    2. '+=' → logprob: -3.288055896759033
    3. '+' → logprob: -11.288056373596191
    4. '=' → logprob: -14.038056373596191
    5. ' =' → logprob: -14.288056373596191
    6. ' +' → logprob: -15.038056373596191
    7. ']+=' → logprob: -16.288055419921875
    8. '   ' → logprob: -16.413055419921875
    9. '    ' → logprob: -17.038055419921875
    10. '+='' → logprob: -17.288055419921875

Token 58: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.10063567757606506
    2. 'even' → logprob: -2.3506357669830322
    3. '+' → logprob: -8.100635528564453
    4. ' ' → logprob: -9.725635528564453
    5. '1' → logprob: -10.475635528564453
    6. '0' → logprob: -10.975635528564453
    7. ' +' → logprob: -12.225635528564453
    8. '+=' → logprob: -12.850635528564453
    9. ' ' → logprob: -12.975635528564453
    10. 'e' → logprob: -13.350635528564453

Token 59: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9504606825648807e-05
    2. '+' → logprob: -11.750019073486328
    3. '_' → logprob: -11.750019073486328
    4. ' _' → logprob: -13.250019073486328
    5. 'count' → logprob: -14.000019073486328
    6. '```' → logprob: -16.000019073486328
    7. ' ' → logprob: -16.375019073486328
    8. '_c' → logprob: -16.500019073486328
    9. '_counter' → logprob: -16.750019073486328
    10. '   ' → logprob: -16.750019073486328

Token 60: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014332264661789
    2. '+' → logprob: -1.7014331817626953
    3. ' ' → logprob: -11.451433181762695
    4. ' plus' → logprob: -12.076433181762695
    5. '1' → logprob: -13.326433181762695
    6. ' +
' → logprob: -13.576433181762695
    7. '<|end|>' → logprob: -14.951433181762695
    8. ' ' → logprob: -16.326433181762695
    9. ' +=' → logprob: -16.701433181762695
    10. '2' → logprob: -16.826433181762695

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08893968164920807
    2. ' ' → logprob: -2.463939666748047
    3. '   ' → logprob: -16.588939666748047
    4. '```' → logprob: -16.588939666748047
    5. '2' → logprob: -17.088939666748047
    6. ' ' → logprob: -17.213939666748047
    7. 'num' → logprob: -17.776439666748047
    8. '  ' → logprob: -18.151439666748047
    9. '0' → logprob: -18.713939666748047
    10. '    ' → logprob: -18.963939666748047

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -20.000019073486328
    4. '  ' → logprob: -21.125019073486328
    5. '```' → logprob: -21.250019073486328
    6. ' ' → logprob: -21.625019073486328
    7. '１' → logprob: -22.125019073486328
    8. '۱' → logprob: -22.250019073486328
    9. '2' → logprob: -22.375019073486328
    10. '`' → logprob: -23.125019073486328

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04955779016017914
    2. '    
' → logprob: -4.424557685852051
    3. ' 
' → logprob: -4.549557685852051
    4. '  
' → logprob: -4.674557685852051
    5. '<|end|>' → logprob: -4.924557685852051
    6. '   ' → logprob: -5.299557685852051
    7. '       ' → logprob: -6.799557685852051
    8. '        
' → logprob: -7.174557685852051
    9. '\n' → logprob: -7.424557685852051
    10. '   
' → logprob: -7.799557685852051

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21218979358673096
    2. '   ' → logprob: -2.2121896743774414
    3. '        
' → logprob: -3.2121896743774414
    4. '    
' → logprob: -4.087189674377441
    5. '
' → logprob: -5.212189674377441
    6. '  
' → logprob: -5.337189674377441
    7. ' ' → logprob: -5.587189674377441
    8. ' 
' → logprob: -6.212189674377441
    9. '```' → logprob: -6.212189674377441
    10. '   
' → logprob: -7.087189674377441

Token 65: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4859025478363037
    2. ' if' → logprob: -1.6109025478363037
    3. 'if' (adapté à ' if') → logprob: -2.2359025478363037
    4. ' ' → logprob: -3.3609025478363037
    5. '        
' → logprob: -4.360902786254883
    6. ' 
' → logprob: -4.610902786254883
    7. '   ' → logprob: -4.860902786254883
    8. '
' → logprob: -6.235902786254883
    9. '        ' → logprob: -6.485902786254883
    10. '  
' → logprob: -6.860902786254883

Token 66: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.005631774198263884
    2. 'num' → logprob: -5.255631923675537
    3. ' ' → logprob: -8.380631446838379
    4. '(num' → logprob: -9.380631446838379
    5. ' (' → logprob: -9.505631446838379
    6. ' abs' → logprob: -13.255631446838379
    7. '	num' → logprob: -13.380631446838379
    8. ' ' → logprob: -13.880631446838379
    9. '<num' → logprob: -13.880631446838379
    10. ' n' → logprob: -14.255631446838379

Token 67: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.009112146683037281
    2. '%' → logprob: -4.759112358093262
    3. ' ' → logprob: -7.634112358093262
    4. ' >' → logprob: -12.134112358093262
    5. ' >=' → logprob: -12.634112358093262
    6. '>' → logprob: -12.759112358093262
    7. ' ' → logprob: -14.259112358093262
    8. ' in' → logprob: -15.134112358093262
    9. '>=' → logprob: -15.134112358093262
    10. ' ==' → logprob: -15.384112358093262

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1855822056531906
    2. '35' → logprob: -1.810582160949707
    3. '3' → logprob: -5.185582160949707
    4. '5' → logprob: -9.310582160949707
    5. '10' → logprob: -10.685582160949707
    6. '20' → logprob: -10.810582160949707
    7. '  ' → logprob: -10.810582160949707
    8. '15' → logprob: -10.935582160949707
    9. ' ' → logprob: -11.623082160949707
    10. '25' → logprob: -12.248082160949707

Token 69: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31199130415916443
    2. '35' → logprob: -1.4369913339614868
    3. '5' → logprob: -3.9369912147521973
    4. ' ' → logprob: -4.686991214752197
    5. '7' → logprob: -7.311991214752197
    6. '10' → logprob: -7.436991214752197
    7. '  ' → logprob: -8.686991691589355
    8. '2' → logprob: -9.311991691589355
    9. '1' → logprob: -9.686991691589355
    10. '15' → logprob: -10.561991691589355

Token 70: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22771510481834412
    2. ' ==' → logprob: -1.6027151346206665
    3. '0' → logprob: -7.102715015411377
    4. '5' → logprob: -7.727715015411377
    5. ' ' → logprob: -7.977715015411377
    6. '=' → logprob: -8.102715492248535
    7. '3' → logprob: -9.727715492248535
    8. '```' → logprob: -9.727715492248535
    9. ' and' → logprob: -9.852715492248535
    10. '7' → logprob: -9.977715492248535

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23192176222801208
    2. ' ' → logprob: -1.8569217920303345
    3. '5' → logprob: -2.981921672821045
    4. '1' → logprob: -9.981922149658203
    5. '=' → logprob: -10.106922149658203
    6. '3' → logprob: -10.606922149658203
    7. ' ' → logprob: -11.606922149658203
    8. '==' → logprob: -12.544422149658203
    9. '2' → logprob: -12.731922149658203
    10. '  ' → logprob: -12.919422149658203

Token 72: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.27017709612846375
    2. '0' → logprob: -1.5201771259307861
    3. ' ' → logprob: -4.020176887512207
    4. '1' → logprob: -10.395176887512207
    5. '=' → logprob: -10.770176887512207
    6. '```' → logprob: -11.020176887512207
    7. '2' → logprob: -11.457676887512207
    8. '7' → logprob: -11.707676887512207
    9. '3' → logprob: -11.770176887512207
    10. '4' → logprob: -12.082676887512207

Token 73: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030505569651722908
    2. ' or' → logprob: -3.655505657196045
    3. 'and' → logprob: -5.655505657196045
    4. '           ' → logprob: -8.030505180358887
    5. ':' → logprob: -8.655505180358887
    6. ' ' → logprob: -9.780505180358887
    7. '        ' → logprob: -9.780505180358887
    8. '       ' → logprob: -10.780505180358887
    9. '            ' → logprob: -11.405505180358887
    10. '          ' → logprob: -11.405505180358887

Token 74: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.41351616382598877
    2. 'num' → logprob: -1.6635161638259888
    3. '5' → logprob: -1.9135161638259888
    4. ' ' → logprob: -6.538516044616699
    5. '    ' → logprob: -10.1635160446167
    6. '   ' → logprob: -10.2885160446167
    7. '	num' → logprob: -10.4135160446167
    8. '  ' → logprob: -10.5385160446167
    9. '(num' → logprob: -10.6635160446167
    10. '7' → logprob: -11.1635160446167

Token 75: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2812137007713318
    2. '%' → logprob: -1.4062137603759766
    3. ' ' → logprob: -9.906213760375977
    4. '7' → logprob: -12.781213760375977
    5. '4' → logprob: -13.156213760375977
    6. ' ' → logprob: -13.656213760375977
    7. '6' → logprob: -13.906213760375977
    8. '5' → logprob: -14.031213760375977
    9. '35' → logprob: -14.031213760375977
    10. '<|end|>' → logprob: -14.156213760375977

Token 76: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0031966082751750946
    2. ' ' → logprob: -5.753196716308594
    3. '7' → logprob: -11.878196716308594
    4. '35' → logprob: -12.003196716308594
    5. '  ' → logprob: -13.253196716308594
    6. '<|end|>' → logprob: -13.753196716308594
    7. '>' → logprob: -14.503196716308594
    8. ' ' → logprob: -14.565696716308594
    9. '_' → logprob: -15.378196716308594
    10. '15' → logprob: -15.753196716308594

Token 77: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003171121352352202
    2. ' ' → logprob: -8.250317573547363
    3. '7' → logprob: -9.875317573547363
    4. '  ' → logprob: -13.375317573547363
    5. '५' → logprob: -14.562817573547363
    6. '٥' → logprob: -14.812817573547363
    7. '৫' → logprob: -15.062817573547363
    8. '55' → logprob: -15.625317573547363
    9. '   ' → logprob: -15.687817573547363
    10. '۵' → logprob: -15.687817573547363

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14269426465034485
    2. '==' → logprob: -2.0176942348480225
    3. ' ' → logprob: -11.517694473266602
    4. ')==' → logprob: -12.642694473266602
    5. '<|end|>' → logprob: -13.142694473266602
    6. '===' → logprob: -13.892694473266602
    7. '=' → logprob: -14.517694473266602
    8. ' ' → logprob: -14.642694473266602
    9. '()==' → logprob: -14.767694473266602
    10. ']==' → logprob: -14.892694473266602

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2811809480190277
    2. ' ' → logprob: -1.40618097782135
    3. '==' → logprob: -11.156181335449219
    4. '=' → logprob: -12.218681335449219
    5. ' ' → logprob: -13.281181335449219
    6. '```' → logprob: -13.281181335449219
    7. ' ==' → logprob: -13.781181335449219
    8. '1' → logprob: -13.781181335449219
    9. '  ' → logprob: -14.218681335449219
    10. '   ' → logprob: -14.343681335449219

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0097618717700243
    2. ' ' → logprob: -4.634761810302734
    3. '  ' → logprob: -14.134761810302734
    4. '==' → logprob: -14.447261810302734
    5. '3' → logprob: -14.572261810302734
    6. '5' → logprob: -14.634761810302734
    7. '=' → logprob: -14.884761810302734
    8. '```' → logprob: -14.884761810302734
    9. ' ' → logprob: -15.072261810302734
    10. '۰' → logprob: -15.197261810302734

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006178391631692648
    2. ':
' → logprob: -7.625617980957031
    3. '           ' → logprob: -9.375617980957031
    4. '       ' → logprob: -10.500617980957031
    5. '):' → logprob: -12.000617980957031
    6. ' :' → logprob: -12.500617980957031
    7. '<|end|>' → logprob: -12.875617980957031
    8. ' and' → logprob: -13.500617980957031
    9. '   ' → logprob: -14.750617980957031
    10. ':

' → logprob: -14.750617980957031

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01013178937137127
    2. 'even' → logprob: -4.8851318359375
    3. ' even' → logprob: -6.3851318359375
    4. '               ' → logprob: -7.5101318359375
    5. '       ' → logprob: -9.5101318359375
    6. ':' → logprob: -10.0101318359375
    7. ':
' → logprob: -10.1351318359375
    8. '_even' → logprob: -10.3851318359375
    9. '<|end|>' → logprob: -10.5101318359375
    10. '	       ' → logprob: -11.5101318359375

Token 83: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.12652084231376648
    2. ' even' → logprob: -2.251520872116089
    3. '               ' → logprob: -4.62652063369751
    4. '           ' → logprob: -5.62652063369751
    5. '   ' → logprob: -9.126521110534668
    6. ' ' → logprob: -10.876521110534668
    7. '_even' → logprob: -11.001521110534668
    8. ' ' → logprob: -11.251521110534668
    9. '                
' → logprob: -11.376521110534668
    10. '                   ' → logprob: -12.001521110534668

Token 84: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9743012671824545e-05
    2. '35' → logprob: -10.875020027160645
    3. ' _' → logprob: -14.125020027160645
    4. '‌' → logprob: -18.000019073486328
    5. '```' → logprob: -18.250019073486328
    6. '_
' → logprob: -18.750019073486328
    7. '_

' → logprob: -19.125019073486328
    8. '​' → logprob: -19.250019073486328
    9. '"_' → logprob: -19.375019073486328
    10. '__' → logprob: -19.375019073486328

Token 85: '35' (ID: 2467)
  Prédit: '35'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '35' → logprob: -3.082895273109898e-05
    2. '_' → logprob: -10.625030517578125
    3. '3' → logprob: -12.000030517578125
    4. ' ' → logprob: -15.375030517578125
    5. '25' → logprob: -16.875030517578125
    6. '355' → logprob: -17.375030517578125
    7. '45' → logprob: -17.937530517578125
    8. '```' → logprob: -17.937530517578125
    9. '

' → logprob: -18.000030517578125
    10. 'count' → logprob: -18.000030517578125

Token 86: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.000001907348633
    3. 'count' → logprob: -14.125001907348633
    4. ' _' → logprob: -16.375001907348633
    5. '_c' → logprob: -17.375001907348633
    6. '```' → logprob: -18.125001907348633
    7. '_co' → logprob: -18.500001907348633
    8. '+=' → logprob: -19.000001907348633
    9. '_counts' → logprob: -19.125001907348633
    10. '=' → logprob: -19.125001907348633

Token 87: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.311633825302124
    2. ' =' → logprob: -2.061633825302124
    3. '+=' → logprob: -2.311633825302124
    4. '=' → logprob: -3.186633825302124
    5. '+' → logprob: -9.311634063720703
    6. ' ' → logprob: -13.186634063720703
    7. ' +' → logprob: -14.061634063720703
    8. '   ' → logprob: -14.436634063720703
    9. ' ' → logprob: -15.186634063720703
    10. '_' → logprob: -15.686634063720703

Token 88: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.1002117469906807
    2. ' even' → logprob: -2.3502118587493896
    3. 'e' → logprob: -14.225212097167969
    4. ' ' → logprob: -14.225212097167969
    5. 'eve' → logprob: -14.350212097167969
    6. 'evenodd' → logprob: -14.350212097167969
    7. '   ' → logprob: -14.475212097167969
    8. 'ev' → logprob: -14.850212097167969
    9. 'equal' → logprob: -15.475212097167969
    10. ' ' → logprob: -15.600212097167969

Token 89: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005499334656633437
    2. '35' → logprob: -7.625549793243408
    3. '_count' → logprob: -9.750550270080566
    4. 'count' → logprob: -13.625550270080566
    5. '```' → logprob: -14.875550270080566
    6. '+' → logprob: -15.000550270080566
    7. '-' → logprob: -15.563050270080566
    8. ' ' → logprob: -15.813050270080566
    9. 'Count' → logprob: -16.06304931640625
    10. '	' → logprob: -16.31304931640625

Token 90: '35' (ID: 2467)
  Prédit: '35'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '35' → logprob: -0.0003811025235336274
    2. 'count' → logprob: -8.375381469726562
    3. ' ' → logprob: -9.625381469726562
    4. '_' → logprob: -10.750381469726562
    5. '3' → logprob: -11.625381469726562
    6. 'even' → logprob: -11.625381469726562
    7. '_count' → logprob: -12.312881469726562
    8. '1' → logprob: -12.437881469726562
    9. '   ' → logprob: -12.437881469726562
    10. '25' → logprob: -12.562881469726562

Token 91: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.013382213190197945
    2. 'count' → logprob: -4.888382434844971
    3. '35' → logprob: -5.263382434844971
    4. '+' → logprob: -7.513382434844971
    5. '_' → logprob: -11.763381958007812
    6. ' +' → logprob: -12.638381958007812
    7. 'Count' → logprob: -12.638381958007812
    8. '   ' → logprob: -12.763381958007812
    9. '25' → logprob: -12.763381958007812
    10. 'plus' → logprob: -12.763381958007812

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12744781374931335
    2. ' +' → logprob: -2.1274478435516357
    3. 'even' → logprob: -8.002448081970215
    4. ' plus' → logprob: -9.127448081970215
    5. '1' → logprob: -10.127448081970215
    6. ' even' → logprob: -11.502448081970215
    7. 'plus' → logprob: -11.752448081970215
    8. ' ' → logprob: -11.877448081970215
    9. '               ' → logprob: -12.502448081970215
    10. '           ' → logprob: -12.627448081970215

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01104935072362423
    2. ' ' → logprob: -4.511049270629883
    3. '   ' → logprob: -14.136049270629883
    4. '<|end|>' → logprob: -14.886049270629883
    5. '```' → logprob: -15.761049270629883
    6. ' ' → logprob: -16.136049270629883
    7. '           ' → logprob: -17.198549270629883
    8. '  ' → logprob: -17.323549270629883
    9. '	' → logprob: -17.448549270629883
    10. '2' → logprob: -17.761049270629883

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.500011444091797
    4. '   ' → logprob: -18.250011444091797
    5. '<|end|>' → logprob: -18.250011444091797
    6. '  ' → logprob: -19.187511444091797
    7. '`' → logprob: -19.625011444091797
    8. '۱' → logprob: -19.687511444091797
    9. '１' → logprob: -19.687511444091797
    10. '' → logprob: -19.750011444091797

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019040413200855255
    2. 'else' → logprob: -4.019040584564209
    3. ' else' → logprob: -7.894040584564209
    4. 'elif' → logprob: -7.894040584564209
    5. '<|end|>' → logprob: -10.26904010772705
    6. '```' → logprob: -10.39404010772705
    7. '    
' → logprob: -10.76904010772705
    8. '	else' → logprob: -10.89404010772705
    9. '       ' → logprob: -11.51904010772705
    10. '  ' → logprob: -11.64404010772705

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2056572437286377
    2. 'else' → logprob: -1.7056572437286377
    3. 'elif' → logprob: -6.080657005310059
    4. ' else' → logprob: -6.580657005310059
    5. '<|end|>' → logprob: -8.205657005310059
    6. '```' → logprob: -8.830657005310059
    7. '	else' → logprob: -9.705657005310059
    8. '  ' → logprob: -11.080657005310059
    9. 'print' → logprob: -11.330657005310059
    10. '    
' → logprob: -11.330657005310059

Token 97: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.41446423530578613
    2. '   ' → logprob: -1.1644642353057861
    3. ' else' → logprob: -3.789464235305786
    4. 'elif' → logprob: -5.414463996887207
    5. '```' → logprob: -9.664463996887207
    6. ' elif' → logprob: -9.789463996887207
    7. '	else' → logprob: -11.039463996887207
    8. ' ' → logprob: -11.414463996887207
    9. '  ' → logprob: -12.164463996887207
    10. '<|end|>' → logprob: -13.664463996887207

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12821970880031586
    2. ':
' → logprob: -2.1282196044921875
    3. '       ' → logprob: -6.7532196044921875
    4. '   ' → logprob: -9.128219604492188
    5. ' :
' → logprob: -12.378219604492188
    6. '```' → logprob: -12.878219604492188
    7. ' :' → logprob: -13.253219604492188
    8. ':
' → logprob: -13.503219604492188
    9. ':

' → logprob: -13.753219604492188
    10. '):
' → logprob: -14.253219604492188

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1552930325269699
    2. '   ' → logprob: -2.0302929878234863
    3. 'odd' → logprob: -4.405292987823486
    4. ' odd' → logprob: -8.530293464660645
    5. '```' → logprob: -9.530293464660645
    6. '           ' → logprob: -11.405293464660645
    7. ' ' → logprob: -11.780293464660645
    8. '    
' → logprob: -11.780293464660645
    9. '     ' → logprob: -11.905293464660645
    10. '        
' → logprob: -12.405293464660645

Token 100: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.00502382917329669
    2. ' odd' → logprob: -5.380023956298828
    3. '   ' → logprob: -7.880023956298828
    4. '       ' → logprob: -11.005023956298828
    5. ' ' → logprob: -12.880023956298828
    6. '           ' → logprob: -13.130023956298828
    7. '  ' → logprob: -13.630023956298828
    8. '```' → logprob: -14.255023956298828
    9. 'od' → logprob: -14.630023956298828
    10. '    
' → logprob: -14.630023956298828

Token 101: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.250001907348633
    3. ' _' → logprob: -14.625001907348633
    4. '```' → logprob: -16.250001907348633
    5. '_counts' → logprob: -16.875001907348633
    6. '_counter' → logprob: -17.000001907348633
    7. '\' → logprob: -17.125001907348633
    8. '_code' → logprob: -17.125001907348633
    9. '_cont' → logprob: -17.750001907348633
    10. '_con' → logprob: -18.125001907348633

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3880642056465149
    2. ' =' → logprob: -1.1380641460418701
    3. ' +=' → logprob: -7.013064384460449
    4. '+=' → logprob: -8.13806438446045
    5. ' ' → logprob: -16.013063430786133
    6. '+' → logprob: -16.263063430786133
    7. '   ' → logprob: -17.763063430786133
    8. '_' → logprob: -17.763063430786133
    9. '```' → logprob: -18.013063430786133
    10. '＝' → logprob: -18.763063430786133

Token 103: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.2519380748271942
    2. 'odd' → logprob: -1.5019381046295166
    3. 'od' → logprob: -12.626937866210938
    4. ' ' → logprob: -12.876937866210938
    5. ' od' → logprob: -13.501937866210938
    6. '   ' → logprob: -14.876937866210938
    7. '1' → logprob: -15.126937866210938
    8. ' old' → logprob: -15.251937866210938
    9. ' even' → logprob: -15.376937866210938
    10. ' odds' → logprob: -15.876937866210938

Token 104: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.625007629394531
    3. '+' → logprob: -12.750007629394531
    4. 'count' → logprob: -14.500007629394531
    5. ' _' → logprob: -14.625007629394531
    6. '_c' → logprob: -16.25000762939453
    7. '```' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.75000762939453
    9. ' +' → logprob: -17.87500762939453
    10. '_code' → logprob: -18.12500762939453

Token 105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932381391525269
    2. ' +' → logprob: -0.6932381391525269
    3. ' ' → logprob: -9.443238258361816
    4. ' plus' → logprob: -11.568238258361816
    5. '1' → logprob: -13.318238258361816
    6. 'plus' → logprob: -15.818238258361816
    7. '   ' → logprob: -16.0682373046875
    8. ' ' → logprob: -16.5682373046875
    9. '0' → logprob: -17.4432373046875
    10. 'odd' → logprob: -17.4432373046875

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141352713108063
    2. ' ' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.451414108276367
    4. '```' → logprob: -16.951414108276367
    5. '   ' → logprob: -18.201414108276367
    6. '１' → logprob: -19.326414108276367
    7. '<|end|>' → logprob: -19.451414108276367
    8. '    ' → logprob: -19.451414108276367
    9. '  ' → logprob: -19.826414108276367
    10. '۱' → logprob: -20.326414108276367

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '```' → logprob: -19.375003814697266
    5. '  ' → logprob: -20.750003814697266
    6. '
' → logprob: -21.250003814697266
    7. '۱' → logprob: -21.375003814697266
    8. '１' → logprob: -21.500003814697266
    9. '<|end|>' → logprob: -21.500003814697266
    10. '       ' → logprob: -22.062503814697266

Token 108: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35058969259262085
    2. '
' → logprob: -1.2255897521972656
    3. ')' → logprob: -7.725589752197266
    4. '<|end|>' → logprob: -7.725589752197266
    5. '```' → logprob: -7.850589752197266
    6. '\n' → logprob: -7.975589752197266
    7. '  
' → logprob: -9.100589752197266
    8. ')
' → logprob: -9.225589752197266
    9. '    
' → logprob: -9.225589752197266
    10. ' 
' → logprob: -10.100589752197266

Token 109: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00041816019802354276
    2. 'even' → logprob: -9.125417709350586
    3. 'if' → logprob: -9.250417709350586
    4. 'p' → logprob: -10.000417709350586
    5. '#' → logprob: -10.125417709350586
    6. 'for' → logprob: -10.500417709350586
    7. '
' → logprob: -10.750417709350586
    8. '```' → logprob: -11.125417709350586
    9. 'n' → logprob: -11.250417709350586
    10. ')' → logprob: -11.375417709350586

Token 110: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.003062557429075241
    2. 'even' → logprob: -5.878062725067139
    3. ' odd' → logprob: -9.12806224822998
    4. ' ' → logprob: -9.25306224822998
    5. ' ' → logprob: -10.00306224822998
    6. ' n' → logprob: -12.12806224822998
    7. '_even' → logprob: -13.50306224822998
    8. ' equal' → logprob: -14.75306224822998
    9. 'odd' → logprob: -15.12806224822998
    10. ' not' → logprob: -16.253063201904297

Token 111: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0007112398743629456
    2. '_' → logprob: -7.250711441040039
    3. ' _' → logprob: -14.500711441040039
    4. '```' → logprob: -15.750711441040039
    5. '\' → logprob: -16.12571144104004
    6. '_co' → logprob: -16.62571144104004
    7. '_counts' → logprob: -16.87571144104004
    8. '_c' → logprob: -16.87571144104004
    9. '"_' → logprob: -16.87571144104004
    10. 'count' → logprob: -17.12571144104004

Token 112: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1258259415626526
    2. '>' → logprob: -2.500825881958008
    3. ' ==' → logprob: -3.500825881958008
    4. '==' → logprob: -5.750825881958008
    5. ' >=' → logprob: -6.750825881958008
    6. ' <' → logprob: -6.750825881958008
    7. ' ' → logprob: -8.625825881958008
    8. '>=' → logprob: -8.875825881958008
    9. '<' → logprob: -9.125825881958008
    10. ' <=' → logprob: -10.500825881958008

Token 113: ' even' (ID: 1952)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07095744460821152
    2. ' ' → logprob: -3.5709574222564697
    3. 'odd' → logprob: -3.5709574222564697
    4. 'n' → logprob: -4.570957660675049
    5. ' n' → logprob: -6.820957660675049
    6. ' odd' → logprob: -7.570957660675049
    7. 'even' → logprob: -9.07095718383789
    8. 'len' → logprob: -9.44595718383789
    9. '1' → logprob: -10.32095718383789
    10. 'od' → logprob: -11.88345718383789

Token 114: '_' (ID: 62)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.010003148578107357
    2. '_' → logprob: -4.760003089904785
    3. 'count' → logprob: -6.635003089904785
    4. '35' → logprob: -10.760003089904785
    5. '0' → logprob: -10.885003089904785
    6. '5' → logprob: -11.635003089904785
    7. 'and' → logprob: -12.510003089904785
    8. '_c' → logprob: -13.260003089904785
    9. '_counts' → logprob: -13.760003089904785
    10. '3' → logprob: -13.885003089904785

Token 115: '35' (ID: 2467)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5960023403167725
    2. '0' → logprob: -0.8460023403167725
    3. '_count' → logprob: -3.9710023403167725
    4. ' ' → logprob: -7.596002578735352
    5. '35' → logprob: -9.221002578735352
    6. '5' → logprob: -9.346002578735352
    7. 'ount' → logprob: -9.846002578735352
    8. '1' → logprob: -10.096002578735352
    9. 'zero' → logprob: -10.471002578735352
    10. '	count' → logprob: -10.471002578735352

Token 116: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.5027299822540954e-05
    2. 'count' → logprob: -10.375055313110352
    3. '_' → logprob: -11.250055313110352
    4. '0' → logprob: -12.125055313110352
    5. '_c' → logprob: -13.000055313110352
    6. '1' → logprob: -14.875055313110352
    7. ' ' → logprob: -15.000055313110352
    8. '5' → logprob: -15.250055313110352
    9. '```' → logprob: -15.250055313110352
    10. ' _' → logprob: -15.625055313110352

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020007232669740915
    2. ':
' → logprob: -6.25200080871582
    3. ' and' → logprob: -9.75200080871582
    4. 'and' → logprob: -11.62700080871582
    5. ' :' → logprob: -12.75200080871582
    6. '   ' → logprob: -14.50200080871582
    7. ' or' → logprob: -15.00200080871582
    8. '):' → logprob: -15.37700080871582
    9. 'print' → logprob: -15.87700080871582
    10. '==' → logprob: -16.00200080871582

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15001846849918365
    2. 'print' → logprob: -2.4000184535980225
    3. ' print' → logprob: -3.0250184535980225
    4. '
' → logprob: -11.400018692016602
    5. '	print' → logprob: -11.400018692016602
    6. '```' → logprob: -12.400018692016602
    7. '    
' → logprob: -13.025018692016602
    8. '       ' → logprob: -13.275018692016602
    9. '   ' → logprob: -13.900018692016602
    10. '    ' → logprob: -14.525018692016602

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18008677661418915
    2. ' print' → logprob: -2.055086851119995
    3. '   ' → logprob: -3.305086851119995
    4. '	print' → logprob: -11.930087089538574
    5. ' ' → logprob: -12.555087089538574
    6. '    ' → logprob: -13.180087089538574
    7. ' for' → logprob: -13.305087089538574
    8. 'if' → logprob: -13.430087089538574
    9. 'for' → logprob: -13.555087089538574
    10. '
' → logprob: -13.805087089538574

Token 120: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.21414390206336975
    2. '(' → logprob: -1.7141438722610474
    3. '(True' → logprob: -4.464143753051758
    4. '('' → logprob: -7.589143753051758
    5. '("("' → logprob: -8.464143753051758
    6. '(-' → logprob: -8.839143753051758
    7. '()' → logprob: -9.089143753051758
    8. '(
' → logprob: -10.089143753051758
    9. '(False' → logprob: -10.464143753051758
    10. '(true' → logprob: -10.464143753051758

Token 121: 'APP' (ID: 13444)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.8251782059669495
    2. 'Yes' → logprob: -1.4501781463623047
    3. 'True' → logprob: -2.0751781463623047
    4. 'Even' → logprob: -2.5751781463623047
    5. 'All' → logprob: -2.7001781463623047
    6. 'Все' → logprob: -5.325178146362305
    7. 'Equal' → logprob: -5.575178146362305
    8. 'EV' → logprob: -5.575178146362305
    9. 'NO' → logprob: -5.575178146362305
    10. 'all' → logprob: -5.575178146362305

Token 122: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.06538194417953491
    2. 'LE' → logprob: -4.06538200378418
    3. 'END' → logprob: -4.19038200378418
    4. 'RE' → logprob: -4.44038200378418
    5. 'ARENT' → logprob: -5.31538200378418
    6. 'LY' → logprob: -5.56538200378418
    7. 'R' → logprob: -5.69038200378418
    8. 'LES' → logprob: -6.56538200378418
    9. 'ET' → logprob: -7.06538200378418
    10. 'L' → logprob: -7.69038200378418

Token 123: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -0.043178800493478775
    2. 'VE' → logprob: -3.1681787967681885
    3. 'V' → logprob: -8.91817855834961
    4. 'OVED' → logprob: -11.29317855834961
    5. 'VES' → logprob: -11.66817855834961
    6. 'VAL' → logprob: -11.91817855834961
    7. 'ved' → logprob: -12.04317855834961
    8. 'Ved' → logprob: -12.66817855834961
    9. 'VI' → logprob: -13.41817855834961
    10. ' VE' → logprob: -13.54317855834961

Token 124: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01823224127292633
    2. '")
' → logprob: -4.018232345581055
    3. '")
' → logprob: -10.143232345581055
    4. '!")' → logprob: -10.393232345581055
    5. '"' → logprob: -12.643232345581055
    6. ')' → logprob: -12.768232345581055
    7. '")

' → logprob: -14.018232345581055
    8. 'else' → logprob: -14.143232345581055
    9. '!")
' → logprob: -14.268232345581055
    10. ' ")' → logprob: -14.518232345581055

Token 125: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0022645669523626566
    2. 'elif' → logprob: -6.627264499664307
    3. ' else' → logprob: -7.002264499664307
    4. '<|end|>' → logprob: -11.127264976501465
    5. ')' → logprob: -13.127264976501465
    6. '```' → logprob: -13.377264976501465
    7. '#else' → logprob: -13.502264976501465
    8. 'elses' → logprob: -13.502264976501465
    9. '
' → logprob: -13.752264976501465
    10. 'elseif' → logprob: -14.377264976501465

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08959644287824631
    2. ':
' → logprob: -2.4645965099334717
    3. '   ' → logprob: -7.339596271514893
    4. 'print' → logprob: -13.21459674835205
    5. ' :
' → logprob: -13.71459674835205
    6. '():
' → logprob: -14.08959674835205
    7. ' :' → logprob: -14.46459674835205
    8. ' print' → logprob: -14.58959674835205
    9. ':
' → logprob: -14.71459674835205
    10. ':

' → logprob: -14.83959674835205

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036109976936131716
    2. 'print' → logprob: -5.753611087799072
    3. ' print' → logprob: -7.753611087799072
    4. '	print' → logprob: -13.503610610961914
    5. '```' → logprob: -14.128610610961914
    6. '       ' → logprob: -14.503610610961914
    7. '   ' → logprob: -14.503610610961914
    8. '    
' → logprob: -15.378610610961914
    9. '(print' → logprob: -15.878610610961914
    10. '.print' → logprob: -16.253610610961914

Token 128: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006774107459932566
    2. ' print' → logprob: -5.006773948669434
    3. '   ' → logprob: -9.756773948669434
    4. '	print' → logprob: -14.256773948669434
    5. '.print' → logprob: -16.13177490234375
    6. ' ' → logprob: -17.38177490234375
    7. '```' → logprob: -17.63177490234375
    8. '(print' → logprob: -18.75677490234375
    9. 'Print' → logprob: -19.13177490234375
    10. '  ' → logprob: -19.13177490234375

Token 129: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04871749505400658
    2. '(' → logprob: -3.048717498779297
    3. '("")' → logprob: -9.798717498779297
    4. '("("' → logprob: -9.798717498779297
    5. '()' → logprob: -11.548717498779297
    6. '(
' → logprob: -12.298717498779297
    7. '('' → logprob: -13.423717498779297
    8. '(""' → logprob: -13.673717498779297
    9. '("(' → logprob: -14.048717498779297
    10. '("""' → logprob: -15.048717498779297

Token 130: 'DEN' (ID: 109767)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.04979192093014717
    2. 'DEN' → logprob: -3.2997918128967285
    3. 'NOT' → logprob: -4.9247918128967285
    4. 'DIS' → logprob: -5.9247918128967285
    5. 'FAILED' → logprob: -6.6747918128967285
    6. '"' → logprob: -8.424792289733887
    7. 'DECL' → logprob: -8.674792289733887
    8. 'FAIL' → logprob: -10.799792289733887
    9. 'BLOCK' → logprob: -11.174792289733887
    10. 'DE' → logprob: -11.799792289733887

Token 131: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.00014811802248004824
    2. 'I' → logprob: -8.875147819519043
    3. 'Y' → logprob: -12.625147819519043
    4. 'ED' → logprob: -13.750147819519043
    5. 'ied' → logprob: -13.750147819519043
    6. '```' → logprob: -14.125147819519043
    7. '"' → logprob: -14.875147819519043
    8. ' I' → logprob: -15.125147819519043
    9. '``' → logprob: -15.375147819519043
    10. '

' → logprob: -15.625147819519043

Token 132: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00012654215970542282
    2. ')' → logprob: -9.000126838684082
    3. ')")' → logprob: -13.125126838684082
    4. '")
' → logprob: -13.875126838684082
    5. '"' → logprob: -16.250125885009766
    6. '')' → logprob: -17.375125885009766
    7. '}")' → logprob: -18.125125885009766
    8. '!")' → logprob: -19.500125885009766
    9. ' ")' → logprob: -20.000125885009766
    10. '"))' → logprob: -20.125125885009766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 52.31%
Précision adaptée (1ère position): 56.15%
Précision (top 10): 87.69%
================================================================================
