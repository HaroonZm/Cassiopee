================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def max_sum_alternating_subsequence():
    """
    Lis une séquence d'entiers et calcule la somme maximale d'une sous-séquence alternante 
    selon une contrainte dépendant de la parité de la longueur de la séquence.
    
    Le code utilise la programmation dynamique pour explorer toutes les possibilités de la 
    construction de sous-séquences alternantes avec jusqu'à 3 "groupes" (indiqué par l'indice j).
    Les états dp[i][j][k] mémorisent pour i éléments, j groupes, k flag (si on est à l'intérieur 
    d'un segment sélectionné ou entre), la meilleure somme atteignable.

    Entrées :
        - n (int) : taille de la séquence
        - a (List[int]) : liste d'entiers

    Sortie :
        - Affiche la somme maximale trouvée sous la contrainte du problème

    Remarque : Les contraintes et la signification précise de l'algorithme dépend du problème d'origine.
    """
    # Lecture de la longueur de la séquence.
    n = int(input())
    # Lecture puis conversion de la séquence d'entrée en liste d'entiers.
    a = list(map(int, input().split()))
    
    # Initialisation de la table de programmation dynamique.
    # dp[i][j][k] mémorise la meilleure somme possible pour :
    # i (éléments considérés), j (nombre de groupes - peut représenter le nombre de sous-séquences), 
    # k (flag indiquant si le dernier groupe inclut le i-ème élément (1) ou non (0))
    # On initialise toutes les valeurs à -10^15 (très petit), sauf le cas de base.
    dp = [[[-10**15, -10**15] for _ in range(4)] for _ in range(n+1)]
    
    # Cas de base : avant tout choix, somme nulle, 0 groupe, hors segment.
    dp[0][0][0] = 0

    # Remplissage de la table DP.
    for i in range(n):  # Pour chaque position de l'élément considéré.
        for j in range(4):  # Pour chaque nombre de groupes possibles (max 3 autorisés ici).
            for k in range(2):  # Pour chaque état : "non en cours de sélection" (0) ou "en cours" (1)
                if j == 3:
                    # Si on a déjà atteint 3 groupes :
                    # Option 1 : clore le segment courant (si on était dans un groupe)
                    dp[i+1][3][0] = max(dp[i][3][1], dp[i+1][3][0])
                    # Option 2 : poursuivre dans le 3e groupe avec l'élément courant
                    dp[i+1][3][1] = max(dp[i][3][0]+a[i], dp[i+1][3][1])
                elif j == 2:
                    # Cas du 2e groupe
                    # Clore le segment courant
                    dp[i+1][2][0] = max(dp[i][2][1], dp[i+1][2][0])
                    # Poursuivre dans le 2e groupe
                    dp[i+1][2][1] = max(dp[i][2][0]+a[i], dp[i+1][2][1])
                    # Ouvrir un nouveau groupe (passer à j+1 groupe)
                    dp[i+1][3][0] = max(dp[i][2][0], dp[i+1][3][0])
                elif j == 1:
                    # Cas du 1er groupe
                    # Clore le segment courant
                    dp[i+1][1][0] = max(dp[i][1][1], dp[i+1][1][0])
                    # Poursuivre dans le 1er groupe
                    dp[i+1][1][1] = max(dp[i][1][0]+a[i], dp[i+1][1][1])
                    # Ouvrir un nouveau groupe
                    dp[i+1][2][0] = max(dp[i][1][0], dp[i+1][2][0])
                else:
                    # Cas initial (j == 0)
                    # Clore le segment courant (ici ça n'a d'effet que pour case 0,0,1)
                    dp[i+1][0][0] = max(dp[i][0][1], dp[i+1][0][0])
                    # Commencer le 1er groupe avec l'élément courant
                    dp[i+1][0][1] = max(dp[i][0][0]+a[i], dp[i+1][0][1])
                    # Ouvrir le groupe suivant (le premier à partir de l'état initial)
                    dp[i+1][1][0] = max(dp[i][0][0], dp[i+1][1][0])

    # Calcul du résultat final selon la parité de n.
    # Le résultat dépend de la contrainte de sélection des sous-séquences alternantes.
    ans = 0
    if n % 2 == 0:
        # Si la séquence a une longueur paire, on ne considère pas certaines transitions.
        ans = max(max(dp[n][0]), dp[n][1][1])
    else:
        # Si sequence impaire, on autorise plus de configurations.
        ans = max(max(dp[n][0]), max(dp[n][1]), dp[n][2][1])

    # Affichage du résultat optimal
    print(ans)

# Appel de la fonction principale
max_sum_alternating_subsequence()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' max' (ID: 2999)
  → Token d'amorce (pas de prédiction)

Token 2: '_sum' (ID: 29859)
  → Token d'amorce (pas de prédiction)

Token 3: '_al' (ID: 18493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009726220741868019
    2. '(' → logprob: -4.759726047515869
    3. '(_' → logprob: -7.759726047515869
    4. '_token' → logprob: -9.009726524353027
    5. '__' → logprob: -9.009726524353027
    6. '```' → logprob: -9.134726524353027
    7. '_max' → logprob: -9.509726524353027
    8. ' _' → logprob: -10.759726524353027
    9. '(_)' → logprob: -10.759726524353027
    10. ' (' → logprob: -10.884726524353027

Token 4: 'tern' (ID: 1298)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6775617003440857
    2. '_' → logprob: -1.0525617599487305
    3. 'phabet' → logprob: -3.0525617599487305
    4. '_g' → logprob: -3.5525617599487305
    5. 'f' → logprob: -4.6775617599487305
    6. 'gebra' → logprob: -4.9275617599487305
    7. 'p' → logprob: -4.9275617599487305
    8. 'l' → logprob: -5.4275617599487305
    9. '(' → logprob: -5.6775617599487305
    10. '```' → logprob: -5.9275617599487305

Token 5: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.10594082623720169
    2. 'ate' → logprob: -2.605940818786621
    3. 'ing' → logprob: -3.855940818786621
    4. 'e' → logprob: -6.480940818786621
    5. 'at' → logprob: -6.480940818786621
    6. '_' → logprob: -6.980940818786621
    7. '```' → logprob: -7.480940818786621
    8. 'ative' → logprob: -7.980940818786621
    9. '_e' → logprob: -9.480940818786621
    10. 'ation' → logprob: -9.730940818786621

Token 6: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008302738890051842
    2. '_sequence' → logprob: -6.133302688598633
    3. '(' → logprob: -6.883302688598633
    4. '```' → logprob: -6.883302688598633
    5. '_space' → logprob: -7.758302688598633
    6. '_t' → logprob: -7.758302688598633
    7. '(_' → logprob: -8.008302688598633
    8. '_between' → logprob: -8.383302688598633
    9. '_parent' → logprob: -8.508302688598633
    10. '_trip' → logprob: -8.508302688598633

Token 7: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.12133660912513733
    2. 'array' → logprob: -2.2463366985321045
    3. 'string' → logprob: -5.121336460113525
    4. 'quence' → logprob: -6.246336460113525
    5. '_' → logprob: -8.496336936950684
    6. '_sequence' → logprob: -9.246336936950684
    7. '(sequence' → logprob: -9.496336936950684
    8. 'seq' → logprob: -9.621336936950684
    9. '_array' → logprob: -10.621336936950684
    10. 's' → logprob: -10.746336936950684

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038438476622104645
    2. '_' → logprob: -3.538438558578491
    3. '(_:' → logprob: -5.663438320159912
    4. '(_' → logprob: -5.913438320159912
    5. '```' → logprob: -6.788438320159912
    6. '_:' → logprob: -7.788438320159912
    7. '(:' → logprob: -8.28843879699707
    8. '(
' → logprob: -8.66343879699707
    9. '_(' → logprob: -9.41343879699707
    10. ' (' → logprob: -10.41343879699707

Token 9: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12313874810934067
    2. ':' → logprob: -3.248138666152954
    3. '_' → logprob: -3.248138666152954
    4. '   ' → logprob: -3.873138666152954
    5. '```' → logprob: -4.623138904571533
    6. '():' → logprob: -6.373138904571533
    7. ''' → logprob: -6.373138904571533
    8. '(:' → logprob: -7.373138904571533
    9. '\' → logprob: -7.623138904571533
    10. '(
' → logprob: -7.748138904571533

Token 10: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21973328292369843
    2. '    ' → logprob: -2.969733238220215
    3. '   ' → logprob: -3.594733238220215
    4. '_' → logprob: -3.594733238220215
    5. '[' → logprob: -3.969733238220215
    6. 'a' → logprob: -3.969733238220215
    7. ''' → logprob: -4.469733238220215
    8. '```' → logprob: -4.594733238220215
    9. '\' → logprob: -4.719733238220215
    10. 'n' → logprob: -5.594733238220215

Token 11: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5723538994789124
    2. 'Calculate' → logprob: -1.0723538398742676
    3. 'Find' → logprob: -3.1973538398742676
    4. 'Returns' → logprob: -3.8223538398742676
    5. ''''' → logprob: -5.197353839874268
    6. 'Generate' → logprob: -5.197353839874268
    7. '   ' → logprob: -5.572353839874268
    8. 'Return' → logprob: -5.822353839874268
    9. 'Calcul' → logprob: -5.947353839874268
    10. '""' → logprob: -6.072353839874268

Token 12: ' Lis' (ID: 29571)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.4510323405265808
    2. 'Calculate' → logprob: -1.4510324001312256
    3. 'Calcul' → logprob: -3.0760324001312256
    4. 'Returns' → logprob: -3.0760324001312256
    5. 'Return' → logprob: -4.2010321617126465
    6. 'Compute' → logprob: -5.3260321617126465
    7. '"""' → logprob: -5.3260321617126465
    8. ' Finds' → logprob: -5.9510321617126465
    9. 'Given' → logprob: -6.0760321617126465
    10. '   ' → logprob: -6.3260321617126465

Token 13: ' une' (ID: 2463)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004067202680744231
    2. '   ' → logprob: -9.250406265258789
    3. 'ted' → logprob: -10.000406265258789
    4. '(t' → logprob: -10.250406265258789
    5. ' t' → logprob: -10.500406265258789
    6. '[t' → logprob: -10.500406265258789
    7. '_t' → logprob: -10.625406265258789
    8. 'ting' → logprob: -10.625406265258789
    9. '	t' → logprob: -11.250406265258789
    10. 'ts' → logprob: -11.375406265258789

Token 14: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5308292508125305
    2. '   ' → logprob: -1.5308291912078857
    3. ' chaîne' → logprob: -2.6558291912078857
    4. 'chaine' → logprob: -3.0308291912078857
    5. ' ' → logprob: -3.6558291912078857
    6. '  ' → logprob: -4.905829429626465
    7. ' chaine' → logprob: -5.155829429626465
    8. ' string' → logprob: -5.405829429626465
    9. 's' → logprob: -5.655829429626465
    10. 'cha' → logprob: -5.655829429626465

Token 15: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.002959631150588393
    2. 'q' → logprob: -6.127959728240967
    3. 'qu' → logprob: -8.252959251403809
    4. '   ' → logprob: -8.752959251403809
    5. 'quent' → logprob: -9.627959251403809
    6. '`' → logprob: -9.752959251403809
    7. 'ance' → logprob: -10.002959251403809
    8. 'que' → logprob: -10.002959251403809
    9. '#' → logprob: -11.002959251403809
    10. '\' → logprob: -11.127959251403809

Token 16: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9830195903778076
    2. ' des' → logprob: -1.2330195903778076
    3. ' de' → logprob: -1.6080195903778076
    4. ' d' → logprob: -2.9830195903778076
    5. '   ' → logprob: -3.9830195903778076
    6. ' )' → logprob: -4.108019828796387
    7. ' complète' → logprob: -4.358019828796387
    8. ')' → logprob: -5.608019828796387
    9. '_' → logprob: -5.733019828796387
    10. 'def' → logprob: -5.983019828796387

Token 17: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.020038645714521408
    2. 'e' → logprob: -5.020038604736328
    3. ' ent' → logprob: -5.520038604736328
    4. 'ent' → logprob: -5.895038604736328
    5. ''' → logprob: -6.395038604736328
    6. '’ent' → logprob: -6.645038604736328
    7. ''entrée' → logprob: -6.645038604736328
    8. 'n' → logprob: -7.895038604736328
    9. ''espace' → logprob: -7.895038604736328
    10. ''esp' → logprob: -8.145038604736328

Token 18: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0870768129825592
    2. 'i' → logprob: -3.3370769023895264
    3. 'ières' → logprob: -3.5870769023895264
    4. 'ier' → logprob: -4.212076663970947
    5. 'r' → logprob: -6.212076663970947
    6. 'ié' → logprob: -6.587076663970947
    7. 'ière' → logprob: -6.962076663970947
    8. 'rée' → logprob: -7.462076663970947
    9. '```' → logprob: -8.962077140808105
    10. 'ités' → logprob: -9.212077140808105

Token 19: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5657889246940613
    2. ' ' → logprob: -1.440788984298706
    3. '\n' → logprob: -2.690788984298706
    4. '    ' → logprob: -2.815788984298706
    5. '\' → logprob: -3.815788984298706
    6. '  ' → logprob: -5.065788745880127
    7. ',' → logprob: -5.315788745880127
    8. ')' → logprob: -5.315788745880127
    9. ' )' → logprob: -5.690788745880127
    10. ''' → logprob: -5.815788745880127

Token 20: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2782135605812073
    2. ' retourne' → logprob: -2.0282135009765625
    3. ' ren' → logprob: -3.0282135009765625
    4. 'ren' → logprob: -3.6532135009765625
    5. ' return' → logprob: -4.7782135009765625
    6. 'return' → logprob: -4.9032135009765625
    7. ' trouve' → logprob: -5.0282135009765625
    8. 'ret' → logprob: -5.4032135009765625
    9. 'tr' → logprob: -5.5282135009765625
    10. ' calc' → logprob: -6.7782135009765625

Token 21: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00021319588995538652
    2. 'ul' → logprob: -9.000213623046875
    3. 'ulé' → logprob: -10.125213623046875
    4. '```' → logprob: -10.750213623046875
    5. '**' → logprob: -12.375213623046875
    6. '\' → logprob: -12.375213623046875
    7. 'úl' → logprob: -12.750213623046875
    8. 'û' → logprob: -13.000213623046875
    9. '       ' → logprob: -13.375213623046875
    10. '   ' → logprob: -13.375213623046875

Token 22: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8913058042526245
    2. '<|end|>' → logprob: -2.141305923461914
    3. ' le' → logprob: -2.266305923461914
    4. '   ' → logprob: -2.266305923461914
    5. '```' → logprob: -2.641305923461914
    6. ' ' → logprob: -3.141305923461914
    7. 'le' → logprob: -3.141305923461914
    8. ' l' → logprob: -3.516305923461914
    9. 'l' → logprob: -3.641305923461914
    10. '_le' → logprob: -4.516305923461914

Token 23: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6964874267578125
    2. ' maximale' → logprob: -1.9464874267578125
    3. ' somme' → logprob: -2.1964874267578125
    4. ' meilleure' → logprob: -2.6964874267578125
    5. '   ' → logprob: -2.8214874267578125
    6. ' maximum' → logprob: -2.9464874267578125
    7. 's' → logprob: -3.8214874267578125
    8. ' max' → logprob: -4.4464874267578125
    9. ' meilleur' → logprob: -4.6964874267578125
    10. ' plus' → logprob: -4.6964874267578125

Token 24: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.0954948142170906
    2. ' des' → logprob: -2.8454947471618652
    3. ' optimale' → logprob: -4.345494747161865
    4. ' maximal' → logprob: -4.845494747161865
    5. '   ' → logprob: -5.970494747161865
    6. ' maximum' → logprob: -6.095494747161865
    7. ' max' → logprob: -6.470494747161865
    8. 'max' → logprob: -6.970494747161865
    9. ' maxim' → logprob: -6.970494747161865
    10. '_max' → logprob: -7.470494747161865

Token 25: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1639049053192139
    2. ' d' → logprob: -1.6639049053192139
    3. '_' → logprob: -2.538904905319214
    4. '`' → logprob: -2.663904905319214
    5. ' de' → logprob: -2.663904905319214
    6. '_possible' → logprob: -2.913904905319214
    7. '```' → logprob: -3.288904905319214
    8. 'de' → logprob: -3.413904905319214
    9. ' possible' → logprob: -3.663904905319214
    10. ' ' → logprob: -4.038905143737793

Token 26: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.4852137565612793
    2. ''un' → logprob: -1.2352137565612793
    3. ''' → logprob: -2.4852137565612793
    4. 'e' → logprob: -5.735213756561279
    5. ''u' → logprob: -6.360213756561279
    6. 'une' → logprob: -6.735213756561279
    7. '’une' → logprob: -7.235213756561279
    8. 'u' → logprob: -7.485213756561279
    9. '_' → logprob: -7.610213756561279
    10. ''al' → logprob: -7.985213756561279

Token 27: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7662695050239563
    2. ' subse' → logprob: -0.7662695050239563
    3. ' sous' → logprob: -3.2662694454193115
    4. 's' → logprob: -4.266269683837891
    5. '   ' → logprob: -4.641269683837891
    6. ' sé' → logprob: -6.391269683837891
    7. '  ' → logprob: -6.641269683837891
    8. '_' → logprob: -6.766269683837891
    9. '_s' → logprob: -6.891269683837891
    10. ' sequence' → logprob: -7.016269683837891

Token 28: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9663140773773193
    2. '_' → logprob: -1.2163140773773193
    3. '   ' → logprob: -1.7163140773773193
    4. '_s' → logprob: -3.0913140773773193
    5. 'sé' → logprob: -3.4663140773773193
    6. '-s' → logprob: -3.7163140773773193
    7. ' ' → logprob: -4.216314315795898
    8. ' sé' → logprob: -4.341314315795898
    9. '_sequence' → logprob: -4.966314315795898
    10. ' sequence' → logprob: -6.216314315795898

Token 29: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1862531155347824
    2. 'e' → logprob: -1.8112530708312988
    3. 'q' → logprob: -5.686253070831299
    4. 'u' → logprob: -6.811253070831299
    5. 's' → logprob: -7.061253070831299
    6. 'équ' → logprob: -7.811253070831299
    7. '#' → logprob: -8.686253547668457
    8. 'quence' → logprob: -8.811253547668457
    9. 'eq' → logprob: -9.311253547668457
    10. '_' → logprob: -9.811253547668457

Token 30: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0007332704844884574
    2. 'q' → logprob: -7.500733375549316
    3. '   ' → logprob: -9.875733375549316
    4. 'quences' → logprob: -10.000733375549316
    5. '_' → logprob: -10.625733375549316
    6. '`' → logprob: -11.000733375549316
    7. 'QUENCE' → logprob: -11.500733375549316
    8. 'quent' → logprob: -11.875733375549316
    9. '#' → logprob: -12.250733375549316
    10. 'qu' → logprob: -12.500733375549316

Token 31: ' altern' (ID: 7310)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3163601160049438
    2. ' ' → logprob: -1.5663601160049438
    3. ' qui' → logprob: -1.6913601160049438
    4. ' de' → logprob: -2.4413599967956543
    5. '   ' → logprob: -3.0663599967956543
    6. ' d' → logprob: -3.3163599967956543
    7. ',' → logprob: -3.6913599967956543
    8. '```' → logprob: -3.6913599967956543
    9. ' _' → logprob: -4.566359996795654
    10. ' ' → logprob: -4.941359996795654

Token 32: 'ante' (ID: 2116)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02827092446386814
    2. 'e' → logprob: -4.778270721435547
    3. 'ante' → logprob: -4.778270721435547
    4. '-' → logprob: -5.528270721435547
    5. '   ' → logprob: -6.278270721435547
    6. 'ant' → logprob: -6.278270721435547
    7. '#' → logprob: -7.778270721435547
    8. 'ating' → logprob: -7.903270721435547
    9. '```' → logprob: -8.028270721435547
    10. ' a' → logprob: -8.153270721435547

Token 33: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5115401744842529
    2. ',' → logprob: -2.261540174484253
    3. '```' → logprob: -2.886540174484253
    4. '`' → logprob: -3.511540174484253
    5. ' (' → logprob: -3.636540174484253
    6. '.' → logprob: -3.636540174484253
    7. 'e' → logprob: -3.886540174484253
    8. ' de' → logprob: -4.261540412902832
    9. '"""
' → logprob: -4.261540412902832
    10. '
' → logprob: -4.511540412902832

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11546871811151505
    2. '.' → logprob: -3.990468740463257
    3. ' (' → logprob: -4.115468502044678
    4. '"""' → logprob: -4.115468502044678
    5. ',' → logprob: -4.240468502044678
    6. '  ' → logprob: -4.865468502044678
    7. ' ' → logprob: -4.990468502044678
    8. ' de' → logprob: -5.115468502044678
    9. 'e' → logprob: -5.865468502044678
    10. ')' → logprob: -5.990468502044678

Token 35: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9039487242698669
    2. ' d' → logprob: -1.5289487838745117
    3. ' de' → logprob: -2.0289487838745117
    4. ' ' → logprob: -2.9039487838745117
    5. '"""' → logprob: -3.2789487838745117
    6. '```' → logprob: -3.2789487838745117
    7. '`' → logprob: -4.153948783874512
    8. ' des' → logprob: -4.653948783874512
    9. '"' → logprob: -5.028948783874512
    10. ' qui' → logprob: -5.028948783874512

Token 36: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.48362264037132263
    2. ' les' → logprob: -2.2336225509643555
    3. ' des' → logprob: -2.6086225509643555
    4. '   ' → logprob: -3.1086225509643555
    5. ' une' → logprob: -3.8586225509643555
    6. ' le' → logprob: -3.8586225509643555
    7. ' l' → logprob: -3.8586225509643555
    8. '```' → logprob: -4.1086225509643555
    9. 'une' → logprob: -4.3586225509643555
    10. ' ' → logprob: -4.7336225509643555

Token 37: ' contr' (ID: 6030)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.4217583239078522
    2. 'condition' → logprob: -2.7967584133148193
    3. ' règle' → logprob: -2.9217584133148193
    4. ' certaine' → logprob: -3.6717584133148193
    5. ' stratégie' → logprob: -3.7967584133148193
    6. 's' → logprob: -4.04675817489624
    7. ' contr' → logprob: -4.17175817489624
    8. ' logique' → logprob: -4.29675817489624
    9. ' approche' → logprob: -4.42175817489624
    10. ' ' → logprob: -4.54675817489624

Token 38: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.3499568700790405
    2. 'a' → logprob: -1.2249568700790405
    3. '\' → logprob: -7.72495698928833
    4. 'aint' → logprob: -7.84995698928833
    5. 'ôle' → logprob: -8.849956512451172
    6. '#' → logprob: -9.099956512451172
    7. 'o' → logprob: -9.224956512451172
    8. 'i' → logprob: -10.099956512451172
    9. 'ain' → logprob: -10.599956512451172
    10. '```' → logprob: -10.849956512451172

Token 39: ' dépend' (ID: 68660)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8297367095947266
    2. ' de' → logprob: -0.8297367095947266
    3. ' d' → logprob: -3.5797367095947266
    4. '    ' → logprob: -3.8297367095947266
    5. 's' → logprob: -4.079736709594727
    6. 'de' → logprob: -4.454736709594727
    7. '  ' → logprob: -5.079736709594727
    8. ' ' → logprob: -5.579736709594727
    9. ' des' → logprob: -5.579736709594727
    10. '.' → logprob: -5.704736709594727

Token 40: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3689561188220978
    2. 'ance' → logprob: -1.3689560890197754
    3. 'ante' → logprob: -3.1189560890197754
    4. 'e' → logprob: -5.993956089019775
    5. 'a' → logprob: -6.243956089019775
    6. 'de' → logprob: -6.618956089019775
    7. 'ent' → logprob: -6.618956089019775
    8. 'd' → logprob: -6.868956089019775
    9. 'ence' → logprob: -6.868956089019775
    10. 'amment' → logprob: -8.618956565856934

Token 41: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.6546892523765564
    2. ' de' → logprob: -1.2796893119812012
    3. ' des' → logprob: -2.029689311981201
    4. '   ' → logprob: -3.404689311981201
    5. '    ' → logprob: -3.654689311981201
    6. 'du' → logprob: -5.654689311981201
    7. 'de' → logprob: -5.779689311981201
    8. ' d' → logprob: -6.404689311981201
    9. 'des' → logprob: -7.029689311981201
    10. '_de' → logprob: -7.154689311981201

Token 42: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.616923987865448
    2. 'la' → logprob: -1.7419240474700928
    3. 'l' → logprob: -1.8669240474700928
    4. ' l' → logprob: -2.3669240474700928
    5. 'son' → logprob: -4.866923809051514
    6. 'a' → logprob: -5.241923809051514
    7. 's' → logprob: -5.366923809051514
    8. ' sa' → logprob: -5.366923809051514
    9. ' ' → logprob: -6.241923809051514
    10. 'leur' → logprob: -6.366923809051514

Token 43: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1456531137228012
    2. 's' → logprob: -2.645653009414673
    3. 'l' → logprob: -4.270653247833252
    4. 'n' → logprob: -5.145653247833252
    5. ' longueur' → logprob: -5.645653247833252
    6. 'd' → logprob: -5.770653247833252
    7. 'v' → logprob: -5.895653247833252
    8. 'é' → logprob: -6.020653247833252
    9. ' d' → logprob: -6.270653247833252
    10. 'val' → logprob: -6.270653247833252

Token 44: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.5244223475456238
    2. 'i' → logprob: -0.8994223475456238
    3. 'ié' → logprob: -7.6494221687316895
    4. 'é' → logprob: -8.149422645568848
    5. 'it' → logprob: -8.524422645568848
    6. 'itié' → logprob: -10.024422645568848
    7. 'ités' → logprob: -10.274422645568848
    8. '```' → logprob: -10.399422645568848
    9. 's' → logprob: -10.524422645568848
    10. 'e' → logprob: -10.524422645568848

Token 45: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38676318526268005
    2. '\' → logprob: -2.386763095855713
    3. '_' → logprob: -2.761763095855713
    4. '(' → logprob: -3.011763095855713
    5. '```' → logprob: -3.886763095855713
    6. ':' → logprob: -4.136763095855713
    7. '\n' → logprob: -4.136763095855713
    8. ')' → logprob: -4.386763095855713
    9. '(n' → logprob: -5.011763095855713
    10. '(
' → logprob: -5.261763095855713

Token 46: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.49697229266166687
    2. 'l' → logprob: -1.1219723224639893
    3. ' la' → logprob: -3.2469723224639893
    4. ' ' → logprob: -4.87197208404541
    5. ' i' → logprob: -5.12197208404541
    6. ' chaque' → logprob: -5.24697208404541
    7. 'la' → logprob: -6.12197208404541
    8. 'i' → logprob: -6.24697208404541
    9. ' ' → logprob: -6.87197208404541
    10. ' son' → logprob: -7.49697208404541

Token 47: ' longueur' (ID: 104613)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07145058363676071
    2. 's' → logprob: -3.6964504718780518
    3. 'élé' → logprob: -4.071450710296631
    4. 'n' → logprob: -5.196450710296631
    5. 'nombre' → logprob: -5.321450710296631
    6. 'val' → logprob: -5.446450710296631
    7. 'i' → logprob: -6.571450710296631
    8. 'prem' → logprob: -6.571450710296631
    9. ' valeur' → logprob: -6.696450710296631
    10. 'suite' → logprob: -7.196450710296631

Token 48: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5558571219444275
    2. '(' → logprob: -1.6808571815490723
    3. '\' → logprob: -2.0558571815490723
    4. ':' → logprob: -3.4308571815490723
    5. '_' → logprob: -3.9308571815490723
    6. '```' → logprob: -4.680857181549072
    7. '\n' → logprob: -4.930857181549072
    8. '(
' → logprob: -4.930857181549072
    9. '    ' → logprob: -5.305857181549072
    10. '(n' → logprob: -5.555857181549072

Token 49: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2714174687862396
    2. ' cette' → logprob: -2.3964173793792725
    3. 'la' → logprob: -2.6464173793792725
    4. 'a' → logprob: -3.7714173793792725
    5. ' l' → logprob: -4.146417617797852
    6. 'l' → logprob: -4.146417617797852
    7. ' celle' → logprob: -4.771417617797852
    8. 's' → logprob: -5.896417617797852
    9. ' a' → logprob: -6.271417617797852
    10. ' ' → logprob: -6.396417617797852

Token 50: ' sé' (ID: 7462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3349885046482086
    2. ' sous' → logprob: -1.3349884748458862
    3. ' ' → logprob: -5.334988594055176
    4. 'sé' → logprob: -5.459988594055176
    5. ' sé' → logprob: -5.584988594055176
    6. ' sequence' → logprob: -6.209988594055176
    7. ' s' → logprob: -6.584988594055176
    8. '   ' → logprob: -7.209988594055176
    9. '```' → logprob: -7.459988594055176
    10. '	s' → logprob: -7.709988594055176

Token 51: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.282920129597187e-05
    2. 'QUENCE' → logprob: -12.375012397766113
    3. 'q' → logprob: -12.500012397766113
    4. '#' → logprob: -13.500012397766113
    5. 'qu' → logprob: -14.000012397766113
    6. '```' → logprob: -14.375012397766113
    7. 'quences' → logprob: -14.500012397766113
    8. 'que' → logprob: -14.875012397766113
    9. '   ' → logprob: -15.250012397766113
    10. '`' → logprob: -15.750012397766113

Token 52: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033587146550416946
    2. '    
' → logprob: -5.0335869789123535
    3. '
' → logprob: -5.4085869789123535
    4. '\n' → logprob: -5.5335869789123535
    5. '```' → logprob: -5.6585869789123535
    6. ':' → logprob: -6.0335869789123535
    7. ')' → logprob: -6.1585869789123535
    8. '\' → logprob: -6.2835869789123535
    9. '):' → logprob: -6.7835869789123535
    10. '(n' → logprob: -7.1585869789123535

Token 53: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062700361013412476
    2. '"""' → logprob: -5.131269931793213
    3. '```' → logprob: -9.006270408630371
    4. '\n' → logprob: -10.006270408630371
    5. '"' → logprob: -10.256270408630371
    6. '"""
' → logprob: -10.506270408630371
    7. ')' → logprob: -10.506270408630371
    8. '    
' → logprob: -10.631270408630371
    9. '""' → logprob: -10.881270408630371
    10. '
' → logprob: -11.381270408630371

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011479563545435667
    2. '"""' → logprob: -7.251147747039795
    3. '    ' → logprob: -8.751148223876953
    4. '```' → logprob: -8.876148223876953
    5. 'def' → logprob: -10.001148223876953
    6. '    
' → logprob: -10.501148223876953
    7. ' """' → logprob: -10.876148223876953
    8. ' ' → logprob: -12.001148223876953
    9. '  ' → logprob: -12.001148223876953
    10. 'Input' → logprob: -12.501148223876953

Token 55: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001742531661875546
    2. '```' → logprob: -7.626742362976074
    3. 'n' → logprob: -8.126742362976074
    4. '"""' → logprob: -8.251742362976074
    5. '    ' → logprob: -8.376742362976074
    6. 'def' → logprob: -8.626742362976074
    7. 'input' → logprob: -10.126742362976074
    8. ')' → logprob: -10.126742362976074
    9. '    
' → logprob: -10.251742362976074
    10. '\n' → logprob: -10.376742362976074

Token 56: ' code' (ID: 3490)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13325269520282745
    2. ' code' → logprob: -2.5082526206970215
    3. 's' → logprob: -5.0082526206970215
    4. 'a' → logprob: -5.1332526206970215
    5. 'def' → logprob: -5.1332526206970215
    6. '    ' → logprob: -5.7582526206970215
    7. ' reste' → logprob: -6.1332526206970215
    8. ' ' → logprob: -6.2582526206970215
    9. ' maximum' → logprob: -6.2582526206970215
    10. ' def' → logprob: -6.2582526206970215

Token 57: ' utilise' (ID: 70283)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02816847153007984
    2. '```' → logprob: -4.653168678283691
    3. ' ' → logprob: -5.028168678283691
    4. ':' → logprob: -5.903168678283691
    5. 'def' → logprob: -6.528168678283691
    6. ' :' → logprob: -6.653168678283691
    7. 'n' → logprob: -7.153168678283691
    8. '_' → logprob: -7.278168678283691
    9. '  ' → logprob: -7.653168678283691
    10. '    ' → logprob: -7.903168678283691

Token 58: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.077369213104248
    2. ' la' → logprob: -1.702369213104248
    3. ' dynamic' → logprob: -1.702369213104248
    4. ' l' → logprob: -2.452369213104248
    5. ' des' → logprob: -2.702369213104248
    6. ' un' → logprob: -3.202369213104248
    7. '   ' → logprob: -3.327369213104248
    8. 'une' → logprob: -4.202369213104248
    9. 'l' → logprob: -4.452369213104248
    10. 'dynamic' → logprob: -5.202369213104248

Token 59: ' programmation' (ID: 166376)
  Prédit: ' programmation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.016120703890919685
    2. '   ' → logprob: -5.266120910644531
    3. 'programm' → logprob: -5.516120910644531
    4. ' dynamique' → logprob: -6.891120910644531
    5. 'program' → logprob: -7.016120910644531
    6. ' program' → logprob: -7.016120910644531
    7. ' programm' → logprob: -7.516120910644531
    8. '```' → logprob: -8.016120910644531
    9. ' dynamic' → logprob: -8.141120910644531
    10. ' technique' → logprob: -8.141120910644531

Token 60: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.6734626293182373
    2. 'd' → logprob: -1.2984626293182373
    3. '   ' → logprob: -2.2984626293182373
    4. ' dynamic' → logprob: -2.6734626293182373
    5. '_' → logprob: -3.9234626293182373
    6. ' ' → logprob: -5.048462867736816
    7. 'dynamic' → logprob: -5.173462867736816
    8. '```' → logprob: -5.423462867736816
    9. ' d' → logprob: -6.048462867736816
    10. ' dynam' → logprob: -6.173462867736816

Token 61: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009385696612298489
    2. '    
' → logprob: -5.259385585784912
    3. '
' → logprob: -6.634385585784912
    4. ':' → logprob: -7.509385585784912
    5. '\n' → logprob: -7.634385585784912
    6. '    ' → logprob: -8.00938606262207
    7. '  ' → logprob: -8.25938606262207
    8. '```' → logprob: -8.50938606262207
    9. ' :' → logprob: -9.00938606262207
    10. '   
' → logprob: -9.00938606262207

Token 62: ' explorer' (ID: 73961)
  Prédit: ' résoudre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' résoudre' → logprob: -0.7181495428085327
    2. ' calcul' → logprob: -1.4681495428085327
    3. '   ' → logprob: -2.2181496620178223
    4. ' trouver' → logprob: -3.3431496620178223
    5. ' gérer' → logprob: -3.9681496620178223
    6. ' construire' → logprob: -3.9681496620178223
    7. ' ' → logprob: -3.9681496620178223
    8. ' maxim' → logprob: -4.093149662017822
    9. ' max' → logprob: -4.343149662017822
    10. ' continuer' → logprob: -4.593149662017822

Token 63: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.0228454377502203
    2. ' les' → logprob: -4.772845268249512
    3. '   ' → logprob: -5.522845268249512
    4. ' l' → logprob: -5.772845268249512
    5. ' tous' → logprob: -5.772845268249512
    6. '    ' → logprob: -7.022845268249512
    7. ' la' → logprob: -7.147845268249512
    8. ' toute' → logprob: -7.772845268249512
    9. ' ' → logprob: -8.022845268249512
    10. ' chaque' → logprob: -8.147845268249512

Token 64: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1315239667892456
    2. 's' → logprob: -2.631524085998535
    3. ' ' → logprob: -3.756524085998535
    4. '_' → logprob: -4.131524085998535
    5. 'les' → logprob: -5.256524085998535
    6. '<|end|>' → logprob: -6.006524085998535
    7. ' s' → logprob: -6.881524085998535
    8. ' possible' → logprob: -7.131524085998535
    9. '_s' → logprob: -7.756524085998535
    10. ' l' → logprob: -8.256524085998535

Token 65: ' possibilités' (ID: 119756)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8903017044067383
    2. ' ' → logprob: -1.0153017044067383
    3. ' possibilités' → logprob: -3.0153017044067383
    4. 'poss' → logprob: -3.3903017044067383
    5. '_' → logprob: -3.5153017044067383
    6. 's' → logprob: -3.6403017044067383
    7. '    ' → logprob: -3.8903017044067383
    8. ' poss' → logprob: -3.8903017044067383
    9. '  ' → logprob: -5.015301704406738
    10. ' possibilité' → logprob: -5.515301704406738

Token 66: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025778573006391525
    2. ' ' → logprob: -5.150778770446777
    3. '    ' → logprob: -5.275778770446777
    4. '    
' → logprob: -5.275778770446777
    5. '  ' → logprob: -5.525778770446777
    6. ' :' → logprob: -6.650778770446777
    7. ':' → logprob: -6.900778770446777
    8. '
' → logprob: -7.650778770446777
    9. '_' → logprob: -7.775778770446777
    10. '   
' → logprob: -7.775778770446777

Token 67: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16566593945026398
    2. ' sous' → logprob: -2.290665864944458
    3. ' ' → logprob: -3.790665864944458
    4. ' sélection' → logprob: -5.540666103363037
    5. ' choix' → logprob: -5.540666103363037
    6. 'a' → logprob: -6.165666103363037
    7. ' s' → logprob: -6.290666103363037
    8. ' choisir' → logprob: -6.415666103363037
    9. ' continuer' → logprob: -6.540666103363037
    10. ' la' → logprob: -6.665666103363037

Token 68: ' 
' (ID: 793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27415427565574646
    2. ' ' → logprob: -2.1491541862487793
    3. 'sé' → logprob: -3.3991541862487793
    4. ' sé' → logprob: -4.274154186248779
    5. ' s' → logprob: -4.524154186248779
    6. ' sous' → logprob: -4.524154186248779
    7. '_s' → logprob: -4.649154186248779
    8. ' subse' → logprob: -4.774154186248779
    9. ' suite' → logprob: -5.024154186248779
    10. 'suite' → logprob: -5.274154186248779

Token 69: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1885087490081787
    2. ' ' → logprob: -2.3135087490081787
    3. ' sous' → logprob: -3.0635087490081787
    4. ' suite' → logprob: -5.313508987426758
    5. '   ' → logprob: -5.688508987426758
    6. 'suite' → logprob: -5.688508987426758
    7. ' s' → logprob: -6.063508987426758
    8. 'sé' → logprob: -6.188508987426758
    9. ' solution' → logprob: -7.063508987426758
    10. '    ' → logprob: -7.188508987426758

Token 70: ' construction' (ID: 9770)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18471522629261017
    2. ' sous' → logprob: -2.9347152709960938
    3. ' ' → logprob: -3.4347152709960938
    4. ' suite' → logprob: -3.8097152709960938
    5. 'suite' → logprob: -4.059715270996094
    6. 'sé' → logprob: -4.309715270996094
    7. ' solution' → logprob: -4.934715270996094
    8. ' sé' → logprob: -6.059715270996094
    9. '_s' → logprob: -6.309715270996094
    10. ' s' → logprob: -6.559715270996094

Token 71: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02398376353085041
    2. ' de' → logprob: -3.7739837169647217
    3. ' des' → logprob: -7.398983955383301
    4. 'd' → logprob: -10.1489839553833
    5. ' du' → logprob: -10.8989839553833
    6. ' ' → logprob: -10.8989839553833
    7. ' et' → logprob: -11.0239839553833
    8. '   ' → logprob: -11.5239839553833
    9. '    ' → logprob: -12.3989839553833
    10. 'de' → logprob: -12.6489839553833

Token 72: ' sous' (ID: 14487)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6735126376152039
    2. 's' → logprob: -1.0485126972198486
    3. ' sous' → logprob: -2.0485126972198486
    4. ' l' → logprob: -5.7985124588012695
    5. ' ' → logprob: -6.0485124588012695
    6. ' s' → logprob: -6.1735124588012695
    7. ' cette' → logprob: -7.4235124588012695
    8. ' ' → logprob: -7.5485124588012695
    9. ' chaque' → logprob: -7.9235124588012695
    10. 'la' → logprob: -8.17351245880127

Token 73: '-s' (ID: 2011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3776884078979492
    2. '-' → logprob: -1.6276884078979492
    3. '_s' → logprob: -2.252688407897949
    4. '-s' → logprob: -5.377688407897949
    5. '_-' → logprob: -6.002688407897949
    6. '-_' → logprob: -6.502688407897949
    7. '_sequences' → logprob: -6.627688407897949
    8. '_sequence' → logprob: -7.002688407897949
    9. '   ' → logprob: -7.252688407897949
    10. 'sé' → logprob: -7.752688407897949

Token 74: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05609810724854469
    2. 'équ' → logprob: -2.931098222732544
    3. ' équ' → logprob: -8.431097984313965
    4. 'èque' → logprob: -8.556097984313965
    5. '_' → logprob: -8.556097984313965
    6. 'e' → logprob: -8.806097984313965
    7. '-' → logprob: -9.056097984313965
    8. 'quence' → logprob: -10.056097984313965
    9. '-é' → logprob: -10.056097984313965
    10. 'eq' → logprob: -10.681097984313965

Token 75: 'quences' (ID: 16559)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.014324508607387543
    2. 'quences' → logprob: -4.26432466506958
    3. 'q' → logprob: -8.889324188232422
    4. 'qu' → logprob: -11.639324188232422
    5. '_' → logprob: -12.264324188232422
    6. 'QUENCE' → logprob: -12.764324188232422
    7. '-' → logprob: -13.264324188232422
    8. '   ' → logprob: -13.639324188232422
    9. '
' → logprob: -13.889324188232422
    10. 'quent' → logprob: -14.389324188232422

Token 76: ' altern' (ID: 7310)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3135245740413666
    2. ' ,' → logprob: -2.0635244846343994
    3. ',' → logprob: -2.9385244846343994
    4. ' ' → logprob: -3.6885244846343994
    5. '   ' → logprob: -3.8135244846343994
    6. '.' → logprob: -4.9385247230529785
    7. ' )' → logprob: -5.0635247230529785
    8. ' 
' → logprob: -5.1885247230529785
    9. ')' → logprob: -5.6885247230529785
    10. ' ' → logprob: -5.6885247230529785

Token 77: 'antes' (ID: 5193)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14145135879516602
    2. '   ' → logprob: -2.891451358795166
    3. '-' → logprob: -3.266451358795166
    4. 'at' → logprob: -4.891451358795166
    5. 'e' → logprob: -5.016451358795166
    6. 'ante' → logprob: -5.016451358795166
    7. 'ant' → logprob: -5.516451358795166
    8. '_' → logprob: -5.641451358795166
    9. ' ' → logprob: -6.766451358795166
    10. 'ating' → logprob: -6.891451358795166

Token 78: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9517126083374023
    2. ',' → logprob: -1.9517126083374023
    3. '.' → logprob: -2.0767126083374023
    4. ':' → logprob: -2.0767126083374023
    5. ' ' → logprob: -2.4517126083374023
    6. '_' → logprob: -2.8267126083374023
    7. ' :' → logprob: -4.201712608337402
    8. ' ,' → logprob: -4.451712608337402
    9. ' 
' → logprob: -4.576712608337402
    10. '    ' → logprob: -5.201712608337402

Token 79: ' jusqu' (ID: 21961)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.580014169216156
    2. ' des' → logprob: -1.8300142288208008
    3. ' l' → logprob: -2.205014228820801
    4. ' la' → logprob: -2.455014228820801
    5. ' un' → logprob: -4.205014228820801
    6. ' une' → logprob: -4.705014228820801
    7. ' les' → logprob: -4.955014228820801
    8. ' le' → logprob: -4.955014228820801
    9. ' espaces' → logprob: -5.205014228820801
    10. ' ' → logprob: -5.705014228820801

Token 80: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.002480412134900689
    2. ''' → logprob: -7.002480506896973
    3. '’à' → logprob: -7.627480506896973
    4. ''au' → logprob: -7.877480506896973
    5. 'à' → logprob: -8.127480506896973
    6. ''a' → logprob: -8.752480506896973
    7. 'a' → logprob: -9.502480506896973
    8. ''une' → logprob: -9.502480506896973
    9. ''un' → logprob: -9.752480506896973
    10. '   ' → logprob: -11.002480506896973

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8876014351844788
    2. ' deux' → logprob: -1.012601375579834
    3. ' i' → logprob: -3.012601375579834
    4. ' la' → logprob: -3.137601375579834
    5. '2' → logprob: -3.387601375579834
    6. ' n' → logprob: -3.637601375579834
    7. 'i' → logprob: -4.262601375579834
    8. 'de' → logprob: -4.512601375579834
    9. ' longueur' → logprob: -4.512601375579834
    10. '1' → logprob: -4.887601375579834

Token 82: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5039604902267456
    2. 'l' → logprob: -1.6289604902267456
    3. 'de' → logprob: -2.378960609436035
    4. '1' → logprob: -3.503960609436035
    5. 'i' → logprob: -3.628960609436035
    6. 'la' → logprob: -3.753960609436035
    7. '3' → logprob: -4.753960609436035
    8. 'len' → logprob: -5.253960609436035
    9. 'n' → logprob: -5.503960609436035
    10. ' ' → logprob: -5.878960609436035

Token 83: ' "' (ID: 392)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6285277605056763
    2. ' éléments' → logprob: -1.5035277605056763
    3. ' ' → logprob: -1.7535277605056763
    4. '-' → logprob: -3.3785276412963867
    5. '_' → logprob: -4.253527641296387
    6. ' espaces' → logprob: -5.628527641296387
    7. 's' → logprob: -5.753527641296387
    8. ' niveaux' → logprob: -6.378527641296387
    9. ' -' → logprob: -6.628527641296387
    10. ' él' → logprob: -6.878527641296387

Token 84: 'group' (ID: 4323)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2609573602676392
    2. 'élé' → logprob: -1.3859573602676392
    3. ' ' → logprob: -2.2609572410583496
    4. '\' → logprob: -3.5109572410583496
    5. ' sa' → logprob: -3.5109572410583496
    6. ' niveaux' → logprob: -3.5109572410583496
    7. ' éléments' → logprob: -3.7609572410583496
    8. '\n' → logprob: -4.19845724105835
    9. '   ' → logprob: -4.19845724105835
    10. 'altern' → logprob: -4.32345724105835

Token 85: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3997408449649811
    2. 's' → logprob: -1.1497408151626587
    3. 'e' → logprob: -4.524740695953369
    4. ')' → logprob: -6.524740695953369
    5. '}' → logprob: -9.774741172790527
    6. ']' → logprob: -9.774741172790527
    7. 'u' → logprob: -9.899741172790527
    8. ' es' → logprob: -10.399741172790527
    9. '```' → logprob: -10.399741172790527
    10. '_' → logprob: -10.524741172790527

Token 86: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8318151831626892
    2. ' "' → logprob: -1.206815242767334
    3. '"' → logprob: -2.081815242767334
    4. ' de' → logprob: -2.456815242767334
    5. ' d' → logprob: -4.956815242767334
    6. ' ' → logprob: -5.081815242767334
    7. '.' → logprob: -5.081815242767334
    8. 'de' → logprob: -5.206815242767334
    9. 'es' → logprob: -5.206815242767334
    10. ' "\' → logprob: -5.706815242767334

Token 87: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.343191146850586
    2. ' ' → logprob: -1.343191146850586
    3. '   ' → logprob: -1.593191146850586
    4. '_' → logprob: -1.968191146850586
    5. ' :' → logprob: -2.593191146850586
    6. '    ' → logprob: -3.968191146850586
    7. '\' → logprob: -4.593191146850586
    8. ')' → logprob: -4.843191146850586
    9. ',' → logprob: -5.843191146850586
    10. '  ' → logprob: -5.843191146850586

Token 88: 'ind' (ID: 521)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7483857274055481
    2. ')' → logprob: -0.8733857274055481
    3. ').' → logprob: -4.623385906219482
    4. ' ).' → logprob: -4.623385906219482
    5. 's' → logprob: -4.748385906219482
    6. ',' → logprob: -4.748385906219482
    7. 'élé' → logprob: -4.748385906219482
    8. ' ' → logprob: -4.873385906219482
    9. ' ,' → logprob: -4.998385906219482
    10. ' de' → logprob: -5.498385906219482

Token 89: 'iqué' (ID: 47907)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.1892925351858139
    2. 'ent' → logprob: -2.4392924308776855
    3. 'é' → logprob: -3.8142924308776855
    4. 'ices' → logprob: -4.3142924308776855
    5. 'épend' → logprob: -4.5642924308776855
    6. 'e' → logprob: -5.4392924308776855
    7. 'ic' → logprob: -5.5642924308776855
    8. 'ice' → logprob: -5.8142924308776855
    9. 'i' → logprob: -5.8142924308776855
    10. 'entation' → logprob: -6.2517924308776855

Token 90: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8998591303825378
    2. 's' → logprob: -1.1498591899871826
    3. 'e' → logprob: -2.0248591899871826
    4. ')' → logprob: -2.7748591899871826
    5. 'es' → logprob: -3.6498591899871826
    6. ' )' → logprob: -4.2748589515686035
    7. ' par' → logprob: -4.5248589515686035
    8. 'd' → logprob: -4.5248589515686035
    9. ' d' → logprob: -5.3998589515686035
    10. ' ' → logprob: -6.0248589515686035

Token 91: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1694636344909668
    2. ' la' → logprob: -1.4194636344909668
    3. ' le' → logprob: -1.6694636344909668
    4. ' i' → logprob: -3.044463634490967
    5. ' un' → logprob: -3.669463634490967
    6. 'le' → logprob: -3.669463634490967
    7. ' ' → logprob: -4.169463634490967
    8. ' max' → logprob: -4.169463634490967
    9. ' `' → logprob: -4.669463634490967
    10. ' des' → logprob: -4.669463634490967

Token 92: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.218437671661377
    2. 'e' → logprob: -1.343437671661377
    3. ''état' → logprob: -1.593437671661377
    4. ''' → logprob: -1.968437671661377
    5. ''_' → logprob: -4.218437671661377
    6. ''ind' → logprob: -4.343437671661377
    7. ''i' → logprob: -4.843437671661377
    8. ''e' → logprob: -4.843437671661377
    9. ''espace' → logprob: -4.843437671661377
    10. ''é' → logprob: -4.968437671661377

Token 93: 'ice' (ID: 603)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2368600070476532
    2. 'e' → logprob: -1.7368600368499756
    3. 'ex' → logprob: -3.7368600368499756
    4. 'é' → logprob: -4.8618597984313965
    5. 'ice' → logprob: -6.1118597984313965
    6. ''i' → logprob: -8.486860275268555
    7. '```' → logprob: -8.611860275268555
    8. 'í' → logprob: -9.236860275268555
    9. '#' → logprob: -9.361860275268555
    10. 'ic' → logprob: -9.361860275268555

Token 94: ' j' (ID: 441)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.198607087135315
    2. ' de' → logprob: -1.948607087135315
    3. ' des' → logprob: -2.1986069679260254
    4. 's' → logprob: -2.5736069679260254
    5. ')' → logprob: -2.8236069679260254
    6. ' i' → logprob: -2.9486069679260254
    7. 'd' → logprob: -3.0736069679260254
    8. ' )' → logprob: -3.6986069679260254
    9. 'g' → logprob: -3.9486069679260254
    10. '_' → logprob: -3.9486069679260254

Token 95: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013226698152720928
    2. '):' → logprob: -5.013226509094238
    3. '_' → logprob: -5.638226509094238
    4. ',' → logprob: -7.513226509094238
    5. '+' → logprob: -7.513226509094238
    6. ' )' → logprob: -7.763226509094238
    7. 's' → logprob: -7.888226509094238
    8. '[' → logprob: -8.388226509094238
    9. 'u' → logprob: -9.138226509094238
    10. '0' → logprob: -9.388226509094238

Token 96: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5500123500823975
    2. '   ' → logprob: -1.6750123500823975
    3. '_' → logprob: -2.0500123500823975
    4. ')' → logprob: -3.5500123500823975
    5. '    ' → logprob: -3.9250123500823975
    6. ' ' → logprob: -4.175012588500977
    7. '):' → logprob: -4.425012588500977
    8. ' :' → logprob: -5.175012588500977
    9. '[' → logprob: -5.675012588500977
    10. ',' → logprob: -5.800012588500977

Token 97: ' Les' (ID: 7029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5678515434265137
    2. '   ' → logprob: -1.1928515434265137
    3. ' ' → logprob: -2.9428515434265137
    4. ':' → logprob: -2.9428515434265137
    5. '):' → logprob: -4.942851543426514
    6. '_' → logprob: -5.817851543426514
    7. ',' → logprob: -5.942851543426514
    8. '    ' → logprob: -5.942851543426514
    9. '
' → logprob: -6.692851543426514
    10. ' 
' → logprob: -7.192851543426514

Token 98: ' états' (ID: 184259)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5137662291526794
    2. '_' → logprob: -1.0137662887573242
    3. '  ' → logprob: -4.513766288757324
    4. ' _' → logprob: -4.638766288757324
    5. ' ' → logprob: -5.263766288757324
    6. '   ' → logprob: -5.388766288757324
    7. '  ' → logprob: -5.763766288757324
    8. ' ,' → logprob: -6.763766288757324
    9. '    ' → logprob: -6.888766288757324
    10. 'n' → logprob: -7.763766288757324

Token 99: ' dp' (ID: 21546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02477894350886345
    2. '_' → logprob: -5.274778842926025
    3. ' ,' → logprob: -5.524778842926025
    4. ',' → logprob: -5.524778842926025
    5. '<|end|>' → logprob: -6.024778842926025
    6. ' =' → logprob: -6.274778842926025
    7. ' :' → logprob: -6.774778842926025
    8. ')' → logprob: -6.899778842926025
    9. '    ' → logprob: -7.024778842926025
    10. '  ' → logprob: -7.024778842926025

Token 100: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6438703536987305
    2. ' =' → logprob: -1.1438703536987305
    3. '_' → logprob: -2.6438703536987305
    4. ' ' → logprob: -2.8938703536987305
    5. '=' → logprob: -4.3938703536987305
    6. ',' → logprob: -4.6438703536987305
    7. '   ' → logprob: -5.5188703536987305
    8. ')' → logprob: -7.1438703536987305
    9. ']' → logprob: -7.3938703536987305
    10. ':' → logprob: -7.6438703536987305

Token 101: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14942391216754913
    2. ']' → logprob: -2.024423837661743
    3. ' ][' → logprob: -5.524424076080322
    4. '+' → logprob: -7.274424076080322
    5. '][]' → logprob: -8.024423599243164
    6. '[' → logprob: -8.149423599243164
    7. ' ]' → logprob: -8.649423599243164
    8. '[i' → logprob: -8.774423599243164
    9. '[j' → logprob: -8.899423599243164
    10. ' ' → logprob: -8.899423599243164

Token 102: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003272660542279482
    2. '0' → logprob: -6.503272533416748
    3. ']' → logprob: -7.503272533416748
    4. '][' → logprob: -7.628272533416748
    5. ' ' → logprob: -8.503273010253906
    6. 's' → logprob: -8.878273010253906
    7. ' j' → logprob: -8.878273010253906
    8. 'k' → logprob: -10.128273010253906
    9. ' ][' → logprob: -10.128273010253906
    10. 'i' → logprob: -10.253273010253906

Token 103: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.42998915910720825
    2. ']' → logprob: -1.0549890995025635
    3. ' ][' → logprob: -7.304989337921143
    4. '+' → logprob: -8.429988861083984
    5. '][]' → logprob: -8.804988861083984
    6. ' ]' → logprob: -9.429988861083984
    7. '][:' → logprob: -10.054988861083984
    8. '][-' → logprob: -10.804988861083984
    9. '],' → logprob: -11.054988861083984
    10. '   ' → logprob: -11.554988861083984

Token 104: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05903739482164383
    2. '0' → logprob: -3.809037446975708
    3. '2' → logprob: -4.934037208557129
    4. '1' → logprob: -5.309037208557129
    5. 'l' → logprob: -5.684037208557129
    6. 'd' → logprob: -5.934037208557129
    7. 'v' → logprob: -5.934037208557129
    8. 's' → logprob: -6.059037208557129
    9. ']' → logprob: -6.309037208557129
    10. ' k' → logprob: -6.684037208557129

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001430355361662805
    2. ' ]' → logprob: -6.751430511474609
    3. '][' → logprob: -8.62643051147461
    4. ']=' → logprob: -10.37643051147461
    5. '   ' → logprob: -11.25143051147461
    6. 's' → logprob: -11.87643051147461
    7. ' ][' → logprob: -11.87643051147461
    8. '+' → logprob: -12.12643051147461
    9. '[' → logprob: -12.75143051147461
    10. '],' → logprob: -13.00143051147461

Token 106: ' mém' (ID: 136981)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5697945356369019
    2. ']' → logprob: -1.4447945356369019
    3. '[' → logprob: -2.0697946548461914
    4. '=' → logprob: -3.1947946548461914
    5. ',' → logprob: -4.944794654846191
    6. ' ]' → logprob: -5.319794654846191
    7. ' ' → logprob: -5.444794654846191
    8. '   ' → logprob: -5.944794654846191
    9. '[i' → logprob: -5.944794654846191
    10. ']=' → logprob: -6.569794654846191

Token 107: 'oris' (ID: 50689)
  Prédit: 'oris'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oris' → logprob: -0.8663978576660156
    2. 'or' → logprob: -1.1163978576660156
    3. 'o' → logprob: -1.7413978576660156
    4. 'oire' → logprob: -2.8663978576660156
    5. 'oriz' → logprob: -5.491397857666016
    6. 'oir' → logprob: -5.491397857666016
    7. '[' → logprob: -5.616397857666016
    8. 'ois' → logprob: -5.866397857666016
    9. 'ory' → logprob: -7.241397857666016
    10. '%' → logprob: -7.741397857666016

Token 108: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2633873224258423
    2. 'e' → logprob: -1.8883873224258423
    3. 'é' → logprob: -2.8883872032165527
    4. 'és' → logprob: -4.888387203216553
    5. 'ée' → logprob: -5.138387203216553
    6. 'er' → logprob: -5.888387203216553
    7. 'es' → logprob: -6.263387203216553
    8. 'se' → logprob: -6.388387203216553
    9. 'z' → logprob: -7.013387203216553
    10. 'ées' → logprob: -7.138387203216553

Token 109: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0476224422454834
    2. '<|end|>' → logprob: -1.4226224422454834
    3. ' ' → logprob: -1.5476224422454834
    4. ' l' → logprob: -2.4226224422454834
    5. ' les' → logprob: -3.7976224422454834
    6. 's' → logprob: -3.9226224422454834
    7. ',' → logprob: -4.5476226806640625
    8. ' le' → logprob: -4.5476226806640625
    9. ' the' → logprob: -4.6726226806640625
    10. 'l' → logprob: -4.6726226806640625

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10838291794061661
    2. 'i' → logprob: -3.2333829402923584
    3. ' l' → logprob: -3.9833829402923584
    4. ' ' → logprob: -4.108382701873779
    5. '    ' → logprob: -4.858382701873779
    6. ' chaque' → logprob: -4.983382701873779
    7. ' ]' → logprob: -5.858382701873779
    8. '   ' → logprob: -6.108382701873779
    9. ' ' → logprob: -6.358382701873779
    10. '  ' → logprob: -6.983382701873779

Token 111: ' éléments' (ID: 57375)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28193503618240356
    2. ' +' → logprob: -1.5319349765777588
    3. ' ' → logprob: -3.906934976577759
    4. ' ,' → logprob: -6.031935214996338
    5. ',' → logprob: -6.156935214996338
    6. '=' → logprob: -7.031935214996338
    7. ']' → logprob: -7.281935214996338
    8. '  ' → logprob: -7.531935214996338
    9. ' ]' → logprob: -7.781935214996338
    10. ' in' → logprob: -8.40693473815918

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.529017984867096
    2. ' ,' → logprob: -1.5290179252624512
    3. ' ' → logprob: -2.779017925262451
    4. '[' → logprob: -3.654017925262451
    5. 's' → logprob: -4.154017925262451
    6. '[i' → logprob: -4.279017925262451
    7. '   ' → logprob: -4.904017925262451
    8. ' l' → logprob: -5.279017925262451
    9. ' la' → logprob: -5.279017925262451
    10. ')' → logprob: -5.654017925262451

Token 113: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8910738825798035
    2. ' j' → logprob: -1.3910739421844482
    3. 'j' → logprob: -1.6410739421844482
    4. '<|end|>' → logprob: -3.0160739421844482
    5. '0' → logprob: -4.016073703765869
    6. ' i' → logprob: -4.266073703765869
    7. '    ' → logprob: -4.641073703765869
    8. ' et' → logprob: -4.766073703765869
    9. 'i' → logprob: -5.141073703765869
    10. '  ' → logprob: -5.766073703765869

Token 114: ' groupes' (ID: 72206)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9617757797241211
    2. '+' → logprob: -1.336775779724121
    3. ' ][' → logprob: -1.836775779724121
    4. ']' → logprob: -1.961775779724121
    5. ' +' → logprob: -3.211775779724121
    6. ' ]' → logprob: -4.836775779724121
    7. '   ' → logprob: -6.836775779724121
    8. ' ' → logprob: -6.961775779724121
    9. '-' → logprob: -7.211775779724121
    10. ',' → logprob: -8.086775779724121

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6094788312911987
    2. ' ,' → logprob: -1.8594788312911987
    3. ']' → logprob: -2.4844789505004883
    4. '][' → logprob: -2.7344789505004883
    5. '[' → logprob: -3.1094789505004883
    6. ' et' → logprob: -3.8594789505004883
    7. 's' → logprob: -4.484478950500488
    8. '   ' → logprob: -4.734478950500488
    9. '[i' → logprob: -4.734478950500488
    10. ')' → logprob: -4.859478950500488

Token 116: ' k' (ID: 372)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.0167224407196045
    2. ' l' → logprob: -1.2667224407196045
    3. ' k' → logprob: -2.1417224407196045
    4. ' ' → logprob: -2.7667224407196045
    5. 'k' → logprob: -3.0167224407196045
    6. 'l' → logprob: -3.3917224407196045
    7. 'et' → logprob: -3.3917224407196045
    8. '    ' → logprob: -4.016722679138184
    9. ' and' → logprob: -4.516722679138184
    10. '   ' → logprob: -5.391722679138184

Token 117: ' flag' (ID: 9641)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29576030373573303
    2. ' ]' → logprob: -2.6707603931427
    3. ' choisi' → logprob: -4.420760154724121
    4. 's' → logprob: -4.420760154724121
    5. ' la' → logprob: -4.545760154724121
    6. '   ' → logprob: -4.795760154724121
    7. ']=' → logprob: -5.045760154724121
    8. ' de' → logprob: -5.170760154724121
    9. 'élé' → logprob: -5.170760154724121
    10. 'd' → logprob: -5.295760154724121

Token 118: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7845452427864075
    2. ']:' → logprob: -1.4095451831817627
    3. ' ]' → logprob: -2.4095451831817627
    4. 's' → logprob: -2.4095451831817627
    5. ' ' → logprob: -3.0345451831817627
    6. ':' → logprob: -3.5345451831817627
    7. '   ' → logprob: -4.784545421600342
    8. '_' → logprob: -5.284545421600342
    9. ',' → logprob: -5.659545421600342
    10. ']:
' → logprob: -5.784545421600342

Token 119: 'si' (ID: 4778)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0345664024353027
    2. '])' → logprob: -1.2845664024353027
    3. ']' → logprob: -2.1595664024353027
    4. ')' → logprob: -2.2845664024353027
    5. ' ' → logprob: -3.6595664024353027
    6. '1' → logprob: -3.9095664024353027
    7. ')]' → logprob: -4.034566402435303
    8. '3' → logprob: -4.409566402435303
    9. ' ])' → logprob: -4.534566402435303
    10. ' )' → logprob: -5.159566402435303

Token 120: ' on' (ID: 402)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9690130949020386
    2. ' on' → logprob: -2.219013214111328
    3. 'l' → logprob: -2.844013214111328
    4. ' ' → logprob: -2.844013214111328
    5. 'la' → logprob: -2.969013214111328
    6. ' le' → logprob: -3.094013214111328
    7. ' l' → logprob: -3.219013214111328
    8. '1' → logprob: -3.844013214111328
    9. 'on' → logprob: -3.969013214111328
    10. '0' → logprob: -3.969013214111328

Token 121: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7594793438911438
    2. 'a' → logprob: -1.634479284286499
    3. ' continue' → logprob: -2.009479284286499
    4. ' prend' → logprob: -2.634479284286499
    5. 'continue' → logprob: -3.259479284286499
    6. ' chois' → logprob: -4.509479522705078
    7. ' ' → logprob: -4.634479522705078
    8. 'contin' → logprob: -4.884479522705078
    9. 'aj' → logprob: -5.134479522705078
    10. 'cho' → logprob: -5.259479522705078

Token 122: ' à' (ID: 1221)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.8366103172302246
    2. ' dans' → logprob: -1.0866103172302246
    3. 'sur' → logprob: -2.9616103172302246
    4. ' ' → logprob: -3.2116103172302246
    5. ' sur' → logprob: -3.9616103172302246
    6. '_' → logprob: -4.211610317230225
    7. ' présent' → logprob: -4.211610317230225
    8. '1' → logprob: -4.586610317230225
    9. ' en' → logprob: -4.961610317230225
    10. '0' → logprob: -4.961610317230225

Token 123: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9738800525665283
    2. ' l' → logprob: -1.9738800525665283
    3. 'l' → logprob: -2.0988800525665283
    4. '0' → logprob: -2.5988800525665283
    5. ' la' → logprob: -2.5988800525665283
    6. ' une' → logprob: -2.9738800525665283
    7. '1' → logprob: -3.0988800525665283
    8. ' un' → logprob: -3.5988800525665283
    9. 'la' → logprob: -3.9738800525665283
    10. 'un' → logprob: -4.098879814147949

Token 124: ''intérieur' (ID: 102083)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.680088460445404
    2. 'a' → logprob: -1.5550885200500488
    3. '_' → logprob: -1.5550885200500488
    4. '')' → logprob: -4.555088520050049
    5. 'e' → logprob: -4.680088520050049
    6. ''espace' → logprob: -4.930088520050049
    7. ''_' → logprob: -5.305088520050049
    8. '[' → logprob: -5.305088520050049
    9. 'i' → logprob: -5.555088520050049
    10. ')' → logprob: -5.930088520050049

Token 125: ' 
' (ID: 793)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1323801875114441
    2. 'd' → logprob: -2.132380247116089
    3. ' de' → logprob: -6.25738000869751
    4. 'de' → logprob: -6.75738000869751
    5. ' du' → logprob: -7.00738000869751
    6. 'du' → logprob: -7.75738000869751
    7. ')' → logprob: -8.382380485534668
    8. '_d' → logprob: -8.382380485534668
    9. ']' → logprob: -8.757380485534668
    10. '_' → logprob: -9.257380485534668

Token 126: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07818204909563065
    2. 'd' → logprob: -3.3281819820404053
    3. ' de' → logprob: -3.8281819820404053
    4. 'de' → logprob: -5.453182220458984
    5. ' du' → logprob: -6.078182220458984
    6. '_d' → logprob: -6.203182220458984
    7. '_' → logprob: -6.328182220458984
    8. ']' → logprob: -6.328182220458984
    9. ')' → logprob: -6.703182220458984
    10. 'du' → logprob: -7.078182220458984

Token 127: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.44402122497558594
    2. ' d' → logprob: -1.069021224975586
    3. 'de' → logprob: -5.319021224975586
    4. 'du' → logprob: -5.444021224975586
    5. 'un' → logprob: -6.944021224975586
    6. '_' → logprob: -6.944021224975586
    7. '1' → logprob: -7.069021224975586
    8. '0' → logprob: -7.444021224975586
    9. '_d' → logprob: -7.444021224975586
    10. ' de' → logprob: -7.819021224975586

Token 128: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.2526787519454956
    2. ''une' → logprob: -1.3776787519454956
    3. 'une' → logprob: -2.127678871154785
    4. '_' → logprob: -2.752678871154785
    5. 'un' → logprob: -2.752678871154785
    6. ''' → logprob: -3.002678871154785
    7. 'l' → logprob: -3.377678871154785
    8. ' une' → logprob: -3.877678871154785
    9. ' un' → logprob: -4.002678871154785
    10. 'la' → logprob: -4.252678871154785

Token 129: ' segment' (ID: 14806)
  Prédit: ' groupe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.7640464901924133
    2. 'g' → logprob: -0.8890464901924133
    3. 's' → logprob: -3.5140464305877686
    4. ' ' → logprob: -3.5140464305877686
    5. 'group' → logprob: -3.8890464305877686
    6. ' group' → logprob: -4.889046669006348
    7. '"' → logprob: -4.889046669006348
    8. ')' → logprob: -5.389046669006348
    9. ' "' → logprob: -5.889046669006348
    10. '"group' → logprob: -6.014046669006348

Token 130: ' sélection' (ID: 43472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3955465257167816
    2. ' ou' → logprob: -2.2705464363098145
    3. '_' → logprob: -2.5205464363098145
    4. 'altern' → logprob: -3.7705464363098145
    5. 'de' → logprob: -4.2705464363098145
    6. ' )' → logprob: -4.2705464363098145
    7. ' de' → logprob: -4.5205464363098145
    8. '1' → logprob: -4.6455464363098145
    9. ' ' → logprob: -4.6455464363098145
    10. 'ou' → logprob: -5.1455464363098145

Token 131: 'né' (ID: 10149)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.005384468473494053
    2. 'ée' → logprob: -6.13038444519043
    3. 'e' → logprob: -6.75538444519043
    4. ']' → logprob: -7.63038444519043
    5. 'ié' → logprob: -8.00538444519043
    6. '   ' → logprob: -8.13038444519043
    7. 'i' → logprob: -8.38038444519043
    8. '}' → logprob: -9.00538444519043
    9. 'u' → logprob: -9.13038444519043
    10. ')' → logprob: -9.38038444519043

Token 132: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019695883616805077
    2. ' )' → logprob: -5.76969575881958
    3. ']' → logprob: -5.89469575881958
    4. '])' → logprob: -6.01969575881958
    5. '   ' → logprob: -6.26969575881958
    6. '):' → logprob: -6.51969575881958
    7. ' ou' → logprob: -6.51969575881958
    8. 'de' → logprob: -7.26969575881958
    9. ' ' → logprob: -7.51969575881958
    10. '),' → logprob: -7.51969575881958

Token 133: ' entre' (ID: 3853)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1943448781967163
    2. 'not' → logprob: -1.4443448781967163
    3. ' pas' → logprob: -1.6943448781967163
    4. ' non' → logprob: -2.069344997406006
    5. 'non' → logprob: -2.319344997406006
    6. 'pas' → logprob: -3.069344997406006
    7. ' ' → logprob: -5.694344997406006
    8. ' à' → logprob: -7.194344997406006
    9. ' hors' → logprob: -7.444344997406006
    10. ' en' → logprob: -8.444344520568848

Token 134: '),' (ID: 936)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.6214540004730225
    2. 'de' → logprob: -0.9964540004730225
    3. 'segments' → logprob: -3.4964540004730225
    4. ')' → logprob: -3.9964540004730225
    5. ' segments' → logprob: -4.371454238891602
    6. ' des' → logprob: -4.871454238891602
    7. ' eux' → logprob: -5.246454238891602
    8. 'les' → logprob: -5.621454238891602
    9. 'des' → logprob: -5.746454238891602
    10. ' ' → logprob: -6.246454238891602

Token 135: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1105985641479492
    2. '   ' → logprob: -1.1105985641479492
    3. ' ' → logprob: -2.360598564147949
    4. '    ' → logprob: -2.610598564147949
    5. ' )' → logprob: -2.610598564147949
    6. ',' → logprob: -3.235598564147949
    7. 's' → logprob: -4.610598564147949
    8. ' ,' → logprob: -4.610598564147949
    9. ' 
' → logprob: -4.735598564147949
    10. '  ' → logprob: -5.610598564147949

Token 136: ' meilleure' (ID: 52387)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1859573125839233
    2. ' ]' → logprob: -1.1859573125839233
    3. ' ' → logprob: -2.810957431793213
    4. 'n' → logprob: -2.810957431793213
    5. ']' → logprob: -3.185957431793213
    6. 's' → logprob: -3.560957431793213
    7. ' """' → logprob: -3.685957431793213
    8. '   ' → logprob: -4.060957431793213
    9. ':' → logprob: -4.060957431793213
    10. ')' → logprob: -4.435957431793213

Token 137: ' somme' (ID: 64484)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2404969930648804
    2. ' valeur' → logprob: -1.4904969930648804
    3. ' somme' → logprob: -1.7404969930648804
    4. ' _' → logprob: -2.49049711227417
    5. '_val' → logprob: -2.74049711227417
    6. '   ' → logprob: -3.24049711227417
    7. '_s' → logprob: -3.49049711227417
    8. 's' → logprob: -4.11549711227417
    9. '    ' → logprob: -4.61549711227417
    10. 'val' → logprob: -4.86549711227417

Token 138: ' atte' (ID: 43312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3255361020565033
    2. '    ' → logprob: -3.200536012649536
    3. ' 
' → logprob: -3.200536012649536
    4. ' """
' → logprob: -3.325536012649536
    5. '    
' → logprob: -3.575536012649536
    6. ',' → logprob: -3.825536012649536
    7. '.' → logprob: -4.075536251068115
    8. '
' → logprob: -4.325536251068115
    9. '"""
' → logprob: -4.575536251068115
    10. ' )' → logprob: -4.700536251068115

Token 139: 'ign' (ID: 733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6054280996322632
    2. 'inte' → logprob: -0.8554280996322632
    3. 'u' → logprob: -4.605428218841553
    4. 'n' → logprob: -4.730428218841553
    5. 'int' → logprob: -5.730428218841553
    6. 'e' → logprob: -6.855428218841553
    7. 'ign' → logprob: -7.230428218841553
    8. '   ' → logprob: -7.480428218841553
    9. 'nte' → logprob: -7.605428218841553
    10. 'g' → logprob: -7.730428218841553

Token 140: 'able' (ID: 562)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.19856292009353638
    2. 'e' → logprob: -1.8235628604888916
    3. 'able' → logprob: -4.573563098907471
    4. 'u' → logprob: -4.823563098907471
    5. 'a' → logprob: -9.698562622070312
    6. 'ie' → logprob: -10.198562622070312
    7. 'te' → logprob: -11.073562622070312
    8. 'uable' → logprob: -11.073562622070312
    9. 'ute' → logprob: -11.448562622070312
    10. '   ' → logprob: -11.698562622070312

Token 141: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5298634171485901
    2. ',' → logprob: -1.1548633575439453
    3. '.' → logprob: -2.6548633575439453
    4. ' ' → logprob: -5.154863357543945
    5. ')' → logprob: -5.904863357543945
    6. '    
' → logprob: -5.904863357543945
    7. ' ,' → logprob: -6.279863357543945
    8. ':' → logprob: -6.279863357543945
    9. '   
' → logprob: -6.279863357543945
    10. '_' → logprob: -6.404863357543945

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14829468727111816
    2. ')' → logprob: -2.898294687271118
    3. '}' → logprob: -3.148294687271118
    4. ' ' → logprob: -4.148294448852539
    5. '_' → logprob: -4.773294448852539
    6. ',' → logprob: -5.523294448852539
    7. '"' → logprob: -5.898294448852539
    8. '    ' → logprob: -6.023294448852539
    9. '  
' → logprob: -7.273294448852539
    10. ':' → logprob: -7.398294448852539

Token 143: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13034863770008087
    2. '"""' → logprob: -2.3803486824035645
    3. ' """' → logprob: -4.8803486824035645
    4. '    ' → logprob: -5.1303486824035645
    5. ')' → logprob: -5.3803486824035645
    6. '"' → logprob: -5.3803486824035645
    7. ' ' → logprob: -6.1303486824035645
    8. 'n' → logprob: -6.5053486824035645
    9. '  ' → logprob: -7.6303486824035645
    10. '""' → logprob: -8.005348205566406

Token 144: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.20026710629463196
    2. 'rée' → logprob: -2.4502670764923096
    3. 'ées' → logprob: -2.8252670764923096
    4. 'r' → logprob: -3.7002670764923096
    5. 'é' → logprob: -5.075267314910889
    6. 'er' → logprob: -6.200267314910889
    7. '   ' → logprob: -7.325267314910889
    8. 'e' → logprob: -7.325267314910889
    9. '```' → logprob: -7.575267314910889
    10. 'ré' → logprob: -7.950267314910889

Token 145: ' :
' (ID: 10039)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.30726179480552673
    2. '   ' → logprob: -2.3072617053985596
    3. '()' → logprob: -2.4322617053985596
    4. ':' → logprob: -3.4322617053985596
    5. '():
' → logprob: -3.9322617053985596
    6. 'def' → logprob: -4.557261943817139
    7. '(' → logprob: -5.557261943817139
    8. '(n' → logprob: -6.432261943817139
    9. ' =' → logprob: -6.807261943817139
    10. '()
' → logprob: -7.182261943817139

Token 146: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17248696088790894
    2. '    ' → logprob: -2.5474870204925537
    3. ' ' → logprob: -2.9224870204925537
    4. 'n' → logprob: -3.9224870204925537
    5. '  ' → logprob: -6.797486782073975
    6. '_' → logprob: -7.047486782073975
    7. ' )' → logprob: -7.047486782073975
    8. ')' → logprob: -7.422486782073975
    9. 's' → logprob: -8.047487258911133
    10. 'r' → logprob: -8.047487258911133

Token 147: ' -' (ID: 533)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5962345600128174
    2. '   ' → logprob: -2.2212345600128174
    3. 'sequence' → logprob: -2.2212345600128174
    4. 'n' → logprob: -2.8462345600128174
    5. 'seq' → logprob: -2.9712345600128174
    6. ' seq' → logprob: -3.0962345600128174
    7. ' n' → logprob: -3.2212345600128174
    8. ' lines' → logprob: -4.846234321594238
    9. ' lst' → logprob: -5.346234321594238
    10. ' la' → logprob: -5.596234321594238

Token 148: ' n' (ID: 297)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.47188276052474976
    2. ' sequence' → logprob: -1.2218828201293945
    3. 'n' → logprob: -3.4718828201293945
    4. 'seq' → logprob: -3.4718828201293945
    5. '   ' → logprob: -5.0968828201293945
    6. 's' → logprob: -5.9718828201293945
    7. ' seq' → logprob: -6.4718828201293945
    8. ' n' → logprob: -6.4718828201293945
    9. ' la' → logprob: -6.7218828201293945
    10. ' sequences' → logprob: -6.8468828201293945

Token 149: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0527956523001194
    2. ',' → logprob: -3.427795648574829
    3. '=' → logprob: -4.052795886993408
    4. '=int' → logprob: -6.552795886993408
    5. '=input' → logprob: -10.42779541015625
    6. ':' → logprob: -10.55279541015625
    7. '   ' → logprob: -10.55279541015625
    8. ' ,' → logprob: -10.67779541015625
    9. ')' → logprob: -11.05279541015625
    10. ' ' → logprob: -11.30279541015625

Token 150: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7555931806564331
    2. 'int' → logprob: -1.380593180656433
    3. '):' → logprob: -2.3805932998657227
    4. ' int' → logprob: -2.5055932998657227
    5. ' )' → logprob: -2.7555932998657227
    6. ',' → logprob: -3.8805932998657227
    7. ' n' → logprob: -5.130593299865723
    8. '   ' → logprob: -5.380593299865723
    9. ' ):' → logprob: -5.505593299865723
    10. ' ' → logprob: -7.130593299865723

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3001101613044739
    2. '):' → logprob: -1.425110101699829
    3. ',' → logprob: -4.050110340118408
    4. ' )' → logprob: -7.800110340118408
    5. ' ):' → logprob: -7.800110340118408
    6. '):
' → logprob: -8.05010986328125
    7. '),' → logprob: -9.67510986328125
    8. ':' → logprob: -10.17510986328125
    9. '=' → logprob: -10.80010986328125
    10. '   ' → logprob: -11.30010986328125

Token 152: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4244038462638855
    2. ',' → logprob: -1.7994039058685303
    3. '   ' → logprob: -2.1744039058685303
    4. '=' → logprob: -3.7994039058685303
    5. ')' → logprob: -4.049403667449951
    6. '):' → logprob: -4.674403667449951
    7. ':' → logprob: -5.049403667449951
    8. ',n' → logprob: -6.049403667449951
    9. 'n' → logprob: -6.174403667449951
    10. 'def' → logprob: -6.924403667449951

Token 153: ' taille' (ID: 41644)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0844188928604126
    2. ' int' → logprob: -1.2094188928604126
    3. ' la' → logprob: -1.7094188928604126
    4. ' l' → logprob: -3.084418773651123
    5. '   ' → logprob: -3.209418773651123
    6. 'int' → logprob: -3.584418773651123
    7. ' nombre' → logprob: -3.709418773651123
    8. ' ' → logprob: -4.084418773651123
    9. ' le' → logprob: -4.709418773651123
    10. ' len' → logprob: -5.209418773651123

Token 154: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7083017826080322
    2. ' ' → logprob: -1.0833017826080322
    3. '   ' → logprob: -2.0833017826080322
    4. ',' → logprob: -3.9583017826080322
    5. '  ' → logprob: -4.833301544189453
    6. '    ' → logprob: -5.333301544189453
    7. ' )' → logprob: -5.583301544189453
    8. ' =' → logprob: -6.708301544189453
    9. ' d' → logprob: -6.833301544189453
    10. ' n' → logprob: -6.833301544189453

Token 155: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20243656635284424
    2. 'la' → logprob: -1.8274365663528442
    3. 'l' → logprob: -4.327436447143555
    4. ' ' → logprob: -4.827436447143555
    5. ' l' → logprob: -7.202436447143555
    6. '   ' → logprob: -8.077436447143555
    7. 's' → logprob: -10.827436447143555
    8. '_la' → logprob: -10.827436447143555
    9. ' sequence' → logprob: -10.952436447143555
    10. 'sé' → logprob: -11.077436447143555

Token 156: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.18698054552078247
    2. 's' → logprob: -2.8119804859161377
    3. ' sé' → logprob: -3.3119804859161377
    4. 'sequence' → logprob: -3.6869804859161377
    5. 'liste' → logprob: -4.061980724334717
    6. ' sequence' → logprob: -4.186980724334717
    7. ' ' → logprob: -5.061980724334717
    8. ' liste' → logprob: -5.186980724334717
    9. 'suite' → logprob: -7.436980724334717
    10. 'input' → logprob: -7.561980724334717

Token 157: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.7968066206085496e-05
    2. 'q' → logprob: -10.875027656555176
    3. 'QUENCE' → logprob: -12.875027656555176
    4. 'quences' → logprob: -13.250027656555176
    5. 'rie' → logprob: -13.375027656555176
    6. 'qu' → logprob: -13.750027656555176
    7. '   ' → logprob: -14.375027656555176
    8. '\
' → logprob: -15.000027656555176
    9. '-' → logprob: -15.125027656555176
    10. 'que' → logprob: -15.500027656555176

Token 158: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8900793194770813
    2. '   ' → logprob: -1.0150792598724365
    3. ',' → logprob: -1.7650792598724365
    4. '\n' → logprob: -4.015079498291016
    5. 'n' → logprob: -4.140079498291016
    6. '
' → logprob: -5.265079498291016
    7. '<|end|>' → logprob: -5.890079498291016
    8. '    
' → logprob: -6.140079498291016
    9. ' ' → logprob: -6.265079498291016
    10. ' )' → logprob: -6.765079498291016

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0346716046333313
    2. ',' → logprob: -4.284671783447266
    3. '       ' → logprob: -4.659671783447266
    4. ')' → logprob: -5.909671783447266
    5. ' ' → logprob: -6.159671783447266
    6. 'n' → logprob: -6.534671783447266
    7. '    
' → logprob: -6.784671783447266
    8. '    ' → logprob: -6.909671783447266
    9. '  
' → logprob: -7.909671783447266
    10. '  ' → logprob: -8.034671783447266

Token 160: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2895066738128662
    2. '   ' → logprob: -1.4145066738128662
    3. 'n' → logprob: -5.789506912231445
    4. ',' → logprob: -6.664506912231445
    5. '    ' → logprob: -7.164506912231445
    6. '\n' → logprob: -7.164506912231445
    7. '
' → logprob: -8.039506912231445
    8. '\' → logprob: -8.039506912231445
    9. '```' → logprob: -8.414506912231445
    10. '     ' → logprob: -8.539506912231445

Token 161: ' a' (ID: 261)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.3478612899780273
    2. 'seq' → logprob: -1.4728612899780273
    3. ' seq' → logprob: -1.7228612899780273
    4. 'sequence' → logprob: -2.2228612899780273
    5. 'a' → logprob: -2.8478612899780273
    6. 'arr' → logprob: -2.9728612899780273
    7. ' a' → logprob: -2.9728612899780273
    8. ' arr' → logprob: -3.8478612899780273
    9. 's' → logprob: -4.472861289978027
    10. ' s' → logprob: -4.972861289978027

Token 162: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19850045442581177
    2. ')' → logprob: -2.573500394821167
    3. '[' → logprob: -2.698500394821167
    4. '   ' → logprob: -4.823500633239746
    5. '_' → logprob: -5.198500633239746
    6. '[i' → logprob: -5.198500633239746
    7. '=' → logprob: -5.573500633239746
    8. ',' → logprob: -5.698500633239746
    9. ' ' → logprob: -6.073500633239746
    10. ' )' → logprob: -6.573500633239746

Token 163: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6592952609062195
    2. 'list' → logprob: -0.7842952609062195
    3. ' list' → logprob: -3.7842953205108643
    4. ')' → logprob: -6.409295082092285
    5. ' List' → logprob: -7.284295082092285
    6. 'int' → logprob: -7.659295082092285
    7. '[List' → logprob: -8.409295082092285
    8. '[int' → logprob: -8.534295082092285
    9. '[' → logprob: -9.159295082092285
    10. ' )' → logprob: -9.534295082092285

Token 164: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.000260382192209363
    2. ')' → logprob: -8.750260353088379
    3. '[' → logprob: -10.250260353088379
    4. '<int' → logprob: -10.500260353088379
    5. '[List' → logprob: -11.000260353088379
    6. '):' → logprob: -11.125260353088379
    7. '[Int' → logprob: -13.250260353088379
    8. ']' → logprob: -13.750260353088379
    9. 'int' → logprob: -14.375260353088379
    10. '[str' → logprob: -14.625260353088379

Token 165: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0028462447226047516
    2. ']' → logprob: -6.0028462409973145
    3. ' ])' → logprob: -9.002846717834473
    4. ')' → logprob: -9.252846717834473
    5. ']):' → logprob: -9.877846717834473
    6. '],' → logprob: -10.502846717834473
    7. ']])' → logprob: -11.002846717834473
    8. '[int' → logprob: -11.127846717834473
    9. '])]' → logprob: -11.127846717834473
    10. ')])' → logprob: -12.127846717834473

Token 166: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20025891065597534
    2. '):' → logprob: -2.32525897026062
    3. ')' → logprob: -2.82525897026062
    4. ':' → logprob: -5.450258731842041
    5. ',' → logprob: -5.575258731842041
    6. '    
' → logprob: -5.950258731842041
    7. '```' → logprob: -6.075258731842041
    8. '
' → logprob: -6.200258731842041
    9. 'def' → logprob: -6.200258731842041
    10. '):
' → logprob: -6.700258731842041

Token 167: ' liste' (ID: 31719)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.04870954528450966
    2. ' list' → logprob: -3.9237096309661865
    3. ' liste' → logprob: -3.9237096309661865
    4. 'la' → logprob: -6.548709392547607
    5. 'list' → logprob: -6.923709392547607
    6. ' La' → logprob: -7.048709392547607
    7. ' List' → logprob: -7.423709392547607
    8. ' sequence' → logprob: -7.548709392547607
    9. 'liste' → logprob: -7.798709392547607
    10. ' l' → logprob: -7.798709392547607

Token 168: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.47262948751449585
    2. '<|end|>' → logprob: -2.2226295471191406
    3. '[' → logprob: -2.3476295471191406
    4. '   ' → logprob: -3.5976295471191406
    5. ' de' → logprob: -3.5976295471191406
    6. ' d' → logprob: -3.5976295471191406
    7. ')' → logprob: -3.9726295471191406
    8. '[int' → logprob: -4.472629547119141
    9. '[]' → logprob: -4.472629547119141
    10. 'des' → logprob: -4.972629547119141

Token 169: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -1.051024317741394
    2. 'e' → logprob: -1.926024317741394
    3. 'es' → logprob: -2.4260244369506836
    4. 'a' → logprob: -2.6760244369506836
    5. ''espace' → logprob: -2.6760244369506836
    6. ''' → logprob: -3.0510244369506836
    7. '[' → logprob: -3.1760244369506836
    8. ']' → logprob: -3.4260244369506836
    9. '_' → logprob: -3.6760244369506836
    10. '[]' → logprob: -4.176024436950684

Token 170: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03188291937112808
    2. 'i' → logprob: -3.7818830013275146
    3. 'ier' → logprob: -5.5318827629089355
    4. 'ières' → logprob: -5.5318827629089355
    5. 'ière' → logprob: -8.031883239746094
    6. 'ers' → logprob: -9.281883239746094
    7. 'ié' → logprob: -9.781883239746094
    8. 'ires' → logprob: -10.156883239746094
    9. '   ' → logprob: -10.406883239746094
    10. 'a' → logprob: -11.031883239746094

Token 171: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02465112693607807
    2. '
' → logprob: -4.774651050567627
    3. '):' → logprob: -5.399651050567627
    4. ')' → logprob: -5.524651050567627
    5. '):
' → logprob: -5.774651050567627
    6. '    
' → logprob: -6.774651050567627
    7. 'def' → logprob: -7.149651050567627
    8. '```' → logprob: -7.649651050567627
    9. ')
' → logprob: -8.399651527404785
    10. ' 
' → logprob: -8.649651527404785

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03729698807001114
    2. '"""' → logprob: -4.287296772003174
    3. '"""
' → logprob: -4.787296772003174
    4. ')' → logprob: -5.787296772003174
    5. ' """
' → logprob: -6.287296772003174
    6. '
' → logprob: -6.537296772003174
    7. 'def' → logprob: -6.537296772003174
    8. '\n' → logprob: -6.662296772003174
    9. '```' → logprob: -6.662296772003174
    10. ')
' → logprob: -7.037296772003174

Token 173: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2197325974702835
    2. 'def' → logprob: -2.0947325229644775
    3. 'n' → logprob: -3.3447325229644775
    4. ' def' → logprob: -4.719732761383057
    5. ' n' → logprob: -5.219732761383057
    6. ' """' → logprob: -5.594732761383057
    7. '    ' → logprob: -5.719732761383057
    8. '"""' → logprob: -5.719732761383057
    9. ' """
' → logprob: -5.844732761383057
    10. ' ' → logprob: -5.844732761383057

Token 174: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.002500152215361595
    2. 'i' → logprob: -6.252500057220459
    3. 'ies' → logprob: -7.752500057220459
    4. 'e' → logprob: -10.502500534057617
    5. 'ur' → logprob: -10.627500534057617
    6. 'ue' → logprob: -11.127500534057617
    7. ' ie' → logprob: -11.127500534057617
    8. '   ' → logprob: -11.377500534057617
    9. '```' → logprob: -11.377500534057617
    10. 'u' → logprob: -12.502500534057617

Token 175: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.06157365441322327
    2. ':' → logprob: -2.9365737438201904
    3. ' :
' → logprob: -5.061573505401611
    4. ':
' → logprob: -8.81157398223877
    5. 's' → logprob: -9.06157398223877
    6. 'e' → logprob: -10.68657398223877
    7. '   ' → logprob: -11.18657398223877
    8. ' :
' → logprob: -11.93657398223877
    9. ' :

' → logprob: -12.06157398223877
    10. ' ' → logprob: -12.31157398223877

Token 176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22322778403759003
    2. ' int' → logprob: -1.9732277393341064
    3. '    ' → logprob: -3.5982277393341064
    4. 'int' → logprob: -3.7232277393341064
    5. '       ' → logprob: -4.7232279777526855
    6. ' ' → logprob: -8.723227500915527
    7. '     ' → logprob: -9.223227500915527
    8. ' la' → logprob: -9.598227500915527
    9. '        ' → logprob: -9.723227500915527
    10. '  ' → logprob: -9.848227500915527

Token 177: ' -' (ID: 533)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04898881912231445
    2. 'int' → logprob: -3.0489888191223145
    3. '   ' → logprob: -8.173988342285156
    4. ' max' → logprob: -9.673988342285156
    5. ' L' → logprob: -10.548988342285156
    6. ' l' → logprob: -12.173988342285156
    7. 'max' → logprob: -12.548988342285156
    8. '(int' → logprob: -12.798988342285156
    9. ' (' → logprob: -12.923988342285156
    10. ' ' → logprob: -13.298988342285156

Token 178: ' Aff' (ID: 13741)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6334747076034546
    2. 'int' → logprob: -0.7584747076034546
    3. '   ' → logprob: -7.383474826812744
    4. ' max' → logprob: -9.258474349975586
    5. 'max' → logprob: -9.883474349975586
    6. ' l' → logprob: -11.258474349975586
    7. '(int' → logprob: -11.383474349975586
    8. ' L' → logprob: -11.383474349975586
    9. '       ' → logprob: -11.633474349975586
    10. ' la' → logprob: -11.758474349975586

Token 179: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.7567579746246338
    2. 'icher' → logprob: -1.2567579746246338
    3. 'ichage' → logprob: -1.7567579746246338
    4. 'ic' → logprob: -3.256757974624634
    5. 'i' → logprob: -3.756757974624634
    6. 'ich' → logprob: -4.631757736206055
    7. 'ichier' → logprob: -7.381757736206055
    8. 'iché' → logprob: -7.756757736206055
    9. 'ichert' → logprob: -7.881757736206055
    10. 'ichel' → logprob: -9.131757736206055

Token 180: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5922659635543823
    2. ' ' → logprob: -0.9672659635543823
    3. '"' → logprob: -3.092266082763672
    4. ' max' → logprob: -5.717266082763672
    5. '(' → logprob: -5.967266082763672
    6. '  ' → logprob: -5.967266082763672
    7. '   ' → logprob: -6.092266082763672
    8. ''' → logprob: -6.092266082763672
    9. '(max' → logprob: -6.342266082763672
    10. '    ' → logprob: -6.967266082763672

Token 181: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.4378213882446289
    2. ' maximum' → logprob: -1.812821388244629
    3. ' maximale' → logprob: -2.812821388244629
    4. ' max' → logprob: -3.062821388244629
    5. ' maximal' → logprob: -3.562821388244629
    6. ' maxim' → logprob: -4.312821388244629
    7. ' sum' → logprob: -4.562821388244629
    8. ' meilleure' → logprob: -4.937821388244629
    9. ' meilleur' → logprob: -5.062821388244629
    10. ' ' → logprob: -5.312821388244629

Token 182: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18150275945663452
    2. 'def' → logprob: -2.1815028190612793
    3. ')' → logprob: -4.681502819061279
    4. ',' → logprob: -4.806502819061279
    5. ':' → logprob: -5.056502819061279
    6. '\n' → logprob: -5.681502819061279
    7. '):' → logprob: -5.681502819061279
    8. ' ' → logprob: -5.806502819061279
    9. '
' → logprob: -6.056502819061279
    10. ' :' → logprob: -6.306502819061279

Token 183: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5945520401000977
    2. 'def' → logprob: -0.9695520401000977
    3. '
' → logprob: -3.9695520401000977
    4. '```' → logprob: -4.469552040100098
    5. '\n' → logprob: -4.594552040100098
    6. ':' → logprob: -5.219552040100098
    7. ' def' → logprob: -5.469552040100098
    8. '    
' → logprob: -5.594552040100098
    9. '"""' → logprob: -6.219552040100098
    10. ',' → logprob: -6.594552040100098

Token 184: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.47412657737731934
    2. 'é' → logprob: -0.9741265773773193
    3. 'e' → logprob: -10.724126815795898
    4. 'è' → logprob: -11.349126815795898
    5. 'æ' → logprob: -12.474126815795898
    6. 'ee' → logprob: -12.599126815795898
    7. 'ä' → logprob: -13.224126815795898
    8. 'ê' → logprob: -13.474126815795898
    9. 'à' → logprob: -13.974126815795898
    10. 'á' → logprob: -14.099126815795898

Token 185: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04192899912595749
    2. '
' → logprob: -4.041928768157959
    3. 'def' → logprob: -5.166928768157959
    4. ':' → logprob: -5.791928768157959
    5. ':
' → logprob: -5.791928768157959
    6. '```' → logprob: -5.791928768157959
    7. ' :
' → logprob: -6.291928768157959
    8. '    
' → logprob: -6.416928768157959
    9. '\n' → logprob: -6.791928768157959
    10. ' :' → logprob: -6.916928768157959

Token 186: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9935831427574158
    2. ' la' → logprob: -1.1185832023620605
    3. ' une' → logprob: -1.6185832023620605
    4. 'la' → logprob: -3.1185832023620605
    5. 'une' → logprob: -4.7435832023620605
    6. 'sé' → logprob: -4.8685832023620605
    7. '_' → logprob: -5.2435832023620605
    8. '    ' → logprob: -5.3685832023620605
    9. ' sé' → logprob: -5.3685832023620605
    10. ' ' → logprob: -5.3685832023620605

Token 187: ' contr' (ID: 6030)
  Prédit: ' contr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contr' → logprob: -0.4554537236690521
    2. ' plus' → logprob: -1.7054537534713745
    3. 'contr' → logprob: -2.955453634262085
    4. ' forme' → logprob: -2.955453634262085
    5. ' condition' → logprob: -4.080453872680664
    6. 'plus' → logprob: -4.580453872680664
    7. 'forme' → logprob: -4.830453872680664
    8. 'con' → logprob: -5.080453872680664
    9. 'contra' → logprob: -5.080453872680664
    10. ' constraint' → logprob: -5.455453872680664

Token 188: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.021824097260832787
    2. 'a' → logprob: -4.021823883056641
    3. 'aint' → logprob: -6.021823883056641
    4. 'aine' → logprob: -7.521823883056641
    5. 'ain' → logprob: -8.14682388305664
    6. '   ' → logprob: -8.77182388305664
    7. 'e' → logprob: -10.02182388305664
    8. '
' → logprob: -10.14682388305664
    9. '#' → logprob: -10.52182388305664
    10. '```' → logprob: -10.89682388305664

Token 189: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8497080206871033
    2. '
' → logprob: -1.224708080291748
    3. '\n' → logprob: -1.849708080291748
    4. '    
' → logprob: -3.224708080291748
    5. ':' → logprob: -3.349708080291748
    6. '```' → logprob: -4.099708080291748
    7. '\' → logprob: -4.599708080291748
    8. '  
' → logprob: -5.599708080291748
    9. '):' → logprob: -5.849708080291748
    10. 'def' → logprob: -6.224708080291748

Token 190: ' problème' (ID: 35630)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9416959881782532
    2. 'a' → logprob: -1.0666959285736084
    3. ''' → logprob: -3.0666959285736084
    4. ' code' → logprob: -3.3166959285736084
    5. ' '' → logprob: -3.4416959285736084
    6. ' a' → logprob: -3.8166959285736084
    7. ' problème' → logprob: -4.0666961669921875
    8. ' e' → logprob: -4.1916961669921875
    9. 's' → logprob: -4.4416961669921875
    10. ' la' → logprob: -4.6916961669921875

Token 191: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9544405937194824
    2. '
' → logprob: -1.5794405937194824
    3. '(n' → logprob: -1.5794405937194824
    4. '\n' → logprob: -2.3294405937194824
    5. ':' → logprob: -2.9544405937194824
    6. 'def' → logprob: -3.7044405937194824
    7. ':
' → logprob: -5.079440593719482
    8. '):' → logprob: -5.704440593719482
    9. '```' → logprob: -5.704440593719482
    10. 'n' → logprob: -5.954440593719482

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12988907098770142
    2. '
' → logprob: -2.7548890113830566
    3. 'def' → logprob: -3.5048890113830566
    4. '\n' → logprob: -4.379889011383057
    5. '    
' → logprob: -5.379889011383057
    6. '(n' → logprob: -5.754889011383057
    7. ':' → logprob: -6.129889011383057
    8. '):' → logprob: -6.879889011383057
    9. 'n' → logprob: -7.004889011383057
    10. '```' → logprob: -7.504889011383057

Token 193: ' Rem' (ID: 6890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013557219877839088
    2. 'def' → logprob: -4.763557434082031
    3. '"""' → logprob: -6.763557434082031
    4. '\n' → logprob: -7.013557434082031
    5. '    
' → logprob: -7.013557434082031
    6. '
' → logprob: -7.138557434082031
    7. 'n' → logprob: -7.513557434082031
    8. '    ' → logprob: -8.263557434082031
    9. '```' → logprob: -8.888557434082031
    10. ' def' → logprob: -10.013557434082031

Token 194: 'arque' (ID: 167524)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.8653387427330017
    2. 'plit' → logprob: -0.9903387427330017
    3. 'place' → logprob: -2.1153388023376465
    4. 'p' → logprob: -2.4903388023376465
    5. 'arque' → logprob: -6.4903388023376465
    6. 'pile' → logprob: -6.8653388023376465
    7. 'ar' → logprob: -6.9903388023376465
    8. 'ple' → logprob: -8.365338325500488
    9. '_' → logprob: -9.490338325500488
    10. 'placer' → logprob: -9.615338325500488

Token 195: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5100033283233643
    2. ':' → logprob: -1.0100033283233643
    3. ' ' → logprob: -4.135003089904785
    4. 's' → logprob: -4.885003089904785
    5. ',' → logprob: -5.135003089904785
    6. '   ' → logprob: -5.635003089904785
    7. ' :
' → logprob: -7.135003089904785
    8. '    ' → logprob: -8.135003089904785
    9. ' ,' → logprob: -8.510003089904785
    10. '_' → logprob: -8.635003089904785

Token 196: ' Les' (ID: 7029)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3576084077358246
    2. '   ' → logprob: -1.482608437538147
    3. ' ' → logprob: -2.8576083183288574
    4. ' ' → logprob: -5.732608318328857
    5. ' \' → logprob: -5.857608318328857
    6. ' def' → logprob: -6.232608318328857
    7. '     
' → logprob: -6.482608318328857
    8. '    
' → logprob: -6.607608318328857
    9. ' """' → logprob: -7.107608318328857
    10. ' 
' → logprob: -7.607608318328857

Token 197: ' contraintes' (ID: 167366)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6821774244308472
    2. '_' → logprob: -1.5571774244308472
    3. ' code' → logprob: -2.6821775436401367
    4. 'n' → logprob: -3.4321775436401367
    5. ' ' → logprob: -3.6821775436401367
    6. ' def' → logprob: -3.8071775436401367
    7. ' a' → logprob: -4.057177543640137
    8. ' """' → logprob: -4.182177543640137
    9. '   ' → logprob: -4.307177543640137
    10. ' :' → logprob: -4.432177543640137

Token 198: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7684844732284546
    2. '   ' → logprob: -1.0184844732284546
    3. '    ' → logprob: -3.143484592437744
    4. '_' → logprob: -3.268484592437744
    5. ' de' → logprob: -3.643484592437744
    6. ':' → logprob: -4.518484592437744
    7. ',' → logprob: -4.768484592437744
    8. 's' → logprob: -5.018484592437744
    9. '  ' → logprob: -5.393484592437744
    10. ' ,' → logprob: -5.393484592437744

Token 199: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9728183150291443
    2. ' l' → logprob: -1.097818374633789
    3. ' limitations' → logprob: -2.597818374633789
    4. ' le' → logprob: -2.847818374633789
    5. ' les' → logprob: -3.472818374633789
    6. ' contraintes' → logprob: -3.597818374633789
    7. ' des' → logprob: -4.347818374633789
    8. '"""' → logprob: -4.847818374633789
    9. ' code' → logprob: -5.097818374633789
    10. ' limites' → logprob: -5.222818374633789

Token 200: ' sign' (ID: 2232)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.7895676493644714
    2. 'impl' → logprob: -2.789567708969116
    3. 'limitations' → logprob: -2.789567708969116
    4. ' limites' → logprob: -3.164567708969116
    5. ' contraintes' → logprob: -3.164567708969116
    6. 'suite' → logprob: -3.664567708969116
    7. ' limite' → logprob: -3.664567708969116
    8. 'contra' → logprob: -3.664567708969116
    9. 'description' → logprob: -3.789567708969116
    10. 'fonction' → logprob: -3.914567708969116

Token 201: 'ification' (ID: 3166)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.100510835647583
    2. 'es' → logprob: -1.350510835647583
    3. 'ature' → logprob: -2.225510835647583
    4. 'alité' → logprob: -2.725510835647583
    5. 'e' → logprob: -3.100510835647583
    6. 'é' → logprob: -3.225510835647583
    7. 'def' → logprob: -3.350510835647583
    8. 'atures' → logprob: -3.725510835647583
    9. 'ité' → logprob: -4.100510597229004
    10. 'a' → logprob: -4.100510597229004

Token 202: ' précise' (ID: 95250)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3248330354690552
    2. ' des' → logprob: -1.4498330354690552
    3. ' du' → logprob: -1.5748330354690552
    4. 's' → logprob: -2.4498329162597656
    5. '   ' → logprob: -2.6998329162597656
    6. ' ' → logprob: -3.0748329162597656
    7. '_' → logprob: -3.3248329162597656
    8. ' d' → logprob: -4.574832916259766
    9. '```' → logprob: -4.574832916259766
    10. '    ' → logprob: -5.699832916259766

Token 203: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5597525835037231
    2. ' des' → logprob: -1.8097525835037231
    3. ' du' → logprob: -1.9347525835037231
    4. ' d' → logprob: -2.3097524642944336
    5. ' =' → logprob: -2.5597524642944336
    6. 's' → logprob: -2.6847524642944336
    7. '_' → logprob: -2.9347524642944336
    8. ' ' → logprob: -3.4347524642944336
    9. '   ' → logprob: -3.6847524642944336
    10. ',' → logprob: -3.6847524642944336

Token 204: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8153723478317261
    2. ' la' → logprob: -1.315372347831726
    3. ' l' → logprob: -1.315372347831726
    4. 's' → logprob: -5.315372467041016
    5. '_' → logprob: -5.565372467041016
    6. 'l' → logprob: -6.315372467041016
    7. ' _' → logprob: -6.690372467041016
    8. ' ' → logprob: -6.815372467041016
    9. '  ' → logprob: -7.065372467041016
    10. '   ' → logprob: -7.190372467041016

Token 205: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4806140065193176
    2. 'a' → logprob: -1.8556139469146729
    3. 'e' → logprob: -1.9806139469146729
    4. '_' → logprob: -3.105613946914673
    5. ''espace' → logprob: -4.355614185333252
    6. 'u' → logprob: -4.480614185333252
    7. 'es' → logprob: -5.355614185333252
    8. 's' → logprob: -6.105614185333252
    9. ' a' → logprob: -6.605614185333252
    10. ''
' → logprob: -6.980614185333252

Token 206: 'alg' (ID: 15258)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.6391444802284241
    2. 'code' → logprob: -2.8891444206237793
    3. ' problème' → logprob: -2.8891444206237793
    4. ' description' → logprob: -3.2641444206237793
    5. '"""
' → logprob: -3.8891444206237793
    6. ''' → logprob: -4.139144420623779
    7. ' doc' → logprob: -4.139144420623779
    8. ' ' → logprob: -4.139144420623779
    9. '"""' → logprob: -4.139144420623779
    10. '_' → logprob: -4.264144420623779

Token 207: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.006238287780433893
    2. 'o' → logprob: -6.5062384605407715
    3. '```' → logprob: -6.7562384605407715
    4. 'u' → logprob: -7.5062384605407715
    5. 'orithm' → logprob: -7.7562384605407715
    6. 'or' → logprob: -7.7562384605407715
    7. '      ' → logprob: -8.256237983703613
    8. '   ' → logprob: -8.506237983703613
    9. 'ument' → logprob: -8.631237983703613
    10. '       ' → logprob: -8.756237983703613

Token 208: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0345076359808445
    2. 'm' → logprob: -3.4095077514648438
    3. 'e' → logprob: -7.159507751464844
    4. 'ème' → logprob: -11.159507751464844
    5. 'ме' → logprob: -11.659507751464844
    6. '```' → logprob: -11.784507751464844
    7. ' me' → logprob: -12.034507751464844
    8. ' ' → logprob: -12.034507751464844
    9. '_me' → logprob: -12.284507751464844
    10. '}' → logprob: -12.409507751464844

Token 209: ' dépend' (ID: 68660)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3244216442108154
    2. 's' → logprob: -1.6994216442108154
    3. ' sont' → logprob: -2.1994216442108154
    4. '_' → logprob: -2.5744216442108154
    5. ' continu' → logprob: -2.8244216442108154
    6. '   ' → logprob: -2.9494216442108154
    7. ' s' → logprob: -2.9494216442108154
    8. ' =' → logprob: -3.3244216442108154
    9. ',' → logprob: -3.6994216442108154
    10. ' ,' → logprob: -4.3244218826293945

Token 210: ' du' (ID: 1462)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.21464888751506805
    2. '_' → logprob: -3.214648962020874
    3. ' de' → logprob: -3.214648962020874
    4. 'ant' → logprob: -3.839648962020874
    5. '   ' → logprob: -3.964648962020874
    6. ' =' → logprob: -4.714648723602295
    7. ' d' → logprob: -4.714648723602295
    8. 's' → logprob: -4.964648723602295
    9. 'aient' → logprob: -5.089648723602295
    10. ' pas' → logprob: -5.214648723602295

Token 211: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.16698488593101501
    2. ' probl' → logprob: -2.791984796524048
    3. 'pro' → logprob: -4.041985034942627
    4. ' reste' → logprob: -4.041985034942627
    5. ' contexte' → logprob: -4.166985034942627
    6. ' probleme' → logprob: -4.416985034942627
    7. ' code' → logprob: -5.041985034942627
    8. '   ' → logprob: -5.291985034942627
    9. ' ' → logprob: -5.416985034942627
    10. ' problem' → logprob: -6.041985034942627

Token 212: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35453227162361145
    2. ',' → logprob: -2.229532241821289
    3. ']' → logprob: -3.229532241821289
    4. ':' → logprob: -3.604532241821289
    5. ' ' → logprob: -4.104532241821289
    6. ' =' → logprob: -4.354532241821289
    7. 'def' → logprob: -4.479532241821289
    8. '[' → logprob: -4.854532241821289
    9. '_' → logprob: -4.854532241821289
    10. '```' → logprob: -4.979532241821289

Token 213: ''origine' (ID: 89355)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0778262615203857
    2. 'e' → logprob: -1.8278262615203857
    3. ''entrée' → logprob: -2.0778262615203857
    4. ''utilisation' → logprob: -2.4528262615203857
    5. 'é' → logprob: -2.7028262615203857
    6. ''é' → logprob: -2.9528262615203857
    7. ''application' → logprob: -3.4528262615203857
    8. 'u' → logprob: -3.4528262615203857
    9. ''espace' → logprob: -3.5778262615203857
    10. ''utilisateur' → logprob: -4.327826499938965

Token 214: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0482308566570282
    2. ':' → logprob: -4.2982306480407715
    3. 'def' → logprob: -4.7982306480407715
    4. '(n' → logprob: -4.7982306480407715
    5. '
' → logprob: -5.2982306480407715
    6. ',' → logprob: -5.9232306480407715
    7. ':
' → logprob: -6.9232306480407715
    8. '):' → logprob: -6.9232306480407715
    9. '\n' → logprob: -7.1732306480407715
    10. '    
' → logprob: -7.1732306480407715

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12793506681919098
    2. '
' → logprob: -3.2529351711273193
    3. ':' → logprob: -3.8779351711273193
    4. '\n' → logprob: -3.8779351711273193
    5. '):' → logprob: -4.50293493270874
    6. '    
' → logprob: -5.50293493270874
    7. ')' → logprob: -5.50293493270874
    8. ' :' → logprob: -5.75293493270874
    9. '):
' → logprob: -5.87793493270874
    10. 'def' → logprob: -6.12793493270874

Token 216: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13391542434692383
    2. '    
' → logprob: -3.258915424346924
    3. '
' → logprob: -3.383915424346924
    4. '\n' → logprob: -3.633915424346924
    5. 'def' → logprob: -5.133915424346924
    6. 'n' → logprob: -5.633915424346924
    7. ' 
' → logprob: -5.758915424346924
    8. '    ' → logprob: -5.758915424346924
    9. '     
' → logprob: -5.883915424346924
    10. '  
' → logprob: -6.258915424346924

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08310195803642273
    2. '
' → logprob: -2.958101987838745
    3. '    
' → logprob: -4.083101749420166
    4. 'n' → logprob: -5.083101749420166
    5. '\n' → logprob: -5.583101749420166
    6. 'def' → logprob: -7.833101749420166
    7. ' 
' → logprob: -8.958102226257324
    8. '(n' → logprob: -9.083102226257324
    9. ' n' → logprob: -9.333102226257324
    10. 'import' → logprob: -9.708102226257324

Token 218: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0816776379942894
    2. '   ' → logprob: -2.5816776752471924
    3. ' n' → logprob: -6.206677436828613
    4. 'import' → logprob: -7.456677436828613
    5. '
' → logprob: -9.081677436828613
    6. '    
' → logprob: -10.456677436828613
    7. '\n' → logprob: -10.581677436828613
    8. '	n' → logprob: -11.206677436828613
    9. '```' → logprob: -12.581677436828613
    10. ' 
' → logprob: -13.456677436828613

Token 219: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08429328352212906
    2. ' n' → logprob: -3.3342933654785156
    3. '   ' → logprob: -3.9592933654785156
    4. 'import' → logprob: -4.084293365478516
    5. 'def' → logprob: -4.959293365478516
    6. 'from' → logprob: -6.334293365478516
    7. '(n' → logprob: -8.459293365478516
    8. ' import' → logprob: -9.834293365478516
    9. ' def' → logprob: -9.959293365478516
    10. ')' → logprob: -10.459293365478516

Token 220: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5977805852890015
    2. ' n' → logprob: -0.8477805852890015
    3. '   ' → logprob: -3.847780704498291
    4. '	n' → logprob: -8.847780227661133
    5. '    
' → logprob: -9.847780227661133
    6. '(n' → logprob: -10.472780227661133
    7. '    ' → logprob: -10.972780227661133
    8. ' 
' → logprob: -11.847780227661133
    9. ' ' → logprob: -11.972780227661133
    10. '\n' → logprob: -12.597780227661133

Token 221: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0036067210603505373
    2. 'n' → logprob: -5.628606796264648
    3. '   ' → logprob: -12.628606796264648
    4. ' ' → logprob: -13.253606796264648
    5. ' ' → logprob: -13.753606796264648
    6. '	n' → logprob: -15.003606796264648
    7. ' la' → logprob: -16.50360679626465
    8. ' l' → logprob: -17.12860679626465
    9. '    ' → logprob: -17.50360679626465
    10. 'int' → logprob: -18.12860679626465

Token 222: ' longueur' (ID: 104613)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00013202552509028465
    2. ' n' → logprob: -9.000131607055664
    3. 'int' → logprob: -12.500131607055664
    4. 'input' → logprob: -13.625131607055664
    5. '   ' → logprob: -13.875131607055664
    6. ' ' → logprob: -14.250131607055664
    7. 'ent' → logprob: -14.375131607055664
    8. 's' → logprob: -14.750131607055664
    9. 'import' → logprob: -15.125131607055664
    10. 'entrée' → logprob: -15.875131607055664

Token 223: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7963247895240784
    2. '   ' → logprob: -0.9213247895240784
    3. ' n' → logprob: -2.1713247299194336
    4. ' =' → logprob: -3.9213247299194336
    5. ' de' → logprob: -4.421324729919434
    6. 'de' → logprob: -6.546324729919434
    7. '(n' → logprob: -6.671324729919434
    8. '_n' → logprob: -7.421324729919434
    9. '=' → logprob: -8.171324729919434
    10. '	n' → logprob: -8.421324729919434

Token 224: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4704064130783081
    2. ' n' → logprob: -1.595406413078308
    3. 'la' → logprob: -2.5954065322875977
    4. 'n' → logprob: -2.8454065322875977
    5. 'l' → logprob: -3.9704065322875977
    6. ' l' → logprob: -3.9704065322875977
    7. ' ' → logprob: -6.845406532287598
    8. 'a' → logprob: -8.095406532287598
    9. ' sequence' → logprob: -8.095406532287598
    10. ' a' → logprob: -9.095406532287598

Token 225: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.08864857256412506
    2. 'sequence' → logprob: -2.963648557662964
    3. ' sé' → logprob: -4.338648796081543
    4. 's' → logprob: -4.463648796081543
    5. ' sequence' → logprob: -4.963648796081543
    6. 'suite' → logprob: -8.213648796081543
    7. 'seq' → logprob: -8.338648796081543
    8. 'input' → logprob: -8.338648796081543
    9. 'sequ' → logprob: -8.463648796081543
    10. 'liste' → logprob: -8.838648796081543

Token 226: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0007007609237916768
    2. 'q' → logprob: -7.375700950622559
    3. 'qu' → logprob: -10.125700950622559
    4. 'que' → logprob: -11.000700950622559
    5. 'QUENCE' → logprob: -12.625700950622559
    6. '`' → logprob: -12.750700950622559
    7. 'quences' → logprob: -12.750700950622559
    8. '#' → logprob: -13.125700950622559
    9. 'n' → logprob: -13.250700950622559
    10. '=' → logprob: -13.500700950622559

Token 227: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027308255434036255
    2. ' n' → logprob: -4.277308464050293
    3. '   ' → logprob: -4.402308464050293
    4. '
' → logprob: -7.652308464050293
    5. '    
' → logprob: -9.277308464050293
    6. '\n' → logprob: -9.277308464050293
    7. '	n' → logprob: -9.277308464050293
    8. ' 
' → logprob: -10.277308464050293
    9. '(n' → logprob: -11.652308464050293
    10. ' =' → logprob: -13.027308464050293

Token 228: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16978444159030914
    2. 'n' → logprob: -1.919784426689148
    3. '   ' → logprob: -4.6697845458984375
    4. '	n' → logprob: -9.169784545898438
    5. ' 
' → logprob: -11.044784545898438
    6. '    
' → logprob: -11.669784545898438
    7. '```' → logprob: -11.794784545898438
    8. '\n' → logprob: -13.544784545898438
    9. ' ' → logprob: -14.044784545898438
    10. '
' → logprob: -14.419784545898438

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.25193095207214355
    2. ' n' → logprob: -1.5019309520721436
    3. '   ' → logprob: -13.376931190490723
    4. '	n' → logprob: -15.251931190490723
    5. ' 
' → logprob: -17.251930236816406
    6. '\n' → logprob: -18.501930236816406
    7. '```' → logprob: -18.501930236816406
    8. '    
' → logprob: -19.001930236816406
    9. ' ' → logprob: -19.126930236816406
    10. '
' → logprob: -20.251930236816406

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0629020407795906
    2. '=' → logprob: -3.1879019737243652
    3. ',' → logprob: -3.9379019737243652
    4. '=int' → logprob: -9.312902450561523
    5. ' ,' → logprob: -9.687902450561523
    6. '=input' → logprob: -9.937902450561523
    7. '   ' → logprob: -11.687902450561523
    8. ' ' → logprob: -13.187902450561523
    9. ',n' → logprob: -13.312902450561523
    10. ')' → logprob: -13.687902450561523

Token 231: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759397745132446
    2. 'int' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.200940132141113
    4. '[int' → logprob: -17.575939178466797
    5. '	int' → logprob: -17.700939178466797
    6. ' n' → logprob: -17.700939178466797
    7. '=int' → logprob: -17.700939178466797
    8. 'len' → logprob: -18.200939178466797
    9. '   ' → logprob: -18.200939178466797
    10. ' len' → logprob: -18.450939178466797

Token 232: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002549024939071387
    2. '(' → logprob: -8.75025463104248
    3. 'input' → logprob: -9.25025463104248
    4. '()' → logprob: -16.125255584716797
    5. '(
' → logprob: -16.250255584716797
    6. ' input' → logprob: -16.625255584716797
    7. ' (' → logprob: -17.250255584716797
    8. '=input' → logprob: -17.750255584716797
    9. ' ' → logprob: -19.875255584716797
    10. '	input' → logprob: -20.125255584716797

Token 233: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0032137224916368723
    2. '()' → logprob: -5.753213882446289
    3. ')' → logprob: -11.003213882446289
    4. '())
' → logprob: -11.878213882446289
    5. '().' → logprob: -12.378213882446289
    6. '(' → logprob: -12.378213882446289
    7. '()))' → logprob: -13.253213882446289
    8. ' ())' → logprob: -13.378213882446289
    9. '();)' → logprob: -15.628213882446289
    10. '()),' → logprob: -15.753213882446289

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17297682166099548
    2. 'a' → logprob: -1.9229768514633179
    3. ' a' → logprob: -4.672976970672607
    4. '    
' → logprob: -5.922976970672607
    5. '
' → logprob: -8.54797649383545
    6. '	a' → logprob: -9.17297649383545
    7. '    ' → logprob: -9.17297649383545
    8. ')' → logprob: -9.54797649383545
    9. '  ' → logprob: -10.04797649383545
    10. ',a' → logprob: -10.67297649383545

Token 235: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05787850171327591
    2. '   ' → logprob: -3.3078784942626953
    3. ' a' → logprob: -3.9328784942626953
    4. '    
' → logprob: -10.557878494262695
    5. '	a' → logprob: -11.682878494262695
    6. '```' → logprob: -12.432878494262695
    7. ' 
' → logprob: -12.932878494262695
    8. '
' → logprob: -13.057878494262695
    9. '_a' → logprob: -13.307878494262695
    10. '    ' → logprob: -13.307878494262695

Token 236: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005544631858356297
    2. ' a' → logprob: -7.50055456161499
    3. '#' → logprob: -13.875554084777832
    4. '   ' → logprob: -15.000554084777832
    5. '	a' → logprob: -16.50055503845215
    6. '```' → logprob: -17.12555503845215
    7. '#a' → logprob: -17.25055503845215
    8. '
' → logprob: -18.50055503845215
    9. '_a' → logprob: -18.75055503845215
    10. ' 
' → logprob: -19.06305503845215

Token 237: ' puis' (ID: 18766)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035147799644619226
    2. ' de' → logprob: -6.128514766693115
    3. 'a' → logprob: -7.128514766693115
    4. '_a' → logprob: -9.253515243530273
    5. '   ' → logprob: -9.503515243530273
    6. '(' → logprob: -9.878515243530273
    7. ' des' → logprob: -9.878515243530273
    8. '()
' → logprob: -10.003515243530273
    9. '_' → logprob: -10.003515243530273
    10. 'de' → logprob: -10.128515243530273

Token 238: ' conversion' (ID: 22165)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10077148675918579
    2. 'a' → logprob: -2.725771427154541
    3. ' la' → logprob: -3.850771427154541
    4. ' list' → logprob: -5.100771427154541
    5. ' l' → logprob: -6.350771427154541
    6. 'list' → logprob: -7.100771427154541
    7. 's' → logprob: -9.1007719039917
    8. ' ' → logprob: -9.4757719039917
    9. 'l' → logprob: -9.4757719039917
    10. ' ' → logprob: -10.4757719039917

Token 239: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8137058019638062
    2. ' a' → logprob: -1.4387058019638062
    3. ' de' → logprob: -1.4387058019638062
    4. '   ' → logprob: -3.4387059211730957
    5. 'de' → logprob: -3.9387059211730957
    6. '()' → logprob: -4.188705921173096
    7. ' des' → logprob: -4.688705921173096
    8. 'des' → logprob: -5.938705921173096
    9. ' ' → logprob: -6.938705921173096
    10. '    ' → logprob: -7.188705921173096

Token 240: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.44222381711006165
    2. ' list' → logprob: -1.1922237873077393
    3. 'a' → logprob: -3.5672237873077393
    4. ' la' → logprob: -3.9422237873077393
    5. ' a' → logprob: -5.817224025726318
    6. 'la' → logprob: -6.442224025726318
    7. 'input' → logprob: -7.817224025726318
    8. 'l' → logprob: -7.942224025726318
    9. 'liste' → logprob: -8.06722354888916
    10. ' liste' → logprob: -8.56722354888916

Token 241: ' sé' (ID: 7462)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2137080430984497
    2. 'liste' → logprob: -1.4637080430984497
    3. ' liste' → logprob: -1.4637080430984497
    4. 'a' → logprob: -2.21370792388916
    5. ' list' → logprob: -2.33870792388916
    6. ' a' → logprob: -3.83870792388916
    7. ' input' → logprob: -5.21370792388916
    8. 'input' → logprob: -5.33870792388916
    9. ' sequence' → logprob: -6.58870792388916
    10. 'l' → logprob: -8.33870792388916

Token 242: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -4.990154047845863e-05
    2. 'q' → logprob: -11.125049591064453
    3. 'rie' → logprob: -11.250049591064453
    4. 'QUENCE' → logprob: -11.875049591064453
    5. 'qu' → logprob: -12.125049591064453
    6. 'quences' → logprob: -12.750049591064453
    7. 'que' → logprob: -13.125049591064453
    8. '   ' → logprob: -13.250049591064453
    9. 'ance' → logprob: -13.625049591064453
    10. '#' → logprob: -14.875049591064453

Token 243: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0853924751281738
    2. '   ' → logprob: -1.0853924751281738
    3. ' a' → logprob: -1.7103924751281738
    4. ' =' → logprob: -1.9603924751281738
    5. '=' → logprob: -6.335392475128174
    6. '	a' → logprob: -8.085391998291016
    7. '_a' → logprob: -8.210391998291016
    8. '=a' → logprob: -9.335391998291016
    9. ' de' → logprob: -9.585391998291016
    10. '()' → logprob: -9.585391998291016

Token 244: ''entrée' (ID: 115820)
  Prédit: ''ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.28914591670036316
    2. 'ent' → logprob: -2.6641459465026855
    3. 'e' → logprob: -2.7891459465026855
    4. 'a' → logprob: -3.0391459465026855
    5. ' ent' → logprob: -3.2891459465026855
    6. ''entrée' → logprob: -4.2891459465026855
    7. 'es' → logprob: -5.5391459465026855
    8. 'inte' → logprob: -5.5391459465026855
    9. 'input' → logprob: -5.7891459465026855
    10. ''une' → logprob: -6.7891459465026855

Token 245: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9456487894058228
    2. ' =' → logprob: -1.0706487894058228
    3. 'a' → logprob: -1.5706487894058228
    4. ' a' → logprob: -2.945648670196533
    5. '=' → logprob: -4.945648670196533
    6. '=a' → logprob: -8.195649147033691
    7. '_a' → logprob: -8.320649147033691
    8. '	a' → logprob: -8.445649147033691
    9. ',' → logprob: -8.695649147033691
    10. '()' → logprob: -9.570649147033691

Token 246: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.0467922687530518
    2. 'list' → logprob: -1.1717922687530518
    3. ' liste' → logprob: -1.5467922687530518
    4. 'liste' → logprob: -2.1717922687530518
    5. ' a' → logprob: -5.421792030334473
    6. 'a' → logprob: -5.546792030334473
    7. ' une' → logprob: -6.421792030334473
    8. ' listes' → logprob: -7.796792030334473
    9. ' lista' → logprob: -8.046792030334473
    10. ' la' → logprob: -8.046792030334473

Token 247: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5524801015853882
    2. 'a' → logprob: -1.3024801015853882
    3. '()' → logprob: -2.4274802207946777
    4. ' a' → logprob: -3.0524802207946777
    5. '_a' → logprob: -5.427480220794678
    6. ' =' → logprob: -5.552480220794678
    7. '(a' → logprob: -5.677480220794678
    8. '(' → logprob: -5.802480220794678
    9. '	a' → logprob: -7.927480220794678
    10. ',' → logprob: -7.927480220794678

Token 248: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.21135170757770538
    2. 'int' → logprob: -2.3363516330718994
    3. 'ints' → logprob: -2.7113516330718994
    4. 'inte' → logprob: -3.7113516330718994
    5. ''ent' → logprob: -6.4613518714904785
    6. ' ent' → logprob: -7.7113518714904785
    7. 'a' → logprob: -8.33635139465332
    8. '[int' → logprob: -8.58635139465332
    9. '_ent' → logprob: -9.08635139465332
    10. '=int' → logprob: -9.46135139465332

Token 249: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.360996485454962e-05
    2. 'i' → logprob: -10.7500638961792
    3. 't' → logprob: -11.1250638961792
    4. 'ières' → logprob: -11.5000638961792
    5. 'ers' → logprob: -11.7500638961792
    6. 'ti' → logprob: -12.7500638961792
    7. 'ier' → logprob: -13.2500638961792
    8. 'tiers' → logprob: -13.8750638961792
    9. 'eurs' → logprob: -14.7500638961792
    10. '```' → logprob: -15.1250638961792

Token 250: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07273464649915695
    2. 'a' → logprob: -2.6977345943450928
    3. ' a' → logprob: -6.447734832763672
    4. '
' → logprob: -7.447734832763672
    5. ' =' → logprob: -7.822734832763672
    6. '    
' → logprob: -8.947734832763672
    7. '	a' → logprob: -10.197734832763672
    8. ',' → logprob: -11.197734832763672
    9. ',a' → logprob: -11.697734832763672
    10. '=' → logprob: -11.947734832763672

Token 251: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.15202449262142181
    2. 'a' → logprob: -2.652024507522583
    3. '   ' → logprob: -2.652024507522583
    4. '	a' → logprob: -11.277024269104004
    5. ' ' → logprob: -13.777024269104004
    6. '    ' → logprob: -13.902024269104004
    7. '    
' → logprob: -15.027024269104004
    8. '   ' → logprob: -15.152024269104004
    9. ' ' → logprob: -15.277024269104004
    10. '  ' → logprob: -15.402024269104004

Token 252: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.008623555302619934
    2. ' a' → logprob: -4.7586236000061035
    3. '   ' → logprob: -11.633623123168945
    4. '	a' → logprob: -15.758623123168945
    5. ' ' → logprob: -16.883623123168945
    6. 'arr' → logprob: -18.383623123168945
    7. '_a' → logprob: -19.008623123168945
    8. '  ' → logprob: -19.758623123168945
    9. '    ' → logprob: -20.258623123168945
    10. 's' → logprob: -20.383623123168945

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408327460289
    2. '=' → logprob: -0.9740833044052124
    3. '=list' → logprob: -13.724082946777344
    4. '_' → logprob: -13.849082946777344
    5. '.' → logprob: -13.974082946777344
    6. 's' → logprob: -14.599082946777344
    7. '[' → logprob: -14.849082946777344
    8. ' ' → logprob: -14.974082946777344
    9. '[:]' → logprob: -15.099082946777344
    10. 'a' → logprob: -15.099082946777344

Token 254: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2014138251543045
    2. ' list' → logprob: -1.701413869857788
    3. '[list' → logprob: -14.701414108276367
    4. '[' → logprob: -16.201414108276367
    5. '	list' → logprob: -18.076414108276367
    6. '=list' → logprob: -18.326414108276367
    7. ' [' → logprob: -18.951414108276367
    8. ' ' → logprob: -19.076414108276367
    9. 'List' → logprob: -19.201414108276367
    10. '(list' → logprob: -19.701414108276367

Token 255: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001935661886818707
    2. '(' → logprob: -6.2519354820251465
    3. '(input' → logprob: -12.251935958862305
    4. '(int' → logprob: -13.376935958862305
    5. 'map' → logprob: -15.251935958862305
    6. '()' → logprob: -16.001935958862305
    7. '(range' → logprob: -16.376935958862305
    8. '(
' → logprob: -16.626935958862305
    9. '(eval' → logprob: -17.126935958862305
    10. ' (' → logprob: -17.376935958862305

Token 256: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0023398506455123425
    2. 'int' → logprob: -6.377339839935303
    3. '(' → logprob: -7.377339839935303
    4. '(
' → logprob: -13.002340316772461
    5. ' int' → logprob: -13.127340316772461
    6. '<int' → logprob: -13.127340316772461
    7. '[int' → logprob: -13.627340316772461
    8. '(input' → logprob: -13.877340316772461
    9. '(str' → logprob: -13.877340316772461
    10. '=int' → logprob: -14.127340316772461

Token 257: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5888746380805969
    2. ',' → logprob: -0.8388746380805969
    3. '(input' → logprob: -4.838874816894531
    4. 'input' → logprob: -5.338874816894531
    5. ' ,' → logprob: -9.338874816894531
    6. '(' → logprob: -11.088874816894531
    7. '   ' → logprob: -11.213874816894531
    8. ',int' → logprob: -11.713874816894531
    9. ' input' → logprob: -12.338874816894531
    10. '<input' → logprob: -13.838874816894531

Token 258: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. ',input' → logprob: -17.37520408630371
    4. '   ' → logprob: -18.25020408630371
    5. '(input' → logprob: -18.37520408630371
    6. '<input' → logprob: -18.87520408630371
    7. '=input' → logprob: -18.87520408630371
    8. '	input' → logprob: -20.25020408630371
    9. 'str' → logprob: -20.25020408630371
    10. 'stdin' → logprob: -20.50020408630371

Token 259: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.143808109802194e-05
    2. '()' → logprob: -10.250041007995605
    3. '   ' → logprob: -13.625041007995605
    4. '.split' → logprob: -13.750041007995605
    5. ' .' → logprob: -14.000041007995605
    6. '.strip' → logprob: -14.000041007995605
    7. '(' → logprob: -14.500041007995605
    8. '()
' → logprob: -14.750041007995605
    9. ' ().' → logprob: -14.875041007995605
    10. 'split' → logprob: -15.375041007995605

Token 260: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000553151941858232
    2. 'strip' → logprob: -7.500553131103516
    3. 'rstrip' → logprob: -16.750553131103516
    4. ' split' → logprob: -17.750553131103516
    5. 'spl' → logprob: -18.750553131103516
    6. '(split' → logprob: -19.250553131103516
    7. ' strip' → logprob: -22.875553131103516
    8. '.split' → logprob: -22.875553131103516
    9. '_split' → logprob: -23.875553131103516
    10. 'read' → logprob: -24.750553131103516

Token 261: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.031163770705461502
    2. '()' → logprob: -3.5311636924743652
    3. '))' → logprob: -7.281163692474365
    4. '())))' → logprob: -7.906163692474365
    5. '())' → logprob: -8.531164169311523
    6. '(' → logprob: -9.031164169311523
    7. '()))
' → logprob: -10.906164169311523
    8. '(),' → logprob: -11.656164169311523
    9. ')))' → logprob: -12.281164169311523
    10. '()));' → logprob: -12.781164169311523

Token 262: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021576672792434692
    2. '    
' → logprob: -4.521576881408691
    3. '
' → logprob: -4.896576881408691
    4. 'dp' → logprob: -7.146576881408691
    5. ' 
' → logprob: -7.146576881408691
    6. '    ' → logprob: -7.521576881408691
    7. '   
' → logprob: -8.646576881408691
    8. '```' → logprob: -8.646576881408691
    9. '     
' → logprob: -8.896576881408691
    10. '  
' → logprob: -9.271576881408691

Token 263: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3563501536846161
    2. 'INF' → logprob: -1.6063501834869385
    3. 'import' → logprob: -3.1063501834869385
    4. '   ' → logprob: -3.3563501834869385
    5. 'inf' → logprob: -4.731349945068359
    6. '#' → logprob: -4.981349945068359
    7. 'from' → logprob: -5.856349945068359
    8. 'max' → logprob: -7.731349945068359
    9. 'MAX' → logprob: -7.981349945068359
    10. 'MOD' → logprob: -9.98134994506836

Token 264: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29346445202827454
    2. 'INF' → logprob: -2.043464422225952
    3. 'import' → logprob: -2.543464422225952
    4. 'from' → logprob: -3.543464422225952
    5. '#' (adapté à ' #') → logprob: -4.793464660644531
    6. 'inf' → logprob: -4.918464660644531
    7. 'max' → logprob: -7.543464660644531
    8. 'MAX' → logprob: -7.793464660644531
    9. 'MOD' → logprob: -7.918464660644531
    10. 'mod' → logprob: -8.293464660644531

Token 265: ' Initial' (ID: 9209)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22125343978405
    2. 'INF' → logprob: -2.5962533950805664
    3. 'from' → logprob: -2.8462533950805664
    4. 'dp' → logprob: -3.2212533950805664
    5. 'inf' → logprob: -4.096253395080566
    6. '#' → logprob: -5.096253395080566
    7. 'max' → logprob: -6.221253395080566
    8. 'MAX' → logprob: -7.971253395080566
    9. 'MOD' → logprob: -8.096253395080566
    10. 'mod' → logprob: -8.221253395080566

Token 266: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.00993126817047596
    2. 'ization' → logprob: -5.1349310874938965
    3. 'iser' → logprob: -5.6349310874938965
    4. '#' → logprob: -8.384931564331055
    5. 'max' → logprob: -10.134931564331055
    6. 'is' → logprob: -10.509931564331055
    7. 'izer' → logprob: -10.509931564331055
    8. 'ise' → logprob: -10.634931564331055
    9. 'ize' → logprob: -10.634931564331055
    10. 'isez' → logprob: -11.009931564331055

Token 267: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32467493414878845
    2. ' dp' → logprob: -1.8246749639511108
    3. 'dp' → logprob: -2.1996748447418213
    4. 'INF' → logprob: -6.1996750831604
    5. '	dp' → logprob: -6.9496750831604
    6. '(dp' → logprob: -7.0746750831604
    7. 'import' → logprob: -7.1996750831604
    8. ' INF' → logprob: -8.949674606323242
    9. '    ' → logprob: -9.699674606323242
    10. '    
' → logprob: -9.949674606323242

Token 268: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10756483674049377
    2. ' dp' → logprob: -2.357564926147461
    3. 'import' → logprob: -5.607564926147461
    4. 'INF' → logprob: -5.857564926147461
    5. ' ' → logprob: -8.482564926147461
    6. ' INF' → logprob: -8.982564926147461
    7. 'inf' → logprob: -9.107564926147461
    8. ' import' → logprob: -9.857564926147461
    9. 'n' → logprob: -9.982564926147461
    10. '3' → logprob: -10.107564926147461

Token 269: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028742242604494095
    2. 'import' → logprob: -3.6537423133850098
    3. 'from' → logprob: -6.27874231338501
    4. 'INF' → logprob: -7.65374231338501
    5. 'inf' → logprob: -9.903741836547852
    6. 'max' → logprob: -10.903741836547852
    7. 'MAX' → logprob: -11.528741836547852
    8. '#' → logprob: -12.653741836547852
    9. '
' → logprob: -13.028741836547852
    10. ' dp' → logprob: -13.278741836547852

Token 270: ' de' (ID: 334)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.08200079947710037
    2. 'dp' → logprob: -2.582000732421875
    3. '   ' → logprob: -5.957000732421875
    4. '_dp' → logprob: -8.082000732421875
    5. '(dp' → logprob: -9.582000732421875
    6. '	dp' → logprob: -9.832000732421875
    7. ' =' → logprob: -9.957000732421875
    8. ' de' → logprob: -11.207000732421875
    9. 'import' → logprob: -11.332000732421875
    10. ' ' → logprob: -12.957000732421875

Token 271: ' programmation' (ID: 166376)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0017828793497756124
    2. ' dp' → logprob: -6.3767828941345215
    3. 'd' → logprob: -9.876782417297363
    4. '```' → logprob: -12.001782417297363
    5. ' programmation' → logprob: -12.126782417297363
    6. ' ' → logprob: -12.751782417297363
    7. '
' → logprob: -13.126782417297363
    8. 'programm' → logprob: -13.501782417297363
    9. 'val' → logprob: -13.501782417297363
    10. 'dynamic' → logprob: -13.751782417297363

Token 272: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1889617145061493
    2. '   ' → logprob: -1.9389617443084717
    3. ' dp' → logprob: -3.6889617443084717
    4. ' dynamique' → logprob: -6.188961505889893
    5. '_dp' → logprob: -7.813961505889893
    6. ' ' → logprob: -8.56396198272705
    7. '    ' → logprob: -8.68896198272705
    8. 'dynamic' → logprob: -9.06396198272705
    9. ' dynamic' → logprob: -9.06396198272705
    10. 'd' → logprob: -9.43896198272705

Token 273: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15711168944835663
    2. ' dp' → logprob: -2.407111644744873
    3. 'dp' → logprob: -2.907111644744873
    4. 'import' → logprob: -7.657111644744873
    5. '	dp' → logprob: -9.532112121582031
    6. ' =' → logprob: -10.282112121582031
    7. '    
' → logprob: -10.407112121582031
    8. ':' → logprob: -11.032112121582031
    9. '(dp' → logprob: -11.157112121582031
    10. ' import' → logprob: -11.907112121582031

Token 274: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6948966383934021
    2. '   ' → logprob: -0.9448966383934021
    3. ' dp' → logprob: -2.194896697998047
    4. 'import' → logprob: -7.819896697998047
    5. '	dp' → logprob: -8.069896697998047
    6. 'INF' → logprob: -11.444896697998047
    7. '    
' → logprob: -11.694896697998047
    8. 'inf' → logprob: -11.819896697998047
    9. ' import' → logprob: -11.944896697998047
    10. ' ' → logprob: -12.069896697998047

Token 275: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008115214295685291
    2. '   ' → logprob: -5.008115291595459
    3. ' dp' → logprob: -7.133115291595459
    4. 'import' → logprob: -8.1331148147583
    5. 'INF' → logprob: -8.1331148147583
    6. 'from' → logprob: -12.2581148147583
    7. 'inf' → logprob: -12.2581148147583
    8. '
' → logprob: -13.8831148147583
    9. '	dp' → logprob: -14.3831148147583
    10. '    
' → logprob: -14.3831148147583

Token 276: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07253853976726532
    2. 'INF' → logprob: -3.3225386142730713
    3. 'import' → logprob: -3.4475386142730713
    4. '   ' → logprob: -6.947538375854492
    5. 'inf' → logprob: -7.197538375854492
    6. 'from' → logprob: -8.072538375854492
    7. ' dp' → logprob: -10.322538375854492
    8. 'max' → logprob: -11.697538375854492
    9. 'MAX' → logprob: -11.822538375854492
    10. ' import' → logprob: -12.322538375854492

Token 277: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003635111730545759
    2. '=' → logprob: -5.628634929656982
    3. '   ' → logprob: -11.37863540649414
    4. '=[' → logprob: -11.62863540649414
    5. ' ' → logprob: -12.75363540649414
    6. ' =[' → logprob: -12.75363540649414
    7. '[' → logprob: -13.00363540649414
    8. '[i' → logprob: -13.00363540649414
    9. ' =
' → logprob: -13.62863540649414
    10. '```' → logprob: -14.37863540649414

Token 278: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14732903242111206
    2. ']' → logprob: -2.022329092025757
    3. ']=' → logprob: -5.647328853607178
    4. ' ][' → logprob: -7.772328853607178
    5. '=' → logprob: -8.272329330444336
    6. ' =' → logprob: -9.022329330444336
    7. '=[' → logprob: -9.272329330444336
    8. '   ' → logprob: -9.772329330444336
    9. '][]' → logprob: -10.647329330444336
    10. '[i' → logprob: -10.897329330444336

Token 279: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003287751693278551
    2. '3' → logprob: -6.2532877922058105
    3. '][' → logprob: -7.5032877922058105
    4. ']' → logprob: -7.7532877922058105
    5. '4' → logprob: -8.253287315368652
    6. 'i' → logprob: -9.503287315368652
    7. '0' → logprob: -11.753287315368652
    8. ' j' → logprob: -12.128287315368652
    9. '5' → logprob: -12.253287315368652
    10. '
' → logprob: -12.378287315368652

Token 280: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007658927235752344
    2. ']' → logprob: -4.882658958435059
    3. ' ][' → logprob: -10.632658958435059
    4. '][]' → logprob: -11.007658958435059
    5. '][-' → logprob: -12.882658958435059
    6. '][:' → logprob: -13.382658958435059
    7. ']=' → logprob: -13.757658958435059
    8. '[' → logprob: -13.757658958435059
    9. '=' → logprob: -13.882658958435059
    10. ']][' → logprob: -13.882658958435059

Token 281: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3782830137643032e-05
    2. '2' → logprob: -12.25001335144043
    3. '0' → logprob: -12.62501335144043
    4. ']' → logprob: -13.62501335144043
    5. 'l' → logprob: -13.62501335144043
    6. '
' → logprob: -13.75001335144043
    7. ' k' → logprob: -13.87501335144043
    8. '3' → logprob: -15.50001335144043
    9. '][' → logprob: -15.87501335144043
    10. '1' → logprob: -16.12501335144043

Token 282: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022815766278654337
    2. ' ]' → logprob: -6.877281665802002
    3. ']=' → logprob: -7.127281665802002
    4. ' =' → logprob: -8.127281188964844
    5. '=' → logprob: -9.002281188964844
    6. '][' → logprob: -11.127281188964844
    7. '   ' → logprob: -13.127281188964844
    8. ']={' → logprob: -13.252281188964844
    9. ')' → logprob: -13.627281188964844
    10. '[' → logprob: -14.127281188964844

Token 283: ' mém' (ID: 136981)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894404023885727
    2. '=' → logprob: -2.4639439582824707
    3. '=[' → logprob: -13.588944435119629
    4. ' ' → logprob: -14.588944435119629
    5. '   ' → logprob: -14.838944435119629
    6. '=
' → logprob: -14.838944435119629
    7. ' =[' → logprob: -14.838944435119629
    8. '=float' → logprob: -15.213944435119629
    9. ' =
' → logprob: -15.463944435119629
    10. ']' → logprob: -15.463944435119629

Token 284: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.39552775025367737
    2. 'oris' → logprob: -1.145527720451355
    3. '=' → logprob: -6.0205278396606445
    4. '[' → logprob: -6.5205278396606445
    5. 'oire' → logprob: -6.5205278396606445
    6. 'oriz' → logprob: -7.0205278396606445
    7. '   ' → logprob: -7.8955278396606445
    8. 'o' → logprob: -8.020527839660645
    9. 'orit' → logprob: -8.020527839660645
    10. ' =' → logprob: -8.145527839660645

Token 285: 'ise' (ID: 1096)
  Prédit: 'isent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isent' → logprob: -0.14386285841464996
    2. 'ise' → logprob: -2.0188629627227783
    3. 'ent' → logprob: -7.018862724304199
    4. 'rent' → logprob: -9.2688627243042
    5. 'sent' → logprob: -9.5188627243042
    6. 'iser' → logprob: -10.7688627243042
    7. 'is' → logprob: -10.7688627243042
    8. 'ris' → logprob: -10.8938627243042
    9. 'rise' → logprob: -11.1438627243042
    10. 'isé' → logprob: -11.8938627243042

Token 286: ' la' (ID: 557)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5395758748054504
    2. 'float' → logprob: -1.6645758152008057
    3. ' =' → logprob: -2.6645758152008057
    4. '-' → logprob: -2.6645758152008057
    5. ' -' → logprob: -4.039576053619385
    6. ' ' → logprob: -4.289576053619385
    7. '=float' → logprob: -4.414576053619385
    8. '[' → logprob: -4.664576053619385
    9. '   ' → logprob: -5.039576053619385
    10. '=' → logprob: -5.289576053619385

Token 287: ' meilleure' (ID: 52387)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1109793186187744
    2. ' maximum' → logprob: -1.6109793186187744
    3. ' max' → logprob: -1.8609793186187744
    4. '-' → logprob: -2.7359793186187744
    5. 'maximum' → logprob: -2.8609793186187744
    6. ' meilleure' → logprob: -2.9859793186187744
    7. ' meilleur' → logprob: -3.3609793186187744
    8. 'float' → logprob: -3.4859793186187744
    9. ' float' → logprob: -3.6109793186187744
    10. ' somme' → logprob: -4.110979080200195

Token 288: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.03589281439781189
    2. ' valeur' → logprob: -3.7858927249908447
    3. '_' → logprob: -5.535892963409424
    4. ' _' → logprob: -6.285892963409424
    5. 'val' → logprob: -6.410892963409424
    6. '_s' → logprob: -6.660892963409424
    7. 's' → logprob: -7.035892963409424
    8. ' sum' → logprob: -7.285892963409424
    9. 'sum' → logprob: -7.410892963409424
    10. '_val' → logprob: -7.660892963409424

Token 289: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019144387915730476
    2. '   ' → logprob: -4.769144535064697
    3. '=' → logprob: -5.644144535064697
    4. '[' → logprob: -6.769144535064697
    5. '    ' → logprob: -6.769144535064697
    6. '[i' → logprob: -7.144144535064697
    7. ')' → logprob: -7.519144535064697
    8. '_possible' → logprob: -7.894144535064697
    9. '<|end|>' → logprob: -8.019144058227539
    10. ',' → logprob: -8.144144058227539

Token 290: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03354876488447189
    2. '   ' → logprob: -3.9085488319396973
    3. ' for' → logprob: -5.283548831939697
    4. '=' → logprob: -5.783548831939697
    5. ' pour' → logprob: -6.158548831939697
    6. 'for' → logprob: -7.408548831939697
    7. '[' → logprob: -7.533548831939697
    8. ',' → logprob: -7.783548831939697
    9. '    ' → logprob: -8.158548355102539
    10. ' avec' → logprob: -9.283548355102539

Token 291: ' :
' (ID: 10039)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07895247638225555
    2. 'i' → logprob: -2.5789525508880615
    3. ' la' → logprob: -11.20395278930664
    4. '   ' → logprob: -11.20395278930664
    5. ' l' → logprob: -11.95395278930664
    6. ' ' → logprob: -12.07895278930664
    7. ' le' → logprob: -12.20395278930664
    8. 'l' → logprob: -12.57895278930664
    9. '	i' → logprob: -12.82895278930664
    10. 'le' → logprob: -13.45395278930664

Token 292: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3413626551628113
    2. 'i' → logprob: -2.341362714767456
    3. '   ' → logprob: -2.591362714767456
    4. '[i' → logprob: -3.216362714767456
    5. '    ' → logprob: -3.841362714767456
    6. ' n' → logprob: -4.091362476348877
    7. ' [' → logprob: -4.591362476348877
    8. ' for' → logprob: -4.591362476348877
    9. ' (' → logprob: -5.091362476348877
    10. 'n' → logprob: -5.216362476348877

Token 293: ' #' (ID: 1069)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6004964709281921
    2. 'i' → logprob: -0.8504964709281921
    3. '   ' → logprob: -5.100496292114258
    4. ' n' → logprob: -5.225496292114258
    5. '    ' → logprob: -5.225496292114258
    6. 'n' → logprob: -5.850496292114258
    7. '[i' → logprob: -6.100496292114258
    8. ' for' → logprob: -7.350496292114258
    9. ' (' → logprob: -7.725496292114258
    10. ' [' → logprob: -8.225496292114258

Token 294: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22723130881786346
    2. 'i' → logprob: -1.6022312641143799
    3. '    ' → logprob: -7.602231502532959
    4. '   ' → logprob: -7.852231502532959
    5. ' range' → logprob: -7.852231502532959
    6. ' (' → logprob: -8.4772310256958
    7. 'range' → logprob: -9.3522310256958
    8. ' ' → logprob: -9.3522310256958
    9. ' for' → logprob: -9.8522310256958
    10. '[i' → logprob: -10.4772310256958

Token 295: ' (' (ID: 350)
  Prédit: ' ]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ][' → logprob: -0.6287871599197388
    2. '][' → logprob: -0.8787871599197388
    3. ' ' → logprob: -4.003787040710449
    4. ']' → logprob: -4.253787040710449
    5. '+' → logprob: -5.128787040710449
    6. ' ]' → logprob: -5.253787040710449
    7. ' =' → logprob: -6.253787040710449
    8. ' ,' → logprob: -6.378787040710449
    9. ' +' → logprob: -6.378787040710449
    10. ',' → logprob: -7.628787040710449

Token 296: 'élé' (ID: 15228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6623502969741821
    2. ' i' → logprob: -1.0373502969741821
    3. 'n' → logprob: -2.6623501777648926
    4. ' n' → logprob: -3.0373501777648926
    5. ']' → logprob: -5.412350177764893
    6. ')' → logprob: -6.287350177764893
    7. '   ' → logprob: -6.412350177764893
    8. ' ]' → logprob: -6.912350177764893
    9. '][' → logprob: -7.412350177764893
    10. ' ' → logprob: -7.662350177764893

Token 297: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.02082003466784954
    2. 'ment' → logprob: -3.895820140838623
    3. 'm' → logprob: -8.895819664001465
    4. '   ' → logprob: -10.520819664001465
    5. 'mente' → logprob: -10.895819664001465
    6. 'men' → logprob: -11.145819664001465
    7. ']' → logprob: -11.270819664001465
    8. '=' → logprob: -11.520819664001465
    9. 'me' → logprob: -11.520819664001465
    10. ')' → logprob: -12.145819664001465

Token 298: ' considér' (ID: 68502)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1599606275558472
    2. ')' → logprob: -1.2849606275558472
    3. '+' → logprob: -1.5349606275558472
    4. ' +' → logprob: -2.9099607467651367
    5. ' ]' → logprob: -3.5349607467651367
    6. '   ' → logprob: -3.9099607467651367
    7. ' )' → logprob: -3.9099607467651367
    8. '],' → logprob: -4.159960746765137
    9. '])' → logprob: -4.284960746765137
    10. '][' → logprob: -4.659960746765137

Token 299: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0037216958589851856
    2. 'es' → logprob: -5.878721714019775
    3. 's' → logprob: -8.003721237182617
    4. 'é' → logprob: -8.128721237182617
    5. '   ' → logprob: -9.878721237182617
    6. '```' → logprob: -10.003721237182617
    7. 'nés' → logprob: -10.378721237182617
    8. 'ant' → logprob: -10.503721237182617
    9. 'ées' → logprob: -10.753721237182617
    10. '
' → logprob: -11.378721237182617

Token 300: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3756250739097595
    2. '),' → logprob: -2.3756251335144043
    3. ',' → logprob: -3.0006251335144043
    4. '][' → logprob: -3.1256251335144043
    5. '],' → logprob: -3.5006251335144043
    6. '])' → logprob: -3.5006251335144043
    7. '   ' → logprob: -3.5006251335144043
    8. ']' → logprob: -4.625625133514404
    9. ')][' → logprob: -4.750625133514404
    10. ' )' → logprob: -5.250625133514404

Token 301: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4745028614997864
    2. ' j' → logprob: -0.9745028614997864
    3. '   ' → logprob: -8.599502563476562
    4. '    ' → logprob: -9.224502563476562
    5. ' ' → logprob: -9.474502563476562
    6. '	j' → logprob: -10.474502563476562
    7. '  ' → logprob: -11.474502563476562
    8. ')' → logprob: -12.224502563476562
    9. '       ' → logprob: -12.974502563476562
    10. ' ' → logprob: -12.974502563476562

Token 302: ' (' (ID: 350)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3143768608570099
    2. ']' → logprob: -1.8143768310546875
    3. ' ][' → logprob: -2.6893768310546875
    4. '+' → logprob: -4.0643768310546875
    5. ')' → logprob: -5.4393768310546875
    6. ' (' → logprob: -5.6893768310546875
    7. ' ]' → logprob: -6.3143768310546875
    8. ' +' → logprob: -6.4393768310546875
    9. ' =' → logprob: -6.4393768310546875
    10. '   ' → logprob: -6.4393768310546875

Token 303: 'nombre' (ID: 28576)
  Prédit: ' groupes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -0.30572742223739624
    2. 'group' → logprob: -1.680727481842041
    3. ' group' → logprob: -2.805727481842041
    4. 'groups' → logprob: -4.555727481842041
    5. ' groups' → logprob: -5.930727481842041
    6. '3' → logprob: -6.555727481842041
    7. ' groupe' → logprob: -7.305727481842041
    8. 'g' → logprob: -7.680727481842041
    9. ' segments' → logprob: -8.555727005004883
    10. '   ' → logprob: -9.055727005004883

Token 304: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.087575912475586
    2. ' de' → logprob: -1.212575912475586
    3. '_des' → logprob: -1.837575912475586
    4. 'de' → logprob: -2.587575912475586
    5. '   ' → logprob: -3.462575912475586
    6. '_groups' → logprob: -3.712575912475586
    7. 'des' → logprob: -3.962575912475586
    8. ' des' → logprob: -4.087575912475586
    9. '_' → logprob: -4.587575912475586
    10. ']' → logprob: -5.087575912475586

Token 305: ' groupes' (ID: 72206)
  Prédit: ' groupes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -0.3241320550441742
    2. 'group' → logprob: -1.5741320848464966
    3. ' group' → logprob: -3.074131965637207
    4. 'groups' → logprob: -4.699131965637207
    5. '"group' → logprob: -4.824131965637207
    6. ' groups' → logprob: -6.699131965637207
    7. 'g' → logprob: -6.699131965637207
    8. ' "' → logprob: -6.949131965637207
    9. ' segments' → logprob: -7.449131965637207
    10. '"' → logprob: -7.574131965637207

Token 306: ' -' (ID: 533)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7366771697998047
    2. 'util' → logprob: -2.1116771697998047
    3. ' utilisés' → logprob: -2.1116771697998047
    4. ' sélection' → logprob: -2.2366771697998047
    5. ')' → logprob: -2.7366771697998047
    6. '],' → logprob: -3.3616771697998047
    7. '   ' → logprob: -3.8616771697998047
    8. ',' → logprob: -4.236677169799805
    9. ' ),' → logprob: -5.611677169799805
    10. 'cho' → logprob: -5.861677169799805

Token 307: ' peut' (ID: 9216)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15171828866004944
    2. ' ' → logprob: -2.1517183780670166
    3. '3' → logprob: -4.4017181396484375
    4. '+' → logprob: -5.7767181396484375
    5. '   ' → logprob: -6.9017181396484375
    6. ')' → logprob: -7.1517181396484375
    7. 'plus' → logprob: -7.2767181396484375
    8. ' plus' → logprob: -7.5267181396484375
    9. ' possible' → logprob: -8.026718139648438
    10. ' max' → logprob: -8.026718139648438

Token 308: ' représ' (ID: 31534)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.18909136950969696
    2. ' être' → logprob: -2.814091444015503
    3. '-être' → logprob: -3.189091444015503
    4. 'êt' → logprob: -3.939091444015503
    5. ')' → logprob: -4.314091205596924
    6. ' aller' → logprob: -4.439091205596924
    7. ''être' → logprob: -5.314091205596924
    8. 'etre' → logprob: -5.439091205596924
    9. 'êtres' → logprob: -5.814091205596924
    10. ' dépasser' → logprob: -6.439091205596924

Token 309: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.08222701400518417
    2. 'ent' → logprob: -2.7072269916534424
    3. 'ente' → logprob: -5.5822272300720215
    4. 'ented' → logprob: -6.4572272300720215
    5. 'e' → logprob: -7.0822272300720215
    6. 'er' → logprob: -7.5822272300720215
    7. 'n' → logprob: -7.7072272300720215
    8. ')' → logprob: -7.9572272300720215
    9. '=' → logprob: -7.9572272300720215
    10. '```' → logprob: -8.082226753234863

Token 310: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6868985295295715
    2. ' ' → logprob: -1.9368984699249268
    3. '3' → logprob: -2.0618984699249268
    4. ' la' → logprob: -2.9368984699249268
    5. ' des' → logprob: -3.1868984699249268
    6. ' l' → logprob: -4.061898708343506
    7. 'l' → logprob: -4.311898708343506
    8. 'les' → logprob: -4.436898708343506
    9. ' segments' → logprob: -4.436898708343506
    10. ' jusqu' → logprob: -4.686898708343506

Token 311: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.904105544090271
    2. ' nombre' → logprob: -1.404105544090271
    3. '0' → logprob: -1.529105544090271
    4. '1' → logprob: -3.6541056632995605
    5. '3' → logprob: -4.0291056632995605
    6. 'cho' → logprob: -4.1541056632995605
    7. 'segment' → logprob: -4.4041056632995605
    8. ' ' → logprob: -4.7791056632995605
    9. 'dé' → logprob: -4.7791056632995605
    10. ' début' → logprob: -5.4041056632995605

Token 312: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4184224605560303
    2. ' d' → logprob: -1.9184224605560303
    3. ' des' → logprob: -2.1684224605560303
    4. 'de' → logprob: -3.6684224605560303
    5. '_de' → logprob: -4.418422698974609
    6. ')' → logprob: -4.543422698974609
    7. ' of' → logprob: -5.043422698974609
    8. '   ' → logprob: -5.293422698974609
    9. '_max' → logprob: -5.918422698974609
    10. '_' → logprob: -6.043422698974609

Token 313: ' sous' (ID: 14487)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.5499997735023499
    2. 'segments' → logprob: -1.299999713897705
    3. 's' → logprob: -3.049999713897705
    4. ' groupes' → logprob: -3.299999713897705
    5. ' sous' → logprob: -3.549999713897705
    6. 'sé' → logprob: -4.799999713897705
    7. 'group' → logprob: -5.049999713897705
    8. ' group' → logprob: -5.174999713897705
    9. ' ' → logprob: -5.674999713897705
    10. 'segment' → logprob: -6.549999713897705

Token 314: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8633180260658264
    2. '_s' → logprob: -1.3633179664611816
    3. '-s' → logprob: -2.1133179664611816
    4. '_' → logprob: -2.6133179664611816
    5. '_sequences' → logprob: -2.6133179664611816
    6. 'sé' → logprob: -3.4883179664611816
    7. '-se' → logprob: -5.363317966461182
    8. 's' → logprob: -5.488317966461182
    9. '   ' → logprob: -5.488317966461182
    10. '_seq' → logprob: -5.738317966461182

Token 315: 'é' (ID: 377)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.1558704525232315
    2. 'q' → logprob: -2.4058704376220703
    3. 'é' → logprob: -3.6558704376220703
    4. 'quence' → logprob: -5.15587043762207
    5. 'équ' → logprob: -5.28087043762207
    6. 'e' → logprob: -5.65587043762207
    7. 'eq' → logprob: -5.65587043762207
    8. 's' → logprob: -6.53087043762207
    9. 'qu' → logprob: -6.53087043762207
    10. 'ques' → logprob: -6.78087043762207

Token 316: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.006536673288792372
    2. 'q' → logprob: -5.131536483764648
    3. 'quence' → logprob: -7.506536483764648
    4. 'qu' → logprob: -10.506536483764648
    5. '   ' → logprob: -11.381536483764648
    6. 'lections' → logprob: -12.006536483764648
    7. '_' → logprob: -13.631536483764648
    8. 'qs' → logprob: -14.006536483764648
    9. '```' → logprob: -14.131536483764648
    10. '`' → logprob: -14.256536483764648

Token 317: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5518429279327393
    2. '),' → logprob: -1.6768429279327393
    3. '   ' → logprob: -1.9268429279327393
    4. ' ),' → logprob: -2.1768429279327393
    5. ' )' → logprob: -2.3018429279327393
    6. ' sélection' → logprob: -2.8018429279327393
    7. 'altern' → logprob: -3.3018429279327393
    8. '],' → logprob: -3.5518429279327393
    9. ' chois' → logprob: -4.42684268951416
    10. ',' → logprob: -4.55184268951416

Token 318: ' 
' (ID: 793)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3439490795135498
    2. '   ' → logprob: -2.09394907951355
    3. 'k' → logprob: -2.59394907951355
    4. '    ' → logprob: -3.09394907951355
    5. ')' → logprob: -4.218949317932129
    6. ' ,' → logprob: -4.968949317932129
    7. ',' → logprob: -5.093949317932129
    8. ' ' → logprob: -5.218949317932129
    9. ' )' → logprob: -6.093949317932129
    10. ' i' → logprob: -6.218949317932129

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9896422624588013
    2. ' k' → logprob: -0.9896422624588013
    3. '    ' → logprob: -2.3646421432495117
    4. 'k' → logprob: -2.4896421432495117
    5. ' j' → logprob: -3.8646421432495117
    6. '       ' → logprob: -3.9896421432495117
    7. ')' → logprob: -4.989642143249512
    8. ' ' → logprob: -5.239642143249512
    9. '3' → logprob: -5.614642143249512
    10. ',' → logprob: -5.614642143249512

Token 320: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2005511075258255
    2. ' k' → logprob: -1.825551152229309
    3. '   ' → logprob: -4.4505510330200195
    4. '0' → logprob: -5.9505510330200195
    5. '3' → logprob: -6.2005510330200195
    6. '       ' → logprob: -6.2005510330200195
    7. '    ' → logprob: -7.3255510330200195
    8. ' ' → logprob: -7.9505510330200195
    9. '2' → logprob: -8.32555103302002
    10. 'j' → logprob: -8.95055103302002

Token 321: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005376999266445637
    2. ' k' → logprob: -5.255376815795898
    3. '2' → logprob: -9.880376815795898
    4. '0' → logprob: -10.255376815795898
    5. '   ' → logprob: -10.630376815795898
    6. ' ' → logprob: -11.880376815795898
    7. '3' → logprob: -12.130376815795898
    8. '       ' → logprob: -12.380376815795898
    9. '    ' → logprob: -12.755376815795898
    10. '  ' → logprob: -12.880376815795898

Token 322: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.866243839263916
    2. ']' → logprob: -1.366243839263916
    3. ' in' → logprob: -2.491243839263916
    4. ' =' → logprob: -2.616243839263916
    5. 'in' → logprob: -3.241243839263916
    6. '][' → logprob: -3.366243839263916
    7. ')' → logprob: -3.366243839263916
    8. '=' → logprob: -3.616243839263916
    9. '[' → logprob: -4.616243839263916
    10. '(' → logprob: -4.991243839263916

Token 323: 'flag' (ID: 17665)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08216860145330429
    2. '0' → logprob: -2.7071685791015625
    3. ' ' → logprob: -4.4571685791015625
    4. 'state' → logprob: -9.207168579101562
    5. ')' → logprob: -9.332168579101562
    6. '3' → logprob: -9.582168579101562
    7. 'flag' → logprob: -9.957168579101562
    8. 'de' → logprob: -10.582168579101562
    9. ')]' → logprob: -10.582168579101562
    10. '1' → logprob: -10.582168579101562

Token 324: ' indiqu' (ID: 100773)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.19294941425323486
    2. ']' → logprob: -2.0679492950439453
    3. '][' → logprob: -4.067949295043945
    4. ')' → logprob: -4.317949295043945
    5. '])
' → logprob: -5.067949295043945
    6. ' ])' → logprob: -5.067949295043945
    7. ' ]' → logprob: -7.067949295043945
    8. '   ' → logprob: -7.442949295043945
    9. ' )' → logprob: -7.692949295043945
    10. ']))' → logprob: -7.817949295043945

Token 325: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.07083628326654434
    2. 'e' → logprob: -2.695836305618286
    3. 'ent' → logprob: -7.945836067199707
    4. 'é' → logprob: -7.945836067199707
    5. 'a' → logprob: -9.945836067199707
    6. 'er' → logprob: -10.070836067199707
    7. '   ' → logprob: -10.320836067199707
    8. '#' → logprob: -11.195836067199707
    9. '```' → logprob: -12.195836067199707
    10. '[' → logprob: -12.320836067199707

Token 326: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7770461440086365
    2. ' si' → logprob: -0.7770461440086365
    3. 'si' → logprob: -3.0270462036132812
    4. ')' → logprob: -4.902046203613281
    5. ' )' → logprob: -5.402046203613281
    6. 'if' → logprob: -5.527046203613281
    7. ' whether' → logprob: -5.527046203613281
    8. ' ' → logprob: -5.777046203613281
    9. 'l' → logprob: -5.777046203613281
    10. ' l' → logprob: -6.152046203613281

Token 327: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.04436555504798889
    2. 'on' → logprob: -3.919365644454956
    3. '1' → logprob: -4.919365406036377
    4. ' l' → logprob: -4.919365406036377
    5. ' we' → logprob: -6.044365406036377
    6. '0' → logprob: -6.294365406036377
    7. ' nous' → logprob: -6.419365406036377
    8. 'l' → logprob: -7.419365406036377
    9. ' ' → logprob: -7.544365406036377
    10. '```' → logprob: -8.169365882873535

Token 328: ' dernier' (ID: 27982)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5135917067527771
    2. 'on' → logprob: -1.0135917663574219
    3. '1' → logprob: -5.138591766357422
    4. ' ' → logprob: -5.388591766357422
    5. 'i' → logprob: -5.638591766357422
    6. '0' → logprob: -5.638591766357422
    7. ' we' → logprob: -5.638591766357422
    8. 'token' → logprob: -6.388591766357422
    9. 'a' → logprob: -6.513591766357422
    10. 's' → logprob: -6.763591766357422

Token 329: ' groupe' (ID: 29494)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12324212491512299
    2. 'élé' → logprob: -3.373242139816284
    3. ' _' → logprob: -3.998242139816284
    4. ' ' → logprob: -4.248241901397705
    5. 'sé' → logprob: -4.498241901397705
    6. '_s' → logprob: -5.248241901397705
    7. ' élément' → logprob: -5.748241901397705
    8. ' groupe' → logprob: -5.748241901397705
    9. ')' → logprob: -5.873241901397705
    10. ' choisi' → logprob: -5.873241901397705

Token 330: ' incl' (ID: 11368)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.123906135559082
    2. ' est' → logprob: -1.873906135559082
    3. ' selected' → logprob: -2.248906135559082
    4. ' ==' → logprob: -2.498906135559082
    5. ']' → logprob: -2.623906135559082
    6. '==' → logprob: -3.373906135559082
    7. 'est' → logprob: -3.498906135559082
    8. ' ' → logprob: -3.498906135559082
    9. 'selected' → logprob: -3.748906135559082
    10. '_selected' → logprob: -3.748906135559082

Token 331: 'ut' (ID: 339)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03170878812670708
    2. 'ué' → logprob: -4.406708717346191
    3. 'ud' → logprob: -4.781708717346191
    4. 'ue' → logprob: -5.531708717346191
    5. 'ude' → logprob: -5.531708717346191
    6. 'ut' → logprob: -6.531708717346191
    7. 'uded' → logprob: -8.281708717346191
    8. 'use' → logprob: -9.031708717346191
    9. 'ui' → logprob: -9.281708717346191
    10. 'ued' → logprob: -9.406708717346191

Token 332: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.45002371072769165
    2. 'l' → logprob: -1.3250236511230469
    3. ' i' → logprob: -2.825023651123047
    4. 'i' → logprob: -4.200023651123047
    5. ' le' → logprob: -4.950023651123047
    6. 'le' → logprob: -5.575023651123047
    7. ')' → logprob: -5.575023651123047
    8. ' ' → logprob: -6.075023651123047
    9. '   ' → logprob: -6.950023651123047
    10. ' )' → logprob: -7.075023651123047

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6465505361557007
    2. 'élé' → logprob: -1.1465505361557007
    3. 'dern' → logprob: -2.2715506553649902
    4. ' i' → logprob: -3.1465506553649902
    5. ' ' → logprob: -5.77155065536499
    6. '   ' → logprob: -6.52155065536499
    7. 'der' → logprob: -7.02155065536499
    8. 'a' → logprob: -7.14655065536499
    9. 'element' → logprob: -7.14655065536499
    10. ' dernier' → logprob: -7.14655065536499

Token 334: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12184140086174011
    2. ' -' → logprob: -3.2468414306640625
    3. '])' → logprob: -3.8718414306640625
    4. '   ' → logprob: -4.2468414306640625
    5. ' ' → logprob: -4.3718414306640625
    6. ' ])' → logprob: -4.3718414306640625
    7. 'i' → logprob: -5.7468414306640625
    8. ']' → logprob: -5.8718414306640625
    9. 'ème' → logprob: -6.4968414306640625
    10. ' i' → logprob: -6.7468414306640625

Token 335: 'ème' (ID: 9767)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000930163892917335
    2. ' ' → logprob: -7.000930309295654
    3. 'th' → logprob: -11.500929832458496
    4. '   ' → logprob: -12.375929832458496
    5. 'i' → logprob: -13.250929832458496
    6. 'ème' → logprob: -14.875929832458496
    7. '`' → logprob: -14.875929832458496
    8. '```' → logprob: -15.000929832458496
    9. '-' → logprob: -15.125929832458496
    10. 'é' → logprob: -15.250929832458496

Token 336: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.12058179825544357
    2. ' élément' → logprob: -2.245581865310669
    3. ')' → logprob: -5.74558162689209
    4. '-' → logprob: -6.74558162689209
    5. '_' → logprob: -7.12058162689209
    6. ' ' → logprob: -7.24558162689209
    7. ' )' → logprob: -7.49558162689209
    8. 'element' → logprob: -7.74558162689209
    9. 'é' → logprob: -8.74558162689209
    10. '   ' → logprob: -9.24558162689209

Token 337: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4267255961894989
    2. '])' → logprob: -1.6767256259918213
    3. ')])' → logprob: -2.8017256259918213
    4. ' ])' → logprob: -3.1767256259918213
    5. ' )' → logprob: -3.6767256259918213
    6. ')]' → logprob: -4.551725387573242
    7. '   ' → logprob: -5.176725387573242
    8. ' ])
' → logprob: -5.301725387573242
    9. '])
' → logprob: -5.301725387573242
    10. ')
' → logprob: -6.176725387573242

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7979291081428528
    2. ')' → logprob: -1.297929048538208
    3. '))' → logprob: -1.797929048538208
    4. ' ' → logprob: -3.297929048538208
    5. ' )' → logprob: -3.672929048538208
    6. '0' → logprob: -3.797929048538208
    7. ')]' → logprob: -4.922929286956787
    8. ' ))' → logprob: -5.422929286956787
    9. ')])' → logprob: -5.672929286956787
    10. '))
' → logprob: -6.797929286956787

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07635608315467834
    2. ')])' → logprob: -2.8263561725616455
    3. ')]' → logprob: -4.826355934143066
    4. ']' → logprob: -6.201355934143066
    5. ' )' → logprob: -6.701355934143066
    6. '))' → logprob: -7.076355934143066
    7. '   ' → logprob: -7.951355934143066
    8. '])' → logprob: -8.201355934143066
    9. ')))' → logprob: -8.451355934143066
    10. ' or' → logprob: -8.576355934143066

Token 340: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7970576882362366
    2. ' ou' → logprob: -0.7970576882362366
    3. ' or' → logprob: -2.797057628631592
    4. ',' → logprob: -4.297057628631592
    5. '   ' → logprob: -4.547057628631592
    6. '))' → logprob: -5.172057628631592
    7. 'or' → logprob: -6.547057628631592
    8. '),' → logprob: -6.797057628631592
    9. 'ou' → logprob: -6.797057628631592
    10. ' )' → logprob: -7.047057628631592

Token 341: ' non' (ID: 2893)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020854277536273003
    2. ' ' → logprob: -6.252085208892822
    3. 'not' → logprob: -9.62708568572998
    4. ' pas' → logprob: -10.00208568572998
    5. 'non' → logprob: -11.00208568572998
    6. ' not' → logprob: -11.25208568572998
    7. 'pas' → logprob: -11.50208568572998
    8. ' non' → logprob: -12.12708568572998
    9. 'est' → logprob: -16.252084732055664
    10. ' est' → logprob: -16.252084732055664

Token 342: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10749471187591553
    2. '))' → logprob: -2.857494831085205
    3. ')])' → logprob: -3.732494831085205
    4. '])' → logprob: -5.107494831085205
    5. ')]' → logprob: -5.107494831085205
    6. ')
' → logprob: -5.857494831085205
    7. ' )' → logprob: -5.982494831085205
    8. '))
' → logprob: -7.107494831085205
    9. ').' → logprob: -7.357494831085205
    10. '   ' → logprob: -7.482494831085205

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002835899591445923
    2. ' ' → logprob: -5.877835750579834
    3. '))' → logprob: -10.627836227416992
    4. ')' → logprob: -12.502836227416992
    5. '   ' → logprob: -13.627836227416992
    6. ' ))' → logprob: -14.127836227416992
    7. ' ' → logprob: -15.627836227416992
    8. ' )' → logprob: -15.752836227416992
    9. '))
' → logprob: -15.877836227416992
    10. '```' → logprob: -16.252836227416992

Token 344: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6511929035186768
    2. ')' → logprob: -0.7761929035186768
    3. ')])' → logprob: -4.776192665100098
    4. '])' → logprob: -5.401192665100098
    5. ']))' → logprob: -5.526192665100098
    6. ')))' → logprob: -7.651192665100098
    7. '   ' → logprob: -8.151192665100098
    8. ')]' → logprob: -8.526192665100098
    9. ' )' → logprob: -8.651192665100098
    10. '))
' → logprob: -8.901192665100098

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024180319160223007
    2. 'dp' → logprob: -4.1491804122924805
    3. ' dp' → logprob: -5.0241804122924805
    4. '	dp' → logprob: -7.7741804122924805
    5. '
' → logprob: -7.8991804122924805
    6. '    
' → logprob: -8.14918041229248
    7. '\t' → logprob: -9.02418041229248
    8. 'import' → logprob: -9.52418041229248
    9. ' ' → logprob: -9.89918041229248
    10. '_dp' → logprob: -10.02418041229248

Token 346: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2553902864456177
    2. '   ' → logprob: -1.5053902864456177
    3. 'import' → logprob: -6.005390167236328
    4. ' dp' → logprob: -7.005390167236328
    5. '    
' → logprob: -10.755390167236328
    6. 'INF' → logprob: -10.755390167236328
    7. '	dp' → logprob: -10.880390167236328
    8. '
' → logprob: -11.755390167236328
    9. 'from' → logprob: -12.130390167236328
    10. ' ' → logprob: -13.380390167236328

Token 347: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08045854419469833
    2. '   ' → logprob: -2.830458641052246
    3. 'INF' → logprob: -4.580458641052246
    4. 'import' → logprob: -4.830458641052246
    5. 'from' → logprob: -10.580458641052246
    6. 'inf' → logprob: -10.580458641052246
    7. ' dp' → logprob: -11.080458641052246
    8. 'MAX' → logprob: -11.830458641052246
    9. '    
' → logprob: -12.205458641052246
    10. '
' → logprob: -12.205458641052246

Token 348: ' initialise' (ID: 145250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016003279015421867
    2. '=' → logprob: -4.391003131866455
    3. 'import' → logprob: -6.391003131866455
    4. 'n' → logprob: -7.141003131866455
    5. ']' → logprob: -8.516003608703613
    6. ')' → logprob: -8.891003608703613
    7. ' n' → logprob: -8.891003608703613
    8. '_' → logprob: -9.266003608703613
    9. '_init' → logprob: -9.891003608703613
    10. 'dp' → logprob: -9.891003608703613

Token 349: ' toutes' (ID: 17502)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08202297985553741
    2. ' dp' → logprob: -2.7070229053497314
    3. 'dp' → logprob: -4.5820231437683105
    4. '   ' → logprob: -7.0820231437683105
    5. '=' → logprob: -7.9570231437683105
    6. '[' → logprob: -9.082022666931152
    7. ')' → logprob: -9.832022666931152
    8. ' ' → logprob: -9.957022666931152
    9. ' avec' → logprob: -9.957022666931152
    10. ']' → logprob: -10.207022666931152

Token 350: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6469045877456665
    2. 'dp' → logprob: -1.6469045877456665
    3. ' à' → logprob: -1.6469045877456665
    4. ' avec' → logprob: -3.521904468536377
    5. 'les' → logprob: -3.521904468536377
    6. ' dp' → logprob: -4.896904468536377
    7. 'à' → logprob: -5.521904468536377
    8. '(' → logprob: -5.896904468536377
    9. '(dp' → logprob: -6.021904468536377
    10. '_' → logprob: -6.146904468536377

Token 351: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11554136872291565
    2. ' valeurs' → logprob: -2.865541458129883
    3. 'dp' → logprob: -3.365541458129883
    4. 'cases' → logprob: -4.990541458129883
    5. ' val' → logprob: -5.615541458129883
    6. '   ' → logprob: -6.115541458129883
    7. ' cases' → logprob: -7.240541458129883
    8. 'positions' → logprob: -7.365541458129883
    9. ' dp' → logprob: -7.740541458129883
    10. 'dist' → logprob: -7.990541458129883

Token 352: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20662155747413635
    2. ' à' → logprob: -2.0816216468811035
    3. '=' → logprob: -3.0816216468811035
    4. 'import' → logprob: -5.4566216468811035
    5. ' avec' → logprob: -5.5816216468811035
    6. '   ' → logprob: -5.5816216468811035
    7. 'à' → logprob: -6.3316216468811035
    8. '=-' → logprob: -7.8316216468811035
    9. 'dp' → logprob: -8.081621170043945
    10. 'avec' → logprob: -8.456621170043945

Token 353: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8745918273925781
    2. ' float' → logprob: -0.9995918273925781
    3. '-f' → logprob: -2.124591827392578
    4. '-' → logprob: -2.999591827392578
    5. ' -' → logprob: -3.124591827392578
    6. '   ' → logprob: -7.499591827392578
    7. '-s' → logprob: -7.999591827392578
    8. ' ' → logprob: -8.374591827392578
    9. '-n' → logprob: -8.874591827392578
    10. '-fl' → logprob: -8.999591827392578

Token 354: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.474237859249115
    2. 'float' → logprob: -0.974237859249115
    3. 'int' → logprob: -9.224237442016602
    4. 'inf' → logprob: -10.599237442016602
    5. '1' → logprob: -11.224237442016602
    6. ' float' → logprob: -11.349237442016602
    7. '100' → logprob: -12.224237442016602
    8. '(' → logprob: -12.599237442016602
    9. '(float' → logprob: -13.349237442016602
    10. '-' → logprob: -14.849237442016602

Token 355: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8593576550483704
    2. '9' → logprob: -0.8593576550483704
    3. '6' → logprob: -2.2343575954437256
    4. '**' → logprob: -3.8593575954437256
    5. '8' → logprob: -4.984357833862305
    6. '000' → logprob: -4.984357833862305
    7. '7' → logprob: -5.234357833862305
    8. '00' → logprob: -5.734357833862305
    9. '5' → logprob: -6.734357833862305
    10. '18' → logprob: -8.109357833862305

Token 356: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0038057805504649878
    2. '15' → logprob: -5.753805637359619
    3. '18' → logprob: -7.503805637359619
    4. '12' → logprob: -10.003806114196777
    5. '10' → logprob: -10.753806114196777
    6. '6' → logprob: -11.878806114196777
    7. '7' → logprob: -13.878806114196777
    8. '8' → logprob: -14.378806114196777
    9. '14' → logprob: -14.628806114196777
    10. '**' → logprob: -14.753806114196777

Token 357: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3822172284126282
    2. '   ' → logprob: -1.8822171688079834
    3. 'dp' → logprob: -2.5072171688079834
    4. '    
' → logprob: -3.6322171688079834
    5. ' dp' → logprob: -4.2572174072265625
    6. '  
' → logprob: -4.3822174072265625
    7. '_' → logprob: -4.8822174072265625
    8. ' 
' → logprob: -5.2572174072265625
    9. 'for' → logprob: -6.1322174072265625
    10. '   
' → logprob: -6.1322174072265625

Token 358: 'tr' (ID: 371)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20280960202217102
    2. ' )' → logprob: -2.7028095722198486
    3. ' ' → logprob: -3.3278095722198486
    4. '-' → logprob: -3.7028095722198486
    5. '10' → logprob: -3.8278095722198486
    6. 'int' → logprob: -4.202809810638428
    7. ' -' → logprob: -5.202809810638428
    8. 'float' → logprob: -5.827809810638428
    9. '_' → logprob: -6.202809810638428
    10. '1' → logprob: -6.202809810638428

Token 359: 'ès' (ID: 4119)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.2570112347602844
    2. '00' → logprob: -1.8820111751556396
    3. '12' → logprob: -3.6320111751556396
    4. '18' → logprob: -4.007011413574219
    5. '14' → logprob: -4.132011413574219
    6. '0' → logprob: -5.382011413574219
    7. '**' → logprob: -5.882011413574219
    8. '9' → logprob: -6.757011413574219
    9. '16' → logprob: -6.757011413574219
    10. '2' → logprob: -7.257011413574219

Token 360: ' petit' (ID: 20577)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.6587001085281372
    2. '15' → logprob: -0.7837001085281372
    3. '9' → logprob: -3.9086999893188477
    4. ' ' → logprob: -6.283699989318848
    5. '**' → logprob: -6.408699989318848
    6. '16' → logprob: -7.533699989318848
    7. '12' → logprob: -7.658699989318848
    8. '14' → logprob: -7.783699989318848
    9. '17' → logprob: -8.408699989318848
    10. '
' → logprob: -8.533699989318848

Token 361: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018124306574463844
    2. '_' → logprob: -4.643124103546143
    3. ' )' → logprob: -5.018124103546143
    4. '_)' → logprob: -7.643124103546143
    5. ' ' → logprob: -8.7681245803833
    6. '),' → logprob: -8.8931245803833
    7. 'e' → logprob: -9.0181245803833
    8. '000' → logprob: -9.1431245803833
    9. ' _' → logprob: -9.2681245803833
    10. ',' → logprob: -9.6431245803833

Token 362: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1032932996749878
    2. '    ' → logprob: -1.2282932996749878
    3. ' 
' → logprob: -2.7282934188842773
    4. ' ' → logprob: -2.8532934188842773
    5. '0' → logprob: -3.1032934188842773
    6. '    
' → logprob: -3.4782934188842773
    7. 'dp' → logprob: -3.8532934188842773
    8. ' )' → logprob: -3.8532934188842773
    9. ')' → logprob: -4.228293418884277
    10. 'except' → logprob: -4.353293418884277

Token 363: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6330402493476868
    2. 'dp' → logprob: -0.7580402493476868
    3. ' ' → logprob: -9.133040428161621
    4. '0' → logprob: -9.758040428161621
    5. ' pour' → logprob: -9.758040428161621
    6. ' la' → logprob: -10.008040428161621
    7. ' for' → logprob: -10.008040428161621
    8. '[' → logprob: -10.133040428161621
    9. 'pour' → logprob: -10.633040428161621
    10. '   ' → logprob: -11.008040428161621

Token 364: ' cas' (ID: 2108)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4579014480113983
    2. ' dp' → logprob: -1.3329014778137207
    3. '0' → logprob: -2.4579014778137207
    4. '[' → logprob: -4.582901477813721
    5. ' cas' → logprob: -5.707901477813721
    6. ' ' → logprob: -6.332901477813721
    7. 'cas' → logprob: -6.582901477813721
    8. '   ' → logprob: -7.582901477813721
    9. ' [' → logprob: -8.332901000976562
    10. ' for' → logprob: -9.332901000976562

Token 365: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0589572191238403
    2. 'dp' → logprob: -1.4339572191238403
    3. ' dp' → logprob: -1.4339572191238403
    4. '0' → logprob: -2.808957099914551
    5. '[' → logprob: -2.933957099914551
    6. ' ' → logprob: -3.433957099914551
    7. ' i' → logprob: -5.433957099914551
    8. ' où' → logprob: -5.558957099914551
    9. ' spécial' → logprob: -5.558957099914551
    10. '[i' → logprob: -5.808957099914551

Token 366: ' base' (ID: 3611)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.360466480255127
    2. ' i' → logprob: -1.610466480255127
    3. '0' → logprob: -1.860466480255127
    4. 'dp' → logprob: -1.985466480255127
    5. ' ' → logprob: -2.110466480255127
    6. 'i' → logprob: -2.110466480255127
    7. '[' → logprob: -6.610466480255127
    8. 's' → logprob: -6.610466480255127
    9. '   ' → logprob: -6.985466480255127
    10. ' l' → logprob: -7.110466480255127

Token 367: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18484830856323242
    2. 'dp' → logprob: -2.4348483085632324
    3. ' dp' → logprob: -3.1848483085632324
    4. '
' → logprob: -4.184848308563232
    5. '    
' → logprob: -4.559848308563232
    6. 'import' → logprob: -5.684848308563232
    7. ',' → logprob: -5.809848308563232
    8. '_dp' → logprob: -6.559848308563232
    9. ' =' → logprob: -6.809848308563232
    10. ':' → logprob: -7.309848308563232

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09592975676059723
    2. 'dp' → logprob: -2.7209298610687256
    3. ' dp' → logprob: -4.0959296226501465
    4. '    
' → logprob: -5.0959296226501465
    5. '
' → logprob: -6.0959296226501465
    6. ' 
' → logprob: -8.095930099487305
    7. '	dp' → logprob: -9.595930099487305
    8. '```' → logprob: -9.845930099487305
    9. '    ' → logprob: -9.970930099487305
    10. '  
' → logprob: -10.345930099487305

Token 369: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11651644110679626
    2. 'dp' (adapté à ' dp') → logprob: -2.366516351699829
    3. ' dp' → logprob: -4.616516590118408
    4. '    
' → logprob: -5.991516590118408
    5. '
' → logprob: -5.991516590118408
    6. ' 
' → logprob: -7.241516590118408
    7. 'n' → logprob: -8.99151611328125
    8. '  
' → logprob: -9.24151611328125
    9. 'import' → logprob: -9.36651611328125
    10. '	dp' → logprob: -9.86651611328125

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008949582464993
    2. '=' → logprob: -4.7589497566223145
    3. '[' → logprob: -8.508949279785156
    4. '=[' → logprob: -9.383949279785156
    5. ' =[' → logprob: -10.758949279785156
    6. '[i' → logprob: -11.758949279785156
    7. '=[[' → logprob: -11.883949279785156
    8. '   ' → logprob: -11.883949279785156
    9. '```' → logprob: -13.383949279785156
    10. ')' → logprob: -13.633949279785156

Token 371: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.01861540600657463
    2. '[' → logprob: -4.018615245819092
    3. ' [[' → logprob: -8.01861572265625
    4. ' [[[' → logprob: -9.01861572265625
    5. '[-' → logprob: -11.26861572265625
    6. '[
' → logprob: -13.26861572265625
    7. ' [' → logprob: -15.51861572265625
    8. '   ' → logprob: -16.51861572265625
    9. ' ' → logprob: -16.64361572265625
    10. '[(' → logprob: -17.76861572265625

Token 372: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002820736262947321
    2. '[' → logprob: -8.250282287597656
    3. '[[' → logprob: -11.000282287597656
    4. '[
' → logprob: -12.625282287597656
    5. '-' → logprob: -14.375282287597656
    6. ' [-' → logprob: -16.250282287597656
    7. '   ' → logprob: -17.500282287597656
    8. 'float' → logprob: -17.500282287597656
    9. '[int' → logprob: -18.000282287597656
    10. '[(' → logprob: -18.250282287597656

Token 373: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005579164135269821
    2. '(' → logprob: -7.625557899475098
    3. 'float' → logprob: -10.625557899475098
    4. 'int' → logprob: -10.750557899475098
    5. '100' → logprob: -11.125557899475098
    6. '1' → logprob: -11.750557899475098
    7. '101' → logprob: -14.125557899475098
    8. 'pow' → logprob: -14.875557899475098
    9. ' ' → logprob: -15.875557899475098
    10. '((' → logprob: -16.500558853149414

Token 374: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.10023870319128036
    2. '**' → logprob: -2.350238800048828
    3. '^' → logprob: -10.725238800048828
    4. '```' → logprob: -12.725238800048828
    5. ' **' → logprob: -13.100238800048828
    6. '*' → logprob: -13.350238800048828
    7. ' ' → logprob: -13.850238800048828
    8. '0' → logprob: -14.225238800048828
    9. '9' → logprob: -14.725238800048828
    10. '015' → logprob: -15.225238800048828

Token 375: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.9361264946837764e-07
    2. '18' → logprob: -16.5
    3. '9' → logprob: -17.625
    4. '14' → logprob: -17.75
    5. '12' → logprob: -18.25
    6. '16' → logprob: -18.625
    7. '10' → logprob: -19.375
    8. '5' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. '1' → logprob: -19.75

Token 376: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5587984919548035
    2. ']' → logprob: -1.4337985515594482
    3. 'for' → logprob: -1.6837985515594482
    4. ']*' → logprob: -6.558798313140869
    5. ' ]' → logprob: -6.808798313140869
    6. '   ' → logprob: -7.308798313140869
    7. ']+' → logprob: -8.808798789978027
    8. ']]' → logprob: -9.058798789978027
    9. '    ' → logprob: -9.433798789978027
    10. ' ' → logprob: -9.558798789978027

Token 377: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012558852904476225
    2. ' -' → logprob: -9.000125885009766
    3. '10' → logprob: -13.750125885009766
    4. ' ' → logprob: -15.375125885009766
    5. '-int' → logprob: -15.500125885009766
    6. '   ' → logprob: -15.625125885009766
    7. '0' → logprob: -16.000125885009766
    8. ']' → logprob: -16.375125885009766
    9. '  ' → logprob: -16.625125885009766
    10. '...' → logprob: -17.250125885009766

Token 378: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0160356592386961
    2. '15' → logprob: -4.141035556793213
    3. '1' → logprob: -13.891036033630371
    4. '0' → logprob: -16.391035079956055
    5. ' ' → logprob: -16.391035079956055
    6. '5' → logprob: -16.641035079956055
    7. '```' → logprob: -17.016035079956055
    8. '4' → logprob: -17.453535079956055
    9. '100' → logprob: -17.578535079956055
    10. '2' → logprob: -17.641035079956055

Token 379: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.012550151906907558
    2. '**' → logprob: -4.387550354003906
    3. '```' → logprob: -10.512550354003906
    4. '+' → logprob: -12.637550354003906
    5. '*' → logprob: -12.762550354003906
    6. '^' → logprob: -13.762550354003906
    7. ' ' → logprob: -14.012550354003906
    8. '``' → logprob: -14.075050354003906
    9. '^{' → logprob: -14.450050354003906
    10. '
' → logprob: -14.700050354003906

Token 380: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -14.125003814697266
    3. '9' → logprob: -14.125003814697266
    4. '5' → logprob: -14.125003814697266
    5. ' ' → logprob: -15.000003814697266
    6. '10' → logprob: -15.250003814697266
    7. '6' → logprob: -15.750003814697266
    8. '0' → logprob: -15.875003814697266
    9. '
' → logprob: -16.125003814697266
    10. '12' → logprob: -16.437503814697266

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.751746746478602e-05
    2. ' ]' → logprob: -10.12504768371582
    3. '],' → logprob: -12.12504768371582
    4. ']]' → logprob: -14.25004768371582
    5. ']
' → logprob: -14.37504768371582
    6. '   ' → logprob: -15.00004768371582
    7. ')' → logprob: -15.12504768371582
    8. '],
' → logprob: -16.25004768371582
    9. ' ' → logprob: -17.12504768371582
    10. '])' → logprob: -17.12504768371582

Token 382: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008725190535187721
    2. 'for' → logprob: -4.758725166320801
    3. ']' → logprob: -10.0087251663208
    4. '   ' → logprob: -10.7587251663208
    5. '    ' → logprob: -11.3837251663208
    6. ' ' → logprob: -11.8837251663208
    7. '        ' → logprob: -12.3837251663208
    8. '       ' → logprob: -12.5087251663208
    9. '     ' → logprob: -13.0087251663208
    10. '           ' → logprob: -13.0087251663208

Token 383: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1481478065252304
    2. '_' → logprob: -2.0231478214263916
    3. '_j' → logprob: -5.5231475830078125
    4. ' j' → logprob: -6.6481475830078125
    5. 'j' → logprob: -8.898147583007812
    6. ' range' → logprob: -11.523147583007812
    7. 'range' → logprob: -11.898147583007812
    8. '_range' → logprob: -12.023147583007812
    9. ' in' → logprob: -13.148147583007812
    10. ' ' → logprob: -13.523147583007812

Token 384: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2530660629272461
    2. ' in' → logprob: -2.003066062927246
    3. 'range' → logprob: -2.628066062927246
    4. 'j' → logprob: -4.378066062927246
    5. '_j' → logprob: -6.753066062927246
    6. '_' → logprob: -6.753066062927246
    7. ' range' → logprob: -7.628066062927246
    8. ' j' → logprob: -7.878066062927246
    9. '_range' → logprob: -8.253066062927246
    10. 'i' → logprob: -8.628066062927246

Token 385: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.000911712646484
    4. '(range' → logprob: -19.125911712646484
    5. ' ' → logprob: -20.875911712646484
    6. '_range' → logprob: -21.500911712646484
    7. '  ' → logprob: -21.500911712646484
    8. '    ' → logprob: -21.750911712646484
    9. '3' → logprob: -21.875911712646484
    10. '	range' → logprob: -22.125911712646484

Token 386: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.52919222577475e-05
    2. '4' → logprob: -9.500075340270996
    3. ' (' → logprob: -14.875075340270996
    4. ' ' → logprob: -17.00007438659668
    5. '   ' → logprob: -18.12507438659668
    6. '((' → logprob: -18.37507438659668
    7. '5' → logprob: -18.75007438659668
    8. '(range' → logprob: -19.00007438659668
    9. '(
' → logprob: -19.37507438659668
    10. 'range' → logprob: -19.62507438659668

Token 387: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.842555426876061e-06
    2. '5' → logprob: -12.250004768371582
    3. '(' → logprob: -18.5000057220459
    4. ' ' → logprob: -19.2500057220459
    5. '```' → logprob: -19.5000057220459
    6. '４' → logprob: -20.5000057220459
    7. '   ' → logprob: -20.6250057220459
    8. '
' → logprob: -20.7500057220459
    9. '

' → logprob: -21.0000057220459
    10. '=' → logprob: -21.7500057220459

Token 388: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011880126112373546
    2. ' )' → logprob: -9.87511920928955
    3. ')' → logprob: -10.62511920928955
    4. ']' → logprob: -10.87511920928955
    5. ' ]' → logprob: -10.87511920928955
    6. '   ' → logprob: -12.50011920928955
    7. ']]' → logprob: -15.00011920928955
    8. ')]
' → logprob: -15.37511920928955
    9. '])' → logprob: -16.000118255615234
    10. ' ' → logprob: -16.250118255615234

Token 389: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0013294065138325095
    2. 'for' → logprob: -6.62632942199707
    3. '   ' → logprob: -13.00132942199707
    4. ']' → logprob: -14.12632942199707
    5. ' ' → logprob: -15.00132942199707
    6. '    ' → logprob: -16.12632942199707
    7. '	for' → logprob: -17.00132942199707
    8. ',' → logprob: -17.25132942199707
    9. ' in' → logprob: -17.75132942199707
    10. '  ' → logprob: -18.12632942199707

Token 390: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008660659193992615
    2. ' _' → logprob: -5.258660793304443
    3. ' range' → logprob: -5.883660793304443
    4. '_range' → logprob: -7.633660793304443
    5. 'range' → logprob: -9.008660316467285
    6. ' in' → logprob: -11.508660316467285
    7. '_i' → logprob: -11.633660316467285
    8. '_in' → logprob: -12.133660316467285
    9. ' i' → logprob: -13.008660316467285
    10. 'i' → logprob: -13.383660316467285

Token 391: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16742561757564545
    2. 'in' → logprob: -1.9174256324768066
    3. ' range' → logprob: -5.292425632476807
    4. ' in' → logprob: -6.167425632476807
    5. '_' → logprob: -10.042425155639648
    6. 'i' → logprob: -13.417425155639648
    7. 'n' → logprob: -13.917425155639648
    8. '(range' → logprob: -14.167425155639648
    9. '_range' → logprob: -14.667425155639648
    10. '   ' → logprob: -14.792425155639648

Token 392: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -17.001171112060547
    4. 'in' → logprob: -18.626171112060547
    5. '   ' → logprob: -18.876171112060547
    6. '_' → logprob: -20.126171112060547
    7. '	range' → logprob: -21.251171112060547
    8. '_range' → logprob: -21.626171112060547
    9. 'r' → logprob: -21.876171112060547
    10. ' ' → logprob: -22.251171112060547

Token 393: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.749814019713085e-06
    2. 'n' → logprob: -12.000006675720215
    3. '(' → logprob: -14.750006675720215
    4. ' (' → logprob: -16.75000762939453
    5. '((' → logprob: -17.00000762939453
    6. '   ' → logprob: -19.12500762939453
    7. ' n' → logprob: -20.12500762939453
    8. '(range' → logprob: -20.12500762939453
    9. 'range' → logprob: -20.37500762939453
    10. '[n' → logprob: -20.62500762939453

Token 394: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002003580564633012
    2. ' +' → logprob: -6.2520036697387695
    3. ')]' → logprob: -9.50200366973877
    4. '+
' → logprob: -15.87700366973877
    5. '   ' → logprob: -16.002002716064453
    6. ')' → logprob: -16.877002716064453
    7. '+n' → logprob: -16.877002716064453
    8. ')]
' → logprob: -18.377002716064453
    9. '+i' → logprob: -18.502002716064453
    10. ')])' → logprob: -18.627002716064453

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -15.62500286102295
    4. '   ' → logprob: -15.87500286102295
    5. '0' → logprob: -17.125003814697266
    6. '```' → logprob: -17.125003814697266
    7. '１' → logprob: -17.625003814697266
    8. '+' → logprob: -17.937503814697266
    9. 'n' → logprob: -18.500003814697266
    10. '
' → logprob: -18.500003814697266

Token 396: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.107425062713446e-06
    2. ']' → logprob: -12.000006675720215
    3. ')]
' → logprob: -15.375006675720215
    4. '   ' → logprob: -15.375006675720215
    5. ' ]' → logprob: -16.00000762939453
    6. ')' → logprob: -16.37500762939453
    7. ')],' → logprob: -16.50000762939453
    8. ']]' → logprob: -17.12500762939453
    9. ' )' → logprob: -17.25000762939453
    10. '}]' → logprob: -17.25000762939453

Token 397: '    
' (ID: 1944)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029897896572947502
    2. '   ' → logprob: -3.529897928237915
    3. ' dp' → logprob: -9.029897689819336
    4. '```' → logprob: -11.279897689819336
    5. '	dp' → logprob: -11.279897689819336
    6. 'for' → logprob: -14.029897689819336
    7. ' ' → logprob: -14.154897689819336
    8. '    
' → logprob: -15.279897689819336
    9. '(dp' → logprob: -15.654897689819336
    10. '  ' → logprob: -16.279897689819336

Token 398: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04863380640745163
    2. '   ' → logprob: -3.0486338138580322
    3. ' dp' → logprob: -10.048633575439453
    4. '	dp' → logprob: -13.048633575439453
    5. 'for' → logprob: -14.298633575439453
    6. '```' → logprob: -15.548633575439453
    7. '#' → logprob: -16.548633575439453
    8. '    
' → logprob: -17.173633575439453
    9. ' ' → logprob: -17.173633575439453
    10. '_dp' → logprob: -17.673633575439453

Token 399: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0018460556166246533
    2. 'for' → logprob: -6.876845836639404
    3. '   ' → logprob: -7.126845836639404
    4. ' dp' → logprob: -11.876846313476562
    5. ' for' → logprob: -13.251846313476562
    6. '```' → logprob: -14.001846313476562
    7. '	dp' → logprob: -16.376846313476562
    8. ' ' → logprob: -17.126846313476562
    9. '    
' → logprob: -17.751846313476562
    10. '#' (adapté à ' #') → logprob: -17.751846313476562

Token 400: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.048604074865579605
    2. 'for' → logprob: -3.0486040115356445
    3. ' for' → logprob: -11.548604011535645
    4. ' dp' → logprob: -12.298604011535645
    5. '   ' → logprob: -13.423604011535645
    6. '	dp' → logprob: -15.923604011535645
    7. '```' → logprob: -16.04860496520996
    8. '#' → logprob: -16.04860496520996
    9. 'For' → logprob: -16.17360496520996
    10. '(dp' → logprob: -16.29860496520996

Token 401: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8839266896247864
    2. '   ' → logprob: -1.2589266300201416
    3. '[' → logprob: -1.5089266300201416
    4. '0' → logprob: -3.1339266300201416
    5. ' dp' → logprob: -3.8839266300201416
    6. ' ' → logprob: -5.133926868438721
    7. 'de' → logprob: -5.383926868438721
    8. ' de' → logprob: -5.383926868438721
    9. 'i' → logprob: -6.883926868438721
    10. '[i' → logprob: -7.633926868438721

Token 402: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.17822480201721191
    2. 'dp' → logprob: -2.178224802017212
    3. ' base' → logprob: -3.053224802017212
    4. 'i' → logprob: -6.303224563598633
    5. '0' → logprob: -7.303224563598633
    6. ' dp' → logprob: -9.053224563598633
    7. ' i' → logprob: -10.053224563598633
    8. 'b' → logprob: -10.303224563598633
    9. ' ' → logprob: -10.803224563598633
    10. 'dé' → logprob: -10.803224563598633

Token 403: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32511255145072937
    2. 'dp' → logprob: -1.3251125812530518
    3. ' dp' → logprob: -4.450112342834473
    4. ' for' → logprob: -9.575112342834473
    5. 'for' → logprob: -11.200112342834473
    6. '	dp' → logprob: -11.325112342834473
    7. '```' → logprob: -12.950112342834473
    8. '(dp' → logprob: -13.700112342834473
    9. '_dp' → logprob: -13.825112342834473
    10. '    
' → logprob: -14.200112342834473

Token 404: ' avant' (ID: 13339)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05150897800922394
    2. ' dp' → logprob: -3.426508903503418
    3. 'for' → logprob: -5.051508903503418
    4. '   ' → logprob: -5.176508903503418
    5. ' for' → logprob: -5.176508903503418
    6. '0' → logprob: -12.926508903503418
    7. '	dp' → logprob: -13.051508903503418
    8. ' ' → logprob: -13.426508903503418
    9. '[' → logprob: -14.301508903503418
    10. '(dp' → logprob: -14.676508903503418

Token 405: ' tout' (ID: 5501)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6352939605712891
    2. 'l' → logprob: -1.885293960571289
    3. 'i' → logprob: -2.135293960571289
    4. 'tout' → logprob: -2.760293960571289
    5. 'de' → logprob: -3.760293960571289
    6. '0' → logprob: -3.760293960571289
    7. '[' → logprob: -4.135293960571289
    8. 'def' → logprob: -4.260293960571289
    9. 't' → logprob: -4.510293960571289
    10. ' d' → logprob: -5.135293960571289

Token 406: ' choix' (ID: 28642)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32997795939445496
    2. 'i' → logprob: -1.5799779891967773
    3. ' dp' → logprob: -3.5799779891967773
    4. ' i' → logprob: -4.579977989196777
    5. ' élément' → logprob: -4.704977989196777
    6. 'élé' → logprob: -5.329977989196777
    7. 'd' → logprob: -5.579977989196777
    8. ' traitement' → logprob: -5.954977989196777
    9. 'dé' → logprob: -6.329977989196777
    10. ' éléments' → logprob: -6.454977989196777

Token 407: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08883235603570938
    2. '   ' → logprob: -2.838832378387451
    3. ' dp' → logprob: -3.838832378387451
    4. ' for' → logprob: -6.588832378387451
    5. ',' → logprob: -6.963832378387451
    6. 'for' → logprob: -7.213832378387451
    7. '[' → logprob: -7.338832378387451
    8. ' =' → logprob: -7.588832378387451
    9. ':' → logprob: -8.088831901550293
    10. '(dp' → logprob: -9.213831901550293

Token 408: ' somme' (ID: 64484)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07149641215801239
    2. ' dp' → logprob: -2.6964964866638184
    3. 'for' → logprob: -7.446496486663818
    4. '   ' → logprob: -7.696496486663818
    5. ' for' → logprob: -7.946496486663818
    6. ' on' → logprob: -9.69649600982666
    7. '0' → logprob: -9.94649600982666
    8. ' ' → logprob: -11.69649600982666
    9. 'on' → logprob: -11.69649600982666
    10. ' pour' → logprob: -11.82149600982666

Token 409: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1288881301879883
    2. 'dp' → logprob: -1.2538881301879883
    3. ' =' → logprob: -1.5038881301879883
    4. '=' → logprob: -2.7538881301879883
    5. '0' → logprob: -3.6288881301879883
    6. 'max' → logprob: -3.7538881301879883
    7. ' maximale' → logprob: -3.7538881301879883
    8. ' dp' → logprob: -4.628888130187988
    9. ' ' → logprob: -4.878888130187988
    10. '[' → logprob: -4.878888130187988

Token 410: 'ulle' (ID: 14644)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -1.233079433441162
    2. 'ulle' → logprob: -1.233079433441162
    3. '=' → logprob: -1.858079433441162
    4. 'ég' → logprob: -1.983079433441162
    5. 'dp' → logprob: -2.858079433441162
    6. '[' → logprob: -4.483079433441162
    7. 'ul' → logprob: -4.608079433441162
    8. '   ' → logprob: -4.608079433441162
    9. '0' → logprob: -4.858079433441162
    10. ' =' → logprob: -5.108079433441162

Token 411: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06315163522958755
    2. '   ' → logprob: -3.0631515979766846
    3. ' dp' → logprob: -5.188151836395264
    4. '[' → logprob: -5.438151836395264
    5. ' =' → logprob: -5.688151836395264
    6. '
' → logprob: -8.313151359558105
    7. '(dp' → logprob: -9.063151359558105
    8. 'for' → logprob: -9.188151359558105
    9. ',' → logprob: -9.188151359558105
    10. '=' → logprob: -9.313151359558105

Token 412: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0722804144024849
    2. '0' → logprob: -3.1972804069519043
    3. ' dp' → logprob: -3.6972804069519043
    4. '   ' → logprob: -6.822280406951904
    5. 'for' → logprob: -6.822280406951904
    6. ' for' → logprob: -7.197280406951904
    7. ' ' → logprob: -7.947280406951904
    8. '[' → logprob: -8.447280883789062
    9. 'j' → logprob: -9.572280883789062
    10. ' pour' → logprob: -9.697280883789062

Token 413: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14948467910289764
    2. '0' → logprob: -2.024484634399414
    3. ' dp' → logprob: -6.524484634399414
    4. 'pas' → logprob: -6.899484634399414
    5. 'j' → logprob: -7.149484634399414
    6. 'pour' → logprob: -7.524484634399414
    7. 'dans' → logprob: -7.649484634399414
    8. 'à' → logprob: -7.899484634399414
    9. 'for' → logprob: -8.149484634399414
    10. ' ' → logprob: -8.274484634399414

Token 414: ' groupe' (ID: 29494)
  Prédit: ' groupes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -0.03468381240963936
    2. ']' → logprob: -4.909683704376221
    3. 'groups' → logprob: -5.034683704376221
    4. ' groupe' → logprob: -5.284683704376221
    5. ' groups' → logprob: -5.284683704376221
    6. 'group' → logprob: -6.159683704376221
    7. ',' → logprob: -6.284683704376221
    8. ' group' → logprob: -6.784683704376221
    9. '][' → logprob: -6.909683704376221
    10. ' éléments' → logprob: -7.159683704376221

Token 415: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2847512662410736
    2. '   ' → logprob: -1.659751296043396
    3. ' dp' → logprob: -3.9097511768341064
    4. ' =' → logprob: -4.2847514152526855
    5. '[' → logprob: -4.5347514152526855
    6. '][' → logprob: -4.7847514152526855
    7. 'for' → logprob: -6.2847514152526855
    8. ' for' → logprob: -7.2847514152526855
    9. ']' → logprob: -7.5347514152526855
    10. ',' → logprob: -8.034750938415527

Token 416: ' hors' (ID: 26087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08706501871347427
    2. 'dp' → logprob: -2.8370649814605713
    3. ' ' → logprob: -4.21206521987915
    4. ' dp' → logprob: -5.33706521987915
    5. '[' → logprob: -5.58706521987915
    6. '   ' → logprob: -7.58706521987915
    7. 'k' → logprob: -7.83706521987915
    8. '1' → logprob: -8.462064743041992
    9. 'False' → logprob: -9.462064743041992
    10. ' k' → logprob: -10.212064743041992

Token 417: ' segment' (ID: 14806)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9070532917976379
    2. 'segment' → logprob: -1.1570532321929932
    3. 's' → logprob: -2.782053232192993
    4. 'de' → logprob: -2.907053232192993
    5. '   ' → logprob: -3.407053232192993
    6. ' de' → logprob: -3.907053232192993
    7. ' segment' → logprob: -3.907053232192993
    8. 'sé' → logprob: -3.907053232192993
    9. ' groupe' → logprob: -4.657053470611572
    10. 'selection' → logprob: -4.782053470611572

Token 418: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17474836111068726
    2. '   ' → logprob: -1.924748420715332
    3. '[' → logprob: -5.424748420715332
    4. ' =' → logprob: -5.799748420715332
    5. ' dp' → logprob: -6.049748420715332
    6. '.
' → logprob: -6.424748420715332
    7. '
' → logprob: -6.674748420715332
    8. '(dp' → logprob: -8.174748420715332
    9. '=' → logprob: -8.549748420715332
    10. '.' → logprob: -8.549748420715332

Token 419: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10195356607437134
    2. '   ' → logprob: -2.3519535064697266
    3. ' dp' → logprob: -6.351953506469727
    4. '	dp' → logprob: -13.226953506469727
    5. 'for' → logprob: -16.226953506469727
    6. ' ' → logprob: -16.851953506469727
    7. '_dp' → logprob: -17.726953506469727
    8. '(dp' → logprob: -17.851953506469727
    9. '  ' → logprob: -18.101953506469727
    10. '    
' → logprob: -18.601953506469727

Token 420: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00029959288076497614
    2. '   ' → logprob: -8.500299453735352
    3. ' dp' → logprob: -9.250299453735352
    4. 'for' → logprob: -17.37529945373535
    5. '	dp' → logprob: -17.37529945373535
    6. ' ' → logprob: -19.87529945373535
    7. '_dp' → logprob: -20.50029945373535
    8. '(dp' → logprob: -21.00029945373535
    9. ' for' → logprob: -21.00029945373535
    10. '    
' → logprob: -21.00029945373535

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.625001907348633
    3. ' [' → logprob: -15.250001907348633
    4. '][' → logprob: -16.125001907348633
    5. 's' → logprob: -16.500001907348633
    6. 'def' → logprob: -18.250001907348633
    7. ')[' → logprob: -18.250001907348633
    8. '
' → logprob: -18.250001907348633
    9. '=' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.750001907348633

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '[' → logprob: -15.000001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '][' → logprob: -17.875001907348633
    6. '00' → logprob: -18.750001907348633
    7. '۰' → logprob: -18.750001907348633
    8. '
' → logprob: -18.875001907348633
    9. '(' → logprob: -19.500001907348633
    10. '000' → logprob: -19.625001907348633

Token 423: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.006006828509271e-05
    2. ']' → logprob: -10.000080108642578
    3. '[' → logprob: -10.375080108642578
    4. ' ][' → logprob: -13.000080108642578
    5. '0' → logprob: -14.875080108642578
    6. ']
' → logprob: -15.125080108642578
    7. '][-' → logprob: -15.750080108642578
    8. '   ' → logprob: -16.375080108642578
    9. ']][' → logprob: -16.750080108642578
    10. '"][' → logprob: -17.250080108642578

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -19.125
    4. '   ' → logprob: -20.125
    5. '
' → logprob: -20.3125
    6. '000' → logprob: -20.6875
    7. '০' → logprob: -20.8125
    8. '][' → logprob: -20.875
    9. '00' → logprob: -20.875
    10. '０' → logprob: -21.0625

Token 425: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.824579784530215e-05
    2. ']' → logprob: -9.8750581741333
    3. '[' → logprob: -12.3750581741333
    4. ' ][' → logprob: -13.3750581741333
    5. '0' → logprob: -14.3750581741333
    6. ']
' → logprob: -15.3750581741333
    7. '][-' → logprob: -16.375059127807617
    8. ']][' → logprob: -17.000059127807617
    9. '"][' → logprob: -17.875059127807617
    10. ''][' → logprob: -17.875059127807617

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.500000953674316
    3. '۰' → logprob: -18.125
    4. ' ' → logprob: -18.25
    5. ']' → logprob: -19.5
    6. 'False' → logprob: -20.75
    7. '০' → logprob: -20.75
    8. '```' → logprob: -21.8125
    9. '   ' → logprob: -22.25
    10. '０' → logprob: -22.375

Token 427: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.088346359931165e-07
    2. ']=' → logprob: -14.125000953674316
    3. ' ]' → logprob: -16.375
    4. '=' → logprob: -19.5
    5. ']
' → logprob: -20.5
    6. '']' → logprob: -21.75
    7. ')' → logprob: -21.875
    8. ' =' → logprob: -23.5
    9. '"]' → logprob: -23.5
    10. '   ' → logprob: -23.625

Token 428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007107630372047424
    2. ' =' → logprob: -7.250710964202881
    3. ']=' → logprob: -14.500710487365723
    4. ']' → logprob: -15.250710487365723
    5. ')=' → logprob: -19.37571144104004
    6. '=True' → logprob: -19.87571144104004
    7. '[' → logprob: -19.87571144104004
    8. '=

' → logprob: -19.87571144104004
    9. '=int' → logprob: -20.12571144104004
    10. ')' → logprob: -20.25071144104004

Token 429: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -20.75
    4. '00' → logprob: -22.125
    5. '000' → logprob: -22.75
    6. '   ' → logprob: -23.125
    7. '०' → logprob: -24.25
    8. '```' → logprob: -24.25
    9. '০' → logprob: -24.375
    10. '٠' → logprob: -24.5

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '۰' → logprob: -21.625
    4. '00' → logprob: -22.625
    5. '000' → logprob: -23.0
    6. '０' → logprob: -24.625
    7. '   ' → logprob: -24.625
    8. '٠' → logprob: -24.75
    9. '०' → logprob: -25.0
    10. '০' → logprob: -25.125

Token 431: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4245959222316742
    2. ' for' → logprob: -1.2995959520339966
    3. 'for' → logprob: -2.674595832824707
    4. '    
' → logprob: -6.549595832824707
    5. '\n' → logprob: -7.424595832824707
    6. '<|end|>' → logprob: -7.549595832824707
    7. '
' → logprob: -7.674595832824707
    8. ' 
' → logprob: -7.924595832824707
    9. ' ' → logprob: -8.049595832824707
    10. '  
' → logprob: -8.424595832824707

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37986132502555847
    2. ' for' → logprob: -1.2548613548278809
    3. 'for' → logprob: -3.504861354827881
    4. '    
' → logprob: -8.004860877990723
    5. '	for' → logprob: -8.129860877990723
    6. ' 
' → logprob: -9.379860877990723
    7. ' ' → logprob: -10.129860877990723
    8. '```' → logprob: -10.129860877990723
    9. '
' → logprob: -10.629860877990723
    10. '\n' → logprob: -11.129860877990723

Token 433: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0196266807615757
    2. '   ' → logprob: -4.019626617431641
    3. ' for' → logprob: -6.519626617431641
    4. '	for' → logprob: -14.39462661743164
    5. '    
' → logprob: -14.89462661743164
    6. '```' → logprob: -15.01962661743164
    7. ' ' → logprob: -15.76962661743164
    8. '
' → logprob: -16.39462661743164
    9. ' 
' → logprob: -18.14462661743164
    10. '    ' → logprob: -18.14462661743164

Token 434: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.12500762939453
    4. '```' → logprob: -19.87500762939453
    5. 'from' → logprob: -22.25000762939453
    6. '
' → logprob: -23.37500762939453
    7. '#' → logprob: -23.50000762939453
    8. '	for' → logprob: -23.50000762939453
    9. 'import' → logprob: -24.50000762939453
    10. ' ' → logprob: -24.50000762939453

Token 435: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.019877620041370392
    2. 'placer' → logprob: -4.2698774337768555
    3. 'p' → logprob: -5.7698774337768555
    4. 'place' → logprob: -7.5198774337768555
    5. 'arque' → logprob: -7.6448774337768555
    6. '   ' → logprob: -8.144877433776855
    7. 'er' → logprob: -8.269877433776855
    8. 'plit' → logprob: -8.394877433776855
    9. 'ar' → logprob: -8.519877433776855
    10. 'onter' → logprob: -8.894877433776855

Token 436: 'issage' (ID: 63863)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.351006418466568
    2. 'issage' → logprob: -1.2260063886642456
    3. 'iss' → logprob: -6.851006507873535
    4. 'i' → logprob: -7.601006507873535
    5. '   ' → logprob: -7.726006507873535
    6. 'er' → logprob: -8.226006507873535
    7. 'r' → logprob: -8.976006507873535
    8. 'issement' → logprob: -10.226006507873535
    9. 'isser' → logprob: -10.351006507873535
    10. 'is' → logprob: -11.726006507873535

Token 437: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011170781217515469
    2. ' for' → logprob: -5.011170864105225
    3. ' de' → logprob: -5.886170864105225
    4. '    ' → logprob: -7.011170864105225
    5. ' des' → logprob: -7.886170864105225
    6. 'for' → logprob: -8.511170387268066
    7. ' ' → logprob: -10.511170387268066
    8. '    
' → logprob: -10.636170387268066
    9. 'de' → logprob: -10.886170387268066
    10. ')' → logprob: -11.136170387268066

Token 438: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04916837811470032
    2. 'range' → logprob: -3.174168348312378
    3. ' n' → logprob: -5.799168586730957
    4. ' i' → logprob: -6.049168586730957
    5. 'i' → logprob: -7.924168586730957
    6. 'n' → logprob: -8.174168586730957
    7. ' for' → logprob: -9.799168586730957
    8. '   ' → logprob: -10.674168586730957
    9. ' la' → logprob: -10.674168586730957
    10. 'for' → logprob: -12.424168586730957

Token 439: ' table' (ID: 3293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10684433579444885
    2. 'range' → logprob: -2.356844425201416
    3. ' for' → logprob: -5.356844425201416
    4. ' range' → logprob: -6.356844425201416
    5. '   ' → logprob: -8.981843948364258
    6. '```' → logprob: -10.606843948364258
    7. 'r' → logprob: -11.856843948364258
    8. 'n' → logprob: -13.106843948364258
    9. 'i' → logprob: -13.481843948364258
    10. 'or' → logprob: -14.231843948364258

Token 440: ' DP' (ID: 51992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013485688250511885
    2. ' for' → logprob: -6.876348495483398
    3. '
' → logprob: -8.751348495483398
    4. '    
' → logprob: -9.126348495483398
    5. 'for' → logprob: -10.126348495483398
    6. ':' → logprob: -12.626348495483398
    7. '```' → logprob: -13.626348495483398
    8. '	for' → logprob: -13.876348495483398
    9. '\n' → logprob: -14.126348495483398
    10. ',' → logprob: -14.501348495483398

Token 441: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006678790668956935
    2. ' for' → logprob: -7.875668048858643
    3. '    
' → logprob: -8.875667572021484
    4. '
' → logprob: -9.000667572021484
    5. 'for' → logprob: -10.875667572021484
    6. ':' → logprob: -13.375667572021484
    7. '\n' → logprob: -13.625667572021484
    8. '	for' → logprob: -13.875667572021484
    9. ',' → logprob: -14.375667572021484
    10. ' 
' → logprob: -15.375667572021484

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024719050154089928
    2. ' for' → logprob: -3.774718999862671
    3. 'for' → logprob: -6.52471923828125
    4. '```' → logprob: -13.02471923828125
    5. '	for' → logprob: -13.64971923828125
    6. '   ' → logprob: -13.77471923828125
    7. '    
' → logprob: -14.27471923828125
    8. ' ' → logprob: -15.77471923828125
    9. '
' → logprob: -16.27471923828125
    10. '   ' → logprob: -16.27471923828125

Token 443: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6691656112670898
    2. 'for' (adapté à ' for') → logprob: -0.9191656112670898
    3. '   ' → logprob: -2.41916561126709
    4. '```' → logprob: -11.04416561126709
    5. '    
' → logprob: -15.29416561126709
    6. '	for' → logprob: -15.41916561126709
    7. '``' → logprob: -16.044166564941406
    8. '
' → logprob: -16.544166564941406
    9. '_for' → logprob: -17.919166564941406
    10. '\n' → logprob: -17.919166564941406

Token 444: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0003034074034076184
    2. 'i' → logprob: -8.125303268432617
    3. ' ' → logprob: -11.875303268432617
    4. '	i' → logprob: -15.875303268432617
    5. ' ' → logprob: -16.000303268432617
    6. '_' → logprob: -17.000303268432617
    7. '_i' → logprob: -17.375303268432617
    8. ' _' → logprob: -17.375303268432617
    9. ' ‌' → logprob: -17.500303268432617
    10. ' ' → logprob: -18.250303268432617

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017336098244413733
    2. 'in' → logprob: -6.376733779907227
    3. ' ' → logprob: -11.126733779907227
    4. ' i' → logprob: -11.876733779907227
    5. '	in' → logprob: -12.626733779907227
    6. '   ' → logprob: -13.751733779907227
    7. '<|end|>' → logprob: -13.876733779907227
    8. '1' → logprob: -13.876733779907227
    9. '[' → logprob: -14.501733779907227
    10. '+' → logprob: -14.751733779907227

Token 446: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022473573684692
    2. ' range' → logprob: -1.9102246761322021
    3. '(range' → logprob: -15.535224914550781
    4. '   ' → logprob: -15.910224914550781
    5. ' ' → logprob: -16.28522491455078
    6. '1' → logprob: -16.28522491455078
    7. 'in' → logprob: -16.66022491455078
    8. '```' → logprob: -17.28522491455078
    9. '	range' → logprob: -17.78522491455078
    10. ')' → logprob: -18.41022491455078

Token 447: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.162282367469743e-05
    2. '1' → logprob: -9.375091552734375
    3. '(n' → logprob: -12.750091552734375
    4. '   ' → logprob: -13.250091552734375
    5. ' (' → logprob: -13.375091552734375
    6. ' ' → logprob: -14.875091552734375
    7. '(i' → logprob: -16.125091552734375
    8. '(
' → logprob: -18.125091552734375
    9. 'n' → logprob: -18.750091552734375
    10. '    ' → logprob: -20.000091552734375

Token 448: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4100502133369446
    2. '):' → logprob: -1.2850501537322998
    3. '+' → logprob: -2.9100501537323
    4. '   ' → logprob: -5.785050392150879
    5. '1' → logprob: -6.410050392150879
    6. ' +' → logprob: -8.410050392150879
    7. '-' → logprob: -9.035050392150879
    8. ')' → logprob: -9.160050392150879
    9. '):
' → logprob: -10.660050392150879
    10. '=' → logprob: -11.035050392150879

Token 449: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012396035715937614
    2. '   ' → logprob: -4.762395858764648
    3. ' for' → logprob: -5.637395858764648
    4. '        
' → logprob: -9.137395858764648
    5. '    
' → logprob: -10.137395858764648
    6. 'for' → logprob: -11.137395858764648
    7. ' 
' → logprob: -11.512395858764648
    8. '```' → logprob: -11.512395858764648
    9. '    ' → logprob: -11.637395858764648
    10. '           ' → logprob: -12.512395858764648

Token 450: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05807986855506897
    2. ' for' → logprob: -2.933079957962036
    3. 'for' → logprob: -6.308079719543457
    4. '       ' → logprob: -6.808079719543457
    5. '    
' → logprob: -9.058079719543457
    6. ' ' → logprob: -9.808079719543457
    7. '   ' → logprob: -10.308079719543457
    8. '	for' → logprob: -10.683079719543457
    9. '
' → logprob: -11.308079719543457
    10. '        
' → logprob: -11.933079719543457

Token 451: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49299171566963196
    2. ' for' → logprob: -0.9929916858673096
    3. 'for' → logprob: -3.9929916858673096
    4. '    
' → logprob: -9.11799144744873
    5. '    ' → logprob: -9.99299144744873
    6. '   ' → logprob: -10.24299144744873
    7. ' ' → logprob: -10.61799144744873
    8. '	for' → logprob: -10.86799144744873
    9. '       ' → logprob: -10.99299144744873
    10. '   ' → logprob: -11.74299144744873

Token 452: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05362937971949577
    2. ' range' → logprob: -3.8036293983459473
    3. ' ' → logprob: -4.053629398345947
    4. 'i' → logprob: -5.303629398345947
    5. ' in' → logprob: -6.053629398345947
    6. 'range' → logprob: -6.678629398345947
    7. ' )' → logprob: -7.053629398345947
    8. ')' → logprob: -7.178629398345947
    9. ' n' → logprob: -7.303629398345947
    10. '    ' → logprob: -7.428629398345947

Token 453: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5247947573661804
    2. ' ' → logprob: -1.2747948169708252
    3. ' élément' → logprob: -2.899794816970825
    4. ' element' → logprob: -3.274794816970825
    5. '   ' → logprob: -4.524794578552246
    6. 'i' → logprob: -4.649794578552246
    7. 'element' → logprob: -5.649794578552246
    8. 'élé' → logprob: -5.649794578552246
    9. ' )' → logprob: -5.899794578552246
    10. '  ' → logprob: -6.774794578552246

Token 454: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006950391922146082
    2. ' for' → logprob: -5.756950378417969
    3. '       ' → logprob: -6.881950378417969
    4. ':' → logprob: -6.881950378417969
    5. ' :' → logprob: -7.506950378417969
    6. '    
' → logprob: -7.631950378417969
    7. ',' → logprob: -8.131950378417969
    8. ' ,' → logprob: -9.631950378417969
    9. '    ' → logprob: -9.631950378417969
    10. ' :
' → logprob: -10.006950378417969

Token 455: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2825998067855835
    2. 'i' → logprob: -1.7825998067855835
    3. ' range' → logprob: -1.9075998067855835
    4. 'n' → logprob: -2.032599925994873
    5. 'range' → logprob: -2.157599925994873
    6. ' n' → logprob: -3.282599925994873
    7. ' i' → logprob: -3.407599925994873
    8. ' la' → logprob: -3.407599925994873
    9. ' a' → logprob: -3.532599925994873
    10. 'l' → logprob: -4.407599925994873

Token 456: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015962224453687668
    2. ''' → logprob: -5.26596212387085
    3. ''a' → logprob: -5.39096212387085
    4. ''entrée' → logprob: -6.26596212387085
    5. 'range' → logprob: -6.76596212387085
    6. 'e' → logprob: -7.39096212387085
    7. ''ordre' → logprob: -7.64096212387085
    8. ''utilisateur' → logprob: -8.015962600708008
    9. 'input' → logprob: -8.890962600708008
    10. 'i' → logprob: -9.015962600708008

Token 457: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6536365151405334
    2. 'élé' → logprob: -0.7786365151405334
    3. 'sequence' → logprob: -4.653636455535889
    4. 'sé' → logprob: -5.778636455535889
    5. ' a' → logprob: -6.153636455535889
    6. 'é' → logprob: -7.028636455535889
    7. 's' → logprob: -7.153636455535889
    8. 'él' → logprob: -7.403636455535889
    9. 'i' → logprob: -7.403636455535889
    10. ' sequence' → logprob: -7.778636455535889

Token 458: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -9.269565634895116e-05
    2. 'ments' → logprob: -9.500092506408691
    3. 'm' → logprob: -11.750092506408691
    4. 'me' → logprob: -13.000092506408691
    5. 'men' → logprob: -13.625092506408691
    6. 'mentation' → logprob: -13.625092506408691
    7. '   ' → logprob: -13.750092506408691
    8. '```' → logprob: -14.250092506408691
    9. 'mente' → logprob: -14.750092506408691
    10. 'nt' → logprob: -14.750092506408691

Token 459: ' considéré' (ID: 136279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005192489828914404
    2. ',' → logprob: -6.130192279815674
    3. ':' → logprob: -6.630192279815674
    4. ':
' → logprob: -7.255192279815674
    5. ' :
' → logprob: -8.255192756652832
    6. ' ,' → logprob: -9.005192756652832
    7. '    
' → logprob: -9.005192756652832
    8. ' :' → logprob: -9.380192756652832
    9. '       ' → logprob: -9.380192756652832
    10. ',
' → logprob: -9.505192756652832

Token 460: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33941957354545593
    2. ':' → logprob: -1.3394196033477783
    3. ':
' → logprob: -4.589419364929199
    4. ',' → logprob: -5.089419364929199
    5. ' :' → logprob: -6.089419364929199
    6. '    
' → logprob: -6.214419364929199
    7. '
' → logprob: -6.214419364929199
    8. ' :
' → logprob: -6.464419364929199
    9. '       ' → logprob: -7.339419364929199
    10. ' ,' → logprob: -8.5894193649292

Token 461: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07750603556632996
    2. ' for' → logprob: -2.9525060653686523
    3. '       ' → logprob: -3.8275060653686523
    4. 'for' → logprob: -7.952506065368652
    5. '    
' → logprob: -9.452506065368652
    6. '   ' → logprob: -9.702506065368652
    7. '    ' → logprob: -10.202506065368652
    8. ' ' → logprob: -10.702506065368652
    9. ' ' → logprob: -11.202506065368652
    10. '        
' → logprob: -11.327506065368652

Token 462: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3909189999103546
    2. 'for' (adapté à ' for') → logprob: -1.1409189701080322
    3. '   ' → logprob: -5.515919208526611
    4. '	for' → logprob: -11.140918731689453
    5. ' ' → logprob: -13.515918731689453
    6. '       ' → logprob: -14.015918731689453
    7. ' ' → logprob: -15.015918731689453
    8. '   ' → logprob: -15.265918731689453
    9. '    
' → logprob: -15.640918731689453
    10. '    ' → logprob: -15.640918731689453

Token 463: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1002078503370285
    2. ' j' → logprob: -2.350207805633545
    3. '   ' → logprob: -14.475208282470703
    4. '	j' → logprob: -14.600208282470703
    5. '_j' → logprob: -16.350208282470703
    6. '(j' → logprob: -16.350208282470703
    7. '$j' → logprob: -16.975208282470703
    8. ' ' → logprob: -17.100208282470703
    9. '[j' → logprob: -17.600208282470703
    10. '    ' → logprob: -17.600208282470703

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005707867676392198
    2. 'in' → logprob: -7.500570774078369
    3. ')' → logprob: -12.250571250915527
    4. ' ' → logprob: -13.000571250915527
    5. '(' → logprob: -13.125571250915527
    6. '1' → logprob: -13.500571250915527
    7. '0' → logprob: -13.625571250915527
    8. '   ' → logprob: -13.750571250915527
    9. '[' → logprob: -14.125571250915527
    10. ' i' → logprob: -14.500571250915527

Token 465: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008621904999017715
    2. ' range' → logprob: -4.758621692657471
    3. '(range' → logprob: -12.258622169494629
    4. '(' → logprob: -13.383622169494629
    5. '4' → logprob: -13.758622169494629
    6. '	range' → logprob: -18.758621215820312
    7. '   ' → logprob: -19.133621215820312
    8. ' ' → logprob: -19.758621215820312
    9. ' in' → logprob: -19.883621215820312
    10. '3' → logprob: -20.008621215820312

Token 466: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001093841710826382
    2. '4' → logprob: -9.125109672546387
    3. '5' → logprob: -15.000109672546387
    4. ' (' → logprob: -17.50010871887207
    5. '(
' → logprob: -17.62510871887207
    6. '   ' → logprob: -19.25010871887207
    7. '((' → logprob: -19.37510871887207
    8. ' ' → logprob: -19.50010871887207
    9. '0' → logprob: -19.87510871887207
    10. '=' → logprob: -20.37510871887207

Token 467: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5094070477061905e-05
    2. '5' → logprob: -11.125015258789062
    3. '0' → logprob: -15.250015258789062
    4. '(' → logprob: -17.125015258789062
    5. '3' → logprob: -19.500015258789062
    6. ' ' → logprob: -20.750015258789062
    7. '```' → logprob: -21.875015258789062
    8. '４' → logprob: -22.375015258789062
    9. 'min' → logprob: -22.500015258789062
    10. 'i' → logprob: -22.500015258789062

Token 468: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0487092100083828
    2. '):
' → logprob: -3.0487091541290283
    3. '+' → logprob: -9.67370891571045
    4. ' ):' → logprob: -10.67370891571045
    5. '   ' → logprob: -10.92370891571045
    6. '       ' → logprob: -11.67370891571045
    7. '):
' → logprob: -12.42370891571045
    8. ':' → logprob: -13.17370891571045
    9. ' ):
' → logprob: -14.17370891571045
    10. '):

' → logprob: -14.17370891571045

Token 469: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021455097943544388
    2. '<|end|>' → logprob: -4.39645528793335
    3. '       ' → logprob: -5.64645528793335
    4. ' ' → logprob: -6.39645528793335
    5. '               ' → logprob: -6.52145528793335
    6. ' for' → logprob: -7.77145528793335
    7. '<|end|>' → logprob: -8.146454811096191
    8. '   ' → logprob: -8.271454811096191
    9. '         ' → logprob: -8.396454811096191
    10. '        ' → logprob: -8.771454811096191

Token 470: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39064478874206543
    2. ' for' → logprob: -1.2656447887420654
    3. 'for' → logprob: -3.3906447887420654
    4. '   ' → logprob: -5.0156450271606445
    5. '           ' → logprob: -7.7656450271606445
    6. ' ' → logprob: -8.640645027160645
    7. '	for' → logprob: -8.765645027160645
    8. '[' → logprob: -9.265645027160645
    9. '	   ' → logprob: -10.515645027160645
    10. '<|end|>' → logprob: -10.640645027160645

Token 471: ' Pour' (ID: 13931)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06500187516212463
    2. 'for' → logprob: -3.190001964569092
    3. '   ' → logprob: -4.440001964569092
    4. ' ' → logprob: -5.065001964569092
    5. '<|end|>' → logprob: -6.065001964569092
    6. '       ' → logprob: -7.190001964569092
    7. '	for' → logprob: -8.940001487731934
    8. '4' → logprob: -9.315001487731934
    9. '[' → logprob: -9.440001487731934
    10. '<|end|>' → logprob: -9.815001487731934

Token 472: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2098197489976883
    2. 'j' → logprob: -1.7098197937011719
    3. ' range' → logprob: -5.334819793701172
    4. '4' → logprob: -6.334819793701172
    5. ' ' → logprob: -6.709819793701172
    6. 'range' → logprob: -8.209819793701172
    7. '0' → logprob: -8.834819793701172
    8. '3' → logprob: -9.084819793701172
    9. '   ' → logprob: -11.334819793701172
    10. '	j' → logprob: -12.709819793701172

Token 473: ' nombre' (ID: 9733)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2521267235279083
    2. 'j' → logprob: -1.502126693725586
    3. ' range' → logprob: -8.877126693725586
    4. ' possible' → logprob: -11.252126693725586
    5. 'range' → logprob: -11.627126693725586
    6. '(j' → logprob: -11.877126693725586
    7. ' ' → logprob: -12.252126693725586
    8. '   ' → logprob: -12.502126693725586
    9. '0' → logprob: -12.752126693725586
    10. '[j' → logprob: -12.752126693725586

Token 474: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10651420801877975
    2. ' d' → logprob: -2.9815142154693604
    3. ' in' → logprob: -3.4815142154693604
    4. 'in' → logprob: -5.106513977050781
    5. 'de' → logprob: -5.231513977050781
    6. ' of' → logprob: -5.731513977050781
    7. 'd' → logprob: -6.481513977050781
    8. '   ' → logprob: -7.231513977050781
    9. ' des' → logprob: -7.481513977050781
    10. 'of' → logprob: -7.731513977050781

Token 475: ' groupes' (ID: 72206)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6454558372497559
    2. ' groupes' → logprob: -1.2704558372497559
    3. 'j' → logprob: -2.270455837249756
    4. ' group' → logprob: -3.145455837249756
    5. 'groups' → logprob: -3.395455837249756
    6. ' j' → logprob: -4.520455837249756
    7. '   ' → logprob: -6.145455837249756
    8. ' groups' → logprob: -6.770455837249756
    9. ' groupe' → logprob: -8.520456314086914
    10. 'g' → logprob: -8.645456314086914

Token 476: ' possibles' (ID: 97753)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3826165795326233
    2. ':' → logprob: -1.6326165199279785
    3. '       ' → logprob: -3.1326165199279785
    4. ':
' → logprob: -3.2576165199279785
    5. ',' → logprob: -4.5076165199279785
    6. '[' → logprob: -5.3826165199279785
    7. ' (' → logprob: -5.6326165199279785
    8. ' in' → logprob: -5.7576165199279785
    9. '):
' → logprob: -5.7576165199279785
    10. '   ' → logprob: -5.7576165199279785

Token 477: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043441470712423325
    2. '       ' → logprob: -3.7934415340423584
    3. ':' → logprob: -4.043441295623779
    4. ':
' → logprob: -7.168441295623779
    5. ',' → logprob: -7.293441295623779
    6. '   ' → logprob: -8.168441772460938
    7. ' for' → logprob: -8.543441772460938
    8. '               ' → logprob: -8.543441772460938
    9. ' :' → logprob: -9.293441772460938
    10. ' (' → logprob: -10.043441772460938

Token 478: 'max' (ID: 3228)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20538371801376343
    2. '4' → logprob: -1.7053837776184082
    3. ' j' → logprob: -6.330383777618408
    4. '   ' → logprob: -6.830383777618408
    5. '0' → logprob: -7.455383777618408
    6. ' ' → logprob: -8.20538330078125
    7. ')' → logprob: -9.33038330078125
    8. '(j' → logprob: -9.83038330078125
    9. '3' → logprob: -10.45538330078125
    10. '5' → logprob: -11.08038330078125

Token 479: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11446400731801987
    2. '4' → logprob: -2.489464044570923
    3. '   ' → logprob: -4.364463806152344
    4. ' =' → logprob: -4.864463806152344
    5. '=j' → logprob: -6.489463806152344
    6. ' ' → logprob: -6.864463806152344
    7. '(' → logprob: -7.239463806152344
    8. '(j' → logprob: -7.739463806152344
    9. ')' → logprob: -8.364463806152344
    10. 'j' → logprob: -8.489463806152344

Token 480: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.2987729102605954e-05
    2. '   ' → logprob: -10.875042915344238
    3. '=' → logprob: -11.500042915344238
    4. '4' → logprob: -11.625042915344238
    5. 'j' → logprob: -12.875042915344238
    6. ' ' → logprob: -13.375042915344238
    7. '```' → logprob: -14.875042915344238
    8. '1' → logprob: -16.000043869018555
    9. '
' → logprob: -16.625043869018555
    10. ' =' → logprob: -16.750043869018555

Token 481: ' autor' (ID: 13432)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25605344772338867
    2. '):
' → logprob: -1.5060534477233887
    3. '       ' → logprob: -6.006053447723389
    4. ')' → logprob: -6.756053447723389
    5. '   ' → logprob: -8.756053924560547
    6. '           ' → logprob: -9.256053924560547
    7. ' ):' → logprob: -9.256053924560547
    8. '):
' → logprob: -10.006053924560547
    9. '):

' → logprob: -10.506053924560547
    10. ' ):
' → logprob: -10.756053924560547

Token 482: 'isés' (ID: 58890)
  Prédit: 'isés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.18815433979034424
    2. 'isées' → logprob: -1.8131543397903442
    3. 'isé' → logprob: -5.313154220581055
    4. 'is' → logprob: -6.063154220581055
    5. 'isée' → logprob: -6.938154220581055
    6. 'ised' → logprob: -9.313154220581055
    7. 'ized' → logprob: -11.063154220581055
    8. '```' → logprob: -11.438154220581055
    9. ')' → logprob: -12.188154220581055
    10. '</' → logprob: -12.188154220581055

Token 483: ' ici' (ID: 27994)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21131733059883118
    2. '):' → logprob: -1.7113173007965088
    3. ')' → logprob: -5.461317539215088
    4. '       ' → logprob: -5.461317539215088
    5. '           ' → logprob: -6.961317539215088
    6. '):

' → logprob: -8.83631706237793
    7. ',' → logprob: -8.83631706237793
    8. '):
' → logprob: -10.08631706237793
    9. '   ' → logprob: -10.96131706237793
    10. '),' → logprob: -10.96131706237793

Token 484: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10599401593208313
    2. '):' → logprob: -2.3559939861297607
    3. '           ' → logprob: -5.73099422454834
    4. '       ' → logprob: -6.10599422454834
    5. ')' → logprob: -8.85599422454834
    6. '):
' → logprob: -9.48099422454834
    7. '):

' → logprob: -10.48099422454834
    8. ' ):
' → logprob: -10.48099422454834
    9. ' ):' → logprob: -12.60599422454834
    10. ',' → logprob: -12.60599422454834

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002022258937358856
    2. '       ' → logprob: -7.0020222663879395
    3. ' for' → logprob: -7.2520222663879395
    4. '	       ' → logprob: -8.502021789550781
    5. 'for' → logprob: -9.252021789550781
    6. '               ' → logprob: -10.252021789550781
    7. '		' → logprob: -10.502021789550781
    8. '   ' → logprob: -12.002021789550781
    9. '         ' → logprob: -12.252021789550781
    10. '	' → logprob: -12.377021789550781

Token 486: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4007858633995056
    2. '           ' → logprob: -1.7757859230041504
    3. 'for' (adapté à ' for') → logprob: -1.9007859230041504
    4. '               ' → logprob: -4.65078592300415
    5. '       ' → logprob: -7.27578592300415
    6. '	for' → logprob: -7.65078592300415
    7. ' ' → logprob: -8.900785446166992
    8. '		' → logprob: -8.900785446166992
    9. '	       ' → logprob: -8.900785446166992
    10. ' ' → logprob: -9.400785446166992

Token 487: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023245712742209435
    2. ' k' → logprob: -3.7732458114624023
    3. '	k' → logprob: -16.148244857788086
    4. '   ' → logprob: -16.773244857788086
    5. '```' → logprob: -18.773244857788086
    6. ' ' → logprob: -18.898244857788086
    7. '{k' → logprob: -19.023244857788086
    8. '_k' → logprob: -19.273244857788086
    9. ',k' → logprob: -19.898244857788086
    10. '[k' → logprob: -19.898244857788086

Token 488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741312861442566
    2. 'in' → logprob: -0.9741312861442566
    3. '	in' → logprob: -11.22413158416748
    4. ' ' → logprob: -11.47413158416748
    5. 'In' → logprob: -11.59913158416748
    6. '<|end|>' → logprob: -11.59913158416748
    7. '[' → logprob: -13.34913158416748
    8. '_in' → logprob: -13.47413158416748
    9. '  ' → logprob: -13.84913158416748
    10. ')' → logprob: -13.97413158416748

Token 489: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010422171326354146
    2. ' range' → logprob: -7.001042366027832
    3. '[' → logprob: -9.001042366027832
    4. '2' → logprob: -11.876042366027832
    5. '(' → logprob: -15.251042366027832
    6. '(range' → logprob: -16.376041412353516
    7. '   ' → logprob: -17.251041412353516
    8. 'in' → logprob: -17.626041412353516
    9. ' [' → logprob: -18.251041412353516
    10. 'Range' → logprob: -19.001041412353516

Token 490: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007606747094541788
    2. '2' → logprob: -4.8826069831848145
    3. '(
' → logprob: -15.257606506347656
    4. '   ' → logprob: -15.382606506347656
    5. ' (' → logprob: -15.632606506347656
    6. ' ' → logprob: -17.257606506347656
    7. '[' → logprob: -17.507606506347656
    8. '=' → logprob: -18.382606506347656
    9. '```' → logprob: -18.507606506347656
    10. '{' → logprob: -18.632606506347656

Token 491: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -16.875
    4. '(' → logprob: -18.125
    5. ')' → logprob: -20.125
    6. '=' → logprob: -20.375
    7. '۲' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '﻿' → logprob: -21.25
    10. '２' → logprob: -21.25

Token 492: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002197836758568883
    2. '):
' → logprob: -6.252197742462158
    3. ' ):' → logprob: -8.502198219299316
    4. '           ' → logprob: -10.627198219299316
    5. ':' → logprob: -11.252198219299316
    6. ')' → logprob: -11.502198219299316
    7. '       ' → logprob: -12.502198219299316
    8. '               ' → logprob: -12.502198219299316
    9. ',' → logprob: -12.752198219299316
    10. '   ' → logprob: -12.752198219299316

Token 493: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014124725013971329
    2. '           ' → logprob: -4.764124870300293
    3. ' if' → logprob: -6.389124870300293
    4. '<|end|>' → logprob: -7.139124870300293
    5. '                       ' → logprob: -7.264124870300293
    6. '                               ' → logprob: -7.514124870300293
    7. '                   ' → logprob: -8.264124870300293
    8. '            ' → logprob: -8.639124870300293
    9. '                
' → logprob: -8.639124870300293
    10. ' ' → logprob: -8.639124870300293

Token 494: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21162870526313782
    2. ' if' → logprob: -1.7116286754608154
    3. '           ' → logprob: -5.5866289138793945
    4. 'if' → logprob: -5.7116289138793945
    5. '<|end|>' → logprob: -7.4616289138793945
    6. '                
' → logprob: -8.211628913879395
    7. '                       ' → logprob: -8.461628913879395
    8. ',' → logprob: -8.461628913879395
    9. '                               ' → logprob: -8.461628913879395
    10. ' #' → logprob: -8.586628913879395

Token 495: ' Pour' (ID: 13931)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.640774667263031
    2. '               ' → logprob: -1.1407747268676758
    3. ' #' → logprob: -2.515774726867676
    4. '#' → logprob: -3.640774726867676
    5. '           ' → logprob: -4.265774726867676
    6. ' next' → logprob: -5.265774726867676
    7. '   ' → logprob: -5.390774726867676
    8. ' for' → logprob: -5.515774726867676
    9. '                   ' → logprob: -5.765774726867676
    10. 'if' → logprob: -5.765774726867676

Token 496: ' chaque' (ID: 21194)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010777069255709648
    2. ' ' → logprob: -6.876077651977539
    3. '[' → logprob: -11.126077651977539
    4. '```' → logprob: -11.626077651977539
    5. 'range' → logprob: -11.751077651977539
    6. '(' → logprob: -11.876077651977539
    7. 'k' → logprob: -12.876077651977539
    8. ' range' → logprob: -13.126077651977539
    9. ' [' → logprob: -14.501077651977539
    10. '   ' → logprob: -15.501077651977539

Token 497: ' état' (ID: 59181)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6944395303726196
    2. ' k' → logprob: -0.6944395303726196
    3. ' ' → logprob: -7.56943941116333
    4. ' )' → logprob: -8.694439888000488
    5. ')' → logprob: -8.819439888000488
    6. ' possible' → logprob: -9.444439888000488
    7. ' espace' → logprob: -9.694439888000488
    8. '  ' → logprob: -10.444439888000488
    9. ' 
' → logprob: -10.444439888000488
    10. ' ' → logprob: -10.444439888000488

Token 498: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23527400195598602
    2. ':' → logprob: -2.110274076461792
    3. '           ' → logprob: -3.360274076461792
    4. '   ' → logprob: -4.610273838043213
    5. '                   ' → logprob: -4.610273838043213
    6. ' :' → logprob: -4.860273838043213
    7. ':
' → logprob: -5.485273838043213
    8. '                       ' → logprob: -5.735273838043213
    9. ' (' → logprob: -6.235273838043213
    10. ' dp' → logprob: -6.235273838043213

Token 499: ' "' (ID: 392)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3152419328689575
    2. '0' → logprob: -2.190241813659668
    3. '[' → logprob: -3.440241813659668
    4. ' ' → logprob: -3.690241813659668
    5. ' if' → logprob: -4.190241813659668
    6. ')' → logprob: -4.440241813659668
    7. ' [' → logprob: -4.815241813659668
    8. 'k' → logprob: -4.815241813659668
    9. '               ' → logprob: -4.815241813659668
    10. 'if' → logprob: -5.190241813659668

Token 500: 'non' (ID: 11741)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09392213821411133
    2. '0' → logprob: -2.8439221382141113
    3. ' k' → logprob: -4.468922138214111
    4. 'inside' → logprob: -5.343922138214111
    5. 'à' → logprob: -6.343922138214111
    6. 'in' → logprob: -6.593922138214111
    7. 'contin' → logprob: -6.843922138214111
    8. 'segment' → logprob: -7.093922138214111
    9. ' inside' → logprob: -7.218922138214111
    10. 'dp' → logprob: -7.218922138214111

Token 501: ' en' (ID: 469)
  Prédit: ' sélection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sélection' → logprob: -0.2344311624765396
    2. ' choisi' → logprob: -2.359431266784668
    3. 'sé' → logprob: -3.734431266784668
    4. 'selected' → logprob: -3.859431266784668
    5. ' selected' → logprob: -3.984431266784668
    6. ')' → logprob: -5.109431266784668
    7. 's' → logprob: -5.109431266784668
    8. ' selection' → logprob: -5.234431266784668
    9. ',' → logprob: -5.859431266784668
    10. 'selection' → logprob: -5.984431266784668

Token 502: ' cours' (ID: 10138)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5745640397071838
    2. '_segment' → logprob: -0.9495640397071838
    3. ' segment' → logprob: -4.074563980102539
    4. '_s' → logprob: -4.574563980102539
    5. '_' → logprob: -4.699563980102539
    6. '_seg' → logprob: -5.449563980102539
    7. 's' → logprob: -5.699563980102539
    8. '_g' → logprob: -5.949563980102539
    9. 'g' → logprob: -6.699563980102539
    10. 'seg' → logprob: -6.949563980102539

Token 503: ' de' (ID: 334)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20917655527591705
    2. '",' → logprob: -3.084176540374756
    3. ',' → logprob: -3.709176540374756
    4. ' de' → logprob: -3.834176540374756
    5. 'de' → logprob: -3.959176540374756
    6. ' ou' → logprob: -4.084176540374756
    7. ')' → logprob: -4.459176540374756
    8. ']' → logprob: -4.834176540374756
    9. '")' → logprob: -5.084176540374756
    10. '"]' → logprob: -5.209176540374756

Token 504: ' sélection' (ID: 43472)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.18181510269641876
    2. 'g' → logprob: -2.3068151473999023
    3. 'sé' → logprob: -3.3068151473999023
    4. 'selection' → logprob: -3.9318151473999023
    5. 's' → logprob: -5.181815147399902
    6. 'seg' → logprob: -6.431815147399902
    7. ' sélection' → logprob: -7.056815147399902
    8. 'cho' → logprob: -7.306815147399902
    9. '```' → logprob: -7.681815147399902
    10. 'select' → logprob: -8.181815147399902

Token 505: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12446893751621246
    2. ')"' → logprob: -2.749469041824341
    3. '",' → logprob: -3.624469041824341
    4. ')' → logprob: -3.874469041824341
    5. ',' → logprob: -6.124468803405762
    6. ']"' → logprob: -6.874468803405762
    7. ' "' → logprob: -7.124468803405762
    8. ')",' → logprob: -7.249468803405762
    9. '")' → logprob: -8.999468803405762
    10. ' ou' → logprob: -8.999468803405762

Token 506: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9584106802940369
    2. ':' → logprob: -1.5834107398986816
    3. '<|end|>' → logprob: -1.9584107398986816
    4. ',' → logprob: -2.0834107398986816
    5. '           ' → logprob: -2.8334107398986816
    6. ')' → logprob: -3.4584107398986816
    7. '               ' → logprob: -3.5834107398986816
    8. '):
' → logprob: -5.208410739898682
    9. ' :' → logprob: -5.333410739898682
    10. '<|end|>' → logprob: -5.458410739898682

Token 507: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08426764607429504
    2. ',' → logprob: -3.0842676162719727
    3. '),' → logprob: -3.9592676162719727
    4. ' )' → logprob: -5.334267616271973
    5. ' or' → logprob: -5.584267616271973
    6. '0' → logprob: -5.834267616271973
    7. ' ou' → logprob: -6.209267616271973
    8. ' ,' → logprob: -7.209267616271973
    9. ' ),' → logprob: -8.084267616271973
    10. ' ' → logprob: -8.334267616271973

Token 508: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014269021339714527
    2. '),' → logprob: -6.751426696777344
    3. ')
' → logprob: -9.501426696777344
    4. ' )' → logprob: -10.001426696777344
    5. ' or' → logprob: -10.126426696777344
    6. '")' → logprob: -10.751426696777344
    7. '):
' → logprob: -11.126426696777344
    8. ',' → logprob: -11.501426696777344
    9. '),
' → logprob: -11.751426696777344
    10. ' ou' → logprob: -11.751426696777344

Token 509: ' ou' (ID: 2031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1509935855865479
    2. ',' → logprob: -1.2759935855865479
    3. ')' → logprob: -1.9009935855865479
    4. '):' → logprob: -2.650993585586548
    5. '               ' → logprob: -3.025993585586548
    6. ':' → logprob: -3.025993585586548
    7. ' or' → logprob: -3.400993585586548
    8. '   ' → logprob: -3.650993585586548
    9. '       ' → logprob: -5.275993347167969
    10. '                       ' → logprob: -5.525993347167969

Token 510: ' "' (ID: 392)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03054407797753811
    2. ' ' → logprob: -3.5305440425872803
    3. ' en' → logprob: -7.655544281005859
    4. '"' → logprob: -8.65554428100586
    5. 'en' → logprob: -9.28054428100586
    6. ' "' → logprob: -10.03054428100586
    7. ' in' → logprob: -12.53054428100586
    8. ''en' → logprob: -13.53054428100586
    9. '   ' → logprob: -14.40554428100586
    10. ' ' → logprob: -14.53054428100586

Token 511: 'en' (ID: 262)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008308175019919872
    2. ' ' → logprob: -5.133308410644531
    3. 'en' → logprob: -6.758308410644531
    4. ' en' → logprob: -6.758308410644531
    5. ' in' → logprob: -10.008308410644531
    6. 'in' → logprob: -12.258308410644531
    7. '```' → logprob: -13.883308410644531
    8. 'selected' → logprob: -14.133308410644531
    9. ' selected' → logprob: -15.383308410644531
    10. ' ' → logprob: -15.508308410644531

Token 512: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.538841187953949
    2. ' cours' → logprob: -1.5388412475585938
    3. '_' → logprob: -2.2888412475585938
    4. '_c' → logprob: -2.4138412475585938
    5. ' course' → logprob: -6.038841247558594
    6. '_course' → logprob: -6.163841247558594
    7. '1' → logprob: -6.163841247558594
    8. 'course' → logprob: -6.413841247558594
    9. ' _' → logprob: -7.288841247558594
    10. ' ' → logprob: -7.663841247558594

Token 513: '"' (ID: 1)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20755644142627716
    2. 'de' → logprob: -1.7075564861297607
    3. 'd' → logprob: -6.332556247711182
    4. ')' → logprob: -6.957556247711182
    5. ' of' → logprob: -7.082556247711182
    6. '   ' → logprob: -7.207556247711182
    7. '_de' → logprob: -7.207556247711182
    8. ' d' → logprob: -8.33255672454834
    9. 'of' → logprob: -8.83255672454834
    10. '_' → logprob: -9.58255672454834

Token 514: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0397958979010582
    2. '):
' → logprob: -3.9147958755493164
    3. ':' → logprob: -4.789795875549316
    4. ')' → logprob: -4.914795875549316
    5. ' ):' → logprob: -6.789795875549316
    6. '   ' → logprob: -7.414795875549316
    7. ' :' → logprob: -8.164795875549316
    8. ' (' → logprob: -8.164795875549316
    9. '(' → logprob: -8.414795875549316
    10. ',' → logprob: -8.539795875549316

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ')' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.125011444091797
    4. '   ' → logprob: -16.375011444091797
    5. '```' → logprob: -16.750011444091797
    6. '0' → logprob: -16.875011444091797
    7. ')
' → logprob: -17.500011444091797
    8. '[' → logprob: -17.875011444091797
    9. '):
' → logprob: -19.250011444091797
    10. '       ' → logprob: -19.500011444091797

Token 516: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6596975922584534
    2. '):' → logprob: -0.7846975922584534
    3. ')' → logprob: -3.6596975326538086
    4. '):
' → logprob: -7.659697532653809
    5. '           ' → logprob: -8.159697532653809
    6. '):

' → logprob: -9.659697532653809
    7. '               ' → logprob: -9.659697532653809
    8. '       ' → logprob: -10.659697532653809
    9. ')
' → logprob: -10.909697532653809
    10. ' ):' → logprob: -11.409697532653809

Token 517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007136004976928234
    2. '           ' → logprob: -5.00713586807251
    3. ' if' → logprob: -8.382136344909668
    4. ' for' → logprob: -10.257136344909668
    5. ' ' → logprob: -10.632136344909668
    6. '                
' → logprob: -10.632136344909668
    7. ',' → logprob: -11.257136344909668
    8. '            ' → logprob: -11.257136344909668
    9. ')' → logprob: -11.882136344909668
    10. 'if' → logprob: -12.007136344909668

Token 518: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2491903454065323
    2. 'if' (adapté à ' if') → logprob: -1.749190330505371
    3. ' val' → logprob: -3.499190330505371
    4. 'cur' → logprob: -5.124190330505371
    5. 'val' → logprob: -5.374190330505371
    6. ' cur' → logprob: -6.124190330505371
    7. '       ' → logprob: -6.749190330505371
    8. '   ' → logprob: -7.249190330505371
    9. 'v' → logprob: -7.374190330505371
    10. '               ' → logprob: -8.249190330505371

Token 519: ' j' (ID: 441)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25208568572998047
    2. ' dp' → logprob: -1.5020856857299805
    3. '                   ' → logprob: -8.87708568572998
    4. '               ' → logprob: -11.50208568572998
    5. '(dp' → logprob: -13.00208568572998
    6. '	dp' → logprob: -13.50208568572998
    7. '                       ' → logprob: -14.25208568572998
    8. '   ' → logprob: -14.50208568572998
    9. '                ' → logprob: -14.62708568572998
    10. '_dp' → logprob: -14.75208568572998

Token 520: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2172926813364029
    2. '<=' → logprob: -1.7172926664352417
    3. ' >' → logprob: -5.217292785644531
    4. ' <' → logprob: -5.842292785644531
    5. '>' → logprob: -6.092292785644531
    6. ' >=' → logprob: -6.592292785644531
    7. ' ==' → logprob: -6.592292785644531
    8. '>=' → logprob: -7.342292785644531
    9. '==' → logprob: -7.717292785644531
    10. '<' → logprob: -8.217292785644531

Token 521: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06639746576547623
    2. '4' → logprob: -3.4413974285125732
    3. '3' → logprob: -3.4413974285125732
    4. ' ' → logprob: -8.691397666931152
    5. '1' → logprob: -10.566397666931152
    6. '2' → logprob: -12.941397666931152
    7. '   ' → logprob: -13.191397666931152
    8. '  ' → logprob: -14.566397666931152
    9. 'k' → logprob: -14.878897666931152
    10. '

' → logprob: -14.941397666931152

Token 522: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034705571830272675
    2. '3' → logprob: -3.659705638885498
    3. '4' → logprob: -4.784705638885498
    4. ' ' → logprob: -12.03470516204834
    5. '1' → logprob: -12.78470516204834
    6. '   ' → logprob: -13.53470516204834
    7. '
' → logprob: -13.78470516204834
    8. '<' → logprob: -14.78470516204834
    9. 'k' → logprob: -14.78470516204834
    10. '

' → logprob: -15.28470516204834

Token 523: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.564565896987915
    2. ' and' → logprob: -1.439565896987915
    3. 'and' → logprob: -2.064565896987915
    4. 'or' → logprob: -3.064565896987915
    5. ':' → logprob: -4.564565658569336
    6. '                   ' → logprob: -5.939565658569336
    7. '                           ' → logprob: -6.314565658569336
    8. '                       ' → logprob: -6.314565658569336
    9. '               ' → logprob: -6.439565658569336
    10. ':
' → logprob: -7.064565658569336

Token 524: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039169181138277054
    2. ':' → logprob: -4.2891693115234375
    3. '                       ' → logprob: -4.2891693115234375
    4. ' and' → logprob: -4.9141693115234375
    5. '                           ' → logprob: -7.1641693115234375
    6. ':
' → logprob: -7.2891693115234375
    7. ' :' → logprob: -7.4141693115234375
    8. '               ' → logprob: -7.5391693115234375
    9. ' continue' → logprob: -7.7891693115234375
    10. '                               ' → logprob: -9.039169311523438

Token 525: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6735425591468811
    2. 'continue' → logprob: -1.2985424995422363
    3. '                   ' → logprob: -2.5485424995422363
    4. ' if' → logprob: -3.0485424995422363
    5. '                       ' → logprob: -3.2985424995422363
    6. 'if' → logprob: -3.5485424995422363
    7. '                           ' → logprob: -4.798542499542236
    8. 'for' → logprob: -5.048542499542236
    9. ' for' → logprob: -5.423542499542236
    10. '               ' → logprob: -6.173542499542236

Token 526: ' Si' (ID: 7832)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9916021823883057
    2. 'continue' → logprob: -0.9916021823883057
    3. ' continue' → logprob: -1.6166021823883057
    4. '                       ' → logprob: -4.116601943969727
    5. 'if' → logprob: -4.241601943969727
    6. '   ' → logprob: -4.366601943969727
    7. '               ' → logprob: -4.991601943969727
    8. ' if' → logprob: -5.116601943969727
    9. '                           ' → logprob: -7.366601943969727
    10. '                               ' → logprob: -7.616601943969727

Token 527: ' on' (ID: 402)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.16745446622371674
    2. ' k' → logprob: -2.167454481124878
    3. 'dp' → logprob: -3.792454481124878
    4. 'k' → logprob: -4.542454242706299
    5. ' not' → logprob: -5.292454242706299
    6. '                   ' → logprob: -7.292454242706299
    7. '(dp' → logprob: -8.667454719543457
    8. '               ' → logprob: -8.917454719543457
    9. '           ' → logprob: -9.667454719543457
    10. 'not' → logprob: -9.667454719543457

Token 528: ' a' (ID: 261)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.38092041015625
    2. 'dp' → logprob: -1.75592041015625
    3. ' k' → logprob: -2.88092041015625
    4. 'k' → logprob: -3.25592041015625
    5. ' ==' → logprob: -4.63092041015625
    6. ' continue' → logprob: -4.88092041015625
    7. ' not' → logprob: -5.13092041015625
    8. '                   ' → logprob: -5.88092041015625
    9. ' >=' → logprob: -6.13092041015625
    10. ' !=' → logprob: -6.38092041015625

Token 529: ' déjà' (ID: 21229)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.12126089632511139
    2. 'dp' → logprob: -3.12126088142395
    3. ' k' → logprob: -3.49626088142395
    4. ' not' → logprob: -4.621261119842529
    5. ' continue' → logprob: -4.996261119842529
    6. 'k' → logprob: -5.121261119842529
    7. ' continuer' → logprob: -5.246261119842529
    8. ' j' → logprob: -6.121261119842529
    9. '                   ' → logprob: -6.496261119842529
    10. ' i' → logprob: -6.496261119842529

Token 530: ' atteint' (ID: 104876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8575004935264587
    2. ' dp' → logprob: -0.9825004935264587
    3. ' atteint' → logprob: -2.3575005531311035
    4. '3' → logprob: -3.2325005531311035
    5. 'dé' → logprob: -4.4825005531311035
    6. ' continu' → logprob: -4.6075005531311035
    7. ' commencé' → logprob: -4.8575005531311035
    8. ' ' → logprob: -5.6075005531311035
    9. 'k' → logprob: -5.6075005531311035
    10. ' choisi' → logprob: -5.8575005531311035

Token 531: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8103547692298889
    2. ' le' → logprob: -1.4353547096252441
    3. ' la' → logprob: -2.185354709625244
    4. ' ' → logprob: -2.185354709625244
    5. 'le' → logprob: -3.060354709625244
    6. 'la' → logprob: -4.185354709625244
    7. ' j' → logprob: -4.935354709625244
    8. '   ' → logprob: -5.435354709625244
    9. 'dp' → logprob: -5.810354709625244
    10. ' dp' → logprob: -6.060354709625244

Token 532: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005543816369026899
    2. ' ' → logprob: -5.8805437088012695
    3. 'j' → logprob: -7.3805437088012695
    4. 'le' → logprob: -7.6305437088012695
    5. ' le' → logprob: -7.8805437088012695
    6. ' j' → logprob: -8.13054370880127
    7. 'la' → logprob: -8.50554370880127
    8. 'max' → logprob: -8.75554370880127
    9. 'dp' → logprob: -8.88054370880127
    10. ' la' → logprob: -8.88054370880127

Token 533: ' groupes' (ID: 72206)
  Prédit: ' groupes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -0.25113242864608765
    2. ' groups' → logprob: -1.7511324882507324
    3. 'groups' → logprob: -3.8761324882507324
    4. ' group' → logprob: -4.001132488250732
    5. 'group' → logprob: -5.251132488250732
    6. ':' → logprob: -6.001132488250732
    7. ' grupos' → logprob: -7.626132488250732
    8. ' groupe' → logprob: -8.376132011413574
    9. '_groups' → logprob: -8.501132011413574
    10. ' :' → logprob: -8.876132011413574

Token 534: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48680806159973145
    2. '                   ' → logprob: -1.2368080615997314
    3. '                       ' → logprob: -3.1118080615997314
    4. ' and' → logprob: -3.9868080615997314
    5. ':
' → logprob: -4.486807823181152
    6. 'and' → logprob: -5.236807823181152
    7. '               ' → logprob: -5.361807823181152
    8. ',' → logprob: -5.736807823181152
    9. ' :' → logprob: -6.111807823181152
    10. '                           ' → logprob: -6.611807823181152

Token 535: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27451154589653015
    2. '                       ' → logprob: -1.5245115756988525
    3. ' continue' → logprob: -3.8995115756988525
    4. 'continue' → logprob: -6.774511337280273
    5. '               ' → logprob: -7.274511337280273
    6. ' if' → logprob: -9.649511337280273
    7. '                           ' → logprob: -10.024511337280273
    8. '                    ' → logprob: -10.774511337280273
    9. '           ' → logprob: -11.274511337280273
    10. '                     ' → logprob: -11.274511337280273

Token 536: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7161760330200195
    2. '                   ' → logprob: -1.7161760330200195
    3. ' continue' → logprob: -1.9661760330200195
    4. 'if' → logprob: -2.0911760330200195
    5. 'continue' → logprob: -3.0911760330200195
    6. '                       ' → logprob: -4.0911760330200195
    7. ' for' → logprob: -6.4661760330200195
    8. 'for' → logprob: -7.0911760330200195
    9. ' dp' → logprob: -7.0911760330200195
    10. '   ' → logprob: -7.2161760330200195

Token 537: ' Option' (ID: 17796)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8877212405204773
    2. 'if' → logprob: -1.512721300125122
    3. ' continue' → logprob: -1.637721300125122
    4. '                   ' → logprob: -2.512721300125122
    5. ' if' → logprob: -2.637721300125122
    6. '                       ' → logprob: -5.262721061706543
    7. 'dp' → logprob: -5.387721061706543
    8. 'for' → logprob: -5.512721061706543
    9. '#' → logprob: -6.387721061706543
    10. '   ' → logprob: -6.512721061706543

Token 538: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7459112405776978
    2. '                   ' → logprob: -1.4959112405776978
    3. ' continue' → logprob: -2.370911121368408
    4. ':' → logprob: -2.620911121368408
    5. '               ' → logprob: -3.245911121368408
    6. ' :' → logprob: -3.245911121368408
    7. '                       ' → logprob: -4.245911121368408
    8. '=' → logprob: -4.870911121368408
    9. 's' → logprob: -4.995911121368408
    10. '                           ' → logprob: -5.620911121368408

Token 539: '1' (ID: 16)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.163215771317482
    2. '               ' → logprob: -3.1632158756256104
    3. ' continue' → logprob: -3.5382158756256104
    4. ' if' → logprob: -3.6632158756256104
    5. '                       ' → logprob: -4.288215637207031
    6. 'if' → logprob: -4.288215637207031
    7. 'continue' → logprob: -4.288215637207031
    8. 'for' → logprob: -5.413215637207031
    9. ' for' → logprob: -6.538215637207031
    10. '   ' → logprob: -7.163215637207031

Token 540: ' :' (ID: 712)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4404210150241852
    2. ':' → logprob: -1.9404209852218628
    3. '                       ' → logprob: -2.0654211044311523
    4. ' =' → logprob: -3.8154211044311523
    5. ' continue' → logprob: -4.565421104431152
    6. ' if' → logprob: -4.815421104431152
    7. ' :' → logprob: -5.190421104431152
    8. 'dp' → logprob: -5.440421104431152
    9. '               ' → logprob: -5.565421104431152
    10. 'if' → logprob: -5.565421104431152

Token 541: ' cl' (ID: 567)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.504285991191864
    2. 'dp' → logprob: -1.1292860507965088
    3. '#' → logprob: -3.504286050796509
    4. ' #' → logprob: -3.754286050796509
    5. ' if' → logprob: -4.87928581237793
    6. '                   ' → logprob: -5.12928581237793
    7. 'if' → logprob: -5.37928581237793
    8. '               ' → logprob: -7.50428581237793
    9. '                       ' → logprob: -8.62928581237793
    10. '   ' → logprob: -9.62928581237793

Token 542: 'ore' (ID: 510)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.6345534324645996
    2. 'iquer' → logprob: -2.0095534324645996
    3. 'ip' → logprob: -2.1345534324645996
    4. 'oner' → logprob: -2.2595534324645996
    5. 'air' → logprob: -3.0095534324645996
    6. 'ear' → logprob: -3.2595534324645996
    7. 'ose' → logprob: -3.3845534324645996
    8. 'ever' → logprob: -3.6345534324645996
    9. 'aire' → logprob: -3.6345534324645996
    10. 'oser' → logprob: -3.8845534324645996

Token 543: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.468179851770401
    2. '                   ' → logprob: -1.3431798219680786
    3. ' la' → logprob: -2.968179941177368
    4. '               ' → logprob: -3.593179941177368
    5. ' les' → logprob: -5.468179702758789
    6. '                    ' → logprob: -5.593179702758789
    7. ' ' → logprob: -5.843179702758789
    8. ' l' → logprob: -6.218179702758789
    9. 'dp' → logprob: -6.343179702758789
    10. ' dp' → logprob: -6.343179702758789

Token 544: ' segment' (ID: 14806)
  Prédit: ' groupe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.056359898298978806
    2. 'g' → logprob: -3.0563600063323975
    3. 'segment' → logprob: -6.681359767913818
    4. 'group' → logprob: -6.806359767913818
    5. 'k' → logprob: -6.806359767913818
    6. ' segment' → logprob: -7.556359767913818
    7. 'current' → logprob: -7.931359767913818
    8. ' group' → logprob: -8.181360244750977
    9. '```' → logprob: -8.306360244750977
    10. 'le' → logprob: -8.431360244750977

Token 545: ' courant' (ID: 74694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0267828702926636
    2. '                   ' → logprob: -1.0267828702926636
    3. ' if' → logprob: -2.026782989501953
    4. '               ' → logprob: -2.401782989501953
    5. '                       ' → logprob: -3.151782989501953
    6. 'dp' → logprob: -4.651782989501953
    7. '                           ' → logprob: -6.526782989501953
    8. ',' → logprob: -6.651782989501953
    9. ' or' → logprob: -6.901782989501953
    10. '.' → logprob: -7.901782989501953

Token 546: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6533136963844299
    2. ' or' → logprob: -2.153313636779785
    3. ' and' → logprob: -2.528313636779785
    4. '               ' → logprob: -2.528313636779785
    5. ' if' → logprob: -2.528313636779785
    6. '                       ' → logprob: -2.778313636779785
    7. ':' → logprob: -3.153313636779785
    8. '                           ' → logprob: -4.903313636779785
    9. 'if' → logprob: -5.653313636779785
    10. '                               ' → logprob: -6.903313636779785

Token 547: 'si' (ID: 4778)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7226018309593201
    2. 'k' → logprob: -1.5976018905639648
    3. ')' → logprob: -2.097601890563965
    4. ' if' → logprob: -2.097601890563965
    5. '                   ' → logprob: -4.097601890563965
    6. ' k' → logprob: -4.347601890563965
    7. ' or' → logprob: -5.222601890563965
    8. '0' → logprob: -5.472601890563965
    9. '):
' → logprob: -5.597601890563965
    10. 'dp' → logprob: -5.597601890563965

Token 548: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12696915864944458
    2. ' k' → logprob: -2.1269690990448
    3. 'dp' → logprob: -11.501969337463379
    4. '(k' → logprob: -11.626969337463379
    5. ' ' → logprob: -12.251969337463379
    6. '   ' → logprob: -12.376969337463379
    7. '               ' → logprob: -13.001969337463379
    8. ' dp' → logprob: -13.251969337463379
    9. '           ' → logprob: -13.376969337463379
    10. '_k' → logprob: -13.501969337463379

Token 549: ' était' (ID: 16647)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15356063842773438
    2. ' ==' → logprob: -2.6535606384277344
    3. ' k' → logprob: -3.2785606384277344
    4. '==' → logprob: -3.4035606384277344
    5. ')' → logprob: -9.028560638427734
    6. ']==' → logprob: -9.403560638427734
    7. ' continue' → logprob: -9.403560638427734
    8. '                   ' → logprob: -9.778560638427734
    9. 'if' → logprob: -9.903560638427734
    10. '```' → logprob: -10.153560638427734

Token 550: ' dans' (ID: 2671)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7137022018432617
    2. '1' → logprob: -0.8387022018432617
    3. ' en' → logprob: -2.7137022018432617
    4. 'à' → logprob: -4.963702201843262
    5. ' à' → logprob: -5.963702201843262
    6. ' ' → logprob: -7.338702201843262
    7. '==' → logprob: -7.963702201843262
    8. 'dans' → logprob: -8.088702201843262
    9. '0' → logprob: -8.838702201843262
    10. ' ==' → logprob: -8.838702201843262

Token 551: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10150336474180222
    2. ' ' → logprob: -2.601503372192383
    3. ' k' → logprob: -4.851503372192383
    4. '0' → logprob: -5.601503372192383
    5. 'k' → logprob: -5.726503372192383
    6. ' un' → logprob: -6.351503372192383
    7. '_' → logprob: -6.851503372192383
    8. 'l' → logprob: -7.101503372192383
    9. ' la' → logprob: -7.601503372192383
    10. '```' → logprob: -7.601503372192383

Token 552: ' groupe' (ID: 29494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7648723721504211
    2. 'segment' → logprob: -0.8898723721504211
    3. ' segment' → logprob: -2.1398723125457764
    4. '   ' → logprob: -6.2648725509643555
    5. ' ' → logprob: -6.2648725509643555
    6. '               ' → logprob: -8.139872550964355
    7. '                   ' → logprob: -8.389872550964355
    8. '           ' → logprob: -8.514872550964355
    9. '       ' → logprob: -8.764872550964355
    10. ')' → logprob: -8.764872550964355

Token 553: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13553453981876373
    2. '),' → logprob: -2.5105345249176025
    3. ',' → logprob: -4.385534763336182
    4. '                   ' → logprob: -5.010534763336182
    5. '):' → logprob: -5.010534763336182
    6. '):
' → logprob: -5.135534763336182
    7. ' )' → logprob: -5.510534763336182
    8. ')
' → logprob: -6.135534763336182
    9. ' et' → logprob: -6.260534763336182
    10. '               ' → logprob: -6.510534763336182

Token 554: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21323883533477783
    2. '                       ' → logprob: -1.8382388353347778
    3. '               ' → logprob: -4.338238716125488
    4. ':' → logprob: -4.838238716125488
    5. '                           ' → logprob: -4.838238716125488
    6. '                               ' → logprob: -6.713238716125488
    7. ':
' → logprob: -7.463238716125488
    8. ' :' → logprob: -7.588238716125488
    9. ' or' → logprob: -7.963238716125488
    10. ' and' → logprob: -7.963238716125488

Token 555: ' dp' (ID: 21546)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1641831248998642
    2. '                       ' → logprob: -2.4141831398010254
    3. ' if' → logprob: -3.1641831398010254
    4. 'if' → logprob: -4.289183139801025
    5. '               ' → logprob: -5.914183139801025
    6. '                           ' → logprob: -6.414183139801025
    7. '                               ' → logprob: -7.414183139801025
    8. '                    ' → logprob: -7.789183139801025
    9. '
' → logprob: -9.414182662963867
    10. '                    
' → logprob: -9.539182662963867

Token 556: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4272752852994017e-05
    2. '[' → logprob: -12.37502384185791
    3. 'i' → logprob: -12.37502384185791
    4. ' [' → logprob: -13.00002384185791
    5. '   ' → logprob: -13.12502384185791
    6. '           ' → logprob: -13.12502384185791
    7. '       ' → logprob: -13.37502384185791
    8. '               ' → logprob: -13.62502384185791
    9. '[j' → logprob: -13.87502384185791
    10. '                   ' → logprob: -13.87502384185791

Token 557: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11635018140077591
    2. '+' → logprob: -2.2413501739501953
    3. ' +' → logprob: -5.991350173950195
    4. '   ' → logprob: -7.991350173950195
    5. '           ' → logprob: -8.491350173950195
    6. ' ][' → logprob: -8.991350173950195
    7. ']' → logprob: -9.366350173950195
    8. '       ' → logprob: -9.866350173950195
    9. '[' → logprob: -10.116350173950195
    10. '               ' → logprob: -10.116350173950195

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -14.000001907348633
    3. '][' → logprob: -14.500001907348633
    4. ' ' → logprob: -15.000001907348633
    5. '```' → logprob: -16.125001907348633
    6. 'j' → logprob: -16.500001907348633
    7. '
' → logprob: -16.625001907348633
    8. '           ' → logprob: -16.875001907348633
    9. '[' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.625001907348633

Token 559: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11330460011959076
    2. '[j' → logprob: -2.238304615020752
    3. '[' → logprob: -8.238304138183594
    4. ']' → logprob: -9.613304138183594
    5. '                   ' → logprob: -9.988304138183594
    6. ' ' → logprob: -10.863304138183594
    7. ' ][' → logprob: -10.863304138183594
    8. '           ' → logprob: -10.988304138183594
    9. '   ' → logprob: -10.988304138183594
    10. '               ' → logprob: -11.738304138183594

Token 560: '3' (ID: 18)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003180563682690263
    2. '3' → logprob: -5.753180503845215
    3. ' j' → logprob: -13.503180503845215
    4. '2' → logprob: -15.003180503845215
    5. '   ' → logprob: -15.003180503845215
    6. '
' → logprob: -15.128180503845215
    7. '	j' → logprob: -16.25318145751953
    8. '[j' → logprob: -16.50318145751953
    9. '```' → logprob: -16.50318145751953
    10. 'k' → logprob: -17.00318145751953

Token 561: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00160138716455549
    2. '[' → logprob: -6.501601219177246
    3. ']' → logprob: -10.001601219177246
    4. ' ][' → logprob: -11.001601219177246
    5. '0' → logprob: -11.126601219177246
    6. '           ' → logprob: -12.376601219177246
    7. '   ' → logprob: -12.751601219177246
    8. ']][' → logprob: -13.376601219177246
    9. '       ' → logprob: -13.501601219177246
    10. ' ' → logprob: -13.751601219177246

Token 562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00820449460297823
    2. 'k' → logprob: -5.133204460144043
    3. '1' → logprob: -6.258204460144043
    4. '(' → logprob: -8.758204460144043
    5. '(k' → logprob: -8.883204460144043
    6. 'int' → logprob: -10.258204460144043
    7. 'max' → logprob: -12.008204460144043
    8. '(int' → logprob: -12.133204460144043
    9. ' (' → logprob: -12.133204460144043
    10. '(i' → logprob: -13.133204460144043

Token 563: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010559145594015718
    2. ']=' → logprob: -6.876055717468262
    3. ' ]' → logprob: -11.251055717468262
    4. 'max' → logprob: -11.626055717468262
    5. 's' → logprob: -15.001055717468262
    6. '=' → logprob: -15.876055717468262
    7. '=max' → logprob: -16.126056671142578
    8. '                   ' → logprob: -16.126056671142578
    9. ']
' → logprob: -16.376056671142578
    10. '   ' → logprob: -16.501056671142578

Token 564: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01723056472837925
    2. ' =' → logprob: -4.39223051071167
    3. '=max' → logprob: -5.39223051071167
    4. 'max' → logprob: -8.767230987548828
    5. '>=' → logprob: -14.017230987548828
    6. ']=' → logprob: -14.767230987548828
    7. '>' → logprob: -15.017230987548828
    8. ')=' → logprob: -15.892230987548828
    9. ',max' → logprob: -15.892230987548828
    10. ' max' → logprob: -16.017230987548828

Token 565: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014163628220558167
    2. ' max' → logprob: -4.264163494110107
    3. '	max' → logprob: -15.889163970947266
    4. '                   ' → logprob: -16.889163970947266
    5. '                       ' → logprob: -17.639163970947266
    6. '   ' → logprob: -18.264163970947266
    7. '=max' → logprob: -19.389163970947266
    8. 'dp' → logprob: -20.014163970947266
    9. '(max' → logprob: -20.139163970947266
    10. 'min' → logprob: -20.139163970947266

Token 566: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0032204915769398212
    2. '(' → logprob: -5.753220558166504
    3. '(
' → logprob: -10.378220558166504
    4. 'dp' → logprob: -11.378220558166504
    5. '(

' → logprob: -15.878220558166504
    6. ' dp' → logprob: -16.878219604492188
    7. '	dp' → logprob: -17.003219604492188
    8. '(
' → logprob: -17.628219604492188
    9. ' (' → logprob: -17.753219604492188
    10. '(d' → logprob: -18.253219604492188

Token 567: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013047587708570063
    2. 'i' → logprob: -9.250130653381348
    3. '[' → logprob: -11.500130653381348
    4. ' [' → logprob: -12.000130653381348
    5. '][' → logprob: -12.750130653381348
    6. '                   ' → logprob: -12.750130653381348
    7. '(i' → logprob: -12.875130653381348
    8. ' i' → logprob: -13.125130653381348
    9. ' ' → logprob: -13.625130653381348
    10. '   ' → logprob: -13.625130653381348

Token 568: '][' (ID: 2696)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003958005458116531
    2. '][' → logprob: -5.878958225250244
    3. '[i' → logprob: -6.878958225250244
    4. ' +' → logprob: -10.003957748413086
    5. '+i' → logprob: -10.628957748413086
    6. ']+' → logprob: -11.003957748413086
    7. '[' → logprob: -11.128957748413086
    8. '   ' → logprob: -11.878957748413086
    9. 'i' → logprob: -12.003957748413086
    10. ' ][' → logprob: -13.128957748413086

Token 569: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20203153789043427
    2. 'j' → logprob: -1.7020314931869507
    3. '3' → logprob: -7.95203161239624
    4. ' i' → logprob: -8.577031135559082
    5. ' j' → logprob: -9.952031135559082
    6. ' ' → logprob: -11.577031135559082
    7. '   ' → logprob: -11.702031135559082
    8. '[i' → logprob: -13.077031135559082
    9. '+' → logprob: -13.577031135559082
    10. '```' → logprob: -13.577031135559082

Token 570: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00027456742827780545
    2. ' ][' → logprob: -8.500274658203125
    3. ']' → logprob: -10.000274658203125
    4. '   ' → logprob: -11.375274658203125
    5. ' ' → logprob: -13.125274658203125
    6. '],' → logprob: -13.250274658203125
    7. '[i' → logprob: -13.375274658203125
    8. '[j' → logprob: -13.625274658203125
    9. '    ' → logprob: -13.875274658203125
    10. '[' → logprob: -13.875274658203125

Token 571: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045779354870319366
    2. '1' → logprob: -3.1707794666290283
    3. 'k' → logprob: -5.920779228210449
    4. ' ' → logprob: -9.92077922821045
    5. '   ' → logprob: -10.67077922821045
    6. ' k' → logprob: -12.85827922821045
    7. ']' → logprob: -13.54577922821045
    8. '  ' → logprob: -13.54577922821045
    9. '```' → logprob: -13.54577922821045
    10. '    
' → logprob: -13.73327922821045

Token 572: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.11753296107053757
    2. ']' → logprob: -2.242532968521118
    3. ']+' → logprob: -5.742532730102539
    4. '],
' → logprob: -6.742532730102539
    5. ' ],' → logprob: -8.367532730102539
    6. '   ' → logprob: -10.617532730102539
    7. ' ]' → logprob: -11.117532730102539
    8. '],

' → logprob: -11.492532730102539
    9. '           ' → logprob: -12.242532730102539
    10. '       ' → logprob: -12.742532730102539

Token 573: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1428212821483612
    2. ' dp' → logprob: -2.0178213119506836
    3. '                   ' → logprob: -10.267821311950684
    4. 'max' → logprob: -10.767821311950684
    5. '                       ' → logprob: -11.017821311950684
    6. '                           ' → logprob: -11.267821311950684
    7. '                    ' → logprob: -11.392821311950684
    8. '(dp' → logprob: -11.517821311950684
    9. ' max' → logprob: -11.892821311950684
    10. '	dp' → logprob: -12.267821311950684

Token 574: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.836499985889532e-05
    2. 'i' → logprob: -10.1250581741333
    3. '[' → logprob: -11.7500581741333
    4. '][' → logprob: -12.0000581741333
    5. '```' → logprob: -14.0000581741333
    6. ')[' → logprob: -14.2500581741333
    7. '[I' → logprob: -14.2500581741333
    8. ']' → logprob: -14.8750581741333
    9. '[
' → logprob: -15.0000581741333
    10. ' [' → logprob: -15.0000581741333

Token 575: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2551303207874298
    2. '][' → logprob: -1.5051302909851074
    3. '[' → logprob: -5.880130290985107
    4. ' ][' → logprob: -8.630130767822266
    5. '[i' → logprob: -9.505130767822266
    6. '   ' → logprob: -9.880130767822266
    7. '           ' → logprob: -10.505130767822266
    8. ']' → logprob: -11.380130767822266
    9. ' +' → logprob: -11.505130767822266
    10. ')[' → logprob: -11.630130767822266

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '3' → logprob: -12.250006675720215
    3. '0' → logprob: -15.125006675720215
    4. '2' → logprob: -15.250006675720215
    5. ' ' → logprob: -15.500006675720215
    6. '[' → logprob: -15.750006675720215
    7. '```' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.1250057220459
    9. 'i' → logprob: -16.3750057220459
    10. '
' → logprob: -16.7500057220459

Token 577: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006874621845781803
    2. '[' → logprob: -5.0068745613098145
    3. ']' → logprob: -9.631875038146973
    4. ' ][' → logprob: -9.756875038146973
    5. '   ' → logprob: -11.381875038146973
    6. ')[' → logprob: -11.631875038146973
    7. ' ' → logprob: -12.881875038146973
    8. '3' → logprob: -13.131875038146973
    9. '```' → logprob: -13.256875038146973
    10. '           ' → logprob: -13.506875038146973

Token 578: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '```' → logprob: -16.875001907348633
    5. '[' → logprob: -17.250001907348633
    6. '0' → logprob: -17.875001907348633
    7. '  ' → logprob: -18.000001907348633
    8. '2' → logprob: -18.812501907348633
    9. '۳' → logprob: -19.187501907348633
    10. '３' → logprob: -19.312501907348633

Token 579: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004923873930238187
    2. '[' → logprob: -7.875492572784424
    3. ' ][' → logprob: -9.250492095947266
    4. ']' → logprob: -11.500492095947266
    5. '0' → logprob: -12.750492095947266
    6. '   ' → logprob: -14.000492095947266
    7. ' ' → logprob: -14.375492095947266
    8. ')[' → logprob: -14.750492095947266
    9. ']][' → logprob: -15.500492095947266
    10. ''][' → logprob: -15.750492095947266

Token 580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '1' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.12500286102295
    5. '```' → logprob: -16.625001907348633
    6. '  ' → logprob: -17.000001907348633
    7. '[' → logprob: -17.187501907348633
    8. '
' → logprob: -17.875001907348633
    9. '    ' → logprob: -18.000001907348633
    10. '     ' → logprob: -18.062501907348633

Token 581: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001500460086390376
    2. ' )' → logprob: -7.501500606536865
    3. '               ' → logprob: -8.126500129699707
    4. '                   ' → logprob: -8.501500129699707
    5. ')
' → logprob: -8.876500129699707
    6. ',' → logprob: -8.876500129699707
    7. '])' → logprob: -9.501500129699707
    8. '),' → logprob: -10.126500129699707
    9. '                       ' → logprob: -11.126500129699707
    10. 'dp' → logprob: -11.751500129699707

Token 582: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3455796539783478
    2. ')' → logprob: -2.0955796241760254
    3. ' 
' → logprob: -2.5955796241760254
    4. '                ' → logprob: -3.8455796241760254
    5. '<|end|>' → logprob: -4.095579624176025
    6. ' )' → logprob: -4.595579624176025
    7. '                
' → logprob: -4.595579624176025
    8. '                    
' → logprob: -4.720579624176025
    9. '                   ' → logprob: -4.970579624176025
    10. '  
' → logprob: -5.595579624176025

Token 583: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5370199084281921
    2. '                   ' → logprob: -1.412019968032837
    3. 'dp' → logprob: -3.162019968032837
    4. ')' → logprob: -3.287019968032837
    5. ' dp' → logprob: -3.662019968032837
    6. '                    
' → logprob: -4.162019729614258
    7. '                ' → logprob: -4.287019729614258
    8. 'elif' → logprob: -5.037019729614258
    9. ' 
' → logprob: -5.162019729614258
    10. '\n' → logprob: -5.787019729614258

Token 584: ' Option' (ID: 17796)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18611270189285278
    2. 'if' → logprob: -1.936112642288208
    3. '#' → logprob: -3.686112642288208
    4. 'continue' → logprob: -8.811112403869629
    5. 'option' → logprob: -9.061112403869629
    6. '                   ' → logprob: -10.186112403869629
    7. ' dp' → logprob: -10.311112403869629
    8. 'pass' → logprob: -10.561112403869629
    9. ' if' → logprob: -10.811112403869629
    10. '               ' → logprob: -10.811112403869629

Token 585: ' ' (ID: 220)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6547462940216064
    2. '[' → logprob: -1.6547462940216064
    3. ' [' → logprob: -2.2797462940216064
    4. '   ' → logprob: -2.7797462940216064
    5. ' ' → logprob: -2.9047462940216064
    6. '1' → logprob: -2.9047462940216064
    7. ' =' → logprob: -5.279746055603027
    8. '[
' → logprob: -6.279746055603027
    9. ' (' → logprob: -7.154746055603027
    10. '
' → logprob: -7.154746055603027

Token 586: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01022464968264103
    2. '[i' → logprob: -5.38522481918335
    3. '2' → logprob: -5.88522481918335
    4. 'dp' → logprob: -6.88522481918335
    5. ' ' → logprob: -7.38522481918335
    6. '=' → logprob: -8.010224342346191
    7. '0' → logprob: -8.385224342346191
    8. 'max' → logprob: -8.510224342346191
    9. '[' → logprob: -9.760224342346191
    10. '```' → logprob: -9.760224342346191

Token 587: ' :' (ID: 712)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9366223812103271
    2. '[i' → logprob: -1.5616223812103271
    3. ' dp' → logprob: -1.9366223812103271
    4. 'dp' → logprob: -2.311622381210327
    5. '[' → logprob: -2.936622381210327
    6. '               ' → logprob: -3.311622381210327
    7. ' =' → logprob: -3.686622381210327
    8. '                    ' → logprob: -4.811622619628906
    9. ' [' → logprob: -5.186622619628906
    10. '(dp' → logprob: -5.436622619628906

Token 588: ' poursuivre' (ID: 138348)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02071250230073929
    2. ' dp' → logprob: -3.8957126140594482
    3. 'max' → logprob: -8.770712852478027
    4. ' max' → logprob: -11.770712852478027
    5. '(dp' → logprob: -13.270712852478027
    6. '	dp' → logprob: -13.770712852478027
    7. '               ' → logprob: -13.895712852478027
    8. '#' → logprob: -14.270712852478027
    9. '   ' → logprob: -14.520712852478027
    10. '                   ' → logprob: -14.645712852478027

Token 589: ' dans' (ID: 2671)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06991863995790482
    2. ' dp' → logprob: -3.069918632507324
    3. '(dp' → logprob: -4.069918632507324
    4. 'le' → logprob: -6.194918632507324
    5. '[' → logprob: -7.569918632507324
    6. 'la' → logprob: -8.069918632507324
    7. ' le' → logprob: -8.444918632507324
    8. 'dans' → logprob: -8.944918632507324
    9. '   ' → logprob: -9.069918632507324
    10. ' la' → logprob: -9.069918632507324

Token 590: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06632886081933975
    2. '3' → logprob: -3.316328763961792
    3. ' dp' → logprob: -4.191329002380371
    4. 'le' → logprob: -4.691329002380371
    5. 'l' → logprob: -7.066329002380371
    6. ' le' → logprob: -7.316329002380371
    7. 'la' → logprob: -7.441329002380371
    8. ' ' → logprob: -8.066329002380371
    9. 'les' → logprob: -8.441329002380371
    10. 'un' → logprob: -8.691329002380371

Token 591: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5074325799942017
    2. 'dp' → logprob: -1.3824325799942017
    3. 'g' → logprob: -2.882432460784912
    4. 'segment' → logprob: -3.132432460784912
    5. 'm' → logprob: -4.007432460784912
    6. '[i' → logprob: -4.132432460784912
    7. '[' → logprob: -5.257432460784912
    8. 'group' → logprob: -6.507432460784912
    9. '```' → logprob: -7.007432460784912
    10. 'same' → logprob: -7.132432460784912

Token 592: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.019287049770355225
    2. 'dp' → logprob: -4.894287109375
    3. '[i' → logprob: -5.769287109375
    4. 'segment' → logprob: -5.769287109375
    5. '[' → logprob: -5.894287109375
    6. 'g' → logprob: -6.769287109375
    7. '1' → logprob: -8.269287109375
    8. 'm' → logprob: -8.394287109375
    9. '```' → logprob: -8.394287109375
    10. 'group' → logprob: -8.644287109375

Token 593: 'e' (ID: 68)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.34731608629226685
    2. '[' → logprob: -1.472316026687622
    3. 'dp' → logprob: -2.972316026687622
    4. '[i' → logprob: -5.347316265106201
    5. ']' → logprob: -5.597316265106201
    6. '[j' → logprob: -5.722316265106201
    7. '+' → logprob: -7.847316265106201
    8. '3' → logprob: -8.972315788269043
    9. 'group' → logprob: -8.972315788269043
    10. '[group' → logprob: -9.347315788269043

Token 594: ' groupe' (ID: 29494)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2847990393638611
    2. '][' → logprob: -1.4097990989685059
    3. ' [' → logprob: -6.534799098968506
    4. ' groupe' → logprob: -7.784799098968506
    5. 'group' → logprob: -8.159798622131348
    6. '[j' → logprob: -8.159798622131348
    7. ' ][' → logprob: -8.409798622131348
    8. ' group' → logprob: -8.534798622131348
    9. '[i' → logprob: -8.659798622131348
    10. 'dp' → logprob: -9.159798622131348

Token 595: ' avec' (ID: 3937)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2757682502269745
    2. '                   ' → logprob: -2.025768280029297
    3. ' dp' → logprob: -2.775768280029297
    4. '[' → logprob: -4.400768280029297
    5. '(dp' → logprob: -4.400768280029297
    6. '                       ' → logprob: -4.900768280029297
    7. 'if' → logprob: -5.525768280029297
    8. '               ' → logprob: -6.150768280029297
    9. ' if' → logprob: -6.400768280029297
    10. ',' → logprob: -6.650768280029297

Token 596: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.582406222820282
    2. 'a' → logprob: -0.957406222820282
    3. 'l' → logprob: -3.5824062824249268
    4. ' dp' → logprob: -4.707406044006348
    5. 'k' → logprob: -5.207406044006348
    6. ' a' → logprob: -5.207406044006348
    7. '+' → logprob: -6.082406044006348
    8. ' l' → logprob: -6.832406044006348
    9. 'i' → logprob: -6.957406044006348
    10. 'j' → logprob: -7.082406044006348

Token 597: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03345157951116562
    2. 'dp' → logprob: -4.158451557159424
    3. 'i' → logprob: -4.533451557159424
    4. '+' → logprob: -6.533451557159424
    5. '[i' → logprob: -6.783451557159424
    6. 'ast' → logprob: -7.158451557159424
    7. 'e' → logprob: -7.658451557159424
    8. '```' → logprob: -7.658451557159424
    9. ''aj' → logprob: -7.908451557159424
    10. 'max' → logprob: -8.283452033996582

Token 598: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08230804651975632
    2. 'élé' → logprob: -2.832308053970337
    3. 'element' → logprob: -4.332307815551758
    4. 'dp' → logprob: -6.082307815551758
    5. 'elem' → logprob: -6.707307815551758
    6. ' a' → logprob: -6.832307815551758
    7. 'i' → logprob: -6.957307815551758
    8. ' élément' → logprob: -7.582307815551758
    9. '```' → logprob: -8.832307815551758
    10. '+' → logprob: -8.957307815551758

Token 599: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.12520168721675873
    2. 'ément' → logprob: -2.25020170211792
    3. 'ement' → logprob: -4.62520170211792
    4. '   ' → logprob: -7.00020170211792
    5. '```' → logprob: -7.75020170211792
    6. 'e' → logprob: -8.000201225280762
    7. 'é' → logprob: -8.375201225280762
    8. 'è' → logprob: -9.625201225280762
    9. ' ' → logprob: -10.000201225280762
    10. '       ' → logprob: -10.000201225280762

Token 600: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03690379858016968
    2. '[' → logprob: -3.7869038581848145
    3. 'dp' → logprob: -5.9119038581848145
    4. 'i' → logprob: -6.1619038581848145
    5. 'selected' → logprob: -6.6619038581848145
    6. '1' → logprob: -6.7869038581848145
    7. ' [' → logprob: -6.9119038581848145
    8. '[j' → logprob: -7.1619038581848145
    9. ' dp' → logprob: -7.4119038581848145
    10. '```' → logprob: -7.5369038581848145

Token 601: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7257829904556274
    2. ' dp' → logprob: -1.3507829904556274
    3. '(dp' → logprob: -2.475782871246338
    4. '                   ' → logprob: -2.725782871246338
    5. ' =' → logprob: -2.975782871246338
    6. ' and' → logprob: -4.350782871246338
    7. ',' → logprob: -4.475782871246338
    8. '=' → logprob: -5.100782871246338
    9. ')' → logprob: -5.100782871246338
    10. '                       ' → logprob: -5.725782871246338

Token 602: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5487270355224609
    2. 'dp' → logprob: -1.423727035522461
    3. ' dp' → logprob: -2.298727035522461
    4. '(dp' → logprob: -3.048727035522461
    5. '[' → logprob: -4.173727035522461
    6. ')' → logprob: -5.548727035522461
    7. '[i' → logprob: -5.923727035522461
    8. '               ' → logprob: -6.423727035522461
    9. '                    
' → logprob: -6.423727035522461
    10. ',' → logprob: -6.673727035522461

Token 603: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.003302477765828371
    2. ' dp' → logprob: -5.878302574157715
    3. 'max' → logprob: -7.628302574157715
    4. ' max' → logprob: -11.753302574157715
    5. 'if' → logprob: -13.128302574157715
    6. '	dp' → logprob: -15.253302574157715
    7. '(dp' → logprob: -15.503302574157715
    8. '   ' → logprob: -16.1283016204834
    9. ' ' → logprob: -16.6283016204834
    10. ' if' → logprob: -16.8783016204834

Token 604: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -15.875001907348633
    4. '[I' → logprob: -16.500001907348633
    5. '```' → logprob: -17.125001907348633
    6. '\[' → logprob: -18.500001907348633
    7. 'i' → logprob: -19.000001907348633
    8. '][' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '[j' → logprob: -19.875001907348633

Token 605: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015942457830533385
    2. '][' → logprob: -6.501594066619873
    3. '[' → logprob: -9.626594543457031
    4. ' +' → logprob: -10.876594543457031
    5. '+[' → logprob: -13.501594543457031
    6. '[i' → logprob: -13.626594543457031
    7. ' ][' → logprob: -13.626594543457031
    8. '   ' → logprob: -13.876594543457031
    9. '+
' → logprob: -14.876594543457031
    10. '           ' → logprob: -15.126594543457031

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020644953474402428
    2. '3' → logprob: -6.2520647048950195
    3. '+' → logprob: -9.00206470489502
    4. '4' → logprob: -12.50206470489502
    5. 'max' → logprob: -13.37706470489502
    6. '2' → logprob: -13.62706470489502
    7. '```' → logprob: -13.62706470489502
    8. ' ' → logprob: -13.75206470489502
    9. 'i' → logprob: -13.87706470489502
    10. '[' → logprob: -14.12706470489502

Token 607: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25196272134780884
    2. '][' → logprob: -1.501962661743164
    3. ' [' → logprob: -11.501962661743164
    4. '}[' → logprob: -11.876962661743164
    5. ' ][' → logprob: -12.251962661743164
    6. ')[' → logprob: -12.751962661743164
    7. '>[' → logprob: -13.251962661743164
    8. ']' → logprob: -13.376962661743164
    9. '```' → logprob: -13.501962661743164
    10. '   ' → logprob: -13.876962661743164

Token 608: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'max' → logprob: -16.875001907348633
    4. '[' → logprob: -17.000001907348633
    5. 'j' → logprob: -17.937501907348633
    6. '```' → logprob: -17.937501907348633
    7. '   ' → logprob: -18.812501907348633
    8. '۳' → logprob: -19.187501907348633
    9. '...' → logprob: -19.312501907348633
    10. '33' → logprob: -19.625001907348633

Token 609: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014195474795997143
    2. '[' → logprob: -4.264195442199707
    3. ' ][' → logprob: -11.389195442199707
    4. '           ' → logprob: -12.389195442199707
    5. '   ' → logprob: -12.389195442199707
    6. ']' → logprob: -12.639195442199707
    7. '       ' → logprob: -13.639195442199707
    8. ' [' → logprob: -13.639195442199707
    9. ')[' → logprob: -13.764195442199707
    10. ']][' → logprob: -14.139195442199707

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.375005722045898
    3. 'max' → logprob: -13.750005722045898
    4. '   ' → logprob: -15.125005722045898
    5. '[' → logprob: -15.500005722045898
    6. '  ' → logprob: -16.2500057220459
    7. '0' → logprob: -16.7500057220459
    8. ' max' → logprob: -17.0625057220459
    9. '```' → logprob: -17.5000057220459
    10. '                   ' → logprob: -17.5625057220459

Token 611: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015872348740231246
    2. ']=' → logprob: -9.250158309936523
    3. '])' → logprob: -10.875158309936523
    4. ')' → logprob: -10.875158309936523
    5. ' ]' → logprob: -11.500158309936523
    6. '],' → logprob: -12.000158309936523
    7. ')]' → logprob: -12.625158309936523
    8. '=' → logprob: -13.000158309936523
    9. ']
' → logprob: -14.250158309936523
    10. '                   ' → logprob: -14.500158309936523

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010314454324543476
    2. ' =' → logprob: -4.635314464569092
    3. ']' → logprob: -7.760314464569092
    4. ']=' → logprob: -9.260313987731934
    5. ')' → logprob: -10.385313987731934
    6. ')=' → logprob: -12.635313987731934
    7. '=max' → logprob: -13.385313987731934
    8. 'max' → logprob: -15.010313987731934
    9. ']+=' → logprob: -15.510313987731934
    10. '+=' → logprob: -15.510313987731934

Token 613: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759450793266296
    2. 'max' → logprob: -0.8259450793266296
    3. 'dp' → logprob: -12.575944900512695
    4. ' dp' → logprob: -13.200944900512695
    5. ' ' → logprob: -16.075944900512695
    6. '(max' → logprob: -16.575944900512695
    7. '	max' → logprob: -16.950944900512695
    8. '=max' → logprob: -17.450944900512695
    9. ' ' → logprob: -18.325944900512695
    10. '   ' → logprob: -18.575944900512695

Token 614: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005549400229938328
    2. '(' → logprob: -7.500555038452148
    3. ' (' → logprob: -14.125555038452148
    4. '(
' → logprob: -14.500555038452148
    5. 'dp' → logprob: -14.750555038452148
    6. ' dp' → logprob: -16.25055503845215
    7. '(max' → logprob: -17.62555503845215
    8. '	dp' → logprob: -18.00055503845215
    9. '(df' → logprob: -18.37555503845215
    10. '(dt' → logprob: -18.87555503845215

Token 615: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -13.125004768371582
    3. 'i' → logprob: -13.250004768371582
    4. 'dp' → logprob: -15.500004768371582
    5. '```' → logprob: -15.875004768371582
    6. '(i' → logprob: -16.875003814697266
    7. '{i' → logprob: -18.500003814697266
    8. '[
' → logprob: -18.500003814697266
    9. ' [' → logprob: -18.500003814697266
    10. '[j' → logprob: -18.625003814697266

Token 616: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5235823392868042
    2. '[i' → logprob: -0.8985823392868042
    3. '[' → logprob: -8.648582458496094
    4. 'i' → logprob: -9.023582458496094
    5. ']' → logprob: -9.523582458496094
    6. ' ][' → logprob: -10.523582458496094
    7. '   ' → logprob: -10.898582458496094
    8. '}[' → logprob: -11.773582458496094
    9. '[j' → logprob: -12.148582458496094
    10. '(i' → logprob: -12.398582458496094

Token 617: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0021882106084376574
    2. 'i' → logprob: -6.127188205718994
    3. ' ' → logprob: -13.252188682556152
    4. ' i' → logprob: -14.502188682556152
    5. '   ' → logprob: -15.127188682556152
    6. 'j' → logprob: -16.002187728881836
    7. '2' → logprob: -16.377187728881836
    8. '[' → logprob: -16.502187728881836
    9. '```' → logprob: -16.752187728881836
    10. '[i' → logprob: -17.127187728881836

Token 618: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0025578304193913937
    2. '[' → logprob: -6.002557754516602
    3. ' ][' → logprob: -10.252557754516602
    4. '           ' → logprob: -11.502557754516602
    5. ']' → logprob: -11.877557754516602
    6. ')[' → logprob: -12.002557754516602
    7. '   ' → logprob: -12.252557754516602
    8. '       ' → logprob: -12.502557754516602
    9. '1' → logprob: -12.752557754516602
    10. ' ' → logprob: -13.127557754516602

Token 619: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.750007629394531
    3. '0' → logprob: -13.250007629394531
    4. '   ' → logprob: -13.625007629394531
    5. '
' → logprob: -14.750007629394531
    6. 'k' → logprob: -15.875007629394531
    7. '           ' → logprob: -16.18750762939453
    8. '       ' → logprob: -16.37500762939453
    9. '  ' → logprob: -16.43750762939453
    10. '    ' → logprob: -16.68750762939453

Token 620: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12395882606506348
    2. ']+' → logprob: -2.3739588260650635
    3. '+' → logprob: -4.123958587646484
    4. ' +' → logprob: -5.498958587646484
    5. '],' → logprob: -5.998958587646484
    6. ',' → logprob: -7.748958587646484
    7. ' ]' → logprob: -8.873958587646484
    8. '   ' → logprob: -10.123958587646484
    9. '           ' → logprob: -10.748958587646484
    10. '+]' → logprob: -11.373958587646484

Token 621: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024762547109276056
    2. ' a' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.627476692199707
    4. ' ' → logprob: -16.75247573852539
    5. '           ' → logprob: -17.25247573852539
    6. '       ' → logprob: -17.37747573852539
    7. '     ' → logprob: -17.50247573852539
    8. '    ' → logprob: -17.62747573852539
    9. '(a' → logprob: -17.75247573852539
    10. '	a' → logprob: -17.87747573852539

Token 622: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000460935989394784
    2. '[' → logprob: -7.750461101531982
    3. 'i' → logprob: -10.750460624694824
    4. ' [' → logprob: -12.500460624694824
    5. ']' → logprob: -13.750460624694824
    6. '[
' → logprob: -14.000460624694824
    7. '][' → logprob: -14.250460624694824
    8. 'a' → logprob: -14.375460624694824
    9. '```' → logprob: -14.750460624694824
    10. '[I' → logprob: -15.000460624694824

Token 623: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.05708537623286247
    2. ']' → logprob: -3.5570852756500244
    3. ' ],' → logprob: -3.6820852756500244
    4. ',' → logprob: -6.6820855140686035
    5. ' ]' → logprob: -8.807085037231445
    6. ' ,' → logprob: -9.057085037231445
    7. '],
' → logprob: -9.432085037231445
    8. '[i' → logprob: -9.432085037231445
    9. '+' → logprob: -10.307085037231445
    10. ''],' → logprob: -10.682085037231445

Token 624: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021861877758055925
    2. ' dp' → logprob: -6.127186298370361
    3. '	dp' → logprob: -14.877185821533203
    4. 'a' → logprob: -16.127185821533203
    5. '           ' → logprob: -16.252185821533203
    6. ' ' → logprob: -16.377185821533203
    7. '       ' → logprob: -16.377185821533203
    8. 'd' → logprob: -16.627185821533203
    9. '   ' → logprob: -16.627185821533203
    10. '(dp' → logprob: -16.752185821533203

Token 625: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.125000953674316
    3. '[' → logprob: -16.625001907348633
    4. '```' → logprob: -16.625001907348633
    5. '{i' → logprob: -17.875001907348633
    6. '(i' → logprob: -17.875001907348633
    7. '][' → logprob: -18.750001907348633
    8. ')[' → logprob: -18.750001907348633
    9. ')' → logprob: -18.875001907348633
    10. '[
' → logprob: -19.375001907348633

Token 626: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011236425780225545
    2. '][' → logprob: -9.375112533569336
    3. '[' → logprob: -11.125112533569336
    4. '[i' → logprob: -11.500112533569336
    5. ' +' → logprob: -14.375112533569336
    6. 'i' → logprob: -14.500112533569336
    7. '+[' → logprob: -14.750112533569336
    8. '+i' → logprob: -15.250112533569336
    9. '+
' → logprob: -15.625112533569336
    10. '-' → logprob: -15.875112533569336

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026264766231179237
    2. 'i' → logprob: -3.9012646675109863
    3. '3' → logprob: -5.776264667510986
    4. '+' → logprob: -6.276264667510986
    5. '2' → logprob: -8.026265144348145
    6. '[i' → logprob: -8.151265144348145
    7. '[' → logprob: -9.901265144348145
    8. '(i' → logprob: -10.901265144348145
    9. '][' → logprob: -11.401265144348145
    10. '```' → logprob: -12.151265144348145

Token 628: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16028687357902527
    2. '][' → logprob: -1.9102869033813477
    3. ')[' → logprob: -10.285286903381348
    4. '}[' → logprob: -11.160286903381348
    5. '```' → logprob: -12.160286903381348
    6. '[i' → logprob: -12.410286903381348
    7. ' ][' → logprob: -13.660286903381348
    8. ''][' → logprob: -14.410286903381348
    9. '   ' → logprob: -14.535286903381348
    10. ' [' → logprob: -14.535286903381348

Token 629: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.875
    5. '   ' → logprob: -17.125
    6. '```' → logprob: -17.875
    7. '
' → logprob: -19.375
    8. '３' → logprob: -20.0
    9. '           ' → logprob: -20.125
    10. '۳' → logprob: -20.375

Token 630: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03366817533969879
    2. '[' → logprob: -3.408668279647827
    3. ']' → logprob: -11.908668518066406
    4. ' ][' → logprob: -12.283668518066406
    5. '   ' → logprob: -13.408668518066406
    6. '3' → logprob: -13.408668518066406
    7. '```' → logprob: -13.533668518066406
    8. '[i' → logprob: -13.783668518066406
    9. '           ' → logprob: -13.908668518066406
    10. '       ' → logprob: -13.908668518066406

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -12.250008583068848
    3. ' ' → logprob: -13.125008583068848
    4. '```' → logprob: -15.250008583068848
    5. '   ' → logprob: -15.437508583068848
    6. '3' → logprob: -16.12500762939453
    7. '0' → logprob: -16.62500762939453
    8. 'a' → logprob: -16.81250762939453
    9. '  ' → logprob: -16.93750762939453
    10. 'max' → logprob: -16.93750762939453

Token 632: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038759857416152954
    2. ')
' → logprob: -3.28875994682312
    3. '               ' → logprob: -7.288759708404541
    4. '                   ' → logprob: -10.6637601852417
    5. ')
' → logprob: -12.2887601852417
    6. '           ' → logprob: -12.7887601852417
    7. ')

' → logprob: -13.9137601852417
    8. '                       ' → logprob: -14.1637601852417
    9. '   ' → logprob: -14.6637601852417
    10. '       ' → logprob: -14.9137601852417

Token 633: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010171446017920971
    2. '                   ' → logprob: -5.385171413421631
    3. '<|end|>' → logprob: -5.760171413421631
    4. 'else' → logprob: -7.260171413421631
    5. '                               ' → logprob: -7.885171413421631
    6. ' else' → logprob: -7.885171413421631
    7. '                       ' → logprob: -8.635171890258789
    8. '```' → logprob: -8.885171890258789
    9. '                ' → logprob: -9.135171890258789
    10. 'elif' → logprob: -9.385171890258789

Token 634: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29914313554763794
    2. 'else' → logprob: -1.6741430759429932
    3. ' else' → logprob: -2.674143075942993
    4. 'elif' (adapté à ' elif') → logprob: -6.424143314361572
    5. '                   ' → logprob: -8.549142837524414
    6. ' elif' → logprob: -8.924142837524414
    7. '           ' → logprob: -10.049142837524414
    8. '```' → logprob: -10.549142837524414
    9. 'continue' → logprob: -10.799142837524414
    10. '                               ' → logprob: -11.174142837524414

Token 635: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3078315258026123
    2. 'j' → logprob: -1.6828315258026123
    3. ' k' → logprob: -3.0578315258026123
    4. ' j' → logprob: -3.5578315258026123
    5. '0' → logprob: -6.557831764221191
    6. 'dp' → logprob: -6.807831764221191
    7. ' dp' → logprob: -8.182831764221191
    8. '   ' → logprob: -8.307831764221191
    9. ' ' → logprob: -8.307831764221191
    10. ' not' → logprob: -9.557831764221191

Token 636: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14505204558372498
    2. ' ==' → logprob: -2.645051956176758
    3. '==' → logprob: -3.770051956176758
    4. ' +' → logprob: -4.020051956176758
    5. '][' → logprob: -5.395051956176758
    6. '[' → logprob: -5.645051956176758
    7. ' +=' → logprob: -5.895051956176758
    8. ' <' → logprob: -6.270051956176758
    9. ']' → logprob: -6.520051956176758
    10. '+=' → logprob: -6.645051956176758

Token 637: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034435294568538666
    2. ' ' → logprob: -3.409435272216797
    3. '1' → logprob: -7.534435272216797
    4. '2' → logprob: -8.284435272216797
    5. '3' → logprob: -13.784435272216797
    6. '   ' → logprob: -14.659435272216797
    7. '
' → logprob: -15.721935272216797
    8. '  ' → logprob: -15.971935272216797
    9. '...' → logprob: -16.221935272216797
    10. '    ' → logprob: -16.346935272216797

Token 638: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0852460190653801
    2. '2' → logprob: -2.5852460861206055
    3. '1' → logprob: -5.0852460861206055
    4. ' ' → logprob: -8.835246086120605
    5. '3' → logprob: -13.335246086120605
    6. '   ' → logprob: -14.647746086120605
    7. '
' → logprob: -15.022746086120605
    8. '4' → logprob: -16.08524513244629
    9. '```' → logprob: -16.21024513244629
    10. '  ' → logprob: -16.77274513244629

Token 639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6476305723190308
    2. ':
' → logprob: -0.8976305723190308
    3. '               ' → logprob: -3.1476306915283203
    4. '                   ' → logprob: -3.7726306915283203
    5. '[' → logprob: -6.64763069152832
    6. '           ' → logprob: -7.02263069152832
    7. '                       ' → logprob: -7.89763069152832
    8. '   ' → logprob: -8.52263069152832
    9. '       ' → logprob: -9.02263069152832
    10. ' :
' → logprob: -9.52263069152832

Token 640: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015148386359214783
    2. '               ' → logprob: -4.515148162841797
    3. '                       ' → logprob: -5.640148162841797
    4. '           ' → logprob: -8.765148162841797
    5. '#' → logprob: -9.390148162841797
    6. '   ' → logprob: -9.515148162841797
    7. '       ' → logprob: -10.390148162841797
    8. '                    
' → logprob: -10.390148162841797
    9. '                               ' → logprob: -10.640148162841797
    10. '                           ' → logprob: -10.640148162841797

Token 641: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1020427942276001
    2. 'dp' → logprob: -3.1020426750183105
    3. '               ' → logprob: -3.4770426750183105
    4. ' dp' → logprob: -4.8520426750183105
    5. '#' (adapté à ' #') → logprob: -5.1020426750183105
    6. '                       ' → logprob: -5.2270426750183105
    7. '           ' → logprob: -7.7270426750183105
    8. ' #' → logprob: -7.7270426750183105
    9. '                    ' → logprob: -8.477043151855469
    10. ' if' → logprob: -8.602043151855469

Token 642: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34467431902885437
    2. 'dp' → logprob: -1.3446743488311768
    3. 'if' → logprob: -3.5946743488311768
    4. '                   ' → logprob: -6.219674110412598
    5. ' #' → logprob: -7.344674110412598
    6. ' dp' → logprob: -8.094674110412598
    7. '               ' → logprob: -8.219674110412598
    8. ' if' → logprob: -9.344674110412598
    9. 'for' → logprob: -9.719674110412598
    10. '
' → logprob: -10.719674110412598

Token 643: ' du' (ID: 1462)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0890677198767662
    2. '               ' → logprob: -2.7140676975250244
    3. ' ' → logprob: -4.7140679359436035
    4. '                       ' → logprob: -6.0890679359436035
    5. '0' → logprob: -6.2140679359436035
    6. '1' → logprob: -6.7140679359436035
    7. 'elif' → logprob: -7.4640679359436035
    8. ' elif' → logprob: -7.5890679359436035
    9. '           ' → logprob: -7.7140679359436035
    10. '   ' → logprob: -7.9640679359436035

Token 644: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3282582461833954
    2. 'for' → logprob: -2.0782582759857178
    3. 'if' → logprob: -2.3282582759857178
    4. '#' → logprob: -4.328258037567139
    5. ' for' → logprob: -4.578258037567139
    6. ' dp' → logprob: -4.953258037567139
    7. 'elif' → logprob: -4.953258037567139
    8. 'k' → logprob: -5.203258037567139
    9. ' if' → logprob: -5.328258037567139
    10. 'max' → logprob: -6.078258037567139

Token 645: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23277541995048523
    2. 'elif' → logprob: -2.1077754497528076
    3. 'i' → logprob: -3.6077754497528076
    4. 'if' → logprob: -3.7327754497528076
    5. 'else' → logprob: -4.6077752113342285
    6. 'dp' → logprob: -4.9827752113342285
    7. 'j' → logprob: -5.1077752113342285
    8. 'k' → logprob: -6.4827752113342285
    9. '           ' → logprob: -6.7327752113342285
    10. '```' → logprob: -6.7327752113342285

Token 646: 'e' (ID: 68)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.440857857465744
    2. '                   ' → logprob: -1.9408578872680664
    3. '               ' → logprob: -2.5658578872680664
    4. 'for' → logprob: -3.3158578872680664
    5. '       ' → logprob: -3.9408578872680664
    6. ':' → logprob: -3.9408578872680664
    7. '           ' → logprob: -4.315857887268066
    8. '                       ' → logprob: -4.440857887268066
    9. ':
' → logprob: -4.565857887268066
    10. ' for' → logprob: -5.190857887268066

Token 647: ' groupe' (ID: 29494)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0346742868423462
    2. 'j' → logprob: -1.6596742868423462
    3. '[j' → logprob: -2.4096741676330566
    4. ':' → logprob: -2.9096741676330566
    5. ' j' → logprob: -2.9096741676330566
    6. '][' → logprob: -3.0346741676330566
    7. ' for' → logprob: -3.5346741676330566
    8. ' :' → logprob: -3.5346741676330566
    9. 'for' → logprob: -3.5346741676330566
    10. '[' → logprob: -3.5346741676330566

Token 648: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02582956850528717
    2. '                       ' → logprob: -4.775829792022705
    3. ':
' → logprob: -4.900829792022705
    4. ':' → logprob: -4.900829792022705
    5. '               ' → logprob: -6.400829792022705
    6. '                           ' → logprob: -9.275829315185547
    7. '                    
' → logprob: -9.775829315185547
    8. 'dp' → logprob: -9.900829315185547
    9. '   ' → logprob: -10.025829315185547
    10. '                    ' → logprob: -10.150829315185547

Token 649: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.043548405170440674
    2. '                       ' → logprob: -3.418548345565796
    3. ':
' → logprob: -5.668548583984375
    4. '               ' → logprob: -5.793548583984375
    5. ':' → logprob: -5.918548583984375
    6. '```' → logprob: -8.793548583984375
    7. '   ' → logprob: -9.168548583984375
    8. '                           ' → logprob: -10.043548583984375
    9. '           ' → logprob: -10.168548583984375
    10. 'dp' → logprob: -10.293548583984375

Token 650: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6716516017913818
    2. 'dp' → logprob: -0.9216516017913818
    3. ' dp' → logprob: -2.796651601791382
    4. '                       ' → logprob: -4.046651840209961
    5. '               ' → logprob: -4.671651840209961
    6. 'if' → logprob: -6.921651840209961
    7. ' if' → logprob: -7.171651840209961
    8. '                    ' → logprob: -8.171651840209961
    9. '           ' → logprob: -8.296651840209961
    10. '   ' → logprob: -9.046651840209961

Token 651: ' Cl' (ID: 2190)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08404069393873215
    2. '#' → logprob: -2.834040641784668
    3. '                   ' → logprob: -4.459040641784668
    4. 'if' → logprob: -4.709040641784668
    5. '               ' → logprob: -7.584040641784668
    6. ' dp' → logprob: -7.709040641784668
    7. ' #' → logprob: -9.334040641784668
    8. '                       ' → logprob: -9.459040641784668
    9. ' if' → logprob: -10.459040641784668
    10. 'for' → logprob: -10.959040641784668

Token 652: 'ore' (ID: 510)
  Prédit: 'ore'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.6167285442352295
    2. 'ose' → logprob: -0.9917285442352295
    3. 'oser' → logprob: -3.2417285442352295
    4. 'dp' → logprob: -4.366728782653809
    5. 'os' → logprob: -4.616728782653809
    6. 'o' → logprob: -4.741728782653809
    7. 'osure' → logprob: -5.116728782653809
    8. 'osing' → logprob: -5.991728782653809
    9. '   ' → logprob: -6.366728782653809
    10. 'e' → logprob: -7.366728782653809

Token 653: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0436680316925049
    2. '                   ' → logprob: -1.2936680316925049
    3. ' dp' → logprob: -1.4186680316925049
    4. ' le' → logprob: -2.543668031692505
    5. '               ' → logprob: -3.418668031692505
    6. '(dp' → logprob: -4.668667793273926
    7. 'le' → logprob: -6.043667793273926
    8. ' les' → logprob: -6.418667793273926
    9. 'if' → logprob: -6.543667793273926
    10. '                       ' → logprob: -6.918667793273926

Token 654: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.07478600740432739
    2. ' segment' → logprob: -2.6997859477996826
    3. 'dp' → logprob: -5.449786186218262
    4. ' dp' → logprob: -7.824786186218262
    5. 'seg' → logprob: -9.949786186218262
    6. '   ' → logprob: -10.574786186218262
    7. 'segments' → logprob: -11.824786186218262
    8. '       ' → logprob: -12.324786186218262
    9. '                   ' → logprob: -12.574786186218262
    10. '#' → logprob: -12.574786186218262

Token 655: ' courant' (ID: 74694)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23446105420589447
    2. 'dp' → logprob: -1.6094610691070557
    3. ' dp' → logprob: -5.359460830688477
    4. '               ' → logprob: -5.984460830688477
    5. '(dp' → logprob: -6.984460830688477
    6. '                       ' → logprob: -8.109460830688477
    7. 'if' → logprob: -8.984460830688477
    8. '                    
' → logprob: -8.984460830688477
    9. ',' → logprob: -9.484460830688477
    10. '                  ' → logprob: -10.359460830688477

Token 656: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010613501071929932
    2. 'dp' → logprob: -4.635613441467285
    3. '               ' → logprob: -8.260613441467285
    4. '                       ' → logprob: -8.385613441467285
    5. '(dp' → logprob: -8.885613441467285
    6. ' dp' → logprob: -9.010613441467285
    7. 'if' → logprob: -10.260613441467285
    8. ',' → logprob: -10.510613441467285
    9. '                    
' → logprob: -11.760613441467285
    10. '                    ' → logprob: -11.760613441467285

Token 657: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019955681636929512
    2. 'dp' → logprob: -4.019955635070801
    3. '               ' → logprob: -6.894955635070801
    4. '                       ' → logprob: -8.2699556350708
    5. ' dp' → logprob: -8.7699556350708
    6. '(dp' → logprob: -8.8949556350708
    7. 'if' → logprob: -9.6449556350708
    8. ',' → logprob: -9.6449556350708
    9. '   ' → logprob: -10.2699556350708
    10. ':' → logprob: -11.5199556350708

Token 658: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.006417993921786547
    2. ' dp' → logprob: -5.506418228149414
    3. '                   ' → logprob: -6.131418228149414
    4. '                       ' → logprob: -9.131418228149414
    5. '               ' → logprob: -10.381418228149414
    6. 'if' → logprob: -11.131418228149414
    7. '                           ' → logprob: -13.131418228149414
    8. '(dp' → logprob: -13.256418228149414
    9. '```' → logprob: -13.506418228149414
    10. '	dp' → logprob: -13.881418228149414

Token 659: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.875
    3. 'i' → logprob: -16.875
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. '[I' → logprob: -17.375
    7. ' [' → logprob: -17.625
    8. '[j' → logprob: -18.375
    9. '\[' → logprob: -19.25
    10. 'dp' → logprob: -19.625

Token 660: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015252856246661395
    2. '][' → logprob: -9.750152587890625
    3. '[i' → logprob: -10.000152587890625
    4. ' +' → logprob: -10.625152587890625
    5. '[' → logprob: -10.750152587890625
    6. '+i' → logprob: -14.000152587890625
    7. '＋' → logprob: -14.750152587890625
    8. '+
' → logprob: -14.875152587890625
    9. '   ' → logprob: -14.875152587890625
    10. ']+' → logprob: -15.375152587890625

Token 661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002550217031966895
    2. '2' → logprob: -8.87525463104248
    3. '+' → logprob: -9.37525463104248
    4. '3' → logprob: -10.50025463104248
    5. 'i' → logprob: -13.75025463104248
    6. '   ' → logprob: -13.87525463104248
    7. ' ' → logprob: -15.00025463104248
    8. '```' → logprob: -16.375255584716797
    9. '][' → logprob: -16.750255584716797
    10. '[i' → logprob: -16.875255584716797

Token 662: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10034501552581787
    2. '[' → logprob: -2.3503451347351074
    3. '[j' → logprob: -9.22534465789795
    4. '           ' → logprob: -11.97534465789795
    5. '}[' → logprob: -12.22534465789795
    6. '                   ' → logprob: -12.47534465789795
    7. ']' → logprob: -12.60034465789795
    8. ''][' → logprob: -12.72534465789795
    9. '```' → logprob: -12.85034465789795
    10. ')[' → logprob: -12.85034465789795

Token 663: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002124806633219123
    2. '3' → logprob: -8.625212669372559
    3. 'j' → logprob: -10.625212669372559
    4. ' ' → logprob: -12.375212669372559
    5. '   ' → logprob: -12.875212669372559
    6. '1' → logprob: -13.750212669372559
    7. '```' → logprob: -16.000211715698242
    8. '           ' → logprob: -16.375211715698242
    9. '       ' → logprob: -16.750211715698242
    10. '
' → logprob: -16.875211715698242

Token 664: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007135047344490886
    2. '[' → logprob: -7.250713348388672
    3. ']' → logprob: -13.750713348388672
    4. ' ][' → logprob: -13.875713348388672
    5. '           ' → logprob: -14.250713348388672
    6. '}[' → logprob: -15.875713348388672
    7. '       ' → logprob: -16.250713348388672
    8. ''][' → logprob: -16.375713348388672
    9. '0' → logprob: -16.500713348388672
    10. '   ' → logprob: -16.500713348388672

Token 665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.375
    3. '   ' → logprob: -18.5
    4. ' ' → logprob: -18.75
    5. '[' → logprob: -19.25
    6. 'max' → logprob: -19.5
    7. '                   ' → logprob: -20.0
    8. '
' → logprob: -20.375
    9. '۰' → logprob: -20.5
    10. '           ' → logprob: -21.0625

Token 666: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.517272024415433e-05
    2. ']=' → logprob: -10.125075340270996
    3. ')' → logprob: -10.625075340270996
    4. '=' → logprob: -12.000075340270996
    5. '   ' → logprob: -13.375075340270996
    6. '                   ' → logprob: -13.750075340270996
    7. '           ' → logprob: -14.125075340270996
    8. '               ' → logprob: -14.500075340270996
    9. ' ]' → logprob: -15.000075340270996
    10. ' =' → logprob: -15.625075340270996

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718925200402737
    2. ' =' → logprob: -5.00671911239624
    3. '=max' → logprob: -13.131718635559082
    4. 'max' → logprob: -13.881718635559082
    5. ')' → logprob: -14.881718635559082
    6. ']' → logprob: -15.881718635559082
    7. ']=' → logprob: -16.6317195892334
    8. '   ' → logprob: -17.1317195892334
    9. ')=' → logprob: -17.6317195892334
    10. '>' → logprob: -19.5067195892334

Token 668: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01416350994259119
    2. ' max' → logprob: -4.264163494110107
    3. '(max' → logprob: -17.764163970947266
    4. '=max' → logprob: -18.264163970947266
    5. '	max' → logprob: -18.639163970947266
    6. '[max' → logprob: -19.514163970947266
    7. ' ' → logprob: -20.514163970947266
    8. '_max' → logprob: -20.764163970947266
    9. 'm' → logprob: -20.764163970947266
    10. 'min' → logprob: -21.139163970947266

Token 669: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00020425561524461955
    2. 'dp' → logprob: -8.500204086303711
    3. '(' → logprob: -14.625204086303711
    4. '(
' → logprob: -15.375204086303711
    5. '	dp' → logprob: -17.12520408630371
    6. ' dp' → logprob: -17.37520408630371
    7. '(max' → logprob: -19.62520408630371
    8. 'max' → logprob: -20.37520408630371
    9. ' (' → logprob: -20.62520408630371
    10. '   ' → logprob: -21.12520408630371

Token 670: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.700132997939363e-05
    2. 'i' → logprob: -11.000017166137695
    3. '[' → logprob: -15.500017166137695
    4. '{i' → logprob: -17.125017166137695
    5. '```' → logprob: -18.000017166137695
    6. '(i' → logprob: -18.375017166137695
    7. '   ' → logprob: -18.750017166137695
    8. '[
' → logprob: -19.750017166137695
    9. ' i' → logprob: -19.750017166137695
    10. ' [' → logprob: -19.750017166137695

Token 671: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026369385421276093
    2. '][' → logprob: -3.651369333267212
    3. '[' → logprob: -10.776369094848633
    4. ']' → logprob: -11.276369094848633
    5. 'i' → logprob: -11.526369094848633
    6. '}[' → logprob: -11.901369094848633
    7. '```' → logprob: -12.526369094848633
    8. '(i' → logprob: -12.651369094848633
    9. '{i' → logprob: -13.026369094848633
    10. '+' → logprob: -13.151369094848633

Token 672: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010759611177491024
    2. 'j' → logprob: -9.875107765197754
    3. 'i' → logprob: -10.000107765197754
    4. ' ' → logprob: -12.125107765197754
    5. '   ' → logprob: -13.000107765197754
    6. '1' → logprob: -13.375107765197754
    7. '3' → logprob: -14.125107765197754
    8. '```' → logprob: -15.250107765197754
    9. '  ' → logprob: -16.625106811523438
    10. ' j' → logprob: -16.750106811523438

Token 673: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009875076822936535
    2. '[' → logprob: -4.634875297546387
    3. '   ' → logprob: -10.134875297546387
    4. '1' → logprob: -10.634875297546387
    5. '[i' → logprob: -11.134875297546387
    6. ' ][' → logprob: -11.134875297546387
    7. ']' → logprob: -11.884875297546387
    8. '       ' → logprob: -12.759875297546387
    9. '[j' → logprob: -13.009875297546387
    10. ')[' → logprob: -13.259875297546387

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011898684315383434
    2. '0' → logprob: -6.751189708709717
    3. 'k' → logprob: -11.001190185546875
    4. '   ' → logprob: -13.751190185546875
    5. ' ' → logprob: -14.376190185546875
    6. '[' → logprob: -14.876190185546875
    7. '    
' → logprob: -15.376190185546875
    8. '`' → logprob: -16.313690185546875
    9. 'i' → logprob: -16.376190185546875
    10. '```' → logprob: -16.751190185546875

Token 675: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0002019907406065613
    2. ',' → logprob: -8.625202178955078
    3. ']' → logprob: -11.750202178955078
    4. '                   ' → logprob: -11.875202178955078
    5. '               ' → logprob: -13.000202178955078
    6. '           ' → logprob: -13.375202178955078
    7. '],
' → logprob: -13.625202178955078
    8. ' ],' → logprob: -13.875202178955078
    9. 'dp' → logprob: -14.375202178955078
    10. ''],' → logprob: -15.875202178955078

Token 676: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.06197037547826767
    2. 'dp' → logprob: -2.8119704723358154
    3. '(dp' → logprob: -13.186970710754395
    4. '	dp' → logprob: -14.436970710754395
    5. '_dp' → logprob: -15.311970710754395
    6. '.dp' → logprob: -17.186969757080078
    7. '                   ' → logprob: -17.436969757080078
    8. ' ' → logprob: -18.186969757080078
    9. ')' → logprob: -18.936969757080078
    10. '                           ' → logprob: -19.061969757080078

Token 677: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018697108316700906
    2. '][' → logprob: -9.125186920166016
    3. 'i' → logprob: -9.500186920166016
    4. '(i' → logprob: -13.375186920166016
    5. '```' → logprob: -14.125186920166016
    6. '[' → logprob: -15.750186920166016
    7. ']' → logprob: -16.125186920166016
    8. '   ' → logprob: -16.375186920166016
    9. '{i' → logprob: -16.500186920166016
    10. ' [' → logprob: -16.875186920166016

Token 678: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015102163888514042
    2. '][' → logprob: -6.501510143280029
    3. '[i' → logprob: -13.001510620117188
    4. '+i' → logprob: -13.251510620117188
    5. ' +' → logprob: -13.251510620117188
    6. '   ' → logprob: -13.751510620117188
    7. 'i' → logprob: -15.001510620117188
    8. '[' → logprob: -15.251510620117188
    9. ']+' → logprob: -15.626510620117188
    10. '+[' → logprob: -16.501510620117188

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.514650183613412e-05
    2. '+' → logprob: -9.875055313110352
    3. '2' → logprob: -13.375055313110352
    4. 'i' → logprob: -13.750055313110352
    5. '```' → logprob: -14.375055313110352
    6. '   ' → logprob: -15.750055313110352
    7. ' ' → logprob: -15.875055313110352
    8. '
' → logprob: -16.25005531311035
    9. 'j' → logprob: -17.25005531311035
    10. '-' → logprob: -17.37505531311035

Token 680: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2522117495536804
    2. '[i' → logprob: -1.5022118091583252
    3. '[' → logprob: -9.502211570739746
    4. ' ][' → logprob: -10.127211570739746
    5. '   ' → logprob: -10.252211570739746
    6. '```' → logprob: -10.377211570739746
    7. '           ' → logprob: -10.752211570739746
    8. ' [' → logprob: -11.377211570739746
    9. ')[' → logprob: -11.502211570739746
    10. '[j' → logprob: -11.502211570739746

Token 681: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.840432565193623e-05
    2. 'i' → logprob: -9.625088691711426
    3. '   ' → logprob: -11.875088691711426
    4. '3' → logprob: -12.000088691711426
    5. ' ' → logprob: -12.000088691711426
    6. '```' → logprob: -13.875088691711426
    7. '1' → logprob: -14.500088691711426
    8. '  ' → logprob: -15.375088691711426
    9. '[i' → logprob: -15.500088691711426
    10. '0' → logprob: -15.500088691711426

Token 682: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00882161408662796
    2. '[' → logprob: -4.758821487426758
    3. '[i' → logprob: -9.383821487426758
    4. ' ][' → logprob: -9.508821487426758
    5. '   ' → logprob: -11.008821487426758
    6. '0' → logprob: -11.883821487426758
    7. ']' → logprob: -12.508821487426758
    8. '       ' → logprob: -12.758821487426758
    9. '```' → logprob: -12.758821487426758
    10. '           ' → logprob: -13.008821487426758

Token 683: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '1' → logprob: -14.625003814697266
    5. '```' → logprob: -16.125003814697266
    6. '2' → logprob: -16.937503814697266
    7. '  ' → logprob: -17.000003814697266
    8. '[' → logprob: -17.375003814697266
    9. ']' → logprob: -17.375003814697266
    10. '۰' → logprob: -17.750003814697266

Token 684: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12808872759342194
    2. ')
' → logprob: -2.1280887126922607
    3. '               ' → logprob: -7.12808895111084
    4. '                   ' → logprob: -8.00308895111084
    5. ')
' → logprob: -11.50308895111084
    6. '   ' → logprob: -12.75308895111084
    7. '           ' → logprob: -12.75308895111084
    8. '                       ' → logprob: -13.37808895111084
    9. ')

' → logprob: -13.87808895111084
    10. ' )' → logprob: -13.87808895111084

Token 685: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0279824361205101
    2. '               ' → logprob: -3.652982473373413
    3. 'dp' → logprob: -7.527982234954834
    4. '                       ' → logprob: -7.777982234954834
    5. '```' → logprob: -7.902982234954834
    6. '                    
' → logprob: -9.277982711791992
    7. '                               ' → logprob: -9.652982711791992
    8. '           ' → logprob: -10.027982711791992
    9. '                    ' → logprob: -10.277982711791992
    10. '                           ' → logprob: -10.652982711791992

Token 686: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12953360378742218
    2. 'dp' → logprob: -2.129533529281616
    3. '               ' → logprob: -6.879533767700195
    4. ' dp' → logprob: -7.004533767700195
    5. '                       ' → logprob: -8.504533767700195
    6. '#' (adapté à ' #') → logprob: -8.754533767700195
    7. '                    ' → logprob: -9.754533767700195
    8. '           ' → logprob: -10.129533767700195
    9. '```' → logprob: -10.129533767700195
    10. '                  ' → logprob: -10.254533767700195

Token 687: ' P' (ID: 398)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004749983490910381
    2. '                   ' → logprob: -8.12547492980957
    3. ' dp' → logprob: -8.75047492980957
    4. '               ' → logprob: -11.37547492980957
    5. '                               ' → logprob: -12.62547492980957
    6. '                       ' → logprob: -13.00047492980957
    7. '                           ' → logprob: -14.12547492980957
    8. '	dp' → logprob: -14.25047492980957
    9. '```' → logprob: -14.75047492980957
    10. '           ' → logprob: -15.37547492980957

Token 688: 'ours' (ID: 2327)
  Prédit: 'ours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.4446644186973572
    2. 'our' → logprob: -1.819664478302002
    3. 'urs' → logprob: -2.569664478302002
    4. 'dp' → logprob: -3.069664478302002
    5. 'rop' → logprob: -3.819664478302002
    6. 'p' → logprob: -4.069664478302002
    7. 'ro' → logprob: -4.194664478302002
    8. 'r' → logprob: -5.194664478302002
    9. '[' → logprob: -6.319664478302002
    10. 'roc' → logprob: -6.694664478302002

Token 689: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03429916128516197
    2. 'uit' → logprob: -4.159299373626709
    3. 'uite' → logprob: -4.409299373626709
    4. 'uire' → logprob: -5.659299373626709
    5. 'ivre' → logprob: -7.534299373626709
    6. 'e' → logprob: -7.659299373626709
    7. 'ui' → logprob: -8.15929889678955
    8. 'uir' → logprob: -8.53429889678955
    9. 'iv' → logprob: -8.65929889678955
    10. 'i' → logprob: -8.78429889678955

Token 690: 'ivre' (ID: 46558)
  Prédit: 'ivre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivre' → logprob: -0.623807430267334
    2. 'iv' → logprob: -1.623807430267334
    3. 'ir' → logprob: -2.248807430267334
    4. 'i' → logprob: -3.373807430267334
    5. 're' → logprob: -3.748807430267334
    6. 'dp' → logprob: -4.498807430267334
    7. 'ivr' → logprob: -4.623807430267334
    8. 'iver' → logprob: -4.623807430267334
    9. 'ver' → logprob: -4.873807430267334
    10. 'ire' → logprob: -4.998807430267334

Token 691: ' dans' (ID: 2671)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4336227476596832
    2. '(dp' → logprob: -1.0586227178573608
    3. '                   ' → logprob: -6.43362283706665
    4. 'dans' → logprob: -6.55862283706665
    5. ' dp' → logprob: -6.93362283706665
    6. '               ' → logprob: -7.55862283706665
    7. 'in' → logprob: -9.183622360229492
    8. '                       ' → logprob: -9.558622360229492
    9. '	dp' → logprob: -9.558622360229492
    10. '_dp' → logprob: -10.433622360229492

Token 692: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.9186317482963204e-05
    2. ' dp' → logprob: -10.500049591064453
    3. '(dp' → logprob: -10.750049591064453
    4. '	dp' → logprob: -16.125049591064453
    5. '_dp' → logprob: -17.750049591064453
    6. 'dj' → logprob: -19.125049591064453
    7. '3' → logprob: -19.125049591064453
    8. 'd' → logprob: -19.375049591064453
    9. '   ' → logprob: -19.875049591064453
    10. '[' → logprob: -20.125049591064453

Token 693: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -10.250068664550781
    3. 'dp' → logprob: -10.500068664550781
    4. '   ' → logprob: -13.250068664550781
    5. '```' → logprob: -13.250068664550781
    6. '[i' → logprob: -14.000068664550781
    7. '[' → logprob: -15.250068664550781
    8. '  ' → logprob: -16.00006866455078
    9. '２' → logprob: -16.12506866455078
    10. 'i' → logprob: -16.25006866455078

Token 694: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.250041007995605
    3. 'dp' → logprob: -12.375041007995605
    4. '   ' → logprob: -14.750041007995605
    5. '```' → logprob: -15.750041007995605
    6. '3' → logprob: -16.62504005432129
    7. '  ' → logprob: -16.75004005432129
    8. 'j' → logprob: -16.87504005432129
    9. '２' → logprob: -17.12504005432129
    10. 'i' → logprob: -17.37504005432129

Token 695: 'e' (ID: 68)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12725870311260223
    2. '[' → logprob: -2.252258777618408
    3. '][' → logprob: -4.377258777618408
    4. '+' → logprob: -7.002258777618408
    5. '[j' → logprob: -8.00225830078125
    6. '   ' → logprob: -8.75225830078125
    7. '```' → logprob: -9.50225830078125
    8. ']' → logprob: -9.62725830078125
    9. '2' → logprob: -10.00225830078125
    10. '       ' → logprob: -10.62725830078125

Token 696: ' groupe' (ID: 29494)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47590821981430054
    2. 'g' → logprob: -1.4759082794189453
    3. 'group' → logprob: -2.9759082794189453
    4. '[g' → logprob: -2.9759082794189453
    5. '[group' → logprob: -3.3509082794189453
    6. '[j' → logprob: -4.725908279418945
    7. '_g' → logprob: -6.350908279418945
    8. '_group' → logprob: -6.975908279418945
    9. ' groupe' → logprob: -7.475908279418945
    10. 'grp' → logprob: -7.975908279418945

Token 697: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4805983304977417
    2. 'dp' → logprob: -0.9805983304977417
    3. ' dp' → logprob: -5.230598449707031
    4. '               ' → logprob: -7.480598449707031
    5. '(dp' → logprob: -8.230598449707031
    6. '                       ' → logprob: -9.105598449707031
    7. '=' → logprob: -9.355598449707031
    8. ' =' → logprob: -10.105598449707031
    9. '_dp' → logprob: -11.105598449707031
    10. ',' → logprob: -11.480598449707031

Token 698: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20261044800281525
    2. 'dp' → logprob: -1.7026104927062988
    3. ' dp' → logprob: -7.077610492706299
    4. '               ' → logprob: -8.45261001586914
    5. '(dp' → logprob: -9.70261001586914
    6. '                       ' → logprob: -10.57761001586914
    7. '=' → logprob: -10.70261001586914
    8. ' =' → logprob: -12.07761001586914
    9. '                  ' → logprob: -12.20261001586914
    10. '                    ' → logprob: -12.57761001586914

Token 699: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25194400548934937
    2. 'dp' (adapté à ' dp') → logprob: -1.5019440650939941
    3. ' max' → logprob: -11.251943588256836
    4. ' dp' → logprob: -13.501943588256836
    5. '[max' → logprob: -14.751943588256836
    6. '(max' → logprob: -16.876943588256836
    7. '(dp' → logprob: -17.251943588256836
    8. '=max' → logprob: -18.626943588256836
    9. 'mx' → logprob: -18.876943588256836
    10. '	dp' → logprob: -19.626943588256836

Token 700: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -17.25
    3. '```' → logprob: -17.25
    4. '[' → logprob: -17.5
    5. '   ' → logprob: -17.875
    6. ' [' → logprob: -19.5
    7. '{i' → logprob: -20.125
    8. '           ' → logprob: -20.375
    9. '[I' → logprob: -20.375
    10. ' ' → logprob: -20.75

Token 701: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023011112585663795
    2. '][' → logprob: -4.398011207580566
    3. '[i' → logprob: -4.773011207580566
    4. '[' → logprob: -6.273011207580566
    5. '   ' → logprob: -10.648011207580566
    6. '+[' → logprob: -10.773011207580566
    7. '```' → logprob: -11.023011207580566
    8. '           ' → logprob: -11.148011207580566
    9. '+i' → logprob: -11.898011207580566
    10. 'i' → logprob: -12.023011207580566

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022133004385977983
    2. '+' → logprob: -6.252213478088379
    3. '2' → logprob: -8.377213478088379
    4. '[i' → logprob: -11.127213478088379
    5. '[' → logprob: -11.502213478088379
    6. '3' → logprob: -11.877213478088379
    7. ' ' → logprob: -12.002213478088379
    8. 'i' → logprob: -12.377213478088379
    9. '   ' → logprob: -12.377213478088379
    10. '```' → logprob: -12.502213478088379

Token 703: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010531729785725474
    2. '][' → logprob: -6.876053333282471
    3. '[j' → logprob: -11.876052856445312
    4. '   ' → logprob: -12.626052856445312
    5. '[i' → logprob: -12.876052856445312
    6. ')[' → logprob: -13.001052856445312
    7. '}[' → logprob: -13.501052856445312
    8. '```' → logprob: -13.751052856445312
    9. ' [' → logprob: -14.126052856445312
    10. '       ' → logprob: -14.501052856445312

Token 704: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.250017166137695
    4. 'j' → logprob: -16.875017166137695
    5. '  ' → logprob: -17.500017166137695
    6. '```' → logprob: -17.625017166137695
    7. '1' → logprob: -17.750017166137695
    8. '２' → logprob: -17.875017166137695
    9. 'a' → logprob: -18.375017166137695
    10. '۲' → logprob: -18.375017166137695

Token 705: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007629465777426958
    2. '[' → logprob: -4.88262939453125
    3. ' ][' → logprob: -11.75762939453125
    4. '           ' → logprob: -12.75762939453125
    5. ']' → logprob: -12.88262939453125
    6. '   ' → logprob: -13.38262939453125
    7. ']][' → logprob: -14.00762939453125
    8. ''][' → logprob: -14.00762939453125
    9. '	       ' → logprob: -14.00762939453125
    10. '	' → logprob: -14.13262939453125

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.750004768371582
    3. '0' → logprob: -14.250004768371582
    4. '[' → logprob: -14.500004768371582
    5. '   ' → logprob: -15.500004768371582
    6. '`' → logprob: -15.812504768371582
    7. 'a' → logprob: -16.3750057220459
    8. '```' → logprob: -16.6250057220459
    9. '(' → logprob: -17.6250057220459
    10. '  ' → logprob: -17.8750057220459

Token 707: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004820868838578463
    2. ']=' → logprob: -5.379820823669434
    3. '=' → logprob: -9.379820823669434
    4. ')' → logprob: -9.629820823669434
    5. ']+=' → logprob: -10.629820823669434
    6. ' ]' → logprob: -11.879820823669434
    7. ' =' → logprob: -12.379820823669434
    8. '   ' → logprob: -12.629820823669434
    9. ']+' → logprob: -12.629820823669434
    10. ')=' → logprob: -13.004820823669434

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=max' → logprob: -15.264163970947266
    4. ')' → logprob: -17.264163970947266
    5. ']' → logprob: -18.139163970947266
    6. ']=' → logprob: -18.639163970947266
    7. 'max' → logprob: -18.764163970947266
    8. ')=' → logprob: -19.264163970947266
    9. '   ' → logprob: -19.889163970947266
    10. '```' → logprob: -19.889163970947266

Token 709: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.493430894101039e-05
    2. ' max' → logprob: -9.500075340270996
    3. '[max' → logprob: -20.75007438659668
    4. '(max' → logprob: -20.87507438659668
    5. '	max' → logprob: -22.12507438659668
    6. '=max' → logprob: -22.50007438659668
    7. 'min' → logprob: -23.37507438659668
    8. ' ' → logprob: -24.12507438659668
    9. 'ma' → logprob: -24.37507438659668
    10. ',max' → logprob: -24.62507438659668

Token 710: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.512236498361744e-07
    2. 'dp' → logprob: -15.125000953674316
    3. '(' → logprob: -15.375000953674316
    4. ' (' → logprob: -17.0
    5. '(
' → logprob: -17.875
    6. ' dp' → logprob: -19.375
    7. '(max' → logprob: -19.5
    8. '	dp' → logprob: -19.5
    9. '(df' → logprob: -21.25
    10. '(dt' → logprob: -21.875

Token 711: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -13.625001907348633
    3. '[' → logprob: -14.500001907348633
    4. '```' → logprob: -16.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '{i' → logprob: -17.125001907348633
    7. ' [' → logprob: -17.250001907348633
    8. '(i' → logprob: -17.375001907348633
    9. ' ' → logprob: -17.625001907348633
    10. '  ' → logprob: -17.875001907348633

Token 712: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07037829607725143
    2. '[i' → logprob: -2.695378303527832
    3. '[' → logprob: -8.820378303527832
    4. ']' → logprob: -8.820378303527832
    5. '}[' → logprob: -9.820378303527832
    6. '   ' → logprob: -11.070378303527832
    7. ' ][' → logprob: -11.070378303527832
    8. ')[' → logprob: -11.320378303527832
    9. '>[' → logprob: -11.945378303527832
    10. 'i' → logprob: -12.320378303527832

Token 713: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.588793960167095e-05
    2. ' ' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.125076293945312
    4. 'i' → logprob: -16.125076293945312
    5. '  ' → logprob: -16.625076293945312
    6. 'j' → logprob: -17.125076293945312
    7. '```' → logprob: -17.625076293945312
    8. '1' → logprob: -17.875076293945312
    9. '    ' → logprob: -17.875076293945312
    10. '２' → logprob: -18.375076293945312

Token 714: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0435313954949379
    2. '[' → logprob: -3.1685314178466797
    3. ' ][' → logprob: -8.66853141784668
    4. '1' → logprob: -9.16853141784668
    5. '[i' → logprob: -9.54353141784668
    6. ']' → logprob: -9.79353141784668
    7. '   ' → logprob: -10.66853141784668
    8. ' [' → logprob: -10.91853141784668
    9. '[j' → logprob: -11.29353141784668
    10. ')[' → logprob: -11.41853141784668

Token 715: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012518009170889854
    2. '0' → logprob: -4.387517929077148
    3. ' ' → logprob: -12.637517929077148
    4. '   ' → logprob: -12.637517929077148
    5. '
' → logprob: -14.512517929077148
    6. '       ' → logprob: -15.575017929077148
    7. '' → logprob: -15.637517929077148
    8. '  ' → logprob: -16.01251792907715
    9. '```' → logprob: -16.01251792907715
    10. '           ' → logprob: -16.20001792907715

Token 716: ']+' (ID: 15344)
  Prédit: '+a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+a' → logprob: -0.00659979460760951
    2. '+' → logprob: -5.6315999031066895
    3. ' +' → logprob: -5.8815999031066895
    4. ']+' → logprob: -8.506599426269531
    5. ')+' → logprob: -13.756599426269531
    6. '+
' → logprob: -15.006599426269531
    7. '}+' → logprob: -15.131599426269531
    8. '+b' → logprob: -15.256599426269531
    9. '+A' → logprob: -15.256599426269531
    10. '+i' → logprob: -15.631599426269531

Token 717: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233882926404476
    2. ' a' → logprob: -5.2552337646484375
    3. '-a' → logprob: -17.130233764648438
    4. '	a' → logprob: -17.755233764648438
    5. ' ' → logprob: -18.130233764648438
    6. '+a' → logprob: -19.130233764648438
    7. '   ' → logprob: -19.380233764648438
    8. ''a' → logprob: -19.505233764648438
    9. '(a' → logprob: -19.630233764648438
    10. '    ' → logprob: -19.630233764648438

Token 718: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003570343542378396
    2. '[' → logprob: -8.000356674194336
    3. 'i' → logprob: -11.125356674194336
    4. ' [' → logprob: -12.375356674194336
    5. '[
' → logprob: -13.375356674194336
    6. '```' → logprob: -14.500356674194336
    7. 'a' → logprob: -16.625356674194336
    8. '   ' → logprob: -16.750356674194336
    9. '(i' → logprob: -16.875356674194336
    10. '[int' → logprob: -17.000356674194336

Token 719: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0002836232597474009
    2. ',' → logprob: -8.250283241271973
    3. ']' → logprob: -11.375283241271973
    4. ' ],' → logprob: -11.750283241271973
    5. '   ' → logprob: -13.500283241271973
    6. '           ' → logprob: -14.750283241271973
    7. ''],' → logprob: -15.125283241271973
    8. '),' → logprob: -15.500283241271973
    9. '],
' → logprob: -15.625283241271973
    10. ' ,' → logprob: -15.750283241271973

Token 720: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.03804171830415726
    2. 'dp' → logprob: -3.288041830062866
    3. '(dp' → logprob: -15.663042068481445
    4. '	dp' → logprob: -15.788042068481445
    5. '_dp' → logprob: -17.163042068481445
    6. '.dp' → logprob: -19.288042068481445
    7. 'd' → logprob: -20.788042068481445
    8. ' ' → logprob: -21.413042068481445
    9. ' ' → logprob: -22.413042068481445
    10. 'DP' → logprob: -22.538042068481445

Token 721: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. 'i' → logprob: -16.125
    4. '```' → logprob: -16.875
    5. '   ' → logprob: -19.625
    6. '[j' → logprob: -20.125
    7. '{i' → logprob: -20.125
    8. ' [' → logprob: -20.25
    9. ')' → logprob: -20.5
    10. '[
' → logprob: -20.5

Token 722: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.919942486798391e-05
    2. '][' → logprob: -9.875059127807617
    3. '[' → logprob: -11.875059127807617
    4. ']+' → logprob: -15.250059127807617
    5. '[i' → logprob: -15.375059127807617
    6. ' +' → logprob: -15.750059127807617
    7. '   ' → logprob: -16.500059127807617
    8. '+[' → logprob: -16.750059127807617
    9. '-' → logprob: -17.375059127807617
    10. ')[' → logprob: -17.625059127807617

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006416652468033135
    2. '+' → logprob: -7.375641822814941
    3. '[' → logprob: -12.625641822814941
    4. ' ' → logprob: -12.625641822814941
    5. 'i' → logprob: -13.250641822814941
    6. '[i' → logprob: -13.375641822814941
    7. '```' → logprob: -13.375641822814941
    8. '   ' → logprob: -13.625641822814941
    9. ']' → logprob: -14.375641822814941
    10. '][' → logprob: -15.250641822814941

Token 724: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22626006603240967
    2. '[' → logprob: -1.6012600660324097
    3. ')[' → logprob: -8.7262601852417
    4. '           ' → logprob: -9.1012601852417
    5. '   ' → logprob: -9.2262601852417
    6. ' ][' → logprob: -9.2262601852417
    7. '       ' → logprob: -9.6012601852417
    8. '               ' → logprob: -10.1012601852417
    9. '                   ' → logprob: -10.2262601852417
    10. ']' → logprob: -10.4762601852417

Token 725: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.75001049041748
    3. '1' → logprob: -13.87501049041748
    4. '   ' → logprob: -14.37501049041748
    5. '3' → logprob: -16.000009536743164
    6. 'a' → logprob: -16.250009536743164
    7. '[' → logprob: -16.312509536743164
    8. 'i' → logprob: -16.437509536743164
    9. '  ' → logprob: -16.937509536743164
    10. '```' → logprob: -17.000009536743164

Token 726: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0047409068793058395
    2. '[' → logprob: -5.3797407150268555
    3. ' ][' → logprob: -10.879740715026855
    4. ')[' → logprob: -11.004740715026855
    5. '1' → logprob: -11.129740715026855
    6. '                   ' → logprob: -11.379740715026855
    7. '   ' → logprob: -11.504740715026855
    8. ']' → logprob: -11.629740715026855
    9. '           ' → logprob: -11.754740715026855
    10. '                       ' → logprob: -12.004740715026855

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. 'i' → logprob: -10.87503719329834
    3. 'a' → logprob: -11.62503719329834
    4. '[i' → logprob: -11.75003719329834
    5. '2' → logprob: -14.25003719329834
    6. ' ' → logprob: -15.50003719329834
    7. '   ' → logprob: -15.62503719329834
    8. '[' → logprob: -15.87503719329834
    9. '(i' → logprob: -16.562538146972656
    10. '```' → logprob: -16.750038146972656

Token 728: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012018970446661115
    2. ')
' → logprob: -7.12620210647583
    3. '               ' → logprob: -8.001201629638672
    4. '                   ' → logprob: -9.751201629638672
    5. ' )' → logprob: -13.751201629638672
    6. '           ' → logprob: -14.251201629638672
    7. '   ' → logprob: -14.501201629638672
    8. '                       ' → logprob: -14.626201629638672
    9. '                           ' → logprob: -15.376201629638672
    10. ')
' → logprob: -15.626201629638672

Token 729: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010362643515691161
    2. 'elif' → logprob: -7.376036167144775
    3. '```' → logprob: -8.626036643981934
    4. 'else' → logprob: -9.001036643981934
    5. '                   ' → logprob: -9.626036643981934
    6. ' elif' → logprob: -11.376036643981934
    7. ' else' → logprob: -11.376036643981934
    8. '                       ' → logprob: -12.001036643981934
    9. '           ' → logprob: -12.501036643981934
    10. '       ' → logprob: -13.501036643981934

Token 730: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3745151460170746
    2. '                   ' → logprob: -1.999515175819397
    3. 'else' → logprob: -2.7495150566101074
    4. 'if' → logprob: -2.7495150566101074
    5. 'elif' → logprob: -3.3745150566101074
    6. '#' (adapté à ' #') → logprob: -4.374515056610107
    7. 'dp' → logprob: -7.249515056610107
    8. ' if' → logprob: -7.624515056610107
    9. ' else' → logprob: -8.749515533447266
    10. '           ' → logprob: -8.999515533447266

Token 731: ' O' (ID: 532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28697124123573303
    2. '#' → logprob: -1.5369712114334106
    3. 'if' → logprob: -3.4119713306427
    4. '                   ' → logprob: -6.661971092224121
    5. '               ' → logprob: -9.786971092224121
    6. ' #' → logprob: -10.161971092224121
    7. ' dp' → logprob: -10.411971092224121
    8. 'elif' → logprob: -11.161971092224121
    9. '
' → logprob: -11.286971092224121
    10. ' if' → logprob: -12.161971092224121

Token 732: 'uv' (ID: 6992)
  Prédit: 'ption'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ption' → logprob: -0.28172531723976135
    2. 'pt' → logprob: -1.906725287437439
    3. 'ptions' → logprob: -2.5317254066467285
    4. 'p' → logprob: -4.5317254066467285
    5. '#' → logprob: -5.4067254066467285
    6. 'dp' → logprob: -7.2817254066467285
    7. 'pti' → logprob: -7.7817254066467285
    8. 'n' → logprob: -7.9067254066467285
    9. 'pen' → logprob: -8.65672492980957
    10. 'pts' → logprob: -9.28172492980957

Token 733: 'rir' (ID: 16883)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23787419497966766
    2. 'vr' → logprob: -1.737874150276184
    3. 'vir' → logprob: -4.4878740310668945
    4. 't' → logprob: -4.4878740310668945
    5. 'ver' → logprob: -4.8628740310668945
    6. 'tenir' → logprob: -6.8628740310668945
    7. 'ter' → logprob: -7.1128740310668945
    8. 'v' → logprob: -7.6128740310668945
    9. 'pper' → logprob: -7.7378740310668945
    10. 'r' → logprob: -7.8628740310668945

Token 734: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2496490627527237
    2. '(dp' → logprob: -1.6246490478515625
    3. '(i' → logprob: -4.4996490478515625
    4. ' dp' → logprob: -4.9996490478515625
    5. '[i' → logprob: -5.6246490478515625
    6. '(' → logprob: -7.1246490478515625
    7. '                   ' → logprob: -7.2496490478515625
    8. '               ' → logprob: -8.374649047851562
    9. ' (' → logprob: -8.624649047851562
    10. '   ' → logprob: -8.624649047851562

Token 735: ' nouveau' (ID: 23184)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8600996732711792
    2. 'dp' → logprob: -1.2350996732711792
    3. 'new' → logprob: -2.1100997924804688
    4. '[j' → logprob: -2.8600997924804688
    5. ' j' → logprob: -3.4850997924804688
    6. ' new' → logprob: -3.4850997924804688
    7. ' dp' → logprob: -4.485099792480469
    8. '   ' → logprob: -4.735099792480469
    9. '[i' → logprob: -5.360099792480469
    10. '       ' → logprob: -5.735099792480469

Token 736: ' groupe' (ID: 29494)
  Prédit: ' groupe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.9284700155258179
    2. 'g' → logprob: -1.5534700155258179
    3. 'group' → logprob: -1.5534700155258179
    4. '[j' → logprob: -2.8034701347351074
    5. 'dp' → logprob: -3.1784701347351074
    6. 'j' → logprob: -3.9284701347351074
    7. 'segment' → logprob: -3.9284701347351074
    8. ' group' → logprob: -4.178470134735107
    9. '   ' → logprob: -4.803470134735107
    10. ' j' → logprob: -5.428470134735107

Token 737: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0168604739010334
    2. 'dp' → logprob: -4.266860485076904
    3. ' dp' → logprob: -6.516860485076904
    4. '(dp' → logprob: -7.516860485076904
    5. '               ' → logprob: -8.266860008239746
    6. ' =' → logprob: -8.766860008239746
    7. '                       ' → logprob: -8.891860008239746
    8. '[' → logprob: -10.141860008239746
    9. '   ' → logprob: -10.891860008239746
    10. '=' → logprob: -11.266860008239746

Token 738: 'pass' (ID: 9948)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02524203062057495
    2. '                   ' → logprob: -4.150241851806641
    3. 'if' → logprob: -5.025241851806641
    4. ' dp' → logprob: -6.400241851806641
    5. '                       ' → logprob: -7.400241851806641
    6. '               ' → logprob: -9.27524185180664
    7. '   ' → logprob: -10.02524185180664
    8. 'elif' → logprob: -10.52524185180664
    9. ' if' → logprob: -10.65024185180664
    10. '                           ' → logprob: -10.77524185180664

Token 739: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.44725996255874634
    2. 'age' → logprob: -1.8222599029541016
    3. 'ant' → logprob: -1.9472599029541016
    4. '                   ' → logprob: -3.0722599029541016
    5. '               ' → logprob: -5.322259902954102
    6. '#' → logprob: -7.197259902954102
    7. '                       ' → logprob: -7.197259902954102
    8. '   ' → logprob: -7.322259902954102
    9. '=' → logprob: -7.697259902954102
    10. 'é' → logprob: -8.072259902954102

Token 740: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8361170291900635
    2. ' à' → logprob: -1.8361170291900635
    3. 'j' → logprob: -2.0861170291900635
    4. ' j' → logprob: -2.0861170291900635
    5. '(j' → logprob: -3.0861170291900635
    6. 'à' → logprob: -3.4611170291900635
    7. 'to' → logprob: -4.086116790771484
    8. 'from' → logprob: -4.086116790771484
    9. '[j' → logprob: -4.086116790771484
    10. ' to' → logprob: -4.461116790771484

Token 741: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6844875812530518
    2. '3' → logprob: -0.9344875812530518
    3. ' j' → logprob: -2.3094875812530518
    4. ' ' → logprob: -6.184487342834473
    5. '   ' → logprob: -7.059487342834473
    6. '2' → logprob: -8.559487342834473
    7. 'i' → logprob: -9.309487342834473
    8. 'dp' → logprob: -9.559487342834473
    9. '[j' → logprob: -9.559487342834473
    10. '(j' → logprob: -10.059487342834473

Token 742: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06707458198070526
    2. ' +' → logprob: -2.8170745372772217
    3. '+j' → logprob: -5.942074775695801
    4. '[j' → logprob: -6.817074775695801
    5. '=j' → logprob: -7.567074775695801
    6. '   ' → logprob: -7.567074775695801
    7. '=' → logprob: -9.4420747756958
    8. ' =' → logprob: -10.0670747756958
    9. ')' → logprob: -10.3170747756958
    10. '1' → logprob: -10.6920747756958

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.250018119812012
    3. ')' → logprob: -13.375018119812012
    4. '```' → logprob: -13.875018119812012
    5. '=' → logprob: -14.000018119812012
    6. '   ' → logprob: -14.500018119812012
    7. 'j' → logprob: -14.500018119812012
    8. '+' → logprob: -15.750018119812012
    9. ' =' → logprob: -16.625017166137695
    10. ',' → logprob: -17.375017166137695

Token 744: ' groupe' (ID: 29494)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13178949058055878
    2. ',' → logprob: -3.256789445877075
    3. '                   ' → logprob: -3.256789445877075
    4. '),' → logprob: -4.131789684295654
    5. ')
' → logprob: -4.506789684295654
    6. ' )' → logprob: -5.506789684295654
    7. '):
' → logprob: -5.756789684295654
    8. '               ' → logprob: -5.881789684295654
    9. ')][' → logprob: -6.631789684295654
    10. '):' → logprob: -6.756789684295654

Token 745: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18452362716197968
    2. '                   ' → logprob: -2.309523582458496
    3. ')
' → logprob: -3.559523582458496
    4. ',' → logprob: -3.934523582458496
    5. '               ' → logprob: -4.809523582458496
    6. '):
' → logprob: -5.059523582458496
    7. 'dp' → logprob: -5.809523582458496
    8. '):' → logprob: -6.559523582458496
    9. '),' → logprob: -6.934523582458496
    10. '                       ' → logprob: -8.434523582458496

Token 746: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018541909754276276
    2. 'dp' → logprob: -5.1435418128967285
    3. ' dp' → logprob: -5.3935418128967285
    4. '(dp' → logprob: -5.8935418128967285
    5. '                       ' → logprob: -6.1435418128967285
    6. '               ' → logprob: -6.1435418128967285
    7. ' and' → logprob: -8.018542289733887
    8. ' if' → logprob: -9.018542289733887
    9. ',' → logprob: -9.018542289733887
    10. '                           ' → logprob: -9.643542289733887

Token 747: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2789820730686188
    2. ' dp' → logprob: -1.5289820432662964
    3. '                   ' → logprob: -4.403982162475586
    4. 'if' → logprob: -4.778982162475586
    5. ' if' → logprob: -5.153982162475586
    6. '(dp' → logprob: -9.528982162475586
    7. '               ' → logprob: -9.528982162475586
    8. '                       ' → logprob: -9.778982162475586
    9. 'elif' → logprob: -11.028982162475586
    10. '	dp' → logprob: -11.028982162475586

Token 748: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.375
    3. '   ' → logprob: -16.75
    4. '```' → logprob: -17.25
    5. '[I' → logprob: -17.75
    6. '[' → logprob: -17.75
    7. '[j' → logprob: -18.375
    8. '{i' → logprob: -18.5
    9. ' [' → logprob: -19.25
    10. '(i' → logprob: -19.25

Token 749: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004251727368682623
    2. '[i' → logprob: -5.504251956939697
    3. '[' → logprob: -9.254251480102539
    4. '][' → logprob: -10.004251480102539
    5. '+i' → logprob: -11.379251480102539
    6. 'i' → logprob: -11.754251480102539
    7. '+[' → logprob: -12.504251480102539
    8. '```' → logprob: -12.504251480102539
    9. ' +' → logprob: -13.254251480102539
    10. '＋' → logprob: -14.004251480102539

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. '2' → logprob: -11.375027656555176
    3. '+' → logprob: -12.125027656555176
    4. '3' → logprob: -12.750027656555176
    5. '
' → logprob: -13.000027656555176
    6. 'max' → logprob: -13.750027656555176
    7. '   ' → logprob: -14.000027656555176
    8. ' ' → logprob: -14.125027656555176
    9. '```' → logprob: -14.125027656555176
    10. '4' → logprob: -14.562527656555176

Token 751: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01071587298065424
    2. '[j' → logprob: -4.635715961456299
    3. '[' → logprob: -7.135715961456299
    4. '   ' → logprob: -9.63571548461914
    5. ' ][' → logprob: -10.76071548461914
    6. '           ' → logprob: -10.88571548461914
    7. ']' → logprob: -11.38571548461914
    8. '[i' → logprob: -11.76071548461914
    9. '       ' → logprob: -12.01071548461914
    10. '                   ' → logprob: -12.13571548461914

Token 752: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16057677567005157
    2. 'j' → logprob: -1.9105768203735352
    3. '2' → logprob: -8.160576820373535
    4. ' j' → logprob: -10.410576820373535
    5. '[j' → logprob: -11.910576820373535
    6. '   ' → logprob: -12.035576820373535
    7. '1' → logprob: -12.035576820373535
    8. '(j' → logprob: -12.160576820373535
    9. ' ' → logprob: -12.410576820373535
    10. '	j' → logprob: -13.160576820373535

Token 753: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.933173426659778e-05
    2. ']' → logprob: -10.375069618225098
    3. '[' → logprob: -10.500069618225098
    4. ' ][' → logprob: -12.250069618225098
    5. ']][' → logprob: -13.375069618225098
    6. '           ' → logprob: -14.000069618225098
    7. '[j' → logprob: -14.375069618225098
    8. '   ' → logprob: -14.625069618225098
    9. '                   ' → logprob: -14.875069618225098
    10. ' ' → logprob: -15.500069618225098

Token 754: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34893709421157837
    2. '1' → logprob: -1.2239370346069336
    3. '-' → logprob: -7.973937034606934
    4. 'max' → logprob: -9.098937034606934
    5. '   ' → logprob: -11.473937034606934
    6. ' ' → logprob: -11.848937034606934
    7. 'k' → logprob: -12.973937034606934
    8. '
' → logprob: -13.223937034606934
    9. '```' → logprob: -13.286437034606934
    10. ' -' → logprob: -13.473937034606934

Token 755: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01113070361316204
    2. '=' → logprob: -4.8861308097839355
    3. ']=' → logprob: -6.0111308097839355
    4. ')' → logprob: -7.1361308097839355
    5. ' =' → logprob: -8.386130332946777
    6. '                   ' → logprob: -11.386130332946777
    7. ' ]' → logprob: -11.511130332946777
    8. 'max' → logprob: -12.011130332946777
    9. ')=' → logprob: -12.261130332946777
    10. '   ' → logprob: -13.136130332946777

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164102263748646
    2. ' =' → logprob: -4.264163970947266
    3. '=max' → logprob: -14.764163970947266
    4. 'max' → logprob: -15.139163970947266
    5. '   ' → logprob: -18.514163970947266
    6. ')' → logprob: -18.764163970947266
    7. '           ' → logprob: -19.514163970947266
    8. '>' → logprob: -19.639163970947266
    9. ']' → logprob: -19.764163970947266
    10. '                   ' → logprob: -19.889163970947266

Token 757: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25192928314208984
    2. ' max' → logprob: -1.5019292831420898
    3. '	max' → logprob: -16.501930236816406
    4. ' ' → logprob: -17.001930236816406
    5. '=max' → logprob: -17.126930236816406
    6. '   ' → logprob: -17.376930236816406
    7. '(max' → logprob: -17.876930236816406
    8. '[max' → logprob: -19.251930236816406
    9. 'ma' → logprob: -20.126930236816406
    10. '_max' → logprob: -20.376930236816406

Token 758: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.147740689106286e-05
    2. 'dp' → logprob: -9.62507152557373
    3. '(' → logprob: -12.25007152557373
    4. '(
' → logprob: -15.12507152557373
    5. ' dp' → logprob: -15.62507152557373
    6. '	dp' → logprob: -16.000070571899414
    7. '(max' → logprob: -16.250070571899414
    8. 'max' → logprob: -16.750070571899414
    9. '   ' → logprob: -17.750070571899414
    10. ' (' → logprob: -18.000070571899414

Token 759: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1747836172580719
    2. '(dp' → logprob: -1.9247835874557495
    3. 'dp' → logprob: -4.549783706665039
    4. '[' → logprob: -5.674783706665039
    5. ' dp' → logprob: -8.674783706665039
    6. '(i' → logprob: -9.674783706665039
    7. '	dp' → logprob: -9.799783706665039
    8. '[
' → logprob: -9.924783706665039
    9. '_dp' → logprob: -10.174783706665039
    10. '```' → logprob: -11.299783706665039

Token 760: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04910118877887726
    2. '[i' → logprob: -3.0491011142730713
    3. '+' → logprob: -8.424100875854492
    4. '[' → logprob: -9.424100875854492
    5. ' ][' → logprob: -9.424100875854492
    6. '   ' → logprob: -9.799100875854492
    7. ']' → logprob: -10.299100875854492
    8. 'i' → logprob: -11.924100875854492
    9. ')[' → logprob: -12.049100875854492
    10. '           ' → logprob: -12.424100875854492

Token 761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.941161776310764e-05
    2. ' ' → logprob: -10.500039100646973
    3. '   ' → logprob: -12.000039100646973
    4. 'j' → logprob: -13.000039100646973
    5. '3' → logprob: -14.437539100646973
    6. '1' → logprob: -14.812539100646973
    7. '    
' → logprob: -14.812539100646973
    8. '  ' → logprob: -14.875039100646973
    9. '```' → logprob: -15.187539100646973
    10. '２' → logprob: -15.687539100646973

Token 762: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030756106600165367
    2. '[' → logprob: -4.155755996704102
    3. '1' → logprob: -4.280755996704102
    4. '   ' → logprob: -8.405755996704102
    5. ' ][' → logprob: -8.780755996704102
    6. ']' → logprob: -9.155755996704102
    7. '+' → logprob: -9.405755996704102
    8. ' ' → logprob: -9.655755996704102
    9. '```' → logprob: -10.405755996704102
    10. ' [' → logprob: -10.655755996704102

Token 763: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023337023332715034
    2. '0' → logprob: -3.7733371257781982
    3. ' ' → logprob: -10.273337364196777
    4. 'k' → logprob: -10.648337364196777
    5. '   ' → logprob: -10.648337364196777
    6. '    
' → logprob: -13.585837364196777
    7. '    ' → logprob: -13.710837364196777
    8. '  ' → logprob: -14.085837364196777
    9. '[' → logprob: -14.210837364196777
    10. ' k' → logprob: -14.585837364196777

Token 764: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14920900762081146
    2. '],' → logprob: -2.0242090225219727
    3. ' ,' → logprob: -5.149209022521973
    4. ']' → logprob: -8.399209022521973
    5. '   ' → logprob: -9.149209022521973
    6. ' ],' → logprob: -9.274209022521973
    7. ',d' → logprob: -9.399209022521973
    8. '           ' → logprob: -9.774209022521973
    9. 'dp' → logprob: -10.274209022521973
    10. ']+' → logprob: -10.524209022521973

Token 765: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.018151700496673584
    2. 'dp' → logprob: -4.018151760101318
    3. '(dp' → logprob: -13.89315128326416
    4. '	dp' → logprob: -14.51815128326416
    5. '                   ' → logprob: -16.393152236938477
    6. ' ' → logprob: -16.518152236938477
    7. '                    ' → logprob: -16.643152236938477
    8. '_dp' → logprob: -16.768152236938477
    9. '.dp' → logprob: -17.518152236938477
    10. ' ' → logprob: -17.643152236938477

Token 766: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. 'i' → logprob: -13.25000286102295
    3. '[' → logprob: -14.25000286102295
    4. '```' → logprob: -16.250001907348633
    5. '[
' → logprob: -17.750001907348633
    6. '
' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '(i' → logprob: -18.000001907348633
    9. '[next' → logprob: -18.500001907348633
    10. '{i' → logprob: -19.125001907348633

Token 767: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014493359252810478
    2. '[i' → logprob: -4.639493465423584
    3. '[' → logprob: -5.389493465423584
    4. '][' → logprob: -9.264492988586426
    5. 'i' → logprob: -10.014492988586426
    6. ']+' → logprob: -11.639492988586426
    7. '+i' → logprob: -11.889492988586426
    8. ' +' → logprob: -14.014492988586426
    9. 's' → logprob: -14.389492988586426
    10. '+[' → logprob: -14.389492988586426

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03468335047364235
    2. '3' → logprob: -3.9096834659576416
    3. '2' → logprob: -4.6596832275390625
    4. '+' → logprob: -5.4096832275390625
    5. 'i' → logprob: -9.659683227539062
    6. '   ' → logprob: -11.659683227539062
    7. ' ' → logprob: -12.034683227539062
    8. '```' → logprob: -12.347183227539062
    9. '
' → logprob: -13.409683227539062
    10. '(i' → logprob: -13.784683227539062

Token 769: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3139171898365021
    2. '[' → logprob: -1.3139171600341797
    3. '[i' → logprob: -7.81391716003418
    4. '3' → logprob: -9.68891716003418
    5. ')[' → logprob: -10.06391716003418
    6. ']' → logprob: -10.31391716003418
    7. '}[' → logprob: -10.31391716003418
    8. '   ' → logprob: -10.93891716003418
    9. '```' → logprob: -11.43891716003418
    10. ' ][' → logprob: -11.43891716003418

Token 770: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017060093814507127
    2. '2' → logprob: -6.376706123352051
    3. ' ' → logprob: -13.00170612335205
    4. '   ' → logprob: -14.25170612335205
    5. '```' → logprob: -15.12670612335205
    6. 'i' → logprob: -15.50170612335205
    7. '[' → logprob: -16.564205169677734
    8. '３' → logprob: -16.626705169677734
    9. '۳' → logprob: -17.564205169677734
    10. ']' → logprob: -17.689205169677734

Token 771: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011384611949324608
    2. '[' → logprob: -4.5113844871521
    3. '[i' → logprob: -8.636384963989258
    4. ']' → logprob: -10.011384963989258
    5. '   ' → logprob: -10.386384963989258
    6. ' ][' → logprob: -10.886384963989258
    7. '```' → logprob: -11.761384963989258
    8. ''][' → logprob: -12.011384963989258
    9. '"][' → logprob: -12.386384963989258
    10. '           ' → logprob: -12.386384963989258

Token 772: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '3' → logprob: -13.500001907348633
    3. '[' → logprob: -15.375001907348633
    4. ' ' → logprob: -15.375001907348633
    5. '1' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '```' → logprob: -17.750001907348633
    8. '
' → logprob: -18.187501907348633
    9. 'j' → logprob: -18.750001907348633
    10. '2' → logprob: -18.750001907348633

Token 773: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017469348385930061
    2. '])' → logprob: -6.376747131347656
    3. ')
' → logprob: -11.251747131347656
    4. '                   ' → logprob: -11.376747131347656
    5. '               ' → logprob: -12.126747131347656
    6. ' )' → logprob: -12.501747131347656
    7. '})' → logprob: -12.751747131347656
    8. ')]' → logprob: -13.251747131347656
    9. '）' → logprob: -13.376747131347656
    10. '))' → logprob: -13.376747131347656

Token 774: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031297218054533005
    2. '                   ' → logprob: -3.781297206878662
    3. '```' → logprob: -5.531297206878662
    4. 'elif' → logprob: -6.156297206878662
    5. '           ' → logprob: -7.406297206878662
    6. '                       ' → logprob: -7.781297206878662
    7. '       ' → logprob: -8.28129768371582
    8. '                               ' → logprob: -8.90629768371582
    9. '                           ' → logprob: -8.90629768371582
    10. 'else' → logprob: -9.28129768371582

Token 775: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0051431539468467236
    2. 'elif' (adapté à ' elif') → logprob: -5.630143165588379
    3. 'else' → logprob: -7.130143165588379
    4. '```' → logprob: -7.505143165588379
    5. '           ' → logprob: -9.505143165588379
    6. '                   ' → logprob: -9.880143165588379
    7. ' elif' → logprob: -10.255143165588379
    8. ' else' → logprob: -10.630143165588379
    9. '       ' → logprob: -13.380143165588379
    10. '   ' → logprob: -13.505143165588379

Token 776: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06999112665653229
    2. 'j' → logprob: -2.694991111755371
    3. '0' → logprob: -10.194991111755371
    4. ' ' → logprob: -11.194991111755371
    5. '1' → logprob: -13.944991111755371
    6. '   ' → logprob: -14.694991111755371
    7. '	j' → logprob: -14.694991111755371
    8. '    ' → logprob: -14.944991111755371
    9. ' ' → logprob: -15.257491111755371
    10. ' k' → logprob: -15.319991111755371

Token 777: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22551441192626953
    2. '==' → logprob: -1.6005144119262695
    3. '[' → logprob: -9.97551441192627
    4. ']==' → logprob: -10.85051441192627
    5. '==
' → logprob: -11.10051441192627
    6. ')==' → logprob: -12.35051441192627
    7. ' ' → logprob: -12.85051441192627
    8. '   ' → logprob: -13.10051441192627
    9. '=' → logprob: -13.10051441192627
    10. '()==' → logprob: -13.35051441192627

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004152006935328245
    2. ' ' → logprob: -5.629151821136475
    3. '0' → logprob: -7.504151821136475
    4. '   ' → logprob: -14.129152297973633
    5. '
' → logprob: -16.129152297973633
    6. '(' → logprob: -17.316652297973633
    7. '  ' → logprob: -17.379152297973633
    8. '```' → logprob: -17.441652297973633
    9. '    ' → logprob: -17.629152297973633
    10. ' ' → logprob: -17.754152297973633

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029959288076497614
    2. '0' → logprob: -8.125299453735352
    3. ' ' → logprob: -12.625299453735352
    4. '   ' → logprob: -16.50029945373535
    5. '
' → logprob: -18.18779945373535
    6. '```' → logprob: -19.50029945373535
    7. '    ' → logprob: -19.81279945373535
    8. '  ' → logprob: -19.87529945373535
    9. '１' → logprob: -20.00029945373535
    10. '01' → logprob: -20.25029945373535

Token 780: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39208438992500305
    2. ':
' → logprob: -1.1420843601226807
    3. '               ' → logprob: -5.51708459854126
    4. '                   ' → logprob: -7.01708459854126
    5. '[' → logprob: -9.767084121704102
    6. '                       ' → logprob: -10.017084121704102
    7. '           ' → logprob: -10.642084121704102
    8. '   ' → logprob: -10.642084121704102
    9. '=' → logprob: -10.767084121704102
    10. ':

' → logprob: -11.017084121704102

Token 781: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00416126474738121
    2. '               ' → logprob: -5.879161357879639
    3. '#' → logprob: -7.379161357879639
    4. '                       ' → logprob: -7.754161357879639
    5. '   ' → logprob: -8.75416088104248
    6. '           ' → logprob: -9.87916088104248
    7. '```' → logprob: -10.75416088104248
    8. ' #' → logprob: -11.12916088104248
    9. '                  ' → logprob: -11.37916088104248
    10. '                           ' → logprob: -11.50416088104248

Token 782: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18458937108516693
    2. '#' (adapté à ' #') → logprob: -1.9345893859863281
    3. '               ' → logprob: -3.934589385986328
    4. '                       ' → logprob: -6.184589385986328
    5. ' #' → logprob: -6.684589385986328
    6. '   ' → logprob: -7.559589385986328
    7. '           ' → logprob: -7.809589385986328
    8. '                ' → logprob: -10.059589385986328
    9. '                  ' → logprob: -10.059589385986328
    10. '                    ' → logprob: -10.184589385986328

Token 783: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4502606987953186
    2. '                   ' → logprob: -1.5752606391906738
    3. 'dp' → logprob: -1.9502606391906738
    4. ' #' → logprob: -5.200260639190674
    5. '   ' → logprob: -5.700260639190674
    6. '               ' → logprob: -5.825260639190674
    7. ' dp' → logprob: -7.450260639190674
    8. '```' → logprob: -7.700260639190674
    9. ' ' → logprob: -8.700261116027832
    10. '           ' → logprob: -9.325261116027832

Token 784: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004869399592280388
    2. 'i' → logprob: -6.00486946105957
    3. ' i' → logprob: -6.62986946105957
    4. 'dp' → logprob: -7.87986946105957
    5. '   ' → logprob: -8.25486946105957
    6. ' dp' → logprob: -8.87986946105957
    7. '[j' → logprob: -9.50486946105957
    8. '[' → logprob: -10.00486946105957
    9. '                   ' → logprob: -10.12986946105957
    10. '```' → logprob: -10.25486946105957

Token 785: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033308175625279546
    2. ' ' → logprob: -8.375332832336426
    3. 'i' → logprob: -9.375332832336426
    4. 'j' → logprob: -12.375332832336426
    5. '   ' → logprob: -12.750332832336426
    6. 'for' → logprob: -12.750332832336426
    7. ' i' → logprob: -13.000332832336426
    8. '0' → logprob: -13.375332832336426
    9. '```' → logprob: -14.500332832336426
    10. '
' → logprob: -14.687832832336426

Token 786: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001466057845391333
    2. 'i' → logprob: -6.751466274261475
    3. 'for' → logprob: -8.501465797424316
    4. ' ' → logprob: -10.376465797424316
    5. '0' → logprob: -10.626465797424316
    6. 'dp' → logprob: -11.876465797424316
    7. '   ' → logprob: -12.251465797424316
    8. '[i' → logprob: -12.751465797424316
    9. 'j' → logprob: -12.751465797424316
    10. '(' → logprob: -13.126465797424316

Token 787: 'er' (ID: 259)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0839819461107254
    2. '][' → logprob: -3.083981990814209
    3. ']' → logprob: -3.583981990814209
    4. ':' → logprob: -6.708981990814209
    5. '   ' → logprob: -6.958981990814209
    6. '[' → logprob: -6.958981990814209
    7. '+
' → logprob: -6.958981990814209
    8. ']:
' → logprob: -7.083981990814209
    9. ':
' → logprob: -7.708981990814209
    10. '[i' → logprob: -8.20898151397705

Token 788: ' groupe' (ID: 29494)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4709343910217285
    2. '][' → logprob: -1.3459343910217285
    3. 'group' → logprob: -2.9709343910217285
    4. '[' → logprob: -3.3459343910217285
    5. 'j' → logprob: -4.0959343910217285
    6. '[group' → logprob: -5.9709343910217285
    7. ']' → logprob: -6.0959343910217285
    8. ' [' → logprob: -6.3459343910217285
    9. ' group' → logprob: -7.0959343910217285
    10. ' groupe' → logprob: -7.0959343910217285

Token 789: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014591661747545004
    2. '                       ' → logprob: -6.876459121704102
    3. '               ' → logprob: -8.501459121704102
    4. '#' → logprob: -9.376459121704102
    5. '```' → logprob: -10.126459121704102
    6. 'dp' → logprob: -10.501459121704102
    7. '   ' → logprob: -10.626459121704102
    8. '           ' → logprob: -11.001459121704102
    9. ':' → logprob: -12.251459121704102
    10. '       ' → logprob: -12.251459121704102

Token 790: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012564226053655148
    2. '```' → logprob: -7.626256465911865
    3. '#' → logprob: -7.751256465911865
    4. '                       ' → logprob: -8.501255989074707
    5. '               ' → logprob: -9.126255989074707
    6. '   ' → logprob: -11.626255989074707
    7. '           ' → logprob: -12.126255989074707
    8. '       ' → logprob: -12.876255989074707
    9. '                  ' → logprob: -13.251255989074707
    10. '                    ' → logprob: -13.501255989074707

Token 791: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01664724200963974
    2. 'dp' → logprob: -4.7666473388671875
    3. '#' (adapté à ' #') → logprob: -5.3916473388671875
    4. '                       ' → logprob: -6.3916473388671875
    5. '               ' → logprob: -6.6416473388671875
    6. '```' → logprob: -9.016647338867188
    7. ' dp' → logprob: -9.141647338867188
    8. '   ' → logprob: -9.516647338867188
    9. ' #' → logprob: -9.891647338867188
    10. '           ' → logprob: -10.516647338867188

Token 792: ' Cl' (ID: 2190)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40826281905174255
    2. '#' → logprob: -1.408262848854065
    3. '                   ' → logprob: -2.4082627296447754
    4. ' dp' → logprob: -8.533263206481934
    5. '               ' → logprob: -8.658263206481934
    6. ' #' → logprob: -9.408263206481934
    7. '```' → logprob: -9.533263206481934
    8. '   ' → logprob: -10.158263206481934
    9. '                       ' → logprob: -10.533263206481934
    10. '                    ' → logprob: -11.158263206481934

Token 793: 'ore' (ID: 510)
  Prédit: 'ore'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.024214759469032288
    2. 'oser' → logprob: -4.149214744567871
    3. 'orer' → logprob: -5.649214744567871
    4. 'ose' → logprob: -6.149214744567871
    5. '   ' → logprob: -6.649214744567871
    6. 'o' → logprob: -7.399214744567871
    7. 'ô' → logprob: -8.274214744567871
    8. '       ' → logprob: -9.649214744567871
    9. '
' → logprob: -10.024214744567871
    10. '```' → logprob: -10.274214744567871

Token 794: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14631889760494232
    2. '[i' → logprob: -2.6463189125061035
    3. ' dp' → logprob: -2.7713189125061035
    4. '(dp' → logprob: -6.5213189125061035
    5. '               ' → logprob: -8.021318435668945
    6. '                   ' → logprob: -8.521318435668945
    7. '_dp' → logprob: -8.771318435668945
    8. '[' → logprob: -8.896318435668945
    9. '           ' → logprob: -9.396318435668945
    10. '   ' → logprob: -9.521318435668945

Token 795: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -7.421908958349377e-05
    2. ' segment' → logprob: -9.87507438659668
    3. 'seg' → logprob: -11.50007438659668
    4. 'i' → logprob: -11.75007438659668
    5. '1' → logprob: -13.50007438659668
    6. 'segments' → logprob: -14.25007438659668
    7. '   ' → logprob: -14.37507438659668
    8. '[i' → logprob: -14.50007438659668
    9. 's' → logprob: -15.00007438659668
    10. 'g' → logprob: -15.12507438659668

Token 796: ' courant' (ID: 74694)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.8365388512611389
    2. ' courant' → logprob: -1.0865387916564941
    3. '               ' → logprob: -2.586538791656494
    4. '                   ' → logprob: -2.836538791656494
    5. 'dp' → logprob: -3.211538791656494
    6. 'curr' → logprob: -3.961538791656494
    7. '[i' → logprob: -4.961538791656494
    8. '```' → logprob: -4.961538791656494
    9. '                 ' → logprob: -5.086538791656494
    10. '   ' → logprob: -5.211538791656494

Token 797: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4753691554069519
    2. 'dp' → logprob: -0.9753691554069519
    3. ' dp' → logprob: -6.975368976593018
    4. '               ' → logprob: -8.600369453430176
    5. '                       ' → logprob: -9.350369453430176
    6. '```' → logprob: -9.850369453430176
    7. '           ' → logprob: -11.225369453430176
    8. '   ' → logprob: -11.600369453430176
    9. '(dp' → logprob: -12.350369453430176
    10. '       ' → logprob: -13.600369453430176

Token 798: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.032526444643735886
    2. 'dp' → logprob: -3.5325264930725098
    3. ' dp' → logprob: -6.65752649307251
    4. '                       ' → logprob: -7.28252649307251
    5. '               ' → logprob: -7.53252649307251
    6. '```' → logprob: -9.282526016235352
    7. '                    ' → logprob: -10.157526016235352
    8. '           ' → logprob: -10.282526016235352
    9. '(dp' → logprob: -10.782526016235352
    10. '                  ' → logprob: -10.907526016235352

Token 799: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.006175859831273556
    2. ' dp' → logprob: -5.256175994873047
    3. '                   ' → logprob: -7.006175994873047
    4. '                       ' → logprob: -10.881175994873047
    5. '               ' → logprob: -11.381175994873047
    6. '                           ' → logprob: -13.006175994873047
    7. '                               ' → logprob: -14.006175994873047
    8. '           ' → logprob: -14.506175994873047
    9. '	dp' → logprob: -14.881175994873047
    10. '                    ' → logprob: -15.506175994873047

Token 800: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.125000953674316
    3. 'i' → logprob: -16.0
    4. '   ' → logprob: -17.0
    5. '[' → logprob: -17.0
    6. ' [' → logprob: -17.5
    7. '
' → logprob: -19.0
    8. '[I' → logprob: -19.25
    9. '``' → logprob: -19.625
    10. '`' → logprob: -20.0

Token 801: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017433916218578815
    2. '[i' → logprob: -9.000174522399902
    3. '][' → logprob: -10.125174522399902
    4. '+i' → logprob: -12.250174522399902
    5. ' +' → logprob: -12.750174522399902
    6. '   ' → logprob: -14.125174522399902
    7. '```' → logprob: -14.125174522399902
    8. '[' → logprob: -14.250174522399902
    9. 'i' → logprob: -14.875174522399902
    10. '+
' → logprob: -15.500174522399902

Token 802: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000273136975010857
    2. '+' → logprob: -8.500272750854492
    3. 'i' → logprob: -9.875272750854492
    4. '```' → logprob: -12.250272750854492
    5. '   ' → logprob: -12.500272750854492
    6. ' ' → logprob: -12.750272750854492
    7. '2' → logprob: -13.375272750854492
    8. '...' → logprob: -14.125272750854492
    9. '
' → logprob: -14.250272750854492
    10. '       ' → logprob: -14.750272750854492

Token 803: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25199902057647705
    2. '][' → logprob: -1.501999020576477
    3. '[j' → logprob: -11.126998901367188
    4. '}[' → logprob: -11.376998901367188
    5. '```' → logprob: -11.876998901367188
    6. '           ' → logprob: -11.876998901367188
    7. ')[' → logprob: -12.126998901367188
    8. '>[' → logprob: -12.501998901367188
    9. ' [' → logprob: -12.501998901367188
    10. '   ' → logprob: -12.626998901367188

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.125001907348633
    4. 'j' → logprob: -19.375001907348633
    5. '```' → logprob: -19.500001907348633
    6. '[' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. '  ' → logprob: -19.750001907348633
    9. '0' → logprob: -19.875001907348633
    10. '       ' → logprob: -20.687501907348633

Token 805: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00038693982060067356
    2. '[' → logprob: -7.875386714935303
    3. ' ][' → logprob: -12.625387191772461
    4. ']' → logprob: -12.875387191772461
    5. '0' → logprob: -15.250387191772461
    6. '   ' → logprob: -15.375387191772461
    7. '```' → logprob: -16.37538719177246
    8. '       ' → logprob: -16.50038719177246
    9. '           ' → logprob: -16.50038719177246
    10. ''][' → logprob: -16.75038719177246

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006268949946388602
    2. '1' → logprob: -7.375627040863037
    3. ' ' → logprob: -15.000626564025879
    4. '   ' → logprob: -17.500627517700195
    5. '```' → logprob: -18.375627517700195
    6. '`' → logprob: -18.750627517700195
    7. '[' → logprob: -19.125627517700195
    8. '  ' → logprob: -20.375627517700195
    9. '       ' → logprob: -20.375627517700195
    10. '           ' → logprob: -20.625627517700195

Token 807: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002726601669564843
    2. ']=' → logprob: -9.000272750854492
    3. ')' → logprob: -9.500272750854492
    4. '=' → logprob: -9.750272750854492
    5. ' =' → logprob: -11.875272750854492
    6. '               ' → logprob: -12.125272750854492
    7. '                   ' → logprob: -12.875272750854492
    8. '           ' → logprob: -14.875272750854492
    9. ' ]' → logprob: -14.875272750854492
    10. '   ' → logprob: -15.500272750854492

Token 808: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687655329704285
    2. '=' → logprob: -1.1368765830993652
    3. '=max' → logprob: -13.011876106262207
    4. ']' → logprob: -13.511876106262207
    5. ')' → logprob: -14.261876106262207
    6. 'max' → logprob: -14.511876106262207
    7. ']=' → logprob: -15.011876106262207
    8. '   ' → logprob: -15.386876106262207
    9. '                   ' → logprob: -15.761876106262207
    10. ')=' → logprob: -17.386877059936523

Token 809: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692810595035553
    2. ' max' → logprob: -2.1269280910491943
    3. '(max' → logprob: -17.626928329467773
    4. ' ' → logprob: -18.376928329467773
    5. '=max' → logprob: -18.501928329467773
    6. '	max' → logprob: -18.876928329467773
    7. '[max' → logprob: -19.501928329467773
    8. '   ' → logprob: -19.751928329467773
    9. 'm' → logprob: -20.501928329467773
    10. '
' → logprob: -20.876928329467773

Token 810: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.935296834039036e-06
    2. 'dp' → logprob: -12.75000286102295
    3. '(' → logprob: -17.375003814697266
    4. '(max' → logprob: -19.375003814697266
    5. '(
' → logprob: -19.625003814697266
    6. '	dp' → logprob: -20.125003814697266
    7. ' dp' → logprob: -20.375003814697266
    8. ' (' → logprob: -20.625003814697266
    9. 'max' → logprob: -21.375003814697266
    10. '(df' → logprob: -22.000003814697266

Token 811: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005132370279170573
    2. 'dp' → logprob: -8.125513076782227
    3. '(dp' → logprob: -8.500513076782227
    4. '(i' → logprob: -12.125513076782227
    5. '[' → logprob: -13.000513076782227
    6. ' dp' → logprob: -13.125513076782227
    7. '_dp' → logprob: -13.375513076782227
    8. '```' → logprob: -13.875513076782227
    9. 'i' → logprob: -14.250513076782227
    10. '	dp' → logprob: -15.000513076782227

Token 812: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10030651837587357
    2. '][' → logprob: -2.350306510925293
    3. '[' → logprob: -9.975306510925293
    4. 'i' → logprob: -10.975306510925293
    5. '[j' → logprob: -10.975306510925293
    6. '   ' → logprob: -11.850306510925293
    7. '}[' → logprob: -12.850306510925293
    8. '(i' → logprob: -12.975306510925293
    9. ']' → logprob: -13.350306510925293
    10. ' ][' → logprob: -13.850306510925293

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02665996551513672
    2. 'i' → logprob: -3.6516599655151367
    3. 'j' → logprob: -8.026659965515137
    4. '0' → logprob: -11.776659965515137
    5. ' ' → logprob: -11.776659965515137
    6. ' i' → logprob: -11.901659965515137
    7. '   ' → logprob: -12.026659965515137
    8. '```' → logprob: -12.651659965515137
    9. 'k' → logprob: -15.276659965515137
    10. ' j' → logprob: -15.526659965515137

Token 814: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006626377580687404
    2. '[' → logprob: -7.375662803649902
    3. '1' → logprob: -11.375662803649902
    4. '   ' → logprob: -11.625662803649902
    5. '```' → logprob: -12.500662803649902
    6. ' ][' → logprob: -12.625662803649902
    7. ']' → logprob: -13.125662803649902
    8. '       ' → logprob: -13.250662803649902
    9. '           ' → logprob: -13.375662803649902
    10. '[i' → logprob: -14.375662803649902

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -14.12500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.50000286102295
    5. '```' → logprob: -15.00000286102295
    6. '][' → logprob: -16.625001907348633
    7. '`' → logprob: -16.750001907348633
    8. '
' → logprob: -16.812501907348633
    9. '  ' → logprob: -17.562501907348633
    10. '...' → logprob: -17.812501907348633

Token 816: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0001867326645879075
    2. ',' → logprob: -8.625186920166016
    3. ' ],' → logprob: -13.000186920166016
    4. '                   ' → logprob: -13.500186920166016
    5. ']' → logprob: -13.625186920166016
    6. '               ' → logprob: -14.125186920166016
    7. '           ' → logprob: -14.375186920166016
    8. '],
' → logprob: -15.000186920166016
    9. ''],' → logprob: -15.750186920166016
    10. ' ,' → logprob: -16.125186920166016

Token 817: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.06196869537234306
    2. 'dp' → logprob: -2.8119688034057617
    3. '(dp' → logprob: -14.311968803405762
    4. '	dp' → logprob: -14.936968803405762
    5. '_dp' → logprob: -16.561967849731445
    6. '.dp' → logprob: -18.436967849731445
    7. '                   ' → logprob: -19.686967849731445
    8. '```' → logprob: -20.186967849731445
    9. ' ' → logprob: -20.311967849731445
    10. 'd' → logprob: -20.686967849731445

Token 818: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028319843113422394
    2. 'i' → logprob: -5.877831935882568
    3. '```' → logprob: -11.377832412719727
    4. '(i' → logprob: -12.127832412719727
    5. '
' → logprob: -12.877832412719727
    6. '[' → logprob: -13.127832412719727
    7. '   ' → logprob: -13.752832412719727
    8. '][' → logprob: -14.002832412719727
    9. ' i' → logprob: -14.377832412719727
    10. '`' → logprob: -14.752832412719727

Token 819: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00036156410351395607
    2. '][' → logprob: -8.125361442565918
    3. '   ' → logprob: -11.125361442565918
    4. '[' → logprob: -11.125361442565918
    5. 'i' → logprob: -11.250361442565918
    6. '[i' → logprob: -11.750361442565918
    7. ' +' → logprob: -11.750361442565918
    8. '+i' → logprob: -13.125361442565918
    9. '           ' → logprob: -13.250361442565918
    10. '       ' → logprob: -14.250361442565918

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015180727932602167
    2. '+' → logprob: -6.501518249511719
    3. ' ' → logprob: -11.251518249511719
    4. 'i' → logprob: -13.376518249511719
    5. '   ' → logprob: -14.376518249511719
    6. '```' → logprob: -14.751518249511719
    7. '0' → logprob: -17.50151824951172
    8. '[' → logprob: -17.75151824951172
    9. '(i' → logprob: -17.75151824951172
    10. '2' → logprob: -18.00151824951172

Token 821: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.19359607994556427
    2. '[i' → logprob: -1.8185961246490479
    3. '[' → logprob: -4.318595886230469
    4. '```' → logprob: -8.693595886230469
    5. '[j' → logprob: -9.818595886230469
    6. '           ' → logprob: -10.068595886230469
    7. ' ][' → logprob: -10.193595886230469
    8. ')[' → logprob: -10.568595886230469
    9. '       ' → logprob: -10.693595886230469
    10. '   ' → logprob: -11.068595886230469

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005644689663313329
    2. 'i' → logprob: -7.5005645751953125
    3. '   ' → logprob: -12.750564575195312
    4. 'j' → logprob: -13.125564575195312
    5. ' ' → logprob: -13.125564575195312
    6. '```' → logprob: -13.125564575195312
    7. '0' → logprob: -13.750564575195312
    8. ' i' → logprob: -14.750564575195312
    9. '(i' → logprob: -14.875564575195312
    10. '[i' → logprob: -15.625564575195312

Token 823: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006388116744346917
    2. '[' → logprob: -7.375638961791992
    3. ' ][' → logprob: -11.875638961791992
    4. '0' → logprob: -13.500638961791992
    5. '```' → logprob: -13.750638961791992
    6. ']' → logprob: -13.875638961791992
    7. '           ' → logprob: -14.250638961791992
    8. '   ' → logprob: -15.000638961791992
    9. ''][' → logprob: -15.625638961791992
    10. '       ' → logprob: -16.000638961791992

Token 824: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. '1' → logprob: -12.250012397766113
    3. ' ' → logprob: -13.250012397766113
    4. '```' → logprob: -13.250012397766113
    5. '   ' → logprob: -13.625012397766113
    6. '[' → logprob: -14.250012397766113
    7. ']' → logprob: -15.250012397766113
    8. '``' → logprob: -15.687512397766113
    9. '       ' → logprob: -15.875012397766113
    10. '  ' → logprob: -16.375011444091797

Token 825: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20336167514324188
    2. ')' → logprob: -1.7033616304397583
    3. '               ' → logprob: -6.828361511230469
    4. '                   ' → logprob: -7.078361511230469
    5. ')
' → logprob: -11.453361511230469
    6. ' )
' → logprob: -12.828361511230469
    7. '           ' → logprob: -13.703361511230469
    8. ')`
' → logprob: -13.703361511230469
    9. '                       ' → logprob: -13.828361511230469
    10. '                  ' → logprob: -14.203361511230469

Token 826: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007684823591262102
    2. 'dp' → logprob: -5.132684707641602
    3. '```' → logprob: -6.882684707641602
    4. '                       ' → logprob: -7.757684707641602
    5. '               ' → logprob: -8.757684707641602
    6. '                           ' → logprob: -9.632684707641602
    7. '                               ' → logprob: -10.632684707641602
    8. ' dp' → logprob: -11.257684707641602
    9. '``' → logprob: -11.382684707641602
    10. '                    ' → logprob: -11.507684707641602

Token 827: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2602757513523102
    2. 'dp' → logprob: -1.5102757215499878
    3. '#' (adapté à ' #') → logprob: -4.885275840759277
    4. '                       ' → logprob: -7.885275840759277
    5. '```' → logprob: -8.635275840759277
    6. ' dp' → logprob: -9.385275840759277
    7. '               ' → logprob: -9.760275840759277
    8. '                           ' → logprob: -10.635275840759277
    9. '                               ' → logprob: -11.635275840759277
    10. '                    ' → logprob: -11.885275840759277

Token 828: ' P' (ID: 398)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004574073012918234
    2. '                   ' → logprob: -5.504574298858643
    3. ' dp' → logprob: -7.629574298858643
    4. '               ' → logprob: -12.379573822021484
    5. '	dp' → logprob: -13.504573822021484
    6. '                       ' → logprob: -13.629573822021484
    7. '```' → logprob: -13.754573822021484
    8. '                  ' → logprob: -15.379573822021484
    9. '                    ' → logprob: -15.379573822021484
    10. '           ' → logprob: -15.379573822021484

Token 829: 'ours' (ID: 2327)
  Prédit: 'ours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.03320898488163948
    2. 'urs' → logprob: -3.5332090854644775
    3. 'our' → logprob: -5.783208847045898
    4. 'dp' → logprob: -9.033208847045898
    5. '```' → logprob: -9.408208847045898
    6. 'ous' → logprob: -10.658208847045898
    7. '       ' → logprob: -11.033208847045898
    8. 'ro' → logprob: -11.033208847045898
    9. 'ros' → logprob: -11.283208847045898
    10. 'r' → logprob: -11.658208847045898

Token 830: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005267907399684191
    2. 'uire' → logprob: -5.255268096923828
    3. 'uir' → logprob: -10.505268096923828
    4. 'ivre' → logprob: -12.755268096923828
    5. 'ui' → logprob: -14.005268096923828
    6. 'ur' → logprob: -14.130268096923828
    7. 'uit' → logprob: -14.880268096923828
    8. 'oire' → logprob: -15.005268096923828
    9. 'uver' → logprob: -15.380268096923828
    10. '[u' → logprob: -15.380268096923828

Token 831: 'ivre' (ID: 46558)
  Prédit: 'ivre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivre' → logprob: -0.11324818432331085
    2. 'u' → logprob: -2.988248109817505
    3. 'i' → logprob: -4.238248348236084
    4. 'ive' → logprob: -4.363248348236084
    5. 'ire' → logprob: -4.363248348236084
    6. 'iver' → logprob: -5.113248348236084
    7. 'iv' → logprob: -6.363248348236084
    8. 'uire' → logprob: -6.488248348236084
    9. 'ivir' → logprob: -6.738248348236084
    10. '       ' → logprob: -7.363248348236084

Token 832: ' dans' (ID: 2671)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0297942366451025
    2. 'dp' → logprob: -3.529794216156006
    3. ' dp' → logprob: -10.279794692993164
    4. '(' → logprob: -12.904794692993164
    5. '	dp' → logprob: -12.904794692993164
    6. '[' → logprob: -13.904794692993164
    7. ' (' → logprob: -14.029794692993164
    8. '   ' → logprob: -14.029794692993164
    9. '_dp' → logprob: -15.029794692993164
    10. 'in' → logprob: -15.154794692993164

Token 833: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00035929924342781305
    2. '(dp' → logprob: -8.250359535217285
    3. ' dp' → logprob: -9.250359535217285
    4. '_dp' → logprob: -14.250359535217285
    5. '	dp' → logprob: -14.625359535217285
    6. '   ' → logprob: -15.500359535217285
    7. 'the' → logprob: -15.750359535217285
    8. '[' → logprob: -16.12535858154297
    9. '               ' → logprob: -16.25035858154297
    10. '           ' → logprob: -16.50035858154297

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -12.250012397766113
    3. 'j' → logprob: -12.625012397766113
    4. 'i' → logprob: -12.750012397766113
    5. '   ' → logprob: -14.000012397766113
    6. '[i' → logprob: -14.625012397766113
    7. '```' → logprob: -15.625012397766113
    8. 'dp' → logprob: -16.75001335144043
    9. '[' → logprob: -17.25001335144043
    10. '[j' → logprob: -17.62501335144043

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027849749312736094
    2. '[i' → logprob: -8.62527847290039
    3. 'i' → logprob: -9.62527847290039
    4. 'j' → logprob: -11.75027847290039
    5. '   ' → logprob: -12.00027847290039
    6. ' ' → logprob: -12.25027847290039
    7. '```' → logprob: -12.25027847290039
    8. '[' → logprob: -12.87527847290039
    9. 'dp' → logprob: -12.87527847290039
    10. '`' → logprob: -13.25027847290039

Token 836: 'er' (ID: 259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6019243001937866
    2. '][' → logprob: -1.3519243001937866
    3. '_group' → logprob: -1.9769243001937866
    4. '+' → logprob: -3.601924419403076
    5. '   ' → logprob: -5.476924419403076
    6. '[j' → logprob: -5.601924419403076
    7. '                   ' → logprob: -5.851924419403076
    8. ']' → logprob: -5.976924419403076
    9. 'group' → logprob: -5.976924419403076
    10. '[i' → logprob: -6.101924419403076

Token 837: ' groupe' (ID: 29494)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.70795077085495
    2. 'g' → logprob: -1.2079508304595947
    3. '_g' → logprob: -2.7079508304595947
    4. '_group' → logprob: -2.7079508304595947
    5. 'group' → logprob: -3.2079508304595947
    6. '[j' → logprob: -4.332950592041016
    7. ' groupe' → logprob: -4.707950592041016
    8. '[group' → logprob: -5.457950592041016
    9. '[g' → logprob: -6.207950592041016
    10. ' [' → logprob: -6.207950592041016

Token 838: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3938174545764923
    2. 'dp' → logprob: -1.14381742477417
    3. ' dp' → logprob: -6.01881742477417
    4. '               ' → logprob: -6.14381742477417
    5. '[i' → logprob: -7.14381742477417
    6. '```' → logprob: -7.89381742477417
    7. '[' → logprob: -8.018817901611328
    8. '                       ' → logprob: -8.643817901611328
    9. '_dp' → logprob: -8.643817901611328
    10. '[j' → logprob: -8.893817901611328

Token 839: '                   ' (ID: 699)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.394851416349411
    2. '                   ' → logprob: -1.1448514461517334
    3. ' dp' → logprob: -5.019851207733154
    4. '(dp' → logprob: -7.019851207733154
    5. '               ' → logprob: -8.644851684570312
    6. '[' → logprob: -9.644851684570312
    7. '+' → logprob: -10.144851684570312
    8. '   ' → logprob: -10.519851684570312
    9. '                       ' → logprob: -10.644851684570312
    10. '_dp' → logprob: -10.644851684570312

Token 840: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0001584850688232109
    2. ' dp' → logprob: -8.750158309936523
    3. '                   ' → logprob: -18.125158309936523
    4. 'max' → logprob: -18.250158309936523
    5. '	dp' → logprob: -18.250158309936523
    6. '           ' → logprob: -18.750158309936523
    7. '               ' → logprob: -19.000158309936523
    8. '   ' → logprob: -19.125158309936523
    9. '(dp' → logprob: -19.250158309936523
    10. '_dp' → logprob: -19.500158309936523

Token 841: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.37501049041748
    4. '```' → logprob: -14.50001049041748
    5. 'i' → logprob: -15.50001049041748
    6. ' [' → logprob: -17.000009536743164
    7. '_i' → logprob: -17.750009536743164
    8. '``' → logprob: -18.250009536743164
    9. '_[' → logprob: -18.375009536743164
    10. '+' → logprob: -18.500009536743164

Token 842: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008352391887456179
    2. '[' → logprob: -7.125835418701172
    3. '+[' → logprob: -11.000835418701172
    4. '][' → logprob: -11.875835418701172
    5. ' +' → logprob: -13.000835418701172
    6. '[i' → logprob: -13.125835418701172
    7. '```' → logprob: -13.750835418701172
    8. '   ' → logprob: -14.000835418701172
    9. ')[' → logprob: -15.625835418701172
    10. '+i' → logprob: -16.000835418701172

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018161057960242033
    2. '+' → logprob: -9.250181198120117
    3. '[' → logprob: -9.750181198120117
    4. '```' → logprob: -11.625181198120117
    5. ' ' → logprob: -12.000181198120117
    6. '[i' → logprob: -12.750181198120117
    7. '   ' → logprob: -13.000181198120117
    8. 'max' → logprob: -13.750181198120117
    9. '
' → logprob: -14.187681198120117
    10. '0' → logprob: -14.250181198120117

Token 844: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9401063323020935
    2. '][' → logprob: -1.1901063919067383
    3. '[i' → logprob: -1.1901063919067383
    4. ')[' → logprob: -8.065106391906738
    5. '[j' → logprob: -8.690106391906738
    6. '   ' → logprob: -8.815106391906738
    7. '```' → logprob: -9.190106391906738
    8. '           ' → logprob: -9.440106391906738
    9. '}[' → logprob: -9.565106391906738
    10. ' [' → logprob: -9.940106391906738

Token 845: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. 'j' → logprob: -11.000018119812012
    3. ' ' → logprob: -14.125018119812012
    4. '   ' → logprob: -14.875018119812012
    5. '[' → logprob: -15.625018119812012
    6. '[j' → logprob: -17.250017166137695
    7. ' j' → logprob: -17.625017166137695
    8. 'i' → logprob: -17.750017166137695
    9. '```' → logprob: -18.000017166137695
    10. '  ' → logprob: -18.375017166137695

Token 846: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16028596460819244
    2. '[' → logprob: -1.9102859497070312
    3. ')[' → logprob: -11.410285949707031
    4. '```' → logprob: -11.535285949707031
    5. ' ][' → logprob: -11.535285949707031
    6. '   ' → logprob: -12.035285949707031
    7. '           ' → logprob: -12.535285949707031
    8. '>[' → logprob: -12.660285949707031
    9. ']' → logprob: -12.785285949707031
    10. ''][' → logprob: -13.160285949707031

Token 847: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. '[' → logprob: -9.750070571899414
    3. ' ' → logprob: -11.750070571899414
    4. '```' → logprob: -13.250070571899414
    5. '   ' → logprob: -14.000070571899414
    6. '0' → logprob: -14.875070571899414
    7. '       ' → logprob: -15.500070571899414
    8. '           ' → logprob: -15.812570571899414
    9. '  ' → logprob: -15.937570571899414
    10. '`' → logprob: -16.125070571899414

Token 848: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012429474852979183
    2. '=' → logprob: -5.012429237365723
    3. ']=' → logprob: -5.262429237365723
    4. ' =' → logprob: -7.762429237365723
    5. ')' → logprob: -9.637429237365723
    6. ' ]' → logprob: -12.012429237365723
    7. ']+=' → logprob: -12.387429237365723
    8. '+' → logprob: -12.512429237365723
    9. '           ' → logprob: -13.137429237365723
    10. '                   ' → logprob: -13.262429237365723

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020720958709717
    2. ' =' → logprob: -2.3502073287963867
    3. '=max' → logprob: -15.475207328796387
    4. ')' → logprob: -16.10020637512207
    5. ']' → logprob: -16.60020637512207
    6. ']=' → logprob: -17.22520637512207
    7. '                   ' → logprob: -17.35020637512207
    8. '           ' → logprob: -17.72520637512207
    9. '            ' → logprob: -17.72520637512207
    10. '+=' → logprob: -17.97520637512207

Token 850: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007099286303855479
    2. ' max' → logprob: -7.2507100105285645
    3. '(max' → logprob: -19.500709533691406
    4. '[max' → logprob: -21.250709533691406
    5. '	max' → logprob: -21.875709533691406
    6. ' ' → logprob: -22.125709533691406
    7. '=max' → logprob: -22.500709533691406
    8. '   ' → logprob: -23.000709533691406
    9. '_max' → logprob: -24.000709533691406
    10. 'min' → logprob: -24.000709533691406

Token 851: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.625000953674316
    4. 'dp' → logprob: -16.75
    5. '(
' → logprob: -18.25
    6. ' dp' → logprob: -19.375
    7. '	dp' → logprob: -19.625
    8. '(df' → logprob: -20.125
    9. '(dt' → logprob: -21.25
    10. '(db' → logprob: -22.125

Token 852: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010411311872303486
    2. 'dp' → logprob: -4.885411262512207
    3. '(dp' → logprob: -6.385411262512207
    4. '[' → logprob: -7.510411262512207
    5. ' dp' → logprob: -8.260411262512207
    6. '[j' → logprob: -8.635411262512207
    7. '_dp' → logprob: -9.260411262512207
    8. '	dp' → logprob: -11.260411262512207
    9. '[df' → logprob: -11.385411262512207
    10. '```' → logprob: -12.885411262512207

Token 853: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6936431527137756
    2. '][' → logprob: -0.6936431527137756
    3. '[' → logprob: -8.068643569946289
    4. ' ][' → logprob: -9.693643569946289
    5. '   ' → logprob: -10.693643569946289
    6. '}[' → logprob: -10.943643569946289
    7. ']' → logprob: -11.193643569946289
    8. '[j' → logprob: -11.443643569946289
    9. ' [' → logprob: -11.693643569946289
    10. 'i' → logprob: -11.693643569946289

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001462107611587271
    2. 'i' → logprob: -9.62514591217041
    3. ' ' → logprob: -9.75014591217041
    4. '0' → logprob: -11.50014591217041
    5. 'j' → logprob: -12.12514591217041
    6. '   ' → logprob: -12.75014591217041
    7. 'k' → logprob: -13.62514591217041
    8. ' i' → logprob: -14.62514591217041
    9. '  ' → logprob: -14.75014591217041
    10. '```' → logprob: -15.00014591217041

Token 855: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017030329909175634
    2. '[' → logprob: -6.626703262329102
    3. ' ][' → logprob: -8.376703262329102
    4. '   ' → logprob: -9.626703262329102
    5. ']' → logprob: -10.126703262329102
    6. '       ' → logprob: -11.626703262329102
    7. '           ' → logprob: -11.626703262329102
    8. '0' → logprob: -12.376703262329102
    9. '1' → logprob: -13.001703262329102
    10. ' [' → logprob: -13.251703262329102

Token 856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038234490901231766
    2. '1' → logprob: -3.2882344722747803
    3. ' ' → logprob: -9.16323471069336
    4. 'k' → logprob: -10.41323471069336
    5. '   ' → logprob: -10.78823471069336
    6. 'i' → logprob: -11.91323471069336
    7. '```' → logprob: -12.16323471069336
    8. '    ' → logprob: -12.91323471069336
    9. '+' → logprob: -13.10073471069336
    10. ']' → logprob: -13.16323471069336

Token 857: ']+' (ID: 15344)
  Prédit: '+a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+a' → logprob: -0.00024156268045771867
    2. ' +' → logprob: -8.87524127960205
    3. '+' → logprob: -9.25024127960205
    4. ']+' → logprob: -12.25024127960205
    5. ')+' → logprob: -14.37524127960205
    6. '+A' → logprob: -16.625242233276367
    7. '+b' → logprob: -17.250242233276367
    8. '}+' → logprob: -17.375242233276367
    9. '+i' → logprob: -17.500242233276367
    10. '+self' → logprob: -18.375242233276367

Token 858: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012510355561971664
    2. ' a' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.512510299682617
    4. '   ' → logprob: -15.887510299682617
    5. '```' → logprob: -16.262510299682617
    6. '    ' → logprob: -16.387510299682617
    7. '_a' → logprob: -17.262510299682617
    8. ''a' → logprob: -17.387510299682617
    9. ' ' → logprob: -17.512510299682617
    10. '	a' → logprob: -17.637510299682617

Token 859: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.250006675720215
    3. ' [' → logprob: -13.375006675720215
    4. 'i' → logprob: -15.625006675720215
    5. '   ' → logprob: -17.8750057220459
    6. '```' → logprob: -18.7500057220459
    7. '[
' → logprob: -19.3750057220459
    8. '[I' → logprob: -19.6250057220459
    9. ' ' → logprob: -20.0000057220459
    10. '(i' → logprob: -20.8750057220459

Token 860: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023824408650398254
    2. '],' → logprob: -3.773824453353882
    3. ' ,' → logprob: -7.523824214935303
    4. '),' → logprob: -11.273824691772461
    5. ']' → logprob: -11.523824691772461
    6. ',a' → logprob: -12.273824691772461
    7. '   ' → logprob: -12.773824691772461
    8. ' ],' → logprob: -13.023824691772461
    9. '           ' → logprob: -13.523824691772461
    10. '               ' → logprob: -14.023824691772461

Token 861: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.12693262100219727
    2. 'dp' → logprob: -2.1269326210021973
    3. '(dp' → logprob: -13.251932144165039
    4. '	dp' → logprob: -13.501932144165039
    5. '                   ' → logprob: -14.001932144165039
    6. '_dp' → logprob: -14.876932144165039
    7. '                    ' → logprob: -15.751932144165039
    8. '.dp' → logprob: -16.62693214416504
    9. '               ' → logprob: -17.62693214416504
    10. ' ' → logprob: -17.87693214416504

Token 862: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.375012397766113
    3. 'i' → logprob: -14.875012397766113
    4. ' [' → logprob: -16.125011444091797
    5. '```' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.625011444091797
    7. '(i' → logprob: -16.625011444091797
    8. '[I' → logprob: -17.750011444091797
    9. '[
' → logprob: -18.125011444091797
    10. '[j' → logprob: -18.750011444091797

Token 863: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011594036914175376
    2. '][' → logprob: -9.625116348266602
    3. '[' → logprob: -10.000116348266602
    4. '[i' → logprob: -13.500116348266602
    5. ']+' → logprob: -14.000116348266602
    6. '   ' → logprob: -14.125116348266602
    7. ' +' → logprob: -14.250116348266602
    8. '+
' → logprob: -15.625116348266602
    9. '+[' → logprob: -15.750116348266602
    10. '```' → logprob: -16.2501163482666

Token 864: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012667743489146233
    2. '+' → logprob: -4.387667655944824
    3. 'i' → logprob: -9.512667655944824
    4. ' ' → logprob: -9.637667655944824
    5. '   ' → logprob: -11.637667655944824
    6. '```' → logprob: -13.012667655944824
    7. '[i' → logprob: -13.387667655944824
    8. '(i' → logprob: -13.637667655944824
    9. '  ' → logprob: -14.012667655944824
    10. ' i' → logprob: -14.137667655944824

Token 865: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1131071224808693
    2. '[' → logprob: -2.238107204437256
    3. ')[' → logprob: -8.863106727600098
    4. '           ' → logprob: -10.113106727600098
    5. ' ][' → logprob: -10.488106727600098
    6. '   ' → logprob: -10.863106727600098
    7. ']' → logprob: -11.488106727600098
    8. ' [' → logprob: -11.488106727600098
    9. '       ' → logprob: -11.613106727600098
    10. '```' → logprob: -12.363106727600098

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019412499386817217
    2. 'i' → logprob: -6.251941204071045
    3. '[i' → logprob: -12.751941680908203
    4. 'j' → logprob: -13.001941680908203
    5. '0' → logprob: -13.376941680908203
    6. ' ' → logprob: -13.626941680908203
    7. '   ' → logprob: -13.751941680908203
    8. '```' → logprob: -14.376941680908203
    9. ' i' → logprob: -14.501941680908203
    10. '(i' → logprob: -14.564441680908203

Token 867: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006145992316305637
    2. '[' → logprob: -5.13114595413208
    3. '           ' → logprob: -9.006146430969238
    4. ')[' → logprob: -10.006146430969238
    5. '               ' → logprob: -11.256146430969238
    6. '                   ' → logprob: -11.506146430969238
    7. ' ][' → logprob: -12.131146430969238
    8. '   ' → logprob: -12.381146430969238
    9. '```' → logprob: -12.381146430969238
    10. '       ' → logprob: -12.881146430969238

Token 868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023290286771953106
    2. 'i' → logprob: -6.127328872680664
    3. '[i' → logprob: -9.002328872680664
    4. 'a' → logprob: -12.002328872680664
    5. '(i' → logprob: -12.627328872680664
    6. '```' → logprob: -12.877328872680664
    7. '   ' → logprob: -13.252328872680664
    8. '0' → logprob: -13.377328872680664
    9. '[' → logprob: -13.502328872680664
    10. ' ' → logprob: -13.627328872680664

Token 869: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38816338777542114
    2. ')' → logprob: -1.1381633281707764
    3. '               ' → logprob: -7.3881635665893555
    4. '                   ' → logprob: -7.3881635665893555
    5. ')
' → logprob: -10.013163566589355
    6. ')`
' → logprob: -12.513163566589355
    7. ' )
' → logprob: -13.763163566589355
    8. '           ' → logprob: -13.763163566589355
    9. '                       ' → logprob: -13.763163566589355
    10. '                           ' → logprob: -14.763163566589355

Token 870: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002106244442984462
    2. '```' → logprob: -6.877106189727783
    3. 'dp' → logprob: -7.002106189727783
    4. '               ' → logprob: -9.127106666564941
    5. '                       ' → logprob: -10.377106666564941
    6. ' dp' → logprob: -11.877106666564941
    7. '``' → logprob: -12.502106666564941
    8. '                    ' → logprob: -12.502106666564941
    9. '           ' → logprob: -12.752106666564941
    10. '                           ' → logprob: -13.627106666564941

Token 871: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0227622389793396
    2. 'dp' → logprob: -4.397762298583984
    3. '```' → logprob: -4.897762298583984
    4. '#' (adapté à ' #') → logprob: -6.147762298583984
    5. '               ' → logprob: -8.397762298583984
    6. '                       ' → logprob: -8.522762298583984
    7. ' dp' → logprob: -9.522762298583984
    8. '``' → logprob: -10.147762298583984
    9. '                           ' → logprob: -11.397762298583984
    10. '           ' → logprob: -11.397762298583984

Token 872: ' O' (ID: 532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007111206650733948
    2. ' dp' → logprob: -7.500710964202881
    3. '                   ' → logprob: -8.875711441040039
    4. '               ' → logprob: -11.750711441040039
    5. '```' → logprob: -11.875711441040039
    6. '#' → logprob: -13.375711441040039
    7. '           ' → logprob: -14.625711441040039
    8. '	dp' → logprob: -14.750711441040039
    9. '(dp' → logprob: -15.375711441040039
    10. '``' → logprob: -15.875711441040039

Token 873: 'uv' (ID: 6992)
  Prédit: 'pen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pen' → logprob: -0.02824879251420498
    2. 'p' → logprob: -4.0282487869262695
    3. 'n' → logprob: -6.1532487869262695
    4. 'pens' → logprob: -6.1532487869262695
    5. 'dp' → logprob: -6.5282487869262695
    6. '[i' → logprob: -6.9032487869262695
    7. '```' → logprob: -7.5282487869262695
    8. '[' → logprob: -7.7782487869262695
    9. '                               ' → logprob: -7.9032487869262695
    10. 'pt' → logprob: -7.9032487869262695

Token 874: 'rir' (ID: 16883)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7060464024543762
    2. 'dp' → logprob: -0.7060464024543762
    3. 'max' → logprob: -4.5810465812683105
    4. 'pt' → logprob: -7.0810465812683105
    5. '```' → logprob: -7.7060465812683105
    6. 'pen' → logprob: -8.456046104431152
    7. 'er' → logprob: -9.331046104431152
    8. '                   ' → logprob: -9.331046104431152
    9. '   ' → logprob: -9.581046104431152
    10. '``' → logprob: -9.956046104431152

Token 875: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2759639620780945
    2. '(i' → logprob: -1.6509640216827393
    3. '[i' → logprob: -3.4009640216827393
    4. '(dp' → logprob: -4.65096378326416
    5. ' dp' → logprob: -5.65096378326416
    6. '(' → logprob: -6.77596378326416
    7. '   ' → logprob: -7.27596378326416
    8. ' (' → logprob: -8.15096378326416
    9. 'a' → logprob: -8.77596378326416
    10. '_dp' → logprob: -9.02596378326416

Token 876: ' nouveau' (ID: 23184)
  Prédit: 'nou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nou' → logprob: -0.04748334735631943
    2. ' nouveau' → logprob: -3.422483444213867
    3. 'new' → logprob: -4.422483444213867
    4. ' new' → logprob: -7.172483444213867
    5. 'n' → logprob: -8.172483444213867
    6. 'j' → logprob: -8.297483444213867
    7. 'i' → logprob: -9.047483444213867
    8. '   ' → logprob: -9.547483444213867
    9. 'nuevo' → logprob: -9.672483444213867
    10. '1' → logprob: -9.797483444213867

Token 877: ' groupe' (ID: 29494)
  Prédit: ' groupe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.2796826660633087
    2. '[' → logprob: -2.5296826362609863
    3. '[j' → logprob: -2.5296826362609863
    4. 'group' → logprob: -2.6546826362609863
    5. 'g' → logprob: -4.529682636260986
    6. '
' → logprob: -7.029682636260986
    7. ' group' → logprob: -7.279682636260986
    8. '_group' → logprob: -8.029683113098145
    9. 'j' → logprob: -8.029683113098145
    10. '[i' → logprob: -8.279683113098145

Token 878: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2518909275531769
    2. 'dp' → logprob: -2.1268908977508545
    3. '(i' → logprob: -2.7518908977508545
    4. '                   ' → logprob: -3.3768908977508545
    5. '   ' → logprob: -6.126891136169434
    6. '               ' → logprob: -6.751891136169434
    7. '           ' → logprob: -7.001891136169434
    8. '```' → logprob: -7.251891136169434
    9. '(dp' → logprob: -8.751891136169434
    10. '                       ' → logprob: -9.251891136169434

Token 879: '                   ' (ID: 699)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0627908781170845
    2. '                   ' → logprob: -2.812790870666504
    3. '```' → logprob: -8.437790870666504
    4. '(dp' → logprob: -8.687790870666504
    5. ' dp' → logprob: -8.812790870666504
    6. '[i' → logprob: -8.937790870666504
    7. '               ' → logprob: -9.562790870666504
    8. '   ' → logprob: -10.562790870666504
    9. '[' → logprob: -10.562790870666504
    10. '_dp' → logprob: -11.187790870666504

Token 880: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.686778503237292e-05
    2. ' dp' → logprob: -9.250097274780273
    3. '                   ' → logprob: -14.625097274780273
    4. '   ' → logprob: -16.500097274780273
    5. '           ' → logprob: -17.000097274780273
    6. '(dp' → logprob: -17.500097274780273
    7. '	dp' → logprob: -17.500097274780273
    8. '               ' → logprob: -18.000097274780273
    9. '                       ' → logprob: -18.750097274780273
    10. '                           ' → logprob: -19.125097274780273

Token 881: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.625000953674316
    3. '```' → logprob: -16.125
    4. '   ' → logprob: -16.5
    5. '[' → logprob: -16.625
    6. ' [' → logprob: -17.625
    7. '(i' → logprob: -17.875
    8. '[I' → logprob: -18.875
    9. '``' → logprob: -19.75
    10. '[j' → logprob: -19.875

Token 882: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002835040504578501
    2. '[' → logprob: -8.500283241271973
    3. '```' → logprob: -10.125283241271973
    4. '[i' → logprob: -10.375283241271973
    5. '+[' → logprob: -13.000283241271973
    6. 'i' → logprob: -13.500283241271973
    7. '   ' → logprob: -13.500283241271973
    8. ' +' → logprob: -14.000283241271973
    9. '+i' → logprob: -14.125283241271973
    10. '][' → logprob: -14.750283241271973

Token 883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '+' → logprob: -12.37501335144043
    3. ' ' → logprob: -12.37501335144043
    4. '2' → logprob: -12.50001335144043
    5. '```' → logprob: -14.75001335144043
    6. '   ' → logprob: -15.00001335144043
    7. 'next' → logprob: -17.12501335144043
    8. '[' → logprob: -17.25001335144043
    9. '  ' → logprob: -17.62501335144043
    10. '
' → logprob: -17.75001335144043

Token 884: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3881668448448181
    2. '][' → logprob: -1.138166904449463
    3. '           ' → logprob: -7.013166904449463
    4. '[j' → logprob: -8.763166427612305
    5. '}[' → logprob: -10.013166427612305
    6. '```' → logprob: -10.013166427612305
    7. '   ' → logprob: -10.263166427612305
    8. '       ' → logprob: -10.513166427612305
    9. '[i' → logprob: -10.638166427612305
    10. '               ' → logprob: -11.138166427612305

Token 885: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -12.125009536743164
    3. '   ' → logprob: -12.750009536743164
    4. '0' → logprob: -15.125009536743164
    5. '1' → logprob: -15.375009536743164
    6. '  ' → logprob: -16.000009536743164
    7. '```' → logprob: -16.125009536743164
    8. '    ' → logprob: -16.812509536743164
    9. '     ' → logprob: -16.937509536743164
    10. '       ' → logprob: -17.437509536743164

Token 886: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0076843504793941975
    2. '[' → logprob: -4.882684230804443
    3. ' ][' → logprob: -10.632684707641602
    4. '           ' → logprob: -11.132684707641602
    5. ']' → logprob: -11.257684707641602
    6. '   ' → logprob: -12.007684707641602
    7. '```' → logprob: -12.007684707641602
    8. ')[' → logprob: -13.007684707641602
    9. '}[' → logprob: -13.007684707641602
    10. ''][' → logprob: -13.757684707641602

Token 887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001211783615872264
    2. 'max' → logprob: -6.751211643218994
    3. ' ' → logprob: -11.001212120056152
    4. '1' → logprob: -11.251212120056152
    5. ' max' → logprob: -12.501212120056152
    6. '   ' → logprob: -13.251212120056152
    7. '(max' → logprob: -13.376212120056152
    8. '(' → logprob: -13.876212120056152
    9. '```' → logprob: -13.876212120056152
    10. '-' → logprob: -14.501212120056152

Token 888: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14203627407550812
    2. '=' → logprob: -2.142036199569702
    3. ' =' → logprob: -4.392036437988281
    4. ')' → logprob: -6.267036437988281
    5. ']=' → logprob: -7.267036437988281
    6. ' ]' → logprob: -11.517036437988281
    7. '=max' → logprob: -12.892036437988281
    8. 'max' → logprob: -13.142036437988281
    9. ')=' → logprob: -13.142036437988281
    10. '   ' → logprob: -13.267036437988281

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=max' → logprob: -15.139163970947266
    4. 'max' → logprob: -16.764163970947266
    5. ')' → logprob: -17.764163970947266
    6. '   ' → logprob: -19.014163970947266
    7. ')=' → logprob: -19.889163970947266
    8. '```' → logprob: -20.264163970947266
    9. ']' → logprob: -20.389163970947266
    10. ']=' → logprob: -20.389163970947266

Token 890: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02324547804892063
    2. ' max' → logprob: -3.7732455730438232
    3. '(max' → logprob: -17.398244857788086
    4. '[max' → logprob: -19.273244857788086
    5. '=max' → logprob: -19.898244857788086
    6. '	max' → logprob: -21.273244857788086
    7. '_max' → logprob: -21.773244857788086
    8. ' ' → logprob: -22.148244857788086
    9. ',max' → logprob: -22.273244857788086
    10. 'min' → logprob: -22.523244857788086

Token 891: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9361264946837764e-07
    2. 'dp' → logprob: -16.5
    3. '(max' → logprob: -17.125
    4. '(' → logprob: -17.5
    5. 'max' → logprob: -20.0
    6. ' (' → logprob: -20.125
    7. '	dp' → logprob: -21.0
    8. '(df' → logprob: -21.5
    9. ' dp' → logprob: -21.625
    10. '(
' → logprob: -22.25

Token 892: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[j' → logprob: -11.875008583068848
    3. 'dp' → logprob: -13.875008583068848
    4. '(i' → logprob: -16.00000762939453
    5. '[' → logprob: -16.75000762939453
    6. '(dp' → logprob: -17.75000762939453
    7. '```' → logprob: -18.12500762939453
    8. 'i' → logprob: -19.00000762939453
    9. '[
' → logprob: -19.25000762939453
    10. '_dp' → logprob: -20.00000762939453

Token 893: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00178429891820997
    2. '][' → logprob: -6.501784324645996
    3. '[j' → logprob: -8.251784324645996
    4. '[' → logprob: -11.001784324645996
    5. '   ' → logprob: -13.876784324645996
    6. '}[' → logprob: -14.376784324645996
    7. '```' → logprob: -14.751784324645996
    8. '           ' → logprob: -14.751784324645996
    9. '       ' → logprob: -15.126784324645996
    10. '[[' → logprob: -15.251784324645996

Token 894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.25000286102295
    4. '  ' → logprob: -17.125003814697266
    5. '0' → logprob: -18.000003814697266
    6. '
' → logprob: -18.125003814697266
    7. '    ' → logprob: -18.250003814697266
    8. '     ' → logprob: -18.500003814697266
    9. '```' → logprob: -18.875003814697266
    10. '[' → logprob: -19.062503814697266

Token 895: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4742562472820282
    2. '][' → logprob: -0.9742562770843506
    3. ' ][' → logprob: -10.09925651550293
    4. ' [' → logprob: -10.22425651550293
    5. '   ' → logprob: -10.34925651550293
    6. '0' → logprob: -10.84925651550293
    7. ']' → logprob: -11.22425651550293
    8. '1' → logprob: -11.59925651550293
    9. '```' → logprob: -12.09925651550293
    10. '[j' → logprob: -12.47425651550293

Token 896: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023226479243021458
    2. '1' → logprob: -8.375232696533203
    3. ' ' → logprob: -13.625232696533203
    4. '   ' → logprob: -15.125232696533203
    5. '۰' → logprob: -16.250232696533203
    6. '```' → logprob: -16.875232696533203
    7. '０' → logprob: -17.812732696533203
    8. '  ' → logprob: -17.875232696533203
    9. '    ' → logprob: -18.000232696533203
    10. 'k' → logprob: -18.187732696533203

Token 897: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.040457421680912e-05
    2. ' ,' → logprob: -9.750070571899414
    3. '+' → logprob: -12.125070571899414
    4. '],' → logprob: -12.375070571899414
    5. ',a' → logprob: -14.625070571899414
    6. '+,' → logprob: -14.750070571899414
    7. ']+' → logprob: -14.875070571899414
    8. 'a' → logprob: -15.125070571899414
    9. '   ' → logprob: -15.375070571899414
    10. 'dp' → logprob: -15.875070571899414

Token 898: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3868730664253235
    2. 'dp' → logprob: -1.1368730068206787
    3. '(dp' → logprob: -13.511873245239258
    4. '	dp' → logprob: -15.011873245239258
    5. '_dp' → logprob: -15.261873245239258
    6. '.dp' → logprob: -16.761873245239258
    7. ' ' → logprob: -19.511873245239258
    8. 'd' → logprob: -19.636873245239258
    9. 'DP' → logprob: -19.636873245239258
    10. '```' → logprob: -19.886873245239258

Token 899: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -16.125
    3. '   ' → logprob: -16.75
    4. '```' → logprob: -17.875
    5. ' [' → logprob: -18.625
    6. '[' → logprob: -19.0
    7. '[
' → logprob: -20.5
    8. '``' → logprob: -20.75
    9. '           ' → logprob: -21.0
    10. '[I' → logprob: -21.375

Token 900: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8789383830153383e-05
    2. '[' → logprob: -11.375019073486328
    3. ' +' → logprob: -12.500019073486328
    4. '][' → logprob: -13.125019073486328
    5. ']+' → logprob: -14.500019073486328
    6. '   ' → logprob: -15.000019073486328
    7. '+[' → logprob: -15.125019073486328
    8. '```' → logprob: -15.750019073486328
    9. '[i' → logprob: -16.000019073486328
    10. '＋' → logprob: -16.750019073486328

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6940693855285645
    2. '2' → logprob: -0.6940693855285645
    3. '+' → logprob: -7.0690693855285645
    4. 'i' → logprob: -10.069068908691406
    5. ' ' → logprob: -11.694068908691406
    6. '   ' → logprob: -11.819068908691406
    7. '(' → logprob: -12.569068908691406
    8. '(i' → logprob: -12.819068908691406
    9. '```' → logprob: -13.069068908691406
    10. 'n' → logprob: -14.444068908691406

Token 902: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5249611735343933
    2. '[i' → logprob: -0.8999611735343933
    3. '+' → logprob: -6.899960994720459
    4. '[' → logprob: -7.649960994720459
    5. '   ' → logprob: -8.899961471557617
    6. 'i' → logprob: -9.149961471557617
    7. ' ][' → logprob: -10.024961471557617
    8. ' [' → logprob: -11.149961471557617
    9. '```' → logprob: -11.399961471557617
    10. '+i' → logprob: -11.899961471557617

Token 903: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -13.50000286102295
    3. 'i' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.50000286102295
    5. '
' → logprob: -16.125001907348633
    6. '+' → logprob: -16.500001907348633
    7. ' ' → logprob: -16.750001907348633
    8. '```' → logprob: -17.375001907348633
    9. '(' → logprob: -18.375001907348633
    10. '(i' → logprob: -18.500001907348633

Token 904: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009563630446791649
    2. '+' → logprob: -7.6259565353393555
    3. '[' → logprob: -8.125956535339355
    4. '[i' → logprob: -9.125956535339355
    5. ' ][' → logprob: -10.250956535339355
    6. '   ' → logprob: -11.500956535339355
    7. ']' → logprob: -12.000956535339355
    8. '1' → logprob: -12.625956535339355
    9. '```' → logprob: -12.750956535339355
    10. '[j' → logprob: -12.750956535339355

Token 905: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. '1' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. '۰' → logprob: -17.750001907348633
    7. '  ' → logprob: -18.250001907348633
    8. '[' → logprob: -18.375001907348633
    9. '‌' → logprob: -18.937501907348633
    10. '][' → logprob: -19.250001907348633

Token 906: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037987730465829372
    2. '])' → logprob: -5.628798961639404
    3. ')
' → logprob: -8.628798484802246
    4. '                   ' → logprob: -12.378798484802246
    5. '})' → logprob: -12.503798484802246
    6. ' )' → logprob: -13.253798484802246
    7. '))' → logprob: -13.253798484802246
    8. ')])' → logprob: -13.253798484802246
    9. ')]' → logprob: -13.503798484802246
    10. '）' → logprob: -13.753798484802246

Token 907: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0479515939950943
    2. 'else' → logprob: -3.5479516983032227
    3. '                   ' → logprob: -4.422951698303223
    4. ' else' → logprob: -5.297951698303223
    5. '```' → logprob: -7.297951698303223
    6. '                       ' → logprob: -8.422951698303223
    7. 'elif' → logprob: -9.922951698303223
    8. '           ' → logprob: -10.172951698303223
    9. '                               ' → logprob: -11.047951698303223
    10. '       ' → logprob: -11.422951698303223

Token 908: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07980816066265106
    2. '               ' → logprob: -2.579808235168457
    3. 'elif' → logprob: -7.579808235168457
    4. '                   ' → logprob: -8.204808235168457
    5. ' else' → logprob: -9.454808235168457
    6. '```' → logprob: -9.954808235168457
    7. '           ' → logprob: -12.454808235168457
    8. '   ' → logprob: -13.204808235168457
    9. '                       ' → logprob: -13.954808235168457
    10. '       ' → logprob: -14.579808235168457

Token 909: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16676051914691925
    2. ':
' → logprob: -1.9167605638504028
    3. '                   ' → logprob: -5.791760444641113
    4. ' :' → logprob: -6.416760444641113
    5. ' :
' → logprob: -7.416760444641113
    6. '               ' → logprob: -8.166760444641113
    7. '   ' → logprob: -8.416760444641113
    8. '<|end|>' → logprob: -8.416760444641113
    9. '           ' → logprob: -9.166760444641113
    10. '                       ' → logprob: -9.541760444641113

Token 910: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002010837197303772
    2. '               ' → logprob: -6.502010822296143
    3. '                       ' → logprob: -8.5020112991333
    4. '           ' → logprob: -9.2520112991333
    5. '   ' → logprob: -9.7520112991333
    6. '#' → logprob: -9.8770112991333
    7. '                           ' → logprob: -10.1270112991333
    8. '                               ' → logprob: -11.1270112991333
    9. '                    ' → logprob: -11.2520112991333
    10. '       ' → logprob: -12.0020112991333

Token 911: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.27593085169792175
    2. '                   ' → logprob: -1.7759308815002441
    3. 'dp' → logprob: -2.775930881500244
    4. '               ' → logprob: -5.025930881500244
    5. ' #' → logprob: -6.150930881500244
    6. ' dp' → logprob: -8.025930404663086
    7. '           ' → logprob: -8.775930404663086
    8. '   ' → logprob: -8.900930404663086
    9. '                       ' → logprob: -9.275930404663086
    10. '```' → logprob: -9.900930404663086

Token 912: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6051383018493652
    2. 'dp' → logprob: -0.8551383018493652
    3. ' #' → logprob: -4.355138301849365
    4. '                   ' → logprob: -4.730138301849365
    5. ' dp' → logprob: -4.980138301849365
    6. '               ' → logprob: -9.230138778686523
    7. '   ' → logprob: -9.730138778686523
    8. ' ' → logprob: -10.605138778686523
    9. '                    ' → logprob: -11.855138778686523
    10. '                    
' → logprob: -12.230138778686523

Token 913: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45095351338386536
    2. '                   ' → logprob: -1.325953483581543
    3. '0' → logprob: -2.575953483581543
    4. ' i' → logprob: -5.325953483581543
    5. '               ' → logprob: -5.450953483581543
    6. '[' → logprob: -5.825953483581543
    7. '[i' → logprob: -6.075953483581543
    8. '                    ' → logprob: -6.700953483581543
    9. ' j' → logprob: -6.825953483581543
    10. ' dp' → logprob: -6.950953483581543

Token 914: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021794079802930355
    2. '                       ' → logprob: -7.2521796226501465
    3. 'dp' → logprob: -7.8771796226501465
    4. '               ' → logprob: -8.002179145812988
    5. ' dp' → logprob: -8.377179145812988
    6. '#' → logprob: -8.627179145812988
    7. '   ' → logprob: -9.627179145812988
    8. '                    ' → logprob: -10.127179145812988
    9. ' #' → logprob: -10.127179145812988
    10. ':
' → logprob: -10.127179145812988

Token 915: 'j' (ID: 73)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22486744821071625
    2. '                   ' → logprob: -2.224867343902588
    3. 'dp' → logprob: -3.224867343902588
    4. ' #' → logprob: -3.474867343902588
    5. '0' → logprob: -4.349867343902588
    6. ' dp' → logprob: -5.724867343902588
    7. 'j' → logprob: -5.974867343902588
    8. '               ' → logprob: -7.224867343902588
    9. ' ' → logprob: -7.349867343902588
    10. ')' → logprob: -7.474867343902588

Token 916: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.143539160490036
    2. '==' → logprob: -2.0185391902923584
    3. ')' → logprob: -7.393538951873779
    4. '=' → logprob: -9.768539428710938
    5. '0' → logprob: -10.143539428710938
    6. ']==' → logprob: -10.268539428710938
    7. ']' → logprob: -10.393539428710938
    8. ')==' → logprob: -10.393539428710938
    9. '[' → logprob: -11.393539428710938
    10. ' )' → logprob: -11.518539428710938

Token 917: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606151048094034
    2. ' ' → logprob: -4.882606029510498
    3. ')' → logprob: -16.882606506347656
    4. '   ' → logprob: -17.882606506347656
    5. '1' → logprob: -18.820106506347656
    6. '```' → logprob: -18.820106506347656
    7. '=' → logprob: -19.195106506347656
    8. '  ' → logprob: -19.320106506347656
    9. '۰' → logprob: -19.445106506347656
    10. ' )' → logprob: -19.445106506347656

Token 918: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.750045776367188
    4. ')' → logprob: -20.500045776367188
    5. '  ' → logprob: -21.375045776367188
    6. '```' → logprob: -21.375045776367188
    7. '۰' → logprob: -22.125045776367188
    8. '1' → logprob: -22.625045776367188
    9. '    ' → logprob: -22.750045776367188
    10. ' ' → logprob: -22.875045776367188

Token 919: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48789456486701965
    2. '                   ' → logprob: -1.4878945350646973
    3. ')' → logprob: -2.2378945350646973
    4. ')
' → logprob: -2.9878945350646973
    5. '):' → logprob: -6.237894535064697
    6. '                       ' → logprob: -7.362894535064697
    7. '               ' → logprob: -8.487895011901855
    8. ' ):
' → logprob: -9.237895011901855
    9. '                    ' → logprob: -10.112895011901855
    10. '   ' → logprob: -10.112895011901855

Token 920: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02440393716096878
    2. 'dp' → logprob: -3.8994040489196777
    3. ' dp' → logprob: -6.399404048919678
    4. '                       ' → logprob: -6.524404048919678
    5. '#' → logprob: -8.02440357208252
    6. '               ' → logprob: -8.77440357208252
    7. '```' → logprob: -8.89940357208252
    8. ' #' → logprob: -10.64940357208252
    9. '                    ' → logprob: -10.64940357208252
    10. '                    
' → logprob: -11.27440357208252

Token 921: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21475602686405182
    2. '#' (adapté à ' #') → logprob: -1.7147560119628906
    3. ' dp' → logprob: -4.964756011962891
    4. '                   ' → logprob: -5.714756011962891
    5. ' #' → logprob: -5.839756011962891
    6. '               ' → logprob: -10.08975601196289
    7. 'if' → logprob: -11.08975601196289
    8. '   ' → logprob: -12.96475601196289
    9. '
' → logprob: -13.46475601196289
    10. '                       ' → logprob: -13.71475601196289

Token 922: ' Cl' (ID: 2190)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4804498255252838
    2. 'dp' → logprob: -0.9804497957229614
    3. ' #' → logprob: -5.480449676513672
    4. ' dp' → logprob: -6.730449676513672
    5. '                   ' → logprob: -6.980449676513672
    6. '               ' → logprob: -11.355449676513672
    7. '
' → logprob: -11.480449676513672
    8. '                    
' → logprob: -11.980449676513672
    9. '```' → logprob: -12.230449676513672
    10. '                    ' → logprob: -12.605449676513672

Token 923: 'ore' (ID: 510)
  Prédit: 'ore'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.046391092240810394
    2. 'ose' → logprob: -3.671391010284424
    3. 'oser' → logprob: -4.671391010284424
    4. 'o' → logprob: -5.046391010284424
    5. 'orer' → logprob: -6.421391010284424
    6. '   ' → logprob: -7.171391010284424
    7. '```' → logprob: -7.796391010284424
    8. 'os' → logprob: -8.171391487121582
    9. 'ô' → logprob: -8.671391487121582
    10. 'osing' → logprob: -8.796391487121582

Token 924: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.0124973058700562
    2. '                   ' → logprob: -1.1374973058700562
    3. 'dp' → logprob: -1.5124973058700562
    4. '(dp' → logprob: -2.7624974250793457
    5. ' le' → logprob: -4.137497425079346
    6. '               ' → logprob: -4.887497425079346
    7. '                    ' → logprob: -5.637497425079346
    8. '[' → logprob: -6.762497425079346
    9. ' les' → logprob: -7.387497425079346
    10. 'the' → logprob: -7.512497425079346

Token 925: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1168471947312355
    2. ' segment' → logprob: -2.241847276687622
    3. 'dp' → logprob: -5.616847038269043
    4. ' dp' → logprob: -8.366847038269043
    5. '0' → logprob: -9.866847038269043
    6. 'seg' → logprob: -10.491847038269043
    7. '[i' → logprob: -11.741847038269043
    8. '[' → logprob: -11.741847038269043
    9. '```' → logprob: -11.866847038269043
    10. ' ' → logprob: -11.991847038269043

Token 926: ' courant' (ID: 74694)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0510632991790771
    2. ' courant' → logprob: -1.3010632991790771
    3. '               ' → logprob: -1.6760632991790771
    4. 'dp' → logprob: -2.426063299179077
    5. ' dp' → logprob: -3.551063299179077
    6. 'cour' → logprob: -3.551063299179077
    7. '                    
' → logprob: -4.301063537597656
    8. '                 ' → logprob: -4.551063537597656
    9. 'curr' → logprob: -5.676063537597656
    10. ' ' → logprob: -6.176063537597656

Token 927: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13763150572776794
    2. 'dp' → logprob: -2.137631416320801
    3. '               ' → logprob: -5.012631416320801
    4. ' dp' → logprob: -6.387631416320801
    5. '```' → logprob: -7.137631416320801
    6. '(dp' → logprob: -7.512631416320801
    7. '                       ' → logprob: -7.887631416320801
    8. '                    
' → logprob: -9.0126314163208
    9. '
' → logprob: -9.1376314163208
    10. '\n' → logprob: -9.8876314163208

Token 928: 'ici' (ID: 3757)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018409907817840576
    2. ' dp' → logprob: -4.018409729003906
    3. '                   ' → logprob: -8.393409729003906
    4. 'if' → logprob: -10.893409729003906
    5. '               ' → logprob: -12.643409729003906
    6. ')' → logprob: -13.018409729003906
    7. '0' → logprob: -13.393409729003906
    8. '                       ' → logprob: -13.643409729003906
    9. '(dp' → logprob: -13.643409729003906
    10. '#' → logprob: -13.768409729003906

Token 929: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8095991015434265
    2. 'dp' → logprob: -1.3095991611480713
    3. '                   ' → logprob: -2.0595991611480713
    4. ' dp' → logprob: -2.9345991611480713
    5. '               ' → logprob: -3.0595991611480713
    6. ' )' → logprob: -4.559598922729492
    7. ')
' → logprob: -4.809598922729492
    8. '0' → logprob: -4.809598922729492
    9. ',' → logprob: -5.059598922729492
    10. 'if' → logprob: -5.684598922729492

Token 930: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8653200268745422
    2. 'n' → logprob: -0.9903200268745422
    3. ' =' → logprob: -2.4903199672698975
    4. 'dp' → logprob: -3.1153199672698975
    5. '=' → logprob: -3.3653199672698975
    6. '```' → logprob: -4.490320205688477
    7. '   ' → logprob: -4.865320205688477
    8. ' ne' → logprob: -5.615320205688477
    9. 's' → logprob: -5.740320205688477
    10. ' continue' → logprob: -5.865320205688477

Token 931: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6446444988250732
    2. '=' → logprob: -2.1446444988250732
    3. 'est' → logprob: -2.2696444988250732
    4. 'ex' → logprob: -2.6446444988250732
    5. ' =' → logprob: -3.0196444988250732
    6. '```' → logprob: -3.6446444988250732
    7. ''est' → logprob: -4.019644737243652
    8. ' a' → logprob: -4.394644737243652
    9. 'e' → logprob: -4.894644737243652
    10. '   ' → logprob: -5.144644737243652

Token 932: ' d' (ID: 272)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.08078176528215408
    2. ' pas' → logprob: -2.7057816982269287
    3. 'sense' → logprob: -5.955781936645508
    4. '#' → logprob: -6.580781936645508
    5. ' ' → logprob: -6.955781936645508
    6. ' aucun' → logprob: -7.330781936645508
    7. ' sens' → logprob: -7.455781936645508
    8. 'a' → logprob: -7.455781936645508
    9. 'pass' → logprob: -7.580781936645508
    10. 'meaning' → logprob: -7.705781936645508

Token 933: ''effet' (ID: 197975)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.11473720520734787
    2. ' sens' → logprob: -2.9897372722625732
    3. '```' → logprob: -4.364737033843994
    4. 'e' → logprob: -4.739737033843994
    5. 'sense' → logprob: -4.864737033843994
    6. 'eff' → logprob: -4.989737033843994
    7. '   ' → logprob: -5.239737033843994
    8. 'objet' → logprob: -5.489737033843994
    9. 'es' → logprob: -6.489737033843994
    10. 'et' → logprob: -7.114737033843994

Token 934: ' que' (ID: 661)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.23665323853492737
    2. ')' → logprob: -1.736653208732605
    3. '                   ' → logprob: -4.2366533279418945
    4. '               ' → logprob: -4.8616533279418945
    5. ' )
' → logprob: -5.6116533279418945
    6. 'dp' → logprob: -5.6116533279418945
    7. ',' → logprob: -6.2366533279418945
    8. ' )' → logprob: -7.3616533279418945
    9. ')
' → logprob: -7.7366533279418945
    10. '\n' → logprob: -8.611653327941895

Token 935: ' pour' (ID: 1930)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4454200267791748
    2. 'pass' → logprob: -1.9454200267791748
    3. ' pas' → logprob: -2.070420026779175
    4. 'dp' → logprob: -3.445420026779175
    5. ')' → logprob: -4.195420265197754
    6. ' )' → logprob: -4.195420265197754
    7. 'sur' → logprob: -5.195420265197754
    8. ' dp' → logprob: -5.320420265197754
    9. 'pour' → logprob: -5.570420265197754
    10. ' pass' → logprob: -5.945420265197754

Token 936: ' case' (ID: 1890)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3226050138473511
    2. 'dp' → logprob: -2.4476051330566406
    3. ' k' → logprob: -2.6976051330566406
    4. '1' → logprob: -2.6976051330566406
    5. ' dp' → logprob: -3.5726051330566406
    6. '0' → logprob: -4.072605133056641
    7. ' ' → logprob: -5.322605133056641
    8. 'l' → logprob: -6.447605133056641
    9. 'j' → logprob: -6.697605133056641
    10. 'i' → logprob: -7.572605133056641

Token 937: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46824830770492554
    2. ' ' → logprob: -1.2182483673095703
    3. ' j' → logprob: -3.2182483673095703
    4. ' i' → logprob: -4.46824836730957
    5. 'j' → logprob: -4.84324836730957
    6. '[' → logprob: -5.09324836730957
    7. 'i' → logprob: -5.21824836730957
    8. 's' → logprob: -5.71824836730957
    9. ' [' → logprob: -7.34324836730957
    10. ' s' → logprob: -7.46824836730957

Token 938: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23306621611118317
    2. 'i' → logprob: -1.858066201210022
    3. 'j' → logprob: -4.358066082000732
    4. ' i' → logprob: -4.358066082000732
    5. ' ' → logprob: -4.608066082000732
    6. '1' → logprob: -4.858066082000732
    7. 'k' → logprob: -6.108066082000732
    8. '[i' → logprob: -6.358066082000732
    9. '[' → logprob: -6.608066082000732
    10. ' j' → logprob: -6.608066082000732

Token 939: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.344749391078949
    2. '                   ' → logprob: -1.9697494506835938
    3. ')' → logprob: -2.2197494506835938
    4. '               ' → logprob: -3.3447494506835938
    5. ' )
' → logprob: -5.219749450683594
    6. ' )' → logprob: -7.219749450683594
    7. '                       ' → logprob: -7.719749450683594
    8. '])
' → logprob: -7.719749450683594
    9. '):
' → logprob: -8.219749450683594
    10. '```' → logprob: -8.469749450683594

Token 940: '0' (ID: 15)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8101977705955505
    2. ')' → logprob: -1.0601978302001953
    3. ' dp' → logprob: -2.8101978302001953
    4. ' )' → logprob: -3.0601978302001953
    5. 'dp' → logprob: -3.5601978302001953
    6. '               ' → logprob: -3.9351978302001953
    7. ')
' → logprob: -3.9351978302001953
    8. ' )
' → logprob: -4.060197830200195
    9. '```' → logprob: -4.935197830200195
    10. '                       ' → logprob: -6.310197830200195

Token 941: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7221190333366394
    2. ')
' → logprob: -0.7221190333366394
    3. '                   ' → logprob: -3.722119092941284
    4. '               ' → logprob: -5.722118854522705
    5. ' )
' → logprob: -8.097119331359863
    6. ')
' → logprob: -8.347119331359863
    7. ' )' → logprob: -8.722119331359863
    8. '):
' → logprob: -8.972119331359863
    9. '                       ' → logprob: -9.847119331359863
    10. '```' → logprob: -10.222119331359863

Token 942: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039230400579981506
    2. ' ' → logprob: -8.750391960144043
    3. '1' → logprob: -9.125391960144043
    4. '```' → logprob: -9.125391960144043
    5. ')' → logprob: -12.500391960144043
    6. '])' → logprob: -12.750391960144043
    7. '                   ' → logprob: -13.750391960144043
    8. '   ' → logprob: -13.750391960144043
    9. '
' → logprob: -14.000391960144043
    10. ']' → logprob: -14.125391960144043

Token 943: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47705695033073425
    2. ')' → logprob: -1.1020569801330566
    3. '                   ' → logprob: -3.6020569801330566
    4. '               ' → logprob: -3.9770569801330566
    5. ')
' → logprob: -8.352056503295898
    6. ' )
' → logprob: -8.352056503295898
    7. '):
' → logprob: -8.727056503295898
    8. '                       ' → logprob: -9.352056503295898
    9. ' )' → logprob: -9.352056503295898
    10. '```' → logprob: -9.602056503295898

Token 944: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02942829020321369
    2. 'dp' → logprob: -3.779428243637085
    3. ' dp' → logprob: -5.529428482055664
    4. '               ' → logprob: -6.279428482055664
    5. '                       ' → logprob: -8.779428482055664
    6. '   ' → logprob: -9.779428482055664
    7. '```' → logprob: -10.404428482055664
    8. '           ' → logprob: -11.279428482055664
    9. '(dp' → logprob: -11.279428482055664
    10. '                  ' → logprob: -11.654428482055664

Token 945: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.278770387172699
    2. ' dp' → logprob: -1.5287704467773438
    3. '                   ' → logprob: -3.6537704467773438
    4. '               ' → logprob: -7.903770446777344
    5. '                       ' → logprob: -8.778770446777344
    6. '           ' → logprob: -11.278770446777344
    7. '   ' → logprob: -11.653770446777344
    8. '                    ' → logprob: -11.778770446777344
    9. '```' → logprob: -12.153770446777344
    10. '                           ' → logprob: -12.278770446777344

Token 946: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.000003814697266
    3. '```' → logprob: -14.250003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '   ' → logprob: -15.875003814697266
    6. 'i' → logprob: -15.875003814697266
    7. '[I' → logprob: -16.500003814697266
    8. '
' → logprob: -18.625003814697266
    9. ' ' → logprob: -18.750003814697266
    10. '``' → logprob: -18.750003814697266

Token 947: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14308498799800873
    2. '][' → logprob: -2.01808500289917
    3. '[' → logprob: -8.643084526062012
    4. ' +' → logprob: -8.893084526062012
    5. ' ][' → logprob: -10.143084526062012
    6. '   ' → logprob: -11.143084526062012
    7. '```' → logprob: -11.268084526062012
    8. ']' → logprob: -11.268084526062012
    9. '[i' → logprob: -12.268084526062012
    10. '+i' → logprob: -12.643084526062012

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. 'i' → logprob: -11.500027656555176
    3. '+' → logprob: -11.625027656555176
    4. '0' → logprob: -12.750027656555176
    5. ' ' → logprob: -12.875027656555176
    6. '][' → logprob: -13.000027656555176
    7. '[' → logprob: -15.250027656555176
    8. '   ' → logprob: -15.250027656555176
    9. '```' → logprob: -16.375028610229492
    10. '[i' → logprob: -16.625028610229492

Token 949: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22550272941589355
    2. '[' → logprob: -1.6005027294158936
    3. ' ][' → logprob: -10.850502967834473
    4. '}[' → logprob: -11.100502967834473
    5. '           ' → logprob: -11.225502967834473
    6. ' [' → logprob: -11.350502967834473
    7. ']' → logprob: -11.725502967834473
    8. '                   ' → logprob: -12.725502967834473
    9. '   ' → logprob: -12.725502967834473
    10. '               ' → logprob: -12.975502967834473

Token 950: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01105170976370573
    2. 'j' → logprob: -4.511051654815674
    3. ' ' → logprob: -13.761052131652832
    4. ' j' → logprob: -13.761052131652832
    5. '
' → logprob: -14.261052131652832
    6. '   ' → logprob: -14.886052131652832
    7. '```' → logprob: -15.886052131652832
    8. '$j' → logprob: -16.386051177978516
    9. '[j' → logprob: -16.573551177978516
    10. '1' → logprob: -16.573551177978516

Token 951: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.24310302757658e-05
    2. '[' → logprob: -9.750072479248047
    3. ' ][' → logprob: -11.625072479248047
    4. ']' → logprob: -12.500072479248047
    5. '   ' → logprob: -14.500072479248047
    6. '           ' → logprob: -14.625072479248047
    7. ']][' → logprob: -16.500072479248047
    8. '       ' → logprob: -16.750072479248047
    9. '0' → logprob: -17.250072479248047
    10. ' ' → logprob: -17.375072479248047

Token 952: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. '1' → logprob: -10.875019073486328
    3. ' ' → logprob: -17.875019073486328
    4. '   ' → logprob: -18.500019073486328
    5. 'max' → logprob: -19.125019073486328
    6. '۰' → logprob: -19.250019073486328
    7. '```' → logprob: -20.187519073486328
    8. ']' → logprob: -20.625019073486328
    9. '[' → logprob: -20.812519073486328
    10. '
' → logprob: -20.937519073486328

Token 953: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3915141355246305e-05
    2. ']=' → logprob: -11.25002384185791
    3. ' ]' → logprob: -12.12502384185791
    4. ')' → logprob: -12.25002384185791
    5. '=' → logprob: -15.00002384185791
    6. '])' → logprob: -16.375024795532227
    7. '   ' → logprob: -16.625024795532227
    8. ')]' → logprob: -16.750024795532227
    9. ' =' → logprob: -16.875024795532227
    10. ']
' → logprob: -17.250024795532227

Token 954: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042180240154266
    2. ' =' → logprob: -3.2880420684814453
    3. '=max' → logprob: -14.538042068481445
    4. ']' → logprob: -16.413042068481445
    5. ')' → logprob: -16.538042068481445
    6. ']=' → logprob: -16.788042068481445
    7. 'max' → logprob: -17.538042068481445
    8. '   ' → logprob: -18.163042068481445
    9. ')=' → logprob: -18.288042068481445
    10. '>' → logprob: -18.288042068481445

Token 955: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02324547804892063
    2. ' max' → logprob: -3.7732455730438232
    3. '0' → logprob: -17.898244857788086
    4. 'dp' → logprob: -19.273244857788086
    5. '	max' → logprob: -19.523244857788086
    6. '(max' → logprob: -19.523244857788086
    7. '=max' → logprob: -19.773244857788086
    8. ' ' → logprob: -20.273244857788086
    9. '[max' → logprob: -21.398244857788086
    10. ' ' → logprob: -21.648244857788086

Token 956: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008619185537099838
    2. 'dp' → logprob: -4.75861930847168
    3. ' dp' → logprob: -12.50861930847168
    4. '(' → logprob: -14.25861930847168
    5. ' (' → logprob: -15.88361930847168
    6. '	dp' → logprob: -16.00861930847168
    7. '(
' → logprob: -17.75861930847168
    8. '_dp' → logprob: -18.13361930847168
    9. '   ' → logprob: -18.75861930847168
    10. '0' → logprob: -19.25861930847168

Token 957: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8193366486229934e-05
    2. 'i' → logprob: -11.125018119812012
    3. '[' → logprob: -12.875018119812012
    4. ' [' → logprob: -15.125018119812012
    5. '```' → logprob: -15.875018119812012
    6. ' i' → logprob: -16.625019073486328
    7. ' ' → logprob: -16.750019073486328
    8. '[
' → logprob: -16.750019073486328
    9. '(i' → logprob: -16.750019073486328
    10. '   ' → logprob: -17.000019073486328

Token 958: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07919292151927948
    2. '[i' → logprob: -2.579192876815796
    3. 'i' → logprob: -8.954193115234375
    4. '[' → logprob: -9.704193115234375
    5. ' ][' → logprob: -9.829193115234375
    6. '   ' → logprob: -11.079193115234375
    7. '+' → logprob: -11.579193115234375
    8. ']' → logprob: -11.579193115234375
    9. ' [' → logprob: -12.579193115234375
    10. '}[' → logprob: -12.829193115234375

Token 959: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12734180688858032
    2. 'i' → logprob: -2.1273417472839355
    3. 'j' → logprob: -7.8773417472839355
    4. ' i' → logprob: -10.627342224121094
    5. ' ' → logprob: -12.002342224121094
    6. '   ' → logprob: -13.502342224121094
    7. 'k' → logprob: -14.127342224121094
    8. '```' → logprob: -14.127342224121094
    9. '`' → logprob: -15.127342224121094
    10. '
' → logprob: -15.252342224121094

Token 960: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00044544681441038847
    2. ' ][' → logprob: -8.250445365905762
    3. '[' → logprob: -8.750445365905762
    4. ']' → logprob: -11.000445365905762
    5. '   ' → logprob: -12.375445365905762
    6. '0' → logprob: -13.625445365905762
    7. '1' → logprob: -14.125445365905762
    8. ' ' → logprob: -14.625445365905762
    9. '```' → logprob: -14.625445365905762
    10. ' [' → logprob: -14.875445365905762

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. '0' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.125181198120117
    4. ' ' → logprob: -14.750181198120117
    5. '
' → logprob: -15.375181198120117
    6. '```' → logprob: -16.500181198120117
    7. 'k' → logprob: -16.625181198120117
    8. '  ' → logprob: -17.562681198120117
    9. '[' → logprob: -17.687681198120117
    10. '`' → logprob: -17.750181198120117

Token 962: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03807982802391052
    2. ',' → logprob: -3.2880797386169434
    3. ' ],' → logprob: -11.038080215454102
    4. ' ,' → logprob: -11.538080215454102
    5. ']' → logprob: -11.663080215454102
    6. '),' → logprob: -13.288080215454102
    7. '],
' → logprob: -13.913080215454102
    8. '   ' → logprob: -15.288080215454102
    9. '           ' → logprob: -15.413080215454102
    10. '                   ' → logprob: -15.538080215454102

Token 963: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.011048882268369198
    2. 'dp' → logprob: -4.511048793792725
    3. '(dp' → logprob: -14.386049270629883
    4. '	dp' → logprob: -15.011049270629883
    5. '_dp' → logprob: -16.136049270629883
    6. '.dp' → logprob: -17.886049270629883
    7. ')' → logprob: -18.761049270629883
    8. ' ' → logprob: -18.886049270629883
    9. ' ' → logprob: -19.386049270629883
    10. 'd' → logprob: -20.136049270629883

Token 964: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.333223139634356e-05
    2. 'i' → logprob: -10.375033378601074
    3. '[' → logprob: -14.125033378601074
    4. '```' → logprob: -14.375033378601074
    5. '(i' → logprob: -15.625033378601074
    6. ' [' → logprob: -15.875033378601074
    7. '   ' → logprob: -16.375032424926758
    8. ' i' → logprob: -17.250032424926758
    9. '{i' → logprob: -17.375032424926758
    10. '[
' → logprob: -17.500032424926758

Token 965: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02231687866151333
    2. '[i' → logprob: -4.147316932678223
    3. '][' → logprob: -5.147316932678223
    4. '[' → logprob: -8.647316932678223
    5. 'i' → logprob: -8.647316932678223
    6. ']' → logprob: -10.772316932678223
    7. ' +' → logprob: -10.897316932678223
    8. ']+' → logprob: -11.022316932678223
    9. '+i' → logprob: -11.272316932678223
    10. ' i' → logprob: -11.772316932678223

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012387208640575409
    2. 'i' → logprob: -4.887387275695801
    3. '+' → logprob: -5.387387275695801
    4. '(i' → logprob: -9.3873872756958
    5. '[i' → logprob: -9.8873872756958
    6. ' ' → logprob: -11.0123872756958
    7. ' i' → logprob: -11.2623872756958
    8. '   ' → logprob: -12.1373872756958
    9. '
' → logprob: -12.2623872756958
    10. '0' → logprob: -12.2623872756958

Token 967: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030591826885938644
    2. '[' → logprob: -3.5305917263031006
    3. '[i' → logprob: -7.28059196472168
    4. ' ][' → logprob: -9.40559196472168
    5. '```' → logprob: -11.03059196472168
    6. '   ' → logprob: -11.53059196472168
    7. ' [' → logprob: -11.53059196472168
    8. ')[' → logprob: -11.78059196472168
    9. '           ' → logprob: -12.03059196472168
    10. '}[' → logprob: -12.03059196472168

Token 968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '[' → logprob: -18.500001907348633
    5. 'i' → logprob: -18.500001907348633
    6. '```' → logprob: -19.125001907348633
    7. '
' → logprob: -19.375001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '۰' → logprob: -19.625001907348633
    10. 'j' → logprob: -20.000001907348633

Token 969: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027528072241693735
    2. '[' → logprob: -6.002752780914307
    3. ' ][' → logprob: -8.252753257751465
    4. ']' → logprob: -11.752753257751465
    5. '   ' → logprob: -13.252753257751465
    6. '           ' → logprob: -13.627753257751465
    7. ' [' → logprob: -13.752753257751465
    8. '0' → logprob: -14.002753257751465
    9. '```' → logprob: -14.252753257751465
    10. '       ' → logprob: -14.502753257751465

Token 970: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '
' → logprob: -18.187501907348633
    5. '  ' → logprob: -18.312501907348633
    6. '[' → logprob: -18.375001907348633
    7. '       ' → logprob: -18.750001907348633
    8. '1' → logprob: -18.812501907348633
    9. '۰' → logprob: -19.312501907348633
    10. '    ' → logprob: -19.437501907348633

Token 971: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014339904300868511
    2. ')
' → logprob: -4.264339923858643
    3. '])' → logprob: -8.889339447021484
    4. '               ' → logprob: -11.139339447021484
    5. '                   ' → logprob: -11.264339447021484
    6. '])
' → logprob: -12.514339447021484
    7. ' )' → logprob: -13.264339447021484
    8. '))' → logprob: -13.264339447021484
    9. ')
' → logprob: -13.764339447021484
    10. '})' → logprob: -14.514339447021484

Token 972: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11791536211967468
    2. '```' → logprob: -2.492915391921997
    3. 'dp' → logprob: -4.367915153503418
    4. '               ' → logprob: -4.367915153503418
    5. '                    ' → logprob: -6.867915153503418
    6. ' dp' → logprob: -6.992915153503418
    7. '                ' → logprob: -7.867915153503418
    8. '``' → logprob: -8.367915153503418
    9. '                       ' → logprob: -8.617915153503418
    10. '                  ' → logprob: -8.867915153503418

Token 973: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1972770094871521
    2. '                   ' → logprob: -2.197277069091797
    3. ' dp' → logprob: -2.697277069091797
    4. '```' → logprob: -8.572277069091797
    5. '                    ' → logprob: -9.072277069091797
    6. '                       ' → logprob: -9.197277069091797
    7. '               ' → logprob: -9.572277069091797
    8. '(dp' → logprob: -10.947277069091797
    9. '	dp' → logprob: -11.822277069091797
    10. '           ' → logprob: -12.197277069091797

Token 974: ' Comm' (ID: 57464)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.721228368813172e-05
    2. ' dp' → logprob: -9.375086784362793
    3. 'max' → logprob: -14.500086784362793
    4. 'd' → logprob: -15.000086784362793
    5. 'def' → logprob: -15.250086784362793
    6. 'a' → logprob: -15.375086784362793
    7. '(dp' → logprob: -15.750086784362793
    8. '```' → logprob: -15.750086784362793
    9. '	dp' → logprob: -15.875086784362793
    10. '                   ' → logprob: -15.875086784362793

Token 975: 'encer' (ID: 19726)
  Prédit: 'encer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encer' → logprob: -0.004161737859249115
    2. 'ence' → logprob: -5.879161834716797
    3. '   ' → logprob: -7.879161834716797
    4. 'enter' → logprob: -7.879161834716797
    5. 'ancer' → logprob: -7.879161834716797
    6. 'encher' → logprob: -9.879161834716797
    7. '       ' → logprob: -10.629161834716797
    8. 'e' → logprob: -10.879161834716797
    9. '```' → logprob: -10.879161834716797
    10. 'en' → logprob: -11.004161834716797

Token 976: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2790038585662842
    2. 'dp' → logprob: -1.4040038585662842
    3. '                   ' → logprob: -1.7790038585662842
    4. ' dp' → logprob: -2.279003858566284
    5. ' une' → logprob: -2.779003858566284
    6. 'dans' → logprob: -3.404003858566284
    7. 'un' → logprob: -3.529003858566284
    8. ' dans' → logprob: -4.154004096984863
    9. ' à' → logprob: -4.154004096984863
    10. '[' → logprob: -4.529004096984863

Token 977: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028513673692941666
    2. ' ' → logprob: -4.1535139083862305
    3. 'prem' → logprob: -5.5285139083862305
    4. '0' → logprob: -5.9035139083862305
    5. ' premier' → logprob: -5.9035139083862305
    6. 'j' → logprob: -7.0285139083862305
    7. 'dp' → logprob: -7.6535139083862305
    8. 'i' → logprob: -7.9035139083862305
    9. '[' → logprob: -8.02851390838623
    10. ' j' → logprob: -8.90351390838623

Token 978: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02904461696743965
    2. 'i' → logprob: -4.0290446281433105
    3. 'prem' → logprob: -5.4040446281433105
    4. 'j' → logprob: -6.2790446281433105
    5. '[i' → logprob: -6.7790446281433105
    6. '0' → logprob: -6.7790446281433105
    7. '[' → logprob: -6.9040446281433105
    8. 'dp' → logprob: -8.529044151306152
    9. ' ' → logprob: -8.904044151306152
    10. '   ' → logprob: -8.904044151306152

Token 979: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.179154634475708
    2. 'ier' → logprob: -2.179154634475708
    3. 'ère' → logprob: -4.804154396057129
    4. '[' → logprob: -4.804154396057129
    5. '][' → logprob: -5.179154396057129
    6. ']' → logprob: -5.554154396057129
    7. '1' → logprob: -5.554154396057129
    8. '+' → logprob: -5.804154396057129
    9. '           ' → logprob: -5.804154396057129
    10. 'ière' → logprob: -5.929154396057129

Token 980: ' groupe' (ID: 29494)
  Prédit: ' groupe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.08167577534914017
    2. ' group' → logprob: -3.4566757678985596
    3. 'g' → logprob: -4.206676006317139
    4. '_g' → logprob: -4.456676006317139
    5. ' _' → logprob: -5.331676006317139
    6. '_' → logprob: -5.581676006317139
    7. '_group' → logprob: -5.706676006317139
    8. 'group' → logprob: -5.831676006317139
    9. ' g' → logprob: -5.956676006317139
    10. ' ' → logprob: -6.956676006317139

Token 981: ' avec' (ID: 3937)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44417300820350647
    2. '                   ' → logprob: -1.194172978401184
    3. ' dp' → logprob: -2.9441730976104736
    4. ' =' → logprob: -6.6941728591918945
    5. '               ' → logprob: -7.1941728591918945
    6. '   ' → logprob: -8.694172859191895
    7. '[' → logprob: -8.819172859191895
    8. '(dp' → logprob: -8.944172859191895
    9. '                    ' → logprob: -9.194172859191895
    10. '           ' → logprob: -9.194172859191895

Token 982: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010231496766209602
    2. ' a' → logprob: -4.7602314949035645
    3. 'max' → logprob: -7.0102314949035645
    4. 'dp' → logprob: -7.6352314949035645
    5. ' max' → logprob: -9.010231971740723
    6. ' dp' → logprob: -10.260231971740723
    7. 'l' → logprob: -11.135231971740723
    8. '   ' → logprob: -11.260231971740723
    9. '+' → logprob: -11.635231971740723
    10. ' ' → logprob: -12.010231971740723

Token 983: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007070713327266276
    2. ' a' → logprob: -8.250706672668457
    3. 'e' → logprob: -9.000706672668457
    4. '+' → logprob: -9.500706672668457
    5. ''a' → logprob: -9.500706672668457
    6. 'élé' → logprob: -9.500706672668457
    7. 'i' → logprob: -10.500706672668457
    8. 'element' → logprob: -11.125706672668457
    9. 'é' → logprob: -11.125706672668457
    10. '`' → logprob: -11.875706672668457

Token 984: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0072993328794837
    2. ' a' → logprob: -5.132299423217773
    3. 'élé' → logprob: -6.882299423217773
    4. 'element' → logprob: -9.007299423217773
    5. '+' → logprob: -9.507299423217773
    6. 'i' → logprob: -10.257299423217773
    7. '   ' → logprob: -11.382299423217773
    8. ' ' → logprob: -11.507299423217773
    9. 'elem' → logprob: -11.507299423217773
    10. '```' → logprob: -11.757299423217773

Token 985: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.10304862260818481
    2. 'ément' → logprob: -2.85304856300354
    3. 'mé' → logprob: -4.228048801422119
    4. '[' → logprob: -4.603048801422119
    5. 'm' → logprob: -4.978048801422119
    6. '   ' → logprob: -6.478048801422119
    7. ']' → logprob: -6.603048801422119
    8. 'élé' → logprob: -7.228048801422119
    9. '+' → logprob: -7.228048801422119
    10. ' ' → logprob: -7.728048801422119

Token 986: ' courant' (ID: 74694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2834744453430176
    2. ' dp' → logprob: -2.0334744453430176
    3. '[' → logprob: -3.1584744453430176
    4. '[i' → logprob: -3.5334744453430176
    5. '```' → logprob: -4.783474445343018
    6. '   ' → logprob: -5.283474445343018
    7. '[j' → logprob: -5.533474445343018
    8. ' ' → logprob: -6.158474445343018
    9. 'a' → logprob: -6.158474445343018
    10. '+' → logprob: -6.283474445343018

Token 987: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5152308344841003
    2. 'dp' → logprob: -1.3902308940887451
    3. ' dp' → logprob: -1.8902308940887451
    4. '               ' → logprob: -7.015230655670166
    5. '(dp' → logprob: -7.265230655670166
    6. '                    ' → logprob: -8.765231132507324
    7. ' =' → logprob: -8.765231132507324
    8. '	dp' → logprob: -9.015231132507324
    9. '           ' → logprob: -9.265231132507324
    10. '   ' → logprob: -9.390231132507324

Token 988: '                   ' (ID: 699)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39725181460380554
    2. '                   ' → logprob: -1.647251844406128
    3. ' dp' → logprob: -2.022251844406128
    4. '               ' → logprob: -7.147251605987549
    5. '(dp' → logprob: -7.147251605987549
    6. '                       ' → logprob: -8.147252082824707
    7. '   ' → logprob: -8.272252082824707
    8. '```' → logprob: -8.647252082824707
    9. '                    ' → logprob: -9.022252082824707
    10. 'a' → logprob: -9.522252082824707

Token 989: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.615255839889869e-05
    2. ' dp' → logprob: -9.250096321105957
    3. '                   ' → logprob: -17.37509536743164
    4. '	dp' → logprob: -18.62509536743164
    5. '(dp' → logprob: -19.75009536743164
    6. '   ' → logprob: -20.25009536743164
    7. '_dp' → logprob: -20.75009536743164
    8. '```' → logprob: -20.75009536743164
    9. '               ' → logprob: -21.25009536743164
    10. 'max' → logprob: -21.25009536743164

Token 990: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -12.000009536743164
    3. 'i' → logprob: -12.750009536743164
    4. '   ' → logprob: -14.750009536743164
    5. ' [' → logprob: -16.250009536743164
    6. '```' → logprob: -16.375009536743164
    7. '_i' → logprob: -17.750009536743164
    8. '(i' → logprob: -18.500009536743164
    9. ' ' → logprob: -18.875009536743164
    10. '`' → logprob: -19.000009536743164

Token 991: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036343999672681093
    2. '[' → logprob: -5.628634452819824
    3. '[i' → logprob: -10.878634452819824
    4. '+[' → logprob: -11.503634452819824
    5. '][' → logprob: -12.628634452819824
    6. '```' → logprob: -14.128634452819824
    7. ' +' → logprob: -15.253634452819824
    8. '+
' → logprob: -15.503634452819824
    9. ']+' → logprob: -15.503634452819824
    10. ' [' → logprob: -15.753634452819824

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003398726985324174
    2. '+' → logprob: -8.00033950805664
    3. ' ' → logprob: -13.00033950805664
    4. '```' → logprob: -14.00033950805664
    5. '   ' → logprob: -14.62533950805664
    6. '[' → logprob: -14.75033950805664
    7. '
' → logprob: -15.87533950805664
    8. '0' → logprob: -16.12533950805664
    9. ']' → logprob: -17.25033950805664
    10. '>' → logprob: -17.50033950805664

Token 993: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2520766854286194
    2. '][' → logprob: -1.5020766258239746
    3. '   ' → logprob: -10.377077102661133
    4. ')[' → logprob: -10.627077102661133
    5. '}[' → logprob: -10.627077102661133
    6. ' ][' → logprob: -10.627077102661133
    7. ' [' → logprob: -11.252077102661133
    8. '>[' → logprob: -11.752077102661133
    9. '```' → logprob: -12.252077102661133
    10. ']' → logprob: -12.377077102661133

Token 994: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502598519437015
    2. '1' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.626502990722656
    4. '
' → logprob: -17.251502990722656
    5. '[' → logprob: -17.376502990722656
    6. '```' → logprob: -17.376502990722656
    7. '   ' → logprob: -17.626502990722656
    8. '`' → logprob: -18.876502990722656
    9. '{' → logprob: -19.314002990722656
    10. '  ' → logprob: -19.501502990722656

Token 995: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011128316400572658
    2. '[' → logprob: -6.876112937927246
    3. ' ][' → logprob: -10.001112937927246
    4. ']' → logprob: -10.876112937927246
    5. '   ' → logprob: -11.376112937927246
    6. '       ' → logprob: -14.001112937927246
    7. ' ' → logprob: -14.251112937927246
    8. ']][' → logprob: -14.751112937927246
    9. ')[' → logprob: -14.751112937927246
    10. '```' → logprob: -15.251112937927246

Token 996: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.500001907348633
    4. 'max' → logprob: -16.000001907348633
    5. '0' → logprob: -17.125001907348633
    6. '[' → logprob: -17.125001907348633
    7. '           ' → logprob: -18.250001907348633
    8. '                   ' → logprob: -18.250001907348633
    9. '+' → logprob: -18.375001907348633
    10. '  ' → logprob: -18.375001907348633

Token 997: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001574971480295062
    2. ']=' → logprob: -6.501574993133545
    3. '=' → logprob: -10.001574516296387
    4. ' ]' → logprob: -11.876574516296387
    5. ']+=' → logprob: -12.001574516296387
    6. ']+' → logprob: -12.126574516296387
    7. ')' → logprob: -12.376574516296387
    8. '+' → logprob: -13.251574516296387
    9. ' =' → logprob: -13.376574516296387
    10. '])' → logprob: -14.626574516296387

Token 998: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860088601708412
    2. ' =' → logprob: -3.048600912094116
    3. '=max' → logprob: -11.298601150512695
    4. 'max' → logprob: -14.298601150512695
    5. ')' → logprob: -15.298601150512695
    6. ']' → logprob: -16.173601150512695
    7. '   ' → logprob: -16.423601150512695
    8. ' max' → logprob: -17.673601150512695
    9. ']=' → logprob: -17.673601150512695
    10. ')=' → logprob: -17.923601150512695

Token 999: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10447538644075394
    2. ' max' → logprob: -2.354475498199463
    3. 'a' → logprob: -5.479475498199463
    4. ' a' → logprob: -9.354475021362305
    5. ' ' → logprob: -15.104475021362305
    6. '(max' → logprob: -15.104475021362305
    7. '=max' → logprob: -15.104475021362305
    8. '	max' → logprob: -15.604475021362305
    9. ' ' → logprob: -15.979475021362305
    10. ' maxim' → logprob: -16.604475021362305

Token 1000: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00046844579628668725
    2. 'dp' → logprob: -7.7504682540893555
    3. '(' → logprob: -10.250468254089355
    4. ' dp' → logprob: -13.375468254089355
    5. ' (' → logprob: -14.375468254089355
    6. '	dp' → logprob: -16.250469207763672
    7. '(
' → logprob: -16.500469207763672
    8. '(-' → logprob: -16.875469207763672
    9. '0' → logprob: -17.125469207763672
    10. '_dp' → logprob: -18.000469207763672

Token 1001: '[i' (ID: 1768)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019473420456051826
    2. '[i' → logprob: -4.769473552703857
    3. '(dp' → logprob: -5.144473552703857
    4. ' dp' → logprob: -5.394473552703857
    5. '[' → logprob: -7.894473552703857
    6. '_dp' → logprob: -10.6444730758667
    7. '	dp' → logprob: -11.3944730758667
    8. '.dp' → logprob: -12.1444730758667
    9. '   ' → logprob: -12.1444730758667
    10. '```' → logprob: -13.6444730758667

Token 1002: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25339680910110474
    2. '][' → logprob: -1.50339674949646
    3. '[' → logprob: -6.753396987915039
    4. ' ][' → logprob: -9.378396987915039
    5. '   ' → logprob: -9.878396987915039
    6. ')[' → logprob: -10.128396987915039
    7. '+' → logprob: -10.128396987915039
    8. ']' → logprob: -10.878396987915039
    9. ' [' → logprob: -11.378396987915039
    10. '```' → logprob: -11.378396987915039

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029830673709511757
    2. 'i' → logprob: -3.5298306941986084
    3. ' i' → logprob: -10.029830932617188
    4. ' ' → logprob: -10.279830932617188
    5. '   ' → logprob: -13.529830932617188
    6. '[i' → logprob: -15.279830932617188
    7. '  ' → logprob: -16.279830932617188
    8. '```' → logprob: -16.654830932617188
    9. '[' → logprob: -16.779830932617188
    10. '    ' → logprob: -17.029830932617188

Token 1004: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010107125155627728
    2. '[' → logprob: -4.635107040405273
    3. ' ][' → logprob: -8.635107040405273
    4. ']' → logprob: -9.135107040405273
    5. '   ' → logprob: -10.635107040405273
    6. '           ' → logprob: -11.260107040405273
    7. '       ' → logprob: -12.135107040405273
    8. '```' → logprob: -12.510107040405273
    9. ' [' → logprob: -12.760107040405273
    10. ')[' → logprob: -13.010107040405273

Token 1005: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34880009293556213
    2. '0' → logprob: -1.2238000631332397
    3. ' ' → logprob: -8.098799705505371
    4. '   ' → logprob: -10.473799705505371
    5. 'k' → logprob: -11.348799705505371
    6. '```' → logprob: -12.973799705505371
    7. '  ' → logprob: -13.598799705505371
    8. '
' → logprob: -13.723799705505371
    9. '    ' → logprob: -13.848799705505371
    10. '' → logprob: -13.848799705505371

Token 1006: ']+' (ID: 15344)
  Prédit: '+a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+a' → logprob: -0.1650470644235611
    2. '+' → logprob: -2.1650471687316895
    3. ' +' → logprob: -3.2900471687316895
    4. '+i' → logprob: -9.790046691894531
    5. '+b' → logprob: -10.790046691894531
    6. '+k' → logprob: -10.915046691894531
    7. '+p' → logprob: -11.040046691894531
    8. '+j' → logprob: -11.290046691894531
    9. '+A' → logprob: -12.290046691894531
    10. ']+' → logprob: -12.290046691894531

Token 1007: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ' a' → logprob: -6.7511701583862305
    3. '	a' → logprob: -19.126171112060547
    4. ' ' → logprob: -19.376171112060547
    5. '   ' → logprob: -19.876171112060547
    6. '```' → logprob: -20.376171112060547
    7. '_a' → logprob: -20.501171112060547
    8. ''a' → logprob: -20.626171112060547
    9. ' ' → logprob: -21.126171112060547
    10. '    ' → logprob: -21.626171112060547

Token 1008: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.125015258789062
    3. '[
' → logprob: -15.375015258789062
    4. 'i' → logprob: -15.625015258789062
    5. '   ' → logprob: -17.000015258789062
    6. '```' → logprob: -17.000015258789062
    7. ' [' → logprob: -17.750015258789062
    8. '(i' → logprob: -18.250015258789062
    9. ')' → logprob: -18.375015258789062
    10. '[I' → logprob: -18.750015258789062

Token 1009: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07938817143440247
    2. '],' → logprob: -2.70438814163208
    3. ']' → logprob: -4.70438814163208
    4. ' ,' → logprob: -8.829388618469238
    5. '[i' → logprob: -9.579388618469238
    6. '   ' → logprob: -9.704388618469238
    7. ')' → logprob: -10.454388618469238
    8. '),' → logprob: -10.704388618469238
    9. ',i' → logprob: -12.329388618469238
    10. '`,' → logprob: -12.829388618469238

Token 1010: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889232039451599
    2. ' dp' → logprob: -2.578892230987549
    3. '                   ' → logprob: -13.953892707824707
    4. '	dp' → logprob: -14.453892707824707
    5. '                    ' → logprob: -14.703892707824707
    6. '_dp' → logprob: -15.703892707824707
    7. '(dp' → logprob: -16.82889175415039
    8. '    ' → logprob: -16.82889175415039
    9. '                       ' → logprob: -16.95389175415039
    10. '                  ' → logprob: -16.95389175415039

Token 1011: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.875
    3. '[' → logprob: -16.25
    4. '(i' → logprob: -17.25
    5. ' [' → logprob: -17.5
    6. '```' → logprob: -17.625
    7. '   ' → logprob: -18.0
    8. ')' → logprob: -18.75
    9. '{i' → logprob: -19.625
    10. '[
' → logprob: -19.75

Token 1012: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.264322317088954e-05
    2. '][' → logprob: -9.875052452087402
    3. '[' → logprob: -14.125052452087402
    4. ' +' → logprob: -14.875052452087402
    5. ']+' → logprob: -17.00005340576172
    6. '   ' → logprob: -17.12505340576172
    7. '+[' → logprob: -17.62505340576172
    8. '```' → logprob: -18.50005340576172
    9. '+
' → logprob: -18.75005340576172
    10. ' ][' → logprob: -19.12505340576172

Token 1013: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001522599020972848
    2. '+' → logprob: -6.501522541046143
    3. ' ' → logprob: -11.6265230178833
    4. 'i' → logprob: -12.3765230178833
    5. '0' → logprob: -12.8765230178833
    6. '```' → logprob: -14.0015230178833
    7. '   ' → logprob: -14.3765230178833
    8. '[i' → logprob: -14.3765230178833
    9. '[' → logprob: -14.5015230178833
    10. '
' → logprob: -14.6265230178833

Token 1014: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022112776059657335
    2. '[' → logprob: -6.127211093902588
    3. ' ][' → logprob: -11.502211570739746
    4. '           ' → logprob: -12.127211570739746
    5. '   ' → logprob: -12.877211570739746
    6. '       ' → logprob: -13.002211570739746
    7. ']' → logprob: -13.002211570739746
    8. ')[' → logprob: -14.502211570739746
    9. '```' → logprob: -14.627211570739746
    10. ' ' → logprob: -15.127211570739746

Token 1015: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '1' → logprob: -17.125
    4. 'i' → logprob: -17.875
    5. '   ' → logprob: -18.125
    6. '
' → logprob: -18.75
    7. 'j' → logprob: -19.375
    8. '[' → logprob: -19.75
    9. '۰' → logprob: -19.875
    10. '...' → logprob: -20.5

Token 1016: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003253335307817906
    2. ']' → logprob: -9.125325202941895
    3. ' ][' → logprob: -9.125325202941895
    4. '[' → logprob: -9.500325202941895
    5. '   ' → logprob: -10.750325202941895
    6. '       ' → logprob: -13.000325202941895
    7. ' ' → logprob: -13.000325202941895
    8. '           ' → logprob: -13.625325202941895
    9. '```' → logprob: -14.125325202941895
    10. ']][' → logprob: -14.125325202941895

Token 1017: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008655112236738205
    2. '1' → logprob: -4.758655071258545
    3. ' ' → logprob: -10.133655548095703
    4. '   ' → logprob: -14.633655548095703
    5. 'i' → logprob: -15.633655548095703
    6. '```' → logprob: -16.883655548095703
    7. '  ' → logprob: -17.071155548095703
    8. '{' → logprob: -17.133655548095703
    9. '۰' → logprob: -17.571155548095703
    10. ')' → logprob: -17.758655548095703

Token 1018: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002497767563909292
    2. ')
' → logprob: -8.625249862670898
    3. '                   ' → logprob: -10.250249862670898
    4. '               ' → logprob: -10.625249862670898
    5. ' )' → logprob: -12.125249862670898
    6. '           ' → logprob: -13.125249862670898
    7. '   ' → logprob: -13.125249862670898
    8. '       ' → logprob: -15.250249862670898
    9. '                       ' → logprob: -15.625249862670898
    10. '                           ' → logprob: -16.0002498626709

Token 1019: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1020: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.614624559879303
    2. '                   ' → logprob: -0.864624559879303
    3. ' dp' → logprob: -3.364624500274658
    4. '               ' → logprob: -5.864624500274658
    5. '                       ' → logprob: -9.489624977111816
    6. '           ' → logprob: -9.489624977111816
    7. '#' (adapté à ' #') → logprob: -9.489624977111816
    8. 'elif' → logprob: -9.739624977111816
    9. '```' → logprob: -9.739624977111816
    10. '   ' → logprob: -10.114624977111816

Token 1021: ' O' (ID: 532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4498052223643754e-05
    2. '                   ' → logprob: -11.250014305114746
    3. ' dp' → logprob: -13.750014305114746
    4. '               ' → logprob: -15.750014305114746
    5. '           ' → logprob: -16.375015258789062
    6. '   ' → logprob: -16.625015258789062
    7. '                       ' → logprob: -17.750015258789062
    8. '```' → logprob: -18.000015258789062
    9. '	dp' → logprob: -18.250015258789062
    10. '       ' → logprob: -19.000015258789062

Token 1022: 'uv' (ID: 6992)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.49322739243507385
    2. 'pen' → logprob: -1.6182273626327515
    3. 'dp' → logprob: -2.368227481842041
    4. '[i' → logprob: -3.243227481842041
    5. 'n' → logprob: -3.868227481842041
    6. '[' → logprob: -4.118227481842041
    7. '+' → logprob: -4.743227481842041
    8. 'ptions' → logprob: -6.368227481842041
    9. 'pens' → logprob: -6.618227481842041
    10. 'pt' → logprob: -6.743227481842041

Token 1023: 'rir' (ID: 16883)
  Prédit: 'vr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vr' → logprob: -0.14759165048599243
    2. 'p' → logprob: -2.3975915908813477
    3. 'vir' → logprob: -3.2725915908813477
    4. 'ver' → logprob: -5.772591590881348
    5. '``' → logprob: -6.522591590881348
    6. 'per' → logprob: -6.647591590881348
    7. '```' → logprob: -6.772591590881348
    8. '   ' → logprob: -8.147591590881348
    9. 'pir' → logprob: -8.522591590881348
    10. 'vre' → logprob: -9.022591590881348

Token 1024: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0806303471326828
    2. 'un' → logprob: -2.830630302429199
    3. ' dp' → logprob: -5.205630302429199
    4. '[i' → logprob: -5.455630302429199
    5. ' un' → logprob: -5.455630302429199
    6. '[' → logprob: -6.955630302429199
    7. '(dp' → logprob: -7.080630302429199
    8. 'le' → logprob: -7.705630302429199
    9. '_dp' → logprob: -7.830630302429199
    10. 'new' → logprob: -8.2056303024292

Token 1025: ' groupe' (ID: 29494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12319955229759216
    2. '[' → logprob: -3.248199462890625
    3. '[i' → logprob: -3.248199462890625
    4. 'dp' → logprob: -3.498199462890625
    5. 'i' → logprob: -5.248199462890625
    6. '```' → logprob: -7.123199462890625
    7. 'j' → logprob: -7.498199462890625
    8. ' ' → logprob: -7.998199462890625
    9. '   ' → logprob: -8.373199462890625
    10. '[j' → logprob: -8.873199462890625

Token 1026: ' suivant' (ID: 68705)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3703486919403076
    2. '[' → logprob: -1.2453486919403076
    3. '   ' → logprob: -4.370348930358887
    4. '                   ' → logprob: -5.620348930358887
    5. 'dp' → logprob: -5.620348930358887
    6. '[j' → logprob: -7.370348930358887
    7. '```' → logprob: -7.495348930358887
    8. '               ' → logprob: -8.745348930358887
    9. '           ' → logprob: -9.620348930358887
    10. ' [' → logprob: -9.745348930358887

Token 1027: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6265507936477661
    2. 'dp' → logprob: -0.8765507936477661
    3. '[i' → logprob: -3.7515506744384766
    4. '[j' → logprob: -4.376550674438477
    5. ' dp' → logprob: -5.001550674438477
    6. '```' → logprob: -6.501550674438477
    7. '                   ' → logprob: -6.626550674438477
    8. '   ' → logprob: -7.001550674438477
    9. '               ' → logprob: -7.126550674438477
    10. '_dp' → logprob: -7.626550674438477

Token 1028: 'le' (ID: 282)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003315311623737216
    2. ' dp' → logprob: -5.753315448760986
    3. '                   ' → logprob: -9.003314971923828
    4. 'max' → logprob: -12.503314971923828
    5. '                       ' → logprob: -13.003314971923828
    6. 'i' → logprob: -13.628314971923828
    7. '   ' → logprob: -13.753314971923828
    8. '                  ' → logprob: -14.003314971923828
    9. '	dp' → logprob: -14.003314971923828
    10. '               ' → logprob: -14.253314971923828

Token 1029: ' premier' (ID: 15506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054944343864917755
    2. '[i' → logprob: -3.6799442768096924
    3. ' i' → logprob: -4.6799445152282715
    4. '1' → logprob: -4.9299445152282715
    5. 'j' → logprob: -5.1799445152282715
    6. '   ' → logprob: -6.9299445152282715
    7. '+' → logprob: -7.1799445152282715
    8. 'dp' → logprob: -7.3049445152282715
    9. '0' → logprob: -7.4299445152282715
    10. '```' → logprob: -7.6799445152282715

Token 1030: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.196295142173767
    2. ' groupe' → logprob: -1.196295142173767
    3. ')' → logprob: -1.696295142173767
    4. ')[' → logprob: -3.0712952613830566
    5. '+' → logprob: -3.3212952613830566
    6. 'g' → logprob: -3.8212952613830566
    7. '][' → logprob: -3.9462952613830566
    8. 'group' → logprob: -4.196295261383057
    9. ' group' → logprob: -4.321295261383057
    10. '```' → logprob: -4.821295261383057

Token 1031: ' partir' (ID: 12100)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06902797520160675
    2. 'i' → logprob: -3.569027900695801
    3. ' ' → logprob: -4.444027900695801
    4. 'j' → logprob: -4.819027900695801
    5. ' j' → logprob: -4.944027900695801
    6. '+' → logprob: -5.069027900695801
    7. ' i' → logprob: -6.819027900695801
    8. 'max' → logprob: -6.944027900695801
    9. 'dp' → logprob: -7.194027900695801
    10. '   ' → logprob: -7.694027900695801

Token 1032: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2872891426086426
    2. '1' → logprob: -1.6622891426086426
    3. '(' → logprob: -2.2872891426086426
    4. '(i' → logprob: -2.4122891426086426
    5. 'i' → logprob: -2.7872891426086426
    6. '[i' → logprob: -3.0372891426086426
    7. '[j' → logprob: -3.2872891426086426
    8. ' j' → logprob: -3.4122891426086426
    9. 'dp' → logprob: -3.5372891426086426
    10. '(j' → logprob: -3.6622891426086426

Token 1033: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35364779829978943
    2. '1' → logprob: -1.8536478281021118
    3. 'j' → logprob: -2.1036477088928223
    4. ' i' → logprob: -4.853647708892822
    5. '0' → logprob: -5.103647708892822
    6. ' j' → logprob: -6.228647708892822
    7. 'dp' → logprob: -6.478647708892822
    8. 'l' → logprob: -6.853647708892822
    9. ' ' → logprob: -7.978647708892822
    10. '   ' → logprob: -9.10364818572998

Token 1034: ''état' (ID: 116357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6581755876541138
    2. '0' → logprob: -1.0331755876541138
    3. '1' → logprob: -2.658175468444824
    4. '+' → logprob: -3.658175468444824
    5. 'j' → logprob: -4.283175468444824
    6. 'a' → logprob: -5.658175468444824
    7. '[i' → logprob: -6.283175468444824
    8. ' ' → logprob: -6.408175468444824
    9. ' i' → logprob: -6.408175468444824
    10. ' j' → logprob: -6.970675468444824

Token 1035: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.89115309715271
    2. ' ' → logprob: -1.64115309715271
    3. '1' → logprob: -2.14115309715271
    4. ' j' → logprob: -2.51615309715271
    5. '[' → logprob: -2.64115309715271
    6. 'j' → logprob: -2.89115309715271
    7. '[j' → logprob: -4.016153335571289
    8. ' [' → logprob: -4.266153335571289
    9. '[i' → logprob: -4.516153335571289
    10. ' (' → logprob: -4.641153335571289

Token 1036: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8985835909843445
    2. '                   ' → logprob: -1.3985836505889893
    3. '+' → logprob: -2.2735836505889893
    4. ')' → logprob: -2.5235836505889893
    5. ')+' → logprob: -3.0235836505889893
    6. '   ' → logprob: -3.8985836505889893
    7. '[' → logprob: -3.8985836505889893
    8. '),' → logprob: -4.14858341217041
    9. '[j' → logprob: -4.52358341217041
    10. '               ' → logprob: -4.89858341217041

Token 1037: '                   ' (ID: 699)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.39691463112831116
    2. 'dp' → logprob: -1.1469146013259888
    3. '(dp' → logprob: -5.146914482116699
    4. '   ' → logprob: -5.896914482116699
    5. ' =' → logprob: -7.646914482116699
    6. '                   ' → logprob: -7.896914482116699
    7. '```' → logprob: -9.1469144821167
    8. '_dp' → logprob: -9.2719144821167
    9. '[' → logprob: -9.3969144821167
    10. '	dp' → logprob: -9.5219144821167

Token 1038: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07002568244934082
    2. ' dp' → logprob: -2.695025682449341
    3. 'max' → logprob: -9.570025444030762
    4. ' max' → logprob: -11.070025444030762
    5. '(dp' → logprob: -14.195025444030762
    6. '_dp' → logprob: -14.195025444030762
    7. '	dp' → logprob: -14.320025444030762
    8. '   ' → logprob: -14.570025444030762
    9. 'd' → logprob: -14.820025444030762
    10. ' ' → logprob: -14.945025444030762

Token 1039: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.125001907348633
    3. 'i' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.250001907348633
    5. '[' → logprob: -16.000001907348633
    6. ' [' → logprob: -16.250001907348633
    7. ' i' → logprob: -18.125001907348633
    8. '
' → logprob: -18.500001907348633
    9. '``' → logprob: -18.875001907348633
    10. '`' → logprob: -19.125001907348633

Token 1040: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031435277312994
    2. '[i' → logprob: -3.531435251235962
    3. '[' → logprob: -6.406435489654541
    4. '+[' → logprob: -11.406435012817383
    5. '+i' → logprob: -11.906435012817383
    6. 'i' → logprob: -12.156435012817383
    7. ' +' → logprob: -12.781435012817383
    8. '+
' → logprob: -12.906435012817383
    9. '_plus' → logprob: -13.906435012817383
    10. '][' → logprob: -14.406435012817383

Token 1041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4894986785948277e-05
    2. '+' → logprob: -10.125044822692871
    3. '   ' → logprob: -12.750044822692871
    4. ' ' → logprob: -13.500044822692871
    5. '```' → logprob: -15.375044822692871
    6. '[' → logprob: -16.875045776367188
    7. '  ' → logprob: -17.750045776367188
    8. '2' → logprob: -18.000045776367188
    9. '    ' → logprob: -18.250045776367188
    10. '
' → logprob: -18.250045776367188

Token 1042: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31432226300239563
    2. '][' → logprob: -1.3143222332000732
    3. '}[' → logprob: -8.189322471618652
    4. ')[' → logprob: -8.189322471618652
    5. '>[' → logprob: -8.439322471618652
    6. '   ' → logprob: -9.314322471618652
    7. '```' → logprob: -9.939322471618652
    8. ' [' → logprob: -10.314322471618652
    9. '           ' → logprob: -10.314322471618652
    10. ' ][' → logprob: -10.689322471618652

Token 1043: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. '0' → logprob: -10.250051498413086
    3. '   ' → logprob: -11.750051498413086
    4. ' ' → logprob: -12.375051498413086
    5. '
' → logprob: -13.500051498413086
    6. '[' → logprob: -14.125051498413086
    7. '    ' → logprob: -14.500051498413086
    8. '     ' → logprob: -15.000051498413086
    9. '  ' → logprob: -15.250051498413086
    10. '       ' → logprob: -16.125051498413086

Token 1044: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020058415830135345
    2. '[' → logprob: -6.3770060539245605
    3. ' ][' → logprob: -8.502005577087402
    4. ']' → logprob: -9.377005577087402
    5. '   ' → logprob: -12.377005577087402
    6. '+' → logprob: -12.752005577087402
    7. ')[' → logprob: -13.002005577087402
    8. '```' → logprob: -13.377005577087402
    9. ' [' → logprob: -14.502005577087402
    10. ''][' → logprob: -14.627005577087402

Token 1045: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '1' → logprob: -15.625000953674316
    4. '۰' → logprob: -16.5
    5. '   ' → logprob: -17.375
    6. '```' → logprob: -17.5
    7. '[' → logprob: -18.625
    8. '০' → logprob: -18.6875
    9. '=' → logprob: -19.25
    10. ' ' → logprob: -19.3125

Token 1046: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.133198283147067e-05
    2. ')' → logprob: -10.125051498413086
    3. ' ]' → logprob: -12.000051498413086
    4. ']=' → logprob: -12.500051498413086
    5. '=' → logprob: -14.500051498413086
    6. '])' → logprob: -14.500051498413086
    7. ')]' → logprob: -15.625051498413086
    8. ']
' → logprob: -16.500051498413086
    9. ']+=' → logprob: -17.250051498413086
    10. '   ' → logprob: -17.250051498413086

Token 1047: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029888754710555077
    2. ' =' → logprob: -3.529888868331909
    3. '=max' → logprob: -8.904889106750488
    4. 'max' → logprob: -13.654889106750488
    5. ')' → logprob: -13.904889106750488
    6. ')=' → logprob: -14.904889106750488
    7. ']=' → logprob: -17.279888153076172
    8. ']' → logprob: -17.904888153076172
    9. '+=' → logprob: -18.529888153076172
    10. ' max' → logprob: -18.654888153076172

Token 1048: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029750484973192215
    2. ' max' → logprob: -3.5297505855560303
    3. '0' → logprob: -17.77975082397461
    4. ' ' → logprob: -18.15475082397461
    5. '(max' → logprob: -18.27975082397461
    6. '	max' → logprob: -18.90475082397461
    7. '=max' → logprob: -19.02975082397461
    8. '1' → logprob: -19.02975082397461
    9. '[max' → logprob: -19.90475082397461
    10. '>' → logprob: -20.52975082397461

Token 1049: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. 'dp' → logprob: -15.500000953674316
    4. ' (' → logprob: -17.25
    5. ' dp' → logprob: -18.875
    6. '(max' → logprob: -19.625
    7. '	dp' → logprob: -20.375
    8. '(
' → logprob: -21.0
    9. '(df' → logprob: -22.0
    10. '(dt' → logprob: -22.375

Token 1050: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.37374934554100037
    2. '(dp' → logprob: -1.3737493753433228
    3. 'dp' → logprob: -2.873749256134033
    4. ' dp' → logprob: -6.248749256134033
    5. '[' → logprob: -8.748749732971191
    6. '(i' → logprob: -10.248749732971191
    7. '_dp' → logprob: -10.248749732971191
    8. '	dp' → logprob: -11.373749732971191
    9. '```' → logprob: -11.373749732971191
    10. '[j' → logprob: -11.498749732971191

Token 1051: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20285825431346893
    2. '[i' → logprob: -1.7028582096099854
    3. '+' → logprob: -7.4528584480285645
    4. ' ][' → logprob: -8.202857971191406
    5. 'i' → logprob: -8.327857971191406
    6. '[' → logprob: -8.452857971191406
    7. '   ' → logprob: -10.327857971191406
    8. ']' → logprob: -10.577857971191406
    9. '[][' → logprob: -10.827857971191406
    10. ']+' → logprob: -11.952857971191406

Token 1052: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.375
    4. '
' → logprob: -19.375
    5. '０' → logprob: -19.75
    6. '۰' → logprob: -19.75
    7. '1' → logprob: -20.3125
    8. '  ' → logprob: -20.4375
    9. '...' → logprob: -20.875
    10. '```' → logprob: -20.9375

Token 1053: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004424667276907712
    2. '[' → logprob: -8.375442504882812
    3. '+' → logprob: -9.250442504882812
    4. ']' → logprob: -9.625442504882812
    5. ' ][' → logprob: -10.375442504882812
    6. '   ' → logprob: -11.500442504882812
    7. ']+' → logprob: -12.250442504882812
    8. '```' → logprob: -14.375442504882812
    9. '1' → logprob: -14.750442504882812
    10. '[j' → logprob: -15.000442504882812

Token 1054: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38694190979003906
    2. '0' → logprob: -1.136941909790039
    3. ' ' → logprob: -9.636941909790039
    4. '
' → logprob: -13.136941909790039
    5. '   ' → logprob: -13.386941909790039
    6. '```' → logprob: -14.636941909790039
    7. ']' → logprob: -15.011941909790039
    8. '  ' → logprob: -15.636941909790039
    9. '  
' → logprob: -16.01194190979004
    10. ' 
' → logprob: -16.32444190979004

Token 1055: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6222520470619202
    2. ']+' → logprob: -0.9972520470619202
    3. '],' → logprob: -2.4972519874572754
    4. ',' → logprob: -5.247251987457275
    5. ']' → logprob: -5.622251987457275
    6. ' +' → logprob: -6.622251987457275
    7. ' ],' → logprob: -7.497251987457275
    8. '][' → logprob: -7.872251987457275
    9. ' ,' → logprob: -8.372252464294434
    10. '+j' → logprob: -8.997252464294434

Token 1056: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889066636562347
    2. ' dp' → logprob: -2.578890562057495
    3. '(dp' → logprob: -14.328890800476074
    4. '	dp' → logprob: -15.578890800476074
    5. '_dp' → logprob: -15.953890800476074
    6. '.dp' → logprob: -18.703889846801758
    7. ' ' → logprob: -19.453889846801758
    8. 'd' → logprob: -20.453889846801758
    9. '1' → logprob: -20.703889846801758
    10. ' ' → logprob: -20.703889846801758

Token 1057: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.32392441527918e-05
    2. 'i' → logprob: -9.875053405761719
    3. ' [' → logprob: -14.125053405761719
    4. '(i' → logprob: -14.625053405761719
    5. '[' → logprob: -15.000053405761719
    6. '```' → logprob: -16.37505340576172
    7. ' i' → logprob: -16.62505340576172
    8. '   ' → logprob: -17.75005340576172
    9. '{i' → logprob: -18.37505340576172
    10. '
' → logprob: -18.62505340576172

Token 1058: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002287045121192932
    2. '][' → logprob: -6.127286911010742
    3. '[' → logprob: -10.627286911010742
    4. ']+' → logprob: -10.752286911010742
    5. '[i' → logprob: -11.002286911010742
    6. ' +' → logprob: -11.127286911010742
    7. '   ' → logprob: -11.752286911010742
    8. '+i' → logprob: -12.377286911010742
    9. '```' → logprob: -12.377286911010742
    10. '+[' → logprob: -12.502286911010742

Token 1059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. 'i' → logprob: -9.750065803527832
    3. '+' → logprob: -13.250065803527832
    4. '   ' → logprob: -13.375065803527832
    5. '0' → logprob: -13.500065803527832
    6. '```' → logprob: -14.000065803527832
    7. ' ' → logprob: -14.125065803527832
    8. '
' → logprob: -15.125065803527832
    9. '[i' → logprob: -15.500065803527832
    10. 'n' → logprob: -15.625065803527832

Token 1060: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019294669618830085
    2. '[' → logprob: -6.37692928314209
    3. '[i' → logprob: -9.12692928314209
    4. ' ][' → logprob: -9.75192928314209
    5. ']' → logprob: -10.25192928314209
    6. '   ' → logprob: -11.50192928314209
    7. '1' → logprob: -12.62692928314209
    8. 'i' → logprob: -12.87692928314209
    9. ' [' → logprob: -12.87692928314209
    10. '           ' → logprob: -13.87692928314209

Token 1061: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4794823229312897
    2. '1' → logprob: -0.9794822931289673
    3. 'i' → logprob: -5.229482173919678
    4. ' ' → logprob: -11.104482650756836
    5. '   ' → logprob: -11.229482650756836
    6. ' i' → logprob: -12.479482650756836
    7. '
' → logprob: -14.354482650756836
    8. '  ' → logprob: -15.354482650756836
    9. '       ' → logprob: -15.729482650756836
    10. '     ' → logprob: -15.854482650756836

Token 1062: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005144290626049042
    2. ' ][' → logprob: -8.000514030456543
    3. ']' → logprob: -9.500514030456543
    4. '[' → logprob: -9.875514030456543
    5. '[i' → logprob: -10.875514030456543
    6. '   ' → logprob: -11.250514030456543
    7. '+' → logprob: -11.375514030456543
    8. ' [' → logprob: -13.750514030456543
    9. '```' → logprob: -13.750514030456543
    10. '[j' → logprob: -13.750514030456543

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.125004768371582
    4. '1' → logprob: -15.375004768371582
    5. '  ' → logprob: -16.8750057220459
    6. '    ' → logprob: -17.5000057220459
    7. '
' → logprob: -17.7500057220459
    8. '```' → logprob: -17.7500057220459
    9. '۰' → logprob: -18.5000057220459
    10. '       ' → logprob: -18.5625057220459

Token 1064: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20169156789779663
    2. '])' → logprob: -1.7016916275024414
    3. ')
' → logprob: -9.951691627502441
    4. ')])' → logprob: -9.951691627502441
    5. ' )' → logprob: -10.076691627502441
    6. '                   ' → logprob: -10.076691627502441
    7. ')]' → logprob: -10.701691627502441
    8. '   ' → logprob: -11.201691627502441
    9. '               ' → logprob: -11.326691627502441
    10. '})' → logprob: -11.576691627502441

Token 1065: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14440800249576569
    2. 'result' → logprob: -2.6444079875946045
    3. '```' → logprob: -3.1444079875946045
    4. 'res' → logprob: -4.394408226013184
    5. 'max' → logprob: -6.144408226013184
    6. '
' → logprob: -6.144408226013184
    7. '    
' → logprob: -6.519408226013184
    8. 'rés' → logprob: -7.769408226013184
    9. 'ret' → logprob: -8.019408226013184
    10. 'return' → logprob: -8.144408226013184

Token 1066: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2921485900878906
    2. 'result' → logprob: -1.6671485900878906
    3. 'if' → logprob: -4.167148590087891
    4. 'ans' → logprob: -4.292148590087891
    5. '   ' → logprob: -4.292148590087891
    6. 'ret' → logprob: -4.417148590087891
    7. 'max' → logprob: -5.292148590087891
    8. 'answer' → logprob: -6.417148590087891
    9. 'par' → logprob: -7.167148590087891
    10. '```' → logprob: -7.667148590087891

Token 1067: ' Calcul' (ID: 57243)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11836457252502441
    2. 'result' → logprob: -2.7433645725250244
    3. 'ans' → logprob: -3.3683645725250244
    4. 'if' → logprob: -5.493364334106445
    5. 'max' → logprob: -5.743364334106445
    6. 'answer' → logprob: -6.243364334106445
    7. 'ret' → logprob: -6.618364334106445
    8. 'best' → logprob: -6.868364334106445
    9. '#' → logprob: -8.243364334106445
    10. 'm' → logprob: -8.493364334106445

Token 1068: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21013379096984863
    2. 'result' → logprob: -2.0851337909698486
    3. 'max' → logprob: -3.3351337909698486
    4. 'res' → logprob: -3.8351337909698486
    5. 'final' → logprob: -5.9601335525512695
    6. 'rés' → logprob: -6.3351335525512695
    7. '_result' → logprob: -6.9601335525512695
    8. 'ans' → logprob: -7.3351335525512695
    9. 'de' → logprob: -7.3351335525512695
    10. 'du' → logprob: -7.7101335525512695

Token 1069: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5814361572265625
    2. 'res' → logprob: -0.8314361572265625
    3. 'ans' → logprob: -5.5814361572265625
    4. 'answer' → logprob: -7.2064361572265625
    5. 'max' → logprob: -7.3314361572265625
    6. 'rés' → logprob: -8.331436157226562
    7. '#' → logprob: -10.081436157226562
    8. 'ret' → logprob: -11.706436157226562
    9. 'maximum' → logprob: -11.706436157226562
    10. '```' → logprob: -12.331436157226562

Token 1070: ' final' (ID: 1721)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4779627323150635
    2. '   ' → logprob: -1.2279627323150635
    3. 'result' → logprob: -2.4779627323150635
    4. 'ans' → logprob: -6.602962493896484
    5. 'max' → logprob: -7.352962493896484
    6. ' res' → logprob: -8.352962493896484
    7. '```' → logprob: -8.352962493896484
    8. 'ret' → logprob: -8.477962493896484
    9. 'rés' → logprob: -8.477962493896484
    10. 'answer' → logprob: -8.727962493896484

Token 1071: ' selon' (ID: 27571)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7517217993736267
    2. '   ' → logprob: -1.0017218589782715
    3. 'result' → logprob: -2.0017218589782715
    4. ' res' → logprob: -4.2517218589782715
    5. ' result' → logprob: -5.0017218589782715
    6. 'ans' → logprob: -6.0017218589782715
    7. 'max' → logprob: -6.6267218589782715
    8. ' ans' → logprob: -7.7517218589782715
    9. 'ret' → logprob: -7.8767218589782715
    10. 'rés' → logprob: -8.501721382141113

Token 1072: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7057822942733765
    2. 'n' → logprob: -1.0807822942733765
    3. ' n' → logprob: -2.705782413482666
    4. ' (' → logprob: -3.205782413482666
    5. 'max' → logprob: -4.330782413482666
    6. '0' → logprob: -4.330782413482666
    7. '(max' → logprob: -4.455782413482666
    8. '   ' → logprob: -5.080782413482666
    9. ' max' → logprob: -5.955782413482666
    10. 'par' → logprob: -6.080782413482666

Token 1073: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.22698375582695007
    2. 'n' → logprob: -1.6019837856292725
    3. 'if' → logprob: -7.101983547210693
    4. 'print' → logprob: -8.726984024047852
    5. 'max' → logprob: -9.351984024047852
    6. '```' → logprob: -9.351984024047852
    7. 'for' → logprob: -9.851984024047852
    8. '   ' → logprob: -10.101984024047852
    9. 's' → logprob: -10.226984024047852
    10. '#' → logprob: -10.476984024047852

Token 1074: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.010475368238985538
    2. 'ite' → logprob: -4.760475158691406
    3. 'ity' → logprob: -7.260475158691406
    4. 'it' → logprob: -7.635475158691406
    5. 'i' → logprob: -7.760475158691406
    6. '#' → logprob: -10.010475158691406
    7. '
' → logprob: -10.260475158691406
    8. '```' → logprob: -10.510475158691406
    9. 'ités' → logprob: -10.635475158691406
    10. 'itié' → logprob: -10.885475158691406

Token 1075: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29447194933891296
    2. ' de' → logprob: -1.7944719791412354
    3. ' if' → logprob: -2.9194719791412354
    4. 'if' → logprob: -3.9194719791412354
    5. 'de' → logprob: -5.419471740722656
    6. 'n' → logprob: -5.419471740722656
    7. ' du' → logprob: -6.169471740722656
    8. ' n' → logprob: -6.419471740722656
    9. '(n' → logprob: -6.794471740722656
    10. 'du' → logprob: -7.419471740722656

Token 1076: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00016873658751137555
    2. ' n' → logprob: -8.875168800354004
    3. '   ' → logprob: -10.625168800354004
    4. '(n' → logprob: -12.625168800354004
    5. '```' → logprob: -14.250168800354004
    6. 'la' → logprob: -16.250167846679688
    7. ' ' → logprob: -16.250167846679688
    8. '[n' → logprob: -16.375167846679688
    9. '
' → logprob: -17.125167846679688
    10. '  ' → logprob: -17.625167846679688

Token 1077: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7145297527313232
    2. 'result' → logprob: -1.2145297527313232
    3. 'res' → logprob: -1.8395297527313232
    4. 'if' → logprob: -3.0895297527313232
    5. 'ret' → logprob: -5.214529991149902
    6. ' if' → logprob: -6.339529991149902
    7. ' result' → logprob: -6.964529991149902
    8. ' res' → logprob: -7.714529991149902
    9. 'ans' → logprob: -8.214529991149902
    10. 'max' → logprob: -9.089529991149902

Token 1078: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5588814616203308
    2. 'result' → logprob: -1.3088815212249756
    3. 'res' → logprob: -2.0588815212249756
    4. ' result' → logprob: -4.8088812828063965
    5. 'if' → logprob: -4.9338812828063965
    6. ' res' → logprob: -5.0588812828063965
    7. 'ret' → logprob: -5.5588812828063965
    8. 'max' → logprob: -6.1838812828063965
    9. ' if' → logprob: -6.3088812828063965
    10. '```' → logprob: -7.9338812828063965

Token 1079: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.23743900656700134
    2. 'result' → logprob: -1.9874390363693237
    3. '   ' → logprob: -3.112438917160034
    4. 'if' → logprob: -3.862438917160034
    5. 'ret' → logprob: -5.862439155578613
    6. 'ans' → logprob: -5.862439155578613
    7. 'max' → logprob: -6.112439155578613
    8. ' res' → logprob: -8.237439155578613
    9. 'answer' → logprob: -8.362439155578613
    10. 'rest' → logprob: -9.237439155578613

Token 1080: ' Le' (ID: 2018)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3715748190879822
    2. 'result' → logprob: -1.496574878692627
    3. 'if' → logprob: -2.871574878692627
    4. '   ' → logprob: -3.996574878692627
    5. 'max' → logprob: -5.246574878692627
    6. 'ret' → logprob: -5.496574878692627
    7. 'ans' → logprob: -7.121574878692627
    8. ' res' → logprob: -7.621574878692627
    9. ' if' → logprob: -8.621574401855469
    10. ' result' → logprob: -8.871574401855469

Token 1081: ' résultat' (ID: 62556)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05824857950210571
    2. 'result' → logprob: -2.933248519897461
    3. 'ret' → logprob: -6.933248519897461
    4. 'max' → logprob: -7.183248519897461
    5. 'ans' → logprob: -7.808248519897461
    6. 'if' → logprob: -8.433248519897461
    7. 'rés' → logprob: -8.433248519897461
    8. ' res' → logprob: -8.683248519897461
    9. 'best' → logprob: -8.683248519897461
    10. 'r' → logprob: -8.808248519897461

Token 1082: ' dépend' (ID: 68660)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09515409171581268
    2. ' =' → logprob: -2.470154047012329
    3. 'final' → logprob: -5.220154285430908
    4. 'max' → logprob: -8.22015380859375
    5. '_final' → logprob: -8.59515380859375
    6. 's' → logprob: -8.97015380859375
    7. 'est' → logprob: -9.72015380859375
    8. '=max' → logprob: -10.34515380859375
    9. '   ' → logprob: -10.84515380859375
    10. '=
' → logprob: -10.97015380859375

Token 1083: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9103309512138367
    2. '=' → logprob: -1.0353310108184814
    3. '   ' → logprob: -2.1603310108184814
    4. ' de' → logprob: -3.2853310108184814
    5. ' des' → logprob: -3.2853310108184814
    6. 'des' → logprob: -4.285330772399902
    7. 'de' → logprob: -4.285330772399902
    8. 's' → logprob: -5.535330772399902
    9. '_de' → logprob: -5.535330772399902
    10. 'final' → logprob: -6.410330772399902

Token 1084: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.39020588994026184
    2. 'dp' → logprob: -1.7652058601379395
    3. 'n' → logprob: -3.1402058601379395
    4. '0' → logprob: -3.6402058601379395
    5. 'par' → logprob: -4.0152058601379395
    6. '3' → logprob: -4.0152058601379395
    7. 'j' → logprob: -4.5152058601379395
    8. '   ' → logprob: -5.0152058601379395
    9. 'sum' → logprob: -5.2652058601379395
    10. ' max' → logprob: -5.2652058601379395

Token 1085: ' contr' (ID: 6030)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7914301753044128
    2. 'n' → logprob: -1.5414302349090576
    3. 'max' → logprob: -2.0414302349090576
    4. 'dp' → logprob: -2.0414302349090576
    5. '3' → logprob: -4.1664299964904785
    6. '0' → logprob: -4.2914299964904785
    7. 'if' → logprob: -4.5414299964904785
    8. '2' → logprob: -4.7914299964904785
    9. '1' → logprob: -5.6664299964904785
    10. ' n' → logprob: -5.7914299964904785

Token 1086: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.004758934490382671
    2. 'aint' → logprob: -5.754758834838867
    3. 'ôle' → logprob: -6.629758834838867
    4. 'a' → logprob: -9.629758834838867
    5. 'ain' → logprob: -9.754758834838867
    6. '#' → logprob: -10.504758834838867
    7. 'aste' → logprob: -10.754758834838867
    8. 'ô' → logprob: -10.879758834838867
    9. 'aire' → logprob: -11.504758834838867
    10. '
' → logprob: -11.879758834838867

Token 1087: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3922351598739624
    2. ' if' → logprob: -1.5172351598739624
    3. ' de' → logprob: -1.8922351598739624
    4. '   ' → logprob: -2.142235279083252
    5. 'de' → logprob: -2.142235279083252
    6. 'final' → logprob: -2.517235279083252
    7. ' finale' → logprob: -3.142235279083252
    8. 'du' → logprob: -5.392235279083252
    9. 'si' → logprob: -5.392235279083252
    10. ' si' → logprob: -5.767235279083252

Token 1088: ' sélection' (ID: 43472)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.028648290783166885
    2. 'la' → logprob: -3.7786483764648438
    3. 'n' → logprob: -5.653648376464844
    4. 'l' → logprob: -7.528648376464844
    5. 'pair' → logprob: -8.403648376464844
    6. '#' → logprob: -8.653648376464844
    7. ' la' → logprob: -8.903648376464844
    8. 'fin' → logprob: -9.403648376464844
    9. '   ' → logprob: -9.403648376464844
    10. 's' → logprob: -9.528648376464844

Token 1089: ' des' (ID: 731)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.7018910646438599
    2. '   ' → logprob: -0.8268910646438599
    3. '_final' → logprob: -3.2018909454345703
    4. ' finale' → logprob: -3.9518909454345703
    5. 'if' → logprob: -6.32689094543457
    6. ' final' → logprob: -6.95189094543457
    7. 'de' → logprob: -7.82689094543457
    8. '[' → logprob: -7.95189094543457
    9. '.' → logprob: -7.95189094543457
    10. ' =' → logprob: -8.07689094543457

Token 1090: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3136284649372101
    2. 'group' → logprob: -1.6886284351348877
    3. 's' → logprob: -3.1886284351348877
    4. 'indices' → logprob: -3.6886284351348877
    5. 'segments' → logprob: -5.188628673553467
    6. ' éléments' → logprob: -5.438628673553467
    7. ' groupes' → logprob: -6.063628673553467
    8. 'groups' → logprob: -6.938628673553467
    9. '3' → logprob: -6.938628673553467
    10. 'elements' → logprob: -7.188628673553467

Token 1091: '-s' (ID: 2011)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.2254723757505417
    2. 's' → logprob: -1.850472331047058
    3. '-s' → logprob: -3.2254724502563477
    4. '_s' → logprob: -5.475472450256348
    5. '   ' → logprob: -7.600472450256348
    6. '-' → logprob: -9.600472450256348
    7. '\' → logprob: -10.225472450256348
    8. '_sequences' → logprob: -10.350472450256348
    9. ' sé' → logprob: -10.600472450256348
    10. 'sequence' → logprob: -10.725472450256348

Token 1092: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3002350330352783
    2. 'équ' → logprob: -1.4252350330352783
    3. 'quences' → logprob: -4.300234794616699
    4. 'e' → logprob: -6.050234794616699
    5. 'eq' → logprob: -7.050234794616699
    6. 'equ' → logprob: -7.925234794616699
    7. 'quence' → logprob: -7.925234794616699
    8. 'q' → logprob: -8.5502347946167
    9. 's' → logprob: -8.6752347946167
    10. '�' → logprob: -8.8002347946167

Token 1093: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.1139058992266655
    2. 'quence' → logprob: -2.238905906677246
    3. 'lection' → logprob: -6.988905906677246
    4. 'lections' → logprob: -9.488905906677246
    5. 'q' → logprob: -10.613905906677246
    6. 'lect' → logprob: -10.613905906677246
    7. 'qu' → logprob: -11.488905906677246
    8. '#' → logprob: -11.863905906677246
    9. '   ' → logprob: -12.613905906677246
    10. '```' → logprob: -13.238905906677246

Token 1094: ' altern' (ID: 7310)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35576188564300537
    2. 'result' → logprob: -1.8557618856430054
    3. 'if' → logprob: -2.730762004852295
    4. 'res' → logprob: -2.730762004852295
    5. 'final' → logprob: -5.105762004852295
    6. 'ret' → logprob: -5.980762004852295
    7. ' if' → logprob: -6.605762004852295
    8. '    
' → logprob: -7.730762004852295
    9. 'rés' → logprob: -7.730762004852295
    10. '=' → logprob: -8.230761528015137

Token 1095: 'antes' (ID: 5193)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.07846897840499878
    2. 'quences' → logprob: -3.3284690380096436
    3. 'quence' → logprob: -4.0784687995910645
    4. 'ances' → logprob: -4.0784687995910645
    5. '   ' → logprob: -5.8284687995910645
    6. 'ques' → logprob: -7.0784687995910645
    7. 'antes' → logprob: -7.3284687995910645
    8. 'que' → logprob: -8.203469276428223
    9. '#' → logprob: -8.578469276428223
    10. 'ante' → logprob: -8.703469276428223

Token 1096: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3839576542377472
    2. 'if' → logprob: -1.7589576244354248
    3. 'result' → logprob: -2.133957624435425
    4. 'res' → logprob: -3.633957624435425
    5. ' if' → logprob: -6.883957862854004
    6. 'ret' → logprob: -8.133957862854004
    7. '    
' → logprob: -8.508957862854004
    8. 'ans' → logprob: -9.258957862854004
    9. ' result' → logprob: -9.633957862854004
    10. 'r' → logprob: -10.508957862854004

Token 1097: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33110594749450684
    2. 'result' → logprob: -1.8311059474945068
    3. ' result' → logprob: -3.331105947494507
    4. ' if' → logprob: -3.581105947494507
    5. 'res' → logprob: -3.581105947494507
    6. 'if' → logprob: -4.331106185913086
    7. ' res' → logprob: -4.456106185913086
    8. 'ret' → logprob: -5.831106185913086
    9. '```' → logprob: -6.206106185913086
    10. 'rés' → logprob: -9.456106185913086

Token 1098: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9157696962356567
    2. 'result' → logprob: -1.1657696962356567
    3. '   ' → logprob: -1.4157696962356567
    4. 'if' → logprob: -3.790769577026367
    5. 'ret' → logprob: -4.040769577026367
    6. ' res' → logprob: -6.290769577026367
    7. 'max' → logprob: -7.040769577026367
    8. ' result' → logprob: -7.165769577026367
    9. ' if' → logprob: -7.415769577026367
    10. '```' → logprob: -7.540769577026367

Token 1099: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759658217430115
    2. ' =' → logprob: -0.8259658217430115
    3. '_' → logprob: -11.700965881347656
    4. '   ' → logprob: -11.950965881347656
    5. '[' → logprob: -12.950965881347656
    6. ')' → logprob: -13.825965881347656
    7. 's' → logprob: -13.825965881347656
    8. ' ' → logprob: -13.950965881347656
    9. '    ' → logprob: -14.075965881347656
    10. ' ' → logprob: -14.075965881347656

Token 1100: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31426411867141724
    2. ' max' → logprob: -1.3142640590667725
    3. '0' → logprob: -7.189264297485352
    4. '-max' → logprob: -9.189264297485352
    5. '-' → logprob: -9.439264297485352
    6. '   ' → logprob: -10.314264297485352
    7. ' -' → logprob: -11.439264297485352
    8. 'float' → logprob: -12.064264297485352
    9. ' ' → logprob: -12.064264297485352
    10. 'dp' → logprob: -12.939264297485352

Token 1101: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001462107611587271
    2. '-max' → logprob: -9.12514591217041
    3. ' max' → logprob: -10.75014591217041
    4. '-' → logprob: -11.37514591217041
    5. 'float' → logprob: -13.25014591217041
    6. '0' → logprob: -13.50014591217041
    7. '(max' → logprob: -14.87514591217041
    8. '[max' → logprob: -15.25014591217041
    9. '=max' → logprob: -15.37514591217041
    10. '	max' → logprob: -16.500146865844727

Token 1102: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41794270277023315
    2. '   ' → logprob: -1.167942762374878
    3. ' for' → logprob: -3.917942762374878
    4. 'if' → logprob: -5.292942523956299
    5. 'max' → logprob: -5.917942523956299
    6. '
' → logprob: -5.917942523956299
    7. 'ans' → logprob: -9.417943000793457
    8. ' if' → logprob: -9.792943000793457
    9. '    
' → logprob: -9.917943000793457
    10. 'possible' → logprob: -10.417943000793457

Token 1103: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3314421474933624
    2. '   ' → logprob: -1.33144211769104
    3. ' for' → logprob: -4.331442356109619
    4. 'if' → logprob: -5.456442356109619
    5. 'max' → logprob: -8.206441879272461
    6. '
' → logprob: -8.956441879272461
    7. 'ans' → logprob: -9.581441879272461
    8. '    
' → logprob: -9.956441879272461
    9. ' if' → logprob: -10.456441879272461
    10. '```' → logprob: -10.706441879272461

Token 1104: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19542966783046722
    2. 'ans' → logprob: -2.320429563522339
    3. '   ' → logprob: -2.695429563522339
    4. 'max' → logprob: -4.945429801940918
    5. 'if' (adapté à ' if') → logprob: -5.695429801940918
    6. 'possible' → logprob: -7.445429801940918
    7. 'res' → logprob: -8.195429801940918
    8. ' for' → logprob: -8.695429801940918
    9. 'answer' → logprob: -10.070429801940918
    10. 'min' → logprob: -10.195429801940918

Token 1105: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16070295870304108
    2. ' n' → logprob: -1.9107029438018799
    3. '   ' → logprob: -7.660703182220459
    4. ' ' → logprob: -12.2857027053833
    5. '(n' → logprob: -13.2857027053833
    6. '  ' → logprob: -14.6607027053833
    7. '	n' → logprob: -14.9107027053833
    8. '    ' → logprob: -15.2857027053833
    9. '
' → logprob: -15.9107027053833
    10. ' (' → logprob: -16.035703659057617

Token 1106: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2014281451702118
    2. ' %' → logprob: -1.7014281749725342
    3. '%
' → logprob: -12.201428413391113
    4. '[' → logprob: -12.701428413391113
    5. '   ' → logprob: -13.326428413391113
    6. ' %
' → logprob: -13.326428413391113
    7. '```' → logprob: -13.701428413391113
    8. '
' → logprob: -14.326428413391113
    9. ')%' → logprob: -15.076428413391113
    10. ' ' → logprob: -15.326428413391113

Token 1107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001366744691040367
    2. ' ' → logprob: -9.000136375427246
    3. '```' → logprob: -11.500136375427246
    4. '==' → logprob: -13.750136375427246
    5. '   ' → logprob: -14.000136375427246
    6. '4' → logprob: -14.500136375427246
    7. '``' → logprob: -15.250136375427246
    8. '3' → logprob: -16.000137329101562
    9. '  ' → logprob: -16.625137329101562
    10. '
' → logprob: -17.000137329101562

Token 1108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '
' → logprob: -15.875003814697266
    5. '==' → logprob: -16.125003814697266
    6. '=' → logprob: -16.375003814697266
    7. '4' → logprob: -18.250003814697266
    8. '3' → logprob: -18.500003814697266
    9. '``' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.000003814697266

Token 1109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22553734481334686
    2. ' ==' → logprob: -1.6005373001098633
    3. ' !=' → logprob: -9.850537300109863
    4. '   ' → logprob: -10.850537300109863
    5. '!=' → logprob: -10.975537300109863
    6. '=' → logprob: -10.975537300109863
    7. '```' → logprob: -12.350537300109863
    8. '==
' → logprob: -12.725537300109863
    9. '[' → logprob: -12.975537300109863
    10. ')==' → logprob: -13.100537300109863

Token 1110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5981141328811646
    2. '2' → logprob: -0.8481141328811646
    3. '1' → logprob: -3.848114013671875
    4. ' ' → logprob: -7.473114013671875
    5. '==' → logprob: -10.848114013671875
    6. '=' → logprob: -11.473114013671875
    7. '```' → logprob: -11.973114013671875
    8. '
' → logprob: -12.473114013671875
    9. '==
' → logprob: -14.348114013671875
    10. '   ' → logprob: -14.848114013671875

Token 1111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5850085020065308
    2. '2' → logprob: -0.8350085020065308
    3. '1' → logprob: -4.71000862121582
    4. ' ' → logprob: -10.96000862121582
    5. '==' → logprob: -12.71000862121582
    6. '```' → logprob: -12.96000862121582
    7. '   ' → logprob: -15.58500862121582
    8. '=' → logprob: -15.71000862121582
    9. '[' → logprob: -17.08500862121582
    10. ' ==' → logprob: -17.33500862121582

Token 1112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2528989613056183
    2. ':
' → logprob: -1.502898931503296
    3. '       ' → logprob: -7.127899169921875
    4. '   ' → logprob: -9.252899169921875
    5. '=' → logprob: -10.502899169921875
    6. '[' → logprob: -11.627899169921875
    7. '==' → logprob: -11.752899169921875
    8. '):
' → logprob: -11.752899169921875
    9. ' =' → logprob: -12.127899169921875
    10. ':
' → logprob: -12.752899169921875

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022558939235750586
    2. '   ' → logprob: -8.875226020812988
    3. ':
' → logprob: -10.750226020812988
    4. '           ' → logprob: -11.250226020812988
    5. ':' → logprob: -11.500226020812988
    6. '<|end|>' → logprob: -11.750226020812988
    7. '
' → logprob: -12.000226020812988
    8. '[' → logprob: -12.625226020812988
    9. '<|end|>' → logprob: -12.625226020812988
    10. '```' → logprob: -12.750226020812988

Token 1114: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11929458379745483
    2. '   ' → logprob: -2.2442946434020996
    3. ' ans' → logprob: -5.1192946434021
    4. '	ans' → logprob: -8.619294166564941
    5. '       ' → logprob: -8.994294166564941
    6. 'anst' → logprob: -9.869294166564941
    7. '
' → logprob: -10.119294166564941
    8. 'for' → logprob: -10.244294166564941
    9. '(ans' → logprob: -11.369294166564941
    10. '    
' → logprob: -12.244294166564941

Token 1115: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01257816981524229
    2. '   ' → logprob: -4.387578010559082
    3. 'for' → logprob: -10.887578010559082
    4. '#' → logprob: -11.762578010559082
    5. 'res' → logprob: -12.137578010559082
    6. 'answer' → logprob: -12.137578010559082
    7. ' ans' → logprob: -12.137578010559082
    8. 'dp' → logprob: -12.387578010559082
    9. 'anst' → logprob: -12.637578010559082
    10. 'max' → logprob: -12.637578010559082

Token 1116: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.36739012598991394
    2. ' ans' → logprob: -1.6173901557922363
    3. 'n' → logprob: -3.6173901557922363
    4. 'j' → logprob: -4.117390155792236
    5. '   ' → logprob: -4.117390155792236
    6. '(ans' → logprob: -4.117390155792236
    7. ' n' → logprob: -4.367390155792236
    8. 'dp' → logprob: -4.742390155792236
    9. ' j' → logprob: -4.867390155792236
    10. ' (' → logprob: -6.742390155792236

Token 1117: ' sé' (ID: 7462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16792179644107819
    2. ' ans' → logprob: -2.167921781539917
    3. 'max' → logprob: -4.167922019958496
    4. ' max' → logprob: -4.417922019958496
    5. ' n' → logprob: -5.917922019958496
    6. 'n' → logprob: -5.917922019958496
    7. '   ' → logprob: -6.667922019958496
    8. 'answer' → logprob: -6.667922019958496
    9. '#' → logprob: -7.417922019958496
    10. '
' → logprob: -7.792922019958496

Token 1118: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.006529923062771559
    2. '   ' → logprob: -5.881529808044434
    3. 'q' → logprob: -6.006529808044434
    4. 'n' → logprob: -8.881529808044434
    5. 'lection' → logprob: -8.881529808044434
    6. 'qu' → logprob: -9.131529808044434
    7. 'QUENCE' → logprob: -9.256529808044434
    8. '{
' → logprob: -9.381529808044434
    9. 'quences' → logprob: -9.381529808044434
    10. '[' → logprob: -9.381529808044434

Token 1119: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.046095371246338
    2. 'a' → logprob: -1.296095371246338
    3. 'est' → logprob: -1.421095371246338
    4. '   ' → logprob: -3.421095371246338
    5. '#' → logprob: -4.171095371246338
    6. ' est' → logprob: -4.296095371246338
    7. ' n' → logprob: -4.546095371246338
    8. '[' → logprob: -4.671095371246338
    9. 'length' → logprob: -4.796095371246338
    10. 'len' → logprob: -4.796095371246338

Token 1120: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.02730477601289749
    2. ' une' → logprob: -4.652304649353027
    3. 'un' → logprob: -5.027304649353027
    4. 'len' → logprob: -5.902304649353027
    5. 'long' → logprob: -6.027304649353027
    6. 'length' → logprob: -6.277304649353027
    7. 'n' → logprob: -6.402304649353027
    8. 'au' → logprob: -6.777304649353027
    9. '#' → logprob: -9.027304649353027
    10. '%' → logprob: -9.277304649353027

Token 1121: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.824109673500061
    2. 'long' → logprob: -1.574109673500061
    3. 'tail' → logprob: -2.4491095542907715
    4. 'par' → logprob: -2.4491095542907715
    5. 's' → logprob: -3.0741095542907715
    6. ' taille' → logprob: -3.6991095542907715
    7. ' par' → logprob: -3.8241095542907715
    8. '   ' → logprob: -3.9491095542907715
    9. ' paire' → logprob: -4.6991095542907715
    10. ' somme' → logprob: -4.8241095542907715

Token 1122: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.0905497595667839
    2. 'pair' → logprob: -2.8405497074127197
    3. ' pair' → logprob: -3.7155497074127197
    4. 'pa' → logprob: -6.715549945831299
    5. ' imp' → logprob: -7.465549945831299
    6. '   ' → logprob: -7.590549945831299
    7. ' pairs' → logprob: -7.965549945831299
    8. ' impair' → logprob: -8.71554946899414
    9. 'pairs' → logprob: -8.71554946899414
    10. '_pair' → logprob: -8.84054946899414

Token 1123: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9224864840507507
    2. ':
' → logprob: -1.0474865436553955
    3. ':' → logprob: -1.4224865436553955
    4. '           ' → logprob: -4.797486305236816
    5. '   ' → logprob: -6.672486305236816
    6. ',' → logprob: -7.922486305236816
    7. '):
' → logprob: -8.922486305236816
    8. ' :' → logprob: -9.172486305236816
    9. ' :
' → logprob: -9.172486305236816
    10. '=' → logprob: -9.672486305236816

Token 1124: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8588109016418457
    2. '   ' → logprob: -1.1088109016418457
    3. ' ans' → logprob: -1.6088109016418457
    4. '           ' → logprob: -3.7338109016418457
    5. '       ' → logprob: -4.108810901641846
    6. '	ans' → logprob: -6.233810901641846
    7. '
' → logprob: -6.483810901641846
    8. 'for' → logprob: -6.858810901641846
    9. ' for' → logprob: -7.983810901641846
    10. '               ' → logprob: -8.733810424804688

Token 1125: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5891298055648804
    2. 'ans' → logprob: -1.7141298055648804
    3. '=' → logprob: -2.21412992477417
    4. 'cherche' → logprob: -2.33912992477417
    5. 'for' → logprob: -2.46412992477417
    6. '#' → logprob: -2.96412992477417
    7. ' for' → logprob: -3.08912992477417
    8. 'continue' → logprob: -3.21412992477417
    9. 's' → logprob: -3.33912992477417
    10. '   ' → logprob: -3.96412992477417

Token 1126: ' considère' (ID: 176437)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.6064848303794861
    2. '#' → logprob: -1.9814848899841309
    3. 'pe' → logprob: -2.231484889984131
    4. 'do' → logprob: -2.606484889984131
    5. 'for' → logprob: -2.731484889984131
    6. 'pour' → logprob: -4.231484889984131
    7. 'pr' → logprob: -4.481484889984131
    8. 's' → logprob: -5.106484889984131
    9. ' #' → logprob: -5.481484889984131
    10. 'max' → logprob: -5.606484889984131

Token 1127: ' pas' (ID: 2173)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13181529939174652
    2. 'les' → logprob: -3.381815195083618
    3. ' dp' → logprob: -3.631815195083618
    4. ' que' → logprob: -4.131815433502197
    5. 'que' → logprob: -4.256815433502197
    6. 'pas' → logprob: -4.381815433502197
    7. 'se' → logprob: -5.756815433502197
    8. ' les' → logprob: -6.006815433502197
    9. ' uniquement' → logprob: -6.131815433502197
    10. 't' → logprob: -6.256815433502197

Token 1128: ' certaines' (ID: 46662)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18954724073410034
    2. ' dp' → logprob: -2.439547300338745
    3. 'max' → logprob: -3.314547300338745
    4. '   ' → logprob: -3.689547300338745
    5. ' max' → logprob: -4.814547061920166
    6. 'les' → logprob: -4.939547061920166
    7. ' les' → logprob: -5.814547061920166
    8. ' ' → logprob: -6.564547061920166
    9. '0' → logprob: -6.939547061920166
    10. '(dp' → logprob: -7.189547061920166

Token 1129: ' transitions' (ID: 59824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06910818815231323
    2. ' dp' → logprob: -3.319108247756958
    3. '   ' → logprob: -4.944108009338379
    4. '#' → logprob: -5.319108009338379
    5. ' états' → logprob: -5.444108009338379
    6. 'max' → logprob: -6.694108009338379
    7. ' groupes' → logprob: -6.694108009338379
    8. 'indices' → logprob: -6.819108009338379
    9. ' states' → logprob: -6.819108009338379
    10. 'cases' → logprob: -6.944108009338379

Token 1130: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4426085948944092
    2. ':' → logprob: -1.9426085948944092
    3. ':
' → logprob: -2.317608594894409
    4. '   ' → logprob: -2.942608594894409
    5. '           ' → logprob: -3.442608594894409
    6. '.' → logprob: -4.942608833312988
    7. '               ' → logprob: -5.067608833312988
    8. '                   ' → logprob: -5.317608833312988
    9. '[' → logprob: -5.942608833312988
    10. '.
' → logprob: -6.442608833312988

Token 1131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021474185632541776
    2. '   ' → logprob: -8.750214576721191
    3. '           ' → logprob: -10.000214576721191
    4. '
' → logprob: -12.250214576721191
    5. '```' → logprob: -12.625214576721191
    6. '               ' → logprob: -14.750214576721191
    7. '        
' → logprob: -15.125214576721191
    8. '`' → logprob: -15.500214576721191
    9. '	' → logprob: -15.625214576721191
    10. '{
' → logprob: -15.875214576721191

Token 1132: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.34924620389938354
    2. '   ' → logprob: -1.4742462635040283
    3. '       ' → logprob: -2.9742462635040283
    4. ' ans' → logprob: -4.474246025085449
    5. 'for' → logprob: -6.099246025085449
    6. '	ans' → logprob: -7.849246025085449
    7. ' for' → logprob: -8.84924602508545
    8. '
' → logprob: -9.09924602508545
    9. 'anst' → logprob: -9.59924602508545
    10. '(ans' → logprob: -9.72424602508545

Token 1133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868807554244995
    2. ' =' → logprob: -1.1368807554244995
    3. '=max' → logprob: -12.136880874633789
    4. '+=' → logprob: -13.386880874633789
    5. '   ' → logprob: -13.511880874633789
    6. ' +=' → logprob: -14.511880874633789
    7. '	' → logprob: -15.511880874633789
    8. '=
' → logprob: -15.636880874633789
    9. '[' → logprob: -16.13688087463379
    10. ' ' → logprob: -16.26188087463379

Token 1134: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.030138283967971802
    2. ' max' → logprob: -3.5301382541656494
    3. '   ' → logprob: -8.40513801574707
    4. 'dp' → logprob: -8.78013801574707
    5. '0' → logprob: -12.28013801574707
    6. ' dp' → logprob: -13.40513801574707
    7. ' ' → logprob: -13.90513801574707
    8. '	max' → logprob: -13.90513801574707
    9. 'float' → logprob: -14.15513801574707
    10. '=max' → logprob: -14.65513801574707

Token 1135: '(max' (ID: 17178)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.02728481963276863
    2. '([' → logprob: -4.402284622192383
    3. '(
' → logprob: -5.152284622192383
    4. '(' → logprob: -5.277284622192383
    5. '(max' → logprob: -5.777284622192383
    6. '(ans' → logprob: -7.777284622192383
    7. '([
' → logprob: -8.652284622192383
    8. 'dp' → logprob: -9.652284622192383
    9. '((' → logprob: -12.152284622192383
    10. '(

' → logprob: -12.652284622192383

Token 1136: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005947356694377959
    2. 'dp' → logprob: -7.625594615936279
    3. '([' → logprob: -9.750595092773438
    4. '(
' → logprob: -10.375595092773438
    5. '(' → logprob: -11.000595092773438
    6. '(max' → logprob: -15.500595092773438
    7. ' dp' → logprob: -15.750595092773438
    8. '	dp' → logprob: -16.750595092773438
    9. '(

' → logprob: -17.000595092773438
    10. '([
' → logprob: -17.125595092773438

Token 1137: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.56102097814437e-05
    2. 'n' → logprob: -10.125045776367188
    3. '   ' → logprob: -13.375045776367188
    4. '
' → logprob: -13.875045776367188
    5. '[len' → logprob: -14.125045776367188
    6. '```' → logprob: -14.250045776367188
    7. '[' → logprob: -14.875045776367188
    8. '[i' → logprob: -15.125045776367188
    9. '[
' → logprob: -15.125045776367188
    10. '][' → logprob: -15.500045776367188

Token 1138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08914393186569214
    2. '[' → logprob: -2.464143991470337
    3. ')[' → logprob: -9.589143753051758
    4. '   ' → logprob: -10.214143753051758
    5. ']' → logprob: -10.714143753051758
    6. '```' → logprob: -11.464143753051758
    7. '[][' → logprob: -11.589143753051758
    8. '[n' → logprob: -11.589143753051758
    9. '
' → logprob: -12.089143753051758
    10. ' ][' → logprob: -12.214143753051758

Token 1139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28437575697898865
    2. '3' → logprob: -1.784375786781311
    3. 'j' → logprob: -2.9093756675720215
    4. 'range' → logprob: -4.7843756675720215
    5. '1' → logprob: -5.2843756675720215
    6. '[' → logprob: -5.2843756675720215
    7. 'i' → logprob: -5.6593756675720215
    8. '2' → logprob: -6.0343756675720215
    9. '[j' → logprob: -7.7843756675720215
    10. '(' → logprob: -9.53437614440918

Token 1140: ']),' (ID: 19560)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002114927861839533
    2. '])' → logprob: -7.127114772796631
    3. '[' → logprob: -7.502114772796631
    4. ']),' → logprob: -7.877114772796631
    5. ']' → logprob: -9.002115249633789
    6. ']),
' → logprob: -9.377115249633789
    7. '0' → logprob: -10.752115249633789
    8. '])+' → logprob: -10.877115249633789
    9. ' ][' → logprob: -11.002115249633789
    10. '])[' → logprob: -11.127115249633789

Token 1141: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3132822811603546
    2. ' max' → logprob: -1.3132822513580322
    3. '   ' → logprob: -11.688282012939453
    4. '(max' → logprob: -12.563282012939453
    5. 'dp' → logprob: -12.688282012939453
    6. ' ' → logprob: -13.563282012939453
    7. ' dp' → logprob: -13.813282012939453
    8. '[max' → logprob: -13.938282012939453
    9. '       ' → logprob: -14.438282012939453
    10. '           ' → logprob: -14.938282012939453

Token 1142: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00042412037146277726
    2. 'n' → logprob: -7.875423908233643
    3. '[' → logprob: -10.3754243850708
    4. '```' → logprob: -12.1254243850708
    5. '][' → logprob: -13.1254243850708
    6. '(n' → logprob: -13.7504243850708
    7. '3' → logprob: -13.8754243850708
    8. '[][' → logprob: -14.6254243850708
    9. '[
' → logprob: -14.8754243850708
    10. '``' → logprob: -14.8754243850708

Token 1143: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08924522995948792
    2. '[' → logprob: -2.464245319366455
    3. '   ' → logprob: -9.339244842529297
    4. ')[' → logprob: -9.464244842529297
    5. ']' → logprob: -10.464244842529297
    6. ' ][' → logprob: -10.964244842529297
    7. '3' → logprob: -11.339244842529297
    8. ' [' → logprob: -11.589244842529297
    9. '>[' → logprob: -11.589244842529297
    10. '```' → logprob: -11.839244842529297

Token 1144: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.34349486231803894
    2. '1' → logprob: -1.7184948921203613
    3. '2' → logprob: -2.7184948921203613
    4. '0' → logprob: -3.0934948921203613
    5. '[' → logprob: -10.968494415283203
    6. '(' → logprob: -11.780994415283203
    7. '   ' → logprob: -11.905994415283203
    8. ' ' → logprob: -12.030994415283203
    9. '4' → logprob: -12.405994415283203
    10. '```' → logprob: -12.905994415283203

Token 1145: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004886227659881115
    2. '[' → logprob: -5.754886150360107
    3. '])' → logprob: -6.504886150360107
    4. ']' → logprob: -9.379886627197266
    5. '])
' → logprob: -10.504886627197266
    6. ' ][' → logprob: -10.879886627197266
    7. '][-' → logprob: -10.879886627197266
    8. '   ' → logprob: -11.629886627197266
    9. '])+' → logprob: -12.254886627197266
    10. ')[' → logprob: -12.254886627197266

Token 1146: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1603081077337265
    2. '1' → logprob: -1.9103081226348877
    3. '])' → logprob: -10.035307884216309
    4. ' ' → logprob: -11.785307884216309
    5. ']' → logprob: -11.847807884216309
    6. '[' → logprob: -12.222807884216309
    7. '   ' → logprob: -12.722807884216309
    8. '
' → logprob: -13.347807884216309
    9. '```' → logprob: -13.847807884216309
    10. '' → logprob: -14.097807884216309

Token 1147: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0047088684514164925
    2. '],' → logprob: -5.879708766937256
    3. '])
' → logprob: -6.629708766937256
    4. ']+' → logprob: -8.504709243774414
    5. ']' → logprob: -8.629709243774414
    6. '])+' → logprob: -9.379709243774414
    7. ')' → logprob: -9.754709243774414
    8. ',' → logprob: -11.254709243774414
    9. ']))' → logprob: -11.379709243774414
    10. '),' → logprob: -12.129709243774414

Token 1148: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8069915771484375
    2. '   ' → logprob: -1.0569915771484375
    3. ',' → logprob: -2.3069915771484375
    4. ')
' → logprob: -3.0569915771484375
    5. '       ' → logprob: -4.1819915771484375
    6. '
' → logprob: -4.5569915771484375
    7. ')+' → logprob: -5.3069915771484375
    8. '```' → logprob: -5.5569915771484375
    9. 'max' → logprob: -5.6819915771484375
    10. 'else' → logprob: -5.6819915771484375

Token 1149: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40626248717308044
    2. '   ' → logprob: -1.6562625169754028
    3. 'else' (adapté à ' else') → logprob: -3.0312623977661133
    4. ')
' → logprob: -3.1562623977661133
    5. ')' → logprob: -3.6562623977661133
    6. '       ' → logprob: -5.531262397766113
    7. ',' → logprob: -5.656262397766113
    8. ' if' → logprob: -5.906262397766113
    9. ' else' → logprob: -5.906262397766113
    10. '[' → logprob: -6.156262397766113

Token 1150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46891123056411743
    2. '       ' → logprob: -1.4689111709594727
    3. ':
' → logprob: -1.9689111709594727
    4. '   ' → logprob: -6.343911170959473
    5. '<|end|>' → logprob: -6.593911170959473
    6. '[' → logprob: -7.718911170959473
    7. '        ' → logprob: -8.468911170959473
    8. '<|end|>' → logprob: -8.968911170959473
    9. '           ' → logprob: -9.718911170959473
    10. ' :' → logprob: -9.718911170959473

Token 1151: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054873254150152206
    2. '       ' → logprob: -3.30487322807312
    3. 'ans' → logprob: -4.304873466491699
    4. ' ans' → logprob: -5.929873466491699
    5. '    ' → logprob: -8.6798734664917
    6. '	ans' → logprob: -8.9298734664917
    7. '   ' → logprob: -9.8048734664917
    8. '```' → logprob: -9.9298734664917
    9. '(ans' → logprob: -10.0548734664917
    10. '           ' → logprob: -10.9298734664917

Token 1152: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5184213519096375
    2. ' ans' → logprob: -1.0184214115142822
    3. '   ' → logprob: -3.1434214115142822
    4. '	ans' → logprob: -8.893421173095703
    5. '       ' → logprob: -9.768421173095703
    6. '(ans' → logprob: -10.768421173095703
    7. 'max' → logprob: -11.893421173095703
    8. 'answer' → logprob: -12.268421173095703
    9. '```' → logprob: -12.768421173095703
    10. '
' → logprob: -12.768421173095703

Token 1153: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.11996734328568e-05
    2. '   ' → logprob: -10.750041007995605
    3. ' ans' → logprob: -10.875041007995605
    4. 'answer' → logprob: -15.375041007995605
    5. '       ' → logprob: -16.250041961669922
    6. 'for' → logprob: -16.250041961669922
    7. '	ans' → logprob: -16.250041961669922
    8. '
' → logprob: -16.375041961669922
    9. '```' → logprob: -16.375041961669922
    10. '(ans' → logprob: -16.500041961669922

Token 1154: ' sequence' (ID: 16281)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9148833155632019
    2. ' n' → logprob: -1.5398833751678467
    3. 'max' → logprob: -1.9148833751678467
    4. ' ans' → logprob: -2.0398833751678467
    5. 'n' → logprob: -3.1648833751678467
    6. ' dp' → logprob: -3.2898833751678467
    7. 'ans' → logprob: -4.164883136749268
    8. 'dp' → logprob: -4.539883136749268
    9. '   ' → logprob: -6.789883136749268
    10. '(ans' → logprob: -8.414883613586426

Token 1155: ' imp' (ID: 3282)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6297122836112976
    2. ' =' → logprob: -0.8797122836112976
    3. '=' → logprob: -3.5047123432159424
    4. '=n' → logprob: -5.254712104797363
    5. '   ' → logprob: -5.379712104797363
    6. '```' → logprob: -6.004712104797363
    7. ' ==' → logprob: -6.504712104797363
    8. 'max' → logprob: -6.629712104797363
    9. '==' → logprob: -6.754712104797363
    10. '][' → logprob: -7.379712104797363

Token 1156: 'aire' (ID: 8189)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -0.6007176637649536
    2. '[n' → logprob: -1.3507176637649536
    3. '[' → logprob: -2.475717544555664
    4. 'aire' → logprob: -2.600717544555664
    5. 'ar' → logprob: -3.975717544555664
    6. 'ort' → logprob: -5.850717544555664
    7. 'n' → logprob: -6.350717544555664
    8. '][' → logprob: -6.600717544555664
    9. '[]' → logprob: -6.725717544555664
    10. 'é' → logprob: -7.100717544555664

Token 1157: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7852612137794495
    2. ':
' → logprob: -0.7852612137794495
    3. ':' → logprob: -3.6602611541748047
    4. '[' → logprob: -3.7852611541748047
    5. ' =' → logprob: -4.660261154174805
    6. '=' → logprob: -5.285261154174805
    7. '           ' → logprob: -5.285261154174805
    8. 'max' → logprob: -5.785261154174805
    9. ' :
' → logprob: -5.910261154174805
    10. '[max' → logprob: -6.035261154174805

Token 1158: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.003672517603263259
    2. 'ans' → logprob: -5.6286725997924805
    3. ' max' → logprob: -9.75367259979248
    4. ' dp' → logprob: -12.37867259979248
    5. '(ans' → logprob: -12.50367259979248
    6. '   ' → logprob: -12.87867259979248
    7. 'max' → logprob: -13.12867259979248
    8. '	ans' → logprob: -13.87867259979248
    9. '
' → logprob: -15.25367259979248
    10. '_ans' → logprob: -15.87867259979248

Token 1159: ' autor' (ID: 13432)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05774552375078201
    2. ' =' → logprob: -3.6827454566955566
    3. '=max' → logprob: -4.182745456695557
    4. 'ans' → logprob: -4.807745456695557
    5. 'max' → logprob: -5.432745456695557
    6. '+=' → logprob: -6.557745456695557
    7. '=
' → logprob: -7.182745456695557
    8. ' ans' → logprob: -8.057745933532715
    9. '[' → logprob: -8.807745933532715
    10. ' max' → logprob: -9.557745933532715

Token 1160: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0009594622533768415
    2. 'is' → logprob: -7.375959396362305
    3. '[' → logprob: -9.250959396362305
    4. 'se' → logprob: -9.250959396362305
    5. 'iser' → logprob: -10.000959396362305
    6. 'e' → logprob: -10.375959396362305
    7. '   ' → logprob: -10.875959396362305
    8. 'ize' → logprob: -11.625959396362305
    9. 'isé' → logprob: -11.625959396362305
    10. 'isent' → logprob: -12.625959396362305

Token 1161: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2122001200914383
    2. ' max' → logprob: -1.7122001647949219
    3. 'dp' → logprob: -4.712200164794922
    4. ' dp' → logprob: -6.587200164794922
    5. '(max' → logprob: -8.712200164794922
    6. '   ' → logprob: -9.087200164794922
    7. '(dp' → logprob: -10.087200164794922
    8. ' ' → logprob: -11.462200164794922
    9. '[max' → logprob: -11.712200164794922
    10. '       ' → logprob: -11.962200164794922

Token 1162: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07717490941286087
    2. 'dp' → logprob: -3.2021749019622803
    3. '[max' → logprob: -3.9521749019622803
    4. '(max' → logprob: -5.202175140380859
    5. ' max' → logprob: -6.077175140380859
    6. '   ' → logprob: -6.452175140380859
    7. '(dp' → logprob: -6.577175140380859
    8. '=max' → logprob: -6.827175140380859
    9. '       ' → logprob: -7.327175140380859
    10. '
' → logprob: -8.32717514038086

Token 1163: ' configurations' (ID: 56804)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6632494926452637
    2. 'dp' → logprob: -0.7882494926452637
    3. ' dp' → logprob: -4.413249492645264
    4. ' max' → logprob: -4.413249492645264
    5. '(dp' → logprob: -5.788249492645264
    6. '(max' → logprob: -7.163249492645264
    7. '[max' → logprob: -7.663249492645264
    8. 'flex' → logprob: -8.788249969482422
    9. ' transitions' → logprob: -8.913249969482422
    10. 'choices' → logprob: -9.038249969482422

Token 1164: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9617881178855896
    2. '   ' → logprob: -1.2117881774902344
    3. ' =' → logprob: -1.4617881774902344
    4. '       ' → logprob: -2.5867881774902344
    5. 'ans' → logprob: -5.336788177490234
    6. ':
' → logprob: -5.961788177490234
    7. '=
' → logprob: -6.086788177490234
    8. ' ans' → logprob: -7.211788177490234
    9. ':' → logprob: -7.461788177490234
    10. ',' → logprob: -8.211788177490234

Token 1165: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20744484663009644
    2. 'ans' → logprob: -1.9574449062347412
    3. ' ans' → logprob: -3.082444906234741
    4. '	ans' → logprob: -8.58244514465332
    5. '(ans' → logprob: -10.33244514465332
    6. ' for' → logprob: -11.33244514465332
    7. '       ' → logprob: -11.33244514465332
    8. '   ' → logprob: -11.95744514465332
    9. 'for' → logprob: -12.08244514465332
    10. 'max' → logprob: -12.08244514465332

Token 1166: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0020266619976609945
    2. 'max' → logprob: -6.502026557922363
    3. ' ans' → logprob: -7.752026557922363
    4. '   ' → logprob: -9.502026557922363
    5. 'for' → logprob: -12.002026557922363
    6. '(ans' → logprob: -12.252026557922363
    7. 'answer' → logprob: -12.502026557922363
    8. 'dp' → logprob: -13.502026557922363
    9. ' max' → logprob: -13.752026557922363
    10. '
' → logprob: -14.002026557922363

Token 1167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868803381919861
    2. ' =' → logprob: -1.1368803977966309
    3. '   ' → logprob: -12.761879920959473
    4. '=
' → logprob: -12.886879920959473
    5. '=max' → logprob: -13.011879920959473
    6. '[' → logprob: -14.136879920959473
    7. ' =
' → logprob: -15.386879920959473
    8. '	' → logprob: -15.511879920959473
    9. 'max' → logprob: -15.886879920959473
    10. '    ' → logprob: -16.38688087463379

Token 1168: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10020915418863297
    2. ' max' → logprob: -2.3502092361450195
    3. '   ' → logprob: -13.47520923614502
    4. '0' → logprob: -15.10020923614502
    5. ' ' → logprob: -15.22520923614502
    6. '(max' → logprob: -15.72520923614502
    7. '	max' → logprob: -15.85020923614502
    8. '=max' → logprob: -15.97520923614502
    9. '  ' → logprob: -17.100208282470703
    10. '[max' → logprob: -17.600208282470703

Token 1169: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0020776940509676933
    2. '(dp' → logprob: -6.627077579498291
    3. '(
' → logprob: -7.877077579498291
    4. '(' → logprob: -8.25207805633545
    5. 'max' → logprob: -9.50207805633545
    6. '(ans' → logprob: -10.50207805633545
    7. 'dp' → logprob: -13.00207805633545
    8. '([' → logprob: -13.12707805633545
    9. '(*' → logprob: -13.25207805633545
    10. '=max' → logprob: -14.00207805633545

Token 1170: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.007001178339123726
    2. 'dp' → logprob: -5.0070013999938965
    3. '(max' → logprob: -8.257000923156738
    4. 'max' → logprob: -10.882000923156738
    5. '(' → logprob: -12.382000923156738
    6. ' dp' → logprob: -13.257000923156738
    7. '(
' → logprob: -13.882000923156738
    8. '([' → logprob: -14.882000923156738
    9. '	dp' → logprob: -15.757000923156738
    10. '_dp' → logprob: -17.257001876831055

Token 1171: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.005245022010058165
    2. 'n' → logprob: -5.255245208740234
    3. '```' → logprob: -12.005245208740234
    4. '[' → logprob: -13.130245208740234
    5. '(n' → logprob: -13.505245208740234
    6. '[
' → logprob: -14.380245208740234
    7. '[i' → logprob: -15.255245208740234
    8. '``' → logprob: -15.380245208740234
    9. '   ' → logprob: -16.005245208740234
    10. '
' → logprob: -16.130245208740234

Token 1172: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2826777696609497
    2. '][' → logprob: -1.5326777696609497
    3. ')[' → logprob: -3.53267765045166
    4. '   ' → logprob: -7.90767765045166
    5. '       ' → logprob: -8.15767765045166
    6. ')' → logprob: -9.90767765045166
    7. ')][' → logprob: -9.90767765045166
    8. '```' → logprob: -10.15767765045166
    9. '[][' → logprob: -10.28267765045166
    10. '[j' → logprob: -10.40767765045166

Token 1173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.931259036064148
    2. 'j' → logprob: -1.306259036064148
    3. '2' → logprob: -1.681259036064148
    4. '[' → logprob: -2.5562591552734375
    5. '3' → logprob: -3.4312591552734375
    6. '1' → logprob: -3.8062591552734375
    7. '[j' → logprob: -4.1812591552734375
    8. 'range' → logprob: -6.9312591552734375
    9. 'i' → logprob: -8.681259155273438
    10. '[i' → logprob: -9.556259155273438

Token 1174: ']),' (ID: 19560)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.135608971118927
    2. '[' → logprob: -2.5106089115142822
    3. ')[' → logprob: -4.260609149932861
    4. '])' → logprob: -4.635609149932861
    5. '])+' → logprob: -4.760609149932861
    6. ']),' → logprob: -5.010609149932861
    7. '])[' → logprob: -5.760609149932861
    8. ')][' → logprob: -7.010609149932861
    9. '[n' → logprob: -7.635609149932861
    10. '   ' → logprob: -8.510608673095703

Token 1175: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8165512681007385
    2. 'dp' → logprob: -0.9415512681007385
    3. ' max' → logprob: -2.0665512084960938
    4. ' dp' → logprob: -3.1915512084960938
    5. '   ' → logprob: -8.941551208496094
    6. '       ' → logprob: -10.066551208496094
    7. '(dp' → logprob: -10.566551208496094
    8. '    ' → logprob: -10.941551208496094
    9. ' ' → logprob: -11.191551208496094
    10. '           ' → logprob: -11.316551208496094

Token 1176: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0019381542224436998
    2. 'dp' → logprob: -6.251938343048096
    3. '(max' → logprob: -12.501937866210938
    4. ' dp' → logprob: -13.001937866210938
    5. '(' → logprob: -13.626937866210938
    6. '(
' → logprob: -14.126937866210938
    7. '([' → logprob: -14.251937866210938
    8. 'max' → logprob: -14.251937866210938
    9. '	dp' → logprob: -15.376937866210938
    10. '_dp' → logprob: -15.876937866210938

Token 1177: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.1782583391759545e-05
    2. 'n' → logprob: -10.500031471252441
    3. 'dp' → logprob: -13.000031471252441
    4. '(n' → logprob: -13.625031471252441
    5. '   ' → logprob: -15.625031471252441
    6. '```' → logprob: -15.875031471252441
    7. '
' → logprob: -16.000032424926758
    8. '``' → logprob: -16.625032424926758
    9. '[' → logprob: -16.625032424926758
    10. '[
' → logprob: -17.500032424926758

Token 1178: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08076076209545135
    2. '][' → logprob: -2.5807607173919678
    3. ')[' → logprob: -6.455760955810547
    4. '   ' → logprob: -8.955760955810547
    5. '       ' → logprob: -9.830760955810547
    6. '[n' → logprob: -10.455760955810547
    7. '>[' → logprob: -10.705760955810547
    8. '           ' → logprob: -12.080760955810547
    9. '}[' → logprob: -12.080760955810547
    10. '1' → logprob: -12.205760955810547

Token 1179: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1986076831817627
    2. '1' → logprob: -2.0736076831817627
    3. '[' → logprob: -3.1986076831817627
    4. '3' → logprob: -4.323607444763184
    5. '(' → logprob: -9.198607444763184
    6. '   ' → logprob: -9.948607444763184
    7. 'range' → logprob: -10.073607444763184
    8. '0' → logprob: -10.198607444763184
    9. '
' → logprob: -10.823607444763184
    10. '{' → logprob: -10.948607444763184

Token 1180: ']),' (ID: 19560)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015517598949372768
    2. '[' → logprob: -7.126551628112793
    3. '])' → logprob: -7.501551628112793
    4. ']' → logprob: -9.126551628112793
    5. '])[' → logprob: -10.126551628112793
    6. ')[' → logprob: -11.001551628112793
    7. ')][' → logprob: -11.501551628112793
    8. ']),' → logprob: -12.751551628112793
    9. '   ' → logprob: -13.126551628112793
    10. '1' → logprob: -13.126551628112793

Token 1181: ' dp' (ID: 21546)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.702576220035553
    2. 'max' → logprob: -0.702576220035553
    3. 'dp' → logprob: -5.202576160430908
    4. ' dp' → logprob: -5.577576160430908
    5. '       ' → logprob: -10.577576637268066
    6. '    ' → logprob: -10.827576637268066
    7. '   ' → logprob: -11.452576637268066
    8. '      ' → logprob: -12.202576637268066
    9. '           ' → logprob: -12.202576637268066
    10. '        ' → logprob: -12.202576637268066

Token 1182: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.735893965815194e-05
    2. 'n' → logprob: -11.250017166137695
    3. '[' → logprob: -12.875017166137695
    4. '```' → logprob: -13.625017166137695
    5. '``' → logprob: -16.250017166137695
    6. '(n' → logprob: -16.500017166137695
    7. '   ' → logprob: -16.875017166137695
    8. ' [' → logprob: -17.000017166137695
    9. ')[' → logprob: -17.125017166137695
    10. '_n' → logprob: -17.250017166137695

Token 1183: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20433259010314941
    2. '[n' → logprob: -1.7043325901031494
    3. 'n' → logprob: -6.57933235168457
    4. '[' → logprob: -6.82933235168457
    5. '   ' → logprob: -8.20433235168457
    6. ')[' → logprob: -9.82933235168457
    7. ' ][' → logprob: -11.07933235168457
    8. '```' → logprob: -11.07933235168457
    9. ']' → logprob: -11.20433235168457
    10. '[][' → logprob: -11.20433235168457

Token 1184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01461753435432911
    2. '3' → logprob: -4.264617443084717
    3. '1' → logprob: -8.139617919921875
    4. 'n' → logprob: -9.264617919921875
    5. '0' → logprob: -10.139617919921875
    6. '[' → logprob: -10.889617919921875
    7. '[n' → logprob: -12.389617919921875
    8. '   ' → logprob: -13.514617919921875
    9. '
' → logprob: -13.764617919921875
    10. '][' → logprob: -14.077117919921875

Token 1185: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015530710807070136
    2. '[' → logprob: -6.501553058624268
    3. ']' → logprob: -11.126553535461426
    4. ')[' → logprob: -11.126553535461426
    5. ' ][' → logprob: -12.001553535461426
    6. '   ' → logprob: -12.876553535461426
    7. '])' → logprob: -13.001553535461426
    8. ')][' → logprob: -13.126553535461426
    9. '1' → logprob: -13.376553535461426
    10. '])[' → logprob: -13.626553535461426

Token 1186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08897916227579117
    2. '0' → logprob: -2.4639792442321777
    3. ' ' → logprob: -11.33897876739502
    4. '   ' → logprob: -11.96397876739502
    5. ']' → logprob: -12.33897876739502
    6. '[' → logprob: -12.58897876739502
    7. '][' → logprob: -12.96397876739502
    8. '```' → logprob: -13.33897876739502
    9. '])' → logprob: -13.58897876739502
    10. 'max' → logprob: -13.83897876739502

Token 1187: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06441032141447067
    2. ')' → logprob: -2.8144102096557617
    3. '])
' → logprob: -7.314410209655762
    4. ')+' → logprob: -7.564410209655762
    5. ')])' → logprob: -8.189410209655762
    6. '))' → logprob: -8.439410209655762
    7. ',' → logprob: -8.564410209655762
    8. ']+' → logprob: -8.939410209655762
    9. '+' → logprob: -8.939410209655762
    10. ']' → logprob: -9.439410209655762

Token 1188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.465722918510437
    2. 'return' → logprob: -1.215722918510437
    3. '```' → logprob: -2.8407230377197266
    4. ')' → logprob: -4.965723037719727
    5. ')
' → logprob: -6.090723037719727
    6. '
' → logprob: -6.340723037719727
    7. 'if' → logprob: -6.715723037719727
    8. ' return' → logprob: -6.840723037719727
    9. '    
' → logprob: -7.340723037719727
    10. 'print' → logprob: -7.465723037719727

Token 1189: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.025821316987276077
    2. 'print' → logprob: -3.9008212089538574
    3. '   ' → logprob: -5.650821208953857
    4. '```' → logprob: -7.025821208953857
    5. 'ans' → logprob: -7.650821208953857
    6. ' return' → logprob: -8.775821685791016
    7. 'if' → logprob: -8.900821685791016
    8. '
' → logprob: -10.275821685791016
    9. 'for' → logprob: -10.525821685791016
    10. '``' → logprob: -11.150821685791016

Token 1190: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.36574100604048e-06
    2. 'return' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '```' → logprob: -15.250004768371582
    5. ' print' → logprob: -16.125003814697266
    6. 'for' → logprob: -17.500003814697266
    7. '#' → logprob: -19.125003814697266
    8. 'if' → logprob: -19.250003814697266
    9. '
' → logprob: -19.375003814697266
    10. '    
' → logprob: -20.500003814697266

Token 1191: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.16066743433475494
    2. 'icher' → logprob: -2.0356674194335938
    3. 'f' → logprob: -5.160667419433594
    4. 'fic' → logprob: -5.535667419433594
    5. '#' → logprob: -5.660667419433594
    6. 'ichage' → logprob: -6.160667419433594
    7. '   ' → logprob: -6.285667419433594
    8. 'ic' → logprob: -8.285667419433594
    9. 'cher' → logprob: -9.660667419433594
    10. 'che' → logprob: -10.035667419433594

Token 1192: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0002913678181357682
    2. 'ans' → logprob: -8.75029182434082
    3. '   ' → logprob: -9.25029182434082
    4. '(max' → logprob: -10.87529182434082
    5. '(' → logprob: -11.25029182434082
    6. '(dp' → logprob: -13.12529182434082
    7. 'max' → logprob: -13.87529182434082
    8. '()
' → logprob: -14.12529182434082
    9. '()' → logprob: -14.37529182434082
    10. 'print' → logprob: -15.75029182434082

Token 1193: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2539530098438263
    2. '(ans' → logprob: -1.628952980041504
    3. 'result' → logprob: -3.628952980041504
    4. 'rés' → logprob: -7.128952980041504
    5. 'answer' → logprob: -8.003952980041504
    6. ' résultat' → logprob: -9.003952980041504
    7. 'res' → logprob: -9.253952980041504
    8. ' ans' → logprob: -9.503952980041504
    9. '   ' → logprob: -10.003952980041504
    10. 'max' → logprob: -10.128952980041504

Token 1194: ' optimal' (ID: 24174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00409015454351902
    2. 'print' → logprob: -5.504090309143066
    3. '```' → logprob: -11.629090309143066
    4. '
' → logprob: -13.504090309143066
    5. ' print' → logprob: -13.754090309143066
    6. '    
' → logprob: -15.004090309143066
    7. '	print' → logprob: -17.12908935546875
    8. '``' → logprob: -17.87908935546875
    9. '       ' → logprob: -18.37908935546875
    10. '(print' → logprob: -19.50408935546875

Token 1195: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1002294272184372
    2. 'print' → logprob: -2.350229501724243
    3. '```' → logprob: -11.350229263305664
    4. ' print' → logprob: -11.475229263305664
    5. '	print' → logprob: -15.350229263305664
    6. '
' → logprob: -15.475229263305664
    7. '(print' → logprob: -16.100229263305664
    8. '``' → logprob: -17.350229263305664
    9. '    
' → logprob: -17.350229263305664
    10. '       ' → logprob: -17.850229263305664

Token 1196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139933943748474
    2. 'print' → logprob: -1.3139934539794922
    3. '```' → logprob: -7.313993453979492
    4. '(print' → logprob: -10.063993453979492
    5. '(' → logprob: -11.438993453979492
    6. ' print' → logprob: -12.063993453979492
    7. '``' → logprob: -12.938993453979492
    8. '
' → logprob: -13.813993453979492
    9. '(ans' → logprob: -13.813993453979492
    10. '`' → logprob: -14.563993453979492

Token 1197: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000215457082958892
    2. '   ' → logprob: -8.500215530395508
    3. '```' → logprob: -11.500215530395508
    4. ' print' → logprob: -13.250215530395508
    5. '``' → logprob: -18.625215530395508
    6. '`' → logprob: -19.875215530395508
    7. '
' → logprob: -20.250215530395508
    8. '	print' → logprob: -21.250215530395508
    9. '    
' → logprob: -22.500215530395508
    10. '(print' → logprob: -23.125215530395508

Token 1198: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.07137098908424377
    2. '(max' → logprob: -2.821371078491211
    3. '(' → logprob: -4.696371078491211
    4. '(dp' → logprob: -9.196371078491211
    5. '()' → logprob: -9.946371078491211
    6. '(
' → logprob: -10.196371078491211
    7. 'ans' → logprob: -11.446371078491211
    8. '(sum' → logprob: -11.696371078491211
    9. 'max' → logprob: -12.071371078491211
    10. ' (' → logprob: -12.321371078491211

Token 1199: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '())' → logprob: -14.000001907348633
    3. ' )' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.500001907348633
    5. ')
' → logprob: -15.750001907348633
    6. '()' → logprob: -15.875001907348633
    7. '))' → logprob: -16.125001907348633
    8. ')`' → logprob: -16.875001907348633
    9. '')' → logprob: -17.750001907348633
    10. '`)' → logprob: -17.750001907348633

Token 1200: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1201: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1202: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.042817264795303345
    2. 'max' → logprob: -3.6678173542022705
    3. '#' → logprob: -5.167817115783691
    4. 'le' → logprob: -5.417817115783691
    5. 'def' → logprob: -6.042817115783691
    6. 'e' → logprob: -6.792817115783691
    7. '_max' → logprob: -7.792817115783691
    8. 'ly' → logprob: -7.917817115783691
    9. ' max' → logprob: -8.167817115783691
    10. 'ar' → logprob: -8.292817115783691

Token 1203: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13996677100658417
    2. '(max' → logprob: -2.5149667263031006
    3. 'def' → logprob: -3.5149667263031006
    4. '()' → logprob: -4.13996696472168
    5. '(' → logprob: -6.01496696472168
    6. '(
' → logprob: -7.13996696472168
    7. ' max' → logprob: -7.76496696472168
    8. '()
' → logprob: -8.01496696472168
    9. '```' → logprob: -10.38996696472168
    10. '=max' → logprob: -11.01496696472168

Token 1204: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2664456789934775e-06
    2. ' max' → logprob: -13.750000953674316
    3. 'def' → logprob: -15.625000953674316
    4. '(max' → logprob: -19.500001907348633
    5. '```' → logprob: -20.375001907348633
    6. '
' → logprob: -21.000001907348633
    7. '[max' → logprob: -21.250001907348633
    8. 'the' → logprob: -22.125001907348633
    9. 'ma' → logprob: -22.125001907348633
    10. '__' → logprob: -22.375001907348633

Token 1205: ' fonction' (ID: 17610)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005701723508536816
    2. 'def' → logprob: -5.255701541900635
    3. 'function' → logprob: -8.380702018737793
    4. 'fonction' → logprob: -9.630702018737793
    5. '```' → logprob: -9.630702018737793
    6. 'main' → logprob: -10.255702018737793
    7. 'if' → logprob: -10.755702018737793
    8. '
' → logprob: -11.255702018737793
    9. 'code' → logprob: -11.380702018737793
    10. ' max' → logprob: -11.630702018737793

Token 1206: ' principale' (ID: 68926)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00034476007567718625
    2. '(max' → logprob: -8.875345230102539
    3. '
' → logprob: -9.250345230102539
    4. '()
' → logprob: -9.875345230102539
    5. 'def' → logprob: -10.000345230102539
    6. '(
' → logprob: -12.375345230102539
    7. '```' → logprob: -12.750345230102539
    8. ' max' → logprob: -13.000345230102539
    9. '()' → logprob: -14.250345230102539
    10. '`
' → logprob: -14.875345230102539

Token 1207: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00595427630469203
    2. '(max' → logprob: -5.880954265594482
    3. '
' → logprob: -6.255954265594482
    4. '()' → logprob: -7.130954265594482
    5. '()
' → logprob: -8.88095474243164
    6. '```' → logprob: -9.00595474243164
    7. 'def' → logprob: -9.63095474243164
    8. ' max' → logprob: -10.25595474243164
    9. '(
' → logprob: -10.50595474243164
    10. '<|end|>' → logprob: -11.38095474243164

Token 1208: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.75
    3. ' max' → logprob: -17.875
    4. '``' → logprob: -19.375
    5. '[max' → logprob: -20.25
    6. '(max' → logprob: -20.75
    7. 'def' → logprob: -20.875
    8. '
' → logprob: -21.5
    9. '	max' → logprob: -22.625
    10. '_max' → logprob: -22.75

Token 1209: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00010413920972496271
    2. '_' → logprob: -9.250103950500488
    3. '_max' → logprob: -12.375103950500488
    4. '_s' → logprob: -12.750103950500488
    5. 'sum' → logprob: -14.875103950500488
    6. '__' → logprob: -16.250104904174805
    7. '_S' → logprob: -16.375104904174805
    8. '_SUM' → logprob: -16.500104904174805
    9. ' _' → logprob: -16.875104904174805
    10. '_score' → logprob: -17.000104904174805

Token 1210: '_al' (ID: 18493)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.166338137816638e-05
    2. '_al' → logprob: -10.375031471252441
    3. '_' → logprob: -15.250031471252441
    4. 'sum' → logprob: -15.750031471252441
    5. '_s' → logprob: -17.250032424926758
    6. '_sub' → logprob: -17.750032424926758
    7. 'Sum' → logprob: -18.250032424926758
    8. '\' → logprob: -18.375032424926758
    9. '_max' → logprob: -18.750032424926758
    10. 'al' → logprob: -18.875032424926758

Token 1211: 'tern' (ID: 1298)
  Prédit: 'tern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tern' → logprob: -0.00012106612848583609
    2. 'tering' → logprob: -9.375121116638184
    3. 't' → logprob: -11.000121116638184
    4. 'ter' → logprob: -11.125121116638184
    5. 'ternative' → logprob: -14.125121116638184
    6. 'ert' → logprob: -14.125121116638184
    7. '```' → logprob: -14.375121116638184
    8. 'termin' → logprob: -15.000121116638184
    9. 'ternate' → logprob: -15.000121116638184
    10. '`' → logprob: -15.500121116638184

Token 1212: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -8.137130498653278e-05
    2. 'uating' → logprob: -10.625081062316895
    3. 'ing' → logprob: -11.375081062316895
    4. 'g' → logprob: -11.500081062316895
    5. 'ATING' → logprob: -11.875081062316895
    6. '_' → logprob: -12.375081062316895
    7. 'ting' → logprob: -12.375081062316895
    8. ' ating' → logprob: -12.500081062316895
    9. 'atig' → logprob: -13.000081062316895
    10. 'uting' → logprob: -13.000081062316895

Token 1213: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00016873658751137555
    2. '_' → logprob: -8.750168800354004
    3. '_sum' → logprob: -12.250168800354004
    4. '_sequence' → logprob: -12.375168800354004
    5. '_s' → logprob: -14.125168800354004
    6. '_seq' → logprob: -15.875168800354004
    7. '_sn' → logprob: -16.500167846679688
    8. '_subset' → logprob: -16.625167846679688
    9. '_sequences' → logprob: -16.750167846679688
    10. '_al' → logprob: -16.750167846679688

Token 1214: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.00026181264547631145
    2. 'quence' → logprob: -8.250262260437012
    3. '_sequence' → logprob: -15.250262260437012
    4. 'e' → logprob: -15.625262260437012
    5. '(sequence' → logprob: -16.125261306762695
    6. 'se' → logprob: -16.250261306762695
    7. '.sequence' → logprob: -18.125261306762695
    8. 'quences' → logprob: -18.750261306762695
    9. 'sequ' → logprob: -18.750261306762695
    10. 'QUENCE' → logprob: -19.750261306762695

Token 1215: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004240212496370077
    2. '(' → logprob: -5.504240036010742
    3. '()
' → logprob: -8.879240036010742
    4. '```' → logprob: -12.379240036010742
    5. ' ()' → logprob: -12.504240036010742
    6. '()`' → logprob: -12.754240036010742
    7. '#' → logprob: -13.129240036010742
    8. '()

' → logprob: -13.629240036010742
    9. '()\' → logprob: -13.754240036010742
    10. '(
' → logprob: -14.004240036010742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1213
Tokens correctement prédits (1ère position, stricte): 484
Tokens correctement prédits (1ère position, avec adaptation): 502
Tokens correctement prédits (top 10): 842
Précision stricte (1ère position): 39.90%
Précision adaptée (1ère position): 41.38%
Précision (top 10): 69.41%
================================================================================
