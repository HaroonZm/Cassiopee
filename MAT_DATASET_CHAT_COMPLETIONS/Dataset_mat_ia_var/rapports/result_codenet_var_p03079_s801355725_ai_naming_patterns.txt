================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_values_list = list(map(int, input().split()))
value_first = input_values_list[0]
value_second = input_values_list[1]
value_third = input_values_list[2]

if value_first == value_second and value_first == value_third:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_values' (ID: 20393)
  → Token d'amorce (pas de prédiction)

Token 2: '_list' (ID: 4162)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08329644799232483
    2. '.' → logprob: -2.583296537399292
    3. '_' → logprob: -6.208296298980713
    4. '```' → logprob: -6.833296298980713
    5. '[]' → logprob: -8.083296775817871
    6. '.append' → logprob: -8.208296775817871
    7. '=' → logprob: -8.833296775817871
    8. '[:]' → logprob: -9.083296775817871
    9. '[index' → logprob: -9.833296775817871
    10. '[
' → logprob: -10.083296775817871

Token 4: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2115848809480667
    2. '[' → logprob: -2.2115848064422607
    3. ' [' → logprob: -2.7115848064422607
    4. '[]' → logprob: -4.46158504486084
    5. ' ' → logprob: -5.83658504486084
    6. ' [
' → logprob: -9.46158504486084
    7. '[input' → logprob: -9.46158504486084
    8. ' [[]' → logprob: -10.83658504486084
    9. ' ['' → logprob: -11.46158504486084
    10. ' [

' → logprob: -11.46158504486084

Token 5: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013369619846343994
    2. '[' → logprob: -5.638369560241699
    3. '_' → logprob: -5.763369560241699
    4. '```' → logprob: -5.888369560241699
    5. '(input' → logprob: -6.888369560241699
    6. '[(' → logprob: -7.388369560241699
    7. '_input' → logprob: -7.888369560241699
    8. '.' → logprob: -8.1383695602417
    9. '[input' → logprob: -8.3883695602417
    10. '(
' → logprob: -8.5133695602417

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36136394739151
    2. '(lambda' → logprob: -1.3613638877868652
    3. '(input' → logprob: -3.8613638877868652
    4. '(int' → logprob: -4.111363887786865
    5. '(str' → logprob: -4.736363887786865
    6. '(eval' → logprob: -7.611363887786865
    7. '(
' → logprob: -9.861364364624023
    8. ')' → logprob: -9.986364364624023
    9. '(list' → logprob: -9.986364364624023
    10. '(len' → logprob: -10.986364364624023

Token 7: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16413608193397522
    2. '(' → logprob: -2.5391361713409424
    3. ')' → logprob: -3.2891361713409424
    4. '))' → logprob: -3.6641361713409424
    5. '(user' → logprob: -6.164135932922363
    6. '(token' → logprob: -6.414135932922363
    7. 'input' → logprob: -6.539135932922363
    8. '(inputs' → logprob: -7.664135932922363
    9. '<|end|>' → logprob: -7.664135932922363
    10. '`' → logprob: -7.914135932922363

Token 8: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04884827882051468
    2. ' input' → logprob: -3.0488483905792236
    3. '(input' → logprob: -8.923848152160645
    4. ')' → logprob: -9.423848152160645
    5. 'user' → logprob: -10.423848152160645
    6. '_input' → logprob: -13.173848152160645
    7. '=input' → logprob: -13.173848152160645
    8. '))' → logprob: -13.298848152160645
    9. 'token' → logprob: -13.298848152160645
    10. ' user' → logprob: -13.423848152160645

Token 9: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.650242269039154
    2. '(' → logprob: -1.4002423286437988
    3. '()' → logprob: -1.7752423286437988
    4. '))' → logprob: -4.025242328643799
    5. '())' → logprob: -4.025242328643799
    6. '(input' → logprob: -4.525242328643799
    7. '(()' → logprob: -5.275242328643799
    8. '()));' → logprob: -5.900242328643799
    9. ')' → logprob: -6.400242328643799
    10. '())))' → logprob: -6.775242328643799

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019392271060496569
    2. 'strip' → logprob: -6.251939296722412
    3. ' split' → logprob: -12.126938819885254
    4. 'rstrip' → logprob: -12.251938819885254
    5. 'spl' → logprob: -15.751938819885254
    6. '(split' → logprob: -15.876938819885254
    7. ')' → logprob: -16.25193977355957
    8. 'replace' → logprob: -17.75193977355957
    9. 'startswith' → logprob: -18.00193977355957
    10. ' strip' → logprob: -18.25193977355957

Token 11: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.15601232647895813
    2. '))' → logprob: -2.7810122966766357
    3. '())' → logprob: -3.0310122966766357
    4. '())))' → logprob: -4.406012535095215
    5. ')))' → logprob: -4.906012535095215
    6. '()' → logprob: -4.906012535095215
    7. ')' → logprob: -5.156012535095215
    8. '(' → logprob: -6.781012535095215
    9. '```' → logprob: -9.156012535095215
    10. '()));' → logprob: -10.156012535095215

Token 12: 'value' (ID: 1594)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.566266655921936
    2. '[' → logprob: -1.441266655921936
    3. '.' → logprob: -1.691266655921936
    4. '```' → logprob: -4.9412665367126465
    5. '+' → logprob: -7.0662665367126465
    6. ',' → logprob: -7.9412665367126465
    7. '\n' → logprob: -7.9412665367126465
    8. '#' → logprob: -8.066267013549805
    9. '\' → logprob: -8.441267013549805
    10. '(' → logprob: -8.691267013549805

Token 13: '_first' (ID: 29347)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030529392883181572
    2. '_s' → logprob: -3.655529499053955
    3. ')' → logprob: -5.780529499053955
    4. '_' → logprob: -7.780529499053955
    5. '[' → logprob: -8.155529022216797
    6. '[s' → logprob: -8.655529022216797
    7. '_values' → logprob: -9.405529022216797
    8. ')s' → logprob: -10.280529022216797
    9. '_)' → logprob: -10.780529022216797
    10. '[]' → logprob: -11.030529022216797

Token 14: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9764158725738525
    2. '_' → logprob: -1.2264158725738525
    3. ')' → logprob: -1.7264158725738525
    4. '_s' → logprob: -2.2264158725738525
    5. '_values' → logprob: -3.9764158725738525
    6. '_value' → logprob: -4.976415634155273
    7. '[' → logprob: -5.351415634155273
    8. '=' → logprob: -5.726415634155273
    9. ' =' → logprob: -6.101415634155273
    10. '_)' → logprob: -6.226415634155273

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.313291072845459
    2. 'input' → logprob: -1.313291072845459
    3. ' int' → logprob: -11.063291549682617
    4. 'int' → logprob: -11.938291549682617
    5. '0' → logprob: -12.938291549682617
    6. ' ' → logprob: -13.063291549682617
    7. ' value' → logprob: -13.938291549682617
    8. 'value' → logprob: -14.313291549682617
    9. '(input' → logprob: -14.813291549682617
    10. 'in' → logprob: -16.313291549682617

Token 16: '_values' (ID: 20393)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17579813301563263
    2. '_values' → logprob: -1.9257981777191162
    3. '(' → logprob: -4.675797939300537
    4. '_' → logprob: -6.300797939300537
    5. '())' → logprob: -6.550797939300537
    6. '().' → logprob: -7.175797939300537
    7. ')' → logprob: -7.425797939300537
    8. '()`' → logprob: -8.550798416137695
    9. '```' → logprob: -8.800798416137695
    10. '()
' → logprob: -8.800798416137695

Token 17: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0020017961505800486
    2. '_first' → logprob: -6.377001762390137
    3. '_' → logprob: -8.877001762390137
    4. '[_' → logprob: -10.252001762390137
    5. ')_' → logprob: -10.377001762390137
    6. '[' → logprob: -10.627001762390137
    7. '_values' → logprob: -11.252001762390137
    8. ')' → logprob: -11.377001762390137
    9. '[first' → logprob: -11.377001762390137
    10. '_lst' → logprob: -11.627001762390137

Token 18: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00046033994294703007
    2. '[-' → logprob: -8.250460624694824
    3. '[:]' → logprob: -8.875460624694824
    4. '```' → logprob: -11.375460624694824
    5. '[::-' → logprob: -11.625460624694824
    6. '[len' → logprob: -11.875460624694824
    7. '\[' → logprob: -12.125460624694824
    8. '[:' → logprob: -12.250460624694824
    9. ' [' → logprob: -12.500460624694824
    10. '[first' → logprob: -12.875460624694824

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -14.250001907348633
    4. '```' → logprob: -17.625001907348633
    5. ']' → logprob: -20.125001907348633
    6. '۰' → logprob: -20.125001907348633
    7. '2' → logprob: -20.500001907348633
    8. '`' → logprob: -20.625001907348633
    9. ')' → logprob: -20.625001907348633
    10. '-' → logprob: -20.750001907348633

Token 20: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002986024832352996
    2. '])' → logprob: -6.002985954284668
    3. ')' → logprob: -7.752985954284668
    4. ')]' → logprob: -10.002985954284668
    5. ' ]' → logprob: -10.502985954284668
    6. '']' → logprob: -13.002985954284668
    7. '])]' → logprob: -13.752985954284668
    8. '[' → logprob: -14.002985954284668
    9. ')])' → logprob: -14.627985954284668
    10. '+' → logprob: -14.752985954284668

Token 21: 'value' (ID: 1594)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024297719821333885
    2. '*' → logprob: -4.399297714233398
    3. '=' → logprob: -5.399297714233398
    4. '+
' → logprob: -6.024297714233398
    5. '```' → logprob: -7.149297714233398
    6. ' ' → logprob: -7.149297714233398
    7. '
' → logprob: -7.274297714233398
    8. '<|end|>' → logprob: -7.274297714233398
    9. '**' → logprob: -8.274297714233398
    10. ')' → logprob: -8.399297714233398

Token 22: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.14581376314163208
    2. '_second' → logprob: -2.1458137035369873
    3. '_' → logprob: -4.020813941955566
    4. '_s' → logprob: -8.520813941955566
    5. '_f' → logprob: -9.270813941955566
    6. '_last' → logprob: -9.270813941955566
    7. '__' → logprob: -9.270813941955566
    8. '_values' → logprob: -10.395813941955566
    9. '_next' → logprob: -10.395813941955566
    10. 's' → logprob: -10.770813941955566

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7108375430107117
    2. '[' → logprob: -0.8358375430107117
    3. '<|end|>' → logprob: -3.0858376026153564
    4. ']' → logprob: -4.835837364196777
    5. '[]' → logprob: -5.335837364196777
    6. ')' → logprob: -5.460837364196777
    7. ' ' → logprob: -5.710837364196777
    8. ' _' → logprob: -5.710837364196777
    9. ' =' → logprob: -6.335837364196777
    10. '<|end|>' → logprob: -6.710837364196777

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03365849331021309
    2. 'input' → logprob: -3.408658504486084
    3. ' value' → logprob: -11.783658027648926
    4. ' ' → logprob: -12.658658027648926
    5. 'value' → logprob: -13.658658027648926
    6. '_input' → logprob: -16.033658981323242
    7. '=input' → logprob: -16.033658981323242
    8. '0' → logprob: -16.533658981323242
    9. '(input' → logprob: -16.658658981323242
    10. 'Input' → logprob: -16.783658981323242

Token 25: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00014180023572407663
    2. '_value' → logprob: -9.375142097473145
    3. '_vals' → logprob: -10.875142097473145
    4. '_' → logprob: -11.375142097473145
    5. '_val' → logprob: -12.125142097473145
    6. '()' → logprob: -12.250142097473145
    7. '_VALUES' → logprob: -12.750142097473145
    8. 'Values' → logprob: -12.875142097473145
    9. '(' → logprob: -13.125142097473145
    10. '__' → logprob: -13.375142097473145

Token 26: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.070975071750581e-05
    2. '_' → logprob: -10.875030517578125
    3. '[_' → logprob: -12.500030517578125
    4. '_second' → logprob: -13.500030517578125
    5. '_s' → logprob: -13.625030517578125
    6. '_first' → logprob: -13.875030517578125
    7. '_lists' → logprob: -14.000030517578125
    8. '[' → logprob: -14.375030517578125
    9. ' _' → logprob: -14.375030517578125
    10. '_lst' → logprob: -14.500030517578125

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '```' → logprob: -12.375006675720215
    3. '\[' → logprob: -14.375006675720215
    4. '[-' → logprob: -15.125006675720215
    5. '[
' → logprob: -15.500006675720215
    6. '1' → logprob: -15.500006675720215
    7. '[...]' → logprob: -15.750006675720215
    8. '[len' → logprob: -16.0000057220459
    9. ' [' → logprob: -16.0000057220459
    10. '[]' → logprob: -16.1250057220459

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ']' → logprob: -13.125004768371582
    3. '0' → logprob: -13.750004768371582
    4. ' ' → logprob: -14.500004768371582
    5. '])' → logprob: -14.750004768371582
    6. '```' → logprob: -15.500004768371582
    7. '2' → logprob: -16.500003814697266
    8. '-' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.500003814697266
    10. ')' → logprob: -17.875003814697266

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007790570612996817
    2. ')' → logprob: -4.882790565490723
    3. '])' → logprob: -9.007790565490723
    4. ')]' → logprob: -10.382790565490723
    5. '[' → logprob: -10.632790565490723
    6. '']' → logprob: -12.757790565490723
    7. ' ]' → logprob: -13.132790565490723
    8. '```' → logprob: -14.632790565490723
    9. '）' → logprob: -14.882790565490723
    10. '}' → logprob: -15.257790565490723

Token 30: 'value' (ID: 1594)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014726784080266953
    2. '*' → logprob: -5.514726638793945
    3. '+
' → logprob: -5.514726638793945
    4. '
' → logprob: -6.014726638793945
    5. '#' → logprob: -6.389726638793945
    6. 'if' → logprob: -7.389726638793945
    7. ' ' → logprob: -8.014726638793945
    8. '<|end|>' → logprob: -8.139726638793945
    9. '=' → logprob: -8.639726638793945
    10. '-' → logprob: -8.889726638793945

Token 31: '_th' (ID: 16038)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.5504666566848755
    2. '_first' → logprob: -1.1754666566848755
    3. '_' → logprob: -2.175466537475586
    4. '__' → logprob: -7.925466537475586
    5. '_four' → logprob: -8.675466537475586
    6. '_f' → logprob: -9.550466537475586
    7. '```' → logprob: -9.550466537475586
    8. '___' → logprob: -9.800466537475586
    9. '_First' → logprob: -10.050466537475586
    10. '_s' → logprob: -10.550466537475586

Token 32: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -1.700132997939363e-05
    2. 'i' → logprob: -11.750017166137695
    3. 'ree' → logprob: -12.625017166137695
    4. 'irds' → logprob: -12.875017166137695
    5. '_' → logprob: -13.625017166137695
    6. '```' → logprob: -14.375017166137695
    7. ' ' → logprob: -14.750017166137695
    8. 'ir' → logprob: -15.250017166137695
    9. '__' → logprob: -15.500017166137695
    10. 'rid' → logprob: -16.000017166137695

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12202353775501251
    2. ' ' → logprob: -2.997023582458496
    3. '_' → logprob: -3.622023582458496
    4. '=' → logprob: -3.872023582458496
    5. ']' → logprob: -5.372023582458496
    6. ')' → logprob: -5.372023582458496
    7. '<|end|>' → logprob: -5.747023582458496
    8. '[' → logprob: -5.997023582458496
    9. ' _' → logprob: -7.122023582458496
    10. ' ]' → logprob: -7.122023582458496

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.011050296947360039
    2. 'input' → logprob: -4.511050224304199
    3. ' value' → logprob: -13.6360502243042
    4. ' ' → logprob: -14.3860502243042
    5. 'value' → logprob: -16.261051177978516
    6. '(input' → logprob: -16.386051177978516
    7. ' int' → logprob: -16.386051177978516
    8. '0' → logprob: -16.386051177978516
    9. '=input' → logprob: -16.386051177978516
    10. '_input' → logprob: -17.261051177978516

Token 35: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.3596958816051483
    2. '_' → logprob: -1.2346959114074707
    3. '_p' → logprob: -5.484695911407471
    4. '_v' → logprob: -6.109695911407471
    5. '_val' → logprob: -6.359695911407471
    6. '_value' → logprob: -6.609695911407471
    7. '_vals' → logprob: -7.484695911407471
    8. '_put' → logprob: -7.984695911407471
    9. '(' → logprob: -8.109695434570312
    10. '_va' → logprob: -9.234695434570312

Token 36: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04190213233232498
    2. '_' → logprob: -3.6669020652770996
    3. '_values' → logprob: -4.7919020652771
    4. '_s' → logprob: -5.7919020652771
    5. '_first' → logprob: -6.1669020652771
    6. '[_' → logprob: -7.5419020652771
    7. '_second' → logprob: -8.041902542114258
    8. '_l' → logprob: -8.541902542114258
    9. '_f' → logprob: -8.666902542114258
    10. '__' → logprob: -9.166902542114258

Token 37: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. '```' → logprob: -12.250008583068848
    3. '2' → logprob: -13.875008583068848
    4. '[
' → logprob: -14.250008583068848
    5. '[-' → logprob: -14.875008583068848
    6. ']' → logprob: -15.125008583068848
    7. '.' → logprob: -15.250008583068848
    8. '[]' → logprob: -15.375008583068848
    9. '[:]' → logprob: -15.375008583068848
    10. '\[' → logprob: -15.375008583068848

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '3' → logprob: -15.625000953674316
    5. '0' → logprob: -15.750000953674316
    6. '```' → logprob: -16.312501907348633
    7. ']' → logprob: -16.750001907348633
    8. ')' → logprob: -17.625001907348633
    9. '-' → logprob: -17.937501907348633
    10. '])' → logprob: -18.250001907348633

Token 39: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02982974983751774
    2. ']' → logprob: -3.529829740524292
    3. '])' → logprob: -10.029829978942871
    4. '[' → logprob: -11.279829978942871
    5. ')]' → logprob: -11.779829978942871
    6. '）' → logprob: -12.529829978942871
    7. '']' → logprob: -12.904829978942871
    8. '')' → logprob: -12.904829978942871
    9. '}' → logprob: -13.154829978942871
    10. ' )' → logprob: -13.779829978942871

Token 40: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43673330545425415
    2. 'i' → logprob: -2.5617332458496094
    3. '+
' → logprob: -2.5617332458496094
    4. '#' → logprob: -2.6867332458496094
    5. '
' → logprob: -2.9367332458496094
    6. 'if' → logprob: -3.8117332458496094
    7. '=' → logprob: -4.061733245849609
    8. '*' → logprob: -4.186733245849609
    9. ',' → logprob: -5.436733245849609
    10. 'a' → logprob: -5.686733245849609

Token 41: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36155322194099426
    2. ' value' → logprob: -1.2365531921386719
    3. 'value' → logprob: -4.361553192138672
    4. ' ' → logprob: -9.111553192138672
    5. '  ' → logprob: -9.736553192138672
    6. '(value' → logprob: -10.111553192138672
    7. ' (' → logprob: -11.236553192138672
    8. ' not' → logprob: -11.861553192138672
    9. '"value' → logprob: -11.986553192138672
    10. '	value' → logprob: -12.236553192138672

Token 42: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.5786365270614624
    2. '_' → logprob: -0.8286365270614624
    3. '_second' → logprob: -6.203636646270752
    4. ' _' → logprob: -7.703636646270752
    5. '_f' → logprob: -8.578636169433594
    6. '_First' → logprob: -11.578636169433594
    7. '__' → logprob: -12.203636169433594
    8. '_th' → logprob: -12.453636169433594
    9. '_four' → logprob: -12.578636169433594
    10. '_FIRST' → logprob: -12.703636169433594

Token 43: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03954613208770752
    2. ' ==' → logprob: -3.914546012878418
    3. ' <' → logprob: -4.414546012878418
    4. ' ' → logprob: -5.414546012878418
    5. '>' → logprob: -7.164546012878418
    6. ' >=' → logprob: -7.289546012878418
    7. ' <=' → logprob: -8.164546012878418
    8. '  ' → logprob: -8.914546012878418
    9. '_' → logprob: -8.914546012878418
    10. ' !=' → logprob: -9.914546012878418

Token 44: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.43596550822257996
    2. 'value' → logprob: -1.0609655380249023
    3. ' ' → logprob: -5.060965538024902
    4. '"value' → logprob: -8.185965538024902
    5. ''value' → logprob: -8.435965538024902
    6. '0' → logprob: -8.435965538024902
    7. '=value' → logprob: -9.810965538024902
    8. '(value' → logprob: -10.685965538024902
    9. '1' → logprob: -10.810965538024902
    10. '=' → logprob: -11.185965538024902

Token 45: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.00614433828741312
    2. '_' → logprob: -5.1311445236206055
    3. '_th' → logprob: -9.006144523620605
    4. '_first' → logprob: -9.881144523620605
    5. ''_' → logprob: -11.381144523620605
    6. '_sec' → logprob: -12.006144523620605
    7. '_s' → logprob: -12.381144523620605
    8. '__' → logprob: -12.631144523620605
    9. '"_' → logprob: -12.756144523620605
    10. ' _' → logprob: -12.881144523620605

Token 46: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5699000954627991
    2. ' :' → logprob: -1.0699000358581543
    3. ' and' → logprob: -2.4449000358581543
    4. 'and' → logprob: -6.069900035858154
    5. ' ' → logprob: -6.319900035858154
    6. ':**' → logprob: -9.194900512695312
    7. ' or' → logprob: -9.944900512695312
    8. '):' → logprob: -10.194900512695312
    9. '<|end|>' → logprob: -10.319900512695312
    10. ' ):' → logprob: -10.319900512695312

Token 47: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.534351646900177
    2. ' ' → logprob: -0.909351646900177
    3. ' ' → logprob: -4.534351825714111
    4. 'value' → logprob: -8.034351348876953
    5. '(value' → logprob: -10.659351348876953
    6. ' not' → logprob: -10.784351348876953
    7. '  ' → logprob: -11.534351348876953
    8. ' ​' → logprob: -12.284351348876953
    9. ' space' → logprob: -12.284351348876953
    10. '"value' → logprob: -12.284351348876953

Token 48: '_first' (ID: 29347)
  Prédit: '_th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -0.024758940562605858
    2. '_second' → logprob: -4.149758815765381
    3. '_first' → logprob: -4.899758815765381
    4. '_' → logprob: -6.774758815765381
    5. '```' → logprob: -10.399759292602539
    6. '_three' → logprob: -11.274759292602539
    7. '_thr' → logprob: -11.774759292602539
    8. ' _' → logprob: -12.149759292602539
    9. '_last' → logprob: -12.149759292602539
    10. ''_' → logprob: -12.524759292602539

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004954916425049305
    2. '==' → logprob: -5.754954814910889
    3. ' ' → logprob: -7.129954814910889
    4. '<|end|>' → logprob: -8.129955291748047
    5. ' >' → logprob: -8.254955291748047
    6. ' !=' → logprob: -8.379955291748047
    7. ' ' → logprob: -10.129955291748047
    8. ' =' → logprob: -10.254955291748047
    9. ' <=' → logprob: -10.379955291748047
    10. '=' → logprob: -10.629955291748047

Token 50: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16022859513759613
    2. 'value' → logprob: -1.9102286100387573
    3. ' ' → logprob: -13.160228729248047
    4. ''value' → logprob: -13.910228729248047
    5. '"value' → logprob: -14.285228729248047
    6. ')value' → logprob: -15.660228729248047
    7. '$value' → logprob: -15.785228729248047
    8. '=value' → logprob: -16.160228729248047
    9. 'alue' → logprob: -16.160228729248047
    10. ' ' → logprob: -16.285228729248047

Token 51: '_th' (ID: 16038)
  Prédit: '_th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -1.1398757123970427e-05
    2. '_' → logprob: -11.875011444091797
    3. '_second' → logprob: -12.625011444091797
    4. ' _' → logprob: -14.750011444091797
    5. '_
' → logprob: -15.375011444091797
    6. '_

' → logprob: -15.750011444091797
    7. '_first' → logprob: -16.375011444091797
    8. '_TH' → logprob: -16.875011444091797
    9. '__' → logprob: -17.000011444091797
    10. '_three' → logprob: -17.000011444091797

Token 52: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -4.008129963040119e-06
    2. 'ir' → logprob: -13.375003814697266
    3. 'i' → logprob: -13.875003814697266
    4. 'third' → logprob: -15.250003814697266
    5. '```' → logprob: -15.250003814697266
    6. '_' → logprob: -15.625003814697266
    7. 'irds' → logprob: -15.875003814697266
    8. 'id' → logprob: -15.875003814697266
    9. 'irdi' → logprob: -16.000003814697266
    10. 'rid' → logprob: -16.125003814697266

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.85366350505501e-05
    2. ' :' → logprob: -9.25009822845459
    3. ':**' → logprob: -13.25009822845459
    4. '):' → logprob: -15.50009822845459
    5. '>:' → logprob: -16.375099182128906
    6. ' and' → logprob: -16.625099182128906
    7. ':
' → logprob: -16.875099182128906
    8. ':return' → logprob: -16.875099182128906
    9. ',:' → logprob: -17.000099182128906
    10. '':'' → logprob: -17.000099182128906

Token 54: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005799620877951384
    2. ' :' → logprob: -5.505799770355225
    3. ':
' → logprob: -6.880799770355225
    4. '   ' → logprob: -7.755799770355225
    5. ' :
' → logprob: -8.755799293518066
    6. ' ' → logprob: -10.630799293518066
    7. '\n' → logprob: -11.255799293518066
    8. '\' → logprob: -11.380799293518066
    9. ',' → logprob: -11.880799293518066
    10. '.' → logprob: -12.005799293518066

Token 55: ' print' (ID: 2123)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4176129400730133
    2. '   ' → logprob: -1.792612910270691
    3. 'print' (adapté à ' print') → logprob: -2.6676130294799805
    4. ' 
' → logprob: -3.5426130294799805
    5. ' print' → logprob: -3.6676130294799805
    6. '    
' → logprob: -4.1676130294799805
    7. ' \' → logprob: -4.5426130294799805
    8. '    ' → logprob: -4.5426130294799805
    9. '\' → logprob: -4.9176130294799805
    10. ' ' → logprob: -6.0426130294799805

Token 56: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03165647014975548
    2. '("("' → logprob: -4.156656265258789
    3. '("' → logprob: -4.281656265258789
    4. '('' → logprob: -6.781656265258789
    5. '(True' → logprob: -7.656656265258789
    6. '("(' → logprob: -10.906656265258789
    7. '("")' → logprob: -11.281656265258789
    8. '("="' → logprob: -11.781656265258789
    9. '("""' → logprob: -12.031656265258789
    10. '(False' → logprob: -12.156656265258789

Token 57: 'Yes' (ID: 13022)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.9926533699035645
    2. 'Equal' → logprob: -1.4926533699035645
    3. 'Yes' → logprob: -1.6176533699035645
    4. 'Three' → logprob: -2.4926533699035645
    5. 'YES' → logprob: -2.7426533699035645
    6. 'equal' → logprob: -4.2426533699035645
    7. '3' → logprob: -4.6176533699035645
    8. 'True' → logprob: -4.8676533699035645
    9. 'Все' → logprob: -5.2426533699035645
    10. 'Equ' → logprob: -5.6176533699035645

Token 58: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00017016702622640878
    2. ')' → logprob: -9.25016975402832
    3. '!")' → logprob: -10.37516975402832
    4. '")
' → logprob: -10.75016975402832
    5. ')")' → logprob: -10.87516975402832
    6. '"' → logprob: -13.37516975402832
    7. ',' → logprob: -14.87516975402832
    8. ' ")' → logprob: -16.12516975402832
    9. '")

' → logprob: -16.50016975402832
    10. '",' → logprob: -16.87516975402832

Token 59: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2628026306629181
    2. 'elif' → logprob: -1.6378026008605957
    3. ' else' → logprob: -3.3878026008605957
    4. ' elif' → logprob: -6.512802600860596
    5. '<|end|>' → logprob: -6.887802600860596
    6. ')' → logprob: -9.137803077697754
    7. '```' → logprob: -9.262803077697754
    8. 'e' → logprob: -10.012803077697754
    9. '
' → logprob: -10.387803077697754
    10. 'el' → logprob: -10.637803077697754

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012368128227535635
    2. ' :' → logprob: -9.000123977661133
    3. ':
' → logprob: -16.500123977661133
    4. ':**' → logprob: -16.500123977661133
    5. ':return' → logprob: -16.625123977661133
    6. ':def' → logprob: -16.875123977661133
    7. '):' → logprob: -17.875123977661133
    8. '():' → logprob: -19.250123977661133
    9. ':`' → logprob: -19.250123977661133
    10. '   ' → logprob: -19.250123977661133

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006535249762237072
    2. '"' → logprob: -6.131535053253174
    3. ' print' → logprob: -6.381535053253174
    4. 'print' → logprob: -6.631535053253174
    5. ' ' → logprob: -7.631535053253174
    6. '\n' → logprob: -8.131535530090332
    7. ' False' → logprob: -8.631535530090332
    8. 'False' → logprob: -9.631535530090332
    9. ' True' → logprob: -9.756535530090332
    10. '    ' → logprob: -9.756535530090332

Token 62: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.19114184379577637
    2. ' print' → logprob: -1.8161418437957764
    3. '\n' → logprob: -4.6911420822143555
    4. '"' → logprob: -6.6911420822143555
    5. '   ' → logprob: -7.5661420822143555
    6. ' 
' → logprob: -9.441142082214355
    7. '"\' → logprob: -9.566142082214355
    8. ' ' → logprob: -9.816142082214355
    9. '    
' → logprob: -10.191142082214355
    10. ' \' → logprob: -10.441142082214355

Token 63: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014756395481526852
    2. '("' → logprob: -4.889756202697754
    3. '("("' → logprob: -5.014756202697754
    4. '("")' → logprob: -7.764756202697754
    5. '('' → logprob: -11.139756202697754
    6. '(""' → logprob: -11.264756202697754
    7. '("""' → logprob: -11.764756202697754
    8. '("(' → logprob: -12.014756202697754
    9. '()' → logprob: -12.264756202697754
    10. '(False' → logprob: -12.264756202697754

Token 64: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0015048631466925144
    2. '"No' → logprob: -6.501504898071289
    3. ' No' → logprob: -13.126504898071289
    4. '"' → logprob: -14.751504898071289
    5. '")' → logprob: -16.00150489807129
    6. 'NO' → logprob: -16.75150489807129
    7. 'N' → logprob: -18.12650489807129
    8. '“No' → logprob: -18.62650489807129
    9. '"N' → logprob: -18.75150489807129
    10. '_No' → logprob: -19.12650489807129

Token 65: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -6.408677290892228e-05
    2. ')' → logprob: -9.7500638961792
    3. ')")' → logprob: -12.1250638961792
    4. '"' → logprob: -15.5000638961792
    5. '")
' → logprob: -16.000064849853516
    6. '!")' → logprob: -18.375064849853516
    7. '}")' → logprob: -18.625064849853516
    8. '')' → logprob: -18.750064849853516
    9. ' ")' → logprob: -19.125064849853516
    10. ')"' → logprob: -19.375064849853516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 63
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 46.03%
Précision adaptée (1ère position): 47.62%
Précision (top 10): 77.78%
================================================================================
