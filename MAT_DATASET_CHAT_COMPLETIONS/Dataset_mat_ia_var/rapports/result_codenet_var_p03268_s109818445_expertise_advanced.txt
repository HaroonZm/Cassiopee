================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
from itertools import product

n, k = map(int, input().split())
mods = Counter(a % k for a in range(1, n + 1))

ans = sum(
    mods[a] * mods[b] * mods[c]
    for a, b, c in product(range(k), repeat=3)
    if (a + b + c) % k == 0
)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '\n' → logprob: -14.000059127807617
    9. '```' → logprob: -14.000059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003792350646108389
    2. '```' → logprob: -7.2537922859191895
    3. 'a' → logprob: -7.5037922859191895
    4. '\n' → logprob: -7.7537922859191895
    5. '(
' → logprob: -7.8787922859191895
    6. '.' → logprob: -8.003792762756348
    7. '\(' → logprob: -8.128792762756348
    8. 'import' → logprob: -8.378792762756348
    9. '\' → logprob: -8.753792762756348
    10. 'newline' → logprob: -8.878792762756348

Token 6: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.641941487789154
    2. ' collections' → logprob: -1.0169415473937988
    3. ' os' → logprob: -3.391941547393799
    4. ' typing' → logprob: -3.391941547393799
    5. ' math' → logprob: -3.641941547393799
    6. ' ' → logprob: -5.141941547393799
    7. ' sys' → logprob: -5.766941547393799
    8. ' re' → logprob: -5.891941547393799
    9. 'collections' → logprob: -6.141941547393799
    10. ' functools' → logprob: -7.391941547393799

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04444058611989021
    2. 'import' → logprob: -3.419440507888794
    3. '.' → logprob: -5.044440746307373
    4. ' .' → logprob: -5.544440746307373
    5. '.import' → logprob: -8.919440269470215
    6. ' ' → logprob: -9.919440269470215
    7. '.groupby' → logprob: -9.919440269470215
    8. '.im' → logprob: -10.419440269470215
    9. '	import' → logprob: -10.669440269470215
    10. ' itertools' → logprob: -10.794440269470215

Token 8: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.4330081939697266
    2. ' group' → logprob: -1.5580081939697266
    3. ' combinations' → logprob: -1.8080081939697266
    4. ' permutations' → logprob: -2.0580081939697266
    5. 'per' → logprob: -2.8080081939697266
    6. 'group' → logprob: -2.8080081939697266
    7. ' cycle' → logprob: -3.5580081939697266
    8. ' chain' → logprob: -3.5580081939697266
    9. 'chain' → logprob: -4.058008193969727
    10. 'cycle' → logprob: -4.183008193969727

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004611695650964975
    2. '(
' → logprob: -5.629611492156982
    3. '\n' → logprob: -7.754611492156982
    4. '\(' → logprob: -8.12961196899414
    5. '\' → logprob: -9.87961196899414
    6. '```' → logprob: -9.87961196899414
    7. 'newline' → logprob: -10.37961196899414
    8. '`' → logprob: -10.50461196899414
    9. 'a' → logprob: -11.12961196899414
    10. 'import' → logprob: -11.37961196899414

Token 10: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021255186293274164
    2. '\(' → logprob: -7.1271257400512695
    3. '(
' → logprob: -7.2521257400512695
    4. '`' → logprob: -9.12712574005127
    5. 'a' → logprob: -9.12712574005127
    6. '\' → logprob: -9.50212574005127
    7. '#' → logprob: -9.62712574005127
    8. '.' → logprob: -9.87712574005127
    9. '\n' → logprob: -10.00212574005127
    10. '```' → logprob: -11.00212574005127

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16589905321598053
    2. ' ' → logprob: -2.7908990383148193
    3. '=' → logprob: -2.9158990383148193
    4. '_' → logprob: -3.4158990383148193
    5. ',' → logprob: -6.665899276733398
    6. ' )' → logprob: -6.790899276733398
    7. '  ' → logprob: -7.665899276733398
    8. ' ,' → logprob: -7.790899276733398
    9. 'u' → logprob: -7.915899276733398
    10. ')' → logprob: -8.790899276733398

Token 12: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9671274423599243
    2. 'k' → logprob: -1.3421274423599243
    3. ' k' → logprob: -1.8421274423599243
    4. ' m' → logprob: -2.2171273231506348
    5. ' ' → logprob: -2.5921273231506348
    6. '"' → logprob: -5.592127323150635
    7. '=' → logprob: -5.717127323150635
    8. ''' → logprob: -5.842127323150635
    9. ' =' → logprob: -6.342127323150635
    10. 'r' → logprob: -7.092127323150635

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017169468337669969
    2. '=' → logprob: -6.3767170906066895
    3. ' ' → logprob: -12.001716613769531
    4. ',' → logprob: -12.001716613769531
    5. ' ,' → logprob: -13.876716613769531
    6. ' =
' → logprob: -14.501716613769531
    7. ')' → logprob: -14.626716613769531
    8. ' =)' → logprob: -15.751716613769531
    9. ' =",' → logprob: -15.876716613769531
    10. '<|end|>' → logprob: -15.876716613769531

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11629010736942291
    2. 'map' → logprob: -2.7412900924682617
    3. ' ' → logprob: -3.2412900924682617
    4. ' input' → logprob: -5.741290092468262
    5. 'input' → logprob: -6.991290092468262
    6. ' int' → logprob: -7.366290092468262
    7. '0' → logprob: -7.491290092468262
    8. 'int' → logprob: -8.116290092468262
    9. '5' → logprob: -8.241290092468262
    10. '10' → logprob: -8.991290092468262

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22784152626991272
    2. '(' → logprob: -1.6028414964675903
    3. '(str' → logprob: -6.602841377258301
    4. 'int' → logprob: -7.477841377258301
    5. '(input' → logprob: -8.2278413772583
    6. '(lambda' → logprob: -8.8528413772583
    7. 'input' → logprob: -11.1028413772583
    8. '<int' → logprob: -11.2278413772583
    9. '[int' → logprob: -11.4778413772583
    10. '(
' → logprob: -11.7278413772583

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11184455454349518
    2. '(' → logprob: -2.861844539642334
    3. ')' → logprob: -3.611844539642334
    4. '(input' → logprob: -5.111844539642334
    5. '<|end|>' → logprob: -5.111844539642334
    6. '(data' → logprob: -6.486844539642334
    7. '(),' → logprob: -6.861844539642334
    8. ',input' → logprob: -7.236844539642334
    9. '```' → logprob: -7.236844539642334
    10. '(token' → logprob: -7.361844539642334

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693987786769867
    2. ' input' → logprob: -2.1269397735595703
    3. '(input' → logprob: -12.12693977355957
    4. ')' → logprob: -12.50193977355957
    5. ',input' → logprob: -13.50193977355957
    6. '=input' → logprob: -14.62693977355957
    7. ' ' → logprob: -14.87693977355957
    8. '	input' → logprob: -15.62693977355957
    9. ' )' → logprob: -15.75193977355957
    10. 'str' → logprob: -16.37693977355957

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7161257266998291
    2. '())' → logprob: -1.466125726699829
    3. '()' → logprob: -1.716125726699829
    4. '(' → logprob: -3.091125726699829
    5. '('' → logprob: -3.091125726699829
    6. ')' → logprob: -4.96612548828125
    7. '());' → logprob: -7.46612548828125
    8. '()))' → logprob: -7.84112548828125
    9. '('').' → logprob: -8.09112548828125
    10. '(()' → logprob: -8.21612548828125

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.371605948312208e-05
    2. 'strip' → logprob: -9.875053405761719
    3. 'rstrip' → logprob: -13.750053405761719
    4. '(split' → logprob: -14.500053405761719
    5. ' split' → logprob: -14.750053405761719
    6. ')' → logprob: -16.00005340576172
    7. 'spl' → logprob: -16.75005340576172
    8. 'read' → logprob: -17.62505340576172
    9. '```' → logprob: -18.37505340576172
    10. '_split' → logprob: -19.62505340576172

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012548504397273064
    2. '))' → logprob: -4.387548446655273
    3. '())' → logprob: -10.887548446655273
    4. '()' → logprob: -11.387548446655273
    5. '),' → logprob: -12.887548446655273
    6. ')`' → logprob: -13.387548446655273
    7. '`)' → logprob: -13.637548446655273
    8. '(' → logprob: -14.012548446655273
    9. '')' → logprob: -14.012548446655273
    10. ')))' → logprob: -14.262548446655273

Token 21: 'mods' (ID: 165035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8491981625556946
    2. '
' → logprob: -1.2241981029510498
    3. ' 
' → logprob: -2.72419810295105
    4. '  
' → logprob: -3.59919810295105
    5. 'a' → logprob: -3.84919810295105
    6. 'tokens' → logprob: -3.97419810295105
    7. 'numbers' → logprob: -4.224198341369629
    8. '\n' → logprob: -4.474198341369629
    9. 'data' → logprob: -4.599198341369629
    10. 'colors' → logprob: -4.599198341369629

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04941610246896744
    2. '=' → logprob: -3.0494160652160645
    3. '[' → logprob: -7.9244160652160645
    4. ' ' → logprob: -8.299416542053223
    5. '_' → logprob: -9.424416542053223
    6. '_counts' → logprob: -10.674416542053223
    7. ']' → logprob: -11.049416542053223
    8. '[:]' → logprob: -11.049416542053223
    9. ')' → logprob: -11.174416542053223
    10. '[]' → logprob: -11.299416542053223

Token 23: ' Counter' (ID: 32251)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1787157505750656
    2. 'range' → logprob: -3.053715705871582
    3. ' [' → logprob: -3.178715705871582
    4. '[]' → logprob: -4.303715705871582
    5. 'list' → logprob: -4.303715705871582
    6. '(range' → logprob: -4.678715705871582
    7. '[k' → logprob: -5.178715705871582
    8. '[(' → logprob: -5.178715705871582
    9. ' range' → logprob: -5.303715705871582
    10. '[i' → logprob: -5.678715705871582

Token 24: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7052388787269592
    2. '()' → logprob: -0.7052388787269592
    3. '([' → logprob: -4.8302388191223145
    4. '(product' → logprob: -6.5802388191223145
    5. '((' → logprob: -6.7052388191223145
    6. '([(' → logprob: -7.2052388191223145
    7. '({' → logprob: -7.8302388191223145
    8. '[(' → logprob: -9.955239295959473
    9. '(list' → logprob: -10.330239295959473
    10. '(range' → logprob: -10.705239295959473

Token 25: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11771683394908905
    2. 's' → logprob: -3.4927167892456055
    3. '[i' → logprob: -3.9927167892456055
    4. ' for' → logprob: -4.4927167892456055
    5. '%' → logprob: -4.4927167892456055
    6. '))' → logprob: -4.6177167892456055
    7. ' )' → logprob: -4.9927167892456055
    8. '[' → logprob: -5.3677167892456055
    9. '[n' → logprob: -5.6177167892456055
    10. ')%' → logprob: -6.3677167892456055

Token 26: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005287596024572849
    2. ' k' → logprob: -5.2552876472473145
    3. 'n' → logprob: -10.380287170410156
    4. 'm' → logprob: -11.880287170410156
    5. ' ' → logprob: -12.380287170410156
    6. '10' → logprob: -13.130287170410156
    7. '100' → logprob: -13.380287170410156
    8. ' n' → logprob: -14.005287170410156
    9. '1' → logprob: -14.255287170410156
    10. ')' → logprob: -14.380287170410156

Token 27: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2031293511390686
    2. 'for' → logprob: -1.7031292915344238
    3. ')' → logprob: -6.453129291534424
    4. ',' → logprob: -9.578129768371582
    5. ' ' → logprob: -10.078129768371582
    6. '	for' → logprob: -12.078129768371582
    7. 'a' → logprob: -12.453129768371582
    8. ' )' → logprob: -12.578129768371582
    9. ' a' → logprob: -13.203129768371582
    10. '),' → logprob: -13.203129768371582

Token 28: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5271564722061157
    2. 'a' → logprob: -0.9021564722061157
    3. '_' → logprob: -6.402156352996826
    4. ' ' → logprob: -7.027156352996826
    5. ' range' → logprob: -7.527156352996826
    6. '_a' → logprob: -7.652156352996826
    7. ' _' → logprob: -8.027156829833984
    8. 'range' → logprob: -9.277156829833984
    9. '	a' → logprob: -11.277156829833984
    10. ' in' → logprob: -11.527156829833984

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0160507932305336
    2. 'in' → logprob: -4.141050815582275
    3. '<|end|>' → logprob: -12.141050338745117
    4. ' ' → logprob: -12.891050338745117
    5. '<|end|>' → logprob: -13.016050338745117
    6. 's' → logprob: -13.391050338745117
    7. ')' → logprob: -14.141050338745117
    8. 'range' → logprob: -14.391050338745117
    9. 'input' → logprob: -14.891050338745117
    10. 'a' → logprob: -14.891050338745117

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39127761125564575
    2. ' range' → logprob: -1.391277551651001
    3. 'map' → logprob: -3.391277551651001
    4. '[' → logprob: -3.766277551651001
    5. ' map' → logprob: -4.76627779006958
    6. ' [' → logprob: -6.01627779006958
    7. '(range' → logprob: -6.14127779006958
    8. '_' → logprob: -6.26627779006958
    9. 'list' → logprob: -6.39127779006958
    10. ')' → logprob: -8.266277313232422

Token 31: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014164448715746403
    2. '(' → logprob: -4.264164447784424
    3. '(k' → logprob: -14.639164924621582
    4. ')' → logprob: -15.639164924621582
    5. 'n' → logprob: -16.139163970947266
    6. ')n' → logprob: -17.014163970947266
    7. ' (' → logprob: -17.514163970947266
    8. '(len' → logprob: -17.514163970947266
    9. '(
' → logprob: -17.764163970947266
    10. '(a' → logprob: -18.014163970947266

Token 32: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03695893660187721
    2. ' n' → logprob: -3.411958932876587
    3. '1' → logprob: -5.786959171295166
    4. ' ' → logprob: -9.786958694458008
    5. '0' → logprob: -10.161958694458008
    6. '   ' → logprob: -10.536958694458008
    7. '10' → logprob: -10.536958694458008
    8. '2' → logprob: -10.661958694458008
    9. '	n' → logprob: -10.911958694458008
    10. ')n' → logprob: -11.536958694458008

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008216609712690115
    2. ' ,' → logprob: -7.500821590423584
    3. ',n' → logprob: -8.250822067260742
    4. ',k' → logprob: -12.875822067260742
    5. 'n' → logprob: -13.000822067260742
    6. '1' → logprob: -13.375822067260742
    7. ' ' → logprob: -14.625822067260742
    8. ',
' → logprob: -15.000822067260742
    9. ',

' → logprob: -15.625822067260742
    10. 'k' → logprob: -16.875822067260742

Token 34: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.693203866481781
    2. ' n' → logprob: -0.693203866481781
    3. '	n' → logprob: -11.318203926086426
    4. ' ' → logprob: -11.568203926086426
    5. '10' → logprob: -11.693203926086426
    6. '1' → logprob: -12.443203926086426
    7. ')n' → logprob: -12.693203926086426
    8. 'k' → logprob: -12.943203926086426
    9. '2' → logprob: -12.943203926086426
    10. '100' → logprob: -13.193203926086426

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0181526318192482
    2. ' +' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.768152236938477
    4. '1' → logprob: -14.893152236938477
    5. '```' → logprob: -15.518152236938477
    6. '2' → logprob: -15.768152236938477
    7. ' ' → logprob: -15.893152236938477
    8. ')+' → logprob: -16.018152236938477
    9. '+
' → logprob: -16.268152236938477
    10. '＋' → logprob: -16.393152236938477

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234475247561932
    2. ' ' → logprob: -5.255234241485596
    3. '```' → logprob: -16.005233764648438
    4. '   ' → logprob: -16.130233764648438
    5. '2' → logprob: -16.130233764648438
    6. ')' → logprob: -16.317733764648438
    7. ' ' → logprob: -16.817733764648438
    8. '  ' → logprob: -17.380233764648438
    9. ' n' → logprob: -17.817733764648438
    10. '۱' → logprob: -17.942733764648438

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.718606891809031e-05
    2. ' ' → logprob: -9.625066757202148
    3. '2' → logprob: -15.687566757202148
    4. 'n' → logprob: -15.875066757202148
    5. '```' → logprob: -16.06256675720215
    6. ')' → logprob: -16.37506675720215
    7. ' n' → logprob: -16.68756675720215
    8. '  ' → logprob: -16.81256675720215
    9. '۱' → logprob: -16.93756675720215
    10. '   ' → logprob: -17.06256675720215

Token 38: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3869280219078064
    2. ')' → logprob: -1.1369280815124512
    3. ')))' → logprob: -9.886927604675293
    4. '),' → logprob: -13.511927604675293
    5. ' ))' → logprob: -13.636927604675293
    6. ')
' → logprob: -13.636927604675293
    7. '))
' → logprob: -13.886927604675293
    8. ' )' → logprob: -15.136927604675293
    9. ').' → logprob: -15.886927604675293
    10. ')`' → logprob: -16.26192855834961

Token 39: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3439968228340149
    2. '
' → logprob: -1.8439967632293701
    3. '\n' → logprob: -3.34399676322937
    4. 'for' → logprob: -3.96899676322937
    5. ' ' → logprob: -4.093997001647949
    6. '*' → logprob: -4.468997001647949
    7. '(' → logprob: -5.093997001647949
    8. 's' → logprob: -5.218997001647949
    9. '#' → logprob: -5.218997001647949
    10. 'result' → logprob: -5.343997001647949

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007776506245136261
    2. '=' → logprob: -4.882776737213135
    3. ' +=' → logprob: -8.757776260375977
    4. ' ' → logprob: -12.882776260375977
    5. ')' → logprob: -13.257776260375977
    6. '+=' → logprob: -13.882776260375977
    7. '_' → logprob: -14.007776260375977
    8. 's' → logprob: -14.007776260375977
    9. ' =)' → logprob: -14.257776260375977
    10. ',' → logprob: -14.507776260375977

Token 41: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014752281829714775
    2. ' ' → logprob: -4.514752388000488
    3. '1' → logprob: -5.764752388000488
    4. 'sum' → logprob: -8.139752388000488
    5. ' sum' → logprob: -8.639752388000488
    6. '(' → logprob: -10.764752388000488
    7. 'k' → logprob: -11.264752388000488
    8. ' k' → logprob: -11.389752388000488
    9. '[' → logprob: -12.139752388000488
    10. '3' → logprob: -12.389752388000488

Token 42: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6383645534515381
    2. '(product' → logprob: -1.263364553451538
    3. '((' → logprob: -2.388364553451538
    4. '(mod' → logprob: -3.763364553451538
    5. '(a' → logprob: -3.888364553451538
    6. '(value' → logprob: -4.888364791870117
    7. '(p' → logprob: -4.888364791870117
    8. '(m' → logprob: -5.138364791870117
    9. '(x' → logprob: -5.138364791870117
    10. '(i' → logprob: -5.513364791870117

Token 43: '   ' (ID: 271)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.6688473224639893
    2. '(' → logprob: -1.9188473224639893
    3. 'v' → logprob: -2.2938473224639893
    4. '1' → logprob: -2.2938473224639893
    5. '(v' → logprob: -3.6688473224639893
    6. '(mod' → logprob: -4.16884708404541
    7. 'prod' → logprob: -4.54384708404541
    8. '   ' → logprob: -5.16884708404541
    9. '(k' → logprob: -5.16884708404541
    10. 'count' → logprob: -5.29384708404541

Token 44: ' mods' (ID: 60449)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.9842852354049683
    2. 'mods' (adapté à ' mods') → logprob: -1.3592852354049683
    3. 'product' → logprob: -2.984285354614258
    4. '1' → logprob: -3.234285354614258
    5. '   ' → logprob: -3.359285354614258
    6. 'k' → logprob: -3.359285354614258
    7. 'v' → logprob: -3.609285354614258
    8. '(' → logprob: -3.609285354614258
    9. 'Counter' → logprob: -3.859285354614258
    10. '(prod' → logprob: -4.109285354614258

Token 45: '[a' (ID: 32035)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9815895557403564
    2. '[c' → logprob: -1.3565895557403564
    3. '[x' → logprob: -2.3565895557403564
    4. '[v' → logprob: -2.8565895557403564
    5. '[m' → logprob: -3.1065895557403564
    6. '[a' → logprob: -3.4815895557403564
    7. '.values' → logprob: -3.7315895557403564
    8. ')' → logprob: -3.7315895557403564
    9. '[key' → logprob: -4.106589317321777
    10. '[p' → logprob: -4.481589317321777

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010920838452875614
    2. ']*' → logprob: -4.635921001434326
    3. ',' → logprob: -8.135920524597168
    4. ' ]' → logprob: -8.635920524597168
    5. '   ' → logprob: -9.260920524597168
    6. ' +' → logprob: -9.260920524597168
    7. ' *' → logprob: -9.385920524597168
    8. '*' → logprob: -9.510920524597168
    9. '+' → logprob: -9.510920524597168
    10. '])' → logprob: -9.885920524597168

Token 47: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09645858407020569
    2. '*' → logprob: -2.971458673477173
    3. ' for' → logprob: -3.596458673477173
    4. 'for' → logprob: -4.721458435058594
    5. ')' → logprob: -6.846458435058594
    6. '   ' → logprob: -6.971458435058594
    7. ']' → logprob: -7.221458435058594
    8. ',' → logprob: -7.346458435058594
    9. ' ' → logprob: -7.721458435058594
    10. '    ' → logprob: -8.846458435058594

Token 48: ' mods' (ID: 60449)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.019071528688073158
    2. ' mods' → logprob: -4.144071578979492
    3. '   ' → logprob: -5.894071578979492
    4. '  ' → logprob: -9.769071578979492
    5. 'mod' → logprob: -9.769071578979492
    6. '.mods' → logprob: -10.269071578979492
    7. ' ' → logprob: -10.269071578979492
    8. '    ' → logprob: -10.894071578979492
    9. 'm' → logprob: -11.144071578979492
    10. '       ' → logprob: -11.956571578979492

Token 49: '[b' (ID: 40800)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4869876801967621
    2. '[b' → logprob: -1.1119877099990845
    3. '[' → logprob: -3.486987590789795
    4. 'b' → logprob: -4.361987590789795
    5. '[k' → logprob: -4.861987590789795
    6. '[-' → logprob: -5.736987590789795
    7. '[((' → logprob: -7.611987590789795
    8. '[n' → logprob: -7.736987590789795
    9. '[
' → logprob: -8.111988067626953
    10. '(b' → logprob: -8.236988067626953

Token 50: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.034947000443935394
    2. ']' → logprob: -4.284946918487549
    3. '*' → logprob: -4.409946918487549
    4. ' for' → logprob: -4.909946918487549
    5. 'for' → logprob: -8.034947395324707
    6. '   ' → logprob: -8.159947395324707
    7. ')' → logprob: -9.034947395324707
    8. '<|end|>' → logprob: -9.284947395324707
    9. ' ]' → logprob: -9.909947395324707
    10. '<|end|>' → logprob: -10.159947395324707

Token 51: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01292773149907589
    2. ' for' → logprob: -5.012927532196045
    3. '*' → logprob: -5.262927532196045
    4. 'for' → logprob: -7.137927532196045
    5. '   ' → logprob: -9.387928009033203
    6. '<|end|>' → logprob: -9.387928009033203
    7. '<|end|>' → logprob: -10.637928009033203
    8. ' ' → logprob: -11.512928009033203
    9. ')' → logprob: -11.887928009033203
    10. '  ' → logprob: -12.762928009033203

Token 52: ' mods' (ID: 60449)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.010426885448396206
    2. ' mods' → logprob: -5.135426998138428
    3. 'c' → logprob: -6.260426998138428
    4. '((' → logprob: -7.010426998138428
    5. '   ' → logprob: -7.010426998138428
    6. '(' → logprob: -8.38542652130127
    7. '(c' → logprob: -8.63542652130127
    8. ' (' → logprob: -9.63542652130127
    9. ' ' → logprob: -9.76042652130127
    10. ' c' → logprob: -10.26042652130127

Token 53: '[c' (ID: 22840)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.528680145740509
    2. '[c' → logprob: -0.903680145740509
    3. '[' → logprob: -5.778680324554443
    4. '[((' → logprob: -6.278680324554443
    5. 'c' → logprob: -7.903680324554443
    6. '[-' → logprob: -9.778679847717285
    7. '[
' → logprob: -10.028679847717285
    8. '```' → logprob: -10.653679847717285
    9. '[a' → logprob: -11.153679847717285
    10. ']' → logprob: -11.903679847717285

Token 54: ']
' (ID: 1592)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07919424027204514
    2. 'for' → logprob: -2.5791943073272705
    3. ' ' → logprob: -8.954194068908691
    4. '	for' → logprob: -9.329194068908691
    5. '   ' → logprob: -9.579194068908691
    6. '<|end|>' → logprob: -11.954194068908691
    7. ')' → logprob: -12.079194068908691
    8. '  ' → logprob: -13.204194068908691
    9. '<|end|>' → logprob: -13.704194068908691
    10. '    ' → logprob: -13.829194068908691

Token 55: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12841157615184784
    2. 'for' → logprob: -2.1284115314483643
    3. '<|end|>' → logprob: -7.128411769866943
    4. ' ' → logprob: -7.503411769866943
    5. '   ' → logprob: -9.878411293029785
    6. ')' → logprob: -10.378411293029785
    7. '	for' → logprob: -10.878411293029785
    8. '<|end|>' → logprob: -11.503411293029785
    9. '  ' → logprob: -11.753411293029785
    10. '    ' → logprob: -12.128411293029785

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38690900802612305
    2. 'for' (adapté à ' for') → logprob: -1.136909008026123
    3. '   ' → logprob: -10.761909484863281
    4. '	for' → logprob: -11.511909484863281
    5. ' ' → logprob: -12.386909484863281
    6. '    ' → logprob: -14.011909484863281
    7. ')' → logprob: -14.136909484863281
    8. '  ' → logprob: -14.761909484863281
    9. ' if' → logprob: -15.011909484863281
    10. 'if' → logprob: -15.761909484863281

Token 57: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2884388566017151
    2. ' a' → logprob: -1.4134387969970703
    3. '(a' → logprob: -5.16343879699707
    4. ' (' → logprob: -7.28843879699707
    5. '	a' → logprob: -7.41343879699707
    6. ' ' → logprob: -9.28843879699707
    7. '   ' → logprob: -10.28843879699707
    8. '[a' → logprob: -10.78843879699707
    9. '(' → logprob: -10.91343879699707
    10. ' ' → logprob: -11.22593879699707

Token 58: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03251351788640022
    2. ',' → logprob: -3.5325136184692383
    3. ' ,' → logprob: -6.407513618469238
    4. 'in' → logprob: -6.907513618469238
    5. ' ' → logprob: -10.032513618469238
    6. '  ' → logprob: -10.782513618469238
    7. 'a' → logprob: -11.532513618469238
    8. ',b' → logprob: -11.657513618469238
    9. ',a' → logprob: -12.157513618469238
    10. ')' → logprob: -12.657513618469238

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22543717920780182
    2. ' b' → logprob: -1.6004371643066406
    3. ' ' → logprob: -11.97543716430664
    4. ' (' → logprob: -12.10043716430664
    5. 'c' → logprob: -12.60043716430664
    6. '(b' → logprob: -12.97543716430664
    7. ' product' → logprob: -13.72543716430664
    8. 'product' → logprob: -13.85043716430664
    9. ' in' → logprob: -14.10043716430664
    10. ' c' → logprob: -14.35043716430664

Token 60: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04546694457530975
    2. ',' → logprob: -3.295466899871826
    3. 'in' → logprob: -4.920466899871826
    4. ' ,' → logprob: -9.795467376708984
    5. ')' → logprob: -10.920467376708984
    6. ' ' → logprob: -11.420467376708984
    7. 'product' → logprob: -12.795467376708984
    8. ',c' → logprob: -12.795467376708984
    9. '   ' → logprob: -12.920467376708984
    10. '  ' → logprob: -13.420467376708984

Token 61: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.575950562953949
    2. 'c' → logprob: -0.825950562953949
    3. ' product' → logprob: -12.450950622558594
    4. 'product' → logprob: -12.950950622558594
    5. ' ' → logprob: -13.700950622558594
    6. '_c' → logprob: -14.325950622558594
    7. '	c' → logprob: -14.450950622558594
    8. '  ' → logprob: -14.825950622558594
    9. '```' → logprob: -14.825950622558594
    10. ',c' → logprob: -15.075950622558594

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01605748012661934
    2. 'in' → logprob: -4.14105749130249
    3. 'product' → logprob: -11.891057014465332
    4. ')' → logprob: -12.391057014465332
    5. ' ' → logprob: -12.516057014465332
    6. '  ' → logprob: -13.516057014465332
    7. ',' → logprob: -13.641057014465332
    8. '   ' → logprob: -13.641057014465332
    9. 's' → logprob: -14.391057014465332
    10. '    ' → logprob: -14.453557014465332

Token 63: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.061969030648469925
    2. 'product' → logprob: -2.811969041824341
    3. '	product' → logprob: -14.061968803405762
    4. '.product' → logprob: -15.561968803405762
    5. '(product' → logprob: -15.561968803405762
    6. '   ' → logprob: -16.686969757080078
    7. ' ' → logprob: -17.311969757080078
    8. '$product' → logprob: -17.436969757080078
    9. '```' → logprob: -18.061969757080078
    10. '_product' → logprob: -18.061969757080078

Token 64: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0037876081187278032
    2. '(mod' → logprob: -5.628787517547607
    3. '((' → logprob: -8.878787994384766
    4. '(m' → logprob: -10.753787994384766
    5. '(r' → logprob: -11.628787994384766
    6. '(' → logprob: -11.628787994384766
    7. ' (' → logprob: -12.753787994384766
    8. '(list' → logprob: -13.003787994384766
    9. 'range' → logprob: -13.628787994384766
    10. 'mods' → logprob: -14.128787994384766

Token 65: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'k' → logprob: -16.625009536743164
    4. '(n' → logprob: -16.750009536743164
    5. '(
' → logprob: -19.125009536743164
    6. '{k' → logprob: -19.250009536743164
    7. ',k' → logprob: -19.750009536743164
    8. ' (' → logprob: -20.125009536743164
    9. '(s' → logprob: -20.500009536743164
    10. ')' → logprob: -20.625009536743164

Token 66: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -7.004696090007201e-05
    2. ' ),' → logprob: -10.000069618225098
    3. ')' → logprob: -11.125069618225098
    4. ',' → logprob: -11.750069618225098
    5. ',),' → logprob: -14.125069618225098
    6. '},' → logprob: -15.125069618225098
    7. ' ' → logprob: -15.125069618225098
    8. '),(' → logprob: -16.000070571899414
    9. ' ,' → logprob: -16.125070571899414
    10. '   ' → logprob: -16.250070571899414

Token 67: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.10751741379499435
    2. 'range' → logprob: -2.6075174808502197
    3. ' repeat' → logprob: -3.6075174808502197
    4. ' range' → logprob: -6.857517242431641
    5. ' ' → logprob: -10.10751724243164
    6. '  ' → logprob: -12.23251724243164
    7. '   ' → logprob: -12.73251724243164
    8. '    ' → logprob: -14.85751724243164
    9. '(range' → logprob: -14.98251724243164
    10. ')' → logprob: -14.98251724243164

Token 68: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005265804938971996
    2. '3' → logprob: -8.125526428222656
    3. '(' → logprob: -8.375526428222656
    4. ' =' → logprob: -17.250526428222656
    5. ' ' → logprob: -17.750526428222656
    6. '```' → logprob: -17.750526428222656
    7. '=(' → logprob: -18.625526428222656
    8. '³' → logprob: -19.125526428222656
    9. ')' → logprob: -20.000526428222656
    10. '   ' → logprob: -20.250526428222656

Token 69: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -19.750001907348633
    5. '۳' → logprob: -20.000001907348633
    6. '３' → logprob: -20.500001907348633
    7. '³' → logprob: -20.875001907348633
    8. '  ' → logprob: -20.875001907348633
    9. ')' → logprob: -21.250001907348633
    10. '﻿' → logprob: -21.750001907348633

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02860381081700325
    2. ' if' → logprob: -3.6536037921905518
    3. 'if' → logprob: -6.278604030609131
    4. '   ' → logprob: -8.153603553771973
    5. ')
' → logprob: -9.528603553771973
    6. ' )' → logprob: -10.278603553771973
    7. '    ' → logprob: -12.028603553771973
    8. '()' → logprob: -12.528603553771973
    9. '))' → logprob: -12.653603553771973
    10. ' ' → logprob: -12.903603553771973

Token 71: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011130588129162788
    2. 'if' → logprob: -4.5111308097839355
    3. ')' → logprob: -10.136130332946777
    4. '<|end|>' → logprob: -10.761130332946777
    5. '   ' → logprob: -11.136130332946777
    6. '	if' → logprob: -13.261130332946777
    7. '<|end|>' → logprob: -13.261130332946777
    8. '    ' → logprob: -13.761130332946777
    9. ' ' → logprob: -13.886130332946777
    10. '  ' → logprob: -14.886130332946777

Token 72: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016153784468770027
    2. 'if' (adapté à ' if') → logprob: -4.141153812408447
    3. '   ' → logprob: -9.766153335571289
    4. ')' → logprob: -9.891153335571289
    5. '    ' → logprob: -12.516153335571289
    6. '	if' → logprob: -13.141153335571289
    7. ' ' → logprob: -13.516153335571289
    8. '<|end|>' → logprob: -13.891153335571289
    9. ' )' → logprob: -14.266153335571289
    10. '  ' → logprob: -14.266153335571289

Token 73: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005100814625620842
    2. ' (' → logprob: -5.880100727081299
    3. '   ' → logprob: -6.630100727081299
    4. '(' → logprob: -7.130100727081299
    5. ' ' → logprob: -9.630101203918457
    6. '(A' → logprob: -10.505101203918457
    7. '(ans' → logprob: -10.755101203918457
    8. '((' → logprob: -11.130101203918457
    9. '(ab' → logprob: -11.130101203918457
    10. '  ' → logprob: -12.130101203918457

Token 74: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2856656610965729
    2. 'a' → logprob: -1.4106656312942505
    3. ' (' → logprob: -5.785665512084961
    4. '   ' → logprob: -6.785665512084961
    5. ' a' → logprob: -8.785665512084961
    6. '(' → logprob: -9.410665512084961
    7. ' ' → logprob: -10.660665512084961
    8. ')' → logprob: -11.660665512084961
    9. '  ' → logprob: -11.660665512084961
    10. '[a' → logprob: -12.285665512084961

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2292385697364807
    2. ' +' → logprob: -1.604238510131836
    3. '+b' → logprob: -5.604238510131836
    4. ' ' → logprob: -9.979238510131836
    5. '+B' → logprob: -11.104238510131836
    6. '*' → logprob: -11.604238510131836
    7. '+c' → logprob: -11.979238510131836
    8. ' plus' → logprob: -11.979238510131836
    9. '+k' → logprob: -12.229238510131836
    10. '(' → logprob: -12.354238510131836

Token 76: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326693296432495
    2. ' b' → logprob: -1.3132669925689697
    3. ' ' → logprob: -12.56326675415039
    4. ')b' → logprob: -14.06326675415039
    5. '<|end|>' → logprob: -14.56326675415039
    6. ')' → logprob: -15.68826675415039
    7. '   ' → logprob: -16.81326675415039
    8. '	b' → logprob: -16.81326675415039
    9. '  ' → logprob: -17.18826675415039
    10. '>b' → logprob: -17.18826675415039

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1428288221359253
    2. ' +' → logprob: -2.017828941345215
    3. '+c' → logprob: -9.517828941345215
    4. ')' → logprob: -9.517828941345215
    5. 'c' → logprob: -14.017828941345215
    6. '<|end|>' → logprob: -14.017828941345215
    7. ' ' → logprob: -14.142828941345215
    8. '>' → logprob: -14.267828941345215
    9. '   ' → logprob: -14.830328941345215
    10. '+)' → logprob: -15.017828941345215

Token 78: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5233870148658752
    2. ' c' → logprob: -0.8983870148658752
    3. ')' → logprob: -9.02338695526123
    4. ')c' → logprob: -9.39838695526123
    5. ' ' → logprob: -9.89838695526123
    6. '	c' → logprob: -12.64838695526123
    7. '   ' → logprob: -13.27338695526123
    8. '  ' → logprob: -13.89838695526123
    9. '+c' → logprob: -14.02338695526123
    10. '<|end|>' → logprob: -14.14838695526123

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047726318007335067
    2. ')%' → logprob: -7.750477313995361
    3. ' )' → logprob: -10.000476837158203
    4. '%' → logprob: -14.125476837158203
    5. ')
' → logprob: -16.000476837158203
    6. '   ' → logprob: -16.500476837158203
    7. ' ' → logprob: -17.250476837158203
    8. '）' → logprob: -17.250476837158203
    9. ')

' → logprob: -17.375476837158203
    10. '```' → logprob: -17.750476837158203

Token 80: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04005603492259979
    2. ' %' → logprob: -3.290055990219116
    3. ' ' → logprob: -6.540056228637695
    4. ')' → logprob: -7.665056228637695
    5. ')%' → logprob: -10.915056228637695
    6. ' ' → logprob: -11.165056228637695
    7. '==' → logprob: -11.415056228637695
    8. '%e' → logprob: -11.540056228637695
    9. '%c' → logprob: -11.915056228637695
    10. ' ==' → logprob: -12.040056228637695

Token 81: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04858816787600517
    2. ' k' → logprob: -3.048588275909424
    3. '	k' → logprob: -15.298587799072266
    4. '(k' → logprob: -15.923587799072266
    5. '{k' → logprob: -16.048587799072266
    6. ' ' → logprob: -16.173587799072266
    7. ' к' → logprob: -16.423587799072266
    8. '<|end|>' → logprob: -16.923587799072266
    9. '?k' → logprob: -17.548587799072266
    10. '```' → logprob: -17.673587799072266

Token 82: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.034261833876371384
    2. ' ==' → logprob: -3.40926194190979
    3. ')' → logprob: -8.534261703491211
    4. '=' → logprob: -8.534261703491211
    5. '0' → logprob: -9.159261703491211
    6. '!=' → logprob: -9.659261703491211
    7. ' ' → logprob: -10.909261703491211
    8. ')==' → logprob: -11.159261703491211
    9. '[' → logprob: -12.284261703491211
    10. ' !=' → logprob: -12.409261703491211

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.250045776367188
    4. '  ' → logprob: -17.562545776367188
    5. 'zero' → logprob: -17.875045776367188
    6. '    ' → logprob: -18.062545776367188
    7. '۰' → logprob: -18.500045776367188
    8. '000' → logprob: -18.687545776367188
    9. '<|end|>' → logprob: -19.000045776367188
    10. 's' → logprob: -19.187545776367188

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.000015258789062
    4. 'zero' → logprob: -19.000015258789062
    5. '۰' → logprob: -19.437515258789062
    6. '1' → logprob: -19.437515258789062
    7. '  ' → logprob: -20.437515258789062
    8. '```' → logprob: -20.562515258789062
    9. '０' → logprob: -20.625015258789062
    10. 'a' → logprob: -20.750015258789062

Token 85: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018280261429026723
    2. ')
' → logprob: -8.62518310546875
    3. '   ' → logprob: -14.12518310546875
    4. ' )' → logprob: -14.25018310546875
    5. '))' → logprob: -15.12518310546875
    6. ')`' → logprob: -15.12518310546875
    7. '')' → logprob: -15.62518310546875
    8. '`)' → logprob: -15.62518310546875
    9. ')return' → logprob: -16.00018310546875
    10. ')

' → logprob: -16.12518310546875

Token 86: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012761499965563416
    2. ')
' → logprob: -9.000127792358398
    3. '`)' → logprob: -14.000127792358398
    4. '')' → logprob: -14.500127792358398
    5. ')`' → logprob: -14.500127792358398
    6. '")' → logprob: -14.750127792358398
    7. ')

' → logprob: -15.000127792358398
    8. '))' → logprob: -15.125127792358398
    9. '   ' → logprob: -15.375127792358398
    10. ')return' → logprob: -15.500127792358398

Token 87: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007229181355796754
    2. '
' → logprob: -7.250722885131836
    3. ')
' → logprob: -11.500722885131836
    4. ')' → logprob: -14.000722885131836
    5. ' print' → logprob: -14.125722885131836
    6. '```' → logprob: -14.625722885131836
    7. '
' → logprob: -15.125722885131836
    8. '\n' → logprob: -15.625722885131836
    9. '  
' → logprob: -16.125722885131836
    10. '<|end|>' → logprob: -16.250722885131836

Token 88: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004084808751940727
    2. '(' → logprob: -5.504084587097168
    3. 'ans' → logprob: -12.754084587097168
    4. '(answer' → logprob: -13.754084587097168
    5. '(
' → logprob: -14.129084587097168
    6. '()' → logprob: -14.254084587097168
    7. '(`' → logprob: -15.254084587097168
    8. '("("' → logprob: -15.504084587097168
    9. '(abs' → logprob: -16.004085540771484
    10. ' (' → logprob: -16.004085540771484

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')`' → logprob: -16.75
    5. ')
' → logprob: -16.875
    6. '')' → logprob: -17.375
    7. '`)' → logprob: -17.625
    8. '）' → logprob: -19.0
    9. '()' → logprob: -19.125
    10. '")' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 37.93%
Précision adaptée (1ère position): 37.93%
Précision (top 10): 82.76%
================================================================================
