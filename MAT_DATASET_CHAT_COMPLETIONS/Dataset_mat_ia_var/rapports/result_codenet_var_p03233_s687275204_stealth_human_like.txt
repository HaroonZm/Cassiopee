================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def mincos(nb, ab_lst):
    # Bon... on va tout mettre dans une liste le temps d'y voir clair
    l = []
    for i in range(nb):
        l.append( (ab_lst[i][0], i+1, "a") )
    for j in range(nb):
        l.append( (ab_lst[j][1], j+1, "b") )
    l.sort()  # ici c'est ok, mais si besoin on reverra...

    first_sum = 0
    for k in range(nb):
        first_sum += l[k][0]

    hen = l[nb][0]  # à vérifier, mais c'est censé être la valeur suivante
    hen2 = l[nb+1][0]

    seen = set()
    maj = None
    flag = True
    for val, ind, typ in l[:nb]:
        if maj!=None and maj != typ:
            flag = False
        if ind in seen:
            # Bon bah c'est pile poil, on s'arrête là
            print(first_sum)
            exit()
        seen.add(ind)
        maj = typ

    if flag:
        print(first_sum)
        exit()

    vals = []
    for (a, b, c) in l[:nb]:
        if l[nb][1] != b:
            vals.append(first_sum-a+hen)
        else:
            vals.append(first_sum-a+hen2)
    print(min(vals))
    exit()

n = int(input())
# c'est plus lisible comme nom de variable, non ?
abvals = []
for i in range(n):
    abvals.append( list(map(int, input().split())) )
print(mincos(n, abvals))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' min' (ID: 1349)
  → Token d'amorce (pas de prédiction)

Token 2: 'cos' (ID: 10732)
  → Token d'amorce (pas de prédiction)

Token 3: '(nb' (ID: 127388)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6379189491271973
    2. '_' → logprob: -0.8879189491271973
    3. 't' → logprob: -4.012918949127197
    4. '_t' → logprob: -4.012918949127197
    5. '_:' → logprob: -5.137918949127197
    6. '```' → logprob: -5.262918949127197
    7. '(_:' → logprob: -5.387918949127197
    8. '(t' → logprob: -6.387918949127197
    9. '(_' → logprob: -6.387918949127197
    10. '_(' → logprob: -7.262918949127197

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26131346821784973
    2. '):' → logprob: -1.6363134384155273
    3. ')' → logprob: -3.7613134384155273
    4. ' ,' → logprob: -5.386313438415527
    5. ' ):' → logprob: -6.011313438415527
    6. 's' → logprob: -7.011313438415527
    7. ' ' → logprob: -7.136313438415527
    8. ',)' → logprob: -7.261313438415527
    9. ' )' → logprob: -8.011313438415527
    10. '_' → logprob: -8.136313438415527

Token 5: ' ab' (ID: 692)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.6386421918869019
    2. ' a' → logprob: -2.3886423110961914
    3. ' nb' → logprob: -2.5136423110961914
    4. ' n' → logprob: -2.7636423110961914
    5. ' points' → logprob: -3.2636423110961914
    6. ' angle' → logprob: -3.3886423110961914
    7. ' lst' → logprob: -3.3886423110961914
    8. 'a' → logprob: -3.5761423110961914
    9. 'x' → logprob: -3.7636423110961914
    10. ' b' → logprob: -3.8261423110961914

Token 6: '_lst' (ID: 72474)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6099556684494019
    2. ',' → logprob: -1.6099556684494019
    3. '):' → logprob: -1.8599556684494019
    4. 's' → logprob: -2.7349557876586914
    5. 'le' → logprob: -4.484955787658691
    6. 'a' → logprob: -5.984955787658691
    7. ')>' → logprob: -6.359955787658691
    8. ')**' → logprob: -6.359955787658691
    9. ' )' → logprob: -6.484955787658691
    10. 'stract' → logprob: -6.609955787658691

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021666385233402252
    2. ')' → logprob: -3.8966662883758545
    3. ',' → logprob: -7.271666526794434
    4. 's' → logprob: -8.771666526794434
    5. ':' → logprob: -9.396666526794434
    6. 'a' → logprob: -10.146666526794434
    7. '[' → logprob: -10.771666526794434
    8. '**' → logprob: -11.021666526794434
    9. ' ):' → logprob: -11.146666526794434
    10. '=' → logprob: -11.396666526794434

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27717676758766174
    2. '   ' → logprob: -1.5271767377853394
    3. '(' → logprob: -4.652176856994629
    4. '```' → logprob: -6.152176856994629
    5. ''' → logprob: -6.277176856994629
    6. '():' → logprob: -6.402176856994629
    7. '_' → logprob: -6.402176856994629
    8. '(:' → logprob: -6.902176856994629
    9. '':' → logprob: -6.902176856994629
    10. '    ' → logprob: -7.027176856994629

Token 9: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20608484745025635
    2. ' ' → logprob: -2.081084728240967
    3. ''' → logprob: -3.581084728240967
    4. '"' → logprob: -4.581084728240967
    5. '    ' → logprob: -5.081084728240967
    6. '```' → logprob: -5.706084728240967
    7. '`' → logprob: -5.956084728240967
    8. '_' → logprob: -5.956084728240967
    9. '       ' → logprob: -6.456084728240967
    10. '  ' → logprob: -7.081084728240967

Token 10: ' Bon' (ID: 12658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04317137598991394
    2. '   ' → logprob: -4.168171405792236
    3. '_' → logprob: -5.043171405792236
    4. '    ' → logprob: -5.418171405792236
    5. '=' → logprob: -6.168171405792236
    6. 'i' → logprob: -6.293171405792236
    7. '  ' → logprob: -6.543171405792236
    8. ' """' → logprob: -7.043171405792236
    9. ' max' → logprob: -7.168171405792236
    10. ''' → logprob: -7.293171405792236

Token 11: '...' (ID: 1008)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.9030258059501648
    2. '   ' → logprob: -1.6530258655548096
    3. 'jou' → logprob: -2.0280258655548096
    4. 'j' → logprob: -2.5280258655548096
    5. 'e' → logprob: -3.0280258655548096
    6. 'ne' → logprob: -3.4030258655548096
    7. 'def' → logprob: -3.5280258655548096
    8. 'd' → logprob: -4.0280256271362305
    9. 'us' → logprob: -4.4030256271362305
    10. 'de' → logprob: -4.5280256271362305

Token 12: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39828652143478394
    2. ' ' → logprob: -1.8982865810394287
    3. 'u' → logprob: -2.5232865810394287
    4. '    ' → logprob: -3.3982865810394287
    5. ')' → logprob: -4.39828634262085
    6. 'e' → logprob: -4.89828634262085
    7. 't' → logprob: -4.89828634262085
    8. '  ' → logprob: -5.02328634262085
    9. '       ' → logprob: -5.39828634262085
    10. ',' → logprob: -5.39828634262085

Token 13: ' va' (ID: 3423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09440548717975616
    2. 'u' → logprob: -3.09440541267395
    3. 'ne' → logprob: -4.719405651092529
    4. 't' → logprob: -4.969405651092529
    5. ' ' → logprob: -5.094405651092529
    6. '   ' → logprob: -5.219405651092529
    7. ''' → logprob: -5.469405651092529
    8. 'r' → logprob: -5.594405651092529
    9. 'c' → logprob: -6.094405651092529
    10. 's' → logprob: -6.719405651092529

Token 14: ' tout' (ID: 5501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9356175065040588
    2. ' max' → logprob: -2.060617446899414
    3. ' return' → logprob: -2.060617446899414
    4. ' calcul' → logprob: -2.060617446899414
    5. ' essayer' → logprob: -2.935617446899414
    6. ' ' → logprob: -2.935617446899414
    7. ' try' → logprob: -3.810617446899414
    8. ' faire' → logprob: -4.935617446899414
    9. ' s' → logprob: -5.310617446899414
    10. ' calculate' → logprob: -5.435617446899414

Token 15: ' mettre' (ID: 25339)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.8171088099479675
    2. '   ' → logprob: -1.8171088695526123
    3. ' faire' → logprob: -1.9421088695526123
    4. ' ' → logprob: -2.6921088695526123
    5. 'prendre' → logprob: -3.0671088695526123
    6. ' essayer' → logprob: -3.3171088695526123
    7. ' calcul' → logprob: -4.067108631134033
    8. '  ' → logprob: -4.317108631134033
    9. ' simplement' → logprob: -4.817108631134033
    10. '    ' → logprob: -5.067108631134033

Token 16: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5301955938339233
    2. '_' → logprob: -2.155195713043213
    3. '   ' → logprob: -2.655195713043213
    4. ' à' → logprob: -2.905195713043213
    5. ' ' → logprob: -3.530195713043213
    6. ' en' → logprob: -3.780195713043213
    7. 'à' → logprob: -4.155195713043213
    8. ',' → logprob: -4.655195713043213
    9. ' dans' → logprob: -4.780195713043213
    10. 'ensemble' → logprob: -5.155195713043213

Token 17: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.22725579142570496
    2. 'une' → logprob: -2.4772558212280273
    3. ' un' → logprob: -2.7272558212280273
    4. ' la' → logprob: -4.477255821228027
    5. ' ' → logprob: -4.852255821228027
    6. ' a' → logprob: -4.977255821228027
    7. '```' → logprob: -5.352255821228027
    8. ' le' → logprob: -5.477255821228027
    9. '   ' → logprob: -5.477255821228027
    10. ' one' → logprob: -5.727255821228027

Token 18: ' liste' (ID: 31719)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6370328664779663
    2. ' liste' → logprob: -1.8870328664779663
    3. 'liste' → logprob: -2.137032985687256
    4. ' lst' → logprob: -2.262032985687256
    5. ' list' → logprob: -2.512032985687256
    6. ' seule' → logprob: -2.637032985687256
    7. ' ' → logprob: -3.137032985687256
    8. ' for' → logprob: -3.387032985687256
    9. 'lst' → logprob: -3.637032985687256
    10. 'for' → logprob: -3.637032985687256

Token 19: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40428078174591064
    2. ',' → logprob: -1.7792807817459106
    3. ' ' → logprob: -2.154280662536621
    4. 's' → logprob: -5.029280662536621
    5. '    
' → logprob: -5.029280662536621
    6. '    ' → logprob: -5.154280662536621
    7. '[' → logprob: -5.154280662536621
    8. '_' → logprob: -5.904280662536621
    9. ' ,' → logprob: -6.154280662536621
    10. '  ' → logprob: -6.154280662536621

Token 20: ' temps' (ID: 11160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1073104590177536
    2. 't' → logprob: -2.6073105335235596
    3. 'r' → logprob: -4.3573102951049805
    4. 'n' → logprob: -4.8573102951049805
    5. 'ss' → logprob: -5.8573102951049805
    6. 'st' → logprob: -6.7323102951049805
    7. 'm' → logprob: -7.2323102951049805
    8. '   ' → logprob: -7.7323102951049805
    9. 'ng' → logprob: -8.73231029510498
    10. '_' → logprob: -8.73231029510498

Token 21: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21652574837207794
    2. ' de' → logprob: -3.3415257930755615
    3. '    ' → logprob: -3.3415257930755615
    4. ' ' → logprob: -3.5915257930755615
    5. '  ' → logprob: -3.7165257930755615
    6. '    
' → logprob: -4.966525554656982
    7. ',' → logprob: -4.966525554656982
    8. 'def' → logprob: -4.966525554656982
    9. '[]' → logprob: -5.216525554656982
    10. ' d' → logprob: -5.341525554656982

Token 22: ''y' (ID: 27913)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5925107002258301
    2. 'e' → logprob: -1.59251070022583
    3. ''é' → logprob: -3.09251070022583
    4. ''être' → logprob: -3.09251070022583
    5. ''avoir' → logprob: -3.34251070022583
    6. '_' → logprob: -3.46751070022583
    7. ' '' → logprob: -3.84251070022583
    8. '   ' → logprob: -4.21751070022583
    9. 'u' → logprob: -4.34251070022583
    10. ' e' → logprob: -5.09251070022583

Token 23: ' voir' (ID: 20611)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.05237230286002159
    2. 'p' → logprob: -4.177372455596924
    3. ' mettre' → logprob: -5.052372455596924
    4. 'penser' → logprob: -5.177372455596924
    5. 'tr' → logprob: -5.302372455596924
    6. 'aj' → logprob: -5.677372455596924
    7. 'met' → logprob: -5.677372455596924
    8. 'st' → logprob: -6.427372455596924
    9. 'r' → logprob: -6.677372455596924
    10. '   ' → logprob: -7.052372455596924

Token 24: ' clair' (ID: 71396)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.32380881905555725
    2. 'plus' → logprob: -1.5738087892532349
    3. ' clair' → logprob: -3.6988089084625244
    4. ' ' → logprob: -4.198808670043945
    5. 'clair' → logprob: -5.073808670043945
    6. '+' → logprob: -5.073808670043945
    7. ' un' → logprob: -5.448808670043945
    8. '   ' → logprob: -5.948808670043945
    9. ' claro' → logprob: -6.323808670043945
    10. ' claire' → logprob: -6.698808670043945

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1598602682352066
    2. '\n' → logprob: -2.659860372543335
    3. '
' → logprob: -3.409860372543335
    4. '    
' → logprob: -4.409860134124756
    5. ' ' → logprob: -5.284860134124756
    6. ',' → logprob: -5.409860134124756
    7. '  
' → logprob: -5.659860134124756
    8. ':' → logprob: -5.784860134124756
    9. ')' → logprob: -6.034860134124756
    10. 'n' → logprob: -6.409860134124756

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19626978039741516
    2. ' ' → logprob: -2.5712697505950928
    3. ',' → logprob: -3.3212697505950928
    4. ':' → logprob: -3.5712697505950928
    5. ' :' → logprob: -4.696269989013672
    6. '    ' → logprob: -5.196269989013672
    7. '    
' → logprob: -5.446269989013672
    8. '
' → logprob: -6.196269989013672
    9. '  ' → logprob: -6.321269989013672
    10. ')' → logprob: -6.321269989013672

Token 27: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48991456627845764
    2. ' ' → logprob: -1.4899145364761353
    3. '    
' → logprob: -3.239914655685425
    4. ',' → logprob: -3.864914655685425
    5. ' 
' → logprob: -3.864914655685425
    6. '   
' → logprob: -4.239914417266846
    7. '    ' → logprob: -4.614914417266846
    8. '     
' → logprob: -4.989914417266846
    9. '  
' → logprob: -5.114914417266846
    10. 'c' → logprob: -5.364914417266846

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9327408075332642
    2. '_' → logprob: -1.5577408075332642
    3. 'i' → logprob: -1.9327408075332642
    4. 'iste' → logprob: -2.4327406883239746
    5. 'ist' → logprob: -3.0577406883239746
    6. 'e' → logprob: -3.4327406883239746
    7. 'a' → logprob: -3.9327406883239746
    8. '=[]' → logprob: -4.182740688323975
    9. 's' → logprob: -4.307740688323975
    10. '=' → logprob: -4.557740688323975

Token 29: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6697474122047424
    2. ' [' → logprob: -1.0447473526000977
    3. '[]' → logprob: -2.5447473526000977
    4. '[' → logprob: -3.1697473526000977
    5. ' ab' → logprob: -4.794747352600098
    6. ' list' → logprob: -5.669747352600098
    7. 'list' → logprob: -6.669747352600098
    8. '[list' → logprob: -6.919747352600098
    9. '[len' → logprob: -7.544747352600098
    10. 'ab' → logprob: -7.919747352600098

Token 30: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8570724725723267
    2. ' for' → logprob: -1.3570724725723267
    3. 'for' → logprob: -1.4820724725723267
    4. '   ' → logprob: -2.982072353363037
    5. ',' → logprob: -4.607072353363037
    6. '  ' → logprob: -5.107072353363037
    7. '  
' → logprob: -5.857072353363037
    8. '<|end|>' → logprob: -5.982072353363037
    9. ' 
' → logprob: -6.107072353363037
    10. '    ' → logprob: -6.107072353363037

Token 31: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3546423316001892
    2. ' for' → logprob: -2.104642391204834
    3. 'for' (adapté à ' for') → logprob: -2.479642391204834
    4. '   ' → logprob: -2.479642391204834
    5. '  ' → logprob: -5.979642391204834
    6. '    ' → logprob: -6.729642391204834
    7. ' 
' → logprob: -6.854642391204834
    8. '  
' → logprob: -7.229642391204834
    9. '    
' → logprob: -7.229642391204834
    10. '	for' → logprob: -7.604642391204834

Token 32: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3546028435230255
    2. ' a' → logprob: -2.354602813720703
    3. ' i' → logprob: -2.604602813720703
    4. ' ab' → logprob: -2.729602813720703
    5. ' x' → logprob: -3.479602813720703
    6. ' v' → logprob: -4.854602813720703
    7. ' n' → logprob: -5.229602813720703
    8. ' e' → logprob: -5.354602813720703
    9. '  ' → logprob: -5.979602813720703
    10. ' b' → logprob: -6.604602813720703

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09539230167865753
    2. ' ' → logprob: -2.8453922271728516
    3. 'in' → logprob: -3.5953922271728516
    4. 'n' → logprob: -5.720392227172852
    5. '  ' → logprob: -6.720392227172852
    6. ',' → logprob: -7.470392227172852
    7. '_' → logprob: -8.595392227172852
    8. ' n' → logprob: -9.470392227172852
    9. ',n' → logprob: -10.970392227172852
    10. ' ' → logprob: -11.220392227172852

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07595200091600418
    2. ' ab' → logprob: -3.2009520530700684
    3. ' nb' → logprob: -3.4509520530700684
    4. 'range' → logprob: -8.07595157623291
    5. ' xrange' → logprob: -9.07595157623291
    6. ' ' → logprob: -9.32595157623291
    7. 'nb' → logprob: -10.20095157623291
    8. '	nb' → logprob: -10.20095157623291
    9. 'ab' → logprob: -10.32595157623291
    10. '  ' → logprob: -10.82595157623291

Token 35: '(nb' (ID: 127388)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40727660059928894
    2. '(nb' → logprob: -1.2822766304016113
    3. '(len' → logprob: -2.9072766304016113
    4. '(n' → logprob: -6.032276630401611
    5. ' (' → logprob: -10.032276153564453
    6. '(ab' → logprob: -10.907276153564453
    7. '(nn' → logprob: -11.282276153564453
    8. '(abs' → logprob: -12.157276153564453
    9. '(
' → logprob: -12.282276153564453
    10. ' nb' → logprob: -12.657276153564453

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004172660410404205
    2. ' ):' → logprob: -5.7541728019714355
    3. ')' → logprob: -7.6291728019714355
    4. '):
' → logprob: -8.504172325134277
    5. ',' → logprob: -9.129172325134277
    6. '+' → logprob: -9.129172325134277
    7. '   ' → logprob: -10.504172325134277
    8. '-' → logprob: -10.629172325134277
    9. ':' → logprob: -10.879172325134277
    10. ' )' → logprob: -12.254172325134277

Token 37: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9835028052330017
    2. ':' → logprob: -1.1085028648376465
    3. ' ' → logprob: -1.9835028648376465
    4. ' :' → logprob: -2.7335028648376465
    5. '   ' → logprob: -2.8585028648376465
    6. '       ' → logprob: -3.9835028648376465
    7. '):' → logprob: -5.6085028648376465
    8. '  ' → logprob: -6.2335028648376465
    9. '<|end|>' → logprob: -6.3585028648376465
    10. ',' → logprob: -6.4835028648376465

Token 38: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05613856390118599
    2. ' l' → logprob: -3.306138515472412
    3. '    ' → logprob: -4.431138515472412
    4. 'l' (adapté à ' l') → logprob: -6.056138515472412
    5. '   ' → logprob: -6.556138515472412
    6. '  ' → logprob: -7.806138515472412
    7. ' 
' → logprob: -8.05613899230957
    8. '<|end|>' → logprob: -8.05613899230957
    9. ' ' → logprob: -8.68113899230957
    10. '       ' → logprob: -8.80613899230957

Token 39: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5763072371482849
    2. '.' → logprob: -0.8263072371482849
    3. ' .' → logprob: -8.70130729675293
    4. '.extend' → logprob: -8.70130729675293
    5. 'append' → logprob: -11.45130729675293
    6. '.app' → logprob: -11.95130729675293
    7. '_append' → logprob: -12.70130729675293
    8. ' ' → logprob: -13.57630729675293
    9. ' =' → logprob: -13.70130729675293
    10. '.add' → logprob: -13.82630729675293

Token 40: '(' (ID: 7)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.02060810662806034
    2. '(' → logprob: -4.020607948303223
    3. '(abs' → logprob: -6.895607948303223
    4. ' (' → logprob: -7.145607948303223
    5. '(int' → logprob: -8.770607948303223
    6. '((' → logprob: -9.020607948303223
    7. 'ab' → logprob: -9.020607948303223
    8. ' ab' → logprob: -9.270607948303223
    9. '(float' → logprob: -10.145607948303223
    10. '(
' → logprob: -10.520607948303223

Token 41: ' (' (ID: 350)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.31693071126937866
    2. 'ab' → logprob: -1.3169307708740234
    3. 'abs' → logprob: -6.566930770874023
    4. '   ' → logprob: -7.191930770874023
    5. ' abs' → logprob: -7.691930770874023
    6. 'int' → logprob: -8.941930770874023
    7. 'float' → logprob: -9.066930770874023
    8. '(ab' → logprob: -9.191930770874023
    9. ' (' → logprob: -9.566930770874023
    10. ' ' → logprob: -9.691930770874023

Token 42: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.040607113391160965
    2. ' ab' → logprob: -3.290607213973999
    3. 'i' → logprob: -6.79060697555542
    4. 'abs' → logprob: -7.29060697555542
    5. ')' → logprob: -8.415607452392578
    6. ' i' → logprob: -8.540607452392578
    7. '   ' → logprob: -9.415607452392578
    8. 'nb' → logprob: -10.415607452392578
    9. ' ' → logprob: -10.790607452392578
    10. 'a' → logprob: -10.790607452392578

Token 43: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.0008941899868659675
    2. '[i' → logprob: -7.250894069671631
    3. '[_' → logprob: -9.750894546508789
    4. '[' → logprob: -10.250894546508789
    5. '_l' → logprob: -10.750894546508789
    6. '_' → logprob: -10.875894546508789
    7. ')' → logprob: -11.375894546508789
    8. ' _' → logprob: -12.000894546508789
    9. ')_' → logprob: -12.250894546508789
    10. '_ls' → logprob: -12.375894546508789

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015506906202062964
    2. '[' → logprob: -6.751550674438477
    3. ' [' → logprob: -8.251550674438477
    4. ')' → logprob: -9.501550674438477
    5. ')[' → logprob: -11.251550674438477
    6. '   ' → logprob: -11.376550674438477
    7. ' ' → logprob: -12.126550674438477
    8. ' )' → logprob: -13.001550674438477
    9. '[a' → logprob: -13.501550674438477
    10. '(i' → logprob: -13.876550674438477

Token 45: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.017260445281863213
    2. '[' → logprob: -4.642260551452637
    3. '])' → logprob: -5.517260551452637
    4. '],' → logprob: -6.392260551452637
    5. ']' → logprob: -6.517260551452637
    6. ']))' → logprob: -9.392260551452637
    7. ',' → logprob: -9.642260551452637
    8. '].' → logprob: -10.142260551452637
    9. ' ][' → logprob: -10.892260551452637
    10. ''][' → logprob: -11.517260551452637

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0383930504322052
    2. '1' → logprob: -3.288393020629883
    3. '2' → logprob: -8.788393020629883
    4. ' ' → logprob: -9.163393020629883
    5. '-' → logprob: -10.288393020629883
    6. ':' → logprob: -11.288393020629883
    7. '])' → logprob: -11.413393020629883
    8. ']' → logprob: -11.913393020629883
    9. '3' → logprob: -12.288393020629883
    10. ''' → logprob: -12.975893020629883

Token 47: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009274906478822231
    2. '],' → logprob: -5.259274959564209
    3. ' ,' → logprob: -6.009274959564209
    4. ']' → logprob: -7.509274959564209
    5. ')' → logprob: -8.63427448272705
    6. '),' → logprob: -8.88427448272705
    7. '],[' → logprob: -8.88427448272705
    8. '[' → logprob: -9.25927448272705
    9. '+' → logprob: -9.63427448272705
    10. '][' → logprob: -9.75927448272705

Token 48: ' i' (ID: 575)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.08929003030061722
    2. 'ab' → logprob: -2.464290142059326
    3. '    ' → logprob: -9.089289665222168
    4. ' abs' → logprob: -10.214289665222168
    5. '   ' → logprob: -10.339289665222168
    6. 'abs' → logprob: -10.839289665222168
    7. ' ' → logprob: -10.839289665222168
    8. '0' → logprob: -10.964289665222168
    9. '1' → logprob: -10.964289665222168
    10. ')' → logprob: -11.089289665222168

Token 49: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022968357428908348
    2. ',' → logprob: -4.147968292236328
    3. ' )' → logprob: -5.397968292236328
    4. '))' → logprob: -6.272968292236328
    5. '   ' → logprob: -8.397968292236328
    6. ' ,' → logprob: -9.022968292236328
    7. '       ' → logprob: -10.022968292236328
    8. ' ))' → logprob: -10.647968292236328
    9. '),' → logprob: -10.772968292236328
    10. ' ' → logprob: -11.147968292236328

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029134077485650778
    2. ' ' → logprob: -6.377913475036621
    3. ')' → logprob: -6.877913475036621
    4. ' )' → logprob: -8.877913475036621
    5. '2' → logprob: -11.502913475036621
    6. '0' → logprob: -11.627913475036621
    7. '+' → logprob: -11.627913475036621
    8. ',' → logprob: -13.127913475036621
    9. '))' → logprob: -13.377913475036621
    10. '   ' → logprob: -13.752913475036621

Token 51: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00803952943533659
    2. '))' → logprob: -5.258039474487305
    3. ',' → logprob: -6.258039474487305
    4. ' )' → logprob: -7.133039474487305
    5. '),' → logprob: -10.508039474487305
    6. '   ' → logprob: -10.633039474487305
    7. ' ))' → logprob: -11.008039474487305
    8. ' ,' → logprob: -12.508039474487305
    9. ' ' → logprob: -12.508039474487305
    10. '       ' → logprob: -13.133039474487305

Token 52: ' "' (ID: 392)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.09422312676906586
    2. 'ab' → logprob: -2.4692230224609375
    3. ')' → logprob: -6.0942230224609375
    4. ' ' → logprob: -7.2192230224609375
    5. ' )' → logprob: -7.2192230224609375
    6. '    ' → logprob: -7.9692230224609375
    7. ' abs' → logprob: -8.469223022460938
    8. '   ' → logprob: -8.719223022460938
    9. '0' → logprob: -8.969223022460938
    10. '  ' → logprob: -9.469223022460938

Token 53: 'a' (ID: 64)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.40345388650894165
    2. ' ab' → logprob: -1.5284538269042969
    3. ')' → logprob: -3.028453826904297
    4. '")' → logprob: -3.403453826904297
    5. ' ")' → logprob: -5.028453826904297
    6. '"' → logprob: -5.153453826904297
    7. ' )' → logprob: -6.028453826904297
    8. '))' → logprob: -6.153453826904297
    9. ' "))' → logprob: -6.153453826904297
    10. ',' → logprob: -6.528453826904297

Token 54: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4101642966270447
    2. 'b' → logprob: -1.1601643562316895
    3. '"))' → logprob: -4.1601643562316895
    4. ')")' → logprob: -6.2851643562316895
    5. '",' → logprob: -6.9101643562316895
    6. '"' → logprob: -7.1601643562316895
    7. ')' → logprob: -7.4101643562316895
    8. ',' → logprob: -7.5351643562316895
    9. 'bc' → logprob: -7.5351643562316895
    10. '"),' → logprob: -7.6601643562316895

Token 55: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019862097688019276
    2. ' )' → logprob: -7.001986026763916
    3. ',' → logprob: -7.376986026763916
    4. '   ' → logprob: -8.376986503601074
    5. '))' → logprob: -8.626986503601074
    6. '       ' → logprob: -10.876986503601074
    7. ')))' → logprob: -12.376986503601074
    8. '),' → logprob: -12.501986503601074
    9. ' ' → logprob: -12.876986503601074
    10. ',)' → logprob: -13.126986503601074

Token 56: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.185011625289917
    2. ' j' → logprob: -1.810011625289917
    3. 'i' → logprob: -5.685011863708496
    4. 'j' → logprob: -6.435011863708496
    5. ' ' → logprob: -9.060011863708496
    6. ' ' → logprob: -10.060011863708496
    7. '   ' → logprob: -10.810011863708496
    8. '    ' → logprob: -11.310011863708496
    9. '_j' → logprob: -11.810011863708496
    10. '_' → logprob: -11.872511863708496

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004450892156455666
    2. 'in' → logprob: -7.7504448890686035
    3. ' ' → logprob: -12.125445365905762
    4. 'range' → logprob: -12.250445365905762
    5. 'n' → logprob: -14.375445365905762
    6. '  ' → logprob: -14.750445365905762
    7. ' range' → logprob: -14.875445365905762
    8. '(range' → logprob: -14.875445365905762
    9. '(' → logprob: -15.000445365905762
    10. '1' → logprob: -15.375445365905762

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575944721698761
    2. ' range' → logprob: -0.825944721698761
    3. '(range' → logprob: -12.200944900512695
    4. ' ' → logprob: -16.825944900512695
    5. '	range' → logprob: -17.075944900512695
    6. '   ' → logprob: -17.450944900512695
    7. '    ' → logprob: -17.825944900512695
    8. 're' → logprob: -18.575944900512695
    9. '  ' → logprob: -18.825944900512695
    10. ' xrange' → logprob: -19.325944900512695

Token 61: '(nb' (ID: 127388)
  Prédit: '(nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nb' → logprob: -0.00010115911572938785
    2. '(len' → logprob: -9.625101089477539
    3. '(' → logprob: -10.375101089477539
    4. ' (' → logprob: -12.750101089477539
    5. '(n' → logprob: -14.750101089477539
    6. '(ab' → logprob: -15.750101089477539
    7. ' nb' → logprob: -16.50010108947754
    8. 'nb' → logprob: -16.62510108947754
    9. '(lb' → logprob: -16.87510108947754
    10. ' ' → logprob: -17.50010108947754

Token 62: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38839614391326904
    2. '):' → logprob: -1.263396143913269
    3. ',' → logprob: -3.5133962631225586
    4. '   ' → logprob: -4.888396263122559
    5. '+' → logprob: -7.263396263122559
    6. '       ' → logprob: -7.763396263122559
    7. ':' → logprob: -8.888396263122559
    8. '*' → logprob: -9.513396263122559
    9. ' ,' → logprob: -9.763396263122559
    10. '    ' → logprob: -9.888396263122559

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008906175498850644
    2. '   ' → logprob: -7.375890731811523
    3. ' l' → logprob: -8.875890731811523
    4. '<|end|>' → logprob: -9.250890731811523
    5. ':' → logprob: -11.750890731811523
    6. ' ' → logprob: -12.875890731811523
    7. 'l' → logprob: -12.875890731811523
    8. '           ' → logprob: -13.125890731811523
    9. '<|end|>' → logprob: -13.250890731811523
    10. '    ' → logprob: -13.250890731811523

Token 64: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.5390017032623291
    2. ' l' → logprob: -1.164001703262329
    3. '       ' → logprob: -2.789001703262329
    4. '   ' → logprob: -3.164001703262329
    5. '	l' → logprob: -8.03900146484375
    6. ' ' → logprob: -8.78900146484375
    7. '    ' → logprob: -9.03900146484375
    8. '  ' → logprob: -10.16400146484375
    9. '     ' → logprob: -11.16400146484375
    10. '        ' → logprob: -11.28900146484375

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017159932758659124
    2. '.' → logprob: -6.376716136932373
    3. ' .' → logprob: -12.001715660095215
    4. '.extend' → logprob: -12.626715660095215
    5. '   ' → logprob: -12.876715660095215
    6. 'append' → logprob: -14.376715660095215
    7. ').' → logprob: -14.501715660095215
    8. '.setdefault' → logprob: -15.501715660095215
    9. '>.' → logprob: -16.00171661376953
    10. '.Append' → logprob: -16.75171661376953

Token 66: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020747410599142313
    2. '((' → logprob: -8.500207901000977
    3. ' (' → logprob: -12.500207901000977
    4. '(
' → logprob: -16.125207901000977
    5. '(ab' → logprob: -16.500207901000977
    6. '(('' → logprob: -17.500207901000977
    7. ' ((' → logprob: -17.625207901000977
    8. '```' → logprob: -18.500207901000977
    9. ')' → logprob: -19.125207901000977
    10. '"' → logprob: -19.250207901000977

Token 67: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8829050064086914
    2. '(' → logprob: -1.0079050064086914
    3. '(ab' → logprob: -1.5079050064086914
    4. '(abs' → logprob: -10.132905006408691
    5. '(
' → logprob: -12.632905006408691
    6. ')' → logprob: -12.632905006408691
    7. '((' → logprob: -13.132905006408691
    8. ' ab' → logprob: -13.257905006408691
    9. '('' → logprob: -13.382905006408691
    10. 'ab' → logprob: -13.382905006408691

Token 68: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.020741458982229233
    2. ' ab' → logprob: -3.8957414627075195
    3. '(ab' → logprob: -8.77074146270752
    4. '   ' → logprob: -12.02074146270752
    5. 'аб' → logprob: -12.27074146270752
    6. 'abbr' → logprob: -12.77074146270752
    7. '#ab' → logprob: -12.89574146270752
    8. 'abb' → logprob: -12.89574146270752
    9. 'abc' → logprob: -13.02074146270752
    10. '    ' → logprob: -13.14574146270752

Token 69: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -1.4855663721391466e-05
    2. 'lst' → logprob: -11.750015258789062
    3. '[_' → logprob: -12.750015258789062
    4. '[j' → logprob: -12.875015258789062
    5. '[' → logprob: -14.125015258789062
    6. '(lst' → logprob: -14.875015258789062
    7. '_list' → logprob: -16.375015258789062
    8. '[(' → logprob: -17.000015258789062
    9. '[-' → logprob: -17.125015258789062
    10. 'Lst' → logprob: -17.250015258789062

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.79811754100956e-05
    2. '[' → logprob: -10.500038146972656
    3. ' [' → logprob: -12.500038146972656
    4. '[js' → logprob: -13.000038146972656
    5. '[i' → logprob: -13.625038146972656
    6. ')[' → logprob: -13.750038146972656
    7. '```' → logprob: -14.875038146972656
    8. '[s' → logprob: -15.125038146972656
    9. '[
' → logprob: -15.625038146972656
    10. '][' → logprob: -16.000038146972656

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027177375741302967
    2. '[j' → logprob: -6.127717971801758
    3. ' ][' → logprob: -8.627717971801758
    4. '[' → logprob: -8.877717971801758
    5. ')[' → logprob: -9.127717971801758
    6. ']' → logprob: -10.127717971801758
    7. '   ' → logprob: -11.002717971801758
    8. '"][' → logprob: -11.377717971801758
    9. ''][' → logprob: -11.627717971801758
    10. ')][' → logprob: -12.252717971801758

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.317247167928144e-05
    2. '0' → logprob: -9.500093460083008
    3. ' ' → logprob: -11.500093460083008
    4. '][' → logprob: -13.000093460083008
    5. '[' → logprob: -13.250093460083008
    6. '   ' → logprob: -13.562593460083008
    7. 'j' → logprob: -14.437593460083008
    8. '2' → logprob: -15.250093460083008
    9. '  ' → logprob: -15.375093460083008
    10. ')' → logprob: -15.375093460083008

Token 73: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008562921546399593
    2. ' ,' → logprob: -5.508563041687012
    3. ',j' → logprob: -6.008563041687012
    4. '),' → logprob: -6.633563041687012
    5. '],' → logprob: -7.758563041687012
    6. '[j' → logprob: -8.883563041687012
    7. '       ' → logprob: -9.508563041687012
    8. '   ' → logprob: -11.008563041687012
    9. 'j' → logprob: -11.883563041687012
    10. '][' → logprob: -12.133563041687012

Token 74: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1602349877357483
    2. 'j' → logprob: -1.9102349281311035
    3. ' ' → logprob: -11.910235404968262
    4. '	j' → logprob: -13.785235404968262
    5. ' ' → logprob: -14.410235404968262
    6. ',j' → logprob: -14.660235404968262
    7. '    ' → logprob: -15.035235404968262
    8. ',' → logprob: -15.035235404968262
    9. ')' → logprob: -15.160235404968262
    10. '   ' → logprob: -15.660235404968262

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.635164754698053e-05
    2. ' +' → logprob: -9.625066757202148
    3. '+
' → logprob: -16.00006675720215
    4. '<|end|>' → logprob: -16.12506675720215
    5. '+j' → logprob: -17.25006675720215
    6. '()+' → logprob: -18.00006675720215
    7. '+,' → logprob: -18.62506675720215
    8. ')+' → logprob: -18.75006675720215
    9. '+)' → logprob: -18.75006675720215
    10. '+</' → logprob: -19.00006675720215

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.750019073486328
    3. '2' → logprob: -12.125019073486328
    4. '+' → logprob: -12.375019073486328
    5. '<|end|>' → logprob: -13.875019073486328
    6. ')' → logprob: -14.375019073486328
    7. 'j' → logprob: -17.000019073486328
    8. '```' → logprob: -17.250019073486328
    9. ',' → logprob: -17.375019073486328
    10. '<|end|>' → logprob: -17.625019073486328

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026336227892898023
    2. ' ,' → logprob: -8.250263214111328
    3. ')' → logprob: -14.250263214111328
    4. '<|end|>' → logprob: -14.750263214111328
    5. '),' → logprob: -14.750263214111328
    6. ' ' → logprob: -15.625263214111328
    7. '   ' → logprob: -16.250263214111328
    8. '‌,' → logprob: -16.500263214111328
    9. 's' → logprob: -17.125263214111328
    10. ',"' → logprob: -17.125263214111328

Token 78: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002162752440199256
    2. ' "' → logprob: -6.377162933349609
    3. ''' → logprob: -8.00216293334961
    4. ')' → logprob: -9.37716293334961
    5. ',' → logprob: -11.37716293334961
    6. ' ' → logprob: -12.00216293334961
    7. '<|end|>' → logprob: -12.12716293334961
    8. ' )' → logprob: -12.62716293334961
    9. '")' → logprob: -13.50216293334961
    10. '"a' → logprob: -13.62716293334961

Token 79: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1637164789135568e-05
    2. ' b' → logprob: -11.375011444091797
    3. '"' → logprob: -16.125011444091797
    4. ')b' → logprob: -18.125011444091797
    5. ''b' → logprob: -18.625011444091797
    6. ')' → logprob: -18.750011444091797
    7. '")' → logprob: -19.250011444091797
    8. 'a' → logprob: -20.500011444091797
    9. ' ' → logprob: -21.125011444091797
    10. 's' → logprob: -21.500011444091797

Token 80: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07895742356777191
    2. ')' → logprob: -2.5789573192596436
    3. '"' → logprob: -9.828957557678223
    4. ')")' → logprob: -11.578957557678223
    5. '"))' → logprob: -13.328957557678223
    6. ')"' → logprob: -14.078957557678223
    7. ' )' → logprob: -14.453957557678223
    8. '')' → logprob: -14.578957557678223
    9. '")
' → logprob: -14.828957557678223
    10. ' ")' → logprob: -14.953957557678223

Token 81: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003191612893715501
    2. ' )' → logprob: -5.7531914710998535
    3. ')
' → logprob: -11.878191947937012
    4. '   ' → logprob: -12.003191947937012
    5. ' )
' → logprob: -14.253191947937012
    6. '))' → logprob: -16.253190994262695
    7. ')

' → logprob: -17.128190994262695
    8. '}' → logprob: -17.753190994262695
    9. ')
' → logprob: -17.753190994262695
    10. ']' → logprob: -17.878190994262695

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7535226345062256
    2. '
' → logprob: -1.3785226345062256
    3. '<|end|>' → logprob: -2.0035226345062256
    4. '    
' → logprob: -2.5035226345062256
    5. ')' → logprob: -4.378522872924805
    6. '\n' → logprob: -4.628522872924805
    7. '.sort' → logprob: -5.003522872924805
    8. ' l' → logprob: -5.878522872924805
    9. ' ' → logprob: -5.878522872924805
    10. '<|end|>' → logprob: -5.878522872924805

Token 83: ' l' (ID: 305)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1577085256576538
    2. ')' → logprob: -1.6577085256576538
    3. '\n' → logprob: -1.9077085256576538
    4. '   ' → logprob: -2.1577086448669434
    5. '    
' → logprob: -2.9077086448669434
    6. 'l' (adapté à ' l') → logprob: -3.1577086448669434
    7. ' ' → logprob: -3.4077086448669434
    8. ' l' → logprob: -3.5327086448669434
    9. '\' → logprob: -4.282708644866943
    10. 's' → logprob: -4.532708644866943

Token 84: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.35758882761001587
    2. '<|end|>' → logprob: -1.482588768005371
    3. '[' → logprob: -2.982588768005371
    4. '.' → logprob: -4.232588768005371
    5. '[:]' → logprob: -5.982588768005371
    6. '<|end|>' → logprob: -6.482588768005371
    7. ')' → logprob: -7.107588768005371
    8. '_sorted' → logprob: -7.357588768005371
    9. '.append' → logprob: -7.357588768005371
    10. '```' → logprob: -7.482588768005371

Token 85: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1003081426024437
    2. '()' → logprob: -2.3503081798553467
    3. '(key' → logprob: -10.725308418273926
    4. '((' → logprob: -10.975308418273926
    5. '(reverse' → logprob: -11.600308418273926
    6. '(

' → logprob: -12.100308418273926
    7. '```' → logprob: -12.100308418273926
    8. '("("' → logprob: -12.225308418273926
    9. '<|end|>' → logprob: -12.225308418273926
    10. '(
' → logprob: -12.225308418273926

Token 86: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7920650243759155
    2. '   ' → logprob: -2.292065143585205
    3. '\n' → logprob: -2.417065143585205
    4. '<|end|>' → logprob: -2.667065143585205
    5. ',' → logprob: -2.792065143585205
    6. '[' → logprob: -2.917065143585205
    7. '    
' → logprob: -3.292065143585205
    8. '  
' → logprob: -3.667065143585205
    9. ' ' → logprob: -3.667065143585205
    10. '\' → logprob: -3.667065143585205

Token 87: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0148826837539673
    2. ',' → logprob: -1.8898826837539673
    3. '<|end|>' → logprob: -2.1398825645446777
    4. '[' → logprob: -2.3898825645446777
    5. '   ' → logprob: -2.6398825645446777
    6. '  
' → logprob: -2.7648825645446777
    7. '    
' → logprob: -3.3898825645446777
    8. '\n' → logprob: -3.6398825645446777
    9. ' 
' → logprob: -3.8898825645446777
    10. ' ' → logprob: -3.8898825645446777

Token 88: ' ici' (ID: 27994)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.039132833480835
    2. ' #' → logprob: -1.789132833480835
    3. '#' → logprob: -1.914132833480835
    4. ' l' → logprob: -2.414132833480835
    5. ' for' → logprob: -2.664132833480835
    6. '   ' → logprob: -4.289133071899414
    7. 'return' → logprob: -4.414133071899414
    8. 'On' → logprob: -4.414133071899414
    9. ' On' → logprob: -4.414133071899414
    10. ' a' → logprob: -4.789133071899414

Token 89: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8486648797988892
    2. '   ' → logprob: -0.9736648797988892
    3. '    
' → logprob: -3.4736647605895996
    4. '
' → logprob: -3.5986647605895996
    5. ' 
' → logprob: -3.5986647605895996
    6. ')' → logprob: -3.7236647605895996
    7. '<|end|>' → logprob: -3.7236647605895996
    8. ' ' → logprob: -3.9736647605895996
    9. '  
' → logprob: -4.7236647605896
    10. '   
' → logprob: -5.3486647605896

Token 90: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.24238212406635284
    2. ''' → logprob: -1.9923821687698364
    3. 'est' → logprob: -2.992382049560547
    4. 'e' → logprob: -3.867382049560547
    5. ''s' → logprob: -5.867382049560547
    6. 'a' → logprob: -6.742382049560547
    7. '#' → logprob: -7.867382049560547
    8. ''e' → logprob: -8.117382049560547
    9. 'es' → logprob: -8.367382049560547
    10. '’est' → logprob: -8.492382049560547

Token 91: ' ok' (ID: 4763)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -1.703973412513733
    2. 'le' → logprob: -2.0789732933044434
    3. ' tri' → logprob: -2.5789732933044434
    4. 'sur' → logprob: -2.7039732933044434
    5. 'tr' → logprob: -2.8289732933044434
    6. ' le' → logprob: -2.8289732933044434
    7. 'par' → logprob: -2.9539732933044434
    8. ' sur' → logprob: -3.0789732933044434
    9. ' par' → logprob: -3.5789732933044434
    10. 'l' → logprob: -3.8289732933044434

Token 92: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18419937789440155
    2. '
' → logprob: -3.059199333190918
    3. '    
' → logprob: -3.059199333190918
    4. ' ' → logprob: -3.934199333190918
    5. '   
' → logprob: -4.684199333190918
    6. '  
' → logprob: -4.809199333190918
    7. ' for' → logprob: -4.934199333190918
    8. ' 
' → logprob: -5.059199333190918
    9. ',' → logprob: -5.184199333190918
    10. '\n' → logprob: -5.309199333190918

Token 93: ' mais' (ID: 2899)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.055582880973816
    2. ' mais' → logprob: -1.555582880973816
    3. ' but' → logprob: -1.805582880973816
    4. ' ' → logprob: -3.0555830001831055
    5. '    
' → logprob: -3.4305830001831055
    6. ' on' → logprob: -3.8055830001831055
    7. ' et' → logprob: -3.8055830001831055
    8. 'l' → logprob: -3.9305830001831055
    9. ' car' → logprob: -3.9305830001831055
    10. '    ' → logprob: -4.1805830001831055

Token 94: ' si' (ID: 1784)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.9898344278335571
    2. ' on' → logprob: -1.3648344278335571
    3. ' maintenant' → logprob: -3.2398343086242676
    4. ' le' → logprob: -3.3648343086242676
    5. ' c' → logprob: -3.4898343086242676
    6. ' je' → logprob: -3.8648343086242676
    7. ' for' → logprob: -3.9898343086242676
    8. ' l' → logprob: -3.9898343086242676
    9. ' ça' → logprob: -3.9898343086242676
    10. 'il' → logprob: -4.114834308624268

Token 95: ' besoin' (ID: 27703)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.07995089888572693
    2. 'on' → logprob: -3.4549508094787598
    3. ' l' → logprob: -4.45495080947876
    4. ' la' → logprob: -6.07995080947876
    5. ' c' → logprob: -6.20495080947876
    6. 'l' → logprob: -6.32995080947876
    7. ' ' → logprob: -6.32995080947876
    8. 'le' → logprob: -6.32995080947876
    9. ' tu' → logprob: -6.32995080947876
    10. ' le' → logprob: -6.45495080947876

Token 96: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13456720113754272
    2. '<|end|>' → logprob: -2.8845672607421875
    3. '   ' → logprob: -3.7595672607421875
    4. ' ,' → logprob: -4.3845672607421875
    5. ':' → logprob: -4.5095672607421875
    6. '    
' → logprob: -5.6345672607421875
    7. '.' → logprob: -5.8845672607421875
    8. ')' → logprob: -6.2595672607421875
    9. '<|end|>' → logprob: -6.2595672607421875
    10. ' for' → logprob: -6.3845672607421875

Token 97: ' rever' (ID: 51759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'ra' (ID: 614)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.36333131790161133
    2. 'tir' → logprob: -1.7383313179016113
    3. 's' → logprob: -3.2383313179016113
    4. 'se' → logprob: -4.113331317901611
    5. 'ti' → logprob: -4.238331317901611
    6. 'tie' → logprob: -4.488331317901611
    7. 'ts' → logprob: -5.113331317901611
    8. 'ser' → logprob: -5.363331317901611
    9. 'ter' → logprob: -5.363331317901611
    10. 'tis' → logprob: -5.488331317901611

Token 99: '...

' (ID: 2161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08297973871231079
    2. '<|end|>' → logprob: -3.457979679107666
    3. '
' → logprob: -4.332979679107666
    4. ',' → logprob: -4.582979679107666
    5. '\n' → logprob: -4.832979679107666
    6. '    
' → logprob: -5.207979679107666
    7. '\' → logprob: -5.832979679107666
    8. ' ' → logprob: -5.832979679107666
    9. '<|end|>' → logprob: -6.707979679107666
    10. ' 
' → logprob: -7.332979679107666

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09867381304502487
    2. '
' → logprob: -3.3486738204956055
    3. '    
' → logprob: -3.7236738204956055
    4. ' for' → logprob: -4.7236738204956055
    5. '  
' → logprob: -4.9736738204956055
    6. ' 
' → logprob: -5.4736738204956055
    7. '   
' → logprob: -5.9736738204956055
    8. ' ' → logprob: -6.0986738204956055
    9. ',' → logprob: -6.2236738204956055
    10. 'n' → logprob: -6.9736738204956055

Token 101: ' first' (ID: 1577)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0594220161437988
    2. ' res' → logprob: -1.5594220161437988
    3. 'diff' → logprob: -2.559422016143799
    4. ' for' → logprob: -2.809422016143799
    5. 'd' → logprob: -2.934422016143799
    6. 'for' → logprob: -3.059422016143799
    7. 'm' → logprob: -3.184422016143799
    8. 'result' → logprob: -3.434422016143799
    9. 'min' → logprob: -3.684422016143799
    10. 'i' → logprob: -4.434422016143799

Token 102: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035652756690979004
    2. ' =' → logprob: -3.9106526374816895
    3. '=' → logprob: -4.7856526374816895
    4. '_space' → logprob: -6.5356526374816895
    5. '_val' → logprob: -6.7856526374816895
    6. ',' → logprob: -7.0356526374816895
    7. '[' → logprob: -7.7856526374816895
    8. ')' → logprob: -7.9106526374816895
    9. '_value' → logprob: -8.035653114318848
    10. '_a' → logprob: -8.035653114318848

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003740933258086443
    2. '=' → logprob: -6.0037407875061035
    3. ',' → logprob: -7.1287407875061035
    4. '_' → logprob: -8.378741264343262
    5. 's' → logprob: -9.503741264343262
    6. ' ' → logprob: -9.753741264343262
    7. ' ,' → logprob: -10.503741264343262
    8. '   ' → logprob: -10.878741264343262
    9. '_idx' → logprob: -11.003741264343262
    10. '  ' → logprob: -12.503741264343262

Token 104: ' ' (ID: 220)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.34311363101005554
    2. '0' → logprob: -2.343113660812378
    3. ' ' → logprob: -2.468113660812378
    4. 'l' → logprob: -3.218113660812378
    5. ' float' → logprob: -3.593113660812378
    6. ' sum' → logprob: -4.093113422393799
    7. ' abs' → logprob: -4.593113422393799
    8. 'float' → logprob: -4.968113422393799
    9. 'abs' → logprob: -5.593113422393799
    10. 'sum' → logprob: -5.718113422393799

Token 105: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.28991028666496277
    2. '0' → logprob: -1.7899103164672852
    3. 'abs' → logprob: -3.539910316467285
    4. 'float' → logprob: -3.664910316467285
    5. 'sum' → logprob: -4.039910316467285
    6. ' l' → logprob: -4.664910316467285
    7. ' float' → logprob: -7.164910316467285
    8. ' ' → logprob: -7.539910316467285
    9. ' sum' → logprob: -7.914910316467285
    10. ' abs' → logprob: -8.164910316467285

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24234366416931152
    2. '
' → logprob: -1.6173436641693115
    3. '<|end|>' → logprob: -4.742343902587891
    4. '    
' → logprob: -6.367343902587891
    5. ' ' → logprob: -6.492343902587891
    6. ',' → logprob: -6.992343902587891
    7. ' for' → logprob: -7.242343902587891
    8. ' 
' → logprob: -7.617343902587891
    9. '+' → logprob: -8.11734390258789
    10. '  ' → logprob: -8.11734390258789

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05230759456753731
    2. '<|end|>' → logprob: -3.552307605743408
    3. '
' → logprob: -4.302307605743408
    4. ' for' → logprob: -5.552307605743408
    5. ' ' → logprob: -6.552307605743408
    6. ',' → logprob: -7.552307605743408
    7. '    
' → logprob: -7.552307605743408
    8. '<|end|>' → logprob: -7.677307605743408
    9. 'for' → logprob: -8.30230712890625
    10. ')' → logprob: -8.30230712890625

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030875440686941147
    2. ' for' → logprob: -3.9058754444122314
    3. 'i' → logprob: -6.155875205993652
    4. 'first' → logprob: -6.280875205993652
    5. 'min' → logprob: -6.905875205993652
    6. 'l' → logprob: -6.905875205993652
    7. 'res' → logprob: -7.780875205993652
    8. 'best' → logprob: -7.905875205993652
    9. 'if' → logprob: -8.155875205993652
    10. 'max' → logprob: -8.280875205993652

Token 109: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2516237199306488
    2. 'i' → logprob: -2.1266236305236816
    3. ' k' → logprob: -2.7516236305236816
    4. 'k' → logprob: -3.3766236305236816
    5. ' x' → logprob: -6.751623630523682
    6. ' idx' → logprob: -7.501623630523682
    7. 'x' → logprob: -7.626623630523682
    8. '_' → logprob: -7.751623630523682
    9. ' elem' → logprob: -8.00162410736084
    10. ' item' → logprob: -8.12662410736084

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018206601962447166
    2. 'in' → logprob: -4.018206596374512
    3. ' ' → logprob: -10.018206596374512
    4. ',' → logprob: -12.393206596374512
    5. '  ' → logprob: -12.893206596374512
    6. '	in' → logprob: -13.518206596374512
    7. '   ' → logprob: -14.143206596374512
    8. 'range' → logprob: -14.643206596374512
    9. 'k' → logprob: -14.768206596374512
    10. ' ,' → logprob: -14.893206596374512

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28435125946998596
    2. 'range' → logprob: -1.4093512296676636
    3. ' l' → logprob: -5.909351348876953
    4. 'l' → logprob: -7.909351348876953
    5. '(range' → logprob: -9.784351348876953
    6. '	range' → logprob: -10.909351348876953
    7. ')' → logprob: -11.784351348876953
    8. ' ' → logprob: -11.784351348876953
    9. ' xrange' → logprob: -12.034351348876953
    10. '  ' → logprob: -12.784351348876953

Token 112: '(nb' (ID: 127388)
  Prédit: '(nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nb' → logprob: -0.03215838968753815
    2. '(len' → logprob: -4.032158374786377
    3. '(' → logprob: -4.282158374786377
    4. ' (' → logprob: -10.032158851623535
    5. '(first' → logprob: -10.532158851623535
    6. '(n' → logprob: -11.157158851623535
    7. '(k' → logprob: -12.657158851623535
    8. '(min' → logprob: -14.032158851623535
    9. '(l' → logprob: -14.032158851623535
    10. ' nb' → logprob: -14.157158851623535

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2148539423942566
    2. '):
' → logprob: -1.7148540019989014
    3. '-' → logprob: -4.964853763580322
    4. '   ' → logprob: -5.964853763580322
    5. '+' → logprob: -6.089853763580322
    6. '*' → logprob: -7.839853763580322
    7. '//' → logprob: -7.964853763580322
    8. ')' → logprob: -8.21485424041748
    9. ' -' → logprob: -8.58985424041748
    10. ' ):' → logprob: -8.71485424041748

Token 114: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6457902789115906
    2. ' first' → logprob: -1.0207903385162354
    3. 'first' → logprob: -2.6457903385162354
    4. '       ' → logprob: -3.8957903385162354
    5. '<|end|>' → logprob: -4.395790100097656
    6. '	first' → logprob: -4.645790100097656
    7. 'First' → logprob: -7.520790100097656
    8. ' ' → logprob: -8.020790100097656
    9. ':first' → logprob: -8.270790100097656
    10. '_first' → logprob: -8.770790100097656

Token 115: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.011431162245571613
    2. ' first' → logprob: -5.1364312171936035
    3. '   ' → logprob: -5.2614312171936035
    4. 'if' → logprob: -8.261430740356445
    5. '	first' → logprob: -10.386430740356445
    6. '       ' → logprob: -12.761430740356445
    7. ' ' → logprob: -13.011430740356445
    8. ' if' → logprob: -13.011430740356445
    9. '  ' → logprob: -13.261430740356445
    10. '    ' → logprob: -15.136430740356445

Token 116: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00041267683263868093
    2. '_' → logprob: -8.750412940979004
    3. 'sum' → logprob: -9.125412940979004
    4. '_s' → logprob: -9.750412940979004
    5. 's' → logprob: -10.250412940979004
    6. ' _' → logprob: -11.625412940979004
    7. ')' → logprob: -11.750412940979004
    8. '_cos' → logprob: -12.125412940979004
    9. '_first' → logprob: -13.125412940979004
    10. ',' → logprob: -13.125412940979004

Token 117: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.316750705242157
    2. '+=' → logprob: -1.3167507648468018
    3. '+' → logprob: -5.691750526428223
    4. ']+=' → logprob: -9.816750526428223
    5. ' +' → logprob: -11.191750526428223
    6. '   ' → logprob: -11.566750526428223
    7. '    ' → logprob: -11.941750526428223
    8. ',' → logprob: -12.191750526428223
    9. '+=(' → logprob: -12.816750526428223
    10. ')' → logprob: -12.941750526428223

Token 118: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10023579001426697
    2. ' l' → logprob: -2.3502357006073
    3. '	l' → logprob: -11.350235939025879
    4. '   ' → logprob: -11.975235939025879
    5. 'abs' → logprob: -12.100235939025879
    6. '(l' → logprob: -13.100235939025879
    7. ' abs' → logprob: -14.475235939025879
    8. ' ' → logprob: -14.475235939025879
    9. 'ab' → logprob: -14.600235939025879
    10. '+l' → logprob: -14.850235939025879

Token 119: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -10.875020027160645
    3. 'k' → logprob: -15.000020027160645
    4. ' [' → logprob: -15.500020027160645
    5. '[l' → logprob: -16.250019073486328
    6. '[s' → logprob: -16.875019073486328
    7. '[key' → logprob: -17.125019073486328
    8. '[i' → logprob: -17.375019073486328
    9. '[m' → logprob: -17.375019073486328
    10. '[
' → logprob: -17.625019073486328

Token 120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00691724568605423
    2. '[' → logprob: -5.006917476654053
    3. ' ][' → logprob: -9.256916999816895
    4. '0' → logprob: -9.756916999816895
    5. ']' → logprob: -10.756916999816895
    6. '   ' → logprob: -11.631916999816895
    7. '"][' → logprob: -12.256916999816895
    8. '}[' → logprob: -13.006916999816895
    9. '>[' → logprob: -13.506916999816895
    10. ')[' → logprob: -13.631916999816895

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -15.50000286102295
    4. '00' → logprob: -16.687501907348633
    5. '   ' → logprob: -16.875001907348633
    6. '[' → logprob: -17.500001907348633
    7. '2' → logprob: -18.062501907348633
    8. '012' → logprob: -18.187501907348633
    9. '01' → logprob: -18.562501907348633
    10. '000' → logprob: -18.687501907348633

Token 122: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025575930252671242
    2. ']' → logprob: -4.275576114654541
    3. '[' → logprob: -4.900576114654541
    4. '*' → logprob: -6.775576114654541
    5. ' )' → logprob: -6.775576114654541
    6. '])' → logprob: -7.150576114654541
    7. ' *' → logprob: -8.150575637817383
    8. ')]' → logprob: -8.525575637817383
    9. ' ]' → logprob: -9.775575637817383
    10. ',' → logprob: -9.900575637817383

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31863805651664734
    2. '<|end|>' → logprob: -1.9436380863189697
    3. '   ' → logprob: -2.6936380863189697
    4. ' 
' → logprob: -3.5686380863189697
    5. ' ' → logprob: -4.068637847900391
    6. '\n' → logprob: -5.443637847900391
    7. ')' → logprob: -5.943637847900391
    8. '    
' → logprob: -6.068637847900391
    9. ' return' → logprob: -6.318637847900391
    10. 'return' → logprob: -6.568637847900391

Token 124: ' hen' (ID: 23186)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6567515134811401
    2. '<|end|>' → logprob: -1.7817515134811401
    3. '   ' → logprob: -2.1567516326904297
    4. ' ' → logprob: -3.0317516326904297
    5. ' 
' → logprob: -3.1567516326904297
    6. '\n' → logprob: -3.5317516326904297
    7. ')' → logprob: -4.28175163269043
    8. 'return' → logprob: -4.28175163269043
    9. '    
' → logprob: -4.90675163269043
    10. ' for' → logprob: -5.03175163269043

Token 125: ' =' (ID: 314)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.37087181210517883
    2. 's' → logprob: -2.6208717823028564
    3. 't' → logprob: -2.6208717823028564
    4. 'r' → logprob: -3.2458717823028564
    5. 'ce' → logprob: -3.3708717823028564
    6. 'ry' → logprob: -4.1208720207214355
    7. 'd' → logprob: -4.2458720207214355
    8. 'rie' → logprob: -4.4958720207214355
    9. ' =' → logprob: -4.7458720207214355
    10. 'g' → logprob: -4.9958720207214355

Token 126: ' l' (ID: 305)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.9393190741539001
    2. ' float' → logprob: -1.439319133758545
    3. 'first' → logprob: -2.064319133758545
    4. 'float' → logprob: -2.689319133758545
    5. ' nb' → logprob: -3.064319133758545
    6. ' l' → logprob: -3.564319133758545
    7. ' ' → logprob: -4.189319133758545
    8. ' abs' → logprob: -4.314319133758545
    9. ' min' → logprob: -4.439319133758545
    10. 'nb' → logprob: -4.939319133758545

Token 127: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.2914387881755829
    2. '[' → logprob: -1.4164388179779053
    3. '[:]' → logprob: -4.791438579559326
    4. '[n' → logprob: -6.541438579559326
    5. '[len' → logprob: -8.291439056396484
    6. ' [:' → logprob: -10.541439056396484
    7. '[min' → logprob: -10.791439056396484
    8. '[:-' → logprob: -10.916439056396484
    9. '[k' → logprob: -11.166439056396484
    10. '[first' → logprob: -11.291439056396484

Token 128: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.057216644287109375
    2. '0' → logprob: -2.9322166442871094
    3. '-' → logprob: -7.182216644287109
    4. ' nb' → logprob: -7.432216644287109
    5. 'k' → logprob: -7.807216644287109
    6. '(nb' → logprob: -8.68221664428711
    7. '1' → logprob: -9.30721664428711
    8. '_nb' → logprob: -10.05721664428711
    9. '	nb' → logprob: -10.05721664428711
    10. ' ' → logprob: -10.18221664428711

Token 129: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6716761589050293
    2. '][' → logprob: -0.7966761589050293
    3. ' -' → logprob: -3.4216761589050293
    4. ']' → logprob: -5.671676158905029
    5. ' ][' → logprob: -7.171676158905029
    6. '   ' → logprob: -7.671676158905029
    7. '[' → logprob: -8.171676635742188
    8. ':' → logprob: -8.296676635742188
    9. '+' → logprob: -8.796676635742188
    10. ' ' → logprob: -10.296676635742188

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.011373155459296e-05
    2. '1' → logprob: -10.750030517578125
    3. '2' → logprob: -12.000030517578125
    4. ' ' → logprob: -13.937530517578125
    5. ':' → logprob: -14.375030517578125
    6. '[' → logprob: -15.125030517578125
    7. '-' → logprob: -15.812530517578125
    8. '
' → logprob: -16.937530517578125
    9. '"' → logprob: -17.062530517578125
    10. '۰' → logprob: -17.062530517578125

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08170994371175766
    2. ' -' → logprob: -3.206709861755371
    3. '-' → logprob: -3.706709861755371
    4. ' ]' → logprob: -4.706709861755371
    5. ']-' → logprob: -5.581709861755371
    6. ')' → logprob: -7.581709861755371
    7. ' ' → logprob: -10.331709861755371
    8. ' )' → logprob: -11.081709861755371
    9. '])' → logprob: -11.581709861755371
    10. ' ' → logprob: -12.081709861755371

Token 132: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07737231999635696
    2. ' -' → logprob: -3.0773723125457764
    3. '-min' → logprob: -4.2023725509643555
    4. '<|end|>' → logprob: -5.0773725509643555
    5. '-first' → logprob: -6.5773725509643555
    6. '+' → logprob: -6.8273725509643555
    7. ')' → logprob: -7.4523725509643555
    8. ' ' → logprob: -7.7023725509643555
    9. ',' → logprob: -7.8273725509643555
    10. '-s' → logprob: -7.9523725509643555

Token 133: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019189994782209396
    2. '-min' → logprob: -4.894189834594727
    3. '<|end|>' → logprob: -5.269189834594727
    4. ' -' → logprob: -5.644189834594727
    5. '+' → logprob: -7.769189834594727
    6. '
' → logprob: -7.894189834594727
    7. '-first' → logprob: -8.144189834594727
    8. '-
' → logprob: -8.144189834594727
    9. '-return' → logprob: -8.644189834594727
    10. ')' → logprob: -8.769189834594727

Token 134: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06243536248803139
    2. ' -' → logprob: -3.5624353885650635
    3. ')' → logprob: -4.687435150146484
    4. '+' → logprob: -4.937435150146484
    5. ' ' → logprob: -5.562435150146484
    6. '<|end|>' → logprob: -5.937435150146484
    7. '#' → logprob: -6.312435150146484
    8. ',' → logprob: -6.687435150146484
    9. ']' → logprob: -6.812435150146484
    10. '
' → logprob: -7.437435150146484

Token 135: ' vérifier' (ID: 93671)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7240617871284485
    2. 'bs' → logprob: -1.3490617275238037
    3. 'l' → logprob: -2.8490617275238037
    4. 'pp' → logprob: -3.9740617275238037
    5. '#' → logprob: -4.224061965942383
    6. 'fter' → logprob: -4.349061965942383
    7. ' continuer' → logprob: -4.974061965942383
    8. 'nd' → logprob: -4.974061965942383
    9. ' l' → logprob: -5.099061965942383
    10. ')' → logprob: -5.224061965942383

Token 136: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' mais' (ID: 2899)
  Prédit: ' hen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hen' → logprob: -0.7534332871437073
    2. ' if' → logprob: -2.0034332275390625
    3. ' return' → logprob: -2.5034332275390625
    4. ' ' → logprob: -2.5034332275390625
    5. ')' → logprob: -3.1284332275390625
    6. ' for' → logprob: -3.5034332275390625
    7. 'return' → logprob: -4.5034332275390625
    8. ' #' → logprob: -4.5034332275390625
    9. ' l' → logprob: -4.6909332275390625
    10. 'if' → logprob: -4.8159332275390625

Token 138: ' c' (ID: 274)
  Prédit: ' hen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hen' → logprob: -0.11284136772155762
    2. 'hen' → logprob: -2.9878413677215576
    3. '#' → logprob: -4.112841606140137
    4. 'for' → logprob: -4.987841606140137
    5. 'if' → logprob: -5.112841606140137
    6. ' for' → logprob: -5.237841606140137
    7. ' if' → logprob: -5.862841606140137
    8. ' #' → logprob: -6.112841606140137
    9. 'l' → logprob: -6.112841606140137
    10. ' l' → logprob: -6.237841606140137

Token 139: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.051554616540670395
    2. 'est' → logprob: -3.8015546798706055
    3. ''s' → logprob: -4.9265546798706055
    4. 'e' → logprob: -5.1765546798706055
    5. ''' → logprob: -5.4265546798706055
    6. 'a' → logprob: -5.5515546798706055
    7. '#' → logprob: -6.9265546798706055
    8. 'orrect' → logprob: -7.1765546798706055
    9. ''''' → logprob: -7.5515546798706055
    10. 'omme' → logprob: -7.9265546798706055

Token 140: ' cens' (ID: 55288)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.176290512084961
    2. 'l' → logprob: -1.801290512084961
    3. ' correct' → logprob: -2.551290512084961
    4. 'la' → logprob: -2.676290512084961
    5. 'bien' → logprob: -2.801290512084961
    6. ' le' → logprob: -3.176290512084961
    7. 'correct' → logprob: -3.551290512084961
    8. 'une' → logprob: -4.051290512084961
    9. 'cel' → logprob: -4.051290512084961
    10. ' la' → logprob: -4.176290512084961

Token 141: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005788889247924089
    2. 'e' → logprob: -7.875578880310059
    3. 'ed' → logprob: -9.250578880310059
    4. 'u' → logprob: -10.875578880310059
    5. 'ée' → logprob: -11.250578880310059
    6. 'és' → logprob: -11.250578880310059
    7. 'sens' → logprob: -11.250578880310059
    8. 's' → logprob: -11.375578880310059
    9. 'ément' → logprob: -11.500578880310059
    10. ' sens' → logprob: -12.000578880310059

Token 142: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.1153627261519432
    2. ' être' → logprob: -2.3653626441955566
    3. '#' → logprob: -5.490362644195557
    4. 'etre' → logprob: -5.740362644195557
    5. 'cor' → logprob: -6.365362644195557
    6. ' etre' → logprob: -6.740362644195557
    7. ' correspond' → logprob: -7.115362644195557
    8. ''être' → logprob: -7.365362644195557
    9. 'repr' → logprob: -8.240363121032715
    10. 'import' → logprob: -8.490363121032715

Token 143: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.23142828047275543
    2. ' le' → logprob: -1.8564282655715942
    3. 'l' → logprob: -3.856428384780884
    4. 'la' → logprob: -4.356428146362305
    5. ' la' → logprob: -4.981428146362305
    6. 'the' → logprob: -5.731428146362305
    7. ' l' → logprob: -5.856428146362305
    8. ' the' → logprob: -7.231428146362305
    9. ' correct' → logprob: -7.231428146362305
    10. 'un' → logprob: -7.981428146362305

Token 144: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3600715100765228
    2. 'plus' → logprob: -1.7350715398788452
    3. 'm' → logprob: -3.1100714206695557
    4. 'prem' → logprob: -3.3600714206695557
    5. 'me' → logprob: -4.110071659088135
    6. 'minimum' → logprob: -4.860071659088135
    7. 'pivot' → logprob: -5.735071659088135
    8. 'diff' → logprob: -6.110071659088135
    9. 'distance' → logprob: -6.360071659088135
    10. 'min' → logprob: -6.485071659088135

Token 145: ' suivante' (ID: 107439)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0808459520339966
    2. 'min' → logprob: -2.080845832824707
    3. ' -' → logprob: -2.455845832824707
    4. 'minimum' → logprob: -2.580845832824707
    5. 'max' → logprob: -3.330845832824707
    6. ')' → logprob: -3.330845832824707
    7. ' de' → logprob: -3.455845832824707
    8. '#' → logprob: -3.580845832824707
    9. '-min' → logprob: -3.830845832824707
    10. ' minimale' → logprob: -3.955845832824707

Token 146: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' hen' (ID: 23186)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7634778618812561
    2. 'for' → logprob: -2.2634778022766113
    3. 'min' → logprob: -2.2634778022766113
    4. 'if' → logprob: -3.2634778022766113
    5. 'diff' → logprob: -3.2634778022766113
    6. ' for' → logprob: -3.5134778022766113
    7. ' return' → logprob: -3.7634778022766113
    8. 'm' → logprob: -4.013477802276611
    9. 'max' → logprob: -4.013477802276611
    10. '#' → logprob: -4.263477802276611

Token 149: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3086849451065063
    2. '-' → logprob: -2.058684825897217
    3. '<|end|>' → logprob: -2.058684825897217
    4. ',' → logprob: -2.308684825897217
    5. ' ' → logprob: -2.433684825897217
    6. ' -' → logprob: -2.933684825897217
    7. '=' → logprob: -3.308684825897217
    8. ')' → logprob: -3.308684825897217
    9. ' +' → logprob: -3.433684825897217
    10. '[' → logprob: -3.933684825897217

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04950697347521782
    2. '=' → logprob: -3.049506902694702
    3. ' ' → logprob: -7.049507141113281
    4. ',' → logprob: -11.049507141113281
    5. '   ' → logprob: -11.424507141113281
    6. '_' → logprob: -11.799507141113281
    7. '  ' → logprob: -12.299507141113281
    8. ' ,' → logprob: -13.299507141113281
    9. ' ' → logprob: -13.924507141113281
    10. '=l' → logprob: -13.987007141113281

Token 151: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6481109857559204
    2. ' l' → logprob: -0.7731109857559204
    3. ' hen' → logprob: -5.273110866546631
    4. '0' → logprob: -5.898110866546631
    5. 'float' → logprob: -6.398110866546631
    6. 'sum' → logprob: -7.148110866546631
    7. 'abs' → logprob: -7.273110866546631
    8. ' ' → logprob: -7.273110866546631
    9. 'first' → logprob: -7.398110866546631
    10. ' float' → logprob: -7.648110866546631

Token 152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.196732960641384e-05
    2. '[len' → logprob: -9.750082015991211
    3. '[n' → logprob: -12.625082015991211
    4. '[-' → logprob: -12.625082015991211
    5. '[num' → logprob: -12.750082015991211
    6. ' [' → logprob: -13.000082015991211
    7. '[min' → logprob: -13.250082015991211
    8. '[:' → logprob: -13.375082015991211
    9. '[k' → logprob: -14.375082015991211
    10. 'index' → logprob: -14.750082015991211

Token 153: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.002883452922105789
    2. '(nb' → logprob: -6.002883434295654
    3. ' nb' → logprob: -9.127883911132812
    4. '[' → logprob: -9.502883911132812
    5. '0' → logprob: -9.752883911132812
    6. '-' → logprob: -9.752883911132812
    7. '(' → logprob: -10.252883911132812
    8. '_nb' → logprob: -10.627883911132812
    9. '	nb' → logprob: -11.627883911132812
    10. '1' → logprob: -11.877883911132812

Token 154: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0066245426423847675
    2. ' +' → logprob: -5.631624698638916
    3. '][' → logprob: -6.131624698638916
    4. '-' → logprob: -7.256624698638916
    5. '[' → logprob: -9.881624221801758
    6. '+[' → logprob: -10.131624221801758
    7. '   ' → logprob: -10.756624221801758
    8. '+
' → logprob: -11.881624221801758
    9. ' -' → logprob: -12.006624221801758
    10. '
' → logprob: -12.381624221801758

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '2' → logprob: -12.000011444091797
    3. ' ' → logprob: -12.375011444091797
    4. '0' → logprob: -15.000011444091797
    5. ']' → logprob: -15.375011444091797
    6. '   ' → logprob: -16.875011444091797
    7. '3' → logprob: -17.000011444091797
    8. '```' → logprob: -17.125011444091797
    9. '
' → logprob: -17.750011444091797
    10. '(' → logprob: -17.750011444091797

Token 156: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00026097820955328643
    2. '[' → logprob: -8.750261306762695
    3. ' ][' → logprob: -10.000261306762695
    4. ']' → logprob: -10.500261306762695
    5. '"][' → logprob: -10.875261306762695
    6. '   ' → logprob: -12.625261306762695
    7. ''][' → logprob: -12.750261306762695
    8. ')[' → logprob: -12.875261306762695
    9. ')][' → logprob: -14.625261306762695
    10. '```' → logprob: -15.375261306762695

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8550976164988242e-05
    2. '][' → logprob: -11.375018119812012
    3. ' ' → logprob: -12.375018119812012
    4. '[' → logprob: -13.125018119812012
    5. '1' → logprob: -14.375018119812012
    6. '   ' → logprob: -16.125019073486328
    7. ')' → logprob: -17.875019073486328
    8. ')[' → logprob: -17.875019073486328
    9. ']' → logprob: -18.375019073486328
    10. '  ' → logprob: -18.750019073486328

Token 158: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3155791163444519
    2. ']' → logprob: -1.3155791759490967
    3. ' )' → logprob: -6.565578937530518
    4. ' ]' → logprob: -7.315578937530518
    5. ')]' → logprob: -9.440579414367676
    6. '<|end|>' → logprob: -9.565579414367676
    7. '   ' → logprob: -10.690579414367676
    8. '])' → logprob: -10.815579414367676
    9. ' ' → logprob: -11.190579414367676
    10. '}' → logprob: -11.690579414367676

Token 159: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' seen' (ID: 6177)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.575339436531067
    2. 'for' → logprob: -2.0753393173217773
    3. 'min' → logprob: -2.2003393173217773
    4. ' for' → logprob: -2.4503393173217773
    5. ' if' → logprob: -2.5753393173217773
    6. 'best' → logprob: -2.9503393173217773
    7. '   ' → logprob: -3.0753393173217773
    8. '
' → logprob: -3.2003393173217773
    9. '#' → logprob: -3.3253393173217773
    10. 'result' → logprob: -3.4503393173217773

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10628710687160492
    2. '=' → logprob: -2.3562870025634766
    3. '<|end|>' → logprob: -5.606287002563477
    4. '_' → logprob: -7.481287002563477
    5. ' ' → logprob: -7.856287002563477
    6. 's' → logprob: -8.106287002563477
    7. ',' → logprob: -8.231287002563477
    8. '<|end|>' → logprob: -8.856287002563477
    9. '_tokens' → logprob: -8.981287002563477
    10. '.setdefault' → logprob: -9.356287002563477

Token 162: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.18426145613193512
    2. ' set' → logprob: -1.934261441230774
    3. '{}' → logprob: -3.8092615604400635
    4. '[]' → logprob: -7.434261322021484
    5. '{' → logprob: -8.059261322021484
    6. ' {}' → logprob: -8.059261322021484
    7. '[' → logprob: -8.434261322021484
    8. ' [' → logprob: -9.809261322021484
    9. ' []' → logprob: -10.309261322021484
    10. ' ' → logprob: -10.684261322021484

Token 163: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002728985855355859
    2. '(' → logprob: -8.750272750854492
    3. '()
' → logprob: -9.375272750854492
    4. '()\' → logprob: -11.500272750854492
    5. ' ()' → logprob: -11.750272750854492
    6. '()

' → logprob: -12.000272750854492
    7. '();' → logprob: -13.625272750854492
    8. '()]' → logprob: -13.875272750854492
    9. '<|end|>' → logprob: -14.500272750854492
    10. '(),' → logprob: -14.625272750854492

Token 164: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' maj' (ID: 15575)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.76224285364151
    2. ' result' → logprob: -1.6372427940368652
    3. ' res' → logprob: -2.1372427940368652
    4. 'res' → logprob: -2.2622427940368652
    5. 'total' → logprob: -3.8872427940368652
    6. ' for' → logprob: -4.137242794036865
    7. ' total' → logprob: -4.512242794036865
    8. 'for' → logprob: -4.762242794036865
    9. 'sum' → logprob: -4.762242794036865
    10. 'answer' → logprob: -5.012242794036865

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46371370553970337
    2. ' =' → logprob: -1.0887136459350586
    3. '   ' → logprob: -4.963713645935059
    4. '_seen' → logprob: -5.588713645935059
    5. '()' → logprob: -5.713713645935059
    6. 'e' → logprob: -5.713713645935059
    7. '=[]' → logprob: -5.838713645935059
    8. 'ed' → logprob: -5.963713645935059
    9. 'es' → logprob: -6.713713645935059
    10. '(' → logprob: -6.838713645935059

Token 167: ' None' (ID: 4662)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2528502941131592
    2. ' hen' → logprob: -1.2528502941131592
    3. ' float' → logprob: -1.7528502941131592
    4. ' first' → logprob: -2.627850294113159
    5. ' []' → logprob: -3.002850294113159
    6. '0' → logprob: -3.377850294113159
    7. ' {}' → logprob: -3.752850294113159
    8. 'float' → logprob: -4.002850532531738
    9. ' [' → logprob: -4.127850532531738
    10. '[]' → logprob: -5.002850532531738

Token 168: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' flag' (ID: 9641)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3504018187522888
    2. 'for' → logprob: -1.4754018783569336
    3. '<|end|>' → logprob: -3.7254018783569336
    4. ' ' → logprob: -3.9754018783569336
    5. '   ' → logprob: -4.975401878356934
    6. ' 
' → logprob: -5.850401878356934
    7. ')' → logprob: -5.975401878356934
    8. ' =' → logprob: -6.350401878356934
    9. '
' → logprob: -6.350401878356934
    10. '    ' → logprob: -6.475401878356934

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01445717178285122
    2. '=' → logprob: -4.2644572257995605
    3. ' ' → logprob: -8.639456748962402
    4. '_' → logprob: -10.014456748962402
    5. ',' → logprob: -10.764456748962402
    6. '=False' → logprob: -11.264456748962402
    7. '<|end|>' → logprob: -11.264456748962402
    8. ':' → logprob: -11.889456748962402
    9. ')' → logprob: -12.014456748962402
    10. '=True' → logprob: -12.889456748962402

Token 172: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.4976057708263397
    2. 'False' → logprob: -1.372605800628662
    3. ' True' → logprob: -2.122605800628662
    4. 'True' → logprob: -3.997605800628662
    5. ' ' → logprob: -8.372605323791504
    6. '0' → logprob: -8.622605323791504
    7. ' None' → logprob: -9.997605323791504
    8. 'None' → logprob: -11.122605323791504
    9. '   ' → logprob: -11.997605323791504
    10. '1' → logprob: -12.747605323791504

Token 173: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0919107049703598
    2. ' for' → logprob: -3.7169106006622314
    3. '<|end|>' → logprob: -4.0919108390808105
    4. '    ' → logprob: -4.4669108390808105
    5. '   ' → logprob: -4.7169108390808105
    6. 'for' (adapté à ' for') → logprob: -4.8419108390808105
    7. ')' → logprob: -5.3419108390808105
    8. ' 
' → logprob: -5.5919108390808105
    9. ' )' → logprob: -6.0919108390808105
    10. ':' → logprob: -6.4669108390808105

Token 176: ' val' (ID: 1459)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.1108274459838867
    2. ' i' → logprob: -1.6108274459838867
    3. ' x' → logprob: -1.7358274459838867
    4. ' val' → logprob: -1.7358274459838867
    5. ' item' → logprob: -3.2358274459838867
    6. ' value' → logprob: -3.9858274459838867
    7. ' elem' → logprob: -3.9858274459838867
    8. ' idx' → logprob: -4.360827445983887
    9. ' v' → logprob: -4.985827445983887
    10. 'k' → logprob: -5.735827445983887

Token 177: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48691627383232117
    2. ',' → logprob: -0.9869163036346436
    3. 'in' → logprob: -4.7369160652160645
    4. ' ,' → logprob: -5.7369160652160645
    5. ' ' → logprob: -7.9869160652160645
    6. ',val' → logprob: -9.111916542053223
    7. '  ' → logprob: -9.861916542053223
    8. '   ' → logprob: -10.111916542053223
    9. ',i' → logprob: -10.361916542053223
    10. ',index' → logprob: -10.736916542053223

Token 178: ' ind' (ID: 1383)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7881314754486084
    2. ' idx' → logprob: -0.9131314754486084
    3. 'pos' → logprob: -2.9131314754486084
    4. 'ind' → logprob: -3.5381314754486084
    5. 'index' → logprob: -4.0381317138671875
    6. ' pos' → logprob: -4.1631317138671875
    7. '_,' → logprob: -4.7881317138671875
    8. ' index' → logprob: -4.9131317138671875
    9. 'id' → logprob: -6.0381317138671875
    10. 'num' → logprob: -6.6631317138671875

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000685391016304493
    2. ' ,' → logprob: -7.375685214996338
    3. ',_' → logprob: -11.125685691833496
    4. ' in' → logprob: -11.375685691833496
    5. 'in' → logprob: -11.500685691833496
    6. '_,' → logprob: -12.875685691833496
    7. ',s' → logprob: -13.125685691833496
    8. ',d' → logprob: -13.250685691833496
    9. ',t' → logprob: -13.250685691833496
    10. ',val' → logprob: -13.500685691833496

Token 180: ' typ' (ID: 5378)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'typ' → logprob: -0.23746909201145172
    2. ' typ' → logprob: -2.73746919631958
    3. 'type' → logprob: -3.23746919631958
    4. 't' → logprob: -3.98746919631958
    5. 'cat' → logprob: -4.61246919631958
    6. 'tp' → logprob: -4.61246919631958
    7. 'c' → logprob: -4.73746919631958
    8. 'tag' → logprob: -4.86246919631958
    9. 'side' → logprob: -4.98746919631958
    10. 'label' → logprob: -5.36246919631958

Token 181: ' in' (ID: 306)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -9.29340603761375e-05
    2. ' in' → logprob: -9.375092506408691
    3. ' e' → logprob: -12.375092506408691
    4. ',' → logprob: -13.000092506408691
    5. ',e' → logprob: -13.875092506408691
    6. 'in' → logprob: -14.875092506408691
    7. 'etype' → logprob: -17.125093460083008
    8. '_' → logprob: -17.375093460083008
    9. '_e' → logprob: -17.625093460083008
    10. '```' → logprob: -17.875093460083008

Token 182: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.00762745039537549
    2. 'l' → logprob: -4.882627487182617
    3. '	l' → logprob: -11.507627487182617
    4. ' ' → logprob: -12.007627487182617
    5. '   ' → logprob: -13.007627487182617
    6. ' ' → logprob: -13.757627487182617
    7. '    ' → logprob: -14.132627487182617
    8. '  ' → logprob: -15.007627487182617
    9. '(l' → logprob: -15.382627487182617
    10. '[l' → logprob: -15.632627487182617

Token 183: '[:' (ID: 7808)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022475497098639607
    2. ' :' → logprob: -8.750225067138672
    3. ':
' → logprob: -10.000225067138672
    4. ' in' → logprob: -11.375225067138672
    5. '):' → logprob: -12.125225067138672
    6. ',' → logprob: -13.500225067138672
    7. ':**' → logprob: -13.625225067138672
    8. 'in' → logprob: -14.625225067138672
    9. '   ' → logprob: -15.125225067138672
    10. ' :
' → logprob: -15.625225067138672

Token 184: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.004394867457449436
    2. '(nb' → logprob: -5.879395008087158
    3. ' nb' → logprob: -6.629395008087158
    4. '2' → logprob: -8.62939453125
    5. '(' → logprob: -10.25439453125
    6. '   ' → logprob: -11.37939453125
    7. '	nb' → logprob: -11.50439453125
    8. '_nb' → logprob: -11.75439453125
    9. ']' → logprob: -11.87939453125
    10. ' ' → logprob: -12.62939453125

Token 185: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00872944574803114
    2. ']:
' → logprob: -4.758729457855225
    3. ']' → logprob: -9.883728981018066
    4. ']:
' → logprob: -10.008728981018066
    5. ' ]' → logprob: -11.383728981018066
    6. '   ' → logprob: -12.383728981018066
    7. ']:

' → logprob: -13.758728981018066
    8. ':' → logprob: -13.758728981018066
    9. '       ' → logprob: -15.133728981018066
    10. '+' → logprob: -15.508728981018066

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014445777982473373
    2. '<|end|>' → logprob: -4.639445781707764
    3. '   ' → logprob: -6.014445781707764
    4. ' if' → logprob: -7.014445781707764
    5. ':' → logprob: -8.014445304870605
    6. '    ' → logprob: -8.389445304870605
    7. '        
' → logprob: -8.514445304870605
    8. ',' → logprob: -8.889445304870605
    9. ' ' → logprob: -9.389445304870605
    10. '<|end|>' → logprob: -10.014445304870605

Token 187: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1610219478607178
    2. '   ' → logprob: -1.2860219478607178
    3. '       ' → logprob: -1.7860219478607178
    4. 'seen' → logprob: -2.1610219478607178
    5. 'if' (adapté à ' if') → logprob: -2.6610219478607178
    6. ' seen' → logprob: -2.9110219478607178
    7. '    ' → logprob: -6.161022186279297
    8. '        
' → logprob: -8.536022186279297
    9. '_seen' → logprob: -8.661022186279297
    10. '    
' → logprob: -8.786022186279297

Token 188: ' maj' (ID: 15575)
  Prédit: ' typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typ' → logprob: -0.03991182520985603
    2. 'typ' → logprob: -4.16491174697876
    3. ' (' → logprob: -4.53991174697876
    4. '(' → logprob: -5.16491174697876
    5. ' ind' → logprob: -5.28991174697876
    6. ' val' → logprob: -6.66491174697876
    7. 'ind' → logprob: -8.039912223815918
    8. '(ind' → logprob: -8.164912223815918
    9. 'val' → logprob: -9.789912223815918
    10. ' ' → logprob: -9.789912223815918

Token 189: '!=' (ID: 11408)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.012565338984131813
    2. 'is' → logprob: -4.3875651359558105
    3. '==' → logprob: -10.012565612792969
    4. ' ==' → logprob: -12.137565612792969
    5. ' ' → logprob: -12.762565612792969
    6. 'in' → logprob: -14.387565612792969
    7. '!=' → logprob: -14.887565612792969
    8. '=' → logprob: -14.887565612792969
    9. ' None' → logprob: -15.512565612792969
    10. ' !=' → logprob: -15.762565612792969

Token 190: 'None' (ID: 8505)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.542525053024292
    2. 'None' → logprob: -0.917525053024292
    3. 'typ' → logprob: -4.542525291442871
    4. 'ind' → logprob: -5.667525291442871
    5. '0' → logprob: -6.292525291442871
    6. ' None' → logprob: -6.417525291442871
    7. ' val' → logprob: -6.792525291442871
    8. ' typ' → logprob: -8.792525291442871
    9. '"' → logprob: -9.917525291442871
    10. ' ' → logprob: -10.292525291442871

Token 191: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005599072203040123
    2. 'and' → logprob: -5.380599021911621
    3. ':' → logprob: -7.005599021911621
    4. ' ' → logprob: -10.880599021911621
    5. '<|end|>' → logprob: -10.880599021911621
    6. ':
' → logprob: -11.255599021911621
    7. ' :' → logprob: -12.505599021911621
    8. '       ' → logprob: -12.630599021911621
    9. '           ' → logprob: -13.005599021911621
    10. '   ' → logprob: -13.130599021911621

Token 192: ' maj' (ID: 15575)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.2168070077896118
    2. ' typ' → logprob: -1.3418070077896118
    3. 'typ' → logprob: -1.4668070077896118
    4. 'val' → logprob: -1.7168070077896118
    5. ' maj' → logprob: -4.716806888580322
    6. '(val' → logprob: -5.091806888580322
    7. ' (' → logprob: -5.591806888580322
    8. '(' → logprob: -5.716806888580322
    9. ' ind' → logprob: -5.716806888580322
    10. 'maj' → logprob: -5.966806888580322

Token 193: ' !=' (ID: 1666)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.3761926889419556
    2. ' >' → logprob: -2.251192569732666
    3. 'val' → logprob: -2.376192569732666
    4. ' !=' → logprob: -2.376192569732666
    5. '!=' → logprob: -2.376192569732666
    6. '>' → logprob: -2.501192569732666
    7. '+' → logprob: -3.126192569732666
    8. ' <' → logprob: -3.251192569732666
    9. '<' → logprob: -3.376192569732666
    10. ' -' → logprob: -3.501192569732666

Token 194: ' typ' (ID: 5378)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'typ' → logprob: -0.2086259424686432
    2. 'val' → logprob: -2.5836260318756104
    3. 'ind' → logprob: -2.8336260318756104
    4. ' typ' → logprob: -3.2086260318756104
    5. ' val' → logprob: -4.958625793457031
    6. ' ind' → logprob: -5.083625793457031
    7. '(ind' → logprob: -9.208625793457031
    8. '(' → logprob: -9.458625793457031
    9. '(val' → logprob: -9.833625793457031
    10. 'ty' → logprob: -10.896125793457031

Token 195: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1456565111875534
    2. ':' → logprob: -2.1456565856933594
    3. 'and' → logprob: -4.145656585693359
    4. ':
' → logprob: -6.645656585693359
    5. ' :' → logprob: -7.520656585693359
    6. '       ' → logprob: -8.14565658569336
    7. '           ' → logprob: -8.14565658569336
    8. ' or' → logprob: -9.77065658569336
    9. '<|end|>' → logprob: -9.77065658569336
    10. '   ' → logprob: -10.27065658569336

Token 196: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5881380438804626
    2. '           ' → logprob: -1.0881381034851074
    3. ' and' → logprob: -2.9631381034851074
    4. '       ' → logprob: -3.4631381034851074
    5. ':
' → logprob: -4.213138103485107
    6. ' or' → logprob: -5.838138103485107
    7. ' :' → logprob: -5.963138103485107
    8. ':return' → logprob: -6.588138103485107
    9. '):' → logprob: -7.588138103485107
    10. ')' → logprob: -7.838138103485107

Token 197: ' flag' (ID: 9641)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3325142860412598
    2. ' return' → logprob: -1.5825142860412598
    3. '           ' → logprob: -1.8325142860412598
    4. ' flag' → logprob: -1.9575142860412598
    5. ' break' → logprob: -1.9575142860412598
    6. 'return' → logprob: -3.2075142860412598
    7. 'flag' (adapté à ' flag') → logprob: -3.8325142860412598
    8. '       ' → logprob: -4.45751428604126
    9. 'break' → logprob: -4.58251428604126
    10. ' if' → logprob: -6.20751428604126

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936715245246887
    2. ' =' → logprob: -0.6936715245246887
    3. '=False' → logprob: -7.568671703338623
    4. '=True' → logprob: -11.943671226501465
    5. ' ' → logprob: -14.818671226501465
    6. ' ==' → logprob: -15.568671226501465
    7. '==' → logprob: -15.693671226501465
    8. '=false' → logprob: -15.693671226501465
    9. 'False' → logprob: -15.818671226501465
    10. '   ' → logprob: -15.943671226501465

Token 199: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002788551209960133
    2. ' False' → logprob: -8.50027847290039
    3. 'True' → logprob: -9.50027847290039
    4. '0' → logprob: -15.00027847290039
    5. '   ' → logprob: -17.00027847290039
    6. ' True' → logprob: -17.12527847290039
    7. 'false' → logprob: -17.75027847290039
    8. '=False' → logprob: -18.12527847290039
    9. '(False' → logprob: -18.37527847290039
    10. 'F' → logprob: -18.62527847290039

Token 200: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20785941183567047
    2. '       ' → logprob: -2.082859516143799
    3. '<|end|>' → logprob: -2.832859516143799
    4. '               ' → logprob: -6.207859516143799
    5. '            ' → logprob: -7.457859516143799
    6. '   ' → logprob: -7.957859516143799
    7. '        ' → logprob: -8.33285903930664
    8. '.' → logprob: -8.45785903930664
    9. ' ' → logprob: -8.45785903930664
    10. '    ' → logprob: -8.58285903930664

Token 201: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6102102398872375
    2. '       ' → logprob: -0.8602102398872375
    3. '<|end|>' → logprob: -3.4852101802825928
    4. '   ' → logprob: -6.860210418701172
    5. '               ' → logprob: -7.360210418701172
    6. '<|end|>' → logprob: -8.860210418701172
    7. ',' → logprob: -8.985210418701172
    8. ' ' → logprob: -8.985210418701172
    9. ' break' → logprob: -8.985210418701172
    10. '    ' → logprob: -9.360210418701172

Token 202: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006383402738720179
    2. 'maj' → logprob: -5.256383419036865
    3. ' maj' → logprob: -7.381383419036865
    4. '           ' → logprob: -8.506382942199707
    5. '   ' → logprob: -9.506382942199707
    6. ' if' → logprob: -9.756382942199707
    7. '<|end|>' → logprob: -10.131382942199707
    8. '        ' → logprob: -10.506382942199707
    9. '    ' → logprob: -10.631382942199707
    10. 'else' → logprob: -10.756382942199707

Token 203: ' ind' (ID: 1383)
  Prédit: ' typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typ' → logprob: -0.19420979917049408
    2. ' maj' → logprob: -2.3192098140716553
    3. 'typ' → logprob: -2.6942098140716553
    4. 'maj' → logprob: -4.944209575653076
    5. ' ind' → logprob: -6.319209575653076
    6. ' val' → logprob: -6.944209575653076
    7. 'val' → logprob: -8.319210052490234
    8. 'ind' → logprob: -8.569210052490234
    9. ' ' → logprob: -9.694210052490234
    10. '(' → logprob: -10.194210052490234

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7772809267044067
    2. ' ==' → logprob: -1.5272809267044067
    3. '==' → logprob: -1.9022809267044067
    4. ' not' → logprob: -1.9022809267044067
    5. 'in' → logprob: -3.902280807495117
    6. ' !=' → logprob: -6.027280807495117
    7. '!=' → logprob: -7.277280807495117
    8. 'not' → logprob: -7.777280807495117
    9. ' <=' → logprob: -7.902280807495117
    10. '<|end|>' → logprob: -8.402280807495117

Token 205: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.5231464505195618
    2. ' seen' → logprob: -0.8981464505195618
    3. '_seen' → logprob: -12.148146629333496
    4. '   ' → logprob: -12.273146629333496
    5. ' ' → logprob: -12.648146629333496
    6. 'se' → logprob: -13.148146629333496
    7. 'see' → logprob: -13.523146629333496
    8. ' first' → logprob: -13.835646629333496
    9. 's' → logprob: -14.085646629333496
    10. 'first' → logprob: -14.273146629333496

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5465519428253174
    2. ':
' → logprob: -0.9215519428253174
    3. ' :
' → logprob: -4.796551704406738
    4. '       ' → logprob: -4.921551704406738
    5. ' or' → logprob: -6.171551704406738
    6. ' :' → logprob: -6.296551704406738
    7. '<|end|>' → logprob: -6.921551704406738
    8. '   ' → logprob: -7.421551704406738
    9. '           ' → logprob: -7.921551704406738
    10. '):
' → logprob: -8.171551704406738

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007338741794228554
    2. '```' → logprob: -5.757338523864746
    3. ' continue' → logprob: -6.507338523864746
    4. '       ' → logprob: -6.882338523864746
    5. '   ' → logprob: -8.382338523864746
    6. '               ' → logprob: -8.632338523864746
    7. ' 
' → logprob: -8.757338523864746
    8. ' seen' → logprob: -8.882338523864746
    9. '<|end|>' → logprob: -8.882338523864746
    10. ' True' → logprob: -9.257338523864746

Token 208: ' #' (ID: 1069)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.17992298305034637
    2. ' break' → logprob: -2.1799230575561523
    3. ' continue' → logprob: -3.3049230575561523
    4. 'flag' → logprob: -5.429923057556152
    5. 'continue' → logprob: -6.429923057556152
    6. ' return' → logprob: -7.054923057556152
    7. ' False' → logprob: -7.179923057556152
    8. ' ' → logprob: -7.179923057556152
    9. '           ' → logprob: -7.304923057556152
    10. '               ' → logprob: -7.429923057556152

Token 209: ' Bon' (ID: 12658)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.29280349612236023
    2. ' break' → logprob: -2.0428035259246826
    3. ' continue' → logprob: -3.4178035259246826
    4. ' seen' → logprob: -3.7928035259246826
    5. ' return' → logprob: -3.9178035259246826
    6. 'flag' → logprob: -3.9178035259246826
    7. ' pass' → logprob: -4.5428032875061035
    8. ' first' → logprob: -5.4178032875061035
    9. 'continue' → logprob: -5.6678032875061035
    10. 'seen' → logprob: -6.1678032875061035

Token 210: ' bah' (ID: 13530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8549036979675293
    2. '           ' → logprob: -1.1049036979675293
    3. ' continue' → logprob: -2.9799036979675293
    4. ' ' → logprob: -3.1049036979675293
    5. '        ' → logprob: -3.7299036979675293
    6. ' return' → logprob: -3.8549036979675293
    7. '   ' → logprob: -4.354903697967529
    8. '            ' → logprob: -4.354903697967529
    9. ')' → logprob: -4.479903697967529
    10. '    ' → logprob: -4.604903697967529

Token 211: ' c' (ID: 274)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.3549819886684418
    2. 'flag' → logprob: -1.9799820184707642
    3. ' break' → logprob: -2.3549818992614746
    4. '           ' → logprob: -3.6049818992614746
    5. ' return' → logprob: -4.104981899261475
    6. 'break' → logprob: -4.229981899261475
    7. 'return' → logprob: -5.104981899261475
    8. 'continue' → logprob: -7.854981899261475
    9. ' continue' → logprob: -8.354982376098633
    10. '       ' → logprob: -8.479982376098633

Token 212: ''est' (ID: 6616)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8528708815574646
    2. '           ' → logprob: -1.2278709411621094
    3. '   ' → logprob: -2.6028709411621094
    4. ''est' → logprob: -3.2278709411621094
    5. ''' → logprob: -3.6028709411621094
    6. ' break' → logprob: -3.9778709411621094
    7. 'ont' → logprob: -3.9778709411621094
    8. '#' → logprob: -4.102870941162109
    9. 'break' → logprob: -4.477870941162109
    10. '    ' → logprob: -5.102870941162109

Token 213: ' pile' (ID: 39732)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.7223323583602905
    2. ' True' → logprob: -0.8473323583602905
    3. 'False' → logprob: -2.72233247756958
    4. 'True' → logprob: -4.84733247756958
    5. 'pass' → logprob: -5.34733247756958
    6. ' pass' → logprob: -6.47233247756958
    7. ' flag' → logprob: -6.72233247756958
    8. 'flag' → logprob: -6.72233247756958
    9. 'continue' → logprob: -7.59733247756958
    10. 'pas' → logprob: -7.72233247756958

Token 214: ' po' (ID: 2482)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25776562094688416
    2. '               ' → logprob: -2.757765531539917
    3. ' return' → logprob: -2.757765531539917
    4. '       ' → logprob: -3.132765531539917
    5. ' continue' → logprob: -3.382765531539917
    6. ',' → logprob: -4.882765769958496
    7. 'continue' → logprob: -5.757765769958496
    8. '   ' → logprob: -6.132765769958496
    9. ' continuer' → logprob: -6.882765769958496
    10. ' ' → logprob: -7.007765769958496

Token 215: 'il' (ID: 311)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.046096980571746826
    2. 'ur' → logprob: -3.7960970401763916
    3. 's' → logprob: -4.5460968017578125
    4. 'ints' → logprob: -5.5460968017578125
    5. 'inte' → logprob: -6.0460968017578125
    6. 'il' → logprob: -6.1710968017578125
    7. 'r' → logprob: -6.9210968017578125
    8. 'nt' → logprob: -7.7960968017578125
    9. 't' → logprob: -8.421096801757812
    10. 'sit' → logprob: -8.421096801757812

Token 216: ',' (ID: 11)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.5101264715194702
    2. ' ce' → logprob: -1.8851264715194702
    3. '           ' → logprob: -2.0101265907287598
    4. ' return' → logprob: -2.6351265907287598
    5. ' True' → logprob: -2.7601265907287598
    6. ' continue' → logprob: -3.1351265907287598
    7. ' l' → logprob: -3.1351265907287598
    8. ' le' → logprob: -3.3851265907287598
    9. ',' → logprob: -3.3851265907287598
    10. '       ' → logprob: -3.6351265907287598

Token 217: ' on' (ID: 402)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.816874086856842
    2. ' return' → logprob: -1.3168740272521973
    3. ' continue' → logprob: -1.4418740272521973
    4. '           ' → logprob: -4.066874027252197
    5. 'continue' → logprob: -4.191874027252197
    6. 'return' → logprob: -4.441874027252197
    7. 'break' → logprob: -5.566874027252197
    8. '       ' → logprob: -6.441874027252197
    9. '               ' → logprob: -6.566874027252197
    10. '\n' → logprob: -6.691874027252197

Token 218: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14387783408164978
    2. 'break' → logprob: -2.5188777446746826
    3. ' break' → logprob: -3.3938777446746826
    4. ' continue' → logprob: -4.893877983093262
    5. 'continue' → logprob: -5.018877983093262
    6. 'return' → logprob: -6.393877983093262
    7. '       ' → logprob: -6.893877983093262
    8. ' return' → logprob: -6.893877983093262
    9. '               ' → logprob: -8.393877983093262
    10. '#' → logprob: -8.643877983093262

Token 219: ''arr' (ID: 49695)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.2328134775161743
    2. 'ait' → logprob: -2.2328133583068848
    3. 'avait' → logprob: -2.3578133583068848
    4. 'et' → logprob: -2.4828133583068848
    5. 'uite' → logprob: -2.4828133583068848
    6. 'ais' → logprob: -3.3578133583068848
    7. 'a' → logprob: -3.4828133583068848
    8. 'er' → logprob: -3.6078133583068848
    9. 'uit' → logprob: -3.6078133583068848
    10. '           ' → logprob: -3.8578133583068848

Token 220: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.4262150526046753
    2. 'te' → logprob: -1.8012150526046753
    3. 'êt' → logprob: -2.176215171813965
    4. 'ète' → logprob: -3.051215171813965
    5. 't' → logprob: -4.676215171813965
    6. 'ete' → logprob: -5.426215171813965
    7. '#' → logprob: -6.551215171813965
    8. 'té' → logprob: -6.551215171813965
    9. 'tte' → logprob: -7.301215171813965
    10. 'p' → logprob: -7.301215171813965

Token 221: ' là' (ID: 8052)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011681989999487996
    2. ',' → logprob: -7.251168251037598
    3. '               ' → logprob: -8.501168251037598
    4. '!' → logprob: -9.876168251037598
    5. '\n' → logprob: -9.876168251037598
    6. '.' → logprob: -10.126168251037598
    7. '<|end|>' → logprob: -10.501168251037598
    8. '       ' → logprob: -11.126168251037598
    9. ')' → logprob: -11.626168251037598
    10. '...' → logprob: -11.876168251037598

Token 222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2720875144004822
    2. '<|end|>' → logprob: -2.022087574005127
    3. '       ' → logprob: -2.772087574005127
    4. '\n' → logprob: -4.147087574005127
    5. ')' → logprob: -4.397087574005127
    6. '<|end|>' → logprob: -5.522087574005127
    7. ',' → logprob: -5.897087574005127
    8. '               ' → logprob: -6.522087574005127
    9. '   ' → logprob: -6.772087574005127
    10. '            
' → logprob: -6.897087574005127

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008675670251250267
    2. '       ' → logprob: -5.633675575256348
    3. '
' → logprob: -6.883675575256348
    4. '\n' → logprob: -7.008675575256348
    5. 'continue' → logprob: -7.133675575256348
    6. '               ' → logprob: -7.508675575256348
    7. ' continue' → logprob: -7.633675575256348
    8. '<|end|>' → logprob: -8.008675575256348
    9. ',' → logprob: -8.758675575256348
    10. '            
' → logprob: -9.008675575256348

Token 224: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6447304487228394
    2. ' return' → logprob: -1.2697304487228394
    3. 'return' → logprob: -2.394730567932129
    4. ' break' → logprob: -2.519730567932129
    5. 'break' → logprob: -4.269730567932129
    6. '       ' → logprob: -5.269730567932129
    7. '               ' → logprob: -6.269730567932129
    8. '   ' → logprob: -7.769730567932129
    9. ' flag' → logprob: -7.894730567932129
    10. '\n' → logprob: -8.644730567932129

Token 225: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09043911844491959
    2. '("' → logprob: -2.5904390811920166
    3. '()' → logprob: -5.090439319610596
    4. '('' → logprob: -5.840439319610596
    5. '("")' → logprob: -6.715439319610596
    6. '("("' → logprob: -7.215439319610596
    7. '(None' → logprob: -9.715438842773438
    8. '(
' → logprob: -9.715438842773438
    9. ' (' → logprob: -9.715438842773438
    10. '(False' → logprob: -10.215438842773438

Token 226: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0005056116497144103
    2. '_s' → logprob: -8.500505447387695
    3. '_' → logprob: -8.875505447387695
    4. ')' → logprob: -9.125505447387695
    5. ')_' → logprob: -10.625505447387695
    6. '_space' → logprob: -11.875505447387695
    7. '(' → logprob: -12.000505447387695
    8. ' _' → logprob: -12.375505447387695
    9. ' )' → logprob: -13.625505447387695
    10. '_)' → logprob: -14.125505447387695

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023014359176158905
    2. ')
' → logprob: -6.252301216125488
    3. ',' → logprob: -8.627301216125488
    4. ' )' → logprob: -8.877301216125488
    5. '+' → logprob: -11.127301216125488
    6. '   ' → logprob: -12.002301216125488
    7. ')`' → logprob: -12.127301216125488
    8. '())' → logprob: -12.502301216125488
    9. '()' → logprob: -12.502301216125488
    10. '))' → logprob: -12.627301216125488

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010360259329900146
    2. ')' → logprob: -8.126035690307617
    3. '<|end|>' → logprob: -8.251035690307617
    4. '       ' → logprob: -8.501035690307617
    5. '               ' → logprob: -9.001035690307617
    6. ',' → logprob: -10.126035690307617
    7. '            
' → logprob: -10.626035690307617
    8. '            ' → logprob: -11.126035690307617
    9. 'return' → logprob: -11.626035690307617
    10. '   ' → logprob: -11.626035690307617

Token 229: ' exit' (ID: 10654)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12800240516662598
    2. 'return' → logprob: -2.128002405166626
    3. ' return' → logprob: -7.128002166748047
    4. 'break' → logprob: -8.503002166748047
    5. '       ' → logprob: -11.003002166748047
    6. '               ' → logprob: -11.378002166748047
    7. '   ' → logprob: -11.378002166748047
    8. '
' → logprob: -11.878002166748047
    9. ' break' → logprob: -12.253002166748047
    10. '	return' → logprob: -12.253002166748047

Token 230: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048598047345876694
    2. '(' → logprob: -3.048598051071167
    3. '()
' → logprob: -12.923598289489746
    4. '(
' → logprob: -13.423598289489746
    5. ' ()' → logprob: -13.548598289489746
    6. '()(' → logprob: -13.673598289489746
    7. '()`' → logprob: -14.048598289489746
    8. '(

' → logprob: -14.673598289489746
    9. '();' → logprob: -14.673598289489746
    10. '()]' → logprob: -14.673598289489746

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011188817210495472
    2. '<|end|>' → logprob: -4.636188983917236
    3. '        
' → logprob: -7.261188983917236
    4. '
' → logprob: -8.636188507080078
    5. ' 
' → logprob: -8.761188507080078
    6. '   ' → logprob: -9.386188507080078
    7. '        ' → logprob: -9.386188507080078
    8. ')' → logprob: -10.386188507080078
    9. '<|end|>' → logprob: -10.636188507080078
    10. '    ' → logprob: -10.886188507080078

Token 232: ' seen' (ID: 6177)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04046618193387985
    2. ' seen' → logprob: -3.540466070175171
    3. 'seen' (adapté à ' seen') → logprob: -5.41546630859375
    4. '        
' → logprob: -6.04046630859375
    5. '   ' → logprob: -6.04046630859375
    6. '<|end|>' → logprob: -7.79046630859375
    7. ' 
' → logprob: -8.66546630859375
    8. '        ' → logprob: -8.79046630859375
    9. '    
' → logprob: -9.04046630859375
    10. '_seen' → logprob: -9.04046630859375

Token 233: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.004151176195591688
    2. '.' → logprob: -5.504151344299316
    3. '().' → logprob: -10.129151344299316
    4. ' .' → logprob: -10.379151344299316
    5. '.Add' → logprob: -15.004151344299316
    6. '.append' → logprob: -15.129151344299316
    7. '.insert' → logprob: -15.379151344299316
    8. '<|end|>' → logprob: -15.379151344299316
    9. ').' → logprob: -15.879151344299316
    10. 'add' → logprob: -16.004150390625

Token 234: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. '(i' → logprob: -18.5
    4. ' (' → logprob: -18.875
    5. '(indent' → logprob: -19.5
    6. '[ind' → logprob: -20.125
    7. '(ins' → logprob: -20.375
    8. '(im' → logprob: -20.375
    9. '(inter' → logprob: -21.0
    10. '(an' → logprob: -21.125

Token 235: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')
' → logprob: -11.375019073486328
    3. ' )' → logprob: -11.875019073486328
    4. ')return' → logprob: -14.875019073486328
    5. ')}' → logprob: -16.875019073486328
    6. '))' → logprob: -17.000019073486328
    7. '<|end|>' → logprob: -17.000019073486328
    8. '),' → logprob: -17.250019073486328
    9. ')#' → logprob: -17.375019073486328
    10. '   ' → logprob: -17.625019073486328

Token 236: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03658629208803177
    2. '       ' → logprob: -3.661586284637451
    3. '<|end|>' → logprob: -5.786586284637451
    4. 'maj' → logprob: -6.036586284637451
    5. '    
' → logprob: -6.536586284637451
    6. '    ' → logprob: -7.036586284637451
    7. '
' → logprob: -7.161586284637451
    8. ' maj' → logprob: -7.911586284637451
    9. '        
' → logprob: -8.16158676147461
    10. ',' → logprob: -8.66158676147461

Token 237: ' maj' (ID: 15575)
  Prédit: 'maj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maj' (adapté à ' maj') → logprob: -0.00418085278943181
    2. 'if' → logprob: -6.004180908203125
    3. ' maj' → logprob: -6.629180908203125
    4. ' if' → logprob: -8.504180908203125
    5. '   ' → logprob: -8.879180908203125
    6. 'ma' → logprob: -10.879180908203125
    7. 'major' → logprob: -11.629180908203125
    8. '       ' → logprob: -12.379180908203125
    9. '    ' → logprob: -12.754180908203125
    10. '           ' → logprob: -13.629180908203125

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '＝' → logprob: -16.28522491455078
    4. '=}' → logprob: -17.66022491455078
    5. '=

' → logprob: -17.66022491455078
    6. ' ' → logprob: -18.66022491455078
    7. '==' → logprob: -18.66022491455078
    8. ',' → logprob: -18.78522491455078
    9. '=None' → logprob: -18.91022491455078
    10. '.=' → logprob: -19.03522491455078

Token 239: ' typ' (ID: 5378)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'typ' → logprob: -0.0019286326132714748
    2. ' typ' → logprob: -6.251928806304932
    3. '_typ' → logprob: -18.126928329467773
    4. '.typ' → logprob: -18.501928329467773
    5. 'ty' → logprob: -18.751928329467773
    6. 'Typ' → logprob: -20.126928329467773
    7. 'typen' → logprob: -20.501928329467773
    8. 'type' → logprob: -20.501928329467773
    9. 'typing' → logprob: -21.751928329467773
    10. ' ' → logprob: -22.001928329467773

Token 240: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8381265997886658
    2. ':' → logprob: -1.3381266593933105
    3. '<|end|>' → logprob: -2.2131266593933105
    4. ' ' → logprob: -2.7131266593933105
    5. '_' → logprob: -2.8381266593933105
    6. ',' → logprob: -3.5881266593933105
    7. '#' → logprob: -4.7131266593933105
    8. '\' → logprob: -5.3381266593933105
    9. '   ' → logprob: -5.4631266593933105
    10. '
' → logprob: -5.7131266593933105

Token 242: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0719144344329834
    2. 'for' → logprob: -2.3219144344329834
    3. ' for' → logprob: -2.4469144344329834
    4. ')' → logprob: -2.4469144344329834
    5. ' ' → logprob: -2.4469144344329834
    6. 'return' → logprob: -2.6969144344329834
    7. 'n' → logprob: -3.1969144344329834
    8. ' return' → logprob: -3.4469144344329834
    9. '#' → logprob: -3.5719144344329834
    10. ' 
' → logprob: -3.8219144344329834

Token 243: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.0910998210310936
    2. ' not' → logprob: -3.091099739074707
    3. 'flag' → logprob: -4.216099739074707
    4. ' nb' → logprob: -4.216099739074707
    5. ' first' → logprob: -4.841099739074707
    6. ' len' → logprob: -6.341099739074707
    7. ' ' → logprob: -6.591099739074707
    8. 'not' → logprob: -7.466099739074707
    9. 'nb' → logprob: -9.216099739074707
    10. 'first' → logprob: -9.341099739074707

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03211567550897598
    2. ' :' → logprob: -3.5321156978607178
    3. ' ==' → logprob: -6.282115459442139
    4. '==' → logprob: -7.657115459442139
    5. ':
' → logprob: -11.532115936279297
    6. ' =' → logprob: -12.782115936279297
    7. '():' → logprob: -13.282115936279297
    8. ' :
' → logprob: -13.407115936279297
    9. '=' → logprob: -13.782115936279297
    10. ':return' → logprob: -14.532115936279297

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12367065250873566
    2. '   ' → logprob: -2.7486705780029297
    3. ':' → logprob: -3.1236705780029297
    4. ' return' → logprob: -5.24867057800293
    5. ':
' → logprob: -6.99867057800293
    6. ' :' → logprob: -8.12367057800293
    7. '        
' → logprob: -8.12367057800293
    8. ':return' → logprob: -8.37367057800293
    9. '    
' → logprob: -8.87367057800293
    10. ',' → logprob: -8.87367057800293

Token 246: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8131523728370667
    2. ' return' → logprob: -0.9381523728370667
    3. 'print' (adapté à ' print') → logprob: -2.438152313232422
    4. '   ' → logprob: -3.313152313232422
    5. ' print' → logprob: -3.313152313232422
    6. ' first' → logprob: -6.188152313232422
    7. '       ' → logprob: -6.438152313232422
    8. ' for' → logprob: -7.688152313232422
    9. 'first' → logprob: -7.813152313232422
    10. 'for' → logprob: -8.938152313232422

Token 247: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.018171364441514015
    2. '(' → logprob: -4.018171310424805
    3. 'first' → logprob: -11.643171310424805
    4. '(min' → logprob: -12.018171310424805
    5. '(f' → logprob: -13.018171310424805
    6. ' (' → logprob: -13.518171310424805
    7. '(second' → logprob: -14.518171310424805
    8. '(last' → logprob: -14.768171310424805
    9. '('' → logprob: -14.893171310424805
    10. '(
' → logprob: -15.268171310424805

Token 248: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.320199877838604e-07
    2. 'sum' → logprob: -15.625
    3. '_s' → logprob: -17.0
    4. ')' → logprob: -17.5
    5. ' _' → logprob: -18.0
    6. 'Sum' → logprob: -18.25
    7. '_space' → logprob: -18.625
    8. '_' → logprob: -18.75
    9. '_SUM' → logprob: -18.75
    10. ' )' → logprob: -19.875

Token 249: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7081193923950195
    2. ' +' → logprob: -0.8331193923950195
    3. ')' → logprob: -2.7081193923950195
    4. ' -' → logprob: -6.3331193923950195
    5. '   ' → logprob: -6.5831193923950195
    6. ' )' → logprob: -7.2081193923950195
    7. '-' → logprob: -7.2081193923950195
    8. ',' → logprob: -7.9581193923950195
    9. ')
' → logprob: -7.9581193923950195
    10. '+)' → logprob: -8.20811939239502

Token 250: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.823893129825592
    2. ' ' → logprob: -1.6988930702209473
    3. ' else' → logprob: -1.9488930702209473
    4. '<|end|>' → logprob: -2.4488930702209473
    5. ')' → logprob: -3.0738930702209473
    6. 'else' → logprob: -3.9488930702209473
    7. '    
' → logprob: -4.073893070220947
    8. '
' → logprob: -4.448893070220947
    9. ' 
' → logprob: -4.573893070220947
    10. '    ' → logprob: -5.073893070220947

Token 251: ' exit' (ID: 10654)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2859191298484802
    2. ' return' → logprob: -1.410919189453125
    3. '   ' → logprob: -5.910919189453125
    4. 'exit' (adapté à ' exit') → logprob: -6.660919189453125
    5. '       ' → logprob: -7.910919189453125
    6. ' exit' → logprob: -8.410919189453125
    7. 'else' → logprob: -8.910919189453125
    8. '	return' → logprob: -11.660919189453125
    9. ' else' → logprob: -12.160919189453125
    10. 'eturn' → logprob: -12.410919189453125

Token 252: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000643095700070262
    2. '(' → logprob: -7.375643253326416
    3. '()
' → logprob: -11.250642776489258
    4. '()

' → logprob: -13.750642776489258
    5. '())' → logprob: -14.750642776489258
    6. '()\' → logprob: -14.750642776489258
    7. ' ()' → logprob: -15.250642776489258
    8. '()`' → logprob: -15.375642776489258
    9. '()<' → logprob: -15.750642776489258
    10. '()]' → logprob: -15.750642776489258

Token 253: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2658449411392212
    2. ')' → logprob: -2.0158448219299316
    3. '   ' → logprob: -2.0158448219299316
    4. ' ' → logprob: -2.3908448219299316
    5. 'n' → logprob: -2.5158448219299316
    6. ' 
' → logprob: -2.8908448219299316
    7. 'l' → logprob: -3.2658448219299316
    8. '_' → logprob: -3.5158448219299316
    9. ',' → logprob: -3.7658448219299316
    10. ' hen' → logprob: -3.7658448219299316

Token 254: ' vals' (ID: 58985)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5024092197418213
    2. '#' → logprob: -1.6274092197418213
    3. 'i' → logprob: -2.0024092197418213
    4. 'l' → logprob: -2.5024092197418213
    5. 'r' → logprob: -2.5024092197418213
    6. '+' → logprob: -3.5024092197418213
    7. 'f' → logprob: -3.6274092197418213
    8. ' ' → logprob: -3.7524092197418213
    9. ' 
' → logprob: -3.7524092197418213
    10. ',' → logprob: -4.002408981323242

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3251987397670746
    2. '=' → logprob: -1.575198769569397
    3. '[' → logprob: -3.5751986503601074
    4. '.append' → logprob: -4.075198650360107
    5. '.' → logprob: -5.075198650360107
    6. ',' → logprob: -5.200198650360107
    7. '.extend' → logprob: -5.700198650360107
    8. ' +=' → logprob: -5.950198650360107
    9. '   ' → logprob: -6.700198650360107
    10. '[:]' → logprob: -6.700198650360107

Token 256: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3484336137771606
    2. '[]' → logprob: -1.3484336137771606
    3. '[first' → logprob: -2.098433494567871
    4. ' [' → logprob: -2.348433494567871
    5. ' hen' → logprob: -2.348433494567871
    6. '[l' → logprob: -2.348433494567871
    7. ' []' → logprob: -3.598433494567871
    8. '[min' → logprob: -4.098433494567871
    9. '[]
' → logprob: -5.473433494567871
    10. ' l' → logprob: -5.598433494567871

Token 257: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5529041886329651
    2. ' for' → logprob: -1.1779041290283203
    3. '   ' → logprob: -2.3029041290283203
    4. '<|end|>' → logprob: -4.55290412902832
    5. '[' → logprob: -6.42790412902832
    6. ')' → logprob: -7.42790412902832
    7. 'vals' → logprob: -7.55290412902832
    8. ',' → logprob: -7.80290412902832
    9. '+' → logprob: -7.92790412902832
    10. ' =' → logprob: -8.17790412902832

Token 258: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.036135219037532806
    2. ' for' → logprob: -3.536135196685791
    3. '<|end|>' → logprob: -5.286135196685791
    4. '   ' → logprob: -7.661135196685791
    5. '[' → logprob: -8.78613567352295
    6. 'vals' → logprob: -8.91113567352295
    7. ')' → logprob: -9.78613567352295
    8. '[]' → logprob: -9.91113567352295
    9. '#' → logprob: -10.16113567352295
    10. '    ' → logprob: -10.28613567352295

Token 259: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9216233491897583
    2. 'val' → logprob: -1.6716233491897583
    3. ' val' → logprob: -2.0466232299804688
    4. ' i' → logprob: -2.0466232299804688
    5. 'k' → logprob: -2.9216232299804688
    6. ' k' → logprob: -3.6716232299804688
    7. 'x' → logprob: -3.9216232299804688
    8. ' x' → logprob: -4.171623229980469
    9. 'v' → logprob: -4.546623229980469
    10. ' v' → logprob: -5.296623229980469

Token 260: 'a' (ID: 64)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1932145655155182
    2. 'a' → logprob: -2.4432146549224854
    3. 'i' → logprob: -3.0682146549224854
    4. 'v' → logprob: -4.068214416503906
    5. 'x' → logprob: -4.443214416503906
    6. ' val' → logprob: -5.568214416503906
    7. 'k' → logprob: -5.943214416503906
    8. 'ab' → logprob: -6.193214416503906
    9. 'value' → logprob: -7.693214416503906
    10. ' i' → logprob: -7.693214416503906

Token 261: ',' (ID: 11)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.15245899558067322
    2. ',' → logprob: -2.152458906173706
    3. 'val' → logprob: -4.902459144592285
    4. ',_' → logprob: -5.652459144592285
    5. '[' → logprob: -6.152459144592285
    6. 'b' → logprob: -6.652459144592285
    7. '_value' → logprob: -6.777459144592285
    8. '_' → logprob: -6.902459144592285
    9. 'v' → logprob: -7.027459144592285
    10. '_i' → logprob: -7.027459144592285

Token 262: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8723485469818115
    2. 'i' → logprob: -0.9973485469818115
    3. 'ind' → logprob: -1.7473485469818115
    4. 'idx' → logprob: -4.622348785400391
    5. ' ind' → logprob: -4.747348785400391
    6. ' i' → logprob: -4.997348785400391
    7. ' b' → logprob: -5.247348785400391
    8. '_,' → logprob: -5.872348785400391
    9. 'index' → logprob: -6.622348785400391
    10. 'val' → logprob: -6.622348785400391

Token 263: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014279751339927316
    2. '),' → logprob: -6.626428127288818
    3. 'in' → logprob: -9.50142765045166
    4. ' )' → logprob: -11.62642765045166
    5. ',' → logprob: -12.12642765045166
    6. ' in' → logprob: -12.50142765045166
    7. '),(' → logprob: -13.12642765045166
    8. ' ' → logprob: -13.37642765045166
    9. ')=' → logprob: -13.87642765045166
    10. '   ' → logprob: -14.25142765045166

Token 264: ' c' (ID: 274)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.6775113344192505
    2. 'i' → logprob: -1.0525113344192505
    3. 'typ' → logprob: -2.677511215209961
    4. 'idx' → logprob: -3.302511215209961
    5. 'c' → logprob: -4.177511215209961
    6. ' ind' → logprob: -5.052511215209961
    7. 'index' → logprob: -5.927511215209961
    8. ' i' → logprob: -6.052511215209961
    9. 't' → logprob: -6.302511215209961
    10. ' typ' → logprob: -6.302511215209961

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003662020608317107
    2. 'in' → logprob: -8.3753662109375
    3. ' )' → logprob: -9.2503662109375
    4. '),' → logprob: -11.0003662109375
    5. '   ' → logprob: -11.6253662109375
    6. ' in' → logprob: -12.2503662109375
    7. ' ' → logprob: -12.8753662109375
    8. ',' → logprob: -14.2503662109375
    9. 's' → logprob: -14.3753662109375
    10. 'a' → logprob: -14.3753662109375

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47434157133102417
    2. 'in' → logprob: -0.9743415713310242
    3. '   ' → logprob: -8.97434139251709
    4. ' ' → logprob: -9.97434139251709
    5. ',' → logprob: -10.59934139251709
    6. '  ' → logprob: -11.34934139251709
    7. 's' → logprob: -11.72434139251709
    8. ')' → logprob: -11.72434139251709
    9. '    ' → logprob: -11.84934139251709
    10. '
' → logprob: -12.22434139251709

Token 267: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012520251795649529
    2. ' l' → logprob: -4.3875203132629395
    3. '	l' → logprob: -12.637519836425781
    4. '[l' → logprob: -13.012519836425781
    5. ' ' → logprob: -13.512519836425781
    6. '   ' → logprob: -14.012519836425781
    7. '(l' → logprob: -14.637519836425781
    8. '[(' → logprob: -15.137519836425781
    9. '_l' → logprob: -15.262519836425781
    10. 'ab' → logprob: -15.387519836425781

Token 268: '[:' (ID: 7808)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019429463893175125
    2. ':
' → logprob: -4.394429683685303
    3. '[:' → logprob: -5.269429683685303
    4. '):' → logprob: -6.769429683685303
    5. '[:-' → logprob: -8.144429206848145
    6. '):
' → logprob: -8.769429206848145
    7. '[' → logprob: -9.519429206848145
    8. '   ' → logprob: -10.394429206848145
    9. '[:]' → logprob: -11.644429206848145
    10. ',' → logprob: -11.644429206848145

Token 269: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -9.627176768844947e-05
    2. ' nb' → logprob: -9.750096321105957
    3. '(nb' → logprob: -10.250096321105957
    4. '   ' → logprob: -14.250096321105957
    5. '	nb' → logprob: -14.250096321105957
    6. '_nb' → logprob: -14.375096321105957
    7. '.nb' → logprob: -15.875096321105957
    8. ' ' → logprob: -16.00009536743164
    9. ']' → logprob: -16.37509536743164
    10. '(' → logprob: -16.50009536743164

Token 270: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3491003215312958
    2. ']:' → logprob: -1.2241003513336182
    3. ']' → logprob: -7.974100112915039
    4. '):
' → logprob: -8.974100112915039
    5. ']:
' → logprob: -9.599100112915039
    6. '   ' → logprob: -10.099100112915039
    7. '):' → logprob: -10.724100112915039
    8. '       ' → logprob: -11.099100112915039
    9. '],' → logprob: -11.224100112915039
    10. ']:

' → logprob: -12.224100112915039

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013727609999477863
    2. 'vals' → logprob: -4.76372766494751
    3. ',' → logprob: -6.26372766494751
    4. '(vals' → logprob: -6.63872766494751
    5. ' vals' → logprob: -7.01372766494751
    6. '_vals' → logprob: -8.138727188110352
    7. '   ' → logprob: -9.013727188110352
    8. '.' → logprob: -9.638727188110352
    9. '        
' → logprob: -9.763727188110352
    10. '[' → logprob: -9.888727188110352

Token 272: ' if' (ID: 538)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.007948591373860836
    2. ' vals' → logprob: -5.632948398590088
    3. 'if' (adapté à ' if') → logprob: -6.007948398590088
    4. '   ' → logprob: -7.007948398590088
    5. '       ' → logprob: -7.257948398590088
    6. 'val' → logprob: -8.632948875427246
    7. ' if' → logprob: -10.257948875427246
    8. '(vals' → logprob: -10.632948875427246
    9. 'values' → logprob: -11.132948875427246
    10. '_vals' → logprob: -12.507948875427246

Token 273: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47554200887680054
    2. ' c' → logprob: -0.9755420088768005
    3. 'a' → logprob: -7.225542068481445
    4. ' a' → logprob: -8.100542068481445
    5. 'b' → logprob: -8.600542068481445
    6. '(c' → logprob: -10.100542068481445
    7. ' b' → logprob: -10.100542068481445
    8. ' ' → logprob: -10.225542068481445
    9. '   ' → logprob: -10.850542068481445
    10. '(a' → logprob: -11.100542068481445

Token 274: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0880766361951828
    2. '[-' → logprob: -3.338076591491699
    3. '[len' → logprob: -3.463076591491699
    4. '[a' → logprob: -4.963076591491699
    5. '.count' → logprob: -5.088076591491699
    6. '   ' → logprob: -7.088076591491699
    7. '[count' → logprob: -7.588076591491699
    8. '[:' → logprob: -7.713076591491699
    9. '[(' → logprob: -7.713076591491699
    10. '[i' → logprob: -8.0880765914917

Token 275: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.1952674835920334
    2. '-' → logprob: -3.44526743888855
    3. '0' → logprob: -3.44526743888855
    4. 'l' → logprob: -3.94526743888855
    5. '(nb' → logprob: -4.445267677307129
    6. ' nb' → logprob: -4.570267677307129
    7. 'len' → logprob: -4.695267677307129
    8. '[' → logprob: -4.820267677307129
    9. 'vals' → logprob: -4.820267677307129
    10. '_nb' → logprob: -4.820267677307129

Token 276: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2034672051668167
    2. '[' → logprob: -1.7034672498703003
    3. '   ' → logprob: -7.45346736907959
    4. ']' → logprob: -8.07846736907959
    5. ']][' → logprob: -8.20346736907959
    6. '[i' → logprob: -8.45346736907959
    7. ' ][' → logprob: -9.07846736907959
    8. ']==' → logprob: -9.57846736907959
    9. ' [' → logprob: -9.95346736907959
    10. '+' → logprob: -10.07846736907959

Token 277: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05264626070857048
    2. '2' → logprob: -3.4276461601257324
    3. '[' → logprob: -4.052646160125732
    4. '1' → logprob: -7.052646160125732
    5. '(' → logprob: -8.80264663696289
    6. '```' → logprob: -9.42764663696289
    7. '][' → logprob: -9.55264663696289
    8. ' ' → logprob: -9.92764663696289
    9. '
' → logprob: -10.17764663696289
    10. '3' → logprob: -10.92764663696289

Token 278: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.710435688495636
    2. ' ==' → logprob: -1.2104356288909912
    3. '!=' → logprob: -2.085435628890991
    4. ' !=' → logprob: -2.460435628890991
    5. ']==' → logprob: -7.58543586730957
    6. ']!=' → logprob: -9.46043586730957
    7. ' not' → logprob: -9.71043586730957
    8. ']' → logprob: -10.33543586730957
    9. ' ' → logprob: -10.33543586730957
    10. '[' → logprob: -10.71043586730957

Token 279: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09868580102920532
    2. ' ==' → logprob: -2.4736857414245605
    3. '!=' → logprob: -4.7236857414245605
    4. ' !=' → logprob: -7.2236857414245605
    5. ']==' → logprob: -10.598686218261719
    6. 'a' → logprob: -11.098686218261719
    7. '[' → logprob: -11.223686218261719
    8. '==
' → logprob: -12.223686218261719
    9. 'in' → logprob: -12.598686218261719
    10. '<|end|>' → logprob: -12.723686218261719

Token 280: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21198026835918427
    2. 'c' → logprob: -2.4619803428649902
    3. 'b' → logprob: -2.7119803428649902
    4. 'ind' → logprob: -3.7119803428649902
    5. ' a' → logprob: -4.83698034286499
    6. ' c' → logprob: -6.33698034286499
    7. ' b' → logprob: -6.46198034286499
    8. '_' → logprob: -7.08698034286499
    9. ' ind' → logprob: -7.08698034286499
    10. 'ab' → logprob: -7.21198034286499

Token 281: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.351236492395401
    2. 'and' → logprob: -1.6012364625930786
    3. ':' → logprob: -2.601236581802368
    4. ':
' → logprob: -4.101236343383789
    5. '       ' → logprob: -6.976236343383789
    6. ')' → logprob: -7.476236343383789
    7. '<|end|>' → logprob: -7.476236343383789
    8. '           ' → logprob: -7.601236343383789
    9. '):' → logprob: -8.476236343383789
    10. '):
' → logprob: -8.851236343383789

Token 282: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.30776798725128174
    2. '           ' → logprob: -1.4327679872512817
    3. ' or' → logprob: -4.432767868041992
    4. 'and' → logprob: -4.932767868041992
    5. ':' → logprob: -6.057767868041992
    6. ':
' → logprob: -6.182767868041992
    7. '       ' → logprob: -6.432767868041992
    8. ',' → logprob: -7.932767868041992
    9. '<|end|>' → logprob: -8.432767868041992
    10. ' :' → logprob: -9.682767868041992

Token 283: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' (adapté à ' vals') → logprob: -0.266489177942276
    2. ' vals' → logprob: -1.5164891481399536
    3. '           ' → logprob: -4.516489028930664
    4. '       ' → logprob: -6.016489028930664
    5. '(vals' → logprob: -8.016489028930664
    6. 'val' → logprob: -8.516489028930664
    7. '   ' → logprob: -8.641489028930664
    8. '_vals' → logprob: -9.641489028930664
    9. 'continue' → logprob: -9.891489028930664
    10. 'if' → logprob: -10.641489028930664

Token 284: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03841691091656685
    2. '.' → logprob: -3.288416862487793
    3. ' .' → logprob: -7.913416862487793
    4. '.app' → logprob: -13.038416862487793
    5. '.ap' → logprob: -13.288416862487793
    6. '.extend' → logprob: -13.913416862487793
    7. '=' → logprob: -14.163416862487793
    8. '       ' → logprob: -14.163416862487793
    9. '].' → logprob: -14.288416862487793
    10. 'append' → logprob: -14.788416862487793

Token 285: '(first' (ID: 31998)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3220706880092621
    2. '(' → logprob: -1.9470707178115845
    3. '(a' → logprob: -3.072070598602295
    4. 'l' → logprob: -3.322070598602295
    5. '((' → logprob: -3.572070598602295
    6. '(abs' → logprob: -4.822070598602295
    7. ' (' → logprob: -5.572070598602295
    8. ' l' → logprob: -5.572070598602295
    9. '(b' → logprob: -5.697070598602295
    10. 'a' → logprob: -7.572070598602295

Token 286: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -14.125001907348633
    3. 'sum' → logprob: -14.125001907348633
    4. ' _' → logprob: -15.250001907348633
    5. '_s' → logprob: -15.875001907348633
    6. '_sub' → logprob: -16.625001907348633
    7. ' -' → logprob: -16.625001907348633
    8. ')' → logprob: -17.125001907348633
    9. '[' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.750001907348633

Token 287: '-a' (ID: 8575)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0953245684504509
    2. '-' → logprob: -2.4703245162963867
    3. ' +' → logprob: -5.470324516296387
    4. '+' → logprob: -6.220324516296387
    5. '-a' → logprob: -9.845324516296387
    6. '   ' → logprob: -10.220324516296387
    7. ')' → logprob: -10.720324516296387
    8. ' ' → logprob: -11.220324516296387
    9. '-
' → logprob: -11.720324516296387
    10. ' -
' → logprob: -11.970324516296387

Token 288: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23557348549365997
    2. ')' → logprob: -2.1105735301971436
    3. ' +' → logprob: -2.4855735301971436
    4. '+)' → logprob: -6.3605732917785645
    5. ' )' → logprob: -6.9855732917785645
    6. '+b' → logprob: -7.2355732917785645
    7. '-' → logprob: -7.4855732917785645
    8. '+a' → logprob: -7.4855732917785645
    9. ' -' → logprob: -8.610573768615723
    10. ')+' → logprob: -8.735573768615723

Token 289: 'hen' (ID: 5447)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.26030728220939636
    2. 'hen' → logprob: -1.7603073120117188
    3. 'b' → logprob: -3.2603073120117188
    4. 'ab' → logprob: -4.385307312011719
    5. 'a' → logprob: -6.510307312011719
    6. ' l' → logprob: -6.635307312011719
    7. ' hen' → logprob: -6.760307312011719
    8. 'h' → logprob: -7.260307312011719
    9. 'c' → logprob: -7.760307312011719
    10. ' ' → logprob: -8.572807312011719

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009289718000218272
    2. ' )' → logprob: -7.12592887878418
    3. ')
' → logprob: -9.50092887878418
    4. '<|end|>' → logprob: -10.25092887878418
    5. '[' → logprob: -12.37592887878418
    6. '<|end|>' → logprob: -12.75092887878418
    7. '-' → logprob: -14.00092887878418
    8. '   ' → logprob: -14.25092887878418
    9. ' ' → logprob: -14.25092887878418
    10. ' ' → logprob: -14.25092887878418

Token 291: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04102436453104019
    2. ' vals' → logprob: -3.5410244464874268
    3. 'vals' → logprob: -5.041024208068848
    4. '(vals' → logprob: -5.666024208068848
    5. ':' → logprob: -7.541024208068848
    6. ',' → logprob: -8.916024208068848
    7. ':
' → logprob: -9.041024208068848
    8. 'val' → logprob: -9.041024208068848
    9. '          ' → logprob: -9.541024208068848
    10. ' val' → logprob: -9.541024208068848

Token 294: '           ' (ID: 352)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.47980308532714844
    2. ' vals' → logprob: -1.3548030853271484
    3. ' first' → logprob: -2.3548030853271484
    4. 'first' → logprob: -3.6048030853271484
    5. 'val' → logprob: -7.979803085327148
    6. '(vals' → logprob: -8.104803085327148
    7. 'values' → logprob: -9.479803085327148
    8. '_vals' → logprob: -9.604803085327148
    9. ' values' → logprob: -10.604803085327148
    10. 'True' → logprob: -10.729803085327148

Token 295: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' (adapté à ' vals') → logprob: -0.0002922022540587932
    2. ' vals' → logprob: -8.25029182434082
    3. 'values' → logprob: -11.12529182434082
    4. 'val' → logprob: -11.62529182434082
    5. 'pass' → logprob: -12.87529182434082
    6. 'None' → logprob: -14.00029182434082
    7. 'continue' → logprob: -14.12529182434082
    8. '   ' → logprob: -14.25029182434082
    9. 'first' → logprob: -14.25029182434082
    10. 'break' → logprob: -14.87529182434082

Token 296: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.031157969729975e-05
    2. '.' → logprob: -9.375090599060059
    3. 'append' → logprob: -13.000090599060059
    4. ' .' → logprob: -13.125090599060059
    5. '.extend' → logprob: -14.000090599060059
    6. '	append' → logprob: -16.750089645385742
    7. '.app' → logprob: -17.000089645385742
    8. '   ' → logprob: -17.500089645385742
    9. '.ap' → logprob: -17.500089645385742
    10. '<|end|>' → logprob: -17.750089645385742

Token 297: '(first' (ID: 31998)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.01825892925262451
    2. '(first' → logprob: -4.018259048461914
    3. ' first' → logprob: -9.143259048461914
    4. '[first' → logprob: -13.393259048461914
    5. '(' → logprob: -15.518259048461914
    6. '	first' → logprob: -15.893259048461914
    7. 'None' → logprob: -17.393259048461914
    8. '0' → logprob: -17.643259048461914
    9. '  ' → logprob: -18.143259048461914
    10. '   ' → logprob: -18.893259048461914

Token 298: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.2246291337069124e-05
    2. 'sum' → logprob: -10.750021934509277
    3. '_s' → logprob: -15.125021934509277
    4. '-s' → logprob: -15.500021934509277
    5. 'a' → logprob: -15.750021934509277
    6. '2' → logprob: -16.875022888183594
    7. 's' → logprob: -17.375022888183594
    8. ' -' → logprob: -17.750022888183594
    9. 'Sum' → logprob: -17.750022888183594
    10. '-' → logprob: -17.875022888183594

Token 299: '-a' (ID: 8575)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.0022059278562664986
    2. ' -' → logprob: -6.502205848693848
    3. '-' → logprob: -7.377205848693848
    4. '-a' → logprob: -10.127205848693848
    5. '-c' → logprob: -11.252205848693848
    6. '-l' → logprob: -11.252205848693848
    7. '-ab' → logprob: -13.127205848693848
    8. '-h' → logprob: -13.377205848693848
    9. '-б' → logprob: -13.627205848693848
    10. '```' → logprob: -14.127205848693848

Token 300: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014217688702046871
    2. '+b' → logprob: -4.264217853546143
    3. ' +' → logprob: -9.889217376708984
    4. '+c' → logprob: -13.764217376708984
    5. '+h' → logprob: -13.889217376708984
    6. '+a' → logprob: -15.014217376708984
    7. '+
' → logprob: -15.389217376708984
    8. '＋' → logprob: -15.639217376708984
    9. '+B' → logprob: -15.639217376708984
    10. '+</' → logprob: -16.139217376708984

Token 301: 'hen' (ID: 5447)
  Prédit: 'hen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hen' → logprob: -1.3856492842023727e-06
    2. ' hen' → logprob: -13.750000953674316
    3. 'h' → logprob: -16.625001907348633
    4. 'he' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. '  ' → logprob: -17.625001907348633
    7. 'han' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '
' → logprob: -18.500001907348633
    10. 'hn' → logprob: -18.750001907348633

Token 302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '۲' → logprob: -17.625001907348633
    7. '[' → logprob: -17.750001907348633
    8. '])' → logprob: -18.625001907348633
    9. '`)' → logprob: -18.625001907348633
    10. '+' → logprob: -18.875001907348633

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ')
' → logprob: -11.250017166137695
    3. ' )' → logprob: -12.625017166137695
    4. '   ' → logprob: -14.500017166137695
    5. ')return' → logprob: -15.000017166137695
    6. '))' → logprob: -16.500017166137695
    7. '       ' → logprob: -16.500017166137695
    8. ']' → logprob: -16.875017166137695
    9. '`)' → logprob: -17.375017166137695
    10. '）' → logprob: -17.375017166137695

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010252383537590504
    2. ')' → logprob: -5.385252475738525
    3. ' return' → logprob: -5.885252475738525
    4. 'return' → logprob: -6.260252475738525
    5. '<|end|>' → logprob: -7.510252475738525
    6. '.' → logprob: -9.260251998901367
    7. '	return' → logprob: -9.385251998901367
    8. '    
' → logprob: -9.760251998901367
    9. '
' → logprob: -10.385251998901367
    10. '#' → logprob: -10.885251998901367

Token 305: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5657830834388733
    2. ')' → logprob: -1.1907830238342285
    3. 'return' → logprob: -3.5657830238342285
    4. '
' → logprob: -3.8157830238342285
    5. ' return' → logprob: -3.9407830238342285
    6. ' ' → logprob: -4.5657830238342285
    7. '    
' → logprob: -4.8157830238342285
    8. '<|end|>' → logprob: -4.8157830238342285
    9. '  
' → logprob: -4.8157830238342285
    10. ')
' → logprob: -5.0657830238342285

Token 306: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029896855354309082
    2. '(min' → logprob: -3.7798967361450195
    3. '('' → logprob: -5.7798967361450195
    4. '(vals' → logprob: -7.0298967361450195
    5. '(max' → logprob: -7.2798967361450195
    6. '(sum' → logprob: -7.2798967361450195
    7. '(*' → logprob: -7.5298967361450195
    8. '("("' → logprob: -7.7798967361450195
    9. '(len' → logprob: -9.52989673614502
    10. '(
' → logprob: -9.52989673614502

Token 307: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.125003814697266
    3. '(val' → logprob: -13.750003814697266
    4. 'vals' → logprob: -15.625003814697266
    5. '(values' → logprob: -15.875003814697266
    6. ' (' → logprob: -16.375003814697266
    7. '(
' → logprob: -17.125003814697266
    8. ' vals' → logprob: -17.125003814697266
    9. '(vars' → logprob: -17.750003814697266
    10. '(v' → logprob: -18.125003814697266

Token 308: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. '))' → logprob: -11.37501335144043
    3. '())' → logprob: -13.37501335144043
    4. ' )' → logprob: -15.00001335144043
    5. '()' → logprob: -15.25001335144043
    6. '])' → logprob: -16.37501335144043
    7. ')`' → logprob: -16.75001335144043
    8. '})' → logprob: -17.12501335144043
    9. ')
' → logprob: -17.25001335144043
    10. '`)' → logprob: -18.00001335144043

Token 309: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6618261933326721
    2. '<|end|>' → logprob: -0.7868261933326721
    3. '
' → logprob: -4.036826133728027
    4. '#' → logprob: -5.536826133728027
    5. '\n' → logprob: -6.286826133728027
    6. '<|end|>' → logprob: -6.411826133728027
    7. '}' → logprob: -6.661826133728027
    8. ']' → logprob: -7.786826133728027
    9. '```' → logprob: -7.786826133728027
    10. '[' → logprob: -8.036826133728027

Token 310: ' exit' (ID: 10654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16766628623008728
    2. '<|end|>' → logprob: -1.9176663160324097
    3. '
' → logprob: -5.417666435241699
    4. '\n' → logprob: -7.167666435241699
    5. '}' → logprob: -7.292666435241699
    6. '#' → logprob: -7.667666435241699
    7. '```' → logprob: -8.4176664352417
    8. ']' → logprob: -8.5426664352417
    9. '<|end|>' → logprob: -8.7926664352417
    10. '[' → logprob: -9.0426664352417

Token 311: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002826038980856538
    2. '(' → logprob: -5.87782621383667
    3. '())' → logprob: -11.627825736999512
    4. '()
' → logprob: -12.502825736999512
    5. '()]' → logprob: -12.627825736999512
    6. '()\' → logprob: -14.127825736999512
    7. '()}' → logprob: -14.252825736999512
    8. '()`' → logprob: -14.377825736999512
    9. '()">' → logprob: -14.627825736999512
    10. '();' → logprob: -14.877825736999512

Token 312: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13775543868541718
    2. '<|end|>' → logprob: -3.0127553939819336
    3. '(' → logprob: -3.1377553939819336
    4. ' ' → logprob: -3.8877553939819336
    5. '
' → logprob: -5.262755393981934
    6. ':' → logprob: -5.887755393981934
    7. '\n' → logprob: -6.387755393981934
    8. '#' → logprob: -6.637755393981934
    9. ''' → logprob: -7.387755393981934
    10. '```' → logprob: -7.512755393981934

Token 313: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001677794847637415
    2. '=' → logprob: -7.251677989959717
    3. 'if' → logprob: -8.251677513122559
    4. '#' → logprob: -8.376677513122559
    5. 'bc' → logprob: -9.126677513122559
    6. ' =' → logprob: -9.501677513122559
    7. 'cos' → logprob: -9.626677513122559
    8. '()' → logprob: -9.626677513122559
    9. 'def' → logprob: -10.376677513122559
    10. '```' → logprob: -11.001677513122559

Token 314: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015285050496459007
    2. '5' → logprob: -5.265285015106201
    3. '10' → logprob: -5.265285015106201
    4. '3' → logprob: -5.515285015106201
    5. ' int' → logprob: -8.01528549194336
    6. '100' → logprob: -8.89028549194336
    7. '7' → logprob: -9.51528549194336
    8. '4' → logprob: -9.64028549194336
    9. '[int' → logprob: -10.39028549194336
    10. '50' → logprob: -10.64028549194336

Token 315: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.017274750396609306
    2. '()' → logprob: -4.267274856567383
    3. '(' → logprob: -5.892274856567383
    4. 'input' → logprob: -8.142274856567383
    5. '=input' → logprob: -10.017274856567383
    6. '(
' → logprob: -12.767274856567383
    7. ' ()' → logprob: -12.892274856567383
    8. '('' → logprob: -13.892274856567383
    9. ' (' → logprob: -14.142274856567383
    10. '()>' → logprob: -14.392274856567383

Token 316: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002354832977289334
    2. '()' → logprob: -8.750235557556152
    3. '())
' → logprob: -9.500235557556152
    4. '(' → logprob: -13.500235557556152
    5. '())

' → logprob: -15.625235557556152
    6. ' ())' → logprob: -16.000234603881836
    7. '()
' → logprob: -16.250234603881836
    8. '().' → logprob: -16.250234603881836
    9. ')' → logprob: -16.250234603881836
    10. '("' → logprob: -16.375234603881836

Token 317: '#' (ID: 2)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.001356667373329401
    2. 'lst' → logprob: -6.876356601715088
    3. 'data' → logprob: -9.376357078552246
    4. 'arr' → logprob: -9.876357078552246
    5. 'values' → logprob: -10.626357078552246
    6. 'abc' → logprob: -10.751357078552246
    7. 'vals' → logprob: -11.001357078552246
    8. 'a' → logprob: -11.001357078552246
    9. 'pairs' → logprob: -11.251357078552246
    10. 'AB' → logprob: -11.376357078552246

Token 318: ' c' (ID: 274)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.002293352037668228
    2. 'lst' → logprob: -6.252293586730957
    3. 'arr' → logprob: -9.752293586730957
    4. 'a' → logprob: -9.752293586730957
    5. 'abc' → logprob: -10.252293586730957
    6. 'data' → logprob: -10.252293586730957
    7. 'AB' → logprob: -10.377293586730957
    8. ' ab' → logprob: -10.502293586730957
    9. '_ab' → logprob: -11.127293586730957
    10. 'l' → logprob: -11.127293586730957

Token 319: ''est' (ID: 6616)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.008063539862632751
    2. '_ab' → logprob: -5.383063316345215
    3. 'ont' → logprob: -6.883063316345215
    4. 'b' → logprob: -6.883063316345215
    5. ' ab' → logprob: -8.258063316345215
    6. 'for' → logprob: -8.633063316345215
    7. 'a' → logprob: -9.758063316345215
    8. 'omb' → logprob: -9.758063316345215
    9. 'on' → logprob: -10.008063316345215
    10. 'om' → logprob: -10.008063316345215

Token 320: ' plus' (ID: 2932)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.1150682345032692
    2. ' ab' → logprob: -2.240068197250366
    3. '[]' → logprob: -7.365068435668945
    4. '[' → logprob: -7.490068435668945
    5. 'n' → logprob: -8.240068435668945
    6. '[n' → logprob: -8.365068435668945
    7. '_ab' → logprob: -8.740068435668945
    8. '#ab' → logprob: -8.740068435668945
    9. 'nb' → logprob: -9.240068435668945
    10. '_' → logprob: -10.740068435668945

Token 321: ' lis' (ID: 20784)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46160686016082764
    2. 'ab' → logprob: -2.336606979370117
    3. 'n' → logprob: -3.461606979370117
    4. ' complet' → logprob: -3.586606979370117
    5. '_ab' → logprob: -3.836606979370117
    6. 'b' → logprob: -3.961606979370117
    7. 'com' → logprob: -4.086606979370117
    8. 'safe' → logprob: -4.336606979370117
    9. 't' → logprob: -4.461606979370117
    10. 'maint' → logprob: -4.461606979370117

Token 322: 'ible' (ID: 1430)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.010334856808185577
    2. 'ible' → logprob: -4.8853349685668945
    3. 't' → logprob: -6.5103349685668945
    4. 'ble' → logprob: -8.010334968566895
    5. 'e' → logprob: -8.135334968566895
    6. 'té' → logprob: -8.510334968566895
    7. 'ne' → logprob: -8.635334968566895
    8. 'tes' → logprob: -9.760334968566895
    9. 'bre' → logprob: -10.385334968566895
    10. 've' → logprob: -10.760334968566895

Token 323: ' comme' (ID: 7971)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.00042090186616405845
    2. '_ab' → logprob: -8.875420570373535
    3. 'abl' → logprob: -9.375420570373535
    4. '#ab' → logprob: -9.500420570373535
    5. ' ab' → logprob: -10.375420570373535
    6. 'abbr' → logprob: -10.500420570373535
    7. 'abc' → logprob: -11.000420570373535
    8. 'abla' → logprob: -12.500420570373535
    9. '_' → logprob: -12.500420570373535
    10. 'a' → logprob: -12.500420570373535

Token 324: ' nom' (ID: 8080)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.01686927117407322
    2. 'nb' → logprob: -4.266869068145752
    3. 'code' → logprob: -7.391869068145752
    4. '_ab' → logprob: -7.516869068145752
    5. ' ab' → logprob: -7.641869068145752
    6. 'n' → logprob: -7.891869068145752
    7. 'for' → logprob: -8.26686954498291
    8. '#ab' → logprob: -9.01686954498291
    9. '_nb' → logprob: -9.89186954498291
    10. '```' → logprob: -10.26686954498291

Token 325: ' de' (ID: 334)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.00030829108436591923
    2. '#ab' → logprob: -8.5003080368042
    3. 'abl' → logprob: -10.5003080368042
    4. 'abbr' → logprob: -10.6253080368042
    5. ' ab' → logprob: -11.0003080368042
    6. '_ab' → logprob: -11.2503080368042
    7. '<|end|>' → logprob: -12.1253080368042
    8. 'abla' → logprob: -12.5003080368042
    9. 'abc' → logprob: -13.2503080368042
    10. '```' → logprob: -13.7503080368042

Token 326: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.5041939616203308
    2. 'variables' → logprob: -1.1291940212249756
    3. 'var' → logprob: -2.6291940212249756
    4. 'vars' → logprob: -9.629194259643555
    5. 'fonction' → logprob: -9.629194259643555
    6. 'n' → logprob: -10.004194259643555
    7. 'liste' → logprob: -10.004194259643555
    8. '```' → logprob: -10.004194259643555
    9. 'va' → logprob: -10.129194259643555
    10. '#' → logprob: -10.254194259643555

Token 327: ',' (ID: 11)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0026777987368404865
    2. '#ab' → logprob: -6.377677917480469
    3. '<|end|>' → logprob: -7.627677917480469
    4. '_ab' → logprob: -9.127677917480469
    5. ' ab' → logprob: -9.127677917480469
    6. 'abbr' → logprob: -9.877677917480469
    7. 'abl' → logprob: -10.127677917480469
    8. 'for' → logprob: -10.127677917480469
    9. 'abc' → logprob: -10.377677917480469
    10. 'n' → logprob: -11.252677917480469

Token 328: ' non' (ID: 2893)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0011096131056547165
    2. 'lst' → logprob: -7.001109600067139
    3. 'a' → logprob: -10.001110076904297
    4. ' ab' → logprob: -10.876110076904297
    5. 'AB' → logprob: -10.876110076904297
    6. '#ab' → logprob: -11.126110076904297
    7. '_ab' → logprob: -11.251110076904297
    8. 'abs' → logprob: -11.251110076904297
    9. 'abc' → logprob: -11.501110076904297
    10. 'data' → logprob: -11.626110076904297

Token 329: ' ?
' (ID: 19740)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0008084330474957824
    2. '#ab' → logprob: -7.750808238983154
    3. ' ab' → logprob: -9.250808715820312
    4. 'abl' → logprob: -10.250808715820312
    5. 'abbr' → logprob: -10.625808715820312
    6. 'abc' → logprob: -10.625808715820312
    7. 'data' → logprob: -11.000808715820312
    8. 'lst' → logprob: -11.000808715820312
    9. 'nb' → logprob: -11.125808715820312
    10. 'abs' → logprob: -11.375808715820312

Token 330: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.00012761499965563416
    2. '#ab' → logprob: -10.375127792358398
    3. 'abc' → logprob: -10.500127792358398
    4. 'abbr' → logprob: -11.000127792358398
    5. '```' → logprob: -11.500127792358398
    6. ' ab' → logprob: -11.500127792358398
    7. 'abw' → logprob: -12.375127792358398
    8. 'abl' → logprob: -12.500127792358398
    9. 'AB' → logprob: -12.625127792358398
    10. '_ab' → logprob: -12.875127792358398

Token 331: 'vals' (ID: 44567)
  Prédit: '_lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.00019710339256562293
    2. '=' → logprob: -9.875197410583496
    3. '_' → logprob: -10.000197410583496
    4. '=[]' → logprob: -10.625197410583496
    5. '_list' → logprob: -10.875197410583496
    6. ' =' → logprob: -11.000197410583496
    7. '_l' → logprob: -11.375197410583496
    8. '=_' → logprob: -11.500197410583496
    9. 's' → logprob: -11.875197410583496
    10. '_ls' → logprob: -12.625197410583496

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006041608285158873
    2. ' =' → logprob: -5.131041526794434
    3. '=[]' → logprob: -9.256041526794434
    4. '_' → logprob: -12.006041526794434
    5. '_lst' → logprob: -12.381041526794434
    6. 's' → logprob: -12.381041526794434
    7. '=[]
' → logprob: -13.881041526794434
    8. '_=' → logprob: -14.256041526794434
    9. '=[' → logprob: -15.006041526794434
    10. ')' → logprob: -15.381041526794434

Token 333: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029815057292580605
    2. '[n' → logprob: -4.279815196990967
    3. '[int' → logprob: -4.529815196990967
    4. '[]' → logprob: -6.029815196990967
    5. '[input' → logprob: -7.779815196990967
    6. '[array' → logprob: -7.779815196990967
    7. '[str' → logprob: -8.404814720153809
    8. '[list' → logprob: -8.654814720153809
    9. '[num' → logprob: -8.654814720153809
    10. '[List' → logprob: -9.404814720153809

Token 334: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005594660760834813
    2. ' for' → logprob: -7.500559329986572
    3. '<|end|>' → logprob: -12.25055980682373
    4. '
' → logprob: -13.75055980682373
    5. 'n' → logprob: -14.37555980682373
    6. '```' → logprob: -18.000558853149414
    7. '	for' → logprob: -18.125558853149414
    8. 'range' → logprob: -18.250558853149414
    9. ' 
' → logprob: -18.375558853149414
    10. 'while' → logprob: -18.625558853149414

Token 335: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.458980300929397e-05
    2. ' _' → logprob: -9.50008487701416
    3. '_i' → logprob: -11.87508487701416
    4. 'i' → logprob: -13.12508487701416
    5. ' i' → logprob: -14.37508487701416
    6. ' in' → logprob: -16.625083923339844
    7. '_=' → logprob: -17.875083923339844
    8. '_in' → logprob: -18.250083923339844
    9. ' ' → logprob: -18.250083923339844
    10. '_range' → logprob: -18.500083923339844

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.044658806174993515
    2. 'in' → logprob: -3.169658899307251
    3. '_' → logprob: -6.419658660888672
    4. 'range' → logprob: -10.669658660888672
    5. ' ' → logprob: -13.544658660888672
    6. 'n' → logprob: -13.919658660888672
    7. 's' → logprob: -14.169658660888672
    8. '_in' → logprob: -14.544658660888672
    9. 'i' → logprob: -14.794658660888672
    10. ' _' → logprob: -15.044658660888672

Token 337: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '	range' → logprob: -19.000709533691406
    4. '_' → logprob: -19.125709533691406
    5. 'in' → logprob: -19.250709533691406
    6. ' ' → logprob: -19.625709533691406
    7. 'rang' → logprob: -19.625709533691406
    8. 'r' → logprob: -19.875709533691406
    9. 'n' → logprob: -20.000709533691406
    10. '_range' → logprob: -20.500709533691406

Token 338: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000918008794542402
    2. 'n' → logprob: -7.000917911529541
    3. ' n' → logprob: -12.5009183883667
    4. '(' → logprob: -13.2509183883667
    5. ' (' → logprob: -13.8759183883667
    6. '	n' → logprob: -16.250917434692383
    7. '(
' → logprob: -18.625917434692383
    8. '   ' → logprob: -19.000917434692383
    9. '(nb' → logprob: -19.000917434692383
    10. '_n' → logprob: -19.750917434692383

Token 339: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.062325604259967804
    2. '):' → logprob: -2.8123257160186768
    3. '):
' → logprob: -8.437325477600098
    4. ')' → logprob: -9.562325477600098
    5. ':' → logprob: -10.437325477600098
    6. ' ):
' → logprob: -11.062325477600098
    7. '():
' → logprob: -11.187325477600098
    8. ':
' → logprob: -11.937325477600098
    9. ' ):' → logprob: -12.937325477600098
    10. '()):
' → logprob: -14.062325477600098

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2408832460641861
    2. ' ab' → logprob: -1.615883231163025
    3. 'ab' → logprob: -4.4908833503723145
    4. '    
' → logprob: -6.4908833503723145
    5. '(ab' → logprob: -6.9908833503723145
    6. 'a' → logprob: -7.1158833503723145
    7. '#ab' → logprob: -8.740882873535156
    8. ' a' → logprob: -8.990882873535156
    9. 'x' → logprob: -9.365882873535156
    10. 'abcd' → logprob: -9.865882873535156

Token 341: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.31403103470802307
    2. ' ab' → logprob: -1.3140310049057007
    3. '   ' → logprob: -7.56403112411499
    4. 'a' → logprob: -8.564030647277832
    5. 'x' → logprob: -10.564030647277832
    6. ' a' → logprob: -11.314030647277832
    7. '_ab' → logprob: -12.439030647277832
    8. 'abc' → logprob: -12.939030647277832
    9. '    
' → logprob: -13.064030647277832
    10. ' ' → logprob: -13.189030647277832

Token 342: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.09377257525920868
    2. '=' → logprob: -2.8437726497650146
    3. ' =' → logprob: -3.8437726497650146
    4. '_vals' → logprob: -5.5937724113464355
    5. '   ' → logprob: -5.9687724113464355
    6. 'val' → logprob: -6.8437724113464355
    7. '=input' → logprob: -7.8437724113464355
    8. '_=' → logprob: -7.8437724113464355
    9. 'input' → logprob: -8.093772888183594
    10. '_' → logprob: -8.218772888183594

Token 343: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5807806849479675
    2. '=' → logprob: -0.8307806849479675
    3. ' =' → logprob: -5.455780506134033
    4. '.' → logprob: -7.955780506134033
    5. '=input' → logprob: -9.205780982971191
    6. 'append' → logprob: -10.580780982971191
    7. '.=' → logprob: -10.580780982971191
    8. '+=' → logprob: -10.830780982971191
    9. ' .' → logprob: -11.080780982971191
    10. '=int' → logprob: -11.830780982971191

Token 344: '(' (ID: 7)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.01221093162894249
    2. '(list' → logprob: -4.512210845947266
    3. '(' → logprob: -6.762210845947266
    4. 'tuple' → logprob: -12.262210845947266
    5. '([' → logprob: -14.262210845947266
    6. ' tuple' → logprob: -15.012210845947266
    7. '(t' → logprob: -16.762210845947266
    8. '((' → logprob: -17.012210845947266
    9. '(map' → logprob: -17.262210845947266
    10. ' (' → logprob: -17.387210845947266

Token 345: ' list' (ID: 1562)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006981287617236376
    2. 'list' → logprob: -5.006981372833252
    3. ' tuple' → logprob: -8.256980895996094
    4. '(tuple' → logprob: -12.006980895996094
    5. ' list' → logprob: -15.131980895996094
    6. '   ' → logprob: -17.506980895996094
    7. '(list' → logprob: -18.131980895996094
    8. '[' → logprob: -19.131980895996094
    9. 'tu' → logprob: -19.256980895996094
    10. '[list' → logprob: -20.631980895996094

Token 346: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004078401252627373
    2. '(' → logprob: -5.504078388214111
    3. '(int' → logprob: -17.504077911376953
    4. 'map' → logprob: -18.129077911376953
    5. ' map' → logprob: -18.504077911376953
    6. '(tuple' → logprob: -18.754077911376953
    7. ' (' → logprob: -18.879077911376953
    8. '	map' → logprob: -19.004077911376953
    9. '((' → logprob: -19.504077911376953
    10. '.map' → logprob: -20.129077911376953

Token 347: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000116655595775228
    2. '(' → logprob: -9.500116348266602
    3. 'int' → logprob: -10.125116348266602
    4. ',int' → logprob: -14.375116348266602
    5. ' int' → logprob: -14.750116348266602
    6. '=int' → logprob: -15.125116348266602
    7. '<int' → logprob: -15.625116348266602
    8. '(
' → logprob: -15.875116348266602
    9. '[int' → logprob: -16.6251163482666
    10. '(input' → logprob: -17.1251163482666

Token 348: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.23998896777629852
    2. ',' → logprob: -2.2399890422821045
    3. '(input' → logprob: -2.2399890422821045
    4. '(' → logprob: -8.114989280700684
    5. 'input' → logprob: -8.989989280700684
    6. ' ,' → logprob: -11.614989280700684
    7. ' (' → logprob: -12.364989280700684
    8. ' input' → logprob: -12.739989280700684
    9. '   ' → logprob: -13.864989280700684
    10. ' ' → logprob: -13.989989280700684

Token 349: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007193420315161347
    2. ' input' → logprob: -7.2507195472717285
    3. '(input' → logprob: -11.75071907043457
    4. ',input' → logprob: -13.50071907043457
    5. '=input' → logprob: -16.75071907043457
    6. '<input' → logprob: -17.75071907043457
    7. '	input' → logprob: -18.37571907043457
    8. '_input' → logprob: -18.50071907043457
    9. '
' → logprob: -18.75071907043457
    10. '   ' → logprob: -18.87571907043457

Token 350: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1888679839321412e-05
    2. '()' → logprob: -10.750021934509277
    3. '()
' → logprob: -15.875021934509277
    4. '.split' → logprob: -16.25002098083496
    5. '(' → logprob: -16.37502098083496
    6. ' ().' → logprob: -16.62502098083496
    7. '   ' → logprob: -18.87502098083496
    8. '()[' → logprob: -19.12502098083496
    9. 'split' → logprob: -19.12502098083496
    10. '()))' → logprob: -19.12502098083496

Token 351: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020509003661572933
    2. 'strip' → logprob: -8.500205039978027
    3. ' split' → logprob: -14.250205039978027
    4. '(split' → logprob: -14.250205039978027
    5. 'rstrip' → logprob: -15.250205039978027
    6. '().' → logprob: -17.625205993652344
    7. '.split' → logprob: -17.750205993652344
    8. 'spl' → logprob: -18.250205993652344
    9. 'read' → logprob: -19.750205993652344
    10. 'plit' → logprob: -19.875205993652344

Token 352: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3967300355434418
    2. '())))' → logprob: -1.1467300653457642
    3. '()' → logprob: -4.896729946136475
    4. ')))' → logprob: -6.646729946136475
    5. '())))
' → logprob: -7.396729946136475
    6. '())' → logprob: -8.521730422973633
    7. '))' → logprob: -8.896730422973633
    8. '(' → logprob: -10.271730422973633
    9. '().' → logprob: -10.396730422973633
    10. '()))
' → logprob: -10.896730422973633

Token 353: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018460819497704506
    2. '())' → logprob: -4.268460750579834
    3. '))' → logprob: -5.518460750579834
    4. '()' → logprob: -8.393461227416992
    5. ' )' → logprob: -10.143461227416992
    6. '()))' → logprob: -11.768461227416992
    7. ')))' → logprob: -13.643461227416992
    8. ')
' → logprob: -14.268461227416992
    9. '(' → logprob: -15.518461227416992
    10. ' ))' → logprob: -15.643461227416992

Token 354: 'print' (ID: 1598)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018261387944221497
    2. 'print' → logprob: -4.018261432647705
    3. '
' → logprob: -9.143260955810547
    4. ' min' → logprob: -13.143260955810547
    5. '```' → logprob: -13.393260955810547
    6. '<|end|>' → logprob: -15.393260955810547
    7. '[min' → logprob: -15.518260955810547
    8. '(min' → logprob: -15.768260955810547
    9. '.min' → logprob: -16.268260955810547
    10. '_min' → logprob: -16.643260955810547

Token 355: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.012720598839223385
    2. '(' → logprob: -4.762720584869385
    3. 'min' → logprob: -6.512720584869385
    4. '('' → logprob: -6.637720584869385
    5. '("' → logprob: -6.762720584869385
    6. '()' → logprob: -9.137721061706543
    7. '("("' → logprob: -11.012721061706543
    8. '_min' → logprob: -12.012721061706543
    9. '("")' → logprob: -12.387721061706543
    10. '=min' → logprob: -13.262721061706543

Token 356: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: 0.0
    2. 'cost' → logprob: -19.875
    3. '_cos' → logprob: -20.0
    4. ')' → logprob: -20.5
    5. 'min' → logprob: -20.5
    6. ' cos' → logprob: -21.0
    7. '.cos' → logprob: -21.375
    8. 'cons' → logprob: -22.375
    9. 'kos' → logprob: -22.5
    10. '   ' → logprob: -23.125

Token 357: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1817111223936081
    2. '(' → logprob: -1.8067110776901245
    3. ' (' → logprob: -6.681711196899414
    4. '(nb' → logprob: -8.056711196899414
    5. ')' → logprob: -8.806711196899414
    6. '(
' → logprob: -9.056711196899414
    7. ')(' → logprob: -9.181711196899414
    8. '(ab' → logprob: -11.056711196899414
    9. '(abs' → logprob: -13.056711196899414
    10. '((' → logprob: -13.306711196899414

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008344047237187624
    2. '(ab' → logprob: -7.1258344650268555
    3. '(' → logprob: -11.250834465026855
    4. ' ,' → logprob: -11.500834465026855
    5. 'ab' → logprob: -12.750834465026855
    6. ',
' → logprob: -13.125834465026855
    7. ' ab' → logprob: -14.875834465026855
    8. ',n' → logprob: -15.000834465026855
    9. '_ab' → logprob: -15.125834465026855
    10. ')' → logprob: -15.250834465026855

Token 359: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.006715967319905758
    2. ' ab' → logprob: -5.006715774536133
    3. '(ab' → logprob: -14.881715774536133
    4. '_ab' → logprob: -16.756715774536133
    5. '#ab' → logprob: -17.006715774536133
    6. 'AB' → logprob: -17.256715774536133
    7. ')' → logprob: -17.631715774536133
    8. ' ' → logprob: -18.256715774536133
    9. ''ab' → logprob: -18.381715774536133
    10. 'аб' → logprob: -18.506715774536133

Token 360: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.9361264946837764e-07
    2. 'val' → logprob: -17.125
    3. '_vals' → logprob: -17.5
    4. ')' → logprob: -17.625
    5. 'vars' → logprob: -17.75
    6. ' vals' → logprob: -17.75
    7. 'vs' → logprob: -18.0
    8. 'v' → logprob: -18.125
    9. 'values' → logprob: -18.25
    10. '(vals' → logprob: -18.875

Token 361: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016074994346126914
    2. '))' → logprob: -8.750161170959473
    3. '())' → logprob: -13.625161170959473
    4. ' )' → logprob: -14.250161170959473
    5. ')`' → logprob: -15.125161170959473
    6. '()' → logprob: -16.875160217285156
    7. ')
' → logprob: -17.750160217285156
    8. ')))' → logprob: -18.250160217285156
    9. '(' → logprob: -18.750160217285156
    10. ')")' → logprob: -19.250160217285156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 32.59%
Précision adaptée (1ère position): 34.82%
Précision (top 10): 68.52%
================================================================================
