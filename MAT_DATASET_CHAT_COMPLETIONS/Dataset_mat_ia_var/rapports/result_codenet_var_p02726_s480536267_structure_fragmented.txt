================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return map(int, input().split())

def init_list(n):
    return [0]*n

def min1(j, i):
    return j - i

def abs1(x, i):
    return abs(x - i)

def calc1(X, i):
    return abs1(X, i)

def calc2(j, Y):
    return abs1(j, Y)

def calc3(Y, i):
    return abs1(Y, i)

def calc4(j, X):
    return abs1(j, X)

def sum1(a, b):
    return a + b

def compute_dists(j, i, X, Y):
    a = min1(j, i)
    b = sum1(calc1(X, i), 1)
    b = sum1(b, calc2(j, Y))
    c = sum1(calc3(Y, i), 1)
    c = sum1(c, calc4(j, X))
    return a, b, c

def compute_min(a, b, c):
    return min(a, b, c)

def increment(C, idx):
    C[idx] += 1

def process(N, X, Y, C):
    for i in range(1, N):
        for j in range(i+1, N+1):
            a, b, c = compute_dists(j, i, X, Y)
            m = compute_min(a, b, c)
            increment(C, m)

def print_result(C, N):
    for i in range(1, N):
        print(C[i])

def main():
    N, X, Y = read_input()
    C = init_list(N)
    process(N, X, Y, C)
    print_result(C, N)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0045651765540242195
    2. '_' → logprob: -5.629565238952637
    3. '():' → logprob: -7.379565238952637
    4. '(:' → logprob: -8.629565238952637
    5. '(_:' → logprob: -10.129565238952637
    6. ' (' → logprob: -10.254565238952637
    7. ':' → logprob: -11.129565238952637
    8. '```' → logprob: -11.254565238952637
    9. '(_' → logprob: -11.379565238952637
    10. '()' → logprob: -11.504565238952637

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.993769645690918
    2. '\' → logprob: -1.243769645690918
    3. '\n' → logprob: -1.368769645690918
    4. '   ' → logprob: -2.993769645690918
    5. '    
' → logprob: -4.993769645690918
    6. '
' → logprob: -5.118769645690918
    7. ' 
' → logprob: -5.618769645690918
    8. '``' → logprob: -5.868769645690918
    9. ':' → logprob: -6.118769645690918
    10. ''\' → logprob: -6.618769645690918

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.273018479347229
    2. '"' → logprob: -2.2730183601379395
    3. 'input' → logprob: -2.6480183601379395
    4. ' input' → logprob: -3.0230183601379395
    5. ''' → logprob: -4.2730183601379395
    6. '  ' → logprob: -7.3980183601379395
    7. ' "' → logprob: -8.148018836975098
    8. '(' → logprob: -8.273018836975098
    9. '(input' → logprob: -8.398018836975098
    10. ' []' → logprob: -8.523018836975098

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01077838335186243
    2. '(lambda' → logprob: -5.635778427124023
    3. ' (' → logprob: -5.885778427124023
    4. '<|end|>' → logprob: -5.885778427124023
    5. '(int' → logprob: -8.385778427124023
    6. '(user' → logprob: -9.135778427124023
    7. '(str' → logprob: -9.260778427124023
    8. '(space' → logprob: -9.260778427124023
    9. '(open' → logprob: -9.510778427124023
    10. 's' → logprob: -9.510778427124023

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0290248394012451
    2. '(' → logprob: -1.1540248394012451
    3. '(input' → logprob: -1.1540248394012451
    4. 'input' → logprob: -5.279025077819824
    5. ' input' → logprob: -7.029025077819824
    6. '(read' → logprob: -7.779025077819824
    7. '```' → logprob: -7.904025077819824
    8. ',' → logprob: -8.029025077819824
    9. ',input' → logprob: -8.029025077819824
    10. '<|end|>' → logprob: -8.029025077819824

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38696393370628357
    2. 'input' → logprob: -1.136963963508606
    3. '(input' → logprob: -9.511963844299316
    4. ')' → logprob: -11.636963844299316
    5. '=input' → logprob: -13.636963844299316
    6. '	input' → logprob: -13.636963844299316
    7. '[input' → logprob: -13.636963844299316
    8. ' iter' → logprob: -13.886963844299316
    9. '<|end|>' → logprob: -13.886963844299316
    10. ',input' → logprob: -14.261963844299316

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14697641134262085
    2. '()' → logprob: -2.0219764709472656
    3. ')' → logprob: -6.896976470947266
    4. '()))' → logprob: -6.896976470947266
    5. '(()' → logprob: -7.521976470947266
    6. '(' → logprob: -7.521976470947266
    7. ' ())' → logprob: -7.521976470947266
    8. '`()' → logprob: -8.771976470947266
    9. '());' → logprob: -9.146976470947266
    10. '('' → logprob: -9.771976470947266

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031817557755857706
    2. 'strip' → logprob: -5.7531819343566895
    3. 'rstrip' → logprob: -13.128181457519531
    4. ' split' → logprob: -13.253181457519531
    5. '(split' → logprob: -15.503181457519531
    6. 'read' → logprob: -16.25318145751953
    7. ')' → logprob: -18.75318145751953
    8. ' strip' → logprob: -18.87818145751953
    9. 'spl' → logprob: -19.37818145751953
    10. '.split' → logprob: -20.25318145751953

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20254619419574738
    2. '()))' → logprob: -1.702546238899231
    3. '()' → logprob: -7.202546119689941
    4. '))' → logprob: -8.702546119689941
    5. ')' → logprob: -8.827546119689941
    6. '(' → logprob: -10.952546119689941
    7. ' ())' → logprob: -11.452546119689941
    8. '())
' → logprob: -11.577546119689941
    9. '()))
' → logprob: -11.702546119689941
    10. '())))' → logprob: -11.702546119689941

Token 13: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4374710321426392
    2. '(' → logprob: -1.6874710321426392
    3. 'def' → logprob: -2.0624709129333496
    4. '#' → logprob: -2.3124709129333496
    5. '\' → logprob: -2.4374709129333496
    6. '```' → logprob: -2.9374709129333496
    7. 'x' → logprob: -3.1874709129333496
    8. '[' → logprob: -3.6874709129333496
    9. ')' → logprob: -3.6874709129333496
    10. 'n' → logprob: -4.31247091293335

Token 14: ' init' (ID: 6327)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5317637920379639
    2. ' main' → logprob: -1.1567637920379639
    3. ' process' → logprob: -2.781763792037964
    4. ' calculate' → logprob: -3.906763792037964
    5. ' write' → logprob: -5.281764030456543
    6. 'solve' → logprob: -6.031764030456543
    7. ' compute' → logprob: -6.156764030456543
    8. ' solution' → logprob: -6.406764030456543
    9. ' factorial' → logprob: -6.656764030456543
    10. ' read' → logprob: -7.531764030456543

Token 15: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.060052040964365005
    2. '(' → logprob: -2.9350521564483643
    3. '_data' → logprob: -7.060051918029785
    4. ' _' → logprob: -7.560051918029785
    5. '_parameters' → logprob: -7.685051918029785
    6. '_params' → logprob: -7.810051918029785
    7. '(_' → logprob: -8.060051918029785
    8. '_array' → logprob: -8.310051918029785
    9. '():' → logprob: -8.685051918029785
    10. '```' → logprob: -8.810051918029785

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026340942829847336
    2. '_' → logprob: -4.026340961456299
    3. '_list' → logprob: -5.651340961456299
    4. 's' → logprob: -7.151340961456299
    5. '[' → logprob: -7.651340961456299
    6. '()' → logprob: -8.02634048461914
    7. '(()' → logprob: -8.15134048461914
    8. '```' → logprob: -8.27634048461914
    9. '("("' → logprob: -8.52634048461914
    10. '(_' → logprob: -8.77634048461914

Token 17: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6331830620765686
    2. '):' → logprob: -0.7581830620765686
    3. ' ):' → logprob: -8.758183479309082
    4. ',' → logprob: -9.008183479309082
    5. '_' → logprob: -9.258183479309082
    6. ' )' → logprob: -9.383183479309082
    7. '):
' → logprob: -10.883183479309082
    8. '))' → logprob: -11.383183479309082
    9. ')n' → logprob: -11.383183479309082
    10. '=' → logprob: -11.383183479309082

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00957474485039711
    2. ' return' → logprob: -5.509574890136719
    3. '[' → logprob: -6.259574890136719
    4. '_list' → logprob: -7.009574890136719
    5. '[]' → logprob: -7.259574890136719
    6. 'return' → logprob: -7.634574890136719
    7. '```' → logprob: -7.759574890136719
    8. '       ' → logprob: -8.134574890136719
    9. '    
' → logprob: -8.509574890136719
    10. '[
' → logprob: -9.634574890136719

Token 19: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3986675441265106
    2. 'return' (adapté à ' return') → logprob: -1.898667573928833
    3. '   ' → logprob: -2.023667573928833
    4. '[' → logprob: -3.273667573928833
    5. ' [' → logprob: -4.773667335510254
    6. '[]' → logprob: -8.023667335510254
    7. '[
' → logprob: -9.523667335510254
    8. ' []' → logprob: -10.398667335510254
    9. '[n' → logprob: -10.898667335510254
    10. '[a' → logprob: -11.023667335510254

Token 20: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3168789744377136
    2. ' [' → logprob: -1.3168790340423584
    3. '[n' → logprob: -5.691878795623779
    4. '[]' → logprob: -9.691879272460938
    5. '[int' → logprob: -10.191879272460938
    6. '[m' → logprob: -11.066879272460938
    7. '[list' → logprob: -11.191879272460938
    8. '[i' → logprob: -11.316879272460938
    9. '[a' → logprob: -11.441879272460938
    10. '[List' → logprob: -11.691879272460938

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006065295310690999
    2. ' ' → logprob: -7.500606536865234
    3. '[]' → logprob: -11.000606536865234
    4. '[' → logprob: -11.500606536865234
    5. ' [' → logprob: -11.625606536865234
    6. '   ' → logprob: -12.250606536865234
    7. 'i' → logprob: -12.750606536865234
    8. ']' → logprob: -13.375606536865234
    9. 'False' → logprob: -13.625606536865234
    10. ' []' → logprob: -13.625606536865234

Token 22: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0773792713880539
    2. ' for' → logprob: -2.9523792266845703
    3. ']*' → logprob: -3.8273792266845703
    4. 'for' → logprob: -8.32737922668457
    5. ' ]' → logprob: -8.82737922668457
    6. ')' → logprob: -9.82737922668457
    7. '   ' → logprob: -10.82737922668457
    8. ']*(' → logprob: -12.07737922668457
    9. ')]' → logprob: -12.70237922668457
    10. '}' → logprob: -12.82737922668457

Token 23: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.935296834039036e-06
    2. ' n' → logprob: -12.75000286102295
    3. '(n' → logprob: -19.000003814697266
    4. '	n' → logprob: -19.875003814697266
    5. ')n' → logprob: -21.375003814697266
    6. '```' → logprob: -23.000003814697266
    7. '   ' → logprob: -23.250003814697266
    8. '_n' → logprob: -23.875003814697266
    9. 'n't' → logprob: -23.875003814697266
    10. ' ' → logprob: -25.000003814697266

Token 24: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5180266499519348
    2. '
' → logprob: -1.39302659034729
    3. 'def' → logprob: -1.89302659034729
    4. '<|end|>' → logprob: -6.018026828765869
    5. '
' → logprob: -7.393026828765869
    6. 'newline' → logprob: -7.768026828765869
    7. '\n' → logprob: -8.018026351928711
    8. '```' → logprob: -8.143026351928711
    9. ' def' → logprob: -8.393026351928711
    10. ' 

' → logprob: -8.393026351928711

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012499528005719185
    2. '
' → logprob: -4.7624993324279785
    3. '

' → logprob: -6.0124993324279785
    4. 'd' → logprob: -6.7624993324279785
    5. '```' → logprob: -9.637499809265137
    6. '<|end|>' → logprob: -9.887499809265137
    7. 'n' → logprob: -10.012499809265137
    8. '\' → logprob: -10.137499809265137
    9. '
' → logprob: -11.262499809265137
    10. 'de' → logprob: -11.512499809265137

Token 26: ' min' (ID: 1349)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.4579514265060425
    2. ' sum' → logprob: -1.4579514265060425
    3. ' main' → logprob: -1.5829514265060425
    4. ' count' → logprob: -2.082951545715332
    5. ' max' → logprob: -3.457951545715332
    6. ' solve' → logprob: -3.707951545715332
    7. ' calculate' → logprob: -3.832951545715332
    8. ' update' → logprob: -3.957951545715332
    9. ' compute' → logprob: -3.957951545715332
    10. ' accumulate' → logprob: -4.332951545715332

Token 27: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035344768315553665
    2. '(' → logprob: -4.03534460067749
    3. '_list' → logprob: -5.91034460067749
    4. 'imum' → logprob: -6.16034460067749
    5. '_val' → logprob: -6.66034460067749
    6. '_sum' → logprob: -6.66034460067749
    7. '(_)' → logprob: -6.66034460067749
    8. '(lst' → logprob: -6.91034460067749
    9. '_value' → logprob: -7.03534460067749
    10. '(a' → logprob: -7.16034460067749

Token 28: '(j' (ID: 4997)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9464823603630066
    2. '_value' → logprob: -1.9464824199676514
    3. 'imum' → logprob: -2.0714824199676514
    4. '_val' → logprob: -2.4464824199676514
    5. '0' → logprob: -2.5714824199676514
    6. '_index' → logprob: -3.0714824199676514
    7. 'um' → logprob: -4.071482181549072
    8. '_sum' → logprob: -4.321482181549072
    9. '_element' → logprob: -4.821482181549072
    10. '5' → logprob: -4.946482181549072

Token 29: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3632323443889618
    2. ',' → logprob: -1.6132323741912842
    3. '+' → logprob: -2.863232374191284
    4. ')' → logprob: -3.988232374191284
    5. '-' → logprob: -4.988232135772705
    6. 'dx' → logprob: -5.488232135772705
    7. ',j' → logprob: -5.863232135772705
    8. 'ex' → logprob: -5.988232135772705
    9. ',i' → logprob: -6.738232135772705
    10. ' ,' → logprob: -6.738232135772705

Token 30: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6750273108482361
    2. ' k' → logprob: -0.8000273108482361
    3. ' i' → logprob: -4.550027370452881
    4. 'i' → logprob: -4.675027370452881
    5. 'lst' → logprob: -5.300027370452881
    6. ' lst' → logprob: -6.175027370452881
    7. 'arr' → logprob: -6.425027370452881
    8. ' arr' → logprob: -6.425027370452881
    9. 'j' → logprob: -6.675027370452881
    10. ' a' → logprob: -6.675027370452881

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09191145747900009
    2. ')' → logprob: -2.466911554336548
    3. ',' → logprob: -6.466911315917969
    4. '+' → logprob: -7.091911315917969
    5. '):
' → logprob: -7.966911315917969
    6. '-' → logprob: -9.966911315917969
    7. ' ):' → logprob: -10.091911315917969
    8. ' +' → logprob: -10.966911315917969
    9. ':' → logprob: -11.091911315917969
    10. ')+' → logprob: -11.341911315917969

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39161285758018494
    2. ':' → logprob: -1.5166128873825073
    3. '):' → logprob: -3.1416127681732178
    4. ',' → logprob: -4.016613006591797
    5. ')' → logprob: -4.391613006591797
    6. '    ' → logprob: -4.891613006591797
    7. '+' → logprob: -5.516613006591797
    8. ' if' → logprob: -5.766613006591797
    9. ' ' → logprob: -6.016613006591797
    10. ' :' → logprob: -6.641613006591797

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0604835748672485
    2. '   ' → logprob: -1.9354835748672485
    3. ' min' → logprob: -1.9354835748672485
    4. 'return' (adapté à ' return') → logprob: -1.9354835748672485
    5. 'min' → logprob: -2.810483455657959
    6. ' if' → logprob: -3.435483455657959
    7. ' max' → logprob: -3.685483455657959
    8. 'if' → logprob: -4.060483455657959
    9. 'max' → logprob: -4.560483455657959
    10. ' j' → logprob: -4.560483455657959

Token 34: ' j' (ID: 441)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.542160153388977
    2. 'min' → logprob: -1.042160153388977
    3. ' j' → logprob: -3.4171600341796875
    4. 'j' → logprob: -4.1671600341796875
    5. ' max' → logprob: -5.1671600341796875
    6. 'max' → logprob: -5.5421600341796875
    7. 'abs' → logprob: -5.9171600341796875
    8. ' abs' → logprob: -5.9171600341796875
    9. '1' → logprob: -8.042160034179688
    10. ' ' → logprob: -8.167160034179688

Token 35: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6533687710762024
    2. ' if' → logprob: -1.9033687114715576
    3. ' +' → logprob: -2.6533687114715576
    4. ' <' → logprob: -2.7783687114715576
    5. 'if' → logprob: -2.7783687114715576
    6. ',' → logprob: -3.4033687114715576
    7. ' >' → logprob: -3.9033687114715576
    8. '-' → logprob: -4.028368949890137
    9. '<' → logprob: -4.028368949890137
    10. '>' → logprob: -4.153368949890137

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09616345167160034
    2. '1' → logprob: -2.971163511276245
    3. ' i' → logprob: -3.221163511276245
    4. ' ' → logprob: -7.846163272857666
    5. '(' → logprob: -10.346163749694824
    6. '   ' → logprob: -10.971163749694824
    7. '(i' → logprob: -11.033663749694824
    8. '2' → logprob: -11.283663749694824
    9. ' (' → logprob: -11.283663749694824
    10. '	i' → logprob: -11.346163749694824

Token 37: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0217829942703247
    2. '+' → logprob: -1.2717829942703247
    3. 'def' → logprob: -2.146782875061035
    4. ' ' → logprob: -2.771782875061035
    5. '<|end|>' → logprob: -2.771782875061035
    6. '(' → logprob: -3.646782875061035
    7. '>' → logprob: -4.021782875061035
    8. '*' → logprob: -4.146782875061035
    9. ' if' → logprob: -4.271782875061035
    10. '
' → logprob: -4.896782875061035

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3406294882297516
    2. '<|end|>' → logprob: -2.4656295776367188
    3. '(' → logprob: -2.8406295776367188
    4. '+' → logprob: -2.8406295776367188
    5. '*' → logprob: -3.4656295776367188
    6. ' ' → logprob: -3.9656295776367188
    7. ')' → logprob: -4.465629577636719
    8. '>' → logprob: -5.340629577636719
    9. ' def' → logprob: -5.340629577636719
    10. '_' → logprob: -5.965629577636719

Token 39: ' abs' (ID: 8443)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5283457040786743
    2. ' max' → logprob: -1.6533457040786743
    3. 'min' → logprob: -1.9033457040786743
    4. 'max' → logprob: -3.2783455848693848
    5. ' main' → logprob: -3.9033455848693848
    6. 'main' → logprob: -5.778345584869385
    7. ' sum' → logprob: -6.403345584869385
    8. ' j' → logprob: -7.028345584869385
    9. 'sum' → logprob: -7.465845584869385
    10. ' def' → logprob: -7.715845584869385

Token 40: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020317768212407827
    2. '(x' → logprob: -6.8770318031311035
    3. '(abs' → logprob: -7.2520318031311035
    4. '(i' → logprob: -9.877031326293945
    5. '(j' → logprob: -10.002031326293945
    6. '(int' → logprob: -10.752031326293945
    7. '(a' → logprob: -11.002031326293945
    8. '(n' → logprob: -11.127031326293945
    9. '((' → logprob: -11.127031326293945
    10. '<|end|>' → logprob: -11.252031326293945

Token 41: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.959636033978313e-05
    2. '(x' → logprob: -10.125089645385742
    3. '(abs' → logprob: -10.375089645385742
    4. '(n' → logprob: -12.875089645385742
    5. '()' → logprob: -13.625089645385742
    6. '(s' → logprob: -13.625089645385742
    7. '<|end|>' → logprob: -13.750089645385742
    8. '(a' → logprob: -13.750089645385742
    9. '(i' → logprob: -13.875089645385742
    10. ')' → logprob: -13.875089645385742

Token 42: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015827087918296456
    2. ' ):' → logprob: -7.126582622528076
    3. ')' → logprob: -7.376582622528076
    4. '):
' → logprob: -9.251583099365234
    5. '   ' → logprob: -10.251583099365234
    6. 'def' → logprob: -12.001583099365234
    7. ':' → logprob: -12.501583099365234
    8. '=' → logprob: -13.001583099365234
    9. ')=' → logprob: -13.376583099365234
    10. ' )' → logprob: -13.626583099365234

Token 43: ' i' (ID: 575)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7350322008132935
    2. ')' → logprob: -1.1100322008132935
    3. ' )' → logprob: -2.610032081604004
    4. ' ):' → logprob: -2.860032081604004
    5. '0' → logprob: -4.235032081604004
    6. '):
' → logprob: -4.360032081604004
    7. '   ' → logprob: -4.610032081604004
    8. '2' → logprob: -5.485032081604004
    9. ' x' → logprob: -5.610032081604004
    10. 'x' → logprob: -5.735032081604004

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014709405601024628
    2. ')' → logprob: -4.26470947265625
    3. ' ):' → logprob: -7.76470947265625
    4. '):
' → logprob: -9.88970947265625
    5. '-' → logprob: -10.63970947265625
    6. '   ' → logprob: -11.26470947265625
    7. ' )' → logprob: -11.63970947265625
    8. ' ' → logprob: -11.76470947265625
    9. ' -' → logprob: -11.76470947265625
    10. ':' → logprob: -13.26470947265625

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8786624073982239
    2. ' abs' → logprob: -1.128662347793579
    3. 'abs' → logprob: -1.378662347793579
    4. '    ' → logprob: -5.128662586212158
    5. ' return' → logprob: -5.878662586212158
    6. 'return' → logprob: -8.128662109375
    7. ' x' → logprob: -9.003662109375
    8. '(abs' → logprob: -10.003662109375
    9. 'x' → logprob: -10.378662109375
    10. '  ' → logprob: -10.753662109375

Token 46: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04690124839544296
    2. ' abs' → logprob: -3.296901226043701
    3. 'x' → logprob: -5.421901226043701
    4. '   ' → logprob: -6.046901226043701
    5. 'return' (adapté à ' return') → logprob: -6.671901226043701
    6. ' x' → logprob: -7.796901226043701
    7. ' return' → logprob: -8.17190170288086
    8. '  ' → logprob: -10.54690170288086
    9. '(abs' → logprob: -10.54690170288086
    10. ' ' → logprob: -11.92190170288086

Token 47: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2526850998401642
    2. ' abs' → logprob: -1.7526850700378418
    3. 'x' → logprob: -3.252685070037842
    4. ' x' → logprob: -4.502685070037842
    5. '(abs' → logprob: -9.252685546875
    6. '   ' → logprob: -10.127685546875
    7. ' ' → logprob: -10.377685546875
    8. 'j' → logprob: -11.377685546875
    9. 'max' → logprob: -11.502685546875
    10. ' j' → logprob: -11.752685546875

Token 48: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759836435317993
    2. '(x' → logprob: -0.8259836435317993
    3. ' (' → logprob: -11.325984001159668
    4. '1' → logprob: -11.700984001159668
    5. '(i' → logprob: -11.700984001159668
    6. '(s' → logprob: -12.200984001159668
    7. 'x' → logprob: -12.450984001159668
    8. ')' → logprob: -13.575984001159668
    9. '(
' → logprob: -13.825984001159668
    10. '(j' → logprob: -14.075984001159668

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22839108109474182
    2. '-' → logprob: -1.6033910512924194
    3. '-i' → logprob: -5.978391170501709
    4. ' ' → logprob: -8.85339069366455
    5. ')' → logprob: -8.85339069366455
    6. '[i' → logprob: -9.60339069366455
    7. '[' → logprob: -9.85339069366455
    8. '   ' → logprob: -10.97839069366455
    9. '  ' → logprob: -12.22839069366455
    10. ' i' → logprob: -12.72839069366455

Token 50: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008622609078884125
    2. ' i' → logprob: -4.758622646331787
    3. '   ' → logprob: -12.258622169494629
    4. ' ' → logprob: -12.883622169494629
    5. '  ' → logprob: -14.508622169494629
    6. '	i' → logprob: -16.008623123168945
    7. ')' → logprob: -16.633623123168945
    8. '1' → logprob: -16.758623123168945
    9. '    ' → logprob: -17.258623123168945
    10. 'x' → logprob: -18.008623123168945

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.625003814697266
    3. ')
' → logprob: -15.625003814697266
    4. '))' → logprob: -15.875003814697266
    5. '1' → logprob: -16.875003814697266
    6. ')`' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.250003814697266
    8. ' ' → logprob: -17.375003814697266
    9. '),' → logprob: -18.125003814697266
    10. '()' → logprob: -18.125003814697266

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008675907738506794
    2. '<|end|>' → logprob: -6.133676052093506
    3. '
' → logprob: -6.383676052093506
    4. '#' → logprob: -7.008676052093506
    5. 'd' → logprob: -7.133676052093506
    6. ' def' → logprob: -7.758676052093506
    7. '\' → logprob: -7.758676052093506
    8. 'n' → logprob: -7.758676052093506
    9. '\n' → logprob: -8.258675575256348
    10. '[' → logprob: -8.383675575256348

Token 53: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21891485154628754
    2. ' max' → logprob: -2.593914747238159
    3. ' min' → logprob: -2.843914747238159
    4. ' solve' → logprob: -3.968914747238159
    5. 'main' → logprob: -4.968914985656738
    6. ' calculate' → logprob: -5.218914985656738
    7. ' find' → logprob: -5.593914985656738
    8. ' abs' → logprob: -5.843914985656738
    9. ' process' → logprob: -5.968914985656738
    10. ' is' → logprob: -5.968914985656738

Token 54: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11079221218824387
    2. '_' → logprob: -3.7357921600341797
    3. '1' → logprob: -3.7357921600341797
    4. '(j' → logprob: -4.36079216003418
    5. '(i' → logprob: -4.98579216003418
    6. '(x' → logprob: -4.98579216003418
    7. '(_' → logprob: -5.48579216003418
    8. '(a' → logprob: -5.48579216003418
    9. '_sum' → logprob: -5.86079216003418
    10. '(n' → logprob: -6.23579216003418

Token 55: '(X' (ID: 17061)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.18119807541370392
    2. '(' → logprob: -2.0561981201171875
    3. '(x' → logprob: -4.1811981201171875
    4. '(i' → logprob: -5.0561981201171875
    5. '(a' → logprob: -5.3061981201171875
    6. '(s' → logprob: -5.4311981201171875
    7. '(n' → logprob: -5.4311981201171875
    8. '(k' → logprob: -7.4311981201171875
    9. '(p' → logprob: -8.431198120117188
    10. '(t' → logprob: -8.931198120117188

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07955937087535858
    2. '):' → logprob: -2.704559326171875
    3. '[' → logprob: -5.329559326171875
    4. '[i' → logprob: -6.704559326171875
    5. ',j' → logprob: -7.079559326171875
    6. '[j' → logprob: -7.454559326171875
    7. ' ,' → logprob: -7.704559326171875
    8. ',i' → logprob: -8.204559326171875
    9. ')' → logprob: -8.329559326171875
    10. ',n' → logprob: -8.579559326171875

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6915503740310669
    2. 'Y' → logprob: -2.0665502548217773
    3. 'j' → logprob: -2.6915502548217773
    4. ' i' → logprob: -2.6915502548217773
    5. 'n' → logprob: -2.8165502548217773
    6. 'N' → logprob: -3.6915502548217773
    7. 'x' → logprob: -3.9415502548217773
    8. ' Y' → logprob: -4.066550254821777
    9. 'A' → logprob: -4.316550254821777
    10. 'I' → logprob: -4.566550254821777

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007916655391454697
    2. ',' → logprob: -5.007916450500488
    3. ' ):' → logprob: -7.632916450500488
    4. ')' → logprob: -7.757916450500488
    5. '):
' → logprob: -8.382916450500488
    6. '   ' → logprob: -11.507916450500488
    7. ' ,' → logprob: -11.507916450500488
    8. ':' → logprob: -12.257916450500488
    9. ']:' → logprob: -12.257916450500488
    10. '[' → logprob: -12.257916450500488

Token 59: '   ' (ID: 271)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.773455798625946
    2. '   ' → logprob: -1.2734558582305908
    3. 'abs' → logprob: -1.7734558582305908
    4. 'return' → logprob: -3.273455858230591
    5. ' X' → logprob: -4.148455619812012
    6. ' abs' → logprob: -4.398455619812012
    7. 'sum' → logprob: -5.148455619812012
    8. ' return' → logprob: -5.148455619812012
    9. '=' → logprob: -5.898455619812012
    10. 'max' → logprob: -6.523455619812012

Token 60: ' return' (ID: 622)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3182447850704193
    2. 'abs' → logprob: -1.9432448148727417
    3. 'return' (adapté à ' return') → logprob: -2.693244695663452
    4. 'sum' → logprob: -3.818244695663452
    5. 'min' → logprob: -4.443244934082031
    6. '   ' → logprob: -4.568244934082031
    7. 'max' → logprob: -4.693244934082031
    8. ' X' → logprob: -6.318244934082031
    9. '(X' → logprob: -6.568244934082031
    10. 'for' → logprob: -6.943244934082031

Token 61: ' abs' (ID: 8443)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.863675057888031
    2. 'abs' → logprob: -0.863675057888031
    3. 'min' → logprob: -2.488675117492676
    4. ' X' → logprob: -3.738675117492676
    5. ' abs' → logprob: -4.363675117492676
    6. 'max' → logprob: -4.363675117492676
    7. 'sum' → logprob: -4.988675117492676
    8. '(X' → logprob: -4.988675117492676
    9. ' min' → logprob: -5.863675117492676
    10. '(abs' → logprob: -6.238675117492676

Token 62: '1' (ID: 16)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.25451090931892395
    2. '1' → logprob: -1.5045108795166016
    3. '(' → logprob: -6.129510879516602
    4. '(x' → logprob: -7.879510879516602
    5. 'X' → logprob: -12.129510879516602
    6. ' (' → logprob: -12.504510879516602
    7. '(s' → logprob: -13.129510879516602
    8. '(i' → logprob: -13.379510879516602
    9. '(abs' → logprob: -13.379510879516602
    10. '(
' → logprob: -13.629510879516602

Token 63: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0036067210603505373
    2. '(' → logprob: -5.628606796264648
    3. '(x' → logprob: -13.253606796264648
    4. '(
' → logprob: -13.378606796264648
    5. '((' → logprob: -13.378606796264648
    6. '(i' → logprob: -14.753606796264648
    7. 'X' → logprob: -15.003606796264648
    8. ' (' → logprob: -15.128606796264648
    9. '(s' → logprob: -15.753606796264648
    10. '(

' → logprob: -15.878606796264648

Token 64: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004511531442403793
    2. '[' → logprob: -5.75451135635376
    3. ',' → logprob: -7.12951135635376
    4. ',i' → logprob: -8.129511833190918
    5. ' [' → logprob: -9.254511833190918
    6. '[
' → logprob: -10.129511833190918
    7. ' ' → logprob: -10.379511833190918
    8. ' ,' → logprob: -11.254511833190918
    9. '   ' → logprob: -11.379511833190918
    10. '(i' → logprob: -11.879511833190918

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1270887404680252
    2. 'i' → logprob: -2.127088785171509
    3. ' ' → logprob: -9.87708854675293
    4. '[i' → logprob: -10.25208854675293
    5. '   ' → logprob: -10.25208854675293
    6. '	i' → logprob: -11.62708854675293
    7. '    ' → logprob: -11.75208854675293
    8. ')' → logprob: -12.50208854675293
    9. '[' → logprob: -12.87708854675293
    10. '1' → logprob: -13.00208854675293

Token 66: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017991192638874054
    2. '[i' → logprob: -4.267991065979004
    3. '[' → logprob: -6.517991065979004
    4. ')+' → logprob: -6.892991065979004
    5. ' )' → logprob: -7.517991065979004
    6. ')**' → logprob: -8.392991065979004
    7. '-' → logprob: -8.767991065979004
    8. ')*' → logprob: -9.392991065979004
    9. ' ' → logprob: -9.642991065979004
    10. '   ' → logprob: -9.767991065979004

Token 67: 'def' (ID: 1314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0656235218048096
    2. 'def' → logprob: -1.4406235218048096
    3. '[' → logprob: -1.8156235218048096
    4. '+' → logprob: -2.8156235218048096
    5. ')' → logprob: -3.0656235218048096
    6. ' +' → logprob: -3.4406235218048096
    7. ' def' → logprob: -3.8156235218048096
    8. ' ' → logprob: -3.9406235218048096
    9. '(' → logprob: -3.9406235218048096
    10. '-' → logprob: -4.1906232833862305

Token 68: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.06174099072813988
    2. 'calc' → logprob: -3.0617408752441406
    3. ' min' → logprob: -4.686740875244141
    4. ' main' → logprob: -6.936740875244141
    5. ' max' → logprob: -7.311740875244141
    6. 'min' → logprob: -7.436740875244141
    7. ' def' → logprob: -8.06174087524414
    8. ' calculate' → logprob: -8.68674087524414
    9. ' abs' → logprob: -9.18674087524414
    10. ' read' → logprob: -9.49924087524414

Token 69: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08968579769134521
    2. '(X' → logprob: -3.0896859169006348
    3. '2' → logprob: -3.3396859169006348
    4. '(' → logprob: -5.714685916900635
    5. '0' → logprob: -7.589685916900635
    6. '_' → logprob: -7.839685916900635
    7. 'def' → logprob: -9.214685440063477
    8. '(x' → logprob: -9.464685440063477
    9. 'X' → logprob: -10.402185440063477
    10. ' ' → logprob: -10.464685440063477

Token 70: '(j' (ID: 4997)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.007693932857364416
    2. '(' → logprob: -5.507693767547607
    3. '(x' → logprob: -7.257693767547607
    4. ' (' → logprob: -7.757693767547607
    5. '(Y' → logprob: -7.757693767547607
    6. '(A' → logprob: -7.882693767547607
    7. '(i' → logprob: -8.132694244384766
    8. '(j' → logprob: -8.382694244384766
    9. '(N' → logprob: -9.007694244384766
    10. '(M' → logprob: -9.007694244384766

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002563172485679388
    2. ' ,' → logprob: -6.252562999725342
    3. ',i' → logprob: -8.0025634765625
    4. ',j' → logprob: -9.2525634765625
    5. '):' → logprob: -9.7525634765625
    6. '   ' → logprob: -10.0025634765625
    7. ')' → logprob: -10.6275634765625
    8. '1' → logprob: -11.6275634765625
    9. ' ' → logprob: -11.6275634765625
    10. '  ' → logprob: -11.9400634765625

Token 72: ' Y' (ID: 865)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28655576705932617
    2. ' i' → logprob: -1.4115557670593262
    3. 'j' → logprob: -6.036555767059326
    4. ' j' → logprob: -7.161555767059326
    5. ',' → logprob: -7.786555767059326
    6. ' ' → logprob: -7.911555767059326
    7. 'X' → logprob: -8.036556243896484
    8. ')' → logprob: -8.286556243896484
    9. '   ' → logprob: -9.036556243896484
    10. ',i' → logprob: -9.161556243896484

Token 73: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013884804211556911
    2. '):' → logprob: -4.513885021209717
    3. '[i' → logprob: -6.638885021209717
    4. ',i' → logprob: -8.138884544372559
    5. '[' → logprob: -8.388884544372559
    6. '):
' → logprob: -8.638884544372559
    7. 'j' → logprob: -8.763884544372559
    8. '[j' → logprob: -8.888884544372559
    9. ')' → logprob: -8.888884544372559
    10. ' ,' → logprob: -9.263884544372559

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.071572184562683
    2. ' return' → logprob: -1.196572184562683
    3. ' abs' → logprob: -1.571572184562683
    4. 'abs' → logprob: -2.3215723037719727
    5. 'return' → logprob: -3.5715723037719727
    6. ' ' → logprob: -5.946572303771973
    7. ' j' → logprob: -5.946572303771973
    8. ' =' → logprob: -6.446572303771973
    9. '    ' → logprob: -6.571572303771973
    10. 'j' → logprob: -6.696572303771973

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6280194520950317
    2. ' abs' → logprob: -1.8780194520950317
    3. 'abs' → logprob: -1.8780194520950317
    4. 'return' (adapté à ' return') → logprob: -2.253019332885742
    5. ' min' → logprob: -3.753019332885742
    6. ' j' → logprob: -4.878019332885742
    7. 'min' → logprob: -5.003019332885742
    8. '   ' → logprob: -5.503019332885742
    9. 'Y' → logprob: -5.628019332885742
    10. 'j' → logprob: -5.753019332885742

Token 76: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.1823832988739014
    2. ' abs' → logprob: -1.5573832988739014
    3. 'min' → logprob: -1.6823832988739014
    4. ' min' → logprob: -2.0573832988739014
    5. ' j' → logprob: -3.3073832988739014
    6. ' Y' → logprob: -3.4323832988739014
    7. 'j' → logprob: -3.8073832988739014
    8. 'Y' → logprob: -3.8073832988739014
    9. 'sum' → logprob: -3.9323832988739014
    10. ' sum' → logprob: -4.1823835372924805

Token 77: '1' (ID: 16)
  Prédit: '(Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.30321893095970154
    2. '1' → logprob: -1.678218960762024
    3. '(' → logprob: -2.6782188415527344
    4. '(j' → logprob: -5.178218841552734
    5. '(y' → logprob: -7.803218841552734
    6. 'Y' → logprob: -10.428218841552734
    7. '(-' → logprob: -10.803218841552734
    8. '((' → logprob: -11.428218841552734
    9. '(X' → logprob: -11.553218841552734
    10. '(
' → logprob: -11.553218841552734

Token 78: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.3221715986728668
    2. '(Y' → logprob: -1.5721715688705444
    3. '(' → logprob: -2.697171688079834
    4. '(y' → logprob: -8.197171211242676
    5. '(J' → logprob: -9.447171211242676
    6. '(s' → logprob: -10.697171211242676
    7. '((' → logprob: -10.947171211242676
    8. ' (' → logprob: -11.322171211242676
    9. '(X' → logprob: -11.947171211242676
    10. 'Y' → logprob: -12.447171211242676

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003814925905317068
    2. ',Y' → logprob: -5.753814697265625
    3. ' ,' → logprob: -7.878814697265625
    4. 'Y' → logprob: -8.628814697265625
    5. ')' → logprob: -10.503814697265625
    6. ',y' → logprob: -10.753814697265625
    7. ' Y' → logprob: -12.378814697265625
    8. '-' → logprob: -12.503814697265625
    9. '0' → logprob: -12.753814697265625
    10. '(' → logprob: -12.878814697265625

Token 80: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.012548031285405159
    2. ' Y' → logprob: -4.387547969818115
    3. '	Y' → logprob: -11.137548446655273
    4. '   ' → logprob: -11.512548446655273
    5. ' ' → logprob: -12.012548446655273
    6. '0' → logprob: -12.512548446655273
    7. '  ' → logprob: -13.137548446655273
    8. '    ' → logprob: -14.262548446655273
    9. '1' → logprob: -15.262548446655273
    10. 'len' → logprob: -15.637548446655273

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001649220648687333
    2. ' )' → logprob: -8.750164985656738
    3. '[' → logprob: -12.875164985656738
    4. '))' → logprob: -13.500164985656738
    5. '   ' → logprob: -14.625164985656738
    6. ' ' → logprob: -14.875164985656738
    7. ')#' → logprob: -15.500164985656738
    8. ')))' → logprob: -15.625164985656738
    9. ')return' → logprob: -15.750164985656738
    10. ')}' → logprob: -15.750164985656738

Token 82: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133813440799713
    2. 'def' → logprob: -1.563381314277649
    3. '[' → logprob: -4.063381195068359
    4. ')' → logprob: -4.313381195068359
    5. '(
' → logprob: -4.813381195068359
    6. '<|end|>' → logprob: -5.438381195068359
    7. '(i' → logprob: -5.563381195068359
    8. '+' → logprob: -5.938381195068359
    9. ' def' → logprob: -6.938381195068359
    10. '#' → logprob: -7.063381195068359

Token 83: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5796552896499634
    2. ' main' → logprob: -1.4546552896499634
    3. ' min' → logprob: -1.8296552896499634
    4. ' max' → logprob: -4.079655170440674
    5. ' calculate' → logprob: -4.329655170440674
    6. ' solve' → logprob: -5.579655170440674
    7. ' find' → logprob: -6.204655170440674
    8. ' def' → logprob: -6.204655170440674
    9. 'calc' → logprob: -7.204655170440674
    10. ' ' → logprob: -7.454655170440674

Token 84: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13575030863285065
    2. '1' → logprob: -2.7607502937316895
    3. '2' → logprob: -3.1357502937316895
    4. '(' → logprob: -4.0107502937316895
    5. '(j' → logprob: -6.3857502937316895
    6. '(i' → logprob: -9.510750770568848
    7. 'def' → logprob: -9.635750770568848
    8. '4' → logprob: -9.760750770568848
    9. ' (' → logprob: -9.885750770568848
    10. '(x' → logprob: -10.635750770568848

Token 85: '(Y' (ID: 44341)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.09395219385623932
    2. '(X' → logprob: -3.093952178955078
    3. '(i' → logprob: -3.843952178955078
    4. '(' → logprob: -4.468952178955078
    5. '(x' → logprob: -5.468952178955078
    6. '(J' → logprob: -6.468952178955078
    7. '(Y' → logprob: -6.843952178955078
    8. '(a' → logprob: -7.093952178955078
    9. '(k' → logprob: -7.343952178955078
    10. '(s' → logprob: -7.343952178955078

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004116750322282314
    2. ' ,' → logprob: -5.754116535186768
    3. '):' → logprob: -7.504116535186768
    4. ',j' → logprob: -8.754117012023926
    5. ',i' → logprob: -9.629117012023926
    6. ')' → logprob: -10.004117012023926
    7. 'j' → logprob: -11.004117012023926
    8. '):
' → logprob: -11.004117012023926
    9. '[' → logprob: -11.566617012023926
    10. '   ' → logprob: -11.629117012023926

Token 87: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0134086608886719
    2. ' i' → logprob: -1.5134086608886719
    3. 'j' → logprob: -1.6384086608886719
    4. 'X' → logprob: -2.388408660888672
    5. ' j' → logprob: -2.513408660888672
    6. ' X' → logprob: -3.263408660888672
    7. ')' → logprob: -5.638408660888672
    8. ' ' → logprob: -6.013408660888672
    9. 'Y' → logprob: -6.513408660888672
    10. ' Y' → logprob: -7.263408660888672

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006051685661077499
    2. '):
' → logprob: -5.131051540374756
    3. ')' → logprob: -9.506052017211914
    4. ':' → logprob: -10.756052017211914
    5. ',' → logprob: -11.006052017211914
    6. '   ' → logprob: -12.131052017211914
    7. '):
' → logprob: -12.756052017211914
    8. ' ):' → logprob: -13.506052017211914
    9. '):

' → logprob: -14.756052017211914
    10. ' ' → logprob: -15.506052017211914

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011129648424685001
    2. ' return' → logprob: -4.761129856109619
    3. 'return' → logprob: -7.011129856109619
    4. 'abs' → logprob: -8.011129379272461
    5. '    ' → logprob: -8.136129379272461
    6. ')' → logprob: -8.136129379272461
    7. ' abs' → logprob: -8.386129379272461
    8. ' ' → logprob: -9.636129379272461
    9. '  ' → logprob: -9.636129379272461
    10. ' =' → logprob: -9.761129379272461

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20259906351566315
    2. ' abs' → logprob: -1.952599048614502
    3. 'return' (adapté à ' return') → logprob: -3.702599048614502
    4. 'abs' → logprob: -4.327599048614502
    5. ' min' → logprob: -6.327599048614502
    6. '   ' → logprob: -7.327599048614502
    7. ' def' → logprob: -8.45259952545166
    8. ' Y' → logprob: -8.45259952545166
    9. ' max' → logprob: -8.82759952545166
    10. ' ' → logprob: -9.32759952545166

Token 91: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6578982472419739
    2. 'abs' → logprob: -0.7828982472419739
    3. ' Y' → logprob: -4.782898426055908
    4. ' min' → logprob: -5.032898426055908
    5. 'min' → logprob: -5.407898426055908
    6. 'Y' → logprob: -6.157898426055908
    7. ' i' → logprob: -7.282898426055908
    8. '1' → logprob: -7.532898426055908
    9. ' max' → logprob: -7.657898426055908
    10. 'max' → logprob: -7.657898426055908

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011798698687925935
    2. '(Y' → logprob: -6.7511796951293945
    3. '(' → logprob: -11.751179695129395
    4. '(y' → logprob: -14.126179695129395
    5. '(i' → logprob: -15.001179695129395
    6. ' ' → logprob: -15.876179695129395
    7. 'i' → logprob: -16.00118064880371
    8. ' (' → logprob: -16.00118064880371
    9. 'abs' → logprob: -16.25118064880371
    10. '-' → logprob: -17.00118064880371

Token 93: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.006719759665429592
    2. '(' → logprob: -5.006719589233398
    3. '(y' → logprob: -13.006719589233398
    4. '(i' → logprob: -13.881719589233398
    5. '((' → logprob: -14.881719589233398
    6. '(User' → logprob: -15.131719589233398
    7. '1' → logprob: -15.756719589233398
    8. ' (' → logprob: -16.6317195892334
    9. '<|end|>' → logprob: -16.6317195892334
    10. '(X' → logprob: -16.7567195892334

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028851060778833926
    2. ',i' → logprob: -8.500288963317871
    3. ' ,' → logprob: -9.500288963317871
    4. ' i' → logprob: -11.625288963317871
    5. 'i' → logprob: -14.500288963317871
    6. ' ' → logprob: -14.750288963317871
    7. ')' → logprob: -15.875288963317871
    8. ',
' → logprob: -17.000288009643555
    9. '1' → logprob: -17.500288009643555
    10. '   ' → logprob: -17.875288009643555

Token 95: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038043782114982605
    2. ' i' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.413043975830078
    4. '1' → logprob: -14.663043975830078
    5. '	i' → logprob: -15.663043975830078
    6. '   ' → logprob: -15.663043975830078
    7. ')' → logprob: -16.788043975830078
    8. '  ' → logprob: -17.288043975830078
    9. ')i' → logprob: -17.413043975830078
    10. '0' → logprob: -17.913043975830078

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.875015258789062
    4. '))' → logprob: -15.125015258789062
    5. ')return' → logprob: -15.375015258789062
    6. '   ' → logprob: -15.625015258789062
    7. 'def' → logprob: -15.875015258789062
    8. '+' → logprob: -16.000015258789062
    9. ')

' → logprob: -16.500015258789062
    10. ')#' → logprob: -16.875015258789062

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004809483885765076
    2. '<|end|>' → logprob: -6.504809379577637
    3. '\' → logprob: -7.254809379577637
    4. '
' → logprob: -7.754809379577637
    5. 'd' → logprob: -7.879809379577637
    6. 'n' → logprob: -7.879809379577637
    7. '#' → logprob: -8.129809379577637
    8. '\n' → logprob: -8.629809379577637
    9. 'for' → logprob: -9.129809379577637
    10. '  
' → logprob: -9.254809379577637

Token 98: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2197270542383194
    2. ' min' → logprob: -2.719727039337158
    3. ' calc' → logprob: -2.719727039337158
    4. ' max' → logprob: -3.719727039337158
    5. 'main' → logprob: -4.469727039337158
    6. ' calculate' → logprob: -5.094727039337158
    7. ' solve' → logprob: -5.094727039337158
    8. ' process' → logprob: -5.594727039337158
    9. 'min' → logprob: -5.594727039337158
    10. 'calc' → logprob: -6.594727039337158

Token 99: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03433601185679436
    2. '1' → logprob: -3.6593360900878906
    3. '2' → logprob: -5.659336090087891
    4. '3' → logprob: -6.159336090087891
    5. '(' → logprob: -7.034336090087891
    6. '(X' → logprob: -7.034336090087891
    7. '(i' → logprob: -8.90933609008789
    8. '0' → logprob: -9.15933609008789
    9. '(j' → logprob: -9.78433609008789
    10. '5' → logprob: -9.78433609008789

Token 100: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5086296796798706
    2. '(Y' → logprob: -1.5086296796798706
    3. '(X' → logprob: -1.8836296796798706
    4. '(' → logprob: -4.75862979888916
    5. '(i' → logprob: -5.00862979888916
    6. '(x' → logprob: -5.88362979888916
    7. '(Z' → logprob: -6.75862979888916
    8. '(N' → logprob: -7.25862979888916
    9. '(y' → logprob: -7.25862979888916
    10. '(J' → logprob: -7.38362979888916

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008091482450254261
    2. ' ,' → logprob: -7.750809192657471
    3. ',i' → logprob: -8.000808715820312
    4. '):' → logprob: -11.000808715820312
    5. ',Y' → logprob: -11.250808715820312
    6. ' i' → logprob: -12.750808715820312
    7. '   ' → logprob: -12.875808715820312
    8. ',j' → logprob: -13.750808715820312
    9. ',
' → logprob: -14.000808715820312
    10. '):
' → logprob: -14.000808715820312

Token 102: ' X' (ID: 2127)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31588214635849
    2. ' i' → logprob: -1.8158822059631348
    3. 'X' → logprob: -2.6908822059631348
    4. 'Y' → logprob: -3.8158822059631348
    5. ' X' → logprob: -4.690882205963135
    6. ' Y' → logprob: -5.190882205963135
    7. '0' → logprob: -6.565882205963135
    8. ' ' → logprob: -7.440882205963135
    9. '   ' → logprob: -7.940882205963135
    10. 'j' → logprob: -8.065881729125977

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018811490386724472
    2. '):
' → logprob: -4.2688117027282715
    3. ',' → logprob: -5.3938117027282715
    4. ' ):' → logprob: -9.768811225891113
    5. ')' → logprob: -11.268811225891113
    6. '   ' → logprob: -11.768811225891113
    7. 'def' → logprob: -11.893811225891113
    8. '):
' → logprob: -12.768811225891113
    9. '):

' → logprob: -13.143811225891113
    10. ' ,' → logprob: -14.268811225891113

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045389264822006226
    2. 'return' → logprob: -3.295389175415039
    3. ' return' → logprob: -4.920389175415039
    4. '	return' → logprob: -11.920389175415039
    5. ')' → logprob: -12.045389175415039
    6. '    ' → logprob: -12.670389175415039
    7. '  ' → logprob: -12.670389175415039
    8. ':return' → logprob: -13.545389175415039
    9. '{return' → logprob: -13.670389175415039
    10. ' ' → logprob: -13.670389175415039

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2540373206138611
    2. ' return' → logprob: -1.5040373802185059
    3. '   ' → logprob: -6.504037380218506
    4. 'abs' → logprob: -7.504037380218506
    5. ' abs' → logprob: -9.879036903381348
    6. ' ' → logprob: -13.879036903381348
    7. 'def' → logprob: -14.004036903381348
    8. 'calc' → logprob: -14.129036903381348
    9. '  ' → logprob: -14.254036903381348
    10. '    ' → logprob: -14.379036903381348

Token 106: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.28157249093055725
    2. ' abs' → logprob: -1.4065724611282349
    3. 'calc' → logprob: -8.406572341918945
    4. ' calc' → logprob: -9.531572341918945
    5. '1' → logprob: -10.656572341918945
    6. ' min' → logprob: -10.781572341918945
    7. 'min' → logprob: -10.906572341918945
    8. '   ' → logprob: -11.281572341918945
    9. ' ' → logprob: -11.656572341918945
    10. '(abs' → logprob: -11.906572341918945

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010533124441280961
    2. '(X' → logprob: -9.750104904174805
    3. '(j' → logprob: -10.750104904174805
    4. '(' → logprob: -11.125104904174805
    5. '(x' → logprob: -12.000104904174805
    6. 'abs' → logprob: -13.000104904174805
    7. '4' → logprob: -14.375104904174805
    8. '(abs' → logprob: -14.625104904174805
    9. 'X' → logprob: -15.000104904174805
    10. ' ' → logprob: -15.375104904174805

Token 108: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0024769625160843134
    2. '(' → logprob: -6.002477169036865
    3. '(X' → logprob: -14.502476692199707
    4. '(
' → logprob: -14.752476692199707
    5. '(J' → logprob: -15.377476692199707
    6. ' (' → logprob: -16.627477645874023
    7. '(x' → logprob: -17.127477645874023
    8. 'j' → logprob: -17.252477645874023
    9. '(js' → logprob: -18.377477645874023
    10. '(Y' → logprob: -18.627477645874023

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.44706009957008e-05
    2. ' ,' → logprob: -9.87508487701416
    3. ',X' → logprob: -10.62508487701416
    4. ',
' → logprob: -11.87508487701416
    5. 'X' → logprob: -14.12508487701416
    6. ')' → logprob: -15.00008487701416
    7. '(X' → logprob: -16.000083923339844
    8. ' ' → logprob: -16.125083923339844
    9. '(' → logprob: -16.125083923339844
    10. ',

' → logprob: -16.375083923339844

Token 110: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0002613358374219388
    2. ' X' → logprob: -8.250261306762695
    3. ')' → logprob: -18.625261306762695
    4. ' ' → logprob: -19.000261306762695
    5. 'x' → logprob: -19.125261306762695
    6. '(X' → logprob: -19.250261306762695
    7. '   ' → logprob: -19.375261306762695
    8. '(' → logprob: -20.500261306762695
    9. '	X' → logprob: -20.500261306762695
    10. '[' → logprob: -21.125261306762695

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.875000953674316
    3. '))' → logprob: -15.375000953674316
    4. ' )' → logprob: -15.875000953674316
    5. ')`' → logprob: -17.000001907348633
    6. ')}' → logprob: -17.125001907348633
    7. ')#' → logprob: -17.500001907348633
    8. ')

' → logprob: -17.625001907348633
    9. ')+' → logprob: -17.625001907348633
    10. 'def' → logprob: -17.625001907348633

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01135325152426958
    2. '<|end|>' → logprob: -4.886353015899658
    3. '#' → logprob: -6.886353015899658
    4. '[' → logprob: -7.886353015899658
    5. '\' → logprob: -7.886353015899658
    6. 'n' → logprob: -8.011353492736816
    7. ')' → logprob: -8.386353492736816
    8. '
' → logprob: -8.636353492736816
    9. '\n' → logprob: -8.886353492736816
    10. 'for' → logprob: -9.136353492736816

Token 113: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029785551130771637
    2. ' solve' → logprob: -4.654785633087158
    3. ' calc' → logprob: -5.029785633087158
    4. ' min' → logprob: -5.654785633087158
    5. ' calculate' → logprob: -5.779785633087158
    6. ' process' → logprob: -6.154785633087158
    7. ' def' → logprob: -6.529785633087158
    8. 'main' → logprob: -7.154785633087158
    9. ' compute' → logprob: -7.654785633087158
    10. ' find' → logprob: -7.904785633087158

Token 114: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04962529242038727
    2. '1' → logprob: -3.2996253967285156
    3. '_' → logprob: -5.299625396728516
    4. '4' → logprob: -5.799625396728516
    5. '(_' → logprob: -7.174625396728516
    6. '_(' → logprob: -7.424625396728516
    7. 'def' → logprob: -7.424625396728516
    8. ' (' → logprob: -7.549625396728516
    9. '(
' → logprob: -8.924625396728516
    10. '   ' → logprob: -9.049625396728516

Token 115: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02805164083838463
    2. '(a' → logprob: -4.028051853179932
    3. '(j' → logprob: -5.403051853179932
    4. '(x' → logprob: -6.778051853179932
    5. '((' → logprob: -7.153051853179932
    6. '(s' → logprob: -7.403051853179932
    7. ' (' → logprob: -7.653051853179932
    8. '(*' → logprob: -7.653051853179932
    9. '(sum' → logprob: -7.778051853179932
    10. '(lst' → logprob: -7.778051853179932

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12188488245010376
    2. '):' → logprob: -2.496884822845459
    3. '[' → logprob: -4.496884822845459
    4. ' ,' → logprob: -4.871884822845459
    5. ')' → logprob: -5.121884822845459
    6. '(' → logprob: -6.246884822845459
    7. 's' → logprob: -6.871884822845459
    8. ',a' → logprob: -7.246884822845459
    9. '   ' → logprob: -7.371884822845459
    10. '(a' → logprob: -7.746884822845459

Token 117: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6326121091842651
    2. 'b' → logprob: -0.7576121091842651
    3. ' ' → logprob: -11.757612228393555
    4. '   ' → logprob: -13.132612228393555
    5. '  ' → logprob: -14.757612228393555
    6. '):
' → logprob: -14.882612228393555
    7. '    ' → logprob: -14.882612228393555
    8. ' ' → logprob: -14.882612228393555
    9. ')b' → logprob: -15.132612228393555
    10. '	b' → logprob: -15.257612228393555

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002517277142032981
    2. '):
' → logprob: -6.002517223358154
    3. ')' → logprob: -10.377517700195312
    4. ' ):' → logprob: -11.752517700195312
    5. ':' → logprob: -14.002517700195312
    6. ',' → logprob: -14.127517700195312
    7. '):
' → logprob: -15.127517700195312
    8. '):

' → logprob: -15.377517700195312
    9. '   ' → logprob: -16.127517700195312
    10. '=' → logprob: -16.627517700195312

Token 119: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3006335198879242
    2. ' a' → logprob: -1.5506335496902466
    3. '   ' → logprob: -3.050633430480957
    4. ' return' → logprob: -8.675633430480957
    5. 'return' → logprob: -10.800633430480957
    6. '    ' → logprob: -12.425633430480957
    7. ' ' → logprob: -12.550633430480957
    8. '  ' → logprob: -12.800633430480957
    9. '	a' → logprob: -12.925633430480957
    10. '(a' → logprob: -13.550633430480957

Token 120: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023768417537212372
    2. ' a' → logprob: -3.773768424987793
    3. ' return' → logprob: -7.898768424987793
    4. 'return' (adapté à ' return') → logprob: -8.898768424987793
    5. '   ' → logprob: -11.148768424987793
    6. ' ' → logprob: -14.898768424987793
    7. '  ' → logprob: -15.648768424987793
    8. '	a' → logprob: -16.648767471313477
    9. '    ' → logprob: -17.023767471313477
    10. ')' → logprob: -18.148767471313477

Token 121: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029751067981123924
    2. ' a' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.15475082397461
    4. ' ' → logprob: -16.02975082397461
    5. '	a' → logprob: -16.40475082397461
    6. '(a' → logprob: -16.90475082397461
    7. '  ' → logprob: -17.02975082397461
    8. 'abs' → logprob: -17.15475082397461
    9. ' ' → logprob: -17.40475082397461
    10. ' abs' → logprob: -17.90475082397461

Token 122: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18791243433952332
    2. ' +' → logprob: -1.8129124641418457
    3. '+b' → logprob: -4.812912464141846
    4. ' ' → logprob: -12.562911987304688
    5. '+
' → logprob: -13.312911987304688
    6. ' b' → logprob: -13.437911987304688
    7. 'b' → logprob: -13.562911987304688
    8. ' ' → logprob: -13.687911987304688
    9. ' +
' → logprob: -15.312911987304688
    10. ' plus' → logprob: -15.812911987304688

Token 123: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.003177642822266
    4. '1' → logprob: -18.753177642822266
    5. '	b' → logprob: -19.253177642822266
    6. '   ' → logprob: -20.253177642822266
    7. ')b' → logprob: -20.878177642822266
    8. '_b' → logprob: -21.003177642822266
    9. ' ' → logprob: -21.628177642822266
    10. '(b' → logprob: -21.628177642822266

Token 124: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013408559374511242
    2. '<|end|>' → logprob: -4.513408660888672
    3. '

' → logprob: -7.513408660888672
    4. '
' → logprob: -7.513408660888672
    5. ' def' → logprob: -8.263408660888672
    6. '*' → logprob: -8.263408660888672
    7. '(' → logprob: -8.388408660888672
    8. '<|end|>' → logprob: -9.013408660888672
    9. '(
' → logprob: -9.638408660888672
    10. '_' → logprob: -9.763408660888672

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010235115041723475
    2. '```' → logprob: -10.125102043151855
    3. '(' → logprob: -10.750102043151855
    4. '\' → logprob: -11.875102043151855
    5. '#' → logprob: -12.250102043151855
    6. '_' → logprob: -12.500102043151855
    7. ' def' → logprob: -12.625102043151855
    8. '*' → logprob: -12.750102043151855
    9. '(
' → logprob: -12.875102043151855
    10. ')' → logprob: -13.250102043151855

Token 126: ' compute' (ID: 23864)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19434760510921478
    2. 'main' → logprob: -2.819347620010376
    3. ' sum' → logprob: -3.069347620010376
    4. 'min' → logprob: -3.819347620010376
    5. 'max' → logprob: -3.819347620010376
    6. ' main' → logprob: -4.319347381591797
    7. 'solve' → logprob: -5.944347381591797
    8. ' max' → logprob: -6.444347381591797
    9. ' min' → logprob: -6.569347381591797
    10. 'calc' → logprob: -6.694347381591797

Token 127: '_d' (ID: 1565)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13840918242931366
    2. '(' → logprob: -2.38840913772583
    3. '(n' → logprob: -4.51340913772583
    4. '(j' → logprob: -4.88840913772583
    5. '(a' → logprob: -5.26340913772583
    6. '(i' → logprob: -5.51340913772583
    7. '_' → logprob: -7.13840913772583
    8. '(x' → logprob: -7.26340913772583
    9. '():
' → logprob: -7.38840913772583
    10. '_result' → logprob: -7.51340913772583

Token 128: 'ists' (ID: 2549)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.017136946320533752
    2. 'ist' → logprob: -4.892137050628662
    3. 'istance' → logprob: -5.267137050628662
    4. 'iff' → logprob: -6.392137050628662
    5. 'P' → logprob: -6.767137050628662
    6. 'ynamic' → logprob: -8.017136573791504
    7. 'is' → logprob: -8.517136573791504
    8. 'ifference' → logprob: -8.892136573791504
    9. 'ps' → logprob: -9.142136573791504
    10. 'elta' → logprob: -9.267136573791504

Token 129: '(j' (ID: 4997)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.27332615852355957
    2. '(N' → logprob: -2.8983261585235596
    3. '():' → logprob: -3.0233261585235596
    4. '(' → logprob: -3.1483261585235596
    5. '(j' → logprob: -3.6483261585235596
    6. '(X' → logprob: -4.0233259201049805
    7. '(a' → logprob: -4.3983259201049805
    8. '(i' → logprob: -4.6483259201049805
    9. '(A' → logprob: -4.8983259201049805
    10. '(x' → logprob: -5.3983259201049805

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002843983471393585
    2. ' ,' → logprob: -6.002843856811523
    3. ',i' → logprob: -8.002843856811523
    4. ',n' → logprob: -11.627843856811523
    5. ',j' → logprob: -12.127843856811523
    6. '):' → logprob: -12.877843856811523
    7. ',X' → logprob: -13.002843856811523
    8. ',
' → logprob: -13.502843856811523
    9. ',k' → logprob: -13.627843856811523
    10. '   ' → logprob: -13.877843856811523

Token 131: ' i' (ID: 575)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3049235939979553
    2. ' X' → logprob: -1.5549235343933105
    3. 'n' → logprob: -4.0549235343933105
    4. 'i' → logprob: -4.1799235343933105
    5. ' n' → logprob: -4.8049235343933105
    6. ' i' → logprob: -4.9299235343933105
    7. 'N' → logprob: -7.0549235343933105
    8. 'Y' → logprob: -7.3049235343933105
    9. 'j' → logprob: -7.6799235343933105
    10. ' Y' → logprob: -8.554924011230469

Token 132: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09288834780454636
    2. ',' → logprob: -2.467888355255127
    3. '):
' → logprob: -5.592888355255127
    4. ' ):' → logprob: -9.342887878417969
    5. ')' → logprob: -9.467887878417969
    6. '   ' → logprob: -10.967887878417969
    7. ' ,' → logprob: -11.092887878417969
    8. ',j' → logprob: -12.217887878417969
    9. ':' → logprob: -12.342887878417969
    10. '):

' → logprob: -13.967887878417969

Token 133: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0431818813085556
    2. ' X' → logprob: -3.293181896209717
    3. 'n' → logprob: -5.793181896209717
    4. 'Y' → logprob: -6.918181896209717
    5. ' n' → logprob: -8.043181419372559
    6. 'N' → logprob: -8.168181419372559
    7. ' ' → logprob: -9.543181419372559
    8. 'x' → logprob: -9.668181419372559
    9. '   ' → logprob: -9.793181419372559
    10. 'j' → logprob: -9.793181419372559

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026853985618799925
    2. '):' → logprob: -6.002685546875
    3. ',Y' → logprob: -9.127685546875
    4. ' ,' → logprob: -9.627685546875
    5. ',
' → logprob: -11.627685546875
    6. '):
' → logprob: -12.127685546875
    7. ')' → logprob: -12.252685546875
    8. ',y' → logprob: -12.627685546875
    9. 'Y' → logprob: -12.877685546875
    10. '_,' → logprob: -13.252685546875

Token 135: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.06211131438612938
    2. ' Y' → logprob: -2.8121113777160645
    3. ' ' → logprob: -10.312110900878906
    4. 'n' → logprob: -10.437110900878906
    5. '   ' → logprob: -10.687110900878906
    6. ')' → logprob: -11.062110900878906
    7. 'j' → logprob: -11.437110900878906
    8. '  ' → logprob: -11.937110900878906
    9. 'N' → logprob: -12.187110900878906
    10. '	Y' → logprob: -12.437110900878906

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031100958585739136
    2. ',' → logprob: -5.878109931945801
    3. '):
' → logprob: -8.8781099319458
    4. ' ):' → logprob: -9.0031099319458
    5. ')' → logprob: -10.3781099319458
    6. ':' → logprob: -12.0031099319458
    7. ' ,' → logprob: -13.5031099319458
    8. '   ' → logprob: -13.6281099319458
    9. ' ' → logprob: -14.8781099319458
    10. '):
' → logprob: -15.0031099319458

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007722244481556118
    2. 'd' → logprob: -7.625771999359131
    3. ' d' → logprob: -9.750772476196289
    4. 'return' → logprob: -9.750772476196289
    5. 'dist' → logprob: -9.750772476196289
    6. ' return' → logprob: -10.125772476196289
    7. '
' → logprob: -11.125772476196289
    8. 'result' → logprob: -11.500772476196289
    9. ' distances' → logprob: -11.625772476196289
    10. '[' → logprob: -11.875772476196289

Token 138: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0698292255401611
    2. 'sum' → logprob: -1.1948292255401611
    3. 'dist' → logprob: -1.9448292255401611
    4. 'd' → logprob: -2.694829225540161
    5. '   ' → logprob: -2.819829225540161
    6. 'abs' → logprob: -3.319829225540161
    7. 'min' → logprob: -3.944829225540161
    8. 'a' (adapté à ' a') → logprob: -4.569828987121582
    9. 'res' → logprob: -5.444828987121582
    10. 'result' → logprob: -5.944828987121582

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10498391836881638
    2. '1' → logprob: -3.1049838066101074
    3. '=' → logprob: -3.1049838066101074
    4. 'b' → logprob: -4.729983806610107
    5. '   ' → logprob: -8.354984283447266
    6. ' ' → logprob: -8.479984283447266
    7. '_' → logprob: -8.604984283447266
    8. '_b' → logprob: -8.604984283447266
    9. '=b' → logprob: -9.229984283447266
    10. '  ' → logprob: -10.104984283447266

Token 140: ' min' (ID: 1349)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.14206823706626892
    2. 'abs' → logprob: -2.7670681476593018
    3. 'min' → logprob: -3.0170681476593018
    4. 'sum' → logprob: -4.267068386077881
    5. ' calc' → logprob: -5.267068386077881
    6. ' abs' → logprob: -7.267068386077881
    7. '   ' → logprob: -8.517067909240723
    8. ' min' → logprob: -8.767067909240723
    9. ' sum' → logprob: -8.892067909240723
    10. 'max' → logprob: -9.392067909240723

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009238175116479397
    2. '(j' → logprob: -4.884238243103027
    3. '(' → logprob: -6.634238243103027
    4. '(i' → logprob: -9.634238243103027
    5. '(a' → logprob: -9.759238243103027
    6. '(abs' → logprob: -9.759238243103027
    7. '(min' → logprob: -10.009238243103027
    8. 's' → logprob: -10.759238243103027
    9. 'abs' → logprob: -11.509238243103027
    10. '(calc' → logprob: -11.759238243103027

Token 142: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.02975928969681263
    2. '(' → logprob: -3.529759407043457
    3. ' (' → logprob: -12.529759407043457
    4. '(
' → logprob: -12.529759407043457
    5. '(i' → logprob: -13.779759407043457
    6. 'j' → logprob: -16.02975845336914
    7. '((' → logprob: -16.40475845336914
    8. '(s' → logprob: -17.15475845336914
    9. '(y' → logprob: -17.40475845336914
    10. '(

' → logprob: -17.40475845336914

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008545245509594679
    2. ',i' → logprob: -7.2508544921875
    3. ' ,' → logprob: -8.8758544921875
    4. '   ' → logprob: -13.0008544921875
    5. ',j' → logprob: -13.8758544921875
    6. ',
' → logprob: -14.2508544921875
    7. '1' → logprob: -15.5008544921875
    8. 'i' → logprob: -15.7508544921875
    9. '(i' → logprob: -16.0008544921875
    10. ' i' → logprob: -16.0008544921875

Token 144: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25193649530410767
    2. ' i' → logprob: -1.501936435699463
    3. '   ' → logprob: -12.376936912536621
    4. ' ' → logprob: -13.501936912536621
    5. '    ' → logprob: -14.251936912536621
    6. '	i' → logprob: -14.626936912536621
    7. '  ' → logprob: -15.626936912536621
    8. '1' → logprob: -16.126935958862305
    9. ')' → logprob: -16.626935958862305
    10. ' ' → logprob: -17.001935958862305

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0380789078772068
    2. ')
' → logprob: -3.288079023361206
    3. '   ' → logprob: -11.288079261779785
    4. ')
' → logprob: -11.538079261779785
    5. ' )' → logprob: -12.288079261779785
    6. ')

' → logprob: -12.413079261779785
    7. ',' → logprob: -12.413079261779785
    8. ' )
' → logprob: -14.413079261779785
    9. ' ' → logprob: -14.913079261779785
    10. '),' → logprob: -15.163079261779785

Token 146: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5245194435119629
    2. '   ' → logprob: -1.524519443511963
    3. 'b' → logprob: -1.774519443511963
    4. ' b' → logprob: -4.899519443511963
    5. ')' → logprob: -5.899519443511963
    6. '    
' → logprob: -6.274519443511963
    7. '
' → logprob: -6.649519443511963
    8. ' ' → logprob: -6.649519443511963
    9. ')
' → logprob: -6.774519443511963
    10. '	b' → logprob: -7.024519443511963

Token 147: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.02705906145274639
    2. ' b' → logprob: -3.6520590782165527
    3. 'c' → logprob: -8.152058601379395
    4. '   ' → logprob: -8.277058601379395
    5. 'd' → logprob: -9.902058601379395
    6. 'a' → logprob: -10.402058601379395
    7. ' c' → logprob: -10.527058601379395
    8. 'x' → logprob: -10.902058601379395
    9. ' ' → logprob: -11.152058601379395
    10. 'tmp' → logprob: -11.152058601379395

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07897945493459702
    2. '=' → logprob: -2.5789794921875
    3. ',' → logprob: -9.4539794921875
    4. ')' → logprob: -11.9539794921875
    5. ' =
' → logprob: -13.7039794921875
    6. ' ' → logprob: -13.9539794921875
    7. '   ' → logprob: -14.3289794921875
    8. ' ,' → logprob: -14.5789794921875
    9. '  ' → logprob: -15.0789794921875
    10. 'def' → logprob: -15.2039794921875

Token 149: ' sum' (ID: 4215)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.5212116241455078
    2. 'sum' → logprob: -1.2712116241455078
    3. 'abs' → logprob: -2.146211624145508
    4. 'min' → logprob: -5.521211624145508
    5. 'max' → logprob: -6.396211624145508
    6. ' calc' → logprob: -6.646211624145508
    7. ' sum' → logprob: -6.896211624145508
    8. ' abs' → logprob: -8.021211624145508
    9. '   ' → logprob: -8.896211624145508
    10. '  ' → logprob: -10.021211624145508

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020795092859771103
    2. '(a' → logprob: -8.500207901000977
    3. '(' → logprob: -13.625207901000977
    4. '_' → logprob: -14.125207901000977
    5. '```' → logprob: -14.250207901000977
    6. ' ' → logprob: -14.875207901000977
    7. ' (' → logprob: -15.500207901000977
    8. 'a' → logprob: -15.500207901000977
    9. '_(' → logprob: -15.750207901000977
    10. '(sum' → logprob: -16.125207901000977

Token 151: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.1121266707777977
    2. '(a' → logprob: -2.612126588821411
    3. '(com' → logprob: -3.737126588821411
    4. '(min' → logprob: -5.73712682723999
    5. '(abs' → logprob: -6.11212682723999
    6. '(' → logprob: -6.48712682723999
    7. '(c' → logprob: -6.98712682723999
    8. 'calc' → logprob: -8.487126350402832
    9. '(sum' → logprob: -8.862126350402832
    10. 'a' → logprob: -9.112126350402832

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000429596402682364
    2. '4' → logprob: -8.375429153442383
    3. '2' → logprob: -8.875429153442383
    4. '3' → logprob: -9.750429153442383
    5. 'a' → logprob: -15.000429153442383
    6. '(a' → logprob: -15.750429153442383
    7. '
' → logprob: -16.250429153442383
    8. '```' → logprob: -16.687929153442383
    9. '_' → logprob: -17.250429153442383
    10. '(' → logprob: -17.562929153442383

Token 153: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.023913919925689697
    2. '(a' → logprob: -4.398913860321045
    3. '(calc' → logprob: -4.773913860321045
    4. '(' → logprob: -6.898913860321045
    5. '(j' → logprob: -6.898913860321045
    6. '(c' → logprob: -7.773913860321045
    7. 'X' → logprob: -8.773914337158203
    8. '(A' → logprob: -9.398914337158203
    9. 'a' → logprob: -10.273914337158203
    10. '(x' → logprob: -10.398914337158203

Token 154: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.15804840624332428
    2. '(a' → logprob: -2.533048391342163
    3. '(' → logprob: -3.033048391342163
    4. ',' → logprob: -4.283048629760742
    5. '(j' → logprob: -5.533048629760742
    6. 'a' → logprob: -8.283048629760742
    7. '(b' → logprob: -8.533048629760742
    8. ' (' → logprob: -9.783048629760742
    9. '(
' → logprob: -10.033048629760742
    10. ')' → logprob: -10.283048629760742

Token 155: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014251535758376122
    2. ' i' → logprob: -4.264251708984375
    3. '   ' → logprob: -9.639251708984375
    4. ' ' → logprob: -11.639251708984375
    5. '(i' → logprob: -12.764251708984375
    6. '  ' → logprob: -13.014251708984375
    7. 'j' → logprob: -13.139251708984375
    8. '    ' → logprob: -13.139251708984375
    9. ')' → logprob: -13.389251708984375
    10. '	i' → logprob: -13.889251708984375

Token 156: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.046238359063863754
    2. ',' → logprob: -3.421238422393799
    3. ')' → logprob: -4.671238422393799
    4. '   ' → logprob: -6.921238422393799
    5. ' ' → logprob: -7.421238422393799
    6. '(i' → logprob: -7.546238422393799
    7. '(' → logprob: -8.42123794555664
    8. ' ),' → logprob: -8.54623794555664
    9. '  ' → logprob: -9.04623794555664
    10. ' ,' → logprob: -9.42123794555664

Token 157: ' ' (ID: 220)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.033679936081171036
    2. ' calc' → logprob: -3.408679962158203
    3. '(calc' → logprob: -10.783679962158203
    4. '   ' → logprob: -12.408679962158203
    5. '    ' → logprob: -13.158679962158203
    6. '
' → logprob: -13.408679962158203
    7. 'cal' → logprob: -13.408679962158203
    8. '  ' → logprob: -13.658679962158203
    9. ' ' → logprob: -14.158679962158203
    10. ')' → logprob: -14.408679962158203

Token 158: '1' (ID: 16)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.000561373308300972
    2. ' calc' → logprob: -7.500561237335205
    3. '(calc' → logprob: -12.500561714172363
    4. '   ' → logprob: -13.500561714172363
    5. '  ' → logprob: -14.375561714172363
    6. 'cal' → logprob: -14.500561714172363
    7. '
' → logprob: -14.750561714172363
    8. ' ' → logprob: -14.750561714172363
    9. 'compute' → logprob: -15.000561714172363
    10. '    ' → logprob: -15.000561714172363

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003412251826375723
    2. '))' → logprob: -6.253412246704102
    3. ' )' → logprob: -7.753412246704102
    4. '0' → logprob: -8.253412246704102
    5. '+' → logprob: -8.378412246704102
    6. ' +' → logprob: -8.753412246704102
    7. ')
' → logprob: -9.003412246704102
    8. '6' → logprob: -10.128412246704102
    9. '2' → logprob: -10.128412246704102
    10. '3' → logprob: -10.128412246704102

Token 160: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7157586812973022
    2. '   ' → logprob: -1.0907586812973022
    3. '
' → logprob: -2.340758800506592
    4. ')
' → logprob: -3.590758800506592
    5. '<|end|>' → logprob: -4.465758800506592
    6. ' ' → logprob: -4.840758800506592
    7. 'c' → logprob: -4.965758800506592
    8. '    
' → logprob: -5.340758800506592
    9. 'def' → logprob: -5.715758800506592
    10. '+' → logprob: -5.715758800506592

Token 161: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0950811356306076
    2. ' c' → logprob: -2.470081090927124
    3. ')' → logprob: -6.220081329345703
    4. '+' → logprob: -6.970081329345703
    5. '   ' → logprob: -7.595081329345703
    6. ' +' → logprob: -7.595081329345703
    7. ' if' → logprob: -8.345081329345703
    8. ' ' → logprob: -8.470081329345703
    9. '
' → logprob: -8.595081329345703
    10. 'return' → logprob: -8.595081329345703

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.194726824760437
    2. ' +=' → logprob: -2.8197269439697266
    3. ' =' → logprob: -2.8197269439697266
    4. '+=' → logprob: -3.0697269439697266
    5. '+' → logprob: -4.569726943969727
    6. ' +' → logprob: -7.569726943969727
    7. '-' → logprob: -9.569726943969727
    8. ')' → logprob: -9.819726943969727
    9. '*=' → logprob: -10.194726943969727
    10. ',' → logprob: -10.444726943969727

Token 163: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.37631481885910034
    2. ' sum' → logprob: -1.2513148784637451
    3. 'min' → logprob: -4.751314640045166
    4. ' min' → logprob: -4.751314640045166
    5. 'max' → logprob: -5.376314640045166
    6. ' max' → logprob: -5.626314640045166
    7. 'b' → logprob: -7.001314640045166
    8. ' b' → logprob: -7.251314640045166
    9. 'calc' → logprob: -9.251315116882324
    10. '+' → logprob: -9.501315116882324

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. '(b' → logprob: -16.5
    4. '_' → logprob: -16.625
    5. '(' → logprob: -17.375
    6. 'b' → logprob: -17.375
    7. ' ' → logprob: -17.75
    8. '
' → logprob: -18.125
    9. ')' → logprob: -18.1875
    10. '-' → logprob: -18.375

Token 165: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07248722016811371
    2. '(calc' → logprob: -2.6974871158599854
    3. '(' → logprob: -6.3224873542785645
    4. '(sum' → logprob: -7.9474873542785645
    5. '(c' → logprob: -8.572486877441406
    6. 'b' → logprob: -8.822486877441406
    7. '(
' → logprob: -10.822486877441406
    8. 'calc' → logprob: -11.197486877441406
    9. ' (' → logprob: -12.072486877441406
    10. '(cal' → logprob: -12.322486877441406

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003064699238166213
    2. '(calc' → logprob: -6.0030646324157715
    3. 'calc' → logprob: -8.75306510925293
    4. '(' → logprob: -8.87806510925293
    5. ',c' → logprob: -9.62806510925293
    6. ',
' → logprob: -10.00306510925293
    7. ' ,' → logprob: -10.12806510925293
    8. ',sum' → logprob: -10.37806510925293
    9. ')' → logprob: -10.87806510925293
    10. ',(' → logprob: -11.12806510925293

Token 167: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0233744066208601
    2. ' calc' → logprob: -3.773374319076538
    3. '(calc' → logprob: -10.023374557495117
    4. '   ' → logprob: -10.773374557495117
    5. '1' → logprob: -11.398374557495117
    6. 'cal' → logprob: -11.898374557495117
    7. 'compute' → logprob: -11.898374557495117
    8. ')' → logprob: -11.898374557495117
    9. ' ' → logprob: -12.023374557495117
    10. 'calculate' → logprob: -12.398374557495117

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01518373191356659
    2. '4' → logprob: -4.265183925628662
    3. '3' → logprob: -6.890183925628662
    4. '(' → logprob: -14.452683448791504
    5. '1' → logprob: -14.452683448791504
    6. '```' → logprob: -15.515183448791504
    7. '
' → logprob: -15.952683448791504
    8. '`' → logprob: -16.45268440246582
    9. '``' → logprob: -16.95268440246582
    10. 'a' → logprob: -17.45268440246582

Token 169: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00010473522706888616
    2. '(' → logprob: -9.250104904174805
    3. ' (' → logprob: -12.250104904174805
    4. ')' → logprob: -12.875104904174805
    5. 'j' → logprob: -14.375104904174805
    6. '(
' → logprob: -14.750104904174805
    7. ')(' → logprob: -16.750104904174805
    8. ' ' → logprob: -17.375104904174805
    9. '(i' → logprob: -17.750104904174805
    10. ' j' → logprob: -17.875104904174805

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00526316836476326
    2. ',Y' → logprob: -5.380263328552246
    3. 'Y' → logprob: -7.755263328552246
    4. ' ,' → logprob: -9.505263328552246
    5. '(' → logprob: -9.630263328552246
    6. '(Y' → logprob: -10.380263328552246
    7. ')' → logprob: -10.505263328552246
    8. ',
' → logprob: -12.130263328552246
    9. ' Y' → logprob: -12.630263328552246
    10. '',' → logprob: -13.380263328552246

Token 171: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.31326597929000854
    2. ' Y' → logprob: -1.3132660388946533
    3. '	Y' → logprob: -13.063265800476074
    4. ' ' → logprob: -14.188265800476074
    5. '(Y' → logprob: -14.313265800476074
    6. ')' → logprob: -14.438265800476074
    7. '<|end|>' → logprob: -16.06326675415039
    8. ' ' → logprob: -16.56326675415039
    9. '   ' → logprob: -17.43826675415039
    10. ',Y' → logprob: -17.56326675415039

Token 172: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.013055521994829178
    2. ')' → logprob: -4.388055324554443
    3. '))
' → logprob: -7.638055324554443
    4. ')))' → logprob: -10.888055801391602
    5. ' ))' → logprob: -11.388055801391602
    6. ')
' → logprob: -11.763055801391602
    7. '))

' → logprob: -11.763055801391602
    8. '   ' → logprob: -12.388055801391602
    9. ' ' → logprob: -12.638055801391602
    10. '),' → logprob: -12.763055801391602

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036886746529489756
    2. 'b' → logprob: -5.878688812255859
    3. '
' → logprob: -8.12868881225586
    4. ' b' → logprob: -8.37868881225586
    5. ')' → logprob: -9.00368881225586
    6. 'c' → logprob: -9.12868881225586
    7. ' ' → logprob: -10.00368881225586
    8. '    
' → logprob: -10.25368881225586
    9. ' return' → logprob: -11.37868881225586
    10. ' c' → logprob: -11.62868881225586

Token 174: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4028097689151764
    2. 'c' (adapté à ' c') → logprob: -2.1528098583221436
    3. '   ' → logprob: -2.1528098583221436
    4. ' b' → logprob: -2.9028098583221436
    5. ' c' → logprob: -4.2778096199035645
    6. '
' → logprob: -4.5278096199035645
    7. '    
' → logprob: -5.2778096199035645
    8. ')' → logprob: -5.5278096199035645
    9. '\n' → logprob: -5.6528096199035645
    10. ' ' → logprob: -6.7778096199035645

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931559443473816
    2. ' =' → logprob: -0.6931559443473816
    3. 'b' → logprob: -12.318156242370605
    4. 'c' → logprob: -13.568156242370605
    5. '   ' → logprob: -14.318156242370605
    6. ' ' → logprob: -14.318156242370605
    7. '  ' → logprob: -14.818156242370605
    8. 'a' → logprob: -15.193156242370605
    9. 'def' → logprob: -15.318156242370605
    10. '_' → logprob: -15.568156242370605

Token 176: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5788606405258179
    2. 'sum' → logprob: -0.8288606405258179
    3. 'calc' → logprob: -6.578860759735107
    4. ' calc' → logprob: -6.828860759735107
    5. ' min' → logprob: -8.45386028289795
    6. 'min' → logprob: -9.07886028289795
    7. ' max' → logprob: -10.32886028289795
    8. 'max' → logprob: -10.45386028289795
    9. '   ' → logprob: -10.95386028289795
    10. ' ' → logprob: -11.82886028289795

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '(sum' → logprob: -14.12500286102295
    3. '
' → logprob: -14.37500286102295
    4. 'sum' → logprob: -14.50000286102295
    5. '3' → logprob: -15.12500286102295
    6. '2' → logprob: -15.25000286102295
    7. '```' → logprob: -15.50000286102295
    8. ' ' → logprob: -15.75000286102295
    9. 'def' → logprob: -15.93750286102295
    10. '   ' → logprob: -16.250003814697266

Token 178: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.01791813038289547
    2. '(sum' → logprob: -4.142918109893799
    3. '(c' → logprob: -7.017918109893799
    4. '(' → logprob: -7.142918109893799
    5. '(b' → logprob: -9.517918586730957
    6. '(min' → logprob: -9.767918586730957
    7. '(
' → logprob: -10.642918586730957
    8. 'calc' → logprob: -11.267918586730957
    9. '1' → logprob: -11.517918586730957
    10. '(a' → logprob: -12.142918586730957

Token 179: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.134509021649137e-05
    2. '4' → logprob: -10.00006103515625
    3. '1' → logprob: -11.25006103515625
    4. '2' → logprob: -13.37506103515625
    5. ' ' → logprob: -14.43756103515625
    6. '(' → logprob: -15.81256103515625
    7. '_' → logprob: -16.25006103515625
    8. '   ' → logprob: -16.37506103515625
    9. '```' → logprob: -16.37506103515625
    10. '``' → logprob: -17.31256103515625

Token 180: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0019457722082734108
    2. '(' → logprob: -6.251945972442627
    3. 'Y' → logprob: -11.876945495605469
    4. ')' → logprob: -12.376945495605469
    5. '(j' → logprob: -13.251945495605469
    6. '(i' → logprob: -13.501945495605469
    7. ' (' → logprob: -14.001945495605469
    8. ')(' → logprob: -14.876945495605469
    9. '(X' → logprob: -15.001945495605469
    10. '(
' → logprob: -15.126945495605469

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002693224814720452
    2. ',i' → logprob: -8.875268936157227
    3. ' ,' → logprob: -9.000268936157227
    4. ')' → logprob: -13.625268936157227
    5. 'i' → logprob: -13.625268936157227
    6. '(' → logprob: -13.625268936157227
    7. '(i' → logprob: -14.500268936157227
    8. ',
' → logprob: -14.625268936157227
    9. '<|end|>' → logprob: -15.000268936157227
    10. ',j' → logprob: -15.125268936157227

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11284445226192474
    2. ' i' → logprob: -2.237844467163086
    3. '<|end|>' → logprob: -11.862844467163086
    4. ' ' → logprob: -11.987844467163086
    5. '   ' → logprob: -13.362844467163086
    6. 'j' → logprob: -13.737844467163086
    7. ')' → logprob: -13.737844467163086
    8. '	i' → logprob: -13.737844467163086
    9. '  ' → logprob: -13.987844467163086
    10. '    ' → logprob: -14.737844467163086

Token 183: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005401072558015585
    2. ',' → logprob: -5.255401134490967
    3. ')' → logprob: -8.880400657653809
    4. '   ' → logprob: -11.505400657653809
    5. ' ),' → logprob: -11.755400657653809
    6. 'def' → logprob: -13.005400657653809
    7. ',),' → logprob: -13.380400657653809
    8. ' ' → logprob: -13.630400657653809
    9. '```' → logprob: -13.630400657653809
    10. ''),' → logprob: -14.005400657653809

Token 184: ' ' (ID: 220)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.7297077178955078
    2. 'calc' → logprob: -1.1047077178955078
    3. '1' → logprob: -1.9797077178955078
    4. ' ' → logprob: -3.604707717895508
    5. ' sum' → logprob: -4.229707717895508
    6. 'sum' → logprob: -5.979707717895508
    7. ' b' → logprob: -7.104707717895508
    8. ')' → logprob: -7.104707717895508
    9. '(calc' → logprob: -7.104707717895508
    10. '   ' → logprob: -7.479707717895508

Token 185: '1' (ID: 16)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.38418158888816833
    2. ' calc' → logprob: -1.2591816186904907
    3. '1' → logprob: -4.134181499481201
    4. ' sum' → logprob: -4.384181499481201
    5. 'sum' → logprob: -5.259181499481201
    6. ' ' → logprob: -7.634181499481201
    7. ')' → logprob: -8.13418197631836
    8. '(calc' → logprob: -8.50918197631836
    9. '   ' → logprob: -9.00918197631836
    10. ' b' → logprob: -10.25918197631836

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006730287801474333
    2. ')
' → logprob: -5.006730079650879
    3. ')c' → logprob: -12.006730079650879
    4. '   ' → logprob: -12.631730079650879
    5. ')
' → logprob: -12.881730079650879
    6. ')

' → logprob: -14.006730079650879
    7. 'def' → logprob: -14.256730079650879
    8. ' )' → logprob: -14.756730079650879
    9. ')`' → logprob: -15.381730079650879
    10. 'c' → logprob: -15.506730079650879

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006017791107296944
    2. 'c' → logprob: -5.631017684936523
    3. ' c' → logprob: -7.131017684936523
    4. '
' → logprob: -7.506017684936523
    5. ')' → logprob: -7.631017684936523
    6. '<|end|>' → logprob: -8.631017684936523
    7. ' +' → logprob: -9.506017684936523
    8. '	c' → logprob: -9.631017684936523
    9. 'b' → logprob: -9.631017684936523
    10. '+' → logprob: -10.256017684936523

Token 188: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4827246367931366
    2. 'c' (adapté à ' c') → logprob: -1.107724666595459
    3. '   ' → logprob: -2.982724666595459
    4. ')' → logprob: -8.1077241897583
    5. '
' → logprob: -8.2327241897583
    6. ' b' → logprob: -8.2327241897583
    7. ' ' → logprob: -8.2327241897583
    8. 'b' → logprob: -8.7327241897583
    9. '	c' → logprob: -8.7327241897583
    10. ' +' → logprob: -9.4827241897583

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251936137676239
    2. ' =' → logprob: -1.5019361972808838
    3. '   ' → logprob: -12.626935958862305
    4. ')' → logprob: -14.126935958862305
    5. ' ' → logprob: -14.501935958862305
    6. 'b' → logprob: -14.626935958862305
    7. '=
' → logprob: -14.626935958862305
    8. ' +=' → logprob: -15.251935958862305
    9. '  ' → logprob: -15.376935958862305
    10. ':' → logprob: -15.626935958862305

Token 190: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.20141547918319702
    2. 'sum' → logprob: -1.7014155387878418
    3. '	sum' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.951415061950684
    5. ' ' → logprob: -15.201415061950684
    6. '    ' → logprob: -15.451415061950684
    7. '   ' → logprob: -15.451415061950684
    8. '(sum' → logprob: -16.451416015625
    9. '=sum' → logprob: -17.076416015625
    10. ' c' → logprob: -17.201416015625

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.500000953674316
    3. '```' → logprob: -16.125
    4. '(c' → logprob: -17.125
    5. '(sum' → logprob: -17.125
    6. 'sum' → logprob: -17.375
    7. '
' → logprob: -17.375
    8. ' ' → logprob: -18.0
    9. '_' → logprob: -18.0
    10. 'def' → logprob: -18.25

Token 192: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.3213025744771585e-05
    2. '(' → logprob: -10.375033378601074
    3. '(
' → logprob: -14.000033378601074
    4. 'c' → logprob: -14.375033378601074
    5. '(calc' → logprob: -15.250033378601074
    6. ' (' → logprob: -15.625033378601074
    7. ')c' → logprob: -17.000032424926758
    8. ' c' → logprob: -17.625032424926758
    9. '	c' → logprob: -17.750032424926758
    10. '(

' → logprob: -19.750032424926758

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.282920129597187e-05
    2. '(calc' → logprob: -12.500012397766113
    3. 'calc' → logprob: -12.875012397766113
    4. ',
' → logprob: -13.000012397766113
    5. '(' → logprob: -13.875012397766113
    6. ',c' → logprob: -13.875012397766113
    7. ' ,' → logprob: -14.000012397766113
    8. ')' → logprob: -14.625012397766113
    9. '),' → logprob: -15.500012397766113
    10. 'c' → logprob: -15.625012397766113

Token 194: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.006791155785322189
    2. ' calc' → logprob: -5.006791114807129
    3. 'sum' → logprob: -9.881791114807129
    4. '(calc' → logprob: -10.756791114807129
    5. ' sum' → logprob: -13.381791114807129
    6. '   ' → logprob: -14.506791114807129
    7. '.calc' → logprob: -14.881791114807129
    8. 'cal' → logprob: -15.256791114807129
    9. 'min' → logprob: -15.756791114807129
    10. '
' → logprob: -16.131792068481445

Token 195: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -15.500000953674316
    3. '
' → logprob: -15.750000953674316
    4. '3' → logprob: -16.125
    5. '```' → logprob: -17.5
    6. '

' → logprob: -17.875
    7. '_' → logprob: -17.875
    8. '(' → logprob: -18.1875
    9. '2' → logprob: -18.3125
    10. '４' → logprob: -18.8125

Token 196: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0015171191189438105
    2. '(' → logprob: -6.501517295837402
    3. 'j' → logprob: -11.626517295837402
    4. ')' → logprob: -12.876517295837402
    5. ' (' → logprob: -13.001517295837402
    6. '(
' → logprob: -14.501517295837402
    7. ')(' → logprob: -16.001516342163086
    8. '```' → logprob: -16.251516342163086
    9. ',j' → logprob: -16.751516342163086
    10. ' j' → logprob: -17.001516342163086

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022940391500014812
    2. ',X' → logprob: -8.625229835510254
    3. '',' → logprob: -10.875229835510254
    4. ')' → logprob: -11.750229835510254
    5. 'X' → logprob: -12.125229835510254
    6. '",' → logprob: -12.250229835510254
    7. ',
' → logprob: -12.500229835510254
    8. '(' → logprob: -12.625229835510254
    9. ' ,' → logprob: -12.750229835510254
    10. '(X' → logprob: -14.250229835510254

Token 198: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005253322422504425
    2. ' X' → logprob: -5.255253314971924
    3. ',' → logprob: -11.380253791809082
    4. '   ' → logprob: -12.755253791809082
    5. ' ' → logprob: -13.005253791809082
    6. ',X' → logprob: -13.630253791809082
    7. ')' → logprob: -14.505253791809082
    8. '  ' → logprob: -14.505253791809082
    9. '	X' → logprob: -15.005253791809082
    10. 'Y' → logprob: -15.255253791809082

Token 199: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47501277923583984
    2. ')' → logprob: -0.9750127792358398
    3. '))
' → logprob: -7.35001277923584
    4. ')
' → logprob: -8.22501277923584
    5. ')))' → logprob: -10.97501277923584
    6. '))

' → logprob: -12.47501277923584
    7. ')

' → logprob: -14.22501277923584
    8. '   ' → logprob: -14.35001277923584
    9. ')}' → logprob: -14.60001277923584
    10. ' )' → logprob: -14.97501277923584

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008498627692461014
    2. '
' → logprob: -6.008498668670654
    3. '    
' → logprob: -6.258498668670654
    4. 'return' → logprob: -6.508498668670654
    5. ')' → logprob: -6.883498668670654
    6. ' return' → logprob: -7.008498668670654
    7. '	return' → logprob: -8.633498191833496
    8. 'd' → logprob: -8.883498191833496
    9. 'def' → logprob: -9.258498191833496
    10. ')
' → logprob: -9.633498191833496

Token 201: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17360351979732513
    2. '
' → logprob: -3.2986035346984863
    3. 'return' (adapté à ' return') → logprob: -3.2986035346984863
    4. ')' → logprob: -3.6736035346984863
    5. ' return' → logprob: -4.298603534698486
    6. ' ' → logprob: -4.548603534698486
    7. 'd' → logprob: -4.673603534698486
    8. ')
' → logprob: -5.423603534698486
    9. '    
' → logprob: -5.548603534698486
    10. '\n' → logprob: -5.673603534698486

Token 202: ' a' (ID: 261)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0761324092745781
    2. ' min' → logprob: -2.951132297515869
    3. 'a' → logprob: -4.076132297515869
    4. '(min' → logprob: -5.826132297515869
    5. '[min' → logprob: -7.951132297515869
    6. ' a' → logprob: -8.326132774353027
    7. '(a' → logprob: -8.701132774353027
    8. '   ' → logprob: -9.326132774353027
    9. 'sum' → logprob: -9.951132774353027
    10. ' ' → logprob: -10.076132774353027

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6545995473861694
    2. ' +' → logprob: -1.4045995473861694
    3. ' ,' → logprob: -1.9045995473861694
    4. '+' → logprob: -3.029599666595459
    5. '<|end|>' → logprob: -4.029599666595459
    6. ' ' → logprob: -4.154599666595459
    7. '
' → logprob: -6.654599666595459
    8. ',
' → logprob: -7.154599666595459
    9. '  ' → logprob: -7.404599666595459
    10. '   ' → logprob: -8.2795991897583

Token 204: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22543707489967346
    2. ' b' → logprob: -1.600437045097351
    3. ' ' → logprob: -11.85043716430664
    4. 'a' → logprob: -12.22543716430664
    5. ' min' → logprob: -12.47543716430664
    6. 'min' → logprob: -12.60043716430664
    7. ' ' → logprob: -13.97543716430664
    8. ' max' → logprob: -14.22543716430664
    9. ' a' → logprob: -14.35043716430664
    10. 'max' → logprob: -14.47543716430664

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042549311183393
    2. '<|end|>' → logprob: -5.7542548179626465
    3. ',c' → logprob: -7.5042548179626465
    4. ',
' → logprob: -8.004255294799805
    5. ' ,' → logprob: -9.379255294799805
    6. '
' → logprob: -10.129255294799805
    7. '<|end|>' → logprob: -11.254255294799805
    8. 'c' → logprob: -11.379255294799805
    9. ',d' → logprob: -11.879255294799805
    10. ')' → logprob: -12.379255294799805

Token 206: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2014141082763672
    2. ' c' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.326414108276367
    4. '	c' → logprob: -16.451414108276367
    5. ' ' → logprob: -16.576414108276367
    6. '_c' → logprob: -18.701414108276367
    7. '   ' → logprob: -18.701414108276367
    8. '  ' → logprob: -19.326414108276367
    9. ',c' → logprob: -19.326414108276367
    10. ',' → logprob: -19.451414108276367

Token 207: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0768871307373047
    2. 'def' → logprob: -1.0768871307373047
    3. '<|end|>' → logprob: -1.2018871307373047
    4. ')' → logprob: -5.701887130737305
    5. ',' → logprob: -5.701887130737305
    6. '

' → logprob: -6.076887130737305
    7. ':' → logprob: -6.201887130737305
    8. '#' → logprob: -6.576887130737305
    9. ' def' → logprob: -7.201887130737305
    10. '[' → logprob: -7.201887130737305

Token 208: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1284264773130417
    2. 'n' → logprob: -3.1284265518188477
    3. 'j' → logprob: -4.003426551818848
    4. '#' → logprob: -4.128426551818848
    5. '
' → logprob: -4.253426551818848
    6. 'for' → logprob: -4.753426551818848
    7. '<|end|>' → logprob: -5.753426551818848
    8. '(' → logprob: -6.003426551818848
    9. ')' → logprob: -6.003426551818848
    10. 'x' → logprob: -6.003426551818848

Token 209: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007156961131840944
    2. ' solve' → logprob: -5.757156848907471
    3. 'main' → logprob: -5.757156848907471
    4. ' process' → logprob: -7.382156848907471
    5. 'solve' → logprob: -9.757157325744629
    6. ' compute' → logprob: -10.632157325744629
    7. ' solution' → logprob: -10.757157325744629
    8. ' max' → logprob: -10.757157325744629
    9. ' find' → logprob: -11.132157325744629
    10. 'process' → logprob: -11.507157325744629

Token 210: '_min' (ID: 15950)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7959704399108887
    2. '(j' → logprob: -1.6709704399108887
    3. '_dist' → logprob: -1.6709704399108887
    4. '_' → logprob: -2.4209704399108887
    5. '_distance' → logprob: -3.4209704399108887
    6. '_d' → logprob: -3.5459704399108887
    7. 'dist' → logprob: -6.170970439910889
    8. 'def' → logprob: -6.420970439910889
    9. '(i' → logprob: -6.545970439910889
    10. '_list' → logprob: -6.545970439910889

Token 211: '(a' (ID: 6271)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.1026599407196045
    2. '(' → logprob: -1.2276599407196045
    3. '(a' → logprob: -1.9776599407196045
    4. '():' → logprob: -3.1026599407196045
    5. '_dist' → logprob: -3.2276599407196045
    6. '(d' → logprob: -3.6026599407196045
    7. '(dist' → logprob: -3.8526599407196045
    8. '(lst' → logprob: -4.102660179138184
    9. '(i' → logprob: -4.352660179138184
    10. '1' → logprob: -4.852660179138184

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004030906595289707
    2. '):' → logprob: -6.254030704498291
    3. 's' → logprob: -7.254030704498291
    4. ',a' → logprob: -7.879030704498291
    5. ',b' → logprob: -8.12903118133545
    6. ' ,' → logprob: -8.87903118133545
    7. ',j' → logprob: -9.00403118133545
    8. '_list' → logprob: -9.50403118133545
    9. 'def' → logprob: -9.87903118133545
    10. 'a' → logprob: -10.12903118133545

Token 213: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11297649890184402
    2. ' b' → logprob: -2.237976551055908
    3. '   ' → logprob: -9.86297607421875
    4. ' ' → logprob: -10.98797607421875
    5. '):
' → logprob: -11.36297607421875
    6. ')' → logprob: -11.48797607421875
    7. '
' → logprob: -11.61297607421875
    8. '    ' → logprob: -11.73797607421875
    9. 'a' → logprob: -11.86297607421875
    10. '  ' → logprob: -12.11297607421875

Token 214: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008470730856060982
    2. ',' → logprob: -4.88347053527832
    3. '):
' → logprob: -7.25847053527832
    4. ')' → logprob: -8.88347053527832
    5. ' ):' → logprob: -11.38347053527832
    6. ':' → logprob: -13.13347053527832
    7. '):
' → logprob: -13.75847053527832
    8. '=' → logprob: -14.00847053527832
    9. 'def' → logprob: -14.38347053527832
    10. ' ,' → logprob: -14.63347053527832

Token 215: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10044129937887192
    2. ' c' → logprob: -2.3504412174224854
    3. '):
' → logprob: -8.975440979003906
    4. ')' → logprob: -9.975440979003906
    5. '   ' → logprob: -11.225440979003906
    6. ' ' → logprob: -11.475440979003906
    7. ')c' → logprob: -11.600440979003906
    8. '):' → logprob: -11.850440979003906
    9. '  ' → logprob: -12.475440979003906
    10. ' )' → logprob: -13.100440979003906

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011055010370910168
    2. '):
' → logprob: -4.511054992675781
    3. ')' → logprob: -12.386054992675781
    4. '):
' → logprob: -13.261054992675781
    5. ' ):' → logprob: -14.761054992675781
    6. ',' → logprob: -15.261054992675781
    7. ':' → logprob: -15.511054992675781
    8. '   ' → logprob: -15.636054992675781
    9. '):

' → logprob: -15.761054992675781
    10. ')：' → logprob: -17.88605499267578

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6030262112617493
    2. ' min' → logprob: -1.1030261516571045
    3. 'min' → logprob: -2.4780261516571045
    4. ' return' → logprob: -3.7280261516571045
    5. 'return' → logprob: -4.353026390075684
    6. '```' → logprob: -10.103026390075684
    7. '   ' → logprob: -10.103026390075684
    8. '	min' → logprob: -10.978026390075684
    9. 'max' → logprob: -11.603026390075684
    10. '
' → logprob: -11.978026390075684

Token 218: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1497154235839844
    2. 'return' (adapté à ' return') → logprob: -1.5247154235839844
    3. 'min' → logprob: -1.6497154235839844
    4. ' min' → logprob: -1.7747154235839844
    5. ' return' → logprob: -2.2747154235839844
    6. '
' → logprob: -7.149715423583984
    7. '```' → logprob: -9.024715423583984
    8. '    ' → logprob: -9.774715423583984
    9. ' ' → logprob: -10.024715423583984
    10. '	min' → logprob: -10.274715423583984

Token 219: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07889077812433243
    2. ' min' → logprob: -2.578890800476074
    3. '(min' → logprob: -14.578890800476074
    4. '	min' → logprob: -15.203890800476074
    5. '   ' → logprob: -15.703890800476074
    6. '[min' → logprob: -16.578889846801758
    7. ' ' → logprob: -16.828889846801758
    8. 'minimum' → logprob: -17.203889846801758
    9. '
' → logprob: -17.703889846801758
    10. 'max' → logprob: -17.828889846801758

Token 220: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013315484393388033
    2. '(' → logprob: -6.626331329345703
    3. 'a' → logprob: -13.001331329345703
    4. '(
' → logprob: -13.626331329345703
    5. '((' → logprob: -13.751331329345703
    6. '([' → logprob: -14.001331329345703
    7. '(min' → logprob: -15.876331329345703
    8. ' (' → logprob: -17.501331329345703
    9. '(

' → logprob: -17.751331329345703
    10. '```' → logprob: -17.751331329345703

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009253882803022861
    2. ',b' → logprob: -4.759253978729248
    3. 'b' → logprob: -8.00925350189209
    4. ' ,' → logprob: -8.38425350189209
    5. ' b' → logprob: -10.38425350189209
    6. '(b' → logprob: -10.75925350189209
    7. '(' → logprob: -10.88425350189209
    8. ')' → logprob: -12.50925350189209
    9. ',
' → logprob: -13.50925350189209
    10. ',min' → logprob: -13.88425350189209

Token 222: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0013313100207597017
    2. ' b' → logprob: -6.626331329345703
    3. 'min' → logprob: -12.376331329345703
    4. '   ' → logprob: -14.751331329345703
    5. ' min' → logprob: -14.751331329345703
    6. ' ' → logprob: -16.001331329345703
    7. '(b' → logprob: -16.626331329345703
    8. '	b' → logprob: -17.001331329345703
    9. '  ' → logprob: -17.126331329345703
    10. ')' → logprob: -17.501331329345703

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012113191187381744
    2. ',c' → logprob: -4.512113094329834
    3. ' ,' → logprob: -7.012113094329834
    4. 'c' → logprob: -8.762113571166992
    5. ')' → logprob: -13.262113571166992
    6. ',
' → logprob: -13.262113571166992
    7. '   ' → logprob: -13.512113571166992
    8. ' c' → logprob: -13.637113571166992
    9. ')c' → logprob: -14.387113571166992
    10. ' ' → logprob: -14.512113571166992

Token 224: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005549400229938328
    2. ' c' → logprob: -7.500555038452148
    3. ')c' → logprob: -13.375555038452148
    4. ')' → logprob: -15.250555038452148
    5. '	c' → logprob: -16.62555503845215
    6. '   ' → logprob: -19.00055503845215
    7. ' ' → logprob: -19.87555503845215
    8. '<|end|>' → logprob: -20.00055503845215
    9. '_c' → logprob: -20.87555503845215
    10. '  ' → logprob: -21.25055503845215

Token 225: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -17.125001907348633
    4. '}' → logprob: -19.625001907348633
    5. ')

' → logprob: -19.875001907348633
    6. ')return' → logprob: -20.125001907348633
    7. ')}' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '()' → logprob: -20.250001907348633
    10. '),' → logprob: -20.250001907348633

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007167493458837271
    2. 'n' → logprob: -5.007167339324951
    3. 'for' → logprob: -8.38216781616211
    4. 'if' → logprob: -8.50716781616211
    5. '(n' → logprob: -12.38216781616211
    6. 'ndef' → logprob: -12.88216781616211
    7. 'print' → logprob: -13.13216781616211
    8. 'j' → logprob: -13.13216781616211
    9. '#' → logprob: -13.50716781616211
    10. ' n' → logprob: -13.63216781616211

Token 227: ' increment' (ID: 24032)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.43129613995552063
    2. 'main' → logprob: -1.0562961101531982
    3. 'solve' → logprob: -6.806296348571777
    4. ' solve' → logprob: -7.306296348571777
    5. 'def' → logprob: -7.431296348571777
    6. ' def' → logprob: -9.556296348571777
    7. 'process' → logprob: -10.181296348571777
    8. ' process' → logprob: -10.556296348571777
    9. 'compute' → logprob: -11.306296348571777
    10. 'calculate' → logprob: -11.556296348571777

Token 228: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36914682388305664
    2. '(i' → logprob: -2.4941468238830566
    3. '(x' → logprob: -2.8691468238830566
    4. '(value' → logprob: -2.9941468238830566
    5. '(n' → logprob: -3.3691468238830566
    6. '(a' → logprob: -3.8691468238830566
    7. '(counter' → logprob: -4.244146823883057
    8. ' (' → logprob: -4.494146823883057
    9. '(j' → logprob: -4.869146823883057
    10. '(_' → logprob: -4.994146823883057

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3209091126918793
    2. '):' → logprob: -1.4459091424942017
    3. 'ount' → logprob: -3.945909023284912
    4. 'ounter' → logprob: -4.820909023284912
    5. '[' → logprob: -5.820909023284912
    6. ')' → logprob: -6.195909023284912
    7. ' ,' → logprob: -6.945909023284912
    8. ',C' → logprob: -7.320909023284912
    9. '):
' → logprob: -7.445909023284912
    10. '[i' → logprob: -7.570909023284912

Token 230: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.1883468627929688
    2. 'idx' → logprob: -1.3133468627929688
    3. 'i' → logprob: -1.8133468627929688
    4. 'index' → logprob: -1.9383468627929688
    5. ' index' → logprob: -2.6883468627929688
    6. ' i' → logprob: -3.3133468627929688
    7. 'k' → logprob: -5.938346862792969
    8. 'x' → logprob: -5.938346862792969
    9. 'j' → logprob: -6.063346862792969
    10. ')' → logprob: -6.688346862792969

Token 231: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22249628603458405
    2. ',' → logprob: -1.8474962711334229
    3. '):
' → logprob: -3.347496271133423
    4. 'ex' → logprob: -5.847496509552002
    5. ')' → logprob: -6.972496509552002
    6. 'x' → logprob: -6.972496509552002
    7. ']:' → logprob: -7.472496509552002
    8. '[' → logprob: -7.597496509552002
    9. 'dx' → logprob: -7.847496509552002
    10. '[idx' → logprob: -8.347496032714844

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3909122049808502
    2. 'C' → logprob: -1.1409121751785278
    3. ' C' → logprob: -5.515912055969238
    4. '	C' → logprob: -12.265912055969238
    5. ' ' → logprob: -13.765912055969238
    6. '```' → logprob: -13.765912055969238
    7. '  ' → logprob: -13.890912055969238
    8. '    
' → logprob: -14.390912055969238
    9. '[C' → logprob: -15.015912055969238
    10. '   ' → logprob: -15.015912055969238

Token 233: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.04099702090024948
    2. ' C' → logprob: -3.79099702835083
    3. '   ' → logprob: -4.04099702835083
    4. ' ' → logprob: -11.665996551513672
    5. '	C' → logprob: -12.915996551513672
    6. '  ' → logprob: -13.665996551513672
    7. '    ' → logprob: -14.165996551513672
    8. '
' → logprob: -15.040996551513672
    9. ' return' → logprob: -15.165996551513672
    10. 'return' → logprob: -15.290996551513672

Token 234: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0013333364622667432
    2. '[' → logprob: -6.626333236694336
    3. '[C' → logprob: -12.626333236694336
    4. 'idx' → logprob: -13.501333236694336
    5. ' [' → logprob: -14.126333236694336
    6. '```' → logprob: -14.251333236694336
    7. '   ' → logprob: -15.501333236694336
    8. '	idx' → logprob: -15.501333236694336
    9. '[int' → logprob: -16.001333236694336
    10. ' idx' → logprob: -16.126333236694336

Token 235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.388769103679806e-05
    2. ']+=' → logprob: -10.000093460083008
    3. ' ]' → logprob: -10.250093460083008
    4. ')' → logprob: -11.500093460083008
    5. '[' → logprob: -13.625093460083008
    6. '])' → logprob: -14.500093460083008
    7. '   ' → logprob: -14.875093460083008
    8. ')]' → logprob: -15.750093460083008
    9. ']+' → logprob: -15.875093460083008
    10. '```' → logprob: -16.250093460083008

Token 236: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007831734605133533
    2. ' +=' → logprob: -4.882831573486328
    3. '=' → logprob: -8.632831573486328
    4. '+' → logprob: -10.382831573486328
    5. ']+=' → logprob: -11.132831573486328
    6. '[' → logprob: -13.882831573486328
    7. '+='' → logprob: -15.632831573486328
    8. '+=(' → logprob: -15.882831573486328
    9. '   ' → logprob: -16.007831573486328
    10. ' =' → logprob: -16.007831573486328

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '<|end|>' → logprob: -17.7500057220459
    5. '```' → logprob: -17.8750057220459
    6. '  ' → logprob: -19.0000057220459
    7. '0' → logprob: -19.6250057220459
    8. 'def' → logprob: -19.7500057220459
    9. '2' → logprob: -21.1250057220459
    10. '100' → logprob: -21.3750057220459

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -18.5
    4. '<|end|>' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. 'def' → logprob: -20.375
    7. '0' → logprob: -21.375
    8. '2' → logprob: -21.375
    9. '  ' → logprob: -22.0
    10. '100' → logprob: -22.25

Token 239: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007196012418717146
    2. '<|end|>' → logprob: -5.757195949554443
    3. '#' → logprob: -5.882195949554443
    4. 'n' → logprob: -7.757195949554443
    5. 'for' → logprob: -9.382196426391602
    6. 'j' → logprob: -9.382196426391602
    7. '[' → logprob: -9.757196426391602
    8. '\' → logprob: -9.882196426391602
    9. '```' → logprob: -9.882196426391602
    10. '.' → logprob: -10.007196426391602

Token 240: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006319800857454538
    2. 'n' → logprob: -5.381319999694824
    3. 'for' → logprob: -6.631319999694824
    4. '#' → logprob: -8.381319999694824
    5. 'j' → logprob: -9.881319999694824
    6. 'i' → logprob: -11.256319999694824
    7. '<|end|>' → logprob: -11.631319999694824
    8. 'x' → logprob: -11.756319999694824
    9. '
' → logprob: -11.756319999694824
    10. ' def' → logprob: -11.881319999694824

Token 241: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.23574893176555634
    2. ' main' → logprob: -1.6107488870620728
    3. 'process' → logprob: -5.110748767852783
    4. 'solve' → logprob: -6.860748767852783
    5. ' process' → logprob: -7.235748767852783
    6. 'compute' → logprob: -7.610748767852783
    7. ' solve' → logprob: -7.985748767852783
    8. 'count' → logprob: -8.110749244689941
    9. 'increment' → logprob: -8.235749244689941
    10. 'update' → logprob: -8.610749244689941

Token 242: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.046351432800293
    2. '(C' → logprob: -1.296351432800293
    3. '(A' → logprob: -2.421351432800293
    4. '_input' → logprob: -2.671351432800293
    5. '_list' → logprob: -2.921351432800293
    6. '_' → logprob: -2.921351432800293
    7. '_line' → logprob: -3.671351432800293
    8. '()' → logprob: -3.921351432800293
    9. '_data' → logprob: -5.046351432800293
    10. '_items' → logprob: -5.046351432800293

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009795872494578362
    2. '):' → logprob: -4.634795665740967
    3. ')' → logprob: -11.009796142578125
    4. ' ,' → logprob: -12.009796142578125
    5. '):
' → logprob: -12.134796142578125
    6. ',j' → logprob: -12.884796142578125
    7. ',
' → logprob: -12.884796142578125
    8. ',n' → logprob: -13.134796142578125
    9. ' ):' → logprob: -14.134796142578125
    10. ',N' → logprob: -14.634796142578125

Token 244: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6162629723548889
    2. 'C' → logprob: -1.3662629127502441
    3. 'A' → logprob: -2.616262912750244
    4. ' X' → logprob: -2.866262912750244
    5. ' C' → logprob: -3.491262912750244
    6. ' A' → logprob: -4.241262912750244
    7. 'J' → logprob: -4.866262912750244
    8. 'M' → logprob: -5.116262912750244
    9. 'j' → logprob: -5.991262912750244
    10. 'arr' → logprob: -6.116262912750244

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.553032628493384e-05
    2. ' ,' → logprob: -10.000075340270996
    3. ',Y' → logprob: -11.500075340270996
    4. 's' → logprob: -12.125075340270996
    5. '):' → logprob: -12.250075340270996
    6. ',
' → logprob: -12.625075340270996
    7. 'Y' → logprob: -13.375075340270996
    8. '_list' → logprob: -14.625075340270996
    9. ',C' → logprob: -14.875075340270996
    10. ')' → logprob: -15.000075340270996

Token 246: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.06331367790699005
    2. ' Y' → logprob: -2.8133137226104736
    3. 'C' → logprob: -6.8133134841918945
    4. ' C' → logprob: -9.188313484191895
    5. 'j' → logprob: -10.313313484191895
    6. 'X' → logprob: -10.813313484191895
    7. 'J' → logprob: -10.938313484191895
    8. ')' → logprob: -11.063313484191895
    9. '   ' → logprob: -11.688313484191895
    10. ' ' → logprob: -11.813313484191895

Token 247: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28197163343429565
    2. ',' → logprob: -1.4069716930389404
    3. '):
' → logprob: -7.156971454620361
    4. ')' → logprob: -10.40697193145752
    5. ' ):' → logprob: -12.40697193145752
    6. '):

' → logprob: -13.15697193145752
    7. '):
' → logprob: -13.53197193145752
    8. ' ,' → logprob: -13.90697193145752
    9. ':' → logprob: -15.03197193145752
    10. ',C' → logprob: -15.15697193145752

Token 248: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.021637456491589546
    2. ' C' → logprob: -4.896637439727783
    3. 'j' → logprob: -5.271637439727783
    4. 'J' → logprob: -5.396637439727783
    5. 'A' → logprob: -6.021637439727783
    6. 'Q' → logprob: -8.271637916564941
    7. ')' → logprob: -8.396637916564941
    8. 'D' → logprob: -8.771637916564941
    9. 'K' → logprob: -9.021637916564941
    10. '):' → logprob: -9.021637916564941

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024039385840296745
    2. '):
' → logprob: -4.274039268493652
    3. ',' → logprob: -4.649039268493652
    4. ' ):' → logprob: -8.524039268493652
    5. ')' → logprob: -10.399039268493652
    6. '):

' → logprob: -11.774039268493652
    7. ' ,' → logprob: -12.149039268493652
    8. '):
' → logprob: -12.524039268493652
    9. '   ' → logprob: -13.149039268493652
    10. ':' → logprob: -13.899039268493652

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20630764961242676
    2. '):
' → logprob: -2.7063076496124268
    3. ':
' → logprob: -3.3313076496124268
    4. ':' → logprob: -3.4563076496124268
    5. ' for' → logprob: -4.206307411193848
    6. ',' → logprob: -4.456307411193848
    7. 'for' → logprob: -4.956307411193848
    8. '```' → logprob: -5.581307411193848
    9. '    
' → logprob: -5.706307411193848
    10. '):' → logprob: -5.706307411193848

Token 251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05761690065264702
    2. ' for' → logprob: -2.932616949081421
    3. 'result' → logprob: -6.932616710662842
    4. '   ' → logprob: -7.057616710662842
    5. 'min' → logprob: -8.0576171875
    6. 'i' → logprob: -8.5576171875
    7. 'res' → logprob: -9.0576171875
    8. ' result' → logprob: -9.9326171875
    9. '
' → logprob: -10.0576171875
    10. 'total' → logprob: -10.4326171875

Token 252: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03687645122408867
    2. 'i' → logprob: -3.7868764400482178
    3. ' j' → logprob: -5.286876678466797
    4. ' range' → logprob: -5.661876678466797
    5. '_' → logprob: -6.411876678466797
    6. ' _' → logprob: -7.161876678466797
    7. ' ' → logprob: -7.411876678466797
    8. 'j' → logprob: -7.661876678466797
    9. ' in' → logprob: -8.036876678466797
    10. 'range' → logprob: -8.036876678466797

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009307152591645718
    2. 'in' → logprob: -4.759307384490967
    3. ' ' → logprob: -7.384307384490967
    4. ',' → logprob: -10.634306907653809
    5. '  ' → logprob: -11.384306907653809
    6. '   ' → logprob: -11.759306907653809
    7. 'n' → logprob: -12.259306907653809
    8. '_' → logprob: -12.384306907653809
    9. '0' → logprob: -12.509306907653809
    10. '	in' → logprob: -12.509306907653809

Token 254: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31328585743904114
    2. ' range' → logprob: -1.3132858276367188
    3. ' ' → logprob: -11.188285827636719
    4. '   ' → logprob: -13.063285827636719
    5. 'ange' → logprob: -13.438285827636719
    6. '  ' → logprob: -13.438285827636719
    7. '(range' → logprob: -13.438285827636719
    8. ' xrange' → logprob: -13.688285827636719
    9. '	range' → logprob: -13.938285827636719
    10. 'r' → logprob: -14.688285827636719

Token 255: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.012569339945912361
    2. '(' → logprob: -4.387569427490234
    3. ' (' → logprob: -10.137569427490234
    4. '(
' → logprob: -11.762569427490234
    5. '(n' → logprob: -11.887569427490234
    6. 'N' → logprob: -13.512569427490234
    7. '(len' → logprob: -13.512569427490234
    8. '   ' → logprob: -14.012569427490234
    9. ' N' → logprob: -14.512569427490234
    10. ')' → logprob: -15.637569427490234

Token 256: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.226628895296017e-06
    2. ' N' → logprob: -12.625007629394531
    3. '1' → logprob: -13.000007629394531
    4. '   ' → logprob: -13.500007629394531
    5. '0' → logprob: -15.500007629394531
    6. 'n' → logprob: -17.25000762939453
    7. '	N' → logprob: -17.37500762939453
    8. 'len' → logprob: -17.50000762939453
    9. '(N' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.50000762939453

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002014048397541046
    2. ' ,' → logprob: -6.25201416015625
    3. ',N' → logprob: -9.62701416015625
    4. ' ' → logprob: -12.12701416015625
    5. '1' → logprob: -12.50201416015625
    6. 'N' → logprob: -12.75201416015625
    7. ',
' → logprob: -12.87701416015625
    8. '   ' → logprob: -13.12701416015625
    9. ' N' → logprob: -14.25201416015625
    10. '(N' → logprob: -14.50201416015625

Token 258: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0028147439006716013
    2. ' N' → logprob: -5.877814769744873
    3. '   ' → logprob: -11.877814292907715
    4. 'len' → logprob: -13.627814292907715
    5. ' ' → logprob: -14.627814292907715
    6. '  ' → logprob: -14.627814292907715
    7. '    ' → logprob: -15.627814292907715
    8. '	N' → logprob: -15.627814292907715
    9. ' len' → logprob: -16.50281524658203
    10. 'n' → logprob: -16.50281524658203

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04570293426513672
    2. '):
' → logprob: -3.4207029342651367
    3. '+' → logprob: -4.545702934265137
    4. ' ):' → logprob: -6.795702934265137
    5. ' +' → logprob: -8.545702934265137
    6. ' ):
' → logprob: -10.920702934265137
    7. '   ' → logprob: -11.295702934265137
    8. '-' → logprob: -11.670702934265137
    9. ',' → logprob: -11.795702934265137
    10. ':' → logprob: -12.920702934265137

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011513661593198776
    2. ' for' → logprob: -4.636513710021973
    3. ',' → logprob: -7.011513710021973
    4. 'for' → logprob: -7.886513710021973
    5. '   ' → logprob: -8.136513710021973
    6. '        
' → logprob: -10.386513710021973
    7. ' ' → logprob: -10.511513710021973
    8. ' j' → logprob: -10.886513710021973
    9. '  
' → logprob: -11.011513710021973
    10. '    ' → logprob: -11.761513710021973

Token 261: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8381713628768921
    2. 'for' (adapté à ' for') → logprob: -0.9631713628768921
    3. 'j' → logprob: -2.3381714820861816
    4. '   ' → logprob: -2.8381714820861816
    5. ' j' → logprob: -4.213171482086182
    6. '       ' → logprob: -4.463171482086182
    7. 'a' → logprob: -6.213171482086182
    8. ' ' → logprob: -7.588171482086182
    9. ' a' → logprob: -7.963171482086182
    10. 'x' → logprob: -8.588171005249023

Token 262: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34865593910217285
    2. ' j' → logprob: -1.2236559391021729
    3. '   ' → logprob: -8.973655700683594
    4. '	j' → logprob: -9.973655700683594
    5. '    ' → logprob: -10.848655700683594
    6. '       ' → logprob: -12.348655700683594
    7. ' ' → logprob: -12.723655700683594
    8. '_j' → logprob: -12.848655700683594
    9. ',j' → logprob: -13.223655700683594
    10. '  ' → logprob: -13.473655700683594

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005268265027552843
    2. 'in' → logprob: -5.255268096923828
    3. ' ' → logprob: -11.005268096923828
    4. 'range' → logprob: -11.755268096923828
    5. '	in' → logprob: -12.755268096923828
    6. '(' → logprob: -13.255268096923828
    7. '    ' → logprob: -13.755268096923828
    8. '   ' → logprob: -14.005268096923828
    9. ' range' → logprob: -14.005268096923828
    10. '0' → logprob: -14.130268096923828

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12699027359485626
    2. ' range' → logprob: -2.12699031829834
    3. '   ' → logprob: -10.87699031829834
    4. '(range' → logprob: -11.00199031829834
    5. 'X' → logprob: -11.75199031829834
    6. 'i' → logprob: -12.50199031829834
    7. '[' → logprob: -12.62699031829834
    8. ' ' → logprob: -13.25199031829834
    9. ' i' → logprob: -13.37699031829834
    10. '(' → logprob: -13.37699031829834

Token 265: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20482854545116425
    2. '(' → logprob: -1.8298285007476807
    3. '(N' → logprob: -3.7048285007476807
    4. '(X' → logprob: -9.079828262329102
    5. '(C' → logprob: -10.829828262329102
    6. '(j' → logprob: -11.829828262329102
    7. '1' → logprob: -12.079828262329102
    8. '((' → logprob: -12.454828262329102
    9. '(M' → logprob: -13.079828262329102
    10. '(n' → logprob: -13.579828262329102

Token 266: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08114533126354218
    2. ' +' → logprob: -2.8311452865600586
    3. '):' → logprob: -4.581145286560059
    4. '   ' → logprob: -5.456145286560059
    5. ',' → logprob: -5.956145286560059
    6. '1' → logprob: -7.581145286560059
    7. '):
' → logprob: -7.581145286560059
    8. 'N' → logprob: -8.956145286560059
    9. 'i' → logprob: -9.206145286560059
    10. '       ' → logprob: -9.206145286560059

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003416770603507757
    2. 'N' → logprob: -5.753416538238525
    3. ' ' → logprob: -9.378417015075684
    4. ',' → logprob: -9.628417015075684
    5. ' N' → logprob: -10.628417015075684
    6. '2' → logprob: -10.628417015075684
    7. '   ' → logprob: -11.128417015075684
    8. '0' → logprob: -11.753417015075684
    9. '
' → logprob: -12.253417015075684
    10. ',N' → logprob: -12.503417015075684

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012070851516909897
    2. ' ,' → logprob: -9.125121116638184
    3. ',N' → logprob: -11.500121116638184
    4. '1' → logprob: -14.750121116638184
    5. '   ' → logprob: -15.000121116638184
    6. 'N' → logprob: -15.000121116638184
    7. '(),' → logprob: -15.875121116638184
    8. ',n' → logprob: -16.125120162963867
    9. '):' → logprob: -16.500120162963867
    10. ',
' → logprob: -17.250120162963867

Token 269: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07894431799650192
    2. ' N' → logprob: -2.578944206237793
    3. '   ' → logprob: -10.078944206237793
    4. '    ' → logprob: -12.328944206237793
    5. ' ' → logprob: -12.703944206237793
    6. 'n' → logprob: -13.828944206237793
    7. '	N' → logprob: -13.953944206237793
    8. '       ' → logprob: -14.078944206237793
    9. '
' → logprob: -14.203944206237793
    10. '  ' → logprob: -15.078944206237793

Token 270: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006749124266207218
    2. '):
' → logprob: -5.006749153137207
    3. ' ):' → logprob: -10.631749153137207
    4. '+' → logprob: -12.381749153137207
    5. ':' → logprob: -12.881749153137207
    6. '   ' → logprob: -14.006749153137207
    7. '       ' → logprob: -14.381749153137207
    8. '):
' → logprob: -14.506749153137207
    9. '():' → logprob: -14.631749153137207
    10. '}:' → logprob: -16.38174819946289

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '2' → logprob: -15.375004768371582
    5. '):
' → logprob: -15.875004768371582
    6. '0' → logprob: -16.250003814697266
    7. '+' → logprob: -17.125003814697266
    8. ')' → logprob: -17.375003814697266
    9. '```' → logprob: -17.625003814697266
    10. 'def' → logprob: -17.875003814697266

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008688253001309931
    2. '):
' → logprob: -7.500868797302246
    3. ':' → logprob: -8.125868797302246
    4. ' ):' → logprob: -11.125868797302246
    5. '       ' → logprob: -13.125868797302246
    6. '():' → logprob: -13.625868797302246
    7. '           ' → logprob: -14.750868797302246
    8. '}:' → logprob: -14.875868797302246
    9. ',' → logprob: -15.125868797302246
    10. '   ' → logprob: -15.250868797302246

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04960963875055313
    2. ':' → logprob: -3.424609661102295
    3. ',' → logprob: -4.549609661102295
    4. '       ' → logprob: -6.174609661102295
    5. '<|end|>' → logprob: -7.549609661102295
    6. '          ' → logprob: -7.924609661102295
    7. '):' → logprob: -8.049609184265137
    8. ' :' → logprob: -8.174609184265137
    9. ':
' → logprob: -8.174609184265137
    10. '               ' → logprob: -8.299609184265137

Token 274: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05083416402339935
    2. ' a' → logprob: -3.0508341789245605
    3. '           ' → logprob: -6.1758341789245605
    4. '   ' → logprob: -10.550833702087402
    5. '               ' → logprob: -10.550833702087402
    6. '	a' → logprob: -10.675833702087402
    7. 'd' → logprob: -10.800833702087402
    8. '       ' → logprob: -10.925833702087402
    9. ',a' → logprob: -11.675833702087402
    10. '_a' → logprob: -12.050833702087402

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005767432739958167
    2. ',b' → logprob: -7.500576972961426
    3. ' ,' → logprob: -11.500576972961426
    4. 'b' → logprob: -11.875576972961426
    5. '=' → logprob: -12.500576972961426
    6. ' =' → logprob: -13.625576972961426
    7. ' b' → logprob: -14.000576972961426
    8. ',a' → logprob: -15.625576972961426
    9. 'a' → logprob: -16.00057601928711
    10. ',j' → logprob: -16.62557601928711

Token 276: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233882926404476
    2. ' b' → logprob: -5.2552337646484375
    3. '           ' → logprob: -18.130233764648438
    4. ' ' → logprob: -19.380233764648438
    5. '	b' → logprob: -19.380233764648438
    6. '       ' → logprob: -20.005233764648438
    7. '    ' → logprob: -20.005233764648438
    8. '   ' → logprob: -20.130233764648438
    9. '  ' → logprob: -20.505233764648438
    10. '        ' → logprob: -20.630233764648438

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.848420551046729e-05
    2. '=' → logprob: -10.5000581741333
    3. ' =' → logprob: -11.1250581741333
    4. ',c' → logprob: -11.5000581741333
    5. ' ,' → logprob: -12.5000581741333
    6. 'c' → logprob: -13.0000581741333
    7. '_,' → logprob: -18.000059127807617
    8. ' c' → logprob: -18.000059127807617
    9. ',b' → logprob: -18.375059127807617
    10. '=c' → logprob: -19.125059127807617

Token 278: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. '	c' → logprob: -20.125261306762695
    4. '  ' → logprob: -21.750261306762695
    5. ' ' → logprob: -22.000261306762695
    6. '<|end|>' → logprob: -22.250261306762695
    7. ')c' → logprob: -22.250261306762695
    8. '=' → logprob: -22.375261306762695
    9. '_c' → logprob: -22.625261306762695
    10. ',c' → logprob: -22.750261306762695

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '=
' → logprob: -19.451414108276367
    4. '=create' → logprob: -19.451414108276367
    5. '＝' → logprob: -20.076414108276367
    6. ')' → logprob: -20.076414108276367
    7. ',' → logprob: -20.201414108276367
    8. ' ' → logprob: -20.451414108276367
    9. '=parse' → logprob: -20.451414108276367
    10. '=get' → logprob: -20.451414108276367

Token 280: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.12692810595035553
    2. ' compute' → logprob: -2.1269280910491943
    3. 'computer' → logprob: -16.876928329467773
    4. '.compute' → logprob: -17.126928329467773
    5. '_compute' → logprob: -17.501928329467773
    6. '   ' → logprob: -19.251928329467773
    7. ' ' → logprob: -19.626928329467773
    8. 'comput' → logprob: -19.751928329467773
    9. ' computer' → logprob: -19.876928329467773
    10. '
' → logprob: -20.001928329467773

Token 281: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -9.088346359931165e-07
    2. 'd' → logprob: -14.000000953674316
    3. '_dist' → logprob: -18.0
    4. 'D' → logprob: -18.5
    5. '_D' → logprob: -19.875
    6. '_' → logprob: -20.0
    7. 'compute' → logprob: -20.375
    8. '_compute' → logprob: -20.875
    9. 's' → logprob: -21.375
    10. 'a' → logprob: -21.625

Token 282: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.002806417876854539
    2. 'ist' → logprob: -5.877806186676025
    3. 'i' → logprob: -15.377806663513184
    4. '   ' → logprob: -15.627806663513184
    5. 'is' → logprob: -15.627806663513184
    6. 'a' → logprob: -15.877806663513184
    7. '
' → logprob: -16.252805709838867
    8. '[' → logprob: -16.502805709838867
    9. 'inst' → logprob: -16.502805709838867
    10. 'its' → logprob: -16.502805709838867

Token 283: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.37501335144043
    3. ' (' → logprob: -13.75001335144043
    4. 'j' → logprob: -15.00001335144043
    5. '(
' → logprob: -16.37501335144043
    6. '(i' → logprob: -17.12501335144043
    7. '   ' → logprob: -18.62501335144043
    8. ' j' → logprob: -19.37501335144043
    9. '	j' → logprob: -19.50001335144043
    10. ',j' → logprob: -20.12501335144043

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034869377850554883
    2. ',i' → logprob: -8.625349044799805
    3. ' ,' → logprob: -8.750349044799805
    4. ',
' → logprob: -11.875349044799805
    5. '   ' → logprob: -13.125349044799805
    6. '           ' → logprob: -14.250349044799805
    7. ',j' → logprob: -15.000349044799805
    8. 'i' → logprob: -15.500349044799805
    9. '       ' → logprob: -16.125349044799805
    10. ' i' → logprob: -16.625349044799805

Token 285: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804401680827141
    2. ' i' → logprob: -3.288043975830078
    3. '   ' → logprob: -13.913043975830078
    4. ' ' → logprob: -14.288043975830078
    5. '
' → logprob: -15.163043975830078
    6. '	i' → logprob: -15.413043975830078
    7. '           ' → logprob: -15.663043975830078
    8. '    ' → logprob: -15.788043975830078
    9. '  ' → logprob: -16.163043975830078
    10. ',i' → logprob: -16.663043975830078

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003864630125463009
    2. ' ,' → logprob: -7.8753862380981445
    3. '   ' → logprob: -12.875386238098145
    4. ',X' → logprob: -13.125386238098145
    5. ',
' → logprob: -13.875386238098145
    6. ')' → logprob: -15.625386238098145
    7. '```' → logprob: -16.12538719177246
    8. '           ' → logprob: -16.25038719177246
    9. '  ' → logprob: -16.37538719177246
    10. ' ' → logprob: -16.62538719177246

Token 287: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00861528143286705
    2. ' X' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.883615493774414
    4. '	X' → logprob: -15.633615493774414
    5. ' ' → logprob: -16.133615493774414
    6. '    ' → logprob: -17.633615493774414
    7. '
' → logprob: -17.758615493774414
    8. '  ' → logprob: -18.383615493774414
    9. 'Xs' → logprob: -19.383615493774414
    10. ',X' → logprob: -19.883615493774414

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017560699954628944
    2. '[i' → logprob: -4.5175604820251465
    3. '[j' → logprob: -5.1425604820251465
    4. '[' → logprob: -7.7675604820251465
    5. ' ,' → logprob: -8.642560958862305
    6. ',j' → logprob: -10.392560958862305
    7. ',
' → logprob: -12.267560958862305
    8. ',i' → logprob: -12.392560958862305
    9. '   ' → logprob: -13.517560958862305
    10. '```' → logprob: -13.642560958862305

Token 289: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00218583014793694
    2. ' Y' → logprob: -6.127185821533203
    3. '	Y' → logprob: -14.627185821533203
    4. '   ' → logprob: -16.127185821533203
    5. ')' → logprob: -16.627185821533203
    6. ' ' → logprob: -16.752185821533203
    7. 'j' → logprob: -17.627185821533203
    8. '
' → logprob: -18.002185821533203
    9. '  ' → logprob: -18.252185821533203
    10. ' ' → logprob: -18.627185821533203

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133437931537628
    2. ')
' → logprob: -1.3133437633514404
    3. '           ' → logprob: -9.81334400177002
    4. ')
' → logprob: -10.68834400177002
    5. '       ' → logprob: -12.68834400177002
    6. ')

' → logprob: -14.56334400177002
    7. '   ' → logprob: -14.68834400177002
    8. ' )' → logprob: -15.93834400177002
    9. ' )
' → logprob: -16.563343048095703
    10. '):
' → logprob: -17.188343048095703

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004240011621732265
    2. ' if' → logprob: -8.7504243850708
    3. 'if' → logprob: -9.1254243850708
    4. '```' → logprob: -10.2504243850708
    5. '            
' → logprob: -10.3754243850708
    6. '
' → logprob: -11.1254243850708
    7. '       ' → logprob: -11.2504243850708
    8. ' for' → logprob: -11.6254243850708
    9. 'min' → logprob: -11.7504243850708
    10. 'compute' → logprob: -11.8754243850708

Token 292: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.2510127127170563
    2. 'min' → logprob: -2.3760128021240234
    3. 'val' → logprob: -2.5010128021240234
    4. 'v' → logprob: -3.8760128021240234
    5. 'd' → logprob: -5.126012802124023
    6. 'if' → logprob: -5.501012802124023
    7. 'mn' → logprob: -5.626012802124023
    8. 'k' → logprob: -6.251012802124023
    9. 'res' → logprob: -6.376012802124023
    10. '   ' → logprob: -6.626012802124023

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31973275542259216
    2. ' =' → logprob: -1.3197327852249146
    3. 'in' → logprob: -5.069732666015625
    4. '=in' → logprob: -9.694732666015625
    5. '   ' → logprob: -10.069732666015625
    6. 'i' → logprob: -10.444732666015625
    7. 'ax' → logprob: -12.069732666015625
    8. '=i' → logprob: -12.194732666015625
    9. ' ' → logprob: -12.444732666015625
    10. '=min' → logprob: -12.819732666015625

Token 294: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.02324547804892063
    2. ' compute' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.773244857788086
    4. ' ' → logprob: -20.398244857788086
    5. '
' → logprob: -20.648244857788086
    6. '.compute' → logprob: -21.023244857788086
    7. 'comput' → logprob: -21.023244857788086
    8. 'calculate' → logprob: -21.273244857788086
    9. 'process' → logprob: -21.648244857788086
    10. '_compute' → logprob: -21.773244857788086

Token 295: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.23917081207037e-05
    2. 'min' → logprob: -10.125041961669922
    3. '_max' → logprob: -13.875041961669922
    4. '(min' → logprob: -14.000041961669922
    5. '_m' → logprob: -14.875041961669922
    6. '_' → logprob: -16.500041961669922
    7. 'm' → logprob: -17.625041961669922
    8. 'a' → logprob: -17.875041961669922
    9. ' min' → logprob: -17.875041961669922
    10. '_MIN' → logprob: -18.375041961669922

Token 296: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.875003814697266
    3. 'a' → logprob: -13.875003814697266
    4. '(
' → logprob: -14.125003814697266
    5. ' (' → logprob: -18.500003814697266
    6. '(*' → logprob: -18.750003814697266
    7. '```' → logprob: -20.125003814697266
    8. '1' → logprob: -20.375003814697266
    9. '(
' → logprob: -20.750003814697266
    10. 'def' → logprob: -21.000003814697266

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008420244790613651
    2. ',b' → logprob: -4.883420467376709
    3. ' ,' → logprob: -7.133420467376709
    4. 'b' → logprob: -11.38341999053955
    5. ',
' → logprob: -12.88341999053955
    6. ' b' → logprob: -13.50841999053955
    7. ',m' → logprob: -15.25841999053955
    8. '   ' → logprob: -16.633420944213867
    9. '
' → logprob: -16.758420944213867
    10. ' ' → logprob: -16.883420944213867

Token 298: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. '	b' → logprob: -18.379077911376953
    4. ' ' → logprob: -18.754077911376953
    5. '   ' → logprob: -19.629077911376953
    6. ')b' → logprob: -20.379077911376953
    7. '  ' → logprob: -21.629077911376953
    8. '    ' → logprob: -22.629077911376953
    9. '
' → logprob: -22.629077911376953
    10. 'a' → logprob: -22.629077911376953

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027063372544944286
    2. ',c' → logprob: -8.75027084350586
    3. ' ,' → logprob: -9.12527084350586
    4. 'c' → logprob: -13.00027084350586
    5. ',
' → logprob: -14.75027084350586
    6. ' c' → logprob: -15.75027084350586
    7. ',b' → logprob: -15.75027084350586
    8. ',m' → logprob: -16.50027084350586
    9. ')' → logprob: -17.00027084350586
    10. '   ' → logprob: -17.12527084350586

Token 300: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006716079078614712
    2. ' c' → logprob: -5.006716251373291
    3. ')c' → logprob: -14.756715774536133
    4. '	c' → logprob: -16.131715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '   ' → logprob: -17.381715774536133
    7. ')' → logprob: -17.881715774536133
    8. '           ' → logprob: -17.881715774536133
    9. '
' → logprob: -18.381715774536133
    10. '  ' → logprob: -19.131715774536133

Token 301: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008668106980621815
    2. ')' → logprob: -4.758667945861816
    3. ')
' → logprob: -10.258667945861816
    4. '           ' → logprob: -11.008667945861816
    5. ' )
' → logprob: -13.883667945861816
    6. ')

' → logprob: -14.383667945861816
    7. ')`
' → logprob: -15.008667945861816
    8. '       ' → logprob: -16.008668899536133
    9. '   ' → logprob: -17.508668899536133
    10. '          ' → logprob: -17.758668899536133

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002913288539275527
    2. 'increment' → logprob: -6.002913475036621
    3. 'if' → logprob: -8.502913475036621
    4. ' if' → logprob: -8.752913475036621
    5. ' increment' → logprob: -10.002913475036621
    6. '```' → logprob: -11.127913475036621
    7. '   ' → logprob: -12.377913475036621
    8. '            
' → logprob: -12.502913475036621
    9. '       ' → logprob: -13.752913475036621
    10. ' for' → logprob: -13.752913475036621

Token 303: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' (adapté à ' increment') → logprob: -0.5183218717575073
    2. 'if' → logprob: -1.0183218717575073
    3. 'C' → logprob: -3.643321990966797
    4. 'for' → logprob: -4.643321990966797
    5. '           ' → logprob: -5.518321990966797
    6. ' if' → logprob: -6.518321990966797
    7. ' increment' → logprob: -6.893321990966797
    8. 'idx' → logprob: -7.893321990966797
    9. 'index' → logprob: -8.893321990966797
    10. ' C' → logprob: -9.018321990966797

Token 304: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -15.000008583068848
    4. ' (' → logprob: -16.87500762939453
    5. 'C' → logprob: -17.87500762939453
    6. '((' → logprob: -20.37500762939453
    7. '(B' → logprob: -20.75000762939453
    8. '	C' → logprob: -20.75000762939453
    9. '(A' → logprob: -20.87500762939453
    10. '(

' → logprob: -20.87500762939453

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46027541160583496
    2. '(m' → logprob: -1.335275411605835
    3. ',m' → logprob: -2.710275411605835
    4. '(' → logprob: -3.710275411605835
    5. 'm' → logprob: -4.460275650024414
    6. ' ,' → logprob: -6.460275650024414
    7. '[m' → logprob: -7.585275650024414
    8. ')' → logprob: -8.460275650024414
    9. ',
' → logprob: -8.585275650024414
    10. '[' → logprob: -8.585275650024414

Token 306: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007173155900090933
    2. ' m' → logprob: -7.2507171630859375
    3. ' ' → logprob: -13.375717163085938
    4. '(m' → logprob: -13.625717163085938
    5. 'int' → logprob: -14.375717163085938
    6. '[m' → logprob: -14.375717163085938
    7. '
' → logprob: -14.500717163085938
    8. '   ' → logprob: -14.500717163085938
    9. 'j' → logprob: -14.750717163085938
    10. '0' → logprob: -14.750717163085938

Token 307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023756083101034164
    2. '-' → logprob: -3.7737560272216797
    3. ' -' → logprob: -8.89875602722168
    4. '(m' → logprob: -9.64875602722168
    5. ' )' → logprob: -9.77375602722168
    6. '[' → logprob: -9.89875602722168
    7. 'm' → logprob: -10.02375602722168
    8. ')m' → logprob: -10.02375602722168
    9. '[m' → logprob: -10.14875602722168
    10. ')
' → logprob: -10.77375602722168

Token 308: 'def' (ID: 1314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09497251361608505
    2. '(' → logprob: -3.969972610473633
    3. ')' → logprob: -3.969972610473633
    4. '()' → logprob: -4.594972610473633
    5. 'def' → logprob: -4.719972610473633
    6. '1' → logprob: -4.844972610473633
    7. '+' → logprob: -4.969972610473633
    8. '[' → logprob: -5.469972610473633
    9. '   ' → logprob: -5.719972610473633
    10. '(m' → logprob: -6.094972610473633

Token 309: ' print' (ID: 2123)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.9967452883720398
    2. 'process' → logprob: -1.3717453479766846
    3. 'read' → logprob: -1.6217453479766846
    4. ' read' → logprob: -1.8717453479766846
    5. ' main' → logprob: -3.9967453479766846
    6. 'main' → logprob: -4.9967451095581055
    7. '__' → logprob: -7.9967451095581055
    8. 'def' → logprob: -8.746745109558105
    9. ' def' → logprob: -8.996745109558105
    10. ' __' → logprob: -10.496745109558105

Token 310: '_result' (ID: 11623)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.6279892325401306
    2. '(C' → logprob: -1.1279892921447754
    3. '_results' → logprob: -3.0029892921447754
    4. '_result' → logprob: -3.1279892921447754
    5. '(' → logprob: -4.002989292144775
    6. '_list' → logprob: -4.127989292144775
    7. '_count' → logprob: -5.752989292144775
    8. '()' → logprob: -6.002989292144775
    9. '(len' → logprob: -6.377989292144775
    10. '_stats' → logprob: -6.627989292144775

Token 311: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7228538990020752
    2. '(C' → logprob: -0.7228538990020752
    3. '()' → logprob: -3.972853899002075
    4. '():' → logprob: -4.597853660583496
    5. '()(' → logprob: -9.472853660583496
    6. '((' → logprob: -9.472853660583496
    7. '(
' → logprob: -9.847853660583496
    8. '(:' → logprob: -9.847853660583496
    9. '(()' → logprob: -10.222853660583496
    10. '(`' → logprob: -11.597853660583496

Token 312: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011049824766814709
    2. '):
' → logprob: -4.511049747467041
    3. ')' → logprob: -13.8860502243042
    4. '):
' → logprob: -14.0110502243042
    5. ' ):' → logprob: -15.8860502243042
    6. '):

' → logprob: -16.261049270629883
    7. ':' → logprob: -17.386049270629883
    8. '[]):' → logprob: -17.636049270629883
    9. '():' → logprob: -18.261049270629883
    10. '   ' → logprob: -18.636049270629883

Token 313: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06229390576481819
    2. ' N' → logprob: -3.1872940063476562
    3. 'n' → logprob: -4.187294006347656
    4. '):
' → logprob: -6.687294006347656
    5. ' n' → logprob: -7.062294006347656
    6. '):' → logprob: -7.187294006347656
    7. ')' → logprob: -8.437294006347656
    8. 'len' → logprob: -8.812294006347656
    9. '   ' → logprob: -8.937294006347656
    10. ' ):
' → logprob: -9.312294006347656

Token 314: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933728456497192
    2. '):' → logprob: -0.6933728456497192
    3. '+' → logprob: -9.31837272644043
    4. '):
' → logprob: -9.56837272644043
    5. ')' → logprob: -10.06837272644043
    6. '-' → logprob: -11.56837272644043
    7. '   ' → logprob: -12.06837272644043
    8. '):

' → logprob: -12.69337272644043
    9. ' ):' → logprob: -13.81837272644043
    10. ' ' → logprob: -13.81837272644043

Token 315: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3715828061103821
    2. '   ' → logprob: -1.3715827465057373
    3. 'for' → logprob: -2.8715827465057373
    4. ' print' → logprob: -10.871582984924316
    5. 'def' → logprob: -11.496582984924316
    6. '	for' → logprob: -11.996582984924316
    7. ' def' → logprob: -12.371582984924316
    8. 'print' → logprob: -12.996582984924316
    9. '```' → logprob: -13.496582984924316
    10. '
' → logprob: -15.371582984924316

Token 316: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0038378334138542414
    2. ' for' → logprob: -5.628838062286377
    3. 'print' → logprob: -8.753837585449219
    4. '   ' → logprob: -9.628837585449219
    5. '
' → logprob: -12.003837585449219
    6. 'def' → logprob: -12.378837585449219
    7. '```' → logprob: -12.878837585449219
    8. ' print' → logprob: -14.253837585449219
    9. ' ' → logprob: -16.37883758544922
    10. '	for' → logprob: -16.50383758544922

Token 317: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026885008439421654
    2. ' i' → logprob: -3.6518850326538086
    3. 'idx' → logprob: -8.401885032653809
    4. '_' → logprob: -8.651885032653809
    5. ' idx' → logprob: -9.401885032653809
    6. 'x' → logprob: -10.026885032653809
    7. 'k' → logprob: -10.151885032653809
    8. '_i' → logprob: -12.151885032653809
    9. 'c' → logprob: -13.276885032653809
    10. 'm' → logprob: -13.401885032653809

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038297027349472046
    2. 'in' → logprob: -3.288296937942505
    3. ' ' → logprob: -8.663296699523926
    4. '   ' → logprob: -10.788296699523926
    5. '0' → logprob: -10.913296699523926
    6. '1' → logprob: -11.288296699523926
    7. ',' → logprob: -11.538296699523926
    8. '  ' → logprob: -11.913296699523926
    9. '_' → logprob: -12.288296699523926
    10. 'range' → logprob: -13.538296699523926

Token 319: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0141702089458704
    2. ' range' → logprob: -4.264170169830322
    3. '   ' → logprob: -12.76417064666748
    4. '  ' → logprob: -13.13917064666748
    5. ' ' → logprob: -13.38917064666748
    6. '	range' → logprob: -15.51417064666748
    7. '(range' → logprob: -16.639169692993164
    8. '    ' → logprob: -17.514169692993164
    9. '
' → logprob: -17.639169692993164
    10. '1' → logprob: -18.014169692993164

Token 320: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07033418864011765
    2. '(N' → logprob: -2.6953341960906982
    3. '1' → logprob: -7.945333957672119
    4. 'N' → logprob: -10.570334434509277
    5. '(len' → logprob: -11.570334434509277
    6. '(n' → logprob: -12.320334434509277
    7. '(C' → logprob: -13.820334434509277
    8. '(
' → logprob: -14.320334434509277
    9. ' (' → logprob: -14.570334434509277
    10. ' ' → logprob: -14.820334434509277

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10066694021224976
    2. 'N' → logprob: -2.3506669998168945
    3. '0' → logprob: -7.9756669998168945
    4. '3' → logprob: -10.475666999816895
    5. ' ' → logprob: -10.600666999816895
    6. '2' → logprob: -10.725666999816895
    7. ' N' → logprob: -10.975666999816895
    8. 'len' → logprob: -11.100666999816895
    9. '(' → logprob: -12.850666999816895
    10. '   ' → logprob: -13.350666999816895

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003386806638445705
    2. ' ,' → logprob: -8.125338554382324
    3. ',N' → logprob: -10.250338554382324
    4. '1' → logprob: -12.500338554382324
    5. '   ' → logprob: -13.250338554382324
    6. 'N' → logprob: -13.875338554382324
    7. ',
' → logprob: -15.000338554382324
    8. ' ' → logprob: -15.250338554382324
    9. '(N' → logprob: -15.750338554382324
    10. '  ' → logprob: -16.62533950805664

Token 323: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.134509021649137e-05
    2. ' N' → logprob: -9.87506103515625
    3. 'len' → logprob: -11.87506103515625
    4. '4' → logprob: -13.25006103515625
    5. '6' → logprob: -14.62506103515625
    6. '7' → logprob: -15.25006103515625
    7. '3' → logprob: -15.87506103515625
    8. '   ' → logprob: -16.00006103515625
    9. ' ' → logprob: -16.50006103515625
    10. '5' → logprob: -16.62506103515625

Token 324: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004769022576510906
    2. ' +' → logprob: -5.5047688484191895
    3. '):
' → logprob: -7.6297688484191895
    4. '):' → logprob: -8.504769325256348
    5. ' ' → logprob: -14.004769325256348
    6. '   ' → logprob: -14.754769325256348
    7. '+
' → logprob: -15.254769325256348
    8. ' ):
' → logprob: -15.754769325256348
    9. ' ):' → logprob: -16.00476837158203
    10. '  ' → logprob: -16.37976837158203

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010344763286411762
    2. ' print' → logprob: -7.626034259796143
    3. 'print' → logprob: -7.626034259796143
    4. '       ' → logprob: -9.7510347366333
    5. '	print' → logprob: -14.6260347366333
    6. ' if' → logprob: -17.501033782958984
    7. '```' → logprob: -17.626033782958984
    8. '   ' → logprob: -17.626033782958984
    9. '    ' → logprob: -18.376033782958984
    10. ' ' → logprob: -18.751033782958984

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1875571544806007e-05
    2. '   ' → logprob: -11.750011444091797
    3. ' print' → logprob: -12.500011444091797
    4. '       ' → logprob: -15.500011444091797
    5. '	print' → logprob: -19.875011444091797
    6. '```' → logprob: -21.000011444091797
    7. '           ' → logprob: -22.625011444091797
    8. ' ' → logprob: -23.000011444091797
    9. 'if' → logprob: -23.125011444091797
    10. '  ' → logprob: -23.250011444091797

Token 327: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.00043698702938854694
    2. 'C' → logprob: -7.750436782836914
    3. '(' → logprob: -12.000436782836914
    4. ' (' → logprob: -16.625436782836914
    5. ' C' → logprob: -16.750436782836914
    6. '(
' → logprob: -17.750436782836914
    7. '((' → logprob: -18.500436782836914
    8. '[C' → logprob: -19.250436782836914
    9. '	C' → logprob: -19.625436782836914
    10. '   ' → logprob: -19.750436782836914

Token 328: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.774276774493046e-05
    2. '[' → logprob: -10.250038146972656
    3. ' [' → logprob: -14.000038146972656
    4. 'i' → logprob: -14.000038146972656
    5. '[
' → logprob: -15.125038146972656
    6. ')' → logprob: -15.750038146972656
    7. '   ' → logprob: -16.750038146972656
    8. ')[' → logprob: -16.875038146972656
    9. '[I' → logprob: -16.875038146972656
    10. '(i' → logprob: -17.000038146972656

Token 329: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.018432848155498505
    2. '],' → logprob: -4.0184326171875
    3. ' ])' → logprob: -8.6434326171875
    4. ']' → logprob: -9.6434326171875
    5. ')' → logprob: -10.6434326171875
    6. '])
' → logprob: -12.2684326171875
    7. 'i' → logprob: -12.6434326171875
    8. '),' → logprob: -13.3934326171875
    9. ''])' → logprob: -13.5184326171875
    10. ' ],' → logprob: -13.5184326171875

Token 330: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.058281414210796356
    2. 'n' → logprob: -3.058281421661377
    3. 'N' → logprob: -5.558281421661377
    4. '```' → logprob: -5.933281421661377
    5. 'if' → logprob: -6.308281421661377
    6. '#' → logprob: -7.433281421661377
    7. ' def' → logprob: -8.808280944824219
    8. '
' → logprob: -9.058280944824219
    9. '0' → logprob: -9.058280944824219
    10. 'i' → logprob: -9.683280944824219

Token 331: ' main' (ID: 2758)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.0426725149154663
    2. ' __' → logprob: -1.1676725149154663
    3. ' main' → logprob: -1.5426725149154663
    4. ' process' → logprob: -2.667672634124756
    5. '__' → logprob: -3.417672634124756
    6. 'read' → logprob: -4.667672634124756
    7. 'process' → logprob: -5.667672634124756
    8. 'main' → logprob: -5.917672634124756
    9. ' run' → logprob: -6.042672634124756
    10. '_' → logprob: -7.042672634124756

Token 332: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009211080614477396
    2. '():
' → logprob: -7.000921249389648
    3. ' ():' → logprob: -12.250921249389648
    4. '()' → logprob: -12.375921249389648
    5. '():
' → logprob: -15.125921249389648
    6. 'def' → logprob: -15.750921249389648
    7. '(' → logprob: -15.875921249389648
    8. '():

' → logprob: -16.25092124938965
    9. ':' → logprob: -17.12592124938965
    10. '()>' → logprob: -18.87592124938965

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4769534766674042
    2. 'n' → logprob: -1.4769535064697266
    3. ' n' → logprob: -2.4769535064697266
    4. 'N' → logprob: -2.8519535064697266
    5. ' N' → logprob: -4.726953506469727
    6. '()' → logprob: -8.851953506469727
    7. '	n' → logprob: -9.476953506469727
    8. '  ' → logprob: -9.726953506469727
    9. '    
' → logprob: -9.851953506469727
    10. '(n' → logprob: -10.726953506469727

Token 334: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.5817993879318237
    2. 'n' → logprob: -0.8317993879318237
    3. '   ' → logprob: -5.581799507141113
    4. ' N' → logprob: -6.706799507141113
    5. ' n' → logprob: -7.081799507141113
    6. '    
' → logprob: -12.081799507141113
    7. '
' → logprob: -12.456799507141113
    8. '  ' → logprob: -13.581799507141113
    9. '	n' → logprob: -13.581799507141113
    10. '    ' → logprob: -14.831799507141113

Token 335: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0582999624311924
    2. '=' → logprob: -2.933300018310547
    3. ',' → logprob: -5.683300018310547
    4. '=int' → logprob: -12.808300018310547
    5. ' ' → logprob: -12.933300018310547
    6. ' ,' → logprob: -13.433300018310547
    7. ' =
' → logprob: -14.183300018310547
    8. ')' → logprob: -14.183300018310547
    9. '=input' → logprob: -14.683300018310547
    10. ' ' → logprob: -15.558300018310547

Token 336: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.016771038994193077
    2. ' X' → logprob: -4.141770839691162
    3. '*' → logprob: -7.391770839691162
    4. ' =' → logprob: -10.26677131652832
    5. '=' → logprob: -10.51677131652832
    6. ' ' → logprob: -10.89177131652832
    7. ' *' → logprob: -11.39177131652832
    8. '<|end|>' → logprob: -12.01677131652832
    9. '  ' → logprob: -12.51677131652832
    10. 'K' → logprob: -13.14177131652832

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009456383413635194
    2. ' =' → logprob: -7.625945568084717
    3. '=' → logprob: -7.875945568084717
    4. ',Y' → logprob: -9.625946044921875
    5. ' ,' → logprob: -11.500946044921875
    6. 'Y' → logprob: -13.875946044921875
    7. '<|end|>' → logprob: -16.375946044921875
    8. ',y' → logprob: -16.750946044921875
    9. ' Y' → logprob: -16.750946044921875
    10. '1' → logprob: -17.000946044921875

Token 338: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.002823181450366974
    2. ' Y' → logprob: -5.877823352813721
    3. '   ' → logprob: -11.877822875976562
    4. '=' → logprob: -11.877822875976562
    5. '  ' → logprob: -13.377822875976562
    6. ' =' → logprob: -14.002822875976562
    7. ' ' → logprob: -14.127822875976562
    8. '	Y' → logprob: -14.877822875976562
    9. '    ' → logprob: -15.002822875976562
    10. 'y' → logprob: -15.127822875976562

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020817816257477
    2. ' =' → logprob: -2.350208282470703
    3. ',' → logprob: -14.350208282470703
    4. ')' → logprob: -14.350208282470703
    5. ')=' → logprob: -15.600208282470703
    6. '=input' → logprob: -16.100208282470703
    7. '(' → logprob: -16.600208282470703
    8. '()' → logprob: -17.350208282470703
    9. '   ' → logprob: -17.350208282470703
    10. ' ' → logprob: -18.100208282470703

Token 340: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6931562423706055
    2. ' read' → logprob: -0.6931562423706055
    3. ' map' → logprob: -12.568156242370605
    4. '   ' → logprob: -13.318156242370605
    5. ' tuple' → logprob: -13.693156242370605
    6. 'map' → logprob: -13.943156242370605
    7. '	read' → logprob: -14.193156242370605
    8. '  ' → logprob: -14.193156242370605
    9. 'tuple' → logprob: -15.318156242370605
    10. '    ' → logprob: -16.068157196044922

Token 341: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014754603616893291
    2. '()
' → logprob: -6.7514753341674805
    3. '_input' → logprob: -9.25147533416748
    4. ' ()' → logprob: -9.62647533416748
    5. '())' → logprob: -9.75147533416748
    6. '().' → logprob: -10.37647533416748
    7. '(' → logprob: -11.62647533416748
    8. 'input' → logprob: -11.75147533416748
    9. '()]' → logprob: -12.00147533416748
    10. '(),' → logprob: -12.12647533416748

Token 342: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001929228543303907
    2. '()
' → logprob: -6.25192928314209
    3. '()

' → logprob: -15.37692928314209
    4. '()
' → logprob: -16.501928329467773
    5. '()`' → logprob: -16.501928329467773
    6. '(' → logprob: -16.626928329467773
    7. ' ()' → logprob: -16.751928329467773
    8. '();' → logprob: -17.126928329467773
    9. '()\' → logprob: -17.251928329467773
    10. '(
' → logprob: -17.251928329467773

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03877362608909607
    2. 'C' → logprob: -3.288773536682129
    3. ' C' → logprob: -7.413773536682129
    4. '	C' → logprob: -10.038773536682129
    5. ' ' → logprob: -10.413773536682129
    6. '  ' → logprob: -10.538773536682129
    7. '
' → logprob: -11.538773536682129
    8. '    
' → logprob: -12.038773536682129
    9. 'def' → logprob: -12.663773536682129
    10. '```' → logprob: -12.913773536682129

Token 344: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.00011927806917810813
    2. '   ' → logprob: -9.12511920928955
    3. ' C' → logprob: -11.50011920928955
    4. '  ' → logprob: -16.375120162963867
    5. ' ' → logprob: -16.750120162963867
    6. '```' → logprob: -16.750120162963867
    7. '	C' → logprob: -17.125120162963867
    8. 'def' → logprob: -18.375120162963867
    9. '    
' → logprob: -18.500120162963867
    10. '
' → logprob: -18.750120162963867

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406685829163
    2. ' =' → logprob: -0.8259406685829163
    3. ',' → logprob: -13.95094108581543
    4. ' ' → logprob: -16.95094108581543
    5. '[' → logprob: -17.07594108581543
    6. '=create' → logprob: -17.07594108581543
    7. '   ' → logprob: -17.20094108581543
    8. '＝' → logprob: -17.32594108581543
    9. '=[]' → logprob: -17.45094108581543
    10. '=[' → logprob: -17.57594108581543

Token 346: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.000599976978264749
    2. '[' → logprob: -8.00059986114502
    3. ' init' → logprob: -8.25059986114502
    4. ' [' → logprob: -12.62559986114502
    5. '   ' → logprob: -17.875600814819336
    6. '	init' → logprob: -19.125600814819336
    7. '_init' → logprob: -19.125600814819336
    8. '(init' → logprob: -19.875600814819336
    9. '.init' → logprob: -20.125600814819336
    10. 'inite' → logprob: -20.125600814819336

Token 347: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 'list' → logprob: -15.000000953674316
    3. 'List' → logprob: -17.0
    4. '```' → logprob: -17.875
    5. '_array' → logprob: -18.0
    6. '_' → logprob: -18.5
    7. '_lists' → logprob: -19.25
    8. ' _' → logprob: -19.875
    9. '[' → logprob: -19.875
    10. '_code' → logprob: -20.0

Token 348: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00027206414961256087
    2. '(' → logprob: -8.375271797180176
    3. 'N' → logprob: -10.125271797180176
    4. ' (' → logprob: -14.375271797180176
    5. '((' → logprob: -14.375271797180176
    6. '(n' → logprob: -15.750271797180176
    7. '(
' → logprob: -16.500272750854492
    8. '   ' → logprob: -17.375272750854492
    9. ' N' → logprob: -18.375272750854492
    10. ',N' → logprob: -19.625272750854492

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22020110487937927
    2. ')
' → logprob: -1.9702011346817017
    3. '+' → logprob: -2.845201015472412
    4. ' +' → logprob: -10.34520149230957
    5. ')
' → logprob: -11.34520149230957
    6. '(N' → logprob: -11.72020149230957
    7. '1' → logprob: -11.84520149230957
    8. '(' → logprob: -11.97020149230957
    9. ' )' → logprob: -12.34520149230957
    10. 'N' → logprob: -12.59520149230957

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012143452651798725
    2. 'process' → logprob: -5.012143611907959
    3. ' process' → logprob: -5.887143611907959
    4. '
' → logprob: -6.012143611907959
    5. '    
' → logprob: -9.2621431350708
    6. 'main' → logprob: -10.0121431350708
    7. '	process' → logprob: -10.2621431350708
    8. '```' → logprob: -12.6371431350708
    9. ' main' → logprob: -13.0121431350708
    10. '  ' → logprob: -13.2621431350708

Token 351: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.028140312060713768
    2. '   ' → logprob: -4.278140544891357
    3. ' process' → logprob: -4.278140544891357
    4. '	process' → logprob: -11.5281400680542
    5. '(process' → logprob: -14.2781400680542
    6. '.process' → logprob: -15.0281400680542
    7. '  ' → logprob: -15.6531400680542
    8. '```' → logprob: -16.403141021728516
    9. '    
' → logprob: -16.528141021728516
    10. '_process' → logprob: -17.028141021728516

Token 352: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00673005310818553
    2. '(' → logprob: -5.006730079650879
    3. ' (' → logprob: -11.256730079650879
    4. '(
' → logprob: -13.631730079650879
    5. '(n' → logprob: -15.006730079650879
    6. '```' → logprob: -15.756730079650879
    7. '((' → logprob: -17.006729125976562
    8. '\(' → logprob: -18.256729125976562
    9. '(

' → logprob: -18.381729125976562
    10. 'N' → logprob: -18.506729125976562

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. ' ,' → logprob: -11.000027656555176
    3. ',X' → logprob: -11.750027656555176
    4. '(' → logprob: -13.625027656555176
    5. ',
' → logprob: -14.000027656555176
    6. ')' → logprob: -15.625027656555176
    7. '(X' → logprob: -16.00002670288086
    8. '   ' → logprob: -16.12502670288086
    9. 'X' → logprob: -16.25002670288086
    10. '```' → logprob: -16.50002670288086

Token 354: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.014168561436235905
    2. ' X' → logprob: -4.264168739318848
    3. '   ' → logprob: -12.764168739318848
    4. ' ' → logprob: -13.139168739318848
    5. '  ' → logprob: -15.514168739318848
    6. '
' → logprob: -16.88916778564453
    7. ')' → logprob: -17.38916778564453
    8. '	X' → logprob: -17.51416778564453
    9. '    ' → logprob: -17.88916778564453
    10. 'x' → logprob: -18.38916778564453

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ',Y' → logprob: -10.750041961669922
    3. ' ,' → logprob: -10.875041961669922
    4. ',
' → logprob: -13.875041961669922
    5. '[' → logprob: -15.375041961669922
    6. 'Y' → logprob: -16.000041961669922
    7. '   ' → logprob: -16.000041961669922
    8. ')' → logprob: -17.125041961669922
    9. ',C' → logprob: -17.375041961669922
    10. ' Y' → logprob: -18.125041961669922

Token 356: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00218583014793694
    2. ' Y' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.877185821533203
    4. '	Y' → logprob: -15.377185821533203
    5. ' ' → logprob: -15.752185821533203
    6. '  ' → logprob: -17.502185821533203
    7. '    ' → logprob: -17.877185821533203
    8. ',Y' → logprob: -18.627185821533203
    9. 'y' → logprob: -18.877185821533203
    10. ' ' → logprob: -18.877185821533203

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.000763510703109e-05
    2. ',C' → logprob: -10.750040054321289
    3. ')' → logprob: -11.500040054321289
    4. ' ,' → logprob: -11.875040054321289
    5. '   ' → logprob: -14.125040054321289
    6. 'C' → logprob: -14.250040054321289
    7. ',
' → logprob: -17.00004005432129
    8. ' C' → logprob: -17.87504005432129
    9. ' ' → logprob: -18.12504005432129
    10. '```' → logprob: -19.37504005432129

Token 358: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003357006062287837
    2. ' C' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. ')' → logprob: -16.375335693359375
    5. '
' → logprob: -19.625335693359375
    6. ' ' → logprob: -20.750335693359375
    7. '	C' → logprob: -20.875335693359375
    8. ')
' → logprob: -21.000335693359375
    9. '```' → logprob: -21.000335693359375
    10. '  ' → logprob: -21.500335693359375

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023095356300473213
    2. ')
' → logprob: -8.37523078918457
    3. ' )' → logprob: -15.75023078918457
    4. ')

' → logprob: -16.00023078918457
    5. '   ' → logprob: -17.37523078918457
    6. ')#' → logprob: -17.62523078918457
    7. ')`' → logprob: -17.62523078918457
    8. ')
' → logprob: -17.62523078918457
    9. '()' → logprob: -18.25023078918457
    10. '())' → logprob: -18.50023078918457

Token 360: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0627656877040863
    2. '   ' → logprob: -2.812765598297119
    3. ' print' → logprob: -7.312765598297119
    4. '
' → logprob: -9.187766075134277
    5. '```' → logprob: -11.312766075134277
    6. '	print' → logprob: -11.812766075134277
    7. '    
' → logprob: -12.062766075134277
    8. '(print' → logprob: -13.312766075134277
    9. '``' → logprob: -14.687766075134277
    10. '  ' → logprob: -15.062766075134277

Token 361: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '   ' → logprob: -20.5
    4. '
' → logprob: -25.125
    5. '(print' → logprob: -25.625
    6. '	print' → logprob: -25.875
    7. '.print' → logprob: -26.125
    8. '#print' → logprob: -26.75
    9. '  ' → logprob: -26.75
    10. '    
' → logprob: -27.875

Token 362: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. ' _' → logprob: -16.125
    4. '_results' → logprob: -16.5
    5. 'result' → logprob: -16.75
    6. '```' → logprob: -17.125
    7. '__' → logprob: -17.75
    8. '_Result' → logprob: -18.0
    9. '(_' → logprob: -18.375
    10. '
' → logprob: -19.0

Token 363: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.125000953674316
    4. '(
' → logprob: -18.125
    5. '```' → logprob: -18.375
    6. ' ' → logprob: -19.125
    7. '(CG' → logprob: -20.125
    8. '(Cs' → logprob: -20.25
    9. '(CC' → logprob: -20.5
    10. '((' → logprob: -20.625

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002481078845448792
    2. ',C' → logprob: -9.000247955322266
    3. ' ,' → logprob: -9.500247955322266
    4. 'C' → logprob: -11.125247955322266
    5. '(' → logprob: -11.250247955322266
    6. ',N' → logprob: -11.375247955322266
    7. ')' → logprob: -11.875247955322266
    8. '(C' → logprob: -13.375247955322266
    9. '(N' → logprob: -13.875247955322266
    10. 'N' → logprob: -15.125247955322266

Token 365: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.700132997939363e-05
    2. ' N' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.625017166137695
    4. '	N' → logprob: -18.500017166137695
    5. ' ' → logprob: -19.250017166137695
    6. 'n' → logprob: -19.375017166137695
    7. ')' → logprob: -19.625017166137695
    8. ',N' → logprob: -20.250017166137695
    9. '  ' → logprob: -21.125017166137695
    10. '
' → logprob: -21.375017166137695

Token 366: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ')
' → logprob: -12.125006675720215
    3. '())' → logprob: -14.750006675720215
    4. ' )' → logprob: -14.875006675720215
    5. '()' → logprob: -15.125006675720215
    6. ')

' → logprob: -16.8750057220459
    7. ')`' → logprob: -18.1250057220459
    8. ')#' → logprob: -18.5000057220459
    9. '))' → logprob: -19.1250057220459
    10. '(' → logprob: -20.1250057220459

Token 367: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3868798017501831
    2. 'main' → logprob: -1.136879801750183
    3. ' main' → logprob: -12.511879920959473
    4. ' if' → logprob: -12.886879920959473
    5. '(main' → logprob: -13.261879920959473
    6. 'print' → logprob: -15.011879920959473
    7. '_main' → logprob: -15.636879920959473
    8. '	main' → logprob: -15.886879920959473
    9. '```' → logprob: -16.636878967285156
    10. '#' → logprob: -17.136878967285156

Token 368: '()' (ID: 416)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.057520899921655655
    2. ')' → logprob: -3.432520866394043
    3. '0' → logprob: -5.057520866394043
    4. ' ' → logprob: -5.307520866394043
    5. '[i' → logprob: -6.057520866394043
    6. '[]' → logprob: -6.182520866394043
    7. '(' → logprob: -6.307520866394043
    8. '<|end|>' → logprob: -6.307520866394043
    9. '=' → logprob: -7.432520866394043
    10. '[
' → logprob: -7.932520866394043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 366
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 163
Tokens correctement prédits (top 10): 328
Précision stricte (1ère position): 40.98%
Précision adaptée (1ère position): 44.54%
Précision (top 10): 89.62%
================================================================================
