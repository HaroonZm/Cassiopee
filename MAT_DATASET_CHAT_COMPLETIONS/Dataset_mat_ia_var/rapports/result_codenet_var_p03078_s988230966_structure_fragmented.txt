================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np

def get_input():
    return input()

def parse_integers_from_input(input_line):
    return list(map(int, input_line.split()))

def get_X_Y_Z_K():
    return parse_integers_from_input(get_input())

def get_array():
    return parse_integers_from_input(get_input())

def get_A():
    return get_array()

def get_B():
    return get_array()

def get_C():
    return get_array()

def reverse_sort_array(arr):
    arr.sort(reverse=True)
    return arr

def min_val(a, b):
    return min(a, b)

def compute_bounds_i(K, X):
    return min_val(K, X)

def compute_bounds_j(K, i, Y):
    return min_val(K // (i + 1), Y)

def compute_bounds_k(K, i, j, Z):
    return min_val(((K // (i + 1) + 1) // (j + 1)), Z)

def append_sum_to_D(D, a_val, b_val, c_val):
    D.append(a_val + b_val + c_val)

def build_D(A, B, C, K, X, Y, Z):
    D = []
    bound_i = compute_bounds_i(K, X)
    for i in range(bound_i):
        bound_j = compute_bounds_j(K, i, Y)
        for j in range(bound_j):
            bound_k = compute_bounds_k(K, i, j, Z)
            for k in range(bound_k):
                append_sum_to_D(D, A[i], B[j], C[k])
    return D

def sort_D_descending(D):
    D.sort(reverse=True)
    return D

def print_first_K_elements(D, K):
    for i in range(K):
        print(int(D[i]))

def main():
    X, Y, Z, K = get_X_Y_Z_K()
    A = get_A()
    B = get_B()
    C = get_C()
    A = reverse_sort_array(A)
    B = reverse_sort_array(B)
    C = reverse_sort_array(C)
    D = build_D(A, B, C, K, X, Y, Z)
    D = sort_D_descending(D)
    print_first_K_elements(D, K)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0009220616775564849
    2. 'np' → logprob: -7.000922203063965
    3. ' ' → logprob: -12.000922203063965
    4. ' numpy' → logprob: -12.375922203063965
    5. ' ' → logprob: -15.750922203063965
    6. '```' → logprob: -17.75092124938965
    7. 'numpy' → logprob: -17.87592124938965
    8. '_np' → logprob: -18.12592124938965
    9. '(np' → logprob: -18.62592124938965
    10. ' n' → logprob: -18.75092124938965

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.363584041595459
    2. '\n' → logprob: -1.988584041595459
    3. '\' → logprob: -3.363584041595459
    4. 'newline' → logprob: -3.488584041595459
    5. '```' → logprob: -3.488584041595459
    6. 'import' → logprob: -3.488584041595459
    7. '<|end|>' → logprob: -3.488584041595459
    8. '<|end|>' → logprob: -6.238584041595459
    9. '\r' → logprob: -6.613584041595459
    10. '[' → logprob: -6.988584041595459

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03677728772163391
    2. 'import' → logprob: -4.661777496337891
    3. '<|end|>' → logprob: -5.161777496337891
    4. '[' → logprob: -5.286777496337891
    5. '```' → logprob: -5.411777496337891
    6. '#' → logprob: -6.036777496337891
    7. 'as' → logprob: -6.411777496337891
    8. '\n' → logprob: -6.411777496337891
    9. 'a' → logprob: -6.661777496337891
    10. '\' → logprob: -7.286777496337891

Token 6: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5416062474250793
    2. ' space' → logprob: -1.7916061878204346
    3. ' calculate' → logprob: -3.4166061878204346
    4. ' array' → logprob: -3.5416061878204346
    5. ' my' → logprob: -3.5416061878204346
    6. ' process' → logprob: -3.7916061878204346
    7. ' factorial' → logprob: -3.7916061878204346
    8. ' square' → logprob: -3.7916061878204346
    9. ' train' → logprob: -4.041606426239014
    10. ' f' → logprob: -4.416606426239014

Token 7: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09365338087081909
    2. '_array' → logprob: -2.593653440475464
    3. ' _' → logprob: -5.593653202056885
    4. '_data' → logprob: -5.968653202056885
    5. '_max' → logprob: -6.093653202056885
    6. '_mean' → logprob: -7.093653202056885
    7. '_matrix' → logprob: -7.218653202056885
    8. '_numpy' → logprob: -7.343653202056885
    9. '_user' → logprob: -7.843653202056885
    10. '_random' → logprob: -7.968653202056885

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.481672465801239
    2. '_' → logprob: -0.981672465801239
    3. '(_' → logprob: -6.231672286987305
    4. '_data' → logprob: -7.106672286987305
    5. '```' → logprob: -7.231672286987305
    6. 's' → logprob: -7.731672286987305
    7. '_(' → logprob: -7.731672286987305
    8. '_token' → logprob: -7.856672286987305
    9. '_s' → logprob: -7.981672286987305
    10. '_text' → logprob: -8.106672286987305

Token 9: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2623930275440216
    2. '   ' → logprob: -2.262392997741699
    3. 'return' → logprob: -3.762392997741699
    4. ''' → logprob: -3.762392997741699
    5. '```' → logprob: -3.887392997741699
    6. '()' → logprob: -4.137392997741699
    7. ' return' → logprob: -4.262392997741699
    8. ' ' → logprob: -4.637392997741699
    9. '(
' → logprob: -5.012392997741699
    10. ' (' → logprob: -5.762392997741699

Token 10: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09764200448989868
    2. 'user' → logprob: -2.597641944885254
    3. 'input' → logprob: -4.847641944885254
    4. '   ' → logprob: -5.222641944885254
    5. 'x' → logprob: -6.347641944885254
    6. 'value' → logprob: -6.472641944885254
    7. ' return' → logprob: -7.097641944885254
    8. 'data' → logprob: -7.472641944885254
    9. 'inp' → logprob: -8.347641944885254
    10. 'text' → logprob: -9.097641944885254

Token 11: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3930198848247528
    2. ' np' → logprob: -2.018019914627075
    3. ' input' → logprob: -2.143019914627075
    4. 'input' → logprob: -2.893019914627075
    5. '"' → logprob: -4.268019676208496
    6. 'np' → logprob: -6.018019676208496
    7. '  ' → logprob: -6.643019676208496
    8. ''' → logprob: -7.768019676208496
    9. ' int' → logprob: -8.143019676208496
    10. ' "' → logprob: -8.143019676208496

Token 12: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034081995487213135
    2. '()' → logprob: -3.4090819358825684
    3. '('' → logprob: -8.659082412719727
    4. '("("' → logprob: -9.409082412719727
    5. ' ' → logprob: -10.159082412719727
    6. '(
' → logprob: -10.534082412719727
    7. '("' → logprob: -10.534082412719727
    8. ' (' → logprob: -11.284082412719727
    9. '().' → logprob: -11.284082412719727
    10. '("")' → logprob: -11.659082412719727

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26359865069389343
    2. 'x' → logprob: -2.888598680496216
    3. 'data' → logprob: -3.013598680496216
    4. '\n' → logprob: -3.763598680496216
    5. '\' → logprob: -4.013598442077637
    6. 'result' → logprob: -4.513598442077637
    7. '
' → logprob: -4.638598442077637
    8. '.' → logprob: -5.138598442077637
    9. '

' → logprob: -5.138598442077637
    10. '```' → logprob: -5.388598442077637

Token 14: ' parse' (ID: 8420)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8662478923797607
    2. '_' → logprob: -1.8662478923797607
    3. ' main' → logprob: -2.1162478923797607
    4. ' process' → logprob: -2.3662478923797607
    5. ' get' → logprob: -2.3662478923797607
    6. ' compute' → logprob: -3.7412478923797607
    7. ' predict' → logprob: -4.11624813079834
    8. ' add' → logprob: -4.86624813079834
    9. '_process' → logprob: -4.86624813079834
    10. ' convert' → logprob: -5.11624813079834

Token 15: '_in' (ID: 2267)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.22709272801876068
    2. '_' → logprob: -1.8520927429199219
    3. '(' → logprob: -3.727092742919922
    4. '_line' → logprob: -4.102092742919922
    5. '_data' → logprob: -6.227092742919922
    6. '_user' → logprob: -7.227092742919922
    7. '_text' → logprob: -7.727092742919922
    8. '(input' → logprob: -7.977092742919922
    9. '_json' → logprob: -8.227092742919922
    10. '_string' → logprob: -8.227092742919922

Token 16: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6935577392578125
    2. 'put' → logprob: -0.6935577392578125
    3. 'teger' → logprob: -8.193557739257812
    4. 'te' → logprob: -10.068557739257812
    5. 'tent' → logprob: -10.068557739257812
    6. 'puts' → logprob: -10.443557739257812
    7. 'ut' → logprob: -11.318557739257812
    8. 'tu' → logprob: -13.693557739257812
    9. 'it' → logprob: -13.818557739257812
    10. 'p' → logprob: -13.943557739257812

Token 17: 'gers' (ID: 13027)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5595316886901855
    2. 'ger' → logprob: -1.6845316886901855
    3. 'gers' → logprob: -1.8095316886901855
    4. 'gr' → logprob: -2.6845316886901855
    5. 'rs' → logprob: -4.9345316886901855
    6. 'g' → logprob: -5.6845316886901855
    7. '```' → logprob: -9.059532165527344
    8. '   ' → logprob: -9.934532165527344
    9. '  ' → logprob: -10.809532165527344
    10. 'rt' → logprob: -10.934532165527344

Token 18: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003818140830844641
    2. ' (' → logprob: -8.625381469726562
    3. '("("' → logprob: -9.250381469726562
    4. '('' → logprob: -10.500381469726562
    5. '_' → logprob: -10.875381469726562
    6. '():' → logprob: -11.625381469726562
    7. '()' → logprob: -12.250381469726562
    8. '(line' → logprob: -12.750381469726562
    9. '```' → logprob: -12.875381469726562
    10. '(user' → logprob: -12.875381469726562

Token 19: '_input' (ID: 12507)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.6915379166603088
    2. '_input' → logprob: -1.066537857055664
    3. ' string' → logprob: -3.441537857055664
    4. ' input' → logprob: -3.816537857055664
    5. '_line' → logprob: -3.816537857055664
    6. '_' → logprob: -4.066537857055664
    7. 'input' → logprob: -4.316537857055664
    8. 'string' → logprob: -4.441537857055664
    9. '(input' → logprob: -4.941537857055664
    10. ' line' → logprob: -4.941537857055664

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009496912243776023
    2. '_' → logprob: -8.00094985961914
    3. '("("' → logprob: -8.75094985961914
    4. '('' → logprob: -8.87594985961914
    5. '():' → logprob: -9.12594985961914
    6. '()' → logprob: -9.62594985961914
    7. '```' → logprob: -10.75094985961914
    8. ' (' → logprob: -10.75094985961914
    9. ':' → logprob: -11.00094985961914
    10. '(line' → logprob: -11.62594985961914

Token 21: '_line' (ID: 14418)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5498152375221252
    2. '_string' → logprob: -1.6748151779174805
    3. ')' → logprob: -2.0498151779174805
    4. '_' → logprob: -3.1748151779174805
    5. '_text' → logprob: -3.6748151779174805
    6. '_str' → logprob: -3.7998151779174805
    7. '_line' → logprob: -5.6748151779174805
    8. 's' → logprob: -6.1748151779174805
    9. '_data' → logprob: -6.2998151779174805
    10. '(' → logprob: -6.2998151779174805

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007818486541509628
    2. ')' → logprob: -5.132818698883057
    3. ' ):' → logprob: -7.382818698883057
    4. '):
' → logprob: -7.757818698883057
    5. ':' → logprob: -8.257818222045898
    6. '(' → logprob: -8.507818222045898
    7. ',' → logprob: -8.882818222045898
    8. '():' → logprob: -9.632818222045898
    9. '   ' → logprob: -9.757818222045898
    10. '[' → logprob: -10.382818222045898

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07265472412109375
    2. ' return' → logprob: -2.8226547241210938
    3. 'return' → logprob: -5.697654724121094
    4. ' line' → logprob: -6.197654724121094
    5. ' input' → logprob: -6.697654724121094
    6. 'input' → logprob: -6.822654724121094
    7. '(' → logprob: -6.822654724121094
    8. '[' → logprob: -8.072654724121094
    9. ' (' → logprob: -8.322654724121094
    10. '    ' → logprob: -8.697654724121094

Token 24: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41301092505455017
    2. ' list' → logprob: -1.7880109548568726
    3. '   ' → logprob: -2.413010835647583
    4. ' np' → logprob: -3.038010835647583
    5. 'return' (adapté à ' return') → logprob: -3.788010835647583
    6. ' map' → logprob: -5.288011074066162
    7. 'list' → logprob: -6.038011074066162
    8. 'np' → logprob: -7.038011074066162
    9. ' input' → logprob: -7.288011074066162
    10. ' [' → logprob: -7.663011074066162

Token 25: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.014149055816233158
    2. ' np' → logprob: -4.639149188995361
    3. 'list' → logprob: -5.764149188995361
    4. ' [' → logprob: -7.264149188995361
    5. '[' → logprob: -8.389148712158203
    6. '[list' → logprob: -8.514148712158203
    7. 'np' → logprob: -10.014148712158203
    8. '[np' → logprob: -10.139148712158203
    9. ' ' → logprob: -11.014148712158203
    10. '[input' → logprob: -12.264148712158203

Token 26: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05204010009765625
    2. '(' → logprob: -3.0520401000976562
    3. '(np' → logprob: -5.802040100097656
    4. '(int' → logprob: -7.802040100097656
    5. '(filter' → logprob: -12.302040100097656
    6. '(eval' → logprob: -12.927040100097656
    7. '(

' → logprob: -13.302040100097656
    8. '(.' → logprob: -13.302040100097656
    9. 'map' → logprob: -13.427040100097656
    10. '(
' → logprob: -13.802040100097656

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001397260813973844
    2. '(' → logprob: -6.751397132873535
    3. 'int' → logprob: -8.751397132873535
    4. ',int' → logprob: -10.501397132873535
    5. '<int' → logprob: -10.876397132873535
    6. ' int' → logprob: -11.751397132873535
    7. '=int' → logprob: -12.001397132873535
    8. ')' → logprob: -13.376397132873535
    9. '   ' → logprob: -13.501397132873535
    10. '[int' → logprob: -13.626397132873535

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4389861822128296
    2. ',input' → logprob: -1.0639861822128296
    3. '(input' → logprob: -4.688986301422119
    4. '(' → logprob: -7.438986301422119
    5. ' ,' → logprob: -8.438985824584961
    6. 'input' → logprob: -8.688985824584961
    7. ')' → logprob: -11.688985824584961
    8. '   ' → logprob: -11.688985824584961
    9. ',
' → logprob: -11.813985824584961
    10. ' input' → logprob: -11.938985824584961

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016038473695516586
    2. 'input' → logprob: -4.141038417816162
    3. '(input' → logprob: -13.26603889465332
    4. ',input' → logprob: -13.76603889465332
    5. '	input' → logprob: -14.64103889465332
    6. '=input' → logprob: -15.26603889465332
    7. ' ' → logprob: -15.39103889465332
    8. '[input' → logprob: -16.01603889465332
    9. ')' → logprob: -16.26603889465332
    10. '<input' → logprob: -16.76603889465332

Token 30: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0003788376343436539
    2. '().' → logprob: -9.375378608703613
    3. '(_' → logprob: -9.500378608703613
    4. '._' → logprob: -10.000378608703613
    5. '(' → logprob: -10.375378608703613
    6. 'line' → logprob: -10.500378608703613
    7. ')' → logprob: -10.875378608703613
    8. ')_' → logprob: -11.250378608703613
    9. '(line' → logprob: -11.625378608703613
    10. '   ' → logprob: -11.750378608703613

Token 31: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4694462716579437
    2. '.' → logprob: -1.4694463014602661
    3. '.strip' → logprob: -1.9694463014602661
    4. ' .' → logprob: -5.469446182250977
    5. '().' → logprob: -7.094446182250977
    6. '   ' → logprob: -11.844446182250977
    7. '.trim' → logprob: -12.344446182250977
    8. '.rstrip' → logprob: -12.344446182250977
    9. ').' → logprob: -13.469446182250977
    10. ')' → logprob: -13.969446182250977

Token 32: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4199988543987274
    2. '('' → logprob: -1.1699988842010498
    3. '())' → logprob: -4.044998645782471
    4. '()' → logprob: -4.419998645782471
    5. '(' → logprob: -6.544998645782471
    6. '())))' → logprob: -7.169998645782471
    7. '))' → logprob: -7.669998645782471
    8. '(','' → logprob: -8.544999122619629
    9. '("' → logprob: -10.044999122619629
    10. '()))
' → logprob: -10.294999122619629

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34263867139816284
    2. '

' → logprob: -1.4676387310028076
    3. '
' → logprob: -3.0926387310028076
    4. '\' → logprob: -4.9676384925842285
    5. '<|end|>' → logprob: -5.5926384925842285
    6. '```' → logprob: -6.8426384925842285
    7. '\n' → logprob: -7.0926384925842285
    8. '<|end|>' → logprob: -7.4676384925842285
    9. '#' → logprob: -8.217638969421387
    10. 'n' → logprob: -8.842638969421387

Token 34: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9279504418373108
    2. ' sum' → logprob: -1.427950382232666
    3. ' compute' → logprob: -2.052950382232666
    4. ' calculate' → logprob: -2.177950382232666
    5. ' process' → logprob: -3.552950382232666
    6. ' add' → logprob: -3.677950382232666
    7. ' find' → logprob: -4.052950382232666
    8. ' get' → logprob: -4.427950382232666
    9. 'sum' → logprob: -4.927950382232666
    10. 'calculate' → logprob: -4.927950382232666

Token 35: '_X' (ID: 16245)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.0475152730941772
    2. '_max' → logprob: -1.1725152730941772
    3. '_unique' → logprob: -2.797515392303467
    4. '_sum' → logprob: -2.797515392303467
    5. '_numbers' → logprob: -3.172515392303467
    6. '_input' → logprob: -3.422515392303467
    7. '_data' → logprob: -3.922515392303467
    8. '_output' → logprob: -4.172515392303467
    9. '_integer' → logprob: -4.172515392303467
    10. '_' → logprob: -4.547515392303467

Token 36: '_Y' (ID: 22477)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9778709411621094
    2. '_values' → logprob: -1.6028709411621094
    3. '_and' → logprob: -2.1028709411621094
    4. '_train' → logprob: -2.8528709411621094
    5. '():' → logprob: -2.8528709411621094
    6. 'Y' → logprob: -3.1028709411621094
    7. '_value' → logprob: -3.6028709411621094
    8. '_range' → logprob: -3.8528709411621094
    9. '_data' → logprob: -4.477870941162109
    10. '_y' → logprob: -4.602870941162109

Token 37: '_Z' (ID: 27268)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006859870045445859
    2. '()' → logprob: -8.000685691833496
    3. '(' → logprob: -8.750685691833496
    4. '_input' → logprob: -9.875685691833496
    5. '_values' → logprob: -10.125685691833496
    6. '()(' → logprob: -10.625685691833496
    7. '():
' → logprob: -11.250685691833496
    8. '_' → logprob: -11.625685691833496
    9. '_inputs' → logprob: -11.750685691833496
    10. ' ():' → logprob: -11.875685691833496

Token 38: '_K' (ID: 20555)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004337664227932692
    2. '()' → logprob: -6.004337787628174
    3. '(' → logprob: -6.629337787628174
    4. '_input' → logprob: -8.504337310791016
    5. '_parameters' → logprob: -9.504337310791016
    6. '_' → logprob: -9.754337310791016
    7. '_coordinates' → logprob: -10.379337310791016
    8. '_values' → logprob: -10.504337310791016
    9. '():
' → logprob: -10.754337310791016
    10. '_inputs' → logprob: -11.004337310791016

Token 39: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003150980919599533
    2. '(' → logprob: -6.253150939941406
    3. '()' → logprob: -7.003150939941406
    4. '_input' → logprob: -8.878150939941406
    5. '(input' → logprob: -10.753150939941406
    6. '_' → logprob: -11.128150939941406
    7. ':' → logprob: -11.378150939941406
    8. ' ():' → logprob: -11.378150939941406
    9. '_values' → logprob: -11.628150939941406
    10. '(line' → logprob: -11.753150939941406

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05139167606830597
    2. ' return' → logprob: -4.1763916015625
    3. 'return' → logprob: -4.1763916015625
    4. '(' → logprob: -5.0513916015625
    5. ' ' → logprob: -6.0513916015625
    6. 'input' → logprob: -6.1763916015625
    7. ' (' → logprob: -6.8013916015625
    8. '```' → logprob: -6.9263916015625
    9. '    ' → logprob: -7.1763916015625
    10. '    
' → logprob: -7.3013916015625

Token 41: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7361607551574707
    2. 'return' (adapté à ' return') → logprob: -1.1111607551574707
    3. 'input' → logprob: -2.4861607551574707
    4. ' return' → logprob: -2.6111607551574707
    5. ' line' → logprob: -4.236160755157471
    6. 'line' → logprob: -4.736160755157471
    7. ' input' → logprob: -4.736160755157471
    8. '       ' → logprob: -6.986160755157471
    9. '```' → logprob: -6.986160755157471
    10. '
' → logprob: -8.111160278320312

Token 42: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.4755343794822693
    2. ' tuple' → logprob: -1.600534439086914
    3. ' map' → logprob: -2.475534439086914
    4. 'parse' → logprob: -3.475534439086914
    5. ' list' → logprob: -3.725534439086914
    6. ' get' → logprob: -4.225534439086914
    7. 'map' → logprob: -5.100534439086914
    8. ' np' → logprob: -5.225534439086914
    9. 'tuple' → logprob: -5.350534439086914
    10. 'list' → logprob: -5.600534439086914

Token 43: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.990154047845863e-05
    2. '_' → logprob: -10.000049591064453
    3. '_integer' → logprob: -12.875049591064453
    4. '_int' → logprob: -14.250049591064453
    5. '_input' → logprob: -14.875049591064453
    6. 'inte' → logprob: -15.000049591064453
    7. '_(' → logprob: -16.625049591064453
    8. '_i' → logprob: -16.750049591064453
    9. '_ing' → logprob: -16.875049591064453
    10. '_integr' → logprob: -17.250049591064453

Token 44: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0008151084766723216
    2. 'put' → logprob: -7.875814914703369
    3. 't' → logprob: -8.375815391540527
    4. '_te' → logprob: -8.875815391540527
    5. '_' → logprob: -10.875815391540527
    6. 'gers' → logprob: -11.375815391540527
    7. 'teg' → logprob: -11.375815391540527
    8. 'eg' → logprob: -12.000815391540527
    9. 'teger' → logprob: -12.375815391540527
    10. '_put' → logprob: -12.625815391540527

Token 45: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -4.763666947837919e-05
    2. 'gr' → logprob: -11.12504768371582
    3. 'ger' → logprob: -11.37504768371582
    4. 'g' → logprob: -11.75004768371582
    5. '_g' → logprob: -12.12504768371582
    6. '_' → logprob: -12.87504768371582
    7. 'get' → logprob: -13.62504768371582
    8. 'gars' → logprob: -14.12504768371582
    9. 'rs' → logprob: -14.25004768371582
    10. 'gres' → logprob: -14.37504768371582

Token 46: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.4498052223643754e-05
    2. 'from' → logprob: -11.250014305114746
    3. '_for' → logprob: -14.625014305114746
    4. 'From' → logprob: -15.500014305114746
    5. '_f' → logprob: -15.875014305114746
    6. '_to' → logprob: -16.250015258789062
    7. '(_' → logprob: -16.375015258789062
    8. '```' → logprob: -16.375015258789062
    9. '_line' → logprob: -16.625015258789062
    10. '_' → logprob: -16.625015258789062

Token 47: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003931384126190096
    2. '(input' → logprob: -8.37539291381836
    3. 'input' → logprob: -8.87539291381836
    4. '_' → logprob: -11.12539291381836
    5. ' input' → logprob: -12.75039291381836
    6. '_output' → logprob: -13.87539291381836
    7. '(' → logprob: -13.87539291381836
    8. '_line' → logprob: -14.00039291381836
    9. '_in' → logprob: -14.62539291381836
    10. '<input' → logprob: -15.37539291381836

Token 48: '(get' (ID: 7119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08097748458385468
    2. '(input' → logprob: -2.830977439880371
    3. '("("' → logprob: -4.330977439880371
    4. '('' → logprob: -5.205977439880371
    5. ' (' → logprob: -9.955977439880371
    6. '("(' → logprob: -10.080977439880371
    7. '()' → logprob: -10.455977439880371
    8. '(
' → logprob: -11.205977439880371
    9. '('(' → logprob: -11.580977439880371
    10. '((' → logprob: -11.955977439880371

Token 49: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00011892046313732862
    2. '_' → logprob: -9.62511920928955
    3. '_Input' → logprob: -10.87511920928955
    4. '_line' → logprob: -11.75011920928955
    5. '_X' → logprob: -12.00011920928955
    6. 'input' → logprob: -12.50011920928955
    7. '_INPUT' → logprob: -12.75011920928955
    8. '_output' → logprob: -13.50011920928955
    9. ')_' → logprob: -13.50011920928955
    10. '```' → logprob: -13.62511920928955

Token 50: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002168221166357398
    2. '()' → logprob: -6.25216817855835
    3. '()))' → logprob: -8.377168655395508
    4. ')' → logprob: -12.127168655395508
    5. ' ())' → logprob: -13.252168655395508
    6. '())
' → logprob: -14.252168655395508
    7. '()),' → logprob: -14.877168655395508
    8. '();)' → logprob: -15.002168655395508
    9. '())))' → logprob: -15.502168655395508
    10. '()]' → logprob: -15.627168655395508

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22060169279575348
    2. '(' → logprob: -3.595601797103882
    3. '```' → logprob: -3.595601797103882
    4. '\' → logprob: -3.720601797103882
    5. '<|end|>' → logprob: -4.095601558685303
    6. '\n' → logprob: -4.220601558685303
    7. '
' → logprob: -4.220601558685303
    8. '()' → logprob: -4.470601558685303
    9. '#' → logprob: -4.470601558685303
    10. 'newline' → logprob: -4.470601558685303

Token 52: ' get' (ID: 717)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.0212854146957397
    2. ' calculate' → logprob: -1.5212854146957397
    3. ' main' → logprob: -2.1462855339050293
    4. ' find' → logprob: -2.6462855339050293
    5. ' compute' → logprob: -2.8962855339050293
    6. ' get' → logprob: -3.0212855339050293
    7. ' process' → logprob: -3.3962855339050293
    8. ' parse' → logprob: -3.5212855339050293
    9. ' def' → logprob: -4.521285533905029
    10. ' convert' → logprob: -4.896285533905029

Token 53: '_array' (ID: 8766)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.6495403051376343
    2. '_' → logprob: -1.7745403051376343
    3. '_X' → logprob: -2.274540424346924
    4. '_N' → logprob: -3.524540424346924
    5. '_matrix' → logprob: -3.774540424346924
    6. '_output' → logprob: -4.399540424346924
    7. '_array' → logprob: -4.524540424346924
    8. '_data' → logprob: -4.899540424346924
    9. '_Z' → logprob: -4.899540424346924
    10. '_S' → logprob: -5.024540424346924

Token 54: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.025989411398768425
    2. '()' → logprob: -4.525989532470703
    3. '():
' → logprob: -5.525989532470703
    4. '(' → logprob: -5.775989532470703
    5. '_array' → logprob: -5.900989532470703
    6. '(n' → logprob: -6.775989532470703
    7. '(size' → logprob: -6.900989532470703
    8. '_input' → logprob: -7.400989532470703
    9. '_line' → logprob: -7.900989532470703
    10. '(length' → logprob: -8.025989532470703

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.24179228907451e-05
    2. 'return' → logprob: -10.750061988830566
    3. '()' → logprob: -11.250061988830566
    4. 'import' → logprob: -12.625061988830566
    5. ' return' → logprob: -12.875061988830566
    6. '```' → logprob: -12.875061988830566
    7. '(' → logprob: -13.000061988830566
    8. 'array' → logprob: -13.000061988830566
    9. '():' → logprob: -13.125061988830566
    10. 'np' → logprob: -13.250061988830566

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1520596295595169
    2. ' return' → logprob: -2.527059555053711
    3. 'return' (adapté à ' return') → logprob: -3.902059555053711
    4. ' np' → logprob: -4.152059555053711
    5. 'np' → logprob: -4.527059555053711
    6. ' parse' → logprob: -4.902059555053711
    7. 'parse' → logprob: -5.777059555053711
    8. ' input' → logprob: -6.902059555053711
    9. 'input' → logprob: -7.402059555053711
    10. 'arr' → logprob: -8.027059555053711

Token 57: ' parse' (ID: 8420)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.9876715540885925
    2. 'np' → logprob: -0.9876715540885925
    3. 'list' → logprob: -2.1126716136932373
    4. ' list' → logprob: -2.3626716136932373
    5. 'parse' → logprob: -3.4876716136932373
    6. ' parse' → logprob: -4.737671375274658
    7. '[np' → logprob: -8.737671852111816
    8. ' ' → logprob: -8.862671852111816
    9. '[]' → logprob: -9.612671852111816
    10. ' [' → logprob: -9.612671852111816

Token 58: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.7372048862162046e-05
    2. '_array' → logprob: -11.000027656555176
    3. '_int' → logprob: -12.250027656555176
    4. '_' → logprob: -13.500027656555176
    5. 'inte' → logprob: -13.875027656555176
    6. '_integer' → logprob: -14.000027656555176
    7. '_numpy' → logprob: -14.000027656555176
    8. '_arrays' → logprob: -14.000027656555176
    9. '_elements' → logprob: -16.12502670288086
    10. '_from' → logprob: -16.37502670288086

Token 59: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0012286811834201217
    2. 't' → logprob: -7.7512288093566895
    3. 'gers' → logprob: -7.7512288093566895
    4. '_te' → logprob: -8.876228332519531
    5. 'eg' → logprob: -9.626228332519531
    6. 'put' → logprob: -9.626228332519531
    7. 'teg' → logprob: -10.626228332519531
    8. 'teger' → logprob: -11.001228332519531
    9. '_' → logprob: -11.001228332519531
    10. '```' → logprob: -11.251228332519531

Token 60: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -8.172891830326989e-05
    2. 'gr' → logprob: -10.375082015991211
    3. 'rs' → logprob: -10.625082015991211
    4. 'ger' → logprob: -11.500082015991211
    5. 'ers' → logprob: -11.625082015991211
    6. 'r' → logprob: -12.375082015991211
    7. 'g' → logprob: -14.125082015991211
    8. '_' → logprob: -14.375082015991211
    9. 'get' → logprob: -14.875082015991211
    10. 'ters' → logprob: -15.000082015991211

Token 61: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.318681188422488e-05
    2. 'from' → logprob: -11.50001335144043
    3. '_for' → logprob: -14.37501335144043
    4. '_to' → logprob: -14.62501335144043
    5. '```' → logprob: -14.62501335144043
    6. '_line' → logprob: -14.75001335144043
    7. '_FROM' → logprob: -15.25001335144043
    8. '_f' → logprob: -15.37501335144043
    9. 'From' → logprob: -15.37501335144043
    10. '_array' → logprob: -16.00001335144043

Token 62: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.014179266057908535
    2. 'input' → logprob: -4.264179229736328
    3. 'get' → logprob: -11.514179229736328
    4. ' input' → logprob: -13.889179229736328
    5. '_list' → logprob: -13.889179229736328
    6. 'Input' → logprob: -14.389179229736328
    7. 'list' → logprob: -14.639179229736328
    8. '_array' → logprob: -14.764179229736328
    9. '```' → logprob: -14.764179229736328
    10. '_' → logprob: -14.764179229736328

Token 63: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.0005197895807214081
    2. '(input' → logprob: -7.875519752502441
    3. '(_' → logprob: -9.875519752502441
    4. '(' → logprob: -10.000519752502441
    5. '_(' → logprob: -10.750519752502441
    6. ' (' → logprob: -11.125519752502441
    7. '```' → logprob: -13.875519752502441
    8. '_' → logprob: -14.000519752502441
    9. '("("' → logprob: -14.625519752502441
    10. '((' → logprob: -14.625519752502441

Token 64: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.003328614868223667
    2. '_array' → logprob: -5.753328800201416
    3. 'input' → logprob: -8.878328323364258
    4. '_line' → logprob: -13.003328323364258
    5. '_' → logprob: -13.128328323364258
    6. 'array' → logprob: -13.378328323364258
    7. '(input' → logprob: -13.628328323364258
    8. '_in' → logprob: -13.878328323364258
    9. '```' → logprob: -14.128328323364258
    10. ')' → logprob: -14.753328323364258

Token 65: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10040055215358734
    2. '()' → logprob: -2.600400447845459
    3. ')' → logprob: -3.850400447845459
    4. ' ())' → logprob: -12.850400924682617
    5. '();)' → logprob: -13.225400924682617
    6. '()))' → logprob: -13.225400924682617
    7. '(' → logprob: -13.850400924682617
    8. '())
' → logprob: -14.350400924682617
    9. '()]' → logprob: -14.600400924682617
    10. '()
' → logprob: -15.225400924682617

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00039385363925248384
    2. '```' → logprob: -8.875393867492676
    3. 'X' → logprob: -9.500393867492676
    4. '\' → logprob: -9.875393867492676
    5. 'x' → logprob: -10.125393867492676
    6. '#' → logprob: -10.375393867492676
    7. 'for' → logprob: -11.875393867492676
    8. '
' → logprob: -11.875393867492676
    9. 'de' → logprob: -12.000393867492676
    10. 'data' → logprob: -12.125393867492676

Token 67: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.2084624767303467
    2. ' calculate' → logprob: -1.3334624767303467
    3. ' solve' → logprob: -1.9584624767303467
    4. ' compute' → logprob: -2.3334624767303467
    5. ' process' → logprob: -2.5834624767303467
    6. ' find' → logprob: -2.7084624767303467
    7. ' count' → logprob: -4.083462715148926
    8. ' space' → logprob: -4.833462715148926
    9. ' max' → logprob: -5.333462715148926
    10. ' def' → logprob: -5.583462715148926

Token 68: '_A' (ID: 6829)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.2310545444488525
    2. '_array' → logprob: -1.3560545444488525
    3. '_' → logprob: -2.8560545444488525
    4. '_output' → logprob: -2.8560545444488525
    5. '_arrays' → logprob: -2.8560545444488525
    6. '_matrix' → logprob: -3.1060545444488525
    7. '_answer' → logprob: -3.6060545444488525
    8. '_results' → logprob: -3.7310545444488525
    9. '_input' → logprob: -3.7310545444488525
    10. '_N' → logprob: -4.231054306030273

Token 69: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08707746118307114
    2. '_array' → logprob: -2.9620773792266846
    3. '()' → logprob: -3.8370773792266846
    4. '_' → logprob: -5.212077617645264
    5. '():
' → logprob: -5.837077617645264
    6. '_list' → logprob: -7.462077617645264
    7. '(' → logprob: -9.087077140808105
    8. '_values' → logprob: -9.087077140808105
    9. '()[' → logprob: -9.212077140808105
    10. '_arrays' → logprob: -9.212077140808105

Token 70: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.021275503560900688
    2. '()' → logprob: -4.146275520324707
    3. '():
' → logprob: -6.396275520324707
    4. ' ():' → logprob: -6.646275520324707
    5. '   ' → logprob: -7.146275520324707
    6. '(' → logprob: -7.271275520324707
    7. ' ()' → logprob: -8.021275520324707
    8. '[]' → logprob: -8.896275520324707
    9. ':' → logprob: -8.896275520324707
    10. '()[' → logprob: -9.771275520324707

Token 71: ' return' (ID: 622)
  Prédit: '[np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[np' → logprob: -0.5510725378990173
    2. '[get' → logprob: -0.9260725378990173
    3. '[]' → logprob: -4.176072597503662
    4. '[' → logprob: -5.176072597503662
    5. '[n' → logprob: -6.426072597503662
    6. 'np' → logprob: -6.426072597503662
    7. '[array' → logprob: -7.051072597503662
    8. '[]
' → logprob: -7.676072597503662
    9. '[int' → logprob: -7.801072597503662
    10. '[list' → logprob: -8.051072120666504

Token 72: ' get' (ID: 717)
  Prédit: '[get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -1.414729356765747
    2. ' np' → logprob: -1.664729356765747
    3. 'parse' → logprob: -1.789729356765747
    4. 'np' → logprob: -2.289729356765747
    5. ' parse' → logprob: -2.664729356765747
    6. ' get' → logprob: -2.664729356765747
    7. ' [' → logprob: -2.789729356765747
    8. 'get' → logprob: -2.914729356765747
    9. '[np' → logprob: -4.039729118347168
    10. '[' → logprob: -4.164729118347168

Token 73: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0017741884803399444
    2. '_A' → logprob: -6.876774311065674
    3. '_' → logprob: -7.751774311065674
    4. '_Array' → logprob: -8.501773834228516
    5. '_ARRAY' → logprob: -10.001773834228516
    6. '_X' → logprob: -10.001773834228516
    7. '_arrays' → logprob: -12.251773834228516
    8. '_input' → logprob: -12.376773834228516
    9. '_arr' → logprob: -13.126773834228516
    10. 'Array' → logprob: -13.126773834228516

Token 74: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5776860184123507e-06
    2. '()
' → logprob: -14.00000286102295
    3. '()`' → logprob: -15.25000286102295
    4. '()

' → logprob: -15.37500286102295
    5. '(' → logprob: -15.50000286102295
    6. '()"' → logprob: -15.75000286102295
    7. '()(' → logprob: -15.75000286102295
    8. '()]' → logprob: -15.87500286102295
    9. ' ()' → logprob: -16.125001907348633
    10. '()<' → logprob: -16.250001907348633

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001565449871122837
    2. '#' → logprob: -7.751565456390381
    3. '```' → logprob: -8.126564979553223
    4. '[' → logprob: -8.501564979553223
    5. '<|end|>' → logprob: -8.626564979553223
    6. '\' → logprob: -9.251564979553223
    7. '[]' → logprob: -9.251564979553223
    8. '(' → logprob: -10.251564979553223
    9. '<|end|>' → logprob: -10.626564979553223
    10. 'X' → logprob: -10.626564979553223

Token 76: ' get' (ID: 717)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8898328542709351
    2. ' get' → logprob: -0.8898328542709351
    3. ' main' → logprob: -2.3898329734802246
    4. ' ' → logprob: -3.7648329734802246
    5. ' _' → logprob: -4.764832973480225
    6. 'get' → logprob: -4.764832973480225
    7. ' calculate' → logprob: -5.014832973480225
    8. ' find' → logprob: -5.389832973480225
    9. ' parse' → logprob: -5.389832973480225
    10. ' process' → logprob: -5.639832973480225

Token 77: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.035146016627550125
    2. '_X' → logprob: -4.910146236419678
    3. '_K' → logprob: -5.160146236419678
    4. '_C' → logprob: -5.785146236419678
    5. '_Z' → logprob: -5.785146236419678
    6. '_A' → logprob: -5.785146236419678
    7. '_Y' → logprob: -6.160146236419678
    8. '_V' → logprob: -6.535146236419678
    9. '_S' → logprob: -6.535146236419678
    10. '_T' → logprob: -6.785146236419678

Token 78: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014692598779220134
    2. '():' → logprob: -9.000146865844727
    3. 'def' → logprob: -12.375146865844727
    4. '()>' → logprob: -12.375146865844727
    5. ' ()' → logprob: -13.000146865844727
    6. '(' → logprob: -13.375146865844727
    7. '()<' → logprob: -13.625146865844727
    8. '()]' → logprob: -13.750146865844727
    9. '()">' → logprob: -13.875146865844727
    10. '`()' → logprob: -14.125146865844727

Token 79: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4085274636745453
    2. 'return' → logprob: -1.2835274934768677
    3. 'get' → logprob: -3.158527374267578
    4. ' return' → logprob: -4.658527374267578
    5. 'def' → logprob: -5.783527374267578
    6. ' get' → logprob: -6.658527374267578
    7. '   ' → logprob: -7.158527374267578
    8. ')' → logprob: -8.033527374267578
    9. '(get' → logprob: -8.158527374267578
    10. '(' → logprob: -9.283527374267578

Token 80: ' return' (ID: 622)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7073704600334167
    2. ' get' → logprob: -0.7073704600334167
    3. 'return' (adapté à ' return') → logprob: -4.957370281219482
    4. ' return' → logprob: -4.957370281219482
    5. 'def' → logprob: -10.45737075805664
    6. ' ' → logprob: -11.08237075805664
    7. '(get' → logprob: -11.83237075805664
    8. 'eturn' → logprob: -12.58237075805664
    9. 'A' → logprob: -14.20737075805664
    10. '()' → logprob: -14.33237075805664

Token 81: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.029753033071756363
    2. ' get' → logprob: -3.5297529697418213
    3. '(get' → logprob: -13.529752731323242
    4. ' ' → logprob: -15.404752731323242
    5. 'A' → logprob: -15.654752731323242
    6. '[get' → logprob: -15.904752731323242
    7. '	get' → logprob: -16.154752731323242
    8. '_get' → logprob: -16.279752731323242
    9. '[]' → logprob: -16.404752731323242
    10. '  ' → logprob: -16.404752731323242

Token 82: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.27339327335357666
    2. '_A' → logprob: -1.5233932733535767
    3. '_B' → logprob: -3.898393154144287
    4. '_Array' → logprob: -7.648393154144287
    5. '_' → logprob: -8.148393630981445
    6. '_ARRAY' → logprob: -9.023393630981445
    7. 'array' → logprob: -10.523393630981445
    8. 'Array' → logprob: -10.523393630981445
    9. '__' → logprob: -12.148393630981445
    10. '_arrays' → logprob: -12.523393630981445

Token 83: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3915141355246305e-05
    2. '(' → logprob: -11.37502384185791
    3. '()(' → logprob: -12.00002384185791
    4. '`()' → logprob: -13.00002384185791
    5. '()
' → logprob: -13.75002384185791
    6. ' ()' → logprob: -14.62502384185791
    7. '()

' → logprob: -14.62502384185791
    8. '()<' → logprob: -14.75002384185791
    9. '()`' → logprob: -15.00002384185791
    10. ']()' → logprob: -16.000024795532227

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001454955490771681
    2. '
' → logprob: -9.75014591217041
    3. '<|end|>' → logprob: -9.87514591217041
    4. '```' → logprob: -11.50014591217041
    5. '#' → logprob: -11.75014591217041
    6. '<|end|>' → logprob: -12.62514591217041
    7. 'import' → logprob: -12.87514591217041
    8. '\' → logprob: -12.87514591217041
    9. '

' → logprob: -13.37514591217041
    10. '[' → logprob: -13.50014591217041

Token 85: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12849177420139313
    2. ' compute' → logprob: -3.3784918785095215
    3. ' solve' → logprob: -3.6284918785095215
    4. ' calculate' → logprob: -3.7534918785095215
    5. ' find' → logprob: -4.3784918785095215
    6. ' process' → logprob: -4.7534918785095215
    7. ' get' → logprob: -5.1284918785095215
    8. ' check' → logprob: -6.3784918785095215
    9. ' compare' → logprob: -6.5034918785095215
    10. ' def' → logprob: -6.7534918785095215

Token 86: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.02750183828175068
    2. '_A' → logprob: -4.277502059936523
    3. '_' → logprob: -4.777502059936523
    4. '_X' → logprob: -5.777502059936523
    5. '_Z' → logprob: -7.527502059936523
    6. '_K' → logprob: -7.777502059936523
    7. '_S' → logprob: -8.152502059936523
    8. '_Y' → logprob: -8.402502059936523
    9. '_B' → logprob: -9.652502059936523
    10. '_V' → logprob: -10.277502059936523

Token 87: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01655977964401245
    2. '()' → logprob: -4.141559600830078
    3. '_' → logprob: -7.641559600830078
    4. '(' → logprob: -11.266559600830078
    5. '():
' → logprob: -11.391559600830078
    6. '()>' → logprob: -11.891559600830078
    7. 'def' → logprob: -13.516559600830078
    8. '()">' → logprob: -13.516559600830078
    9. ':' → logprob: -14.016559600830078
    10. '(){' → logprob: -14.141559600830078

Token 88: '   ' (ID: 271)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.8942910432815552
    2. ' return' → logprob: -1.2692910432815552
    3. 'get' → logprob: -2.0192909240722656
    4. 'return' → logprob: -2.1442909240722656
    5. '   ' → logprob: -2.8942909240722656
    6. '()' → logprob: -6.019290924072266
    7. ' ' → logprob: -6.519290924072266
    8. 'def' → logprob: -8.019290924072266
    9. '(get' → logprob: -8.394290924072266
    10. '  ' → logprob: -9.269290924072266

Token 89: ' return' (ID: 622)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5660046935081482
    2. ' get' → logprob: -1.316004753112793
    3. 'return' (adapté à ' return') → logprob: -2.441004753112793
    4. ' return' → logprob: -2.566004753112793
    5. ' ' → logprob: -10.316004753112793
    6. 'def' → logprob: -10.816004753112793
    7. '   ' → logprob: -11.441004753112793
    8. 'eturn' → logprob: -11.441004753112793
    9. '  ' → logprob: -12.191004753112793
    10. '(get' → logprob: -12.441004753112793

Token 90: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1008833572268486
    2. ' get' → logprob: -2.3508832454681396
    3. 'parse' → logprob: -7.725883483886719
    4. '[]' → logprob: -8.975883483886719
    5. '[get' → logprob: -10.475883483886719
    6. ' parse' → logprob: -10.600883483886719
    7. ' []' → logprob: -10.850883483886719
    8. ' ' → logprob: -11.725883483886719
    9. '(get' → logprob: -11.850883483886719
    10. '  ' → logprob: -12.350883483886719

Token 91: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.2224622219800949
    2. '_C' → logprob: -2.2224621772766113
    3. '_A' → logprob: -2.4724621772766113
    4. 'array' → logprob: -5.347462177276611
    5. '_B' → logprob: -7.472462177276611
    6. 'Array' → logprob: -7.472462177276611
    7. 'A' → logprob: -7.847462177276611
    8. '_input' → logprob: -8.72246265411377
    9. '_ARRAY' → logprob: -9.47246265411377
    10. 'C' → logprob: -9.97246265411377

Token 92: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.4868770196917467e-05
    2. '(' → logprob: -11.250024795532227
    3. '()
' → logprob: -12.750024795532227
    4. '()(' → logprob: -13.375024795532227
    5. '()<' → logprob: -13.625024795532227
    6. '()

' → logprob: -13.625024795532227
    7. ' ()' → logprob: -14.125024795532227
    8. '()>' → logprob: -14.375024795532227
    9. '()+' → logprob: -14.625024795532227
    10. '())' → logprob: -14.750024795532227

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026530884206295013
    2. 'X' → logprob: -3.6515309810638428
    3. 'if' → logprob: -9.651531219482422
    4. 'import' → logprob: -9.901531219482422
    5. '#' → logprob: -10.276531219482422
    6. '```' → logprob: -11.151531219482422
    7. 'n' → logprob: -11.276531219482422
    8. 'x' → logprob: -11.401531219482422
    9. 'N' → logprob: -11.401531219482422
    10. 'A' → logprob: -12.026531219482422

Token 94: ' reverse' (ID: 18199)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3436439335346222
    2. ' solve' → logprob: -1.8436439037322998
    3. ' process' → logprob: -2.5936439037323
    4. ' calculate' → logprob: -3.7186439037323
    5. ' compute' → logprob: -3.8436439037323
    6. ' find' → logprob: -5.718644142150879
    7. ' multiply' → logprob: -6.343644142150879
    8. 'solve' → logprob: -6.468644142150879
    9. ' solution' → logprob: -6.843644142150879
    10. ' max' → logprob: -7.218644142150879

Token 95: '_sort' (ID: 43815)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11309094727039337
    2. '_array' → logprob: -2.363090991973877
    3. '_string' → logprob: -4.613090991973877
    4. '_list' → logprob: -7.238090991973877
    5. '_str' → logprob: -8.113090515136719
    6. '_arrays' → logprob: -8.238090515136719
    7. '_a' → logprob: -8.988090515136719
    8. '_s' → logprob: -9.113090515136719
    9. '_space' → logprob: -9.363090515136719
    10. '_arr' → logprob: -9.363090515136719

Token 96: '_array' (ID: 8766)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.29744648933410645
    2. '_' → logprob: -2.2974464893341064
    3. '(' → logprob: -2.5474464893341064
    4. 'ing' → logprob: -3.4224464893341064
    5. '_ed' → logprob: -4.172446250915527
    6. '_e' → logprob: -5.047446250915527
    7. '_array' → logprob: -5.297446250915527
    8. '_list' → logprob: -5.422446250915527
    9. '_ing' → logprob: -5.797446250915527
    10. '(_' → logprob: -5.797446250915527

Token 97: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0418885238468647
    2. '_' → logprob: -4.41688871383667
    3. 's' → logprob: -4.79188871383667
    4. '(A' → logprob: -5.04188871383667
    5. '(arr' → logprob: -5.16688871383667
    6. '()' → logprob: -6.16688871383667
    7. '(a' → logprob: -6.41688871383667
    8. '_(' → logprob: -7.04188871383667
    9. '(array' → logprob: -7.16688871383667
    10. 'ed' → logprob: -7.29188871383667

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004731652792543173
    2. ')' → logprob: -5.37973165512085
    3. '):
' → logprob: -9.254731178283691
    4. ' ):' → logprob: -12.129731178283691
    5. '[]):' → logprob: -13.504731178283691
    6. '_' → logprob: -13.629731178283691
    7. ')):' → logprob: -13.629731178283691
    8. ',' → logprob: -14.254731178283691
    9. '(' → logprob: -14.254731178283691
    10. ')：' → logprob: -14.379731178283691

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9315497875213623
    2. ':' → logprob: -1.0565497875213623
    3. 'arr' → logprob: -2.0565497875213623
    4. '[:]' → logprob: -2.3065497875213623
    5. '(arr' → logprob: -3.9315497875213623
    6. ':
' → logprob: -5.556550025939941
    7. ':return' → logprob: -6.306550025939941
    8. ' arr' → logprob: -6.556550025939941
    9. '):' → logprob: -7.306550025939941
    10. '	arr' → logprob: -7.556550025939941

Token 100: ' arr' (ID: 1724)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3179992735385895
    2. ' return' → logprob: -1.317999243736267
    3. '   ' → logprob: -5.942999362945557
    4. 'arr' (adapté à ' arr') → logprob: -6.192999362945557
    5. ' arr' → logprob: -9.817998886108398
    6. 'sorted' → logprob: -13.442998886108398
    7. '```' → logprob: -14.192998886108398
    8. '	return' → logprob: -14.317998886108398
    9. 'np' → logprob: -15.192998886108398
    10. ' ' → logprob: -15.317998886108398

Token 101: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.31344330310821533
    2. '.' → logprob: -1.3134433031082153
    3. '.reverse' → logprob: -8.938443183898926
    4. '.=' → logprob: -10.563443183898926
    5. 'sort' → logprob: -11.563443183898926
    6. '[:]' → logprob: -12.313443183898926
    7. '=' → logprob: -12.563443183898926
    8. '[::-' → logprob: -12.938443183898926
    9. '_sorted' → logprob: -14.063443183898926
    10. '.sorted' → logprob: -14.438443183898926

Token 102: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0002582402084954083
    2. '(' → logprob: -8.500258445739746
    3. 'reverse' → logprob: -9.875258445739746
    4. '(key' → logprob: -13.500258445739746
    5. '()' → logprob: -14.250258445739746
    6. '_reverse' → logprob: -14.500258445739746
    7. '.reverse' → logprob: -15.000258445739746
    8. '(
' → logprob: -16.00025749206543
    9. ' reverse' → logprob: -16.37525749206543
    10. 'Reverse' → logprob: -16.50025749206543

Token 103: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.007416844367980957
    2. ')' → logprob: -5.257416725158691
    3. '=' → logprob: -6.132416725158691
    4. ')=' → logprob: -12.507416725158691
    5. '=False' → logprob: -12.632416725158691
    6. '(True' → logprob: -13.382416725158691
    7. ',' → logprob: -15.382416725158691
    8. ' =' → logprob: -15.882416725158691
    9. '(' → logprob: -16.132417678833008
    10. '=true' → logprob: -17.007417678833008

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.25
    3. ')return' → logprob: -18.0
    4. ' )' → logprob: -18.375
    5. '),' → logprob: -19.375
    6. ')

' → logprob: -19.625
    7. '))' → logprob: -20.375
    8. ')`' → logprob: -20.5
    9. '}' → logprob: -20.875
    10. '<|end|>' → logprob: -21.0

Token 105: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.742886483669281
    2. '<|end|>' → logprob: -1.1178865432739258
    3. 'return' (adapté à ' return') → logprob: -1.9928865432739258
    4. '   ' → logprob: -3.367886543273926
    5. '\n' → logprob: -4.617886543273926
    6. 'def' → logprob: -4.867886543273926
    7. ' return' → logprob: -5.367886543273926
    8. ' ' → logprob: -7.117886543273926
    9. '    
' → logprob: -7.367886543273926
    10. '<|end|>' → logprob: -7.492886543273926

Token 107: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.2014218121767044
    2. 'arr' → logprob: -1.701421856880188
    3. '	arr' → logprob: -12.701421737670898
    4. '(arr' → logprob: -12.951421737670898
    5. '[arr' → logprob: -13.826421737670898
    6. ' None' → logprob: -14.201421737670898
    7. 'None' → logprob: -14.326421737670898
    8. '<arr' → logprob: -15.201421737670898
    9. '_arr' → logprob: -15.326421737670898
    10. ' ' → logprob: -15.701421737670898

Token 108: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38138166069984436
    2. '<|end|>' → logprob: -1.256381630897522
    3. '
' → logprob: -3.8813817501068115
    4. '

' → logprob: -5.381381511688232
    5. '\n' → logprob: -6.006381511688232
    6. '```' → logprob: -6.256381511688232
    7. '\' → logprob: -6.881381511688232
    8. '#' → logprob: -7.256381511688232
    9. '<|end|>' → logprob: -8.13138198852539
    10. ' def' → logprob: -8.63138198852539

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003607296966947615
    2. '<|end|>' → logprob: -8.375360488891602
    3. '
' → logprob: -9.625360488891602
    4. '```' → logprob: -10.500360488891602
    5. 'import' → logprob: -11.125360488891602
    6. '#' → logprob: -12.000360488891602
    7. '

' → logprob: -12.250360488891602
    8. '<|end|>' → logprob: -13.000360488891602
    9. 'from' → logprob: -13.375360488891602
    10. '\' → logprob: -13.625360488891602

Token 110: ' min' (ID: 1349)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.41877293586730957
    2. ' combine' → logprob: -2.5437729358673096
    3. ' max' → logprob: -2.6687729358673096
    4. ' reverse' → logprob: -2.9187729358673096
    5. ' find' → logprob: -3.7937729358673096
    6. ' maximize' → logprob: -4.0437726974487305
    7. ' solve' → logprob: -4.2937726974487305
    8. ' calculate' → logprob: -4.2937726974487305
    9. ' merge' → logprob: -4.4187726974487305
    10. ' process' → logprob: -4.6687726974487305

Token 111: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2562623620033264
    2. '(' → logprob: -1.7562623023986816
    3. '_sum' → logprob: -4.631262302398682
    4. '(a' → logprob: -4.756262302398682
    5. '()' → logprob: -5.006262302398682
    6. '_array' → logprob: -5.256262302398682
    7. '_value' → logprob: -5.506262302398682
    8. 'imum' → logprob: -5.881262302398682
    9. 'imize' → logprob: -6.006262302398682
    10. 'imax' → logprob: -6.756262302398682

Token 112: '(a' (ID: 6271)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.9550944566726685
    2. '(' → logprob: -1.0800944566726685
    3. '()' → logprob: -2.205094337463379
    4. '(a' → logprob: -2.580094337463379
    5. '(array' → logprob: -4.080094337463379
    6. '(arr' → logprob: -4.455094337463379
    7. '(
' → logprob: -4.580094337463379
    8. 'ues' → logprob: -5.455094337463379
    9. '():' → logprob: -5.455094337463379
    10. '(u' → logprob: -5.455094337463379

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24463434517383575
    2. '(a' → logprob: -1.7446343898773193
    3. ',a' → logprob: -3.9946343898773193
    4. ')' → logprob: -4.99463415145874
    5. ',)' → logprob: -5.11963415145874
    6. '(' → logprob: -5.61963415145874
    7. ' ,' → logprob: -6.24463415145874
    8. '):' → logprob: -6.49463415145874
    9. ',_' → logprob: -7.24463415145874
    10. 'a' → logprob: -7.24463415145874

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043001025915145874
    2. ' b' → logprob: -3.1680009365081787
    3. '*b' → logprob: -14.793001174926758
    4. ' ' → logprob: -14.918001174926758
    5. ')b' → logprob: -15.043001174926758
    6. ')' → logprob: -15.168001174926758
    7. '*' → logprob: -15.793001174926758
    8. '	b' → logprob: -16.293001174926758
    9. '   ' → logprob: -16.543001174926758
    10. '  ' → logprob: -17.293001174926758

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011016374919563532
    2. '):
' → logprob: -6.876101493835449
    3. ')' → logprob: -9.87610149383545
    4. ' ):' → logprob: -11.75110149383545
    5. ',' → logprob: -11.87610149383545
    6. ':' → logprob: -13.87610149383545
    7. '):
' → logprob: -14.62610149383545
    8. ')):' → logprob: -15.87610149383545
    9. '   ' → logprob: -16.001102447509766
    10. '):

' → logprob: -16.126102447509766

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6976186633110046
    2. ' return' → logprob: -0.8226186633110046
    3. 'return' → logprob: -2.8226187229156494
    4. ' min' → logprob: -6.69761848449707
    5. ':' → logprob: -7.57261848449707
    6. 'a' → logprob: -8.07261848449707
    7. 'min' → logprob: -8.19761848449707
    8. ':return' → logprob: -8.19761848449707
    9. ':
' → logprob: -8.44761848449707
    10. ' a' → logprob: -8.69761848449707

Token 117: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06703468412160873
    2. 'return' (adapté à ' return') → logprob: -2.8170347213745117
    3. '   ' → logprob: -5.317034721374512
    4. ' if' → logprob: -9.442034721374512
    5. ' min' → logprob: -10.317034721374512
    6. 'if' → logprob: -10.942034721374512
    7. ' a' → logprob: -11.817034721374512
    8. '    ' → logprob: -12.442034721374512
    9. 'min' → logprob: -13.317034721374512
    10. 'a' → logprob: -13.442034721374512

Token 118: ' min' (ID: 1349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5882935523986816
    2. ' min' → logprob: -1.3382935523986816
    3. 'min' → logprob: -2.0882935523986816
    4. ' a' → logprob: -2.8382935523986816
    5. '   ' → logprob: -12.338293075561523
    6. ' ' → logprob: -13.213293075561523
    7. '	min' → logprob: -13.963293075561523
    8. '(min' → logprob: -14.213293075561523
    9. 'np' → logprob: -15.088293075561523
    10. '[min' → logprob: -15.338293075561523

Token 119: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20141790807247162
    2. '(' → logprob: -1.7014179229736328
    3. '(
' → logprob: -12.826417922973633
    4. '((' → logprob: -14.326417922973633
    5. '(min' → logprob: -14.701417922973633
    6. ' (' → logprob: -15.576417922973633
    7. '(abs' → logprob: -15.826417922973633
    8. '()' → logprob: -16.201417922973633
    9. '(

' → logprob: -16.201417922973633
    10. '(max' → logprob: -16.201417922973633

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007628519553691149
    2. ',b' → logprob: -5.007628440856934
    3. ' ,' → logprob: -7.007628440856934
    4. 'b' → logprob: -11.882628440856934
    5. ',
' → logprob: -14.882628440856934
    6. ' b' → logprob: -15.382628440856934
    7. ')' → logprob: -15.757628440856934
    8. ' ' → logprob: -17.13262939453125
    9. '   ' → logprob: -18.25762939453125
    10. 'a' → logprob: -18.50762939453125

Token 121: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750604182481766
    2. ' b' → logprob: -3.5297505855560303
    3. ')b' → logprob: -15.77975082397461
    4. ' ' → logprob: -16.90475082397461
    5. '   ' → logprob: -17.27975082397461
    6. ')' → logprob: -18.02975082397461
    7. '	b' → logprob: -18.77975082397461
    8. ' ' → logprob: -19.27975082397461
    9. '    ' → logprob: -19.77975082397461
    10. '  ' → logprob: -20.02975082397461

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -17.125
    4. '}' → logprob: -17.25
    5. ')return' → logprob: -18.875
    6. '))' → logprob: -18.875
    7. '),' → logprob: -19.375
    8. ')

' → logprob: -19.75
    9. ')}' → logprob: -19.875
    10. ')`' → logprob: -20.25

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7017732262611389
    2. '

' → logprob: -0.9517732262611389
    3. '
' → logprob: -2.201773166656494
    4. '<|end|>' → logprob: -4.951773166656494
    5. '\n' → logprob: -9.201773643493652
    6. '
' → logprob: -9.201773643493652
    7. '```' → logprob: -9.201773643493652
    8. ' def' → logprob: -9.701773643493652
    9. '<|end|>' → logprob: -10.076773643493652
    10. '\' → logprob: -10.576773643493652

Token 124: ' compute' (ID: 23864)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6572476625442505
    2. ' main' → logprob: -0.9072476625442505
    3. ' min' → logprob: -3.907247543334961
    4. ' calculate' → logprob: -4.532247543334961
    5. ' solve' → logprob: -4.657247543334961
    6. 'max' → logprob: -4.782247543334961
    7. ' sum' → logprob: -5.282247543334961
    8. ' combine' → logprob: -5.282247543334961
    9. ' process' → logprob: -5.907247543334961
    10. ' compute' → logprob: -6.157247543334961

Token 125: '_bounds' (ID: 90408)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6386732459068298
    2. '_max' → logprob: -2.1386733055114746
    3. '(' → logprob: -2.2636733055114746
    4. '_sum' → logprob: -2.5136733055114746
    5. '_total' → logprob: -3.2636733055114746
    6. '_array' → logprob: -4.013673305511475
    7. '_value' → logprob: -4.263673305511475
    8. '_result' → logprob: -4.638673305511475
    9. '_amount' → logprob: -4.638673305511475
    10. '_values' → logprob: -4.638673305511475

Token 126: '_i' (ID: 10853)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48118773102760315
    2. '():' → logprob: -0.9811877012252808
    3. '(a' → logprob: -5.73118782043457
    4. '(X' → logprob: -6.10618782043457
    5. '(x' → logprob: -8.10618782043457
    6. '(A' → logprob: -8.73118782043457
    7. '()' → logprob: -8.85618782043457
    8. '(arr' → logprob: -9.23118782043457
    9. '(params' → logprob: -9.23118782043457
    10. '(_' → logprob: -9.73118782043457

Token 127: '(K' (ID: 28797)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3086290955543518
    2. '(' → logprob: -2.683629035949707
    3. '(j' → logprob: -2.933629035949707
    4. '_j' → logprob: -3.308629035949707
    5. 'nd' → logprob: -3.558629035949707
    6. 'n' → logprob: -3.808629035949707
    7. '(N' → logprob: -4.933629035949707
    8. '()' → logprob: -4.933629035949707
    9. '(x' → logprob: -4.933629035949707
    10. '(i' → logprob: -5.058629035949707

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014012116938829422
    2. '):' → logprob: -4.389012336730957
    3. ' ,' → logprob: -7.014012336730957
    4. ')' → logprob: -7.889012336730957
    5. ' ):' → logprob: -9.639012336730957
    6. ',i' → logprob: -9.764012336730957
    7. ' ' → logprob: -11.451512336730957
    8. ',K' → logprob: -11.826512336730957
    9. ',N' → logprob: -11.826512336730957
    10. '):
' → logprob: -11.951512336730957

Token 129: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.7253113985061646
    2. 'X' → logprob: -0.8503113985061646
    3. ' A' → logprob: -4.225311279296875
    4. 'A' → logprob: -4.600311279296875
    5. 'i' → logprob: -4.725311279296875
    6. ' i' → logprob: -4.725311279296875
    7. ' Z' → logprob: -4.725311279296875
    8. 'Z' → logprob: -4.850311279296875
    9. 'N' → logprob: -5.350311279296875
    10. ' N' → logprob: -5.350311279296875

Token 130: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0191767830401659
    2. '):' → logprob: -4.019176959991455
    3. ')' → logprob: -7.644176959991455
    4. ',Y' → logprob: -8.769176483154297
    5. ' ,' → logprob: -9.269176483154297
    6. '_,' → logprob: -9.394176483154297
    7. 'Y' → logprob: -9.644176483154297
    8. '_' → logprob: -10.769176483154297
    9. ',
' → logprob: -10.894176483154297
    10. '):
' → logprob: -11.019176483154297

Token 131: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06825041770935059
    2. ':
' → logprob: -2.9432504177093506
    3. '   ' → logprob: -4.81825065612793
    4. '):' → logprob: -6.19325065612793
    5. ',' → logprob: -6.31825065612793
    6. ' :' → logprob: -7.94325065612793
    7. '():' → logprob: -8.69325065612793
    8. '):
' → logprob: -8.81825065612793
    9. ' =' → logprob: -8.94325065612793
    10. ' :
' → logprob: -9.19325065612793

Token 132: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5514663457870483
    2. 'return' (adapté à ' return') → logprob: -1.3014663457870483
    3. ' min' → logprob: -3.051466464996338
    4. '   ' → logprob: -3.176466464996338
    5. 'min' → logprob: -3.926466464996338
    6. ' max' → logprob: -4.176466464996338
    7. ' i' → logprob: -4.551466464996338
    8. 'max' → logprob: -4.801466464996338
    9. 'i' → logprob: -6.426466464996338
    10. 'import' → logprob: -6.551466464996338

Token 133: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.45186930894851685
    2. 'max' → logprob: -2.326869249343872
    3. 'K' → logprob: -2.701869249343872
    4. ' min' → logprob: -2.951869249343872
    5. '(min' → logprob: -3.201869249343872
    6. '(K' → logprob: -3.826869249343872
    7. '0' → logprob: -4.201869487762451
    8. ' K' → logprob: -4.451869487762451
    9. '(' → logprob: -4.451869487762451
    10. ' (' → logprob: -4.701869487762451

Token 134: '_val' (ID: 13694)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.043744802474975586
    2. '_val' → logprob: -3.5437448024749756
    3. '(' → logprob: -4.668745040893555
    4. '(X' → logprob: -5.668745040893555
    5. 'Val' → logprob: -7.168745040893555
    6. '(val' → logprob: -9.418745040893555
    7. '((' → logprob: -9.418745040893555
    8. 'val' → logprob: -10.418745040893555
    9. '(k' → logprob: -10.918745040893555
    10. '<|end|>' → logprob: -11.293745040893555

Token 135: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0018264309037476778
    2. '(' → logprob: -6.376826286315918
    3. '(X' → logprob: -9.376826286315918
    4. '((' → logprob: -10.626826286315918
    5. '(k' → logprob: -12.001826286315918
    6. '(KERN' → logprob: -12.751826286315918
    7. ' (' → logprob: -13.126826286315918
    8. '<|end|>' → logprob: -13.376826286315918
    9. '(i' → logprob: -14.501826286315918
    10. '(len' → logprob: -14.876826286315918

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0410371795296669
    2. ' ,' → logprob: -3.291037082672119
    3. ',X' → logprob: -6.041037082672119
    4. ' ' → logprob: -7.916037082672119
    5. ' X' → logprob: -9.416037559509277
    6. 'X' → logprob: -9.791037559509277
    7. ',
' → logprob: -9.916037559509277
    8. ')' → logprob: -11.541037559509277
    9. '1' → logprob: -11.791037559509277
    10. '-' → logprob: -11.916037559509277

Token 137: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.014290434308350086
    2. 'X' → logprob: -4.2642903327941895
    3. ' ' → logprob: -9.139290809631348
    4. ' ' → logprob: -11.639290809631348
    5. '	X' → logprob: -11.764290809631348
    6. ')' → logprob: -13.264290809631348
    7. ' 
' → logprob: -14.764290809631348
    8. '>X' → logprob: -16.01428985595703
    9. '[' → logprob: -16.13928985595703
    10. '
' → logprob: -16.38928985595703

Token 138: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004441355704329908
    2. ' )' → logprob: -7.750443935394287
    3. ')
' → logprob: -11.875444412231445
    4. '),' → logprob: -13.375444412231445
    5. ' ' → logprob: -13.625444412231445
    6. '-' → logprob: -14.000444412231445
    7. ')

' → logprob: -14.500444412231445
    8. '))' → logprob: -14.500444412231445
    9. ')+' → logprob: -15.500444412231445
    10. '())' → logprob: -15.625444412231445

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03909478336572647
    2. '<|end|>' → logprob: -3.4140946865081787
    3. '<|end|>' → logprob: -6.289094924926758
    4. '

' → logprob: -6.914094924926758
    5. '()' → logprob: -7.164094924926758
    6. ' def' → logprob: -7.289094924926758
    7. '
' → logprob: -8.164094924926758
    8. '(' → logprob: -8.539094924926758
    9. '()

' → logprob: -8.789094924926758
    10. ')' → logprob: -9.164094924926758

Token 140: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.027061380445957184
    2. ' def' → logprob: -4.277061462402344
    3. 'compute' → logprob: -5.652061462402344
    4. '_' → logprob: -6.027061462402344
    5. ' get' → logprob: -6.027061462402344
    6. '_compute' → logprob: -6.277061462402344
    7. ' ' → logprob: -6.777061462402344
    8. 'def' → logprob: -7.652061462402344
    9. ' _' → logprob: -7.902061462402344
    10. ' max' → logprob: -8.402061462402344

Token 141: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.00031949623371474445
    2. '_bound' → logprob: -8.500319480895996
    3. '_j' → logprob: -10.625319480895996
    4. '_b' → logprob: -10.875319480895996
    5. '_limits' → logprob: -11.000319480895996
    6. '_' → logprob: -11.000319480895996
    7. '_max' → logprob: -11.500319480895996
    8. '_val' → logprob: -12.375319480895996
    9. '_a' → logprob: -12.750319480895996
    10. '_i' → logprob: -12.875319480895996

Token 142: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.6391055583953857
    2. '_i' → logprob: -0.7641055583953857
    3. '_' → logprob: -6.764105796813965
    4. '_o' → logprob: -6.764105796813965
    5. '(' → logprob: -7.264105796813965
    6. '_s' → logprob: -7.389105796813965
    7. '_(' → logprob: -7.639105796813965
    8. '```' → logprob: -8.014105796813965
    9. '_J' → logprob: -8.514105796813965
    10. '_a' → logprob: -8.639105796813965

Token 143: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.005453478079289198
    2. '(' → logprob: -5.380453586578369
    3. '(M' → logprob: -8.380453109741211
    4. '(k' → logprob: -9.130453109741211
    5. ' (' → logprob: -9.130453109741211
    6. '(L' → logprob: -9.255453109741211
    7. '(C' → logprob: -9.880453109741211
    8. '((' → logprob: -10.255453109741211
    9. '(X' → logprob: -10.380453109741211
    10. '(S' → logprob: -10.505453109741211

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022284770966507494
    2. ' ,' → logprob: -8.500223159790039
    3. ',K' → logprob: -12.250223159790039
    4. ',X' → logprob: -12.375223159790039
    5. ',Y' → logprob: -12.500223159790039
    6. ')' → logprob: -12.875223159790039
    7. ',
' → logprob: -13.000223159790039
    8. '‌,' → logprob: -14.750223159790039
    9. ' ' → logprob: -15.750223159790039
    10. '   ' → logprob: -16.00022315979004

Token 145: ' i' (ID: 575)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.04364176467061043
    2. ')' → logprob: -3.9186418056488037
    3. ' Y' → logprob: -5.168641567230225
    4. 'K' → logprob: -5.418641567230225
    5. 'def' → logprob: -5.668641567230225
    6. 'X' → logprob: -5.668641567230225
    7. '1' → logprob: -6.668641567230225
    8. '<|end|>' → logprob: -6.668641567230225
    9. '
' → logprob: -7.793641567230225
    10. 'Z' → logprob: -7.918641567230225

Token 146: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1040036678314209
    2. ',' → logprob: -2.479003667831421
    3. '):
' → logprob: -4.22900390625
    4. ')' → logprob: -7.97900390625
    5. '):
' → logprob: -11.22900390625
    6. ' ):' → logprob: -11.47900390625
    7. '   ' → logprob: -11.97900390625
    8. '):

' → logprob: -12.47900390625
    9. ',
' → logprob: -13.22900390625
    10. ' ,' → logprob: -13.72900390625

Token 147: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.6652643084526062
    2. ' Y' → logprob: -0.9152643084526062
    3. 'X' → logprob: -3.040264368057251
    4. ' X' → logprob: -3.790264368057251
    5. 'Z' → logprob: -6.040264129638672
    6. ' lambda' → logprob: -6.290264129638672
    7. ' ' → logprob: -6.415264129638672
    8. 'K' → logprob: -6.415264129638672
    9. 'lambda' → logprob: -6.665264129638672
    10. ')' → logprob: -6.915264129638672

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005536588840186596
    2. '):
' → logprob: -5.2555365562438965
    3. ',' → logprob: -9.005537033081055
    4. ' ):' → logprob: -9.130537033081055
    5. ')' → logprob: -9.880537033081055
    6. '):

' → logprob: -11.630537033081055
    7. '):
' → logprob: -12.005537033081055
    8. '   ' → logprob: -13.130537033081055
    9. ' ' → logprob: -13.630537033081055
    10. ' ):
' → logprob: -14.755537033081055

Token 149: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8227044343948364
    2. ' =' → logprob: -1.1977044343948364
    3. '   ' → logprob: -1.6977044343948364
    4. '=' → logprob: -3.697704315185547
    5. '):' → logprob: -3.947704315185547
    6. 'def' → logprob: -4.572704315185547
    7. ':
' → logprob: -5.072704315185547
    8. '):
' → logprob: -5.072704315185547
    9. ' return' → logprob: -5.822704315185547
    10. ':return' → logprob: -6.822704315185547

Token 150: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21491672098636627
    2. 'return' (adapté à ' return') → logprob: -1.714916706085205
    3. ' min' → logprob: -4.839916706085205
    4. 'min' → logprob: -5.964916706085205
    5. '   ' → logprob: -6.589916706085205
    6. 'max' → logprob: -7.339916706085205
    7. ' max' → logprob: -7.714916706085205
    8. ' =' → logprob: -8.214917182922363
    9. '
' → logprob: -9.964917182922363
    10. 'def' → logprob: -10.339917182922363

Token 151: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12703436613082886
    2. 'min' → logprob: -2.1270344257354736
    3. ' max' → logprob: -9.877034187316895
    4. 'max' → logprob: -10.877034187316895
    5. ' ' → logprob: -11.877034187316895
    6. ' ' → logprob: -11.877034187316895
    7. '   ' → logprob: -12.127034187316895
    8. '	min' → logprob: -12.502034187316895
    9. '[min' → logprob: -13.377034187316895
    10. ' int' → logprob: -13.564534187316895

Token 152: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.006496992893517017
    2. '(' → logprob: -5.381496906280518
    3. 'Val' → logprob: -7.381496906280518
    4. '(K' → logprob: -7.381496906280518
    5. '(i' → logprob: -7.756496906280518
    6. '(min' → logprob: -9.256497383117676
    7. 'val' → logprob: -10.006497383117676
    8. '((' → logprob: -10.631497383117676
    9. 'min' → logprob: -11.881497383117676
    10. '(Y' → logprob: -12.256497383117676

Token 153: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.011027312837541103
    2. '(' → logprob: -4.6360273361206055
    3. '((' → logprob: -7.0110273361206055
    4. '(i' → logprob: -8.136027336120605
    5. '(k' → logprob: -10.136027336120605
    6. '(b' → logprob: -11.761027336120605
    7. '(KERN' → logprob: -12.261027336120605
    8. '(
' → logprob: -12.386027336120605
    9. '<|end|>' → logprob: -12.511027336120605
    10. '(int' → logprob: -12.636027336120605

Token 154: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07184106111526489
    2. '-' → logprob: -2.69684100151062
    3. '-i' → logprob: -6.446841239929199
    4. ',' → logprob: -8.1968412399292
    5. ' ,' → logprob: -11.3218412399292
    6. ' ' → logprob: -11.9468412399292
    7. ',i' → logprob: -12.0718412399292
    8. ')' → logprob: -12.5718412399292
    9. '-min' → logprob: -12.9468412399292
    10. ' i' → logprob: -13.5718412399292

Token 155: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7044374346733093
    2. ' i' → logprob: -1.704437494277954
    3. ' (' → logprob: -1.829437494277954
    4. '(i' → logprob: -1.954437494277954
    5. '(' → logprob: -3.954437494277954
    6. ' ' → logprob: -6.954437255859375
    7. '(max' → logprob: -8.704437255859375
    8. ')' → logprob: -8.954437255859375
    9. 'max' → logprob: -8.954437255859375
    10. ',i' → logprob: -8.954437255859375

Token 156: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018694264814257622
    2. ' i' → logprob: -4.0186944007873535
    3. ' (' → logprob: -8.393693923950195
    4. '(i' → logprob: -8.893693923950195
    5. ' ' → logprob: -9.768693923950195
    6. '(' → logprob: -9.893693923950195
    7. '   ' → logprob: -10.268693923950195
    8. '
' → logprob: -11.768693923950195
    9. 'max' → logprob: -11.768693923950195
    10. ')' → logprob: -12.268693923950195

Token 157: ' +' (ID: 659)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10422279685735703
    2. ',' → logprob: -2.7292227745056152
    3. ' ),' → logprob: -4.104222774505615
    4. ' ,' → logprob: -4.354222774505615
    5. ')' → logprob: -5.854222774505615
    6. ' ' → logprob: -7.479222774505615
    7. '   ' → logprob: -7.854222774505615
    8. '+' → logprob: -8.729223251342773
    9. '),(' → logprob: -9.729223251342773
    10. ' +' → logprob: -10.229223251342773

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015080781886354089
    2. ' ' → logprob: -6.5015082359313965
    3. '   ' → logprob: -12.876507759094238
    4. ')' → logprob: -13.376507759094238
    5. '),' → logprob: -14.001507759094238
    6. '0' → logprob: -14.626507759094238
    7. '  ' → logprob: -16.501508712768555
    8. '```' → logprob: -16.751508712768555
    9. '
' → logprob: -16.876508712768555
    10. ' ' → logprob: -17.501508712768555

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.370294846012257e-05
    2. ' ' → logprob: -10.125043869018555
    3. '   ' → logprob: -12.875043869018555
    4. '0' → logprob: -14.375043869018555
    5. ')' → logprob: -16.250043869018555
    6. '
' → logprob: -16.625043869018555
    7. '  ' → logprob: -17.125043869018555
    8. '),' → logprob: -17.500043869018555
    9. '       ' → logprob: -17.625043869018555
    10. '```' → logprob: -18.125043869018555

Token 160: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023393971845507622
    2. '),' → logprob: -3.8983938694000244
    3. ' ,' → logprob: -6.0233941078186035
    4. ',Y' → logprob: -9.023393630981445
    5. ')' → logprob: -9.148393630981445
    6. ',y' → logprob: -9.523393630981445
    7. '   ' → logprob: -9.648393630981445
    8. ' ' → logprob: -11.523393630981445
    9. ' ),' → logprob: -11.773393630981445
    10. ',j' → logprob: -12.148393630981445

Token 161: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.31330612301826477
    2. ' Y' → logprob: -1.3133060932159424
    3. '   ' → logprob: -10.688305854797363
    4. ' ' → logprob: -11.563305854797363
    5. '	Y' → logprob: -11.813305854797363
    6. '    ' → logprob: -13.438305854797363
    7. '  ' → logprob: -13.938305854797363
    8. ' ' → logprob: -14.438305854797363
    9. '(Y' → logprob: -14.563305854797363
    10. '[Y' → logprob: -14.813305854797363

Token 162: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.47757811343763e-05
    2. ' )' → logprob: -10.250044822692871
    3. ')
' → logprob: -12.125044822692871
    4. '   ' → logprob: -13.125044822692871
    5. '))' → logprob: -14.500044822692871
    6. ' ' → logprob: -15.000044822692871
    7. ')}' → logprob: -15.750044822692871
    8. '())' → logprob: -15.750044822692871
    9. ')

' → logprob: -15.875044822692871
    10. '}' → logprob: -16.375043869018555

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08136998116970062
    2. '<|end|>' → logprob: -2.5813698768615723
    3. '
' → logprob: -6.456369876861572
    4. '<|end|>' → logprob: -8.08137035369873
    5. ')' → logprob: -8.58137035369873
    6. '```' → logprob: -9.20637035369873
    7. ' def' → logprob: -9.20637035369873
    8. '#' → logprob: -9.70637035369873
    9. '(' → logprob: -10.45637035369873
    10. '

' → logprob: -10.45637035369873

Token 164: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.2998172342777252
    2. ' compute' → logprob: -1.6748172044754028
    3. 'main' → logprob: -3.5498173236846924
    4. ' main' → logprob: -3.5498173236846924
    5. 'def' → logprob: -5.299817085266113
    6. 'max' → logprob: -6.674817085266113
    7. 'calculate' → logprob: -6.674817085266113
    8. 'solve' → logprob: -6.799817085266113
    9. 'combine' → logprob: -7.174817085266113
    10. 'get' → logprob: -7.424817085266113

Token 165: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.0001085497424355708
    2. '_bound' → logprob: -9.87510871887207
    3. '_limits' → logprob: -10.00010871887207
    4. '_b' → logprob: -13.25010871887207
    5. 'bounds' → logprob: -13.62510871887207
    6. '_' → logprob: -13.62510871887207
    7. '_ranges' → logprob: -14.12510871887207
    8. '_s' → logprob: -14.50010871887207
    9. '```' → logprob: -14.50010871887207
    10. '_max' → logprob: -14.87510871887207

Token 166: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.002410373417660594
    2. '_l' → logprob: -7.502410411834717
    3. '(k' → logprob: -7.627410411834717
    4. '_j' → logprob: -8.127409934997559
    5. '_m' → logprob: -8.377409934997559
    6. 'k' → logprob: -8.627409934997559
    7. '(' → logprob: -9.127409934997559
    8. '_h' → logprob: -9.502409934997559
    9. '```' → logprob: -9.502409934997559
    10. '_z' → logprob: -9.752409934997559

Token 167: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0037406987976282835
    2. '(' → logprob: -5.6287407875061035
    3. '(k' → logprob: -9.128740310668945
    4. '(
' → logprob: -11.253740310668945
    5. '((' → logprob: -12.378740310668945
    6. ' (' → logprob: -12.753740310668945
    7. '(C' → logprob: -12.878740310668945
    8. 'def' → logprob: -13.253740310668945
    9. '(KERN' → logprob: -13.753740310668945
    10. '()' → logprob: -13.753740310668945

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003276818199083209
    2. ' ,' → logprob: -5.753276824951172
    3. ',j' → logprob: -10.628276824951172
    4. '   ' → logprob: -10.753276824951172
    5. ',i' → logprob: -11.378276824951172
    6. 'def' → logprob: -11.503276824951172
    7. ',
' → logprob: -11.753276824951172
    8. ',k' → logprob: -12.128276824951172
    9. ')' → logprob: -12.378276824951172
    10. ' ' → logprob: -12.628276824951172

Token 169: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07599001377820969
    2. ' j' → logprob: -2.7009899616241455
    3. 'i' → logprob: -6.200990200042725
    4. '   ' → logprob: -7.325990200042725
    5. ',' → logprob: -7.700990200042725
    6. 'def' → logprob: -7.825990200042725
    7. 'compute' → logprob: -7.825990200042725
    8. 'lambda' → logprob: -8.200989723205566
    9. ' i' → logprob: -8.325989723205566
    10. 'Y' → logprob: -8.325989723205566

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007311395602300763
    2. ' ,' → logprob: -7.375730991363525
    3. ',k' → logprob: -9.625731468200684
    4. ',j' → logprob: -10.750731468200684
    5. ',
' → logprob: -11.875731468200684
    6. ')' → logprob: -12.375731468200684
    7. ',i' → logprob: -13.125731468200684
    8. '),' → logprob: -13.875731468200684
    9. ' ' → logprob: -14.750731468200684
    10. '‌,' → logprob: -15.125731468200684

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06202392280101776
    2. ' j' → logprob: -2.812023878097534
    3. '   ' → logprob: -10.937024116516113
    4. '	j' → logprob: -11.937024116516113
    5. ',j' → logprob: -12.062024116516113
    6. ' ' → logprob: -12.187024116516113
    7. 'Y' → logprob: -12.312024116516113
    8. ',' → logprob: -12.437024116516113
    9. '_j' → logprob: -13.312024116516113
    10. 'def' → logprob: -13.437024116516113

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034952821442857385
    2. ' ,' → logprob: -8.750349998474121
    3. '):
' → logprob: -9.250349998474121
    4. '):' → logprob: -9.750349998474121
    5. ')' → logprob: -11.000349998474121
    6. '   ' → logprob: -12.250349998474121
    7. ',
' → logprob: -12.250349998474121
    8. ' ' → logprob: -13.125349998474121
    9. 'def' → logprob: -13.375349998474121
    10. ',Y' → logprob: -13.750349998474121

Token 173: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.14277157187461853
    2. ' Z' → logprob: -2.0177714824676514
    3. ' ' → logprob: -10.64277172088623
    4. '	Z' → logprob: -10.76777172088623
    5. 'X' → logprob: -11.39277172088623
    6. ')' → logprob: -11.64277172088623
    7. ',' → logprob: -12.39277172088623
    8. 'K' → logprob: -12.83027172088623
    9. '   ' → logprob: -12.89277172088623
    10. 'def' → logprob: -13.08027172088623

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008733822964131832
    2. '):
' → logprob: -4.758733749389648
    3. ')' → logprob: -10.008733749389648
    4. ' ):' → logprob: -10.008733749389648
    5. '):
' → logprob: -11.508733749389648
    6. '   ' → logprob: -11.758733749389648
    7. '):

' → logprob: -12.008733749389648
    8. ',' → logprob: -13.008733749389648
    9. ':' → logprob: -14.008733749389648
    10. ' ' → logprob: -14.633733749389648

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0201974269002676
    2. ':' → logprob: -4.64519739151001
    3. '):' → logprob: -5.02019739151001
    4. '):
' → logprob: -6.77019739151001
    5. 'return' → logprob: -7.02019739151001
    6. ' return' → logprob: -7.14519739151001
    7. ':return' → logprob: -7.64519739151001
    8. ':
' → logprob: -7.89519739151001
    9. '	return' → logprob: -10.645197868347168
    10. ')' → logprob: -11.020197868347168

Token 176: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2988491952419281
    2. ' return' → logprob: -1.4238492250442505
    3. '   ' → logprob: -4.048849105834961
    4. 'min' → logprob: -9.798849105834961
    5. ' ' → logprob: -11.048849105834961
    6. ' min' → logprob: -11.673849105834961
    7. '  ' → logprob: -12.423849105834961
    8. '	return' → logprob: -12.423849105834961
    9. '```' → logprob: -12.673849105834961
    10. '    ' → logprob: -12.923849105834961

Token 177: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14275823533535004
    2. ' min' → logprob: -2.0177581310272217
    3. '   ' → logprob: -10.5177583694458
    4. ' ' → logprob: -11.3927583694458
    5. 'max' → logprob: -11.7677583694458
    6. '  ' → logprob: -11.7677583694458
    7. '	min' → logprob: -12.2052583694458
    8. ' ' → logprob: -12.7052583694458
    9. 'int' → logprob: -12.8302583694458
    10. '    ' → logprob: -12.8927583694458

Token 178: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.64708495605737e-05
    2. 'val' → logprob: -9.750066757202148
    3. 'Val' → logprob: -12.375066757202148
    4. '((' → logprob: -13.375066757202148
    5. '(' → logprob: -14.250066757202148
    6. 'min' → logprob: -14.625066757202148
    7. '_VAL' → logprob: -15.125066757202148
    8. '(min' → logprob: -15.375066757202148
    9. '(K' → logprob: -16.00006675720215
    10. '(k' → logprob: -16.50006675720215

Token 179: '(((' (ID: 13163)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.023521600291132927
    2. '(' → logprob: -3.773521661758423
    3. '((' → logprob: -8.398521423339844
    4. '(
' → logprob: -10.523521423339844
    5. '(k' → logprob: -11.023521423339844
    6. '(KERN' → logprob: -13.148521423339844
    7. 'K' → logprob: -13.773521423339844
    8. '(int' → logprob: -14.148521423339844
    9. '(min' → logprob: -14.148521423339844
    10. ' (' → logprob: -14.398521423339844

Token 180: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001068654702976346
    2. ' K' → logprob: -6.876068592071533
    3. '   ' → logprob: -10.876069068908691
    4. '(K' → logprob: -12.001069068908691
    5. ')' → logprob: -12.751069068908691
    6. ' ' → logprob: -13.251069068908691
    7. '  ' → logprob: -13.626069068908691
    8. '       ' → logprob: -14.001069068908691
    9. '
' → logprob: -14.376069068908691
    10. '           ' → logprob: -14.501069068908691

Token 181: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45400604605674744
    2. ' //' → logprob: -1.3290060758590698
    3. ' )' → logprob: -2.7040059566497803
    4. '//' → logprob: -3.5790059566497803
    5. ')//' → logprob: -5.829006195068359
    6. ' ' → logprob: -7.329006195068359
    7. '-' → logprob: -7.329006195068359
    8. ' -' → logprob: -7.704006195068359
    9. '   ' → logprob: -8.57900619506836
    10. '
' → logprob: -9.32900619506836

Token 182: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7576834559440613
    2. ' (' → logprob: -1.132683515548706
    3. '((' → logprob: -1.757683515548706
    4. ' ((' → logprob: -3.507683515548706
    5. '(' → logprob: -5.132683277130127
    6. ')' → logprob: -8.132683753967285
    7. ' ' → logprob: -9.007683753967285
    8. '   ' → logprob: -9.507683753967285
    9. '(j' → logprob: -9.632683753967285
    10. '(
' → logprob: -10.382683753967285

Token 183: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.22296814620494843
    2. '((' → logprob: -1.7229681015014648
    3. ' (' → logprob: -4.097968101501465
    4. '(' → logprob: -5.972968101501465
    5. ' ((' → logprob: -6.597968101501465
    6. 'i' → logprob: -7.597968101501465
    7. '   ' → logprob: -9.597968101501465
    8. '(((' → logprob: -9.847968101501465
    9. ' i' → logprob: -10.222968101501465
    10. ' ' → logprob: -10.472968101501465

Token 184: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3137989044189453
    2. '+' → logprob: -1.3137989044189453
    3. ' ' → logprob: -7.938798904418945
    4. '   ' → logprob: -9.188798904418945
    5. ')' → logprob: -10.563798904418945
    6. '+j' → logprob: -11.438798904418945
    7. '    ' → logprob: -11.563798904418945
    8. '  ' → logprob: -12.188798904418945
    9. '
' → logprob: -12.438798904418945
    10. '1' → logprob: -12.438798904418945

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005809116992168128
    2. ' ' → logprob: -7.500580787658691
    3. '   ' → logprob: -11.000580787658691
    4. '
' → logprob: -12.000580787658691
    5. '  ' → logprob: -14.000580787658691
    6. 'j' → logprob: -14.375580787658691
    7. '       ' → logprob: -14.625580787658691
    8. '(' → logprob: -14.750580787658691
    9. '           ' → logprob: -14.750580787658691
    10. '    ' → logprob: -14.813080787658691

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.862962229410186e-05
    2. ' ' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.250078201293945
    4. '+' → logprob: -13.500078201293945
    5. 'j' → logprob: -15.500078201293945
    6. '(' → logprob: -15.875078201293945
    7. '(j' → logprob: -16.750078201293945
    8. '  ' → logprob: -17.125078201293945
    9. '
' → logprob: -17.250078201293945
    10. '       ' → logprob: -18.125078201293945

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014741703867912292
    2. '))' → logprob: -4.264741897583008
    3. '//' → logprob: -8.139741897583008
    4. ')//' → logprob: -8.514741897583008
    5. ' )' → logprob: -9.514741897583008
    6. ' //' → logprob: -12.139741897583008
    7. ')
' → logprob: -12.639741897583008
    8. '+' → logprob: -14.389741897583008
    9. '})' → logprob: -14.514741897583008
    10. '])' → logprob: -14.889741897583008

Token 188: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007631704676896334
    2. ')//' → logprob: -5.632631778717041
    3. '//' → logprob: -6.382631778717041
    4. ' )' → logprob: -6.382631778717041
    5. ' //' → logprob: -7.382631778717041
    6. ' ' → logprob: -11.757631301879883
    7. ')
' → logprob: -12.382631301879883
    8. '   ' → logprob: -12.507631301879883
    9. '")' → logprob: -14.507631301879883
    10. '))' → logprob: -14.882631301879883

Token 189: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5345192551612854
    2. 'j' → logprob: -0.9095192551612854
    3. ' )' → logprob: -6.159519195556641
    4. ' (' → logprob: -6.409519195556641
    5. '   ' → logprob: -6.784519195556641
    6. ' j' → logprob: -6.784519195556641
    7. '1' → logprob: -7.034519195556641
    8. '(j' → logprob: -7.034519195556641
    9. ' -' → logprob: -7.659519195556641
    10. '(' → logprob: -7.659519195556641

Token 190: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11541274935007095
    2. ')' → logprob: -2.865412712097168
    3. '1' → logprob: -4.240412712097168
    4. ' j' → logprob: -4.365412712097168
    5. ' (' → logprob: -4.865412712097168
    6. '(' → logprob: -5.240412712097168
    7. '(j' → logprob: -5.740412712097168
    8. '   ' → logprob: -6.740412712097168
    9. ' -' → logprob: -6.865412712097168
    10. '((' → logprob: -6.990412712097168

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0123740304261446
    2. ' )' → logprob: -4.637373924255371
    3. ')//' → logprob: -6.012373924255371
    4. '//' → logprob: -9.012373924255371
    5. ' //' → logprob: -11.137373924255371
    6. '   ' → logprob: -11.887373924255371
    7. ' ' → logprob: -11.887373924255371
    8. '-' → logprob: -11.887373924255371
    9. ')
' → logprob: -12.637373924255371
    10. ' -' → logprob: -12.762373924255371

Token 192: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043885938823223114
    2. '//' → logprob: -3.6688859462738037
    3. ' //' → logprob: -4.918885707855225
    4. ' )' → logprob: -5.043885707855225
    5. ')//' → logprob: -5.668885707855225
    6. ' ' → logprob: -9.168886184692383
    7. '-' → logprob: -9.918886184692383
    8. '),' → logprob: -11.043886184692383
    9. '   ' → logprob: -11.043886184692383
    10. ')
' → logprob: -11.168886184692383

Token 193: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.25259408354759216
    2. ' (' → logprob: -1.5025941133499146
    3. '(' → logprob: -7.377593994140625
    4. ' j' → logprob: -11.002593994140625
    5. ' ' → logprob: -11.752593994140625
    6. 'j' → logprob: -11.877593994140625
    7. '(k' → logprob: -13.877593994140625
    8. '[j' → logprob: -14.127593994140625
    9. '(
' → logprob: -14.127593994140625
    10. '
' → logprob: -14.377593994140625

Token 194: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.011166075244545937
    2. ' (' → logprob: -4.761166095733643
    3. 'j' → logprob: -6.636166095733643
    4. '(' → logprob: -6.761166095733643
    5. ' j' → logprob: -10.011165618896484
    6. '   ' → logprob: -11.636165618896484
    7. ' ' → logprob: -12.386165618896484
    8. '(
' → logprob: -12.636165618896484
    9. '((' → logprob: -12.636165618896484
    10. '[j' → logprob: -12.761165618896484

Token 195: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02975199744105339
    2. '+' → logprob: -3.529752016067505
    3. ' ' → logprob: -13.904751777648926
    4. ' +
' → logprob: -15.154751777648926
    5. '<|end|>' → logprob: -15.654751777648926
    6. '   ' → logprob: -17.404752731323242
    7. '1' → logprob: -17.529752731323242
    8. '+j' → logprob: -17.654752731323242
    9. '＋' → logprob: -18.029752731323242
    10. ' plus' → logprob: -18.029752731323242

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017255148850381374
    2. ' ' → logprob: -6.376725673675537
    3. '+' → logprob: -10.876725196838379
    4. '   ' → logprob: -13.251725196838379
    5. ' +' → logprob: -13.876725196838379
    6. ')' → logprob: -14.501725196838379
    7. '```' → logprob: -14.751725196838379
    8. '  ' → logprob: -15.126725196838379
    9. '<|end|>' → logprob: -15.626725196838379
    10. '
' → logprob: -16.189226150512695

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.750015258789062
    3. '+' → logprob: -11.875015258789062
    4. '
' → logprob: -15.125015258789062
    5. '   ' → logprob: -16.500015258789062
    6. ')' → logprob: -18.250015258789062
    7. '```' → logprob: -18.250015258789062
    8. '2' → logprob: -19.250015258789062
    9. '  ' → logprob: -19.750015258789062
    10. ' +' → logprob: -19.750015258789062

Token 198: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002065802924335003
    2. ',' → logprob: -6.627065658569336
    3. ')' → logprob: -7.502065658569336
    4. ' ),' → logprob: -8.627065658569336
    5. ' ,' → logprob: -12.627065658569336
    6. ' ' → logprob: -13.752065658569336
    7. ',),' → logprob: -14.002065658569336
    8. '   ' → logprob: -14.002065658569336
    9. '),(' → logprob: -14.252065658569336
    10. ')),' → logprob: -14.627065658569336

Token 199: ' Z' (ID: 1489)
  Prédit: ' Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.4287216067314148
    2. 'Z' → logprob: -1.0537216663360596
    3. '	Z' → logprob: -12.05372142791748
    4. ' ' → logprob: -12.17872142791748
    5. '    ' → logprob: -12.55372142791748
    6. ')' → logprob: -13.74122142791748
    7. '   ' → logprob: -13.80372142791748
    8. '>Z' → logprob: -14.24122142791748
    9. ' ' → logprob: -14.42872142791748
    10. ',Z' → logprob: -14.74122142791748

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. ' )' → logprob: -11.750012397766113
    3. ')
' → logprob: -12.625012397766113
    4. '   ' → logprob: -14.625012397766113
    5. ')#' → logprob: -16.125011444091797
    6. '}' → logprob: -16.250011444091797
    7. ')

' → logprob: -16.375011444091797
    8. ')return' → logprob: -16.375011444091797
    9. '))' → logprob: -16.625011444091797
    10. ')}' → logprob: -16.750011444091797

Token 201: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3184686601161957
    2. '<|end|>' → logprob: -1.568468689918518
    3. '\n' → logprob: -3.8184685707092285
    4. '(' → logprob: -3.9434685707092285
    5. ')' → logprob: -4.5684685707092285
    6. ':' → logprob: -5.4434685707092285
    7. '(
' → logprob: -5.4434685707092285
    8. ' ' → logprob: -7.0684685707092285
    9. '

' → logprob: -7.8184685707092285
    10. '\' → logprob: -7.8184685707092285

Token 202: ' append' (ID: 17147)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6464638710021973
    2. ' main' → logprob: -0.7714638710021973
    3. 'compute' → logprob: -5.146463871002197
    4. 'calculate' → logprob: -6.146463871002197
    5. 'solve' → logprob: -6.896463871002197
    6. ' compute' → logprob: -7.021463871002197
    7. 'max' → logprob: -7.521463871002197
    8. 'process' → logprob: -7.646463871002197
    9. ' calculate' → logprob: -7.896463871002197
    10. ' solve' → logprob: -7.896463871002197

Token 203: '_sum' (ID: 29859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10199878364801407
    2. '_value' → logprob: -4.101998805999756
    3. '(_' → logprob: -4.476998805999756
    4. '_item' → logprob: -4.476998805999756
    5. '_element' → logprob: -4.851998805999756
    6. '_items' → logprob: -4.976998805999756
    7. '_parent' → logprob: -5.101998805999756
    8. '_s' → logprob: -5.476998805999756
    9. '```' → logprob: -5.476998805999756
    10. '_array' → logprob: -5.726998805999756

Token 204: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21850591897964478
    2. '(arr' → logprob: -2.218505859375
    3. '(a' → logprob: -2.718505859375
    4. '(A' → logprob: -4.343505859375
    5. '(array' → logprob: -5.843505859375
    6. '(_' → logprob: -6.343505859375
    7. '(s' → logprob: -7.343505859375
    8. '(lst' → logprob: -7.468505859375
    9. '((' → logprob: -7.843505859375
    10. '(sum' → logprob: -8.093505859375

Token 205: '_D' (ID: 2958)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9414051175117493
    2. 'list' → logprob: -1.3164050579071045
    3. 'arr' → logprob: -2.0664050579071045
    4. '_list' → logprob: -2.4414050579071045
    5. 'array' → logprob: -2.6914050579071045
    6. 'lst' → logprob: -3.5664050579071045
    7. '_result' → logprob: -4.941405296325684
    8. '_array' → logprob: -5.066405296325684
    9. 'def' → logprob: -5.941405296325684
    10. 'output' → logprob: -6.191405296325684

Token 206: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0299574825912714
    2. '(' → logprob: -3.5299575328826904
    3. '((' → logprob: -10.02995777130127
    4. '(_' → logprob: -10.15495777130127
    5. '(d' → logprob: -10.65495777130127
    6. '(A' → logprob: -10.90495777130127
    7. ' (' → logprob: -11.15495777130127
    8. '(arr' → logprob: -11.27995777130127
    9. '_(' → logprob: -11.40495777130127
    10. '(def' → logprob: -12.02995777130127

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006441685254685581
    2. ' ,' → logprob: -8.125643730163574
    3. ',d' → logprob: -8.250643730163574
    4. ',a' → logprob: -10.375643730163574
    5. ',D' → logprob: -11.000643730163574
    6. ',sum' → logprob: -11.250643730163574
    7. ',A' → logprob: -12.000643730163574
    8. ',array' → logprob: -12.625643730163574
    9. ',value' → logprob: -12.875643730163574
    10. ',s' → logprob: -12.875643730163574

Token 208: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31380197405815125
    2. 'a' → logprob: -2.1888020038604736
    3. ' A' → logprob: -2.6888020038604736
    4. 'i' → logprob: -3.1888020038604736
    5. 'sum' → logprob: -4.3138017654418945
    6. 'arr' → logprob: -4.4388017654418945
    7. ' a' → logprob: -5.4388017654418945
    8. ' i' → logprob: -5.5638017654418945
    9. 'value' → logprob: -5.6888017654418945
    10. 'val' → logprob: -5.8138017654418945

Token 209: '_val' (ID: 13694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8460361957550049
    2. '[i' → logprob: -0.9710361957550049
    3. 'rr' → logprob: -2.096036195755005
    4. 'rray' → logprob: -2.971036195755005
    5. ',i' → logprob: -5.471035957336426
    6. 'r' → logprob: -5.596035957336426
    7. '[' → logprob: -5.721035957336426
    8. '_i' → logprob: -6.221035957336426
    9. 'i' → logprob: -7.471035957336426
    10. '_idx' → logprob: -7.721035957336426

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021772195759695023
    2. ' ,' → logprob: -8.62521743774414
    3. '   ' → logprob: -11.87521743774414
    4. '[' → logprob: -12.37521743774414
    5. ',a' → logprob: -12.37521743774414
    6. ',i' → logprob: -12.87521743774414
    7. '[i' → logprob: -13.00021743774414
    8. ',b' → logprob: -13.25021743774414
    9. '):' → logprob: -13.50021743774414
    10. ',k' → logprob: -13.62521743774414

Token 211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043083347380161285
    2. ' b' → logprob: -3.168083429336548
    3. 'i' → logprob: -10.418083190917969
    4. '   ' → logprob: -10.793083190917969
    5. ' ' → logprob: -11.793083190917969
    6. 'a' → logprob: -12.043083190917969
    7. ' i' → logprob: -12.543083190917969
    8. 'j' → logprob: -12.793083190917969
    9. '  ' → logprob: -13.043083190917969
    10. '    ' → logprob: -13.230583190917969

Token 212: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0004813161212950945
    2. '_' → logprob: -7.750481128692627
    3. '_vals' → logprob: -10.750481605529785
    4. '[' → logprob: -12.125481605529785
    5. '[_' → logprob: -12.500481605529785
    6. '_idx' → logprob: -12.750481605529785
    7. '_VAL' → logprob: -12.875481605529785
    8. ',' → logprob: -13.125481605529785
    9. ')_' → logprob: -13.500481605529785
    10. ',_' → logprob: -13.625481605529785

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001084971008822322
    2. ' ,' → logprob: -7.626084804534912
    3. ',c' → logprob: -7.626084804534912
    4. '):
' → logprob: -9.75108528137207
    5. 'c' → logprob: -10.87608528137207
    6. ',
' → logprob: -11.37608528137207
    7. '   ' → logprob: -11.62608528137207
    8. '):' → logprob: -13.50108528137207
    9. '):

' → logprob: -13.87608528137207
    10. ' ' → logprob: -13.93858528137207

Token 214: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07892856746912003
    2. ' c' → logprob: -2.5789284706115723
    3. '   ' → logprob: -10.70392894744873
    4. ' ' → logprob: -12.32892894744873
    5. ')c' → logprob: -12.82892894744873
    6. '  ' → logprob: -12.95392894744873
    7. '	c' → logprob: -13.20392894744873
    8. '    ' → logprob: -13.57892894744873
    9. ')' → logprob: -13.95392894744873
    10. '```' → logprob: -14.32892894744873

Token 215: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00040910433745011687
    2. '_' → logprob: -8.500409126281738
    3. '_vals' → logprob: -9.250409126281738
    4. ')_' → logprob: -10.000409126281738
    5. 'val' → logprob: -11.125409126281738
    6. '_sum' → logprob: -11.625409126281738
    7. '_idx' → logprob: -11.625409126281738
    8. '_arr' → logprob: -11.875409126281738
    9. ')' → logprob: -11.875409126281738
    10. ',' → logprob: -13.250409126281738

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13364772498607635
    2. '):
' → logprob: -2.1336476802825928
    3. ',' → logprob: -5.383647918701172
    4. '):
' → logprob: -6.508647918701172
    5. ')' → logprob: -8.258647918701172
    6. '   ' → logprob: -8.633647918701172
    7. ' ):' → logprob: -9.258647918701172
    8. '):

' → logprob: -10.258647918701172
    9. ' ' → logprob: -11.383647918701172
    10. ' ):
' → logprob: -11.508647918701172

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01127629168331623
    2. 'D' → logprob: -4.5112762451171875
    3. ' D' → logprob: -8.511276245117188
    4. '	D' → logprob: -11.386276245117188
    5. '```' → logprob: -11.636276245117188
    6. '   ' → logprob: -13.011276245117188
    7. '  ' → logprob: -13.761276245117188
    8. ' ' → logprob: -14.136276245117188
    9. 'def' → logprob: -14.511276245117188
    10. '    
' → logprob: -14.636276245117188

Token 218: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.004090985283255577
    2. '   ' → logprob: -5.754090785980225
    3. ' D' → logprob: -7.004090785980225
    4. '```' → logprob: -13.379091262817383
    5. '	D' → logprob: -13.754091262817383
    6. ' ' → logprob: -13.754091262817383
    7. '  ' → logprob: -14.504091262817383
    8. '
' → logprob: -15.129091262817383
    9. '   ' → logprob: -16.629091262817383
    10. '``' → logprob: -17.004091262817383

Token 219: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024837462697178125
    2. '.' → logprob: -6.00248384475708
    3. 'append' → logprob: -12.377483367919922
    4. ' .' → logprob: -13.752483367919922
    5. '.extend' → logprob: -14.127483367919922
    6. '.add' → logprob: -14.502483367919922
    7. '.setdefault' → logprob: -14.627483367919922
    8. '.push' → logprob: -15.002483367919922
    9. '.app' → logprob: -15.127483367919922
    10. '   ' → logprob: -15.877483367919922

Token 220: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.625015258789062
    3. 'a' → logprob: -12.125015258789062
    4. '((' → logprob: -14.250015258789062
    5. '(
' → logprob: -18.875015258789062
    6. '(A' → logprob: -19.375015258789062
    7. '(int' → logprob: -20.250015258789062
    8. '   ' → logprob: -21.250015258789062
    9. '(np' → logprob: -21.250015258789062
    10. '(ab' → logprob: -21.250015258789062

Token 221: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00022070204431656748
    2. 'val' → logprob: -8.50022029876709
    3. 'a' → logprob: -11.75022029876709
    4. '[val' → logprob: -12.25022029876709
    5. '[a' → logprob: -13.25022029876709
    6. '[' → logprob: -14.25022029876709
    7. '   ' → logprob: -15.25022029876709
    8. '_VAL' → logprob: -15.25022029876709
    9. '_' → logprob: -15.25022029876709
    10. 'Val' → logprob: -15.50022029876709

Token 222: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.63526451587677
    2. ' +' → logprob: -0.76026451587677
    3. '+b' → logprob: -6.0102643966674805
    4. '*' → logprob: -8.76026439666748
    5. ' *' → logprob: -10.13526439666748
    6. ' ' → logprob: -12.63526439666748
    7. '   ' → logprob: -12.63526439666748
    8. '+
' → logprob: -14.01026439666748
    9. '+B' → logprob: -14.13526439666748
    10. ')' → logprob: -14.26026439666748

Token 223: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12694008648395538
    2. ' b' → logprob: -2.1269400119781494
    3. ' ' → logprob: -12.50193977355957
    4. '   ' → logprob: -13.00193977355957
    5. '	b' → logprob: -13.12693977355957
    6. '    ' → logprob: -13.75193977355957
    7. '  ' → logprob: -14.50193977355957
    8. '+' → logprob: -14.62693977355957
    9. ''' → logprob: -15.00193977355957
    10. '(b' → logprob: -15.37693977355957

Token 224: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0008267794037237763
    2. '_' → logprob: -7.375826835632324
    3. 'val' → logprob: -8.875826835632324
    4. '+' → logprob: -9.875826835632324
    5. '_VAL' → logprob: -13.500826835632324
    6. '_)' → logprob: -13.625826835632324
    7. ' +' → logprob: -14.000826835632324
    8. 'al' → logprob: -14.000826835632324
    9. ')' → logprob: -14.125826835632324
    10. 'Val' → logprob: -14.375826835632324

Token 225: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38733434677124023
    2. ' +' → logprob: -1.1373343467712402
    3. ')' → logprob: -7.76233434677124
    4. '<|end|>' → logprob: -11.262334823608398
    5. '+c' → logprob: -11.387334823608398
    6. '+)' → logprob: -12.887334823608398
    7. '+
' → logprob: -13.137334823608398
    8. ')+' → logprob: -13.512334823608398
    9. '<|end|>' → logprob: -13.637334823608398
    10. ',' → logprob: -13.762334823608398

Token 226: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06993810087442398
    2. ' c' → logprob: -2.6949381828308105
    3. ' ' → logprob: -14.319937705993652
    4. '   ' → logprob: -14.319937705993652
    5. '  ' → logprob: -15.819937705993652
    6. ')c' → logprob: -15.819937705993652
    7. '
' → logprob: -16.81993865966797
    8. '	c' → logprob: -16.88243865966797
    9. '    ' → logprob: -16.88243865966797
    10. '```' → logprob: -17.31993865966797

Token 227: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.927930654550437e-05
    2. 'val' → logprob: -10.625029563903809
    3. '_' → logprob: -12.750029563903809
    4. '_VAL' → logprob: -14.250029563903809
    5. ')' → logprob: -15.250029563903809
    6. ')_' → logprob: -15.375029563903809
    7. '_v' → logprob: -15.750029563903809
    8. 'Val' → logprob: -15.875029563903809
    9. ' _' → logprob: -16.125028610229492
    10. ''_' → logprob: -16.500028610229492

Token 228: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -14.500020027160645
    4. '   ' → logprob: -16.375019073486328
    5. ')return' → logprob: -16.500019073486328
    6. ')

' → logprob: -16.750019073486328
    7. '),' → logprob: -17.875019073486328
    8. '))' → logprob: -18.375019073486328
    9. '')' → logprob: -18.375019073486328
    10. '}' → logprob: -18.500019073486328

Token 229: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00427059642970562
    2. '<|end|>' → logprob: -5.504270553588867
    3. '```' → logprob: -9.879270553588867
    4. '<|end|>' → logprob: -9.879270553588867
    5. '
' → logprob: -10.629270553588867
    6. '\' → logprob: -10.879270553588867
    7. '#' → logprob: -11.629270553588867
    8. 'for' → logprob: -11.879270553588867
    9. ' def' → logprob: -11.879270553588867
    10. '\n' → logprob: -12.629270553588867

Token 230: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2637169659137726
    2. 'main' → logprob: -2.01371693611145
    3. 'def' → logprob: -3.63871693611145
    4. ' find' → logprob: -3.76371693611145
    5. ' def' → logprob: -4.513717174530029
    6. 'get' → logprob: -4.888717174530029
    7. ' get' → logprob: -4.888717174530029
    8. 'find' → logprob: -5.138717174530029
    9. 'compute' → logprob: -5.388717174530029
    10. ' compute' → logprob: -6.013717174530029

Token 231: '_D' (ID: 2958)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.23876069486141205
    2. 'def' → logprob: -2.7387607097625732
    3. '_D' → logprob: -2.8637607097625732
    4. 'D' → logprob: -3.6137607097625732
    5. '(A' → logprob: -3.8637607097625732
    6. '(' → logprob: -3.9887607097625732
    7. '_array' → logprob: -4.988760471343994
    8. '(
' → logprob: -5.238760471343994
    9. '```' → logprob: -6.488760471343994
    10. 'array' → logprob: -6.613760471343994

Token 232: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.027315914630889893
    2. '(' → logprob: -3.902315855026245
    3. '():' → logprob: -5.527316093444824
    4. '(a' → logprob: -6.402316093444824
    5. '(X' → logprob: -7.652316093444824
    6. '(D' → logprob: -8.027316093444824
    7. '(K' → logprob: -9.277316093444824
    8. '((' → logprob: -9.902316093444824
    9. 'def' → logprob: -10.652316093444824
    10. '()' → logprob: -10.902316093444824

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ',B' → logprob: -10.875027656555176
    3. ' ,' → logprob: -11.875027656555176
    4. ',
' → logprob: -14.500027656555176
    5. ')' → logprob: -14.875027656555176
    6. '):' → logprob: -15.875027656555176
    7. '_,' → logprob: -15.875027656555176
    8. ',D' → logprob: -16.25002670288086
    9. 'B' → logprob: -16.56252670288086
    10. ',A' → logprob: -17.12502670288086

Token 234: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03365053981542587
    2. ' B' → logprob: -3.4086506366729736
    3. '<|end|>' → logprob: -13.408650398254395
    4. ')' → logprob: -14.283650398254395
    5. ' ' → logprob: -14.408650398254395
    6. '	B' → logprob: -14.658650398254395
    7. ',' → logprob: -15.033650398254395
    8. '  ' → logprob: -15.283650398254395
    9. '   ' → logprob: -15.283650398254395
    10. '    ' → logprob: -16.34615135192871

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -13.000004768371582
    3. ',C' → logprob: -13.250004768371582
    4. ',
' → logprob: -15.875004768371582
    5. 'C' → logprob: -16.500003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '_,' → logprob: -18.250003814697266
    8. '):' → logprob: -18.250003814697266
    9. ' ' → logprob: -19.250003814697266
    10. ',

' → logprob: -19.250003814697266

Token 236: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02630564197897911
    2. ' C' → logprob: -3.651305675506592
    3. ' ' → logprob: -13.276305198669434
    4. '<|end|>' → logprob: -13.901305198669434
    5. ')' → logprob: -14.276305198669434
    6. '  ' → logprob: -15.026305198669434
    7. '   ' → logprob: -15.151305198669434
    8. ',' → logprob: -15.151305198669434
    9. '	C' → logprob: -15.963805198669434
    10. '*C' → logprob: -16.02630615234375

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018863992590922862
    2. '):' → logprob: -8.750188827514648
    3. ',K' → logprob: -11.000188827514648
    4. ' ,' → logprob: -11.750188827514648
    5. ',X' → logprob: -13.125188827514648
    6. ',i' → logprob: -14.000188827514648
    7. '   ' → logprob: -14.125188827514648
    8. ')' → logprob: -14.625188827514648
    9. '):
' → logprob: -15.000188827514648
    10. '_,' → logprob: -16.18768882751465

Token 238: ' K' (ID: 658)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03130299970507622
    2. 'K' → logprob: -3.7813029289245605
    3. ' X' → logprob: -4.9063029289245605
    4. ' K' → logprob: -8.281303405761719
    5. 'D' → logprob: -8.406303405761719
    6. ' ' → logprob: -10.031303405761719
    7. ')' → logprob: -10.156303405761719
    8. '
' → logprob: -11.406303405761719
    9. '):
' → logprob: -12.093803405761719
    10. '   ' → logprob: -12.156303405761719

Token 239: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04350937530398369
    2. ',' → logprob: -3.1685094833374023
    3. '):
' → logprob: -8.293509483337402
    4. ')' → logprob: -8.668509483337402
    5. ' ):' → logprob: -10.168509483337402
    6. '   ' → logprob: -10.668509483337402
    7. '):
' → logprob: -11.668509483337402
    8. ':' → logprob: -11.793509483337402
    9. ' ,' → logprob: -13.543509483337402
    10. ' ' → logprob: -14.168509483337402

Token 240: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0021974791307002306
    2. ' X' → logprob: -6.127197265625
    3. ' ' → logprob: -12.002197265625
    4. '   ' → logprob: -12.502197265625
    5. ')' → logprob: -14.502197265625
    6. '  ' → logprob: -15.127197265625
    7. 'Y' → logprob: -15.252197265625
    8. 'x' → logprob: -15.252197265625
    9. '
' → logprob: -15.377197265625
    10. ',' → logprob: -15.627197265625

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016203110571950674
    2. '):' → logprob: -6.501620292663574
    3. ',Y' → logprob: -9.751620292663574
    4. ' ,' → logprob: -10.376620292663574
    5. ')' → logprob: -10.876620292663574
    6. ',X' → logprob: -13.251620292663574
    7. ',y' → logprob: -13.376620292663574
    8. ',
' → logprob: -13.626620292663574
    9. '):
' → logprob: -14.126620292663574
    10. ':' → logprob: -14.626620292663574

Token 242: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0011742709903046489
    2. ' Y' → logprob: -6.751174449920654
    3. '   ' → logprob: -13.376173973083496
    4. ' ' → logprob: -14.376173973083496
    5. '	Y' → logprob: -14.501173973083496
    6. 'Z' → logprob: -14.751173973083496
    7. ',Y' → logprob: -14.751173973083496
    8. ')' → logprob: -15.251173973083496
    9. '  ' → logprob: -15.501173973083496
    10. ',' → logprob: -15.501173973083496

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01432686299085617
    2. '):' → logprob: -4.264327049255371
    3. '):
' → logprob: -9.514327049255371
    4. ',Z' → logprob: -9.764327049255371
    5. ' ,' → logprob: -11.264327049255371
    6. ')' → logprob: -11.264327049255371
    7. ',
' → logprob: -13.639327049255371
    8. '):
' → logprob: -13.889327049255371
    9. 'Z' → logprob: -13.889327049255371
    10. '):

' → logprob: -14.389327049255371

Token 244: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0009161015041172504
    2. ' Z' → logprob: -7.000916004180908
    3. ' ' → logprob: -13.250916481018066
    4. '   ' → logprob: -13.500916481018066
    5. ')' → logprob: -14.500916481018066
    6. '  ' → logprob: -15.250916481018066
    7. '	Z' → logprob: -15.500916481018066
    8. '```' → logprob: -16.25091552734375
    9. ',Z' → logprob: -16.37591552734375
    10. '):' → logprob: -16.87591552734375

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010623442940413952
    2. '):
' → logprob: -6.876062393188477
    3. ')' → logprob: -10.501062393188477
    4. '):
' → logprob: -14.001062393188477
    5. ',' → logprob: -14.501062393188477
    6. ' ):' → logprob: -15.126062393188477
    7. '   ' → logprob: -15.626062393188477
    8. ':' → logprob: -16.501062393188477
    9. '):

' → logprob: -16.501062393188477
    10. ')：' → logprob: -18.126062393188477

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030436101951636374
    2. 'D' → logprob: -8.125304222106934
    3. ' D' → logprob: -12.375304222106934
    4. '```' → logprob: -12.500304222106934
    5. '   ' → logprob: -15.625304222106934
    6. '	D' → logprob: -15.750304222106934
    7. 'def' → logprob: -16.25030517578125
    8. '``' → logprob: -17.12530517578125
    9. ' ' → logprob: -17.75030517578125
    10. '  ' → logprob: -17.87530517578125

Token 247: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.0019712194334715605
    2. '   ' → logprob: -6.251971244812012
    3. ' D' → logprob: -10.126971244812012
    4. 'def' → logprob: -13.501971244812012
    5. ' ' → logprob: -14.126971244812012
    6. '```' → logprob: -15.251971244812012
    7. '	D' → logprob: -15.876971244812012
    8. '  ' → logprob: -16.126970291137695
    9. '
' → logprob: -17.376970291137695
    10. '       ' → logprob: -17.876970291137695

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328314542770386
    2. ' =' → logprob: -1.3132832050323486
    3. '=[]' → logprob: -10.81328296661377
    4. ',' → logprob: -14.56328296661377
    5. '=[]
' → logprob: -14.81328296661377
    6. ')' → logprob: -16.688283920288086
    7. ':' → logprob: -16.938283920288086
    8. '.' → logprob: -17.063283920288086
    9. '   ' → logprob: -17.063283920288086
    10. ' ' → logprob: -17.188283920288086

Token 249: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.723352049040841e-06
    2. '[]
' → logprob: -12.375004768371582
    3. '[' → logprob: -15.625004768371582
    4. '[]

' → logprob: -16.000003814697266
    5. '[]}' → logprob: -16.375003814697266
    6. ' []' → logprob: -17.250003814697266
    7. 'list' → logprob: -17.625003814697266
    8. '[]>' → logprob: -18.500003814697266
    9. '[]"' → logprob: -18.875003814697266
    10. '[],' → logprob: -19.250003814697266

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05233055353164673
    2. ' for' → logprob: -3.552330493927002
    3. 'for' → logprob: -3.802330493927002
    4. '	for' → logprob: -12.30233097076416
    5. '
' → logprob: -13.42733097076416
    6. '    
' → logprob: -14.05233097076416
    7. ' ' → logprob: -14.80233097076416
    8. 'def' → logprob: -14.92733097076416
    9. '  ' → logprob: -15.30233097076416
    10. '```' → logprob: -15.30233097076416

Token 251: ' bound' (ID: 11608)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.302704761968926e-05
    2. '   ' → logprob: -10.000073432922363
    3. ' for' → logprob: -11.250073432922363
    4. 'i' → logprob: -11.375073432922363
    5. 'X' → logprob: -12.875073432922363
    6. ' ' → logprob: -15.625073432922363
    7. '```' → logprob: -15.625073432922363
    8. 'max' → logprob: -16.750072479248047
    9. 'x' → logprob: -17.750072479248047
    10. '	for' → logprob: -17.875072479248047

Token 252: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.47506555914878845
    2. 's' → logprob: -0.9750655889511108
    3. '_s' → logprob: -7.7250657081604
    4. 'i' → logprob: -8.350065231323242
    5. 'X' → logprob: -8.600065231323242
    6. ' =' → logprob: -9.600065231323242
    7. '_x' → logprob: -10.725065231323242
    8. '=' → logprob: -11.850065231323242
    9. '_' → logprob: -11.975065231323242
    10. '_X' → logprob: -12.100065231323242

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026353128254413605
    2. '=' → logprob: -3.901353120803833
    3. 's' → logprob: -5.151353359222412
    4. ',' → logprob: -13.901352882385254
    5. ' s' → logprob: -14.026352882385254
    6. ' ' → logprob: -14.901352882385254
    7. '_' → logprob: -15.151352882385254
    8. '  ' → logprob: -16.40135383605957
    9. '_s' → logprob: -16.77635383605957
    10. 'x' → logprob: -16.77635383605957

Token 254: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.008617054671049118
    2. ' compute' → logprob: -4.758616924285889
    3. '   ' → logprob: -13.008617401123047
    4. '
' → logprob: -15.633617401123047
    5. ' ' → logprob: -16.633617401123047
    6. 'com' → logprob: -17.133617401123047
    7. 'comput' → logprob: -17.258617401123047
    8. 'computer' → logprob: -18.008617401123047
    9. 'computed' → logprob: -18.008617401123047
    10. '  ' → logprob: -18.133617401123047

Token 255: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.0004895264864899218
    2. 'bounds' → logprob: -7.625489711761475
    3. '_bound' → logprob: -14.625489234924316
    4. '_i' → logprob: -14.875489234924316
    5. '_b' → logprob: -16.000490188598633
    6. '_limits' → logprob: -16.125490188598633
    7. ' bounds' → logprob: -16.375490188598633
    8. 'i' → logprob: -16.500490188598633
    9. 'bound' → logprob: -16.625490188598633
    10. '_vals' → logprob: -16.750490188598633

Token 256: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0015152193373069167
    2. 'i' → logprob: -6.5015153884887695
    3. '(i' → logprob: -11.87651538848877
    4. '(' → logprob: -13.62651538848877
    5. 'I' → logprob: -13.75151538848877
    6. '(K' → logprob: -14.00151538848877
    7. '```' → logprob: -14.12651538848877
    8. '
' → logprob: -14.50151538848877
    9. ' i' → logprob: -14.87651538848877
    10. '   ' → logprob: -15.37651538848877

Token 257: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.00043138445471413434
    2. '(' → logprob: -7.750431537628174
    3. '(
' → logprob: -15.250431060791016
    4. '(k' → logprob: -15.375431060791016
    5. ' (' → logprob: -16.000431060791016
    6. 'K' → logprob: -16.625431060791016
    7. '(KERN' → logprob: -16.875431060791016
    8. '((' → logprob: -17.500431060791016
    9. '
' → logprob: -19.125431060791016
    10. '(`' → logprob: -19.375431060791016

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005369475693441927
    2. ',X' → logprob: -7.625536918640137
    3. ' ,' → logprob: -10.000536918640137
    4. ',
' → logprob: -13.250536918640137
    5. 'X' → logprob: -14.625536918640137
    6. ')' → logprob: -14.750536918640137
    7. '(X' → logprob: -15.375536918640137
    8. '   ' → logprob: -15.625536918640137
    9. ',Y' → logprob: -15.625536918640137
    10. ' ' → logprob: -16.000537872314453

Token 259: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08894220739603043
    2. ' X' → logprob: -2.463942289352417
    3. '   ' → logprob: -13.963942527770996
    4. ' ' → logprob: -14.088942527770996
    5. '	X' → logprob: -14.588942527770996
    6. ')' → logprob: -15.338942527770996
    7. '
' → logprob: -15.463942527770996
    8. ' 
' → logprob: -16.58894157409668
    9. '    ' → logprob: -16.96394157409668
    10. '  ' → logprob: -16.96394157409668

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011077526025474072
    2. ')
' → logprob: -4.511077404022217
    3. ')
' → logprob: -11.011077880859375
    4. ')

' → logprob: -11.761077880859375
    5. ' )' → logprob: -12.886077880859375
    6. '   ' → logprob: -13.511077880859375
    7. ')`' → logprob: -15.261077880859375
    8. ')#' → logprob: -15.886077880859375
    9. '),' → logprob: -16.011077880859375
    10. ')i' → logprob: -16.136077880859375

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1289891004562378
    2. 'for' → logprob: -2.1289892196655273
    3. ' for' → logprob: -6.253989219665527
    4. '
' → logprob: -9.503989219665527
    5. '    
' → logprob: -10.128989219665527
    6. '	for' → logprob: -11.128989219665527
    7. '```' → logprob: -12.128989219665527
    8. 'i' → logprob: -14.628989219665527
    9. '  
' → logprob: -15.378989219665527
    10. ' ' → logprob: -15.753989219665527

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002456034068018198
    2. '   ' → logprob: -6.127456188201904
    3. ' for' → logprob: -8.377455711364746
    4. 'bound' → logprob: -10.502455711364746
    5. 'i' → logprob: -11.627455711364746
    6. '```' → logprob: -12.627455711364746
    7. '	for' → logprob: -14.252455711364746
    8. '
' → logprob: -15.877455711364746
    9. '``' → logprob: -16.002456665039062
    10. '    
' → logprob: -16.502456665039062

Token 263: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029751643538475037
    2. ' i' → logprob: -3.5297515392303467
    3. '_i' → logprob: -14.279751777648926
    4. '	i' → logprob: -14.779751777648926
    5. '   ' → logprob: -16.02975082397461
    6. '```' → logprob: -17.27975082397461
    7. ' ' → logprob: -18.02975082397461
    8. 'I' → logprob: -18.02975082397461
    9. ')i' → logprob: -18.77975082397461
    10. '  ' → logprob: -19.02975082397461

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02977617457509041
    2. 'in' → logprob: -3.529776096343994
    3. ' ' → logprob: -10.904776573181152
    4. ',' → logprob: -13.029776573181152
    5. 'n' → logprob: -13.154776573181152
    6. 'space' → logprob: -14.529776573181152
    7. ')' → logprob: -14.904776573181152
    8. 'In' → logprob: -15.529776573181152
    9. 'range' → logprob: -15.529776573181152
    10. ' i' → logprob: -15.654776573181152

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005932589527219534
    2. ' range' → logprob: -5.130932807922363
    3. 'bound' → logprob: -12.630932807922363
    4. '   ' → logprob: -15.130932807922363
    5. '	range' → logprob: -16.255931854248047
    6. ' ' → logprob: -17.130931854248047
    7. 'rang' → logprob: -17.380931854248047
    8. '(range' → logprob: -17.380931854248047
    9. '0' → logprob: -17.880931854248047
    10. 'ran' → logprob: -18.005931854248047

Token 266: '(bound' (ID: 190451)
  Prédit: '(bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bound' → logprob: -0.00043138445471413434
    2. '(' → logprob: -7.750431537628174
    3. '(bounds' → logprob: -14.625431060791016
    4. '(b' → logprob: -16.125431060791016
    5. '(binding' → logprob: -16.750431060791016
    6. ' (' → logprob: -17.125431060791016
    7. '(bind' → logprob: -17.875431060791016
    8. 'bound' → logprob: -18.250431060791016
    9. ' bound' → logprob: -18.375431060791016
    10. '(bundle' → logprob: -19.875431060791016

Token 267: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.5
    3. '_' → logprob: -19.75
    4. '_
' → logprob: -19.75
    5. ')' → logprob: -20.0
    6. ',i' → logprob: -20.75
    7. '__' → logprob: -21.125
    8. '[i' → logprob: -21.25
    9. '   ' → logprob: -21.5
    10. ')_' → logprob: -21.5

Token 268: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022219838574528694
    2. '):
' → logprob: -6.127222061157227
    3. ' ):' → logprob: -11.377222061157227
    4. '+' → logprob: -11.502222061157227
    5. ':' → logprob: -11.877222061157227
    6. '):
' → logprob: -12.377222061157227
    7. '   ' → logprob: -12.877222061157227
    8. ')' → logprob: -14.252222061157227
    9. ',' → logprob: -15.252222061157227
    10. ' +' → logprob: -15.877222061157227

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001312021049670875
    2. '
' → logprob: -7.876312255859375
    3. '   ' → logprob: -8.126312255859375
    4. '        
' → logprob: -8.501312255859375
    5. 'bound' → logprob: -9.126312255859375
    6. ',' → logprob: -9.876312255859375
    7. '```' → logprob: -9.876312255859375
    8. ' bound' → logprob: -10.251312255859375
    9. '    
' → logprob: -10.376312255859375
    10. '    ' → logprob: -10.501312255859375

Token 270: ' bound' (ID: 11608)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' (adapté à ' bound') → logprob: -0.10461379587650299
    2. '   ' → logprob: -2.979613780975342
    3. '       ' → logprob: -3.229613780975342
    4. ' bound' → logprob: -4.729613780975342
    5. '           ' → logprob: -10.3546142578125
    6. '_bound' → logprob: -11.4796142578125
    7. ' ' → logprob: -11.4796142578125
    8. 'j' → logprob: -11.6046142578125
    9. '   ' → logprob: -12.1046142578125
    10. '     ' → logprob: -12.2296142578125

Token 271: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -2.5776860184123507e-06
    2. 'j' → logprob: -13.87500286102295
    3. '_i' → logprob: -14.00000286102295
    4. '_' → logprob: -14.50000286102295
    5. '=' → logprob: -16.875001907348633
    6. '```' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '	j' → logprob: -18.000001907348633
    9. '\' → logprob: -18.625001907348633
    10. '_js' → logprob: -18.750001907348633

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692883610725403
    2. '=' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.75192928314209
    4. '   ' → logprob: -15.00192928314209
    5. ',' → logprob: -17.251928329467773
    6. '    ' → logprob: -17.626928329467773
    7. ' =
' → logprob: -18.876928329467773
    8. '  ' → logprob: -19.126928329467773
    9. '＝' → logprob: -19.126928329467773
    10. '       ' → logprob: -19.251928329467773

Token 273: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.002475777640938759
    2. ' compute' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.50247573852539
    4. '(com' → logprob: -17.50247573852539
    5. 'comput' → logprob: -17.87747573852539
    6. 'computer' → logprob: -18.87747573852539
    7. '.compute' → logprob: -18.87747573852539
    8. 'com' → logprob: -19.00247573852539
    9. ' ' → logprob: -19.12747573852539
    10. '_compute' → logprob: -19.25247573852539

Token 274: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -4.727905979962088e-05
    2. 'bounds' → logprob: -10.00004768371582
    3. '```' → logprob: -14.25004768371582
    4. '(bounds' → logprob: -15.37504768371582
    5. 's' → logprob: -15.50004768371582
    6. '_limits' → logprob: -15.62504768371582
    7. '
' → logprob: -15.62504768371582
    8. 'b' → logprob: -15.62504768371582
    9. '_bound' → logprob: -16.87504768371582
    10. '   ' → logprob: -17.00004768371582

Token 275: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -5.3358446166384965e-05
    2. 'j' → logprob: -11.125053405761719
    3. '_i' → logprob: -11.375053405761719
    4. '(K' → logprob: -11.500053405761719
    5. '```' → logprob: -12.125053405761719
    6. 'bounds' → logprob: -12.375053405761719
    7. '(' → logprob: -13.375053405761719
    8. '_bounds' → logprob: -13.375053405761719
    9. '   ' → logprob: -14.875053405761719
    10. 'bound' → logprob: -14.875053405761719

Token 276: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.625003814697266
    3. 'K' → logprob: -14.875003814697266
    4. '(
' → logprob: -15.125003814697266
    5. ' (' → logprob: -15.875003814697266
    6. '(k' → logprob: -16.500003814697266
    7. '((' → logprob: -18.125003814697266
    8. '(KERN' → logprob: -18.500003814697266
    9. '(M' → logprob: -18.625003814697266
    10. '(Q' → logprob: -18.750003814697266

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02069498412311077
    2. ',i' → logprob: -3.8956949710845947
    3. ' ,' → logprob: -9.395694732666016
    4. '(i' → logprob: -9.895694732666016
    5. 'i' → logprob: -11.645694732666016
    6. '[i' → logprob: -12.645694732666016
    7. ',
' → logprob: -13.020694732666016
    8. '   ' → logprob: -13.270694732666016
    9. ' i' → logprob: -13.395694732666016
    10. ')' → logprob: -14.145694732666016

Token 278: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003360582049936056
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.500335693359375
    4. '	i' → logprob: -16.625335693359375
    5. ',i' → logprob: -17.125335693359375
    6. ')i' → logprob: -17.125335693359375
    7. '  ' → logprob: -17.625335693359375
    8. '[i' → logprob: -18.000335693359375
    9. ' ' → logprob: -18.375335693359375
    10. '
' → logprob: -18.500335693359375

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000618792837485671
    2. ',Y' → logprob: -7.625618934631348
    3. ' ,' → logprob: -9.125618934631348
    4. 'Y' → logprob: -12.000618934631348
    5. ',y' → logprob: -12.250618934631348
    6. ',i' → logprob: -12.375618934631348
    7. ',
' → logprob: -13.500618934631348
    8. ')' → logprob: -13.625618934631348
    9. ',X' → logprob: -13.625618934631348
    10. ',K' → logprob: -14.875618934631348

Token 280: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00012439649435691535
    2. ' Y' → logprob: -9.000123977661133
    3. ',Y' → logprob: -14.875123977661133
    4. '   ' → logprob: -15.250123977661133
    5. '	Y' → logprob: -16.125123977661133
    6. ',' → logprob: -16.625123977661133
    7. 'y' → logprob: -18.000123977661133
    8. '_Y' → logprob: -18.000123977661133
    9. ':Y' → logprob: -18.250123977661133
    10. 'YZ' → logprob: -18.250123977661133

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029778027907013893
    2. ')
' → logprob: -3.529778003692627
    3. '   ' → logprob: -10.654778480529785
    4. ')
' → logprob: -13.404778480529785
    5. '       ' → logprob: -14.029778480529785
    6. ' )' → logprob: -14.154778480529785
    7. ')

' → logprob: -15.529778480529785
    8. ' ' → logprob: -16.02977752685547
    9. ',' → logprob: -16.40477752685547
    10. ' )
' → logprob: -16.65477752685547

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.318681188422488e-05
    2. '   ' → logprob: -11.87501335144043
    3. ' for' → logprob: -12.50001335144043
    4. 'for' → logprob: -13.75001335144043
    5. ',' → logprob: -14.62501335144043
    6. '           ' → logprob: -15.25001335144043
    7. ' ' → logprob: -15.75001335144043
    8. '<|end|>' → logprob: -16.25001335144043
    9. '        
' → logprob: -16.37501335144043
    10. '     ' → logprob: -16.62501335144043

Token 283: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2577039897441864
    2. 'for' (adapté à ' for') → logprob: -1.5077040195465088
    3. ' for' → logprob: -5.25770378112793
    4. '   ' → logprob: -7.50770378112793
    5. '	for' → logprob: -13.63270378112793
    6. ' ' → logprob: -14.88270378112793
    7. '           ' → logprob: -15.13270378112793
    8. '     ' → logprob: -15.75770378112793
    9. '      ' → logprob: -16.50770378112793
    10. '    ' → logprob: -16.50770378112793

Token 284: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11282891035079956
    2. ' j' → logprob: -2.2378289699554443
    3. '	j' → logprob: -12.362829208374023
    4. '   ' → logprob: -13.612829208374023
    5. '    ' → logprob: -14.987829208374023
    6. ' ' → logprob: -15.362829208374023
    7. '$j' → logprob: -15.987829208374023
    8. '_j' → logprob: -16.112829208374023
    9. '```' → logprob: -16.737829208374023
    10. '[j' → logprob: -16.737829208374023

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005234952084720135
    2. 'in' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.755234718322754
    4. 'import' → logprob: -15.505234718322754
    5. 'range' → logprob: -16.13023567199707
    6. 'n' → logprob: -16.63023567199707
    7. ',' → logprob: -16.63023567199707
    8. '   ' → logprob: -16.75523567199707
    9. '    ' → logprob: -16.75523567199707
    10. ')' → logprob: -17.00523567199707

Token 286: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031806828919798136
    2. ' range' → logprob: -5.753180503845215
    3. '(range' → logprob: -12.753180503845215
    4. ' ' → logprob: -17.37818145751953
    5. '
' → logprob: -17.75318145751953
    6. '	range' → logprob: -17.75318145751953
    7. '   ' → logprob: -17.87818145751953
    8. 'in' → logprob: -18.25318145751953
    9. '    ' → logprob: -18.50318145751953
    10. 'bound' → logprob: -18.87818145751953

Token 287: '(bound' (ID: 190451)
  Prédit: '(bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bound' → logprob: -0.0033347986172884703
    2. 'bound' → logprob: -5.753334999084473
    3. 'range' → logprob: -9.503334999084473
    4. '(range' → logprob: -10.253334999084473
    5. ' bound' → logprob: -10.753334999084473
    6. '(' → logprob: -11.628334999084473
    7. 'in' → logprob: -11.753334999084473
    8. '(b' → logprob: -12.753334999084473
    9. '   ' → logprob: -13.253334999084473
    10. ' (' → logprob: -13.378334999084473

Token 288: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.869639476761222e-05
    2. '_i' → logprob: -11.250039100646973
    3. 'bound' → logprob: -11.250039100646973
    4. '   ' → logprob: -13.000039100646973
    5. '       ' → logprob: -13.250039100646973
    6. 'j' → logprob: -13.250039100646973
    7. ')' → logprob: -13.375039100646973
    8. '_bound' → logprob: -14.125039100646973
    9. '           ' → logprob: -14.250039100646973
    10. '```' → logprob: -14.625039100646973

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018269078573212028
    2. ':' → logprob: -7.001826763153076
    3. '):
' → logprob: -7.001826763153076
    4. ' ):' → logprob: -13.876827239990234
    5. '   ' → logprob: -14.001827239990234
    6. '():' → logprob: -14.501827239990234
    7. '}:' → logprob: -14.501827239990234
    8. ')' → logprob: -14.501827239990234
    9. ',' → logprob: -14.876827239990234
    10. '):

' → logprob: -15.001827239990234

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026387959718704224
    2. '       ' → logprob: -3.651387929916382
    3. ' bound' → logprob: -10.401388168334961
    4. 'bound' → logprob: -10.401388168334961
    5. '               ' → logprob: -11.026388168334961
    6. '         ' → logprob: -12.776388168334961
    7. '   ' → logprob: -13.026388168334961
    8. '          ' → logprob: -13.401388168334961
    9. '```' → logprob: -13.651388168334961
    10. '        ' → logprob: -13.776388168334961

Token 291: ' bound' (ID: 11608)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' (adapté à ' bound') → logprob: -0.20414675772190094
    2. '           ' → logprob: -2.0791468620300293
    3. ' bound' → logprob: -3.5791468620300293
    4. '       ' → logprob: -4.204146862030029
    5. '   ' → logprob: -4.579146862030029
    6. '               ' → logprob: -5.079146862030029
    7. ' ' → logprob: -9.454146385192871
    8. 'k' → logprob: -10.204146385192871
    9. '                   ' → logprob: -10.579146385192871
    10. '     ' → logprob: -10.704146385192871

Token 292: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -6.0391463193809614e-05
    2. '_j' → logprob: -9.750060081481934
    3. 'k' → logprob: -13.250060081481934
    4. '	k' → logprob: -16.12506103515625
    5. '_' → logprob: -16.37506103515625
    6. '_i' → logprob: -16.62506103515625
    7. '_tokens' → logprob: -17.25006103515625
    8. '_n' → logprob: -17.62506103515625
    9. '```' → logprob: -18.12506103515625
    10. '_z' → logprob: -18.25006103515625

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.57641315460205
    4. ',' → logprob: -17.451414108276367
    5. '   ' → logprob: -17.701414108276367
    6. '=com' → logprob: -18.326414108276367
    7. ' ' → logprob: -18.576414108276367
    8. '=get' → logprob: -18.701414108276367
    9. ':' → logprob: -18.951414108276367
    10. '	' → logprob: -18.951414108276367

Token 294: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0019286326132714748
    2. ' compute' → logprob: -6.251928806304932
    3. '.compute' → logprob: -18.876928329467773
    4. 'def' → logprob: -19.876928329467773
    5. 'comput' → logprob: -19.876928329467773
    6. '_compute' → logprob: -19.876928329467773
    7. 'computer' → logprob: -20.001928329467773
    8. 'build' → logprob: -21.001928329467773
    9. ' ' → logprob: -21.876928329467773
    10. '(com' → logprob: -21.876928329467773

Token 295: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -2.3319124011322856e-05
    2. 'bounds' → logprob: -10.875022888183594
    3. '```' → logprob: -13.125022888183594
    4. 'compute' → logprob: -14.000022888183594
    5. '_limits' → logprob: -14.750022888183594
    6. 'val' → logprob: -15.000022888183594
    7. '_vals' → logprob: -16.625022888183594
    8. '(bounds' → logprob: -16.625022888183594
    9. 's' → logprob: -16.750022888183594
    10. '__' → logprob: -16.750022888183594

Token 296: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00015109812375158072
    2. '```' → logprob: -9.500150680541992
    3. 'k' → logprob: -10.375150680541992
    4. 'bounds' → logprob: -11.250150680541992
    5. '(K' → logprob: -11.375150680541992
    6. '_bounds' → logprob: -12.125150680541992
    7. 'K' → logprob: -12.375150680541992
    8. '(k' → logprob: -12.625150680541992
    9. '_K' → logprob: -13.000150680541992
    10. '_c' → logprob: -13.375150680541992

Token 297: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0010047047398984432
    2. 'K' → logprob: -7.501004695892334
    3. '(' → logprob: -7.751004695892334
    4. '(
' → logprob: -10.876005172729492
    5. '(KERN' → logprob: -14.126005172729492
    6. ' (' → logprob: -14.626005172729492
    7. ' K' → logprob: -14.626005172729492
    8. '(k' → logprob: -14.876005172729492
    9. '```' → logprob: -16.126005172729492
    10. '<|end|>' → logprob: -16.251005172729492

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006070406176149845
    2. ',i' → logprob: -5.131070613861084
    3. ' ,' → logprob: -9.006070137023926
    4. ',j' → logprob: -11.506070137023926
    5. ',k' → logprob: -13.006070137023926
    6. '           ' → logprob: -13.631070137023926
    7. '   ' → logprob: -13.631070137023926
    8. ')' → logprob: -14.131070137023926
    9. '(i' → logprob: -14.131070137023926
    10. ' i' → logprob: -14.506070137023926

Token 299: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008101018611341715
    2. ' i' → logprob: -7.125810146331787
    3. 'j' → logprob: -12.250809669494629
    4. '<|end|>' → logprob: -14.875809669494629
    5. '   ' → logprob: -15.250809669494629
    6. ' ' → logprob: -16.375810623168945
    7. '	i' → logprob: -16.500810623168945
    8. '  ' → logprob: -17.125810623168945
    9. ')i' → logprob: -17.875810623168945
    10. '
' → logprob: -18.375810623168945

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004830361343920231
    2. ',j' → logprob: -5.379830360412598
    3. ' ,' → logprob: -8.629830360412598
    4. '           ' → logprob: -11.129830360412598
    5. 'j' → logprob: -11.504830360412598
    6. ',
' → logprob: -12.254830360412598
    7. '```' → logprob: -14.254830360412598
    8. ' j' → logprob: -14.879830360412598
    9. '   ' → logprob: -15.629830360412598
    10. ')' → logprob: -15.879830360412598

Token 301: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033546582562848926
    2. ' j' → logprob: -8.000335693359375
    3. '	j' → logprob: -17.500335693359375
    4. '<|end|>' → logprob: -18.000335693359375
    5. '$j' → logprob: -18.875335693359375
    6. '   ' → logprob: -18.875335693359375
    7. ',j' → logprob: -19.125335693359375
    8. '[j' → logprob: -19.500335693359375
    9. ' ' → logprob: -20.000335693359375
    10. '
' → logprob: -20.250335693359375

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004107254091650248
    2. ',Z' → logprob: -5.504107475280762
    3. 'Z' → logprob: -11.129107475280762
    4. ' ,' → logprob: -11.379107475280762
    5. ')' → logprob: -13.754107475280762
    6. ',C' → logprob: -14.629107475280762
    7. ',
' → logprob: -14.754107475280762
    8. '```' → logprob: -15.379107475280762
    9. '   ' → logprob: -16.004106521606445
    10. ',z' → logprob: -16.129106521606445

Token 303: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.00014072739577386528
    2. ' Z' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.000141143798828
    4. '	Z' → logprob: -15.750141143798828
    5. ',Z' → logprob: -16.375141143798828
    6. '>Z' → logprob: -17.125141143798828
    7. '```' → logprob: -17.250141143798828
    8. 'C' → logprob: -17.250141143798828
    9. ')' → logprob: -17.750141143798828
    10. '(Z' → logprob: -17.750141143798828

Token 304: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17015968263149261
    2. ')' → logprob: -1.9201596975326538
    3. '           ' → logprob: -4.670159816741943
    4. '       ' → logprob: -7.670159816741943
    5. ')
' → logprob: -10.420159339904785
    6. '   ' → logprob: -11.170159339904785
    7. '               ' → logprob: -13.670159339904785
    8. ' )
' → logprob: -14.170159339904785
    9. '          ' → logprob: -14.420159339904785
    10. '         ' → logprob: -14.545159339904785

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.7385154428193346e-05
    2. '               ' → logprob: -10.87503719329834
    3. ' for' → logprob: -12.00003719329834
    4. '       ' → logprob: -12.25003719329834
    5. 'for' → logprob: -12.25003719329834
    6. '		' → logprob: -14.00003719329834
    7. '<|end|>' → logprob: -14.37503719329834
    8. '          ' → logprob: -15.12503719329834
    9. '   ' → logprob: -15.62503719329834
    10. '```' → logprob: -15.75003719329834

Token 306: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20482710003852844
    2. 'for' (adapté à ' for') → logprob: -1.704827070236206
    3. ' for' → logprob: -5.829827308654785
    4. '       ' → logprob: -7.704827308654785
    5. '   ' → logprob: -11.204827308654785
    6. '	for' → logprob: -13.579827308654785
    7. '		' → logprob: -13.704827308654785
    8. '               ' → logprob: -13.704827308654785
    9. '
' → logprob: -14.579827308654785
    10. '          ' → logprob: -14.829827308654785

Token 307: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0031777136027812958
    2. ' k' → logprob: -5.753177642822266
    3. '	k' → logprob: -17.003177642822266
    4. '_k' → logprob: -18.253177642822266
    5. ' ' → logprob: -20.128177642822266
    6. '   ' → logprob: -20.753177642822266
    7. '(k' → logprob: -21.128177642822266
    8. ' к' → logprob: -21.253177642822266
    9. '```' → logprob: -21.503177642822266
    10. ',k' → logprob: -21.503177642822266

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248855024576187
    2. 'in' → logprob: -3.7732489109039307
    3. ' ' → logprob: -13.773248672485352
    4. ')' → logprob: -15.023248672485352
    5. 'k' → logprob: -15.148248672485352
    6. 'range' → logprob: -15.398248672485352
    7. '	in' → logprob: -15.523248672485352
    8. 'import' → logprob: -15.773248672485352
    9. 'n' → logprob: -15.773248672485352
    10. '    ' → logprob: -16.14824867248535

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002478627720847726
    2. ' range' → logprob: -6.00247859954834
    3. '(range' → logprob: -13.00247859954834
    4. 'in' → logprob: -14.62747859954834
    5. ' in' → logprob: -16.127479553222656
    6. 'bound' → logprob: -16.377479553222656
    7. '   ' → logprob: -18.252479553222656
    8. '	range' → logprob: -18.377479553222656
    9. ' ' → logprob: -18.502479553222656
    10. '  ' → logprob: -18.877479553222656

Token 310: '(bound' (ID: 190451)
  Prédit: '(bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bound' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.50000286102295
    3. ' (' → logprob: -14.25000286102295
    4. 'bound' → logprob: -14.62500286102295
    5. ' bound' → logprob: -15.87500286102295
    6. '(bounds' → logprob: -16.500003814697266
    7. '           ' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '(bind' → logprob: -17.750003814697266
    10. '(b' → logprob: -18.000003814697266

Token 311: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -5.080963092041202e-06
    2. 'bound' → logprob: -13.125004768371582
    3. 'k' → logprob: -13.250004768371582
    4. 'val' → logprob: -13.875004768371582
    5. '_bound' → logprob: -16.1250057220459
    6. '_' → logprob: -16.2500057220459
    7. '_val' → logprob: -17.1250057220459
    8. '```' → logprob: -17.5000057220459
    9. '_i' → logprob: -17.6250057220459
    10. '               ' → logprob: -18.0000057220459

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07912375777959824
    2. '):
' → logprob: -2.5791237354278564
    3. ':' → logprob: -8.579123497009277
    4. ')' → logprob: -10.954123497009277
    5. '):
' → logprob: -11.579123497009277
    6. ':
' → logprob: -12.329123497009277
    7. '               ' → logprob: -12.329123497009277
    8. '       ' → logprob: -13.079123497009277
    9. '   ' → logprob: -13.204123497009277
    10. '):

' → logprob: -13.579123497009277

Token 313: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016026983503252268
    2. 'append' → logprob: -6.626602649688721
    3. ' append' → logprob: -8.501603126525879
    4. '           ' → logprob: -10.501603126525879
    5. '       ' → logprob: -11.001603126525879
    6. '              ' → logprob: -11.876603126525879
    7. '                   ' → logprob: -12.001603126525879
    8. '   ' → logprob: -12.126603126525879
    9. '                ' → logprob: -12.251603126525879
    10. '                
' → logprob: -13.001603126525879

Token 314: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' (adapté à ' append') → logprob: -5.2762428822461516e-05
    2. ' append' → logprob: -10.000052452087402
    3. '               ' → logprob: -12.375052452087402
    4. 'a' → logprob: -12.875052452087402
    5. '           ' → logprob: -15.375052452087402
    6. '   ' → logprob: -16.12505340576172
    7. '	append' → logprob: -16.12505340576172
    8. '                   ' → logprob: -16.25005340576172
    9. '       ' → logprob: -16.62505340576172
    10. '.append' → logprob: -17.75005340576172

Token 315: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. 'sum' → logprob: -14.125000953674316
    3. '```' → logprob: -17.375
    4. '_s' → logprob: -19.125
    5. '_val' → logprob: -19.25
    6. 's' → logprob: -19.375
    7. '
' → logprob: -19.625
    8. '_SUM' → logprob: -19.875
    9. 'a' → logprob: -20.125
    10. '_' → logprob: -20.375

Token 316: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -20.625
    3. '```' → logprob: -20.75
    4. '_t' → logprob: -21.0
    5. '   ' → logprob: -23.125
    6. ')_' → logprob: -23.375
    7. '##_' → logprob: -23.5
    8. ' _' → logprob: -23.75
    9. '_TO' → logprob: -23.875
    10. 't' → logprob: -24.125

Token 317: '_D' (ID: 2958)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004567076452076435
    2. '_D' → logprob: -5.5045671463012695
    3. '(D' → logprob: -7.6295671463012695
    4. '	D' → logprob: -13.25456714630127
    5. ' D' → logprob: -14.37956714630127
    6. '-D' → logprob: -15.87956714630127
    7. '<D' → logprob: -16.629566192626953
    8. '[D' → logprob: -17.129566192626953
    9. '
' → logprob: -17.254566192626953
    10. '   ' → logprob: -17.254566192626953

Token 318: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.625024795532227
    3. '(
' → logprob: -14.250024795532227
    4. 'D' → logprob: -16.875024795532227
    5. ' (' → logprob: -17.625024795532227
    6. '(DE' → logprob: -18.750024795532227
    7. '```' → logprob: -19.000024795532227
    8. '	D' → logprob: -19.125024795532227
    9. '(

' → logprob: -20.000024795532227
    10. '(Dense' → logprob: -20.750024795532227

Token 319: ',' (ID: 11)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5809498429298401
    2. ',' → logprob: -1.0809497833251953
    3. '(D' → logprob: -2.4559497833251953
    4. '(' → logprob: -4.205949783325195
    5. '(
' → logprob: -8.580949783325195
    6. ')' → logprob: -8.830949783325195
    7. ',D' → logprob: -9.080949783325195
    8. ' ,' → logprob: -9.455949783325195
    9. ',A' → logprob: -9.830949783325195
    10. ' (' → logprob: -10.205949783325195

Token 320: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003196727717295289
    2. ' A' → logprob: -5.753196716308594
    3. 'reverse' → logprob: -11.253196716308594
    4. '   ' → logprob: -12.503196716308594
    5. ' reverse' → logprob: -14.128196716308594
    6. ' ' → logprob: -15.003196716308594
    7. '
' → logprob: -15.003196716308594
    8. '	A' → logprob: -15.503196716308594
    9. '  ' → logprob: -15.628196716308594
    10. '    ' → logprob: -16.128196716308594

Token 321: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.440506407059729e-05
    2. '[' → logprob: -10.62503433227539
    3. ')[' → logprob: -12.87503433227539
    4. 'i' → logprob: -13.62503433227539
    5. ' [' → logprob: -13.62503433227539
    6. '```' → logprob: -13.87503433227539
    7. '[
' → logprob: -14.00003433227539
    8. ')' → logprob: -14.25003433227539
    9. '
' → logprob: -14.50003433227539
    10. ',' → logprob: -15.00003433227539

Token 322: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00021093101531732827
    2. ']' → logprob: -8.500210762023926
    3. ' ],' → logprob: -12.375210762023926
    4. '[j' → logprob: -14.000210762023926
    5. '][' → logprob: -14.250210762023926
    6. '[' → logprob: -14.750210762023926
    7. ',' → logprob: -15.000210762023926
    8. '],
' → logprob: -15.000210762023926
    9. '   ' → logprob: -16.000211715698242
    10. '[k' → logprob: -16.125211715698242

Token 323: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11282538622617722
    2. ' B' → logprob: -2.237825393676758
    3. ' ' → logprob: -13.487825393676758
    4. '   ' → logprob: -14.487825393676758
    5. '	B' → logprob: -14.862825393676758
    6. '<|end|>' → logprob: -15.237825393676758
    7. '  ' → logprob: -15.737825393676758
    8. '    ' → logprob: -16.362825393676758
    9. ')' → logprob: -16.612825393676758
    10. '>B' → logprob: -16.862825393676758

Token 324: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.37501335144043
    3. 'j' → logprob: -14.12501335144043
    4. ' [' → logprob: -14.50001335144043
    5. '[
' → logprob: -15.12501335144043
    6. '```' → logprob: -16.00001335144043
    7. ' j' → logprob: -16.12501335144043
    8. '[i' → logprob: -16.37501335144043
    9. '[k' → logprob: -16.62501335144043
    10. ',j' → logprob: -16.62501335144043

Token 325: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012786745093762875
    2. '],' → logprob: -4.387786865234375
    3. ' ,' → logprob: -8.262786865234375
    4. '),' → logprob: -11.137786865234375
    5. ']' → logprob: -13.637786865234375
    6. '[' → logprob: -14.262786865234375
    7. ',C' → logprob: -14.262786865234375
    8. ' ],' → logprob: -14.512786865234375
    9. ' ' → logprob: -15.012786865234375
    10. '   ' → logprob: -15.137786865234375

Token 326: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011048528365790844
    2. ' C' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.636048316955566
    4. ' ' → logprob: -16.261049270629883
    5. '
' → logprob: -16.511049270629883
    6. '  ' → logprob: -16.636049270629883
    7. '	C' → logprob: -16.886049270629883
    8. ')' → logprob: -17.386049270629883
    9. '```' → logprob: -17.511049270629883
    10. '               ' → logprob: -17.636049270629883

Token 327: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.000003814697266
    3. 'k' → logprob: -14.125003814697266
    4. '[c' → logprob: -15.875003814697266
    5. ' [' → logprob: -16.000003814697266
    6. '```' → logprob: -16.125003814697266
    7. '(k' → logprob: -16.500003814697266
    8. '[
' → logprob: -16.750003814697266
    9. ')[' → logprob: -17.750003814697266
    10. '[l' → logprob: -17.875003814697266

Token 328: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038045919500291348
    2. ')
' → logprob: -5.878804683685303
    3. '])' → logprob: -7.128804683685303
    4. '))' → logprob: -8.628804206848145
    5. ' )' → logprob: -12.378804206848145
    6. ')

' → logprob: -12.753804206848145
    7. '})' → logprob: -12.878804206848145
    8. '               ' → logprob: -13.503804206848145
    9. ')
' → logprob: -13.628804206848145
    10. '           ' → logprob: -13.878804206848145

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038703777827322483
    2. 'return' → logprob: -5.628870487213135
    3. ' return' → logprob: -8.753870010375977
    4. '
' → logprob: -9.503870010375977
    5. '       ' → logprob: -11.253870010375977
    6. '	return' → logprob: -11.753870010375977
    7. '    
' → logprob: -11.878870010375977
    8. '```' → logprob: -12.878870010375977
    9. ':return' → logprob: -13.128870010375977
    10. '               ' → logprob: -13.128870010375977

Token 330: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5782753229141235
    2. 'return' (adapté à ' return') → logprob: -0.8282753229141235
    3. ' return' → logprob: -6.078275203704834
    4. '
' → logprob: -10.828275680541992
    5. '    
' → logprob: -11.953275680541992
    6. '	return' → logprob: -12.203275680541992
    7. '       ' → logprob: -12.453275680541992
    8. ' ' → logprob: -12.828275680541992
    9. ':return' → logprob: -13.453275680541992
    10. '```' → logprob: -14.453275680541992

Token 331: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0017641937592998147
    2. ' D' → logprob: -6.376764297485352
    3. 'sorted' → logprob: -9.751764297485352
    4. ' sorted' → logprob: -13.251764297485352
    5. 'np' → logprob: -13.751764297485352
    6. 'reverse' → logprob: -15.376764297485352
    7. '[D' → logprob: -16.00176429748535
    8. '   ' → logprob: -16.00176429748535
    9. '	D' → logprob: -16.50176429748535
    10. ' ' → logprob: -16.62676429748535

Token 332: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03379449620842934
    2. 'print' → logprob: -4.033794403076172
    3. 'if' → logprob: -5.158794403076172
    4. 'D' → logprob: -5.283794403076172
    5. '#' → logprob: -6.908794403076172
    6. 'from' → logprob: -7.158794403076172
    7. 'result' → logprob: -7.408794403076172
    8. '<|end|>' → logprob: -7.783794403076172
    9. 'sorted' → logprob: -7.783794403076172
    10. 'import' → logprob: -7.908794403076172

Token 334: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.019450277090072632
    2. 'main' → logprob: -4.0194501876831055
    3. ' get' → logprob: -7.7694501876831055
    4. 'def' → logprob: -8.019450187683105
    5. ' def' → logprob: -8.769450187683105
    6. ' find' → logprob: -9.019450187683105
    7. ' compute' → logprob: -9.269450187683105
    8. 'get' → logprob: -10.144450187683105
    9. ' solve' → logprob: -10.644450187683105
    10. ' max' → logprob: -10.644450187683105

Token 335: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.5888593792915344
    2. '_array' → logprob: -1.0888593196868896
    3. '_' → logprob: -2.8388593196868896
    4. '_reverse' → logprob: -4.088859558105469
    5. '(D' → logprob: -4.213859558105469
    6. '_list' → logprob: -5.838859558105469
    7. '_desc' → logprob: -5.838859558105469
    8. '_arr' → logprob: -6.338859558105469
    9. '(' → logprob: -6.338859558105469
    10. 'D' → logprob: -6.463859558105469

Token 336: '_desc' (ID: 26683)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00021402664424385875
    2. '(' → logprob: -8.500213623046875
    3. ' (' → logprob: -12.750213623046875
    4. '_(' → logprob: -13.125213623046875
    5. '(_' → logprob: -13.250213623046875
    6. '(d' → logprob: -14.000213623046875
    7. '_' → logprob: -14.125213623046875
    8. '(reverse' → logprob: -14.750213623046875
    9. '(
' → logprob: -14.875213623046875
    10. '(arr' → logprob: -15.000213623046875

Token 337: 'ending' (ID: 3258)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5868346095085144
    2. '(D' → logprob: -0.8368346095085144
    3. 'ending' → logprob: -4.58683443069458
    4. '```' → logprob: -8.836834907531738
    5. 'ent' → logprob: -9.211834907531738
    6. '(_' → logprob: -9.461834907531738
    7. '_desc' → logprob: -9.711834907531738
    8. 'desc' → logprob: -9.711834907531738
    9. 'def' → logprob: -10.086834907531738
    10. 'endt' → logprob: -10.086834907531738

Token 338: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.001037214300595224
    2. '(' → logprob: -6.876037120819092
    3. '():' → logprob: -13.12603759765625
    4. '(
' → logprob: -13.75103759765625
    5. ' (' → logprob: -13.87603759765625
    6. '(d' → logprob: -15.75103759765625
    7. '(S' → logprob: -17.25103759765625
    8. '(

' → logprob: -17.25103759765625
    9. '(E' → logprob: -17.75103759765625
    10. '(Dense' → logprob: -17.75103759765625

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005268384236842394
    2. '):
' → logprob: -5.255268573760986
    3. ')' → logprob: -10.630268096923828
    4. ' ):' → logprob: -12.255268096923828
    5. '):
' → logprob: -12.255268096923828
    6. '):

' → logprob: -14.255268096923828
    7. '   ' → logprob: -16.505268096923828
    8. ':' → logprob: -17.380268096923828
    9. '():' → logprob: -17.380268096923828
    10. ')：' → logprob: -17.505268096923828

Token 340: '   ' (ID: 271)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5756815075874329
    2. '   ' → logprob: -1.200681447982788
    3. 'return' → logprob: -2.200681447982788
    4. ' D' → logprob: -4.575681686401367
    5. 'reverse' → logprob: -4.700681686401367
    6. ' return' → logprob: -5.075681686401367
    7. ' reverse' → logprob: -8.200681686401367
    8. ' ' → logprob: -10.575681686401367
    9. '  ' → logprob: -11.825681686401367
    10. '	D' → logprob: -12.325681686401367

Token 341: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.3944438397884369
    2. 'return' → logprob: -1.1444438695907593
    3. 'reverse' → logprob: -5.644443988800049
    4. ' return' → logprob: -6.144443988800049
    5. ' D' → logprob: -6.394443988800049
    6. '   ' → logprob: -8.64444351196289
    7. ' reverse' → logprob: -11.51944351196289
    8. ' ' → logprob: -13.39444351196289
    9. '  ' → logprob: -14.39444351196289
    10. '
' → logprob: -14.76944351196289

Token 342: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0009479032014496624
    2. '.' → logprob: -7.000947952270508
    3. '.reverse' → logprob: -10.250947952270508
    4. 'sort' → logprob: -14.500947952270508
    5. ' .' → logprob: -14.750947952270508
    6. '=' → logprob: -15.500947952270508
    7. '.s' → logprob: -17.375947952270508
    8. ' =' → logprob: -17.500947952270508
    9. '.=' → logprob: -18.375947952270508
    10. '	sort' → logprob: -18.875947952270508

Token 343: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.00043221889063715935
    2. 'reverse' → logprob: -7.750432014465332
    3. '(' → logprob: -14.250432014465332
    4. ' reverse' → logprob: -14.875432014465332
    5. '.reverse' → logprob: -14.875432014465332
    6. '(return' → logprob: -16.00043296813965
    7. '_reverse' → logprob: -16.75043296813965
    8. '(inplace' → logprob: -17.12543296813965
    9. 'def' → logprob: -17.37543296813965
    10. '(desc' → logprob: -18.37543296813965

Token 344: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -9.372294698550832e-06
    2. '=' → logprob: -11.750009536743164
    3. ')' → logprob: -13.875009536743164
    4. 'True' → logprob: -15.125009536743164
    5. '(True' → logprob: -16.375009536743164
    6. ')=' → logprob: -16.625009536743164
    7. '=
' → logprob: -18.000009536743164
    8. '<|end|>' → logprob: -19.125009536743164
    9. '=False' → logprob: -19.750009536743164
    10. ' True' → logprob: -20.125009536743164

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.52919222577475e-05
    2. ')
' → logprob: -9.500075340270996
    3. ')return' → logprob: -15.625075340270996
    4. ')

' → logprob: -16.50007438659668
    5. ' )' → logprob: -16.62507438659668
    6. ')
' → logprob: -18.87507438659668
    7. '<|end|>' → logprob: -19.00007438659668
    8. '),' → logprob: -19.37507438659668
    9. '))' → logprob: -19.87507438659668
    10. ').' → logprob: -20.25007438659668

Token 346: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18305332958698273
    2. '
' → logprob: -2.1830532550811768
    3. '<|end|>' → logprob: -2.9330532550811768
    4. 'return' → logprob: -7.183053493499756
    5. '

' → logprob: -8.433053016662598
    6. '```' → logprob: -9.308053016662598
    7. '<|end|>' → logprob: -9.558053016662598
    8. '  
' → logprob: -9.683053016662598
    9. ' 
' → logprob: -10.433053016662598
    10. '    
' → logprob: -10.433053016662598

Token 347: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023032208904623985
    2. 'def' → logprob: -4.023032188415527
    3. ' return' → logprob: -5.898032188415527
    4. '
' → logprob: -6.648032188415527
    5. '<|end|>' → logprob: -7.273032188415527
    6. '   ' → logprob: -9.523032188415527
    7. ' ' → logprob: -11.148032188415527
    8. '    
' → logprob: -11.773032188415527
    9. ' 
' → logprob: -11.773032188415527
    10. '

' → logprob: -12.023032188415527

Token 348: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005234002135694027
    2. ' D' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.630233764648438
    4. '	D' → logprob: -16.630233764648438
    5. '   ' → logprob: -17.380233764648438
    6. 'None' → logprob: -17.880233764648438
    7. '[D' → logprob: -18.505233764648438
    8. '  ' → logprob: -18.755233764648438
    9. '(D' → logprob: -18.880233764648438
    10. '_D' → logprob: -19.130233764648438

Token 349: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.477133572101593
    2. '<|end|>' → logprob: -0.977133572101593
    3. '[' → logprob: -7.102133750915527
    4. '<|end|>' → logprob: -7.227133750915527
    5. '
' → logprob: -8.102133750915527
    6. '#' → logprob: -8.227133750915527
    7. ' def' → logprob: -8.477133750915527
    8. '(' → logprob: -8.477133750915527
    9. '[
' → logprob: -9.227133750915527
    10. '(
' → logprob: -9.352133750915527

Token 350: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033069930505007505
    2. '<|end|>' → logprob: -5.878306865692139
    3. 'print' → logprob: -8.253307342529297
    4. '#' → logprob: -8.878307342529297
    5. '```' → logprob: -10.253307342529297
    6. '<|end|>' → logprob: -11.253307342529297
    7. 'result' → logprob: -11.878307342529297
    8. 'if' → logprob: -12.003307342529297
    9. 'data' → logprob: -12.128307342529297
    10. 'X' → logprob: -12.503307342529297

Token 351: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08353476226329803
    2. 'def' → logprob: -3.5835347175598145
    3. ' def' → logprob: -3.8335347175598145
    4. 'main' → logprob: -3.9585347175598145
    5. ' get' → logprob: -4.5835347175598145
    6. 'get' → logprob: -6.8335347175598145
    7. ' compute' → logprob: -9.208535194396973
    8. ' calculate' → logprob: -9.708535194396973
    9. '_main' → logprob: -10.208535194396973
    10. ' solve' → logprob: -10.708535194396973

Token 352: '_first' (ID: 29347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9079684019088745
    2. '_' → logprob: -0.9079684019088745
    3. '_results' → logprob: -2.282968521118164
    4. '_max' → logprob: -3.782968521118164
    5. '_top' → logprob: -3.907968521118164
    6. '_sorted' → logprob: -4.782968521118164
    7. '_result' → logprob: -5.032968521118164
    8. '(_' → logprob: -5.282968521118164
    9. '_scores' → logprob: -5.657968521118164
    10. '_(' → logprob: -5.657968521118164

Token 353: '_K' (ID: 20555)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.75862056016922
    2. '(' → logprob: -1.8836205005645752
    3. '_' → logprob: -2.383620500564575
    4. '_k' → logprob: -2.383620500564575
    5. '(K' → logprob: -2.508620500564575
    6. '(N' → logprob: -3.508620500564575
    7. '_elements' → logprob: -3.758620500564575
    8. '(D' → logprob: -4.008620738983154
    9. '_N' → logprob: -4.258620738983154
    10. '_K' → logprob: -5.258620738983154

Token 354: '_elements' (ID: 53344)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.08112665265798569
    2. '(' → logprob: -3.4561266899108887
    3. '_values' → logprob: -3.8311266899108887
    4. '_elements' → logprob: -4.081126689910889
    5. '_items' → logprob: -6.331126689910889
    6. '(_' → logprob: -6.456126689910889
    7. '_results' → logprob: -6.706126689910889
    8. '(K' → logprob: -6.831126689910889
    9. '_scores' → logprob: -7.706126689910889
    10. '_lines' → logprob: -8.08112621307373

Token 355: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.001713974168524146
    2. '(' → logprob: -6.376713752746582
    3. ' (' → logprob: -12.251713752746582
    4. '(
' → logprob: -12.626713752746582
    5. '\(' → logprob: -14.001713752746582
    6. '(I' → logprob: -14.251713752746582
    7. '(d' → logprob: -14.751713752746582
    8. '(_' → logprob: -15.376713752746582
    9. '```' → logprob: -15.376713752746582
    10. '(

' → logprob: -15.751713752746582

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013488641707226634
    2. ',D' → logprob: -9.500134468078613
    3. ' ,' → logprob: -9.750134468078613
    4. ',
' → logprob: -14.000134468078613
    5. '   ' → logprob: -14.625134468078613
    6. '(D' → logprob: -15.375134468078613
    7. '```' → logprob: -17.62513542175293
    8. '
' → logprob: -17.62513542175293
    9. '，' → logprob: -18.00013542175293
    10. '  ' → logprob: -18.00013542175293

Token 357: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0003397535183466971
    2. ' K' → logprob: -8.00033950805664
    3. '   ' → logprob: -13.50033950805664
    4. 'k' → logprob: -13.62533950805664
    5. ')' → logprob: -14.37533950805664
    6. '	K' → logprob: -14.62533950805664
    7. ' ' → logprob: -15.75033950805664
    8. '  ' → logprob: -16.00033950805664
    9. '
' → logprob: -16.00033950805664
    10. '    
' → logprob: -16.75033950805664

Token 358: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004688106942921877
    2. '):
' → logprob: -5.379688262939453
    3. ')' → logprob: -10.379688262939453
    4. ',' → logprob: -10.504688262939453
    5. '):
' → logprob: -12.129688262939453
    6. ' ):' → logprob: -13.129688262939453
    7. '   ' → logprob: -13.504688262939453
    8. ':' → logprob: -15.254688262939453
    9. '):

' → logprob: -16.504688262939453
    10. '[:' → logprob: -16.629688262939453

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013799804262816906
    2. ' for' → logprob: -4.638799667358398
    3. 'for' → logprob: -5.513799667358398
    4. '    
' → logprob: -13.138799667358398
    5. '```' → logprob: -13.388799667358398
    6. 'def' → logprob: -14.513799667358398
    7. '
' → logprob: -15.513799667358398
    8. '   ' → logprob: -15.638799667358398
    9. '  ' → logprob: -16.0137996673584
    10. '    ' → logprob: -16.2637996673584

Token 360: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.1054253011243418e-05
    2. ' for' → logprob: -11.000020980834961
    3. '   ' → logprob: -12.750020980834961
    4. 'print' → logprob: -13.500020980834961
    5. '    
' → logprob: -20.37502098083496
    6. '	for' → logprob: -20.50002098083496
    7. '
' → logprob: -20.50002098083496
    8. '```' → logprob: -22.75002098083496
    9. '_for' → logprob: -23.25002098083496
    10. 'def' → logprob: -23.25002098083496

Token 361: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03931990638375282
    2. ' i' → logprob: -3.4143199920654297
    3. 'd' → logprob: -6.28931999206543
    4. 'x' → logprob: -6.41431999206543
    5. 'val' → logprob: -7.16431999206543
    6. 'idx' → logprob: -8.16431999206543
    7. 'value' → logprob: -8.28931999206543
    8. ' val' → logprob: -8.53931999206543
    9. 'index' → logprob: -9.03931999206543
    10. 'elem' → logprob: -9.16431999206543

Token 362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995176523923874
    2. 'in' → logprob: -2.6949517726898193
    3. ' ' → logprob: -11.694952011108398
    4. ',' → logprob: -12.944952011108398
    5. '   ' → logprob: -13.569952011108398
    6. 'n' → logprob: -13.944952011108398
    7. 'range' → logprob: -14.319952011108398
    8. '	in' → logprob: -14.694952011108398
    9. '  ' → logprob: -15.319952011108398
    10. '0' → logprob: -15.569952011108398

Token 363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502598519437015
    2. ' range' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.126502990722656
    4. '
' → logprob: -18.001502990722656
    5. ' ' → logprob: -18.126502990722656
    6. '(range' → logprob: -18.126502990722656
    7. '  ' → logprob: -18.501502990722656
    8. '	range' → logprob: -19.376502990722656
    9. 'rang' → logprob: -19.876502990722656
    10. 'D' → logprob: -20.501502990722656

Token 364: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.001892222324386239
    2. '(min' → logprob: -6.50189208984375
    3. 'K' → logprob: -8.62689208984375
    4. 'min' → logprob: -8.87689208984375
    5. '(' → logprob: -9.62689208984375
    6. ' min' → logprob: -13.12689208984375
    7. '(
' → logprob: -13.37689208984375
    8. '   ' → logprob: -14.75189208984375
    9. ' (' → logprob: -14.87689208984375
    10. '(k' → logprob: -15.62689208984375

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008621077984571457
    2. '):
' → logprob: -4.7586212158203125
    3. ' ):' → logprob: -12.758621215820312
    4. ')' → logprob: -13.008621215820312
    5. '):
' → logprob: -14.008621215820312
    6. ':' → logprob: -15.133621215820312
    7. '   ' → logprob: -15.508621215820312
    8. ',' → logprob: -16.883621215820312
    9. ' ):
' → logprob: -17.508621215820312
    10. '}:' → logprob: -17.633621215820312

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036710865795612335
    2. '   ' → logprob: -3.6617109775543213
    3. ' print' → logprob: -4.661710739135742
    4. 'print' → logprob: -7.036710739135742
    5. ' if' → logprob: -10.911710739135742
    6. '```' → logprob: -12.411710739135742
    7. 'if' → logprob: -14.036710739135742
    8. '    
' → logprob: -14.036710739135742
    9. '
' → logprob: -14.161710739135742
    10. '	print' → logprob: -14.286710739135742

Token 367: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.2729995988775045e-06
    2. ' print' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.500006675720215
    4. 'if' → logprob: -19.1250057220459
    5. '```' → logprob: -20.0000057220459
    6. '       ' → logprob: -20.6250057220459
    7. '	print' → logprob: -21.3750057220459
    8. '#print' → logprob: -22.7500057220459
    9. '    ' → logprob: -23.2500057220459
    10. '
' → logprob: -23.5000057220459

Token 368: '(int' (ID: 2742)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00013238313840702176
    2. 'D' → logprob: -9.00013256072998
    3. '(' → logprob: -11.62513256072998
    4. '(
' → logprob: -16.750131607055664
    5. ' D' → logprob: -17.750131607055664
    6. ' (' → logprob: -18.250131607055664
    7. '   ' → logprob: -18.625131607055664
    8. '	D' → logprob: -18.750131607055664
    9. '((' → logprob: -19.250131607055664
    10. '(int' → logprob: -20.250131607055664

Token 369: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. 'D' → logprob: -14.750059127807617
    4. ' (' → logprob: -16.125059127807617
    5. '((' → logprob: -17.375059127807617
    6. '(
' → logprob: -17.875059127807617
    7. ' D' → logprob: -17.875059127807617
    8. '(round' → logprob: -18.750059127807617
    9. ')' → logprob: -18.875059127807617
    10. '	D' → logprob: -19.125059127807617

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. '[
' → logprob: -15.625000953674316
    4. ' [' → logprob: -17.375
    5. 'i' → logprob: -18.75
    6. '   ' → logprob: -19.25
    7. '[I' → logprob: -19.5
    8. ')' → logprob: -19.875
    9. '\[' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 371: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.000492268183734268
    2. '])' → logprob: -8.500492095947266
    3. '))' → logprob: -8.750492095947266
    4. ']' → logprob: -9.500492095947266
    5. ')])' → logprob: -11.125492095947266
    6. ']))
' → logprob: -11.375492095947266
    7. ')' → logprob: -11.500492095947266
    8. ')))' → logprob: -11.875492095947266
    9. '']))' → logprob: -12.250492095947266
    10. ')]' → logprob: -12.750492095947266

Token 372: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004231308586895466
    2. 'if' → logprob: -5.5042314529418945
    3. '```' → logprob: -9.004231452941895
    4. '#' → logprob: -11.379231452941895
    5. '
' → logprob: -11.629231452941895
    6. 'print' → logprob: -12.879231452941895
    7. 'import' → logprob: -13.504231452941895
    8. 'for' → logprob: -14.129231452941895
    9. '<|end|>' → logprob: -14.254231452941895
    10. '\' → logprob: -14.379231452941895

Token 373: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1569545716047287
    2. 'main' → logprob: -2.406954526901245
    3. ' main' → logprob: -3.406954526901245
    4. ' def' → logprob: -4.281954765319824
    5. 'if' → logprob: -4.906954765319824
    6. '__' → logprob: -7.531954765319824
    7. 'get' → logprob: -9.406954765319824
    8. ' __' → logprob: -9.406954765319824
    9. ' if' → logprob: -9.531954765319824
    10. '
' → logprob: -11.156954765319824

Token 374: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.4121114822482923e-06
    2. '():
' → logprob: -13.500003814697266
    3. ' ():' → logprob: -13.500003814697266
    4. '()' → logprob: -14.750003814697266
    5. '(' → logprob: -16.625003814697266
    6. '_' → logprob: -17.250003814697266
    7. '():
' → logprob: -17.750003814697266
    8. '()>' → logprob: -19.750003814697266
    9. '().' → logprob: -19.875003814697266
    10. '():

' → logprob: -20.000003814697266

Token 375: '   ' (ID: 271)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3162805140018463
    2. '   ' → logprob: -1.316280484199524
    3. ' X' → logprob: -5.816280364990234
    4. ' ' → logprob: -10.941280364990234
    5. '  ' → logprob: -12.316280364990234
    6. '	X' → logprob: -12.441280364990234
    7. 'K' → logprob: -12.566280364990234
    8. '(X' → logprob: -12.566280364990234
    9. '_X' → logprob: -14.566280364990234
    10. '   ' → logprob: -15.316280364990234

Token 376: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -6.015305552864447e-05
    2. 'K' → logprob: -10.375060081481934
    3. ' X' → logprob: -11.125060081481934
    4. '   ' → logprob: -11.250060081481934
    5. '#' → logprob: -14.625060081481934
    6. ' ' → logprob: -14.875060081481934
    7. '(X' → logprob: -16.12506103515625
    8. '    
' → logprob: -16.25006103515625
    9. '
' → logprob: -16.87506103515625
    10. '	X' → logprob: -17.50006103515625

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002382249804213643
    2. ',Y' → logprob: -8.875238418579102
    3. ' ,' → logprob: -9.500238418579102
    4. ',K' → logprob: -10.750238418579102
    5. 'Y' → logprob: -14.125238418579102
    6. ',
' → logprob: -15.250238418579102
    7. ',X' → logprob: -15.500238418579102
    8. '_,' → logprob: -15.875238418579102
    9. '‌,' → logprob: -16.3127384185791
    10. ' ' → logprob: -16.3127384185791

Token 378: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.1269347220659256
    2. ' Y' → logprob: -2.126934766769409
    3. '<|end|>' → logprob: -12.751935005187988
    4. ' ' → logprob: -13.626935005187988
    5. '    ' → logprob: -13.751935005187988
    6. ',' → logprob: -14.626935005187988
    7. '  ' → logprob: -14.626935005187988
    8. ',Y' → logprob: -15.251935005187988
    9. '   ' → logprob: -15.501935005187988
    10. '	Y' → logprob: -15.751935005187988

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.87501335144043
    3. ',Z' → logprob: -12.00001335144043
    4. 'Z' → logprob: -16.87501335144043
    5. '<|end|>' → logprob: -17.00001335144043
    6. ',K' → logprob: -17.25001335144043
    7. ',Y' → logprob: -17.87501335144043
    8. '‌,' → logprob: -18.12501335144043
    9. '=' → logprob: -18.12501335144043
    10. '_,' → logprob: -18.25001335144043

Token 380: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.03804263845086098
    2. ' Z' → logprob: -3.2880425453186035
    3. ',Z' → logprob: -14.913043022155762
    4. ' ' → logprob: -15.288043022155762
    5. '   ' → logprob: -15.288043022155762
    6. ',' → logprob: -15.288043022155762
    7. '```' → logprob: -16.538042068481445
    8. '	Z' → logprob: -16.788042068481445
    9. '  ' → logprob: -17.288042068481445
    10. 'z' → logprob: -17.413042068481445

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ',K' → logprob: -11.375015258789062
    3. ' ,' → logprob: -12.500015258789062
    4. ',
' → logprob: -16.375015258789062
    5. 'K' → logprob: -17.250015258789062
    6. '   ' → logprob: -17.875015258789062
    7. '_,' → logprob: -18.625015258789062
    8. '‌,' → logprob: -18.625015258789062
    9. ',k' → logprob: -19.250015258789062
    10. '<|end|>' → logprob: -19.250015258789062

Token 382: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3133012652397156
    2. 'K' → logprob: -1.3133013248443604
    3. ' ' → logprob: -10.188301086425781
    4. '  ' → logprob: -13.813301086425781
    5. '   ' → logprob: -14.813301086425781
    6. '<|end|>' → logprob: -15.438301086425781
    7. '    ' → logprob: -16.31330108642578
    8. ' =' → logprob: -16.43830108642578
    9. '=' → logprob: -16.56330108642578
    10. '	K' → logprob: -16.93830108642578

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05488499253988266
    2. ' =' → logprob: -2.929884910583496
    3. ',' → logprob: -13.804884910583496
    4. ')' → logprob: -13.929884910583496
    5. ')=' → logprob: -14.804884910583496
    6. '=input' → logprob: -15.929884910583496
    7. '=get' → logprob: -17.054885864257812
    8. '=user' → logprob: -17.429885864257812
    9. '＝' → logprob: -17.429885864257812
    10. '   ' → logprob: -17.679885864257812

Token 384: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.042437098920345306
    2. ' get' → logprob: -3.5424370765686035
    3. 'parse' → logprob: -4.4174370765686035
    4. ' parse' → logprob: -7.5424370765686035
    5. 'map' → logprob: -12.292437553405762
    6. '   ' → logprob: -12.417437553405762
    7. ' map' → logprob: -14.042437553405762
    8. '(get' → logprob: -14.292437553405762
    9. '=get' → logprob: -14.917437553405762
    10. '	get' → logprob: -15.042437553405762

Token 385: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.016156835481524467
    2. 'X' → logprob: -4.1411566734313965
    3. '(X' → logprob: -9.766157150268555
    4. '(' → logprob: -10.766157150268555
    5. '()' → logprob: -11.141157150268555
    6. '(_' → logprob: -12.266157150268555
    7. '_' → logprob: -12.641157150268555
    8. '```' → logprob: -12.891157150268555
    9. 'input' → logprob: -13.016157150268555
    10. '\' → logprob: -13.141157150268555

Token 386: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -0.0002845768758561462
    2. '_Z' → logprob: -8.375284194946289
    3. '_V' → logprob: -11.000284194946289
    4. '_' → logprob: -11.125284194946289
    5. ' _' → logprob: -12.625284194946289
    6. '_X' → logprob: -12.625284194946289
    7. '```' → logprob: -12.625284194946289
    8. ',_' → logprob: -12.875284194946289
    9. 'Y' → logprob: -13.250284194946289
    10. '(_' → logprob: -13.625284194946289

Token 387: '_Z' (ID: 27268)
  Prédit: '_Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Z' → logprob: -0.0001673061487963423
    2. 'Z' → logprob: -9.375166893005371
    3. '_K' → logprob: -9.875166893005371
    4. ',Z' → logprob: -12.000166893005371
    5. ',' → logprob: -12.250166893005371
    6. '```' → logprob: -12.500166893005371
    7. ',_' → logprob: -12.750166893005371
    8. '_' → logprob: -13.375166893005371
    9. ' _' → logprob: -13.375166893005371
    10. '   ' → logprob: -13.625166893005371

Token 388: '_K' (ID: 20555)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0022086622193455696
    2. '()
' → logprob: -6.377208709716797
    3. '_' → logprob: -8.252208709716797
    4. '()
' → logprob: -8.627208709716797
    5. '_K' → logprob: -10.377208709716797
    6. '()

' → logprob: -11.627208709716797
    7. '()`' → logprob: -12.127208709716797
    8. ' ()' → logprob: -13.127208709716797
    9. '()]' → logprob: -13.377208709716797
    10. '```' → logprob: -13.377208709716797

Token 389: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5503296256065369
    2. '   ' → logprob: -0.9253296256065369
    3. 'A' → logprob: -3.8003296852111816
    4. '    
' → logprob: -6.300329685211182
    5. ' A' → logprob: -6.925329685211182
    6. '  
' → logprob: -7.925329685211182
    7. 'X' → logprob: -8.300329208374023
    8. '```' → logprob: -8.425329208374023
    9. 'D' → logprob: -9.050329208374023
    10. ' ' → logprob: -9.175329208374023

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252387672662735
    2. 'A' → logprob: -1.5023876428604126
    3. ' A' → logprob: -7.752387523651123
    4. '```' → logprob: -11.252388000488281
    5. '
' → logprob: -12.002388000488281
    6. '    
' → logprob: -12.502388000488281
    7. '  ' → logprob: -13.377388000488281
    8. ' ' → logprob: -13.377388000488281
    9. '	A' → logprob: -13.752388000488281
    10. '   ' → logprob: -14.127388000488281

Token 391: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.004176340997219086
    2. '   ' → logprob: -5.504176139831543
    3. ' A' → logprob: -9.254176139831543
    4. '  ' → logprob: -14.504176139831543
    5. '	A' → logprob: -14.504176139831543
    6. '```' → logprob: -14.504176139831543
    7. ' ' → logprob: -14.879176139831543
    8. '    
' → logprob: -16.12917709350586
    9. '
' → logprob: -16.62917709350586
    10. '       ' → logprob: -16.75417709350586

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132758140563965
    2. '=' → logprob: -1.3132758140563965
    3. ',' → logprob: -11.313276290893555
    4. ')' → logprob: -14.313276290893555
    5. '()' → logprob: -15.063276290893555
    6. '=A' → logprob: -15.188276290893555
    7. '(' → logprob: -16.313276290893555
    8. '.' → logprob: -16.438276290893555
    9. '   ' → logprob: -16.688276290893555
    10. ' ' → logprob: -16.688276290893555

Token 393: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.000373950315406546
    2. ' get' → logprob: -8.125373840332031
    3. 'np' → logprob: -9.875373840332031
    4. 'reverse' → logprob: -11.250373840332031
    5. 'parse' → logprob: -11.375373840332031
    6. 'list' → logprob: -14.000373840332031
    7. 'A' → logprob: -14.500373840332031
    8. ' np' → logprob: -15.000373840332031
    9. '[get' → logprob: -15.750373840332031
    10. '(get' → logprob: -15.875373840332031

Token 394: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.16023053228855133
    2. 'A' → logprob: -1.9102305173873901
    3. 'Array' → logprob: -13.41023063659668
    4. '"A' → logprob: -14.16023063659668
    5. 'a' → logprob: -14.28523063659668
    6. '```' → logprob: -14.41023063659668
    7. 'array' → logprob: -14.53523063659668
    8. ' A' → logprob: -14.66023063659668
    9. 'Ａ' → logprob: -14.91023063659668
    10. '	A' → logprob: -15.16023063659668

Token 395: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.253652423620224
    2. '()
' → logprob: -1.5036524534225464
    3. '   ' → logprob: -6.378652572631836
    4. '()
' → logprob: -11.378652572631836
    5. '()

' → logprob: -12.128652572631836
    6. '
' → logprob: -13.003652572631836
    7. '()\' → logprob: -13.253652572631836
    8. 'B' → logprob: -13.628652572631836
    9. '(' → logprob: -14.753652572631836
    10. '(),' → logprob: -14.878652572631836

Token 396: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5766907334327698
    2. '   ' → logprob: -0.8266907334327698
    3. ' B' → logprob: -7.201690673828125
    4. '	B' → logprob: -12.451690673828125
    5. ' ' → logprob: -14.451690673828125
    6. '  ' → logprob: -14.701690673828125
    7. '```' → logprob: -14.951690673828125
    8. '       ' → logprob: -15.826690673828125
    9. '
' → logprob: -16.076690673828125
    10. '   ' → logprob: -16.326690673828125

Token 397: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00016396844875998795
    2. ' B' → logprob: -8.750164031982422
    3. '   ' → logprob: -12.125164031982422
    4. '	B' → logprob: -17.750164031982422
    5. '  ' → logprob: -19.125164031982422
    6. ' ' → logprob: -19.125164031982422
    7. '    ' → logprob: -21.750164031982422
    8. '>B' → logprob: -22.125164031982422
    9. '    
' → logprob: -22.250164031982422
    10. '       ' → logprob: -22.375164031982422

Token 398: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4752218723297119
    2. '=' → logprob: -1.225221872329712
    3. ' =' → logprob: -2.475221872329712
    4. '()
' → logprob: -8.100221633911133
    5. '   ' → logprob: -10.225221633911133
    6. '(' → logprob: -10.600221633911133
    7. ')' → logprob: -10.850221633911133
    8. '()

' → logprob: -11.725221633911133
    9. 'def' → logprob: -12.225221633911133
    10. ',' → logprob: -12.475221633911133

Token 399: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -6.2729995988775045e-06
    2. ' get' → logprob: -12.000006675720215
    3. '(get' → logprob: -19.3750057220459
    4. '=get' → logprob: -21.7500057220459
    5. '	get' → logprob: -22.6250057220459
    6. 'getc' → logprob: -22.7500057220459
    7. '[get' → logprob: -23.6250057220459
    8. '.get' → logprob: -23.7500057220459
    9. ')get' → logprob: -24.0000057220459
    10. '_get' → logprob: -24.0000057220459

Token 400: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.22541937232017517
    2. 'B' → logprob: -1.6004194021224976
    3. 'array' → logprob: -13.350419044494629
    4. '	B' → logprob: -13.350419044494629
    5. ' B' → logprob: -13.850419044494629
    6. '```' → logprob: -14.600419044494629
    7. 'Б' → logprob: -14.975419044494629
    8. 'Ｂ' → logprob: -15.350419044494629
    9. '-B' → logprob: -15.475419044494629
    10. '_A' → logprob: -15.600419044494629

Token 401: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004413975402712822
    2. 'C' → logprob: -7.750441551208496
    3. ' C' → logprob: -11.500441551208496
    4. '
' → logprob: -14.875441551208496
    5. ' ' → logprob: -16.50044059753418
    6. '  ' → logprob: -16.62544059753418
    7. '	C' → logprob: -16.87544059753418
    8. '    
' → logprob: -17.12544059753418
    9. '```' → logprob: -18.87544059753418
    10. ',C' → logprob: -19.12544059753418

Token 402: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.006824774201959372
    2. '   ' → logprob: -5.006824970245361
    3. ' C' → logprob: -9.131824493408203
    4. ' ' → logprob: -14.381824493408203
    5. '
' → logprob: -15.131824493408203
    6. '  ' → logprob: -15.381824493408203
    7. '	C' → logprob: -16.006824493408203
    8. '```' → logprob: -16.881824493408203
    9. 'def' → logprob: -18.881824493408203
    10. '    
' → logprob: -19.381824493408203

Token 403: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -2.2961512513575144e-05
    2. '   ' → logprob: -11.000022888183594
    3. ' C' → logprob: -12.000022888183594
    4. ' ' → logprob: -20.500022888183594
    5. '  ' → logprob: -21.250022888183594
    6. '	C' → logprob: -21.375022888183594
    7. 'c' → logprob: -21.875022888183594
    8. '*C' → logprob: -23.125022888183594
    9. '_C' → logprob: -23.500022888183594
    10. '
' → logprob: -23.500022888183594

Token 404: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003559615579433739
    2. '=' → logprob: -8.12535572052002
    3. ' =' → logprob: -10.12535572052002
    4. '()
' → logprob: -11.12535572052002
    5. ' ()' → logprob: -13.25035572052002
    6. '(' → logprob: -13.50035572052002
    7. '()

' → logprob: -15.12535572052002
    8. 'def' → logprob: -15.50035572052002
    9. '()[' → logprob: -15.50035572052002
    10. '[]' → logprob: -15.75035572052002

Token 405: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -9.817902173381299e-05
    2. ' get' → logprob: -9.25009822845459
    3. '(get' → logprob: -13.12509822845459
    4. '=get' → logprob: -18.500097274780273
    5. '	get' → logprob: -19.000097274780273
    6. '.get' → logprob: -19.375097274780273
    7. 'getc' → logprob: -19.625097274780273
    8. '_get' → logprob: -20.125097274780273
    9. '[get' → logprob: -20.125097274780273
    10. ' ' → logprob: -21.000097274780273

Token 406: '_C' (ID: 1720)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1860668659210205
    2. '_C' → logprob: -1.9360668659210205
    3. 'C' → logprob: -3.6860668659210205
    4. 'get' → logprob: -8.686066627502441
    5. '(' → logprob: -8.936066627502441
    6. '[]' → logprob: -10.186066627502441
    7. 'A' → logprob: -10.686066627502441
    8. '()[' → logprob: -11.186066627502441
    9. '_A' → logprob: -11.186066627502441
    10. '())' → logprob: -11.436066627502441

Token 407: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043090201914310455
    2. 'D' → logprob: -3.1680901050567627
    3. '    
' → logprob: -10.168089866638184
    4. '
' → logprob: -10.668089866638184
    5. ' D' → logprob: -10.918089866638184
    6. '```' → logprob: -12.543089866638184
    7. '	D' → logprob: -13.168089866638184
    8. ' ' → logprob: -13.293089866638184
    9. '   ' → logprob: -13.543089866638184
    10. '  ' → logprob: -14.168089866638184

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021485965698957443
    2. 'D' → logprob: -6.502148628234863
    3. '    
' → logprob: -8.502148628234863
    4. '
' → logprob: -8.627148628234863
    5. '```' → logprob: -8.627148628234863
    6. ' D' → logprob: -9.752148628234863
    7. '<|end|>' → logprob: -11.627148628234863
    8. '  
' → logprob: -12.127148628234863
    9. '	D' → logprob: -12.502148628234863
    10. '``' → logprob: -12.627148628234863

Token 409: ' A' (ID: 355)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0008223761687986553
    2. '   ' → logprob: -7.3758225440979
    3. 'A' (adapté à ' A') → logprob: -9.125822067260742
    4. ' D' → logprob: -9.375822067260742
    5. ' ' → logprob: -14.125822067260742
    6. '    
' → logprob: -14.875822067260742
    7. '  ' → logprob: -14.875822067260742
    8. '
' → logprob: -15.500822067260742
    9. '	D' → logprob: -15.875822067260742
    10. '#' → logprob: -16.375822067260742

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890212535858154
    2. '=' → logprob: -2.578902244567871
    3. '.sort' → logprob: -12.203902244567871
    4. ',' → logprob: -12.703902244567871
    5. '_sorted' → logprob: -13.703902244567871
    6. '.reverse' → logprob: -14.078902244567871
    7. ')' → logprob: -14.578902244567871
    8. '.' → logprob: -14.703902244567871
    9. 'sorted' → logprob: -14.953902244567871
    10. ' =
' → logprob: -15.453902244567871

Token 411: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.10048992931842804
    2. 'reverse' → logprob: -2.350489854812622
    3. ' np' → logprob: -8.475489616394043
    4. 'np' → logprob: -10.225489616394043
    5. ' sorted' → logprob: -10.475489616394043
    6. 'sorted' → logprob: -12.850489616394043
    7. ' reversed' → logprob: -13.100489616394043
    8. '   ' → logprob: -13.225489616394043
    9. ' ' → logprob: -13.600489616394043
    10. '.reverse' → logprob: -14.475489616394043

Token 412: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. '_sorted' → logprob: -15.500004768371582
    4. 'sort' → logprob: -15.625004768371582
    5. '_s' → logprob: -17.1250057220459
    6. ' _' → logprob: -17.2500057220459
    7. '_reverse' → logprob: -18.0000057220459
    8. '_SORT' → logprob: -18.0000057220459
    9. '_sum' → logprob: -18.5000057220459
    10. '_scale' → logprob: -18.6250057220459

Token 413: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -4.842555426876061e-06
    2. 'array' → logprob: -12.375004768371582
    3. '_arr' → logprob: -15.125004768371582
    4. 'Array' → logprob: -15.875004768371582
    5. 'arr' → logprob: -16.8750057220459
    6. 'A' → logprob: -16.8750057220459
    7. '_' → logprob: -17.5000057220459
    8. 'd' → logprob: -17.7500057220459
    9. 'rray' → logprob: -18.0000057220459
    10. '_sort' → logprob: -18.6250057220459

Token 414: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.500006675720215
    4. '(arr' → logprob: -16.0000057220459
    5. '(
' → logprob: -17.0000057220459
    6. '((' → logprob: -18.7500057220459
    7. '(a' → logprob: -19.0000057220459
    8. '(Array' → logprob: -19.2500057220459
    9. '(array' → logprob: -19.7500057220459
    10. '(C' → logprob: -20.0000057220459

Token 415: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859623312950134
    2. ')
' → logprob: -3.048596143722534
    3. ')
' → logprob: -11.798596382141113
    4. ')

' → logprob: -13.673596382141113
    5. '),' → logprob: -16.423595428466797
    6. ' )' → logprob: -16.423595428466797
    7. ')#' → logprob: -17.798595428466797
    8. ' )
' → logprob: -18.173595428466797
    9. '   ' → logprob: -18.423595428466797
    10. ')\
' → logprob: -18.548595428466797

Token 416: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1618853658437729
    2. '   ' → logprob: -1.911885380744934
    3. ' B' → logprob: -6.4118852615356445
    4. ' ' → logprob: -11.536885261535645
    5. '```' → logprob: -12.536885261535645
    6. '  ' → logprob: -13.036885261535645
    7. '	B' → logprob: -13.536885261535645
    8. '
' → logprob: -15.536885261535645
    9. '    ' → logprob: -15.786885261535645
    10. '    
' → logprob: -16.16188621520996

Token 417: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -9.627176768844947e-05
    2. ' B' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.62509536743164
    4. '	B' → logprob: -19.12509536743164
    5. 'b' → logprob: -20.00009536743164
    6. '  ' → logprob: -21.62509536743164
    7. ' ' → logprob: -22.12509536743164
    8. '>B' → logprob: -22.87509536743164
    9. '    ' → logprob: -23.62509536743164
    10. '#' → logprob: -24.62509536743164

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ',' → logprob: -15.910223960876465
    4. ')' → logprob: -16.66022491455078
    5. ' ' → logprob: -17.91022491455078
    6. '＝' → logprob: -18.78522491455078
    7. '(' → logprob: -18.91022491455078
    8. '   ' → logprob: -19.66022491455078
    9. '_' → logprob: -20.41022491455078
    10. '.' → logprob: -20.53522491455078

Token 419: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0619683600962162
    2. ' reverse' → logprob: -2.8119683265686035
    3. '(reverse' → logprob: -14.311968803405762
    4. '.reverse' → logprob: -16.686967849731445
    5. '_reverse' → logprob: -17.686967849731445
    6. ' ' → logprob: -20.061967849731445
    7. '   ' → logprob: -20.311967849731445
    8. 'Reverse' → logprob: -20.811967849731445
    9. '    ' → logprob: -21.311967849731445
    10. '
' → logprob: -21.436967849731445

Token 420: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -2.069664333248511e-05
    2. 'sort' → logprob: -10.875020980834961
    3. '_' → logprob: -13.375020980834961
    4. ' sort' → logprob: -17.50002098083496
    5. '_SORT' → logprob: -17.50002098083496
    6. '_s' → logprob: -17.62502098083496
    7. '_sorted' → logprob: -17.62502098083496
    8. '_reverse' → logprob: -17.75002098083496
    9. ' _' → logprob: -18.00002098083496
    10. 'Sort' → logprob: -18.25002098083496

Token 421: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -7.107425062713446e-06
    2. 'array' → logprob: -11.875006675720215
    3. 'Array' → logprob: -17.75000762939453
    4. 'sort' → logprob: -18.00000762939453
    5. '_sort' → logprob: -18.75000762939453
    6. '_ARRAY' → logprob: -19.37500762939453
    7. 'arr' → logprob: -20.12500762939453
    8. '_arr' → logprob: -20.62500762939453
    9. 'rray' → logprob: -21.25000762939453
    10. '_arrays' → logprob: -21.75000762939453

Token 422: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. ' (' → logprob: -16.25
    4. 'B' → logprob: -16.625
    5. '(C' → logprob: -18.375
    6. '(b' → logprob: -18.875
    7. '(
' → logprob: -19.125
    8. '_B' → logprob: -19.5
    9. '(A' → logprob: -19.75
    10. 'Array' → logprob: -20.0

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759657621383667
    2. ')
' → logprob: -0.8259657621383667
    3. '   ' → logprob: -11.200965881347656
    4. ')
' → logprob: -11.450965881347656
    5. ')

' → logprob: -13.450965881347656
    6. ' )
' → logprob: -15.325965881347656
    7. '),' → logprob: -15.950965881347656
    8. ' )' → logprob: -16.200965881347656
    9. ')`
' → logprob: -17.950965881347656
    10. '())
' → logprob: -18.075965881347656

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31380900740623474
    2. 'C' → logprob: -1.5638090372085571
    3. ' C' → logprob: -2.8138089179992676
    4. ' ' → logprob: -10.688809394836426
    5. '  ' → logprob: -12.813809394836426
    6. '```' → logprob: -13.438809394836426
    7. '
' → logprob: -14.563809394836426
    8. 'B' → logprob: -15.688809394836426
    9. '    ' → logprob: -15.688809394836426
    10. '	C' → logprob: -15.938809394836426

Token 425: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0006291598547250032
    2. ' C' → logprob: -7.37562894821167
    3. '   ' → logprob: -13.000629425048828
    4. '
' → logprob: -15.375629425048828
    5. ' ' → logprob: -15.625629425048828
    6. '  ' → logprob: -18.375629425048828
    7. '	C' → logprob: -19.250629425048828
    8. '    
' → logprob: -19.875629425048828
    9. 'c' → logprob: -20.000629425048828
    10. '
' → logprob: -20.375629425048828

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687121868133545
    2. ' =' → logprob: -1.1368712186813354
    3. '(' → logprob: -16.511871337890625
    4. ' ' → logprob: -16.886871337890625
    5. ')' → logprob: -17.136871337890625
    6. '＝' → logprob: -17.136871337890625
    7. '=C' → logprob: -17.136871337890625
    8. '_=' → logprob: -18.386871337890625
    9. '_' → logprob: -18.636871337890625
    10. '  ' → logprob: -18.761871337890625

Token 427: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.1269291490316391
    2. ' reverse' → logprob: -2.1269290447235107
    3. '(reverse' → logprob: -14.12692928314209
    4. ' ' → logprob: -15.62692928314209
    5. '.reverse' → logprob: -16.251928329467773
    6. '   ' → logprob: -17.126928329467773
    7. 're' → logprob: -17.751928329467773
    8. '_reverse' → logprob: -17.751928329467773
    9. '  ' → logprob: -17.876928329467773
    10. ' reversed' → logprob: -19.251928329467773

Token 428: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -4.572941179503687e-05
    2. 'sort' → logprob: -10.000045776367188
    3. '_' → logprob: -16.250045776367188
    4. 'Sort' → logprob: -17.125045776367188
    5. '_sorted' → logprob: -17.250045776367188
    6. '```' → logprob: -17.250045776367188
    7. '_reverse' → logprob: -17.625045776367188
    8. '_SORT' → logprob: -18.625045776367188
    9. 'sorted' → logprob: -19.875045776367188
    10. 'array' → logprob: -19.875045776367188

Token 429: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -7.896309739408025e-07
    2. 'array' → logprob: -14.500000953674316
    3. '_sort' → logprob: -15.625000953674316
    4. 'sort' → logprob: -16.75
    5. 'Array' → logprob: -17.5
    6. '_ARRAY' → logprob: -19.5
    7. '_arr' → logprob: -20.25
    8. '_sorted' → logprob: -20.625
    9. 'arr' → logprob: -21.375
    10. '_' → logprob: -21.5

Token 430: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -14.625000953674316
    3. '(' → logprob: -15.000000953674316
    4. 'C' → logprob: -15.375000953674316
    5. '(
' → logprob: -18.750001907348633
    6. '(c' → logprob: -19.250001907348633
    7. '(CC' → logprob: -20.000001907348633
    8. '(Cs' → logprob: -20.125001907348633
    9. '((' → logprob: -20.375001907348633
    10. ')' → logprob: -20.500001907348633

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026205103495158255
    2. ')
' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.250262260437012
    4. ')

' → logprob: -15.625262260437012
    5. ')
' → logprob: -16.625261306762695
    6. ' )' → logprob: -16.625261306762695
    7. '),' → logprob: -17.375261306762695
    8. ')#' → logprob: -17.875261306762695
    9. '#' → logprob: -18.625261306762695
    10. ').' → logprob: -19.125261306762695

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16071614623069763
    2. 'D' → logprob: -1.91071617603302
    3. ' D' → logprob: -7.9107160568237305
    4. '```' → logprob: -9.66071605682373
    5. ' ' → logprob: -10.78571605682373
    6. '  ' → logprob: -11.41071605682373
    7. '
' → logprob: -11.53571605682373
    8. '	D' → logprob: -11.78571605682373
    9. '    
' → logprob: -12.28571605682373
    10. '>D' → logprob: -13.03571605682373

Token 433: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -3.128163257315464e-07
    2. ' D' → logprob: -15.625
    3. '   ' → logprob: -16.125
    4. 'import' → logprob: -17.25
    5. '    
' → logprob: -19.0
    6. 'from' → logprob: -19.125
    7. 'result' → logprob: -19.625
    8. '
' → logprob: -19.625
    9. '```' → logprob: -20.0
    10. '#' → logprob: -20.125

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814994215965271
    2. '=' → logprob: -4.0181498527526855
    3. ' =
' → logprob: -17.893150329589844
    4. '=D' → logprob: -18.268150329589844
    5. '＝' → logprob: -18.518150329589844
    6. '=create' → logprob: -18.893150329589844
    7. ' ' → logprob: -19.018150329589844
    8. ',' → logprob: -19.643150329589844
    9. ' =)' → logprob: -19.643150329589844
    10. '=[]' → logprob: -19.768150329589844

Token 435: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.20141908526420593
    2. 'build' → logprob: -1.7014191150665283
    3. '	build' → logprob: -12.82641887664795
    4. '(build' → logprob: -13.70141887664795
    5. ' buil' → logprob: -13.95141887664795
    6. '   ' → logprob: -15.20141887664795
    7. '_build' → logprob: -15.20141887664795
    8. ' buildup' → logprob: -15.45141887664795
    9. '.build' → logprob: -16.576419830322266
    10. ' ' → logprob: -16.826419830322266

Token 436: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: 0.0
    2. 'D' → logprob: -17.625
    3. '_B' → logprob: -19.5
    4. ' _' → logprob: -19.75
    5. '```' → logprob: -20.125
    6. '_C' → logprob: -20.75
    7. '
' → logprob: -20.875
    8. '\' → logprob: -20.875
    9. ')_' → logprob: -21.5
    10. '	D' → logprob: -21.5

Token 437: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00035262384335510433
    2. '(D' → logprob: -8.00035285949707
    3. 'D' → logprob: -11.12535285949707
    4. '(' → logprob: -13.12535285949707
    5. '(C' → logprob: -15.62535285949707
    6. ' (' → logprob: -16.12535285949707
    7. 'A' → logprob: -16.37535285949707
    8. '```' → logprob: -17.12535285949707
    9. '((' → logprob: -17.75035285949707
    10. '(B' → logprob: -18.12535285949707

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ',B' → logprob: -11.625011444091797
    3. ' ,' → logprob: -13.250011444091797
    4. ',
' → logprob: -15.375011444091797
    5. 'B' → logprob: -17.375011444091797
    6. '   ' → logprob: -19.000011444091797
    7. '```' → logprob: -19.625011444091797
    8. ')' → logprob: -20.125011444091797
    9. ',D' → logprob: -20.250011444091797
    10. ',\
' → logprob: -20.250011444091797

Token 439: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12692853808403015
    2. ' B' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.251928329467773
    4. '   ' → logprob: -15.501928329467773
    5. '<|end|>' → logprob: -16.876928329467773
    6. ',' → logprob: -18.001928329467773
    7. '	B' → logprob: -18.126928329467773
    8. '  ' → logprob: -18.376928329467773
    9. '    ' → logprob: -18.876928329467773
    10. '>B' → logprob: -19.251928329467773

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',C' → logprob: -13.250019073486328
    4. ',
' → logprob: -14.625019073486328
    5. 'C' → logprob: -15.125019073486328
    6. ',B' → logprob: -16.875019073486328
    7. ' C' → logprob: -18.375019073486328
    8. '   ' → logprob: -18.750019073486328
    9. '‌,' → logprob: -19.250019073486328
    10. ')' → logprob: -19.250019073486328

Token 441: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0024756586644798517
    2. ' C' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.00247573852539
    4. '   ' → logprob: -18.25247573852539
    5. '  ' → logprob: -19.00247573852539
    6. 'B' → logprob: -19.37747573852539
    7. '<|end|>' → logprob: -20.50247573852539
    8. 'c' → logprob: -20.62747573852539
    9. '>C' → logprob: -21.00247573852539
    10. '	C' → logprob: -21.00247573852539

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ',K' → logprob: -11.250020027160645
    3. ' ,' → logprob: -11.875020027160645
    4. ',
' → logprob: -15.625020027160645
    5. 'K' → logprob: -18.12502098083496
    6. '‌,' → logprob: -18.87502098083496
    7. ')' → logprob: -19.12502098083496
    8. ',k' → logprob: -19.37502098083496
    9. '```' → logprob: -19.62502098083496
    10. '   ' → logprob: -19.62502098083496

Token 443: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.5491004129871726e-05
    2. ' K' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.875045776367188
    4. ' ' → logprob: -20.750045776367188
    5. '
' → logprob: -21.625045776367188
    6. '	K' → logprob: -22.000045776367188
    7. '  ' → logprob: -23.000045776367188
    8. ')' → logprob: -23.125045776367188
    9. '
' → logprob: -23.750045776367188
    10. ',K' → logprob: -24.125045776367188

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ',X' → logprob: -12.875016212463379
    4. ',
' → logprob: -14.500016212463379
    5. '   ' → logprob: -15.750016212463379
    6. ',Y' → logprob: -17.875017166137695
    7. ')' → logprob: -18.500017166137695
    8. ',K' → logprob: -19.125017166137695
    9. '‌,' → logprob: -19.375017166137695
    10. ',\
' → logprob: -19.500017166137695

Token 445: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -5.836499985889532e-05
    2. ' X' → logprob: -9.7500581741333
    3. '
' → logprob: -18.750059127807617
    4. ' ' → logprob: -18.750059127807617
    5. '   ' → logprob: -19.000059127807617
    6. '  ' → logprob: -21.250059127807617
    7. 'Y' → logprob: -22.000059127807617
    8. ')' → logprob: -22.500059127807617
    9. '	X' → logprob: -22.750059127807617
    10. 'Xs' → logprob: -22.875059127807617

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.898723561083898e-05
    2. ',Y' → logprob: -9.750079154968262
    3. ' ,' → logprob: -10.875079154968262
    4. '   ' → logprob: -13.500079154968262
    5. 'Y' → logprob: -15.875079154968262
    6. ',
' → logprob: -16.125078201293945
    7. ',y' → logprob: -16.125078201293945
    8. ')' → logprob: -18.125078201293945
    9. '  ' → logprob: -19.125078201293945
    10. '```' → logprob: -19.125078201293945

Token 447: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00020354038861114532
    2. ' Y' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.62520408630371
    4. '	Y' → logprob: -17.62520408630371
    5. ' ' → logprob: -19.12520408630371
    6. '  ' → logprob: -19.37520408630371
    7. ',Y' → logprob: -20.37520408630371
    8. ')' → logprob: -20.75020408630371
    9. 'y' → logprob: -20.87520408630371
    10. 'YS' → logprob: -21.50020408630371

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012880703434348106
    2. ',Z' → logprob: -9.750128746032715
    3. ' ,' → logprob: -10.125128746032715
    4. ')' → logprob: -10.500128746032715
    5. 'Z' → logprob: -13.375128746032715
    6. ',
' → logprob: -13.875128746032715
    7. '   ' → logprob: -15.625128746032715
    8. ',z' → logprob: -17.62512969970703
    9. ',\
' → logprob: -17.62512969970703
    10. ' Z' → logprob: -17.87512969970703

Token 449: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.0024762547109276056
    2. ' Z' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.127476692199707
    4. ' ' → logprob: -15.752476692199707
    5. '  ' → logprob: -16.25247573852539
    6. '	Z' → logprob: -16.62747573852539
    7. ',Z' → logprob: -17.37747573852539
    8. ')' → logprob: -17.62747573852539
    9. 'z' → logprob: -18.25247573852539
    10. '    ' → logprob: -19.25247573852539

Token 450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195854902267456
    2. ')
' → logprob: -1.5019586086273193
    3. ')
' → logprob: -10.501958847045898
    4. '   ' → logprob: -13.501958847045898
    5. ')

' → logprob: -14.751958847045898
    6. ')`
' → logprob: -17.3769588470459
    7. ' )' → logprob: -17.6269588470459
    8. ' )
' → logprob: -17.6269588470459
    9. ' ' → logprob: -17.7519588470459
    10. ')\
' → logprob: -17.8769588470459

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09865879267454147
    2. 'D' → logprob: -2.598658800125122
    3. ' D' → logprob: -4.223658561706543
    4. '
' → logprob: -5.473658561706543
    5. '```' → logprob: -7.473658561706543
    6. '    
' → logprob: -10.223658561706543
    7. ' ' → logprob: -10.223658561706543
    8. '  ' → logprob: -10.348658561706543
    9. '	D' → logprob: -10.723658561706543
    10. '``' → logprob: -11.848658561706543

Token 452: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.00010282796574756503
    2. '   ' → logprob: -10.000102996826172
    3. ' D' → logprob: -10.000102996826172
    4. 'sorted' → logprob: -11.750102996826172
    5. '
' → logprob: -13.250102996826172
    6. 'sort' → logprob: -13.500102996826172
    7. '  ' → logprob: -15.125102996826172
    8. ' ' → logprob: -15.125102996826172
    9. '```' → logprob: -16.625102996826172
    10. 'Sorted' → logprob: -16.625102996826172

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3191029131412506
    2. '=' → logprob: -1.3191028833389282
    3. '_sorted' → logprob: -5.194102764129639
    4. 'sorted' → logprob: -8.319103240966797
    5. 'Sorted' → logprob: -11.569103240966797
    6. ' ' → logprob: -11.819103240966797
    7. ' =
' → logprob: -12.569103240966797
    8. '_' → logprob: -13.569103240966797
    9. ' sorted' → logprob: -13.694103240966797
    10. '=
' → logprob: -13.694103240966797

Token 454: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.1269504725933075
    2. ' sort' → logprob: -2.12695050239563
    3. 'reverse' → logprob: -11.87695026397705
    4. 'sorted' → logprob: -12.00195026397705
    5. 'np' → logprob: -12.37695026397705
    6. ' np' → logprob: -13.50195026397705
    7. ' sorted' → logprob: -13.62695026397705
    8. ' reverse' → logprob: -13.62695026397705
    9. '	sort' → logprob: -14.25195026397705
    10. ' ' → logprob: -14.75195026397705

Token 455: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -1.9361264946837764e-07
    2. '(D' → logprob: -16.375
    3. '```' → logprob: -16.75
    4. 'D' → logprob: -17.875
    5. '_' → logprob: -17.875
    6. '(_' → logprob: -18.125
    7. '	D' → logprob: -19.375
    8. '\' → logprob: -19.75
    9. '_desc' → logprob: -19.875
    10. '   ' → logprob: -20.125

Token 456: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.012188907712697983
    2. '_D' → logprob: -4.512188911437988
    3. 'descending' → logprob: -6.887188911437988
    4. 'Descending' → logprob: -9.762188911437988
    5. 'D' → logprob: -10.762188911437988
    6. '_des' → logprob: -11.387188911437988
    7. 'desc' → logprob: -11.762188911437988
    8. '_DESC' → logprob: -12.012188911437988
    9. '_decl' → logprob: -12.637188911437988
    10. 'ing' → logprob: -13.262188911437988

Token 457: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.004420505370944738
    2. 'ing' → logprob: -5.504420280456543
    3. 'anding' → logprob: -9.379420280456543
    4. 'ding' → logprob: -9.754420280456543
    5. 'inding' → logprob: -9.754420280456543
    6. 'eding' → logprob: -10.754420280456543
    7. 'inging' → logprob: -11.129420280456543
    8. 'D' → logprob: -11.254420280456543
    9. 'enging' → logprob: -11.254420280456543
    10. '
' → logprob: -11.254420280456543

Token 458: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: 0.0
    2. 'D' → logprob: -17.625
    3. '(' → logprob: -18.875
    4. ' (' → logprob: -20.375
    5. '```' → logprob: -20.375
    6. '(
' → logprob: -20.625
    7. '[D' → logprob: -22.0
    8. '(d' → logprob: -22.25
    9. '
' → logprob: -22.375
    10. '(Dense' → logprob: -22.625

Token 459: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38698810338974
    2. ')' → logprob: -1.1369881629943848
    3. '   ' → logprob: -9.511987686157227
    4. ')
' → logprob: -10.136987686157227
    5. ')

' → logprob: -13.511987686157227
    6. ' )
' → logprob: -13.886987686157227
    7. ' ' → logprob: -14.636987686157227
    8. ' )' → logprob: -15.011987686157227
    9. '()' → logprob: -15.761987686157227
    10. ')`
' → logprob: -16.011987686157227

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000377645599655807
    2. 'print' → logprob: -8.000377655029297
    3. ' print' → logprob: -10.125377655029297
    4. '```' → logprob: -13.500377655029297
    5. '
' → logprob: -14.375377655029297
    6. '    
' → logprob: -16.250377655029297
    7. '	print' → logprob: -16.875377655029297
    8. '(print' → logprob: -17.375377655029297
    9. '       ' → logprob: -18.125377655029297
    10. '   ' → logprob: -18.625377655029297

Token 461: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0806744396686554
    2. '   ' → logprob: -2.580674409866333
    3. ' print' → logprob: -6.330674648284912
    4. '	print' → logprob: -14.205674171447754
    5. '```' → logprob: -14.455674171447754
    6. ' ' → logprob: -15.080674171447754
    7. '  ' → logprob: -15.205674171447754
    8. '(print' → logprob: -15.705674171447754
    9. '#print' → logprob: -15.830674171447754
    10. '.print' → logprob: -16.33067512512207

Token 462: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. '
' → logprob: -17.25
    4. 'first' → logprob: -17.75
    5. '_last' → logprob: -17.75
    6. '_' → logprob: -18.25
    7. ')_' → logprob: -18.375
    8. '__' → logprob: -18.625
    9. 'First' → logprob: -18.75
    10. '`' → logprob: -19.25

Token 463: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -9.968312951968983e-06
    2. '```' → logprob: -12.125009536743164
    3. '_k' → logprob: -13.500009536743164
    4. '(K' → logprob: -13.500009536743164
    5. '_' → logprob: -14.125009536743164
    6. '`' → logprob: -14.875009536743164
    7. 'K' → logprob: -15.625009536743164
    8. ' _' → logprob: -16.750009536743164
    9. '
' → logprob: -17.250009536743164
    10. '<K' → logprob: -17.250009536743164

Token 464: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -6.704273118884885e-07
    2. '_element' → logprob: -14.500000953674316
    3. 'elements' → logprob: -17.25
    4. '_items' → logprob: -18.25
    5. '_values' → logprob: -18.625
    6. '_ele' → logprob: -18.625
    7. '_' → logprob: -19.0
    8. '_objects' → logprob: -19.75
    9. '```' → logprob: -19.875
    10. '_parts' → logprob: -20.0

Token 465: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. ' (' → logprob: -16.125
    4. '(
' → logprob: -18.625
    5. '```' → logprob: -18.75
    6. 'D' → logprob: -19.25
    7. '(DE' → logprob: -21.0
    8. '\(' → logprob: -21.125
    9. '(Dense' → logprob: -21.125
    10. ',D' → logprob: -21.25

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047511752927675843
    2. ' ,' → logprob: -7.75047492980957
    3. ',D' → logprob: -10.50047492980957
    4. '(D' → logprob: -11.25047492980957
    5. ',K' → logprob: -12.50047492980957
    6. '   ' → logprob: -16.00047492980957
    7. ')' → logprob: -16.25047492980957
    8. '(' → logprob: -16.75047492980957
    9. '(K' → logprob: -17.62547492980957
    10. 'K' → logprob: -19.00047492980957

Token 467: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.011048054322600365
    2. ' K' → logprob: -4.511047840118408
    3. '	K' → logprob: -16.51104736328125
    4. ' ' → logprob: -16.51104736328125
    5. '   ' → logprob: -17.13604736328125
    6. ')' → logprob: -17.26104736328125
    7. ' ' → logprob: -18.13604736328125
    8. '
' → logprob: -18.51104736328125
    9. ',K' → logprob: -19.26104736328125
    10. '>K' → logprob: -19.38604736328125

Token 468: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.250003814697266
    4. '())' → logprob: -15.250003814697266
    5. '()' → logprob: -15.875003814697266
    6. ')

' → logprob: -16.625003814697266
    7. ')#' → logprob: -17.875003814697266
    8. '))' → logprob: -19.250003814697266
    9. ')`' → logprob: -19.250003814697266
    10. '```' → logprob: -19.500003814697266

Token 469: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001549089647596702
    2. '
' → logprob: -9.125154495239258
    3. 'main' → logprob: -10.500154495239258
    4. ' if' → logprob: -11.375154495239258
    5. '```' → logprob: -12.375154495239258
    6. '#' → logprob: -13.500154495239258
    7. '\n' → logprob: -14.375154495239258
    8. '<|end|>' → logprob: -15.750154495239258
    9. 'print' → logprob: -15.875154495239258
    10. '

' → logprob: -16.000154495239258

Token 470: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032997471280395985
    2. '(' → logprob: -5.753299713134766
    3. '()
' → logprob: -9.628299713134766
    4. '#' → logprob: -11.003299713134766
    5. '(
' → logprob: -11.503299713134766
    6. '<|end|>' → logprob: -11.503299713134766
    7. '```' → logprob: -11.503299713134766
    8. '();' → logprob: -12.878299713134766
    9. ' ()' → logprob: -13.753299713134766
    10. '
' → logprob: -13.878299713134766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 468
Tokens correctement prédits (1ère position, stricte): 217
Tokens correctement prédits (1ère position, avec adaptation): 238
Tokens correctement prédits (top 10): 411
Précision stricte (1ère position): 46.37%
Précision adaptée (1ère position): 50.85%
Précision (top 10): 87.82%
================================================================================
