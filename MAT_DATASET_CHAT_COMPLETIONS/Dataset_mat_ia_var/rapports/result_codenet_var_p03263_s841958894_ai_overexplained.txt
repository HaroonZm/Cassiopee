================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    # On commence par obtenir les dimensions du terrain, la hauteur (H) et la largeur (W)
    # input() prend la saisie utilisateur, split() sépare les éléments sur chaque espace, map(int, ...) convertit chaque élément en entier
    H, W = map(int, input().split())
    
    # On initialise le terrain (field), qui est une grille de H lignes et W colonnes 
    # Chaque ligne est saisie par l'utilisateur ; on convertit chaque nombre de la ligne en int par map(int, ...)
    # Pour chaque ligne de 0 à H-1 (total H lignes), on crée une sous-liste (donc une matrice)
    field = [list(map(int, input().split())) for _ in range(H)]

    # nh représente la position actuelle en ligne (indice de la ligne)
    # On démarre tout en haut à gauche, donc nh = 0
    nh = 0
    # nw représente la position actuelle en colonne (indice de la colonne)
    # On commence tout à gauche, donc nw = 0
    nw = 0
    # ans est la liste qui contiendra toutes les opérations menées, chaque opération sera une liste de positions [start_row, start_col, end_row, end_col]
    ans = []
    # haveCoin est une variable booléenne utilisée comme indicateur pour savoir si la case précédente avait un nombre impair
    haveCoin = False

    # On utilise une boucle éternelle (while True:) qui ne termine que manuellement par break 
    while True:

        # Si la valeur de la case actuelle est impaire (vérifié par le modulo 2, % 2 != 0)
        if field[nh][nw] % 2 != 0:
            # Si on avait déjà un "coin" du mouvement précédent, on l'enlève puisque deux impairs successifs s'annulent
            if haveCoin:
                haveCoin = False
            else:
                # Sinon, on doit transporter un "coin" à la case suivante
                haveCoin = True
        
        # frm représente la position de départ du mouvement (ou "from"), formatée en base 1 (lignes/colonnes commencent à 1), donc nh+1 et nw+1
        frm = [nh+1, nw+1]

        # Déplacement sur la grille en zigzag (ligne paire vers la droite, impaire vers la gauche)
        if nh % 2 == 0:
            # Si on est sur une ligne paire (comptée à partir de 0), on avance de colonne (nw += 1)
            nw += 1
            # Si on dépasse la dernière colonne (nw == W), on descend à la ligne suivante (nh += 1), 
            # et on place le pointeur à la dernière colonne à droite (nw = W-1)
            if nw == W:
                nh += 1
                nw = W-1
        else:
            # Si on est sur une ligne impaire, on recule de colonne (nw -= 1)
            nw -= 1
            # Si on va avant la première colonne (nw == -1), on descend à la ligne suivante (nh += 1)
            # et on remet le pointeur en début de ligne (nw = 0)
            if nw == -1:
                nh += 1
                nw = 0

        # to représente la position d'arrivée, toujours en base 1 (donc nh+1 et nw+1)
        to = [nh+1, nw+1]

        # Si nh atteint H, cela signifie qu'on a traité toutes les lignes, donc on termine la boucle
        if nh == H:
            break

        # Si haveCoin est True après le déplacement, cela signifie qu'on doit enregistrer l'action qui consiste à "transporter" à la case suivante
        # On enregistre alors le mouvement depuis frm vers to
        if haveCoin:
            ans.append(frm + to)
    
    # Après avoir fini tous les mouvements, on affiche le nombre total d'opérations effectuées (taille de ans)
    print(len(ans))
    # On affiche chaque opération sur une ligne, en déballant la liste pour séparer les éléments par des espaces
    for elem in ans:
        print(*elem)

# Ce bloc permet de s'assurer que la fonction solve() ne s'exécute que si le script est lancé directement,
# et pas lors d'un import dans un autre module Python
if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5932226777076721
    2. '\' → logprob: -1.5932226181030273
    3. '   ' → logprob: -2.2182226181030273
    4. '\n' → logprob: -2.4682226181030273
    5. '(' → logprob: -4.218222618103027
    6. ':' → logprob: -4.718222618103027
    7. ''' → logprob: -5.218222618103027
    8. '    
' → logprob: -5.218222618103027
    9. '``' → logprob: -6.218222618103027
    10. '
' → logprob: -6.218222618103027

Token 4: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4673477411270142
    2. 'n' → logprob: -1.5923477411270142
    3. 'x' → logprob: -2.0923476219177246
    4. '   ' → logprob: -2.0923476219177246
    5. '\' → logprob: -2.4673476219177246
    6. 'a' → logprob: -2.5923476219177246
    7. 'i' → logprob: -3.4673476219177246
    8. '```' → logprob: -3.5923476219177246
    9. ' ' → logprob: -4.092347621917725
    10. '#' (adapté à ' #') → logprob: -4.342347621917725

Token 5: ' On' (ID: 2160)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9607382416725159
    2. ' ' → logprob: -1.460738182067871
    3. '   ' → logprob: -1.710738182067871
    4. 'n' → logprob: -2.710738182067871
    5. 'pass' → logprob: -2.960738182067871
    6. ' n' → logprob: -3.585738182067871
    7. '    ' → logprob: -3.710738182067871
    8. ' input' → logprob: -4.460738182067871
    9. 'input' → logprob: -5.210738182067871
    10. ' #' → logprob: -5.710738182067871

Token 6: ' commence' (ID: 44755)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008799398317933083
    2. ' the' → logprob: -5.1337995529174805
    3. ' e' → logprob: -6.6337995529174805
    4. ' a' → logprob: -7.6337995529174805
    5. ' input' → logprob: -8.13379955291748
    6. 'eline' → logprob: -8.88379955291748
    7. 'line' → logprob: -9.00879955291748
    8. 'el' → logprob: -9.13379955291748
    9. 'es' → logprob: -9.63379955291748
    10. 'ce' → logprob: -9.88379955291748

Token 7: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04938965290784836
    2. 'par' → logprob: -3.424389600753784
    3. ' ' → logprob: -4.799389839172363
    4. ' à' → logprob: -5.424389839172363
    5. ' by' → logprob: -6.299389839172363
    6. '   ' → logprob: -7.799389839172363
    7. '_par' → logprob: -8.299389839172363
    8. '  ' → logprob: -9.174389839172363
    9. '	par' → logprob: -9.549389839172363
    10. ' a' → logprob: -9.674389839172363

Token 8: ' obtenir' (ID: 54423)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.9398298859596252
    2. '   ' → logprob: -1.1898298263549805
    3. ' ' → logprob: -2.8148298263549805
    4. ' récupérer' → logprob: -3.1898298263549805
    5. ' read' → logprob: -3.3148298263549805
    6. ' l' → logprob: -3.6898298263549805
    7. 'l' → logprob: -3.9398298263549805
    8. ' a' → logprob: -4.1898298263549805
    9. ' ' → logprob: -4.3148298263549805
    10. ' analyser' → logprob: -4.4398298263549805

Token 9: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47118616104125977
    2. ' l' → logprob: -1.9711861610412598
    3. ' la' → logprob: -2.0961861610412598
    4. '   ' → logprob: -2.9711861610412598
    5. ' un' → logprob: -4.22118616104126
    6. 'l' → logprob: -4.47118616104126
    7. ' ' → logprob: -4.47118616104126
    8. ' le' → logprob: -4.59618616104126
    9. ' une' → logprob: -5.34618616104126
    10. 'le' → logprob: -6.34618616104126

Token 10: ' dimensions' (ID: 23995)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1435569524765015
    2. 'd' → logprob: -1.3935569524765015
    3. ' données' → logprob: -1.7685569524765015
    4. 'n' → logprob: -2.268557071685791
    5. ' ' → logprob: -3.268557071685791
    6. 'l' → logprob: -3.518557071685791
    7. ' entr' → logprob: -3.893557071685791
    8. ' n' → logprob: -4.268557071685791
    9. ' data' → logprob: -4.643557071685791
    10. 'data' → logprob: -4.768557071685791

Token 11: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5520819425582886
    2. ' de' → logprob: -1.1770819425582886
    3. ' d' → logprob: -2.552082061767578
    4. ' des' → logprob: -4.677082061767578
    5. ' (' → logprob: -4.802082061767578
    6. '   ' → logprob: -5.052082061767578
    7. ' ,' → logprob: -5.927082061767578
    8. ' du' → logprob: -6.052082061767578
    9. ',' → logprob: -6.927082061767578
    10. '[' → logprob: -7.052082061767578

Token 12: ' terrain' (ID: 30461)
  Prédit: ' plateau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plateau' → logprob: -0.9707878828048706
    2. ' problème' → logprob: -1.7207878828048706
    3. ' ' → logprob: -2.22078800201416
    4. '   ' → logprob: -2.84578800201416
    5. ' tableau' → logprob: -2.84578800201416
    6. ' grid' → logprob: -3.09578800201416
    7. 'gr' → logprob: -3.22078800201416
    8. ' espace' → logprob: -3.59578800201416
    9. 'plate' → logprob: -4.22078800201416
    10. 'pro' → logprob: -4.34578800201416

Token 13: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8069614768028259
    2. '\n' → logprob: -1.5569615364074707
    3. '\' → logprob: -2.1819615364074707
    4. '    
' → logprob: -2.5569615364074707
    5. ' ' → logprob: -2.8069615364074707
    6. '```' → logprob: -4.056961536407471
    7. '    ' → logprob: -4.556961536407471
    8. '<|end|>' → logprob: -4.681961536407471
    9. '   
' → logprob: -5.056961536407471
    10. 'n' → logprob: -5.181961536407471

Token 14: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8896602392196655
    2. '    ' → logprob: -2.139660358428955
    3. ' x' → logprob: -2.264660358428955
    4. '   ' → logprob: -2.389660358428955
    5. ' ,' → logprob: -2.889660358428955
    6. ' n' → logprob: -3.264660358428955
    7. '<|end|>' → logprob: -3.264660358428955
    8. ' et' → logprob: -3.889660358428955
    9. ' d' → logprob: -4.014660358428955
    10. ' h' → logprob: -4.389660358428955

Token 15: ' hauteur' (ID: 72987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006235921755433083
    2. 's' → logprob: -6.1312360763549805
    3. '   ' → logprob: -6.8812360763549805
    4. ' hauteur' → logprob: -7.3812360763549805
    5. '  ' → logprob: -7.5062360763549805
    6. ' space' → logprob: -7.8812360763549805
    7. ' )' → logprob: -8.38123607635498
    8. '    ' → logprob: -8.63123607635498
    9. ' suite' → logprob: -8.75623607635498
    10. 'r' → logprob: -9.13123607635498

Token 16: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24625582993030548
    2. ' ,' → logprob: -2.246255874633789
    3. ' et' → logprob: -2.871255874633789
    4. ' ' → logprob: -4.121255874633789
    5. '   ' → logprob: -4.371255874633789
    6. 's' → logprob: -5.121255874633789
    7. '    ' → logprob: -5.246255874633789
    8. 'et' → logprob: -5.496255874633789
    9. ' du' → logprob: -6.121255874633789
    10. ' des' → logprob: -6.246255874633789

Token 17: 'H' (ID: 39)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23405605554580688
    2. ' )' → logprob: -2.359055995941162
    3. 'et' → logprob: -3.359055995941162
    4. ' et' → logprob: -3.484055995941162
    5. '),' → logprob: -3.734055995941162
    6. ',' → logprob: -5.109055995941162
    7. ' ),' → logprob: -5.109055995941162
    8. ' du' → logprob: -5.734055995941162
    9. ' ,' → logprob: -6.359055995941162
    10. 'du' → logprob: -6.609055995941162

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0072121103294193745
    2. '),' → logprob: -5.132212162017822
    3. ' )' → logprob: -7.132212162017822
    4. ',' → logprob: -7.882212162017822
    5. ' et' → logprob: -10.632211685180664
    6. ' ' → logprob: -11.007211685180664
    7. ' ),' → logprob: -11.132211685180664
    8. '=' → logprob: -11.257211685180664
    9. 'et' → logprob: -11.507211685180664
    10. 'e' → logprob: -11.882211685180664

Token 19: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17854025959968567
    2. '   ' → logprob: -2.6785402297973633
    3. ')' → logprob: -3.3035402297973633
    4. ' ,' → logprob: -3.6785402297973633
    5. ' ' → logprob: -4.553540229797363
    6. '<|end|>' → logprob: -4.553540229797363
    7. ' et' → logprob: -5.803540229797363
    8. ' and' → logprob: -6.428540229797363
    9. ' )' → logprob: -6.428540229797363
    10. ' =' → logprob: -6.428540229797363

Token 20: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2528073191642761
    2. 'la' → logprob: -2.627807378768921
    3. ' l' → logprob: -3.002807378768921
    4. ' largeur' → logprob: -3.002807378768921
    5. 'l' → logprob: -3.627807378768921
    6. 'large' → logprob: -4.377807140350342
    7. ' ' → logprob: -5.002807140350342
    8. ' ' → logprob: -6.627807140350342
    9. ' large' → logprob: -7.127807140350342
    10. 'larg' → logprob: -7.127807140350342

Token 21: ' largeur' (ID: 180807)
  Prédit: ' largeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largeur' → logprob: -0.08696731925010681
    2. ' large' → logprob: -3.0869672298431396
    3. ' ' → logprob: -3.9619672298431396
    4. 'large' → logprob: -4.211967468261719
    5. '_large' → logprob: -6.586967468261719
    6. '_' → logprob: -8.461967468261719
    7. ' ,' → logprob: -8.461967468261719
    8. '  ' → logprob: -8.586967468261719
    9. ',' → logprob: -8.711967468261719
    10. ' longueur' → logprob: -8.836967468261719

Token 22: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03310278058052063
    2. ',' → logprob: -4.408102989196777
    3. '(' → logprob: -5.158102989196777
    4. ' du' → logprob: -5.158102989196777
    5. '   ' → logprob: -6.408102989196777
    6. '(H' → logprob: -6.533102989196777
    7. '(S' → logprob: -7.283102989196777
    8. '(s' → logprob: -7.533102989196777
    9. ' ,' → logprob: -7.658102989196777
    10. ')' → logprob: -7.658102989196777

Token 23: 'W' (ID: 54)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2011880725622177
    2. ' )' → logprob: -2.326188087463379
    3. 'T' → logprob: -3.201188087463379
    4. 'L' → logprob: -3.326188087463379
    5. 'du' → logprob: -6.951188087463379
    6. '(' → logprob: -7.201188087463379
    7. '):' → logprob: -7.701188087463379
    8. '```' → logprob: -7.701188087463379
    9. '(T' → logprob: -7.701188087463379
    10. 'W' → logprob: -7.826188087463379

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1289866864681244
    2. '):' → logprob: -2.1289865970611572
    3. '   ' → logprob: -6.253986835479736
    4. '```' → logprob: -10.503986358642578
    5. ':' → logprob: -10.753986358642578
    6. ' )' → logprob: -10.878986358642578
    7. ',' → logprob: -10.878986358642578
    8. ' ):' → logprob: -12.003986358642578
    9. ' ' → logprob: -12.128986358642578
    10. ')
' → logprob: -12.128986358642578

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04743901640176773
    2. '```' → logprob: -3.7974390983581543
    3. '\n' → logprob: -4.672439098358154
    4. '
' → logprob: -5.047439098358154
    5. ':' → logprob: -5.922439098358154
    6. '    
' → logprob: -6.172439098358154
    7. '\' → logprob: -6.797439098358154
    8. ' ' → logprob: -8.172438621520996
    9. 'newline' → logprob: -8.797438621520996
    10. ',' → logprob: -8.797438621520996

Token 26: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051756352186203
    2. '\' → logprob: -4.176756381988525
    3. '```' → logprob: -4.176756381988525
    4. '\n' → logprob: -4.801756381988525
    5. '    
' → logprob: -5.426756381988525
    6. ' ' → logprob: -6.801756381988525
    7. 'newline' → logprob: -6.926756381988525
    8. '    ' → logprob: -7.301756381988525
    9. '[' → logprob: -7.676756381988525
    10. ''' → logprob: -7.676756381988525

Token 27: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009338518721051514
    2. '    
' → logprob: -8.000933647155762
    3. '    ' → logprob: -8.375933647155762
    4. '       ' → logprob: -9.125933647155762
    5. '```' → logprob: -9.375933647155762
    6. ' ' → logprob: -10.250933647155762
    7. '  ' → logprob: -10.500933647155762
    8. '\' → logprob: -10.875933647155762
    9. '‌' → logprob: -11.500933647155762
    10. '\n' → logprob: -12.000933647155762

Token 28: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7862808108329773
    2. ' =' → logprob: -0.9112808108329773
    3. '(' → logprob: -2.411280870437622
    4. '=' → logprob: -3.036280870437622
    5. 's' → logprob: -6.536280632019043
    6. ')' → logprob: -7.286280632019043
    7. '   ' → logprob: -7.536280632019043
    8. '_' → logprob: -8.161280632019043
    9. ' ' → logprob: -8.661280632019043
    10. '.' → logprob: -8.661280632019043

Token 29: ' prend' (ID: 37463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07181244343519211
    2. '(' → logprob: -3.196812391281128
    3. ' =' → logprob: -4.071812629699707
    4. ')' → logprob: -5.696812629699707
    5. '   ' → logprob: -5.946812629699707
    6. '=' → logprob: -6.446812629699707
    7. '(H' → logprob: -7.571812629699707
    8. '#' → logprob: -7.696812629699707
    9. ',' → logprob: -8.196812629699707
    10. 's' → logprob: -8.196812629699707

Token 30: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1292845010757446
    2. '()' → logprob: -1.1292845010757446
    3. ' une' → logprob: -2.629284381866455
    4. ' l' → logprob: -2.629284381866455
    5. ' la' → logprob: -3.004284381866455
    6. ' un' → logprob: -3.254284381866455
    7. '  ' → logprob: -3.379284381866455
    8. '   ' → logprob: -3.504284381866455
    9. '    ' → logprob: -3.629284381866455
    10. ' )' → logprob: -5.004284381866455

Token 31: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.624864399433136
    2. ' hauteur' → logprob: -1.6248643398284912
    3. ' ligne' → logprob: -2.749864339828491
    4. ' valeur' → logprob: -3.374864339828491
    5. ' prochaine' → logprob: -3.999864339828491
    6. ' taille' → logprob: -4.24986457824707
    7. '   ' → logprob: -4.24986457824707
    8. '  ' → logprob: -4.49986457824707
    9. 's' → logprob: -4.49986457824707
    10. ' chaîne' → logprob: -4.62486457824707

Token 32: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05097180977463722
    2. 'e' → logprob: -3.175971746444702
    3. 'sie' → logprob: -5.550971984863281
    4. 's' → logprob: -5.800971984863281
    5. 'le' → logprob: -8.050971984863281
    6. 'i' → logprob: -8.925971984863281
    7. 'ies' → logprob: -8.925971984863281
    8. 'rie' → logprob: -9.175971984863281
    9. 'es' → logprob: -9.550971984863281
    10. 'is' → logprob: -9.800971984863281

Token 33: ' utilisateur' (ID: 115595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6906037330627441
    2. '   ' → logprob: -1.4406037330627441
    3. '()' → logprob: -2.065603733062744
    4. '<|end|>' → logprob: -3.440603733062744
    5. ' ' → logprob: -3.565603733062744
    6. ' (' → logprob: -3.940603733062744
    7. ')' → logprob: -4.440603733062744
    8. '  ' → logprob: -4.440603733062744
    9. ',' → logprob: -5.315603733062744
    10. '(
' → logprob: -5.440603733062744

Token 34: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020517129451036453
    2. '    
' → logprob: -4.270517349243164
    3. '
' → logprob: -6.645517349243164
    4. '\n' → logprob: -7.145517349243164
    5. '   
' → logprob: -7.395517349243164
    6. '  ' → logprob: -7.645517349243164
    7. '\' → logprob: -7.645517349243164
    8. ' ' → logprob: -7.645517349243164
    9. '(' → logprob: -8.020517349243164
    10. '  
' → logprob: -8.145517349243164

Token 35: ' split' (ID: 12648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40889298915863037
    2. ' H' → logprob: -1.4088929891586304
    3. ' ' → logprob: -3.40889310836792
    4. ' )' → logprob: -3.65889310836792
    5. '    ' → logprob: -4.40889310836792
    6. ')' → logprob: -5.28389310836792
    7. '  ' → logprob: -5.65889310836792
    8. '    
' → logprob: -6.40889310836792
    9. ' h' → logprob: -6.53389310836792
    10. ' =' → logprob: -6.65889310836792

Token 36: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06520482897758484
    2. '(' → logprob: -2.8152048587799072
    3. '('' → logprob: -5.940204620361328
    4. '("("' → logprob: -8.565204620361328
    5. ' ()' → logprob: -9.440204620361328
    6. '   ' → logprob: -9.940204620361328
    7. '()]' → logprob: -10.315204620361328
    8. '().' → logprob: -10.315204620361328
    9. ')' → logprob: -10.815204620361328
    10. '('.')' → logprob: -10.940204620361328

Token 37: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5722634792327881
    2. '(' → logprob: -0.9472634792327881
    3. '<|end|>' → logprob: -3.947263479232788
    4. '('' → logprob: -4.572263717651367
    5. ')' → logprob: -5.197263717651367
    6. ',' → logprob: -6.072263717651367
    7. '<|end|>' → logprob: -6.322263717651367
    8. '("("' → logprob: -6.947263717651367
    9. '().' → logprob: -7.447263717651367
    10. '#' → logprob: -7.447263717651367

Token 38: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.02938905544579029
    2. 'par' → logprob: -3.7793891429901123
    3. 'parer' → logprob: -5.279388904571533
    4. 'p' → logprob: -7.904388904571533
    5. 'parent' → logprob: -8.154389381408691
    6. 'pa' → logprob: -9.279389381408691
    7. 'para' → logprob: -9.279389381408691
    8. 'paration' → logprob: -9.279389381408691
    9. 'paren' → logprob: -10.154389381408691
    10. 'parate' → logprob: -11.279389381408691

Token 39: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07560402154922485
    2. '(' → logprob: -2.70060396194458
    3. '   ' → logprob: -5.70060396194458
    4. '('' → logprob: -7.20060396194458
    5. ' ()' → logprob: -7.57560396194458
    6. ')' → logprob: -8.200604438781738
    7. 'tokens' → logprob: -9.325604438781738
    8. ' ' → logprob: -9.575604438781738
    9. '("("' → logprob: -9.825604438781738
    10. '())' → logprob: -9.950604438781738

Token 40: ' éléments' (ID: 57375)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4666830897331238
    2. '()' → logprob: -2.3416831493377686
    3. 'élé' → logprob: -2.5916831493377686
    4. ' l' → logprob: -2.8416831493377686
    5. ' chaînes' → logprob: -3.7166831493377686
    6. ' la' → logprob: -4.0916829109191895
    7. 'car' → logprob: -4.3416829109191895
    8. ' chain' → logprob: -4.3416829109191895
    9. 'chain' → logprob: -4.7166829109191895
    10. ' lignes' → logprob: -4.9666829109191895

Token 41: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6896677613258362
    2. '(' → logprob: -1.9396677017211914
    3. '()' → logprob: -2.0646677017211914
    4. '\' → logprob: -3.4396677017211914
    5. ' ' → logprob: -3.5646677017211914
    6. '    
' → logprob: -3.5646677017211914
    7. '(H' → logprob: -4.314667701721191
    8. ' H' → logprob: -4.439667701721191
    9. ',' → logprob: -4.564667701721191
    10. ' (' → logprob: -4.814667701721191

Token 42: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2917172610759735
    2. 'l' → logprob: -2.041717290878296
    3. '()' → logprob: -3.416717290878296
    4. ''' → logprob: -4.041717052459717
    5. ' les' → logprob: -4.166717052459717
    6. 'les' → logprob: -4.791717052459717
    7. '('' → logprob: -4.916717052459717
    8. ' espaces' → logprob: -4.916717052459717
    9. ' ' → logprob: -5.541717052459717
    10. ' la' → logprob: -5.666717052459717

Token 43: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.12942008674144745
    2. ''' → logprob: -3.129420042037964
    3. ''espace' → logprob: -3.504420042037964
    4. 'space' → logprob: -4.254420280456543
    5. 'es' → logprob: -4.504420280456543
    6. ' espaces' → logprob: -5.629420280456543
    7. ' ' → logprob: -5.879420280456543
    8. 'token' → logprob: -6.254420280456543
    9. ' space' → logprob: -6.254420280456543
    10. ' '' → logprob: -6.379420280456543

Token 44: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07332681864500046
    2. '    
' → logprob: -2.948326826095581
    3. '\n' → logprob: -5.323326587677002
    4. '
' → logprob: -5.948326587677002
    5. '```' → logprob: -5.948326587677002
    6. '\' → logprob: -6.073326587677002
    7. '   
' → logprob: -6.448326587677002
    8. '  
' → logprob: -7.073326587677002
    9. ' 
' → logprob: -7.573326587677002
    10. 'n' → logprob: -8.07332706451416

Token 45: ' map' (ID: 4014)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.24895897507667542
    2. '   ' → logprob: -2.8739590644836426
    3. ' =' → logprob: -2.9989590644836426
    4. ')' → logprob: -4.123959064483643
    5. '    ' → logprob: -4.123959064483643
    6. '[' → logprob: -4.498959064483643
    7. 'H' → logprob: -4.498959064483643
    8. ' ' → logprob: -4.748959064483643
    9. '=' → logprob: -4.873959064483643
    10. '    
' → logprob: -5.248959064483643

Token 46: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18439677357673645
    2. '(' → logprob: -2.059396743774414
    3. '(lambda' → logprob: -3.309396743774414
    4. '(str' → logprob: -5.559396743774414
    5. 'int' → logprob: -9.309396743774414
    6. '```' → logprob: -9.809396743774414
    7. '(float' → logprob: -10.059396743774414
    8. '[int' → logprob: -10.059396743774414
    9. '(i' → logprob: -10.309396743774414
    10. '   ' → logprob: -10.434396743774414

Token 47: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011844364780699834
    2. '),' → logprob: -10.000118255615234
    3. '   ' → logprob: -10.875118255615234
    4. ')
' → logprob: -12.000118255615234
    5. ')(' → logprob: -12.125118255615234
    6. ' )' → logprob: -12.125118255615234
    7. '):' → logprob: -12.125118255615234
    8. ').' → logprob: -12.750118255615234
    9. ')>' → logprob: -13.000118255615234
    10. ',' → logprob: -13.125118255615234

Token 48: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9409376978874207
    2. ')' → logprob: -1.1909377574920654
    3. 'input' → logprob: -1.1909377574920654
    4. ' )' → logprob: -6.940937519073486
    5. ' la' → logprob: -8.690937995910645
    6. ' ' → logprob: -8.940937995910645
    7. '(input' → logprob: -9.315937995910645
    8. ' continue' → logprob: -9.940937995910645
    9. ' ' → logprob: -10.440937995910645
    10. '=input' → logprob: -10.440937995910645

Token 49: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7248891592025757
    2. '(H' → logprob: -1.7248891592025757
    3. '<|end|>' → logprob: -2.0998892784118652
    4. '(' → logprob: -2.8498892784118652
    5. '):' → logprob: -3.0998892784118652
    6. '   ' → logprob: -3.3498892784118652
    7. '(*' → logprob: -4.224889278411865
    8. ',' → logprob: -4.849889278411865
    9. ':' → logprob: -4.974889278411865
    10. '(
' → logprob: -5.474889278411865

Token 50: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022167306393384933
    2. ')' → logprob: -4.772167205810547
    3. '   ' → logprob: -5.772167205810547
    4. 'e' → logprob: -6.147167205810547
    5. '(int' → logprob: -6.272167205810547
    6. 'ant' → logprob: -7.022167205810547
    7. ' (' → logprob: -7.147167205810547
    8. 'i' → logprob: -7.397167205810547
    9. 'int' → logprob: -7.522167205810547
    10. ' ' → logprob: -7.522167205810547

Token 51: ' chaque' (ID: 21194)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3287997543811798
    2. '(' → logprob: -1.9537997245788574
    3. ')' → logprob: -2.9537997245788574
    4. '   ' → logprob: -3.2037997245788574
    5. '(list' → logprob: -4.203799724578857
    6. '(str' → logprob: -4.703799724578857
    7. 'int' → logprob: -5.078799724578857
    8. ' la' → logprob: -5.703799724578857
    9. '(input' → logprob: -5.953799724578857
    10. 'list' → logprob: -6.453799724578857

Token 52: ' élément' (ID: 99627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2163994312286377
    2. '(int' → logprob: -1.4663994312286377
    3. 's' → logprob: -2.3413994312286377
    4. '(' → logprob: -2.8413994312286377
    5. ' )' → logprob: -3.0913994312286377
    6. 'int' → logprob: -3.2163994312286377
    7. '(H' → logprob: -3.3413994312286377
    8. '()' → logprob: -3.5913994312286377
    9. '(lambda' → logprob: -3.7163994312286377
    10. '(s' → logprob: -3.8413994312286377

Token 53: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3598027229309082
    2. ')' → logprob: -1.8598027229309082
    3. '(H' → logprob: -3.859802722930908
    4. '(int' → logprob: -3.984802722930908
    5. '<|end|>' → logprob: -3.984802722930908
    6. ',' → logprob: -4.234802722930908
    7. '   ' → logprob: -4.234802722930908
    8. ' (' → logprob: -5.109802722930908
    9. '(s' → logprob: -5.484802722930908
    10. 'def' → logprob: -5.484802722930908

Token 54: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4071041941642761
    2. 'int' → logprob: -1.157104253768921
    3. 'ent' → logprob: -4.657104015350342
    4. ' ent' → logprob: -4.907104015350342
    5. ' entier' → logprob: -6.782104015350342
    6. ' integers' → logprob: -7.282104015350342
    7. ' des' → logprob: -8.1571044921875
    8. ' une' → logprob: -8.2821044921875
    9. '(int' → logprob: -8.7821044921875
    10. 'inte' → logprob: -8.9071044921875

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.543595552444458
    2. '(H' → logprob: -1.543595552444458
    3. '    
' → logprob: -2.293595552444458
    4. ' H' → logprob: -3.293595552444458
    5. '
' → logprob: -4.418595314025879
    6. '  
' → logprob: -4.543595314025879
    7. ':' → logprob: -4.793595314025879
    8. ' 
' → logprob: -5.043595314025879
    9. '   
' → logprob: -5.418595314025879
    10. ' ' → logprob: -5.793595314025879

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058220572769641876
    2. '    
' → logprob: -3.683220624923706
    3. '
' → logprob: -3.808220624923706
    4. '```' → logprob: -5.308220386505127
    5. '\n' → logprob: -6.933220386505127
    6. '   
' → logprob: -7.558220386505127
    7. '\' → logprob: -7.683220386505127
    8. '  
' → logprob: -7.683220386505127
    9. '       ' → logprob: -8.433220863342285
    10. ' 
' → logprob: -8.558220863342285

Token 57: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.9092651009559631
    2. '   ' → logprob: -0.9092651009559631
    3. '(H' → logprob: -2.5342650413513184
    4. ' H' → logprob: -3.0342650413513184
    5. '    
' → logprob: -3.1592650413513184
    6. '
' → logprob: -5.284265041351318
    7. '```' → logprob: -5.284265041351318
    8. ' 
' → logprob: -6.284265041351318
    9. 'x' → logprob: -6.659265041351318
    10. '       ' → logprob: -6.659265041351318

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.492120155598968e-05
    2. ',W' → logprob: -9.875064849853516
    3. ' ,' → logprob: -11.250064849853516
    4. ',H' → logprob: -16.625064849853516
    5. ',w' → logprob: -17.125064849853516
    6. ',int' → logprob: -17.250064849853516
    7. '‌,' → logprob: -17.500064849853516
    8. ',)' → logprob: -17.625064849853516
    9. ',
' → logprob: -17.625064849853516
    10. 'W' → logprob: -18.000064849853516

Token 59: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.12712779641151428
    2. 'W' → logprob: -2.1271278858184814
    3. ' ' → logprob: -8.627127647399902
    4. '  ' → logprob: -11.252127647399902
    5. '<|end|>' → logprob: -13.127127647399902
    6. ' ' → logprob: -13.377127647399902
    7. '    ' → logprob: -13.627127647399902
    8. '   ' → logprob: -13.752127647399902
    9. '	W' → logprob: -14.877127647399902
    10. '```' → logprob: -15.502127647399902

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016061468049883842
    2. '=' → logprob: -4.141061305999756
    3. ',' → logprob: -10.766061782836914
    4. '   ' → logprob: -12.766061782836914
    5. ')' → logprob: -13.766061782836914
    6. ' =
' → logprob: -14.016061782836914
    7. ' ' → logprob: -15.016061782836914
    8. ' =)' → logprob: -15.266061782836914
    9. ')=' → logprob: -15.891061782836914
    10. '=input' → logprob: -15.891061782836914

Token 61: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006724249105900526
    2. 'map' → logprob: -5.0067243576049805
    3. ' list' → logprob: -11.88172435760498
    4. ' ' → logprob: -13.88172435760498
    5. ' ' → logprob: -14.75672435760498
    6. '	map' → logprob: -15.38172435760498
    7. 'list' → logprob: -15.88172435760498
    8. '   ' → logprob: -15.88172435760498
    9. '  ' → logprob: -16.881723403930664
    10. 'm' → logprob: -17.756723403930664

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02068249136209488
    2. '(' → logprob: -3.8956825733184814
    3. '(lambda' → logprob: -9.645682334899902
    4. '(str' → logprob: -9.770682334899902
    5. '(input' → logprob: -11.770682334899902
    6. ' (' → logprob: -12.020682334899902
    7. '(
' → logprob: -13.520682334899902
    8. '<int' → logprob: -13.520682334899902
    9. '[int' → logprob: -14.395682334899902
    10. '(

' → logprob: -15.270682334899902

Token 63: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0036943741142749786
    2. ')' → logprob: -6.003694534301758
    3. '(' → logprob: -7.128694534301758
    4. ',input' → logprob: -8.128694534301758
    5. 'input' → logprob: -9.253694534301758
    6. ',' → logprob: -11.878694534301758
    7. ')(' → logprob: -12.253694534301758
    8. ' (' → logprob: -12.378694534301758
    9. ' input' → logprob: -12.878694534301758
    10. '=input' → logprob: -13.003694534301758

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693051993846893
    2. ' input' → logprob: -2.1269304752349854
    3. ')' → logprob: -13.376930236816406
    4. '(input' → logprob: -14.251930236816406
    5. '=input' → logprob: -15.876930236816406
    6. ',input' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.251930236816406
    8. '	input' → logprob: -17.501930236816406
    9. '<input' → logprob: -17.876930236816406
    10. ' )' → logprob: -17.876930236816406

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0643121749162674
    2. '())' → logprob: -3.064312219619751
    3. '()' → logprob: -4.189311981201172
    4. ')' → logprob: -7.939311981201172
    5. '()))' → logprob: -9.564311981201172
    6. '());' → logprob: -13.064311981201172
    7. '()).' → logprob: -13.064311981201172
    8. ' ())' → logprob: -13.064311981201172
    9. ' ().' → logprob: -13.439311981201172
    10. '(' → logprob: -13.439311981201172

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3425219549390022e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -14.87501335144043
    4. '(split' → logprob: -17.75001335144043
    5. 'spl' → logprob: -18.50001335144043
    6. 'rstrip' → logprob: -19.62501335144043
    7. ')' → logprob: -21.75001335144043
    8. '_split' → logprob: -22.37501335144043
    9. 'read' → logprob: -22.50001335144043
    10. '()' → logprob: -22.62501335144043

Token 67: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0498286709189415
    2. ')' → logprob: -3.2998287677764893
    3. '()))' → logprob: -5.04982852935791
    4. '()' → logprob: -5.54982852935791
    5. '))' → logprob: -7.17482852935791
    6. '('' → logprob: -7.92482852935791
    7. '(' → logprob: -8.42482852935791
    8. ' ())' → logprob: -10.29982852935791
    9. '(()' → logprob: -11.54982852935791
    10. '(""))' → logprob: -12.29982852935791

Token 68: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5343219041824341
    2. '   ' → logprob: -1.909321904182434
    3. '\n' → logprob: -2.1593217849731445
    4. '<|end|>' → logprob: -3.0343217849731445
    5. ')' → logprob: -3.5343217849731445
    6. '    
' → logprob: -3.7843217849731445
    7. '  
' → logprob: -4.1593217849731445
    8. ' 
' → logprob: -4.5343217849731445
    9. '\' → logprob: -4.9093217849731445
    10. ' ' → logprob: -5.5343217849731445

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005719385575503111
    2. '    
' → logprob: -7.005719184875488
    3. ')' → logprob: -7.130719184875488
    4. '#' → logprob: -7.505719184875488
    5. '\n' → logprob: -7.755719184875488
    6. '```' → logprob: -7.755719184875488
    7. 'terrain' → logprob: -8.005719184875488
    8. '    ' → logprob: -8.255719184875488
    9. 'n' → logprob: -8.255719184875488
    10. ' terrain' → logprob: -8.380719184875488

Token 70: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.4797612130641937
    2. 'terrain' → logprob: -1.3547612428665161
    3. 'field' → logprob: -2.9797611236572266
    4. '#' (adapté à ' #') → logprob: -2.9797611236572266
    5. 'matrix' → logprob: -5.604761123657227
    6. 'ground' → logprob: -5.979761123657227
    7. ' terrain' → logprob: -5.979761123657227
    8. 't' → logprob: -6.729761123657227
    9. ' grid' → logprob: -6.979761123657227
    10. '   ' → logprob: -6.979761123657227

Token 71: ' On' (ID: 2160)
  Prédit: ' terrain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' terrain' → logprob: -0.6407764554023743
    2. 'terrain' → logprob: -1.6407763957977295
    3. 'grid' → logprob: -2.3907763957977295
    4. ' grid' → logprob: -2.5157763957977295
    5. '#' → logprob: -2.8907763957977295
    6. '   ' → logprob: -4.515776634216309
    7. 'field' → logprob: -4.890776634216309
    8. 'area' → logprob: -5.390776634216309
    9. 'board' → logprob: -5.515776634216309
    10. ' grille' → logprob: -5.765776634216309

Token 72: ' initialise' (ID: 145250)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1546425819396973
    2. ' terrain' → logprob: -2.0296425819396973
    3. 'terrain' → logprob: -2.9046425819396973
    4. '_' → logprob: -3.2796425819396973
    5. ' =' → logprob: -3.2796425819396973
    6. 's' → logprob: -3.4046425819396973
    7. '()' → logprob: -3.5296425819396973
    8. ' #' → logprob: -3.5296425819396973
    9. '#' → logprob: -3.6546425819396973
    10. ' continue' → logprob: -4.029642581939697

Token 73: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.065645933151245
    2. ' ' → logprob: -2.065645933151245
    3. '()' → logprob: -2.190645933151245
    4. ' un' → logprob: -2.190645933151245
    5. ' le' → logprob: -2.315645933151245
    6. ' la' → logprob: -2.440645933151245
    7. '_' → logprob: -2.440645933151245
    8. ' une' → logprob: -2.815645933151245
    9. 'l' → logprob: -3.190645933151245
    10. ' l' → logprob: -3.440645933151245

Token 74: ' terrain' (ID: 30461)
  Prédit: 'terrain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -0.2741983234882355
    2. ' terrain' → logprob: -1.899198293685913
    3. 'grid' → logprob: -4.024198532104492
    4. 'ter' → logprob: -4.274198532104492
    5. ' grid' → logprob: -4.399198532104492
    6. 'terr' → logprob: -4.899198532104492
    7. 'gr' → logprob: -5.024198532104492
    8. 'board' → logprob: -5.649198532104492
    9. 'camp' → logprob: -5.649198532104492
    10. 'plate' → logprob: -5.899198532104492

Token 75: ' (' (ID: 350)
  Prédit: 'terrain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -0.22742685675621033
    2. ' terrain' → logprob: -2.227426767349243
    3. ' ' → logprob: -3.102426767349243
    4. '_' → logprob: -4.102427005767822
    5. ' =' → logprob: -4.852427005767822
    6. 'terr' → logprob: -4.977427005767822
    7. '[' → logprob: -5.102427005767822
    8. ')' → logprob: -6.227427005767822
    9. ' terr' → logprob: -6.727427005767822
    10. '   ' → logprob: -7.102427005767822

Token 76: 'field' (ID: 4735)
  Prédit: 'terrain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -0.4280453324317932
    2. ')' → logprob: -1.3030452728271484
    3. ' terrain' → logprob: -3.1780452728271484
    4. '[' → logprob: -3.6780452728271484
    5. ' )' → logprob: -6.178045272827148
    6. 'field' → logprob: -6.428045272827148
    7. 'terr' → logprob: -6.803045272827148
    8. '[]' → logprob: -6.928045272827148
    9. '[])' → logprob: -7.053045272827148
    10. '   ' → logprob: -7.553045272827148

Token 77: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36774390935897827
    2. ' =' → logprob: -1.242743968963623
    3. '=' → logprob: -3.992743968963623
    4. ' )' → logprob: -8.617743492126465
    5. ' ' → logprob: -8.867743492126465
    6. '[' → logprob: -9.117743492126465
    7. '   ' → logprob: -9.742743492126465
    8. '[]' → logprob: -10.367743492126465
    9. ')=' → logprob: -10.367743492126465
    10. '_' → logprob: -11.117743492126465

Token 78: ' qui' (ID: 2780)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.41542762517929077
    2. '[]' → logprob: -1.9154276847839355
    3. ' field' → logprob: -2.4154276847839355
    4. ' ' → logprob: -3.1654276847839355
    5. 'field' → logprob: -4.0404276847839355
    6. ' [' → logprob: -4.2904276847839355
    7. ' une' → logprob: -4.6654276847839355
    8. '[' → logprob: -4.7904276847839355
    9. '[][]' → logprob: -5.7904276847839355
    10. ' un' → logprob: -5.9154276847839355

Token 79: ' est' (ID: 893)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -1.1552884578704834
    2. ' =' → logprob: -1.4052884578704834
    3. '=' → logprob: -2.1552884578704834
    4. ' va' → logprob: -2.4052884578704834
    5. ' est' → logprob: -3.1552884578704834
    6. ')' → logprob: -3.5302884578704834
    7. ' représente' → logprob: -3.6552884578704834
    8. '_' → logprob: -4.0302886962890625
    9. '=[]' → logprob: -4.1552886962890625
    10. ' consiste' → logprob: -4.4052886962890625

Token 80: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4352293908596039
    2. ' []' → logprob: -1.1852294206619263
    3. '[' → logprob: -3.6852293014526367
    4. ' [' → logprob: -4.435229301452637
    5. ' une' → logprob: -4.935229301452637
    6. ' un' → logprob: -6.435229301452637
    7. '=[]' → logprob: -8.060229301452637
    8. 'une' → logprob: -8.185229301452637
    9. '   ' → logprob: -8.435229301452637
    10. '[][]' → logprob: -8.560229301452637

Token 81: ' grille' (ID: 99153)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4794018864631653
    2. ' liste' → logprob: -0.9794018864631653
    3. 'list' → logprob: -5.4794020652771
    4. '[]' → logprob: -7.4794020652771
    5. ' list' → logprob: -8.854401588439941
    6. 'gr' → logprob: -9.354401588439941
    7. ' []' → logprob: -9.604401588439941
    8. ' grille' → logprob: -9.854401588439941
    9. ' ' → logprob: -10.229401588439941
    10. '[' → logprob: -10.354401588439941

Token 82: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03830632567405701
    2. '=[]' → logprob: -4.28830623626709
    3. '[]' → logprob: -4.66330623626709
    4. '=' → logprob: -4.91330623626709
    5. '   ' → logprob: -5.91330623626709
    6. '[' → logprob: -6.03830623626709
    7. '=[' → logprob: -7.53830623626709
    8. '[][]' → logprob: -8.53830623626709
    9. '=[]
' → logprob: -8.91330623626709
    10. ' de' → logprob: -9.03830623626709

Token 83: ' H' (ID: 487)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.595572292804718
    2. '[' → logprob: -2.3455722332000732
    3. '[]' → logprob: -2.4705722332000732
    4. '[['' → logprob: -2.4705722332000732
    5. ' ['' → logprob: -3.2205722332000732
    6. ' [' → logprob: -3.4705722332000732
    7. ' [['' → logprob: -3.7205722332000732
    8. 'H' → logprob: -3.8455722332000732
    9. ' H' → logprob: -4.220572471618652
    10. '["' → logprob: -4.220572471618652

Token 84: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.12788523733615875
    2. ' lines' → logprob: -3.252885341644287
    3. ' x' → logprob: -3.377885341644287
    4. '[' → logprob: -4.002885341644287
    5. 'x' → logprob: -4.502885341644287
    6. '*' → logprob: -5.627885341644287
    7. ' [' → logprob: -5.752885341644287
    8. ')' → logprob: -6.127885341644287
    9. ' ' → logprob: -6.252885341644287
    10. '[]' → logprob: -6.877885341644287

Token 85: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3659537136554718
    2. '   ' → logprob: -2.1159536838531494
    3. 'field' → logprob: -2.2409536838531494
    4. ' =' → logprob: -3.1159536838531494
    5. ' et' → logprob: -4.8659539222717285
    6. ')' → logprob: -5.4909539222717285
    7. '=' → logprob: -5.6159539222717285
    8. '[' → logprob: -5.7409539222717285
    9. '[]' → logprob: -5.8659539222717285
    10. '=[]' → logprob: -5.8659539222717285

Token 86: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.22723861038684845
    2. 'W' → logprob: -1.602238655090332
    3. ' ' → logprob: -8.102238655090332
    4. ' ' → logprob: -8.227238655090332
    5. '[' → logprob: -8.477238655090332
    6. '[]' → logprob: -8.977238655090332
    7. '   ' → logprob: -9.102238655090332
    8. '    ' → logprob: -9.227238655090332
    9. ' des' → logprob: -9.352238655090332
    10. ' de' → logprob: -9.602238655090332

Token 87: ' colon' (ID: 20947)
  Prédit: ' colon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colon' → logprob: -0.47143322229385376
    2. ' ' → logprob: -1.721433162689209
    3. 'colon' → logprob: -3.096433162689209
    4. ' caractères' → logprob: -3.221433162689209
    5. ')' → logprob: -3.596433162689209
    6. ' espaces' → logprob: -4.096433162689209
    7. ' cases' → logprob: -4.221433162689209
    8. '<|end|>' → logprob: -4.596433162689209
    9. ' x' → logprob: -5.596433162689209
    10. 'cases' → logprob: -5.596433162689209

Token 88: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0008160584256984293
    2. 'nes' → logprob: -7.1258158683776855
    3. 's' → logprob: -11.875816345214844
    4. 'e' → logprob: -13.125816345214844
    5. 'onnes' → logprob: -14.375816345214844
    6. 'ces' → logprob: -14.500816345214844
    7. 'tes' → logprob: -14.750816345214844
    8. 'les' → logprob: -15.125816345214844
    9. ' es' → logprob: -15.125816345214844
    10. 'ies' → logprob: -16.125816345214844

Token 89: ' 
' (ID: 793)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.018851153552532196
    2. '   ' → logprob: -4.393851280212402
    3. ' field' → logprob: -5.893851280212402
    4. 'f' → logprob: -6.393851280212402
    5. ' =' → logprob: -7.643851280212402
    6. '[' → logprob: -7.893851280212402
    7. ',' → logprob: -8.518851280212402
    8. ']' → logprob: -8.643851280212402
    9. '	field' → logprob: -9.518851280212402
    10. '[field' → logprob: -9.518851280212402

Token 90: '   ' (ID: 271)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.4216753840446472
    2. '   ' → logprob: -1.171675443649292
    3. ',' → logprob: -4.671675205230713
    4. ' field' → logprob: -5.296675205230713
    5. ' =' → logprob: -5.546675205230713
    6. '[' → logprob: -5.546675205230713
    7. 'f' → logprob: -5.796675205230713
    8. ']' → logprob: -5.796675205230713
    9. '=' → logprob: -7.296675205230713
    10. ')' → logprob: -7.546675205230713

Token 91: ' #' (ID: 1069)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.07953053712844849
    2. ' field' → logprob: -3.4545304775238037
    3. ',' → logprob: -4.079530715942383
    4. '[' → logprob: -5.079530715942383
    5. '   ' → logprob: -5.079530715942383
    6. 'f' → logprob: -5.829530715942383
    7. ' =' → logprob: -6.079530715942383
    8. ':' → logprob: -6.079530715942383
    9. ']' → logprob: -6.579530715942383
    10. ')' → logprob: -7.204530715942383

Token 92: ' Chaque' (ID: 94758)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.04240088164806366
    2. ' field' → logprob: -3.29240083694458
    3. '   ' → logprob: -5.66740083694458
    4. ',' → logprob: -8.792401313781738
    5. ' =' → logprob: -9.292401313781738
    6. 'f' → logprob: -9.417401313781738
    7. '[' → logprob: -9.542401313781738
    8. ')' → logprob: -9.667401313781738
    9. '[field' → logprob: -9.917401313781738
    10. '	field' → logprob: -10.042401313781738

Token 93: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.33981892466545105
    2. 'ligne' → logprob: -1.9648189544677734
    3. '_' → logprob: -3.2148189544677734
    4. ' line' → logprob: -3.2148189544677734
    5. ' ' → logprob: -3.7148189544677734
    6. '[' → logprob: -3.9648189544677734
    7. ')' → logprob: -5.339818954467773
    8. ' [' → logprob: -5.464818954467773
    9. ' row' → logprob: -5.839818954467773
    10. ' lignes' → logprob: -6.714818954467773

Token 94: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1047358587384224
    2. '=' → logprob: -3.229735851287842
    3. '   ' → logprob: -3.979735851287842
    4. 's' → logprob: -5.104735851287842
    5. '[]' → logprob: -5.104735851287842
    6. ' ' → logprob: -5.479735851287842
    7. ' est' → logprob: -5.604735851287842
    8. '.append' → logprob: -5.979735851287842
    9. '[:]' → logprob: -5.979735851287842
    10. '  ' → logprob: -6.104735851287842

Token 95: ' sais' (ID: 30010)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20977172255516052
    2. ' []' → logprob: -2.4597716331481934
    3. ' une' → logprob: -3.3347716331481934
    4. '[' → logprob: -4.084771633148193
    5. 'input' → logprob: -4.084771633148193
    6. ' [' → logprob: -4.459771633148193
    7. ' input' → logprob: -4.959771633148193
    8. 'une' → logprob: -5.334771633148193
    9. '   ' → logprob: -5.834771633148193
    10. ' ' → logprob: -6.084771633148193

Token 96: 'ie' (ID: 396)
  Prédit: 'lée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lée' → logprob: -1.0352001190185547
    2. 'isée' → logprob: -1.4102001190185547
    3. 's' → logprob: -1.6602001190185547
    4. 'ée' → logprob: -2.4102001190185547
    5. 'ss' → logprob: -3.7852001190185547
    6. 'lis' → logprob: -3.9102001190185547
    7. 'ls' → logprob: -4.660200119018555
    8. 'l' → logprob: -4.910200119018555
    9. 'si' → logprob: -5.035200119018555
    10. 'ise' → logprob: -5.285200119018555

Token 97: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8877072930335999
    2. 'for' → logprob: -1.387707233428955
    3. ' for' → logprob: -1.387707233428955
    4. '()' → logprob: -3.762707233428955
    5. ' =' → logprob: -4.012707233428955
    6. 'def' → logprob: -4.637707233428955
    7. ' pour' → logprob: -4.762707233428955
    8. ',' → logprob: -5.262707233428955
    9. '[' → logprob: -5.262707233428955
    10. '    ' → logprob: -5.637707233428955

Token 98: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1314949244260788
    2. 'input' → logprob: -2.1314949989318848
    3. ' une' → logprob: -6.256494998931885
    4. 'une' → logprob: -6.256494998931885
    5. ' ' → logprob: -8.131494522094727
    6. '=input' → logprob: -8.756494522094727
    7. '   ' → logprob: -9.381494522094727
    8. ' la' → logprob: -9.881494522094727
    9. ' un' → logprob: -10.256494522094727
    10. 'la' → logprob: -10.756494522094727

Token 99: ''utilisateur' (ID: 140803)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2568657398223877
    2. ''utilisateur' → logprob: -2.1318657398223877
    3. 'es' → logprob: -3.0068657398223877
    4. '=input' → logprob: -3.6318657398223877
    5. ' input' → logprob: -4.131865501403809
    6. 'e' → logprob: -5.256865501403809
    7. ''entrée' → logprob: -5.756865501403809
    8. 'a' → logprob: -5.881865501403809
    9. ''' → logprob: -7.256865501403809
    10. '(input' → logprob: -7.631865501403809

Token 100: ' ;' (ID: 4605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5699248909950256
    2. ' for' → logprob: -1.1949248313903809
    3. 'for' → logprob: -2.194924831390381
    4. '
' → logprob: -4.569924831390381
    5. '    
' → logprob: -5.319924831390381
    6. '\n' → logprob: -6.444924831390381
    7. '\' → logprob: -7.694924831390381
    8. ',' → logprob: -7.694924831390381
    9. '	for' → logprob: -8.069925308227539
    10. ':' → logprob: -8.069925308227539

Token 101: ' on' (ID: 402)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.8128642439842224
    2. 'field' → logprob: -1.3128643035888672
    3. '   ' → logprob: -2.062864303588867
    4. ' for' → logprob: -2.687864303588867
    5. '    ' → logprob: -2.937864303588867
    6. 'for' → logprob: -4.187864303588867
    7. ' ' → logprob: -4.812864303588867
    8. '     
' → logprob: -5.562864303588867
    9. ')' → logprob: -6.062864303588867
    10. '    
' → logprob: -6.312864303588867

Token 102: ' convert' (ID: 8452)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8346464037895203
    2. ' for' → logprob: -1.084646463394165
    3. '.append' → logprob: -2.959646463394165
    4. ' continue' → logprob: -3.584646463394165
    5. ')' → logprob: -4.209646224975586
    6. '[' → logprob: -4.709646224975586
    7. ' =' → logprob: -4.709646224975586
    8. ' ' → logprob: -5.084646224975586
    9. '   ' → logprob: -5.084646224975586
    10. '<|end|>' → logprob: -5.084646224975586

Token 103: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00589466467499733
    2. 'ir' → logprob: -5.505894660949707
    3. 'i' → logprob: -7.255894660949707
    4. 'e' → logprob: -8.380894660949707
    5. 'is' → logprob: -9.255894660949707
    6. '()' → logprob: -9.380894660949707
    7. 'list' → logprob: -9.380894660949707
    8. 'ira' → logprob: -9.380894660949707
    9. 'ît' → logprob: -9.880894660949707
    10. '_' → logprob: -9.880894660949707

Token 104: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.15550664067268372
    2. ' la' → logprob: -3.1555066108703613
    3. '()' → logprob: -3.6555066108703613
    4. ' en' → logprob: -4.030506610870361
    5. 'each' → logprob: -4.155506610870361
    6. ' les' → logprob: -4.655506610870361
    7. ' chacune' → logprob: -4.905506610870361
    8. ' each' → logprob: -5.030506610870361
    9. ' l' → logprob: -5.655506610870361
    10. 'l' → logprob: -6.280506610870361

Token 105: ' nombre' (ID: 9733)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7639492750167847
    2. 'input' → logprob: -0.8889492750167847
    3. ' list' → logprob: -3.388949394226074
    4. ' input' → logprob: -3.513949394226074
    5. 'car' → logprob: -3.763949394226074
    6. 'ligne' → logprob: -3.888949394226074
    7. 'line' → logprob: -5.138949394226074
    8. 'str' → logprob: -6.263949394226074
    9. 'liste' → logprob: -6.263949394226074
    10. ' ligne' → logprob: -6.763949394226074

Token 106: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.030588358640670776
    2. 's' → logprob: -4.280588150024414
    3. '()' → logprob: -5.155588150024414
    4. '(' → logprob: -5.780588150024414
    5. ')' → logprob: -6.530588150024414
    6. ' ' → logprob: -7.030588150024414
    7. ' into' → logprob: -7.155588150024414
    8. '   ' → logprob: -7.155588150024414
    9. ' de' → logprob: -7.905588150024414
    10. '_' → logprob: -8.280588150024414

Token 107: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.49005547165870667
    2. 'input' → logprob: -0.9900554418563843
    3. 'list' → logprob: -5.115055561065674
    4. ' list' → logprob: -5.615055561065674
    5. ' la' → logprob: -6.240055561065674
    6. 'liste' → logprob: -6.365055561065674
    7. ' liste' → logprob: -6.990055561065674
    8. 'l' → logprob: -7.490055561065674
    9. 'chaine' → logprob: -7.990055561065674
    10. ' l' → logprob: -8.990055084228516

Token 108: ' ligne' (ID: 19583)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.584366500377655
    2. 'input' → logprob: -1.2093665599822998
    3. ' ligne' → logprob: -2.2093665599823
    4. ' liste' → logprob: -4.084366321563721
    5. 'ligne' → logprob: -4.834366321563721
    6. 'range' → logprob: -6.084366321563721
    7. 'liste' → logprob: -6.334366321563721
    8. ' ' → logprob: -6.834366321563721
    9. ' range' → logprob: -6.959366321563721
    10. '   ' → logprob: -7.334366321563721

Token 109: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6317105293273926
    2. ' =' → logprob: -1.8817105293273926
    3. '()' → logprob: -2.3817105293273926
    4. '=' → logprob: -2.8817105293273926
    5. ')' → logprob: -3.0067105293273926
    6. '_' → logprob: -3.6317105293273926
    7. 'en' → logprob: -3.8817105293273926
    8. 's' → logprob: -4.256710529327393
    9. '   ' → logprob: -4.256710529327393
    10. '(' → logprob: -5.131710529327393

Token 110: ' int' (ID: 677)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12096931040287018
    2. 'une' → logprob: -2.995969295501709
    3. ' liste' → logprob: -3.995969295501709
    4. 'liste' → logprob: -4.120969295501709
    5. 'list' → logprob: -4.370969295501709
    6. ' list' → logprob: -4.495969295501709
    7. '[]' → logprob: -5.995969295501709
    8. ' un' → logprob: -6.745969295501709
    9. ' a' → logprob: -7.745969295501709
    10. 'a' → logprob: -7.870969295501709

Token 111: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5257042646408081
    2. 'field' → logprob: -1.025704264640808
    3. '
' → logprob: -3.1507043838500977
    4. ' field' → logprob: -5.150704383850098
    5. '    
' → logprob: -7.650704383850098
    6. 'for' → logprob: -7.900704383850098
    7. ' for' → logprob: -8.775704383850098
    8. ' 
' → logprob: -9.275704383850098
    9. ',' → logprob: -9.400704383850098
    10. '  ' → logprob: -10.275704383850098

Token 112: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3609967827796936
    2. ' list' → logprob: -1.6109967231750488
    3. '[' → logprob: -2.485996723175049
    4. ' [' → logprob: -5.235996723175049
    5. '[list' → logprob: -5.735996723175049
    6. ' une' → logprob: -5.985996723175049
    7. '   ' → logprob: -6.360996723175049
    8. 'une' → logprob: -6.735996723175049
    9. 'liste' → logprob: -6.860996723175049
    10. '=list' → logprob: -6.985996723175049

Token 113: '(int' (ID: 2742)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.7149278521537781
    2. '   ' → logprob: -1.2149279117584229
    3. '(field' → logprob: -1.9649279117584229
    4. '
' → logprob: -4.089927673339844
    5. ')' → logprob: -4.339927673339844
    6. ',' → logprob: -4.464927673339844
    7. 'def' → logprob: -4.714927673339844
    8. '()' → logprob: -5.464927673339844
    9. '(' → logprob: -5.589927673339844
    10. ')
' → logprob: -6.214927673339844

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3345617651939392
    2. ')' → logprob: -1.334561824798584
    3. ',input' → logprob: -3.959561824798584
    4. '(input' → logprob: -7.709561824798584
    5. '   ' → logprob: -7.834561824798584
    6. 'input' → logprob: -8.709561347961426
    7. '),' → logprob: -8.709561347961426
    8. '(' → logprob: -8.959561347961426
    9. ' ,' → logprob: -8.959561347961426
    10. ',)' → logprob: -9.209561347961426

Token 115: ' ...)
' (ID: 132905)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11581946909427643
    2. ' input' → logprob: -2.2408194541931152
    3. ')' → logprob: -5.865819454193115
    4. 'list' → logprob: -9.240819931030273
    5. 'str' → logprob: -11.490819931030273
    6. ' ' → logprob: -11.490819931030273
    7. ' )' → logprob: -11.990819931030273
    8. '   ' → logprob: -12.115819931030273
    9. ' str' → logprob: -12.240819931030273
    10. '...)' → logprob: -12.365819931030273

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09378375113010406
    2. 'field' → logprob: -2.4687838554382324
    3. ' field' → logprob: -5.843783855438232
    4. '
' → logprob: -6.718783855438232
    5. '    
' → logprob: -7.718783855438232
    6. ',' → logprob: -10.218783378601074
    7. '	field' → logprob: -10.218783378601074
    8. ')' → logprob: -10.468783378601074
    9. '```' → logprob: -10.468783378601074
    10. '  ' → logprob: -10.843783378601074

Token 117: ' #' (ID: 1069)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.14740455150604248
    2. '   ' → logprob: -2.397404670715332
    3. ' field' → logprob: -3.147404670715332
    4. '
' → logprob: -6.022404670715332
    5. '    
' → logprob: -7.897404670715332
    6. '	field' → logprob: -9.897404670715332
    7. 'terrain' → logprob: -10.272404670715332
    8. 'for' → logprob: -10.647404670715332
    9. ' terrain' → logprob: -10.772404670715332
    10. ' for' → logprob: -10.772404670715332

Token 118: ' Pour' (ID: 13931)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.3877558410167694
    2. ' field' → logprob: -1.1377558708190918
    3. '   ' → logprob: -8.012755393981934
    4. ' terrain' → logprob: -8.262755393981934
    5. '
' → logprob: -9.137755393981934
    6. 'terrain' → logprob: -9.387755393981934
    7. 'fields' → logprob: -11.450255393981934
    8. '	field' → logprob: -11.575255393981934
    9. '    ' → logprob: -11.887755393981934
    10. '_field' → logprob: -12.075255393981934

Token 119: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4022746980190277
    2. '_' → logprob: -1.40227472782135
    3. ' field' → logprob: -3.2772746086120605
    4. ' i' → logprob: -3.4022746086120605
    5. ' range' → logprob: -5.2772746086120605
    6. ' line' → logprob: -6.4022746086120605
    7. ' row' → logprob: -6.4022746086120605
    8. ' ' → logprob: -6.5272746086120605
    9. ' ' → logprob: -6.9022746086120605
    10. ' ligne' → logprob: -7.1522746086120605

Token 120: ' ligne' (ID: 19583)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3135665953159332
    2. '_' → logprob: -1.3135665655136108
    3. ' i' → logprob: -8.188566207885742
    4. ' ' → logprob: -11.438566207885742
    5. ' ligne' → logprob: -12.063566207885742
    6. ' ' → logprob: -12.688566207885742
    7. '_i' → logprob: -12.813566207885742
    8. ' line' → logprob: -13.688566207885742
    9. 'ligne' → logprob: -13.688566207885742
    10. 'i' → logprob: -14.438566207885742

Token 121: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8402494192123413
    2. ',' → logprob: -1.2152494192123413
    3. ':' → logprob: -1.5902494192123413
    4. ' ,' → logprob: -4.090249538421631
    5. 'field' → logprob: -4.215249538421631
    6. ' :' → logprob: -4.715249538421631
    7. ' field' → logprob: -5.090249538421631
    8. ' for' → logprob: -5.465249538421631
    9. '   ' → logprob: -5.590249538421631
    10. 'in' → logprob: -5.715249538421631

Token 122: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5232478976249695
    2. ' range' → logprob: -0.8982478976249695
    3. 'input' → logprob: -10.148247718811035
    4. ' input' → logprob: -10.523247718811035
    5. ' la' → logprob: -11.023247718811035
    6. 'field' → logprob: -11.273247718811035
    7. '_' → logprob: -12.273247718811035
    8. ' field' → logprob: -12.398247718811035
    9. '_range' → logprob: -12.398247718811035
    10. ' ' → logprob: -12.648247718811035

Token 123: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010871129343286157
    2. ' range' → logprob: -6.876087188720703
    3. 'input' → logprob: -10.376087188720703
    4. 'field' → logprob: -10.876087188720703
    5. 'la' → logprob: -13.626087188720703
    6. 'terrain' → logprob: -13.876087188720703
    7. '   ' → logprob: -15.001087188720703
    8. '(range' → logprob: -15.501087188720703
    9. 'rang' → logprob: -15.501087188720703
    10. 'l' → logprob: -15.626087188720703

Token 124: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.36975741386413574
    2. ' in' → logprob: -1.2447574138641357
    3. ' range' → logprob: -4.119757652282715
    4. ' en' → logprob: -5.994757652282715
    5. ' to' → logprob: -7.369757652282715
    6. 'range' → logprob: -7.369757652282715
    7. ',' → logprob: -8.244757652282715
    8. 'in' → logprob: -8.869757652282715
    9. ' a' → logprob: -8.994757652282715
    10. ' for' → logprob: -9.119757652282715

Token 125: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.4310470521450043
    2. 'H' → logprob: -1.1810470819473267
    3. ' range' → logprob: -3.181046962738037
    4. 'range' → logprob: -6.431046962738037
    5. ' ' → logprob: -10.806047439575195
    6. '	H' → logprob: -11.306047439575195
    7. '(H' → logprob: -11.556047439575195
    8. '   ' → logprob: -12.056047439575195
    9. ' ' → logprob: -12.806047439575195
    10. '<H' → logprob: -12.931047439575195

Token 126: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5368905663490295
    2. '):' → logprob: -2.0368905067443848
    3. 'range' → logprob: -2.1618905067443848
    4. 'for' → logprob: -3.0368905067443848
    5. ' for' → logprob: -3.0368905067443848
    6. ' range' → logprob: -3.4118905067443848
    7. '):
' → logprob: -4.286890506744385
    8. ')' → logprob: -4.536890506744385
    9. '   ' → logprob: -4.786890506744385
    10. ':
' → logprob: -5.786890506744385

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.125003814697266
    3. '-' → logprob: -13.250003814697266
    4. '   ' → logprob: -15.500003814697266
    5. 'H' → logprob: -17.250003814697266
    6. '```' → logprob: -17.375003814697266
    7. '
' → logprob: -18.000003814697266
    8. ' -' → logprob: -18.625003814697266
    9. ')' → logprob: -18.625003814697266
    10. ',' → logprob: -18.750003814697266

Token 128: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2848412096500397
    2. '   ' → logprob: -2.534841299057007
    3. ',' → logprob: -3.159841299057007
    4. ' :' → logprob: -3.534841299057007
    5. 'field' → logprob: -3.659841299057007
    6. '):' → logprob: -3.909841299057007
    7. ':
' → logprob: -4.034841060638428
    8. ')' → logprob: -4.034841060638428
    9. '):
' → logprob: -5.034841060638428
    10. ' :
' → logprob: -5.784841060638428

Token 129: 'total' (ID: 9577)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3091678321361542
    2. 'range' → logprob: -1.8091678619384766
    3. ' in' → logprob: -2.6841678619384766
    4. ')' → logprob: -4.309167861938477
    5. ' for' → logprob: -4.684167861938477
    6. 'for' → logprob: -4.809167861938477
    7. 'in' → logprob: -6.434167861938477
    8. '   ' → logprob: -7.184167861938477
    9. '):' → logprob: -8.434167861938477
    10. ' ' → logprob: -8.809167861938477

Token 130: ' H' (ID: 487)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.972694456577301
    2. '(range' → logprob: -1.2226943969726562
    3. 'range' → logprob: -2.0976943969726562
    4. '(H' → logprob: -2.2226943969726562
    5. '),' → logprob: -3.3476943969726562
    6. '   ' → logprob: -3.9726943969726562
    7. ')' → logprob: -4.097694396972656
    8. ' en' → logprob: -4.472694396972656
    9. '(' → logprob: -5.222694396972656
    10. '):' → logprob: -6.222694396972656

Token 131: ' lignes' (ID: 81687)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0857621282339096
    2. '):
' → logprob: -2.5857620239257812
    3. ')' → logprob: -5.335762023925781
    4. 'range' → logprob: -6.960762023925781
    5. 'for' → logprob: -8.210762023925781
    6. ' range' → logprob: -8.835762023925781
    7. '),' → logprob: -8.960762023925781
    8. '   ' → logprob: -9.085762023925781
    9. '):
' → logprob: -9.085762023925781
    10. ':' → logprob: -9.460762023925781

Token 132: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09679636359214783
    2. ')' → logprob: -2.8467962741851807
    3. '):
' → logprob: -3.5967962741851807
    4. '),' → logprob: -5.72179651260376
    5. ':' → logprob: -6.22179651260376
    6. ',' → logprob: -7.22179651260376
    7. '   ' → logprob: -8.096796035766602
    8. ' ):' → logprob: -8.471796035766602
    9. 'for' → logprob: -9.221796035766602
    10. ' )' → logprob: -10.221796035766602

Token 133: ' on' (ID: 402)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.11360077559947968
    2. 'field' → logprob: -2.238600730895996
    3. '   ' → logprob: -8.113600730895996
    4. ' terrain' → logprob: -8.113600730895996
    5. '    ' → logprob: -9.988600730895996
    6. ' line' → logprob: -10.363600730895996
    7. 'terrain' → logprob: -10.488600730895996
    8. ' fields' → logprob: -11.363600730895996
    9. ' lines' → logprob: -11.613600730895996
    10. '_field' → logprob: -11.738600730895996

Token 134: ' crée' (ID: 102256)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6802565455436707
    2. ' field' → logprob: -1.8052566051483154
    3. 'range' → logprob: -2.4302566051483154
    4. ' append' → logprob: -2.5552566051483154
    5. '.append' → logprob: -2.6802566051483154
    6. 'field' → logprob: -3.1802566051483154
    7. 'append' → logprob: -3.8052566051483154
    8. '[' → logprob: -4.930256366729736
    9. ' [' → logprob: -5.055256366729736
    10. 'for' → logprob: -5.805256366729736

Token 135: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.49409887194633484
    2. ' [' → logprob: -0.9940989017486572
    3. '[
' → logprob: -4.869098663330078
    4. ' [
' → logprob: -4.994098663330078
    5. '[int' → logprob: -5.369098663330078
    6. '[list' → logprob: -7.869098663330078
    7. '[line' → logprob: -10.119098663330078
    8. '[str' → logprob: -10.119098663330078
    9. '[input' → logprob: -10.119098663330078
    10. '[]' → logprob: -10.744098663330078

Token 136: ' sous' (ID: 14487)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9335918426513672
    2. ' liste' → logprob: -1.3085918426513672
    3. ' [' → logprob: -2.183591842651367
    4. '[' → logprob: -2.308591842651367
    5. 'list' → logprob: -2.558591842651367
    6. ' list' → logprob: -3.308591842651367
    7. 'ligne' → logprob: -5.683591842651367
    8. '[]' → logprob: -6.183591842651367
    9. '[
' → logprob: -6.558591842651367
    10. ' ligne' → logprob: -7.433591842651367

Token 137: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9830639958381653
    2. 'list' → logprob: -1.7330639362335205
    3. 'range' → logprob: -1.8580639362335205
    4. '   ' → logprob: -2.6080639362335205
    5. ' [' → logprob: -2.7330639362335205
    6. 'liste' → logprob: -3.2330639362335205
    7. '[]' → logprob: -3.6080639362335205
    8. '[
' → logprob: -4.2330641746521
    9. '_list' → logprob: -4.3580641746521
    10. ' list' → logprob: -4.3580641746521

Token 138: 'iste' (ID: 4872)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.37844523787498474
    2. 'iste' → logprob: -1.2534452676773071
    3. 'ine' → logprob: -3.8784451484680176
    4. 'is' → logprob: -5.378445148468018
    5. 'e' → logprob: -6.503445148468018
    6. 'igne' → logprob: -7.503445148468018
    7. '#' → logprob: -7.503445148468018
    8. '   ' → logprob: -8.003445625305176
    9. 'ise' → logprob: -8.003445625305176
    10. 'i' → logprob: -8.503445625305176

Token 139: ' (' (ID: 350)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.412100613117218
    2. '(' → logprob: -2.0371005535125732
    3. '   ' → logprob: -2.9121005535125732
    4. '(field' → logprob: -3.5371005535125732
    5. ' =' → logprob: -3.7871005535125732
    6. '(
' → logprob: -3.7871005535125732
    7. '[' → logprob: -4.162100791931152
    8. '([
' → logprob: -4.287100791931152
    9. 'def' → logprob: -4.412100791931152
    10. 'field' → logprob: -4.787100791931152

Token 140: 'don' (ID: 22130)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5353454351425171
    2. '[int' → logprob: -1.035345435142517
    3. ' list' → logprob: -3.5353455543518066
    4. '[' → logprob: -4.285345554351807
    5. '[list' → logprob: -4.785345554351807
    6. 'lambda' → logprob: -5.785345554351807
    7. '[input' → logprob: -6.660345554351807
    8. ' [' → logprob: -6.660345554351807
    9. ')' → logprob: -7.160345554351807
    10. 'int' → logprob: -7.785345554351807

Token 141: 'c' (ID: 66)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7492247223854065
    2. 'nées' → logprob: -1.2492246627807617
    3. 'e' → logprob: -2.1242246627807617
    4. 'ée' → logprob: -3.2492246627807617
    5. 'def' → logprob: -3.4992246627807617
    6. '[int' → logprob: -4.499224662780762
    7. 'ées' → logprob: -4.624224662780762
    8. 'née' → logprob: -5.374224662780762
    9. 't' → logprob: -5.499224662780762
    10. 'es' → logprob: -5.624224662780762

Token 142: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24652527272701263
    2. ' [' → logprob: -1.7465252876281738
    3. '[int' → logprob: -4.121525287628174
    4. '[
' → logprob: -4.246525287628174
    5. '[input' → logprob: -5.621525287628174
    6. '[field' → logprob: -5.871525287628174
    7. ' [
' → logprob: -6.496525287628174
    8. '[list' → logprob: -6.621525287628174
    9. '[]' → logprob: -7.121525287628174
    10. '[line' → logprob: -7.121525287628174

Token 143: ' matr' (ID: 25095)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5994812846183777
    2. 'list' → logprob: -1.7244813442230225
    3. '[
' → logprob: -1.9744813442230225
    4. ' [' → logprob: -3.3494813442230225
    5. 'liste' → logprob: -3.3494813442230225
    6. ' list' → logprob: -4.349481105804443
    7. ' liste' → logprob: -4.724481105804443
    8. '[]' → logprob: -4.974481105804443
    9. 'field' → logprob: -4.974481105804443
    10. ' [
' → logprob: -5.099481105804443

Token 144: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.4333456754684448
    2. 'rice' → logprob: -1.0583456754684448
    3. 'ière' → logprob: -6.183345794677734
    4. 'ée' → logprob: -7.433345794677734
    5. 'rée' → logprob: -7.933345794677734
    6. 'î' → logprob: -8.058345794677734
    7. 'ix' → logprob: -8.808345794677734
    8. 'rie' → logprob: -9.183345794677734
    9. 'r' → logprob: -9.433345794677734
    10. 'ise' → logprob: -9.433345794677734

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05261379852890968
    2. '[' → logprob: -4.052613735198975
    3. 'def' → logprob: -4.177613735198975
    4. '   ' → logprob: -5.927613735198975
    5. ')
' → logprob: -6.052613735198975
    6. '[field' → logprob: -6.052613735198975
    7. '):' → logprob: -6.177613735198975
    8. ',' → logprob: -6.427613735198975
    9. 'field' → logprob: -6.427613735198975
    10. '(field' → logprob: -6.677613735198975

Token 146: '   ' (ID: 271)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.2917276620864868
    2. '   ' → logprob: -1.4167276620864868
    3. ' field' → logprob: -5.291727542877197
    4. '
' → logprob: -6.791727542877197
    5. '[
' → logprob: -6.791727542877197
    6. '[' → logprob: -7.166727542877197
    7. '[field' → logprob: -7.416727542877197
    8. 'terrain' → logprob: -7.416727542877197
    9. '    
' → logprob: -8.666728019714355
    10. ')' → logprob: -8.666728019714355

Token 147: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.017870476469397545
    2. ' field' → logprob: -4.2678704261779785
    3. '   ' → logprob: -5.8928704261779785
    4. '
' → logprob: -7.3928704261779785
    5. 'terrain' → logprob: -8.517870903015137
    6. '    
' → logprob: -11.142870903015137
    7. '[field' → logprob: -11.142870903015137
    8. ' terrain' → logprob: -11.392870903015137
    9. '	field' → logprob: -11.642870903015137
    10. '[
' → logprob: -11.892870903015137

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024748980998993
    2. '=' → logprob: -1.9102474451065063
    3. '=[]' → logprob: -11.285247802734375
    4. '[' → logprob: -12.535247802734375
    5. ' =[' → logprob: -13.410247802734375
    6. ' ' → logprob: -13.535247802734375
    7. '[]' → logprob: -13.785247802734375
    8. '[:]' → logprob: -14.410247802734375
    9. '.append' → logprob: -14.535247802734375
    10. '=[' → logprob: -14.535247802734375

Token 149: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.48282548785209656
    2. '[' → logprob: -0.982825517654419
    3. '[list' → logprob: -5.23282527923584
    4. '[int' → logprob: -5.98282527923584
    5. '[List' → logprob: -8.35782527923584
    6. '[input' → logprob: -8.60782527923584
    7. '[array' → logprob: -9.35782527923584
    8. '[line' → logprob: -9.48282527923584
    9. '[row' → logprob: -9.73282527923584
    10. '[
' → logprob: -9.73282527923584

Token 150: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011709370883181691
    2. ' list' → logprob: -6.751171112060547
    3. 'map' → logprob: -14.626171112060547
    4. '[list' → logprob: -15.501171112060547
    5. '	list' → logprob: -17.126171112060547
    6. '(list' → logprob: -17.501171112060547
    7. '   ' → logprob: -17.751171112060547
    8. '=list' → logprob: -18.876171112060547
    9. '.list' → logprob: -19.626171112060547
    10. '[' → logprob: -19.626171112060547

Token 151: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002632430987432599
    2. '(' → logprob: -8.250263214111328
    3. 'map' → logprob: -13.875263214111328
    4. '(
' → logprob: -14.375263214111328
    5. ' (' → logprob: -14.750263214111328
    6. '(int' → logprob: -16.875263214111328
    7. '(m' → logprob: -17.500263214111328
    8. ' map' → logprob: -18.250263214111328
    9. '	map' → logprob: -18.250263214111328
    10. '(

' → logprob: -18.625263214111328

Token 152: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001305950863752514
    2. 'int' → logprob: -9.375130653381348
    3. '(' → logprob: -10.375130653381348
    4. '<int' → logprob: -12.250130653381348
    5. ',int' → logprob: -12.750130653381348
    6. ' int' → logprob: -13.000130653381348
    7. ']int' → logprob: -13.375130653381348
    8. '[int' → logprob: -14.000130653381348
    9. '=int' → logprob: -14.375130653381348
    10. ')' → logprob: -14.375130653381348

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6073040962219238
    2. ',input' → logprob: -0.8573040962219238
    3. '(input' → logprob: -3.482304096221924
    4. 'input' → logprob: -9.232303619384766
    5. '(' → logprob: -10.732303619384766
    6. ' ,' → logprob: -11.107303619384766
    7. '(),' → logprob: -13.232303619384766
    8. ' input' → logprob: -13.357303619384766
    9. '),' → logprob: -14.107303619384766
    10. ' (' → logprob: -14.107303619384766

Token 154: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02976517751812935
    2. ' input' → logprob: -3.5297651290893555
    3. '(input' → logprob: -11.529765129089355
    4. ',input' → logprob: -13.029765129089355
    5. ' ' → logprob: -14.279765129089355
    6. '   ' → logprob: -14.529765129089355
    7. ')' → logprob: -14.529765129089355
    8. '	input' → logprob: -14.654765129089355
    9. '<input' → logprob: -16.029766082763672
    10. '=input' → logprob: -16.029766082763672

Token 155: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0206720617134124e-05
    2. '()' → logprob: -11.75001049041748
    3. '.split' → logprob: -13.87501049041748
    4. '.' → logprob: -14.50001049041748
    5. ' ().' → logprob: -14.62501049041748
    6. ' .' → logprob: -15.75001049041748
    7. '   ' → logprob: -16.750009536743164
    8. ')' → logprob: -16.875009536743164
    9. '()
' → logprob: -17.125009536743164
    10. '	' → logprob: -17.750009536743164

Token 156: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0445127372804563e-05
    2. ' split' → logprob: -11.75001049041748
    3. '(split' → logprob: -13.75001049041748
    4. ')' → logprob: -14.25001049041748
    5. 'strip' → logprob: -14.37501049041748
    6. 'rstrip' → logprob: -16.000009536743164
    7. ' ' → logprob: -16.250009536743164
    8. '.split' → logprob: -17.625009536743164
    9. '   ' → logprob: -18.000009536743164
    10. 'spl' → logprob: -19.625009536743164

Token 157: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0028527823742479086
    2. '))' → logprob: -6.002852916717529
    3. '()' → logprob: -8.252852439880371
    4. '()))
' → logprob: -9.252852439880371
    5. '())' → logprob: -11.377852439880371
    6. '())))' → logprob: -13.252852439880371
    7. '()
' → logprob: -13.377852439880371
    8. '(' → logprob: -13.377852439880371
    9. '()));' → logprob: -13.627852439880371
    10. '())).' → logprob: -14.127852439880371

Token 158: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18185624480247498
    2. '()' → logprob: -2.181856155395508
    3. '())' → logprob: -2.931856155395508
    4. 'for' → logprob: -9.556856155395508
    5. '(' → logprob: -10.181856155395508
    6. ' )' → logprob: -10.806856155395508
    7. ' for' → logprob: -11.931856155395508
    8. '))' → logprob: -12.556856155395508
    9. '   ' → logprob: -13.181856155395508
    10. ')]' → logprob: -13.181856155395508

Token 159: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018378552049398422
    2. 'range' → logprob: -4.018378734588623
    3. '(range' → logprob: -8.518378257751465
    4. ' _' → logprob: -11.393378257751465
    5. '_' → logprob: -11.643378257751465
    6. ' in' → logprob: -12.518378257751465
    7. '(' → logprob: -12.893378257751465
    8. '	range' → logprob: -14.018378257751465
    9. ' ' → logprob: -14.143378257751465
    10. '_range' → logprob: -14.268378257751465

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005862309597432613
    2. 'range' → logprob: -5.755862236022949
    3. 'in' → logprob: -6.130862236022949
    4. ' range' → logprob: -7.630862236022949
    5. ' ' → logprob: -11.00586223602295
    6. '  ' → logprob: -13.00586223602295
    7. '(range' → logprob: -14.13086223602295
    8. ')' → logprob: -14.75586223602295
    9. 'ange' → logprob: -15.38086223602295
    10. '   ' → logprob: -15.63086223602295

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011726059019565582
    2. ' range' → logprob: -6.7511725425720215
    3. '(range' → logprob: -13.12617301940918
    4. '	range' → logprob: -15.75117301940918
    5. ' ' → logprob: -16.25117301940918
    6. '   ' → logprob: -16.50117301940918
    7. '  ' → logprob: -17.00117301940918
    8. ')' → logprob: -18.25117301940918
    9. ' xrange' → logprob: -19.00117301940918
    10. '.range' → logprob: -19.12617301940918

Token 162: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. ' (' → logprob: -15.375204086303711
    4. '(
' → logprob: -17.75020408630371
    5. '(I' → logprob: -18.25020408630371
    6. 'H' → logprob: -18.50020408630371
    7. ')' → logprob: -18.87520408630371
    8. '(W' → logprob: -19.00020408630371
    9. '   ' → logprob: -19.50020408630371
    10. '((' → logprob: -20.12520408630371

Token 163: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013154871703591198
    2. ')' → logprob: -9.125131607055664
    3. ']' → logprob: -10.750131607055664
    4. ' )' → logprob: -14.375131607055664
    5. '   ' → logprob: -15.500131607055664
    6. ')]
' → logprob: -16.000131607055664
    7. ' ' → logprob: -16.625131607055664
    8. ')])' → logprob: -16.875131607055664
    9. ')].' → logprob: -17.125131607055664
    10. ')],' → logprob: -17.125131607055664

Token 164: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42473068833351135
    2. '   ' → logprob: -1.549730658531189
    3. '    
' → logprob: -2.7997307777404785
    4. '<|end|>' → logprob: -3.4247307777404785
    5. '  
' → logprob: -4.1747307777404785
    6. ' 
' → logprob: -4.4247307777404785
    7. '   
' → logprob: -6.1747307777404785
    8. '\n' → logprob: -6.1747307777404785
    9. ' ' → logprob: -6.2997307777404785
    10. 'for' → logprob: -6.5497307777404785

Token 165: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4519330859184265
    2. '   ' → logprob: -1.5769331455230713
    3. '    
' → logprob: -2.5769331455230713
    4. 'for' → logprob: -3.7019331455230713
    5. '
' → logprob: -3.8269331455230713
    6. ' for' → logprob: -4.701932907104492
    7. ' 
' → logprob: -5.076932907104492
    8. '   
' → logprob: -5.576932907104492
    9. '\n' → logprob: -5.576932907104492
    10. 'n' → logprob: -5.951932907104492

Token 166: ' nh' (ID: 5467)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0306345224380493
    2. 'max' → logprob: -1.9056345224380493
    3. 'for' → logprob: -2.2806344032287598
    4. 'result' → logprob: -2.6556344032287598
    5. ' max' → logprob: -2.6556344032287598
    6. 'total' → logprob: -2.9056344032287598
    7. 'count' → logprob: -3.0306344032287598
    8. ' #' → logprob: -3.5306344032287598
    9. ' total' → logprob: -3.7806344032287598
    10. ' for' → logprob: -3.7806344032287598

Token 167: ' représente' (ID: 88912)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30283161997795105
    2. 'bors' → logprob: -1.8028316497802734
    3. 'b' → logprob: -3.4278316497802734
    4. '_neighbors' → logprob: -3.6778316497802734
    5. '_' → logprob: -4.677831649780273
    6. ' =' → logprob: -5.052831649780273
    7. 'eight' → logprob: -5.677831649780273
    8. 'br' → logprob: -5.677831649780273
    9. 'bour' → logprob: -6.177831649780273
    10. '=' → logprob: -6.302831649780273

Token 168: ' la' (ID: 557)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5455092191696167
    2. ' les' → logprob: -1.6705092191696167
    3. '[' → logprob: -2.4205093383789062
    4. ' len' → logprob: -3.0455093383789062
    5. ' ' → logprob: -3.5455093383789062
    6. ' [-' → logprob: -3.6705093383789062
    7. ' la' → logprob: -4.920509338378906
    8. 'len' → logprob: -4.920509338378906
    9. ' [(' → logprob: -5.295509338378906
    10. ' directions' → logprob: -5.295509338378906

Token 169: ' position' (ID: 4010)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.130052089691162
    2. ' hauteur' → logprob: -1.505052089691162
    3. 'nombre' → logprob: -3.005052089691162
    4. 'a' → logprob: -3.380052089691162
    5. 's' → logprob: -3.380052089691162
    6. ' voisin' → logprob: -3.380052089691162
    7. '[' → logprob: -3.505052089691162
    8. ' direction' → logprob: -3.755052089691162
    9. ' next' → logprob: -4.005052089691162
    10. '#' → logprob: -4.130052089691162

Token 170: ' actuelle' (ID: 104951)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5684503316879272
    2. ' =' → logprob: -1.5684503316879272
    3. ' actuelle' → logprob: -2.568450450897217
    4. ' de' → logprob: -3.193450450897217
    5. ' des' → logprob: -3.318450450897217
    6. '_' → logprob: -4.443450450897217
    7. ',' → logprob: -4.568450450897217
    8. ' ' → logprob: -4.943450450897217
    9. ' suivante' → logprob: -5.318450450897217
    10. ' du' → logprob: -5.443450450897217

Token 171: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37152087688446045
    2. '_' → logprob: -1.8715208768844604
    3. ',' → logprob: -2.24652099609375
    4. '[' → logprob: -4.12152099609375
    5. '=' → logprob: -4.12152099609375
    6. ' ' → logprob: -4.99652099609375
    7. '   ' → logprob: -5.99652099609375
    8. '_h' → logprob: -6.24652099609375
    9. ' +=' → logprob: -6.87152099609375
    10. ' ,' → logprob: -6.87152099609375

Token 172: ' ligne' (ID: 19583)
  Prédit: ' haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.9539715051651001
    2. 'ha' → logprob: -1.2039715051651
    3. 'haut' → logprob: -1.7039715051651
    4. ' hauteur' → logprob: -2.9539713859558105
    5. 'range' → logprob: -4.0789713859558105
    6. '-ha' → logprob: -4.3289713859558105
    7. ' range' → logprob: -4.7039713859558105
    8. 'ligne' → logprob: -4.8289713859558105
    9. ' ' → logprob: -5.0789713859558105
    10. 'y' → logprob: -5.0789713859558105

Token 173: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6426743865013123
    2. '   ' → logprob: -1.017674446105957
    3. ' =' → logprob: -3.267674446105957
    4. '
' → logprob: -4.142674446105957
    5. ' ' → logprob: -4.892674446105957
    6. '#' → logprob: -4.892674446105957
    7. '[' → logprob: -5.142674446105957
    8. 'current' → logprob: -5.392674446105957
    9. '=' → logprob: -5.517674446105957
    10. ',
' → logprob: -5.892674446105957

Token 174: 'indice' (ID: 176697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4473331868648529
    2. '0' → logprob: -1.5723332166671753
    3. ' )' → logprob: -3.1973330974578857
    4. ' i' → logprob: -3.8223330974578857
    5. ' ' → logprob: -3.8223330974578857
    6. 'i' → logprob: -4.072333335876465
    7. '   ' → logprob: -4.572333335876465
    8. 'h' → logprob: -5.072333335876465
    9. ' field' → logprob: -5.697333335876465
    10. 'H' → logprob: -5.947333335876465

Token 175: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23429903388023376
    2. ',' → logprob: -2.9842989444732666
    3. ' de' → logprob: -3.3592989444732666
    4. ' +' → logprob: -3.9842989444732666
    5. ' =' → logprob: -3.9842989444732666
    6. ' )' → logprob: -4.109299182891846
    7. '),' → logprob: -4.359299182891846
    8. '   ' → logprob: -4.609299182891846
    9. ' ' → logprob: -4.859299182891846
    10. ')
' → logprob: -4.984299182891846

Token 176: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2266499996185303
    2. 'ligne' → logprob: -1.7266499996185303
    3. 'la' → logprob: -1.8516499996185303
    4. '0' → logprob: -1.8516499996185303
    5. ' la' → logprob: -1.9766499996185303
    6. ' ' → logprob: -3.8516499996185303
    7. ')' → logprob: -4.476650238037109
    8. 'field' → logprob: -4.601650238037109
    9. 'range' → logprob: -4.851650238037109
    10. ' ligne' → logprob: -5.601650238037109

Token 177: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.09368062764406204
    2. ' ligne' → logprob: -3.8436806201934814
    3. 'field' → logprob: -4.2186808586120605
    4. 'l' → logprob: -4.2186808586120605
    5. 'champ' → logprob: -4.9686808586120605
    6. '   ' → logprob: -5.0936808586120605
    7. ' ' → logprob: -5.4686808586120605
    8. '0' → logprob: -5.4686808586120605
    9. ')' → logprob: -6.0936808586120605
    10. 'liste' → logprob: -6.4686808586120605

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020285053178668022
    2. '+' → logprob: -4.895285129547119
    3. ',' → logprob: -5.395285129547119
    4. ' )' → logprob: -5.395285129547119
    5. ' +' → logprob: -6.270285129547119
    6. '   ' → logprob: -7.395285129547119
    7. ')
' → logprob: -8.020284652709961
    8. ' ,' → logprob: -8.520284652709961
    9. ')+' → logprob: -9.395284652709961
    10. ' ' → logprob: -9.520284652709961

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2963351905345917
    2. 'n' → logprob: -2.796335220336914
    3. ' ' → logprob: -3.296335220336914
    4. ',' → logprob: -3.546335220336914
    5. ' 
' → logprob: -3.546335220336914
    6. '    
' → logprob: -3.796335220336914
    7. '\n' → logprob: -4.421335220336914
    8. '<|end|>' → logprob: -4.546335220336914
    9. '
' → logprob: -4.671335220336914
    10. '#' → logprob: -5.171335220336914

Token 180: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.006731390953064
    2. ' nh' → logprob: -1.131731390953064
    3. 'nh' → logprob: -1.631731390953064
    4. '   ' → logprob: -2.8817315101623535
    5. ' n' → logprob: -3.5067315101623535
    6. 'i' → logprob: -4.2567315101623535
    7. ' i' → logprob: -5.2567315101623535
    8. 'h' → logprob: -6.0067315101623535
    9. ',' → logprob: -6.2567315101623535
    10. ' for' → logprob: -6.7567315101623535

Token 181: ' On' (ID: 2160)
  Prédit: ' nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.43125301599502563
    2. 'nh' → logprob: -1.4312529563903809
    3. 'n' → logprob: -2.931252956390381
    4. '0' → logprob: -4.306252956390381
    5. 'h' → logprob: -4.681252956390381
    6. ' n' → logprob: -4.681252956390381
    7. 'i' → logprob: -5.056252956390381
    8. ' i' → logprob: -5.556252956390381
    9. ' ' → logprob: -6.056252956390381
    10. ' h' → logprob: -6.056252956390381

Token 182: ' démar' (ID: 72663)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07173521816730499
    2. '=' → logprob: -2.696735143661499
    3. ' ' → logprob: -7.321735382080078
    4. 'n' → logprob: -7.821735382080078
    5. ',' → logprob: -8.571735382080078
    6. ' nh' → logprob: -9.196735382080078
    7. ' n' → logprob: -9.696735382080078
    8. ' ' → logprob: -10.071735382080078
    9. 's' → logprob: -10.196735382080078
    10. ' for' → logprob: -10.321735382080078

Token 183: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1136232241988182
    2. 're' → logprob: -2.6136231422424316
    3. 'rr' → logprob: -3.4886231422424316
    4. 'e' → logprob: -7.488623142242432
    5. '   ' → logprob: -7.738623142242432
    6. 'arre' → logprob: -7.863623142242432
    7. 't' → logprob: -8.11362361907959
    8. 'race' → logprob: -8.23862361907959
    9. '_' → logprob: -8.61362361907959
    10. '       ' → logprob: -8.61362361907959

Token 184: ' tout' (ID: 5501)
  Prédit: ' nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.005895849317312241
    2. 'nh' → logprob: -5.755895614624023
    3. ' with' → logprob: -7.255895614624023
    4. '   ' → logprob: -8.005895614624023
    5. ' at' → logprob: -8.255895614624023
    6. ' avec' → logprob: -8.255895614624023
    7. ' à' → logprob: -8.255895614624023
    8. ' =' → logprob: -8.505895614624023
    9. ',' → logprob: -8.880895614624023
    10. ' ' → logprob: -9.505895614624023

Token 185: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3743039071559906
    2. ' nh' → logprob: -2.1243038177490234
    3. ' à' → logprob: -2.8743038177490234
    4. '=' → logprob: -2.8743038177490234
    5. ' =' → logprob: -2.9993038177490234
    6. 'nh' → logprob: -4.374303817749023
    7. ' at' → logprob: -4.999303817749023
    8. ' ' → logprob: -5.999303817749023
    9. 'au' → logprob: -6.374303817749023
    10. ' au' → logprob: -6.499303817749023

Token 186: ' haut' (ID: 28223)
  Prédit: ' haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.05324672907590866
    2. '0' → logprob: -3.1782467365264893
    3. ' bas' → logprob: -4.92824649810791
    4. ' range' → logprob: -6.67824649810791
    5. ' ' → logprob: -7.30324649810791
    6. 'haut' → logprob: -7.55324649810791
    7. 'bas' → logprob: -8.42824649810791
    8. 'range' → logprob: -8.92824649810791
    9. '   ' → logprob: -10.30324649810791
    10. '  ' → logprob: -10.67824649810791

Token 187: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22194790840148926
    2. '   ' → logprob: -2.3469479084014893
    3. ' nh' → logprob: -2.5969479084014893
    4. ' ,' → logprob: -4.97194766998291
    5. ' (' → logprob: -5.09694766998291
    6. ' =' → logprob: -5.22194766998291
    7. 'nh' → logprob: -5.22194766998291
    8. ':' → logprob: -7.09694766998291
    9. ' ' → logprob: -7.22194766998291
    10. '0' → logprob: -7.47194766998291

Token 188: ' gauche' (ID: 58367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004725956823676825
    2. ' ' → logprob: -5.379725933074951
    3. 'ligne' → logprob: -10.25472640991211
    4. 'l' → logprob: -10.50472640991211
    5. ' la' → logprob: -11.25472640991211
    6. 'la' → logprob: -12.50472640991211
    7. ' l' → logprob: -12.62972640991211
    8. 'line' → logprob: -12.75472640991211
    9. '   ' → logprob: -12.87972640991211
    10. ' zero' → logprob: -13.12972640991211

Token 189: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5040124654769897
    2. ' nh' → logprob: -1.0040124654769897
    3. ' 
' → logprob: -4.004012584686279
    4. 'nh' → logprob: -5.629012584686279
    5. '\n' → logprob: -6.004012584686279
    6. ',' → logprob: -6.379012584686279
    7. 'n' → logprob: -6.629012584686279
    8. '  
' → logprob: -7.504012584686279
    9. '    
' → logprob: -7.629012584686279
    10. '   ' → logprob: -7.629012584686279

Token 190: ' donc' (ID: 14206)
  Prédit: ' nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.002132656052708626
    2. 'nh' → logprob: -7.002132892608643
    3. '0' → logprob: -7.502132892608643
    4. '   ' → logprob: -7.627132892608643
    5. ' ' → logprob: -9.502132415771484
    6. ' n' → logprob: -10.377132415771484
    7. 'n' → logprob: -11.002132415771484
    8. ' 
' → logprob: -11.377132415771484
    9. '    ' → logprob: -11.877132415771484
    10. ' i' → logprob: -12.002132415771484

Token 191: ' nh' (ID: 5467)
  Prédit: ' nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.02817959524691105
    2. 'nh' → logprob: -3.77817964553833
    3. '0' → logprob: -5.40317964553833
    4. ' ' → logprob: -8.278179168701172
    5. '   ' → logprob: -8.903179168701172
    6. ' ' → logprob: -12.153179168701172
    7. 'n' → logprob: -12.278179168701172
    8. '
' → logprob: -12.778179168701172
    9. ' n' → logprob: -13.153179168701172
    10. '  ' → logprob: -13.403179168701172

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18024764955043793
    2. '=' → logprob: -1.8052476644515991
    3. ',' → logprob: -7.680247783660889
    4. ' ' → logprob: -11.30524730682373
    5. '0' → logprob: -11.55524730682373
    6. ' ,' → logprob: -11.80524730682373
    7. '   ' → logprob: -12.05524730682373
    8. ' =
' → logprob: -13.18024730682373
    9. ' +=' → logprob: -14.30524730682373
    10. ')' → logprob: -14.30524730682373

Token 193: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.126171112060547
    4. ' ' → logprob: -18.626171112060547
    5. '=' → logprob: -18.751171112060547
    6. '00' → logprob: -19.251171112060547
    7. '```' → logprob: -19.751171112060547
    8. '1' → logprob: -19.751171112060547
    9. '  ' → logprob: -19.876171112060547
    10. '`' → logprob: -20.001171112060547

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.875009536743164
    4. '=' → logprob: -17.750009536743164
    5. '00' → logprob: -17.875009536743164
    6. '```' → logprob: -17.937509536743164
    7. '`' → logprob: -18.750009536743164
    8. '1' → logprob: -18.812509536743164
    9. '۰' → logprob: -18.812509536743164
    10. '(' → logprob: -19.125009536743164

Token 195: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6966618299484253
    2. '   ' → logprob: -0.9466618299484253
    3. ',' → logprob: -2.571661949157715
    4. ' nh' → logprob: -4.696661949157715
    5. 'n' → logprob: -4.946661949157715
    6. '    
' → logprob: -5.196661949157715
    7. '\n' → logprob: -5.571661949157715
    8. '<|end|>' → logprob: -5.696661949157715
    9. 'nh' → logprob: -6.321661949157715
    10. ',n' → logprob: -6.446661949157715

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12399168312549591
    2. 'n' → logprob: -2.7489917278289795
    3. 'nh' → logprob: -3.7489917278289795
    4. ' nh' → logprob: -4.4989914894104
    5. '
' → logprob: -4.8739914894104
    6. '\n' → logprob: -5.4989914894104
    7. '    
' → logprob: -5.6239914894104
    8. ',' → logprob: -6.7489914894104
    9. ' 
' → logprob: -7.8739914894104
    10. '  
' → logprob: -8.498991966247559

Token 197: ' nh' (ID: 5467)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1080937460064888
    2. '
' → logprob: -2.733093738555908
    3. '\n' → logprob: -3.983093738555908
    4. '   ' → logprob: -4.983093738555908
    5. ' 
' → logprob: -5.233093738555908
    6. ' nh' → logprob: -6.108093738555908
    7. 'nh' (adapté à ' nh') → logprob: -6.358093738555908
    8. '    
' → logprob: -6.983093738555908
    9. ' n' → logprob: -7.358093738555908
    10. '  
' → logprob: -7.983093738555908

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055462244898080826
    2. '=' → logprob: -2.93046236038208
    3. ',' → logprob: -7.55546236038208
    4. ' +=' → logprob: -10.180461883544922
    5. ')' → logprob: -12.180461883544922
    6. ' ' → logprob: -12.555461883544922
    7. ' ,' → logprob: -13.180461883544922
    8. '<|end|>' → logprob: -13.305461883544922
    9. ' =
' → logprob: -13.430461883544922
    10. '+=' → logprob: -14.180461883544922

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.393150329589844
    4. '   ' → logprob: -18.268150329589844
    5. '۰' → logprob: -19.143150329589844
    6. '1' → logprob: -19.893150329589844
    7. '  ' → logprob: -20.080650329589844
    8. '```' → logprob: -20.393150329589844
    9. '０' → logprob: -20.580650329589844
    10. '=' → logprob: -20.705650329589844

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.625030517578125
    4. '۰' → logprob: -18.937530517578125
    5. '1' → logprob: -19.125030517578125
    6. '```' → logprob: -19.500030517578125
    7. '00' → logprob: -19.625030517578125
    8. '０' → logprob: -19.875030517578125
    9. '=' → logprob: -20.187530517578125
    10. '-' → logprob: -20.625030517578125

Token 201: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' #' (ID: 1069)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.9280987977981567
    2. ',' → logprob: -1.5530987977981567
    3. 'n' → logprob: -1.5530987977981567
    4. ',n' → logprob: -2.803098678588867
    5. '<|end|>' → logprob: -3.553098678588867
    6. '   ' → logprob: -3.928098678588867
    7. 'nt' → logprob: -3.928098678588867
    8. 'nc' → logprob: -4.428098678588867
    9. ' nw' → logprob: -4.678098678588867
    10. 'nd' → logprob: -5.178098678588867

Token 204: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.0027014471124857664
    2. ' nw' → logprob: -6.752701282501221
    3. 'pos' → logprob: -7.877701282501221
    4. 'nh' → logprob: -8.127701759338379
    5. 'nj' → logprob: -8.502701759338379
    6. 'nl' → logprob: -9.377701759338379
    7. 'nv' → logprob: -9.502701759338379
    8. 'nc' → logprob: -9.627701759338379
    9. '   ' → logprob: -9.752701759338379
    10. '
' → logprob: -9.752701759338379

Token 205: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004637318663299084
    2. '=' → logprob: -5.379637241363525
    3. ' ' → logprob: -11.754637718200684
    4. '<|end|>' → logprob: -12.129637718200684
    5. ',' → logprob: -13.004637718200684
    6. '   ' → logprob: -14.629637718200684
    7. '<|end|>' → logprob: -15.629637718200684
    8. ' =
' → logprob: -15.754637718200684
    9. ')' → logprob: -15.754637718200684
    10. ' ' → logprob: -16.004636764526367

Token 206: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47603940963745117
    2. ' ' → logprob: -0.9760394096374512
    3. ' la' → logprob: -6.476039409637451
    4. '=' → logprob: -8.72603988647461
    5. ' =' → logprob: -8.85103988647461
    6. 'la' → logprob: -11.10103988647461
    7. '1' → logprob: -11.35103988647461
    8. 'n' → logprob: -11.47603988647461
    9. 'w' → logprob: -11.60103988647461
    10. ' ' → logprob: -11.60103988647461

Token 207: ' position' (ID: 4010)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054898083209991455
    2. ' ' → logprob: -2.9298980236053467
    3. 'position' → logprob: -12.054898262023926
    4. '1' → logprob: -12.554898262023926
    5. ' position' → logprob: -12.554898262023926
    6. 'n' → logprob: -14.867398262023926
    7. 'w' → logprob: -14.929898262023926
    8. ' ' → logprob: -15.179898262023926
    9. 'current' → logprob: -15.742398262023926
    10. 'W' → logprob: -15.742398262023926

Token 208: ' actuelle' (ID: 104951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18052485585212708
    2. ' actuelle' → logprob: -2.0555248260498047
    3. '=' → logprob: -4.055524826049805
    4. 'current' → logprob: -4.930524826049805
    5. ' current' → logprob: -5.180524826049805
    6. ' ' → logprob: -5.805524826049805
    7. '   ' → logprob: -6.555524826049805
    8. '0' → logprob: -6.805524826049805
    9. ' actuel' → logprob: -7.180524826049805
    10. '_current' → logprob: -8.680524826049805

Token 209: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10401923209428787
    2. '=' → logprob: -2.7290191650390625
    3. ' en' → logprob: -3.4790191650390625
    4. ' ' → logprob: -7.1040191650390625
    5. 'en' → logprob: -7.1040191650390625
    6. ',' → logprob: -7.9790191650390625
    7. '   ' → logprob: -8.354019165039062
    8. '0' → logprob: -9.479019165039062
    9. ' +=' → logprob: -9.979019165039062
    10. ' in' → logprob: -10.104019165039062

Token 210: ' colonne' (ID: 148275)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197183206677437
    2. ' ' → logprob: -2.81197190284729
    3. '1' → logprob: -13.311971664428711
    4. '  ' → logprob: -14.686971664428711
    5. '   ' → logprob: -14.936971664428711
    6. 'col' → logprob: -15.186971664428711
    7. 'w' → logprob: -15.186971664428711
    8. '=' → logprob: -15.561971664428711
    9. ' ' → logprob: -16.18697166442871
    10. 'ligne' → logprob: -16.43697166442871

Token 211: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933321952819824
    2. ' =' → logprob: -0.6933321952819824
    3. '   ' → logprob: -9.19333267211914
    4. '<|end|>' → logprob: -10.69333267211914
    5. ' ' → logprob: -11.31833267211914
    6. '=
' → logprob: -11.69333267211914
    7. '=n' → logprob: -11.69333267211914
    8. ' =
' → logprob: -11.81833267211914
    9. ',' → logprob: -11.94333267211914
    10. '0' → logprob: -12.06833267211914

Token 212: 'indice' (ID: 176697)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10405372083187103
    2. ' ' → logprob: -2.3540537357330322
    3. 'nw' → logprob: -6.354053497314453
    4. ' nw' → logprob: -6.979053497314453
    5. ')' → logprob: -7.354053497314453
    6. '=' → logprob: -8.604053497314453
    7. ' )' → logprob: -9.479053497314453
    8. '1' → logprob: -9.854053497314453
    9. '   ' → logprob: -9.979053497314453
    10. ' =' → logprob: -9.979053497314453

Token 213: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9178586602210999
    2. '=' → logprob: -1.292858600616455
    3. '   ' → logprob: -1.292858600616455
    4. 'de' → logprob: -3.542858600616455
    5. ' =' → logprob: -3.917858600616455
    6. ')' → logprob: -6.542858600616455
    7. ' of' → logprob: -7.917858600616455
    8. '  ' → logprob: -8.792859077453613
    9. 'def' → logprob: -9.042859077453613
    10. '    ' → logprob: -9.167859077453613

Token 214: ' la' (ID: 557)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.705208957195282
    2. ' nw' → logprob: -1.0802090167999268
    3. '0' → logprob: -2.4552090167999268
    4. ' la' → logprob: -2.9552090167999268
    5. ' ' → logprob: -4.205208778381348
    6. 'la' → logprob: -4.955208778381348
    7. '1' → logprob: -5.580208778381348
    8. 'nh' → logprob: -7.330208778381348
    9. ' nh' → logprob: -7.455208778381348
    10. '   ' → logprob: -7.830208778381348

Token 215: ' colonne' (ID: 148275)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6724398136138916
    2. '1' → logprob: -1.6724398136138916
    3. ' ' → logprob: -2.2974398136138916
    4. 'col' → logprob: -2.2974398136138916
    5. 'nw' → logprob: -2.5474398136138916
    6. ')' → logprob: -4.5474395751953125
    7. ' nw' → logprob: -5.2974395751953125
    8. ' col' → logprob: -6.5474395751953125
    9. 'column' → logprob: -6.7974395751953125
    10. 'nd' → logprob: -7.0474395751953125

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014342136681079865
    2. '   ' → logprob: -4.389342308044434
    3. ')
' → logprob: -6.389342308044434
    4. ' )' → logprob: -9.264342308044434
    5. ')n' → logprob: -10.764342308044434
    6. '    ' → logprob: -12.389342308044434
    7. ' )
' → logprob: -12.514342308044434
    8. '=' → logprob: -12.514342308044434
    9. '<|end|>' → logprob: -12.514342308044434
    10. '),' → logprob: -13.139342308044434

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4499698579311371
    2. ' nw' → logprob: -1.4499698877334595
    3. 'nw' → logprob: -2.07496976852417
    4. '    ' → logprob: -7.32496976852417
    5. 'n' → logprob: -8.074970245361328
    6. '=' → logprob: -8.199970245361328
    7. '    
' → logprob: -8.324970245361328
    8. ' ' → logprob: -8.449970245361328
    9. ' =' → logprob: -8.949970245361328
    10. '  ' → logprob: -8.949970245361328

Token 218: ' #' (ID: 1069)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.05600738525390625
    2. 'nw' → logprob: -2.9310073852539062
    3. '   ' → logprob: -8.056007385253906
    4. ' ' → logprob: -8.306007385253906
    5. '=' → logprob: -8.431007385253906
    6. '0' → logprob: -9.181007385253906
    7. ' =' → logprob: -9.556007385253906
    8. '    ' → logprob: -9.806007385253906
    9. 'n' → logprob: -10.681007385253906
    10. ' ' → logprob: -10.806007385253906

Token 219: ' On' (ID: 2160)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.3490877151489258
    2. 'nw' → logprob: -1.2240877151489258
    3. '   ' → logprob: -7.849087715148926
    4. ' ' → logprob: -9.349087715148926
    5. '0' → logprob: -10.224087715148926
    6. 'n' → logprob: -10.599087715148926
    7. '1' → logprob: -10.724087715148926
    8. ' nws' → logprob: -10.849087715148926
    9. ' nh' → logprob: -11.224087715148926
    10. '=' → logprob: -11.849087715148926

Token 220: ' commence' (ID: 44755)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38704654574394226
    2. ' =' → logprob: -1.1370465755462646
    3. ' ' → logprob: -8.762046813964844
    4. 'n' → logprob: -11.762046813964844
    5. ',' → logprob: -12.762046813964844
    6. ' +=' → logprob: -13.137046813964844
    7. '=
' → logprob: -13.762046813964844
    8. ' =
' → logprob: -14.262046813964844
    9. 'nw' → logprob: -14.637046813964844
    10. '=}' → logprob: -14.762046813964844

Token 221: ' tout' (ID: 5501)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27142027020454407
    2. '=' → logprob: -1.5214202404022217
    3. ' à' → logprob: -4.396420478820801
    4. ' ' → logprob: -5.396420478820801
    5. ' nw' → logprob: -6.521420478820801
    6. 'nw' → logprob: -8.1464204788208
    7. ' at' → logprob: -8.6464204788208
    8. 'à' → logprob: -9.0214204788208
    9. 'at' → logprob: -10.2714204788208
    10. 'au' → logprob: -10.2714204788208

Token 222: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29234760999679565
    2. ' =' → logprob: -1.5423476696014404
    3. ' à' → logprob: -4.292347431182861
    4. ' nw' → logprob: -4.917347431182861
    5. 'à' → logprob: -5.292347431182861
    6. ' at' → logprob: -5.667347431182861
    7. 'at' → logprob: -5.667347431182861
    8. '   ' → logprob: -6.292347431182861
    9. 'nw' → logprob: -6.292347431182861
    10. ' +=' → logprob: -7.417347431182861

Token 223: ' gauche' (ID: 58367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004693088121712208
    2. ' ' → logprob: -5.379693031311035
    3. '1' → logprob: -9.754693031311035
    4. '   ' → logprob: -11.754693031311035
    5. '=' → logprob: -14.004693031311035
    6. 'n' → logprob: -14.129693031311035
    7. 'l' → logprob: -14.129693031311035
    8. '  ' → logprob: -14.379693031311035
    9. 'col' → logprob: -14.629693031311035
    10. ' zéro' → logprob: -15.129693031311035

Token 224: ',' (ID: 11)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -1.0137170553207397
    2. ' =' → logprob: -1.2637170553207397
    3. 'nw' → logprob: -1.6387170553207397
    4. '=' → logprob: -1.8887170553207397
    5. '   ' → logprob: -4.763717174530029
    6. ',' → logprob: -9.138716697692871
    7. '0' → logprob: -9.138716697692871
    8. 'n' → logprob: -9.388716697692871
    9. '=n' → logprob: -10.138716697692871
    10. ' ' → logprob: -10.263716697692871

Token 225: ' donc' (ID: 14206)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.02421615831553936
    2. 'nw' → logprob: -3.7742161750793457
    3. ' ' → logprob: -8.649215698242188
    4. '   ' → logprob: -8.774215698242188
    5. ' nh' → logprob: -8.899215698242188
    6. '0' → logprob: -9.024215698242188
    7. '=' → logprob: -9.274215698242188
    8. ' =' → logprob: -9.649215698242188
    9. '    ' → logprob: -9.774215698242188
    10. ' ' → logprob: -10.149215698242188

Token 226: ' nw' (ID: 45462)
  Prédit: ' nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.25197505950927734
    2. 'nw' → logprob: -1.5019750595092773
    3. '0' → logprob: -10.876975059509277
    4. 'n' → logprob: -11.751975059509277
    5. ' nws' → logprob: -12.251975059509277
    6. ' ' → logprob: -12.376975059509277
    7. ' nh' → logprob: -12.751975059509277
    8. ' ' → logprob: -13.751975059509277
    9. '1' → logprob: -13.751975059509277
    10. ' n' → logprob: -14.376975059509277

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022615134716034
    2. '=' → logprob: -1.9102261066436768
    3. ' ' → logprob: -13.660225868225098
    4. ')' → logprob: -15.160225868225098
    5. ' +=' → logprob: -15.410225868225098
    6. '0' → logprob: -15.785225868225098
    7. '   ' → logprob: -16.660226821899414
    8. ' ' → logprob: -17.160226821899414
    9. ' =
' → logprob: -17.285226821899414
    10. ',' → logprob: -17.410226821899414

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.251930832862854
    2. ' ' → logprob: -1.501930832862854
    3. ' ' → logprob: -13.876931190490723
    4. '   ' → logprob: -15.376931190490723
    5. '`' → logprob: -16.251930236816406
    6. '```' → logprob: -16.439430236816406
    7. '=' → logprob: -16.689430236816406
    8. '  ' → logprob: -16.689430236816406
    9. '1' → logprob: -16.751930236816406
    10. '۰' → logprob: -17.439430236816406

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. '=' → logprob: -18.25020408630371
    5. '  ' → logprob: -18.37520408630371
    6. '۰' → logprob: -18.56270408630371
    7. '1' → logprob: -18.87520408630371
    8. ' ' → logprob: -18.93770408630371
    9. '```' → logprob: -19.00020408630371
    10. '    ' → logprob: -19.25020408630371

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5063768625259399
    2. '<|end|>' → logprob: -2.0063767433166504
    3. '    
' → logprob: -3.2563767433166504
    4. ' 
' → logprob: -3.3813767433166504
    5. '\n' → logprob: -3.5063767433166504
    6. 'n' → logprob: -3.6313767433166504
    7. '```' → logprob: -3.7563767433166504
    8. ' ' → logprob: -4.00637674331665
    9. '
' → logprob: -4.00637674331665
    10. '[n' → logprob: -4.00637674331665

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05393022298812866
    2. '    
' → logprob: -3.9289302825927734
    3. 'n' → logprob: -4.678930282592773
    4. ' 
' → logprob: -5.053930282592773
    5. '    ' → logprob: -5.178930282592773
    6. '  
' → logprob: -6.303930282592773
    7. '```' → logprob: -6.303930282592773
    8. ' ' → logprob: -6.553930282592773
    9. '     
' → logprob: -6.678930282592773
    10. '
' → logprob: -6.678930282592773

Token 232: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -0.05275573581457138
    2. ' nw' → logprob: -3.052755832672119
    3. 'n' → logprob: -5.552755832672119
    4. '   ' → logprob: -9.302755355834961
    5. '0' → logprob: -10.052755355834961
    6. '```' → logprob: -10.427755355834961
    7. ' n' → logprob: -10.552755355834961
    8. ' ' → logprob: -10.927755355834961
    9. ' 
' → logprob: -11.677755355834961
    10. '\n' → logprob: -11.802755355834961

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407862544059753
    2. '=' → logprob: -0.9740786552429199
    3. ')' → logprob: -14.224078178405762
    4. ' =
' → logprob: -15.349078178405762
    5. '<|end|>' → logprob: -15.724078178405762
    6. ' ' → logprob: -15.849078178405762
    7. ' +=' → logprob: -15.974078178405762
    8. '=
' → logprob: -16.099079132080078
    9. '0' → logprob: -16.724079132080078
    10. '   ' → logprob: -17.224079132080078

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692904472351074
    2. ' ' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.25192928314209
    4. '1' → logprob: -15.87692928314209
    5. ' ' → logprob: -16.001928329467773
    6. '  ' → logprob: -17.876928329467773
    7. '=' → logprob: -18.439428329467773
    8. '۰' → logprob: -19.376928329467773
    9. ' 
' → logprob: -19.439428329467773
    10. '00' → logprob: -19.439428329467773

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.250158309936523
    4. '1' → logprob: -18.125158309936523
    5. '=' → logprob: -19.500158309936523
    6. '  ' → logprob: -19.625158309936523
    7. ' ' → logprob: -20.437658309936523
    8. '```' → logprob: -20.625158309936523
    9. '00' → logprob: -21.125158309936523
    10. '۰' → logprob: -21.125158309936523

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43644824624061584
    2. '<|end|>' → logprob: -1.1864482164382935
    3. '    
' → logprob: -3.936448335647583
    4. '
' → logprob: -4.561448097229004
    5. ' 
' → logprob: -5.811448097229004
    6. ')' → logprob: -6.311448097229004
    7. '```' → logprob: -6.311448097229004
    8. '  
' → logprob: -6.436448097229004
    9. ',' → logprob: -6.686448097229004
    10. '<|end|>' → logprob: -6.686448097229004

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19682320952415466
    2. '
' → logprob: -2.3218231201171875
    3. '    
' → logprob: -3.8218231201171875
    4. '<|end|>' → logprob: -4.0718231201171875
    5. ',' → logprob: -4.5718231201171875
    6. ' 
' → logprob: -5.0718231201171875
    7. 'while' → logprob: -5.4468231201171875
    8. '  
' → logprob: -5.6968231201171875
    9. ' while' → logprob: -5.6968231201171875
    10. '#' → logprob: -6.0718231201171875

Token 238: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.523532509803772
    2. '   ' → logprob: -1.273532509803772
    3. 'while' → logprob: -2.8985323905944824
    4. '    
' → logprob: -4.148532390594482
    5. '#' (adapté à ' #') → logprob: -4.273532390594482
    6. ' while' → logprob: -4.523532390594482
    7. '\n' → logprob: -4.523532390594482
    8. ',' → logprob: -5.273532390594482
    9. ' 
' → logprob: -6.398532390594482
    10. '   
' → logprob: -6.523532390594482

Token 239: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25497061014175415
    2. ' while' → logprob: -2.0049705505371094
    3. 'score' → logprob: -3.2549705505371094
    4. 'current' → logprob: -5.254970550537109
    5. 'points' → logprob: -5.254970550537109
    6. 'coins' → logprob: -5.379970550537109
    7. ' score' → logprob: -5.629970550537109
    8. 'total' → logprob: -5.879970550537109
    9. 'direction' → logprob: -6.004970550537109
    10. 'visited' → logprob: -6.004970550537109

Token 240: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894262462854385
    2. '=' → logprob: -2.463942527770996
    3. ' ' → logprob: -13.963942527770996
    4. 'space' → logprob: -14.088942527770996
    5. ' =
' → logprob: -14.713942527770996
    6. ',' → logprob: -14.963942527770996
    7. ')' → logprob: -15.713942527770996
    8. '=int' → logprob: -15.963942527770996
    9. 's' → logprob: -16.338943481445312
    10. '_space' → logprob: -16.463943481445312

Token 241: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6449273228645325
    2. '0' → logprob: -0.7699273228645325
    3. ' field' → logprob: -4.769927501678467
    4. 'field' → logprob: -5.644927501678467
    5. ' =' → logprob: -9.894927024841309
    6. '   ' → logprob: -9.894927024841309
    7. ' []' → logprob: -10.644927024841309
    8. '    ' → logprob: -11.144927024841309
    9. '  ' → logprob: -11.144927024841309
    10. '1' → logprob: -11.519927024841309

Token 242: ' liste' (ID: 31719)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04573824256658554
    2. ' ' → logprob: -3.7957382202148438
    3. 'field' → logprob: -4.420738220214844
    4. ' field' → logprob: -5.545738220214844
    5. 'int' → logprob: -6.670738220214844
    6. '[]' → logprob: -7.045738220214844
    7. '"' → logprob: -7.045738220214844
    8. 'sum' → logprob: -7.045738220214844
    9. ' sum' → logprob: -8.170738220214844
    10. 'max' → logprob: -8.420738220214844

Token 243: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04910459369421005
    2. '[]' → logprob: -3.799104690551758
    3. '=' → logprob: -4.299104690551758
    4. '=[]' → logprob: -4.799104690551758
    5. '   ' → logprob: -5.924104690551758
    6. '=[]
' → logprob: -7.549104690551758
    7. 'des' → logprob: -9.674104690551758
    8. ' des' → logprob: -10.049104690551758
    9. ',' → logprob: -10.049104690551758
    10. '[' → logprob: -10.174104690551758

Token 244: ' cont' (ID: 836)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7912650108337402
    2. '[]' → logprob: -1.7912650108337402
    3. '=' → logprob: -1.9162650108337402
    4. ' =' → logprob: -2.0412650108337402
    5. '=[]' → logprob: -2.4162650108337402
    6. '[' → logprob: -4.66626501083374
    7. ' []' → logprob: -6.91626501083374
    8. '=[]
' → logprob: -7.04126501083374
    9. '[]=' → logprob: -7.41626501083374
    10. 'append' → logprob: -7.79126501083374

Token 245: 'i' (ID: 72)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5911523103713989
    2. 'inue' → logprob: -1.341152310371399
    3. 'ains' → logprob: -1.716152310371399
    4. '[]' → logprob: -6.591152191162109
    5. '[' → logprob: -6.841152191162109
    6. 'ent' → logprob: -7.466152191162109
    7. '=[]' → logprob: -7.466152191162109
    8. 'ain' → logprob: -7.841152191162109
    9. 'inu' → logprob: -8.46615219116211
    10. '=' → logprob: -8.46615219116211

Token 246: 'endra' (ID: 32364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15292367339134216
    2. 'tu' → logprob: -3.027923583984375
    3. 'nu' → logprob: -3.152923583984375
    4. 'n' → logprob: -4.277923583984375
    5. 'né' → logprob: -4.527923583984375
    6. 'nt' → logprob: -5.027923583984375
    7. 'ue' → logprob: -5.652923583984375
    8. '#' → logprob: -6.027923583984375
    9. 'nte' → logprob: -6.652923583984375
    10. 'tent' → logprob: -6.777923583984375

Token 247: ' toutes' (ID: 17502)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7471359372138977
    2. '[]' → logprob: -1.122135877609253
    3. ' [' → logprob: -1.997135877609253
    4. '[' → logprob: -2.997135877609253
    5. 'field' → logprob: -4.747136116027832
    6. ' field' → logprob: -5.872136116027832
    7. '[field' → logprob: -6.622136116027832
    8. '   ' → logprob: -8.122136116027832
    9. ' ' → logprob: -8.372136116027832
    10. ' ["' → logprob: -8.497136116027832

Token 248: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13674062490463257
    2. '()' → logprob: -3.0117406845092773
    3. '(field' → logprob: -3.7617406845092773
    4. 'field' → logprob: -3.8867406845092773
    5. '('' → logprob: -4.886740684509277
    6. '([' → logprob: -5.136740684509277
    7. '[' → logprob: -5.261740684509277
    8. '   ' → logprob: -5.386740684509277
    9. '(
' → logprob: -6.636740684509277
    10. ')' → logprob: -6.636740684509277

Token 249: ' opérations' (ID: 102793)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.5369764566421509
    2. 'positions' → logprob: -0.9119764566421509
    3. 'moves' → logprob: -5.911976337432861
    4. '   ' → logprob: -5.911976337432861
    5. ' moves' → logprob: -6.161976337432861
    6. 'actions' → logprob: -6.911976337432861
    7. ' valeurs' → logprob: -7.161976337432861
    8. ' coordonnées' → logprob: -7.411976337432861
    9. ' actions' → logprob: -7.536976337432861
    10. 'pos' → logprob: -8.16197681427002

Token 250: ' men' (ID: 1966)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09836355596780777
    2. '   ' → logprob: -3.5983636379241943
    3. ' ans' → logprob: -3.8483636379241943
    4. '[]' → logprob: -3.9733636379241943
    5. '[' → logprob: -5.098363399505615
    6. '=' → logprob: -5.223363399505615
    7. 'ans' → logprob: -5.598363399505615
    8. '_ans' → logprob: -6.223363399505615
    9. '[
' → logprob: -6.473363399505615
    10. '=[]
' → logprob: -6.723363399505615

Token 251: 'ées' (ID: 5161)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12355634570121765
    2. 'ées' → logprob: -2.49855637550354
    3. 'ues' → logprob: -3.62355637550354
    4. 'ée' → logprob: -6.748556137084961
    5. 'ue' → logprob: -6.748556137084961
    6. 't' → logprob: -6.998556137084961
    7. 'nées' → logprob: -6.998556137084961
    8. 'us' → logprob: -7.248556137084961
    9. 'é' → logprob: -7.373556137084961
    10. 'e' → logprob: -7.998556137084961

Token 252: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11307060718536377
    2. '   ' → logprob: -3.238070487976074
    3. ' ans' → logprob: -3.738070487976074
    4. 'ans' → logprob: -3.988070487976074
    5. '=' → logprob: -4.238070487976074
    6. '[]' → logprob: -5.863070487976074
    7. 'operations' → logprob: -6.238070487976074
    8. '(ans' → logprob: -6.363070487976074
    9. '=[]
' → logprob: -7.113070487976074
    10. '
' → logprob: -7.613070487976074

Token 253: ' chaque' (ID: 21194)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.017154529690742493
    2. ' []' → logprob: -4.267154693603516
    3. '[' → logprob: -6.392154693603516
    4. '   ' → logprob: -7.392154693603516
    5. '"' → logprob: -8.392154693603516
    6. '#' → logprob: -9.142154693603516
    7. ''' → logprob: -9.392154693603516
    8. '[]
' → logprob: -9.642154693603516
    9. '[])' → logprob: -10.392154693603516
    10. '[:]' → logprob: -10.642154693603516

Token 254: ' opération' (ID: 86023)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7408832311630249
    2. 'append' → logprob: -1.865883231163025
    3. 'operation' → logprob: -2.3658833503723145
    4. ' append' → logprob: -2.3658833503723145
    5. ' operation' → logprob: -3.1158833503723145
    6. ' =' → logprob: -3.7408833503723145
    7. ' element' → logprob: -4.2408833503723145
    8. '_' → logprob: -4.2408833503723145
    9. 'element' → logprob: -4.6158833503723145
    10. ' ans' → logprob: -4.8658833503723145

Token 255: ' sera' (ID: 15511)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.15109235048294067
    2. ' =' → logprob: -2.151092290878296
    3. '=' → logprob: -4.026092529296875
    4. '_' → logprob: -6.401092529296875
    5. ' +=' → logprob: -6.901092529296875
    6. '[]' → logprob: -7.276092529296875
    7. '=[]' → logprob: -7.776092529296875
    8. 's' → logprob: -8.026092529296875
    9. ' ' → logprob: -8.151092529296875
    10. '[' → logprob: -8.151092529296875

Token 256: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.974726676940918
    2. '"' → logprob: -1.099726676940918
    3. ' []' → logprob: -1.974726676940918
    4. ''' → logprob: -2.474726676940918
    5. ' '' → logprob: -3.349726676940918
    6. ' "' → logprob: -4.224726676940918
    7. '[' → logprob: -5.599726676940918
    8. ' (' → logprob: -5.849726676940918
    9. ' ' → logprob: -6.349726676940918
    10. ' [' → logprob: -6.724726676940918

Token 257: ' liste' (ID: 31719)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.2977701425552368
    2. 'tuple' → logprob: -1.5477701425552368
    3. 'string' → logprob: -4.047770023345947
    4. 'str' → logprob: -4.672770023345947
    5. ' string' → logprob: -4.922770023345947
    6. 'append' → logprob: -5.797770023345947
    7. 'list' → logprob: -5.797770023345947
    8. ' (' → logprob: -7.297770023345947
    9. '[]' → logprob: -7.422770023345947
    10. '[' → logprob: -7.797770023345947

Token 258: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5538331866264343
    2. '[' → logprob: -1.803833246231079
    3. '(
' → logprob: -2.678833246231079
    4. '(' → logprob: -3.428833246231079
    5. '([
' → logprob: -3.553833246231079
    6. '[]' → logprob: -3.803833246231079
    7. '.append' → logprob: -3.928833246231079
    8. '(ans' → logprob: -4.1788330078125
    9. '[
' → logprob: -4.3038330078125
    10. '()' → logprob: -4.3038330078125

Token 259: ' positions' (ID: 15897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8817055225372314
    2. '3' → logprob: -1.1317055225372314
    3. '[int' → logprob: -1.8817055225372314
    4. '2' → logprob: -2.7567055225372314
    5. '[n' → logprob: -4.006705284118652
    6. '4' → logprob: -4.631705284118652
    7. 'int' → logprob: -5.006705284118652
    8. '[str' → logprob: -5.381705284118652
    9. 'three' → logprob: -6.631705284118652
    10. '[t' → logprob: -6.756705284118652

Token 260: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015507744625210762
    2. ' =' → logprob: -5.640507698059082
    3. '[' → logprob: -5.765507698059082
    4. '[
' → logprob: -5.890507698059082
    5. '    
' → logprob: -6.640507698059082
    6. '[]' → logprob: -6.765507698059082
    7. '[]
' → logprob: -7.015507698059082
    8. '
' → logprob: -7.140507698059082
    9. ',' → logprob: -7.265507698059082
    10. 'def' → logprob: -8.640507698059082

Token 261: 'start' (ID: 5236)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.49797433614730835
    2. 'nh' → logprob: -0.9979743361473083
    3. '[n' → logprob: -3.997974395751953
    4. ' nh' → logprob: -6.247974395751953
    5. ' [' → logprob: -6.372974395751953
    6. '   ' → logprob: -6.622974395751953
    7. '[h' → logprob: -9.122974395751953
    8. ']' → logprob: -10.122974395751953
    9. '][' → logprob: -10.997974395751953
    10. 'n' → logprob: -10.997974395751953

Token 262: '_row' (ID: 19157)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03247346729040146
    2. ' ,' → logprob: -3.907473564147949
    3. '   ' → logprob: -5.532473564147949
    4. '[' → logprob: -5.782473564147949
    5. ']' → logprob: -6.532473564147949
    6. '_,' → logprob: -6.782473564147949
    7. '_pos' → logprob: -7.282473564147949
    8. '_' → logprob: -8.15747356414795
    9. '_position' → logprob: -8.28247356414795
    10. '][' → logprob: -8.90747356414795

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022171074524521828
    2. ',n' → logprob: -6.7522172927856445
    3. '][' → logprob: -8.002217292785645
    4. ' ,' → logprob: -8.127217292785645
    5. ',
' → logprob: -8.877217292785645
    6. '+' → logprob: -9.377217292785645
    7. ']' → logprob: -9.877217292785645
    8. '   ' → logprob: -10.377217292785645
    9. ' +' → logprob: -10.502217292785645
    10. '[' → logprob: -10.752217292785645

Token 264: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.08901580423116684
    2. ' start' → logprob: -2.4640157222747803
    3. 'end' → logprob: -10.46401596069336
    4. ' ' → logprob: -11.08901596069336
    5. '   ' → logprob: -11.33901596069336
    6. '0' → logprob: -12.46401596069336
    7. ' end' → logprob: -12.71401596069336
    8. '  ' → logprob: -12.83901596069336
    9. '    ' → logprob: -12.96401596069336
    10. 'n' → logprob: -13.33901596069336

Token 265: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.1367412656545639
    2. '_row' → logprob: -2.6367411613464355
    3. ',' → logprob: -3.1367411613464355
    4. '_column' → logprob: -5.2617411613464355
    5. ' ,' → logprob: -5.5117411613464355
    6. ',_' → logprob: -6.8867411613464355
    7. ',col' → logprob: -7.2617411613464355
    8. 'col' → logprob: -7.6367411613464355
    9. '_pos' → logprob: -8.386741638183594
    10. '_n' → logprob: -8.511741638183594

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005622766446322203
    2. '   ' → logprob: -5.630622863769531
    3. ' ,' → logprob: -6.755622863769531
    4. ']' → logprob: -7.505622863769531
    5. ',n' → logprob: -8.755622863769531
    6. ',
' → logprob: -10.255622863769531
    7. '],' → logprob: -10.380622863769531
    8. '[' → logprob: -10.755622863769531
    9. '    ' → logprob: -11.630622863769531
    10. ' ' → logprob: -11.880622863769531

Token 267: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8038012385368347
    2. 'end' → logprob: -1.5538012981414795
    3. ' start' → logprob: -1.5538012981414795
    4. ' end' → logprob: -2.0538012981414795
    5. ' ' → logprob: -8.178801536560059
    6. 'target' → logprob: -8.803801536560059
    7. '1' → logprob: -9.053801536560059
    8. '   ' → logprob: -9.178801536560059
    9. ',' → logprob: -9.491301536560059
    10. ' target' → logprob: -9.991301536560059

Token 268: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0015976991271600127
    2. '_line' → logprob: -7.126597881317139
    3. '_' → logprob: -8.12659740447998
    4. '_pos' → logprob: -8.75159740447998
    5. ' _' → logprob: -9.00159740447998
    6. ']_' → logprob: -9.25159740447998
    7. ')_' → logprob: -10.50159740447998
    8. '_l' → logprob: -11.12659740447998
    9. '_r' → logprob: -11.50159740447998
    10. ',_' → logprob: -11.87659740447998

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001510335598140955
    2. ']' → logprob: -7.376510143280029
    3. ',n' → logprob: -7.501510143280029
    4. ' ,' → logprob: -8.251510620117188
    5. '_n' → logprob: -11.251510620117188
    6. '_,' → logprob: -11.626510620117188
    7. ',row' → logprob: -11.626510620117188
    8. '   ' → logprob: -11.876510620117188
    9. '+' → logprob: -12.501510620117188
    10. ',
' → logprob: -12.751510620117188

Token 270: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.18931584060192108
    2. ' start' → logprob: -2.0643157958984375
    3. 'end' → logprob: -3.1893157958984375
    4. ' end' → logprob: -5.4393157958984375
    5. '   ' → logprob: -11.564315795898438
    6. ' ' → logprob: -11.814315795898438
    7. ',' → logprob: -13.189315795898438
    8. '  ' → logprob: -13.189315795898438
    9. ',start' → logprob: -13.439315795898438
    10. ' ' → logprob: -14.064315795898438

Token 271: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00013321757433004677
    2. '_' → logprob: -9.625133514404297
    3. '_row' → logprob: -10.000133514404297
    4. 'col' → logprob: -11.000133514404297
    5. '_column' → logprob: -13.000133514404297
    6. '_COL' → logprob: -14.250133514404297
    7. '_pos' → logprob: -14.750133514404297
    8. 'Col' → logprob: -15.000133514404297
    9. ' _' → logprob: -15.000133514404297
    10. '_,' → logprob: -15.000133514404297

Token 272: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0039485059678554535
    2. ']
' → logprob: -6.00394868850708
    3. '   ' → logprob: -6.62894868850708
    4. ' ]' → logprob: -9.253948211669922
    5. ',' → logprob: -10.753948211669922
    6. ')' → logprob: -12.003948211669922
    7. '[' → logprob: -12.253948211669922
    8. '']' → logprob: -12.503948211669922
    9. ']
' → logprob: -12.503948211669922
    10. ']

' → logprob: -12.753948211669922

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013779815286397934
    2. '    
' → logprob: -4.763779640197754
    3. '
' → logprob: -6.388779640197754
    4. ' ans' → logprob: -7.138779640197754
    5. 'ans' → logprob: -7.388779640197754
    6. '<|end|>' → logprob: -7.888779640197754
    7. '[' → logprob: -8.388779640197754
    8. '  
' → logprob: -8.638779640197754
    9. ' 
' → logprob: -8.638779640197754
    10. ' ' → logprob: -8.763779640197754

Token 274: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.05049555376172066
    2. ' ans' → logprob: -3.1754956245422363
    3. '   ' → logprob: -4.925495624542236
    4. '	ans' → logprob: -9.550495147705078
    5. '
' → logprob: -10.300495147705078
    6. 'ops' → logprob: -10.675495147705078
    7. 'operations' → logprob: -10.800495147705078
    8. '(ans' → logprob: -11.300495147705078
    9. '    
' → logprob: -11.800495147705078
    10. '_ans' → logprob: -11.925495147705078

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760549306869507
    2. ' =' → logprob: -0.8260549306869507
    3. '=[]' → logprob: -9.076054573059082
    4. ',' → logprob: -15.076054573059082
    5. '=[]
' → logprob: -16.0760555267334
    6. '＝' → logprob: -16.0760555267334
    7. ' ' → logprob: -16.0760555267334
    8. '[]' → logprob: -16.4510555267334
    9. '=[]
' → logprob: -16.7010555267334
    10. '  ' → logprob: -17.2010555267334

Token 276: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011751054553315043
    2. ' []' → logprob: -6.7511749267578125
    3. '[' → logprob: -12.876174926757812
    4. '[]
' → logprob: -13.626174926757812
    5. '[]}' → logprob: -14.126174926757812
    6. '[]>' → logprob: -15.126174926757812
    7. '[])' → logprob: -16.751174926757812
    8. '[],' → logprob: -16.876174926757812
    9. '[]"' → logprob: -16.876174926757812
    10. '[]

' → logprob: -16.876174926757812

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21510259807109833
    2. 'while' → logprob: -2.9651026725769043
    3. '    
' → logprob: -3.2151026725769043
    4. '
' → logprob: -3.4651026725769043
    5. '<|end|>' → logprob: -3.5901026725769043
    6. ' while' → logprob: -3.7151026725769043
    7. ' 
' → logprob: -5.215102672576904
    8. ',' → logprob: -5.590102672576904
    9. '  
' → logprob: -6.215102672576904
    10. '```' → logprob: -7.215102672576904

Token 278: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5938147902488708
    2. '   ' → logprob: -1.0938148498535156
    3. 'while' → logprob: -2.9688148498535156
    4. 'for' → logprob: -3.9688148498535156
    5. '    
' → logprob: -4.343814849853516
    6. ' while' → logprob: -4.718814849853516
    7. ' for' → logprob: -5.218814849853516
    8. ' 
' → logprob: -5.218814849853516
    9. '<|end|>' → logprob: -5.468814849853516
    10. '```' → logprob: -6.593814849853516

Token 279: ' have' (ID: 679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012523733312264085
    2. 'while' → logprob: -7.001252174377441
    3. ' for' → logprob: -8.001252174377441
    4. '   ' → logprob: -12.376252174377441
    5. ' while' → logprob: -14.626252174377441
    6. 'def' → logprob: -14.751252174377441
    7. '#' → logprob: -15.126252174377441
    8. 'if' → logprob: -15.501252174377441
    9. '```' → logprob: -15.751252174377441
    10. 'from' → logprob: -18.001253128051758

Token 280: 'Coin' (ID: 40826)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09994058310985565
    2. '=' → logprob: -2.724940538406372
    3. '_' → logprob: -4.474940776824951
    4. '_space' → logprob: -5.474940776824951
    5. '_to' → logprob: -5.599940776824951
    6. '_field' → logprob: -6.349940776824951
    7. '_tile' → logprob: -6.599940776824951
    8. '_one' → logprob: -7.474940776824951
    9. '_flag' → logprob: -7.474940776824951
    10. ',' → logprob: -7.849940776824951

Token 281: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761836171150208
    2. ' =' → logprob: -0.8261836171150208
    3. '_' → logprob: -8.826183319091797
    4. ',' → logprob: -10.451183319091797
    5. '[' → logprob: -10.951183319091797
    6. ')' → logprob: -11.451183319091797
    7. '=True' → logprob: -11.826183319091797
    8. '_space' → logprob: -12.076183319091797
    9. ' ' → logprob: -12.576183319091797
    10. '   ' → logprob: -12.576183319091797

Token 282: ' une' (ID: 2463)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2197575718164444
    2. ' False' → logprob: -1.9697575569152832
    3. '0' → logprob: -3.344757556915283
    4. 'True' → logprob: -4.844757556915283
    5. 'field' → logprob: -5.344757556915283
    6. ' True' → logprob: -5.719757556915283
    7. ' ' → logprob: -5.969757556915283
    8. '[' → logprob: -6.344757556915283
    9. '[]' → logprob: -6.969757556915283
    10. ' field' → logprob: -7.469757556915283

Token 283: ' variable' (ID: 11076)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.25022515654563904
    2. '[' → logprob: -2.875225067138672
    3. '0' → logprob: -3.125225067138672
    4. ' False' → logprob: -3.250225067138672
    5. 'True' → logprob: -3.750225067138672
    6. ' ' → logprob: -4.625225067138672
    7. ' =' → logprob: -4.625225067138672
    8. 'bool' → logprob: -5.375225067138672
    9. ' [' → logprob: -5.500225067138672
    10. '=' → logprob: -5.625225067138672

Token 284: ' bool' (ID: 3792)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1436183601617813
    2. '=' → logprob: -2.01861834526062
    3. '=True' → logprob: -7.143618583679199
    4. '=False' → logprob: -9.3936185836792
    5. ' True' → logprob: -10.0186185836792
    6. 'True' → logprob: -11.6436185836792
    7. '   ' → logprob: -12.1436185836792
    8. ' ' → logprob: -12.6436185836792
    9. 'have' → logprob: -13.5186185836792
    10. ',' → logprob: -14.1436185836792

Token 285: 'é' (ID: 377)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.1860017478466034
    2. 'é' → logprob: -1.8110017776489258
    3. 'éan' → logprob: -5.186001777648926
    4. 'e' → logprob: -8.561001777648926
    5. 'ée' → logprob: -9.061001777648926
    6. '   ' → logprob: -9.061001777648926
    7. '  ' → logprob: -9.936001777648926
    8. ' =' → logprob: -10.436001777648926
    9. 'éal' → logprob: -10.561001777648926
    10. '	e' → logprob: -11.436001777648926

Token 286: 'enne' (ID: 17721)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.04740365594625473
    2. 'ane' → logprob: -3.672403573989868
    3. 'enne' → logprob: -4.172403812408447
    4. 'ene' → logprob: -6.172403812408447
    5. 'en' → logprob: -6.297403812408447
    6. 'ène' → logprob: -7.797403812408447
    7. '   ' → logprob: -8.172403335571289
    8. 'e' → logprob: -8.672403335571289
    9. '#' → logprob: -8.922403335571289
    10. 'ana' → logprob: -9.297403335571289

Token 287: ' utilisée' (ID: 106548)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008252260275185108
    2. '=' → logprob: -5.008252143859863
    3. '   ' → logprob: -7.008252143859863
    4. 'have' → logprob: -8.383252143859863
    5. ' have' → logprob: -8.508252143859863
    6. '=False' → logprob: -9.383252143859863
    7. '=True' → logprob: -9.758252143859863
    8. ' True' → logprob: -11.258252143859863
    9. ' ' → logprob: -11.508252143859863
    10. ',' → logprob: -11.758252143859863

Token 288: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24881482124328613
    2. '=' → logprob: -2.498814821243286
    3. ' to' → logprob: -2.998814821243286
    4. ' pour' → logprob: -3.248814821243286
    5. '=True' → logprob: -3.748814821243286
    6. ' True' → logprob: -4.873814582824707
    7. '=False' → logprob: -5.498814582824707
    8. ' à' → logprob: -5.623814582824707
    9. 'to' → logprob: -6.123814582824707
    10. ' ' → logprob: -6.623814582824707

Token 289: ' indic' (ID: 6079)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.27623042464256287
    2. 'flag' → logprob: -2.0262303352355957
    3. ' False' → logprob: -2.7762303352355957
    4. 'True' → logprob: -3.9012303352355957
    5. ' flag' → logprob: -4.651230335235596
    6. 'ind' → logprob: -4.776230335235596
    7. ' True' → logprob: -6.026230335235596
    8. 'un' → logprob: -6.401230335235596
    9. ' indic' → logprob: -6.901230335235596
    10. ' une' → logprob: -7.276230335235596

Token 290: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.015319683589041233
    2. 'ator' → logprob: -4.39031982421875
    3. 'ate' → logprob: -5.89031982421875
    4. 'e' → logprob: -11.01531982421875
    5. 'eur' → logprob: -12.01531982421875
    6. 'atrice' → logprob: -12.51531982421875
    7. 'ater' → logprob: -12.64031982421875
    8. 'atif' → logprob: -13.01531982421875
    9. 'at' → logprob: -13.26531982421875
    10. 'ateurs' → logprob: -13.64031982421875

Token 291: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018033219501376152
    2. '=' → logprob: -4.643033027648926
    3. '=True' → logprob: -5.518033027648926
    4. '   ' → logprob: -6.143033027648926
    5. ' True' → logprob: -7.268033027648926
    6. 'have' → logprob: -7.643033027648926
    7. ' have' → logprob: -7.768033027648926
    8. '=False' → logprob: -8.643033027648926
    9. ',' → logprob: -9.143033027648926
    10. 'True' → logprob: -9.768033027648926

Token 292: ' savoir' (ID: 22835)
  Prédit: ' savoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' savoir' → logprob: -0.8404859900474548
    2. ' True' → logprob: -1.0904860496520996
    3. ' la' → logprob: -3.3404860496520996
    4. ' ind' → logprob: -3.4654860496520996
    5. 'True' → logprob: -3.4654860496520996
    6. 'ind' → logprob: -3.5904860496520996
    7. ' vérifier' → logprob: -4.0904860496521
    8. ' le' → logprob: -4.3404860496521
    9. ' gérer' → logprob: -4.7154860496521
    10. 'not' → logprob: -4.8404860496521

Token 293: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46749424934387207
    2. 'si' → logprob: -1.717494249343872
    3. 'if' → logprob: -2.217494249343872
    4. ' si' → logprob: -2.592494249343872
    5. 's' → logprob: -4.967494010925293
    6. ' s' → logprob: -5.842494010925293
    7. '   ' → logprob: -9.217494010925293
    8. ' whether' → logprob: -9.592494010925293
    9. 'whether' → logprob: -9.717494010925293
    10. ' ' → logprob: -10.467494010925293

Token 294: ' la' (ID: 557)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.7103400230407715
    2. 'field' → logprob: -0.7103400230407715
    3. ' we' → logprob: -4.9603400230407715
    4. ' there' → logprob: -5.4603400230407715
    5. ' on' → logprob: -6.7103400230407715
    6. ' the' → logprob: -7.0853400230407715
    7. 'we' → logprob: -7.4603400230407715
    8. ' nous' → logprob: -7.7103400230407715
    9. ' le' → logprob: -7.8353400230407715
    10. 'on' → logprob: -8.21034049987793

Token 295: ' case' (ID: 1890)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.27961426973342896
    2. ' field' → logprob: -1.9046142101287842
    3. 'have' → logprob: -2.904614210128784
    4. ' have' → logprob: -4.029614448547363
    5. 'coin' → logprob: -4.779614448547363
    6. 'current' → logprob: -6.529614448547363
    7. ' coin' → logprob: -6.779614448547363
    8. ' current' → logprob: -7.154614448547363
    9. 'champ' → logprob: -7.279614448547363
    10. ' we' → logprob: -7.529614448547363

Token 296: ' précédente' (ID: 177319)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8157528638839722
    2. '[n' → logprob: -1.6907528638839722
    3. '_' → logprob: -2.0657529830932617
    4. ' ' → logprob: -2.3157529830932617
    5. '_has' → logprob: -3.9407529830932617
    6. '[current' → logprob: -4.065752983093262
    7. ' _' → logprob: -4.315752983093262
    8. '_have' → logprob: -4.315752983093262
    9. ' a' → logprob: -4.565752983093262
    10. '  ' → logprob: -4.565752983093262

Token 297: ' avait' (ID: 18892)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5087262392044067
    2. ' has' → logprob: -1.3837262392044067
    3. ' and' → logprob: -3.008726119995117
    4. 'a' → logprob: -3.758726119995117
    5. ' contient' → logprob: -3.883726119995117
    6. 'has' → logprob: -4.758726119995117
    7. 'and' → logprob: -5.008726119995117
    8. ' contains' → logprob: -5.008726119995117
    9. ' possède' → logprob: -5.508726119995117
    10. ' ' → logprob: -5.508726119995117

Token 298: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7478503584861755
    2. ' une' → logprob: -1.1228504180908203
    3. 'un' → logprob: -2.2478504180908203
    4. 'a' → logprob: -3.6228504180908203
    5. ' un' → logprob: -3.6228504180908203
    6. ' True' → logprob: -4.87285041809082
    7. 'coin' → logprob: -5.12285041809082
    8. '1' → logprob: -5.12285041809082
    9. ' a' → logprob: -5.24785041809082
    10. ''une' → logprob: -5.24785041809082

Token 299: ' nombre' (ID: 9733)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.008731337264180183
    2. ' coin' → logprob: -5.008731365203857
    3. ' ' → logprob: -7.633731365203857
    4. 'c' → logprob: -8.0087308883667
    5. 'piece' → logprob: -8.3837308883667
    6. '_coin' → logprob: -8.5087308883667
    7. '1' → logprob: -9.2587308883667
    8. 'Coin' → logprob: -9.3837308883667
    9. 's' → logprob: -9.5087308883667
    10. 'jet' → logprob: -10.1337308883667

Token 300: ' impair' (ID: 64113)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.760744571685791
    2. ' de' → logprob: -1.260744571685791
    3. '_coin' → logprob: -2.760744571685791
    4. ' d' → logprob: -2.885744571685791
    5. ' _' → logprob: -3.885744571685791
    6. 'de' → logprob: -4.260744571685791
    7. '_de' → logprob: -4.385744571685791
    8. '   ' → logprob: -4.510744571685791
    9. '  ' → logprob: -4.635744571685791
    10. ' =' → logprob: -4.760744571685791

Token 301: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20087501406669617
    2. '=' → logprob: -2.5758750438690186
    3. '_' → logprob: -2.7008750438690186
    4. '_coin' → logprob: -3.8258750438690186
    5. '=True' → logprob: -5.9508748054504395
    6. '_co' → logprob: -6.3258748054504395
    7. '_have' → logprob: -6.3258748054504395
    8. ')' → logprob: -6.5758748054504395
    9. ' ' → logprob: -6.5758748054504395
    10. ' _' → logprob: -6.8258748054504395

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8861615657806396
    2. 'have' → logprob: -1.0111615657806396
    3. ' have' → logprob: -1.7611615657806396
    4. ' =' → logprob: -3.1361615657806396
    5. '=' → logprob: -5.011161804199219
    6. '=True' → logprob: -7.761161804199219
    7. '    
' → logprob: -7.886161804199219
    8. '_have' → logprob: -8.261161804199219
    9. ',' → logprob: -8.386161804199219
    10. ' ' → logprob: -9.011161804199219

Token 303: ' have' (ID: 679)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5090991854667664
    2. 'have' (adapté à ' have') → logprob: -1.5090992450714111
    3. ' have' → logprob: -1.7590992450714111
    4. '=' → logprob: -5.634099006652832
    5. '=True' → logprob: -7.009099006652832
    6. ' True' → logprob: -7.759099006652832
    7. '   ' → logprob: -8.634099006652832
    8. ' ' → logprob: -8.884099006652832
    9. 'True' → logprob: -8.884099006652832
    10. '=False' → logprob: -9.259099006652832

Token 304: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0005262265913188457
    2. '=' → logprob: -8.500526428222656
    3. '_coin' → logprob: -8.500526428222656
    4. ' =' → logprob: -9.875526428222656
    5. 'Coins' → logprob: -10.000526428222656
    6. '_C' → logprob: -11.250526428222656
    7. ' Coin' → logprob: -13.000526428222656
    8. '_' → logprob: -13.125526428222656
    9. 'C' → logprob: -13.875526428222656
    10. ' ' → logprob: -14.625526428222656

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759430527687073
    2. '=' → logprob: -0.8259430527687073
    3. '=True' → logprob: -13.575942993164062
    4. ' ' → logprob: -13.700942993164062
    5. '=False' → logprob: -14.075942993164062
    6. ',' → logprob: -15.450942993164062
    7. ')' → logprob: -16.075942993164062
    8. '＝' → logprob: -16.825942993164062
    9. ' =
' → logprob: -17.200942993164062
    10. '   ' → logprob: -17.325942993164062

Token 306: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868902921676636
    2. ' False' → logprob: -1.1368902921676636
    3. 'True' → logprob: -11.636890411376953
    4. ' True' → logprob: -11.761890411376953
    5. '0' → logprob: -13.011890411376953
    6. '(False' → logprob: -15.011890411376953
    7. ' ' → logprob: -17.136890411376953
    8. '=False' → logprob: -17.636890411376953
    9. '   ' → logprob: -18.136890411376953
    10. ' ' → logprob: -18.761890411376953

Token 307: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.530097484588623
    2. '
' → logprob: -1.280097484588623
    3. '    
' → logprob: -2.280097484588623
    4. '<|end|>' → logprob: -4.905097484588623
    5. '  
' → logprob: -5.030097484588623
    6. '\n' → logprob: -5.280097484588623
    7. ' 
' → logprob: -5.780097484588623
    8. '   
' → logprob: -6.405097484588623
    9. 'for' → logprob: -7.030097484588623
    10. ',' → logprob: -7.280097484588623

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30038174986839294
    2. '
' → logprob: -1.5503817796707153
    3. '    
' → logprob: -3.300381660461426
    4. ' for' → logprob: -5.925381660461426
    5. 'for' → logprob: -6.050381660461426
    6. ' 
' → logprob: -6.300381660461426
    7. '  
' → logprob: -6.925381660461426
    8. '   
' → logprob: -7.550381660461426
    9. '<|end|>' → logprob: -7.800381660461426
    10. '\n' → logprob: -7.800381660461426

Token 309: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5387108325958252
    2. '   ' → logprob: -1.1637108325958252
    3. ' for' → logprob: -2.288710832595825
    4. '    
' → logprob: -6.788710594177246
    5. '
' → logprob: -7.038710594177246
    6. ' ' → logprob: -8.913710594177246
    7. ' 
' → logprob: -8.913710594177246
    8. 'n' → logprob: -9.538710594177246
    9. '    ' → logprob: -9.663710594177246
    10. '  ' → logprob: -10.038710594177246

Token 310: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01962948404252529
    2. ' for' → logprob: -4.01962947845459
    3. '   ' → logprob: -6.51962947845459
    4. '	for' → logprob: -14.39462947845459
    5. '```' → logprob: -14.39462947845459
    6. 'while' → logprob: -14.64462947845459
    7. ' ' → logprob: -14.76962947845459
    8. '    ' → logprob: -14.89462947845459
    9. '#' → logprob: -14.89462947845459
    10. 'range' → logprob: -14.89462947845459

Token 311: ' utilise' (ID: 70283)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26941490173339844
    2. 'for' → logprob: -1.5194149017333984
    3. ' range' → logprob: -4.644414901733398
    4. '   ' → logprob: -5.644414901733398
    5. 'range' → logprob: -6.519414901733398
    6. ' =' → logprob: -7.519414901733398
    7. '    ' → logprob: -7.519414901733398
    8. ' in' → logprob: -7.894414901733398
    9. 'def' → logprob: -8.394414901733398
    10. '=' → logprob: -8.519414901733398

Token 312: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19533073902130127
    2. 'for' → logprob: -2.4453306198120117
    3. ' range' → logprob: -2.9453306198120117
    4. ' un' → logprob: -4.070330619812012
    5. 'range' → logprob: -4.445330619812012
    6. ' ' → logprob: -5.945330619812012
    7. ' une' → logprob: -6.070330619812012
    8. '   ' → logprob: -6.445330619812012
    9. ' deux' → logprob: -7.070330619812012
    10. ' a' → logprob: -7.320330619812012

Token 313: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02718355506658554
    2. ' for' → logprob: -3.9021835327148438
    3. 'range' → logprob: -5.152183532714844
    4. 'while' → logprob: -7.777183532714844
    5. ' range' → logprob: -8.152183532714844
    6. '   ' → logprob: -9.777183532714844
    7. ' while' → logprob: -10.902183532714844
    8. '
' → logprob: -11.777183532714844
    9. 'r' → logprob: -12.152183532714844
    10. 'or' → logprob: -12.277183532714844

Token 314: ' étern' (ID: 183417)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01447703130543232
    2. 'for' → logprob: -4.264477252960205
    3. '   ' → logprob: -8.389476776123047
    4. ' pour' → logprob: -9.514476776123047
    5. ' while' → logprob: -13.639476776123047
    6. ' en' → logprob: -13.639476776123047
    7. ' to' → logprob: -13.639476776123047
    8. ' ' → logprob: -13.764476776123047
    9. ' i' → logprob: -13.889476776123047
    10. '
' → logprob: -14.014476776123047

Token 315: 'elle' (ID: 3486)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17972750961780548
    2. '   ' → logprob: -2.304727554321289
    3. ' while' → logprob: -3.679727554321289
    4. 'e' → logprob: -4.179727554321289
    5. 'for' → logprob: -4.179727554321289
    6. 'ine' → logprob: -5.929727554321289
    7. ':' → logprob: -6.554727554321289
    8. ' for' → logprob: -6.929727554321289
    9. 'uite' → logprob: -7.804727554321289
    10. 'hile' → logprob: -8.054727554321289

Token 316: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1656022071838379
    2. ':' → logprob: -1.915602207183838
    3. ' while' → logprob: -5.790602207183838
    4. 'while' → logprob: -7.165602207183838
    5. ':
' → logprob: -7.290602207183838
    6. ',' → logprob: -8.29060173034668
    7. '    
' → logprob: -8.41560173034668
    8. '
' → logprob: -8.91560173034668
    9. ' :' → logprob: -9.29060173034668
    10. '.' → logprob: -10.41560173034668

Token 317: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20159900188446045
    2. 'while' → logprob: -1.7015990018844604
    3. '   ' → logprob: -8.70159912109375
    4. ' True' → logprob: -11.32659912109375
    5. '	while' → logprob: -13.07659912109375
    6. 'True' → logprob: -13.95159912109375
    7. 'While' → logprob: -13.95159912109375
    8. '
' → logprob: -14.07659912109375
    9. '    ' → logprob: -14.32659912109375
    10. '  ' → logprob: -14.57659912109375

Token 318: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.013979320414364338
    2. 'True' → logprob: -4.388979434967041
    3. ' nh' → logprob: -6.638979434967041
    4. ' )' → logprob: -9.638978958129883
    5. ')' → logprob: -10.513978958129883
    6. ' not' → logprob: -11.013978958129883
    7. '(True' → logprob: -11.388978958129883
    8. ' ' → logprob: -11.513978958129883
    9. ' ):' → logprob: -11.513978958129883
    10. ':' → logprob: -12.638978958129883

Token 319: ':)' (ID: 50372)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23174534738063812
    2. ')' → logprob: -2.2317452430725098
    3. '):
' → logprob: -2.7317452430725098
    4. ':' → logprob: -3.4817452430725098
    5. '   ' → logprob: -5.98174524307251
    6. ':)' → logprob: -7.60674524307251
    7. ')
' → logprob: -7.98174524307251
    8. ':
' → logprob: -8.356745719909668
    9. '):

' → logprob: -10.981745719909668
    10. '():' → logprob: -11.481745719909668

Token 320: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4634079337120056
    2. '   ' → logprob: -1.0884079933166504
    3. ':
' → logprob: -3.5884079933166504
    4. '
' → logprob: -5.96340799331665
    5. '    
' → logprob: -6.71340799331665
    6. '       ' → logprob: -7.08840799331665
    7. ' :' → logprob: -7.46340799331665
    8. ',' → logprob: -7.58840799331665
    9. '):' → logprob: -9.213407516479492
    10. ' :
' → logprob: -9.213407516479492

Token 321: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19186298549175262
    2. '   ' → logprob: -2.3168630599975586
    3. ' :' → logprob: -2.9418630599975586
    4. '    ' → logprob: -5.066863059997559
    5. ':
' → logprob: -5.191863059997559
    6. '       ' → logprob: -5.566863059997559
    7. ' :
' → logprob: -5.941863059997559
    8. ' nh' → logprob: -7.066863059997559
    9. ' continue' → logprob: -7.066863059997559
    10. ' ' → logprob: -7.066863059997559

Token 322: ' termine' (ID: 76900)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8650187849998474
    2. ' continue' → logprob: -0.8650187849998474
    3. ' pas' → logprob: -2.240018844604492
    4. ' :' → logprob: -4.740018844604492
    5. 'contin' → logprob: -4.990018844604492
    6. 'continue' → logprob: -5.115018844604492
    7. '   ' → logprob: -5.115018844604492
    8. ' va' → logprob: -5.865018844604492
    9. ' continues' → logprob: -6.115018844604492
    10. 'pas' → logprob: -6.365018844604492

Token 323: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42071786522865295
    2. ' pas' → logprob: -1.6707178354263306
    3. 'pas' → logprob: -2.67071795463562
    4. '   ' → logprob: -2.92071795463562
    5. ' jamais' → logprob: -4.045717716217041
    6. ' que' → logprob: -5.420717716217041
    7. ' :' → logprob: -5.920717716217041
    8. ' ' → logprob: -6.170717716217041
    9. '  ' → logprob: -6.670717716217041
    10. '    ' → logprob: -7.545717716217041

Token 324: ' man' (ID: 873)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1817433387041092
    2. ' lorsque' → logprob: -2.6817433834075928
    3. ' par' → logprob: -3.8067433834075928
    4. ':' → logprob: -3.8067433834075928
    5. ' when' → logprob: -4.431743144989014
    6. ' lorsqu' → logprob: -4.556743144989014
    7. 'pas' → logprob: -4.806743144989014
    8. ' if' → logprob: -4.931743144989014
    9. ' jamais' → logprob: -5.681743144989014
    10. ' que' → logprob: -5.931743144989014

Token 325: 'uellement' (ID: 36026)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.6145414710044861
    2. 't' → logprob: -0.9895414710044861
    3. 'e' → logprob: -2.739541530609131
    4. 'que' → logprob: -5.364541530609131
    5. 'ère' → logprob: -5.489541530609131
    6. 'uellement' → logprob: -5.614541530609131
    7. '   ' → logprob: -5.864541530609131
    8. 'te' → logprob: -6.739541530609131
    9. 'u' → logprob: -7.239541530609131
    10. 'tle' → logprob: -7.489541530609131

Token 326: ' par' (ID: 686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0222745630890131
    2. ':
' → logprob: -3.8972744941711426
    3. '   ' → logprob: -6.647274494171143
    4. ' :' → logprob: -8.5222749710083
    5. ' :
' → logprob: -9.8972749710083
    6. '```' → logprob: -9.8972749710083
    7. '    
' → logprob: -10.6472749710083
    8. '
' → logprob: -10.7722749710083
    9. '  
' → logprob: -10.8972749710083
    10. ':

' → logprob: -11.5222749710083

Token 327: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7062532305717468
    2. '   ' → logprob: -1.3312532901763916
    3. 'break' → logprob: -1.5812532901763916
    4. ' un' → logprob: -3.4562532901763916
    5. ' une' → logprob: -6.3312530517578125
    6. ' if' → logprob: -7.0812530517578125
    7. 'if' → logprob: -7.7062530517578125
    8. ' return' → logprob: -7.8312530517578125
    9. ' le' → logprob: -8.331253051757812
    10. 'un' → logprob: -8.331253051757812

Token 328: ' 
' (ID: 793)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4357050955295563
    2. '   ' → logprob: -1.0607050657272339
    3. '    
' → logprob: -5.935705184936523
    4. ':
' → logprob: -6.435705184936523
    5. ' :' → logprob: -6.935705184936523
    6. '  
' → logprob: -7.935705184936523
    7. ',' → logprob: -8.060705184936523
    8. '<|end|>' → logprob: -8.435705184936523
    9. '
' → logprob: -8.685705184936523
    10. '    ' → logprob: -9.060705184936523

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05471808463335037
    2. ':' → logprob: -3.179718017578125
    3. '    
' → logprob: -4.679718017578125
    4. '
' → logprob: -6.929718017578125
    5. ':
' → logprob: -7.429718017578125
    6. '  
' → logprob: -8.429718017578125
    7. '   
' → logprob: -9.054718017578125
    8. '#' → logprob: -9.554718017578125
    9. ' :' → logprob: -9.679718017578125
    10. '       ' → logprob: -9.804718017578125

Token 330: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030453430488705635
    2. '
' → logprob: -4.155453205108643
    3. 'while' (adapté à ' while') → logprob: -5.030453205108643
    4. '    
' → logprob: -5.905453205108643
    5. ':' → logprob: -6.155453205108643
    6. ' while' → logprob: -6.155453205108643
    7. '  
' → logprob: -8.4054536819458
    8. ':
' → logprob: -8.9054536819458
    9. '   
' → logprob: -8.9054536819458
    10. ' 
' → logprob: -9.5304536819458

Token 331: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.11619767546653748
    2. ' nh' → logprob: -2.3661975860595703
    3. ' ' → logprob: -4.24119758605957
    4. 'True' → logprob: -6.74119758605957
    5. ' not' → logprob: -8.74119758605957
    6. ' nw' → logprob: -10.49119758605957
    7. ' Nh' → logprob: -10.99119758605957
    8. '  ' → logprob: -11.36619758605957
    9. ' NH' → logprob: -11.36619758605957
    10. ' ' → logprob: -11.61619758605957

Token 332: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012442785082384944
    2. ':
' → logprob: -6.876244068145752
    3. '       ' → logprob: -9.12624454498291
    4. '   ' → logprob: -9.37624454498291
    5. ' :' → logprob: -11.87624454498291
    6. '):' → logprob: -12.37624454498291
    7. '():' → logprob: -13.37624454498291
    8. ',' → logprob: -13.37624454498291
    9. '):
' → logprob: -14.00124454498291
    10. '<|end|>' → logprob: -14.37624454498291

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00750736752524972
    2. ' if' → logprob: -5.38250732421875
    3. 'if' → logprob: -6.88250732421875
    4. '        
' → logprob: -7.13250732421875
    5. '   ' → logprob: -7.25750732421875
    6. '    ' → logprob: -9.75750732421875
    7. '```' → logprob: -9.75750732421875
    8. ',' → logprob: -10.38250732421875
    9. '    
' → logprob: -10.38250732421875
    10. '#' → logprob: -10.63250732421875

Token 334: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37064966559410095
    2. '       ' → logprob: -1.6206496953964233
    3. '           ' → logprob: -2.995649576187134
    4. '#' (adapté à ' #') → logprob: -3.620649576187134
    5. ' if' → logprob: -4.370649814605713
    6. 'case' → logprob: -5.370649814605713
    7. 'val' → logprob: -5.370649814605713
    8. 'current' → logprob: -5.745649814605713
    9. 'cell' → logprob: -5.995649814605713
    10. 'value' → logprob: -6.245649814605713

Token 335: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.487876832485199
    2. 'val' → logprob: -2.4878768920898438
    3. 'coin' → logprob: -2.4878768920898438
    4. 'current' → logprob: -2.7378768920898438
    5. 'value' → logprob: -2.7378768920898438
    6. '#' → logprob: -3.3628768920898438
    7. '   ' → logprob: -3.9878768920898438
    8. ' if' → logprob: -4.987876892089844
    9. 'curr' → logprob: -4.987876892089844
    10. 'cur' → logprob: -5.112876892089844

Token 336: ' la' (ID: 557)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.26390770077705383
    2. ' have' → logprob: -1.7639076709747314
    3. 'field' → logprob: -3.6389076709747314
    4. ' nh' → logprob: -4.3889079093933105
    5. 'have' → logprob: -4.5139079093933105
    6. ' nw' → logprob: -5.0139079093933105
    7. 'nw' → logprob: -6.7639079093933105
    8. 'nh' → logprob: -7.2639079093933105
    9. ' ' → logprob: -7.3889079093933105
    10. ' not' → logprob: -7.8889079093933105

Token 337: ' valeur' (ID: 41664)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.10071144253015518
    2. ' field' → logprob: -2.4757113456726074
    3. 'nw' → logprob: -5.475711345672607
    4. 'nh' → logprob: -6.100711345672607
    5. 'have' → logprob: -6.100711345672607
    6. ' nh' → logprob: -6.850711345672607
    7. '   ' → logprob: -7.225711345672607
    8. ' have' → logprob: -7.725711345672607
    9. ' nw' → logprob: -7.725711345672607
    10. '(field' → logprob: -9.475711822509766

Token 338: ' de' (ID: 334)
  Prédit: '[field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[field' → logprob: -1.442548394203186
    2. 'field' → logprob: -1.692548394203186
    3. '[' → logprob: -1.942548394203186
    4. '       ' → logprob: -2.3175482749938965
    5. '(field' → logprob: -2.8175482749938965
    6. '   ' → logprob: -3.1925482749938965
    7. ' =' → logprob: -3.3175482749938965
    8. '=' → logprob: -3.3175482749938965
    9. ' ==' → logprob: -3.4425482749938965
    10. ' field' → logprob: -3.4425482749938965

Token 339: ' la' (ID: 557)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.08574910461902618
    2. ' field' → logprob: -2.5857491493225098
    3. 'have' → logprob: -5.21074914932251
    4. ' have' → logprob: -6.71074914932251
    5. '   ' → logprob: -9.460748672485352
    6. ' ' → logprob: -10.460748672485352
    7. '(field' → logprob: -11.210748672485352
    8. 'f' → logprob: -12.085748672485352
    9. '    ' → logprob: -12.523248672485352
    10. '	field' → logprob: -12.835748672485352

Token 340: ' case' (ID: 1890)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.012325277552008629
    2. 'case' → logprob: -4.512325286865234
    3. ' field' → logprob: -6.887325286865234
    4. ' case' → logprob: -9.012325286865234
    5. 'current' → logprob: -9.762325286865234
    6. 'cell' → logprob: -10.512325286865234
    7. 'f' → logprob: -11.012325286865234
    8. '   ' → logprob: -12.637325286865234
    9. 'feld' → logprob: -12.637325286865234
    10. ' ' → logprob: -12.887325286865234

Token 341: ' actuelle' (ID: 104951)
  Prédit: '[field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[field' → logprob: -0.7658958435058594
    2. 'field' → logprob: -1.2658958435058594
    3. ' field' → logprob: -1.6408958435058594
    4. '[' → logprob: -3.2658958435058594
    5. '[n' → logprob: -5.390895843505859
    6. ' [' → logprob: -5.515895843505859
    7. ' at' → logprob: -6.015895843505859
    8. '(field' → logprob: -6.015895843505859
    9. '   ' → logprob: -6.515895843505859
    10. '       ' → logprob: -6.765895843505859

Token 342: ' est' (ID: 893)
  Prédit: '[field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[field' → logprob: -0.716556966304779
    2. '[' → logprob: -1.3415570259094238
    3. ' %' → logprob: -2.966557025909424
    4. ' ==' → logprob: -3.341557025909424
    5. '%' → logprob: -3.591557025909424
    6. 'field' → logprob: -3.716557025909424
    7. '       ' → logprob: -3.841557025909424
    8. ' field' → logprob: -3.841557025909424
    9. ' [' → logprob: -3.841557025909424
    10. '   ' → logprob: -4.341557025909424

Token 343: ' imp' (ID: 3282)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.35678830742836
    2. ' odd' → logprob: -1.9817882776260376
    3. '%' → logprob: -2.106788396835327
    4. '   ' → logprob: -4.231788158416748
    5. '       ' → logprob: -5.231788158416748
    6. '1' → logprob: -5.231788158416748
    7. 'imp' → logprob: -5.481788158416748
    8. ' %' → logprob: -5.981788158416748
    9. '>' → logprob: -6.106788158416748
    10. 'pair' → logprob: -6.481788158416748

Token 344: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.3894917964935303
    2. '%' → logprob: -1.6394917964935303
    3. ' %' → logprob: -3.2644917964935303
    4. 'air' → logprob: -3.7644917964935303
    5. 'ar' → logprob: -3.8894917964935303
    6. 'r' → logprob: -4.014492034912109
    7. '   ' → logprob: -4.514492034912109
    8. ' ' → logprob: -4.764492034912109
    9. '_' → logprob: -6.139492034912109
    10. '  ' → logprob: -6.514492034912109

Token 345: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22476613521575928
    2. ':' → logprob: -1.9747661352157593
    3. ' and' → logprob: -2.974766254425049
    4. ',' → logprob: -5.099766254425049
    5. ' if' → logprob: -6.474766254425049
    6. ' :' → logprob: -6.474766254425049
    7. ':
' → logprob: -7.349766254425049
    8. ' (' → logprob: -7.849766254425049
    9. ' =' → logprob: -8.22476577758789
    10. '           ' → logprob: -8.22476577758789

Token 346: 'v' (ID: 85)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.38822928071022034
    2. ' field' → logprob: -1.138229250907898
    3. ')' → logprob: -7.6382293701171875
    4. '(field' → logprob: -8.138229370117188
    5. '   ' → logprob: -8.388229370117188
    6. ' (' → logprob: -8.888229370117188
    7. '(' → logprob: -9.888229370117188
    8. 'if' → logprob: -10.138229370117188
    9. ' if' → logprob: -10.638229370117188
    10. ' ' → logprob: -10.638229370117188

Token 347: 'ér' (ID: 2156)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.14064402878284454
    2. 'alue' → logprob: -2.765644073486328
    3. '%' → logprob: -3.390644073486328
    4. 'field' → logprob: -4.015644073486328
    5. ')' → logprob: -6.015644073486328
    6. 'alid' → logprob: -6.140644073486328
    7. ' field' → logprob: -6.265644073486328
    8. 'ALUE' → logprob: -6.390644073486328
    9. '   ' → logprob: -6.515644073486328
    10. '>' → logprob: -6.765644073486328

Token 348: 'ifié' (ID: 49927)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.9404233694076538
    2. '   ' → logprob: -1.4404233694076538
    3. 'ifiée' → logprob: -2.0654234886169434
    4. 'ale' → logprob: -2.4404234886169434
    5. 'if' → logprob: -2.6904234886169434
    6. 'al' → logprob: -3.1904234886169434
    7. 'er' → logprob: -3.6904234886169434
    8. 'érée' → logprob: -5.315423488616943
    9. 'ér' → logprob: -5.815423488616943
    10. 'alid' → logprob: -6.440423488616943

Token 349: ' par' (ID: 686)
  Prédit: '(field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(field' → logprob: -1.4549158811569214
    2. ' if' → logprob: -1.5799158811569214
    3. ' field' → logprob: -1.8299158811569214
    4. 'field' → logprob: -2.329916000366211
    5. ' (' → logprob: -2.454916000366211
    6. '   ' → logprob: -2.704916000366211
    7. 'if' → logprob: -2.954916000366211
    8. '       ' → logprob: -3.454916000366211
    9. ')' → logprob: -3.579916000366211
    10. '(' → logprob: -3.954916000366211

Token 350: ' le' (ID: 505)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.31340479850769043
    2. ' field' → logprob: -1.3134047985076904
    3. '(field' → logprob: -9.68840503692627
    4. '   ' → logprob: -10.18840503692627
    5. ' ' → logprob: -11.18840503692627
    6. ' (' → logprob: -11.31340503692627
    7. '(' → logprob: -12.18840503692627
    8. ')' → logprob: -12.56340503692627
    9. '	field' → logprob: -13.43840503692627
    10. '```' → logprob: -13.68840503692627

Token 351: ' modulo' (ID: 112372)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.003761132014915347
    2. ' field' → logprob: -6.003761291503906
    3. '%' → logprob: -6.878761291503906
    4. ' %' → logprob: -9.003761291503906
    5. 'if' → logprob: -9.753761291503906
    6. ')' → logprob: -11.253761291503906
    7. '   ' → logprob: -11.378761291503906
    8. '(field' → logprob: -11.378761291503906
    9. ' ' → logprob: -12.753761291503906
    10. '`' → logprob: -12.753761291503906

Token 352: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6807374954223633
    2. ' %' → logprob: -1.6807374954223633
    3. '%' → logprob: -2.0557374954223633
    4. ' ' → logprob: -2.4307374954223633
    5. ')' → logprob: -2.6807374954223633
    6. '           ' → logprob: -2.6807374954223633
    7. '   ' → logprob: -2.8057374954223633
    8. ' ==' → logprob: -3.1807374954223633
    9. ' !=' → logprob: -3.4307374954223633
    10. ' %
' → logprob: -3.5557374954223633

Token 353: '2' (ID: 17)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.1598862409591675
    2. '1' → logprob: -1.2848862409591675
    3. ' ' → logprob: -2.159886360168457
    4. '2' → logprob: -2.784886360168457
    5. ' %' → logprob: -2.784886360168457
    6. 'field' → logprob: -2.784886360168457
    7. ')' → logprob: -3.659886360168457
    8. ' field' → logprob: -3.909886360168457
    9. '   ' → logprob: -5.034886360168457
    10. ' %
' → logprob: -5.034886360168457

Token 354: ',' (ID: 11)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.25686952471733093
    2. ' ==' → logprob: -2.3818695545196533
    3. ')' → logprob: -3.0068695545196533
    4. '!=' → logprob: -3.6318695545196533
    5. '       ' → logprob: -4.631869316101074
    6. '   ' → logprob: -4.756869316101074
    7. '),' → logprob: -4.881869316101074
    8. '):
' → logprob: -4.881869316101074
    9. '==' → logprob: -5.256869316101074
    10. '()' → logprob: -5.756869316101074

Token 355: ' %' (ID: 1851)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.3273675739765167
    2. 'if' → logprob: -2.3273675441741943
    3. ' field' → logprob: -2.3273675441741943
    4. ' if' → logprob: -2.7023675441741943
    5. ')' → logprob: -4.702367782592773
    6. ' )' → logprob: -5.452367782592773
    7. '   ' → logprob: -7.327367782592773
    8. '`' → logprob: -7.452367782592773
    9. ' ' → logprob: -7.702367782592773
    10. '```' → logprob: -7.827367782592773

Token 356: ' ' (ID: 220)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5120149850845337
    2. ')' → logprob: -1.3870149850845337
    3. '!=' → logprob: -3.012014865875244
    4. ' field' → logprob: -3.512014865875244
    5. ' ==' → logprob: -3.637014865875244
    6. ' )' → logprob: -4.387014865875244
    7. 'field' → logprob: -5.137014865875244
    8. '==' → logprob: -5.637014865875244
    9. ')!=' → logprob: -5.762014865875244
    10. '   ' → logprob: -5.887014865875244

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008489049971103668
    2. ' ' → logprob: -5.00848913192749
    3. '!=' → logprob: -6.75848913192749
    4. ')' → logprob: -8.133488655090332
    5. '1' → logprob: -8.508488655090332
    6. ' !=' → logprob: -9.633488655090332
    7. '==' → logprob: -10.633488655090332
    8. '```' → logprob: -11.758488655090332
    9. ')!=' → logprob: -11.883488655090332
    10. ' )' → logprob: -13.008488655090332

Token 358: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7794548273086548
    2. ' !=' → logprob: -0.7794548273086548
    3. '!=' → logprob: -2.7794547080993652
    4. ' ==' → logprob: -4.529454708099365
    5. '==' → logprob: -5.529454708099365
    6. '):' → logprob: -5.654454708099365
    7. ')!=' → logprob: -7.279454708099365
    8. '):
' → logprob: -7.654454708099365
    9. '   ' → logprob: -8.279455184936523
    10. '()' → logprob: -8.279455184936523

Token 359: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22554457187652588
    2. ' ' → logprob: -1.6005445718765259
    3. '1' → logprob: -8.975544929504395
    4. '=' → logprob: -12.850544929504395
    5. ' ' → logprob: -13.350544929504395
    6. ')' → logprob: -14.225544929504395
    7. '   ' → logprob: -15.100544929504395
    8. ' =' → logprob: -16.788043975830078
    9. ' )' → logprob: -17.038043975830078
    10. '  ' → logprob: -17.225543975830078

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019405345665290952
    2. ' ' → logprob: -6.251940727233887
    3. '1' → logprob: -11.376940727233887
    4. ')' → logprob: -15.251940727233887
    5. '=' → logprob: -16.37693977355957
    6. '```' → logprob: -17.25193977355957
    7. '   ' → logprob: -17.37693977355957
    8. '
' → logprob: -18.62693977355957
    9. '  ' → logprob: -19.25193977355957
    10. '

' → logprob: -19.25193977355957

Token 361: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4952125549316406
    2. '):' → logprob: -0.9952125549316406
    3. '       ' → logprob: -4.870212554931641
    4. '):
' → logprob: -4.995212554931641
    5. ')' → logprob: -5.745212554931641
    6. ':
' → logprob: -6.120212554931641
    7. ',' → logprob: -7.995212554931641
    8. '),' → logprob: -8.12021255493164
    9. '   ' → logprob: -8.24521255493164
    10. ' :' → logprob: -9.62021255493164

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034338808618485928
    2. ':' → logprob: -6.253433704376221
    3. ' if' → logprob: -7.253433704376221
    4. 'if' → logprob: -7.503433704376221
    5. '   ' → logprob: -9.128434181213379
    6. '           ' → logprob: -10.503434181213379
    7. ' :' → logprob: -10.503434181213379
    8. '        
' → logprob: -10.503434181213379
    9. ',' → logprob: -10.628434181213379
    10. ':
' → logprob: -11.503434181213379

Token 363: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45719459652900696
    2. ' if' → logprob: -1.0821945667266846
    3. 'if' (adapté à ' if') → logprob: -3.5821945667266846
    4. ':' → logprob: -8.582194328308105
    5. '   ' → logprob: -11.332194328308105
    6. '           ' → logprob: -11.332194328308105
    7. '        
' → logprob: -11.457194328308105
    8. ',' → logprob: -11.707194328308105
    9. ' :' → logprob: -12.207194328308105
    10. ' current' → logprob: -12.332194328308105

Token 364: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.5776399970054626
    2. ' field' → logprob: -0.8276399970054626
    3. '(field' → logprob: -6.452640056610107
    4. '   ' → logprob: -9.70263957977295
    5. ' (' → logprob: -10.07763957977295
    6. ' ' → logprob: -11.20263957977295
    7. '	field' → logprob: -13.07763957977295
    8. '(' → logprob: -13.45263957977295
    9. '$field' → logprob: -14.70263957977295
    10. '[field' → logprob: -14.82763957977295

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.749814019713085e-06
    2. '   ' → logprob: -12.250006675720215
    3. ' [' → logprob: -14.375006675720215
    4. '[n' → logprob: -14.625006675720215
    5. '       ' → logprob: -14.875006675720215
    6. '[i' → logprob: -15.750006675720215
    7. '[now' → logprob: -15.875006675720215
    8. '     ' → logprob: -16.00000762939453
    9. '```' → logprob: -16.75000762939453
    10. '    ' → logprob: -17.25000762939453

Token 366: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.0010338802821934223
    2. ' nh' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.001033782958984
    4. '0' → logprob: -16.626033782958984
    5. 'NH' → logprob: -16.626033782958984
    6. 'Nh' → logprob: -17.001033782958984
    7. 'ny' → logprob: -17.126033782958984
    8. ' ' → logprob: -17.376033782958984
    9. '[' → logprob: -17.876033782958984
    10. '
' → logprob: -18.001033782958984

Token 367: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000329386442899704
    2. '[n' → logprob: -8.62532901763916
    3. ']' → logprob: -9.62532901763916
    4. '[' → logprob: -10.12532901763916
    5. ' ][' → logprob: -10.25032901763916
    6. ']][' → logprob: -12.62532901763916
    7. '   ' → logprob: -13.00032901763916
    8. '][_' → logprob: -14.12532901763916
    9. '[now' → logprob: -14.62532901763916
    10. '"][' → logprob: -14.75032901763916

Token 368: 'nw' (ID: 85546)
  Prédit: 'nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -5.8961017202818766e-05
    2. ' nw' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.375059127807617
    4. '
' → logprob: -15.875059127807617
    5. 'n' → logprob: -16.000059127807617
    6. 'NW' → logprob: -17.250059127807617
    7. '[n' → logprob: -17.500059127807617
    8. ' ' → logprob: -17.500059127807617
    9. '(n' → logprob: -17.875059127807617
    10. '
' → logprob: -18.125059127807617

Token 369: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007788925431668758
    2. ']%' → logprob: -7.250778675079346
    3. ' ]' → logprob: -9.625779151916504
    4. '%' → logprob: -13.500779151916504
    5. ']
' → logprob: -14.625779151916504
    6. '   ' → logprob: -15.375779151916504
    7. ']!=' → logprob: -15.625779151916504
    8. ')' → logprob: -15.750779151916504
    9. '[' → logprob: -15.875779151916504
    10. ' %' → logprob: -16.875778198242188

Token 370: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.693202555179596
    2. ' %' → logprob: -0.693202555179596
    3. ' ' → logprob: -10.94320297241211
    4. '!=' → logprob: -11.44320297241211
    5. ' !=' → logprob: -11.81820297241211
    6. ')' → logprob: -12.06820297241211
    7. '   ' → logprob: -12.44320297241211
    8. ':' → logprob: -12.94320297241211
    9. ' ' → logprob: -13.31820297241211
    10. ' %
' → logprob: -13.69320297241211

Token 371: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31326422095298767
    2. ' ' → logprob: -1.31326425075531
    3. '   ' → logprob: -13.688263893127441
    4. '  ' → logprob: -14.813263893127441
    5. '```' → logprob: -14.813263893127441
    6. '=' → logprob: -15.688263893127441
    7. ' ' → logprob: -16.188264846801758
    8. '    ' → logprob: -16.563264846801758
    9. '<|end|>' → logprob: -16.563264846801758
    10. '==' → logprob: -16.938264846801758

Token 372: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.750017166137695
    4. '   ' → logprob: -18.625017166137695
    5. '1' → logprob: -20.375017166137695
    6. '`' → logprob: -21.000017166137695
    7. '  ' → logprob: -21.250017166137695
    8. '
' → logprob: -21.375017166137695
    9. '۲' → logprob: -21.562517166137695
    10. '``' → logprob: -21.750017166137695

Token 373: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25208547711372375
    2. ' !=' → logprob: -1.5020854473114014
    3. ':' → logprob: -9.50208568572998
    4. '==' → logprob: -10.25208568572998
    5. ')!=' → logprob: -10.37708568572998
    6. '()!=' → logprob: -12.37708568572998
    7. ' ==' → logprob: -12.75208568572998
    8. '1' → logprob: -13.37708568572998
    9. ')' → logprob: -13.50208568572998
    10. ']!=' → logprob: -13.75208568572998

Token 374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10022510588169098
    2. ' ' → logprob: -2.3502252101898193
    3. '1' → logprob: -10.975225448608398
    4. '=' → logprob: -13.975225448608398
    5. '   ' → logprob: -15.600225448608398
    6. '2' → logprob: -16.4127254486084
    7. '  ' → logprob: -16.5377254486084
    8. '
' → logprob: -17.2252254486084
    9. '```' → logprob: -17.2877254486084
    10. ' =' → logprob: -17.4127254486084

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004317420825827867
    2. ' ' → logprob: -7.750431537628174
    3. '1' → logprob: -14.500432014465332
    4. '2' → logprob: -15.000432014465332
    5. '   ' → logprob: -16.500431060791016
    6. '=' → logprob: -16.750431060791016
    7. '```' → logprob: -16.875431060791016
    8. '  ' → logprob: -18.875431060791016
    9. '
' → logprob: -19.437931060791016
    10. '==' → logprob: -19.500431060791016

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019895401783287525
    2. ':
' → logprob: -6.251989364624023
    3. ' and' → logprob: -10.751989364624023
    4. '       ' → logprob: -11.001989364624023
    5. '):' → logprob: -11.626989364624023
    6. '           ' → logprob: -12.001989364624023
    7. ' :' → logprob: -12.751989364624023
    8. ',' → logprob: -13.376989364624023
    9. ':

' → logprob: -14.251989364624023
    10. '):
' → logprob: -14.376989364624023

Token 377: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40803948044776917
    2. '           ' → logprob: -1.1580394506454468
    3. '        
' → logprob: -4.908039569854736
    4. ':' → logprob: -5.283039569854736
    5. ' have' → logprob: -6.158039569854736
    6. 'have' → logprob: -7.033039569854736
    7. '            
' → logprob: -7.158039569854736
    8. ' if' → logprob: -7.158039569854736
    9. '
' → logprob: -7.408039569854736
    10. ' and' → logprob: -7.783039569854736

Token 378: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16466929018497467
    2. ' if' → logprob: -2.1646692752838135
    3. ' have' → logprob: -4.039669513702393
    4. 'have' → logprob: -4.664669513702393
    5. '               ' → logprob: -5.289669513702393
    6. 'if' → logprob: -5.414669513702393
    7. ' has' → logprob: -8.789669036865234
    8. '            
' → logprob: -9.289669036865234
    9. '       ' → logprob: -9.289669036865234
    10. '
' → logprob: -9.664669036865234

Token 379: ' Si' (ID: 7832)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.13007666170597076
    2. 'if' → logprob: -2.6300766468048096
    3. '           ' → logprob: -3.5050766468048096
    4. ' have' → logprob: -4.380076885223389
    5. ' if' → logprob: -5.005076885223389
    6. '               ' → logprob: -7.755076885223389
    7. '   ' → logprob: -9.50507640838623
    8. '       ' → logprob: -10.38007640838623
    9. 'has' → logprob: -10.50507640838623
    10. '
' → logprob: -11.25507640838623

Token 380: ' on' (ID: 402)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.392304927110672
    2. 'have' → logprob: -1.1423048973083496
    3. ' not' → logprob: -5.26730489730835
    4. 'not' → logprob: -8.392305374145508
    5. ' ' → logprob: -11.017305374145508
    6. '   ' → logprob: -11.767305374145508
    7. '           ' → logprob: -13.017305374145508
    8. ' field' → logprob: -13.267305374145508
    9. '_have' → logprob: -13.892305374145508
    10. ' ' → logprob: -14.017305374145508

Token 381: ' avait' (ID: 18892)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5239229798316956
    2. 'have' → logprob: -0.8989229798316956
    3. '           ' → logprob: -7.523922920227051
    4. ' not' → logprob: -9.52392292022705
    5. '_have' → logprob: -10.64892292022705
    6. 'already' → logprob: -10.64892292022705
    7. ' already' → logprob: -11.02392292022705
    8. ' n' → logprob: -11.52392292022705
    9. '   ' → logprob: -11.64892292022705
    10. ' has' → logprob: -11.64892292022705

Token 382: ' déjà' (ID: 21229)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.1458905190229416
    2. ' have' → logprob: -2.020890474319458
    3. ' pas' → logprob: -6.770890712738037
    4. 'pas' → logprob: -7.395890712738037
    5. 'un' → logprob: -7.895890712738037
    6. 'already' → logprob: -8.395890235900879
    7. ' déjà' → logprob: -8.895890235900879
    8. 'not' → logprob: -9.020890235900879
    9. ' not' → logprob: -9.020890235900879
    10. ' already' → logprob: -9.270890235900879

Token 383: ' un' (ID: 537)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.017441803589463234
    2. ' have' → logprob: -4.142441749572754
    3. 'une' → logprob: -7.517441749572754
    4. 'un' → logprob: -7.517441749572754
    5. 'a' → logprob: -8.517441749572754
    6. ' une' → logprob: -10.642441749572754
    7. ' a' → logprob: -10.642441749572754
    8. 'avoir' → logprob: -11.017441749572754
    9. ' un' → logprob: -11.392441749572754
    10. 'coin' → logprob: -11.517441749572754

Token 384: ' "' (ID: 392)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.07461786270141602
    2. 'coin' → logprob: -3.199617862701416
    3. ' have' → logprob: -3.574617862701416
    4. 'piece' → logprob: -6.824617862701416
    5. 'Coin' → logprob: -6.949617862701416
    6. 'pi' → logprob: -8.574617385864258
    7. 'avoir' → logprob: -8.574617385864258
    8. ' coin' → logprob: -8.824617385864258
    9. 'co' → logprob: -8.949617385864258
    10. 'jet' → logprob: -9.949617385864258

Token 385: 'coin' (ID: 10126)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.015303132124245167
    2. ' have' → logprob: -4.890303134918213
    3. 'coin' → logprob: -4.890303134918213
    4. 'Coin' → logprob: -9.390302658081055
    5. ' coin' → logprob: -10.640302658081055
    6. 'piece' → logprob: -11.140302658081055
    7. ' ' → logprob: -11.890302658081055
    8. 'co' → logprob: -12.765302658081055
    9. '   ' → logprob: -13.140302658081055
    10. '```' → logprob: -13.265302658081055

Token 386: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.2432317733764648
    2. ' have' → logprob: -1.2432317733764648
    3. 's' → logprob: -1.9932317733764648
    4. 'have' → logprob: -3.368231773376465
    5. '":' → logprob: -3.493231773376465
    6. ' s' → logprob: -3.618231773376465
    7. 'Coin' → logprob: -3.868231773376465
    8. '_have' → logprob: -3.993231773376465
    9. '):
' → logprob: -4.118231773376465
    10. ' ' → logprob: -4.368231773376465

Token 387: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6236435770988464
    2. 'have' → logprob: -1.6236436367034912
    3. ',' → logprob: -1.9986436367034912
    4. ':
' → logprob: -2.748643636703491
    5. ' à' → logprob: -4.248643398284912
    6. ' have' → logprob: -4.248643398284912
    7. 'à' → logprob: -4.623643398284912
    8. '   ' → logprob: -5.623643398284912
    9. ' here' → logprob: -5.623643398284912
    10. '           ' → logprob: -5.623643398284912

Token 388: ' mouvement' (ID: 62236)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.1131055355072021
    2. 'pi' → logprob: -1.6131055355072021
    3. 'piece' → logprob: -2.113105535507202
    4. 'if' → logprob: -2.238105535507202
    5. 'coin' → logprob: -2.613105535507202
    6. '```' → logprob: -3.738105535507202
    7. ' have' → logprob: -3.863105535507202
    8. 'previous' → logprob: -4.113105773925781
    9. ' if' → logprob: -4.488105773925781
    10. 'bool' → logprob: -5.363105773925781

Token 389: ' précédent' (ID: 128462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6175217628479004
    2. '           ' → logprob: -2.4925217628479004
    3. ':' → logprob: -2.9925217628479004
    4. ' précédent' → logprob: -2.9925217628479004
    5. '   ' → logprob: -3.1175217628479004
    6. ' à' → logprob: -3.2425217628479004
    7. '       ' → logprob: -3.4925217628479004
    8. 'have' → logprob: -3.7425217628479004
    9. 'poss' → logprob: -3.8675217628479004
    10. ' (' → logprob: -4.1175217628479

Token 390: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9214045405387878
    2. ':
' → logprob: -1.2964046001434326
    3. '           ' → logprob: -2.0464046001434326
    4. ',' → logprob: -2.2964046001434326
    5. '               ' → logprob: -2.5464046001434326
    6. ' and' → logprob: -5.2964043617248535
    7. 'have' → logprob: -5.4214043617248535
    8. '       ' → logprob: -6.4214043617248535
    9. ' have' → logprob: -6.4214043617248535
    10. ' if' → logprob: -6.5464043617248535

Token 391: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5511072278022766
    2. '           ' → logprob: -1.1761071681976318
    3. '               ' → logprob: -3.051107168197632
    4. ' have' → logprob: -3.426107168197632
    5. 'if' → logprob: -3.676107168197632
    6. 'have' → logprob: -4.926107406616211
    7. '       ' → logprob: -6.676107406616211
    8. '#' → logprob: -7.176107406616211
    9. '   ' → logprob: -8.926107406616211
    10. ' #' → logprob: -9.176107406616211

Token 392: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.521735668182373
    2. ' continue' → logprob: -2.271735668182373
    3. '#' → logprob: -2.771735668182373
    4. ' if' → logprob: -2.896735668182373
    5. '               ' → logprob: -3.021735668182373
    6. 'if' → logprob: -3.396735668182373
    7. ' #' → logprob: -4.021735668182373
    8. 'continue' → logprob: -4.396735668182373
    9. 'dé' → logprob: -4.521735668182373
    10. ' dé' → logprob: -4.646735668182373

Token 393: ''en' (ID: 16740)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1757158041000366
    2. '           ' → logprob: -1.4257158041000366
    3. ' continue' → logprob: -1.5507158041000366
    4. '#' → logprob: -2.800715923309326
    5. 'e' → logprob: -3.425715923309326
    6. '   ' → logprob: -4.425715923309326
    7. 'continue' → logprob: -4.425715923309326
    8. '         ' → logprob: -4.550715923309326
    9. 'n' → logprob: -4.675715923309326
    10. 'aj' → logprob: -5.050715923309326

Token 394: 'l' (ID: 75)
  Prédit: 'lever'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.7659934163093567
    2. 'voie' → logprob: -1.640993356704712
    3. 'registrer' → logprob: -2.140993356704712
    4. 't' → logprob: -2.890993356704712
    5. 'l' → logprob: -3.390993356704712
    6. 'd' → logprob: -3.515993356704712
    7. 'v' → logprob: -3.765993356704712
    8. 'voi' → logprob: -4.390993595123291
    9. 'vo' → logprob: -4.515993595123291
    10. 'registre' → logprob: -4.640993595123291

Token 395: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.94889897108078
    2. 've' → logprob: -1.3238990306854248
    3. 'v' → logprob: -1.6988990306854248
    4. 'ver' → logprob: -2.823899030685425
    5. 'lever' → logprob: -2.948899030685425
    6. 'e' → logprob: -3.823899030685425
    7. 'er' → logprob: -4.698898792266846
    8. 'le' → logprob: -5.323898792266846
    9. 'vez' → logprob: -5.948898792266846
    10. 'ove' → logprob: -6.198898792266846

Token 396: ' puisque' (ID: 66135)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6795514225959778
    2. '               ' → logprob: -1.304551362991333
    3. ':' → logprob: -2.304551362991333
    4. ':
' → logprob: -2.804551362991333
    5. ',' → logprob: -3.304551362991333
    6. ' and' → logprob: -4.429551601409912
    7. ' (' → logprob: -5.554551601409912
    8. '       ' → logprob: -6.054551601409912
    9. ',
' → logprob: -6.929551601409912
    10. ' :' → logprob: -7.179551601409912

Token 397: ' deux' (ID: 10301)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.11297639459371567
    2. 'have' → logprob: -2.737976312637329
    3. ' not' → logprob: -3.362976312637329
    4. ' field' → logprob: -5.862976551055908
    5. '           ' → logprob: -6.362976551055908
    6. 'not' → logprob: -6.612976551055908
    7. 'field' → logprob: -7.987976551055908
    8. '       ' → logprob: -8.48797607421875
    9. '   ' → logprob: -8.98797607421875
    10. ' ' → logprob: -8.98797607421875

Token 398: ' imp' (ID: 3282)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.2528200149536133
    2. ' coins' → logprob: -1.3778200149536133
    3. ' cases' → logprob: -2.1278200149536133
    4. 'positions' → logprob: -2.6278200149536133
    5. 'coins' → logprob: -2.7528200149536133
    6. ' espaces' → logprob: -3.2528200149536133
    7. 'have' → logprob: -3.6278200149536133
    8. ' have' → logprob: -3.7528200149536133
    9. ' positions' → logprob: -4.002820014953613
    10. 'case' → logprob: -4.502820014953613

Token 399: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.41810721158981323
    2. 'ar' → logprob: -1.793107271194458
    3. 'air' → logprob: -2.418107271194458
    4. 'ares' → logprob: -3.043107271194458
    5. 'aires' → logprob: -3.918107271194458
    6. 'aire' → logprob: -5.043107032775879
    7. 'orts' → logprob: -6.543107032775879
    8. 'pairs' → logprob: -6.668107032775879
    9. 'are' → logprob: -6.793107032775879
    10. '   ' → logprob: -6.918107032775879

Token 400: ' success' (ID: 3505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1998703479766846
    2. ' s' → logprob: -1.1998703479766846
    3. ' ne' → logprob: -3.0748703479766846
    4. ' se' → logprob: -3.1998703479766846
    5. 'ont' → logprob: -3.5748703479766846
    6. 'n' → logprob: -3.9498703479766846
    7. ' =' → logprob: -3.9498703479766846
    8. '   ' → logprob: -4.1998701095581055
    9. ' cons' → logprob: -4.3248701095581055
    10. '       ' → logprob: -4.3248701095581055

Token 401: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.04023398458957672
    2. 'if' → logprob: -3.790234088897705
    3. 's' → logprob: -4.665234088897705
    4. 'ent' → logprob: -6.415234088897705
    5. 'ives' → logprob: -6.665234088897705
    6. '#' → logprob: -6.790234088897705
    7. 'ive' → logprob: -7.040234088897705
    8. 'i' → logprob: -7.915234088897705
    9. 'e' → logprob: -8.040233612060547
    10. 'ivent' → logprob: -8.290233612060547

Token 402: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5076985955238342
    2. '               ' → logprob: -1.2576985359191895
    3. 'ont' → logprob: -3.1326985359191895
    4. 's' → logprob: -4.3826985359191895
    5. ' s' → logprob: -4.5076985359191895
    6. ' ont' → logprob: -5.1326985359191895
    7. 'for' → logprob: -5.6326985359191895
    8. ' for' → logprob: -5.8826985359191895
    9. ' vont' → logprob: -5.8826985359191895
    10. ' peuvent' → logprob: -5.8826985359191895

Token 403: ''ann' (ID: 75915)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6428333520889282
    2. 'e' → logprob: -1.2678333520889282
    3. ''ann' → logprob: -1.7678333520889282
    4. ''acc' → logprob: -4.892833232879639
    5. ''' → logprob: -6.017833232879639
    6. '’ann' → logprob: -6.142833232879639
    7. ''emp' → logprob: -6.142833232879639
    8. ''ont' → logprob: -6.892833232879639
    9. ''aj' → logprob: -6.892833232879639
    10. ''op' → logprob: -7.017833232879639

Token 404: 'ulent' (ID: 36327)
  Prédit: 'ulent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulent' → logprob: -0.25642040371894836
    2. 'ul' → logprob: -1.506420373916626
    3. 'ull' → logprob: -6.756420612335205
    4. 'ilent' → logprob: -7.006420612335205
    5. ' ul' → logprob: -8.131420135498047
    6. '<ul' → logprob: -8.256420135498047
    7. 'uler' → logprob: -8.381420135498047
    8. '\' → logprob: -8.506420135498047
    9. 'u' → logprob: -8.756420135498047
    10. 'nent' → logprob: -9.131420135498047

Token 405: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05505627766251564
    2. '               ' → logprob: -3.05505633354187
    3. ',' → logprob: -5.805056095123291
    4. ' (' → logprob: -6.680056095123291
    5. ':' → logprob: -6.805056095123291
    6. '            
' → logprob: -8.43005657196045
    7. '.' → logprob: -8.80505657196045
    8. ' if' → logprob: -8.93005657196045
    9. '       ' → logprob: -8.93005657196045
    10. ':
' → logprob: -9.18005657196045

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15703262388706207
    2. '               ' → logprob: -2.6570327281951904
    3. ' if' → logprob: -2.7820327281951904
    4. ' have' → logprob: -4.657032489776611
    5. '       ' → logprob: -6.282032489776611
    6. 'if' → logprob: -7.282032489776611
    7. 'have' → logprob: -7.532032489776611
    8. ',' → logprob: -8.65703296661377
    9. '            
' → logprob: -8.78203296661377
    10. ' continue' → logprob: -9.65703296661377

Token 407: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2998773753643036
    2. '           ' → logprob: -1.799877405166626
    3. ' have' → logprob: -3.049877405166626
    4. 'if' (adapté à ' if') → logprob: -3.674877405166626
    5. '               ' → logprob: -4.299877166748047
    6. 'have' → logprob: -5.049877166748047
    7. '       ' → logprob: -7.549877166748047
    8. ' continue' → logprob: -8.424877166748047
    9. '   ' → logprob: -9.174877166748047
    10. '                   ' → logprob: -10.424877166748047

Token 408: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.42888343334198
    2. 'have' → logprob: -1.05388343334198
    3. ' not' → logprob: -9.05388355255127
    4. '           ' → logprob: -10.67888355255127
    5. '   ' → logprob: -10.92888355255127
    6. 'not' → logprob: -11.55388355255127
    7. ' ' → logprob: -12.05388355255127
    8. '_have' → logprob: -13.05388355255127
    9. '.have' → logprob: -13.92888355255127
    10. '-have' → logprob: -14.17888355255127

Token 409: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -2.816093228830141e-06
    2. '_coin' → logprob: -14.00000286102295
    3. ' Coin' → logprob: -14.50000286102295
    4. '_C' → logprob: -15.00000286102295
    5. 'Coins' → logprob: -15.25000286102295
    6. 'C' → logprob: -15.62500286102295
    7. 'coin' → logprob: -16.000001907348633
    8. '   ' → logprob: -16.250001907348633
    9. ')' → logprob: -16.500001907348633
    10. 'С' → logprob: -16.750001907348633

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009214204736053944
    2. '==' → logprob: -5.509214401245117
    3. ':
' → logprob: -6.009214401245117
    4. ' ==' → logprob: -6.259214401245117
    5. ' :' → logprob: -7.759214401245117
    6. '=' → logprob: -8.634214401245117
    7. ' =' → logprob: -9.509214401245117
    8. '):' → logprob: -10.759214401245117
    9. '=True' → logprob: -11.759214401245117
    10. '=False' → logprob: -11.759214401245117

Token 411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017249188385903835
    2. ' have' → logprob: -8.126725196838379
    3. '           ' → logprob: -8.126725196838379
    4. '                
' → logprob: -8.126725196838379
    5. ',' → logprob: -8.376725196838379
    6. '
' → logprob: -8.501725196838379
    7. ':
' → logprob: -8.626725196838379
    8. '):
' → logprob: -10.501725196838379
    9. 'have' → logprob: -10.751725196838379
    10. ' =' → logprob: -10.876725196838379

Token 412: ' have' (ID: 679)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2697375416755676
    2. '                   ' → logprob: -2.269737482070923
    3. '               ' → logprob: -2.394737482070923
    4. 'ans' → logprob: -3.269737482070923
    5. ' have' → logprob: -6.644737720489502
    6. '           ' → logprob: -6.644737720489502
    7. '(ans' → logprob: -8.644737243652344
    8. ',' → logprob: -8.769737243652344
    9. 'have' (adapté à ' have') → logprob: -8.894737243652344
    10. '                       ' → logprob: -9.394737243652344

Token 413: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -1.5048530030981055e-06
    2. ' =' → logprob: -15.125001907348633
    3. '=' → logprob: -15.250001907348633
    4. '_C' → logprob: -15.250001907348633
    5. 'Coins' → logprob: -15.375001907348633
    6. ' Coin' → logprob: -16.125001907348633
    7. '_coin' → logprob: -16.125001907348633
    8. 'C' → logprob: -16.375001907348633
    9. 'coin' → logprob: -16.375001907348633
    10. '   ' → logprob: -17.500001907348633

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17994539439678192
    2. '=' → logprob: -1.8049453496932983
    3. '=False' → logprob: -8.55494499206543
    4. '=True' → logprob: -13.30494499206543
    5. ')' → logprob: -13.55494499206543
    6. '               ' → logprob: -14.17994499206543
    7. '[' → logprob: -14.30494499206543
    8. ']' → logprob: -14.42994499206543
    9. '                   ' → logprob: -14.55494499206543
    10. 'False' → logprob: -14.55494499206543

Token 415: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.7159857786027715e-05
    2. ' False' → logprob: -10.000046730041504
    3. 'True' → logprob: -13.375046730041504
    4. 'not' → logprob: -15.625046730041504
    5. '   ' → logprob: -18.50004768371582
    6. '(False' → logprob: -19.62504768371582
    7. ' not' → logprob: -20.75004768371582
    8. '0' → logprob: -21.25004768371582
    9. '=False' → logprob: -21.87504768371582
    10. 'false' → logprob: -22.12504768371582

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6359971165657043
    2. '               ' → logprob: -0.7609971165657043
    3. '
' → logprob: -6.010997295379639
    4. 'else' → logprob: -8.01099681854248
    5. '                
' → logprob: -8.26099681854248
    6. '            
' → logprob: -9.13599681854248
    7. ',' → logprob: -9.38599681854248
    8. ' else' → logprob: -9.51099681854248
    9. ',
' → logprob: -11.01099681854248
    10. '       ' → logprob: -11.13599681854248

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017027945723384619
    2. '               ' → logprob: -6.501702785491943
    3. 'else' → logprob: -9.001703262329102
    4. '            
' → logprob: -10.126703262329102
    5. ' else' → logprob: -11.251703262329102
    6. '                
' → logprob: -11.376703262329102
    7. '       ' → logprob: -12.251703262329102
    8. ',' → logprob: -13.376703262329102
    9. '    
' → logprob: -13.376703262329102
    10. '
' → logprob: -13.626703262329102

Token 418: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05952991545200348
    2. 'else' (adapté à ' else') → logprob: -2.934530019760132
    3. ' else' → logprob: -5.434529781341553
    4. '       ' → logprob: -8.434530258178711
    5. '               ' → logprob: -10.059530258178711
    6. '
' → logprob: -12.434530258178711
    7. ':
' → logprob: -12.934530258178711
    8. '            
' → logprob: -12.934530258178711
    9. ',' → logprob: -14.184530258178711
    10. ':' → logprob: -14.934530258178711

Token 419: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16161148250102997
    2. '               ' → logprob: -2.161611557006836
    3. ':' → logprob: -3.411611557006836
    4. ' :
' → logprob: -7.411611557006836
    5. '           ' → logprob: -7.911611557006836
    6. ' :' → logprob: -10.536611557006836
    7. '       ' → logprob: -10.786611557006836
    8. ':
' → logprob: -10.911611557006836
    9. ':

' → logprob: -11.161611557006836
    10. '):
' → logprob: -11.536611557006836

Token 420: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006533435662277043
    2. '           ' → logprob: -8.125653266906738
    3. ' have' → logprob: -8.500653266906738
    4. 'have' → logprob: -9.000653266906738
    5. '       ' → logprob: -11.500653266906738
    6. '                   ' → logprob: -12.125653266906738
    7. ' has' → logprob: -12.250653266906738
    8. '   ' → logprob: -12.625653266906738
    9. '                
' → logprob: -13.625653266906738
    10. '              ' → logprob: -14.000653266906738

Token 421: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33118394017219543
    2. ' have' → logprob: -1.581183910369873
    3. 'have' → logprob: -2.581183910369873
    4. '           ' → logprob: -7.831183910369873
    5. '                   ' → logprob: -9.956184387207031
    6. ' has' → logprob: -10.081184387207031
    7. 'has' → logprob: -11.706184387207031
    8. '   ' → logprob: -11.831184387207031
    9. '       ' → logprob: -12.956184387207031
    10. '_have' → logprob: -13.081184387207031

Token 422: ' Sinon' (ID: 154924)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.22778363525867462
    2. ' have' → logprob: -2.227783679962158
    3. '               ' → logprob: -2.352783679962158
    4. '           ' → logprob: -7.227783679962158
    5. '                   ' → logprob: -9.977783203125
    6. 'has' → logprob: -10.852783203125
    7. '   ' → logprob: -11.352783203125
    8. ' has' → logprob: -12.102783203125
    9. '       ' → logprob: -12.352783203125
    10. ' ' → logprob: -12.477783203125

Token 423: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7082815170288086
    2. 'have' → logprob: -1.2082815170288086
    3. ' have' → logprob: -1.5832815170288086
    4. '                   ' → logprob: -6.333281517028809
    5. '           ' → logprob: -6.583281517028809
    6. '   ' → logprob: -8.958281517028809
    7. ' has' → logprob: -9.583281517028809
    8. '
' → logprob: -10.208281517028809
    9. 'has' → logprob: -10.583281517028809
    10. '_have' → logprob: -11.083281517028809

Token 424: ' on' (ID: 402)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.25261807441711426
    2. 'have' → logprob: -1.7526180744171143
    3. '               ' → logprob: -3.0026180744171143
    4. '           ' → logprob: -8.627617835998535
    5. '                   ' → logprob: -10.127617835998535
    6. '   ' → logprob: -11.752617835998535
    7. ' has' → logprob: -12.002617835998535
    8. '_have' → logprob: -12.002617835998535
    9. ' ' → logprob: -12.377617835998535
    10. '                ' → logprob: -12.502617835998535

Token 425: ' doit' (ID: 21822)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.09341052174568176
    2. ' have' → logprob: -2.5934104919433594
    3. '           ' → logprob: -4.968410491943359
    4. 'continue' → logprob: -5.843410491943359
    5. ' continue' → logprob: -6.218410491943359
    6. '               ' → logprob: -6.468410491943359
    7. '       ' → logprob: -7.468410491943359
    8. 'aj' → logprob: -8.84341049194336
    9. 'avoir' → logprob: -10.46841049194336
    10. '_have' → logprob: -10.46841049194336

Token 426: ' transporter' (ID: 107554)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5473749041557312
    2. 'have' → logprob: -1.297374963760376
    3. '               ' → logprob: -2.422374963760376
    4. '           ' → logprob: -3.297374963760376
    5. '   ' → logprob: -4.797374725341797
    6. '       ' → logprob: -5.422374725341797
    7. 'avoir' → logprob: -6.172374725341797
    8. ' continue' → logprob: -6.922374725341797
    9. ' avoir' → logprob: -7.047374725341797
    10. ' set' → logprob: -7.297374725341797

Token 427: ' un' (ID: 537)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5761725306510925
    2. 'have' → logprob: -0.8261725306510925
    3. 'le' → logprob: -8.826172828674316
    4. ' le' → logprob: -10.076172828674316
    5. ' the' → logprob: -11.701172828674316
    6. ' ' → logprob: -11.951172828674316
    7. 'un' → logprob: -12.076172828674316
    8. ' un' → logprob: -12.326172828674316
    9. 'the' → logprob: -12.701172828674316
    10. ' a' → logprob: -12.951172828674316

Token 428: ' "' (ID: 392)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.08833280205726624
    2. 'piece' → logprob: -3.3383328914642334
    3. 'have' → logprob: -3.7133328914642334
    4. ' coin' → logprob: -4.588332653045654
    5. ' have' → logprob: -4.838332653045654
    6. 'Coin' → logprob: -6.088332653045654
    7. '1' → logprob: -6.713332653045654
    8. 'pi' → logprob: -7.213332653045654
    9. ' ' → logprob: -7.713332653045654
    10. 'co' → logprob: -8.213333129882812

Token 429: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.09316196292638779
    2. ' coin' → logprob: -2.4681620597839355
    3. 'piece' → logprob: -6.7181620597839355
    4. 'pi' → logprob: -7.3431620597839355
    5. 'Coin' → logprob: -7.4681620597839355
    6. 'jet' → logprob: -7.5931620597839355
    7. ' jet' → logprob: -8.093161582946777
    8. ' ' → logprob: -8.343161582946777
    9. '_coin' → logprob: -8.343161582946777
    10. 'co' → logprob: -9.093161582946777

Token 430: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6536004543304443
    2. ' de' → logprob: -1.7786004543304443
    3. '"' → logprob: -2.0286004543304443
    4. ' (' → logprob: -3.4036004543304443
    5. ' depuis' → logprob: -3.9036004543304443
    6. ' from' → logprob: -4.028600692749023
    7. 'from' → logprob: -4.153600692749023
    8. ' ")' → logprob: -4.403600692749023
    9. ' )' → logprob: -4.778600692749023
    10. '               ' → logprob: -4.903600692749023

Token 431: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004770326428115368
    2. ' =' → logprob: -6.004770278930664
    3. '           ' → logprob: -6.754770278930664
    4. '       ' → logprob: -8.004770278930664
    5. ' have' → logprob: -8.129770278930664
    6. 'have' → logprob: -8.129770278930664
    7. ',' → logprob: -9.629770278930664
    8. '=' → logprob: -10.004770278930664
    9. '                   ' → logprob: -10.629770278930664
    10. ' to' → logprob: -10.754770278930664

Token 432: ' la' (ID: 557)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.08914317190647125
    2. ' True' → logprob: -2.4641432762145996
    3. 'la' → logprob: -9.339142799377441
    4. '   ' → logprob: -10.089142799377441
    5. '(True' → logprob: -10.839142799377441
    6. 'l' → logprob: -11.214142799377441
    7. ' la' → logprob: -11.339142799377441
    8. 'False' → logprob: -12.714142799377441
    9. '       ' → logprob: -12.714142799377441
    10. '           ' → logprob: -12.964142799377441

Token 433: ' case' (ID: 1890)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4328191578388214
    2. 'True' → logprob: -1.057819128036499
    3. ' next' → logprob: -7.057819366455078
    4. 'next' → logprob: -7.182819366455078
    5. ' case' → logprob: -7.307819366455078
    6. 'case' → logprob: -8.057819366455078
    7. 'have' → logprob: -8.307819366455078
    8. ' have' → logprob: -8.682819366455078
    9. '   ' → logprob: -9.307819366455078
    10. ' ' → logprob: -9.307819366455078

Token 434: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.09504026919603348
    2. 'su' → logprob: -3.0950403213500977
    3. 'vo' → logprob: -3.5950403213500977
    4. '   ' → logprob: -4.720040321350098
    5. ' actuelle' → logprob: -6.220040321350098
    6. 'cour' → logprob: -6.720040321350098
    7. ' vo' → logprob: -7.095040321350098
    8. 'adj' → logprob: -7.095040321350098
    9. '    ' → logprob: -7.220040321350098
    10. 'act' → logprob: -7.470040321350098

Token 435: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09912344813346863
    2. '           ' → logprob: -3.724123477935791
    3. '
' → logprob: -3.974123477935791
    4. ' have' → logprob: -4.099123477935791
    5. 'have' → logprob: -4.724123477935791
    6. ',' → logprob: -4.849123477935791
    7. '                
' → logprob: -4.849123477935791
    8. ' if' → logprob: -5.974123477935791
    9. ':
' → logprob: -6.349123477935791
    10. '            
' → logprob: -6.599123477935791

Token 436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05136280134320259
    2. '           ' → logprob: -3.4263627529144287
    3. ' have' → logprob: -4.176362991333008
    4. 'have' → logprob: -6.176362991333008
    5. '                   ' → logprob: -10.176362991333008
    6. '       ' → logprob: -10.176362991333008
    7. ' has' → logprob: -11.676362991333008
    8. '              ' → logprob: -11.676362991333008
    9. ',' → logprob: -11.801362991333008
    10. '
' → logprob: -12.176362991333008

Token 437: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' (adapté à ' have') → logprob: -0.15706685185432434
    2. ' have' → logprob: -2.282066822052002
    3. '               ' → logprob: -3.157066822052002
    4. '           ' → logprob: -7.532066822052002
    5. '                   ' → logprob: -9.28206729888916
    6. '   ' → logprob: -10.40706729888916
    7. 'has' → logprob: -11.03206729888916
    8. 'field' → logprob: -11.15706729888916
    9. '       ' → logprob: -12.15706729888916
    10. ' ' → logprob: -12.28206729888916

Token 438: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -2.45848218582978e-06
    2. ' Coin' → logprob: -14.12500286102295
    3. 'Coins' → logprob: -14.87500286102295
    4. ' =' → logprob: -15.00000286102295
    5. '_C' → logprob: -15.00000286102295
    6. '_coin' → logprob: -15.12500286102295
    7. '=' → logprob: -15.25000286102295
    8. 'coin' → logprob: -16.250001907348633
    9. 'C' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.500001907348633

Token 439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408562898635864
    2. ' =' → logprob: -0.9740856289863586
    3. '=True' → logprob: -11.724085807800293
    4. '   ' → logprob: -15.349085807800293
    5. ' ' → logprob: -16.349084854125977
    6. 'True' → logprob: -17.099084854125977
    7. '    ' → logprob: -17.849084854125977
    8. '           ' → logprob: -17.849084854125977
    9. '[' → logprob: -17.849084854125977
    10. '＝' → logprob: -17.974084854125977

Token 440: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.7500057220459
    4. 'true' → logprob: -19.6250057220459
    5. '(True' → logprob: -19.7500057220459
    6. '=True' → logprob: -20.5000057220459
    7. 'not' → logprob: -20.5000057220459
    8. '1' → logprob: -21.1250057220459
    9. 'False' → logprob: -21.6250057220459
    10. '  ' → logprob: -22.5000057220459

Token 441: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7727099657058716
    2. '       ' → logprob: -1.0227099657058716
    3. '        
' → logprob: -2.022709846496582
    4. '           ' → logprob: -4.147709846496582
    5. '            
' → logprob: -4.272709846496582
    6. '               ' → logprob: -5.022709846496582
    7. ',' → logprob: -6.272709846496582
    8. '    
' → logprob: -6.397709846496582
    9. '                
' → logprob: -6.397709846496582
    10. '<|end|>' → logprob: -6.397709846496582

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06121771037578583
    2. '        
' → logprob: -3.311217784881592
    3. '
' → logprob: -3.811217784881592
    4. '    
' → logprob: -8.561217308044434
    5. '  
' → logprob: -8.936217308044434
    6. ' 
' → logprob: -9.061217308044434
    7. '
        
' → logprob: -9.686217308044434
    8. '       
' → logprob: -10.061217308044434
    9. '        
        
' → logprob: -10.436217308044434
    10. '            
' → logprob: -10.686217308044434

Token 443: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021654952317476273
    2. 'if' → logprob: -4.146655082702637
    3. '        
' → logprob: -6.021655082702637
    4. ' if' → logprob: -6.271655082702637
    5. '#' (adapté à ' #') → logprob: -7.521655082702637
    6. 'next' → logprob: -7.896655082702637
    7. '```' → logprob: -9.271655082702637
    8. '
' → logprob: -9.271655082702637
    9. '           ' → logprob: -10.271655082702637
    10. ' next' → logprob: -10.271655082702637

Token 444: ' frm' (ID: 45032)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01480982918292284
    2. '#' → logprob: -4.639809608459473
    3. 'next' → logprob: -5.389809608459473
    4. '       ' → logprob: -7.889809608459473
    5. ' if' → logprob: -9.389809608459473
    6. 'prev' → logprob: -12.139809608459473
    7. 'If' → logprob: -12.764809608459473
    8. 'current' → logprob: -13.264809608459473
    9. 'Next' → logprob: -13.639809608459473
    10. '   ' → logprob: -13.764809608459473

Token 445: ' représente' (ID: 88912)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.46998918056488037
    2. ' =' → logprob: -1.0949891805648804
    3. ',' → logprob: -3.34498929977417
    4. '=' → logprob: -5.34498929977417
    5. '_row' → logprob: -9.344988822937012
    6. '   ' → logprob: -9.594988822937012
    7. 'w' → logprob: -10.219988822937012
    8. ' ,' → logprob: -10.219988822937012
    9. '_' → logprob: -10.344988822937012
    10. '[' → logprob: -10.344988822937012

Token 446: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33428311347961426
    2. ' nh' → logprob: -1.8342831134796143
    3. ' [' → logprob: -2.2092831134796143
    4. 'nh' → logprob: -4.959282875061035
    5. '[n' → logprob: -5.584282875061035
    6. ' (' → logprob: -5.834282875061035
    7. '(' → logprob: -8.709282875061035
    8. '[
' → logprob: -8.834282875061035
    9. '(n' → logprob: -8.959282875061035
    10. ' =' → logprob: -9.334282875061035

Token 447: ' position' (ID: 4010)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01503178384155035
    2. '[n' → logprob: -4.890031814575195
    3. ' [' → logprob: -5.390031814575195
    4. 'nh' → logprob: -6.390031814575195
    5. '[
' → logprob: -7.765031814575195
    6. '(n' → logprob: -7.890031814575195
    7. ' nh' → logprob: -8.640031814575195
    8. ' (' → logprob: -9.515031814575195
    9. '(' → logprob: -9.890031814575195
    10. '       ' → logprob: -11.515031814575195

Token 448: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3164629638195038
    2. '=' → logprob: -1.3164629936218262
    3. '[' → logprob: -6.066462993621826
    4. '       ' → logprob: -8.191462516784668
    5. '_' → logprob: -8.691462516784668
    6. '   ' → logprob: -8.941462516784668
    7. '=[' → logprob: -9.191462516784668
    8. 's' → logprob: -9.941462516784668
    9. '_n' → logprob: -10.566462516784668
    10. ',' → logprob: -10.691462516784668

Token 449: ' départ' (ID: 32693)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13823550939559937
    2. 'nh' → logprob: -2.638235569000244
    3. ' nh' → logprob: -4.138235569000244
    4. '(n' → logprob: -4.388235569000244
    5. ' (' → logprob: -4.888235569000244
    6. '(' → logprob: -4.888235569000244
    7. '[n' → logprob: -5.013235569000244
    8. ' [' → logprob: -5.138235569000244
    9. '   ' → logprob: -7.263235569000244
    10. '[
' → logprob: -8.263235092163086

Token 450: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31495872139930725
    2. '=' → logprob: -1.3149586915969849
    3. '       ' → logprob: -6.439958572387695
    4. ',' → logprob: -10.439958572387695
    5. '   ' → logprob: -10.689958572387695
    6. '[' → logprob: -11.439958572387695
    7. '        ' → logprob: -11.564958572387695
    8. '    ' → logprob: -11.939958572387695
    9. '=[' → logprob: -12.314958572387695
    10. '           ' → logprob: -12.939958572387695

Token 451: ' mouvement' (ID: 62236)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.38654792308807373
    2. '[' → logprob: -1.3865479230880737
    3. ' nh' → logprob: -3.1365480422973633
    4. ' [' → logprob: -4.886548042297363
    5. '[n' → logprob: -5.261548042297363
    6. ' (' → logprob: -5.636548042297363
    7. '(n' → logprob: -5.886548042297363
    8. '(' → logprob: -5.886548042297363
    9. '[
' → logprob: -6.636548042297363
    10. '   ' → logprob: -6.761548042297363

Token 452: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5239244699478149
    2. '=' → logprob: -0.8989244699478149
    3. '       ' → logprob: -8.023924827575684
    4. ',' → logprob: -8.398924827575684
    5. '[' → logprob: -8.523924827575684
    6. '=[' → logprob: -11.273924827575684
    7. '   ' → logprob: -11.898924827575684
    8. '        ' → logprob: -12.273924827575684
    9. '    ' → logprob: -12.773924827575684
    10. 'if' → logprob: -12.898924827575684

Token 453: 'ou' (ID: 283)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43735337257385254
    2. 'nh' → logprob: -1.0623533725738525
    3. ' nh' → logprob: -5.562353134155273
    4. '[n' → logprob: -6.062353134155273
    5. ' [' → logprob: -6.312353134155273
    6. '   ' → logprob: -8.062353134155273
    7. '[
' → logprob: -9.562353134155273
    8. '(' → logprob: -10.062353134155273
    9. '(n' → logprob: -10.437353134155273
    10. '       ' → logprob: -10.812353134155273

Token 454: ' "' (ID: 392)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31745919585227966
    2. 'nh' → logprob: -1.942459225654602
    3. ' nh' → logprob: -2.6924591064453125
    4. ' [' → logprob: -3.3174591064453125
    5. '[n' → logprob: -4.6924591064453125
    6. ' (' → logprob: -5.5674591064453125
    7. '(n' → logprob: -5.9424591064453125
    8. '       ' → logprob: -6.0674591064453125
    9. '(' → logprob: -6.3174591064453125
    10. '   ' → logprob: -6.6924591064453125

Token 455: 'from' (ID: 2845)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.45249736309051514
    2. '[' → logprob: -1.0774973630905151
    3. ' nh' → logprob: -4.452497482299805
    4. '[
' → logprob: -5.952497482299805
    5. '[n' → logprob: -5.952497482299805
    6. '   ' → logprob: -6.577497482299805
    7. ' [' → logprob: -6.952497482299805
    8. '(' → logprob: -7.077497482299805
    9. '(n' → logprob: -7.327497482299805
    10. '       ' → logprob: -7.702497482299805

Token 456: '"),' (ID: 7645)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.966925859451294
    2. '[' → logprob: -1.841925859451294
    3. '_row' → logprob: -1.841925859451294
    4. '=' → logprob: -2.716925859451294
    5. 'r' → logprob: -2.966925859451294
    6. ',' → logprob: -3.466925859451294
    7. 'h' → logprob: -3.591925859451294
    8. '_' → logprob: -3.716925859451294
    9. ')' → logprob: -4.091925621032715
    10. '   ' → logprob: -4.216925621032715

Token 457: ' format' (ID: 6011)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3791641592979431
    2. 'nh' → logprob: -1.254164218902588
    3. 'frm' → logprob: -3.879164218902588
    4. '[n' → logprob: -5.129164218902588
    5. ' nh' → logprob: -6.754164218902588
    6. ' [' → logprob: -7.004164218902588
    7. 'fr' → logprob: -7.754164218902588
    8. '   ' → logprob: -8.50416374206543
    9. '(frm' → logprob: -9.00416374206543
    10. '(n' → logprob: -9.12916374206543

Token 458: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6015309691429138
    2. ' =' → logprob: -0.8515309691429138
    3. '=[' → logprob: -4.601531028747559
    4. '[' → logprob: -4.976531028747559
    5. '       ' → logprob: -5.476531028747559
    6. '(' → logprob: -6.851531028747559
    7. '=(' → logprob: -7.226531028747559
    8. '   ' → logprob: -7.601531028747559
    9. '           ' → logprob: -7.976531028747559
    10. '(n' → logprob: -7.976531028747559

Token 459: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1001950204372406
    2. ' =' → logprob: -2.7251949310302734
    3. '=[' → logprob: -3.6001949310302734
    4. '=(' → logprob: -7.225194931030273
    5. '       ' → logprob: -7.350194931030273
    6. '[' → logprob: -7.350194931030273
    7. '           ' → logprob: -8.475194931030273
    8. '(' → logprob: -8.975194931030273
    9. '   ' → logprob: -10.225194931030273
    10. ' =[' → logprob: -10.225194931030273

Token 460: ' base' (ID: 3611)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01989409700036049
    2. '[n' → logprob: -4.519894123077393
    3. ' [' → logprob: -4.894894123077393
    4. '   ' → logprob: -8.019893646240234
    5. '       ' → logprob: -8.394893646240234
    6. '(n' → logprob: -9.019893646240234
    7. '           ' → logprob: -9.144893646240234
    8. '[int' → logprob: -9.269893646240234
    9. '[h' → logprob: -10.019893646240234
    10. '[
' → logprob: -10.144893646240234

Token 461: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24608388543128967
    2. '=' → logprob: -2.496083974838257
    3. '0' → logprob: -3.496083974838257
    4. ' =' → logprob: -3.496083974838257
    5. '(' → logprob: -3.996083974838257
    6. '       ' → logprob: -4.496083736419678
    7. '   ' → logprob: -4.621083736419678
    8. ' [' → logprob: -4.621083736419678
    9. ' (' → logprob: -4.871083736419678
    10. '1' → logprob: -4.996083736419678

Token 462: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7594417333602905
    2. '1' → logprob: -1.5094417333602905
    3. '0' → logprob: -2.38444185256958
    4. '10' → logprob: -2.50944185256958
    5. '(' → logprob: -3.00944185256958
    6. '=' → logprob: -3.25944185256958
    7. '   ' → logprob: -4.38444185256958
    8. '(n' → logprob: -4.75944185256958
    9. '       ' → logprob: -5.63444185256958
    10. '4' → logprob: -5.75944185256958

Token 463: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4239485561847687
    2. '=' → logprob: -1.4239485263824463
    3. '       ' → logprob: -2.2989485263824463
    4. ',' → logprob: -6.548948764801025
    5. '[' → logprob: -7.048948764801025
    6. '   ' → logprob: -7.423948764801025
    7. '           ' → logprob: -7.923948764801025
    8. 'frm' → logprob: -8.423948287963867
    9. '(frm' → logprob: -8.548948287963867
    10. '        
' → logprob: -8.923948287963867

Token 464: 'l' (ID: 75)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8167953491210938
    2. '[' → logprob: -1.6917953491210938
    3. '(' → logprob: -2.1917953491210938
    4. '       ' → logprob: -2.8167953491210938
    5. '(n' → logprob: -2.9417953491210938
    6. ' nh' → logprob: -3.1917953491210938
    7. '(frm' → logprob: -3.8167953491210938
    8. ')' → logprob: -3.9417953491210938
    9. ' [' → logprob: -4.566795349121094
    10. 'nh' → logprob: -4.566795349121094

Token 465: 'ignes' (ID: 53389)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.167396903038025
    2. '=' → logprob: -1.792396903038025
    3. '   ' → logprob: -1.792396903038025
    4. 'ine' → logprob: -1.917396903038025
    5. ' =' → logprob: -2.5423970222473145
    6. 'f' → logprob: -3.2923970222473145
    7. 'n' → logprob: -3.2923970222473145
    8. ',' → logprob: -4.4173970222473145
    9. '[' → logprob: -4.7923970222473145
    10. '+' → logprob: -5.4173970222473145

Token 466: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1198263093829155
    2. '       ' → logprob: -3.244826316833496
    3. '+' → logprob: -3.369826316833496
    4. '=' → logprob: -4.619826316833496
    5. ' +' → logprob: -4.744826316833496
    6. ' ,' → logprob: -4.994826316833496
    7. ' =' → logprob: -5.244826316833496
    8. '[' → logprob: -5.494826316833496
    9. '   ' → logprob: -6.619826316833496
    10. '           ' → logprob: -6.619826316833496

Token 467: 'colon' (ID: 106148)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.4874099493026733
    2. 'cols' → logprob: -1.9874099493026733
    3. '1' → logprob: -2.112410068511963
    4. ',' → logprob: -2.487410068511963
    5. ' col' → logprob: -2.862410068511963
    6. 'frm' → logprob: -3.112410068511963
    7. ' nw' → logprob: -3.237410068511963
    8. ' cols' → logprob: -3.237410068511963
    9. '+' → logprob: -3.362410068511963
    10. '   ' → logprob: -3.362410068511963

Token 468: 'nes' (ID: 4382)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.15925346314907074
    2. 'e' → logprob: -2.0342533588409424
    3. 'ne' → logprob: -4.5342535972595215
    4. 'es' → logprob: -5.6592535972595215
    5. '   ' → logprob: -6.9092535972595215
    6. '       ' → logprob: -7.9092535972595215
    7. 'nes' → logprob: -8.159253120422363
    8. ')' → logprob: -9.284253120422363
    9. ',' → logprob: -9.659253120422363
    10. 'nie' → logprob: -9.784253120422363

Token 469: ' commencent' (ID: 184941)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1486036777496338
    2. ',' → logprob: -1.3986036777496338
    3. ' =' → logprob: -1.3986036777496338
    4. '=' → logprob: -2.023603677749634
    5. '[' → logprob: -3.523603677749634
    6. ')' → logprob: -4.523603439331055
    7. '           ' → logprob: -5.398603439331055
    8. '   ' → logprob: -6.148603439331055
    9. ',
' → logprob: -6.398603439331055
    10. ']' → logprob: -6.898603439331055

Token 470: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11761636286973953
    2. ',' → logprob: -3.1176164150238037
    3. 'à' → logprob: -3.8676164150238037
    4. ' à' → logprob: -4.117616176605225
    5. ' =' → logprob: -4.492616176605225
    6. ')' → logprob: -4.992616176605225
    7. '           ' → logprob: -5.242616176605225
    8. '               ' → logprob: -5.992616176605225
    9. ' par' → logprob: -6.992616176605225
    10. 'from' → logprob: -7.117616176605225

Token 471: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023867949843406677
    2. 'nh' → logprob: -4.023868083953857
    3. ' nh' → logprob: -6.273868083953857
    4. ' ' → logprob: -6.523868083953857
    5. '0' → logprob: -6.648868083953857
    6. '[' → logprob: -7.773868083953857
    7. ')' → logprob: -8.7738676071167
    8. '   ' → logprob: -9.2738676071167
    9. '(' → logprob: -9.3988676071167
    10. 'frm' → logprob: -9.7738676071167

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.660315895918757e-05
    2. 'nh' → logprob: -10.250076293945312
    3. '0' → logprob: -11.000076293945312
    4. ' ' → logprob: -11.750076293945312
    5. '[' → logprob: -12.125076293945312
    6. '(' → logprob: -12.750076293945312
    7. '
' → logprob: -13.125076293945312
    8. '```' → logprob: -13.500076293945312
    9. '   ' → logprob: -13.875076293945312
    10. ')' → logprob: -14.125076293945312

Token 473: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8326877355575562
    2. '       ' → logprob: -1.2076877355575562
    3. '=' → logprob: -2.4576878547668457
    4. ')' → logprob: -2.7076878547668457
    5. ' =' → logprob: -2.8326878547668457
    6. '[' → logprob: -3.3326878547668457
    7. ',
' → logprob: -5.582687854766846
    8. ']' → logprob: -5.582687854766846
    9. '(' → logprob: -6.082687854766846
    10. '(frm' → logprob: -6.082687854766846

Token 474: ' donc' (ID: 14206)
  Prédit: ' frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' frm' → logprob: -0.7068089246749878
    2. '       ' → logprob: -1.2068089246749878
    3. 'frm' → logprob: -1.7068089246749878
    4. '        ' → logprob: -4.456809043884277
    5. '(frm' → logprob: -5.831809043884277
    6. ' =' → logprob: -6.206809043884277
    7. ' if' → logprob: -6.581809043884277
    8. '           ' → logprob: -6.706809043884277
    9. '[' → logprob: -6.956809043884277
    10. ' ' → logprob: -7.081809043884277

Token 475: ' nh' (ID: 5467)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8099045753479004
    2. 'frm' → logprob: -0.9349045753479004
    3. ' frm' → logprob: -2.5599045753479004
    4. '(frm' → logprob: -2.9349045753479004
    5. ' [' → logprob: -3.6849045753479004
    6. '   ' → logprob: -6.3099045753479
    7. '       ' → logprob: -6.5599045753479
    8. ' (' → logprob: -6.8099045753479
    9. '[start' → logprob: -7.3099045753479
    10. '(' → logprob: -7.3099045753479

Token 476: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17974741756916046
    2. ' +' → logprob: -1.804747462272644
    3. ')+' → logprob: -14.679747581481934
    4. '＋' → logprob: -14.929747581481934
    5. '()+' → logprob: -15.054747581481934
    6. ',' → logprob: -15.054747581481934
    7. '   ' → logprob: -15.179747581481934
    8. '+
' → logprob: -15.679747581481934
    9. ' plus' → logprob: -15.679747581481934
    10. '[' → logprob: -15.929747581481934

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.500007629394531
    4. '=' → logprob: -16.87500762939453
    5. '0' → logprob: -18.25000762939453
    6. '       ' → logprob: -18.87500762939453
    7. '+' → logprob: -18.87500762939453
    8. '```' → logprob: -19.12500762939453
    9. '
' → logprob: -19.87500762939453
    10. '           ' → logprob: -20.75000762939453

Token 478: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009595814626663923
    2. ',
' → logprob: -7.500959396362305
    3. '+' → logprob: -8.875959396362305
    4. ' ,' → logprob: -9.000959396362305
    5. '       ' → logprob: -10.250959396362305
    6. '   ' → logprob: -10.375959396362305
    7. ',n' → logprob: -10.625959396362305
    8. 'frm' → logprob: -11.500959396362305
    9. '
' → logprob: -11.875959396362305
    10. '=' → logprob: -12.000959396362305

Token 479: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.14321784675121307
    2. ' nw' → logprob: -2.0182178020477295
    3. '1' → logprob: -7.768218040466309
    4. 'n' → logprob: -9.643218040466309
    5. '(n' → logprob: -11.018218040466309
    6. '   ' → logprob: -11.143218040466309
    7. ' nws' → logprob: -12.268218040466309
    8. ' ' → logprob: -12.768218040466309
    9. ''n' → logprob: -13.393218040466309
    10. ',n' → logprob: -13.518218040466309

Token 480: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2857516407966614
    2. ' +' → logprob: -1.4107515811920166
    3. ',' → logprob: -5.410751819610596
    4. ' ,' → logprob: -9.285751342773438
    5. ')' → logprob: -11.660751342773438
    6. ')+' → logprob: -12.410751342773438
    7. '<|end|>' → logprob: -12.535751342773438
    8. ',
' → logprob: -12.660751342773438
    9. '),' → logprob: -13.160751342773438
    10. '   ' → logprob: -13.285751342773438

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.250041007995605
    4. '```' → logprob: -14.875041007995605
    5. '+' → logprob: -16.125041961669922
    6. '           ' → logprob: -16.500041961669922
    7. '2' → logprob: -16.875041961669922
    8. '0' → logprob: -17.125041961669922
    9. '    ' → logprob: -17.750041961669922
    10. '=' → logprob: -17.875041961669922

Token 482: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03921617567539215
    2. '
' → logprob: -3.7892162799835205
    3. 'frm' → logprob: -5.039216041564941
    4. ',' → logprob: -5.539216041564941
    5. 'if' → logprob: -6.539216041564941
    6. ' frm' → logprob: -6.914216041564941
    7. '        
' → logprob: -7.289216041564941
    8. ' if' → logprob: -7.664216041564941
    9. ' =' → logprob: -8.414216041564941
    10. '
' → logprob: -8.539216041564941

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04664870724081993
    2. 'frm' → logprob: -3.5466487407684326
    3. ' frm' → logprob: -4.5466485023498535
    4. 'if' → logprob: -5.5466485023498535
    5. ' if' → logprob: -6.7966485023498535
    6. ',' → logprob: -8.421648979187012
    7. '           ' → logprob: -8.671648979187012
    8. '(frm' → logprob: -8.796648979187012
    9. ' =' → logprob: -9.421648979187012
    10. '   ' → logprob: -9.421648979187012

Token 484: ' frm' (ID: 45032)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' (adapté à ' frm') → logprob: -0.2190730720758438
    2. '       ' → logprob: -1.7190730571746826
    3. ' frm' → logprob: -4.094073295593262
    4. '(frm' → logprob: -8.219073295593262
    5. '        ' → logprob: -9.344073295593262
    6. '           ' → logprob: -9.469073295593262
    7. 'form' → logprob: -9.594073295593262
    8. 'fr' → logprob: -9.844073295593262
    9. '   ' → logprob: -9.844073295593262
    10. '.frm' → logprob: -10.594073295593262

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04328690841794014
    2. ' =' → logprob: -3.1682868003845215
    3. ',' → logprob: -8.29328727722168
    4. '=[' → logprob: -10.66828727722168
    5. '[' → logprob: -11.66828727722168
    6. ')' → logprob: -12.91828727722168
    7. ' =[' → logprob: -13.91828727722168
    8. '   ' → logprob: -14.29328727722168
    9. ' ,' → logprob: -15.29328727722168
    10. '＝' → logprob: -15.41828727722168

Token 486: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11025553196668625
    2. '[n' → logprob: -2.360255479812622
    3. ' [' → logprob: -4.610255718231201
    4. '(n' → logprob: -10.110255241394043
    5. ' (' → logprob: -12.735255241394043
    6. '   ' → logprob: -13.610255241394043
    7. ' ' → logprob: -14.235255241394043
    8. '[now' → logprob: -14.610255241394043
    9. '[
' → logprob: -14.735255241394043
    10. '(' → logprob: -14.735255241394043

Token 487: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.0001600347168277949
    2. ' nh' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.375160217285156
    4. '\n' → logprob: -18.000160217285156
    5. '
' → logprob: -19.250160217285156
    6. 'nb' → logprob: -19.500160217285156
    7. 'NH' → logprob: -19.500160217285156
    8. '  ' → logprob: -19.750160217285156
    9. 'nu' → logprob: -19.875160217285156
    10. 'n' → logprob: -19.875160217285156

Token 488: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12877972424030304
    2. ',' → logprob: -2.503779649734497
    3. ' +' → logprob: -3.253779649734497
    4. ' ,' → logprob: -8.378779411315918
    5. ']+' → logprob: -9.878779411315918
    6. '][' → logprob: -10.128779411315918
    7. '<|end|>' → logprob: -10.503779411315918
    8. ',n' → logprob: -11.253779411315918
    9. '[' → logprob: -11.378779411315918
    10. ',
' → logprob: -11.503779411315918

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '0' → logprob: -13.500009536743164
    4. '```' → logprob: -17.250009536743164
    5. '   ' → logprob: -17.750009536743164
    6. ',' → logprob: -18.375009536743164
    7. '<|end|>' → logprob: -18.625009536743164
    8. '-' → logprob: -19.375009536743164
    9. '
' → logprob: -20.250009536743164
    10. '=' → logprob: -20.500009536743164

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001234428636962548
    2. ',n' → logprob: -9.500123023986816
    3. ' ,' → logprob: -10.250123023986816
    4. ',
' → logprob: -11.875123023986816
    5. ',w' → logprob: -13.125123023986816
    6. '<|end|>' → logprob: -13.250123023986816
    7. '‌,' → logprob: -14.250123023986816
    8. ']' → logprob: -15.000123023986816
    9. ',",' → logprob: -15.125123023986816
    10. ')' → logprob: -16.000123977661133

Token 491: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.011055245995521545
    2. ' nw' → logprob: -4.5110554695129395
    3. 'n' → logprob: -12.136054992675781
    4. ' ' → logprob: -14.136054992675781
    5. 'w' → logprob: -14.761054992675781
    6. ' nws' → logprob: -15.386054992675781
    7. '(n' → logprob: -15.636054992675781
    8. '<|end|>' → logprob: -16.01105499267578
    9. 'NW' → logprob: -16.01105499267578
    10. '   ' → logprob: -17.01105499267578

Token 492: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012514196569100022
    2. ' +' → logprob: -6.751251220703125
    3. ']+' → logprob: -9.876251220703125
    4. '<|end|>' → logprob: -11.001251220703125
    5. ']' → logprob: -12.376251220703125
    6. ',' → logprob: -12.876251220703125
    7. '+"]' → logprob: -13.001251220703125
    8. '[' → logprob: -14.126251220703125
    9. '<|end|>' → logprob: -14.126251220703125
    10. '()+' → logprob: -14.751251220703125

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.125009536743164
    4. '<|end|>' → logprob: -16.750009536743164
    5. '+' → logprob: -17.125009536743164
    6. ' (' → logprob: -18.500009536743164
    7. ',' → logprob: -18.750009536743164
    8. '۱' → logprob: -18.875009536743164
    9. '2' → logprob: -19.125009536743164
    10. 'w' → logprob: -19.125009536743164

Token 494: ']

' (ID: 3144)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007909797132015228
    2. ']' → logprob: -4.882909774780273
    3. '<|end|>' → logprob: -9.132909774780273
    4. ',
' → logprob: -9.507909774780273
    5. ' ,' → logprob: -9.632909774780273
    6. ')' → logprob: -10.382909774780273
    7. ',n' → logprob: -12.382909774780273
    8. '+' → logprob: -12.507909774780273
    9. '',' → logprob: -13.007909774780273
    10. '   ' → logprob: -13.132909774780273

Token 495: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43996042013168335
    2. 'if' → logprob: -1.6899604797363281
    3. '#' → logprob: -3.064960479736328
    4. '       ' → logprob: -3.314960479736328
    5. ' if' → logprob: -3.439960479736328
    6. ',
' → logprob: -4.189960479736328
    7. ' ,' → logprob: -4.439960479736328
    8. '[' → logprob: -5.064960479736328
    9. 'next' → logprob: -5.314960479736328
    10. '        
' → logprob: -5.689960479736328

Token 496: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48987501859664917
    2. '#' (adapté à ' #') → logprob: -1.239875078201294
    3. '       ' → logprob: -2.364875078201294
    4. 'next' → logprob: -6.489874839782715
    5. ' if' → logprob: -6.739874839782715
    6. '        
' → logprob: -7.614874839782715
    7. ' #' → logprob: -8.239874839782715
    8. '```' → logprob: -8.239874839782715
    9. '``' → logprob: -10.489874839782715
    10. ',' → logprob: -10.489874839782715

Token 497: ' Dé' (ID: 27247)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1285305768251419
    2. '#' → logprob: -2.128530502319336
    3. 'nw' → logprob: -7.128530502319336
    4. '   ' → logprob: -8.128530502319336
    5. 'next' → logprob: -8.753530502319336
    6. 'n' → logprob: -9.503530502319336
    7. '       ' → logprob: -9.503530502319336
    8. ' if' → logprob: -9.878530502319336
    9. 'nx' → logprob: -11.128530502319336
    10. '           ' → logprob: -11.253530502319336

Token 498: 'placement' (ID: 17947)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -1.0761336088180542
    2. 'nw' → logprob: -1.0761336088180542
    3. 'f' → logprob: -2.4511337280273438
    4. 'if' → logprob: -2.5761337280273438
    5. 'placement' → logprob: -3.0761337280273438
    6. '#' → logprob: -3.4511337280273438
    7. 'w' → logprob: -4.326133728027344
    8. 'place' → logprob: -4.326133728027344
    9. 'fin' → logprob: -4.701133728027344
    10. 'pl' → logprob: -4.826133728027344

Token 499: ' sur' (ID: 1512)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7338719367980957
    2. ' if' → logprob: -0.8588719367980957
    3. '       ' → logprob: -2.3588719367980957
    4. '#' → logprob: -7.358871936798096
    5. ' =' → logprob: -8.358871459960938
    6. ',' → logprob: -8.358871459960938
    7. '        
' → logprob: -8.483871459960938
    8. '=' → logprob: -8.858871459960938
    9. ' #' → logprob: -9.983871459960938
    10. '        ' → logprob: -10.108871459960938

Token 500: ' la' (ID: 557)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -1.4845881462097168
    2. ' la' → logprob: -1.6095881462097168
    3. 'nw' → logprob: -1.6095881462097168
    4. 'the' → logprob: -2.234588146209717
    5. '   ' → logprob: -2.734588146209717
    6. 'w' → logprob: -2.984588146209717
    7. ' the' → logprob: -3.359588146209717
    8. 'la' → logprob: -3.859588146209717
    9. 'l' → logprob: -3.984588146209717
    10. '#' → logprob: -4.484588146209717

Token 501: ' grille' (ID: 99153)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8361445069313049
    2. 'col' → logprob: -1.8361444473266602
    3. ' même' → logprob: -2.33614444732666
    4. 'right' → logprob: -2.46114444732666
    5. 'dro' → logprob: -2.83614444732666
    6. 'm' → logprob: -2.96114444732666
    7. 'd' → logprob: -4.21114444732666
    8. '#' → logprob: -4.33614444732666
    9. 'next' → logprob: -4.58614444732666
    10. '   ' → logprob: -4.58614444732666

Token 502: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7745445370674133
    2. '       ' → logprob: -0.8995445370674133
    3. ' if' → logprob: -2.0245444774627686
    4. '#' → logprob: -9.774544715881348
    5. '        ' → logprob: -9.774544715881348
    6. '        
' → logprob: -9.774544715881348
    7. '           ' → logprob: -10.524544715881348
    8. '   ' → logprob: -11.149544715881348
    9. '```' → logprob: -11.274544715881348
    10. ',' → logprob: -11.649544715881348

Token 503: ' zig' (ID: 82784)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.413155436515808
    2. ' suivant' → logprob: -1.663155436515808
    3. 'ligne' → logprob: -2.0381555557250977
    4. ' ligne' → logprob: -2.7881555557250977
    5. 'if' → logprob: -2.9131555557250977
    6. 'fonction' → logprob: -3.1631555557250977
    7. ' fonction' → logprob: -3.2881555557250977
    8. ' largeur' → logprob: -3.2881555557250977
    9. ' if' → logprob: -3.9131555557250977
    10. 'horizontal' → logprob: -3.9131555557250977

Token 504: 'zag' (ID: 137719)
  Prédit: 'zag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zag' → logprob: -0.0031687954906374216
    2. '-z' → logprob: -6.00316858291626
    3. 'z' → logprob: -7.37816858291626
    4. '-' → logprob: -10.253169059753418
    5. '       ' → logprob: -11.503169059753418
    6. 'zac' → logprob: -11.628169059753418
    7. ' zag' → logprob: -12.003169059753418
    8. '-
' → logprob: -13.378169059753418
    9. '\t' → logprob: -14.003169059753418
    10. 'za' → logprob: -14.128169059753418

Token 505: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07209286838769913
    2. ' if' → logprob: -3.1970927715301514
    3. 'if' → logprob: -3.5720927715301514
    4. '        
' → logprob: -8.32209300994873
    5. ',' → logprob: -8.57209300994873
    6. ':' → logprob: -10.57209300994873
    7. '
' → logprob: -10.94709300994873
    8. '#' → logprob: -11.07209300994873
    9. ':
' → logprob: -11.07209300994873
    10. '   ' → logprob: -11.57209300994873

Token 506: 'ligne' (ID: 94660)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1326075941324234
    2. ' if' → logprob: -2.6326076984405518
    3. ')' → logprob: -3.6326076984405518
    4. 'nw' → logprob: -4.757607460021973
    5. '       ' → logprob: -5.757607460021973
    6. '           ' → logprob: -6.382607460021973
    7. '#' → logprob: -6.382607460021973
    8. ',' → logprob: -6.632607460021973
    9. ' nw' → logprob: -6.632607460021973
    10. '):
' → logprob: -6.882607460021973

Token 507: ' paire' (ID: 148856)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3888220191001892
    2. '+' → logprob: -2.263822078704834
    3. '   ' → logprob: -2.763822078704834
    4. ' +' → logprob: -3.013822078704834
    5. '       ' → logprob: -3.138822078704834
    6. ' +=' → logprob: -3.888822078704834
    7. ' ,' → logprob: -4.513822078704834
    8. ')' → logprob: -4.888822078704834
    9. 'if' → logprob: -5.638822078704834
    10. ' if' → logprob: -5.763822078704834

Token 508: ' vers' (ID: 3640)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25490307807922363
    2. '==' → logprob: -1.5049030780792236
    3. ')' → logprob: -7.0049028396606445
    4. '       ' → logprob: -7.2549028396606445
    5. '   ' → logprob: -7.5049028396606445
    6. 'if' → logprob: -8.504902839660645
    7. ',' → logprob: -8.879902839660645
    8. '%' → logprob: -9.254902839660645
    9. ' if' → logprob: -9.754902839660645
    10. '):' → logprob: -9.754902839660645

Token 509: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.002265517134219408
    2. 'le' → logprob: -6.877265453338623
    3. ' la' → logprob: -7.377265453338623
    4. 'dro' → logprob: -8.002265930175781
    5. 'l' → logprob: -8.752265930175781
    6. '   ' → logprob: -9.877265930175781
    7. 'right' → logprob: -10.877265930175781
    8. ' droite' → logprob: -11.877265930175781
    9. '           ' → logprob: -12.002265930175781
    10. ' ' → logprob: -12.377265930175781

Token 510: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.13763388991355896
    2. ' droite' → logprob: -2.762633800506592
    3. 'right' → logprob: -2.887633800506592
    4. 'd' → logprob: -5.137633800506592
    5. '```' → logprob: -6.637633800506592
    6. ' ' → logprob: -7.762633800506592
    7. 'next' → logprob: -8.13763427734375
    8. '   ' → logprob: -8.51263427734375
    9. 'Dro' → logprob: -8.88763427734375
    10. ' right' → logprob: -8.88763427734375

Token 511: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0533441305160522
    2. 'if' → logprob: -1.3033441305160522
    3. '       ' → logprob: -1.4283441305160522
    4. ',' → logprob: -2.178344249725342
    5. ')' → logprob: -4.053344249725342
    6. '           ' → logprob: -5.553344249725342
    7. '),' → logprob: -6.553344249725342
    8. '   ' → logprob: -6.928344249725342
    9. '               ' → logprob: -7.053344249725342
    10. '):' → logprob: -7.678344249725342

Token 512: ' imp' (ID: 3282)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.4045701324939728
    2. 'nw' → logprob: -1.1545701026916504
    3. '   ' → logprob: -5.90457010269165
    4. 'if' → logprob: -6.40457010269165
    5. ' if' → logprob: -6.52957010269165
    6. ')' → logprob: -6.77957010269165
    7. '       ' → logprob: -6.90457010269165
    8. ' nh' → logprob: -7.27957010269165
    9. ' 
' → logprob: -7.27957010269165
    10. '    ' → logprob: -7.40457010269165

Token 513: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.5778507590293884
    2. 'air' → logprob: -0.8278507590293884
    3. 'ar' → logprob: -7.327850818634033
    4. ' aire' → logprob: -7.577850818634033
    5. 'a' → logprob: -7.952850818634033
    6. 'airs' → logprob: -8.952850341796875
    7. 'aires' → logprob: -9.577850341796875
    8. '   ' → logprob: -9.952850341796875
    9. 'airie' → logprob: -10.577850341796875
    10. 'ai' → logprob: -10.952850341796875

Token 514: ' vers' (ID: 3640)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6190490126609802
    2. ' ==' → logprob: -1.619049072265625
    3. ' vers' → logprob: -2.744049072265625
    4. '+' → logprob: -3.244049072265625
    5. ' +' → logprob: -3.494049072265625
    6. '   ' → logprob: -3.494049072265625
    7. '       ' → logprob: -4.119049072265625
    8. 'if' → logprob: -4.119049072265625
    9. ')' → logprob: -4.744049072265625
    10. ',' → logprob: -4.994049072265625

Token 515: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.019576070830225945
    2. ' la' → logprob: -4.019576072692871
    3. 'le' → logprob: -7.519576072692871
    4. 'l' → logprob: -8.144576072692871
    5. '   ' → logprob: -8.394576072692871
    6. 'left' → logprob: -8.894576072692871
    7. 'g' → logprob: -9.019576072692871
    8. ' ' → logprob: -10.644576072692871
    9. ' gauche' → logprob: -10.644576072692871
    10. '```' → logprob: -11.269576072692871

Token 516: ' gauche' (ID: 58367)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1517196148633957
    2. 'g' → logprob: -2.776719570159912
    3. ' gauche' → logprob: -2.776719570159912
    4. 'right' → logprob: -5.401719570159912
    5. '```' → logprob: -5.776719570159912
    6. ' droite' → logprob: -6.026719570159912
    7. ' left' → logprob: -6.526719570159912
    8. ' ' → logprob: -6.651719570159912
    9. 'dro' → logprob: -7.151719570159912
    10. '   ' → logprob: -7.151719570159912

Token 517: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04541570320725441
    2. ' if' → logprob: -3.7954156398773193
    3. 'if' → logprob: -4.670415878295898
    4. ')' → logprob: -4.795415878295898
    5. ')
' → logprob: -6.295415878295898
    6. '):
' → logprob: -7.670415878295898
    7. ',' → logprob: -7.920415878295898
    8. '):' → logprob: -8.045415878295898
    9. ':' → logprob: -8.420415878295898
    10. '        
' → logprob: -8.670415878295898

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18369337916374207
    2. 'if' → logprob: -2.3086934089660645
    3. ' if' → logprob: -2.6836934089660645
    4. '        
' → logprob: -9.933692932128906
    5. '        ' → logprob: -10.558692932128906
    6. '           ' → logprob: -11.433692932128906
    7. ',' → logprob: -12.558692932128906
    8. '#' → logprob: -12.558692932128906
    9. '
' → logprob: -12.808692932128906
    10. '   ' → logprob: -13.058692932128906

Token 519: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010530341416597366
    2. '       ' → logprob: -4.760530471801758
    3. ' if' → logprob: -6.260530471801758
    4. '           ' → logprob: -13.635530471801758
    5. '        ' → logprob: -14.135530471801758
    6. '   ' → logprob: -14.260530471801758
    7. '```' → logprob: -14.760530471801758
    8. '        
' → logprob: -14.885530471801758
    9. '#' → logprob: -16.010530471801758
    10. 'If' → logprob: -16.510530471801758

Token 520: ' nh' (ID: 5467)
  Prédit: ' nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.10049768537282944
    2. 'nh' → logprob: -2.3504977226257324
    3. ' nw' → logprob: -9.350497245788574
    4. ' (' → logprob: -9.725497245788574
    5. 'nw' → logprob: -9.850497245788574
    6. '(' → logprob: -9.850497245788574
    7. '(n' → logprob: -11.100497245788574
    8. '   ' → logprob: -11.850497245788574
    9. ' ' → logprob: -12.100497245788574
    10. '0' → logprob: -12.100497245788574

Token 521: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026088716462254524
    2. '%' → logprob: -3.7760887145996094
    3. ' ==' → logprob: -6.276088714599609
    4. ' ' → logprob: -7.901088714599609
    5. ' <' → logprob: -8.15108871459961
    6. ' *' → logprob: -9.02608871459961
    7. '   ' → logprob: -9.77608871459961
    8. '==' → logprob: -10.15108871459961
    9. ' ' → logprob: -10.52608871459961
    10. '*' → logprob: -10.65108871459961

Token 522: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -15.75010871887207
    4. '==' → logprob: -17.37510871887207
    5. ' ==' → logprob: -18.62510871887207
    6. '  ' → logprob: -19.00010871887207
    7. '```' → logprob: -19.37510871887207
    8. '           ' → logprob: -19.50010871887207
    9. '                                           ' → logprob: -19.87510871887207
    10. '۲' → logprob: -20.00010871887207

Token 523: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.000024795532227
    4. '```' → logprob: -16.500024795532227
    5. '==' → logprob: -17.937524795532227
    6. '           ' → logprob: -18.625024795532227
    7. '
' → logprob: -18.625024795532227
    8. '  ' → logprob: -19.062524795532227
    9. ' ==' → logprob: -19.250024795532227
    10. '1' → logprob: -19.437524795532227

Token 524: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759514570236206
    2. ' ==' → logprob: -0.8259514570236206
    3. '=' → logprob: -12.82595157623291
    4. ' ' → logprob: -13.57595157623291
    5. '!=' → logprob: -13.57595157623291
    6. '   ' → logprob: -13.57595157623291
    7. ')==' → logprob: -13.70095157623291
    8. ' ' → logprob: -13.82595157623291
    9. ' !=' → logprob: -13.82595157623291
    10. '===' → logprob: -14.20095157623291

Token 525: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.500011444091797
    4. '1' → logprob: -16.625011444091797
    5. '=' → logprob: -17.500011444091797
    6. '۰' → logprob: -18.875011444091797
    7. '```' → logprob: -19.125011444091797
    8. '==' → logprob: -19.500011444091797
    9. '           ' → logprob: -19.500011444091797
    10. '
' → logprob: -19.625011444091797

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032068457221612334
    2. ' ' → logprob: -8.125320434570312
    3. '1' → logprob: -10.625320434570312
    4. '==' → logprob: -16.625320434570312
    5. '```' → logprob: -16.750320434570312
    6. '   ' → logprob: -17.125320434570312
    7. '=' → logprob: -17.375320434570312
    8. '2' → logprob: -17.500320434570312
    9. '۰' → logprob: -19.625320434570312
    10. ' ==' → logprob: -20.000320434570312

Token 527: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10966964811086655
    2. ':' → logprob: -2.8596696853637695
    3. '       ' → logprob: -3.2346696853637695
    4. 'and' → logprob: -5.7346696853637695
    5. '           ' → logprob: -6.2346696853637695
    6. ':
' → logprob: -6.9846696853637695
    7. '   ' → logprob: -6.9846696853637695
    8. ' :' → logprob: -9.35966968536377
    9. ',' → logprob: -11.60966968536377
    10. ' ' → logprob: -11.85966968536377

Token 528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8239222764968872
    2. '       ' → logprob: -1.1989222764968872
    3. ' if' → logprob: -2.1989221572875977
    4. '        ' → logprob: -2.9489221572875977
    5. 'if' → logprob: -2.9489221572875977
    6. ' ' → logprob: -4.948922157287598
    7. ' nw' → logprob: -4.948922157287598
    8. '               ' → logprob: -5.198922157287598
    9. ' ' → logprob: -5.323922157287598
    10. '   ' → logprob: -5.948922157287598

Token 529: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3897993564605713
    2. ' if' → logprob: -1.7647993564605713
    3. '           ' → logprob: -2.2647993564605713
    4. 'nw' → logprob: -3.2647993564605713
    5. ' nw' → logprob: -4.764799118041992
    6. '       ' → logprob: -7.764799118041992
    7. '               ' → logprob: -7.764799118041992
    8. '   ' → logprob: -10.264799118041992
    9. '#' (adapté à ' #') → logprob: -10.514799118041992
    10. 'n' → logprob: -10.764799118041992

Token 530: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04091130942106247
    2. 'nw' → logprob: -3.7909111976623535
    3. ' if' → logprob: -4.4159111976623535
    4. '           ' → logprob: -5.2909111976623535
    5. ' nw' → logprob: -8.040911674499512
    6. '```' → logprob: -10.665911674499512
    7. '               ' → logprob: -11.290911674499512
    8. '       ' → logprob: -11.540911674499512
    9. '   ' → logprob: -12.040911674499512
    10. 'next' → logprob: -12.165911674499512

Token 531: ' on' (ID: 402)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.201525017619133
    2. ' nw' → logprob: -1.7015249729156494
    3. '   ' → logprob: -9.32652473449707
    4. 'n' → logprob: -11.95152473449707
    5. ' ' → logprob: -12.07652473449707
    6. '(n' → logprob: -12.32652473449707
    7. '  ' → logprob: -13.32652473449707
    8. '	n' → logprob: -14.20152473449707
    9. ' nws' → logprob: -14.20152473449707
    10. 'w' → logprob: -14.70152473449707

Token 532: ' est' (ID: 893)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.1331545114517212
    2. ' nw' → logprob: -2.1331543922424316
    3. ' <' → logprob: -5.758154392242432
    4. '<n' → logprob: -6.133154392242432
    5. '<' → logprob: -8.00815486907959
    6. '   ' → logprob: -9.13315486907959
    7. ' !=' → logprob: -9.25815486907959
    8. 'n' → logprob: -9.50815486907959
    9. '<w' → logprob: -9.75815486907959
    10. '+' → logprob: -10.50815486907959

Token 533: ' sur' (ID: 1512)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7866247892379761
    2. '<' → logprob: -1.161624789237976
    3. ' à' → logprob: -2.6616249084472656
    4. 'pas' → logprob: -2.9116249084472656
    5. 'à' → logprob: -4.036624908447266
    6. 'not' → logprob: -4.286624908447266
    7. ' not' → logprob: -4.536624908447266
    8. '   ' → logprob: -4.536624908447266
    9. 'dans' → logprob: -4.536624908447266
    10. '<n' → logprob: -4.661624908447266

Token 534: ' une' (ID: 2463)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.051002517342567444
    2. 'nw' → logprob: -3.1760025024414062
    3. '   ' → logprob: -4.926002502441406
    4. 'n' → logprob: -8.551002502441406
    5. ' not' → logprob: -9.051002502441406
    6. ' ' → logprob: -9.301002502441406
    7. ' la' → logprob: -9.801002502441406
    8. '       ' → logprob: -9.801002502441406
    9. '(n' → logprob: -10.676002502441406
    10. ' n' → logprob: -10.801002502441406

Token 535: ' ligne' (ID: 19583)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.28591421246528625
    2. ' col' → logprob: -2.160914182662964
    3. ' colonne' → logprob: -2.910914182662964
    4. 'w' → logprob: -3.910914182662964
    5. ' nw' → logprob: -4.160914421081543
    6. ' case' → logprob: -5.035914421081543
    7. 'nw' → logprob: -5.410914421081543
    8. 'column' → logprob: -5.535914421081543
    9. 'case' → logprob: -5.910914421081543
    10. '   ' → logprob: -5.910914421081543

Token 536: ' paire' (ID: 148856)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02452213689684868
    2. '<' → logprob: -4.524522304534912
    3. ' nw' → logprob: -5.524522304534912
    4. '   ' → logprob: -6.024522304534912
    5. ' !=' → logprob: -6.149522304534912
    6. 'nw' → logprob: -6.274522304534912
    7. ' +' → logprob: -7.149522304534912
    8. ' ==' → logprob: -7.274522304534912
    9. '+' → logprob: -7.399522304534912
    10. '<n' → logprob: -8.024521827697754

Token 537: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011261437088251114
    2. 'and' → logprob: -5.136261463165283
    3. '           ' → logprob: -5.886261463165283
    4. ':' → logprob: -7.261261463165283
    5. '   ' → logprob: -7.386261463165283
    6. '       ' → logprob: -7.886261463165283
    7. '               ' → logprob: -8.386260986328125
    8. ':
' → logprob: -8.511260986328125
    9. ' et' → logprob: -9.136260986328125
    10. 'if' → logprob: -9.761260986328125

Token 538: 'com' (ID: 639)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.633296012878418
    2. ' nw' → logprob: -0.758296012878418
    3. '   ' → logprob: -8.008296012878418
    4. ')' → logprob: -9.508296012878418
    5. 'n' → logprob: -10.258296012878418
    6. ' nh' → logprob: -10.383296012878418
    7. ' ' → logprob: -10.633296012878418
    8. '       ' → logprob: -10.633296012878418
    9. ' )' → logprob: -11.008296012878418
    10. ' ' → logprob: -11.008296012878418

Token 539: 'pt' (ID: 555)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6239680647850037
    2. ' <' → logprob: -1.7489681243896484
    3. '==' → logprob: -2.3739681243896484
    4. '   ' → logprob: -2.9989681243896484
    5. '<' → logprob: -3.1239681243896484
    6. '+' → logprob: -3.4989681243896484
    7. ' !=' → logprob: -4.248968124389648
    8. ')' → logprob: -4.248968124389648
    9. ' +=' → logprob: -4.748968124389648
    10. '%' → logprob: -4.998968124389648

Token 540: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.5050147771835327
    2. 'te' → logprob: -1.5050147771835327
    3. 'e' → logprob: -1.7550147771835327
    4. 'ant' → logprob: -2.1300148963928223
    5. 'té' → logprob: -2.5050148963928223
    6. 'nt' → logprob: -3.2550148963928223
    7. 'ée' → logprob: -3.5050148963928223
    8. 'pl' → logprob: -4.130014896392822
    9. '   ' → logprob: -4.505014896392822
    10. 'pte' → logprob: -4.505014896392822

Token 541: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.392762303352356
    2. '==' → logprob: -1.642762303352356
    3. ' ==' → logprob: -2.1427621841430664
    4. ')' → logprob: -2.6427621841430664
    5. 'de' → logprob: -3.0177621841430664
    6. 'from' → logprob: -3.1427621841430664
    7. ' depuis' → logprob: -3.2677621841430664
    8. 'en' → logprob: -3.2677621841430664
    9. ' jusqu' → logprob: -3.2677621841430664
    10. ' de' → logprob: -3.5177621841430664

Token 542: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015580163337290287
    2. '1' → logprob: -4.390580177307129
    3. ' ' → logprob: -6.390580177307129
    4. '+' → logprob: -7.515580177307129
    5. 'n' → logprob: -9.140580177307129
    6. '   ' → logprob: -9.140580177307129
    7. ' zero' → logprob: -9.265580177307129
    8. 'nw' → logprob: -9.265580177307129
    9. '```' → logprob: -9.890580177307129
    10. ' ' → logprob: -9.890580177307129

Token 543: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.024829069152474403
    2. '0' → logprob: -4.149828910827637
    3. ' de' → logprob: -4.899828910827637
    4. '   ' → logprob: -7.524828910827637
    5. '           ' → logprob: -7.649828910827637
    6. 'z' → logprob: -9.149828910827637
    7. '       ' → logprob: -9.524828910827637
    8. '               ' → logprob: -10.399828910827637
    9. 'à' → logprob: -11.399828910827637
    10. '```' → logprob: -11.399828910827637

Token 544: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002823120157700032
    2. 'z' → logprob: -8.375282287597656
    3. 'zero' → logprob: -10.125282287597656
    4. ' zéro' → logprob: -12.125282287597656
    5. ' ' → logprob: -13.375282287597656
    6. '1' → logprob: -13.500282287597656
    7. '   ' → logprob: -13.750282287597656
    8. ' ' → logprob: -14.250282287597656
    9. '```' → logprob: -14.500282287597656
    10. 'index' → logprob: -15.375282287597656

Token 545: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2617008400848135e-05
    2. 'zero' → logprob: -10.750032424926758
    3. 'z' → logprob: -11.750032424926758
    4. ' zéro' → logprob: -13.625032424926758
    5. ' ' → logprob: -14.250032424926758
    6. '1' → logprob: -14.375032424926758
    7. '   ' → logprob: -14.875032424926758
    8. ' zero' → logprob: -16.250032424926758
    9. 'index' → logprob: -16.375032424926758
    10. '#' → logprob: -17.500032424926758

Token 546: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2856500446796417
    2. ' and' → logprob: -1.9106500148773193
    3. '):' → logprob: -3.2856500148773193
    4. '),' → logprob: -3.7856500148773193
    5. '):
' → logprob: -3.9106500148773193
    6. ' )' → logprob: -4.910650253295898
    7. '           ' → logprob: -5.535650253295898
    8. 'and' → logprob: -6.035650253295898
    9. ' ),' → logprob: -6.660650253295898
    10. ' et' → logprob: -7.035650253295898

Token 547: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39832812547683716
    2. ' if' → logprob: -1.1483280658721924
    3. '           ' → logprob: -4.7733283042907715
    4. '               ' → logprob: -6.3983283042907715
    5. ' nw' → logprob: -7.5233283042907715
    6. 'nw' → logprob: -7.5233283042907715
    7. '   ' → logprob: -9.273327827453613
    8. '#' → logprob: -10.898327827453613
    9. '       ' → logprob: -11.523327827453613
    10. 'n' → logprob: -11.648327827453613

Token 548: ' avance' (ID: 81376)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.28391969203948975
    2. '<' → logprob: -2.0339198112487793
    3. ' if' → logprob: -3.1589198112487793
    4. 'if' → logprob: -3.4089198112487793
    5. ' +=' → logprob: -3.5339198112487793
    6. '<n' → logprob: -5.908919811248779
    7. '   ' → logprob: -6.158919811248779
    8. ' +' → logprob: -6.283919811248779
    9. '+=' → logprob: -6.783919811248779
    10. '+' → logprob: -7.033919811248779

Token 549: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.799473762512207
    2. ' nw' → logprob: -0.799473762512207
    3. 'nw' → logprob: -2.799473762512207
    4. '               ' → logprob: -4.299473762512207
    5. '       ' → logprob: -4.549473762512207
    6. ' d' → logprob: -5.299473762512207
    7. '   ' → logprob: -5.549473762512207
    8. ' +=' → logprob: -7.049473762512207
    9. ' de' → logprob: -7.174473762512207
    10. 'd' → logprob: -7.424473762512207

Token 550: ' colonne' (ID: 148275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01501383539289236
    2. ' ' → logprob: -4.265013694763184
    3. ' +' → logprob: -7.890013694763184
    4. '+' → logprob: -8.140013694763184
    5. 'un' → logprob: -9.765013694763184
    6. ' un' → logprob: -10.140013694763184
    7. ' one' → logprob: -10.265013694763184
    8. '   ' → logprob: -11.140013694763184
    9. ' nw' → logprob: -11.890013694763184
    10. 'une' → logprob: -12.140013694763184

Token 551: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8420544266700745
    2. ' +=' → logprob: -0.9670544266700745
    3. ' +' → logprob: -1.8420543670654297
    4. '+=' → logprob: -3.5920543670654297
    5. '1' → logprob: -6.59205436706543
    6. '   ' → logprob: -6.84205436706543
    7. ' plus' → logprob: -9.34205436706543
    8. '       ' → logprob: -9.96705436706543
    9. ' ' → logprob: -10.09205436706543
    10. '[' → logprob: -10.21705436706543

Token 552: 'nw' (ID: 85546)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.21809040009975433
    2. 'nw' → logprob: -1.7180904150009155
    3. '1' → logprob: -4.343090534210205
    4. ' +' → logprob: -6.843090534210205
    5. '+' → logprob: -6.843090534210205
    6. ')' → logprob: -7.843090534210205
    7. ' )' → logprob: -7.968090534210205
    8. '   ' → logprob: -8.218090057373047
    9. '           ' → logprob: -9.218090057373047
    10. '       ' → logprob: -9.718090057373047

Token 553: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3566575348377228
    2. ' +' → logprob: -1.7316575050354004
    3. ' +=' → logprob: -2.3566575050354004
    4. '+=' → logprob: -3.6066575050354004
    5. '<' → logprob: -7.3566575050354
    6. ' <' → logprob: -8.231657981872559
    7. ')' → logprob: -9.481657981872559
    8. ']+=' → logprob: -9.731657981872559
    9. '=' → logprob: -10.231657981872559
    10. ')+' → logprob: -11.731657981872559

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.875261306762695
    4. '```' → logprob: -16.625261306762695
    5. ')' → logprob: -17.375261306762695
    6. '           ' → logprob: -18.500261306762695
    7. '+' → logprob: -18.500261306762695
    8. ' +' → logprob: -19.250261306762695
    9. '`' → logprob: -19.750261306762695
    10. ' ' → logprob: -20.000261306762695

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.25001335144043
    4. '+' → logprob: -15.75001335144043
    5. '           ' → logprob: -17.50001335144043
    6. ' +' → logprob: -17.75001335144043
    7. '```' → logprob: -18.62501335144043
    8. '  ' → logprob: -19.12501335144043
    9. ')' → logprob: -19.25001335144043
    10. '       ' → logprob: -19.37501335144043

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004434866365045309
    2. '           ' → logprob: -6.129435062408447
    3. ')
' → logprob: -6.379435062408447
    4. ' )' → logprob: -8.129434585571289
    5. '       ' → logprob: -8.629434585571289
    6. '               ' → logprob: -11.004434585571289
    7. '<|end|>' → logprob: -11.004434585571289
    8. '   ' → logprob: -11.504434585571289
    9. ' ' → logprob: -12.504434585571289
    10. '```' → logprob: -12.629434585571289

Token 557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7844917178153992
    2. '       ' → logprob: -1.159491777420044
    3. ' if' → logprob: -1.784491777420044
    4. '   ' → logprob: -3.659491777420044
    5. 'if' → logprob: -4.034491539001465
    6. '<|end|>' → logprob: -5.659491539001465
    7. ')' → logprob: -5.909491539001465
    8. '               ' → logprob: -6.034491539001465
    9. ' and' → logprob: -6.159491539001465
    10. '
' → logprob: -6.659491539001465

Token 558: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -0.1654902696609497
    2. ' nw' → logprob: -1.9154902696609497
    3. 'if' → logprob: -6.29049015045166
    4. '           ' → logprob: -6.41549015045166
    5. ' if' → logprob: -6.54049015045166
    6. 'n' → logprob: -8.79049015045166
    7. '       ' → logprob: -9.29049015045166
    8. '   ' → logprob: -10.54049015045166
    9. '               ' → logprob: -12.04049015045166
    10. '```' → logprob: -12.66549015045166

Token 559: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1603100299835205
    2. '+=' → logprob: -1.9103100299835205
    3. '+' → logprob: -9.410309791564941
    4. ' +' → logprob: -13.160309791564941
    5. '=' → logprob: -13.660309791564941
    6. ']+=' → logprob: -14.910309791564941
    7. ' =' → logprob: -15.785309791564941
    8. '   ' → logprob: -15.910309791564941
    9. '+='' → logprob: -16.410310745239258
    10. '+="' → logprob: -16.785310745239258

Token 560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -21.75
    5. '１' → logprob: -21.875
    6. '۱' → logprob: -22.375
    7. '0' → logprob: -22.625
    8. '১' → logprob: -23.125
    9. '१' → logprob: -23.5625
    10. '  ' → logprob: -23.625

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -19.875001907348633
    5. '<|end|>' → logprob: -20.375001907348633
    6. '0' → logprob: -21.312501907348633
    7. '۱' → logprob: -21.312501907348633
    8. '１' → logprob: -21.375001907348633
    9. '১' → logprob: -21.500001907348633
    10. '  ' → logprob: -21.812501907348633

Token 562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16572049260139465
    2. '<|end|>' → logprob: -2.4157204627990723
    3. 'if' → logprob: -3.9157204627990723
    4. '
' → logprob: -3.9157204627990723
    5. '           ' → logprob: -4.040720462799072
    6. ' if' → logprob: -5.415720462799072
    7. '   ' → logprob: -7.665720462799072
    8. '#' → logprob: -8.16572093963623
    9. '<|end|>' → logprob: -8.29072093963623
    10. ')' → logprob: -9.41572093963623

Token 563: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011836261488497257
    2. 'if' → logprob: -5.261836051940918
    3. '           ' → logprob: -5.886836051940918
    4. '<|end|>' → logprob: -6.011836051940918
    5. ' if' → logprob: -7.386836051940918
    6. '   ' → logprob: -8.636836051940918
    7. '
' → logprob: -8.636836051940918
    8. '#' → logprob: -9.011836051940918
    9. '        
' → logprob: -9.136836051940918
    10. ')' → logprob: -9.636836051940918

Token 564: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26613283157348633
    2. '       ' → logprob: -1.5161328315734863
    3. '           ' → logprob: -4.891132831573486
    4. ' if' → logprob: -5.141132831573486
    5. '#' (adapté à ' #') → logprob: -8.016132354736328
    6. '
' → logprob: -8.141132354736328
    7. '   ' → logprob: -10.266132354736328
    8. 'elif' → logprob: -10.391132354736328
    9. 'else' → logprob: -10.516132354736328
    10. '        
' → logprob: -11.016132354736328

Token 565: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002790935104712844
    2. '#' → logprob: -8.500279426574707
    3. '           ' → logprob: -10.250279426574707
    4. ' if' → logprob: -10.375279426574707
    5. '       ' → logprob: -11.875279426574707
    6. 'continue' → logprob: -13.500279426574707
    7. '   ' → logprob: -15.375279426574707
    8. '            
' → logprob: -16.62527847290039
    9. '```' → logprob: -16.62527847290039
    10. '               ' → logprob: -16.75027847290039

Token 566: ' on' (ID: 402)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.3132781684398651
    2. 'nw' → logprob: -1.3132781982421875
    3. '   ' → logprob: -11.438278198242188
    4. 'n' → logprob: -13.188278198242188
    5. ' ' → logprob: -13.313278198242188
    6. ' nws' → logprob: -14.188278198242188
    7. '  ' → logprob: -14.938278198242188
    8. ' ' → logprob: -15.063278198242188
    9. '#' → logprob: -15.063278198242188
    10. '(n' → logprob: -16.063278198242188

Token 567: ' dépasse' (ID: 165701)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3640929460525513
    2. 'nw' → logprob: -1.4890929460525513
    3. ' ==' → logprob: -1.7390929460525513
    4. '>=' → logprob: -2.2390928268432617
    5. 'w' → logprob: -2.3640928268432617
    6. ' >=' → logprob: -3.3640928268432617
    7. 'n' → logprob: -3.6140928268432617
    8. '#' → logprob: -3.8640928268432617
    9. ' reached' → logprob: -3.9890928268432617
    10. ' atteint' → logprob: -4.239092826843262

Token 568: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5389618873596191
    2. 'W' → logprob: -1.1639618873596191
    3. ' la' → logprob: -2.288961887359619
    4. ' W' → logprob: -6.538961887359619
    5. '==' → logprob: -7.913961887359619
    6. '=' → logprob: -7.913961887359619
    7. '=W' → logprob: -8.538961410522461
    8. '   ' → logprob: -8.663961410522461
    9. 'le' → logprob: -9.163961410522461
    10. 'the' → logprob: -9.538961410522461

Token 569: ' dernière' (ID: 39497)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00044437398901209235
    2. ' W' → logprob: -7.750444412231445
    3. ' largeur' → logprob: -12.250444412231445
    4. 'width' → logprob: -12.750444412231445
    5. 'w' → logprob: -13.250444412231445
    6. '#' → logprob: -13.625444412231445
    7. 'large' → logprob: -14.000444412231445
    8. '   ' → logprob: -14.375444412231445
    9. 'n' → logprob: -14.875444412231445
    10. 'larg' → logprob: -15.375444412231445

Token 570: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.18104341626167297
    2. ' colonne' → logprob: -1.8060433864593506
    3. ' col' → logprob: -7.05604362487793
    4. 'case' → logprob: -8.80604362487793
    5. 'column' → logprob: -9.05604362487793
    6. ' ' → logprob: -9.30604362487793
    7. ' case' → logprob: -10.30604362487793
    8. 'colon' → logprob: -11.55604362487793
    9. ' colon' → logprob: -11.80604362487793
    10. '_col' → logprob: -11.80604362487793

Token 571: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26762914657592773
    2. '==' → logprob: -1.8926291465759277
    3. ' >=' → logprob: -2.8926291465759277
    4. ' (' → logprob: -4.267629146575928
    5. '>=' → logprob: -4.642629146575928
    6. ':' → logprob: -6.142629146575928
    7. '   ' → logprob: -6.267629146575928
    8. 'W' → logprob: -8.267629623413086
    9. ',' → logprob: -9.017629623413086
    10. '           ' → logprob: -9.142629623413086

Token 572: 'nw' (ID: 85546)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07041352242231369
    2. ' W' → logprob: -2.695413589477539
    3. 'nw' → logprob: -8.570413589477539
    4. '   ' → logprob: -9.320413589477539
    5. 'w' → logprob: -9.695413589477539
    6. ' nw' → logprob: -9.945413589477539
    7. ' ==' → logprob: -10.695413589477539
    8. '==' → logprob: -10.945413589477539
    9. '>=' → logprob: -11.320413589477539
    10. '=W' → logprob: -11.445413589477539

Token 573: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23619389533996582
    2. '==' → logprob: -1.8611938953399658
    3. ' >=' → logprob: -3.361193895339966
    4. '>=' → logprob: -4.736193656921387
    5. ' >' → logprob: -4.861193656921387
    6. '>' → logprob: -5.611193656921387
    7. ')' → logprob: -12.111193656921387
    8. ' ' → logprob: -12.361193656921387
    9. '   ' → logprob: -12.986193656921387
    10. '```' → logprob: -12.986193656921387

Token 574: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.000553151941858232
    2. ' W' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.125553131103516
    4. '	W' → logprob: -16.750553131103516
    5. ')' → logprob: -18.500553131103516
    6. '  ' → logprob: -18.875553131103516
    7. ' ' → logprob: -19.625553131103516
    8. '```' → logprob: -19.625553131103516
    9. '
' → logprob: -19.750553131103516
    10. '<|end|>' → logprob: -20.000553131103516

Token 575: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04384566470980644
    2. '):
' → logprob: -3.2938456535339355
    3. '):

' → logprob: -5.7938456535339355
    4. ':' → logprob: -6.7938456535339355
    5. '),' → logprob: -6.7938456535339355
    6. ')' → logprob: -7.7938456535339355
    7. '   ' → logprob: -10.293846130371094
    8. '#' → logprob: -11.043846130371094
    9. '):
' → logprob: -11.418846130371094
    10. '```' → logprob: -12.293846130371094

Token 576: ' on' (ID: 402)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.6134476661682129
    2. '   ' → logprob: -1.488447666168213
    3. 'nh' → logprob: -1.863447666168213
    4. 'if' → logprob: -3.988447666168213
    5. ' nh' → logprob: -4.363447666168213
    6. ' nw' → logprob: -4.613447666168213
    7. ' if' → logprob: -4.988447666168213
    8. '       ' → logprob: -4.988447666168213
    9. '           ' → logprob: -5.363447666168213
    10. '    ' → logprob: -5.363447666168213

Token 577: ' descend' (ID: 47877)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5286275744438171
    2. 'nh' → logprob: -2.153627634048462
    3. '#' → logprob: -2.903627634048462
    4. ' nh' → logprob: -3.028627634048462
    5. '           ' → logprob: -3.278627634048462
    6. '
' → logprob: -3.778627634048462
    7. '       ' → logprob: -4.153627395629883
    8. '   ' → logprob: -4.278627395629883
    9. ':
' → logprob: -4.278627395629883
    10. ' continue' → logprob: -4.278627395629883

Token 578: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03202851489186287
    2. 'de' → logprob: -4.282028675079346
    3. '               ' → logprob: -5.157028675079346
    4. 'd' → logprob: -6.282028675079346
    5. 'au' → logprob: -6.282028675079346
    6. ' de' → logprob: -6.657028675079346
    7. 'à' → logprob: -6.782028675079346
    8. 'en' → logprob: -7.032028675079346
    9. 'une' → logprob: -7.157028675079346
    10. '   ' → logprob: -7.407028675079346

Token 579: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.00395551323890686
    2. 'l' → logprob: -6.378955364227295
    3. 'une' → logprob: -6.503955364227295
    4. ' la' → logprob: -7.378955364227295
    5. 'ligne' → logprob: -9.253955841064453
    6. '   ' → logprob: -12.253955841064453
    7. 'the' → logprob: -12.503955841064453
    8. ' ' → logprob: -12.753955841064453
    9. 'next' → logprob: -12.753955841064453
    10. 'n' → logprob: -12.878955841064453

Token 580: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0009384971344843507
    2. ' ligne' → logprob: -7.500938415527344
    3. 'l' → logprob: -8.500938415527344
    4. 'lig' → logprob: -9.625938415527344
    5. '   ' → logprob: -10.500938415527344
    6. 'next' → logprob: -10.875938415527344
    7. '#' → logprob: -11.500938415527344
    8. ' ' → logprob: -11.500938415527344
    9. '
' → logprob: -11.875938415527344
    10. '\n' → logprob: -12.000938415527344

Token 581: ' suivante' (ID: 107439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838959813117981
    2. '+' → logprob: -1.7088959217071533
    3. 'nh' → logprob: -1.8338959217071533
    4. ' suivante' → logprob: -2.4588959217071533
    5. '       ' → logprob: -5.458896160125732
    6. ' nh' → logprob: -5.583896160125732
    7. '\n' → logprob: -6.083896160125732
    8. ' +' → logprob: -6.333896160125732
    9. '1' → logprob: -6.958896160125732
    10. '+=' → logprob: -7.958896160125732

Token 582: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03856178745627403
    2. ',' → logprob: -4.038561820983887
    3. '       ' → logprob: -4.788561820983887
    4. ' and' → logprob: -5.288561820983887
    5. ' (' → logprob: -6.288561820983887
    6. '               ' → logprob: -6.413561820983887
    7. '\n' → logprob: -7.288561820983887
    8. 'and' → logprob: -7.663561820983887
    9. '   ' → logprob: -7.788561820983887
    10. '<|end|>' → logprob: -8.038561820983887

Token 583: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.013555461540818214
    2. ' nh' → logprob: -4.388555526733398
    3. '   ' → logprob: -7.013555526733398
    4. '\n' → logprob: -9.763555526733398
    5. '```' → logprob: -10.263555526733398
    6. 'n' → logprob: -11.013555526733398
    7. '
' → logprob: -11.138555526733398
    8. '           ' → logprob: -12.013555526733398
    9. 'NH' → logprob: -12.888555526733398
    10. ')' → logprob: -13.388555526733398

Token 584: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5257897973060608
    2. ' +=' → logprob: -0.9007897973060608
    3. '+' → logprob: -6.025789737701416
    4. '   ' → logprob: -9.400790214538574
    5. '=' → logprob: -9.775790214538574
    6. ')' → logprob: -10.025790214538574
    7. ']+=' → logprob: -10.650790214538574
    8. ' +' → logprob: -11.025790214538574
    9. '           ' → logprob: -11.400790214538574
    10. '```' → logprob: -12.650790214538574

Token 585: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031977968756109476
    2. ' ' → logprob: -5.75319766998291
    3. '   ' → logprob: -10.87819766998291
    4. '```' → logprob: -14.87819766998291
    5. '           ' → logprob: -15.37819766998291
    6. '+' → logprob: -16.128198623657227
    7. '       ' → logprob: -16.253198623657227
    8. '  ' → logprob: -16.378198623657227
    9. '<|end|>' → logprob: -16.503198623657227
    10. ' ' → logprob: -16.628198623657227

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.250001907348633
    4. '```' → logprob: -20.125001907348633
    5. '+' → logprob: -20.500001907348633
    6. ')' → logprob: -21.125001907348633
    7. '
' → logprob: -21.375001907348633
    8. '       ' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '           ' → logprob: -21.750001907348633

Token 587: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23503625392913818
    2. '           ' → logprob: -1.6100362539291382
    3. ',' → logprob: -5.610036373138428
    4. '),' → logprob: -5.860036373138428
    5. ')
' → logprob: -6.235036373138428
    6. ' and' → logprob: -7.985036373138428
    7. ';' → logprob: -8.36003589630127
    8. 'and' → logprob: -8.86003589630127
    9. '               ' → logprob: -9.36003589630127
    10. '<|end|>' → logprob: -9.36003589630127

Token 588: ' 
' (ID: 793)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.4429222047328949
    2. ' nw' → logprob: -1.0679222345352173
    3. '           ' → logprob: -4.317922115325928
    4. '   ' → logprob: -7.567922115325928
    5. 'n' → logprob: -9.192922592163086
    6. '       ' → logprob: -9.442922592163086
    7. ' nws' → logprob: -10.692922592163086
    8. '               ' → logprob: -11.442922592163086
    9. ' ' → logprob: -11.817922592163086
    10. '    ' → logprob: -11.942922592163086

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06909050792455673
    2. ' nw' → logprob: -3.3190906047821045
    3. 'nw' → logprob: -3.5690906047821045
    4. '       ' → logprob: -6.569090366363525
    5. ' if' → logprob: -8.194090843200684
    6. ' and' → logprob: -8.444090843200684
    7. 'if' → logprob: -8.444090843200684
    8. '   ' → logprob: -9.194090843200684
    9. 'n' → logprob: -9.569090843200684
    10. 'and' → logprob: -10.694090843200684

Token 590: ' #' (ID: 1069)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.13016101717948914
    2. '           ' → logprob: -2.6301610469818115
    3. ' nw' → logprob: -3.0051610469818115
    4. 'if' → logprob: -8.75516128540039
    5. 'n' → logprob: -9.63016128540039
    6. '   ' → logprob: -9.63016128540039
    7. '#' (adapté à ' #') → logprob: -10.13016128540039
    8. '       ' → logprob: -10.38016128540039
    9. ' and' → logprob: -11.00516128540039
    10. '            ' → logprob: -11.00516128540039

Token 591: ' et' (ID: 859)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.004552354104816914
    2. '           ' → logprob: -5.504552364349365
    3. ' nw' → logprob: -7.879552364349365
    4. '#' → logprob: -10.004551887512207
    5. 'n' → logprob: -10.254551887512207
    6. 'if' → logprob: -11.754551887512207
    7. '   ' → logprob: -13.004551887512207
    8. '       ' → logprob: -13.129551887512207
    9. '               ' → logprob: -13.129551887512207
    10. '#w' → logprob: -16.254552841186523

Token 592: ' on' (ID: 402)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.003366288496181369
    2. ' nw' → logprob: -5.753366470336914
    3. '   ' → logprob: -9.503366470336914
    4. '#' → logprob: -9.878366470336914
    5. '           ' → logprob: -11.003366470336914
    6. 'break' → logprob: -11.128366470336914
    7. 'n' → logprob: -11.503366470336914
    8. '       ' → logprob: -11.628366470336914
    9. 'w' → logprob: -13.128366470336914
    10. '    ' → logprob: -13.378366470336914

Token 593: ' place' (ID: 2475)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.07214167714118958
    2. '=' → logprob: -3.197141647338867
    3. ' nw' → logprob: -3.947141647338867
    4. 'n' → logprob: -5.447141647338867
    5. 'w' → logprob: -6.322141647338867
    6. '#' → logprob: -6.697141647338867
    7. 'break' → logprob: -6.947141647338867
    8. '0' → logprob: -8.697141647338867
    9. 'continue' → logprob: -8.697141647338867
    10. '#w' → logprob: -8.822141647338867

Token 594: ' le' (ID: 505)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.02327960729598999
    2. ' nw' → logprob: -3.7732796669006348
    3. '   ' → logprob: -10.898279190063477
    4. 'n' → logprob: -12.273279190063477
    5. '           ' → logprob: -13.023279190063477
    6. 'nl' → logprob: -13.523279190063477
    7. '       ' → logprob: -13.648279190063477
    8. '    ' → logprob: -14.273279190063477
    9. '=' → logprob: -14.523279190063477
    10. ' ' → logprob: -14.523279190063477

Token 595: ' poin' (ID: 37259)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.0002390594017924741
    2. ' nw' → logprob: -8.500239372253418
    3. 'n' → logprob: -11.375239372253418
    4. 'w' → logprob: -11.625239372253418
    5. '   ' → logprob: -12.375239372253418
    6. '0' → logprob: -13.250239372253418
    7. ' ' → logprob: -13.625239372253418
    8. '#' → logprob: -13.625239372253418
    9. 'nd' → logprob: -14.250239372253418
    10. '=' → logprob: -14.250239372253418

Token 596: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.013891392387449741
    2. 'ter' → logprob: -4.513891220092773
    3. 't' → logprob: -6.513891220092773
    4. 'n' → logprob: -7.263891220092773
    5. 'nw' → logprob: -7.888891220092773
    6. 'trer' → logprob: -9.513891220092773
    7. 'te' → logprob: -9.638891220092773
    8. 'tre' → logprob: -10.763891220092773
    9. '   ' → logprob: -10.763891220092773
    10. 'nt' → logprob: -10.763891220092773

Token 597: ' à' (ID: 1221)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.003690097713842988
    2. ' nw' → logprob: -5.628690242767334
    3. ' à' → logprob: -9.878689765930176
    4. 'au' → logprob: -11.503689765930176
    5. '0' → logprob: -12.253689765930176
    6. ' ' → logprob: -12.253689765930176
    7. ' at' → logprob: -12.503689765930176
    8. 'à' → logprob: -12.628689765930176
    9. 'nl' → logprob: -12.878689765930176
    10. '=' → logprob: -13.128689765930176

Token 598: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01931149885058403
    2. ' ' → logprob: -4.519311428070068
    3. 'nw' → logprob: -5.019311428070068
    4. 'w' → logprob: -7.644311428070068
    5. 'W' → logprob: -7.644311428070068
    6. ' nw' → logprob: -8.144311904907227
    7. 'col' → logprob: -9.144311904907227
    8. ' W' → logprob: -9.394311904907227
    9. '   ' → logprob: -10.269311904907227
    10. 'la' → logprob: -10.519311904907227

Token 599: ' dernière' (ID: 39497)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06830531358718872
    2. 'col' → logprob: -2.943305253982544
    3. 'dern' → logprob: -5.193305492401123
    4. 'W' → logprob: -6.443305492401123
    5. 'prem' → logprob: -6.818305492401123
    6. 'nw' → logprob: -7.068305492401123
    7. ' ' → logprob: -7.318305492401123
    8. 'w' → logprob: -7.318305492401123
    9. 'last' → logprob: -7.443305492401123
    10. 'dé' → logprob: -7.693305492401123

Token 600: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.003306516446173191
    2. ' colonne' → logprob: -6.0033063888549805
    3. 'column' → logprob: -7.7533063888549805
    4. ' col' → logprob: -8.87830638885498
    5. '   ' → logprob: -9.25330638885498
    6. 'w' → logprob: -10.00330638885498
    7. 'W' → logprob: -10.12830638885498
    8. 'case' → logprob: -10.37830638885498
    9. 'colon' → logprob: -10.75330638885498
    10. 'colm' → logprob: -11.50330638885498

Token 601: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.011156678199768
    2. ' =' → logprob: -1.636156678199768
    3. '-' → logprob: -1.761156678199768
    4. ' (' → logprob: -2.5111565589904785
    5. '(W' → logprob: -2.8861565589904785
    6. ',' → logprob: -3.2611565589904785
    7. ' -' → logprob: -3.7611565589904785
    8. '           ' → logprob: -3.8861565589904785
    9. 'nw' → logprob: -4.2611565589904785
    10. ' -=' → logprob: -4.3861565589904785

Token 602: ' droite' (ID: 61428)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.016250429674983025
    2. ' W' → logprob: -4.1412506103515625
    3. '   ' → logprob: -9.391250610351562
    4. 'w' → logprob: -9.891250610351562
    5. '#' → logprob: -10.766250610351562
    6. ' ' → logprob: -11.516250610351562
    7. '(W' → logprob: -12.016250610351562
    8. '	W' → logprob: -12.141250610351562
    9. '<W' → logprob: -12.641250610351562
    10. '```' → logprob: -12.641250610351562

Token 603: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19115839898586273
    2. 'nw' → logprob: -2.0661582946777344
    3. ' nw' → logprob: -3.5661582946777344
    4. ',' → logprob: -4.816158294677734
    5. '=' → logprob: -6.191158294677734
    6. '       ' → logprob: -6.316158294677734
    7. ' =' → logprob: -6.691158294677734
    8. '               ' → logprob: -6.816158294677734
    9. 'w' → logprob: -6.816158294677734
    10. ' (' → logprob: -6.816158294677734

Token 604: 'nw' (ID: 85546)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00017445837147533894
    2. ' W' → logprob: -9.250174522399902
    3. '   ' → logprob: -10.375174522399902
    4. 'w' → logprob: -10.500174522399902
    5. 'nw' → logprob: -11.125174522399902
    6. ')' → logprob: -14.125174522399902
    7. '	W' → logprob: -14.250174522399902
    8. '           ' → logprob: -14.250174522399902
    9. '       ' → logprob: -14.500174522399902
    10. '  ' → logprob: -14.625174522399902

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006728872191160917
    2. ' =' → logprob: -5.006728649139404
    3. '-=' → logprob: -11.631729125976562
    4. '==' → logprob: -13.006729125976562
    5. ' -=' → logprob: -13.756729125976562
    6. '-' → logprob: -15.006729125976562
    7. '   ' → logprob: -15.131729125976562
    8. ' ==' → logprob: -15.881729125976562
    9. '+=' → logprob: -15.881729125976562
    10. '=
' → logprob: -16.381729125976562

Token 606: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -4.620622712536715e-05
    2. ' W' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.125045776367188
    4. ')' → logprob: -17.125045776367188
    5. 'w' → logprob: -17.375045776367188
    6. '	W' → logprob: -17.375045776367188
    7. '```' → logprob: -18.250045776367188
    8. '(W' → logprob: -18.625045776367188
    9. '=W' → logprob: -18.875045776367188
    10. ' ' → logprob: -19.000045776367188

Token 607: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10020969063043594
    2. ' -' → logprob: -2.3502097129821777
    3. ')' → logprob: -13.97520923614502
    4. '   ' → logprob: -14.60020923614502
    5. '1' → logprob: -14.72520923614502
    6. ' ' → logprob: -15.10020923614502
    7. '```' → logprob: -15.22520923614502
    8. 'minus' → logprob: -15.47520923614502
    9. '−' → logprob: -15.85020923614502
    10. ')-' → logprob: -16.100210189819336

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '```' → logprob: -14.750004768371582
    5. '2' → logprob: -15.875004768371582
    6. ')' → logprob: -16.5000057220459
    7. '-' → logprob: -18.3125057220459
    8. '<|end|>' → logprob: -18.5625057220459
    9. '`' → logprob: -18.8750057220459
    10. '...' → logprob: -19.0625057220459

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033775825053453445
    2. ')
' → logprob: -3.408775806427002
    3. '           ' → logprob: -9.40877628326416
    4. '       ' → logprob: -11.15877628326416
    5. '   ' → logprob: -11.78377628326416
    6. '):
' → logprob: -11.90877628326416
    7. ')

' → logprob: -11.90877628326416
    8. ')
' → logprob: -13.15877628326416
    9. '               ' → logprob: -13.28377628326416
    10. '```' → logprob: -13.28377628326416

Token 610: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03395802527666092
    2. '       ' → logprob: -3.9089579582214355
    3. 'if' → logprob: -4.7839579582214355
    4. ' if' → logprob: -5.5339579582214355
    5. '
' → logprob: -7.5339579582214355
    6. '            
' → logprob: -8.908958435058594
    7. '```' → logprob: -9.533958435058594
    8. '        
' → logprob: -9.658958435058594
    9. '               ' → logprob: -9.783958435058594
    10. '   ' → logprob: -10.158958435058594

Token 611: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002148238942027092
    2. '       ' → logprob: -6.752148151397705
    3. '           ' → logprob: -7.002148151397705
    4. ' if' → logprob: -9.627148628234863
    5. '   ' → logprob: -13.502148628234863
    6. 'elif' → logprob: -16.502147674560547
    7. 'while' → logprob: -16.627147674560547
    8. '```' → logprob: -17.127147674560547
    9. '               ' → logprob: -17.502147674560547
    10. '	if' → logprob: -17.877147674560547

Token 612: ' nw' (ID: 45462)
  Prédit: ' nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.16027651727199554
    2. 'nw' → logprob: -1.9102765321731567
    3. '   ' → logprob: -10.160276412963867
    4. 'n' → logprob: -11.785276412963867
    5. ' nws' → logprob: -13.410276412963867
    6. '    ' → logprob: -14.035276412963867
    7. '	n' → logprob: -14.035276412963867
    8. ' ' → logprob: -14.160276412963867
    9. '  ' → logprob: -14.285276412963867
    10. '(n' → logprob: -15.035276412963867

Token 613: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132767677307129
    2. '==' → logprob: -1.313276767730713
    3. '>=' → logprob: -11.563276290893555
    4. ' >=' → logprob: -12.313276290893555
    5. '=' → logprob: -15.313276290893555
    6. ')==' → logprob: -15.938276290893555
    7. '()==' → logprob: -16.563276290893555
    8. ']==' → logprob: -16.563276290893555
    9. '==
' → logprob: -16.563276290893555
    10. ' ' → logprob: -16.688276290893555

Token 614: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.5759450793266296
    2. ' W' → logprob: -0.8259450793266296
    3. '	W' → logprob: -12.825944900512695
    4. '   ' → logprob: -12.950944900512695
    5. ' ' → logprob: -15.200944900512695
    6. '  ' → logprob: -15.700944900512695
    7. '<|end|>' → logprob: -16.200944900512695
    8. '=W' → logprob: -17.075944900512695
    9. '    ' → logprob: -17.575944900512695
    10. '<W' → logprob: -17.950944900512695

Token 615: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2812367379665375
    2. ':
' → logprob: -1.4062367677688599
    3. '       ' → logprob: -9.90623664855957
    4. '):
' → logprob: -11.65623664855957
    5. ':

' → logprob: -11.78123664855957
    6. '   ' → logprob: -12.28123664855957
    7. ':
' → logprob: -12.65623664855957
    8. '<|end|>' → logprob: -12.90623664855957
    9. '):' → logprob: -13.15623664855957
    10. '           ' → logprob: -13.28123664855957

Token 616: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20857737958431244
    2. '       ' → logprob: -1.8335773944854736
    3. 'nh' → logprob: -4.0835771560668945
    4. '           ' → logprob: -4.8335771560668945
    5. ' nh' → logprob: -5.8335771560668945
    6. '   ' → logprob: -8.458577156066895
    7. ',' → logprob: -9.208577156066895
    8. 'n' → logprob: -9.583577156066895
    9. '\n' → logprob: -9.583577156066895
    10. '```' → logprob: -10.583577156066895

Token 617: ' nh' (ID: 5467)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' (adapté à ' nh') → logprob: -0.12589049339294434
    2. ' nh' → logprob: -2.3758904933929443
    3. '               ' → logprob: -3.8758904933929443
    4. 'nw' → logprob: -5.625890731811523
    5. '           ' → logprob: -7.250890731811523
    6. '       ' → logprob: -9.250890731811523
    7. ' nw' → logprob: -9.750890731811523
    8. '   ' → logprob: -10.250890731811523
    9. 'n' → logprob: -10.375890731811523
    10. ' ' → logprob: -11.125890731811523

Token 618: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10020915418863297
    2. ' +=' → logprob: -2.3502092361450195
    3. '=' → logprob: -13.85020923614502
    4. '+' → logprob: -13.97520923614502
    5. ']+=' → logprob: -14.60020923614502
    6. '   ' → logprob: -15.72520923614502
    7. '```' → logprob: -18.725208282470703
    8. ' =' → logprob: -18.850208282470703
    9. '    ' → logprob: -19.350208282470703
    10. '+='' → logprob: -19.350208282470703

Token 619: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -16.875
    4. '           ' → logprob: -21.625
    5. '```' → logprob: -21.625
    6. '       ' → logprob: -22.125
    7. '１' → logprob: -22.625
    8. '۱' → logprob: -23.0
    9. '<|end|>' → logprob: -23.125
    10. '0' → logprob: -23.125

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.5
    3. '<|end|>' → logprob: -16.75
    4. '   ' → logprob: -18.625
    5. '```' → logprob: -20.375
    6. '0' → logprob: -20.875
    7. '<|end|>' → logprob: -21.625
    8. '۱' → logprob: -21.75
    9. '１' → logprob: -22.125
    10. '১' → logprob: -22.6875

Token 621: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004073651507496834
    2. '<|end|>' → logprob: -6.004073619842529
    3. '
' → logprob: -7.004073619842529
    4. '           ' → logprob: -8.004074096679688
    5. '       ' → logprob: -9.254074096679688
    6. 'n' → logprob: -9.629074096679688
    7. '			' → logprob: -9.879074096679688
    8. '   ' → logprob: -10.754074096679688
    9. '<|end|>' → logprob: -10.754074096679688
    10. '                   ' → logprob: -11.004074096679688

Token 622: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027133891358971596
    2. 'nw' → logprob: -3.6521339416503906
    3. 'n' → logprob: -7.902133941650391
    4. '           ' → logprob: -9.02713394165039
    5. ' nw' → logprob: -9.15213394165039
    6. '
' → logprob: -9.40213394165039
    7. '```' → logprob: -10.15213394165039
    8. '                   ' → logprob: -10.52713394165039
    9. 'w' → logprob: -11.02713394165039
    10. '			' → logprob: -11.27713394165039

Token 623: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -7.465036105713807e-06
    2. ' nw' → logprob: -12.375007629394531
    3. '               ' → logprob: -13.125007629394531
    4. 'w' → logprob: -14.000007629394531
    5. '           ' → logprob: -15.875007629394531
    6. 'n' → logprob: -16.00000762939453
    7. 'wn' → logprob: -17.25000762939453
    8. '   ' → logprob: -17.37500762939453
    9. '                   ' → logprob: -18.12500762939453
    10. '       ' → logprob: -18.50000762939453

Token 624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015067668864503503
    2. ' =' → logprob: -6.501506805419922
    3. '-=' → logprob: -12.376506805419922
    4. '＝' → logprob: -16.751506805419922
    5. '.=' → logprob: -17.626506805419922
    6. '=}' → logprob: -18.001506805419922
    7. '+=' → logprob: -18.251506805419922
    8. ' -=' → logprob: -18.376506805419922
    9. '==' → logprob: -18.626506805419922
    10. '<|end|>' → logprob: -18.876506805419922

Token 625: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.700132997939363e-05
    2. ' W' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.625017166137695
    4. '	W' → logprob: -17.125017166137695
    5. '(W' → logprob: -17.125017166137695
    6. '0' → logprob: -18.000017166137695
    7. '<W' → logprob: -18.625017166137695
    8. '               ' → logprob: -18.750017166137695
    9. '=W' → logprob: -19.125017166137695
    10. '                   ' → logprob: -19.250017166137695

Token 626: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.493430894101039e-05
    2. ' -' → logprob: -9.500075340270996
    3. '1' → logprob: -18.00007438659668
    4. '−' → logprob: -18.50007438659668
    5. '–' → logprob: -18.50007438659668
    6. '-=' → logprob: -18.75007438659668
    7. '()-' → logprob: -18.87507438659668
    8. '   ' → logprob: -18.87507438659668
    9. '[' → logprob: -19.12507438659668
    10. 'minus' → logprob: -19.12507438659668

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '2' → logprob: -13.000001907348633
    3. '```' → logprob: -17.375001907348633
    4. '-' → logprob: -18.000001907348633
    5. ' ' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '0' → logprob: -20.250001907348633
    8. '۱' → logprob: -21.562501907348633
    9. '``' → logprob: -21.562501907348633
    10. '<|end|>' → logprob: -21.750001907348633

Token 628: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09099467843770981
    2. '<|end|>' → logprob: -2.5909945964813232
    3. ')' → logprob: -5.840994834899902
    4. '           ' → logprob: -6.090994834899902
    5. '               ' → logprob: -6.465994834899902
    6. '<|end|>' → logprob: -6.590994834899902
    7. '
' → logprob: -7.090994834899902
    8. '\n' → logprob: -7.465994834899902
    9. '   ' → logprob: -7.715994834899902
    10. '        
' → logprob: -8.090994834899902

Token 629: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8196079730987549
    2. '       ' → logprob: -1.4446079730987549
    3. '   ' → logprob: -1.9446079730987549
    4. ' if' → logprob: -2.944607973098755
    5. 'elif' → logprob: -3.319607973098755
    6. ')' → logprob: -3.444607973098755
    7. 'else' → logprob: -3.944607973098755
    8. '\n' → logprob: -4.944607734680176
    9. '           ' → logprob: -5.194607734680176
    10. ':' → logprob: -5.319607734680176

Token 630: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08188460022211075
    2. 'else' (adapté à ' else') → logprob: -2.5818846225738525
    3. 'elif' → logprob: -6.581884384155273
    4. ' else' → logprob: -6.706884384155273
    5. '   ' → logprob: -8.831884384155273
    6. '```' → logprob: -9.456884384155273
    7. '           ' → logprob: -9.581884384155273
    8. 'continue' → logprob: -10.206884384155273
    9. '        
' → logprob: -10.831884384155273
    10. ' elif' → logprob: -11.581884384155273

Token 631: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9179250001907349
    2. ':
' → logprob: -0.9179250001907349
    3. ':' → logprob: -1.6679250001907349
    4. '       ' → logprob: -4.417924880981445
    5. '   ' → logprob: -8.167924880981445
    6. '```' → logprob: -9.667924880981445
    7. '#' → logprob: -9.917924880981445
    8. '{' → logprob: -10.292924880981445
    9. '          ' → logprob: -10.417924880981445
    10. '):
' → logprob: -10.667924880981445

Token 632: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01813027821481228
    2. '       ' → logprob: -4.268130302429199
    3. 'nw' → logprob: -5.893130302429199
    4. '   ' → logprob: -7.143130302429199
    5. '#' → logprob: -8.8931303024292
    6. ' nw' → logprob: -9.0181303024292
    7. 'n' → logprob: -9.7681303024292
    8. '```' → logprob: -10.1431303024292
    9. '		' → logprob: -10.5181303024292
    10. '               ' → logprob: -11.8931303024292

Token 633: ' #' (ID: 1069)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.1340080201625824
    2. '           ' → logprob: -2.2590079307556152
    3. '       ' → logprob: -4.134007930755615
    4. ' nw' → logprob: -5.509007930755615
    5. '   ' → logprob: -7.884007930755615
    6. 'n' → logprob: -8.134008407592773
    7. '#' (adapté à ' #') → logprob: -9.134008407592773
    8. '	n' → logprob: -10.384008407592773
    9. '               ' → logprob: -10.634008407592773
    10. '
' → logprob: -11.259008407592773

Token 634: ' Si' (ID: 7832)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.0023736311122775078
    2. ' nw' → logprob: -6.752373695373535
    3. '           ' → logprob: -6.877373695373535
    4. '       ' → logprob: -9.627373695373535
    5. '#' → logprob: -9.627373695373535
    6. 'n' → logprob: -11.127373695373535
    7. 'if' → logprob: -11.252373695373535
    8. '   ' → logprob: -11.752373695373535
    9. '```' → logprob: -14.002373695373535
    10. '               ' → logprob: -14.252373695373535

Token 635: ' on' (ID: 402)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.20178119838237762
    2. 'nw' → logprob: -1.701781153678894
    3. '   ' → logprob: -8.576781272888184
    4. ' nh' → logprob: -9.076781272888184
    5. ' ' → logprob: -10.451781272888184
    6. '0' → logprob: -11.701781272888184
    7. 'n' → logprob: -12.451781272888184
    8. '  ' → logprob: -12.951781272888184
    9. 'nh' → logprob: -13.201781272888184
    10. '       ' → logprob: -13.201781272888184

Token 636: ' est' (ID: 893)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.1071576401591301
    2. ' nw' → logprob: -2.3571577072143555
    3. '   ' → logprob: -5.6071577072143555
    4. 'else' → logprob: -6.8571577072143555
    5. '#' → logprob: -7.4821577072143555
    6. ' nh' → logprob: -7.7321577072143555
    7. 'n' → logprob: -7.9821577072143555
    8. 'nh' → logprob: -8.607157707214355
    9. ' ' → logprob: -9.232157707214355
    10. '       ' → logprob: -9.357157707214355

Token 637: ' sur' (ID: 1512)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.8134945034980774
    2. 'nw' → logprob: -1.4384944438934326
    3. '           ' → logprob: -2.1884944438934326
    4. 'sur' → logprob: -2.8134944438934326
    5. ' on' → logprob: -3.6884944438934326
    6. ' sur' → logprob: -3.6884944438934326
    7. '       ' → logprob: -3.8134944438934326
    8. '   ' → logprob: -3.9384944438934326
    9. 'on' → logprob: -4.438494682312012
    10. '0' → logprob: -4.563494682312012

Token 638: ' une' (ID: 2463)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.33602195978164673
    2. ' nw' → logprob: -1.336021900177002
    3. ' nh' → logprob: -5.086021900177002
    4. '   ' → logprob: -5.461021900177002
    5. 'nh' → logprob: -5.461021900177002
    6. '(n' → logprob: -6.711021900177002
    7. 'une' → logprob: -6.836021900177002
    8. 'ligne' → logprob: -7.086021900177002
    9. 'n' → logprob: -7.211021900177002
    10. ' la' → logprob: -7.211021900177002

Token 639: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6347296833992004
    2. 'col' → logprob: -1.1347296237945557
    3. ' ligne' → logprob: -2.2597296237945557
    4. ' colonne' → logprob: -4.134729862213135
    5. 'nw' → logprob: -4.509729862213135
    6. ' nw' → logprob: -5.259729862213135
    7. 'w' → logprob: -5.884729862213135
    8. ' col' → logprob: -6.259729862213135
    9. '   ' → logprob: -6.634729862213135
    10. ' ' → logprob: -7.009729862213135

Token 640: ' imp' (ID: 3282)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10669241100549698
    2. '+=' → logprob: -2.981692314147949
    3. ' -=' → logprob: -3.981692314147949
    4. '           ' → logprob: -4.356692314147949
    5. '   ' → logprob: -4.606692314147949
    6. ' >=' → logprob: -6.231692314147949
    7. '       ' → logprob: -6.356692314147949
    8. '==' → logprob: -6.981692314147949
    9. ' ==' → logprob: -7.106692314147949
    10. '>=' → logprob: -7.231692314147949

Token 641: 'aire' (ID: 8189)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8051545023918152
    2. '   ' → logprob: -1.30515456199646
    3. 'ar' → logprob: -2.18015456199646
    4. '       ' → logprob: -2.68015456199646
    5. '+' → logprob: -3.43015456199646
    6. 'n' → logprob: -4.305154323577881
    7. 'air' → logprob: -4.680154323577881
    8. '%' → logprob: -5.555154323577881
    9. '==' → logprob: -5.555154323577881
    10. '=' → logprob: -6.055154323577881

Token 642: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16509942710399628
    2. ':' → logprob: -2.0400993824005127
    3. ':
' → logprob: -3.9150993824005127
    4. ',' → logprob: -7.165099620819092
    5. ' (' → logprob: -7.540099620819092
    6. '               ' → logprob: -7.790099620819092
    7. ' :' → logprob: -8.915099143981934
    8. '   ' → logprob: -9.040099143981934
    9. '       ' → logprob: -9.415099143981934
    10. ' :
' → logprob: -10.415099143981934

Token 643: ' on' (ID: 402)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.7331874966621399
    2. '           ' → logprob: -1.2331874370574951
    3. 'nw' → logprob: -1.4831874370574951
    4. '   ' → logprob: -7.733187675476074
    5. '       ' → logprob: -8.233187675476074
    6. 'n' → logprob: -8.483187675476074
    7. '#' → logprob: -9.233187675476074
    8. '               ' → logprob: -9.483187675476074
    9. ' ' → logprob: -9.733187675476074
    10. ' ' → logprob: -10.483187675476074

Token 644: ' rec' (ID: 1369)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.040701307356357574
    2. '-=' → logprob: -3.415701389312744
    3. '   ' → logprob: -5.540701389312744
    4. ' nw' → logprob: -6.915701389312744
    5. 'nw' → logprob: -7.165701389312744
    6. ' +=' → logprob: -8.165700912475586
    7. ' ' → logprob: -8.540700912475586
    8. '    ' → logprob: -8.665700912475586
    9. ' ' → logprob: -9.165700912475586
    10. '     ' → logprob: -9.165700912475586

Token 645: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0016491144197061658
    2. 'ul' → logprob: -7.126648902893066
    3. 'uler' → logprob: -7.126648902893066
    4. 'ulo' → logprob: -11.501648902893066
    5. 'ulé' → logprob: -12.001648902893066
    6. 'ulate' → logprob: -12.251648902893066
    7. 'ula' → logprob: -12.376648902893066
    8. 'ules' → logprob: -12.626648902893066
    9. 'u' → logprob: -12.876648902893066
    10. 'cule' → logprob: -13.376648902893066

Token 646: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25587451457977295
    2. 'nw' → logprob: -2.1308746337890625
    3. ' nw' → logprob: -2.2558746337890625
    4. '(n' → logprob: -7.0058746337890625
    5. ' de' → logprob: -7.2558746337890625
    6. '   ' → logprob: -8.255874633789062
    7. '            ' → logprob: -9.255874633789062
    8. '               ' → logprob: -9.755874633789062
    9. '		' → logprob: -10.380874633789062
    10. '	n' → logprob: -10.380874633789062

Token 647: ' colonne' (ID: 148275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023050084710121155
    2. ' ' → logprob: -6.127305030822754
    3. 'nw' → logprob: -9.877305030822754
    4. 'col' → logprob: -10.127305030822754
    5. '   ' → logprob: -10.877305030822754
    6. ' ' → logprob: -12.502305030822754
    7. ' nw' → logprob: -13.252305030822754
    8. '```' → logprob: -13.377305030822754
    9. 'w' → logprob: -14.502305030822754
    10. '`' → logprob: -14.627305030822754

Token 648: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9495464563369751
    2. ' (' → logprob: -1.199546456336975
    3. '           ' → logprob: -1.449546456336975
    4. ' nw' → logprob: -3.3245463371276855
    5. 'nw' → logprob: -3.5745463371276855
    6. ' -=' → logprob: -4.8245463371276855
    7. ' -' → logprob: -6.3245463371276855
    8. '-' → logprob: -6.9495463371276855
    9. '(' → logprob: -7.4495463371276855
    10. '   ' → logprob: -7.9495463371276855

Token 649: 'nw' (ID: 85546)
  Prédit: 'nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.12693755328655243
    2. ' nw' → logprob: -2.1269376277923584
    3. '           ' → logprob: -11.626937866210938
    4. 'w' → logprob: -15.626937866210938
    5. 'n' → logprob: -15.626937866210938
    6. '1' → logprob: -16.126937866210938
    7. '               ' → logprob: -16.376937866210938
    8. '   ' → logprob: -17.376937866210938
    9. '       ' → logprob: -17.876937866210938
    10. '                   ' → logprob: -18.001937866210938

Token 650: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.4744771718978882
    2. ' -=' → logprob: -0.9744771718978882
    3. '+=' → logprob: -8.59947681427002
    4. '-' → logprob: -8.97447681427002
    5. '   ' → logprob: -9.97447681427002
    6. ' +=' → logprob: -10.97447681427002
    7. '=' → logprob: -11.59947681427002
    8. '    ' → logprob: -11.97447681427002
    9. '```' → logprob: -12.97447681427002
    10. ' ' → logprob: -13.09947681427002

Token 651: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364662081003189
    2. ' ' → logprob: -3.408646583557129
    3. ' ' → logprob: -14.658646583557129
    4. '   ' → logprob: -15.658646583557129
    5. '           ' → logprob: -16.033647537231445
    6. '```' → logprob: -16.158647537231445
    7. ')' → logprob: -18.096147537231445
    8. '0' → logprob: -18.096147537231445
    9. '                   ' → logprob: -18.158647537231445
    10. '
' → logprob: -18.283647537231445

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.1250057220459
    4. '   ' → logprob: -19.7500057220459
    5. '１' → logprob: -21.3750057220459
    6. '۱' → logprob: -21.3750057220459
    7. '=' → logprob: -21.8750057220459
    8. '           ' → logprob: -22.1250057220459
    9. ')' → logprob: -22.4375057220459
    10. '       ' → logprob: -22.5000057220459

Token 653: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014541632262989879
    2. '<|end|>' → logprob: -7.0014543533325195
    3. '           ' → logprob: -8.25145435333252
    4. ')
' → logprob: -9.00145435333252
    5. '       ' → logprob: -9.75145435333252
    6. '```' → logprob: -10.25145435333252
    7. ' )' → logprob: -11.00145435333252
    8. '<|end|>' → logprob: -11.00145435333252
    9. '')' → logprob: -12.12645435333252
    10. '               ' → logprob: -12.37645435333252

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06626471877098083
    2. 'nw' → logprob: -3.0662646293640137
    3. ' nw' → logprob: -4.691264629364014
    4. '               ' → logprob: -5.816264629364014
    5. '       ' → logprob: -5.941264629364014
    6. '```' → logprob: -7.191264629364014
    7. 'n' → logprob: -7.441264629364014
    8. '
' → logprob: -7.691264629364014
    9. '\n' → logprob: -8.066265106201172
    10. '<|end|>' → logprob: -8.316265106201172

Token 655: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -0.015482138842344284
    2. ' nw' → logprob: -4.265481948852539
    3. '           ' → logprob: -6.640481948852539
    4. 'n' → logprob: -12.515481948852539
    5. '       ' → logprob: -12.640481948852539
    6. '               ' → logprob: -13.515481948852539
    7. 'wn' → logprob: -14.140481948852539
    8. 'w' → logprob: -14.390481948852539
    9. '   ' → logprob: -14.640481948852539
    10. '```' → logprob: -14.890481948852539

Token 656: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.008739846758544445
    2. '-=' → logprob: -4.758739948272705
    3. ' +=' → logprob: -9.758739471435547
    4. '-' → logprob: -9.758739471435547
    5. '+=' → logprob: -12.758739471435547
    6. ' -' → logprob: -12.758739471435547
    7. '=' → logprob: -13.383739471435547
    8. ' ' → logprob: -14.258739471435547
    9. ' ' → logprob: -14.258739471435547
    10. '   ' → logprob: -15.008739471435547

Token 657: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.625625610351562
    4. '```' → logprob: -19.375625610351562
    5. ' ' → logprob: -19.875625610351562
    6. '0' → logprob: -20.375625610351562
    7. '=' → logprob: -20.750625610351562
    8. '１' → logprob: -21.000625610351562
    9. '۱' → logprob: -21.000625610351562
    10. '<|end|>' → logprob: -21.625625610351562

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '<|end|>' → logprob: -20.5
    4. '   ' → logprob: -21.375
    5. '```' → logprob: -22.0
    6. '           ' → logprob: -22.625
    7. '۱' → logprob: -22.75
    8. '=' → logprob: -22.875
    9. '１' → logprob: -23.125
    10. '       ' → logprob: -23.75

Token 659: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05514708533883095
    2. 'if' → logprob: -3.555147171020508
    3. '<|end|>' → logprob: -4.430147171020508
    4. ' if' → logprob: -5.055147171020508
    5. '```' → logprob: -5.555147171020508
    6. '
' → logprob: -6.430147171020508
    7. '   ' → logprob: -7.930147171020508
    8. '#' → logprob: -8.055147171020508
    9. '        
' → logprob: -8.430147171020508
    10. '           ' → logprob: -8.555147171020508

Token 660: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0181317999958992
    2. 'if' → logprob: -4.643131732940674
    3. '```' → logprob: -5.018131732940674
    4. ' if' → logprob: -6.893131732940674
    5. '
' → logprob: -7.518131732940674
    6. '        
' → logprob: -9.893132209777832
    7. '<|end|>' → logprob: -9.893132209777832
    8. '   ' → logprob: -10.518132209777832
    9. '#' → logprob: -11.143132209777832
    10. '``' → logprob: -11.393132209777832

Token 661: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015478298300877213
    2. '       ' → logprob: -6.501547813415527
    3. ' if' → logprob: -10.376547813415527
    4. '#' (adapté à ' #') → logprob: -11.376547813415527
    5. '```' → logprob: -13.501547813415527
    6. '           ' → logprob: -13.751547813415527
    7. 'continue' → logprob: -15.376547813415527
    8. '   ' → logprob: -15.876547813415527
    9. '	if' → logprob: -18.376548767089844
    10. 'If' → logprob: -18.876548767089844

Token 662: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.990154047845863e-05
    2. '#' → logprob: -10.750049591064453
    3. ' if' → logprob: -11.000049591064453
    4. '       ' → logprob: -11.500049591064453
    5. '           ' → logprob: -13.625049591064453
    6. 'If' → logprob: -15.250049591064453
    7. '```' → logprob: -16.250049591064453
    8. 'Si' → logprob: -17.750049591064453
    9. '   ' → logprob: -18.500049591064453
    10. '               ' → logprob: -19.500049591064453

Token 663: ' on' (ID: 402)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.8428891897201538
    2. 'nw' → logprob: -1.0928891897201538
    3. ' nh' → logprob: -1.4678891897201538
    4. 'nh' → logprob: -5.592889308929443
    5. 'n' → logprob: -9.592888832092285
    6. '(n' → logprob: -10.092888832092285
    7. ' nws' → logprob: -11.967888832092285
    8. '   ' → logprob: -12.092888832092285
    9. ' ' → logprob: -12.092888832092285
    10. ' ' → logprob: -12.217888832092285

Token 664: ' va' (ID: 3423)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.04146008938550949
    2. 'nh' → logprob: -3.5414600372314453
    3. ' nw' → logprob: -4.791460037231445
    4. ' nh' → logprob: -5.916460037231445
    5. '<' → logprob: -7.666460037231445
    6. '<n' → logprob: -9.541460037231445
    7. 'n' → logprob: -9.916460037231445
    8. '==' → logprob: -11.041460037231445
    9. ' <' → logprob: -11.791460037231445
    10. ' ==' → logprob: -12.166460037231445

Token 665: ' avant' (ID: 13339)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6823726892471313
    2. '<' → logprob: -0.8073726892471313
    3. ' <' → logprob: -3.682372570037842
    4. 'below' → logprob: -5.182372570037842
    5. '<n' → logprob: -5.307372570037842
    6. '==' → logprob: -5.807372570037842
    7. 'au' → logprob: -6.182372570037842
    8. ' en' → logprob: -6.182372570037842
    9. 'moins' → logprob: -6.557372570037842
    10. 'n' → logprob: -7.307372570037842

Token 666: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2540929913520813
    2. '0' → logprob: -1.5040929317474365
    3. 'col' → logprob: -6.629093170166016
    4. ' la' → logprob: -8.379093170166016
    5. 'le' → logprob: -8.379093170166016
    6. 'zero' → logprob: -9.504093170166016
    7. 'l' → logprob: -10.004093170166016
    8. 'de' → logprob: -10.129093170166016
    9. 'index' → logprob: -10.129093170166016
    10. 'ligne' → logprob: -10.504093170166016

Token 667: ' première' (ID: 23423)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005521650426089764
    2. 'col' → logprob: -5.880521774291992
    3. 'prem' → logprob: -6.255521774291992
    4. 'first' → logprob: -8.005521774291992
    5. 'ligne' → logprob: -8.005521774291992
    6. 'line' → logprob: -10.130521774291992
    7. 'begin' → logprob: -11.255521774291992
    8. 'dé' → logprob: -11.255521774291992
    9. 'column' → logprob: -11.755521774291992
    10. ' première' → logprob: -12.005521774291992

Token 668: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.1816558688879013
    2. ' colonne' → logprob: -1.8066558837890625
    3. ' col' → logprob: -6.6816558837890625
    4. 'column' → logprob: -8.181655883789062
    5. 'case' → logprob: -8.431655883789062
    6. '_col' → logprob: -9.931655883789062
    7. ' ' → logprob: -10.181655883789062
    8. ' case' → logprob: -11.056655883789062
    9. '   ' → logprob: -11.181655883789062
    10. '0' → logprob: -11.806655883789062

Token 669: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05923718586564064
    2. ' ==' → logprob: -3.184237241744995
    3. '(n' → logprob: -5.059237003326416
    4. '(' → logprob: -5.309237003326416
    5. '==' → logprob: -5.559237003326416
    6. ':' → logprob: -7.934237003326416
    7. '0' → logprob: -8.809237480163574
    8. ' =' → logprob: -9.559237480163574
    9. '(w' → logprob: -10.059237480163574
    10. '               ' → logprob: -10.184237480163574

Token 670: 'nw' (ID: 85546)
  Prédit: 'nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.010777794755995274
    2. '0' → logprob: -5.010777950286865
    3. ' nw' → logprob: -5.510777950286865
    4. ' ' → logprob: -12.260777473449707
    5. 'n' → logprob: -12.885777473449707
    6. '   ' → logprob: -13.135777473449707
    7. '1' → logprob: -15.385777473449707
    8. '       ' → logprob: -15.510777473449707
    9. '```' → logprob: -15.635777473449707
    10. '    ' → logprob: -15.885777473449707

Token 671: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.061527371406555176
    2. '==' → logprob: -2.9365272521972656
    3. ' <' → logprob: -5.811527252197266
    4. '<' → logprob: -5.936527252197266
    5. '==-' → logprob: -6.936527252197266
    6. '```' → logprob: -11.936527252197266
    7. ' ' → logprob: -12.311527252197266
    8. '<|end|>' → logprob: -13.561527252197266
    9. '=' → logprob: -13.936527252197266
    10. ' ' → logprob: -14.311527252197266

Token 672: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007107630372047424
    2. ' -' → logprob: -7.250710964202881
    3. '0' → logprob: -14.000710487365723
    4. ' ' → logprob: -19.12571144104004
    5. '   ' → logprob: -19.75071144104004
    6. '−' → logprob: -20.00071144104004
    7. '-w' → logprob: -21.75071144104004
    8. '```' → logprob: -22.25071144104004
    9. '-M' → logprob: -22.37571144104004
    10. '-m' → logprob: -22.37571144104004

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -17.375009536743164
    4. '   ' → logprob: -17.625009536743164
    5. '=' → logprob: -18.125009536743164
    6. ')' → logprob: -18.250009536743164
    7. '`' → logprob: -18.750009536743164
    8. '0' → logprob: -19.125009536743164
    9. '۱' → logprob: -19.250009536743164
    10. '``' → logprob: -19.375009536743164

Token 674: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03490636125206947
    2. '):' → logprob: -4.034906387329102
    3. '               ' → logprob: -4.284906387329102
    4. ':' → logprob: -6.284906387329102
    5. ':
' → logprob: -7.409906387329102
    6. '           ' → logprob: -8.784906387329102
    7. ')' → logprob: -9.784906387329102
    8. '),' → logprob: -10.034906387329102
    9. ',' → logprob: -10.409906387329102
    10. '):
' → logprob: -10.784906387329102

Token 675: ' on' (ID: 402)
  Prédit: ' nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.5062609910964966
    2. '               ' → logprob: -1.0062609910964966
    3. 'nh' → logprob: -3.506260871887207
    4. 'n' → logprob: -7.756260871887207
    5. '   ' → logprob: -8.381260871887207
    6. '```' → logprob: -8.381260871887207
    7. '           ' → logprob: -8.756260871887207
    8. 'break' → logprob: -8.756260871887207
    9. '       ' → logprob: -8.881260871887207
    10. '\n' → logprob: -9.131260871887207

Token 676: ' descend' (ID: 47877)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.8893781304359436
    2. 'break' → logprob: -1.2643780708312988
    3. ' nh' → logprob: -2.014378070831299
    4. ' break' → logprob: -2.764378070831299
    5. 'n' → logprob: -4.014378070831299
    6. '
' → logprob: -4.014378070831299
    7. '               ' → logprob: -4.139378070831299
    8. '       ' → logprob: -4.264378070831299
    9. '   ' → logprob: -4.389378070831299
    10. '```' → logprob: -4.389378070831299

Token 677: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5215042233467102
    2. '               ' → logprob: -1.3965041637420654
    3. ' à' → logprob: -2.5215041637420654
    4. 'à' → logprob: -3.6465041637420654
    5. '   ' → logprob: -4.5215044021606445
    6. 'nh' → logprob: -4.6465044021606445
    7. '```' → logprob: -5.0215044021606445
    8. '       ' → logprob: -5.1465044021606445
    9. ' nh' → logprob: -5.3965044021606445
    10. '=' → logprob: -6.1465044021606445

Token 678: ' la' (ID: 557)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.08151086419820786
    2. ' nh' → logprob: -2.5815107822418213
    3. '   ' → logprob: -6.8315110206604
    4. 'nl' → logprob: -8.081510543823242
    5. 'n' → logprob: -8.206510543823242
    6. '       ' → logprob: -8.331510543823242
    7. 'nd' → logprob: -8.456510543823242
    8. '```' → logprob: -9.081510543823242
    9. 'the' → logprob: -9.581510543823242
    10. '           ' → logprob: -9.831510543823242

Token 679: ' ligne' (ID: 19583)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.004656306933611631
    2. '1' → logprob: -6.3796563148498535
    3. 'ligne' → logprob: -6.3796563148498535
    4. 'line' → logprob: -7.6296563148498535
    5. '```' → logprob: -8.379655838012695
    6. 'nl' → logprob: -9.129655838012695
    7. ' nh' → logprob: -9.129655838012695
    8. 'next' → logprob: -9.879655838012695
    9. 'nd' → logprob: -10.004655838012695
    10. 'newline' → logprob: -10.004655838012695

Token 680: ' suivante' (ID: 107439)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3140561878681183
    2. ' suivante' → logprob: -1.814056158065796
    3. 'su' → logprob: -2.564056158065796
    4. '       ' → logprob: -4.439056396484375
    5. '+=' → logprob: -4.564056396484375
    6. ' +=' → logprob: -6.439056396484375
    7. 'plus' → logprob: -6.564056396484375
    8. '   ' → logprob: -6.814056396484375
    9. ' +' → logprob: -7.314056396484375
    10. '++' → logprob: -7.439056396484375

Token 681: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24333998560905457
    2. '               ' → logprob: -1.618340015411377
    3. '       ' → logprob: -4.368340015411377
    4. '```' → logprob: -5.743340015411377
    5. 'n' → logprob: -7.243340015411377
    6. ',' → logprob: -7.868340015411377
    7. ' and' → logprob: -8.493339538574219
    8. '   ' → logprob: -8.618339538574219
    9. '<|end|>' → logprob: -9.243339538574219
    10. '``' → logprob: -10.368339538574219

Token 682: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.04191413149237633
    2. ' nh' → logprob: -3.291914224624634
    3. '   ' → logprob: -6.416913986206055
    4. '           ' → logprob: -6.541913986206055
    5. '               ' → logprob: -8.416913986206055
    6. '       ' → logprob: -8.416913986206055
    7. 'n' → logprob: -8.666913986206055
    8. '```' → logprob: -9.791913986206055
    9. 'nj' → logprob: -10.166913986206055
    10. 'nd' → logprob: -10.791913986206055

Token 683: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38700756430625916
    2. '+=' → logprob: -1.1370075941085815
    3. '+' → logprob: -9.137007713317871
    4. '```' → logprob: -11.012007713317871
    5. ']+=' → logprob: -12.637007713317871
    6. ' +' → logprob: -12.762007713317871
    7. '   ' → logprob: -13.262007713317871
    8. '=' → logprob: -13.262007713317871
    9. ' ' → logprob: -14.887007713317871
    10. '==' → logprob: -15.012007713317871

Token 684: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005542247672565281
    2. ' ' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.500554084777832
    4. '```' → logprob: -14.500554084777832
    5. '+' → logprob: -16.00055503845215
    6. ')' → logprob: -16.75055503845215
    7. '           ' → logprob: -17.75055503845215
    8. ' ' → logprob: -17.75055503845215
    9. '`' → logprob: -18.25055503845215
    10. ' +' → logprob: -18.62555503845215

Token 685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '```' → logprob: -16.375017166137695
    5. '+' → logprob: -17.125017166137695
    6. ')' → logprob: -18.625017166137695
    7. '0' → logprob: -19.500017166137695
    8. '>' → logprob: -19.687517166137695
    9. '           ' → logprob: -19.875017166137695
    10. '`' → logprob: -20.125017166137695

Token 686: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05369581654667854
    2. '           ' → logprob: -3.9286959171295166
    3. ',' → logprob: -4.5536956787109375
    4. '```' → logprob: -5.0536956787109375
    5. ')' → logprob: -5.1786956787109375
    6. ' and' → logprob: -5.3036956787109375
    7. '<|end|>' → logprob: -5.6786956787109375
    8. ')
' → logprob: -7.9286956787109375
    9. 'and' → logprob: -8.178695678710938
    10. '):
' → logprob: -8.303695678710938

Token 687: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5833740830421448
    2. '               ' → logprob: -1.2083740234375
    3. '```' → logprob: -2.2083740234375
    4. ' and' → logprob: -4.0833740234375
    5. '       ' → logprob: -4.8333740234375
    6. ',' → logprob: -5.9583740234375
    7. ' if' → logprob: -6.2083740234375
    8. '<|end|>' → logprob: -6.4583740234375
    9. '   ' → logprob: -6.9583740234375
    10. 'n' → logprob: -7.5833740234375

Token 688: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7129268050193787
    2. 'if' → logprob: -1.5879268646240234
    3. ' if' → logprob: -1.5879268646240234
    4. '           ' → logprob: -2.4629268646240234
    5. 'n' → logprob: -4.962926864624023
    6. '       ' → logprob: -5.462926864624023
    7. ' nh' → logprob: -6.337926864624023
    8. '```' → logprob: -6.712926864624023
    9. 'nh' → logprob: -6.837926864624023
    10. 'nw' → logprob: -8.212926864624023

Token 689: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5833196043968201
    2. ' if' → logprob: -0.8333196043968201
    3. '       ' → logprob: -5.083319664001465
    4. '           ' → logprob: -7.333319664001465
    5. '               ' → logprob: -8.083319664001465
    6. 'n' → logprob: -9.708319664001465
    7. '```' → logprob: -9.833319664001465
    8. ' nh' → logprob: -10.333319664001465
    9. '<|end|>' → logprob: -11.208319664001465
    10. 'nh' → logprob: -12.083319664001465

Token 690: ' on' (ID: 402)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.004756683949381113
    2. ' nw' → logprob: -5.379756450653076
    3. 'break' → logprob: -9.754756927490234
    4. '           ' → logprob: -10.504756927490234
    5. 'n' → logprob: -11.004756927490234
    6. '       ' → logprob: -11.629756927490234
    7. '               ' → logprob: -11.754756927490234
    8. '```' → logprob: -12.379756927490234
    9. '   ' → logprob: -12.754756927490234
    10. ' break' → logprob: -13.254756927490234

Token 691: ' remet' (ID: 78375)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.10075693577528
    2. ' nw' → logprob: -3.225756883621216
    3. 'w' → logprob: -3.975756883621216
    4. '=' → logprob: -4.475757122039795
    5. 'n' → logprob: -4.600757122039795
    6. 'place' → logprob: -5.350757122039795
    7. 'wn' → logprob: -5.975757122039795
    8. 'ow' → logprob: -7.100757122039795
    9. 'nd' → logprob: -7.225757122039795
    10. ' =' → logprob: -7.225757122039795

Token 692: ' le' (ID: 505)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.011462387628853321
    2. ' nw' → logprob: -4.511462211608887
    3. '```' → logprob: -8.261462211608887
    4. '   ' → logprob: -9.136462211608887
    5. ' ' → logprob: -11.136462211608887
    6. '`' → logprob: -12.636462211608887
    7. 'nd' → logprob: -12.761462211608887
    8. 'w' → logprob: -12.761462211608887
    9. 'n' → logprob: -12.886462211608887
    10. '  ' → logprob: -13.011462211608887

Token 693: ' poin' (ID: 37259)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.0018808044260367751
    2. 'n' → logprob: -6.876880645751953
    3. ' nw' → logprob: -7.751880645751953
    4. 'w' → logprob: -8.251880645751953
    5. '```' → logprob: -10.001880645751953
    6. 'nd' → logprob: -10.501880645751953
    7. 'nh' → logprob: -11.251880645751953
    8. '0' → logprob: -11.376880645751953
    9. '_n' → logprob: -11.376880645751953
    10. 'nb' → logprob: -12.001880645751953

Token 694: 'teur' (ID: 45262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005939936731010675
    2. 'nt' → logprob: -5.255939960479736
    3. 'w' → logprob: -7.505939960479736
    4. 'inter' → logprob: -10.005939483642578
    5. 'int' → logprob: -10.255939483642578
    6. 'ter' → logprob: -10.880939483642578
    7. 'т' → logprob: -11.255939483642578
    8. '```' → logprob: -11.630939483642578
    9. '+' → logprob: -12.255939483642578
    10. 'teur' → logprob: -12.380939483642578

Token 695: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8932567834854126
    2. ' à' → logprob: -0.8932567834854126
    3. ' =' → logprob: -2.268256664276123
    4. 'nw' → logprob: -3.518256664276123
    5. 'à' → logprob: -3.768256664276123
    6. 'au' → logprob: -4.018256664276123
    7. ' au' → logprob: -6.143256664276123
    8. '   ' → logprob: -6.643256664276123
    9. '```' → logprob: -6.768256664276123
    10. ' nw' → logprob: -6.893256664276123

Token 696: ' début' (ID: 29589)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008666796493344009
    2. 'W' → logprob: -7.875866889953613
    3. '```' → logprob: -8.250866889953613
    4. 'nw' → logprob: -9.000866889953613
    5. 'w' → logprob: -10.250866889953613
    6. 'n' → logprob: -11.000866889953613
    7. ' ' → logprob: -11.625866889953613
    8. '1' → logprob: -11.875866889953613
    9. 'range' → logprob: -12.000866889953613
    10. 'ligne' → logprob: -12.125866889953613

Token 697: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.746293842792511
    2. 'de' → logprob: -0.996293842792511
    3. '=' → logprob: -3.121293783187866
    4. '           ' → logprob: -3.371293783187866
    5. '```' → logprob: -3.371293783187866
    6. ' =' → logprob: -3.871293783187866
    7. '+' → logprob: -4.746294021606445
    8. '               ' → logprob: -5.371294021606445
    9. '0' → logprob: -6.371294021606445
    10. '            ' → logprob: -6.496294021606445

Token 698: ' ligne' (ID: 19583)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.46359360218048096
    2. '0' → logprob: -1.463593602180481
    3. 'ligne' → logprob: -2.0885934829711914
    4. 'la' → logprob: -4.338593482971191
    5. 'line' → logprob: -7.463593482971191
    6. 'range' → logprob: -7.713593482971191
    7. '1' → logprob: -7.713593482971191
    8. ' ' → logprob: -7.963593482971191
    9. '```' → logprob: -8.088593482971191
    10. ' la' → logprob: -8.713593482971191

Token 699: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26747897267341614
    2. ' =' → logprob: -2.5174789428710938
    3. ' (' → logprob: -2.5174789428710938
    4. '=' → logprob: -3.6424789428710938
    5. ' nw' → logprob: -4.267478942871094
    6. 'nw' → logprob: -4.392478942871094
    7. '           ' → logprob: -4.517478942871094
    8. '```' → logprob: -5.767478942871094
    9. '(n' → logprob: -6.017478942871094
    10. '0' → logprob: -6.517478942871094

Token 700: 'nw' (ID: 85546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014225680381059647
    2. 'nw' → logprob: -4.264225482940674
    3. ' nw' → logprob: -10.014225959777832
    4. ' ' → logprob: -11.389225959777832
    5. '               ' → logprob: -13.264225959777832
    6. '           ' → logprob: -13.264225959777832
    7. '   ' → logprob: -14.389225959777832
    8. '```' → logprob: -14.764225959777832
    9. 'w' → logprob: -14.889225959777832
    10. ')' → logprob: -14.889225959777832

Token 701: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16062510013580322
    2. ' =' → logprob: -1.9106251001358032
    3. ' +=' → logprob: -8.410625457763672
    4. '+=' → logprob: -8.660625457763672
    5. '<|end|>' → logprob: -13.785625457763672
    6. '+' → logprob: -13.910625457763672
    7. '```' → logprob: -13.910625457763672
    8. ')' → logprob: -14.285625457763672
    9. '0' → logprob: -14.410625457763672
    10. ' ' → logprob: -15.035625457763672

Token 702: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.8750057220459
    4. '۰' → logprob: -19.1250057220459
    5. '00' → logprob: -20.7500057220459
    6. '1' → logprob: -21.2500057220459
    7. '```' → logprob: -21.2500057220459
    8. '=' → logprob: -21.6875057220459
    9. '  ' → logprob: -22.0000057220459
    10. '+' → logprob: -22.1250057220459

Token 703: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '00' → logprob: -18.375
    4. '۰' → logprob: -18.875
    5. '   ' → logprob: -19.0
    6. '```' → logprob: -19.5
    7. '<|end|>' → logprob: -19.625
    8. '1' → logprob: -20.125
    9. '000' → logprob: -20.25
    10. '০' → logprob: -21.0

Token 704: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03467436879873276
    2. ')
' → logprob: -3.4096744060516357
    3. '               ' → logprob: -7.659674167633057
    4. '):
' → logprob: -8.034674644470215
    5. '<|end|>' → logprob: -9.659674644470215
    6. '       ' → logprob: -9.784674644470215
    7. '           ' → logprob: -10.034674644470215
    8. '```' → logprob: -10.284674644470215
    9. '):' → logprob: -11.534674644470215
    10. ')n' → logprob: -11.909674644470215

Token 705: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11142627894878387
    2. '```' → logprob: -3.11142635345459
    3. '       ' → logprob: -3.36142635345459
    4. '           ' → logprob: -3.86142635345459
    5. ' if' → logprob: -5.86142635345459
    6. 'if' → logprob: -7.23642635345459
    7. '<|end|>' → logprob: -7.73642635345459
    8. 'n' → logprob: -8.11142635345459
    9. ':
' → logprob: -8.23642635345459
    10. '``' → logprob: -9.11142635345459

Token 706: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05665810406208038
    2. '               ' → logprob: -3.4316580295562744
    3. 'nh' → logprob: -4.3066582679748535
    4. ' if' → logprob: -4.9316582679748535
    5. '           ' → logprob: -6.8066582679748535
    6. '       ' → logprob: -7.3066582679748535
    7. ' nh' → logprob: -8.431657791137695
    8. '```' → logprob: -10.306657791137695
    9. 'n' → logprob: -12.056657791137695
    10. '   ' → logprob: -12.306657791137695

Token 707: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.5686272382736206
    2. ' nw' → logprob: -1.0686272382736206
    3. ' nh' → logprob: -2.56862735748291
    4. 'nh' → logprob: -4.31862735748291
    5. 'n' → logprob: -9.06862735748291
    6. '   ' → logprob: -9.19362735748291
    7. ' ' → logprob: -11.44362735748291
    8. '	n' → logprob: -12.06862735748291
    9. ' nhw' → logprob: -12.69362735748291
    10. '  ' → logprob: -12.69362735748291

Token 708: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06293908506631851
    2. '==' → logprob: -2.812939167022705
    3. '==-' → logprob: -6.937939167022705
    4. '=' → logprob: -15.562938690185547
    5. '```' → logprob: -16.187938690185547
    6. ' ' → logprob: -16.312938690185547
    7. '==
' → logprob: -16.562938690185547
    8. ' =' → logprob: -16.937938690185547
    9. ')==' → logprob: -17.437938690185547
    10. '===' → logprob: -17.437938690185547

Token 709: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006139241624623537
    2. '-' → logprob: -5.131139278411865
    3. ' ' → logprob: -8.631138801574707
    4. ' -' → logprob: -10.381138801574707
    5. '   ' → logprob: -13.881138801574707
    6. '  ' → logprob: -17.256139755249023
    7. '```' → logprob: -17.381139755249023
    8. '=' → logprob: -17.631139755249023
    9. '‌' → logprob: -17.756139755249023
    10. '
' → logprob: -18.631139755249023

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '```' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '           ' → logprob: -17.000001907348633
    6. '               ' → logprob: -18.125001907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '       ' → logprob: -18.250001907348633
    9. '0' → logprob: -18.375001907348633
    10. '                   ' → logprob: -18.875001907348633

Token 711: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10375668853521347
    2. '               ' → logprob: -2.4787566661834717
    3. ':' → logprob: -4.228756904602051
    4. '):
' → logprob: -9.85375690460205
    5. '           ' → logprob: -10.10375690460205
    6. ' :
' → logprob: -11.72875690460205
    7. '():
' → logprob: -11.85375690460205
    8. '       ' → logprob: -11.97875690460205
    9. ':

' → logprob: -12.10375690460205
    10. '<|end|>' → logprob: -12.47875690460205

Token 712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021641071361955255
    2. ' nh' → logprob: -8.875216484069824
    3. 'n' → logprob: -10.375216484069824
    4. 'nh' → logprob: -10.750216484069824
    5. '```' → logprob: -11.375216484069824
    6. '0' → logprob: -12.625216484069824
    7. '           ' → logprob: -13.000216484069824
    8. '                   ' → logprob: -14.000216484069824
    9. '              ' → logprob: -14.250216484069824
    10. ':
' → logprob: -14.500216484069824

Token 713: ' nh' (ID: 5467)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' (adapté à ' nh') → logprob: -0.203062504529953
    2. ' nh' → logprob: -1.7030625343322754
    3. '               ' → logprob: -6.453062534332275
    4. '   ' → logprob: -10.328062057495117
    5. 'n' → logprob: -11.578062057495117
    6. '           ' → logprob: -11.953062057495117
    7. 'nj' → logprob: -12.828062057495117
    8. '                   ' → logprob: -12.953062057495117
    9. '```' → logprob: -13.203062057495117
    10. ' ' → logprob: -13.328062057495117

Token 714: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31365302205085754
    2. '+=' → logprob: -1.3136529922485352
    3. '+' → logprob: -8.063652992248535
    4. ' +' → logprob: -10.188652992248535
    5. '               ' → logprob: -11.563652992248535
    6. ']+=' → logprob: -11.688652992248535
    7. '```' → logprob: -11.938652992248535
    8. '<|end|>' → logprob: -12.313652992248535
    9. '=' → logprob: -12.813652992248535
    10. '   ' → logprob: -13.688652992248535

Token 715: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017095671501010656
    2. ' ' → logprob: -6.376709461212158
    3. '               ' → logprob: -12.501709938049316
    4. '0' → logprob: -12.626709938049316
    5. '   ' → logprob: -15.376709938049316
    6. '           ' → logprob: -16.626708984375
    7. '                   ' → logprob: -16.751708984375
    8. '```' → logprob: -17.626708984375
    9. '<|end|>' → logprob: -17.876708984375
    10. '2' → logprob: -18.001708984375

Token 716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006314247148111463
    2. '0' → logprob: -7.375631332397461
    3. ' ' → logprob: -12.250631332397461
    4. '   ' → logprob: -16.62563133239746
    5. '```' → logprob: -19.00063133239746
    6. '2' → logprob: -19.62563133239746
    7. '<|end|>' → logprob: -20.75063133239746
    8. '+' → logprob: -21.00063133239746
    9. '               ' → logprob: -21.00063133239746
    10. '           ' → logprob: -21.12563133239746

Token 717: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001062463503330946
    2. '<|end|>' → logprob: -8.376062393188477
    3. '```' → logprob: -8.626062393188477
    4. '       ' → logprob: -8.626062393188477
    5. ' if' → logprob: -8.751062393188477
    6. ',' → logprob: -9.001062393188477
    7. ' and' → logprob: -9.501062393188477
    8. '                
' → logprob: -11.126062393188477
    9. '   ' → logprob: -11.126062393188477
    10. '[' → logprob: -11.126062393188477

Token 718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36922487616539
    2. '       ' → logprob: -1.2442249059677124
    3. 'if' → logprob: -4.619225025177002
    4. '```' → logprob: -5.244225025177002
    5. ' if' → logprob: -5.494225025177002
    6. '           ' → logprob: -7.369225025177002
    7. '<|end|>' → logprob: -8.369224548339844
    8. '[' → logprob: -8.994224548339844
    9. '   ' → logprob: -9.744224548339844
    10. 'continue' → logprob: -9.744224548339844

Token 719: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -0.014272807165980339
    2. '0' → logprob: -4.264272689819336
    3. ' nw' → logprob: -9.139272689819336
    4. '               ' → logprob: -14.264272689819336
    5. '   ' → logprob: -15.014272689819336
    6. '           ' → logprob: -16.014272689819336
    7. 'break' → logprob: -16.014272689819336
    8. '       ' → logprob: -16.139272689819336
    9. '```' → logprob: -16.139272689819336
    10. 'nv' → logprob: -16.639272689819336

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021400451660156
    2. ' =' → logprob: -2.3502140045166016
    3. '0' → logprob: -12.100214004516602
    4. ' +=' → logprob: -14.225214004516602
    5. '+=' → logprob: -14.350214004516602
    6. ' ' → logprob: -15.225214004516602
    7. '```' → logprob: -15.725214004516602
    8. '=
' → logprob: -16.3502140045166
    9. '<|end|>' → logprob: -17.2252140045166
    10. '.=' → logprob: -18.1002140045166

Token 721: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '1' → logprob: -17.2500057220459
    4. '۰' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.0000057220459
    6. '```' → logprob: -18.5000057220459
    7. '<|end|>' → logprob: -18.7500057220459
    8. '00' → logprob: -19.9375057220459
    9. '01' → logprob: -21.0625057220459
    10. '０' → logprob: -21.2500057220459

Token 722: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -18.0
    4. '1' → logprob: -18.375
    5. '<|end|>' → logprob: -19.0
    6. '```' → logprob: -19.125
    7. '00' → logprob: -19.875
    8. '   ' → logprob: -20.25
    9. '000' → logprob: -21.25
    10. '০' → logprob: -21.4375

Token 723: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012526600621640682
    2. 'if' → logprob: -4.762526512145996
    3. ' if' → logprob: -5.762526512145996
    4. '<|end|>' → logprob: -8.137526512145996
    5. '```' → logprob: -8.512526512145996
    6. ')' → logprob: -9.512526512145996
    7. '   ' → logprob: -10.137526512145996
    8. '        
' → logprob: -10.387526512145996
    9. '#' → logprob: -10.887526512145996
    10. ',' → logprob: -11.012526512145996

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018055345863103867
    2. 'if' → logprob: -4.268055438995361
    3. '```' → logprob: -5.768055438995361
    4. ' if' → logprob: -7.268055438995361
    5. '        
' → logprob: -10.268054962158203
    6. '#' → logprob: -11.768054962158203
    7. '   ' → logprob: -12.268054962158203
    8. 'next' → logprob: -12.643054962158203
    9. '``' → logprob: -13.143054962158203
    10. 'continue' → logprob: -13.143054962158203

Token 725: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1605801284313202
    2. '       ' → logprob: -1.9105801582336426
    3. ' if' → logprob: -8.410579681396484
    4. '#' (adapté à ' #') → logprob: -9.410579681396484
    5. '```' → logprob: -9.910579681396484
    6. '        
' → logprob: -13.910579681396484
    7. '   ' → logprob: -14.410579681396484
    8. '	if' → logprob: -16.160579681396484
    9. 'next' → logprob: -16.410579681396484
    10. 'while' → logprob: -16.910579681396484

Token 726: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026456944178789854
    2. '#' → logprob: -6.127645492553711
    3. 'to' → logprob: -7.752645492553711
    4. '```' → logprob: -11.877645492553711
    5. ' if' → logprob: -12.377645492553711
    6. '   ' → logprob: -12.377645492553711
    7. 'To' → logprob: -12.627645492553711
    8. '       ' → logprob: -12.752645492553711
    9. 'frm' → logprob: -13.002645492553711
    10. '#if' → logprob: -13.877645492553711

Token 727: ' représente' (ID: 88912)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7399092316627502
    2. ' =' → logprob: -1.3649091720581055
    3. 'rm' → logprob: -2.1149091720581055
    4. '=' → logprob: -2.6149091720581055
    5. 'm' → logprob: -3.2399091720581055
    6. 'frm' → logprob: -3.9899091720581055
    7. 'f' → logprob: -4.7399091720581055
    8. '[' → logprob: -5.7399091720581055
    9. 'r' → logprob: -6.7399091720581055
    10. ' if' → logprob: -7.3649091720581055

Token 728: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028223298490047455
    2. '[n' → logprob: -3.6532232761383057
    3. ' [' → logprob: -6.403223514556885
    4. '   ' → logprob: -10.028223037719727
    5. 'frm' → logprob: -10.028223037719727
    6. '[]' → logprob: -10.278223037719727
    7. '[m' → logprob: -10.653223037719727
    8. '[now' → logprob: -10.903223037719727
    9. '[field' → logprob: -11.028223037719727
    10. '[s' → logprob: -11.403223037719727

Token 729: ' position' (ID: 4010)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07147765904664993
    2. '[n' → logprob: -2.6964776515960693
    3. ' [' → logprob: -6.571477890014648
    4. 'frm' → logprob: -9.571477890014648
    5. '[now' → logprob: -10.946477890014648
    6. '[h' → logprob: -11.946477890014648
    7. '[]' → logprob: -11.946477890014648
    8. '[N' → logprob: -12.196477890014648
    9. '[f' → logprob: -12.446477890014648
    10. '[next' → logprob: -12.696477890014648

Token 730: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12326826900243759
    2. '=' → logprob: -2.2482683658599854
    3. '[' → logprob: -4.623268127441406
    4. '=[' → logprob: -8.248268127441406
    5. ' =[' → logprob: -8.748268127441406
    6. '   ' → logprob: -10.373268127441406
    7. '```' → logprob: -10.623268127441406
    8. ' ' → logprob: -11.498268127441406
    9. '#' → logprob: -11.498268127441406
    10. 'if' → logprob: -12.248268127441406

Token 731: ''arrivée' (ID: 156076)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029284290969371796
    2. '[start' → logprob: -4.029284477233887
    3. ' [' → logprob: -5.529284477233887
    4. '[n' → logprob: -6.154284477233887
    5. '[next' → logprob: -6.279284477233887
    6. '[now' → logprob: -7.154284477233887
    7. '[end' → logprob: -7.279284477233887
    8. '[s' → logprob: -7.404284477233887
    9. '[arr' → logprob: -8.904284477233887
    10. '[field' → logprob: -9.154284477233887

Token 732: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6311010122299194
    2. ' =' → logprob: -1.1311010122299194
    3. '[' → logprob: -3.006101131439209
    4. 'if' → logprob: -3.131101131439209
    5. '       ' → logprob: -3.256101131439209
    6. ' if' → logprob: -4.756101131439209
    7. ',' → logprob: -6.006101131439209
    8. '=[' → logprob: -7.006101131439209
    9. '   ' → logprob: -8.13110065460205
    10. '        ' → logprob: -8.50610065460205

Token 733: ' toujours' (ID: 16867)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.7287455797195435
    2. '[' → logprob: -0.9787455797195435
    3. 'to' → logprob: -2.228745460510254
    4. '[n' → logprob: -3.603745460510254
    5. ' [' → logprob: -6.228745460510254
    6. 'if' → logprob: -6.603745460510254
    7. '[now' → logprob: -7.228745460510254
    8. 'frm' → logprob: -7.228745460510254
    9. ' to' → logprob: -7.978745460510254
    10. '[t' → logprob: -8.103745460510254

Token 734: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002309408038854599
    2. '[n' → logprob: -6.627309322357178
    3. ' [' → logprob: -7.502309322357178
    4. 'frm' → logprob: -8.252309799194336
    5. '   ' → logprob: -9.127309799194336
    6. '(frm' → logprob: -10.627309799194336
    7. '       ' → logprob: -11.502309799194336
    8. '[now' → logprob: -12.502309799194336
    9. '  ' → logprob: -13.002309799194336
    10. '```' → logprob: -13.002309799194336

Token 735: ' base' (ID: 3611)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002837087959051132
    2. 'frm' → logprob: -6.127837181091309
    3. '[n' → logprob: -7.752837181091309
    4. 'form' → logprob: -9.627837181091309
    5. 'base' → logprob: -10.252837181091309
    6. ' [' → logprob: -10.502837181091309
    7. '[to' → logprob: -11.002837181091309
    8. '(frm' → logprob: -11.377837181091309
    9. '[start' → logprob: -11.752837181091309
    10. '#' → logprob: -11.877837181091309

Token 736: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009433758445084095
    2. ' ' → logprob: -4.759433746337891
    3. '[' → logprob: -7.259433746337891
    4. 'frm' → logprob: -10.13443374633789
    5. ' [' → logprob: -10.13443374633789
    6. '(frm' → logprob: -11.13443374633789
    7. '10' → logprob: -11.63443374633789
    8. '(' → logprob: -13.25943374633789
    9. '```' → logprob: -13.25943374633789
    10. ' frm' → logprob: -13.25943374633789

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -11.750009536743164
    3. ' ' → logprob: -13.625009536743164
    4. '```' → logprob: -14.875009536743164
    5. '   ' → logprob: -16.125009536743164
    6. '+' → logprob: -17.000009536743164
    7. 'frm' → logprob: -17.125009536743164
    8. '10' → logprob: -17.125009536743164
    9. '0' → logprob: -17.875009536743164
    10. '4' → logprob: -18.375009536743164

Token 738: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3069998323917389
    2. 'to' → logprob: -2.181999921798706
    3. ',' → logprob: -2.681999921798706
    4. ' =' → logprob: -3.306999921798706
    5. '[' → logprob: -4.556999683380127
    6. '   ' → logprob: -4.806999683380127
    7. '[to' → logprob: -4.806999683380127
    8. '=' → logprob: -4.931999683380127
    9. ' to' → logprob: -6.056999683380127
    10. '        
' → logprob: -6.056999683380127

Token 739: 'don' (ID: 22130)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0388936810195446
    2. '[n' → logprob: -3.913893699645996
    3. 'frm' → logprob: -4.038893699645996
    4. 'nh' → logprob: -8.163893699645996
    5. '   ' → logprob: -9.288893699645996
    6. ' [' → logprob: -9.538893699645996
    7. '[
' → logprob: -10.663893699645996
    8. '[now' → logprob: -11.538893699645996
    9. '(frm' → logprob: -11.663893699645996
    10. '[f' → logprob: -11.663893699645996

Token 740: 'c' (ID: 66)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09414348751306534
    2. '[' → logprob: -3.4691433906555176
    3. '+' → logprob: -3.5941433906555176
    4. 'ée' → logprob: -4.469143390655518
    5. '```' → logprob: -5.344143390655518
    6. 'é' → logprob: -5.469143390655518
    7. '``' → logprob: -6.719143390655518
    8. '[e' → logprob: -6.844143390655518
    9. 'nées' → logprob: -6.844143390655518
    10. 'ées' → logprob: -7.219143390655518

Token 741: ' nh' (ID: 5467)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008353221230208874
    2. '[n' → logprob: -5.008353233337402
    3. 'nh' → logprob: -7.258353233337402
    4. 'frm' → logprob: -7.383353233337402
    5. ' [' → logprob: -8.508353233337402
    6. '[
' → logprob: -9.633353233337402
    7. ' nh' → logprob: -10.883353233337402
    8. '   ' → logprob: -11.883353233337402
    9. '(frm' → logprob: -12.508353233337402
    10. ' frm' → logprob: -12.758353233337402

Token 742: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.318681188422488e-05
    2. ' +' → logprob: -11.25001335144043
    3. '[' → logprob: -16.37501335144043
    4. ',' → logprob: -18.75001335144043
    5. '+[' → logprob: -18.75001335144043
    6. ')+' → logprob: -19.37501335144043
    7. '+n' → logprob: -19.50001335144043
    8. '   ' → logprob: -19.62501335144043
    9. '＋' → logprob: -19.62501335144043
    10. '+,' → logprob: -19.75001335144043

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '```' → logprob: -14.500003814697266
    4. '<|end|>' → logprob: -14.625003814697266
    5. '+' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '0' → logprob: -17.125003814697266
    8. '<|end|>' → logprob: -18.875003814697266
    9. '`' → logprob: -19.875003814697266
    10. '...' → logprob: -20.250003814697266

Token 744: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002214172709500417
    2. ',n' → logprob: -8.500221252441406
    3. ',
' → logprob: -11.875221252441406
    4. ' ,' → logprob: -12.500221252441406
    5. ',w' → logprob: -13.125221252441406
    6. ')' → logprob: -14.000221252441406
    7. '<|end|>' → logprob: -14.500221252441406
    8. '‌,' → logprob: -14.750221252441406
    9. ',

' → logprob: -14.750221252441406
    10. '```' → logprob: -14.875221252441406

Token 745: ' nw' (ID: 45462)
  Prédit: ' nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.2014840990304947
    2. 'nw' → logprob: -1.7014840841293335
    3. ',' → logprob: -9.951483726501465
    4. ',n' → logprob: -11.701483726501465
    5. ' nws' → logprob: -12.076483726501465
    6. 'n' → logprob: -12.701483726501465
    7. '(n' → logprob: -14.076483726501465
    8. '   ' → logprob: -14.201483726501465
    9. ' ' → logprob: -14.326483726501465
    10. '1' → logprob: -14.326483726501465

Token 746: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5716304410016164e-05
    2. ' +' → logprob: -10.250035285949707
    3. '```' → logprob: -15.875035285949707
    4. '[' → logprob: -16.875036239624023
    5. '()+' → logprob: -17.375036239624023
    6. '<|end|>' → logprob: -17.750036239624023
    7. ')+' → logprob: -18.375036239624023
    8. '＋' → logprob: -18.375036239624023
    9. '+xml' → logprob: -19.125036239624023
    10. '+
' → logprob: -19.500036239624023

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '```' → logprob: -14.375004768371582
    4. '+' → logprob: -17.000003814697266
    5. '0' → logprob: -19.250003814697266
    6. '   ' → logprob: -19.500003814697266
    7. '<|end|>' → logprob: -20.125003814697266
    8. '`' → logprob: -20.250003814697266
    9. ')' → logprob: -20.875003814697266
    10. ' +' → logprob: -21.125003814697266

Token 748: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6505687832832336
    2. ')' → logprob: -0.9005687832832336
    3. '       ' → logprob: -4.275568962097168
    4. ')
' → logprob: -4.400568962097168
    5. ']' → logprob: -4.525568962097168
    6. 'to' → logprob: -4.525568962097168
    7. '[to' → logprob: -4.775568962097168
    8. '[' → logprob: -5.400568962097168
    9. '   ' → logprob: -5.650568962097168
    10. ',to' → logprob: -5.900568962097168

Token 749: '       ' (ID: 309)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6382766962051392
    2. '       ' → logprob: -0.7632766962051392
    3. ' to' → logprob: -6.13827657699585
    4. '[to' → logprob: -6.13827657699585
    5. '[' → logprob: -6.76327657699585
    6. 'if' → logprob: -9.513277053833008
    7. '```' → logprob: -10.388277053833008
    8. '           ' → logprob: -10.763277053833008
    9. '   ' → logprob: -11.013277053833008
    10. ' if' → logprob: -11.763277053833008

Token 750: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00011105302110081539
    2. '       ' → logprob: -9.375110626220703
    3. ' to' → logprob: -10.750110626220703
    4. 'if' → logprob: -12.750110626220703
    5. '   ' → logprob: -13.875110626220703
    6. '[to' → logprob: -15.000110626220703
    7. '	to' → logprob: -15.750110626220703
    8. 'toi' → logprob: -16.125110626220703
    9. 't' → logprob: -16.750110626220703
    10. '[' → logprob: -16.750110626220703

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474086195230484
    2. ' =' → logprob: -0.9740861654281616
    3. '[' → logprob: -12.224085807800293
    4. '=[' → logprob: -13.224085807800293
    5. ' =[' → logprob: -13.474085807800293
    6. ' ' → logprob: -14.349085807800293
    7. '```' → logprob: -16.22408676147461
    8. '=
' → logprob: -16.72408676147461
    9. '＝' → logprob: -16.72408676147461
    10. ')' → logprob: -16.72408676147461

Token 752: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01147476863116026
    2. '[n' → logprob: -4.511474609375
    3. ' [' → logprob: -7.761474609375
    4. '[now' → logprob: -14.761474609375
    5. '[next' → logprob: -16.136474609375
    6. '[num' → logprob: -16.386474609375
    7. '[ch' → logprob: -16.386474609375
    8. '[np' → logprob: -16.761474609375
    9. '[h' → logprob: -17.136474609375
    10. '   ' → logprob: -17.136474609375

Token 753: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -1.0280383548888494e-06
    2. ' nh' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.375001907348633
    4. '
' → logprob: -19.750001907348633
    5. 'hn' → logprob: -20.125001907348633
    6. '1' → logprob: -20.875001907348633
    7. 'NH' → logprob: -21.125001907348633
    8. 'n' → logprob: -21.375001907348633
    9. '0' → logprob: -21.875001907348633
    10. '+' → logprob: -21.875001907348633

Token 754: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.623244553338736e-05
    2. ' +' → logprob: -9.625065803527832
    3. '[' → logprob: -17.87506675720215
    4. '()+' → logprob: -18.00006675720215
    5. '   ' → logprob: -18.25006675720215
    6. '<|end|>' → logprob: -18.37506675720215
    7. '```' → logprob: -18.87506675720215
    8. '＋' → logprob: -18.87506675720215
    9. ']+' → logprob: -19.25006675720215
    10. ',' → logprob: -19.25006675720215

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. ',' → logprob: -16.875009536743164
    4. '0' → logprob: -17.125009536743164
    5. '```' → logprob: -17.500009536743164
    6. '<|end|>' → logprob: -17.875009536743164
    7. '   ' → logprob: -18.125009536743164
    8. '
' → logprob: -18.750009536743164
    9. '+' → logprob: -19.250009536743164
    10. '`' → logprob: -20.750009536743164

Token 756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ',n' → logprob: -11.375028610229492
    3. ',w' → logprob: -11.875028610229492
    4. ' ,' → logprob: -12.125028610229492
    5. ',
' → logprob: -12.250028610229492
    6. '‌,' → logprob: -16.375028610229492
    7. ',",' → logprob: -17.750028610229492
    8. ',next' → logprob: -17.875028610229492
    9. ',W' → logprob: -18.000028610229492
    10. '<|end|>' → logprob: -18.125028610229492

Token 757: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.0015047440538182855
    2. ' nw' → logprob: -6.501504898071289
    3. 'w' → logprob: -13.376504898071289
    4. 'n' → logprob: -14.376504898071289
    5. ' ' → logprob: -16.87650489807129
    6. 'jw' → logprob: -17.00150489807129
    7. '   ' → logprob: -17.25150489807129
    8. '0' → logprob: -17.25150489807129
    9. 'NW' → logprob: -17.37650489807129
    10. 'vw' → logprob: -17.87650489807129

Token 758: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.085517113911919e-05
    2. ' +' → logprob: -10.62505054473877
    3. ']' → logprob: -11.37505054473877
    4. '+]' → logprob: -12.12505054473877
    5. ']+' → logprob: -12.37505054473877
    6. '<|end|>' → logprob: -12.62505054473877
    7. '+"]' → logprob: -13.87505054473877
    8. '[' → logprob: -14.50005054473877
    9. '+
' → logprob: -14.75005054473877
    10. '<|end|>' → logprob: -17.125051498413086

Token 759: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -17.250001907348633
    4. '```' → logprob: -17.500001907348633
    5. '+' → logprob: -17.625001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '2' → logprob: -21.125001907348633
    8. '-' → logprob: -21.750001907348633
    9. '۱' → logprob: -22.000001907348633
    10. '`' → logprob: -22.125001907348633

Token 760: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.433357834815979
    2. '       ' → logprob: -1.183357834815979
    3. ' if' → logprob: -3.9333577156066895
    4. '<|end|>' → logprob: -4.1833577156066895
    5. ']
' → logprob: -4.9333577156066895
    6. 'if' → logprob: -6.8083577156066895
    7. '
' → logprob: -7.0583577156066895
    8. '<|end|>' → logprob: -7.9333577156066895
    9. '        
' → logprob: -8.308358192443848
    10. ' ]' → logprob: -8.433358192443848

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005270515102893114
    2. 'if' → logprob: -5.380270481109619
    3. ' if' → logprob: -7.755270481109619
    4. '   ' → logprob: -9.130270957946777
    5. '```' → logprob: -9.880270957946777
    6. '<|end|>' → logprob: -10.380270957946777
    7. '        
' → logprob: -10.630270957946777
    8. '           ' → logprob: -12.630270957946777
    9. '<|end|>' → logprob: -14.255270957946777
    10. '[' → logprob: -14.755270957946777

Token 762: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023456620052456856
    2. '       ' → logprob: -3.773456573486328
    3. ' if' → logprob: -8.773456573486328
    4. 'ans' → logprob: -10.398456573486328
    5. '   ' → logprob: -10.773456573486328
    6. '```' → logprob: -12.523456573486328
    7. '        
' → logprob: -14.523456573486328
    8. '           ' → logprob: -15.273456573486328
    9. '#' (adapté à ' #') → logprob: -16.023456573486328
    10. '	if' → logprob: -16.273456573486328

Token 763: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013735649408772588
    2. 'ans' → logprob: -6.626373767852783
    3. '       ' → logprob: -10.501373291015625
    4. '   ' → logprob: -11.876373291015625
    5. ' if' → logprob: -12.126373291015625
    6. '#' → logprob: -12.251373291015625
    7. '           ' → logprob: -13.751373291015625
    8. '```' → logprob: -14.376373291015625
    9. '
' → logprob: -14.501373291015625
    10. 'for' → logprob: -15.376373291015625

Token 764: ' nh' (ID: 5467)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.07960154116153717
    2. ' have' → logprob: -2.579601526260376
    3. 'field' → logprob: -7.454601764678955
    4. ' field' → logprob: -9.079601287841797
    5. ' ' → logprob: -12.704601287841797
    6. ' not' → logprob: -13.079601287841797
    7. 'hav' → logprob: -13.204601287841797
    8. 'not' → logprob: -13.204601287841797
    9. ' nh' → logprob: -13.517101287841797
    10. '   ' → logprob: -13.517101287841797

Token 765: ' atteint' (ID: 104876)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0456994771957397
    2. ' <' → logprob: -1.1706994771957397
    3. ' !=' → logprob: -1.4206994771957397
    4. '!=' → logprob: -3.0456995964050293
    5. ' ==' → logprob: -3.5456995964050293
    6. '==' → logprob: -4.795699596405029
    7. ' >=' → logprob: -5.170699596405029
    8. '>=' → logprob: -5.920699596405029
    9. '   ' → logprob: -6.045699596405029
    10. '[' → logprob: -7.795699596405029

Token 766: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004181921482086182
    2. ' H' → logprob: -5.629181861877441
    3. '==' → logprob: -8.004181861877441
    4. '=' → logprob: -9.379181861877441
    5. ' ==' → logprob: -9.504181861877441
    6. '   ' → logprob: -9.629181861877441
    7. '(H' → logprob: -11.004181861877441
    8. ' =' → logprob: -12.629181861877441
    9. '>=' → logprob: -14.504181861877441
    10. '       ' → logprob: -14.504181861877441

Token 767: ',' (ID: 11)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12766671180725098
    2. '==' → logprob: -2.127666711807251
    3. ' >=' → logprob: -7.502666473388672
    4. '>=' → logprob: -8.627666473388672
    5. '   ' → logprob: -12.127666473388672
    6. ':' → logprob: -14.002666473388672
    7. '>' → logprob: -15.252666473388672
    8. '=' → logprob: -15.252666473388672
    9. '==
' → logprob: -15.377666473388672
    10. ' =' → logprob: -15.877666473388672

Token 768: ' cela' (ID: 17542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09233534336090088
    2. 'break' → logprob: -3.0923352241516113
    3. '       ' → logprob: -3.9673352241516113
    4. '   ' → logprob: -4.217335224151611
    5. ' break' → logprob: -4.717335224151611
    6. '#' → logprob: -9.21733570098877
    7. '               ' → logprob: -9.84233570098877
    8. ' ' → logprob: -11.21733570098877
    9. '```' → logprob: -11.34233570098877
    10. '	break' → logprob: -11.71733570098877

Token 769: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30666688084602356
    2. '       ' → logprob: -2.306666851043701
    3. 'break' → logprob: -2.431666851043701
    4. '           ' → logprob: -3.181666851043701
    5. '#' → logprob: -4.306666851043701
    6. '   ' → logprob: -4.556666851043701
    7. '==' → logprob: -5.181666851043701
    8. ':
' → logprob: -6.306666851043701
    9. ' ==' → logprob: -6.806666851043701
    10. ' break' → logprob: -7.681666851043701

Token 770: ' qu' (ID: 474)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008873839862644672
    2. '       ' → logprob: -5.00887393951416
    3. '   ' → logprob: -7.63387393951416
    4. ' que' → logprob: -7.63387393951416
    5. '               ' → logprob: -7.88387393951416
    6. '  ' → logprob: -8.38387393951416
    7. '          ' → logprob: -8.88387393951416
    8. '#' → logprob: -9.25887393951416
    9. 'break' → logprob: -9.75887393951416
    10. 'que' → logprob: -9.75887393951416

Token 771: ''on' (ID: 25812)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8325857520103455
    2. '       ' → logprob: -1.3325858116149902
    3. ' nh' → logprob: -1.9575858116149902
    4. 'break' → logprob: -2.7075858116149902
    5. '           ' → logprob: -3.0825858116149902
    6. '   ' → logprob: -4.08258581161499
    7. ' not' → logprob: -4.58258581161499
    8. '#' → logprob: -5.08258581161499
    9. ' on' → logprob: -5.20758581161499
    10. 'nh' → logprob: -6.83258581161499

Token 772: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8239831328392029
    2. 'break' → logprob: -0.8239831328392029
    3. '           ' → logprob: -3.0739831924438477
    4. ' break' → logprob: -3.4489831924438477
    5. '   ' → logprob: -4.073983192443848
    6. ' ==' → logprob: -4.698983192443848
    7. '==' → logprob: -4.698983192443848
    8. ' ' → logprob: -6.198983192443848
    9. '#' → logprob: -6.323983192443848
    10. '```' → logprob: -6.323983192443848

Token 773: ' traité' (ID: 160836)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.9160088300704956
    2. ' atteint' → logprob: -1.1660088300704956
    3. 'break' → logprob: -1.7910088300704956
    4. '   ' → logprob: -3.416008949279785
    5. 'termin' → logprob: -3.666008949279785
    6. 'br' → logprob: -3.916008949279785
    7. ' break' → logprob: -4.666008949279785
    8. 'f' → logprob: -5.166008949279785
    9. 'arr' → logprob: -5.166008949279785
    10. ' dépass' → logprob: -5.541008949279785

Token 774: ' toutes' (ID: 17502)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09919609874486923
    2. '   ' → logprob: -2.974196195602417
    3. 'la' → logprob: -4.099195957183838
    4. 'le' → logprob: -4.224195957183838
    5. '           ' → logprob: -4.974195957183838
    6. 'if' → logprob: -6.474195957183838
    7. ' la' → logprob: -6.474195957183838
    8. '               ' → logprob: -7.349195957183838
    9. '```' → logprob: -7.724195957183838
    10. ' le' → logprob: -8.099196434020996

Token 775: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.06057940423488617
    2. ' les' → logprob: -3.435579299926758
    3. 'cases' → logprob: -4.560579299926758
    4. 'l' → logprob: -4.685579299926758
    5. '   ' → logprob: -6.435579299926758
    6. 'la' → logprob: -6.560579299926758
    7. '```' → logprob: -6.935579299926758
    8. 'le' → logprob: -6.935579299926758
    9. '#' → logprob: -7.685579299926758
    10. ' ' → logprob: -8.685579299926758

Token 776: ' lignes' (ID: 81687)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.16489343345165253
    2. 'l' → logprob: -2.039893388748169
    3. 'case' → logprob: -5.039893627166748
    4. 'cells' → logprob: -5.414893627166748
    5. 'cell' → logprob: -5.914893627166748
    6. ' lignes' → logprob: -6.164893627166748
    7. ' cases' → logprob: -6.289893627166748
    8. '   ' → logprob: -6.539893627166748
    9. 'lines' → logprob: -7.414893627166748
    10. 'ligne' → logprob: -7.789893627166748

Token 777: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03465583175420761
    2. ':' → logprob: -3.659655809402466
    3. ',' → logprob: -5.534656047821045
    4. ' and' → logprob: -5.909656047821045
    5. '           ' → logprob: -7.534656047821045
    6. ':
' → logprob: -8.034655570983887
    7. ' or' → logprob: -8.409655570983887
    8. '   ' → logprob: -8.534655570983887
    9. '.' → logprob: -8.659655570983887
    10. 'and' → logprob: -9.034655570983887

Token 778: ' donc' (ID: 14206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2891649901866913
    2. '       ' → logprob: -1.4141650199890137
    3. 'break' → logprob: -5.039165019989014
    4. ' break' → logprob: -6.914165019989014
    5. '   ' → logprob: -8.414164543151855
    6. '               ' → logprob: -9.039164543151855
    7. 'if' → logprob: -9.289164543151855
    8. ' if' → logprob: -9.914164543151855
    9. '#' → logprob: -11.164164543151855
    10. '        ' → logprob: -12.539164543151855

Token 779: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3110615313053131
    2. '       ' → logprob: -2.3110616207122803
    3. '           ' → logprob: -2.3110616207122803
    4. ' break' → logprob: -2.6860616207122803
    5. '   ' → logprob: -7.186061382293701
    6. 'if' → logprob: -10.56106185913086
    7. '```' → logprob: -10.56106185913086
    8. '               ' → logprob: -10.68606185913086
    9. '	break' → logprob: -11.18606185913086
    10. ' if' → logprob: -11.43606185913086

Token 780: ' termine' (ID: 76900)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1682305485010147
    2. 'break' → logprob: -1.9182305335998535
    3. '   ' → logprob: -5.7932305335998535
    4. 'if' → logprob: -6.4182305335998535
    5. ' break' → logprob: -6.6682305335998535
    6. '#' → logprob: -7.0432305335998535
    7. ' if' → logprob: -7.4182305335998535
    8. '           ' → logprob: -7.9182305335998535
    9. ' ' → logprob: -10.293231010437012
    10. '```' → logprob: -10.543231010437012

Token 781: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004802126437425613
    2. '           ' → logprob: -5.504802227020264
    3. 'if' → logprob: -8.004801750183105
    4. ' if' → logprob: -8.504801750183105
    5. '```' → logprob: -8.754801750183105
    6. '        
' → logprob: -11.254801750183105
    7. ':
' → logprob: -12.879801750183105
    8. ':' → logprob: -12.879801750183105
    9. '   ' → logprob: -12.879801750183105
    10. '               ' → logprob: -13.254801750183105

Token 782: ' boucle' (ID: 174211)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.12001356482505798
    2. 'bou' → logprob: -2.495013475418091
    3. 'loop' → logprob: -3.995013475418091
    4. 'if' → logprob: -5.74501371383667
    5. 'for' → logprob: -5.87001371383667
    6. 'while' → logprob: -5.99501371383667
    7. '   ' → logprob: -6.49501371383667
    8. '       ' → logprob: -7.62001371383667
    9. ' boucle' → logprob: -7.87001371383667
    10. 'b' → logprob: -7.99501371383667

Token 783: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.27099974633893e-05
    2. ' if' → logprob: -12.000012397766113
    3. '<|end|>' → logprob: -13.500012397766113
    4. '   ' → logprob: -13.750012397766113
    5. ',' → logprob: -13.750012397766113
    6. 'if' → logprob: -14.000012397766113
    7. '           ' → logprob: -14.250012397766113
    8. '      ' → logprob: -14.750012397766113
    9. '```' → logprob: -15.000012397766113
    10. '        
' → logprob: -15.250012397766113

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011286636581644416
    2. '           ' → logprob: -7.001128673553467
    3. 'if' → logprob: -9.126128196716309
    4. ' if' → logprob: -9.376128196716309
    5. '```' → logprob: -11.126128196716309
    6. '   ' → logprob: -12.251128196716309
    7. '        
' → logprob: -13.126128196716309
    8. '               ' → logprob: -14.376128196716309
    9. '
' → logprob: -14.876128196716309
    10. ',' → logprob: -15.001128196716309

Token 785: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03126902878284454
    2. '       ' → logprob: -3.531269073486328
    3. ' if' → logprob: -6.531269073486328
    4. '   ' → logprob: -9.781269073486328
    5. '```' → logprob: -12.656269073486328
    6. '           ' → logprob: -14.906269073486328
    7. '
' → logprob: -16.781269073486328
    8. '        
' → logprob: -16.906269073486328
    9. '      ' → logprob: -17.406269073486328
    10. ' ' → logprob: -18.031269073486328

Token 786: ' nh' (ID: 5467)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.0019286326132714748
    2. ' nh' → logprob: -6.251928806304932
    3. 'NH' → logprob: -17.001928329467773
    4. 'hn' → logprob: -17.876928329467773
    5. '   ' → logprob: -18.001928329467773
    6. 'n' → logprob: -18.376928329467773
    7. 'Nh' → logprob: -18.876928329467773
    8. ' ' → logprob: -19.251928329467773
    9. ' ' → logprob: -19.751928329467773
    10. '(' → logprob: -20.001928329467773

Token 787: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759947299957275
    2. ' ==' → logprob: -0.8259947299957275
    3. '>=' → logprob: -10.075994491577148
    4. ' >=' → logprob: -11.450994491577148
    5. '==
' → logprob: -14.075994491577148
    6. ')==' → logprob: -14.825994491577148
    7. ']==' → logprob: -14.825994491577148
    8. ')' → logprob: -15.200994491577148
    9. '==(' → logprob: -15.700994491577148
    10. '[' → logprob: -16.07599449157715

Token 788: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0001238004770129919
    2. ' H' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.875123977661133
    4. '       ' → logprob: -17.875123977661133
    5. '	H' → logprob: -19.875123977661133
    6. '
' → logprob: -20.375123977661133
    7. '>' → logprob: -20.375123977661133
    8. '#' → logprob: -20.875123977661133
    9. '```' → logprob: -20.875123977661133
    10. '(H' → logprob: -21.000123977661133

Token 789: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47605183720588684
    2. ':' → logprob: -0.9760518074035645
    3. '       ' → logprob: -6.6010518074035645
    4. '           ' → logprob: -7.6010518074035645
    5. ' or' → logprob: -10.351052284240723
    6. '   ' → logprob: -10.476052284240723
    7. '):
' → logprob: -10.976052284240723
    8. ':return' → logprob: -11.351052284240723
    9. ' :
' → logprob: -11.726052284240723
    10. ' and' → logprob: -12.726052284240723

Token 790: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010980144143104553
    2. '       ' → logprob: -4.885980129241943
    3. 'break' → logprob: -5.760980129241943
    4. ' break' → logprob: -8.885980606079102
    5. '   ' → logprob: -10.260980606079102
    6. '               ' → logprob: -10.260980606079102
    7. ' if' → logprob: -12.385980606079102
    8. 'if' → logprob: -12.635980606079102
    9. '```' → logprob: -13.635980606079102
    10. '	break' → logprob: -14.135980606079102

Token 791: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.27413123846054077
    2. '           ' → logprob: -1.5241312980651855
    3. '       ' → logprob: -4.0241312980651855
    4. ' break' → logprob: -6.2741312980651855
    5. 'if' → logprob: -6.7741312980651855
    6. '   ' → logprob: -7.0241312980651855
    7. '               ' → logprob: -9.149130821228027
    8. ' if' → logprob: -10.399130821228027
    9. '```' → logprob: -11.524130821228027
    10. '	break' → logprob: -11.649130821228027

Token 792: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013009272515773773
    2. ' if' → logprob: -5.513009071350098
    3. '   ' → logprob: -6.013009071350098
    4. '<|end|>' → logprob: -6.263009071350098
    5. '        
' → logprob: -6.513009071350098
    6. '[' → logprob: -7.138009071350098
    7. 'if' → logprob: -7.138009071350098
    8. ',' → logprob: -8.138009071350098
    9. '```' → logprob: -8.138009071350098
    10. '    
' → logprob: -8.513009071350098

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06462244689464569
    2. 'if' → logprob: -2.814622402191162
    3. ' if' → logprob: -6.189622402191162
    4. '   ' → logprob: -7.939622402191162
    5. '        
' → logprob: -9.06462287902832
    6. 'ans' → logprob: -9.56462287902832
    7. '```' → logprob: -10.06462287902832
    8. '           ' → logprob: -12.18962287902832
    9. '    
' → logprob: -12.93962287902832
    10. ' ans' → logprob: -13.18962287902832

Token 794: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22611580789089203
    2. 'if' → logprob: -1.6011158227920532
    3. ' if' → logprob: -8.226116180419922
    4. 'ans' → logprob: -8.351116180419922
    5. '        
' → logprob: -9.101116180419922
    6. '   ' → logprob: -9.851116180419922
    7. '#' (adapté à ' #') → logprob: -11.601116180419922
    8. '```' → logprob: -11.601116180419922
    9. '           ' → logprob: -12.851116180419922
    10. '	if' → logprob: -13.601116180419922

Token 795: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006266565760597587
    2. 'ans' → logprob: -7.500626564025879
    3. '   ' → logprob: -10.750626564025879
    4. '#' → logprob: -10.875626564025879
    5. 'field' → logprob: -11.000626564025879
    6. ' if' → logprob: -11.500626564025879
    7. '       ' → logprob: -13.250626564025879
    8. '```' → logprob: -13.875626564025879
    9. 'operation' → logprob: -14.375626564025879
    10. 'op' → logprob: -14.375626564025879

Token 796: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.02645600400865078
    2. ' have' → logprob: -3.651456117630005
    3. 'field' → logprob: -8.901455879211426
    4. ' field' → logprob: -11.401455879211426
    5. '   ' → logprob: -12.776455879211426
    6. ' ' → logprob: -13.276455879211426
    7. 'not' → logprob: -14.276455879211426
    8. ' not' → logprob: -14.401455879211426
    9. 'Have' → logprob: -14.901455879211426
    10. 'has' → logprob: -15.026455879211426

Token 797: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -7.696077227592468e-05
    2. '_coin' → logprob: -9.750077247619629
    3. ' Coin' → logprob: -11.375077247619629
    4. '_C' → logprob: -12.625077247619629
    5. 'Coins' → logprob: -13.875077247619629
    6. ':' → logprob: -14.125077247619629
    7. ' ' → logprob: -14.500077247619629
    8. 'coin' → logprob: -14.750077247619629
    9. ':
' → logprob: -15.250077247619629
    10. '_' → logprob: -15.500077247619629

Token 798: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014630813151597977
    2. ':
' → logprob: -4.3896307945251465
    3. '==' → logprob: -6.8896307945251465
    4. ' ==' → logprob: -7.3896307945251465
    5. ' and' → logprob: -8.264631271362305
    6. '   ' → logprob: -10.139631271362305
    7. '       ' → logprob: -10.264631271362305
    8. 'and' → logprob: -10.389631271362305
    9. '<|end|>' → logprob: -10.389631271362305
    10. '[' → logprob: -11.139631271362305

Token 799: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20144130289554596
    2. 'True' → logprob: -1.7014412879943848
    3. '(True' → logprob: -11.326441764831543
    4. '=True' → logprob: -11.951441764831543
    5. ' not' → logprob: -12.826441764831543
    6. ':' → logprob: -12.951441764831543
    7. '           ' → logprob: -13.076441764831543
    8. ' False' → logprob: -14.826441764831543
    9. '   ' → logprob: -14.951441764831543
    10. 'False' → logprob: -15.076441764831543

Token 800: ' après' (ID: 16460)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.229372039437294
    2. ':
' → logprob: -1.8543720245361328
    3. ' and' → logprob: -3.354372024536133
    4. '       ' → logprob: -4.729372024536133
    5. '           ' → logprob: -6.479372024536133
    6. '==' → logprob: -6.479372024536133
    7. ' ==' → logprob: -6.854372024536133
    8. 'and' → logprob: -8.479372024536133
    9. '   ' → logprob: -8.604372024536133
    10. ',' → logprob: -10.354372024536133

Token 801: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8375298976898193
    2. 'field' → logprob: -1.4625298976898193
    3. 'le' → logprob: -2.5875298976898193
    4. ' if' → logprob: -3.0875298976898193
    5. ' field' → logprob: -3.2125298976898193
    6. 'not' → logprob: -3.5875298976898193
    7. 'la' → logprob: -3.9625298976898193
    8. '   ' → logprob: -4.087530136108398
    9. '       ' → logprob: -4.212530136108398
    10. 'frm' → logprob: -4.212530136108398

Token 802: ' déplacement' (ID: 138449)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01685906946659088
    2. 'frm' → logprob: -4.39185905456543
    3. ' if' → logprob: -5.76685905456543
    4. 'move' → logprob: -7.89185905456543
    5. 'field' → logprob: -8.26685905456543
    6. '   ' → logprob: -9.26685905456543
    7. 'check' → logprob: -9.39185905456543
    8. '```' → logprob: -9.64185905456543
    9. 'movement' → logprob: -10.51685905456543
    10. 'continue' → logprob: -10.64185905456543

Token 803: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0700887441635132
    2. '           ' → logprob: -1.1950887441635132
    3. ':
' → logprob: -1.8200887441635132
    4. ':' → logprob: -2.1950888633728027
    5. '       ' → logprob: -2.9450888633728027
    6. 'and' → logprob: -3.9450888633728027
    7. ',' → logprob: -5.320088863372803
    8. '   ' → logprob: -6.195088863372803
    9. '[' → logprob: -7.195088863372803
    10. '```' → logprob: -7.820088863372803

Token 804: ' cela' (ID: 17542)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4314284324645996
    2. 'ans' → logprob: -1.1814284324645996
    3. '           ' → logprob: -3.1814284324645996
    4. '   ' → logprob: -7.0564284324646
    5. '       ' → logprob: -7.1814284324646
    6. '	ans' → logprob: -8.181428909301758
    7. '(ans' → logprob: -9.306428909301758
    8. '               ' → logprob: -11.181428909301758
    9. '
' → logprob: -12.056428909301758
    10. '```' → logprob: -12.306428909301758

Token 805: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24627594649791718
    2. ':
' → logprob: -2.1212759017944336
    3. '           ' → logprob: -3.3712759017944336
    4. ' signifie' → logprob: -3.6212759017944336
    5. '       ' → logprob: -4.371275901794434
    6. ' means' → logprob: -4.496275901794434
    7. ' and' → logprob: -5.121275901794434
    8. '   ' → logprob: -6.246275901794434
    9. 'means' → logprob: -6.371275901794434
    10. 'and' → logprob: -6.746275901794434

Token 806: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6443158388137817
    2. '           ' → logprob: -0.7693158388137817
    3. ' qu' → logprob: -5.519315719604492
    4. '       ' → logprob: -6.019315719604492
    5. 'que' → logprob: -6.144315719604492
    6. '#' → logprob: -6.894315719604492
    7. ' that' → logprob: -7.519315719604492
    8. '   ' → logprob: -8.019315719604492
    9. 'qu' → logprob: -8.144315719604492
    10. '          ' → logprob: -8.144315719604492

Token 807: ''on' (ID: 25812)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6772255301475525
    2. ' field' → logprob: -1.5522255897521973
    3. '       ' → logprob: -2.0522255897521973
    4. 'on' → logprob: -2.6772255897521973
    5. '           ' → logprob: -3.1772255897521973
    6. '   ' → logprob: -4.427225589752197
    7. ' we' → logprob: -4.927225589752197
    8. ' que' → logprob: -5.427225589752197
    9. ' il' → logprob: -5.427225589752197
    10. ''on' → logprob: -5.802225589752197

Token 808: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.27039745450019836
    2. '           ' → logprob: -2.895397424697876
    3. ' doit' → logprob: -3.020397424697876
    4. 'ans' → logprob: -3.520397424697876
    5. 'dé' → logprob: -3.770397424697876
    6. ' do' → logprob: -4.395397663116455
    7. '       ' → logprob: -4.395397663116455
    8. 'append' → logprob: -4.645397663116455
    9. '   ' → logprob: -4.895397663116455
    10. '#' → logprob: -5.020397663116455

Token 809: ' enregistr' (ID: 76845)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1122855469584465
    2. ' ans' → logprob: -2.362285614013672
    3. 'append' → logprob: -5.112285614013672
    4. '   ' → logprob: -5.987285614013672
    5. '           ' → logprob: -6.237285614013672
    6. ' append' → logprob: -7.487285614013672
    7. 'aj' → logprob: -8.362285614013672
    8. '       ' → logprob: -8.487285614013672
    9. '#' → logprob: -9.237285614013672
    10. 'app' → logprob: -9.487285614013672

Token 810: 'er' (ID: 259)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22257520258426666
    2. 'er' → logprob: -2.3475751876831055
    3. 'ans' → logprob: -3.0975751876831055
    4. ' ans' → logprob: -3.4725751876831055
    5. '       ' → logprob: -4.0975751876831055
    6. '               ' → logprob: -4.9725751876831055
    7. '   ' → logprob: -6.4725751876831055
    8. '(ans' → logprob: -6.7225751876831055
    9. '.append' → logprob: -7.5975751876831055
    10. '          ' → logprob: -8.597575187683105

Token 811: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5069104433059692
    2. '[' → logprob: -1.0069104433059692
    3. ' ans' → logprob: -4.13191032409668
    4. '   ' → logprob: -4.50691032409668
    5. '(ans' → logprob: -6.00691032409668
    6. ' [' → logprob: -6.38191032409668
    7. '       ' → logprob: -7.63191032409668
    8. 'frm' → logprob: -8.00691032409668
    9. '	ans' → logprob: -9.38191032409668
    10. '(frm' → logprob: -10.38191032409668

Token 812: ''action' (ID: 107237)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7077953219413757
    2. 'ans' → logprob: -0.9577953219413757
    3. ' [' → logprob: -2.8327953815460205
    4. '[' → logprob: -2.9577953815460205
    5. '   ' → logprob: -5.207795143127441
    6. '[
' → logprob: -6.082795143127441
    7. '["' → logprob: -6.207795143127441
    8. '['' → logprob: -6.957795143127441
    9. '(ans' → logprob: -7.207795143127441
    10. ' ' → logprob: -8.457795143127441

Token 813: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20166796445846558
    2. ' ans' → logprob: -2.0766680240631104
    3. '(ans' → logprob: -3.3266680240631104
    4. 'ans' → logprob: -4.701667785644531
    5. '           ' → logprob: -5.451667785644531
    6. '[' → logprob: -6.076667785644531
    7. '
' → logprob: -6.451667785644531
    8. ' =' → logprob: -6.701667785644531
    9. ',' → logprob: -7.326667785644531
    10. ' (' → logprob: -7.701667785644531

Token 814: ' consiste' (ID: 46504)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.053287308663129807
    2. ' ans' → logprob: -3.1782872676849365
    3. 'append' → logprob: -5.303287506103516
    4. 'if' → logprob: -6.428287506103516
    5. ' if' → logprob: -7.428287506103516
    6. '       ' → logprob: -7.553287506103516
    7. '.append' → logprob: -7.553287506103516
    8. 'aj' → logprob: -8.053287506103516
    9. '   ' → logprob: -8.178287506103516
    10. '           ' → logprob: -8.178287506103516

Token 815: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4414580166339874
    2. ' à' → logprob: -1.066457986831665
    3. '       ' → logprob: -4.566458225250244
    4. '           ' → logprob: -6.816458225250244
    5. '.append' → logprob: -7.816458225250244
    6. 'a' → logprob: -8.566457748413086
    7. ''à' → logprob: -8.691457748413086
    8. '   ' → logprob: -9.066457748413086
    9. ' a' → logprob: -9.566457748413086
    10. ' =' → logprob: -10.316457748413086

Token 816: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008815824054181576
    2. ' ans' → logprob: -4.758815765380859
    3. 'append' → logprob: -9.13381576538086
    4. '   ' → logprob: -9.88381576538086
    5. 'if' → logprob: -11.38381576538086
    6. '       ' → logprob: -11.75881576538086
    7. '           ' → logprob: -12.00881576538086
    8. '(ans' → logprob: -12.50881576538086
    9. 'app' → logprob: -13.00881576538086
    10. '	ans' → logprob: -13.25881576538086

Token 817: 'trans' (ID: 2623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.090887151658535
    2. 'move' → logprob: -3.4658870697021484
    3. 'dé' → logprob: -3.7158870697021484
    4. 'append' → logprob: -4.090887069702148
    5. ' déplacer' → logprob: -5.340887069702148
    6. 'trans' → logprob: -6.465887069702148
    7. 'transfer' → logprob: -6.590887069702148
    8. '   ' → logprob: -6.840887069702148
    9. 'faire' → logprob: -6.840887069702148
    10. 'aj' → logprob: -6.965887069702148

Token 818: 'porter' (ID: 44665)
  Prédit: 'porter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'porter' → logprob: -0.0037161188665777445
    2. 'fér' → logprob: -6.128715991973877
    3. 'mettre' → logprob: -7.253715991973877
    4. 'fer' → logprob: -8.253716468811035
    5. '   ' → logprob: -8.628716468811035
    6. 'port' → logprob: -9.128716468811035
    7. '"' → logprob: -10.253716468811035
    8. '#' → logprob: -10.378716468811035
    9. ' porter' → logprob: -10.503716468811035
    10. '       ' → logprob: -10.878716468811035

Token 819: '"' (ID: 1)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.15026570856571198
    2. ' frm' → logprob: -2.150265693664551
    3. '[' → logprob: -3.900265693664551
    4. ' [' → logprob: -6.650265693664551
    5. '(frm' → logprob: -6.650265693664551
    6. '   ' → logprob: -8.65026569366455
    7. ' ' → logprob: -10.90026569366455
    8. 'fr' → logprob: -11.02526569366455
    9. '.frm' → logprob: -11.52526569366455
    10. '[
' → logprob: -12.77526569366455

Token 820: ' à' (ID: 1221)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.027611196041107178
    2. '[' → logprob: -3.777611255645752
    3. ' frm' → logprob: -5.902611255645752
    4. '(frm' → logprob: -6.652611255645752
    5. '   ' → logprob: -8.152610778808594
    6. ' [' → logprob: -10.402610778808594
    7. '.frm' → logprob: -12.402610778808594
    8. '       ' → logprob: -12.402610778808594
    9. 'fr' → logprob: -13.277610778808594
    10. '[
' → logprob: -13.777610778808594

Token 821: ' la' (ID: 557)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.32506096363067627
    2. '[' → logprob: -1.3250609636306763
    3. ' frm' → logprob: -4.700060844421387
    4. '(frm' → logprob: -6.700060844421387
    5. ' [' → logprob: -6.825060844421387
    6. '   ' → logprob: -8.825060844421387
    7. '[to' → logprob: -10.450060844421387
    8. '[from' → logprob: -11.075060844421387
    9. '[
' → logprob: -11.200060844421387
    10. '.frm' → logprob: -11.200060844421387

Token 822: ' case' (ID: 1890)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11059233546257019
    2. '[to' → logprob: -2.6105923652648926
    3. 'field' → logprob: -4.235592365264893
    4. '[' → logprob: -5.110592365264893
    5. 'coin' → logprob: -5.235592365264893
    6. ' to' → logprob: -5.860592365264893
    7. 'next' → logprob: -7.610592365264893
    8. 'ans' → logprob: -7.860592365264893
    9. 'co' → logprob: -7.985592365264893
    10. ' [' → logprob: -8.235591888427734

Token 823: ' suivante' (ID: 107439)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.2708471417427063
    2. '[' → logprob: -1.5208470821380615
    3. ' frm' → logprob: -4.145847320556641
    4. '(frm' → logprob: -6.520847320556641
    5. ' [' → logprob: -7.145847320556641
    6. '[from' → logprob: -7.895847320556641
    7. 'from' → logprob: -9.02084732055664
    8. '   ' → logprob: -9.89584732055664
    9. '[
' → logprob: -10.77084732055664
    10. '[to' → logprob: -10.89584732055664

Token 824: '
' (ID: 198)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4901835322380066
    2. 'ans' → logprob: -1.4901835918426514
    3. '       ' → logprob: -2.9901835918426514
    4. '           ' → logprob: -3.2401835918426514
    5. '   ' → logprob: -3.2401835918426514
    6. '
' → logprob: -3.7401835918426514
    7. ',' → logprob: -5.240183353424072
    8. '(ans' → logprob: -6.365183353424072
    9. '.append' → logprob: -7.240183353424072
    10. '	ans' → logprob: -7.865183353424072

Token 825: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22529520094394684
    2. ' ans' → logprob: -1.7252951860427856
    3. '   ' → logprob: -4.225295066833496
    4. '(ans' → logprob: -5.850295066833496
    5. '[' → logprob: -6.475295066833496
    6. ' =' → logprob: -6.600295066833496
    7. '       ' → logprob: -7.100295066833496
    8. 'if' → logprob: -7.225295066833496
    9. ' if' → logprob: -8.100295066833496
    10. '.append' → logprob: -8.600295066833496

Token 826: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7859217524528503
    2. ' ans' → logprob: -0.7859217524528503
    3. 'if' → logprob: -2.785921812057495
    4. ' if' → logprob: -3.910921812057495
    5. '
' → logprob: -5.785921573638916
    6. '   ' → logprob: -5.785921573638916
    7. '       ' → logprob: -8.160922050476074
    8. '(ans' → logprob: -8.535922050476074
    9. '           ' → logprob: -9.285922050476074
    10. '[' → logprob: -10.035922050476074

Token 827: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09396206587553024
    2. 'if' → logprob: -2.4689619541168213
    3. ' ans' → logprob: -6.0939621925354
    4. '   ' → logprob: -6.5939621925354
    5. '       ' → logprob: -7.0939621925354
    6. ' if' → logprob: -7.5939621925354
    7. '           ' → logprob: -10.343961715698242
    8. '(ans' → logprob: -11.593961715698242
    9. '	ans' → logprob: -12.468961715698242
    10. '
' → logprob: -12.843961715698242

Token 828: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9027087092399597
    2. ' ans' → logprob: -1.2777087688446045
    3. ' if' → logprob: -1.6527087688446045
    4. 'ans' → logprob: -2.1527087688446045
    5. '   ' → logprob: -5.902708530426025
    6. 'append' → logprob: -6.277708530426025
    7. '.append' → logprob: -6.277708530426025
    8. '       ' → logprob: -7.402708530426025
    9. ' append' → logprob: -8.027709007263184
    10. '
' → logprob: -8.527709007263184

Token 829: 'registre' (ID: 77466)
  Prédit: 'registre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'registre' → logprob: -0.9180058836936951
    2. 'registrer' → logprob: -1.0430059432983398
    3. 'ans' → logprob: -2.04300594329834
    4. 'reg' → logprob: -2.79300594329834
    5. '   ' → logprob: -4.29300594329834
    6. '           ' → logprob: -4.66800594329834
    7. '       ' → logprob: -4.79300594329834
    8. 'registr' → logprob: -4.79300594329834
    9. 'register' → logprob: -5.66800594329834
    10. 'regs' → logprob: -5.91800594329834

Token 830: ' alors' (ID: 17971)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09396281838417053
    2. '[' → logprob: -2.5939629077911377
    3. '   ' → logprob: -5.218962669372559
    4. ' ans' → logprob: -5.343962669372559
    5. '(ans' → logprob: -6.093962669372559
    6. 'frm' → logprob: -6.468962669372559
    7. '       ' → logprob: -7.343962669372559
    8. ' [' → logprob: -8.593962669372559
    9. '(frm' → logprob: -9.843962669372559
    10. '	ans' → logprob: -10.843962669372559

Token 831: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0015680687502026558
    2. '[' → logprob: -6.876567840576172
    3. '   ' → logprob: -8.001567840576172
    4. ' ans' → logprob: -9.001567840576172
    5. '(ans' → logprob: -9.626567840576172
    6. '       ' → logprob: -11.626567840576172
    7. '	ans' → logprob: -14.001567840576172
    8. '           ' → logprob: -14.626567840576172
    9. 'frm' → logprob: -15.376567840576172
    10. ' [' → logprob: -15.751567840576172

Token 832: ' mouvement' (ID: 62236)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010715753771364689
    2. 'operation' → logprob: -5.010715961456299
    3. '[' → logprob: -6.385715961456299
    4. ' ans' → logprob: -6.885715961456299
    5. '(ans' → logprob: -8.01071548461914
    6. '   ' → logprob: -8.51071548461914
    7. 'action' → logprob: -8.76071548461914
    8. 'op' → logprob: -9.01071548461914
    9. 'append' → logprob: -9.01071548461914
    10. '[action' → logprob: -9.63571548461914

Token 833: ' depuis' (ID: 16277)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1380131095647812
    2. '       ' → logprob: -2.5130131244659424
    3. '.append' → logprob: -4.388012886047363
    4. ' ans' → logprob: -4.388012886047363
    5. '   ' → logprob: -4.513012886047363
    6. '           ' → logprob: -4.888012886047363
    7. '(ans' → logprob: -6.138012886047363
    8. '
' → logprob: -6.388012886047363
    9. 'append' → logprob: -7.763012886047363
    10. ' =' → logprob: -9.763012886047363

Token 834: ' frm' (ID: 45032)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.0010927118128165603
    2. ' frm' → logprob: -6.876092910766602
    3. '   ' → logprob: -10.126092910766602
    4. '(frm' → logprob: -11.626092910766602
    5. '       ' → logprob: -12.126092910766602
    6. 'fr' → logprob: -12.751092910766602
    7. '[' → logprob: -14.626092910766602
    8. '.frm' → logprob: -14.876092910766602
    9. '    ' → logprob: -15.001092910766602
    10. 'form' → logprob: -15.126092910766602

Token 835: ' vers' (ID: 3640)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2986757159233093
    2. ' +' → logprob: -1.673675775527954
    3. '+' → logprob: -2.798675775527954
    4. ',' → logprob: -5.048675537109375
    5. ' +=' → logprob: -7.173675537109375
    6. 'append' → logprob: -7.548675537109375
    7. '(frm' → logprob: -7.798675537109375
    8. '.extend' → logprob: -8.423675537109375
    9. '+=' → logprob: -8.548675537109375
    10. ')' → logprob: -8.548675537109375

Token 836: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.023252464830875397
    2. ' to' → logprob: -3.773252487182617
    3. '   ' → logprob: -12.898252487182617
    4. '[to' → logprob: -12.898252487182617
    5. '(to' → logprob: -14.398252487182617
    6. '	to' → logprob: -14.398252487182617
    7. '       ' → logprob: -15.523252487182617
    8. 'frm' → logprob: -15.523252487182617
    9. '```' → logprob: -16.273252487182617
    10. '`' → logprob: -16.648252487182617

Token 837: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16141682863235474
    2. 'ans' → logprob: -2.78641676902771
    3. '       ' → logprob: -3.28641676902771
    4. ' ans' → logprob: -4.036417007446289
    5. '(ans' → logprob: -4.286417007446289
    6. '   ' → logprob: -4.661417007446289
    7. '           ' → logprob: -5.411417007446289
    8. '```' → logprob: -6.911417007446289
    9. ',' → logprob: -7.286417007446289
    10. ')
' → logprob: -7.411417007446289

Token 838: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4259057939052582
    2. 'ans' → logprob: -1.9259058237075806
    3. '   ' → logprob: -2.300905704498291
    4. '
' → logprob: -2.800905704498291
    5. '           ' → logprob: -3.925905704498291
    6. ' ans' → logprob: -4.050905704498291
    7. '(ans' → logprob: -6.550905704498291
    8. 'if' → logprob: -7.300905704498291
    9. '```' → logprob: -7.925905704498291
    10. '	ans' → logprob: -9.30090618133545

Token 839: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0700763687491417
    2. 'if' (adapté à ' if') → logprob: -3.3200764656066895
    3. ' ans' → logprob: -4.3200764656066895
    4. '   ' → logprob: -4.3200764656066895
    5. '       ' → logprob: -5.5700764656066895
    6. ' if' → logprob: -6.9450764656066895
    7. '           ' → logprob: -9.195075988769531
    8. '(ans' → logprob: -10.695075988769531
    9. '```' → logprob: -10.945075988769531
    10. '	ans' → logprob: -11.570075988769531

Token 840: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.16022443771362305
    2. ' have' → logprob: -1.910224437713623
    3. '   ' → logprob: -15.535224914550781
    4. '_have' → logprob: -17.16022491455078
    5. '.have' → logprob: -17.28522491455078
    6. '           ' → logprob: -17.53522491455078
    7. 'Have' → logprob: -17.66022491455078
    8. 'has' → logprob: -17.91022491455078
    9. ' ' → logprob: -18.03522491455078
    10. '       ' → logprob: -18.03522491455078

Token 841: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0017456236528232694
    2. '_C' → logprob: -6.376745700836182
    3. '_coin' → logprob: -10.501745223999023
    4. '_' → logprob: -11.876745223999023
    5. ' Coin' → logprob: -12.376745223999023
    6. 'Coins' → logprob: -14.126745223999023
    7. 'Coal' → logprob: -14.251745223999023
    8. '[' → logprob: -14.501745223999023
    9. '```' → logprob: -14.626745223999023
    10. ' ' → logprob: -14.876745223999023

Token 842: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1606397181749344
    2. ':
' → logprob: -1.910639762878418
    3. '==' → logprob: -8.410639762878418
    4. ' ==' → logprob: -8.910639762878418
    5. '=' → logprob: -11.410639762878418
    6. ' =' → logprob: -11.660639762878418
    7. '   ' → logprob: -11.910639762878418
    8. ' :' → logprob: -12.035639762878418
    9. '):
' → logprob: -12.160639762878418
    10. '       ' → logprob: -12.285639762878418

Token 843: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02450445294380188
    2. 'ans' → logprob: -3.7745044231414795
    3. ' ans' → logprob: -6.774504661560059
    4. '   ' → logprob: -9.899504661560059
    5. '       ' → logprob: -9.899504661560059
    6. '	ans' → logprob: -12.149504661560059
    7. '               ' → logprob: -12.524504661560059
    8. '(ans' → logprob: -12.649504661560059
    9. ':
' → logprob: -13.524504661560059
    10. '          ' → logprob: -14.399504661560059

Token 844: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.003352855332195759
    2. ' ans' → logprob: -5.753352642059326
    3. '           ' → logprob: -8.753353118896484
    4. '   ' → logprob: -11.253353118896484
    5. '	ans' → logprob: -13.128353118896484
    6. '       ' → logprob: -13.878353118896484
    7. '(ans' → logprob: -14.378353118896484
    8. '               ' → logprob: -15.003353118896484
    9. '
' → logprob: -15.378353118896484
    10. 'answer' → logprob: -16.128353118896484

Token 845: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.56102097814437e-05
    2. '.' → logprob: -10.000045776367188
    3. 'append' → logprob: -16.625045776367188
    4. '.app' → logprob: -17.000045776367188
    5. ' .' → logprob: -17.125045776367188
    6. '.add' → logprob: -18.375045776367188
    7. '.Append' → logprob: -18.500045776367188
    8. '.ap' → logprob: -18.500045776367188
    9. ').' → logprob: -18.750045776367188
    10. ' append' → logprob: -20.375045776367188

Token 846: '(frm' (ID: 180516)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.004812323022633791
    2. '(' → logprob: -5.754812240600586
    3. '(frm' → logprob: -6.629812240600586
    4. '((' → logprob: -8.254812240600586
    5. '(fr' → logprob: -10.004812240600586
    6. '([[' → logprob: -13.004812240600586
    7. '(([' → logprob: -13.379812240600586
    8. '[' → logprob: -13.754812240600586
    9. ' ([' → logprob: -13.879812240600586
    10. '(form' → logprob: -14.629812240600586

Token 847: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38857123255729675
    2. '+' → logprob: -1.1385712623596191
    3. ',' → logprob: -6.763571262359619
    4. ')' → logprob: -8.013570785522461
    5. '+[' → logprob: -9.013570785522461
    6. ',to' → logprob: -10.388570785522461
    7. '   ' → logprob: -11.013570785522461
    8. '+","+' → logprob: -11.638570785522461
    9. '+
' → logprob: -11.888570785522461
    10. '[to' → logprob: -12.513570785522461

Token 848: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.5597102396423e-05
    2. ' to' → logprob: -10.250035285949707
    3. '[to' → logprob: -15.875035285949707
    4. '['' → logprob: -17.250036239624023
    5. '[' → logprob: -18.250036239624023
    6. '["' → logprob: -18.500036239624023
    7. '(to' → logprob: -20.000036239624023
    8. ' ' → logprob: -20.875036239624023
    9. '	to' → logprob: -21.000036239624023
    10. '   ' → logprob: -21.125036239624023

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.941161776310764e-05
    2. ')
' → logprob: -10.875039100646973
    3. ' )' → logprob: -12.000039100646973
    4. '])' → logprob: -12.750039100646973
    5. '())' → logprob: -12.750039100646973
    6. '）' → logprob: -13.750039100646973
    7. ']' → logprob: -14.000039100646973
    8. '<|end|>' → logprob: -14.000039100646973
    9. ')]' → logprob: -14.125039100646973
    10. '       ' → logprob: -14.250039100646973

Token 850: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 851: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38974428176879883
    2. 'print' → logprob: -1.3897442817687988
    3. 'for' → logprob: -3.014744281768799
    4. '
' → logprob: -3.889744281768799
    5. '    
' → logprob: -6.639744281768799
    6. '```' → logprob: -6.889744281768799
    7. '#' → logprob: -7.389744281768799
    8. ' for' → logprob: -7.639744281768799
    9. 'return' → logprob: -8.26474380493164
    10. '<|end|>' → logprob: -8.51474380493164

Token 852: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030397692695260048
    2. '   ' → logprob: -3.780397653579712
    3. 'print' → logprob: -5.030397891998291
    4. '```' → logprob: -8.530397415161133
    5. '
' → logprob: -8.780397415161133
    6. '#' (adapté à ' #') → logprob: -8.905397415161133
    7. ' for' → logprob: -9.280397415161133
    8. '    
' → logprob: -11.655397415161133
    9. '``' → logprob: -14.530397415161133
    10. '#print' → logprob: -14.655397415161133

Token 853: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1274082511663437
    2. 'for' → logprob: -2.127408266067505
    3. '#' → logprob: -8.127408027648926
    4. '   ' → logprob: -8.627408027648926
    5. ' print' → logprob: -13.127408027648926
    6. ' for' → logprob: -13.252408027648926
    7. '#print' → logprob: -13.877408027648926
    8. '```' → logprob: -14.002408027648926
    9. 'pour' → logprob: -16.752408981323242
    10. '``' → logprob: -18.002408981323242

Token 854: ' avoir' (ID: 16595)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5687788128852844
    2. '   ' → logprob: -1.3187787532806396
    3. 'le' → logprob: -2.8187787532806396
    4. '#' → logprob: -3.4437787532806396
    5. 'for' → logprob: -3.6937787532806396
    6. ' la' → logprob: -3.8187787532806396
    7. 'the' → logprob: -4.693778991699219
    8. 'l' → logprob: -4.818778991699219
    9. 'print' → logprob: -6.318778991699219
    10. ' le' → logprob: -6.443778991699219

Token 855: ' fini' (ID: 63561)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29685133695602417
    2. 'for' → logprob: -1.921851396560669
    3. '#' → logprob: -2.421851396560669
    4. '   ' → logprob: -4.17185115814209
    5. ' print' → logprob: -6.17185115814209
    6. ' for' → logprob: -6.42185115814209
    7. 'pour' → logprob: -7.54685115814209
    8. ' parcour' → logprob: -7.79685115814209
    9. ' #' → logprob: -8.04685115814209
    10. 'avoir' → logprob: -8.04685115814209

Token 856: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07730092853307724
    2. 'print' → logprob: -3.202301025390625
    3. 'for' → logprob: -4.202301025390625
    4. '#' → logprob: -4.827301025390625
    5. ' la' → logprob: -5.952301025390625
    6. ' for' → logprob: -6.077301025390625
    7. '       ' → logprob: -6.452301025390625
    8. ' print' → logprob: -7.202301025390625
    9. 'l' → logprob: -7.327301025390625
    10. '
' → logprob: -7.452301025390625

Token 857: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3568214774131775
    2. ' les' → logprob: -1.9818215370178223
    3. '   ' → logprob: -2.1068215370178223
    4. 'le' → logprob: -3.9818215370178223
    5. '#' → logprob: -4.731821537017822
    6. 'la' → logprob: -5.356821537017822
    7. 'l' → logprob: -6.481821537017822
    8. ':' → logprob: -6.481821537017822
    9. 'print' → logprob: -6.731821537017822
    10. ' le' → logprob: -7.106821537017822

Token 858: ' mouvements' (ID: 119420)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01894204504787922
    2. 'dé' → logprob: -5.143941879272461
    3. ' mouvements' → logprob: -5.393941879272461
    4. 'print' → logprob: -6.143941879272461
    5. ' déplacements' → logprob: -6.268941879272461
    6. 'mov' → logprob: -6.518941879272461
    7. 'for' → logprob: -6.768941879272461
    8. '   ' → logprob: -7.393941879272461
    9. '#' → logprob: -7.893941879272461
    10. 'ans' → logprob: -8.518941879272461

Token 859: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005334674380719662
    2. 'print' → logprob: -5.255334854125977
    3. ' print' → logprob: -10.255334854125977
    4. '    
' → logprob: -10.380334854125977
    5. '
' → logprob: -10.880334854125977
    6. 'for' → logprob: -11.880334854125977
    7. '#' → logprob: -12.130334854125977
    8. ',' → logprob: -13.005334854125977
    9. ' for' → logprob: -14.380334854125977
    10. '       ' → logprob: -15.755334854125977

Token 860: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007716284599155188
    2. '   ' → logprob: -7.500771522521973
    3. ' print' → logprob: -8.500771522521973
    4. '```' → logprob: -11.125771522521973
    5. '#' → logprob: -15.250771522521973
    6. '
' → logprob: -15.750771522521973
    7. '``' → logprob: -16.25077247619629
    8. '#print' → logprob: -18.00077247619629
    9. '	print' → logprob: -18.25077247619629
    10. ' ' → logprob: -19.12577247619629

Token 861: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015692608430981636
    2. '#' → logprob: -7.0015692710876465
    3. '   ' → logprob: -7.5015692710876465
    4. ' print' → logprob: -9.501568794250488
    5. 'for' → logprob: -11.251568794250488
    6. '
' → logprob: -11.626568794250488
    7. '```' → logprob: -12.251568794250488
    8. '#print' → logprob: -12.751568794250488
    9. ' #' → logprob: -15.376568794250488
    10. '``' → logprob: -15.876568794250488

Token 862: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011742709903046489
    2. '(len' → logprob: -6.751174449920654
    3. '   ' → logprob: -12.501173973083496
    4. ' len' → logprob: -15.001173973083496
    5. '[len' → logprob: -17.751174926757812
    6. 'print' → logprob: -18.251174926757812
    7. '=len' → logprob: -20.251174926757812
    8. '       ' → logprob: -20.501174926757812
    9. '	len' → logprob: -20.501174926757812
    10. '
' → logprob: -21.126174926757812

Token 863: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0017401513177901506
    2. 'nombre' → logprob: -6.501739978790283
    3. 'print' → logprob: -8.376740455627441
    4. ' len' → logprob: -12.876740455627441
    5. '   ' → logprob: -13.751740455627441
    6. '(len' → logprob: -13.876740455627441
    7. ' nombre' → logprob: -14.126740455627441
    8. '#' → logprob: -14.251740455627441
    9. '
' → logprob: -14.376740455627441
    10. 'length' → logprob: -14.626740455627441

Token 864: ' total' (ID: 3609)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.029141999781131744
    2. '   ' → logprob: -4.154141902923584
    3. 'len' → logprob: -4.404141902923584
    4. '(' → logprob: -7.529141902923584
    5. '=len' → logprob: -9.654142379760742
    6. 'd' → logprob: -9.779142379760742
    7. '       ' → logprob: -10.529142379760742
    8. 'de' → logprob: -10.904142379760742
    9. '```' → logprob: -10.904142379760742
    10. 'print' → logprob: -11.529142379760742

Token 865: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7122213244438171
    2. '(len' → logprob: -0.7122213244438171
    3. 'len' → logprob: -4.337221145629883
    4. '(' → logprob: -6.087221145629883
    5. 'print' → logprob: -6.087221145629883
    6. '       ' → logprob: -7.462221145629883
    7. 'd' → logprob: -8.212221145629883
    8. 'de' → logprob: -9.712221145629883
    9. '(ans' → logprob: -9.712221145629883
    10. 'of' → logprob: -10.087221145629883

Token 866: ''op' (ID: 70747)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2266814112663269
    2. 'len' → logprob: -2.1016814708709717
    3. '(ans' → logprob: -3.4766814708709717
    4. '   ' → logprob: -4.226681232452393
    5. ' len' → logprob: -4.851681232452393
    6. '(len' → logprob: -4.976681232452393
    7. 'ops' → logprob: -5.351681232452393
    8. ' ans' → logprob: -5.476681232452393
    9. 'operations' → logprob: -5.976681232452393
    10. 'mov' → logprob: -6.726681232452393

Token 867: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -1.0802738870552275e-05
    2. 'ér' → logprob: -12.00001049041748
    3. 'é' → logprob: -13.75001049041748
    4. 's' → logprob: -13.75001049041748
    5. '#' → logprob: -14.25001049041748
    6. '
' → logprob: -14.87501049041748
    7. 'er' → logprob: -15.12501049041748
    8. 'ération' → logprob: -15.25001049041748
    9. '%C' → logprob: -15.75001049041748
    10. 'érences' → logprob: -16.375011444091797

Token 868: ' effectu' (ID: 100880)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014395601116120815
    2. '   ' → logprob: -4.264395713806152
    3. '```' → logprob: -8.514395713806152
    4. ' print' → logprob: -10.389395713806152
    5. '``' → logprob: -14.889395713806152
    6. '`' → logprob: -16.014394760131836
    7. '
' → logprob: -16.514394760131836
    8. '(' → logprob: -16.764394760131836
    9. '(print' → logprob: -16.889394760131836
    10. '	print' → logprob: -17.139394760131836

Token 869: 'ées' (ID: 5161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1291818767786026
    2. 'print' → logprob: -2.1291818618774414
    3. '(len' → logprob: -7.504181861877441
    4. '
' → logprob: -7.629181861877441
    5. '       ' → logprob: -8.254181861877441
    6. ' print' → logprob: -8.504181861877441
    7. '()
' → logprob: -8.504181861877441
    8. '```' → logprob: -9.379181861877441
    9. '    
' → logprob: -9.504181861877441
    10. 'len' → logprob: -9.629181861877441

Token 870: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06239335983991623
    2. '   ' → logprob: -2.8123934268951416
    3. '```' → logprob: -7.8123931884765625
    4. ' print' → logprob: -10.812393188476562
    5. '``' → logprob: -14.562393188476562
    6. '`' → logprob: -15.437393188476562
    7. '	print' → logprob: -16.437393188476562
    8. '
' → logprob: -16.562393188476562
    9. '(print' → logprob: -18.187393188476562
    10. '#print' → logprob: -18.312393188476562

Token 871: 'tail' (ID: 20472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.578307032585144
    2. 'len' → logprob: -0.828307032585144
    3. '   ' → logprob: -6.078307151794434
    4. '(len' → logprob: -10.203307151794434
    5. '```' → logprob: -10.703307151794434
    6. '
' → logprob: -12.203307151794434
    7. ' len' → logprob: -12.203307151794434
    8. ' print' → logprob: -13.453307151794434
    9. '[len' → logprob: -14.953307151794434
    10. ')' → logprob: -15.078307151794434

Token 872: 'le' (ID: 282)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8439713716506958
    2. 'e' → logprob: -1.0939713716506958
    3. 'len' → logprob: -1.4689713716506958
    4. 'le' → logprob: -5.843971252441406
    5. '=len' → logprob: -7.093971252441406
    6. '(len' → logprob: -7.843971252441406
    7. '   ' → logprob: -8.093971252441406
    8. '```' → logprob: -8.218971252441406
    9. ' len' → logprob: -8.968971252441406
    10. 'ne' → logprob: -10.468971252441406

Token 873: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.135819760151207e-05
    2. 'ans' → logprob: -10.12507152557373
    3. '(' → logprob: -10.87507152557373
    4. '   ' → logprob: -12.12507152557373
    5. '(len' → logprob: -12.75007152557373
    6. ' (' → logprob: -13.25007152557373
    7. '(
' → logprob: -14.12507152557373
    8. ')' → logprob: -15.12507152557373
    9. '
' → logprob: -15.25007152557373
    10. '```' → logprob: -15.37507152557373

Token 874: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20154306292533875
    2. '(ans' → logprob: -1.7015430927276611
    3. ' ans' → logprob: -8.951542854309082
    4. '	ans' → logprob: -16.2015438079834
    5. '(' → logprob: -16.3265438079834
    6. '_ans' → logprob: -17.0765438079834
    7. 'Ans' → logprob: -18.2015438079834
    8. 'ANS' → logprob: -18.5765438079834
    9. ' (' → logprob: -18.8265438079834
    10. 'answer' → logprob: -19.3265438079834

Token 875: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009246084839105606
    2. ')' → logprob: -4.759245872497559
    3. '   ' → logprob: -7.509245872497559
    4. '())
' → logprob: -10.134245872497559
    5. 'print' → logprob: -11.009245872497559
    6. '()
' → logprob: -11.509245872497559
    7. ')
' → logprob: -11.759245872497559
    8. ' )
' → logprob: -12.634245872497559
    9. '()' → logprob: -12.884245872497559
    10. '       ' → logprob: -14.134245872497559

Token 876: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001458927639760077
    2. '   ' → logprob: -6.751459121704102
    3. '```' → logprob: -8.251459121704102
    4. ' print' → logprob: -10.501459121704102
    5. '``' → logprob: -16.2514591217041
    6. '
' → logprob: -16.6264591217041
    7. '`' → logprob: -18.8764591217041
    8. '    
' → logprob: -20.2514591217041
    9. '	print' → logprob: -20.5014591217041
    10. '#print' → logprob: -21.7514591217041

Token 877: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004703880287706852
    2. '```' → logprob: -5.754703998565674
    3. '   ' → logprob: -6.504703998565674
    4. ' print' → logprob: -10.504703521728516
    5. '``' → logprob: -13.754703521728516
    6. '`' → logprob: -16.129703521728516
    7. '
' → logprob: -18.129703521728516
    8. '	print' → logprob: -19.754703521728516
    9. '    
' → logprob: -19.879703521728516
    10. '#print' → logprob: -21.379703521728516

Token 878: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -9.865583706414327e-05
    2. '(' → logprob: -9.25009822845459
    3. 'len' → logprob: -13.00009822845459
    4. ' (' → logprob: -15.87509822845459
    5. ' len' → logprob: -16.500099182128906
    6. '()' → logprob: -18.000099182128906
    7. '=len' → logprob: -18.250099182128906
    8. '[len' → logprob: -18.625099182128906
    9. '('' → logprob: -18.750099182128906
    10. '	len' → logprob: -19.250099182128906

Token 879: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. 'ans' → logprob: -17.25
    4. '	ans' → logprob: -20.125
    5. ' ans' → logprob: -21.25
    6. '(answer' → logprob: -22.0
    7. ' (' → logprob: -22.125
    8. '_ans' → logprob: -22.625
    9. '(arr' → logprob: -23.25
    10. 'Ans' → logprob: -23.625

Token 880: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2015565037727356
    2. ')' → logprob: -1.7015564441680908
    3. '())
' → logprob: -9.076556205749512
    4. '())' → logprob: -11.076556205749512
    5. '()' → logprob: -12.201556205749512
    6. ')
' → logprob: -12.201556205749512
    7. '()
' → logprob: -13.826556205749512
    8. ')`
' → logprob: -13.951556205749512
    9. '))
' → logprob: -15.076556205749512
    10. '   ' → logprob: -15.076556205749512

Token 881: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031018999870866537
    2. '   ' → logprob: -6.253101825714111
    3. ' for' → logprob: -6.878101825714111
    4. '       ' → logprob: -9.12810230255127
    5. '```' → logprob: -10.50310230255127
    6. '	for' → logprob: -12.12810230255127
    7. '``' → logprob: -14.37810230255127
    8. '<|end|>' → logprob: -15.87810230255127
    9. '
' → logprob: -16.128101348876953
    10. '           ' → logprob: -17.128101348876953

Token 882: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.1557283111615106e-05
    2. ' for' → logprob: -11.000041961669922
    3. '   ' → logprob: -11.125041961669922
    4. '```' → logprob: -11.625041961669922
    5. '``' → logprob: -14.000041961669922
    6. '
' → logprob: -15.250041961669922
    7. '       ' → logprob: -17.000041961669922
    8. '	for' → logprob: -17.375041961669922
    9. '    
' → logprob: -17.750041961669922
    10. '#' (adapté à ' #') → logprob: -19.625041961669922

Token 883: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. ' for' → logprob: -14.625000953674316
    3. '```' → logprob: -14.875000953674316
    4. '   ' → logprob: -15.125000953674316
    5. '
' → logprob: -17.500001907348633
    6. '       ' → logprob: -17.750001907348633
    7. '``' → logprob: -18.375001907348633
    8. '	for' → logprob: -19.625001907348633
    9. '#' → logprob: -20.125001907348633
    10. '    
' → logprob: -20.625001907348633

Token 884: ' affiche' (ID: 127479)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06126301363110542
    2. ' for' → logprob: -3.186263084411621
    3. '
' → logprob: -4.061263084411621
    4. '   ' → logprob: -7.936263084411621
    5. ' 
' → logprob: -8.811263084411621
    6. '    
' → logprob: -8.936263084411621
    7. '#' → logprob: -9.561263084411621
    8. ' ' → logprob: -10.186263084411621
    9. 'n' → logprob: -10.686263084411621
    10. '  
' → logprob: -11.061263084411621

Token 885: ' chaque' (ID: 21194)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.0398740768432617
    2. '("\' → logprob: -1.0398740768432617
    3. '('\' → logprob: -2.0398740768432617
    4. '
' → logprob: -3.1648740768432617
    5. '*' → logprob: -3.2898740768432617
    6. '()' → logprob: -3.6648740768432617
    7. '#' → logprob: -4.164874076843262
    8. '()
' → logprob: -4.914874076843262
    9. 'each' → logprob: -5.039874076843262
    10. '"\' → logprob: -5.289874076843262

Token 886: ' opération' (ID: 86023)
  Prédit: 'operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operation' → logprob: -0.659632682800293
    2. 'ans' → logprob: -1.409632682800293
    3. 'op' → logprob: -2.159632682800293
    4. ' operation' → logprob: -3.409632682800293
    5. 'for' → logprob: -3.534632682800293
    6. '*' → logprob: -3.784632682800293
    7. '(*' → logprob: -4.534632682800293
    8. '(ans' → logprob: -4.909632682800293
    9. ' ans' → logprob: -5.159632682800293
    10. ' op' → logprob: -6.159632682800293

Token 887: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057658422738313675
    2. '(ans' → logprob: -3.6826584339141846
    3. '()
' → logprob: -3.8076584339141846
    4. '   ' → logprob: -5.8076581954956055
    5. '()' → logprob: -6.0576581954956055
    6. ' for' → logprob: -6.8076581954956055
    7. '       ' → logprob: -7.1826581954956055
    8. 'ans' → logprob: -7.5576581954956055
    9. '(' → logprob: -7.6826581954956055
    10. '
' → logprob: -8.432658195495605

Token 888: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1971522569656372
    2. ' une' → logprob: -2.4471521377563477
    3. 'la' → logprob: -2.6971521377563477
    4. 'f' → logprob: -2.8221521377563477
    5. '   ' → logprob: -2.8221521377563477
    6. 'ans' → logprob: -2.9471521377563477
    7. 'le' → logprob: -3.1971521377563477
    8. '\n' → logprob: -3.3221521377563477
    9. '
' → logprob: -3.4471521377563477
    10. '"\' → logprob: -3.5721521377563477

Token 889: ' ligne' (ID: 19583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21027812361717224
    2. '\n' → logprob: -2.460278034210205
    3. ' for' → logprob: -2.960278034210205
    4. 'nou' → logprob: -4.085278034210205
    5. 'new' → logprob: -4.710278034210205
    6. 'print' → logprob: -5.335278034210205
    7. 'ligne' → logprob: -5.335278034210205
    8. 'pour' → logprob: -5.710278034210205
    9. 'newline' → logprob: -5.835278034210205
    10. ' new' → logprob: -6.210278034210205

Token 890: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12950469553470612
    2. ' for' → logprob: -2.129504680633545
    3. '   ' → logprob: -6.379504680633545
    4. '
' → logprob: -7.379504680633545
    5. ':
' → logprob: -9.504505157470703
    6. '```' → logprob: -9.504505157470703
    7. '    
' → logprob: -10.254505157470703
    8. '       ' → logprob: -10.629505157470703
    9. ':' → logprob: -10.754505157470703
    10. '``' → logprob: -12.004505157470703

Token 891: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7088572978973389
    2. '   ' → logprob: -1.0838572978973389
    3. 'end' → logprob: -2.208857297897339
    4. '
' → logprob: -3.458857297897339
    5. '       ' → logprob: -4.833857536315918
    6. '    
' → logprob: -5.583857536315918
    7. ')' → logprob: -5.583857536315918
    8. ' for' → logprob: -5.833857536315918
    9. ')
' → logprob: -6.208857536315918
    10. ' end' → logprob: -6.333857536315918

Token 892: ' dé' (ID: 2393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5834497213363647
    2. '   ' → logprob: -1.4584497213363647
    3. 'print' → logprob: -2.2084498405456543
    4. ''' → logprob: -3.3334498405456543
    5. ' for' → logprob: -3.9584498405456543
    6. '"' → logprob: -4.208449840545654
    7. ' print' → logprob: -5.083449840545654
    8. 'join' → logprob: -5.083449840545654
    9. ' '' → logprob: -5.958449840545654
    10. ' ' → logprob: -6.208449840545654

Token 893: 'ball' (ID: 5052)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03773433715105057
    2. 'print' → logprob: -3.412734270095825
    3. 'join' → logprob: -6.537734508514404
    4. '`' → logprob: -7.662734508514404
    5. 'r' → logprob: -7.912734508514404
    6. 'for' → logprob: -8.037734031677246
    7. 'fault' → logprob: -8.287734031677246
    8. 'but' → logprob: -8.537734031677246
    9. '   ' → logprob: -8.787734031677246
    10. '```' → logprob: -9.537734031677246

Token 894: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3216930329799652
    2. 'tant' → logprob: -1.4466930627822876
    3. 'a' → logprob: -4.571692943572998
    4. 'at' → logprob: -5.196692943572998
    5. 'et' → logprob: -5.321692943572998
    6. 't' → logprob: -5.571692943572998
    7. '*' → logprob: -6.321692943572998
    8. '   ' → logprob: -6.696692943572998
    9. 'itant' → logprob: -6.696692943572998
    10. 'ont' → logprob: -6.946692943572998

Token 895: ' la' (ID: 557)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35427916049957275
    2. '(*' → logprob: -1.2292791604995728
    3. 'ans' → logprob: -5.354279041290283
    4. ' ans' → logprob: -7.729279041290283
    5. ' *' → logprob: -7.854279041290283
    6. '(ans' → logprob: -8.604279518127441
    7. ' (*' → logprob: -10.229279518127441
    8. '   ' → logprob: -10.729279518127441
    9. '*a' → logprob: -12.479279518127441
    10. ' ' → logprob: -12.729279518127441

Token 896: ' liste' (ID: 31719)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16190433502197266
    2. 'ans' → logprob: -1.9119043350219727
    3. '(*' → logprob: -6.911904335021973
    4. ' ans' → logprob: -7.911904335021973
    5. ' *' → logprob: -8.786904335021973
    6. '*a' → logprob: -9.286904335021973
    7. '(ans' → logprob: -10.411904335021973
    8. '[*' → logprob: -11.661904335021973
    9. '*s' → logprob: -12.036904335021973
    10. 'a' → logprob: -12.536904335021973

Token 897: ' pour' (ID: 1930)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -3.8889261304575484e-06
    2. '(*)' → logprob: -13.625003814697266
    3. '*' → logprob: -14.125003814697266
    4. '(ans' → logprob: -14.375003814697266
    5. '(' → logprob: -14.500003814697266
    6. '   ' → logprob: -14.750003814697266
    7. ' (*' → logprob: -14.750003814697266
    8. 'print' → logprob: -17.750003814697266
    9. '(*(' → logprob: -18.125003814697266
    10. 'ans' → logprob: -18.875003814697266

Token 898: ' sé' (ID: 7462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012880703434348106
    2. '*' → logprob: -9.500128746032715
    3. ' print' → logprob: -10.125128746032715
    4. '   ' → logprob: -11.250128746032715
    5. '```' → logprob: -15.500128746032715
    6. ' ' → logprob: -15.625128746032715
    7. '       ' → logprob: -16.25012969970703
    8. 'printf' → logprob: -16.75012969970703
    9. '_print' → logprob: -16.75012969970703
    10. '  ' → logprob: -16.87512969970703

Token 899: 'parer' (ID: 48041)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02106589451432228
    2. 'pr' → logprob: -5.771065711975098
    3. '*' → logprob: -5.896065711975098
    4. 'par' → logprob: -6.271065711975098
    5. 'g' → logprob: -6.396065711975098
    6. 'a' → logprob: -6.771065711975098
    7. '   ' → logprob: -6.896065711975098
    8. '(*' → logprob: -7.021065711975098
    9. 'nt' → logprob: -7.146065711975098
    10. 'n' → logprob: -7.271065711975098

Token 900: ' les' (ID: 1341)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3447633981704712
    2. '(*' → logprob: -1.7197633981704712
    3. 'print' → logprob: -2.2197632789611816
    4. 'ans' → logprob: -6.094763278961182
    5. '(ans' → logprob: -7.094763278961182
    6. '   ' → logprob: -7.844763278961182
    7. '(*)' → logprob: -8.84476375579834
    8. '(' → logprob: -9.34476375579834
    9. ' *' → logprob: -10.71976375579834
    10. ' ' → logprob: -10.71976375579834

Token 901: ' éléments' (ID: 57375)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3930662274360657
    2. 'ans' → logprob: -1.143066167831421
    3. 'print' → logprob: -5.39306640625
    4. ' ans' → logprob: -7.14306640625
    5. 'elements' → logprob: -8.26806640625
    6. '(ans' → logprob: -8.51806640625
    7. 'args' → logprob: -8.89306640625
    8. 'arguments' → logprob: -10.26806640625
    9. 'values' → logprob: -10.39306640625
    10. 'a' → logprob: -10.76806640625

Token 902: ' par' (ID: 686)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0005087109748274088
    2. '*' → logprob: -7.875508785247803
    3. 'print' → logprob: -9.250508308410645
    4. '   ' → logprob: -11.000508308410645
    5. 'for' → logprob: -11.500508308410645
    6. '```' → logprob: -12.875508308410645
    7. '(*)' → logprob: -13.750508308410645
    8. ' (*' → logprob: -14.125508308410645
    9. '(' → logprob: -14.250508308410645
    10. '`' → logprob: -14.625508308410645

Token 903: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.025470536202192307
    2. 'space' → logprob: -4.775470733642578
    3. 'es' → logprob: -5.775470733642578
    4. '"' → logprob: -5.900470733642578
    5. 'spaces' → logprob: -6.150470733642578
    6. 'print' → logprob: -6.525470733642578
    7. ' '' → logprob: -6.525470733642578
    8. '`' → logprob: -6.650470733642578
    9. '```' → logprob: -6.900470733642578
    10. ''espace' → logprob: -7.275470733642578

Token 904: ' espaces' (ID: 98361)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.33296820521354675
    2. 'spaces' → logprob: -2.207968235015869
    3. 'esp' → logprob: -2.207968235015869
    4. 'space' → logprob: -3.582968235015869
    5. ''' → logprob: -4.082968235015869
    6. ''espace' → logprob: -5.082968235015869
    7. ''esp' → logprob: -5.207968235015869
    8. ' espaces' → logprob: -5.957968235015869
    9. '"' → logprob: -6.207968235015869
    10. '```' → logprob: -6.457968235015869

Token 905: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.641356348991394
    2. '(*' → logprob: -0.891356348991394
    3. 'print' → logprob: -3.3913564682006836
    4. '*' → logprob: -4.266356468200684
    5. '   ' → logprob: -4.266356468200684
    6. ' for' → logprob: -6.641356468200684
    7. '```' → logprob: -8.766356468200684
    8. '    
' → logprob: -10.516356468200684
    9. '(' → logprob: -10.766356468200684
    10. '
' → logprob: -11.141356468200684

Token 906: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002376365475356579
    2. ' for' → logprob: -6.502376556396484
    3. '```' → logprob: -7.627376556396484
    4. '   ' → logprob: -7.877376556396484
    5. '``' → logprob: -12.377376556396484
    6. 'print' → logprob: -13.627376556396484
    7. '    
' → logprob: -13.877376556396484
    8. '(*' → logprob: -14.502376556396484
    9. '       ' → logprob: -16.002376556396484
    10. '
' → logprob: -16.127376556396484

Token 907: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000566137779969722
    2. ' for' → logprob: -7.500566005706787
    3. '   ' → logprob: -11.250566482543945
    4. '```' → logprob: -15.500566482543945
    5. '
' → logprob: -16.875566482543945
    6. '``' → logprob: -19.250566482543945
    7. '	for' → logprob: -19.875566482543945
    8. '       ' → logprob: -20.500566482543945
    9. '    
' → logprob: -21.125566482543945
    10. ' ' → logprob: -22.625566482543945

Token 908: ' elem' (ID: 23108)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1609472632408142
    2. 'a' → logprob: -2.160947322845459
    3. 'operation' → logprob: -3.535947322845459
    4. 'move' → logprob: -6.160947322845459
    5. ' op' → logprob: -6.910947322845459
    6. 'x' → logprob: -7.410947322845459
    7. 'action' → logprob: -8.4109468460083
    8. ' a' → logprob: -9.1609468460083
    9. ' move' → logprob: -10.0359468460083
    10. ' operation' → logprob: -10.0359468460083

Token 909: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020698724314570427
    2. 'in' → logprob: -3.8956987857818604
    3. '   ' → logprob: -9.645698547363281
    4. ' ' → logprob: -10.645698547363281
    5. '  ' → logprob: -10.645698547363281
    6. 's' → logprob: -11.020698547363281
    7. 'print' → logprob: -11.520698547363281
    8. '_in' → logprob: -12.520698547363281
    9. '	in' → logprob: -13.020698547363281
    10. '_' → logprob: -13.395698547363281

Token 910: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0206720617134124e-05
    2. ' ans' → logprob: -11.50001049041748
    3. '(ans' → logprob: -19.250009536743164
    4. 'print' → logprob: -21.125009536743164
    5. '	ans' → logprob: -21.875009536743164
    6. '   ' → logprob: -22.250009536743164
    7. 'answer' → logprob: -22.750009536743164
    8. 'Ans' → logprob: -22.750009536743164
    9. ' ' → logprob: -22.750009536743164
    10. '_ans' → logprob: -22.750009536743164

Token 911: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1925453543663025
    2. ':
' → logprob: -1.8175454139709473
    3. '   ' → logprob: -5.067545413970947
    4. 'print' → logprob: -5.317545413970947
    5. '       ' → logprob: -7.067545413970947
    6. ' print' → logprob: -7.817545413970947
    7. '():
' → logprob: -9.442544937133789
    8. '):
' → logprob: -10.317544937133789
    9. '(print' → logprob: -10.317544937133789
    10. '.print' → logprob: -10.442544937133789

Token 912: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043767161667346954
    2. 'print' → logprob: -3.418767213821411
    3. ' print' → logprob: -4.793766975402832
    4. '       ' → logprob: -6.793766975402832
    5. '```' → logprob: -7.543766975402832
    6. '    ' → logprob: -9.668766975402832
    7. '	print' → logprob: -11.043766975402832
    8. '    
' → logprob: -11.418766975402832
    9. '  ' → logprob: -11.418766975402832
    10. ' ' → logprob: -11.668766975402832

Token 913: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.50000286102295
    3. ' print' → logprob: -13.75000286102295
    4. '       ' → logprob: -20.500001907348633
    5. '	print' → logprob: -21.750001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '    ' → logprob: -23.625001907348633
    8. '           ' → logprob: -23.875001907348633
    9. ' ' → logprob: -24.375001907348633
    10. '```' → logprob: -24.375001907348633

Token 914: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '(*)' → logprob: -17.375017166137695
    4. '(
' → logprob: -18.625017166137695
    5. '*' → logprob: -18.875017166137695
    6. ' (*' → logprob: -19.750017166137695
    7. '(*(' → logprob: -19.875017166137695
    8. '(elem' → logprob: -20.000017166137695
    9. '((*' → logprob: -20.375017166137695
    10. '()' → logprob: -22.000017166137695

Token 915: 'elem' (ID: 35287)
  Prédit: 'elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elem' → logprob: -1.9361264946837764e-07
    2. ' elem' → logprob: -16.25
    3. '	elem' → logprob: -20.0
    4. '(elem' → logprob: -20.5
    5. 'ele' → logprob: -21.625
    6. '[' → logprob: -22.125
    7. '   ' → logprob: -23.375
    8. 'element' → logprob: -24.125
    9. '.elem' → logprob: -24.125
    10. ' ' → logprob: -24.625

Token 916: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -13.375006675720215
    3. ')
' → logprob: -13.375006675720215
    4. '())' → logprob: -13.500006675720215
    5. '()' → logprob: -14.375006675720215
    6. ')`' → logprob: -15.000006675720215
    7. '))' → logprob: -15.625006675720215
    8. '`)' → logprob: -15.625006675720215
    9. ' )' → logprob: -15.750006675720215
    10. ')}' → logprob: -15.875006675720215

Token 917: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 918: ' Ce' (ID: 14228)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 919: ' bloc' (ID: 51218)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2980700433254242
    2. 'def' → logprob: -1.6730700731277466
    3. '(' → logprob: -3.423069953918457
    4. '#' → logprob: -4.548069953918457
    5. 'solve' → logprob: -4.673069953918457
    6. '()
' → logprob: -5.298069953918457
    7. '_' → logprob: -5.798069953918457
    8. '(
' → logprob: -6.548069953918457
    9. '```' → logprob: -6.798069953918457
    10. ' solve' → logprob: -7.048069953918457

Token 920: ' permet' (ID: 11798)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13043779134750366
    2. '
' → logprob: -2.1304378509521484
    3. '

' → logprob: -5.880437850952148
    4. ' if' → logprob: -7.505437850952148
    5. '```' → logprob: -9.130437850952148
    6. '\n' → logprob: -11.505437850952148
    7. '  
' → logprob: -11.880437850952148
    8. '
 
' → logprob: -12.630437850952148
    9. '<|end|>' → logprob: -12.630437850952148
    10. '    
' → logprob: -12.755437850952148

Token 921: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004147018771618605
    2. 'd' → logprob: -6.129147052764893
    3. 'def' → logprob: -6.629147052764893
    4. 'de' → logprob: -8.254146575927734
    5. ' if' → logprob: -8.879146575927734
    6. ' de' → logprob: -9.379146575927734
    7. ' d' → logprob: -9.879146575927734
    8. '```' → logprob: -10.129146575927734
    9. '#' → logprob: -11.254146575927734
    10. '
' → logprob: -11.254146575927734

Token 922: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00025323365116491914
    2. ' if' → logprob: -8.875253677368164
    3. '__' → logprob: -9.125253677368164
    4. '```' → logprob: -12.750253677368164
    5. 'import' → logprob: -14.750253677368164
    6. 'mettre' → logprob: -15.250253677368164
    7. '#' → logprob: -15.750253677368164
    8. 'run' → logprob: -15.875253677368164
    9. ' __' → logprob: -16.000253677368164
    10. '_if' → logprob: -16.000253677368164

Token 923: ''assurer' (ID: 193756)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5714974403381348
    2. ''il' → logprob: -1.0714974403381348
    3. ''assurer' → logprob: -2.6964974403381348
    4. 'ur' → logprob: -5.196497440338135
    5. 'i' → logprob: -5.446497440338135
    6. 'avoir' → logprob: -5.821497440338135
    7. '```' → logprob: -5.821497440338135
    8. '#' → logprob: -6.696497440338135
    9. ' if' → logprob: -6.821497440338135
    10. 'si' → logprob: -7.071497440338135

Token 924: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004170873435214162
    2. ' if' → logprob: -8.12541675567627
    3. '#' → logprob: -10.37541675567627
    4. '__' → logprob: -10.62541675567627
    5. '_' → logprob: -10.87541675567627
    6. '```' → logprob: -11.00041675567627
    7. '_if' → logprob: -11.25041675567627
    8. '#if' → logprob: -12.25041675567627
    9. 'that' → logprob: -12.50041675567627
    10. ' que' → logprob: -13.25041675567627

Token 925: ' la' (ID: 557)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0030329711735248566
    2. 'if' → logprob: -6.00303316116333
    3. ' __' → logprob: -7.50303316116333
    4. ' if' → logprob: -12.628032684326172
    5. '```' → logprob: -13.003032684326172
    6. '(__' → logprob: -17.003032684326172
    7. '___' → logprob: -17.253032684326172
    8. 'name' → logprob: -18.128032684326172
    9. '.__' → logprob: -18.253032684326172
    10. '   ' → logprob: -18.503032684326172

Token 926: ' fonction' (ID: 17610)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.040527090430259705
    2. 'if' → logprob: -3.290527105331421
    3. ' __' → logprob: -6.165526866912842
    4. '```' → logprob: -8.41552734375
    5. ' if' → logprob: -9.54052734375
    6. '_' → logprob: -10.29052734375
    7. '___' → logprob: -10.41552734375
    8. '`' → logprob: -12.41552734375
    9. '_name' → logprob: -12.54052734375
    10. '__
' → logprob: -12.79052734375

Token 927: ' solve' (ID: 17722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41438642144203186
    2. 'solve' → logprob: -1.6643863916397095
    3. '__' → logprob: -2.039386510848999
    4. '```' → logprob: -4.66438627243042
    5. '==' → logprob: -5.66438627243042
    6. ' solve' → logprob: -6.28938627243042
    7. '_' → logprob: -6.53938627243042
    8. ' ==' → logprob: -7.78938627243042
    9. 'def' → logprob: -7.78938627243042
    10. ' if' → logprob: -8.164386749267578

Token 928: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02410852164030075
    2. '():' → logprob: -3.774108409881592
    3. '()==' → logprob: -7.524108409881592
    4. '```' → logprob: -9.02410888671875
    5. '():
' → logprob: -9.39910888671875
    6. '()
' → logprob: -11.02410888671875
    7. '_' → logprob: -11.27410888671875
    8. '().__' → logprob: -11.27410888671875
    9. '__' → logprob: -11.39910888671875
    10. '(' → logprob: -11.52410888671875

Token 929: ' ne' (ID: 453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00539122661575675
    2. '
' → logprob: -6.1303911209106445
    3. '```' → logprob: -6.7553911209106445
    4. '()' → logprob: -7.0053911209106445
    5. ' if' → logprob: -7.6303911209106445
    6. 'def' → logprob: -8.755391120910645
    7. '():
' → logprob: -8.880391120910645
    8. ' ==' → logprob: -9.255391120910645
    9. '   ' → logprob: -9.880391120910645
    10. '()
' → logprob: -9.880391120910645

Token 930: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5357500314712524
    2. 'est' → logprob: -1.1607500314712524
    3. 'sera' → logprob: -3.035749912261963
    4. 'if' → logprob: -4.035749912261963
    5. ''est' → logprob: -4.160749912261963
    6. '#' → logprob: -4.660749912261963
    7. 'pas' → logprob: -6.660749912261963
    8. '__' → logprob: -6.910749912261963
    9. 'f' → logprob: -7.035749912261963
    10. '_est' → logprob: -7.160749912261963

Token 931: ''ex' (ID: 23472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25610291957855225
    2. ''ex' → logprob: -2.881103038787842
    3. 'ur' → logprob: -3.756103038787842
    4. ''appelle' → logprob: -4.006103038787842
    5. 'e' → logprob: -4.131103038787842
    6. ''il' → logprob: -4.381103038787842
    7. 'era' → logprob: -5.006103038787842
    8. ''agit' → logprob: -5.006103038787842
    9. 'urtout' → logprob: -5.131103038787842
    10. '__' → logprob: -5.131103038787842

Token 932: 'éc' (ID: 5675)
  Prédit: 'écut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.009959721006453037
    2. 'ecut' → logprob: -4.759959697723389
    3. 'éc' → logprob: -7.384959697723389
    4. 'ecute' → logprob: -7.884959697723389
    5. 'é' → logprob: -9.009960174560547
    6. 'e' → logprob: -9.009960174560547
    7. 'ecu' → logprob: -10.509960174560547
    8. 'ec' → logprob: -10.884960174560547
    9. 'ecutable' → logprob: -11.009960174560547
    10. '```' → logprob: -11.259960174560547

Token 933: 'ute' (ID: 1331)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.01051866915076971
    2. 'ecut' → logprob: -5.885518550872803
    3. 'ute' → logprob: -6.010518550872803
    4. 'éc' → logprob: -6.135518550872803
    5. '__' → logprob: -6.885518550872803
    6. 'écut' → logprob: -7.385518550872803
    7. 'ec' → logprob: -7.510518550872803
    8. 'ect' → logprob: -7.885518550872803
    9. 'ure' → logprob: -9.260519027709961
    10. 'ecution' → logprob: -9.510519027709961

Token 934: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.365484356880188
    2. 'que' → logprob: -1.240484356880188
    3. ' pas' → logprob: -4.990484237670898
    4. 'if' → logprob: -5.615484237670898
    5. 'pas' → logprob: -5.740484237670898
    6. '__' → logprob: -6.490484237670898
    7. 'import' → logprob: -7.990484237670898
    8. ' seulement' → logprob: -8.365484237670898
    9. ' jamais' → logprob: -8.490484237670898
    10. '   ' → logprob: -8.490484237670898

Token 935: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0028552785515785217
    2. '__' → logprob: -6.87785530090332
    3. ' if' → logprob: -7.37785530090332
    4. '```' → logprob: -7.75285530090332
    5. 'pas' → logprob: -8.62785530090332
    6. 'si' → logprob: -9.12785530090332
    7. 'dans' → logprob: -9.37785530090332
    8. ' lorsque' → logprob: -9.37785530090332
    9. 'import' → logprob: -9.50285530090332
    10. '   ' → logprob: -10.12785530090332

Token 936: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023245712742209435
    2. ' __' → logprob: -3.7732458114624023
    3. 'name' → logprob: -17.148244857788086
    4. '/__' → logprob: -17.273244857788086
    5. 'if' → logprob: -17.773244857788086
    6. ' ' → logprob: -18.023244857788086
    7. '```' → logprob: -18.148244857788086
    8. '_name' → logprob: -18.148244857788086
    9. '.__' → logprob: -19.023244857788086
    10. ' ' → logprob: -19.148244857788086

Token 937: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016516048344783485
    2. ' __' → logprob: -8.750164985656738
    3. 'name' → logprob: -12.750164985656738
    4. '```' → logprob: -12.750164985656738
    5. '___' → logprob: -14.250164985656738
    6. 'if' → logprob: -16.750165939331055
    7. '_name' → logprob: -16.875165939331055
    8. ' name' → logprob: -17.000165939331055
    9. '.__' → logprob: -18.250165939331055
    10. '__
' → logprob: -18.250165939331055

Token 938: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14617976546287537
    2. 'if' → logprob: -2.146179676055908
    3. '==' → logprob: -5.021179676055908
    4. ' ==' → logprob: -5.646179676055908
    5. 'name' → logprob: -5.646179676055908
    6. '```' → logprob: -6.646179676055908
    7. ' __' → logprob: -6.771179676055908
    8. 'import' → logprob: -7.021179676055908
    9. ' is' → logprob: -7.271179676055908
    10. '.__' → logprob: -8.271180152893066

Token 939: ' lancé' (ID: 104614)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005940204137004912
    2. 'name' → logprob: -8.375594139099121
    3. ' __' → logprob: -8.500594139099121
    4. 'import' → logprob: -10.125594139099121
    5. '_name' → logprob: -10.125594139099121
    6. '```' → logprob: -11.375594139099121
    7. '___' → logprob: -11.500594139099121
    8. ' exécut' → logprob: -11.625594139099121
    9. ' run' → logprob: -11.750594139099121
    10. 'execut' → logprob: -12.125594139099121

Token 940: ' directement' (ID: 52317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21709957718849182
    2. '
' → logprob: -2.217099666595459
    3. '```' → logprob: -2.467099666595459
    4. '``' → logprob: -7.092099666595459
    5. '

' → logprob: -8.2170991897583
    6. ' if' → logprob: -8.5920991897583
    7. '    
' → logprob: -10.3420991897583
    8. '  
' → logprob: -10.7170991897583
    9. 'with' → logprob: -11.3420991897583
    10. '__' → logprob: -11.4670991897583

Token 941: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2524459958076477
    2. 'if' → logprob: -1.502445936203003
    3. '```' → logprob: -7.752446174621582
    4. '

' → logprob: -9.627446174621582
    5. '``' → logprob: -11.752446174621582
    6. ' if' → logprob: -12.252446174621582
    7. '\n' → logprob: -12.752446174621582
    8. '  
' → logprob: -12.877446174621582
    9. '    
' → logprob: -13.127446174621582
    10. '
' → logprob: -14.252446174621582

Token 942: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00022570860164705664
    2. ' if' → logprob: -8.500226020812988
    3. '
' → logprob: -11.250226020812988
    4. '```' → logprob: -11.625226020812988
    5. '   ' → logprob: -15.875226020812988
    6. 'not' → logprob: -17.125225067138672
    7. '``' → logprob: -17.125225067138672
    8. '__' → logprob: -17.750225067138672
    9. ' not' → logprob: -18.625225067138672
    10. '    
' → logprob: -18.875225067138672

Token 943: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001370320824207738
    2. ' if' → logprob: -9.000137329101562
    3. '```' → logprob: -11.250137329101562
    4. '
' → logprob: -15.000137329101562
    5. '__' → logprob: -15.750137329101562
    6. 'not' → logprob: -17.125137329101562
    7. '``' → logprob: -17.875137329101562
    8. ' not' → logprob: -19.125137329101562
    9. 'def' → logprob: -20.250137329101562
    10. '#' → logprob: -20.375137329101562

Token 944: ' pas' (ID: 2173)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00223185564391315
    2. ' if' → logprob: -6.377232074737549
    3. '__' → logprob: -7.627232074737549
    4. '```' → logprob: -11.37723159790039
    5. '#' → logprob: -11.75223159790039
    6. '   ' → logprob: -12.00223159790039
    7. '
' → logprob: -12.00223159790039
    8. ' not' → logprob: -12.37723159790039
    9. 'not' → logprob: -12.75223159790039
    10. ' __' → logprob: -13.00223159790039

Token 945: ' lors' (ID: 15456)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.184564471244812
    2. 'if' → logprob: -1.434564471244812
    3. ' pas' → logprob: -1.934564471244812
    4. ' if' → logprob: -2.1845645904541016
    5. ' par' → logprob: -3.0595645904541016
    6. 'import' → logprob: -3.4345645904541016
    7. ' dans' → logprob: -3.9345645904541016
    8. '__' → logprob: -4.309564590454102
    9. ' lors' → logprob: -4.309564590454102
    10. ' lorsque' → logprob: -4.559564590454102

Token 946: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07417290657758713
    2. 'd' → logprob: -2.6991729736328125
    3. 'if' → logprob: -6.1991729736328125
    4. 'import' → logprob: -6.5741729736328125
    5. ' de' → logprob: -8.074172973632812
    6. ' du' → logprob: -8.199172973632812
    7. ' if' → logprob: -9.324172973632812
    8. 'de' → logprob: -10.199172973632812
    9. 'que' → logprob: -10.949172973632812
    10. 'du' → logprob: -11.074172973632812

Token 947: ''un' (ID: 9788)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007895490154623985
    2. ' if' → logprob: -5.632895469665527
    3. 'import' → logprob: -5.757895469665527
    4. '```' → logprob: -7.132895469665527
    5. 'l' → logprob: -8.507895469665527
    6. 'le' → logprob: -9.882895469665527
    7. '__' → logprob: -10.007895469665527
    8. ' l' → logprob: -11.507895469665527
    9. ''import' → logprob: -12.757895469665527
    10. '``' → logprob: -12.882895469665527

Token 948: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0010007746750488877
    2. ' import' → logprob: -7.001000881195068
    3. 'importe' → logprob: -9.75100040435791
    4. ''import' → logprob: -10.50100040435791
    5. '_import' → logprob: -13.50100040435791
    6. '(import' → logprob: -14.25100040435791
    7. '```' → logprob: -14.75100040435791
    8. ' импорт' → logprob: -15.12600040435791
    9. '#import' → logprob: -15.50100040435791
    10. '	import' → logprob: -15.62600040435791

Token 949: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16798287630081177
    2. 'if' → logprob: -1.917982816696167
    3. '

' → logprob: -4.917983055114746
    4. '```' → logprob: -7.917983055114746
    5. ' if' → logprob: -10.792983055114746
    6. '``' → logprob: -11.292983055114746
    7. '
' → logprob: -12.042983055114746
    8. '  
' → logprob: -12.292983055114746
    9. '\n' → logprob: -13.042983055114746
    10. ' 
' → logprob: -13.167983055114746

Token 950: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6304185390472412
    2. ' un' → logprob: -1.0054185390472412
    3. ' une' → logprob: -3.755418539047241
    4. '__' → logprob: -3.880418539047241
    5. 'aut' → logprob: -3.880418539047241
    6. 'une' → logprob: -4.13041877746582
    7. 'another' → logprob: -4.50541877746582
    8. ' another' → logprob: -5.25541877746582
    9. 'other' → logprob: -7.13041877746582
    10. ' aut' → logprob: -7.63041877746582

Token 951: ' autre' (ID: 20278)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.6584956645965576
    2. 'aut' → logprob: -1.0334956645965576
    3. ' autre' → logprob: -2.1584956645965576
    4. ' module' → logprob: -5.033495903015137
    5. ''autre' → logprob: -5.908495903015137
    6. 'another' → logprob: -7.408495903015137
    7. ' aut' → logprob: -7.658495903015137
    8. 'other' → logprob: -8.033495903015137
    9. '__' → logprob: -9.408495903015137
    10. '```' → logprob: -9.533495903015137

Token 952: ' module' (ID: 8827)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41024529933929443
    2. 'if' → logprob: -1.4102452993392944
    3. '```' → logprob: -2.785245418548584
    4. '

' → logprob: -3.535245418548584
    5. '``' → logprob: -6.785245418548584
    6. ' if' → logprob: -8.910244941711426
    7. ':' → logprob: -9.160244941711426
    8. '\n' → logprob: -9.535244941711426
    9. ':
' → logprob: -10.410244941711426
    10. '
' → logprob: -11.160244941711426

Token 953: ' Python' (ID: 26534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2522525191307068
    2. '
' → logprob: -1.5022525787353516
    3. '

' → logprob: -8.752252578735352
    4. '```' → logprob: -9.002252578735352
    5. ' if' → logprob: -10.627252578735352
    6. '  
' → logprob: -11.877252578735352
    7. '``' → logprob: -12.252252578735352
    8. '    
' → logprob: -12.252252578735352
    9. ' 
' → logprob: -14.002252578735352
    10. '
' → logprob: -15.627252578735352

Token 954: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47425997257232666
    2. '
' → logprob: -0.9742599725723267
    3. '

' → logprob: -8.849260330200195
    4. '```' → logprob: -10.849260330200195
    5. ' if' → logprob: -11.349260330200195
    6. '    
' → logprob: -12.599260330200195
    7. '  
' → logprob: -12.724260330200195
    8. '``' → logprob: -14.224260330200195
    9. '
' → logprob: -14.474260330200195
    10. ' 
' → logprob: -14.849260330200195

Token 955: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005705483490601182
    2. '```' → logprob: -7.750570774078369
    3. '
' → logprob: -9.000570297241211
    4. ' if' → logprob: -11.375570297241211
    5. '``' → logprob: -12.250570297241211
    6. '    
' → logprob: -15.500570297241211
    7. '  
' → logprob: -16.75057029724121
    8. '

' → logprob: -17.62557029724121
    9. '   ' → logprob: -18.12557029724121
    10. ' 
' → logprob: -18.50057029724121

Token 956: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5762964487075806
    2. ' __' → logprob: -0.8262964487075806
    3. ' ' → logprob: -8.07629680633545
    4. '_' → logprob: -10.70129680633545
    5. '_name' → logprob: -11.82629680633545
    6. ' ' → logprob: -11.95129680633545
    7. ' ' → logprob: -12.57629680633545
    8. 'name' → logprob: -12.82629680633545
    9. '```' → logprob: -14.32629680633545
    10. '___' → logprob: -14.57629680633545

Token 957: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017340865451842546
    2. '==' → logprob: -7.126734256744385
    3. ' ==' → logprob: -7.376734256744385
    4. ' __' → logprob: -8.251733779907227
    5. 'name' → logprob: -10.876733779907227
    6. '_' → logprob: -11.251733779907227
    7. '__.__' → logprob: -12.626733779907227
    8. '=="' → logprob: -13.376733779907227
    9. '___' → logprob: -13.501733779907227
    10. '=='' → logprob: -14.376733779907227

Token 958: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '==' → logprob: -15.000000953674316
    3. '____' → logprob: -16.125
    4. '__.__' → logprob: -16.125
    5. '___' → logprob: -17.25
    6. '__
' → logprob: -17.75
    7. ' __' → logprob: -18.375
    8. '_' → logprob: -18.5
    9. ' ==' → logprob: -18.75
    10. 'name' → logprob: -19.0

Token 959: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010390023235231638
    2. '==' → logprob: -6.876039028167725
    3. '=="' → logprob: -12.876038551330566
    4. ' ==' → logprob: -13.251038551330566
    5. '=='' → logprob: -14.876038551330566
    6. '__.__' → logprob: -15.001038551330566
    7. '___' → logprob: -15.001038551330566
    8. '____' → logprob: -15.626038551330566
    9. '__('' → logprob: -16.001039505004883
    10. '_' → logprob: -16.126039505004883

Token 960: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014192651025950909
    2. ''' → logprob: -4.264192581176758
    3. ' "__' → logprob: -10.639192581176758
    4. '__' → logprob: -12.264192581176758
    5. ' '__' → logprob: -14.889192581176758
    6. '"user' → logprob: -17.014192581176758
    7. ''"' → logprob: -17.389192581176758
    8. '"name' → logprob: -17.639192581176758
    9. '"'' → logprob: -18.014192581176758
    10. '"_' → logprob: -18.639192581176758

Token 961: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00034595211036503315
    2. '__' → logprob: -8.000346183776855
    3. 'name' → logprob: -11.875346183776855
    4. '_main' → logprob: -12.750346183776855
    5. ' main' → logprob: -14.625346183776855
    6. '__':
' → logprob: -15.625346183776855
    7. 'm' → logprob: -17.00034523010254
    8. '_MAIN' → logprob: -17.37534523010254
    9. '__
' → logprob: -17.87534523010254
    10. 'ma' → logprob: -18.12534523010254

Token 962: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.00523612555116415
    2. '__' → logprob: -5.2552361488342285
    3. '__":
' → logprob: -13.13023567199707
    4. '__:' → logprob: -14.75523567199707
    5. '_' → logprob: -17.88023567199707
    6. '':
' → logprob: -18.38023567199707
    7. '':' → logprob: -19.13023567199707
    8. '___' → logprob: -19.75523567199707
    9. '__('' → logprob: -19.88023567199707
    10. '__.' → logprob: -20.50523567199707

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002504793694242835
    2. 'solve' → logprob: -6.252504825592041
    3. ' solve' → logprob: -7.502504825592041
    4. '.solve' → logprob: -11.252504348754883
    5. '```' → logprob: -12.127504348754883
    6. '   ' → logprob: -13.127504348754883
    7. '	s' → logprob: -13.377504348754883
    8. '    
' → logprob: -14.002504348754883
    9. '       ' → logprob: -14.752504348754883
    10. ':
' → logprob: -15.127504348754883

Token 964: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.25
    3. '.solve' → logprob: -19.625
    4. 'resolve' → logprob: -21.125
    5. '   ' → logprob: -21.625
    6. 'save' → logprob: -23.0
    7. '```' → logprob: -23.25
    8. 'solver' → logprob: -25.25
    9. 'print' → logprob: -25.5
    10. 'Solve' → logprob: -26.375

Token 965: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 963
Tokens correctement prédits (1ère position, stricte): 223
Tokens correctement prédits (1ère position, avec adaptation): 247
Tokens correctement prédits (top 10): 545
Précision stricte (1ère position): 23.16%
Précision adaptée (1ère position): 25.65%
Précision (top 10): 56.59%
================================================================================
