================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import ceil as ceiling  # Préférences pour les alias inhabituels

n = eval(input("Entrer la taille: ") or "0")   # Utilise eval et fournit une valeur par défaut

parse = lambda s: list(map(int, s.split(',' if ',' in s else ' ')))  # Analyse flexible des séparateurs

nums = parse(input("Liste des nombres: "))

def extreme_diff(lst):
    lst.sort(reverse = False)        # Spécifie explicitement reverse même si inutile
    left, *_, right = lst            # Unpacking non-conventionnel 
    return right - left

resultat = extreme_diff(nums)
print("Résultat:", resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.18853551149368286
    2. ' sqrt' → logprob: -1.938535451889038
    3. 'pow' → logprob: -4.563535690307617
    4. 'sin' → logprob: -4.938535690307617
    5. 'pi' → logprob: -5.438535690307617
    6. ' pi' → logprob: -5.563535690307617
    7. ' sin' → logprob: -7.438535690307617
    8. 'ceil' → logprob: -7.563535690307617
    9. 'cos' → logprob: -8.563535690307617
    10. ' ceil' → logprob: -8.563535690307617

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015284325927495956
    2. '\(' → logprob: -6.626528263092041
    3. '(
' → logprob: -9.0015287399292
    4. '\' → logprob: -10.0015287399292
    5. '\n' → logprob: -11.6265287399292
    6. ',' → logprob: -12.3765287399292
    7. '#' → logprob: -12.6265287399292
    8. 'def' → logprob: -12.6265287399292
    9. '```' → logprob: -13.0015287399292
    10. 'a' → logprob: -13.0015287399292

Token 5: ' ceiling' (ID: 32727)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.7236326932907104
    2. 'ceil' → logprob: -0.8486326932907104
    3. 'c' → logprob: -3.3486328125
    4. ' c' → logprob: -3.4736328125
    5. ' ceiling' → logprob: -4.7236328125
    6. 'ce' → logprob: -5.0986328125
    7. 'cel' → logprob: -5.7236328125
    8. ' ce' → logprob: -6.8486328125
    9. ' math' → logprob: -7.3486328125
    10. ' ciel' → logprob: -8.7236328125

Token 6: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002183095784857869
    2. '.' → logprob: -7.127182960510254
    3. '\(' → logprob: -7.502182960510254
    4. ',' → logprob: -8.127182960510254
    5. ' (' → logprob: -8.127182960510254
    6. '\' → logprob: -9.377182960510254
    7. '(
' → logprob: -10.502182960510254
    8. '#' → logprob: -10.752182960510254
    9. '<|end|>' → logprob: -11.127182960510254
    10. ')' → logprob: -11.252182960510254

Token 7: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010187560692429543
    2. '\(' → logprob: -7.751018524169922
    3. ',' → logprob: -8.251018524169922
    4. '.' → logprob: -8.876018524169922
    5. ' (' → logprob: -9.626018524169922
    6. '(
' → logprob: -10.501018524169922
    7. '\' → logprob: -10.501018524169922
    8. ')' → logprob: -11.501018524169922
    9. '#' → logprob: -11.751018524169922
    10. 'a' → logprob: -11.876018524169922

Token 8: ' Pré' (ID: 86400)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004328995011746883
    2. '_' → logprob: -5.754329204559326
    3. '<|end|>' → logprob: -8.129328727722168
    4. ',' → logprob: -8.629328727722168
    5. ' ,' → logprob: -9.504328727722168
    6. ' (' → logprob: -9.629328727722168
    7. ' space' → logprob: -9.629328727722168
    8. ' )' → logprob: -9.629328727722168
    9. ' a' → logprob: -10.004328727722168
    10. ')' → logprob: -10.004328727722168

Token 9: 'fér' (ID: 21958)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.7686553597450256
    2. 'cision' → logprob: -0.7686553597450256
    3. 'cis' → logprob: -3.768655300140381
    4. 'paration' → logprob: -4.643655300140381
    5. 'cé' → logprob: -4.893655300140381
    6. 'c' → logprob: -5.018655300140381
    7. 'f' → logprob: -5.143655300140381
    8. 'vision' → logprob: -5.893655300140381
    9. 'ci' → logprob: -6.268655300140381
    10. 'face' → logprob: -6.393655300140381

Token 10: 'ences' (ID: 3851)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.49828749895095825
    2. 'ence' → logprob: -1.4982874393463135
    3. 'ée' → logprob: -1.9982874393463135
    4. 'e' → logprob: -3.8732874393463135
    5. 'er' → logprob: -5.123287677764893
    6. 'ed' → logprob: -5.998287677764893
    7. 'en' → logprob: -6.373287677764893
    8. '```' → logprob: -7.498287677764893
    9. '#' → logprob: -7.623287677764893
    10. 'able' → logprob: -9.123287200927734

Token 11: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9392387270927429
    2. '(' → logprob: -1.6892387866973877
    3. '<|end|>' → logprob: -1.8142387866973877
    4. ')' → logprob: -2.6892387866973877
    5. '.' → logprob: -3.0642387866973877
    6. ',' → logprob: -3.0642387866973877
    7. '\' → logprob: -3.5642387866973877
    8. '_' → logprob: -3.5642387866973877
    9. '
' → logprob: -5.064238548278809
    10. 'import' → logprob: -5.064238548278809

Token 12: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.8595607280731201
    2. ' math' → logprob: -1.8595607280731201
    3. ' ceiling' → logprob: -1.9845607280731201
    4. ' ' → logprob: -1.9845607280731201
    5. ' ceil' → logprob: -2.48456072807312
    6. ' _' → logprob: -2.60956072807312
    7. '_' → logprob: -3.23456072807312
    8. 'ce' → logprob: -3.60956072807312
    9. ' les' → logprob: -3.85956072807312
    10. ' l' → logprob: -3.85956072807312

Token 13: ' alias' (ID: 26026)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.4840800762176514
    2. 'import' → logprob: -1.6090800762176514
    3. '_' → logprob: -2.9840800762176514
    4. ' calcul' → logprob: -3.4840800762176514
    5. 'nom' → logprob: -3.4840800762176514
    6. 'n' → logprob: -3.4840800762176514
    7. ' noms' → logprob: -3.6090800762176514
    8. 'ceil' → logprob: -3.8590800762176514
    9. ' fonctions' → logprob: -3.8590800762176514
    10. 'math' → logprob: -3.8590800762176514

Token 14: ' inhab' (ID: 42455)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011614530347287655
    2. ',' → logprob: -5.5116143226623535
    3. ' (' → logprob: -5.8866143226623535
    4. ')' → logprob: -6.0116143226623535
    5. '<|end|>' → logprob: -7.5116143226623535
    6. '\' → logprob: -8.261614799499512
    7. ' ' → logprob: -8.886614799499512
    8. '#' → logprob: -8.886614799499512
    9. 'newline' → logprob: -8.886614799499512
    10. '_' → logprob: -9.011614799499512

Token 15: 'itu' (ID: 7642)
  Prédit: 'itu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itu' → logprob: -5.621933451038785e-05
    2. 'itus' → logprob: -10.375056266784668
    3. 'иту' → logprob: -11.375056266784668
    4. 'it' → logprob: -12.125056266784668
    5. 'tu' → logprob: -13.625056266784668
    6. 'itul' → logprob: -13.750056266784668
    7. 'itut' → logprob: -14.125056266784668
    8. 'situ' → logprob: -14.125056266784668
    9. '{' → logprob: -14.250056266784668
    10. 'ituation' → logprob: -15.000056266784668

Token 16: 'els' (ID: 1989)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.038297414779663
    2. 'd' → logprob: -2.038297414779663
    3. 's' → logprob: -2.038297414779663
    4. ' ' → logprob: -2.413297414779663
    5. 'ls' → logprob: -3.288297414779663
    6. 'l' → logprob: -3.538297414779663
    7. 'nt' → logprob: -3.788297414779663
    8. 'n' → logprob: -3.788297414779663
    9. ',' → logprob: -4.288297653198242
    10. '.' → logprob: -4.288297653198242

Token 17: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06930030882358551
    2. ',' → logprob: -4.069300174713135
    3. '_' → logprob: -4.319300174713135
    4. ')' → logprob: -4.569300174713135
    5. '
' → logprob: -5.069300174713135
    6. ' ' → logprob: -5.569300174713135
    7. '<|end|>' → logprob: -5.819300174713135
    8. '\n' → logprob: -5.944300174713135
    9. '\' → logprob: -6.194300174713135
    10. '(
' → logprob: -6.569300174713135

Token 18: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5354564189910889
    2. '\' → logprob: -2.285456418991089
    3. ')' → logprob: -2.410456418991089
    4. '_' → logprob: -3.035456418991089
    5. '\n' → logprob: -3.035456418991089
    6. '
' → logprob: -3.535456418991089
    7. ',' → logprob: -3.785456418991089
    8. ' ' → logprob: -4.160456657409668
    9. '.' → logprob: -4.535456657409668
    10. 'newline' → logprob: -5.035456657409668

Token 19: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7477021813392639
    2. '_' → logprob: -0.9977021813392639
    3. 'u' → logprob: -2.872702121734619
    4. '=' → logprob: -4.122702121734619
    5. '  ' → logprob: -4.247702121734619
    6. ')' → logprob: -4.372702121734619
    7. '.' → logprob: -4.497702121734619
    8. 'um' → logprob: -4.872702121734619
    9. 'umber' → logprob: -5.247702121734619
    10. 'a' → logprob: -5.497702121734619

Token 20: ' eval' (ID: 29383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12111970037221909
    2. '10' → logprob: -2.246119737625122
    3. '5' → logprob: -5.371119499206543
    4. '42' → logprob: -6.996119499206543
    5. ' int' → logprob: -7.496119499206543
    6. '100' → logprob: -7.496119499206543
    7. '20' → logprob: -7.871119499206543
    8. '  ' → logprob: -8.621119499206543
    9. '1' → logprob: -8.746119499206543
    10. ' ceiling' → logprob: -9.246119499206543

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006364805158227682
    2. '('' → logprob: -5.506364822387695
    3. '("("' → logprob: -6.131364822387695
    4. '(input' → logprob: -10.381364822387695
    5. '(
' → logprob: -10.756364822387695
    6. ' (' → logprob: -11.381364822387695
    7. '("' → logprob: -11.756364822387695
    8. '("")' → logprob: -12.006364822387695
    9. '(eval' → logprob: -12.506364822387695
    10. '(

' → logprob: -12.506364822387695

Token 22: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43200066685676575
    2. '('' → logprob: -1.5570006370544434
    3. '("("' → logprob: -2.0570006370544434
    4. '()' → logprob: -4.932000637054443
    5. ')' → logprob: -6.557000637054443
    6. '(
' → logprob: -6.682000637054443
    7. '())' → logprob: -7.557000637054443
    8. '("")' → logprob: -7.557000637054443
    9. '(""))' → logprob: -7.682000637054443
    10. '("' → logprob: -8.307001113891602

Token 23: 'Entr' (ID: 46869)
  Prédit: 'Nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Nombre' → logprob: -0.990595817565918
    2. 'nombre' → logprob: -1.240595817565918
    3. '"))' → logprob: -1.490595817565918
    4. '"' → logprob: -3.990595817565918
    5. '("' → logprob: -4.115595817565918
    6. 'Comb' → logprob: -4.240595817565918
    7. 'n' → logprob: -4.240595817565918
    8. ' nombre' → logprob: -4.490595817565918
    9. ' "))' → logprob: -4.865595817565918
    10. 'number' → logprob: -5.490595817565918

Token 24: 'er' (ID: 259)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0635281577706337
    2. 'er' → logprob: -2.813528060913086
    3. 'ées' → logprob: -7.063528060913086
    4. 'é' → logprob: -7.813528060913086
    5. 'ez' → logprob: -8.688528060913086
    6. 'e' → logprob: -9.688528060913086
    7. 'ee' → logprob: -10.063528060913086
    8. 'éer' → logprob: -10.938528060913086
    9. '```' → logprob: -12.813528060913086
    10. 'ei' → logprob: -13.938528060913086

Token 25: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6646473407745361
    2. ' ' → logprob: -1.4146473407745361
    3. ' nombre' → logprob: -1.7896473407745361
    4. ' l' → logprob: -3.914647340774536
    5. ' le' → logprob: -4.039647102355957
    6. '(' → logprob: -4.289647102355957
    7. ' un' → logprob: -4.914647102355957
    8. ' une' → logprob: -5.039647102355957
    9. ' (' → logprob: -6.164647102355957
    10. '(n' → logprob: -6.664647102355957

Token 26: ' taille' (ID: 41644)
  Prédit: ' hauteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -1.0433419942855835
    2. ' ' → logprob: -1.4183419942855835
    3. ' taille' → logprob: -1.6683419942855835
    4. ' valeur' → logprob: -2.418342113494873
    5. ' nombre' → logprob: -3.043342113494873
    6. ' longueur' → logprob: -3.918342113494873
    7. 'nombre' → logprob: -4.293342113494873
    8. ' quantité' → logprob: -4.543342113494873
    9. ' largeur' → logprob: -5.043342113494873
    10. 'n' → logprob: -5.043342113494873

Token 27: ':' (ID: 25)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.83453369140625
    2. ' d' → logprob: -1.83453369140625
    3. ' de' → logprob: -2.33453369140625
    4. ':' → logprob: -2.33453369140625
    5. ' "))' → logprob: -2.33453369140625
    6. ' :' → logprob: -2.70953369140625
    7. ' ' → logprob: -4.33453369140625
    8. 'd' → logprob: -4.70953369140625
    9. ' ))' → logprob: -4.83453369140625
    10. ' "' → logprob: -5.70953369140625

Token 28: ' ")' (ID: 25221)
  Prédit: ' "))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "))' → logprob: -0.4664275050163269
    2. '"))' → logprob: -1.0914275646209717
    3. ')' → logprob: -3.7164275646209717
    4. ' "' → logprob: -4.716427326202393
    5. '))' → logprob: -6.841427326202393
    6. '"' → logprob: -7.341427326202393
    7. '")' → logprob: -7.841427326202393
    8. 'n' → logprob: -8.21642780303955
    9. ' ")' → logprob: -8.21642780303955
    10. ' ' → logprob: -8.59142780303955

Token 29: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020557889714837074
    2. '))' → logprob: -3.8955578804016113
    3. ' )' → logprob: -11.89555835723877
    4. ')))' → logprob: -12.39555835723877
    5. ')
' → logprob: -13.64555835723877
    6. ')n' → logprob: -13.89555835723877
    7. ').' → logprob: -14.52055835723877
    8. ' ))' → logprob: -14.89555835723877
    9. '),' → logprob: -14.89555835723877
    10. ' ' → logprob: -15.64555835723877

Token 30: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06092052906751633
    2. ' "' → logprob: -3.560920476913452
    3. ''' → logprob: -3.685920476913452
    4. ' '' → logprob: -6.185920715332031
    5. '0' → logprob: -7.060920715332031
    6. '10' → logprob: -7.185920715332031
    7. ' ' → logprob: -7.310920715332031
    8. '1' → logprob: -7.435920715332031
    9. '100' → logprob: -8.435920715332031
    10. '32' → logprob: -9.060920715332031

Token 31: '0' (ID: 15)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19738848507404327
    2. '0' → logprob: -1.9473885297775269
    3. '1' → logprob: -4.572388648986816
    4. '5' → logprob: -5.072388648986816
    5. '20' → logprob: -5.197388648986816
    6. '16' → logprob: -5.822388648986816
    7. '100' → logprob: -6.447388648986816
    8. '8' → logprob: -6.572388648986816
    9. ' ' → logprob: -6.572388648986816
    10. '12' → logprob: -6.947388648986816

Token 32: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08242760598659515
    2. ')' → logprob: -2.582427501678467
    3. ')")' → logprob: -5.707427501678467
    4. '"))' → logprob: -9.332427978515625
    5. '0' → logprob: -9.707427978515625
    6. ')"' → logprob: -10.957427978515625
    7. '"' → logprob: -11.332427978515625
    8. '))' → logprob: -12.082427978515625
    9. '")
' → logprob: -12.332427978515625
    10. '1' → logprob: -12.582427978515625

Token 33: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26036542654037476
    2. ')' → logprob: -2.3853654861450195
    3. ' 
' → logprob: -3.1353654861450195
    4. '' → logprob: -3.2603654861450195
    5. 'n' → logprob: -4.2603654861450195
    6. '\n' → logprob: -4.7603654861450195
    7. '*' → logprob: -4.8853654861450195
    8. '  
' → logprob: -5.2603654861450195
    9. '
' → logprob: -5.3853654861450195
    10. '\' → logprob: -5.5103654861450195

Token 34: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4351135790348053
    2. ')' → logprob: -1.560113549232483
    3. 'n' → logprob: -3.3101136684417725
    4. '\n' → logprob: -3.3101136684417725
    5. '' → logprob: -3.9351136684417725
    6. ' 
' → logprob: -4.060113430023193
    7. ')
' → logprob: -4.810113430023193
    8. '\' → logprob: -4.935113430023193
    9. '*' → logprob: -5.310113430023193
    10. '
' → logprob: -5.685113430023193

Token 35: ' Util' (ID: 13564)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7383731007575989
    2. ' ' → logprob: -1.238373041152954
    3. 'n' → logprob: -1.488373041152954
    4. ' )' → logprob: -6.488373279571533
    5. ')' → logprob: -7.238373279571533
    6. ' ' → logprob: -7.488373279571533
    7. '0' → logprob: -7.738373279571533
    8. ' ")' → logprob: -7.988373279571533
    9. ' max' → logprob: -8.113372802734375
    10. ' if' → logprob: -8.488372802734375

Token 36: 'ise' (ID: 1096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1316436231136322
    2. 'ation' → logprob: -3.256643533706665
    3. 's' → logprob: -3.506643533706665
    4. 'e' → logprob: -3.881643533706665
    5. 'es' → logprob: -5.006643772125244
    6. 'n' → logprob: -6.131643772125244
    7. '()' → logprob: -6.256643772125244
    8. '")' → logprob: -6.381643772125244
    9. 'isateur' → logprob: -6.506643772125244
    10. 'er' → logprob: -6.506643772125244

Token 37: ' eval' (ID: 29383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8058843612670898
    2. ' ceiling' → logprob: -0.9308843612670898
    3. ' n' → logprob: -2.55588436126709
    4. 'n' → logprob: -3.43088436126709
    5. ' la' → logprob: -4.80588436126709
    6. ' ceil' → logprob: -4.93088436126709
    7. ' int' → logprob: -5.18088436126709
    8. 'ce' → logprob: -5.30588436126709
    9. '  ' → logprob: -5.80588436126709
    10. 'ceil' → logprob: -5.93088436126709

Token 38: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3159804344177246
    2. '
' → logprob: -1.6909804344177246
    3. '' → logprob: -3.8159804344177246
    4. ' 
' → logprob: -4.440980434417725
    5. 'n' → logprob: -4.690980434417725
    6. '*' → logprob: -4.815980434417725
    7. '\n' → logprob: -4.815980434417725
    8. ')
' → logprob: -5.315980434417725
    9. ' ' → logprob: -5.440980434417725
    10. '\' → logprob: -5.815980434417725

Token 39: ' fournit' (ID: 123615)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2508636713027954
    2. 'max' → logprob: -1.6258636713027954
    3. ' max' → logprob: -1.6258636713027954
    4. 'n' → logprob: -2.625863552093506
    5. 'input' → logprob: -2.750863552093506
    6. ' int' → logprob: -3.375863552093506
    7. ' input' → logprob: -3.500863552093506
    8. 'int' → logprob: -3.875863552093506
    9. ' "' → logprob: -4.000863552093506
    10. 'abs' → logprob: -4.375863552093506

Token 40: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6798294186592102
    2. ' une' → logprob: -0.8048294186592102
    3. ' ' → logprob: -4.3048295974731445
    4. ' un' → logprob: -4.4298295974731445
    5. '"' → logprob: -5.6798295974731445
    6. '100' → logprob: -5.8048295974731445
    7. 'une' → logprob: -5.9298295974731445
    8. '1' → logprob: -6.0548295974731445
    9. ' "' → logprob: -6.3048295974731445
    10. 'un' → logprob: -6.5548295974731445

Token 41: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.35028162598609924
    2. ' valeur' → logprob: -1.2252815961837769
    3. 'value' → logprob: -7.725281715393066
    4. 'fallback' → logprob: -7.975281715393066
    5. 'default' → logprob: -8.350281715393066
    6. ' val' → logprob: -8.600281715393066
    7. ' taille' → logprob: -9.350281715393066
    8. ' fallback' → logprob: -9.475281715393066
    9. '0' → logprob: -9.975281715393066
    10. ' value' → logprob: -9.975281715393066

Token 42: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04979622736573219
    2. 'par' → logprob: -3.5497963428497314
    3. ' de' → logprob: -4.424796104431152
    4. ' d' → logprob: -6.174796104431152
    5. ' n' → logprob: -6.799796104431152
    6. '_par' → logprob: -6.924796104431152
    7. 'de' → logprob: -7.049796104431152
    8. '0' → logprob: -7.549796104431152
    9. 'd' → logprob: -7.799796104431152
    10. 'n' → logprob: -7.799796104431152

Token 43: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.20744329690933228
    2. ' défaut' → logprob: -1.7074432373046875
    3. 'def' → logprob: -5.3324432373046875
    4. 'default' → logprob: -7.0824432373046875
    5. 'd' → logprob: -8.332443237304688
    6. ' déf' → logprob: -10.082443237304688
    7. '```' → logprob: -11.832443237304688
    8. ' ' → logprob: -11.957443237304688
    9. 'dés' → logprob: -12.582443237304688
    10. ' default' → logprob: -12.957443237304688

Token 44: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.181735560297966
    2. '\n' → logprob: -2.5567355155944824
    3. ')' → logprob: -3.5567355155944824
    4. '' → logprob: -4.181735515594482
    5. '\' → logprob: -4.556735515594482
    6. ' 
' → logprob: -4.806735515594482
    7. ')
' → logprob: -5.056735515594482
    8. 'n' → logprob: -5.181735515594482
    9. '  
' → logprob: -5.181735515594482
    10. '*' → logprob: -6.181735515594482

Token 45: 'parse' (ID: 4841)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.021568775177002
    2. 'n' → logprob: -1.521568775177002
    3. '
' → logprob: -1.896568775177002
    4. 'if' → logprob: -2.521568775177002
    5. '\n' → logprob: -2.646568775177002
    6. '\' → logprob: -3.521568775177002
    7. 's' → logprob: -3.896568775177002
    8. 'x' → logprob: -4.146568775177002
    9. 'size' → logprob: -4.646568775177002
    10. '  
' → logprob: -5.271568775177002

Token 46: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.26639893651008606
    2. 'd' → logprob: -1.6413989067077637
    3. '(' → logprob: -3.7663989067077637
    4. '_size' → logprob: -5.016398906707764
    5. '_' → logprob: -5.391398906707764
    6. ')' → logprob: -6.641398906707764
    7. ' =' → logprob: -7.391398906707764
    8. '(
' → logprob: -7.391398906707764
    9. '=' → logprob: -7.516398906707764
    10. 'size' → logprob: -7.766398906707764

Token 47: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7856453657150269
    2. ' lambda' → logprob: -1.9106453657150269
    3. ' ceiling' → logprob: -2.2856454849243164
    4. ' []' → logprob: -2.9106454849243164
    5. 'ce' → logprob: -3.1606454849243164
    6. 'int' → logprob: -3.5356454849243164
    7. ' list' → logprob: -3.6606454849243164
    8. 'list' → logprob: -3.7856454849243164
    9. ' int' → logprob: -4.035645484924316
    10. '[]' → logprob: -4.035645484924316

Token 48: ' s' (ID: 265)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0645836666226387
    2. ' s' → logprob: -3.1895837783813477
    3. 'x' → logprob: -4.314583778381348
    4. ' n' → logprob: -5.314583778381348
    5. ' expr' → logprob: -6.939583778381348
    6. ' text' → logprob: -7.939583778381348
    7. 's' → logprob: -7.939583778381348
    8. ' t' → logprob: -8.314583778381348
    9. ' input' → logprob: -8.689583778381348
    10. ' lst' → logprob: -8.939583778381348

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003982704598456621
    2. ':s' → logprob: -5.8789825439453125
    3. ' :' → logprob: -6.8789825439453125
    4. 's' → logprob: -10.128982543945312
    5. ',' → logprob: -10.378982543945312
    6. ':int' → logprob: -10.753982543945312
    7. ':list' → logprob: -10.753982543945312
    8. ' s' → logprob: -12.503982543945312
    9. ':str' → logprob: -12.628982543945312
    10. ':n' → logprob: -12.628982543945312

Token 50: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6554154753684998
    2. ' [' → logprob: -2.0304155349731445
    3. '[int' → logprob: -2.4054155349731445
    4. '[' → logprob: -2.5304155349731445
    5. 'list' → logprob: -2.7804155349731445
    6. ' int' → logprob: -3.4054155349731445
    7. ' s' → logprob: -3.7804155349731445
    8. 's' → logprob: -4.2804155349731445
    9. ' tuple' → logprob: -4.2804155349731445
    10. '[s' → logprob: -4.7804155349731445

Token 51: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10283774137496948
    2. '(s' → logprob: -2.7278378009796143
    3. '(' → logprob: -3.4778378009796143
    4. '(filter' → logprob: -6.852837562561035
    5. '(int' → logprob: -8.477837562561035
    6. '(range' → logprob: -9.227837562561035
    7. '(str' → logprob: -9.977837562561035
    8. 'map' → logprob: -11.102837562561035
    9. '(eval' → logprob: -11.477837562561035
    10. '(re' → logprob: -11.977837562561035

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0982932299375534
    2. '(' → logprob: -2.4732933044433594
    3. '(ord' → logprob: -5.223293304443359
    4. '(str' → logprob: -5.848293304443359
    5. '(float' → logprob: -6.973293304443359
    6. '(
' → logprob: -10.72329330444336
    7. 'int' → logprob: -11.09829330444336
    8. '(chr' → logprob: -11.34829330444336
    9. ' (' → logprob: -11.59829330444336
    10. ',int' → logprob: -11.84829330444336

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26030653715133667
    2. '(s' → logprob: -1.7603065967559814
    3. ',s' → logprob: -3.1353065967559814
    4. 's' → logprob: -4.635306358337402
    5. '(' → logprob: -5.885306358337402
    6. ' ,' → logprob: -7.135306358337402
    7. ' s' → logprob: -8.760306358337402
    8. ')' → logprob: -8.760306358337402
    9. ',(' → logprob: -10.260306358337402
    10. ' (' → logprob: -11.260306358337402

Token 54: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14282521605491638
    2. 's' → logprob: -2.017825126647949
    3. ' filter' → logprob: -9.76782512664795
    4. 'filter' → logprob: -10.01782512664795
    5. '(s' → logprob: -10.76782512664795
    6. ' ' → logprob: -11.26782512664795
    7. ')' → logprob: -12.64282512664795
    8. 'str' → logprob: -13.20532512664795
    9. ' ' → logprob: -13.58032512664795
    10. ',' → logprob: -13.70532512664795

Token 55: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4401339590549469
    2. '.strip' → logprob: -1.3151339292526245
    3. '.' → logprob: -2.440134048461914
    4. ' .' → logprob: -8.440134048461914
    5. '().' → logprob: -9.065134048461914
    6. 'split' → logprob: -9.690134048461914
    7. '.replace' → logprob: -10.190134048461914
    8. 'strip' → logprob: -10.940134048461914
    9. '.rstrip' → logprob: -12.315134048461914
    10. ')' → logprob: -13.065134048461914

Token 56: '(','' (ID: 170650)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09302011877298355
    2. '()' → logprob: -2.59302020072937
    3. '())))' → logprob: -4.843019962310791
    4. '('' → logprob: -5.718019962310791
    5. '())' → logprob: -6.343019962310791
    6. '(','' → logprob: -7.343019962310791
    7. '(' → logprob: -8.46802043914795
    8. '("' → logprob: -9.84302043914795
    9. '()));' → logprob: -10.09302043914795
    10. '()))
' → logprob: -10.46802043914795

Token 57: ' if' (ID: 538)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.030082523822784424
    2. ')' → logprob: -3.5300824642181396
    3. '))))' → logprob: -8.530082702636719
    4. '))' → logprob: -9.155082702636719
    5. '')))' → logprob: -11.030082702636719
    6. ')))
' → logprob: -12.905082702636719
    7. ')));' → logprob: -12.905082702636719
    8. ' ' → logprob: -12.905082702636719
    9. '())))' → logprob: -13.780082702636719
    10. ')))

' → logprob: -14.030082702636719

Token 58: ' ','' (ID: 56369)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1708934307098389
    2. ' n' → logprob: -1.6708934307098389
    3. 'n' → logprob: -1.7958934307098389
    4. '','' → logprob: -2.170893430709839
    5. ' '' → logprob: -3.170893430709839
    6. ''s' → logprob: -3.420893430709839
    7. '"' → logprob: -3.670893430709839
    8. 's' → logprob: -4.045893669128418
    9. ''n' → logprob: -4.420893669128418
    10. '","' → logprob: -4.420893669128418

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3021352291107178
    2. ' else' → logprob: -1.5521352291107178
    3. 'else' → logprob: -3.5521352291107178
    4. 'in' → logprob: -3.9271352291107178
    5. ' not' → logprob: -7.802135467529297
    6. ' ' → logprob: -9.677135467529297
    7. ''' → logprob: -10.864635467529297
    8. ')' → logprob: -11.052135467529297
    9. 'not' → logprob: -11.114635467529297
    10. 'elif' → logprob: -11.614635467529297

Token 60: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20142912864685059
    2. ' s' → logprob: -1.7014291286468506
    3. ' ' → logprob: -12.32642936706543
    4. '(s' → logprob: -12.70142936706543
    5. 'input' → logprob: -12.95142936706543
    6. 'str' → logprob: -13.95142936706543
    7. 'n' → logprob: -13.95142936706543
    8. ')' → logprob: -14.57642936706543
    9. ' input' → logprob: -15.01392936706543
    10. '   ' → logprob: -15.07642936706543

Token 61: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08894437551498413
    2. 'else' → logprob: -2.463944435119629
    3. '	else' → logprob: -12.713944435119629
    4. ' ' → logprob: -14.088944435119629
    5. ')' → logprob: -15.463944435119629
    6. ' els' → logprob: -16.213943481445312
    7. 'e' → logprob: -16.338943481445312
    8. 'els' → logprob: -16.338943481445312
    9. ' ' → logprob: -16.463943481445312
    10. '```' → logprob: -16.463943481445312

Token 62: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010904444381594658
    2. ' '' → logprob: -5.260904312133789
    3. ''s' → logprob: -5.635904312133789
    4. '';' → logprob: -6.510904312133789
    5. ''\' → logprob: -8.635904312133789
    6. ''t' → logprob: -9.510904312133789
    7. 'None' → logprob: -10.010904312133789
    8. ' None' → logprob: -10.635904312133789
    9. ''a' → logprob: -10.635904312133789
    10. ' ' → logprob: -10.760904312133789

Token 63: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10204677283763885
    2. ''' → logprob: -2.6020467281341553
    3. ')))' → logprob: -5.352046966552734
    4. ';' → logprob: -5.477046966552734
    5. '')))' → logprob: -5.977046966552734
    6. ')' → logprob: -5.977046966552734
    7. ' '' → logprob: -6.352046966552734
    8. ' 
' → logprob: -6.352046966552734
    9. ' ))' → logprob: -6.727046966552734
    10. ' )' → logprob: -6.852046966552734

Token 64: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02577880769968033
    2. ')' → logprob: -3.7757787704467773
    3. '))))' → logprob: -6.150778770446777
    4. '))' → logprob: -8.775778770446777
    5. ' ' → logprob: -9.650778770446777
    6. '')))' → logprob: -9.650778770446777
    7. ')))
' → logprob: -10.025778770446777
    8. ')))

' → logprob: -10.650778770446777
    9. ')));' → logprob: -10.900778770446777
    10. '),' → logprob: -12.150778770446777

Token 65: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27750304341316223
    2. '<|end|>' → logprob: -1.9025030136108398
    3. '
' → logprob: -2.90250301361084
    4. '\n' → logprob: -4.27750301361084
    5. '#' → logprob: -5.40250301361084
    6. '<|end|>' → logprob: -6.02750301361084
    7. ' ' → logprob: -6.15250301361084
    8. 'newline' → logprob: -6.27750301361084
    9. '[' → logprob: -6.40250301361084
    10. 'n' → logprob: -6.40250301361084

Token 66: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009664955548942089
    2. '
' → logprob: -6.009665012359619
    3. '<|end|>' → logprob: -6.259665012359619
    4. '\n' → logprob: -7.009665012359619
    5. 'newline' → logprob: -7.259665012359619
    6. 'n' → logprob: -7.384665012359619
    7. ' ' → logprob: -7.384665012359619
    8. ')
' → logprob: -7.884665012359619
    9. '#' → logprob: -8.009664535522461
    10. ',' → logprob: -8.259664535522461

Token 67: ' Analyse' (ID: 91441)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.1278977394104004
    2. '#' → logprob: -1.8778977394104004
    3. ' parse' → logprob: -2.2528977394104004
    4. 'Parse' → logprob: -2.2528977394104004
    5. 'split' → logprob: -3.5028977394104004
    6. 'Convert' → logprob: -3.6278977394104004
    7. 'def' → logprob: -3.8778977394104004
    8. ' Parses' → logprob: -4.1278977394104
    9. 'Parser' → logprob: -4.3153977394104
    10. ' #' → logprob: -4.3778977394104

Token 68: ' flexible' (ID: 20185)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' sépar' (ID: 97160)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.3745659589767456
    2. 'input' → logprob: -2.624566078186035
    3. 'entr' → logprob: -2.749566078186035
    4. ' entr' → logprob: -3.124566078186035
    5. 'élé' → logprob: -3.374566078186035
    6. ' chaînes' → logprob: -3.999566078186035
    7. ' input' → logprob: -4.374566078186035
    8. 'inputs' → logprob: -4.499566078186035
    9. 'd' → logprob: -4.874566078186035
    10. 'tokens' → logprob: -4.874566078186035

Token 71: 'ateurs' (ID: 19727)
  Prédit: 'ateurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateurs' → logprob: -0.02373477630317211
    2. 'ar' → logprob: -5.1487345695495605
    3. 'eurs' → logprob: -5.5237345695495605
    4. '```' → logprob: -5.7737345695495605
    5. '`' → logprob: -5.8987345695495605
    6. 'ants' → logprob: -6.1487345695495605
    7. 'r' → logprob: -7.5237345695495605
    8. '' → logprob: -7.6487345695495605
    9. '``' → logprob: -7.7737345695495605
    10. 'teurs' → logprob: -8.148735046386719

Token 72: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3663782775402069
    2. '<|end|>' → logprob: -2.2413783073425293
    3. '\n' → logprob: -2.4913783073425293
    4. '
' → logprob: -3.4913783073425293
    5. 'n' → logprob: -4.116378307342529
    6. 'newline' → logprob: -4.491378307342529
    7. '[' → logprob: -4.616378307342529
    8. '\' → logprob: -4.616378307342529
    9. '<|end|>' → logprob: -5.241378307342529
    10. ',' → logprob: -5.366378307342529

Token 73: 'nums' (ID: 44465)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6000481843948364
    2. 'n' → logprob: -1.6000481843948364
    3. '
' → logprob: -1.6000481843948364
    4. '\n' → logprob: -2.475048065185547
    5. '[' → logprob: -2.600048065185547
    6. ',' → logprob: -2.975048065185547
    7. 's' → logprob: -3.100048065185547
    8. ')' → logprob: -3.725048065185547
    9. '  
' → logprob: -3.850048065185547
    10. '<|end|>' → logprob: -4.225048065185547

Token 74: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0777953565120697
    2. '[:]' → logprob: -3.7027952671051025
    3. '[' → logprob: -3.9527952671051025
    4. ')' → logprob: -4.452795505523682
    5. '=' → logprob: -5.327795505523682
    6. '(s' → logprob: -5.702795505523682
    7. '[:' → logprob: -6.077795505523682
    8. '<|end|>' → logprob: -6.327795505523682
    9. ' =' → logprob: -6.827795505523682
    10. 's' → logprob: -6.952795505523682

Token 75: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.698638916015625
    2. ' parse' → logprob: -0.698638916015625
    3. '[' → logprob: -6.323638916015625
    4. ' [' → logprob: -6.698638916015625
    5. ' list' → logprob: -6.948638916015625
    6. 'list' → logprob: -7.448638916015625
    7. ' ceiling' → logprob: -8.198638916015625
    8. '[]' → logprob: -8.698638916015625
    9. ' []' → logprob: -8.698638916015625
    10. 'ce' → logprob: -9.448638916015625

Token 76: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005272891838103533
    2. '(' → logprob: -5.25527286529541
    3. 'input' → logprob: -11.00527286529541
    4. '(eval' → logprob: -11.25527286529541
    5. '(
' → logprob: -12.38027286529541
    6. '(s' → logprob: -13.50527286529541
    7. ' (' → logprob: -13.63027286529541
    8. '('' → logprob: -14.13027286529541
    9. ',input' → logprob: -15.13027286529541
    10. '(raw' → logprob: -15.25527286529541

Token 77: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5118212103843689
    2. '("' → logprob: -1.3868212699890137
    3. '())' → logprob: -2.3868212699890137
    4. '("("' → logprob: -3.5118212699890137
    5. '(' → logprob: -4.511821269989014
    6. '(""))' → logprob: -4.761821269989014
    7. '("")' → logprob: -5.261821269989014
    8. '('' → logprob: -6.011821269989014
    9. ')' → logprob: -7.636821269989014
    10. '(">' → logprob: -7.761821269989014

Token 78: 'Liste' (ID: 90456)
  Prédit: 'Ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.1655743271112442
    2. 'Entr' → logprob: -2.290574312210083
    3. 'Liste' → logprob: -4.040574550628662
    4. 'Nombre' → logprob: -5.665574550628662
    5. 'Enter' → logprob: -5.665574550628662
    6. 'ent' → logprob: -5.790574550628662
    7. 'Veuillez' → logprob: -5.790574550628662
    8. 'N' → logprob: -5.915574550628662
    9. 'S' → logprob: -5.915574550628662
    10. 'n' → logprob: -6.040574550628662

Token 79: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45339787006378174
    2. ' des' → logprob: -1.7033978700637817
    3. ' :' → logprob: -1.8283978700637817
    4. ' de' → logprob: -5.203397750854492
    5. ' d' → logprob: -6.078397750854492
    6. ' à' → logprob: -6.078397750854492
    7. ' (' → logprob: -6.328397750854492
    8. '("' → logprob: -6.578397750854492
    9. '(' → logprob: -6.703397750854492
    10. 's' → logprob: -6.953397750854492

Token 80: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.007506418041884899
    2. 'nombre' → logprob: -6.132506370544434
    3. 'n' → logprob: -6.382506370544434
    4. ' nombre' → logprob: -6.757506370544434
    5. ' ' → logprob: -7.507506370544434
    6. ' num' → logprob: -7.757506370544434
    7. 'num' → logprob: -7.882506370544434
    8. ' valeurs' → logprob: -8.507506370544434
    9. ' ent' → logprob: -8.632506370544434
    10. 'ent' → logprob: -8.757506370544434

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6939026713371277
    2. ' :' → logprob: -0.6939026713371277
    3. ' (' → logprob: -8.568902969360352
    4. '(s' → logprob: -8.818902969360352
    5. 's' → logprob: -9.068902969360352
    6. ' ' → logprob: -9.068902969360352
    7. ' à' → logprob: -9.443902969360352
    8. ' ' → logprob: -10.693902969360352
    9. '(' → logprob: -10.818902969360352
    10. ':\' → logprob: -11.193902969360352

Token 82: ' "' (ID: 392)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.023100698366761208
    2. ')' → logprob: -4.273100852966309
    3. '")' → logprob: -5.398100852966309
    4. '))' → logprob: -6.273100852966309
    5. ' "))' → logprob: -6.523100852966309
    6. ')")' → logprob: -7.898100852966309
    7. '"' → logprob: -8.398100852966309
    8. ''))' → logprob: -8.648100852966309
    9. '"))
' → logprob: -9.648100852966309
    10. '()' → logprob: -9.898100852966309

Token 83: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5639410614967346
    2. ')' → logprob: -0.9389410614967346
    3. '"))' → logprob: -3.68894100189209
    4. '")' → logprob: -5.06394100189209
    5. '()))' → logprob: -5.81394100189209
    6. '())' → logprob: -5.93894100189209
    7. '()' → logprob: -6.18894100189209
    8. ')")' → logprob: -7.93894100189209
    9. ''))' → logprob: -8.81394100189209
    10. ').' → logprob: -9.31394100189209

Token 84: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4092776775360107
    2. '
' → logprob: -1.4092776775360107
    3. '[' → logprob: -1.9092776775360107
    4. '\n' → logprob: -2.1592776775360107
    5. 'n' → logprob: -3.1592776775360107
    6. '\' → logprob: -3.6592776775360107
    7. '#' → logprob: -3.7842776775360107
    8. ',' → logprob: -3.9092776775360107
    9. '  
' → logprob: -4.28427791595459
    10. ' 
' → logprob: -4.40927791595459

Token 85: ' extreme' (ID: 23700)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.73269522190094
    2. ' ceiling' → logprob: -2.1076951026916504
    3. ' calculate' → logprob: -2.2326951026916504
    4. ' space' → logprob: -2.4826951026916504
    5. ' average' → logprob: -2.7326951026916504
    6. ' factor' → logprob: -2.7326951026916504
    7. ' sum' → logprob: -3.2326951026916504
    8. ' process' → logprob: -3.3576951026916504
    9. ' maximum' → logprob: -3.4826951026916504
    10. ' sorted' → logprob: -3.6076951026916504

Token 86: '_diff' (ID: 41047)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3917293846607208
    2. '(' → logprob: -2.0167293548583984
    3. '_' → logprob: -2.3917293548583984
    4. '(s' → logprob: -2.6417293548583984
    5. '_value' → logprob: -5.391729354858398
    6. '(nums' → logprob: -5.391729354858398
    7. '_values' → logprob: -5.641729354858398
    8. '_s' → logprob: -5.766729354858398
    9. '(n' → logprob: -6.266729354858398
    10. '(a' → logprob: -6.766729354858398

Token 87: '(lst' (ID: 95688)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.7271268367767334
    2. '(' → logprob: -0.9771268367767334
    3. '(n' → logprob: -2.6021268367767334
    4. '(a' → logprob: -3.8521268367767334
    5. '(s' → logprob: -4.1021270751953125
    6. ' (' → logprob: -4.7271270751953125
    7. '(num' → logprob: -5.3521270751953125
    8. '(x' → logprob: -5.3521270751953125
    9. '(lst' → logprob: -5.4771270751953125
    10. '(numbers' → logprob: -6.2271270751953125

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001738840015605092
    2. ')' → logprob: -6.876739025115967
    3. ' ):' → logprob: -7.501739025115967
    4. '):
' → logprob: -9.126738548278809
    5. '(lst' → logprob: -11.501738548278809
    6. ':' → logprob: -12.126738548278809
    7. '[]):' → logprob: -12.126738548278809
    8. ')):' → logprob: -12.376738548278809
    9. '   ' → logprob: -12.501738548278809
    10. ' ' → logprob: -12.626738548278809

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2653246521949768
    2. ':' → logprob: -1.515324592590332
    3. ':
' → logprob: -5.015324592590332
    4. ' if' → logprob: -6.390324592590332
    5. ' return' → logprob: -6.640324592590332
    6. ',' → logprob: -7.140324592590332
    7. ':return' → logprob: -7.515324592590332
    8. ' ' → logprob: -7.640324592590332
    9. 'n' → logprob: -8.015324592590332
    10. '):' → logprob: -8.515324592590332

Token 90: ' lst' (ID: 33384)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4851433336734772
    2. ' return' → logprob: -1.9851433038711548
    3. 'if' → logprob: -2.3601434230804443
    4. '   ' → logprob: -2.4851434230804443
    5. 'return' → logprob: -2.7351434230804443
    6. ' max' → logprob: -6.110143184661865
    7. 'max' → logprob: -6.610143184661865
    8. ' ' → logprob: -8.235143661499023
    9. '    
' → logprob: -9.360143661499023
    10. '    ' → logprob: -9.485143661499023

Token 91: '.sort' (ID: 19551)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0282953977584839
    2. '.sort' → logprob: -1.1532953977584839
    3. ' =' → logprob: -2.0282955169677734
    4. '.' → logprob: -2.5282955169677734
    5. ')' → logprob: -3.1532955169677734
    6. '[:]' → logprob: -4.278295516967773
    7. '-' → logprob: -4.403295516967773
    8. '[' → logprob: -5.028295516967773
    9. '=[]' → logprob: -5.153295516967773
    10. 'max' → logprob: -5.278295516967773

Token 92: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13266481459140778
    2. '()
' → logprob: -2.382664918899536
    3. '(reverse' → logprob: -3.507664918899536
    4. 'reverse' → logprob: -6.382664680480957
    5. '()

' → logprob: -8.507664680480957
    6. '()
' → logprob: -10.632664680480957
    7. 'def' → logprob: -11.382664680480957
    8. '.reverse' → logprob: -11.507664680480957
    9. '(' → logprob: -11.757664680480957
    10. '();' → logprob: -12.007664680480957

Token 93: ' =' (ID: 314)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.014176084659993649
    2. '=' → logprob: -4.264175891876221
    3. ')' → logprob: -12.014176368713379
    4. ')=' → logprob: -12.639176368713379
    5. '(True' → logprob: -13.889176368713379
    6. '=False' → logprob: -14.139176368713379
    7. '=
' → logprob: -14.139176368713379
    8. ' =' → logprob: -14.764176368713379
    9. 'True' → logprob: -15.889176368713379
    10. '=

' → logprob: -16.389175415039062

Token 94: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06214805319905281
    2. ' True' → logprob: -2.812148094177246
    3. '=True' → logprob: -9.062148094177246
    4. '(True' → logprob: -10.187148094177246
    5. ')' → logprob: -11.062148094177246
    6. '1' → logprob: -12.187148094177246
    7. 'False' → logprob: -12.687148094177246
    8. ' ' → logprob: -13.812148094177246
    9. 'Tr' → logprob: -14.562148094177246
    10. '<|end|>' → logprob: -15.062148094177246

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034630970912985504
    2. ')
' → logprob: -8.000346183776855
    3. ' )' → logprob: -12.250346183776855
    4. '   ' → logprob: -13.250346183776855
    5. ')
' → logprob: -13.625346183776855
    6. ')

' → logprob: -13.625346183776855
    7. ')return' → logprob: -14.500346183776855
    8. '))' → logprob: -14.875346183776855
    9. ' ' → logprob: -15.500346183776855
    10. ',' → logprob: -15.750346183776855

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25771060585975647
    2. '
' → logprob: -1.632710576057434
    3. '    
' → logprob: -4.6327104568481445
    4. '<|end|>' → logprob: -5.1327104568481445
    5. 'return' → logprob: -5.2577104568481445
    6. ')' → logprob: -5.7577104568481445
    7. ' return' → logprob: -6.2577104568481445
    8. '  
' → logprob: -6.7577104568481445
    9. ' 
' → logprob: -7.2577104568481445
    10. ' ' → logprob: -7.3827104568481445

Token 97: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5227599740028381
    2. '
' → logprob: -1.0227599143981934
    3. '<|end|>' → logprob: -4.147759914398193
    4. ')' → logprob: -4.272759914398193
    5. '    
' → logprob: -5.022759914398193
    6. ' ' → logprob: -6.522759914398193
    7. 'return' → logprob: -6.522759914398193
    8. '  
' → logprob: -7.022759914398193
    9. ' 
' → logprob: -7.147759914398193
    10. '   
' → logprob: -7.147759914398193

Token 98: ' Sp' (ID: 2856)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7479975819587708
    2. '   ' → logprob: -1.622997522354126
    3. ' return' → logprob: -1.622997522354126
    4. 'min' → logprob: -2.622997522354126
    5. 'return' → logprob: -3.247997522354126
    6. 'diff' → logprob: -5.497997760772705
    7. ' diff' → logprob: -5.622997760772705
    8. ' minimum' → logprob: -6.122997760772705
    9. 'minimum' → logprob: -6.622997760772705
    10. ' lst' → logprob: -6.747997760772705

Token 99: 'éc' (ID: 5675)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.4648226797580719
    2. 'ec' → logprob: -2.339822769165039
    3. 'lice' → logprob: -2.964822769165039
    4. '   ' → logprob: -3.214822769165039
    5. 'liced' → logprob: -3.464822769165039
    6. 'l' → logprob: -3.964822769165039
    7. 'éc' → logprob: -3.964822769165039
    8. 'ace' → logprob: -4.089822769165039
    9. 'def' → logprob: -4.589822769165039
    10. 'aced' → logprob: -4.714822769165039

Token 100: 'ifie' (ID: 46409)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.035425424575805664
    2. 'ec' → logprob: -3.9104254245758057
    3. 'ifiée' → logprob: -5.410425186157227
    4. 'ifié' → logprob: -6.035425186157227
    5. 'c' → logprob: -6.285425186157227
    6. 'ic' → logprob: -6.660425186157227
    7. 'éci' → logprob: -6.785425186157227
    8. 'cial' → logprob: -7.285425186157227
    9. 'ifiques' → logprob: -7.410425186157227
    10. 'é' → logprob: -7.535425186157227

Token 101: ' explicit' (ID: 23141)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.5142058730125427
    2. 'explicit' → logprob: -1.7642059326171875
    3. 'reverse' → logprob: -2.6392059326171875
    4. 'le' → logprob: -3.0142059326171875
    5. '<|end|>' → logprob: -3.7642059326171875
    6. '=False' → logprob: -4.0142059326171875
    7. 'key' → logprob: -4.3892059326171875
    8. ')' → logprob: -4.5142059326171875
    9. ' explicitly' → logprob: -4.8892059326171875
    10. '=' → logprob: -4.8892059326171875

Token 102: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.5376711487770081
    2. 'ly' → logprob: -0.9126711487770081
    3. 'ely' → logprob: -4.537671089172363
    4. '=True' → logprob: -6.787671089172363
    5. '=False' → logprob: -7.037671089172363
    6. 'lement' → logprob: -7.162671089172363
    7. 'e' → logprob: -7.662671089172363
    8. 'ment' → logprob: -8.412671089172363
    9. 'ément' → logprob: -9.537671089172363
    10. 'False' → logprob: -10.037671089172363

Token 103: ' reverse' (ID: 18199)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5445645451545715
    2. ')' → logprob: -1.1695644855499268
    3. '=True' → logprob: -2.6695644855499268
    4. ',' → logprob: -4.294564723968506
    5. 'def' → logprob: -4.669564723968506
    6. '<|end|>' → logprob: -5.544564723968506
    7. '()' → logprob: -6.419564723968506
    8. '
' → logprob: -6.669564723968506
    9. '=False' → logprob: -7.044564723968506
    10. ')
' → logprob: -7.044564723968506

Token 104: ' même' (ID: 9679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5340197682380676
    2. ')' → logprob: -0.9090197682380676
    3. ')
' → logprob: -5.159019947052002
    4. '=True' → logprob: -5.909019947052002
    5. 'return' → logprob: -7.409019947052002
    6. '=' → logprob: -7.909019947052002
    7. ',' → logprob: -8.284019470214844
    8. 'def' → logprob: -8.534019470214844
    9. ' )' → logprob: -8.784019470214844
    10. ' return' → logprob: -8.909019470214844

Token 105: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009437658824026585
    2. '   ' → logprob: -5.259437561035156
    3. '=True' → logprob: -6.384437561035156
    4. ' )' → logprob: -6.884437561035156
    5. ')
' → logprob: -7.759437561035156
    6. '=' → logprob: -8.009437561035156
    7. ' ' → logprob: -8.759437561035156
    8. '=False' → logprob: -8.759437561035156
    9. '<|end|>' → logprob: -9.009437561035156
    10. '
' → logprob: -9.759437561035156

Token 106: ' inutile' (ID: 157748)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0379955880343914
    2. ' False' → logprob: -3.4129955768585205
    3. ' ce' → logprob: -6.5379958152771
    4. 'le' → logprob: -6.9129958152771
    5. '=False' → logprob: -7.2879958152771
    6. ' la' → logprob: -8.287995338439941
    7. 'c' → logprob: -8.537995338439941
    8. 'ce' → logprob: -8.787995338439941
    9. ' c' → logprob: -9.037995338439941
    10. 'la' → logprob: -9.037995338439941

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004394036717712879
    2. '
' → logprob: -6.379394054412842
    3. 'return' → logprob: -7.254394054412842
    4. '    
' → logprob: -7.254394054412842
    5. ')' → logprob: -7.379394054412842
    6. 'min' → logprob: -8.629393577575684
    7. ' return' → logprob: -8.754393577575684
    8. 'diff' → logprob: -9.754393577575684
    9. 'max' → logprob: -10.254393577575684
    10. '```' → logprob: -10.629393577575684

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010369665920734406
    2. '
' → logprob: -5.510369777679443
    3. '    
' → logprob: -5.635369777679443
    4. 'return' → logprob: -6.385369777679443
    5. ' return' → logprob: -7.260369777679443
    6. 'max' → logprob: -10.135369300842285
    7. 'min' → logprob: -10.135369300842285
    8. '    ' → logprob: -10.510369300842285
    9. '   
' → logprob: -10.510369300842285
    10. 'n' → logprob: -11.135369300842285

Token 109: ' left' (ID: 3561)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16235844790935516
    2. ' return' → logprob: -2.037358522415161
    3. '   ' → logprob: -4.287358283996582
    4. 'if' → logprob: -5.912358283996582
    5. 'diff' → logprob: -6.787358283996582
    6. ' if' → logprob: -6.912358283996582
    7. 'max' → logprob: -8.037358283996582
    8. 'min' → logprob: -8.537358283996582
    9. ' min' → logprob: -9.412358283996582
    10. 'result' → logprob: -10.162358283996582

Token 110: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6283262968063354
    2. '=' → logprob: -0.8783262968063354
    3. ',' → logprob: -3.128326416015625
    4. 'most' → logprob: -6.003326416015625
    5. '_index' → logprob: -6.753326416015625
    6. '_' → logprob: -6.753326416015625
    7. '_val' → logprob: -7.753326416015625
    8. '_idx' → logprob: -8.128326416015625
    9. ' ,' → logprob: -8.253326416015625
    10. '_diff' → logprob: -8.503326416015625

Token 111: ' *' (ID: 425)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4752715229988098
    2. ' right' → logprob: -0.9752715229988098
    3. '=' → logprob: -7.975271701812744
    4. ' =' → logprob: -8.100271224975586
    5. '*' → logprob: -8.350271224975586
    6. '	right' → logprob: -9.475271224975586
    7. ' ' → logprob: -10.100271224975586
    8. '_' → logprob: -10.225271224975586
    9. '   ' → logprob: -10.600271224975586
    10. ',right' → logprob: -10.725271224975586

Token 112: '_,' (ID: 14152)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6472839713096619
    2. 'right' → logprob: -0.7722839713096619
    3. 'middle' → logprob: -5.147284030914307
    4. ' right' → logprob: -5.897284030914307
    5. 'lst' → logprob: -6.272284030914307
    6. ' rest' → logprob: -6.522284030914307
    7. '_rest' → logprob: -7.522284030914307
    8. '*' → logprob: -7.897284030914307
    9. 'mid' → logprob: -7.897284030914307
    10. '_,' → logprob: -7.897284030914307

Token 113: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20145183801651
    2. ' right' → logprob: -1.7014517784118652
    3. ' ' → logprob: -11.076452255249023
    4. '	right' → logprob: -11.576452255249023
    5. '   ' → logprob: -12.326452255249023
    6. ',right' → logprob: -13.076452255249023
    7. 'rig' → logprob: -13.576452255249023
    8. '*' → logprob: -13.951452255249023
    9. 'r' → logprob: -14.076452255249023
    10. '[right' → logprob: -14.201452255249023

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759440064430237
    2. '=' → logprob: -0.8259440064430237
    3. ' ' → logprob: -13.200943946838379
    4. ',' → logprob: -13.700943946838379
    5. '   ' → logprob: -14.075943946838379
    6. '  ' → logprob: -15.575943946838379
    7. 'lst' → logprob: -15.700943946838379
    8. '=list' → logprob: -16.075944900512695
    9. '    ' → logprob: -16.450944900512695
    10. ' ' → logprob: -17.075944900512695

Token 115: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.5759463906288147
    2. 'lst' → logprob: -0.8259463906288147
    3. '(lst' → logprob: -12.825946807861328
    4. ' ' → logprob: -13.450946807861328
    5. ' sorted' → logprob: -14.450946807861328
    6. '   ' → logprob: -14.575946807861328
    7. 'sorted' → logprob: -14.700946807861328
    8. '.lst' → logprob: -15.075946807861328
    9. 'list' → logprob: -15.200946807861328
    10. '_lst' → logprob: -15.200946807861328

Token 116: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5862578749656677
    2. 'return' → logprob: -0.8362578749656677
    3. '
' → logprob: -4.8362579345703125
    4. ' return' → logprob: -6.2112579345703125
    5. ' ' → logprob: -8.711257934570312
    6. '  ' → logprob: -9.586257934570312
    7. '    
' → logprob: -10.461257934570312
    8. 'print' → logprob: -10.961257934570312
    9. '
' → logprob: -11.711257934570312
    10. '    ' → logprob: -11.711257934570312

Token 117: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18092356622219086
    2. 'return' → logprob: -1.930923581123352
    3. '
' → logprob: -3.9309234619140625
    4. '    
' → logprob: -7.8059234619140625
    5. ' return' → logprob: -8.055923461914062
    6. '
' → logprob: -10.055923461914062
    7. ' ' → logprob: -10.680923461914062
    8. '  
' → logprob: -10.680923461914062
    9. '  ' → logprob: -10.805923461914062
    10. '	return' → logprob: -11.805923461914062

Token 118: ' Un' (ID: 1367)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7004827260971069
    2. 'left' → logprob: -0.8254827260971069
    3. ' right' → logprob: -3.3254828453063965
    4. 'return' → logprob: -4.3254828453063965
    5. ' left' → logprob: -5.3254828453063965
    6. '(left' → logprob: -5.8254828453063965
    7. 'lst' → logprob: -5.8254828453063965
    8. '(right' → logprob: -6.3254828453063965
    9. '[right' → logprob: -7.5754828453063965
    10. '[left' → logprob: -7.7004828453063965

Token 119: 'packing' (ID: 173195)
  Prédit: 'packing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packing' → logprob: -0.11041662842035294
    2. 'pack' → logprob: -2.3604166507720947
    3. 'packed' → logprob: -4.610416412353516
    4. 'packs' → logprob: -9.735416412353516
    5. ' packing' → logprob: -9.860416412353516
    6. 'packer' → logprob: -10.610416412353516
    7. ' pack' → logprob: -10.610416412353516
    8. ' unpack' → logprob: -11.360416412353516
    9. ' packed' → logprob: -11.735416412353516
    10. 'e' → logprob: -11.860416412353516

Token 120: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03916172683238983
    2. 'return' → logprob: -3.2891616821289062
    3. ' return' → logprob: -7.289161682128906
    4. '
' → logprob: -8.539161682128906
    5. '    
' → logprob: -8.914161682128906
    6. '  ' → logprob: -10.414161682128906
    7. ' ' → logprob: -11.289161682128906
    8. ',' → logprob: -11.664161682128906
    9. '```' → logprob: -11.789161682128906
    10. '	return' → logprob: -11.914161682128906

Token 121: '-con' (ID: 21675)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.9200677871704102
    2. 'standard' → logprob: -1.7950677871704102
    3. 'con' → logprob: -2.17006778717041
    4. '<|end|>' → logprob: -2.54506778717041
    5. ' convention' → logprob: -3.04506778717041
    6. 'strict' → logprob: -3.54506778717041
    7. ' trivial' → logprob: -3.92006778717041
    8. 'py' → logprob: -4.29506778717041
    9. 'idi' → logprob: -4.42006778717041
    10. 'util' → logprob: -4.42006778717041

Token 122: 'vention' (ID: 9584)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8628365993499756
    2. 'tent' → logprob: -1.8628365993499756
    3. 'vention' → logprob: -2.1128365993499756
    4. 's' → logprob: -2.6128365993499756
    5. 'secutive' → logprob: -2.8628365993499756
    6. '```' → logprob: -3.3628365993499756
    7. 'ventional' → logprob: -3.4878365993499756
    8. 'sum' → logprob: -3.8628365993499756
    9. 'v' → logprob: -4.862836837768555
    10. 'stant' → logprob: -4.987836837768555

Token 123: 'nel' (ID: 10085)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6493220925331116
    2. 'né' → logprob: -2.399322032928467
    3. ' =' → logprob: -3.274322032928467
    4. '[' → logprob: -3.524322032928467
    5. 'ée' → logprob: -3.649322032928467
    6. 'tr' → logprob: -3.649322032928467
    7. '```' → logprob: -3.774322032928467
    8. 'nées' → logprob: -3.899322032928467
    9. 'right' → logprob: -4.149322032928467
    10. 'és' → logprob: -4.399322032928467

Token 124: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7811905741691589
    2. '
' → logprob: -1.0311906337738037
    3. 'return' → logprob: -1.7811906337738037
    4. '    
' → logprob: -4.906190395355225
    5. ' return' → logprob: -5.156190395355225
    6. '  
' → logprob: -6.531190395355225
    7. '
' → logprob: -7.531190395355225
    8. '   
' → logprob: -7.906190395355225
    9. '<|end|>' → logprob: -8.031190872192383
    10. '  ' → logprob: -8.281190872192383

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006096346769481897
    2. 'return' → logprob: -5.881096363067627
    3. '
' → logprob: -6.006096363067627
    4. '    
' → logprob: -7.506096363067627
    5. ' return' → logprob: -8.381095886230469
    6. '  
' → logprob: -11.631095886230469
    7. '   
' → logprob: -12.381095886230469
    8. '  ' → logprob: -12.631095886230469
    9. '
' → logprob: -12.631095886230469
    10. '<|end|>' → logprob: -12.881095886230469

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20259039103984833
    2. '   ' → logprob: -1.8275903463363647
    3. ' return' → logprob: -4.077590465545654
    4. '
' → logprob: -6.452590465545654
    5. '    
' → logprob: -6.452590465545654
    6. 'diff' → logprob: -6.827590465545654
    7. 'result' → logprob: -7.452590465545654
    8. '  ' → logprob: -8.827589988708496
    9. ' ' → logprob: -8.827589988708496
    10. ' 
' → logprob: -9.827589988708496

Token 127: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.12978658080101013
    2. 'right' → logprob: -2.129786491394043
    3. 'abs' → logprob: -6.254786491394043
    4. ' abs' → logprob: -7.379786491394043
    5. ' ceiling' → logprob: -8.629786491394043
    6. ' ' → logprob: -10.504786491394043
    7. '(right' → logprob: -10.629786491394043
    8. '	right' → logprob: -10.879786491394043
    9. ' ceil' → logprob: -11.504786491394043
    10. ' ' → logprob: -12.004786491394043

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05492504686117172
    2. '-' → logprob: -2.929924964904785
    3. ' ' → logprob: -10.179924964904785
    4. '  ' → logprob: -13.429924964904785
    5. ' ' → logprob: -13.679924964904785
    6. '-ce' → logprob: -13.929924964904785
    7. '   ' → logprob: -14.304924964904785
    8. ' minus' → logprob: -15.304924964904785
    9. ' –' → logprob: -16.0549259185791
    10. '<|end|>' → logprob: -16.5549259185791

Token 129: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.014164448715746403
    2. ' left' → logprob: -4.264164447784424
    3. '	left' → logprob: -14.389164924621582
    4. ' ' → logprob: -15.639164924621582
    5. ' lef' → logprob: -16.389163970947266
    6. '[left' → logprob: -16.514163970947266
    7. '   ' → logprob: -17.264163970947266
    8. '(left' → logprob: -17.389163970947266
    9. 'right' → logprob: -17.389163970947266
    10. 'lef' → logprob: -18.264163970947266

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8398282527923584
    2. 'print' → logprob: -1.2148282527923584
    3. 'n' → logprob: -2.7148282527923584
    4. ')' → logprob: -2.7148282527923584
    5. '<|end|>' → logprob: -3.2148282527923584
    6. '  
' → logprob: -3.4648282527923584
    7. '#' → logprob: -4.7148284912109375
    8. 'result' → logprob: -4.9648284912109375
    9. '    
' → logprob: -4.9648284912109375
    10. ' 
' → logprob: -5.0898284912109375

Token 131: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39586877822875977
    2. 'result' → logprob: -2.0208687782287598
    3. 'n' → logprob: -2.6458687782287598
    4. '#' → logprob: -3.3958687782287598
    5. ')' → logprob: -3.6458687782287598
    6. 'for' → logprob: -4.52086877822876
    7. '\n' → logprob: -5.14586877822876
    8. '(' → logprob: -5.27086877822876
    9. 'max' → logprob: -5.52086877822876
    10. 'def' → logprob: -5.64586877822876

Token 132: 'at' (ID: 266)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11760544776916504
    2. '(result' → logprob: -2.492605447769165
    3. '=' → logprob: -3.992605447769165
    4. ' =' → logprob: -4.992605209350586
    5. '=result' → logprob: -6.992605209350586
    6. ' (' → logprob: -7.992605209350586
    7. '<|end|>' → logprob: -7.992605209350586
    8. ')' → logprob: -7.992605209350586
    9. '_' → logprob: -8.117605209350586
    10. ' ' → logprob: -8.617605209350586

Token 133: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1141463965177536
    2. '(result' → logprob: -2.2391464710235596
    3. '()' → logprob: -7.7391462326049805
    4. '=' → logprob: -8.23914623260498
    5. ' =' → logprob: -8.36414623260498
    6. '=result' → logprob: -8.98914623260498
    7. 'result' → logprob: -9.98914623260498
    8. ' (' → logprob: -10.11414623260498
    9. '<|end|>' → logprob: -10.11414623260498
    10. '(n' → logprob: -10.73914623260498

Token 134: ' extreme' (ID: 23700)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.0013284528395161033
    2. ' extreme' → logprob: -6.626328468322754
    3. 'Extreme' → logprob: -14.126328468322754
    4. ' ext' → logprob: -14.251328468322754
    5. 'extr' → logprob: -15.376328468322754
    6. '   ' → logprob: -15.876328468322754
    7. '(ext' → logprob: -16.001327514648438
    8. ' ' → logprob: -16.501327514648438
    9. '-ext' → logprob: -16.626327514648438
    10. ' extremo' → logprob: -16.626327514648438

Token 135: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.1637164789135568e-05
    2. 'diff' → logprob: -11.500011444091797
    3. '_' → logprob: -13.750011444091797
    4. '_d' → logprob: -16.375011444091797
    5. 'Diff' → logprob: -16.375011444091797
    6. '_DIFF' → logprob: -16.375011444091797
    7. '_difference' → logprob: -16.500011444091797
    8. '	diff' → logprob: -18.250011444091797
    9. '_result' → logprob: -19.500011444091797
    10. '_dist' → logprob: -19.750011444091797

Token 136: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.001985971350222826
    2. '(' → logprob: -6.251986026763916
    3. '(lst' → logprob: -10.126985549926758
    4. 'nums' → logprob: -11.876985549926758
    5. '(numbers' → logprob: -12.376985549926758
    6. '(num' → logprob: -12.501985549926758
    7. ' (' → logprob: -13.876985549926758
    8. '(
' → logprob: -14.626985549926758
    9. '(n' → logprob: -15.376985549926758
    10. '(lista' → logprob: -15.876985549926758

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ' )' → logprob: -12.000012397766113
    3. ')
' → logprob: -12.250012397766113
    4. '))' → logprob: -14.625012397766113
    5. ')

' → logprob: -15.250012397766113
    6. '()' → logprob: -16.000011444091797
    7. ')`' → logprob: -16.250011444091797
    8. ')+' → logprob: -16.375011444091797
    9. '())' → logprob: -16.875011444091797
    10. ')#' → logprob: -17.000011444091797

Token 138: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3663626305060461e-05
    2. ' print' → logprob: -12.00001335144043
    3. '
' → logprob: -13.00001335144043
    4. ')' → logprob: -14.00001335144043
    5. '```' → logprob: -14.12501335144043
    6. 'prin' → logprob: -14.50001335144043
    7. '#' → logprob: -14.75001335144043
    8. ' 
' → logprob: -14.87501335144043
    9. '  
' → logprob: -14.87501335144043
    10. '#print' → logprob: -15.25001335144043

Token 139: '("' (ID: 568)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.38690537214279175
    2. '(' → logprob: -1.1369054317474365
    3. '('' → logprob: -12.011905670166016
    4. ' (' → logprob: -12.011905670166016
    5. '(
' → logprob: -12.261905670166016
    6. '(f' → logprob: -12.386905670166016
    7. '(resultado' → logprob: -12.761905670166016
    8. '((' → logprob: -12.886905670166016
    9. '(results' → logprob: -13.261905670166016
    10. '("("' → logprob: -13.511905670166016

Token 140: 'Rés' (ID: 109747)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5559996366500854
    2. 'Rés' → logprob: -1.3059996366500854
    3. 'La' → logprob: -2.555999755859375
    4. 'Le' → logprob: -4.055999755859375
    5. 'É' → logprob: -4.180999755859375
    6. 'rés' → logprob: -4.180999755859375
    7. 'Diff' → logprob: -4.305999755859375
    8. 'Result' → logprob: -4.555999755859375
    9. 'L' → logprob: -5.930999755859375
    10. 'diff' → logprob: -6.680999755859375

Token 141: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -5.657694418914616e-05
    2. 'ult' → logprob: -10.000056266784668
    3. 'utat' → logprob: -11.500056266784668
    4. 'ulat' → logprob: -13.875056266784668
    5. 'lt' → logprob: -17.000057220458984
    6. '"' → logprob: -18.500057220458984
    7. 'é' → logprob: -18.875057220458984
    8. 'ut' → logprob: -19.000057220458984
    9. ':' → logprob: -19.625057220458984
    10. '\' → logprob: -19.750057220458984

Token 142: ':",' (ID: 25704)
  Prédit: ' :",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :",' → logprob: -0.2982765734195709
    2. ':",' → logprob: -1.4232765436172485
    3. ' :' → logprob: -4.673276424407959
    4. ':' → logprob: -4.923276424407959
    5. ' ' → logprob: -8.548276901245117
    6. ' =",' → logprob: -9.423276901245117
    7. ' :"' → logprob: -9.923276901245117
    8. '(",' → logprob: -11.423276901245117
    9. ' ' → logprob: -11.673276901245117
    10. '",' → logprob: -11.798276901245117

Token 143: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2030012160539627
    2. ' resultat' → logprob: -1.7030012607574463
    3. ' result' → logprob: -6.578001022338867
    4. '"' → logprob: -8.828001022338867
    5. ' résultat' → logprob: -10.328001022338867
    6. ',result' → logprob: -12.453001022338867
    7. '(result' → logprob: -13.078001022338867
    8. 'res' → logprob: -13.203001022338867
    9. '$result' → logprob: -13.578001022338867
    10. 'f' → logprob: -13.578001022338867

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ' )' → logprob: -11.62501049041748
    3. '))' → logprob: -14.25001049041748
    4. ')
' → logprob: -14.87501049041748
    5. ')`' → logprob: -15.25001049041748
    6. '`)' → logprob: -16.750009536743164
    7. ')**' → logprob: -17.625009536743164
    8. ')#' → logprob: -17.750009536743164
    9. '')' → logprob: -17.875009536743164
    10. '")' → logprob: -18.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 23.24%
Précision adaptée (1ère position): 23.94%
Précision (top 10): 56.34%
================================================================================
