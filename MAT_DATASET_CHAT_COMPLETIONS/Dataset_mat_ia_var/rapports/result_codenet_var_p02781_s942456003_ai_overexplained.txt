================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def run():
    # Lecture de l'entrée utilisateur : 
    # Prend le premier input() comme une chaîne représentant un nombre, 
    # convertit chaque caractère de la chaîne en entier, et stocke la liste d'entiers dans N.
    # Par exemple, si l'utilisateur saisit "123", alors N = [1, 2, 3].
    N = list(map(int, list(input()))
    # Lecture du deuxième input() : attend un entier K saisi par l'utilisateur,
    # qui indique le nombre maximum de chiffres non nuls autorisés.
    K = int(input())
    # Calcul du nombre de chiffres du nombre N (longueur de la liste N)
    Nlen = len(N)
    # Initialisation d'un tableau dynamique dp de 3 dimensions :
    # dp[position][est_plus_petit][compte_chiffres_non_nuls] = nombre de façons
    # position varie de 0 à Nlen inclus, donc il y a (Nlen+1) positions.
    # est_plus_petit est binaire (0 ou 1) et indique si le nombre construit jusqu'à présent
    # est déjà strictement inférieur à N (1) ou toujours égal à sa structure (0).
    # compte_chiffres_non_nuls varie de 0 à K+1 (on utilise K+2 cases pour être sûr de ne jamais dépasser K+1)
    dp = [[[0]*(K+2) for _ in range(2)] for n in range(Nlen+1)]
    # On initialise l'état de départ, où aucun chiffre n'a été choisi, le nombre formé est exactement égal à N, 
    # et on a 0 chiffre non nul utilisé : il n'y a qu'une seule manière de démarrer (penser au nombre vide)
    dp[0][0][0] = 1
    # Boucle sur chaque position du chiffre (pour chaque chiffre de N, de gauche à droite)
    for nlen in range(Nlen):
        # Récupère le chiffre de N à la position courante nlen
        dN = N[nlen]
        # On essaiera toutes les valeurs possibles du chiffre à cette position
        # c'est-à-dire de 0 à 9 inclus
        for d in range(10):
            # On regarde chacun des deux cas possibles pour le drapeau est_plus_petit (j = 0 ou 1)
            for j in range(2):
                # On considère le nombre de chiffres non nuls déjà utilisés k
                for k in range(K+2):
                    # flagj sera le nouveau état "plus petit" après avoir ajouté le chiffre d
                    # Si on était déjà plus petit (j=1), on le reste (donc flagj = 1 peu importe d)
                    # Si on était encore égal (j=0), on devient plus petit si le chiffre choisi d < dN
                    flagj = j or d < dN
                    # S'il n'est *pas* possible de continuer (toujours égal mais on veut mettre un chiffre d > dN),
                    # alors on ne peut pas former un nombre valides dans N - on saute ce cas avec continue
                    if (flagj == 0) and (d > dN):
                        continue
                    # flagk : nouveau nombre de chiffres non nuls après avoir ajouté d :
                    # On ajoute soit 1 si d != 0, soit 0 sinon, mais jamais plus de K+1 (on borne)
                    flagk = min(K+1, k+(d != 0))
                    # On augmente le nombre de façons d'arriver au nouvel état de 1 chiffre plus loin,
                    # en accumulant toutes les transitions possibles depuis l'état précédent
                    dp[nlen+1][flagj][flagk] += dp[nlen][j][k]
    # À la fin, on souhaite le nombre de façons d'obtenir un nombre de K chiffres non nuls
    # qui est au plus N. 
    # Il y a deux cas :
    # - Soit le nombre construit est exactement égal à N (dernier chiffre, flagj=0)
    # - Soit le nombre est strictement inférieur à N (dernier chiffre, flagj=1)
    # On additionne donc ces deux états à la dernière position (dp[-1][0][K] et dp[-1][1][K])
    print(dp[-1][0][K] + dp[-1][1][K])

# Point d'entrée du programme : exécute la fonction run() si ce fichier est le programme principal
if __name__ == '__main__':
    run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' run' (ID: 2461)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.537429690361023
    2. '\' → logprob: -1.037429690361023
    3. '```' → logprob: -3.1624298095703125
    4. ':' → logprob: -5.1624298095703125
    5. '   ' → logprob: -5.5374298095703125
    6. '    
' → logprob: -6.0374298095703125
    7. ''' → logprob: -7.0374298095703125
    8. ''\' → logprob: -7.1624298095703125
    9. ' 
' → logprob: -7.5374298095703125
    10. '`' → logprob: -7.5374298095703125

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3641078770160675
    2. 'pass' → logprob: -2.114107847213745
    3. '   ' → logprob: -2.364107847213745
    4. 'return' → logprob: -3.114107847213745
    5. '```' → logprob: -4.364108085632324
    6. 'result' → logprob: -4.364108085632324
    7. 'try' → logprob: -4.989108085632324
    8. 'if' → logprob: -5.739108085632324
    9. '\' → logprob: -6.489108085632324
    10. '\n' → logprob: -6.989108085632324

Token 5: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20456327497959137
    2. ' pass' → logprob: -2.5795633792877197
    3. '   ' → logprob: -3.0795633792877197
    4. '    ' → logprob: -3.2045633792877197
    5. 'pass' → logprob: -5.079563140869141
    6. '<|end|>' → logprob: -5.579563140869141
    7. '\' → logprob: -6.204563140869141
    8. ' return' → logprob: -6.329563140869141
    9. ''' → logprob: -6.954563140869141
    10. '  ' → logprob: -6.954563140869141

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3824862241744995
    2. '_' → logprob: -1.7574862241744995
    3. '(' → logprob: -3.007486343383789
    4. 's' → logprob: -3.132486343383789
    5. '   ' → logprob: -4.132486343383789
    6. ' (' → logprob: -4.507486343383789
    7. ' =' → logprob: -4.507486343383789
    8. '    ' → logprob: -6.257486343383789
    9. '()' → logprob: -6.757486343383789
    10. '  ' → logprob: -6.882486343383789

Token 7: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5775663256645203
    2. 'f' → logprob: -1.577566385269165
    3. 'l' → logprob: -2.327566385269165
    4. ' f' → logprob: -3.452566385269165
    5. ' fichier' → logprob: -3.577566385269165
    6. ' la' → logprob: -3.952566385269165
    7. '   ' → logprob: -4.202566146850586
    8. 's' → logprob: -4.577566146850586
    9. ' data' → logprob: -5.577566146850586
    10. 'data' → logprob: -5.702566146850586

Token 8: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47437921166419983
    2. 'e' → logprob: -1.0993791818618774
    3. ''' → logprob: -3.474379301071167
    4. 'é' → logprob: -6.224379062652588
    5. 'u' → logprob: -6.474379062652588
    6. 'f' → logprob: -6.474379062652588
    7. ''entrée' → logprob: -6.599379062652588
    8. '_' → logprob: -6.724379062652588
    9. 'i' → logprob: -6.724379062652588
    10. 's' → logprob: -6.974379062652588

Token 9: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9175887107849121
    2. '\' → logprob: -1.417588710784912
    3. ''' → logprob: -2.042588710784912
    4. '```' → logprob: -3.292588710784912
    5. '`' → logprob: -3.417588710784912
    6. ' ' → logprob: -3.542588710784912
    7. '       ' → logprob: -3.667588710784912
    8. 's' → logprob: -3.917588710784912
    9. '_' → logprob: -3.917588710784912
    10. '(' → logprob: -4.417588710784912

Token 10: ' :' (ID: 712)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.38101255893707275
    2. '\' → logprob: -1.8810125589370728
    3. '   ' → logprob: -2.256012439727783
    4. ''' → logprob: -4.506012439727783
    5. '```' → logprob: -4.631012439727783
    6. ''\' → logprob: -4.756012439727783
    7. '`' → logprob: -5.131012439727783
    8. '    
' → logprob: -5.381012439727783
    9. '\x' → logprob: -5.756012439727783
    10. ' ' → logprob: -6.006012439727783

Token 11: ' 
' (ID: 793)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.349635124206543
    2. ' user' → logprob: -1.599635124206543
    3. ' ' → logprob: -1.724635124206543
    4. '   ' → logprob: -2.474635124206543
    5. 'input' → logprob: -2.474635124206543
    6. ' input' → logprob: -3.224635124206543
    7. '`' → logprob: -3.349635124206543
    8. ''' → logprob: -3.474635124206543
    9. 'data' → logprob: -4.599635124206543
    10. ' )' → logprob: -4.974635124206543

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8665466904640198
    2. 'user' → logprob: -1.116546630859375
    3. ' user' → logprob: -1.616546630859375
    4. ' ' → logprob: -4.116546630859375
    5. 'input' → logprob: -4.241546630859375
    6. ' input' → logprob: -4.991546630859375
    7. 'pass' → logprob: -5.616546630859375
    8. 'n' → logprob: -6.116546630859375
    9. ' pass' → logprob: -6.741546630859375
    10. 'data' → logprob: -6.741546630859375

Token 13: ' #' (ID: 1069)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.14900700747966766
    2. '   ' → logprob: -2.1490070819854736
    3. 'input' → logprob: -4.5240068435668945
    4. ' user' → logprob: -5.7740068435668945
    5. 'data' → logprob: -6.3990068435668945
    6. 'value' → logprob: -6.7740068435668945
    7. 'text' → logprob: -7.0240068435668945
    8. 'name' → logprob: -7.0240068435668945
    9. 'n' → logprob: -7.1490068435668945
    10. 'pass' → logprob: -7.8990068435668945

Token 14: ' Pr' (ID: 2284)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.26617148518562317
    2. 'input' → logprob: -2.516171455383301
    3. ' user' → logprob: -2.766171455383301
    4. '   ' → logprob: -3.891171455383301
    5. 'name' → logprob: -3.891171455383301
    6. 'username' → logprob: -5.266171455383301
    7. ' input' → logprob: -5.266171455383301
    8. 'pass' → logprob: -5.391171455383301
    9. 'text' → logprob: -5.516171455383301
    10. 'nom' → logprob: -5.641171455383301

Token 15: 'end' (ID: 419)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3488211929798126
    2. 'e' → logprob: -2.2238211631774902
    3. 'endre' → logprob: -2.5988211631774902
    4. 'int' → logprob: -3.0988211631774902
    5. 'i' → logprob: -3.7238211631774902
    6. 'en' → logprob: -4.84882116317749
    7. 'om' → logprob: -5.34882116317749
    8. 'o' → logprob: -5.47382116317749
    9. 'éf' → logprob: -5.72382116317749
    10. 'év' → logprob: -5.84882116317749

Token 16: ' le' (ID: 505)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.225596308708191
    2. ' ' → logprob: -1.475596308708191
    3. ' une' → logprob: -1.475596308708191
    4. ' l' → logprob: -2.8505964279174805
    5. ' en' → logprob: -2.9755964279174805
    6. '   ' → logprob: -3.4755964279174805
    7. 'l' → logprob: -3.6005964279174805
    8. 'une' → logprob: -4.1005964279174805
    9. ' user' → logprob: -4.2255964279174805
    10. 'input' → logprob: -4.3505964279174805

Token 17: ' premier' (ID: 15506)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5653557181358337
    2. 's' → logprob: -2.0653557777404785
    3. 'texte' → logprob: -2.5653557777404785
    4. 'input' → logprob: -2.6903557777404785
    5. ' ' → logprob: -3.4403557777404785
    6. 'n' → logprob: -3.9403557777404785
    7. ' texte' → logprob: -3.9403557777404785
    8. '_' → logprob: -4.0653557777404785
    9. ' mot' → logprob: -4.9403557777404785
    10. ' nom' → logprob: -4.9403557777404785

Token 18: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23339664936065674
    2. ' mot' → logprob: -2.983396530151367
    3. '_' → logprob: -3.108396530151367
    4. 'mot' → logprob: -3.608396530151367
    5. 'car' → logprob: -3.733396530151367
    6. 'token' → logprob: -4.483396530151367
    7. ' token' → logprob: -4.483396530151367
    8. ' argument' → logprob: -4.733396530151367
    9. 'argument' → logprob: -4.733396530151367
    10. '  ' → logprob: -6.108396530151367

Token 19: '()' (ID: 416)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6297544836997986
    2. '(' → logprob: -1.0047545433044434
    3. ' =' → logprob: -3.2547545433044434
    4. ' ' → logprob: -3.8797545433044434
    5. '()' → logprob: -4.254754543304443
    6. 's' → logprob: -5.504754543304443
    7. ' (' → logprob: -5.754754543304443
    8. 'user' → logprob: -5.754754543304443
    9. ')' → logprob: -6.004754543304443
    10. '   ' → logprob: -6.004754543304443

Token 20: ' comme' (ID: 7971)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0469139888882637
    2. '()' → logprob: -3.1719141006469727
    3. ')' → logprob: -6.671914100646973
    4. '(
' → logprob: -6.921914100646973
    5. ' ' → logprob: -7.296914100646973
    6. ' (' → logprob: -7.671914100646973
    7. ',' → logprob: -9.421914100646973
    8. '   ' → logprob: -9.546914100646973
    9. '.' → logprob: -10.171914100646973
    10. 's' → logprob: -10.546914100646973

Token 21: ' une' (ID: 2463)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.772339940071106
    2. ' le' → logprob: -1.772339940071106
    3. 'la' → logprob: -2.0223398208618164
    4. 'l' → logprob: -2.7723398208618164
    5. 'une' → logprob: -3.2723398208618164
    6. ' une' → logprob: -3.3973398208618164
    7. 'nom' → logprob: -3.5223398208618164
    8. ' la' → logprob: -3.7723398208618164
    9. 'chaine' → logprob: -4.772339820861816
    10. ' nom' → logprob: -5.647339820861816

Token 22: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6417867541313171
    2. 'chaine' → logprob: -1.516786813735962
    3. ' chaine' → logprob: -2.891786813735962
    4. ' phrase' → logprob: -3.266786813735962
    5. 'str' → logprob: -3.641786813735962
    6. 'phrase' → logprob: -4.266786575317383
    7. 'cha' → logprob: -4.391786575317383
    8. '   ' → logprob: -4.391786575317383
    9. 'string' → logprob: -4.516786575317383
    10. ' ' → logprob: -4.641786575317383

Token 23: ' représentant' (ID: 136122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6838603019714355
    2. '   ' → logprob: -1.6838603019714355
    3. '()' → logprob: -2.3088603019714355
    4. ' ' → logprob: -2.3088603019714355
    5. '(' → logprob: -2.5588603019714355
    6. '\' → logprob: -2.6838603019714355
    7. 's' → logprob: -2.8088603019714355
    8. ',' → logprob: -2.9338603019714355
    9. ' =' → logprob: -3.3088603019714355
    10. 'def' → logprob: -3.9338603019714355

Token 24: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0473318099975586
    2. ' une' → logprob: -1.6723318099975586
    3. 'une' → logprob: -1.7973318099975586
    4. ' le' → logprob: -2.4223318099975586
    5. ' un' → logprob: -2.7973318099975586
    6. 'un' → logprob: -3.0473318099975586
    7. 'l' → logprob: -3.0473318099975586
    8. 'la' → logprob: -3.5473318099975586
    9. ' la' → logprob: -4.547331809997559
    10. ' l' → logprob: -4.797331809997559

Token 25: ' nombre' (ID: 9733)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.79707270860672
    2. ' entier' → logprob: -1.9220726490020752
    3. 'nombre' → logprob: -2.047072649002075
    4. ' nombre' → logprob: -2.172072649002075
    5. 'e' → logprob: -3.422072649002075
    6. 'expression' → logprob: -3.672072649002075
    7. ' code' → logprob: -4.172072887420654
    8. ' JSON' → logprob: -4.672072887420654
    9. ' ent' → logprob: -4.672072887420654
    10. 'code' → logprob: -5.047072887420654

Token 26: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6953189373016357
    2. '(' → logprob: -1.8203189373016357
    3. '_' → logprob: -2.0703189373016357
    4. ')' → logprob: -2.5703189373016357
    5. '\' → logprob: -2.6953189373016357
    6. ' ' → logprob: -2.8203189373016357
    7. ',' → logprob: -3.1953189373016357
    8. 'n' → logprob: -3.3203189373016357
    9. '(
' → logprob: -3.3203189373016357
    10. ' =' → logprob: -3.5703189373016357

Token 27: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0769339799880981
    2. ' et' → logprob: -1.8269339799880981
    3. ')' → logprob: -2.0769338607788086
    4. ' puis' → logprob: -2.2019338607788086
    5. ' =' → logprob: -3.2019338607788086
    6. ' ' → logprob: -3.4519338607788086
    7. 's' → logprob: -3.5769338607788086
    8. ',' → logprob: -3.5769338607788086
    9. ' )' → logprob: -3.7019338607788086
    10. '    ' → logprob: -4.076933860778809

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.866267204284668
    2. ' et' → logprob: -1.366267204284668
    3. ' puis' → logprob: -1.991267204284668
    4. ')' → logprob: -2.866267204284668
    5. ',' → logprob: -3.116267204284668
    6. ' and' → logprob: -3.616267204284668
    7. '    ' → logprob: -5.116267204284668
    8. ' ,' → logprob: -5.366267204284668
    9. ' ' → logprob: -5.616267204284668
    10. 'et' → logprob: -5.616267204284668

Token 29: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.669746458530426
    2. ' puis' → logprob: -1.1697463989257812
    3. ' et' → logprob: -1.9197463989257812
    4. 'et' → logprob: -4.044746398925781
    5. ' la' → logprob: -5.294746398925781
    6. ' and' → logprob: -6.544746398925781
    7. '#' (adapté à ' #') → logprob: -7.419746398925781
    8. 's' → logprob: -7.544746398925781
    9. ',' → logprob: -7.544746398925781
    10. 'p' → logprob: -7.794746398925781

Token 30: ' convert' (ID: 8452)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.5052979588508606
    2. '   ' → logprob: -2.630297899246216
    3. ' convert' → logprob: -2.880297899246216
    4. ' le' → logprob: -3.255297899246216
    5. ' et' → logprob: -3.380297899246216
    6. 'p' → logprob: -3.630297899246216
    7. 'convert' → logprob: -3.630297899246216
    8. 'et' → logprob: -4.130298137664795
    9. ' convertir' → logprob: -4.380298137664795
    10. 'nombre' → logprob: -4.755298137664795

Token 31: 'it' (ID: 278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2946151793003082
    2. 'it' → logprob: -1.6696151494979858
    3. 'ie' → logprob: -3.5446152687072754
    4. ' it' → logprob: -3.6696152687072754
    5. '_' → logprob: -5.919615268707275
    6. '```' → logprob: -6.044615268707275
    7. 'issant' → logprob: -6.294615268707275
    8. '   ' → logprob: -6.794615268707275
    9. 'iert' → logprob: -6.919615268707275
    10. 'ir' → logprob: -7.169615268707275

Token 32: ' chaque' (ID: 21194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31872081756591797
    2. ' en' → logprob: -1.568720817565918
    3. '_' → logprob: -4.443720817565918
    4. ' ' → logprob: -4.443720817565918
    5. 'la' → logprob: -4.693720817565918
    6. '(' → logprob: -4.818720817565918
    7. '```' → logprob: -5.443720817565918
    8. 'l' → logprob: -5.693720817565918
    9. 'le' → logprob: -5.818720817565918
    10. '   ' → logprob: -6.068720817565918

Token 33: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5336056351661682
    2. ' caractère' → logprob: -1.0336055755615234
    3. ' caract' → logprob: -3.1586055755615234
    4. 'car' → logprob: -5.533605575561523
    5. '_' → logprob: -6.158605575561523
    6. ' )' → logprob: -6.283605575561523
    7. ' espace' → logprob: -6.783605575561523
    8. ' caractères' → logprob: -7.158605575561523
    9. '  ' → logprob: -7.533605575561523
    10. ')' → logprob: -7.658605575561523

Token 34: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0623568557202816
    2. '(' → logprob: -3.687356948852539
    3. ')' → logprob: -4.562356948852539
    4. '   ' → logprob: -4.937356948852539
    5. 's' → logprob: -5.812356948852539
    6. '```' → logprob: -6.437356948852539
    7. '_' → logprob: -6.562356948852539
    8. ' ' → logprob: -6.687356948852539
    9. ' )' → logprob: -7.062356948852539
    10. ' (' → logprob: -7.062356948852539

Token 35: ' la' (ID: 557)
  Prédit: ' cette'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cette' → logprob: -0.2661050856113434
    2. ' la' → logprob: -1.516105055809021
    3. 'la' → logprob: -5.6411051750183105
    4. ' ' → logprob: -6.0161051750183105
    5. ' l' → logprob: -6.6411051750183105
    6. ' ce' → logprob: -6.6411051750183105
    7. ' input' → logprob: -6.7661051750183105
    8. 'l' → logprob: -7.1411051750183105
    9. 'chaine' → logprob: -7.1411051750183105
    10. ' this' → logprob: -7.5161051750183105

Token 36: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.14087828993797302
    2. 'chaine' → logprob: -2.390878200531006
    3. 'cha' → logprob: -4.140878200531006
    4. ' chaine' → logprob: -4.765878200531006
    5. 'entrée' → logprob: -5.515878200531006
    6. 's' → logprob: -5.640878200531006
    7. ' string' → logprob: -6.140878200531006
    8. 'string' → logprob: -6.515878200531006
    9. ' input' → logprob: -6.765878200531006
    10. ' ' → logprob: -6.765878200531006

Token 37: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.10356099903583527
    2. ')' → logprob: -3.4785609245300293
    3. ' into' → logprob: -4.103560924530029
    4. ',' → logprob: -4.353560924530029
    5. 'en' → logprob: -4.728560924530029
    6. '   ' → logprob: -5.478560924530029
    7. 'def' → logprob: -5.603560924530029
    8. ' in' → logprob: -5.728560924530029
    9. 's' → logprob: -5.853560924530029
    10. ' ' → logprob: -6.478560924530029

Token 38: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.02645936794579029
    2. ' int' → logprob: -4.401459217071533
    3. 'un' → logprob: -5.401459217071533
    4. ' une' → logprob: -5.776459217071533
    5. 'int' → logprob: -5.901459217071533
    6. ' ' → logprob: -6.276459217071533
    7. ' an' → logprob: -8.151459693908691
    8. ' son' → logprob: -8.276459693908691
    9. ' entier' → logprob: -8.401459693908691
    10. ' des' → logprob: -8.776459693908691

Token 39: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7937127351760864
    2. ',' → logprob: -1.1687127351760864
    3. '(' → logprob: -2.418712615966797
    4. ')' → logprob: -2.793712615966797
    5. 's' → logprob: -3.543712615966797
    6. '   ' → logprob: -4.418712615966797
    7. ' ' → logprob: -4.418712615966797
    8. '_' → logprob: -4.793712615966797
    9. ' (' → logprob: -5.668712615966797
    10. ']' → logprob: -5.793712615966797

Token 40: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7613785862922668
    2. ' ' → logprob: -1.511378526687622
    3. ' [' → logprob: -2.011378526687622
    4. '   ' → logprob: -3.386378526687622
    5. '    ' → logprob: -3.511378526687622
    6. ',' → logprob: -3.636378526687622
    7. ' ]' → logprob: -3.886378526687622
    8. ' ,' → logprob: -4.136378765106201
    9. ' )' → logprob: -4.386378765106201
    10. ')' → logprob: -4.886378765106201

Token 41: ' stock' (ID: 6546)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.3565678000450134
    2. ' les' → logprob: -1.7315678596496582
    3. ' stock' → logprob: -2.231567859649658
    4. 'stock' → logprob: -5.731567859649658
    5. ' forme' → logprob: -6.356567859649658
    6. ' form' → logprob: -6.481567859649658
    7. ' retourne' → logprob: -6.606567859649658
    8. ' ajoute' → logprob: -7.106567859649658
    9. ' construit' → logprob: -7.106567859649658
    10. ' met' → logprob: -7.481567859649658

Token 42: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.787507714354433e-05
    2. 'er' → logprob: -10.62504768371582
    3. 'é' → logprob: -11.75004768371582
    4. '	e' → logprob: -12.37504768371582
    5. 'age' → logprob: -12.37504768371582
    6. 'ent' → logprob: -12.75004768371582
    7. ' e' → logprob: -13.12504768371582
    8. '   ' → logprob: -14.37504768371582
    9. 'ant' → logprob: -14.62504768371582
    10. ')e' → logprob: -15.75004768371582

Token 43: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8794313669204712
    2. '_' → logprob: -1.1294313669204712
    3. ' ' → logprob: -1.5044313669204712
    4. ' _' → logprob: -5.629431247711182
    5. ' les' → logprob: -5.754431247711182
    6. 'es' → logprob: -5.879431247711182
    7. ' dans' → logprob: -5.879431247711182
    8. ' them' → logprob: -6.004431247711182
    9. ' ' → logprob: -6.004431247711182
    10. '[' → logprob: -6.379431247711182

Token 44: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9074609875679016
    2. ' ' → logprob: -1.0324609279632568
    3. ' liste' → logprob: -2.532460927963257
    4. ' result' → logprob: -2.657460927963257
    5. 'result' → logprob: -3.907460927963257
    6. ' résultat' → logprob: -4.157461166381836
    7. ' list' → logprob: -4.407461166381836
    8. ' s' → logprob: -4.532461166381836
    9. ' [' → logprob: -5.782461166381836
    10. '[' → logprob: -5.907461166381836

Token 45: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4856811463832855
    2. '[' → logprob: -1.610681176185608
    3. '_' → logprob: -2.1106810569763184
    4. ' ' → logprob: -5.235681056976318
    5. 's' → logprob: -5.360681056976318
    6. ',' → logprob: -5.485681056976318
    7. '[]' → logprob: -5.485681056976318
    8. ' des' → logprob: -5.610681056976318
    9. 'des' → logprob: -5.610681056976318
    10. 'result' → logprob: -5.610681056976318

Token 46: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03214476630091667
    2. ''ent' → logprob: -4.157144546508789
    3. ' e' → logprob: -5.282144546508789
    4. 'es' → logprob: -5.907144546508789
    5. ''' → logprob: -6.032144546508789
    6. 'i' → logprob: -6.407144546508789
    7. ' ent' → logprob: -6.532144546508789
    8. 's' → logprob: -7.782144546508789
    9. ''e' → logprob: -8.032144546508789
    10. 'ent' → logprob: -8.157144546508789

Token 47: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0034728513564914465
    2. 'i' → logprob: -6.003472805023193
    3. 'ier' → logprob: -7.503472805023193
    4. 'ières' → logprob: -8.628473281860352
    5. '```' → logprob: -8.878473281860352
    6. '   ' → logprob: -9.628473281860352
    7. 'e' → logprob: -11.378473281860352
    8. 'ires' → logprob: -11.503473281860352
    9. '       ' → logprob: -12.378473281860352
    10. 'ière' → logprob: -12.503473281860352

Token 48: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7390224933624268
    2. '   ' → logprob: -0.9890224933624268
    3. '[
' → logprob: -3.2390224933624268
    4. ' =' → logprob: -3.8640224933624268
    5. '(' → logprob: -3.8640224933624268
    6. 's' → logprob: -4.239022254943848
    7. ' ' → logprob: -4.364022254943848
    8. ',' → logprob: -4.864022254943848
    9. '_' → logprob: -5.239022254943848
    10. ']' → logprob: -5.739022254943848

Token 49: ' N' (ID: 478)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.38299691677093506
    2. ' lst' → logprob: -3.0079970359802246
    3. ' l' → logprob: -3.2579970359802246
    4. ' data' → logprob: -3.3829970359802246
    5. ' digits' → logprob: -3.3829970359802246
    6. ' la' → logprob: -3.6329970359802246
    7. ' n' → logprob: -3.6329970359802246
    8. ' nums' → logprob: -3.7579970359802246
    9. 'numbers' → logprob: -4.257997035980225
    10. ' ' → logprob: -4.632997035980225

Token 50: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8636528849601746
    2. '   ' → logprob: -1.2386529445648193
    3. 'N' → logprob: -2.3636529445648193
    4. '[' → logprob: -2.6136529445648193
    5. ' ' → logprob: -3.3636529445648193
    6. '    
' → logprob: -4.11365270614624
    7. ' 
' → logprob: -4.23865270614624
    8. ' N' → logprob: -4.86365270614624
    9. ' =' → logprob: -4.86365270614624
    10. '_' → logprob: -4.98865270614624

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6038200855255127
    2. '[' → logprob: -1.4788200855255127
    3. ' ' → logprob: -2.3538200855255127
    4. 'N' → logprob: -2.4788200855255127
    5. 'n' → logprob: -4.478819847106934
    6. ' 
' → logprob: -4.728819847106934
    7. ' N' → logprob: -5.228819847106934
    8. '    
' → logprob: -5.353819847106934
    9. '[
' → logprob: -5.478819847106934
    10. '  ' → logprob: -6.728819847106934

Token 52: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08158820867538452
    2. 'N' → logprob: -3.7065882682800293
    3. '[' → logprob: -4.331588268280029
    4. '\n' → logprob: -4.956588268280029
    5. '
' → logprob: -5.081588268280029
    6. '    
' → logprob: -5.081588268280029
    7. 'n' → logprob: -5.206588268280029
    8. ' 
' → logprob: -5.456588268280029
    9. ' ' → logprob: -5.581588268280029
    10. ' N' → logprob: -6.081588268280029

Token 53: ' Par' (ID: 3371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027513783425092697
    2. 'N' → logprob: -4.1525139808654785
    3. ' ' → logprob: -5.7775139808654785
    4. 'n' → logprob: -6.0275139808654785
    5. '    
' → logprob: -6.2775139808654785
    6. ' N' → logprob: -6.4025139808654785
    7. '[' → logprob: -7.4025139808654785
    8. '  ' → logprob: -8.15251350402832
    9. ' 
' → logprob: -8.27751350402832
    10. '\n' → logprob: -8.52751350402832

Token 54: ' exemple' (ID: 26320)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.0206520557403564
    2. ' ' → logprob: -1.7706520557403564
    3. '   ' → logprob: -1.7706520557403564
    4. 'N' → logprob: -2.0206520557403564
    5. ':' → logprob: -3.0206520557403564
    6. ' =' → logprob: -3.2706520557403564
    7. '=' → logprob: -4.020651817321777
    8. 'u' → logprob: -4.020651817321777
    9. 'for' → logprob: -4.895651817321777
    10. ' for' → logprob: -5.145651817321777

Token 55: ',' (ID: 11)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5220731496810913
    2. '[' → logprob: -2.272073268890381
    3. ' ' → logprob: -2.397073268890381
    4. '   ' → logprob: -2.647073268890381
    5. ':' → logprob: -3.397073268890381
    6. 'N' → logprob: -3.647073268890381
    7. ',' → logprob: -3.772073268890381
    8. ' :' → logprob: -4.272073268890381
    9. ' [' → logprob: -4.397073268890381
    10. 's' → logprob: -5.522073268890381

Token 56: ' si' (ID: 1784)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.06225985661149025
    2. ' [' → logprob: -3.6872599124908447
    3. 'N' → logprob: -4.312259674072266
    4. '   ' → logprob: -5.062259674072266
    5. ' n' → logprob: -5.187259674072266
    6. '[' → logprob: -5.187259674072266
    7. ' ' → logprob: -6.312259674072266
    8. 'n' → logprob: -7.062259674072266
    9. ' if' → logprob: -7.812259674072266
    10. ' input' → logprob: -8.437259674072266

Token 57: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02612193301320076
    2. ' input' → logprob: -5.151122093200684
    3. 'l' → logprob: -5.401122093200684
    4. ' N' → logprob: -5.526122093200684
    5. ' user' → logprob: -5.651122093200684
    6. ' on' → logprob: -6.026122093200684
    7. ' ' → logprob: -6.276122093200684
    8. ' the' → logprob: -7.276122093200684
    9. ' ' → logprob: -7.401122093200684
    10. ' n' → logprob: -7.526122093200684

Token 58: ''utilisateur' (ID: 140803)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40765905380249023
    2. ' N' → logprob: -2.5326590538024902
    3. 'N' → logprob: -3.0326590538024902
    4. '  ' → logprob: -3.1576590538024902
    5. ' i' → logprob: -3.4076590538024902
    6. '   ' → logprob: -3.9076590538024902
    7. 'u' → logprob: -4.03265905380249
    8. 's' → logprob: -4.15765905380249
    9. ' '' → logprob: -4.28265905380249
    10. ' )' → logprob: -4.65765905380249

Token 59: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8204140067100525
    2. ' sais' → logprob: -1.5704140663146973
    3. ' s' → logprob: -2.6954140663146973
    4. ' ' → logprob: -3.3204140663146973
    5. '   ' → logprob: -3.4454140663146973
    6. '_' → logprob: -3.8204140663146973
    7. ' entre' → logprob: -3.8204140663146973
    8. ' =' → logprob: -3.9454140663146973
    9. ' input' → logprob: -4.070414066314697
    10. '_input' → logprob: -4.195414066314697

Token 60: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3138226270675659
    2. 't' → logprob: -1.688822627067566
    3. 'i' → logprob: -2.5638227462768555
    4. 'ît' → logprob: -6.1888227462768555
    5. 'ı' → logprob: -7.0638227462768555
    6. '\' → logprob: -7.1888227462768555
    7. 'í' → logprob: -7.3138227462768555
    8. '   ' → logprob: -7.3138227462768555
    9. 'î' → logprob: -7.9388227462768555
    10. '```' → logprob: -8.188822746276855

Token 61: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9998578429222107
    2. ' ' → logprob: -1.1248579025268555
    3. ' "' → logprob: -2.1248579025268555
    4. ''' → logprob: -2.2498579025268555
    5. '1' → logprob: -3.2498579025268555
    6. '"' → logprob: -3.3748579025268555
    7. '2' → logprob: -6.4998579025268555
    8. '3' → logprob: -6.6248579025268555
    9. '9' → logprob: -6.8748579025268555
    10. '[' → logprob: -6.8748579025268555

Token 62: '123' (ID: 7633)
  Prédit: '123'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '123' → logprob: -0.5660219192504883
    2. '1' → logprob: -1.3160219192504883
    3. '5' → logprob: -2.4410219192504883
    4. '"' → logprob: -3.9410219192504883
    5. '4' → logprob: -4.066021919250488
    6. '3' → logprob: -4.191021919250488
    7. '2' → logprob: -4.691021919250488
    8. '7' → logprob: -5.316021919250488
    9. '543' → logprob: -6.566021919250488
    10. '9' → logprob: -7.066021919250488

Token 63: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5679697394371033
    2. '"' → logprob: -1.567969799041748
    3. '4' → logprob: -1.567969799041748
    4. ')' → logprob: -4.692969799041748
    5. '456' → logprob: -5.692969799041748
    6. '"""' → logprob: -7.192969799041748
    7. '"):' → logprob: -7.317969799041748
    8. '":' → logprob: -7.442969799041748
    9. '");' → logprob: -7.817969799041748
    10. '",' → logprob: -8.31796932220459

Token 64: ' alors' (ID: 17971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6696312427520752
    2. '    ' → logprob: -1.6696312427520752
    3. ' N' → logprob: -2.044631242752075
    4. '   ' → logprob: -2.294631242752075
    5. '[' → logprob: -3.794631242752075
    6. ' ' → logprob: -4.294631004333496
    7. '  ' → logprob: -4.794631004333496
    8. ' ‌' → logprob: -5.294631004333496
    9. '    
' → logprob: -5.544631004333496
    10. ' 
' → logprob: -5.669631004333496

Token 65: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.05755804106593132
    2. 'N' → logprob: -3.057558059692383
    3. '[' → logprob: -5.307558059692383
    4. ' [' → logprob: -6.182558059692383
    5. ' ' → logprob: -6.932558059692383
    6. ' ' → logprob: -8.307558059692383
    7. '   ' → logprob: -8.807558059692383
    8. ' ['' → logprob: -9.057558059692383
    9. ' `' → logprob: -9.307558059692383
    10. '    ' → logprob: -9.307558059692383

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005594206973910332
    2. '=' → logprob: -5.255594253540039
    3. 's' → logprob: -8.630594253540039
    4. '[' → logprob: -10.380594253540039
    5. ' ' → logprob: -10.505594253540039
    6. '=[]' → logprob: -10.505594253540039
    7. ' =[' → logprob: -10.630594253540039
    8. ',' → logprob: -11.380594253540039
    9. '.append' → logprob: -11.380594253540039
    10. '_' → logprob: -11.755594253540039

Token 67: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08895844221115112
    2. '[' → logprob: -2.463958501815796
    3. ' ' → logprob: -11.838958740234375
    4. ' ' → logprob: -12.338958740234375
    5. '[int' → logprob: -12.963958740234375
    6. ' []' → logprob: -13.463958740234375
    7. ' list' → logprob: -14.088958740234375
    8. 'list' → logprob: -14.713958740234375
    9. ' ['' → logprob: -14.963958740234375
    10. '[list' → logprob: -15.338958740234375

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010391215328127146
    2. ' ' → logprob: -6.876039028167725
    3. 'int' → logprob: -12.501039505004883
    4. '  ' → logprob: -14.626039505004883
    5. '   ' → logprob: -14.876039505004883
    6. '```' → logprob: -15.376039505004883
    7. ' int' → logprob: -15.626039505004883
    8. ' ]' → logprob: -15.626039505004883
    9. '

' → logprob: -15.876039505004883
    10. ']' → logprob: -15.938539505004883

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5570885807392187e-05
    2. ' ,' → logprob: -11.500015258789062
    3. ',
' → logprob: -12.250015258789062
    4. ',

' → logprob: -15.000015258789062
    5. ']' → logprob: -16.750015258789062
    6. '0' → logprob: -16.750015258789062
    7. '<|end|>' → logprob: -16.875015258789062
    8. '‌,' → logprob: -17.000015258789062
    9. ')' → logprob: -17.375015258789062
    10. '2' → logprob: -17.500015258789062

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08895037323236465
    2. '2' → logprob: -2.4639503955841064
    3. '9' → logprob: -12.338950157165527
    4. ' ,' → logprob: -13.338950157165527
    5. ',' → logprob: -13.463950157165527
    6. '```' → logprob: -13.838950157165527
    7. '  ' → logprob: -14.526450157165527
    8. '1' → logprob: -15.088950157165527
    9. ' ' → logprob: -15.463950157165527
    10. '3' → logprob: -15.463950157165527

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040793512016534805
    2. ' ' → logprob: -5.504079341888428
    3. '```' → logprob: -14.379079818725586
    4. ',' → logprob: -16.629079818725586
    5. '２' → logprob: -17.254079818725586
    6. '  ' → logprob: -17.254079818725586
    7. '1' → logprob: -17.691579818725586
    8. '۲' → logprob: -17.754079818725586
    9. '   ' → logprob: -17.816579818725586
    10. '9' → logprob: -17.879079818725586

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ' ,' → logprob: -11.750011444091797
    3. ']' → logprob: -13.125011444091797
    4. '3' → logprob: -13.375011444091797
    5. '4' → logprob: -15.625011444091797
    6. ',
' → logprob: -16.000011444091797
    7. ',

' → logprob: -16.000011444091797
    8. '1' → logprob: -17.500011444091797
    9. '0' → logprob: -17.750011444091797
    10. ' ' → logprob: -17.875011444091797

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326009631156921
    2. '3' → logprob: -0.7576009631156921
    3. ',' → logprob: -14.757600784301758
    4. ' ' → logprob: -14.757600784301758
    5. ' ]' → logprob: -14.882600784301758
    6. ' ,' → logprob: -15.132600784301758
    7. ']' → logprob: -16.257600784301758
    8. '```' → logprob: -16.320100784301758
    9. ' '' → logprob: -16.945100784301758
    10. ''s' → logprob: -17.132600784301758

Token 74: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0024763736873865128
    2. ' ' → logprob: -6.002476215362549
    3. ',' → logprob: -14.502476692199707
    4. ' ,' → logprob: -16.87747573852539
    5. ']' → logprob: -17.31497573852539
    6. '۳' → logprob: -17.68997573852539
    7. '３' → logprob: -17.81497573852539
    8. '```' → logprob: -18.18997573852539
    9. '  ' → logprob: -18.25247573852539
    10. ''' → logprob: -18.31497573852539

Token 75: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -4.961759259458631e-06
    2. '']' → logprob: -13.125004768371582
    3. ' ]' → logprob: -13.625004768371582
    4. ',' → logprob: -14.875004768371582
    5. '[' → logprob: -14.875004768371582
    6. ')' → logprob: -15.000004768371582
    7. ']
' → logprob: -15.500004768371582
    8. '"]' → logprob: -16.1250057220459
    9. '}' → logprob: -16.2500057220459
    10. ']

' → logprob: -16.7500057220459

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07801788300275803
    2. '    
' → logprob: -3.3280179500579834
    3. '
' → logprob: -4.203017711639404
    4. 'n' → logprob: -4.828017711639404
    5. '\n' → logprob: -5.328017711639404
    6. ' 
' → logprob: -5.953017711639404
    7. '[' → logprob: -6.203017711639404
    8. '   
' → logprob: -6.578017711639404
    9. 'N' → logprob: -6.703017711639404
    10. '```' → logprob: -6.703017711639404

Token 77: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19828186929225922
    2. '\n' → logprob: -2.948281764984131
    3. '    
' → logprob: -3.323281764984131
    4. 'n' → logprob: -3.573281764984131
    5. '
' → logprob: -3.948281764984131
    6. ' 
' → logprob: -4.073281764984131
    7. ' ' → logprob: -5.073281764984131
    8. '[' → logprob: -5.198281764984131
    9. '  
' → logprob: -5.573281764984131
    10. '   
' → logprob: -5.698281764984131

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043094877153635025
    2. '=' → logprob: -3.1680948734283447
    3. '=[]' → logprob: -10.168094635009766
    4. '.' → logprob: -11.043094635009766
    5. '[' → logprob: -11.293094635009766
    6. '[:]' → logprob: -11.293094635009766
    7. ' =[' → logprob: -11.918094635009766
    8. 's' → logprob: -13.168094635009766
    9. '.append' → logprob: -13.168094635009766
    10. '=[' → logprob: -13.793094635009766

Token 79: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3457527160644531
    2. 'list' → logprob: -1.3457527160644531
    3. ' [' → logprob: -4.095752716064453
    4. '[list' → logprob: -4.345752716064453
    5. '[' → logprob: -6.720752716064453
    6. '[int' → logprob: -7.220752716064453
    7. '[input' → logprob: -7.845752716064453
    8. '[List' → logprob: -11.720752716064453
    9. '[len' → logprob: -12.095752716064453
    10. '[l' → logprob: -13.095752716064453

Token 80: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023774817236699164
    2. '(input' → logprob: -8.875237464904785
    3. '(int' → logprob: -9.625237464904785
    4. '()' → logprob: -12.250237464904785
    5. '(range' → logprob: -12.375237464904785
    6. '(map' → logprob: -12.375237464904785
    7. '(
' → logprob: -12.375237464904785
    8. '(user' → logprob: -12.750237464904785
    9. '("("' → logprob: -13.125237464904785
    10. '('' → logprob: -13.250237464904785

Token 81: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06473083794116974
    2. '(' → logprob: -2.8147308826446533
    3. '(lambda' → logprob: -5.939730644226074
    4. 'int' → logprob: -10.314730644226074
    5. '(str' → logprob: -10.314730644226074
    6. '<int' → logprob: -10.939730644226074
    7. '(
' → logprob: -11.189730644226074
    8. '=int' → logprob: -11.689730644226074
    9. ' (' → logprob: -12.439730644226074
    10. ' int' → logprob: -12.564730644226074

Token 82: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12794870138168335
    2. '(' → logprob: -2.127948760986328
    3. ' (' → logprob: -7.502948760986328
    4. ',input' → logprob: -7.877948760986328
    5. '(
' → logprob: -10.377948760986328
    6. 'input' → logprob: -11.127948760986328
    7. ',' → logprob: -11.377948760986328
    8. '```' → logprob: -11.752948760986328
    9. ')' → logprob: -12.002948760986328
    10. '=input' → logprob: -13.252948760986328

Token 83: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20187918841838837
    2. ' input' → logprob: -1.7018791437149048
    3. '(input' → logprob: -7.701879024505615
    4. '   ' → logprob: -13.076879501342773
    5. ',input' → logprob: -13.076879501342773
    6. '	input' → logprob: -13.326879501342773
    7. ' (' → logprob: -13.326879501342773
    8. ')' → logprob: -13.576879501342773
    9. '<input' → logprob: -13.701879501342773
    10. '(' → logprob: -13.951879501342773

Token 84: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018418798223137856
    2. '(' → logprob: -4.018418788909912
    3. ' (' → logprob: -8.64341926574707
    4. 'input' → logprob: -9.51841926574707
    5. '(
' → logprob: -11.39341926574707
    6. '=input' → logprob: -13.39341926574707
    7. '(

' → logprob: -13.39341926574707
    8. ' ' → logprob: -14.01841926574707
    9. ' input' → logprob: -14.01841926574707
    10. ')' → logprob: -14.01841926574707

Token 85: '()))
' (ID: 24521)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10013721883296967
    2. '())))' → logprob: -2.600137233734131
    3. '()))' → logprob: -4.100137233734131
    4. '())' → logprob: -6.475137233734131
    5. '()>' → logprob: -6.600137233734131
    6. '(' → logprob: -7.100137233734131
    7. '()));' → logprob: -8.850136756896973
    8. '()?>' → logprob: -9.100136756896973
    9. '()(' → logprob: -9.350136756896973
    10. '()">' → logprob: -9.600136756896973

Token 86: '   ' (ID: 271)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3879256844520569
    2. ')' → logprob: -1.137925624847412
    3. ')))' → logprob: -7.012925624847412
    4. '()))' → logprob: -10.01292610168457
    5. '())' → logprob: -10.13792610168457
    6. '()' → logprob: -10.63792610168457
    7. ' ))' → logprob: -10.63792610168457
    8. ' )' → logprob: -11.26292610168457
    9. '[' → logprob: -13.51292610168457
    10. '(' → logprob: -13.51292610168457

Token 87: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03809370473027229
    2. '))' → logprob: -3.2880938053131104
    3. ')))' → logprob: -10.038093566894531
    4. ' )' → logprob: -11.913093566894531
    5. ' ))' → logprob: -14.663093566894531
    6. '())' → logprob: -14.663093566894531
    7. '   ' → logprob: -15.038093566894531
    8. '(' → logprob: -15.663093566894531
    9. '()' → logprob: -16.16309356689453
    10. ')
' → logprob: -16.28809356689453

Token 88: ' Lecture' (ID: 106534)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07908035069704056
    2. '))' → logprob: -2.57908034324646
    3. ')))' → logprob: -8.704080581665039
    4. ' )' → logprob: -10.954080581665039
    5. '())' → logprob: -13.079080581665039
    6. ' ))' → logprob: -13.204080581665039
    7. '   ' → logprob: -14.204080581665039
    8. '()' → logprob: -14.704080581665039
    9. '])' → logprob: -14.829080581665039
    10. '[' → logprob: -14.954080581665039

Token 89: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01010818686336279
    2. '))' → logprob: -4.63510799407959
    3. '())' → logprob: -8.26010799407959
    4. ')))' → logprob: -9.63510799407959
    5. ' )' → logprob: -11.26010799407959
    6. '()' → logprob: -11.38510799407959
    7. '   ' → logprob: -13.63510799407959
    8. '()))' → logprob: -13.88510799407959
    9. '(' → logprob: -14.51010799407959
    10. '[' → logprob: -15.63510799407959

Token 90: ' deuxième' (ID: 51664)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029880885034799576
    2. '))' → logprob: -3.529881000518799
    3. ')))' → logprob: -9.27988052368164
    4. ' )' → logprob: -10.40488052368164
    5. '())' → logprob: -13.15488052368164
    6. ' ))' → logprob: -13.77988052368164
    7. '()' → logprob: -14.27988052368164
    8. ')>' → logprob: -14.77988052368164
    9. '),' → logprob: -15.15488052368164
    10. '[' → logprob: -15.15488052368164

Token 91: ' input' (ID: 3422)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12746167182922363
    2. '))' → logprob: -2.1274616718292236
    3. ')))' → logprob: -7.6274614334106445
    4. '())' → logprob: -11.002461433410645
    5. ' )' → logprob: -11.127461433410645
    6. '()' → logprob: -12.252461433410645
    7. '()))' → logprob: -12.752461433410645
    8. ' ))' → logprob: -13.252461433410645
    9. '   ' → logprob: -13.377461433410645
    10. '(' → logprob: -13.877461433410645

Token 92: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055903781205415726
    2. '))' → logprob: -3.305903673171997
    3. '())' → logprob: -4.055903911590576
    4. '()' → logprob: -8.430903434753418
    5. ' )' → logprob: -9.680903434753418
    6. ')))' → logprob: -9.930903434753418
    7. '()))' → logprob: -10.305903434753418
    8. '   ' → logprob: -11.180903434753418
    9. '(' → logprob: -12.930903434753418
    10. ' ))' → logprob: -13.555903434753418

Token 93: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08093954622745514
    2. '))' → logprob: -2.580939531326294
    3. '())' → logprob: -6.330939769744873
    4. '()' → logprob: -9.080939292907715
    5. ')))' → logprob: -9.205939292907715
    6. ' )' → logprob: -10.580939292907715
    7. '()))' → logprob: -10.955939292907715
    8. '   ' → logprob: -12.205939292907715
    9. '(' → logprob: -13.205939292907715
    10. ' ))' → logprob: -13.580939292907715

Token 94: ' attend' (ID: 13384)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04295317456126213
    2. '))' → logprob: -3.2929532527923584
    3. '())' → logprob: -5.417953014373779
    4. '()' → logprob: -8.542953491210938
    5. ' )' → logprob: -8.917953491210938
    6. ')))' → logprob: -9.167953491210938
    7. '()))' → logprob: -11.042953491210938
    8. '   ' → logprob: -12.417953491210938
    9. '(' → logprob: -12.542953491210938
    10. ' ))' → logprob: -13.167953491210938

Token 95: ' un' (ID: 537)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.044884953647851944
    2. '()' → logprob: -3.4198849201202393
    3. ')' → logprob: -4.669885158538818
    4. '()))' → logprob: -6.544885158538818
    5. '))' → logprob: -9.29488468170166
    6. ' ())' → logprob: -9.41988468170166
    7. '(' → logprob: -9.66988468170166
    8. '())
' → logprob: -10.29488468170166
    9. '()
' → logprob: -10.41988468170166
    10. '   ' → logprob: -10.91988468170166

Token 96: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24513760209083557
    2. '()' → logprob: -2.1201376914978027
    3. '())' → logprob: -2.8701376914978027
    4. ' )' → logprob: -4.370137691497803
    5. 'input' → logprob: -5.620137691497803
    6. 'int' → logprob: -5.745137691497803
    7. ' ' → logprob: -5.870137691497803
    8. '(' → logprob: -5.995137691497803
    9. '()
' → logprob: -6.245137691497803
    10. '")' → logprob: -6.370137691497803

Token 97: ' K' (ID: 658)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003229528898373246
    2. '))' → logprob: -5.87822961807251
    3. '())' → logprob: -8.128229141235352
    4. ' )' → logprob: -9.753229141235352
    5. '()' → logprob: -10.128229141235352
    6. ')))' → logprob: -11.128229141235352
    7. '   ' → logprob: -11.878229141235352
    8. '(' → logprob: -12.253229141235352
    9. '),' → logprob: -13.753229141235352
    10. ' ' → logprob: -13.878229141235352

Token 98: ' sa' (ID: 880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03819205239415169
    2. '))' → logprob: -3.2881920337677
    3. ')))' → logprob: -9.663191795349121
    4. ' )' → logprob: -9.788191795349121
    5. '())' → logprob: -10.663191795349121
    6. '()' → logprob: -12.913191795349121
    7. '   ' → logprob: -13.038191795349121
    8. ' ))' → logprob: -13.913191795349121
    9. '),' → logprob: -14.538191795349121
    10. ' ' → logprob: -15.413191795349121

Token 99: 'isi' (ID: 4496)
  Prédit: 'tis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tis' → logprob: -0.7792675495147705
    2. 'is' → logprob: -1.2792675495147705
    3. 'isi' → logprob: -2.1542675495147705
    4. 'isis' → logprob: -2.6542675495147705
    5. 'ïs' → logprob: -3.5292675495147705
    6. ')' → logprob: -4.029267311096191
    7. 't' → logprob: -5.029267311096191
    8. 'ise' → logprob: -5.529267311096191
    9. 'sis' → logprob: -5.654267311096191
    10. 'it' → logprob: -6.154267311096191

Token 100: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5007569789886475
    2. '))' → logprob: -1.2507569789886475
    3. '())' → logprob: -2.3757569789886475
    4. '()))' → logprob: -4.500757217407227
    5. '()' → logprob: -5.750757217407227
    6. ')))' → logprob: -8.750757217407227
    7. '   ' → logprob: -9.375757217407227
    8. ' )' → logprob: -9.625757217407227
    9. ' ))' → logprob: -10.375757217407227
    10. '(' → logprob: -10.500757217407227

Token 101: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01638764701783657
    2. '))' → logprob: -5.016387462615967
    3. ' )' → logprob: -5.516387462615967
    4. '()' → logprob: -6.141387462615967
    5. 'user' → logprob: -6.391387462615967
    6. 'input' → logprob: -7.641387462615967
    7. ' l' → logprob: -7.766387462615967
    8. '())' → logprob: -8.766387939453125
    9. ' user' → logprob: -8.891387939453125
    10. 'int' → logprob: -9.016387939453125

Token 102: ''utilisateur' (ID: 140803)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004235462285578251
    2. '))' → logprob: -6.37923526763916
    3. ''utilisateur' → logprob: -6.62923526763916
    4. 'user' → logprob: -7.25423526763916
    5. '')' → logprob: -9.00423526763916
    6. ' user' → logprob: -9.75423526763916
    7. 'e' → logprob: -10.25423526763916
    8. '),' → logprob: -10.37923526763916
    9. ',' → logprob: -10.50423526763916
    10. '’utilisateur' → logprob: -10.75423526763916

Token 103: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005991724319756031
    2. '))' → logprob: -5.1309919357299805
    3. ' )' → logprob: -10.38099193572998
    4. ')))' → logprob: -10.75599193572998
    5. '())' → logprob: -12.00599193572998
    6. '   ' → logprob: -13.13099193572998
    7. '()' → logprob: -13.50599193572998
    8. ' ' → logprob: -15.00599193572998
    9. '),' → logprob: -15.50599193572998
    10. '(' → logprob: -15.63099193572998

Token 104: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006025373004376888
    2. '))' → logprob: -5.131025314331055
    3. ' )' → logprob: -9.631025314331055
    4. ')))' → logprob: -11.006025314331055
    5. '())' → logprob: -11.631025314331055
    6. '()' → logprob: -12.881025314331055
    7. '   ' → logprob: -13.756025314331055
    8. '),' → logprob: -14.631025314331055
    9. ' ' → logprob: -15.131025314331055
    10. ' ))' → logprob: -15.256025314331055

Token 105: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026406656950712204
    2. '))' → logprob: -3.651406764984131
    3. ')))' → logprob: -9.651406288146973
    4. ' )' → logprob: -10.276406288146973
    5. '())' → logprob: -12.526406288146973
    6. '()' → logprob: -13.526406288146973
    7. ' ))' → logprob: -14.151406288146973
    8. '   ' → logprob: -14.276406288146973
    9. '),' → logprob: -15.276406288146973
    10. ' ' → logprob: -15.276406288146973

Token 106: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008769265376031399
    2. '))' → logprob: -4.7587690353393555
    3. ')))' → logprob: -9.133769035339355
    4. ' )' → logprob: -10.133769035339355
    5. '()' → logprob: -13.008769035339355
    6. '())' → logprob: -13.133769035339355
    7. '   ' → logprob: -14.008769035339355
    8. '),' → logprob: -14.633769035339355
    9. ' ))' → logprob: -14.883769035339355
    10. ' ' → logprob: -15.258769035339355

Token 107: ' indique' (ID: 97324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020103605929762125
    2. '))' → logprob: -6.252010345458984
    3. ' )' → logprob: -10.377010345458984
    4. ')))' → logprob: -10.377010345458984
    5. '   ' → logprob: -12.502010345458984
    6. ')
' → logprob: -12.752010345458984
    7. ' ' → logprob: -12.877010345458984
    8. ').' → logprob: -13.127010345458984
    9. '()' → logprob: -13.627010345458984
    10. ' ' → logprob: -13.752010345458984

Token 108: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041883294470608234
    2. '))' → logprob: -5.504188537597656
    3. ')))' → logprob: -9.504188537597656
    4. ' )' → logprob: -10.379188537597656
    5. '),' → logprob: -13.254188537597656
    6. '   ' → logprob: -14.254188537597656
    7. ' ' → logprob: -15.379188537597656
    8. '()' → logprob: -15.504188537597656
    9. '())' → logprob: -15.504188537597656
    10. ')
' → logprob: -15.754188537597656

Token 109: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01687501184642315
    2. ' )' → logprob: -4.14187479019165
    3. ')
' → logprob: -8.141875267028809
    4. '))' → logprob: -8.766875267028809
    5. ' ' → logprob: -9.641875267028809
    6. '<|end|>' → logprob: -9.891875267028809
    7. '<|end|>' → logprob: -10.891875267028809
    8. '   ' → logprob: -11.016875267028809
    9. ')))' → logprob: -11.016875267028809
    10. ' )
' → logprob: -11.141875267028809

Token 110: ' maximum' (ID: 10562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033840835094451904
    2. '))' → logprob: -3.4088408946990967
    3. ')))' → logprob: -9.033841133117676
    4. '   ' → logprob: -10.158841133117676
    5. ' )' → logprob: -11.283841133117676
    6. '())' → logprob: -12.158841133117676
    7. '()' → logprob: -12.158841133117676
    8. ')
' → logprob: -12.408841133117676
    9. ' ' → logprob: -13.408841133117676
    10. '),' → logprob: -13.908841133117676

Token 111: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07116395980119705
    2. '))' → logprob: -2.6961638927459717
    3. ' )' → logprob: -8.07116413116455
    4. '()' → logprob: -8.32116413116455
    5. ')))' → logprob: -8.32116413116455
    6. '())' → logprob: -8.44616413116455
    7. '   ' → logprob: -9.94616413116455
    8. '()))' → logprob: -9.94616413116455
    9. ')
' → logprob: -10.32116413116455
    10. ' ))' → logprob: -10.69616413116455

Token 112: ' chiffres' (ID: 105565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0855623260140419
    2. ' )' → logprob: -2.835562229156494
    3. '))' → logprob: -3.960562229156494
    4. ' ))' → logprob: -5.835562229156494
    5. ' ' → logprob: -7.835562229156494
    6. ')))' → logprob: -8.210562705993652
    7. ' modifications' → logprob: -8.835562705993652
    8. ' caractères' → logprob: -9.335562705993652
    9. ' permutations' → logprob: -10.585562705993652
    10. '),' → logprob: -10.710562705993652

Token 113: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25318682193756104
    2. '))' → logprob: -1.503186821937561
    3. ')))' → logprob: -7.6281867027282715
    4. '())' → logprob: -8.00318717956543
    5. '()))' → logprob: -8.87818717956543
    6. '   ' → logprob: -9.00318717956543
    7. '()' → logprob: -9.37818717956543
    8. ' )' → logprob: -10.12818717956543
    9. ' ))' → logprob: -11.00318717956543
    10. ' ' → logprob: -11.87818717956543

Token 114: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8567770719528198
    2. '_' → logprob: -1.7317770719528198
    3. '_s' → logprob: -2.3567771911621094
    4. '_n' → logprob: -2.6067771911621094
    5. 's' → logprob: -3.6067771911621094
    6. ' supprim' → logprob: -3.7317771911621094
    7. ' remplac' → logprob: -3.7317771911621094
    8. '_mod' → logprob: -3.9817771911621094
    9. '_rem' → logprob: -4.606777191162109
    10. ' )' → logprob: -4.606777191162109

Token 115: 'uls' (ID: 13433)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19374947249889374
    2. 'on' → logprob: -1.8187494277954102
    3. ' )' → logprob: -5.81874942779541
    4. '   ' → logprob: -6.56874942779541
    5. '))' → logprob: -6.56874942779541
    6. ',' → logprob: -6.81874942779541
    7. ' non' → logprob: -6.94374942779541
    8. 'ot' → logprob: -7.31874942779541
    9. '_non' → logprob: -7.31874942779541
    10. ']' → logprob: -7.56874942779541

Token 116: ' autor' (ID: 13432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023434961214661598
    2. '))' → logprob: -3.77343487739563
    3. ')))' → logprob: -9.02343463897705
    4. ' )' → logprob: -10.02343463897705
    5. '())' → logprob: -11.39843463897705
    6. '()' → logprob: -11.89843463897705
    7. '   ' → logprob: -13.27343463897705
    8. '),' → logprob: -13.89843463897705
    9. ' ))' → logprob: -13.89843463897705
    10. ' ' → logprob: -14.77343463897705

Token 117: 'isés' (ID: 58890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01467145700007677
    2. ' )' → logprob: -4.764671325683594
    3. '))' → logprob: -5.764671325683594
    4. '   ' → logprob: -8.014671325683594
    5. ',' → logprob: -8.014671325683594
    6. ')`' → logprob: -8.014671325683594
    7. 'éros' → logprob: -8.264671325683594
    8. '])' → logprob: -8.389671325683594
    9. '`)' → logprob: -8.639671325683594
    10. 'érés' → logprob: -8.764671325683594

Token 118: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016120117157697678
    2. '))' → logprob: -4.141119956970215
    3. ')))' → logprob: -10.016119956970215
    4. ' )' → logprob: -10.391119956970215
    5. '())' → logprob: -12.266119956970215
    6. '   ' → logprob: -12.891119956970215
    7. '()' → logprob: -13.516119956970215
    8. '),' → logprob: -14.641119956970215
    9. ' ))' → logprob: -14.641119956970215
    10. ' ' → logprob: -15.266119956970215

Token 119: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032485390547662973
    2. '))' → logprob: -5.753248691558838
    3. ' )' → logprob: -9.75324821472168
    4. ')))' → logprob: -11.75324821472168
    5. '())' → logprob: -13.25324821472168
    6. '   ' → logprob: -13.50324821472168
    7. '()' → logprob: -14.62824821472168
    8. ' ' → logprob: -15.00324821472168
    9. '),' → logprob: -15.25324821472168
    10. ')
' → logprob: -15.62824821472168

Token 120: ' K' (ID: 658)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02338896505534649
    2. '))' → logprob: -3.7733888626098633
    3. ' )' → logprob: -9.148388862609863
    4. ')))' → logprob: -10.773388862609863
    5. '())' → logprob: -11.648388862609863
    6. '   ' → logprob: -13.023388862609863
    7. '()' → logprob: -13.148388862609863
    8. ' ))' → logprob: -13.898388862609863
    9. ' ' → logprob: -14.148388862609863
    10. ')
' → logprob: -14.773388862609863

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4746361970901489
    2. ' =' → logprob: -0.9746361970901489
    3. ')' → logprob: -7.724636077880859
    4. '=int' → logprob: -9.22463607788086
    5. '=input' → logprob: -11.47463607788086
    6. ')=' → logprob: -12.72463607788086
    7. '   ' → logprob: -12.84963607788086
    8. ' )' → logprob: -13.97463607788086
    9. ' ' → logprob: -14.09963607788086
    10. ' ' → logprob: -15.09963607788086

Token 122: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.048588961362838745
    2. 'int' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.923588752746582
    4. '(int' → logprob: -15.423588752746582
    5. '=int' → logprob: -16.1735897064209
    6. '[int' → logprob: -16.1735897064209
    7. '	int' → logprob: -16.4235897064209
    8. '<int' → logprob: -16.7985897064209
    9. '  ' → logprob: -17.7985897064209
    10. ' ' → logprob: -18.0485897064209

Token 123: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011076593771576881
    2. '(' → logprob: -4.5110764503479
    3. 'input' → logprob: -10.761076927185059
    4. ' (' → logprob: -12.511076927185059
    5. '(
' → logprob: -13.136076927185059
    6. '()' → logprob: -13.386076927185059
    7. '(

' → logprob: -16.261075973510742
    8. ' input' → logprob: -16.511075973510742
    9. '=input' → logprob: -16.636075973510742
    10. ')' → logprob: -17.011075973510742

Token 124: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0014899849193170667
    2. '()))' → logprob: -7.001490116119385
    3. '()' → logprob: -7.501490116119385
    4. '())
' → logprob: -11.126489639282227
    5. ' ())' → logprob: -11.876489639282227
    6. ')' → logprob: -12.751489639282227
    7. '();)' → logprob: -15.251489639282227
    8. '(' → logprob: -15.251489639282227
    9. '())

' → logprob: -15.376489639282227
    10. '()
' → logprob: -15.751489639282227

Token 125: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005068036844022572
    2. '))' → logprob: -7.62550687789917
    3. ' )' → logprob: -11.250506401062012
    4. ')))' → logprob: -12.250506401062012
    5. '())' → logprob: -14.750506401062012
    6. ')
' → logprob: -15.375506401062012
    7. '   ' → logprob: -15.875506401062012
    8. ')`' → logprob: -16.375507354736328
    9. '()' → logprob: -17.125507354736328
    10. ' ' → logprob: -17.375507354736328

Token 126: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004978670622222126
    2. '))' → logprob: -7.625497817993164
    3. ' )' → logprob: -11.875497817993164
    4. ')))' → logprob: -13.125497817993164
    5. '())' → logprob: -14.875497817993164
    6. ')
' → logprob: -15.500497817993164
    7. '   ' → logprob: -15.750497817993164
    8. ')`' → logprob: -16.000497817993164
    9. '()' → logprob: -17.000497817993164
    10. ' ' → logprob: -18.250497817993164

Token 127: ' Calcul' (ID: 57243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.791440293658525e-05
    2. '))' → logprob: -10.000078201293945
    3. ' )' → logprob: -10.500078201293945
    4. ')
' → logprob: -12.625078201293945
    5. ')))' → logprob: -14.500078201293945
    6. '   ' → logprob: -15.625078201293945
    7. '()' → logprob: -15.875078201293945
    8. ' ' → logprob: -15.875078201293945
    9. ')`' → logprob: -15.875078201293945
    10. '())' → logprob: -16.125078201293945

Token 128: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013774730905424803
    2. '   ' → logprob: -10.000137329101562
    3. '))' → logprob: -10.500137329101562
    4. ' )' → logprob: -10.500137329101562
    5. ')
' → logprob: -11.375137329101562
    6. '()' → logprob: -11.500137329101562
    7. '())' → logprob: -11.625137329101562
    8. ' ' → logprob: -12.875137329101562
    9. ')))' → logprob: -13.750137329101562
    10. '[' → logprob: -13.875137329101562

Token 129: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.983476436696947e-05
    2. '))' → logprob: -10.875089645385742
    3. ')
' → logprob: -11.625089645385742
    4. '[' → logprob: -11.625089645385742
    5. '(' → logprob: -11.750089645385742
    6. ']' → logprob: -11.875089645385742
    7. ' )' → logprob: -11.875089645385742
    8. 'def' → logprob: -12.000089645385742
    9. '])' → logprob: -12.625089645385742
    10. '')' → logprob: -13.125089645385742

Token 130: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033581978641450405
    2. '))' → logprob: -9.375335693359375
    3. '())' → logprob: -9.500335693359375
    4. ' )' → logprob: -9.875335693359375
    5. '()' → logprob: -10.250335693359375
    6. ')
' → logprob: -11.000335693359375
    7. '   ' → logprob: -11.000335693359375
    8. '[' → logprob: -11.125335693359375
    9. '(' → logprob: -11.250335693359375
    10. ')))' → logprob: -11.375335693359375

Token 131: ' chiffres' (ID: 105565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014422574313357472
    2. '(' → logprob: -6.6264424324035645
    3. ' )' → logprob: -10.251441955566406
    4. 's' → logprob: -10.751441955566406
    5. '(N' → logprob: -11.251441955566406
    6. '))' → logprob: -11.626441955566406
    7. '[' → logprob: -11.876441955566406
    8. '_' → logprob: -12.626441955566406
    9. '())' → logprob: -12.876441955566406
    10. 'def' → logprob: -12.876441955566406

Token 132: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017621672013774514
    2. ' )' → logprob: -7.251762390136719
    3. '))' → logprob: -8.126762390136719
    4. '()' → logprob: -8.501762390136719
    5. '(' → logprob: -8.626762390136719
    6. '())' → logprob: -9.001762390136719
    7. '   ' → logprob: -9.626762390136719
    8. '[' → logprob: -9.751762390136719
    9. ' ' → logprob: -9.751762390136719
    10. ')))' → logprob: -11.001762390136719

Token 133: ' nombre' (ID: 9733)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6626089215278625
    2. ')' → logprob: -1.1626088619232178
    3. ' N' → logprob: -1.7876088619232178
    4. ' )' → logprob: -6.037609100341797
    5. ' ' → logprob: -7.412609100341797
    6. '(N' → logprob: -7.412609100341797
    7. ' code' → logprob: -9.162609100341797
    8. '')' → logprob: -9.287609100341797
    9. '(' → logprob: -9.662609100341797
    10. '[N' → logprob: -9.787609100341797

Token 134: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017529279284644872
    2. ' )' → logprob: -10.125175476074219
    3. '))' → logprob: -10.250175476074219
    4. '   ' → logprob: -10.250175476074219
    5. ')
' → logprob: -10.875175476074219
    6. '[' → logprob: -11.500175476074219
    7. '())' → logprob: -11.750175476074219
    8. '(len' → logprob: -11.875175476074219
    9. '()' → logprob: -12.375175476074219
    10. '(' → logprob: -13.000175476074219

Token 135: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008564318413846195
    2. '   ' → logprob: -7.500856399536133
    3. ')
' → logprob: -8.750856399536133
    4. ' )' → logprob: -9.625856399536133
    5. 'len' → logprob: -10.125856399536133
    6. '(len' → logprob: -11.750856399536133
    7. '[len' → logprob: -12.375856399536133
    8. '()' → logprob: -12.375856399536133
    9. ' ' → logprob: -12.500856399536133
    10. '))' → logprob: -12.875856399536133

Token 136: 'long' (ID: 8431)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012625250034034252
    2. '))' → logprob: -5.387625217437744
    3. ' )' → logprob: -5.637625217437744
    4. 'len' → logprob: -6.012625217437744
    5. '(len' → logprob: -7.137625217437744
    6. '   ' → logprob: -7.762625217437744
    7. '()' → logprob: -8.387625694274902
    8. ')
' → logprob: -8.512625694274902
    9. '())' → logprob: -9.137625694274902
    10. ' len' → logprob: -9.887625694274902

Token 137: 'ueur' (ID: 43728)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4452042281627655
    2. ')' → logprob: -1.070204257965088
    3. '(' → logprob: -4.445204257965088
    4. '   ' → logprob: -7.070204257965088
    5. '(len' → logprob: -7.320204257965088
    6. '(
' → logprob: -7.445204257965088
    7. 'e' → logprob: -7.570204257965088
    8. ')
' → logprob: -8.07020378112793
    9. 'def' → logprob: -8.44520378112793
    10. '=len' → logprob: -8.94520378112793

Token 138: ' de' (ID: 334)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08141042292118073
    2. ')' → logprob: -2.5814104080200195
    3. '(' → logprob: -6.2064104080200195
    4. '   ' → logprob: -8.70641040802002
    5. ' (' → logprob: -9.70641040802002
    6. ' )' → logprob: -9.83141040802002
    7. ')
' → logprob: -9.95641040802002
    8. ' ' → logprob: -9.95641040802002
    9. '(
' → logprob: -10.33141040802002
    10. '(len' → logprob: -10.70641040802002

Token 139: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04715486988425255
    2. ' N' → logprob: -3.4221549034118652
    3. ')' → logprob: -4.422154903411865
    4. '(N' → logprob: -6.672154903411865
    5. ' ' → logprob: -9.547154426574707
    6. '	N' → logprob: -10.297154426574707
    7. ' )' → logprob: -10.797154426574707
    8. '   ' → logprob: -11.797154426574707
    9. '[N' → logprob: -12.922154426574707
    10. '  ' → logprob: -13.672154426574707

Token 140: ' liste' (ID: 31719)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.23746825754642487
    2. ')' → logprob: -1.6124682426452637
    3. ' N' → logprob: -4.862468242645264
    4. '(N' → logprob: -5.737468242645264
    5. '))' → logprob: -7.362468242645264
    6. ' ' → logprob: -9.237468719482422
    7. '[N' → logprob: -9.612468719482422
    8. '	N' → logprob: -9.862468719482422
    9. '   ' → logprob: -9.987468719482422
    10. ' )' → logprob: -10.237468719482422

Token 141: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22712872922420502
    2. '))' → logprob: -1.6021287441253662
    3. '(' → logprob: -6.727128505706787
    4. ')))' → logprob: -8.352128982543945
    5. '(N' → logprob: -8.852128982543945
    6. '[' → logprob: -9.977128982543945
    7. '()))' → logprob: -10.977128982543945
    8. 'N' → logprob: -11.227128982543945
    9. '   ' → logprob: -11.227128982543945
    10. '[N' → logprob: -11.977128982543945

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017164701130241156
    2. '))' → logprob: -6.376716613769531
    3. ')))' → logprob: -11.876716613769531
    4. ' )' → logprob: -12.376716613769531
    5. '[' → logprob: -13.876716613769531
    6. '())' → logprob: -14.501716613769531
    7. '   ' → logprob: -14.626716613769531
    8. ')
' → logprob: -14.751716613769531
    9. '()' → logprob: -15.001716613769531
    10. ')`' → logprob: -16.00171661376953

Token 143: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012570773833431304
    2. '))' → logprob: -9.125125885009766
    3. ' )' → logprob: -11.375125885009766
    4. ')))' → logprob: -13.000125885009766
    5. '   ' → logprob: -14.000125885009766
    6. '())' → logprob: -14.250125885009766
    7. '()' → logprob: -14.500125885009766
    8. ')
' → logprob: -15.000125885009766
    9. ')`' → logprob: -15.625125885009766
    10. ' ' → logprob: -15.750125885009766

Token 144: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.051066520740278e-05
    2. '))' → logprob: -10.250060081481934
    3. ' )' → logprob: -10.750060081481934
    4. ')))' → logprob: -13.875060081481934
    5. '   ' → logprob: -14.125060081481934
    6. ')
' → logprob: -14.500060081481934
    7. ' ' → logprob: -14.750060081481934
    8. '[' → logprob: -15.000060081481934
    9. ')`' → logprob: -16.12506103515625
    10. '()' → logprob: -16.12506103515625

Token 145: 'len' (ID: 3303)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3006652891635895
    2. '=' → logprob: -2.1756653785705566
    3. ' =' → logprob: -2.8006653785705566
    4. 'len' → logprob: -3.3006653785705566
    5. '_len' → logprob: -3.8006653785705566
    6. '_length' → logprob: -4.550665378570557
    7. '=len' → logprob: -4.925665378570557
    8. '[' → logprob: -6.425665378570557
    9. '.' → logprob: -6.800665378570557
    10. 'length' → logprob: -7.300665378570557

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17698372900485992
    2. ' =' → logprob: -2.0519838333129883
    3. ')' → logprob: -3.4269838333129883
    4. '()' → logprob: -7.676983833312988
    5. '=len' → logprob: -8.301983833312988
    6. '(' → logprob: -8.426983833312988
    7. '   ' → logprob: -9.176983833312988
    8. ',' → logprob: -10.051983833312988
    9. '(N' → logprob: -10.801983833312988
    10. '=N' → logprob: -10.926983833312988

Token 147: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.011052536778151989
    2. 'len' → logprob: -4.51105260848999
    3. '(len' → logprob: -12.511052131652832
    4. ' ' → logprob: -14.386052131652832
    5. '	len' → logprob: -15.636052131652832
    6. '[len' → logprob: -15.886052131652832
    7. '=len' → logprob: -16.13605308532715
    8. ' ' → logprob: -17.63605308532715
    9. ',len' → logprob: -18.26105308532715
    10. '   ' → logprob: -19.38605308532715

Token 148: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02975292131304741
    2. '(' → logprob: -3.5297529697418213
    3. '(
' → logprob: -13.779752731323242
    4. ')' → logprob: -14.154752731323242
    5. ' (' → logprob: -15.154752731323242
    6. '(

' → logprob: -15.779752731323242
    7. '(n' → logprob: -16.404752731323242
    8. '()' → logprob: -17.404752731323242
    9. '((' → logprob: -17.654752731323242
    10. '(S' → logprob: -18.154752731323242

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02061278000473976
    2. '))' → logprob: -3.8956127166748047
    3. '()' → logprob: -10.770612716674805
    4. ' )' → logprob: -10.770612716674805
    5. '())' → logprob: -11.270612716674805
    6. ')
' → logprob: -11.770612716674805
    7. ')))' → logprob: -12.270612716674805
    8. '   ' → logprob: -14.020612716674805
    9. ' ))' → logprob: -14.145612716674805
    10. '))
' → logprob: -14.520612716674805

Token 150: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.2987729102605954e-05
    2. '))' → logprob: -10.125042915344238
    3. ' )' → logprob: -13.125042915344238
    4. ')))' → logprob: -14.125042915344238
    5. '   ' → logprob: -17.250043869018555
    6. '[' → logprob: -17.250043869018555
    7. '(' → logprob: -17.625043869018555
    8. '),' → logprob: -17.750043869018555
    9. ')`' → logprob: -17.875043869018555
    10. ')
' → logprob: -17.875043869018555

Token 151: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. '))' → logprob: -11.500014305114746
    3. ' )' → logprob: -12.375014305114746
    4. ')
' → logprob: -16.125015258789062
    5. ')))' → logprob: -16.125015258789062
    6. '   ' → logprob: -16.625015258789062
    7. '())' → logprob: -17.500015258789062
    8. ')`' → logprob: -17.750015258789062
    9. '()' → logprob: -18.375015258789062
    10. ' ' → logprob: -18.625015258789062

Token 152: ' Initial' (ID: 9209)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020879271905869246
    2. '   ' → logprob: -6.7520880699157715
    3. ' )' → logprob: -7.3770880699157715
    4. ' ' → logprob: -9.002087593078613
    5. '<|end|>' → logprob: -10.002087593078613
    6. ')
' → logprob: -10.752087593078613
    7. ']' → logprob: -11.127087593078613
    8. '[' → logprob: -11.127087593078613
    9. '#' → logprob: -11.627087593078613
    10. 'def' → logprob: -11.877087593078613

Token 153: 'isation' (ID: 6993)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018069753423333168
    2. '_' → logprob: -4.268069744110107
    3. '(' → logprob: -7.268069744110107
    4. 'ation' → logprob: -7.518069744110107
    5. '(N' → logprob: -7.518069744110107
    6. '=' → logprob: -8.018070220947266
    7. '()' → logprob: -8.518070220947266
    8. 'ization' → logprob: -8.518070220947266
    9. '[' → logprob: -8.643070220947266
    10. '(
' → logprob: -8.768070220947266

Token 154: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6505100131034851
    2. '(' → logprob: -0.7755100131034851
    3. '(N' → logprob: -4.400509834289551
    4. '   ' → logprob: -5.900509834289551
    5. '(
' → logprob: -6.900509834289551
    6. 'def' → logprob: -7.275509834289551
    7. '()' → logprob: -7.900509834289551
    8. ' )' → logprob: -8.40050983428955
    9. '#' → logprob: -8.90050983428955
    10. '[' → logprob: -9.52550983428955

Token 155: ''un' (ID: 9788)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06414840370416641
    2. ' N' → logprob: -3.564148426055908
    3. ' (' → logprob: -4.939148426055908
    4. '(' → logprob: -5.314148426055908
    5. ')' → logprob: -5.689148426055908
    6. ' la' → logprob: -5.689148426055908
    7. ' []' → logprob: -5.814148426055908
    8. '  ' → logprob: -6.564148426055908
    9. '(N' → logprob: -6.564148426055908
    10. '()' → logprob: -6.939148426055908

Token 156: ' tableau' (ID: 67053)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.4989358186721802
    2. 'result' → logprob: -1.7489358186721802
    3. ' ' → logprob: -2.1239356994628906
    4. ' =' → logprob: -2.6239356994628906
    5. 'count' → logprob: -2.6239356994628906
    6. ' dp' → logprob: -2.8739356994628906
    7. ' ans' → logprob: -3.7489356994628906
    8. ' count' → logprob: -3.7489356994628906
    9. ' max' → logprob: -3.8739356994628906
    10. 'dp' → logprob: -3.9989356994628906

Token 157: ' dynamique' (ID: 98708)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8411831855773926
    2. '[' → logprob: -1.5911831855773926
    3. '[]' → logprob: -2.3411831855773926
    4. 'dp' → logprob: -2.4661831855773926
    5. ')' → logprob: -3.2161831855773926
    6. 'd' → logprob: -3.4661831855773926
    7. 's' → logprob: -4.091183185577393
    8. '<|end|>' → logprob: -4.591183185577393
    9. ' dp' → logprob: -4.841183185577393
    10. '_' → logprob: -4.966183185577393

Token 158: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26143884658813477
    2. ' dp' → logprob: -1.7614388465881348
    3. '[' → logprob: -3.7614388465881348
    4. '(dp' → logprob: -4.136438846588135
    5. 'd' → logprob: -5.261438846588135
    6. '[]' → logprob: -5.886438846588135
    7. '_dp' → logprob: -6.011438846588135
    8. ' =' → logprob: -6.261438846588135
    9. '	dp' → logprob: -6.261438846588135
    10. 'DP' → logprob: -6.886438846588135

Token 159: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2868088185787201
    2. ')' → logprob: -1.7868088483810425
    3. ' =' → logprob: -3.161808729171753
    4. '(' → logprob: -4.536808967590332
    5. '   ' → logprob: -4.536808967590332
    6. '[
' → logprob: -5.661808967590332
    7. '=' → logprob: -5.911808967590332
    8. ']' → logprob: -6.161808967590332
    9. '(
' → logprob: -6.661808967590332
    10. '(dp' → logprob: -6.786808967590332

Token 160: ' ' (ID: 220)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.6647048592567444
    2. '[' → logprob: -0.9147048592567444
    3. '[[' → logprob: -2.9147047996520996
    4. ' [' → logprob: -4.4147047996521
    5. '[n' → logprob: -4.9147047996521
    6. '[size' → logprob: -5.4147047996521
    7. 'size' → logprob: -5.6647047996521
    8. ' [[' → logprob: -7.4147047996521
    9. '[T' → logprob: -7.6647047996521
    10. '[(' → logprob: -7.6647047996521

Token 161: '3' (ID: 18)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.7859576344490051
    2. '[[' → logprob: -1.1609575748443604
    3. '[' → logprob: -2.2859575748443604
    4. '(N' → logprob: -3.1609575748443604
    5. '[n' → logprob: -3.6609575748443604
    6. 'size' → logprob: -4.5359578132629395
    7. ' [[' → logprob: -4.6609578132629395
    8. ' [' → logprob: -5.0359578132629395
    9. '(n' → logprob: -5.1609578132629395
    10. '[(' → logprob: -5.2859578132629395

Token 162: ' dimensions' (ID: 23995)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9165586829185486
    2. ')' → logprob: -1.7915587425231934
    3. '][' → logprob: -1.9165587425231934
    4. '[' → logprob: -2.1665587425231934
    5. '*' → logprob: -3.4165587425231934
    6. '0' → logprob: -3.9165587425231934
    7. 'D' → logprob: -4.041558742523193
    8. '+' → logprob: -4.291558742523193
    9. ' ]' → logprob: -4.291558742523193
    10. ' *' → logprob: -4.541558742523193

Token 163: ' :
' (ID: 10039)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3637384176254272
    2. '[' → logprob: -1.3637384176254272
    3. ' =' → logprob: -1.9887384176254272
    4. ')' → logprob: -2.238738536834717
    5. '([' → logprob: -2.363738536834717
    6. '=[' → logprob: -3.363738536834717
    7. ']' → logprob: -3.488738536834717
    8. '   ' → logprob: -4.113738536834717
    9. '(N' → logprob: -4.113738536834717
    10. '(dp' → logprob: -4.488738536834717

Token 164: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8576511740684509
    2. '(' → logprob: -1.3576512336730957
    3. ')' → logprob: -1.4826512336730957
    4. '   ' → logprob: -3.4826512336730957
    5. ',' → logprob: -4.232651233673096
    6. '(N' → logprob: -4.357651233673096
    7. '(
' → logprob: -4.982651233673096
    8. '([' → logprob: -5.482651233673096
    9. ' (' → logprob: -5.857651233673096
    10. ']' → logprob: -5.857651233673096

Token 165: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5890814661979675
    2. ')' → logprob: -1.0890815258026123
    3. '(' → logprob: -3.0890815258026123
    4. '   ' → logprob: -4.089081287384033
    5. '(N' → logprob: -4.714081287384033
    6. '[N' → logprob: -4.839081287384033
    7. 'dp' → logprob: -5.339081287384033
    8. ',' → logprob: -5.464081287384033
    9. '(
' → logprob: -5.964081287384033
    10. ' (' → logprob: -6.339081287384033

Token 166: ' dp' (ID: 21546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8975767493247986
    2. ' (' → logprob: -1.6475768089294434
    3. '[N' → logprob: -1.7725768089294434
    4. '(N' → logprob: -2.6475768089294434
    5. 'dp' → logprob: -3.1475768089294434
    6. ' N' → logprob: -3.3975768089294434
    7. 'N' → logprob: -3.5225768089294434
    8. ']' → logprob: -4.897576808929443
    9. ' )' → logprob: -5.022576808929443
    10. ',' → logprob: -5.147576808929443

Token 167: '[position' (ID: 75596)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02857542783021927
    2. '=' → logprob: -3.6535754203796387
    3. '=[' → logprob: -6.528575420379639
    4. '[' → logprob: -7.403575420379639
    5. ')' → logprob: -9.403575897216797
    6. ']' → logprob: -9.903575897216797
    7. '[N' → logprob: -10.528575897216797
    8. ' =[' → logprob: -12.028575897216797
    9. '[n' → logprob: -12.153575897216797
    10. '=[]' → logprob: -12.278575897216797

Token 168: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006410997826606035
    2. ']' → logprob: -5.381411075592041
    3. ' ][' → logprob: -6.631411075592041
    4. ',' → logprob: -8.881410598754883
    5. ')][' → logprob: -9.381410598754883
    6. '+' → logprob: -9.756410598754883
    7. ')' → logprob: -9.881410598754883
    8. '])' → logprob: -10.006410598754883
    9. '[' → logprob: -10.381410598754883
    10. '],' → logprob: -11.131410598754883

Token 169: 'est' (ID: 376)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1902000457048416
    2. 'non' → logprob: -2.690200090408325
    3. 'count' → logprob: -3.065200090408325
    4. ' non' → logprob: -4.190199851989746
    5. ' k' → logprob: -4.565199851989746
    6. 'nb' → logprob: -5.190199851989746
    7. 'nombre' → logprob: -5.440199851989746
    8. 'K' → logprob: -5.565199851989746
    9. ' nombre' → logprob: -5.815199851989746
    10. ' nb' → logprob: -5.940199851989746

Token 170: '_plus' (ID: 68089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7350229620933533
    2. '_p' → logprob: -2.235023021697998
    3. '_m' → logprob: -3.110023021697998
    4. ']' → logprob: -3.360023021697998
    5. '_t' → logprob: -3.485023021697998
    6. '_d' → logprob: -3.485023021697998
    7. '][' → logprob: -3.860023021697998
    8. 'ablished' → logprob: -3.985023021697998
    9. '_possible' → logprob: -4.485023021697998
    10. '_plus' → logprob: -4.735023021697998

Token 171: '_p' (ID: 1359)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5914126038551331
    2. 'pet' → logprob: -1.5914125442504883
    3. 'grand' → logprob: -2.7164125442504883
    4. 'Petit' → logprob: -2.7164125442504883
    5. '_p' → logprob: -2.8414125442504883
    6. '_pet' → logprob: -4.591412544250488
    7. ' petit' → logprob: -5.091412544250488
    8. '_gr' → logprob: -5.591412544250488
    9. '_' → logprob: -5.716412544250488
    10. '```' → logprob: -5.841412544250488

Token 172: 'etit' (ID: 108358)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3885775804519653
    2. 'lus' → logprob: -1.6385775804519653
    3. 'etit' → logprob: -2.138577461242676
    4. 'et' → logprob: -2.263577461242676
    5. 'etite' → logprob: -2.388577461242676
    6. 'ur' → logprob: -3.013577461242676
    7. 'rec' → logprob: -3.388577461242676
    8. 'e' → logprob: -3.763577461242676
    9. 'u' → logprob: -4.263577461242676
    10. '}' → logprob: -4.388577461242676

Token 173: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011860297061502934
    2. ']' → logprob: -5.011860370635986
    3. '?' → logprob: -5.886860370635986
    4. ' ][' → logprob: -6.511860370635986
    5. '_possible' → logprob: -7.886860370635986
    6. '()][' → logprob: -8.636859893798828
    7. '_' → logprob: -9.011859893798828
    8. '][_' → logprob: -11.011859893798828
    9. ''][' → logprob: -11.136859893798828
    10. 'possible' → logprob: -11.261859893798828

Token 174: 'comp' (ID: 3697)
  Prédit: ' nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.6915162205696106
    2. 'nb' → logprob: -1.3165161609649658
    3. 'nombre' → logprob: -2.691516160964966
    4. ' nombre' → logprob: -3.191516160964966
    5. 'count' → logprob: -3.441516160964966
    6. 'k' → logprob: -4.066516399383545
    7. 'non' → logprob: -4.066516399383545
    8. ' non' → logprob: -4.441516399383545
    9. '_nb' → logprob: -5.316516399383545
    10. ' count' → logprob: -5.316516399383545

Token 175: 'te' (ID: 411)
  Prédit: 'teur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.6805287599563599
    2. 'te' → logprob: -1.1805287599563599
    3. 't' → logprob: -1.8055287599563599
    4. 'teurs' → logprob: -4.43052864074707
    5. 'ter' → logprob: -5.18052864074707
    6. 'té' → logprob: -6.80552864074707
    7. 'ut' → logprob: -7.55552864074707
    8. 'tes' → logprob: -8.18052864074707
    9. 'tage' → logprob: -8.30552864074707
    10. 'os' → logprob: -8.30552864074707

Token 176: '_ch' (ID: 8914)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.060210876166820526
    2. ']' → logprob: -3.435210943222046
    3. '_de' → logprob: -4.810210704803467
    4. '_n' → logprob: -4.935210704803467
    5. '_' → logprob: -5.935210704803467
    6. '_nombre' → logprob: -6.060210704803467
    7. '_des' → logprob: -6.685210704803467
    8. '_nb' → logprob: -7.185210704803467
    9. '_ch' → logprob: -7.185210704803467
    10. 'de' → logprob: -7.560210704803467

Token 177: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.13333594799041748
    2. 'if' → logprob: -2.258336067199707
    3. 'iffs' → logprob: -5.133336067199707
    4. 'non' → logprob: -6.008336067199707
    5. 'ifs' → logprob: -6.508336067199707
    6. '_non' → logprob: -6.508336067199707
    7. 'ars' → logprob: -7.508336067199707
    8. 'i' → logprob: -7.508336067199707
    9. 'res' → logprob: -7.633336067199707
    10. 'ar' → logprob: -7.633336067199707

Token 178: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3171118199825287
    2. 'urs' → logprob: -2.0671117305755615
    3. 'rs' → logprob: -2.6921117305755615
    4. 'nts' → logprob: -3.4421117305755615
    5. 'ers' → logprob: -4.442111968994141
    6. 'ts' → logprob: -4.817111968994141
    7. 're' → logprob: -5.317111968994141
    8. 'r' → logprob: -5.317111968994141
    9. 'ents' → logprob: -5.567111968994141
    10. 'non' → logprob: -5.942111968994141

Token 179: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.03752470016479492
    2. ']' → logprob: -4.037524700164795
    3. '_n' → logprob: -4.162524700164795
    4. '_' → logprob: -6.662524700164795
    5. '_util' → logprob: -7.162524700164795
    6. 'non' → logprob: -7.912524700164795
    7. '_no' → logprob: -8.537525177001953
    8. '_]' → logprob: -8.537525177001953
    9. 'Non' → logprob: -8.787525177001953
    10. ']_' → logprob: -9.037525177001953

Token 180: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.1614159196615219
    2. 'n' → logprob: -2.4114158153533936
    3. '_z' → logprob: -3.5364158153533936
    4. '_zero' → logprob: -4.536416053771973
    5. '_' → logprob: -5.036416053771973
    6. 'z' → logprob: -5.286416053771973
    7. '_null' → logprob: -6.036416053771973
    8. '0' → logprob: -6.161416053771973
    9. 'zero' → logprob: -6.786416053771973
    10. 'nz' → logprob: -7.036416053771973

Token 181: 'uls' (ID: 13433)
  Prédit: 'uls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uls' → logprob: -0.1993391364812851
    2. 'u' → logprob: -2.1993391513824463
    3. 'ul' → logprob: -2.9493391513824463
    4. 'z' → logprob: -4.199338912963867
    5. 'us' → logprob: -7.449338912963867
    6. '0' → logprob: -7.824338912963867
    7. 'ull' → logprob: -8.574338912963867
    8. '_' → logprob: -8.574338912963867
    9. '   ' → logprob: -8.824338912963867
    10. ' ' → logprob: -8.949338912963867

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000543857691809535
    2. '][' → logprob: -8.375543594360352
    3. ']=' → logprob: -8.625543594360352
    4. ' ]' → logprob: -9.625543594360352
    5. '+' → logprob: -10.750543594360352
    6. '])' → logprob: -10.750543594360352
    7. '],' → logprob: -12.000543594360352
    8. ')' → logprob: -12.125543594360352
    9. '[' → logprob: -12.875543594360352
    10. ')]' → logprob: -13.625543594360352

Token 183: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04271082207560539
    2. ']' → logprob: -3.292710781097412
    3. '])' → logprob: -5.667710781097412
    4. ' =' → logprob: -7.292710781097412
    5. ' )' → logprob: -8.41771125793457
    6. '   ' → logprob: -9.16771125793457
    7. ')=' → logprob: -9.91771125793457
    8. ']=' → logprob: -10.29271125793457
    9. ')]' → logprob: -10.79271125793457
    10. ' ]' → logprob: -10.79271125793457

Token 184: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5748199224472046
    2. ' ' → logprob: -0.9498199224472046
    3. '-' → logprob: -3.324820041656494
    4. ' -' → logprob: -4.824820041656494
    5. ' float' → logprob: -6.324820041656494
    6. 'float' → logprob: -6.574820041656494
    7. ' None' → logprob: -7.074820041656494
    8. 'False' → logprob: -7.199820041656494
    9. 'None' → logprob: -7.324820041656494
    10. ' [' → logprob: -7.949820041656494

Token 185: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010941423242911696
    2. ']' → logprob: -8.001093864440918
    3. '])' → logprob: -8.751093864440918
    4. '(N' → logprob: -8.751093864440918
    5. '   ' → logprob: -8.876093864440918
    6. '(' → logprob: -9.001093864440918
    7. '[' → logprob: -9.626093864440918
    8. '(
' → logprob: -10.626093864440918
    9. ')])' → logprob: -11.126093864440918
    10. '[N' → logprob: -11.126093864440918

Token 186: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.7316107749938965
    2. 'man' → logprob: -1.3566107749938965
    3. ' man' → logprob: -1.9816107749938965
    4. '_' → logprob: -3.8566107749938965
    5. 'com' → logprob: -4.1066107749938965
    6. 'ways' → logprob: -4.4816107749938965
    7. ']' → logprob: -4.4816107749938965
    8. ' comb' → logprob: -4.6066107749938965
    9. '<|end|>' → logprob: -4.9816107749938965
    10. ' ways' → logprob: -5.1066107749938965

Token 187: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002126587787643075
    2. '   ' → logprob: -6.752126693725586
    3. ']' → logprob: -8.002126693725586
    4. '])' → logprob: -9.002126693725586
    5. ' )' → logprob: -9.252126693725586
    6. '[' → logprob: -9.252126693725586
    7. '<|end|>' → logprob: -9.502126693725586
    8. '  ' → logprob: -10.627126693725586
    9. '(N' → logprob: -10.627126693725586
    10. 'def' → logprob: -10.752126693725586

Token 188: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026259204372763634
    2. '   ' → logprob: -4.526259422302246
    3. '[' → logprob: -4.776259422302246
    4. ']' → logprob: -5.401259422302246
    5. '[N' → logprob: -8.151259422302246
    6. '(
' → logprob: -8.401259422302246
    7. '[
' → logprob: -8.401259422302246
    8. '(N' → logprob: -8.651259422302246
    9. '])' → logprob: -8.901259422302246
    10. 'def' → logprob: -9.026259422302246

Token 189: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0362984761595726
    2. ']' → logprob: -3.6612985134124756
    3. '   ' → logprob: -5.5362982749938965
    4. 'def' → logprob: -6.5362982749938965
    5. '=' → logprob: -6.9112982749938965
    6. '[' → logprob: -6.9112982749938965
    7. '<|end|>' → logprob: -7.6612982749938965
    8. ' =' → logprob: -7.9112982749938965
    9. '])' → logprob: -8.286298751831055
    10. ']=' → logprob: -8.911298751831055

Token 190: ' position' (ID: 4010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020513860508799553
    2. '(N' → logprob: -5.270514011383057
    3. '([' → logprob: -5.645514011383057
    4. 'def' → logprob: -5.645514011383057
    5. '   ' → logprob: -7.020514011383057
    6. ' =' → logprob: -7.020514011383057
    7. '(' → logprob: -7.145514011383057
    8. ' )' → logprob: -7.270514011383057
    9. '=[' → logprob: -7.270514011383057
    10. ')
' → logprob: -7.395514011383057

Token 191: ' varie' (ID: 103216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08481044322252274
    2. '))' → logprob: -2.709810495376587
    3. '])' → logprob: -5.084810256958008
    4. '   ' → logprob: -6.334810256958008
    5. ' )' → logprob: -6.834810256958008
    6. '):' → logprob: -7.084810256958008
    7. ')))' → logprob: -7.084810256958008
    8. '[' → logprob: -7.459810256958008
    9. ')])' → logprob: -7.459810256958008
    10. '+' → logprob: -7.709810256958008

Token 193: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002533213933929801
    2. ' ' → logprob: -6.002533435821533
    3. ')' → logprob: -11.127532958984375
    4. '(' → logprob: -11.252532958984375
    5. ' range' → logprob: -11.377532958984375
    6. '   ' → logprob: -12.127532958984375
    7. 'range' → logprob: -12.502532958984375
    8. '1' → logprob: -12.877532958984375
    9. ',' → logprob: -13.752532958984375
    10. '[' → logprob: -13.752532958984375

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006420228746719658
    2. ' ' → logprob: -7.375641822814941
    3. '1' → logprob: -11.625641822814941
    4. 'range' → logprob: -13.375641822814941
    5. '   ' → logprob: -13.750641822814941
    6. ' range' → logprob: -14.375641822814941
    7. ')' → logprob: -14.500641822814941
    8. ',' → logprob: -14.813141822814941
    9. '
' → logprob: -15.438141822814941
    10. '(' → logprob: -15.563141822814941

Token 195: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22653590142726898
    2. ',' → logprob: -1.8515359163284302
    3. '))' → logprob: -3.9765357971191406
    4. '   ' → logprob: -4.476535797119141
    5. '+' → logprob: -5.601535797119141
    6. '),' → logprob: -6.101535797119141
    7. ')))' → logprob: -6.601535797119141
    8. ' )' → logprob: -6.851535797119141
    9. ' +' → logprob: -6.976535797119141
    10. ']' → logprob: -7.101535797119141

Token 196: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.575950026512146
    2. ' N' → logprob: -0.825950026512146
    3. ' ' → logprob: -12.450949668884277
    4. '	N' → logprob: -12.950949668884277
    5. 'len' → logprob: -13.700949668884277
    6. '>N' → logprob: -14.200949668884277
    7. '   ' → logprob: -14.700949668884277
    8. 'n' → logprob: -14.950949668884277
    9. ',N' → logprob: -14.950949668884277
    10. ' (' → logprob: -15.575949668884277

Token 197: 'len' (ID: 3303)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2340058833360672
    2. '))' → logprob: -1.7340059280395508
    3. '])' → logprob: -3.734005928039551
    4. '[' → logprob: -5.984005928039551
    5. '   ' → logprob: -6.109005928039551
    6. ']' → logprob: -6.984005928039551
    7. ')])' → logprob: -7.609005928039551
    8. ']))' → logprob: -7.734005928039551
    9. ')))' → logprob: -7.734005928039551
    10. ')]' → logprob: -7.734005928039551

Token 198: ' inclus' (ID: 11891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026062142569571733
    2. '   ' → logprob: -6.502606391906738
    3. '))' → logprob: -7.252606391906738
    4. ' )' → logprob: -8.502606391906738
    5. ')))' → logprob: -9.752606391906738
    6. '),' → logprob: -10.002606391906738
    7. '):' → logprob: -11.002606391906738
    8. '+' → logprob: -11.252606391906738
    9. '])' → logprob: -11.377606391906738
    10. ')]' → logprob: -11.752606391906738

Token 199: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011400962248444557
    2. '))' → logprob: -7.251140117645264
    3. '   ' → logprob: -8.501139640808105
    4. ')))' → logprob: -9.376139640808105
    5. ' )' → logprob: -9.751139640808105
    6. '])' → logprob: -10.126139640808105
    7. ')])' → logprob: -11.001139640808105
    8. '),' → logprob: -11.626139640808105
    9. ']' → logprob: -12.751139640808105
    10. '  ' → logprob: -13.001139640808105

Token 200: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21991956233978271
    2. ' )' → logprob: -2.0949196815490723
    3. '   ' → logprob: -4.219919681549072
    4. '    ' → logprob: -4.344919681549072
    5. '))' → logprob: -4.844919681549072
    6. ' ))' → logprob: -5.469919681549072
    7. '            ' → logprob: -5.719919681549072
    8. '                ' → logprob: -5.844919681549072
    9. '           ' → logprob: -5.969919681549072
    10. ' N' → logprob: -5.969919681549072

Token 201: ' il' (ID: 1793)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.21155807375907898
    2. 'N' → logprob: -1.7115581035614014
    3. ' range' → logprob: -5.711557865142822
    4. '   ' → logprob: -5.961557865142822
    5. ')' → logprob: -6.086557865142822
    6. 'range' → logprob: -7.336557865142822
    7. '(N' → logprob: -7.586557865142822
    8. ' ' → logprob: -8.96155834197998
    9. '[N' → logprob: -9.21155834197998
    10. '	N' → logprob: -9.33655834197998

Token 202: ' y' (ID: 342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24351663887500763
    2. ' =' → logprob: -1.6185166835784912
    3. ')' → logprob: -4.368516445159912
    4. ']' → logprob: -6.743516445159912
    5. '<=' → logprob: -6.743516445159912
    6. '[' → logprob: -6.868516445159912
    7. ' <=' → logprob: -7.368516445159912
    8. '=[' → logprob: -8.36851692199707
    9. 's' → logprob: -8.86851692199707
    10. '+=' → logprob: -9.61851692199707

Token 203: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012638057814911008
    2. ']' → logprob: -7.501263618469238
    3. ' )' → logprob: -9.001263618469238
    4. ')<' → logprob: -9.126263618469238
    5. '<' → logprob: -10.126263618469238
    6. ' ' → logprob: -10.251263618469238
    7. '[' → logprob: -10.251263618469238
    8. ',' → logprob: -10.501263618469238
    9. ')>' → logprob: -10.501263618469238
    10. '<|end|>' → logprob: -10.501263618469238

Token 204: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016171613708138466
    2. '+' → logprob: -4.516171455383301
    3. '(N' → logprob: -6.016171455383301
    4. '))' → logprob: -6.516171455383301
    5. ' +' → logprob: -7.766171455383301
    6. '(' → logprob: -8.3911714553833
    7. '   ' → logprob: -8.6411714553833
    8. ' )' → logprob: -9.0161714553833
    9. '[N' → logprob: -10.2661714553833
    10. '])' → logprob: -10.2661714553833

Token 205: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0912618562579155
    2. ')' → logprob: -2.591261863708496
    3. ' N' → logprob: -4.841261863708496
    4. '+' → logprob: -5.591261863708496
    5. '   ' → logprob: -7.966261863708496
    6. '(N' → logprob: -9.716261863708496
    7. ')+' → logprob: -9.966261863708496
    8. '	N' → logprob: -10.091261863708496
    9. ' +' → logprob: -10.591261863708496
    10. '1' → logprob: -10.716261863708496

Token 206: 'len' (ID: 3303)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1852346956729889
    2. ')' → logprob: -1.8102346658706665
    3. ')))' → logprob: -5.935234546661377
    4. '   ' → logprob: -6.685234546661377
    5. '[' → logprob: -7.435234546661377
    6. '])' → logprob: -7.935234546661377
    7. ']))' → logprob: -8.810235023498535
    8. '[N' → logprob: -9.560235023498535
    9. ')])' → logprob: -9.810235023498535
    10. '()))' → logprob: -9.935235023498535

Token 207: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25842252373695374
    2. '+' → logprob: -2.133422613143921
    3. '))' → logprob: -2.258422613143921
    4. '])' → logprob: -6.633422374725342
    5. ' +' → logprob: -6.633422374725342
    6. ']' → logprob: -7.383422374725342
    7. ')))' → logprob: -7.508422374725342
    8. ')])' → logprob: -8.2584228515625
    9. ')]' → logprob: -8.6334228515625
    10. ' )' → logprob: -9.0084228515625

Token 208: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11042036861181259
    2. '+' → logprob: -2.4854204654693604
    3. '1' → logprob: -3.8604204654693604
    4. ')+' → logprob: -9.735420227050781
    5. ' +' → logprob: -9.860420227050781
    6. '+)' → logprob: -11.110420227050781
    7. '),' → logprob: -11.860420227050781
    8. ' ' → logprob: -11.860420227050781
    9. ')>' → logprob: -11.985420227050781
    10. '))' → logprob: -11.985420227050781

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029936078935861588
    2. '))' → logprob: -3.5299360752105713
    3. ' )' → logprob: -9.529935836791992
    4. ')))' → logprob: -9.529935836791992
    5. '])' → logprob: -10.529935836791992
    6. '),' → logprob: -13.029935836791992
    7. ')])' → logprob: -13.029935836791992
    8. ')),' → logprob: -13.404935836791992
    9. '   ' → logprob: -13.529935836791992
    10. ']' → logprob: -13.654935836791992

Token 210: ' positions' (ID: 15897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023437170311808586
    2. '))' → logprob: -3.773437261581421
    3. ')))' → logprob: -8.6484375
    4. ' )' → logprob: -11.3984375
    5. '])' → logprob: -13.7734375
    6. '   ' → logprob: -13.8984375
    7. ']' → logprob: -14.8984375
    8. '))))' → logprob: -14.8984375
    9. ' ))' → logprob: -15.0234375
    10. ')])' → logprob: -15.0234375

Token 211: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06222916394472122
    2. '))' → logprob: -2.8122291564941406
    3. ')))' → logprob: -8.56222915649414
    4. '())' → logprob: -10.31222915649414
    5. ' )' → logprob: -11.06222915649414
    6. '   ' → logprob: -11.56222915649414
    7. '()))' → logprob: -13.06222915649414
    8. '),' → logprob: -13.43722915649414
    9. ' ))' → logprob: -13.56222915649414
    10. ')),' → logprob: -13.68722915649414

Token 212: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1274731159210205
    2. '))' → logprob: -2.1274731159210205
    3. ')))' → logprob: -7.627472877502441
    4. '   ' → logprob: -10.752472877502441
    5. ' )' → logprob: -11.377472877502441
    6. '),' → logprob: -11.877472877502441
    7. ')),' → logprob: -11.877472877502441
    8. '())' → logprob: -12.377472877502441
    9. ' ))' → logprob: -13.252472877502441
    10. '])' → logprob: -14.002472877502441

Token 213: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12739965319633484
    2. '))' → logprob: -2.1273996829986572
    3. ')))' → logprob: -7.877399444580078
    4. '   ' → logprob: -9.627399444580078
    5. ' )' → logprob: -12.002399444580078
    6. '),' → logprob: -12.127399444580078
    7. ')),' → logprob: -12.377399444580078
    8. '())' → logprob: -12.752399444580078
    9. '  ' → logprob: -14.002399444580078
    10. ' ))' → logprob: -14.002399444580078

Token 214: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2526647448539734
    2. '))' → logprob: -1.5026648044586182
    3. ')))' → logprob: -7.252664566040039
    4. '   ' → logprob: -11.502664566040039
    5. ')),' → logprob: -12.252664566040039
    6. '),' → logprob: -12.377664566040039
    7. ' )' → logprob: -12.627664566040039
    8. '())' → logprob: -14.002664566040039
    9. ' ))' → logprob: -14.002664566040039
    10. '))))' → logprob: -14.252664566040039

Token 215: '_plus' (ID: 68089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8326216340065002
    2. '])' → logprob: -0.8326216340065002
    3. ']' → logprob: -2.5826215744018555
    4. ')])' → logprob: -3.5826215744018555
    5. ')]' → logprob: -4.7076215744018555
    6. ',' → logprob: -5.2076215744018555
    7. '][' → logprob: -5.9576215744018555
    8. ']))' → logprob: -6.0826215744018555
    9. '_plus' → logprob: -6.0826215744018555
    10. ']])' → logprob: -7.3326215744018555

Token 216: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00720524787902832
    2. '_plus' → logprob: -5.632205009460449
    3. '_' → logprob: -5.882205009460449
    4. '_small' → logprob: -7.882205009460449
    5. '_s' → logprob: -8.88220500946045
    6. '_t' → logprob: -10.13220500946045
    7. ' _' → logprob: -10.13220500946045
    8. 'plus' → logprob: -10.38220500946045
    9. '_sm' → logprob: -10.75720500946045
    10. ')' → logprob: -10.75720500946045

Token 217: 'etit' (ID: 108358)
  Prédit: 'etit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etit' → logprob: -0.015582510270178318
    2. 'lus' → logprob: -5.01558256149292
    3. 'et' → logprob: -5.26558256149292
    4. '_' → logprob: -6.64058256149292
    5. 'etite' → logprob: -7.76558256149292
    6. ')' → logprob: -8.390582084655762
    7. '_l' → logprob: -8.515582084655762
    8. '_t' → logprob: -8.765582084655762
    9. '_et' → logprob: -8.765582084655762
    10. 'e' → logprob: -9.140582084655762

Token 218: ' est' (ID: 893)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6907366514205933
    2. ']' → logprob: -0.8157366514205933
    3. ')' → logprob: -2.940736770629883
    4. '],' → logprob: -6.565736770629883
    5. '][' → logprob: -7.190736770629883
    6. ']=' → logprob: -7.690736770629883
    7. ',' → logprob: -8.440736770629883
    8. ']),' → logprob: -8.815736770629883
    9. ']))' → logprob: -9.065736770629883
    10. ']==' → logprob: -9.065736770629883

Token 219: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4605177640914917
    2. ',' → logprob: -1.8355177640914917
    3. '0' → logprob: -1.8355177640914917
    4. ' ' → logprob: -2.2105178833007812
    5. '2' → logprob: -2.3355178833007812
    6. '=' → logprob: -2.7105178833007812
    7. ' ,' → logprob: -3.4605178833007812
    8. ' =' → logprob: -3.5855178833007812
    9. ' in' → logprob: -3.9605178833007812
    10. '[' → logprob: -4.835517883300781

Token 220: 'inaire' (ID: 41465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004969134461134672
    2. '=' → logprob: -8.125496864318848
    3. '])' → logprob: -9.250496864318848
    4. '=True' → logprob: -10.875496864318848
    5. '))' → logprob: -10.875496864318848
    6. ',' → logprob: -11.000496864318848
    7. ']' → logprob: -11.250496864318848
    8. ' )' → logprob: -11.375496864318848
    9. '),' → logprob: -12.000496864318848
    10. ' ' → logprob: -12.750496864318848

Token 221: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4752335846424103
    2. '))' → logprob: -0.9752335548400879
    3. ')))' → logprob: -6.850233554840088
    4. ')),' → logprob: -10.225234031677246
    5. ' )' → logprob: -10.975234031677246
    6. ' ))' → logprob: -11.225234031677246
    7. '),' → logprob: -11.475234031677246
    8. '(N' → logprob: -11.600234031677246
    9. '   ' → logprob: -12.475234031677246
    10. '))))' → logprob: -13.475234031677246

Token 222: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23662179708480835
    2. '))' → logprob: -1.6116218566894531
    3. '),' → logprob: -5.111621856689453
    4. ')))' → logprob: -5.986621856689453
    5. ',' → logprob: -6.861621856689453
    6. ')),' → logprob: -7.111621856689453
    7. ')>' → logprob: -8.486621856689453
    8. ' )' → logprob: -9.111621856689453
    9. '[' → logprob: -9.486621856689453
    10. '])' → logprob: -9.736621856689453

Token 223: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013092591427266598
    2. '))' → logprob: -4.888092517852783
    3. ',' → logprob: -6.013092517852783
    4. '),' → logprob: -6.138092517852783
    5. ')))' → logprob: -7.388092517852783
    6. ')),' → logprob: -9.388092994689941
    7. ']' → logprob: -10.138092994689941
    8. ' )' → logprob: -10.263092994689941
    9. '])' → logprob: -11.013092994689941
    10. ')])' → logprob: -11.388092994689941

Token 224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3558407425880432
    2. ')' → logprob: -1.2308406829833984
    3. ' ' → logprob: -4.980840682983398
    4. '),' → logprob: -8.355840682983398
    5. ',' → logprob: -8.730840682983398
    6. ' )' → logprob: -9.855840682983398
    7. '=' → logprob: -11.230840682983398
    8. '))' → logprob: -11.980840682983398
    9. '(' → logprob: -12.355840682983398
    10. '0' → logprob: -12.605840682983398

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2558392584323883
    2. ')' → logprob: -1.505839228630066
    3. ',' → logprob: -5.8808393478393555
    4. '),' → logprob: -7.2558393478393555
    5. ' ' → logprob: -8.630839347839355
    6. '))' → logprob: -9.380839347839355
    7. '):' → logprob: -10.505839347839355
    8. ').' → logprob: -10.880839347839355
    9. '=' → logprob: -11.005839347839355
    10. '(' → logprob: -11.130839347839355

Token 226: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08014456927776337
    2. ')' → logprob: -2.5801446437835693
    3. ')))' → logprob: -6.70514440536499
    4. ')),' → logprob: -11.330144882202148
    5. ' ))' → logprob: -11.580144882202148
    6. ' )' → logprob: -12.830144882202148
    7. '),' → logprob: -13.330144882202148
    8. '   ' → logprob: -13.455144882202148
    9. '))))' → logprob: -14.455144882202148
    10. '()))' → logprob: -14.830144882202148

Token 227: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10094920545816422
    2. '))' → logprob: -2.350949287414551
    3. ')))' → logprob: -7.225949287414551
    4. ' )' → logprob: -11.72594928741455
    5. '   ' → logprob: -12.72594928741455
    6. ')),' → logprob: -14.10094928741455
    7. ' ))' → logprob: -14.47594928741455
    8. '),' → logprob: -14.60094928741455
    9. '))))' → logprob: -14.60094928741455
    10. '())' → logprob: -14.72594928741455

Token 228: ' indique' (ID: 97324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008291634730994701
    2. '))' → logprob: -7.125829219818115
    3. ' )' → logprob: -11.250828742980957
    4. ')))' → logprob: -11.875828742980957
    5. '),' → logprob: -13.000828742980957
    6. ')
' → logprob: -15.000828742980957
    7. ')`' → logprob: -15.250828742980957
    8. ')#' → logprob: -15.375828742980957
    9. '])' → logprob: -15.375828742980957
    10. ').' → logprob: -15.500828742980957

Token 229: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000803076196461916
    2. '))' → logprob: -7.250802993774414
    3. ')))' → logprob: -9.625802993774414
    4. '),' → logprob: -11.500802993774414
    5. '(N' → logprob: -11.750802993774414
    6. ' )' → logprob: -12.875802993774414
    7. ',' → logprob: -14.000802993774414
    8. ')),' → logprob: -14.250802993774414
    9. '(' → logprob: -14.500802993774414
    10. ']' → logprob: -14.500802993774414

Token 230: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014763321727514267
    2. '(N' → logprob: -4.514763355255127
    3. '))' → logprob: -6.139763355255127
    4. ',' → logprob: -7.889763355255127
    5. ' )' → logprob: -7.889763355255127
    6. '(' → logprob: -8.389762878417969
    7. ' N' → logprob: -9.264762878417969
    8. 'N' → logprob: -9.514762878417969
    9. '),' → logprob: -9.514762878417969
    10. ')))' → logprob: -9.764762878417969

Token 231: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011879685334861279
    2. ' )' → logprob: -7.001187801361084
    3. ']' → logprob: -9.251188278198242
    4. '(N' → logprob: -9.876188278198242
    5. '))' → logprob: -10.251188278198242
    6. ' N' → logprob: -10.751188278198242
    7. ',' → logprob: -11.251188278198242
    8. '),' → logprob: -11.626188278198242
    9. '])' → logprob: -11.876188278198242
    10. 'N' → logprob: -12.126188278198242

Token 232: ' construit' (ID: 119882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038235072046518326
    2. '))' → logprob: -3.2882351875305176
    3. ')))' → logprob: -9.03823471069336
    4. '])' → logprob: -10.41323471069336
    5. ' )' → logprob: -11.28823471069336
    6. ']' → logprob: -11.41323471069336
    7. '   ' → logprob: -11.78823471069336
    8. ']))' → logprob: -13.16323471069336
    9. ' ))' → logprob: -13.28823471069336
    10. '),' → logprob: -13.53823471069336

Token 233: ' jusqu' (ID: 21961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05515916272997856
    2. '))' → logprob: -2.930159091949463
    3. ')))' → logprob: -8.430159568786621
    4. '[' → logprob: -11.305159568786621
    5. '   ' → logprob: -11.680159568786621
    6. ' )' → logprob: -11.930159568786621
    7. '[N' → logprob: -12.055159568786621
    8. '(N' → logprob: -12.555159568786621
    9. '])' → logprob: -12.805159568786621
    10. ')),' → logprob: -12.805159568786621

Token 234: ''à' (ID: 33688)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2640102505683899
    2. '(' → logprob: -1.5140101909637451
    3. ']' → logprob: -5.889010429382324
    4. '=' → logprob: -6.014010429382324
    5. '(N' → logprob: -6.139010429382324
    6. '   ' → logprob: -6.514010429382324
    7. '])' → logprob: -7.014010429382324
    8. ',' → logprob: -8.139010429382324
    9. '))' → logprob: -8.389010429382324
    10. '[' → logprob: -8.514010429382324

Token 235: ' présent' (ID: 24129)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016316695138812065
    2. 'position' → logprob: -5.016316890716553
    3. '(position' → logprob: -6.141316890716553
    4. ' ' → logprob: -6.266316890716553
    5. ' position' → logprob: -6.891316890716553
    6. ' )' → logprob: -7.141316890716553
    7. ']' → logprob: -7.266316890716553
    8. '(' → logprob: -7.391316890716553
    9. 'pos' → logprob: -7.641316890716553
    10. '()' → logprob: -8.141316413879395

Token 236: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3875187933444977
    2. '))' → logprob: -1.1375187635421753
    3. ')))' → logprob: -7.387518882751465
    4. ')),' → logprob: -12.012518882751465
    5. '   ' → logprob: -12.137518882751465
    6. ' )' → logprob: -12.512518882751465
    7. '])' → logprob: -13.137518882751465
    8. '),' → logprob: -13.137518882751465
    9. ' ))' → logprob: -13.262518882751465
    10. '[' → logprob: -13.637518882751465

Token 237: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06322941929101944
    2. '))' → logprob: -2.8132293224334717
    3. ')))' → logprob: -7.563229560852051
    4. '   ' → logprob: -7.813229560852051
    5. '])' → logprob: -8.93822956085205
    6. '),' → logprob: -9.81322956085205
    7. ' )' → logprob: -10.18822956085205
    8. ')),' → logprob: -10.93822956085205
    9. '[' → logprob: -11.06322956085205
    10. ']' → logprob: -11.31322956085205

Token 238: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029902052134275436
    2. '))' → logprob: -3.5299019813537598
    3. ')))' → logprob: -9.654902458190918
    4. ' )' → logprob: -10.404902458190918
    5. '())' → logprob: -11.279902458190918
    6. '])' → logprob: -11.404902458190918
    7. '   ' → logprob: -12.029902458190918
    8. '()' → logprob: -12.279902458190918
    9. '),' → logprob: -12.279902458190918
    10. '[' → logprob: -12.529902458190918

Token 239: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02343623898923397
    2. '))' → logprob: -3.7734363079071045
    3. ')))' → logprob: -8.898436546325684
    4. ' )' → logprob: -11.523436546325684
    5. '])' → logprob: -11.648436546325684
    6. ')),' → logprob: -11.773436546325684
    7. '[' → logprob: -12.148436546325684
    8. ']' → logprob: -12.398436546325684
    9. '),' → logprob: -12.398436546325684
    10. '   ' → logprob: -12.398436546325684

Token 240: ' déjà' (ID: 21229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009510025265626609
    2. ',' → logprob: -8.000950813293457
    3. ' )' → logprob: -8.750950813293457
    4. ')<' → logprob: -8.750950813293457
    5. '=' → logprob: -9.125950813293457
    6. ']' → logprob: -10.625950813293457
    7. '),' → logprob: -10.625950813293457
    8. '))' → logprob: -11.375950813293457
    9. ')==' → logprob: -11.375950813293457
    10. '):' → logprob: -11.500950813293457

Token 241: ' strict' (ID: 12035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008586087264120579
    2. ' )' → logprob: -5.3835859298706055
    3. '))' → logprob: -6.8835859298706055
    4. ',' → logprob: -7.2585859298706055
    5. '<=' → logprob: -7.5085859298706055
    6. ')<' → logprob: -8.008585929870605
    7. ' <=' → logprob: -8.133585929870605
    8. '])' → logprob: -8.633585929870605
    9. ']' → logprob: -9.008585929870605
    10. '[' → logprob: -9.133585929870605

Token 242: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032642632722854614
    2. '=' → logprob: -4.282642841339111
    3. '(' → logprob: -5.282642841339111
    4. ',' → logprob: -5.532642841339111
    5. '(N' → logprob: -5.907642841339111
    6. '))' → logprob: -6.907642841339111
    7. '])' → logprob: -7.157642841339111
    8. '_' → logprob: -7.407642841339111
    9. '())' → logprob: -7.407642841339111
    10. '   ' → logprob: -7.532642841339111

Token 243: ' inférieur' (ID: 191498)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016504127415828407
    2. '))' → logprob: -8.875164985656738
    3. ')))' → logprob: -12.375164985656738
    4. ')>' → logprob: -12.625164985656738
    5. ' )' → logprob: -12.625164985656738
    6. '())' → logprob: -12.875164985656738
    7. '()' → logprob: -13.250164985656738
    8. '),' → logprob: -13.500164985656738
    9. '(' → logprob: -13.875164985656738
    10. ')==' → logprob: -14.625164985656738

Token 244: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04358607158064842
    2. '))' → logprob: -3.168586015701294
    3. ')))' → logprob: -7.543586254119873
    4. ')),' → logprob: -10.918585777282715
    5. '),' → logprob: -11.043585777282715
    6. ' )' → logprob: -11.543585777282715
    7. '   ' → logprob: -12.418585777282715
    8. '))))' → logprob: -13.543585777282715
    9. '(N' → logprob: -13.918585777282715
    10. '));' → logprob: -14.168585777282715

Token 245: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4828108847141266
    2. 'N' → logprob: -0.9828108549118042
    3. '(N' → logprob: -5.357810974121094
    4. ')' → logprob: -5.732810974121094
    5. ' ' → logprob: -8.732810974121094
    6. ' (' → logprob: -8.857810974121094
    7. '   ' → logprob: -8.982810974121094
    8. ',' → logprob: -9.107810974121094
    9. ' )' → logprob: -9.982810974121094
    10. ' la' → logprob: -10.357810974121094

Token 246: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023557456210255623
    2. '))' → logprob: -3.773557424545288
    3. ')))' → logprob: -8.148557662963867
    4. ' )' → logprob: -11.523557662963867
    5. '   ' → logprob: -12.023557662963867
    6. '())' → logprob: -13.023557662963867
    7. ')),' → logprob: -13.648557662963867
    8. '),' → logprob: -13.898557662963867
    9. '])' → logprob: -14.898557662963867
    10. '))))' → logprob: -14.898557662963867

Token 247: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07032529264688492
    2. '))' → logprob: -2.6953253746032715
    3. ')))' → logprob: -7.9453253746032715
    4. '])' → logprob: -11.445324897766113
    5. ' )' → logprob: -11.820324897766113
    6. '),' → logprob: -12.195324897766113
    7. '[' → logprob: -12.945324897766113
    8. ')),' → logprob: -12.945324897766113
    9. ']' → logprob: -13.570324897766113
    10. ']))' → logprob: -13.695324897766113

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12752506136894226
    2. '))' → logprob: -2.1275250911712646
    3. '])' → logprob: -8.127525329589844
    4. ')))' → logprob: -8.377525329589844
    5. ' )' → logprob: -10.502525329589844
    6. '),' → logprob: -11.002525329589844
    7. ']))' → logprob: -11.752525329589844
    8. ')])' → logprob: -11.877525329589844
    9. ')),' → logprob: -12.502525329589844
    10. '   ' → logprob: -13.002525329589844

Token 249: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030242951586842537
    2. '))' → logprob: -3.530242919921875
    3. ')))' → logprob: -7.655242919921875
    4. ' )' → logprob: -11.780242919921875
    5. '   ' → logprob: -12.405242919921875
    6. '])' → logprob: -13.030242919921875
    7. '),' → logprob: -13.405242919921875
    8. ')),' → logprob: -13.655242919921875
    9. ']' → logprob: -15.030242919921875
    10. ')])' → logprob: -15.030242919921875

Token 250: ' toujours' (ID: 16867)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.721228368813172e-05
    2. '))' → logprob: -9.500086784362793
    3. ' )' → logprob: -12.375086784362793
    4. ')))' → logprob: -12.750086784362793
    5. '),' → logprob: -13.375086784362793
    6. '):' → logprob: -13.875086784362793
    7. ']' → logprob: -15.000086784362793
    8. ').' → logprob: -15.125086784362793
    9. ')>' → logprob: -15.625086784362793
    10. ')),' → logprob: -15.625086784362793

Token 251: ' égal' (ID: 15059)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003134168218821287
    2. ')>' → logprob: -9.375313758850098
    3. ',' → logprob: -10.000313758850098
    4. '),' → logprob: -10.500313758850098
    5. ')==' → logprob: -10.875313758850098
    6. '<|end|>' → logprob: -11.000313758850098
    7. '=' → logprob: -11.375313758850098
    8. ' )' → logprob: -11.375313758850098
    9. '))' → logprob: -11.500313758850098
    10. ')=' → logprob: -11.625313758850098

Token 252: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030129998922348022
    2. '(N' → logprob: -6.5030131340026855
    3. '))' → logprob: -6.6280131340026855
    4. ')))' → logprob: -9.628012657165527
    5. '),' → logprob: -10.628012657165527
    6. '   ' → logprob: -10.753012657165527
    7. '(' → logprob: -11.253012657165527
    8. ' )' → logprob: -11.378012657165527
    9. ',' → logprob: -11.503012657165527
    10. '])' → logprob: -11.753012657165527

Token 253: ' sa' (ID: 880)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.7282536029815674
    2. 'N' → logprob: -1.2282536029815674
    3. ')' → logprob: -1.6032536029815674
    4. ' ' → logprob: -5.478253364562988
    5. ' input' → logprob: -5.603253364562988
    6. 'input' → logprob: -5.978253364562988
    7. '))' → logprob: -6.103253364562988
    8. ' )' → logprob: -6.353253364562988
    9. '0' → logprob: -6.353253364562988
    10. ' list' → logprob: -6.478253364562988

Token 254: ' structure' (ID: 8866)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002559137996286154
    2. ' )' → logprob: -6.377559185028076
    3. ']' → logprob: -7.752559185028076
    4. '_' → logprob: -9.252558708190918
    5. '[' → logprob: -9.752558708190918
    6. ' ' → logprob: -10.002558708190918
    7. '(' → logprob: -10.502558708190918
    8. '])' → logprob: -10.752558708190918
    9. ',' → logprob: -10.877558708190918
    10. '()' → logprob: -11.252558708190918

Token 255: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006945295259356499
    2. '))' → logprob: -5.0069451332092285
    3. ')))' → logprob: -8.756945610046387
    4. '())' → logprob: -11.006945610046387
    5. '),' → logprob: -11.256945610046387
    6. ' )' → logprob: -11.381945610046387
    7. '()' → logprob: -11.756945610046387
    8. ')),' → logprob: -12.131945610046387
    9. '])' → logprob: -12.381945610046387
    10. '   ' → logprob: -12.756945610046387

Token 256: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10096407681703568
    2. '))' → logprob: -2.350964069366455
    3. ')))' → logprob: -7.225964069366455
    4. ' )' → logprob: -11.725964546203613
    5. '),' → logprob: -11.975964546203613
    6. ')),' → logprob: -12.225964546203613
    7. '])' → logprob: -12.600964546203613
    8. ']))' → logprob: -13.725964546203613
    9. ' ))' → logprob: -13.850964546203613
    10. ')])' → logprob: -13.850964546203613

Token 257: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044043369591236115
    2. '))' → logprob: -3.1690433025360107
    3. ')))' → logprob: -7.16904354095459
    4. '])' → logprob: -8.54404354095459
    5. ' )' → logprob: -10.54404354095459
    6. ')])' → logprob: -10.91904354095459
    7. ']))' → logprob: -11.29404354095459
    8. '   ' → logprob: -12.04404354095459
    9. ']' → logprob: -12.29404354095459
    10. '),' → logprob: -12.79404354095459

Token 258: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4752959907054901
    2. '))' → logprob: -0.9752960205078125
    3. ')))' → logprob: -6.7252960205078125
    4. '   ' → logprob: -12.350296020507812
    5. ')),' → logprob: -12.475296020507812
    6. ' )' → logprob: -12.850296020507812
    7. '),' → logprob: -12.850296020507812
    8. ' ))' → logprob: -13.600296020507812
    9. '))))' → logprob: -14.225296020507812
    10. '));' → logprob: -14.725296020507812

Token 259: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07950576394796371
    2. '))' → logprob: -2.579505681991577
    3. ')))' → logprob: -7.454505920410156
    4. '   ' → logprob: -10.454505920410156
    5. ' )' → logprob: -12.329505920410156
    6. ')),' → logprob: -13.954505920410156
    7. '),' → logprob: -14.454505920410156
    8. ' ))' → logprob: -14.579505920410156
    9. '))))' → logprob: -14.829505920410156
    10. '])' → logprob: -15.204505920410156

Token 260: ' compte' (ID: 19657)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08014985173940659
    2. '))' → logprob: -2.5801498889923096
    3. ')))' → logprob: -6.7051496505737305
    4. '   ' → logprob: -10.83014965057373
    5. ')),' → logprob: -12.20514965057373
    6. ' )' → logprob: -12.58014965057373
    7. '),' → logprob: -13.08014965057373
    8. '))))' → logprob: -14.33014965057373
    9. '])' → logprob: -14.58014965057373
    10. ' ))' → logprob: -14.83014965057373

Token 261: '_ch' (ID: 8914)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13834762573242188
    2. '])' → logprob: -2.138347625732422
    3. '))' → logprob: -5.138347625732422
    4. ')])' → logprob: -5.888347625732422
    5. ']' → logprob: -6.513347625732422
    6. ']))' → logprob: -8.138347625732422
    7. ')))' → logprob: -8.513347625732422
    8. ')]' → logprob: -8.638347625732422
    9. ' )' → logprob: -9.263347625732422
    10. ',' → logprob: -9.888347625732422

Token 262: 'iff' (ID: 4443)
  Prédit: 'ars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ars' → logprob: -1.1229438781738281
    2. 's' → logprob: -1.4979438781738281
    3. 'eurs' → logprob: -1.9979438781738281
    4. 'urs' → logprob: -2.247943878173828
    5. ']' → logprob: -2.997943878173828
    6. '])' → logprob: -3.622943878173828
    7. '_non' → logprob: -3.872943878173828
    8. 'ères' → logprob: -3.997943878173828
    9. ')' → logprob: -5.122943878173828
    10. 'ers' → logprob: -5.122943878173828

Token 263: 'res' (ID: 430)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2338544130325317
    2. 'ers' → logprob: -1.2338544130325317
    3. 'ts' → logprob: -1.3588544130325317
    4. 'rs' → logprob: -2.733854293823242
    5. 'eurs' → logprob: -4.108854293823242
    6. 'èrs' → logprob: -4.233854293823242
    7. 'ères' → logprob: -4.483854293823242
    8. 'res' → logprob: -4.858854293823242
    9. ']' → logprob: -4.983854293823242
    10. ')' → logprob: -5.733854293823242

Token 264: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.003548519918695092
    2. ')' → logprob: -6.753548622131348
    3. '])' → logprob: -7.128548622131348
    4. 'non' → logprob: -7.128548622131348
    5. ']' → logprob: -7.878548622131348
    6. ' non' → logprob: -9.753548622131348
    7. ')]' → logprob: -10.628548622131348
    8. ']_' → logprob: -10.628548622131348
    9. '_n' → logprob: -10.753548622131348
    10. '_' → logprob: -10.753548622131348

Token 265: '_n' (ID: 2170)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.17577673494815826
    2. '_n' → logprob: -2.050776720046997
    3. '])' → logprob: -3.925776720046997
    4. 's' → logprob: -5.300776958465576
    5. ']' → logprob: -5.925776958465576
    6. '_' → logprob: -7.300776958465576
    7. ')' → logprob: -7.300776958465576
    8. ']_' → logprob: -7.300776958465576
    9. 'non' → logprob: -7.550776958465576
    10. ']=' → logprob: -8.425776481628418

Token 266: 'uls' (ID: 13433)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.08129920810461044
    2. ')' → logprob: -2.956299304962158
    3. 's' → logprob: -4.331299304962158
    4. ']' → logprob: -4.581299304962158
    5. ']))' → logprob: -7.456299304962158
    6. '))' → logprob: -7.706299304962158
    7. ')])' → logprob: -8.206298828125
    8. 'uls' → logprob: -8.331298828125
    9. ')]' → logprob: -8.581298828125
    10. ''])' → logprob: -9.706298828125

Token 267: ' varie' (ID: 103216)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28889939188957214
    2. ')' → logprob: -1.4138994216918945
    3. ']' → logprob: -5.0388994216918945
    4. ')])' → logprob: -7.6638994216918945
    5. ']))' → logprob: -8.288899421691895
    6. '))' → logprob: -8.288899421691895
    7. ')]' → logprob: -8.913899421691895
    8. '])]' → logprob: -9.538899421691895
    9. ')))' → logprob: -11.163899421691895
    10. ' )' → logprob: -11.788899421691895

Token 268: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049091536551713943
    2. '])' → logprob: -4.174091339111328
    3. ',' → logprob: -4.424091339111328
    4. ']' → logprob: -4.549091339111328
    5. ')])' → logprob: -5.799091339111328
    6. ')]' → logprob: -6.549091339111328
    7. '(' → logprob: -6.674091339111328
    8. '(N' → logprob: -7.299091339111328
    9. ')
' → logprob: -7.799091339111328
    10. '),' → logprob: -7.799091339111328

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.328294038772583
    2. ' range' → logprob: -1.828294038772583
    3. 'range' → logprob: -2.453294038772583
    4. ')' → logprob: -4.953293800354004
    5. ' ' → logprob: -4.953293800354004
    6. ' K' → logprob: -5.203293800354004
    7. 'K' → logprob: -5.328293800354004
    8. '1' → logprob: -5.453293800354004
    9. ',' → logprob: -6.578293800354004
    10. '(' → logprob: -6.828293800354004

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004267428594175726
    2. 'range' → logprob: -8.500426292419434
    3. ' ' → logprob: -9.250426292419434
    4. 'K' → logprob: -9.625426292419434
    5. ' range' → logprob: -10.375426292419434
    6. '1' → logprob: -11.750426292419434
    7. '(' → logprob: -11.875426292419434
    8. ' K' → logprob: -12.125426292419434
    9. '[' → logprob: -12.750426292419434
    10. '   ' → logprob: -12.875426292419434

Token 271: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11636780202388763
    2. ')' → logprob: -2.366367816925049
    3. '])' → logprob: -5.116367816925049
    4. ',N' → logprob: -5.241367816925049
    5. '+' → logprob: -7.116367816925049
    6. ' ,' → logprob: -7.116367816925049
    7. ']' → logprob: -7.366367816925049
    8. '(N' → logprob: -7.616367816925049
    9. '))' → logprob: -7.866367816925049
    10. '),' → logprob: -7.866367816925049

Token 272: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.10023654252290726
    2. ' K' → logprob: -2.350236654281616
    3. ' ' → logprob: -11.225236892700195
    4. ' (' → logprob: -12.350236892700195
    5. '   ' → logprob: -12.600236892700195
    6. '(' → logprob: -12.850236892700195
    7. '(K' → logprob: -12.850236892700195
    8. ' ' → logprob: -13.975236892700195
    9. 'N' → logprob: -14.350236892700195
    10. ',K' → logprob: -14.600236892700195

Token 273: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0057511525228619576
    2. '))' → logprob: -5.255751132965088
    3. ')))' → logprob: -7.755751132965088
    4. '])' → logprob: -10.380751609802246
    5. ' )' → logprob: -10.505751609802246
    6. '   ' → logprob: -11.755751609802246
    7. ')])' → logprob: -12.380751609802246
    8. ']' → logprob: -12.505751609802246
    9. ')),' → logprob: -12.505751609802246
    10. '),' → logprob: -12.505751609802246

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035116916988044977
    2. ' ' → logprob: -6.003511905670166
    3. ')' → logprob: -6.878511905670166
    4. ' )' → logprob: -12.878511428833008
    5. ']' → logprob: -14.003511428833008
    6. '  ' → logprob: -14.003511428833008
    7. '0' → logprob: -14.378511428833008
    8. '```' → logprob: -15.628511428833008
    9. '   ' → logprob: -15.878511428833008
    10. '),' → logprob: -16.128511428833008

Token 275: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001602579141035676
    2. '))' → logprob: -6.501602649688721
    3. ')))' → logprob: -9.626602172851562
    4. '])' → logprob: -10.876602172851562
    5. '),' → logprob: -12.251602172851562
    6. ' )' → logprob: -12.626602172851562
    7. ']' → logprob: -13.126602172851562
    8. ')])' → logprob: -13.626602172851562
    9. '())' → logprob: -14.001602172851562
    10. '   ' → logprob: -14.251602172851562

Token 276: 'on' (ID: 263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021844390779733658
    2. '))' → logprob: -3.8968443870544434
    3. '])' → logprob: -6.896844387054443
    4. ')))' → logprob: -8.521844863891602
    5. ')])' → logprob: -10.021844863891602
    6. ' )' → logprob: -10.521844863891602
    7. ']' → logprob: -12.271844863891602
    8. ']))' → logprob: -12.396844863891602
    9. '),' → logprob: -12.521844863891602
    10. ')]' → logprob: -12.896844863891602

Token 277: ' utilise' (ID: 70283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005078637041151524
    2. '])' → logprob: -5.5050787925720215
    3. ']' → logprob: -7.5050787925720215
    4. ')])' → logprob: -8.380078315734863
    5. '))' → logprob: -9.130078315734863
    6. ')]' → logprob: -9.380078315734863
    7. ' )' → logprob: -11.880078315734863
    8. '):' → logprob: -12.755078315734863
    9. '])]' → logprob: -12.755078315734863
    10. ')))' → logprob: -12.880078315734863

Token 278: ' K' (ID: 658)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001346423290669918
    2. ',' → logprob: -7.751346588134766
    3. '),' → logprob: -8.251346588134766
    4. 'range' → logprob: -9.126346588134766
    5. '+' → logprob: -9.626346588134766
    6. '))' → logprob: -9.876346588134766
    7. ']' → logprob: -10.001346588134766
    8. '(' → logprob: -10.001346588134766
    9. ' ' → logprob: -10.126346588134766
    10. ')])' → logprob: -10.126346588134766

Token 279: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08140185475349426
    2. '))' → logprob: -2.581401824951172
    3. ')))' → logprob: -6.706401824951172
    4. '])' → logprob: -7.206401824951172
    5. ')])' → logprob: -8.331401824951172
    6. ']))' → logprob: -9.081401824951172
    7. ']' → logprob: -9.706401824951172
    8. ' )' → logprob: -10.206401824951172
    9. '   ' → logprob: -11.081401824951172
    10. '),' → logprob: -11.206401824951172

Token 280: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10490085184574127
    2. ')' → logprob: -2.47990083694458
    3. ')]' → logprob: -4.97990083694458
    4. ')])' → logprob: -5.35490083694458
    5. '])' → logprob: -6.35490083694458
    6. ']' → logprob: -6.85490083694458
    7. ' +' → logprob: -7.47990083694458
    8. '))' → logprob: -7.72990083694458
    9. '1' → logprob: -8.354901313781738
    10. '])]' → logprob: -9.854901313781738

Token 281: ' cases' (ID: 7911)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007745870854705572
    2. '))' → logprob: -4.882745742797852
    3. ')))' → logprob: -9.757745742797852
    4. ' )' → logprob: -10.507745742797852
    5. '])' → logprob: -10.632745742797852
    6. '()' → logprob: -11.632745742797852
    7. '),' → logprob: -11.757745742797852
    8. ')])' → logprob: -12.132745742797852
    9. ']' → logprob: -13.382745742797852
    10. ')),' → logprob: -13.882745742797852

Token 282: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12916700541973114
    2. '))' → logprob: -2.129167079925537
    3. ')))' → logprob: -6.879167079925537
    4. '])' → logprob: -7.504167079925537
    5. '),' → logprob: -8.379166603088379
    6. ' )' → logprob: -8.504166603088379
    7. ')),' → logprob: -9.504166603088379
    8. ')])' → logprob: -10.129166603088379
    9. '   ' → logprob: -10.379166603088379
    10. ']))' → logprob: -10.629166603088379

Token 283: ' être' (ID: 9104)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002952978014945984
    2. '))' → logprob: -6.127953052520752
    3. 'range' → logprob: -8.002952575683594
    4. ' )' → logprob: -9.502952575683594
    5. ')))' → logprob: -9.627952575683594
    6. '+' → logprob: -9.877952575683594
    7. ' range' → logprob: -9.877952575683594
    8. ']' → logprob: -10.377952575683594
    9. '   ' → logprob: -10.752952575683594
    10. ')])' → logprob: -11.002952575683594

Token 284: ' sûr' (ID: 46415)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008934571407735348
    2. 'range' → logprob: -5.008934497833252
    3. '))' → logprob: -6.383934497833252
    4. ' range' → logprob: -8.50893497467041
    5. '(range' → logprob: -9.75893497467041
    6. '+' → logprob: -10.00893497467041
    7. ']' → logprob: -10.00893497467041
    8. 'size' → logprob: -10.50893497467041
    9. ')]' → logprob: -10.50893497467041
    10. ',' → logprob: -10.88393497467041

Token 285: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013042924925684929
    2. '))' → logprob: -4.38804292678833
    3. ')))' → logprob: -7.76304292678833
    4. ' )' → logprob: -10.638042449951172
    5. ')),' → logprob: -10.763042449951172
    6. '])' → logprob: -10.888042449951172
    7. '),' → logprob: -11.638042449951172
    8. ']' → logprob: -11.638042449951172
    9. ')])' → logprob: -11.763042449951172
    10. ')]' → logprob: -11.888042449951172

Token 286: ' ne' (ID: 453)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002526672324165702
    2. 'range' → logprob: -6.502526760101318
    3. ']' → logprob: -8.37752628326416
    4. ' range' → logprob: -8.50252628326416
    5. '))' → logprob: -9.12752628326416
    6. '):' → logprob: -9.25252628326416
    7. '])' → logprob: -9.50252628326416
    8. '```' → logprob: -10.12752628326416
    9. '   ' → logprob: -10.25252628326416
    10. ')]' → logprob: -10.25252628326416

Token 287: ' jamais' (ID: 23077)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022225473076105118
    2. ']' → logprob: -3.8972253799438477
    3. '])' → logprob: -7.147225379943848
    4. ')]' → logprob: -7.522225379943848
    5. '_' → logprob: -9.147225379943848
    6. ')])' → logprob: -9.772225379943848
    7. ',' → logprob: -10.397225379943848
    8. '+' → logprob: -10.897225379943848
    9. '))' → logprob: -11.022225379943848
    10. '(' → logprob: -11.272225379943848

Token 288: ' dépasser' (ID: 187375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015957956202328205
    2. '))' → logprob: -6.501595973968506
    3. ')))' → logprob: -10.376595497131348
    4. 'range' → logprob: -11.751595497131348
    5. '()' → logprob: -11.876595497131348
    6. ')])' → logprob: -11.876595497131348
    7. ' )' → logprob: -11.876595497131348
    8. '   ' → logprob: -12.001595497131348
    9. '])' → logprob: -12.376595497131348
    10. ']' → logprob: -12.501595497131348

Token 289: ' K' (ID: 658)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018530333414673805
    2. '))' → logprob: -4.268530368804932
    3. '])' → logprob: -6.018530368804932
    4. ')))' → logprob: -7.268530368804932
    5. ')])' → logprob: -7.643530368804932
    6. '),' → logprob: -8.018529891967773
    7. '(N' → logprob: -8.893529891967773
    8. ']))' → logprob: -9.643529891967773
    9. ']' → logprob: -10.018529891967773
    10. ' )' → logprob: -10.143529891967773

Token 290: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0809195414185524
    2. '))' → logprob: -2.7059195041656494
    3. '])' → logprob: -4.7059197425842285
    4. ')))' → logprob: -7.3309197425842285
    5. ')])' → logprob: -7.4559197425842285
    6. ']))' → logprob: -7.8309197425842285
    7. ']' → logprob: -9.08091926574707
    8. ' )' → logprob: -10.08091926574707
    9. ')]' → logprob: -10.33091926574707
    10. '),' → logprob: -11.20591926574707

Token 291: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012721656821668148
    2. '+' → logprob: -4.512721538543701
    3. '])' → logprob: -7.262721538543701
    4. '))' → logprob: -8.01272201538086
    5. ']' → logprob: -8.26272201538086
    6. ')])' → logprob: -8.38772201538086
    7. ')]' → logprob: -9.51272201538086
    8. '-' → logprob: -11.38772201538086
    9. ' )' → logprob: -11.76272201538086
    10. '),' → logprob: -11.76272201538086

Token 292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06433743983507156
    2. '))' → logprob: -2.8143374919891357
    3. ')))' → logprob: -6.814337253570557
    4. '])' → logprob: -7.064337253570557
    5. ')])' → logprob: -8.689337730407715
    6. ' )' → logprob: -9.189337730407715
    7. ']))' → logprob: -9.939337730407715
    8. '),' → logprob: -10.314337730407715
    9. ']' → logprob: -10.564337730407715
    10. ')]' → logprob: -11.689337730407715

Token 293: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036246657837182283
    2. '))' → logprob: -5.753624439239502
    3. ')))' → logprob: -7.753624439239502
    4. '   ' → logprob: -11.87862491607666
    5. ' )' → logprob: -12.12862491607666
    6. '),' → logprob: -13.25362491607666
    7. '))))' → logprob: -14.25362491607666
    8. '])' → logprob: -14.37862491607666
    9. ')),' → logprob: -14.50362491607666
    10. ')])' → logprob: -14.75362491607666

Token 294: ' dp' (ID: 21546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12812039256095886
    2. '))' → logprob: -2.1281204223632812
    3. ')))' → logprob: -6.753120422363281
    4. ')),' → logprob: -11.753120422363281
    5. '   ' → logprob: -12.128120422363281
    6. '),' → logprob: -12.503120422363281
    7. ' )' → logprob: -12.628120422363281
    8. '))))' → logprob: -14.128120422363281
    9. '));' → logprob: -14.253120422363281
    10. ' ))' → logprob: -14.503120422363281

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006062463391572237
    2. '=' → logprob: -5.1310625076293945
    3. '=[' → logprob: -10.006062507629395
    4. ')' → logprob: -10.631062507629395
    5. ']' → logprob: -11.006062507629395
    6. '[' → logprob: -11.256062507629395
    7. ' ' → logprob: -11.256062507629395
    8. '   ' → logprob: -11.631062507629395
    9. ' =[' → logprob: -12.006062507629395
    10. '=[[' → logprob: -12.756062507629395

Token 296: ' [[[' (ID: 121934)
  Prédit: ' [[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[[' → logprob: -0.2551943361759186
    2. '[[' → logprob: -1.5051943063735962
    3. ' [[' → logprob: -5.755194187164307
    4. '[' → logprob: -9.755194664001465
    5. ' [' → logprob: -10.255194664001465
    6. ' ' → logprob: -15.255194664001465
    7. '  ' → logprob: -15.880194664001465
    8. '   ' → logprob: -18.13019371032715
    9. '[int' → logprob: -18.50519371032715
    10. '[m' → logprob: -18.88019371032715

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '[' → logprob: -15.125000953674316
    4. '-' → logprob: -16.625
    5. '
' → logprob: -18.125
    6. 'False' → logprob: -18.25
    7. '(' → logprob: -19.375
    8. '

' → logprob: -19.625
    9. 'None' → logprob: -19.625
    10. '{' → logprob: -19.75

Token 298: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5803449749946594
    2. 'for' → logprob: -0.8303449749946594
    3. ']' → logprob: -5.455345153808594
    4. ')' → logprob: -9.830345153808594
    5. ']*' → logprob: -10.330345153808594
    6. ' ' → logprob: -10.830345153808594
    7. '   ' → logprob: -12.205345153808594
    8. '	for' → logprob: -12.705345153808594
    9. ',' → logprob: -12.830345153808594
    10. ']*(' → logprob: -13.455345153808594

Token 299: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001872094871941954
    2. '(K' → logprob: -8.625186920166016
    3. ' K' → logprob: -12.125186920166016
    4. '   ' → logprob: -13.750186920166016
    5. ' (' → logprob: -14.750186920166016
    6. '(' → logprob: -14.750186920166016
    7. ' ' → logprob: -15.500186920166016
    8. '  ' → logprob: -17.500186920166016
    9. '     ' → logprob: -17.500186920166016
    10. '
' → logprob: -17.750186920166016

Token 300: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.1689596148207784e-05
    2. ' +' → logprob: -9.875051498413086
    3. '+
' → logprob: -17.000051498413086
    4. '＋' → logprob: -18.125051498413086
    5. '2' → logprob: -18.625051498413086
    6. ' ' → logprob: -18.750051498413086
    7. 'plus' → logprob: -20.000051498413086
    8. ' plus' → logprob: -20.125051498413086
    9. '   ' → logprob: -20.250051498413086
    10. '+k' → logprob: -20.250051498413086

Token 301: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000317231344524771
    2. '3' → logprob: -8.125317573547363
    3. ' ' → logprob: -10.875317573547363
    4. '   ' → logprob: -13.625317573547363
    5. '
' → logprob: -14.625317573547363
    6. '  ' → logprob: -15.875317573547363
    7. '```' → logprob: -16.000316619873047
    8. '

' → logprob: -16.812816619873047
    9. '     ' → logprob: -16.812816619873047
    10. '
' → logprob: -16.875316619873047

Token 302: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003377270477358252
    2. ' )' → logprob: -8.000337600708008
    3. ')
' → logprob: -14.375337600708008
    4. '   ' → logprob: -14.875337600708008
    5. ']' → logprob: -15.000337600708008
    6. '))' → logprob: -15.375337600708008
    7. 'for' → logprob: -15.625337600708008
    8. ' ' → logprob: -15.625337600708008
    9. ')]' → logprob: -15.625337600708008
    10. '[' → logprob: -16.625337600708008

Token 303: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11346668750047684
    2. 'for' → logprob: -2.238466739654541
    3. ')' → logprob: -8.363466262817383
    4. ']' → logprob: -8.488466262817383
    5. '   ' → logprob: -9.238466262817383
    6. '	for' → logprob: -9.988466262817383
    7. ' ' → logprob: -11.113466262817383
    8. '       ' → logprob: -11.363466262817383
    9. '    ' → logprob: -11.988466262817383
    10. '           ' → logprob: -12.113466262817383

Token 304: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.23444710671901703
    2. ' range' → logprob: -2.1094470024108887
    3. '_' → logprob: -2.4844470024108887
    4. '<|end|>' → logprob: -5.984447002410889
    5. 'range' → logprob: -7.859447002410889
    6. ' ' → logprob: -7.859447002410889
    7. '_range' → logprob: -8.484447479248047
    8. ' i' → logprob: -8.609447479248047
    9. ' True' → logprob: -8.859447479248047
    10. ' (' → logprob: -9.234447479248047

Token 305: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16051098704338074
    2. ' in' → logprob: -1.9105110168457031
    3. 'range' → logprob: -8.785511016845703
    4. '(' → logprob: -9.285511016845703
    5. '<|end|>' → logprob: -12.160511016845703
    6. ' range' → logprob: -12.410511016845703
    7. '_' → logprob: -12.535511016845703
    8. ')' → logprob: -12.660511016845703
    9. '=' → logprob: -12.660511016845703
    10. '[' → logprob: -12.910511016845703

Token 306: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018156616017222404
    2. ' range' → logprob: -4.0181565284729
    3. '(range' → logprob: -12.018157005310059
    4. '   ' → logprob: -15.018157005310059
    5. '(N' → logprob: -15.643157005310059
    6. '    ' → logprob: -16.518156051635742
    7. '	range' → logprob: -17.393156051635742
    8. ' ' → logprob: -17.393156051635742
    9. '[N' → logprob: -17.893156051635742
    10. 'rang' → logprob: -18.268156051635742

Token 307: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05532655864953995
    2. '(N' → logprob: -2.930326461791992
    3. '((' → logprob: -8.430326461791992
    4. '2' → logprob: -8.805326461791992
    5. ' (' → logprob: -9.680326461791992
    6. '(n' → logprob: -12.055326461791992
    7. 'N' → logprob: -13.305326461791992
    8. ' ' → logprob: -13.680326461791992
    9. '(
' → logprob: -13.680326461791992
    10. '   ' → logprob: -14.055326461791992

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009676800691522658
    2. 'N' → logprob: -7.250967502593994
    3. '(N' → logprob: -9.250967979431152
    4. ' ' → logprob: -9.375967979431152
    5. '(' → logprob: -10.250967979431152
    6. '   ' → logprob: -10.375967979431152
    7. ' N' → logprob: -12.500967979431152
    8. '3' → logprob: -12.625967979431152
    9. '    ' → logprob: -14.250967979431152
    10. '1' → logprob: -14.250967979431152

Token 309: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003183041699230671
    2. ')' → logprob: -8.62531852722168
    3. ' )' → logprob: -9.12531852722168
    4. ']' → logprob: -11.12531852722168
    5. ' ]' → logprob: -11.87531852722168
    6. '   ' → logprob: -12.75031852722168
    7. ')][' → logprob: -14.00031852722168
    8. '))' → logprob: -14.12531852722168
    9. '+' → logprob: -14.37531852722168
    10. '])' → logprob: -14.62531852722168

Token 310: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007972124963998795
    2. 'for' → logprob: -5.632972240447998
    3. ']' → logprob: -5.882972240447998
    4. '   ' → logprob: -6.882972240447998
    5. ' ]' → logprob: -8.63297176361084
    6. '    ' → logprob: -8.75797176361084
    7. '	for' → logprob: -10.00797176361084
    8. '        ' → logprob: -10.00797176361084
    9. '       ' → logprob: -10.13297176361084
    10. ' ' → logprob: -10.38297176361084

Token 311: ' n' (ID: 297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018459182232618332
    2. 'range' → logprob: -4.018459320068359
    3. '(range' → logprob: -8.26845932006836
    4. '_' → logprob: -10.01845932006836
    5. ' _' → logprob: -12.39345932006836
    6. '_range' → logprob: -13.26845932006836
    7. ' in' → logprob: -13.26845932006836
    8. '	range' → logprob: -15.76845932006836
    9. '(N' → logprob: -16.01845932006836
    10. ' (' → logprob: -16.64345932006836

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47415462136268616
    2. 'in' → logprob: -0.9741545915603638
    3. 'range' → logprob: -10.599154472351074
    4. 'n' → logprob: -10.974154472351074
    5. '(n' → logprob: -11.724154472351074
    6. '(N' → logprob: -11.974154472351074
    7. '_in' → logprob: -12.099154472351074
    8. '_' → logprob: -12.849154472351074
    9. ' ' → logprob: -12.849154472351074
    10. ' range' → logprob: -13.349154472351074

Token 313: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1274832934141159
    2. ' range' → logprob: -2.127483367919922
    3. '(range' → logprob: -7.502483367919922
    4. '(N' → logprob: -13.502483367919922
    5. '   ' → logprob: -13.877483367919922
    6. ' ' → logprob: -14.627483367919922
    7. '	range' → logprob: -15.377483367919922
    8. '  ' → logprob: -15.877483367919922
    9. '_range' → logprob: -16.377483367919922
    10. '(' → logprob: -17.627483367919922

Token 314: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00021224225929472595
    2. ' (' → logprob: -8.750212669372559
    3. '(' → logprob: -10.000212669372559
    4. '   ' → logprob: -12.500212669372559
    5. 'N' → logprob: -13.000212669372559
    6. ' N' → logprob: -13.750212669372559
    7. '(n' → logprob: -14.000212669372559
    8. '((' → logprob: -15.750212669372559
    9. '	N' → logprob: -16.500211715698242
    10. ' ' → logprob: -16.625211715698242

Token 315: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.896309739408025e-07
    2. '_len' → logprob: -14.750000953674316
    3. 'en' → logprob: -15.750000953674316
    4. ')]' → logprob: -16.25
    5. 'Len' → logprob: -17.5
    6. ' len' → logprob: -17.75
    7. '(len' → logprob: -18.25
    8. '	len' → logprob: -18.25
    9. 'leni' → logprob: -18.625
    10. ')' → logprob: -18.75

Token 316: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.908022285439074e-05
    2. '+' → logprob: -9.875059127807617
    3. ')])' → logprob: -12.875059127807617
    4. ']' → logprob: -13.375059127807617
    5. ')' → logprob: -14.000059127807617
    6. ' )' → logprob: -14.125059127807617
    7. ')],' → logprob: -14.250059127807617
    8. '])]' → logprob: -14.375059127807617
    9. '])' → logprob: -15.375059127807617
    10. '))' → logprob: -15.750059127807617

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.50000286102295
    4. '```' → logprob: -17.500001907348633
    5. ')' → logprob: -18.125001907348633
    6. '  ' → logprob: -19.500001907348633
    7. '+' → logprob: -19.875001907348633
    8. '１' → logprob: -20.125001907348633
    9. '2' → logprob: -20.375001907348633
    10. '``' → logprob: -20.750001907348633

Token 318: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.027225754223764e-05
    2. ')' → logprob: -10.500060081481934
    3. ')])' → logprob: -10.625060081481934
    4. '])]' → logprob: -12.750060081481934
    5. ']' → logprob: -12.875060081481934
    6. '])' → logprob: -13.625060081481934
    7. '))' → logprob: -13.875060081481934
    8. ')],' → logprob: -14.875060081481934
    9. ' )' → logprob: -15.625060081481934
    10. '   ' → logprob: -16.37506103515625

Token 319: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043203337118029594
    2. '))' → logprob: -5.50432014465332
    3. ')))' → logprob: -8.50432014465332
    4. ' )' → logprob: -10.25432014465332
    5. '   ' → logprob: -13.37932014465332
    6. '),' → logprob: -14.37932014465332
    7. '])' → logprob: -14.62932014465332
    8. ')])' → logprob: -15.25432014465332
    9. '))))' → logprob: -15.75432014465332
    10. ')`' → logprob: -15.75432014465332

Token 320: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032342751510441303
    2. '))' → logprob: -5.753234386444092
    3. ')))' → logprob: -10.378233909606934
    4. ' )' → logprob: -10.628233909606934
    5. '])' → logprob: -15.003233909606934
    6. '),' → logprob: -15.503233909606934
    7. ')}' → logprob: -16.00323486328125
    8. ']' → logprob: -16.00323486328125
    9. ')`' → logprob: -16.12823486328125
    10. ' ))' → logprob: -16.25323486328125

Token 321: ' On' (ID: 2160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001987163443118334
    2. '))' → logprob: -6.251986980438232
    3. ')))' → logprob: -9.87698745727539
    4. ' )' → logprob: -12.62698745727539
    5. '),' → logprob: -12.87698745727539
    6. ')),' → logprob: -14.75198745727539
    7. ')
' → logprob: -15.62698745727539
    8. '))))' → logprob: -16.00198745727539
    9. ').' → logprob: -16.50198745727539
    10. ')`' → logprob: -16.62698745727539

Token 322: ' initialise' (ID: 145250)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025611496530473232
    2. ' )' → logprob: -6.252561092376709
    3. ']' → logprob: -7.752561092376709
    4. 'def' → logprob: -10.002561569213867
    5. '])' → logprob: -10.502561569213867
    6. ' ' → logprob: -10.752561569213867
    7. '   ' → logprob: -10.752561569213867
    8. ')
' → logprob: -11.002561569213867
    9. 'for' → logprob: -11.877561569213867
    10. ' N' → logprob: -12.002561569213867

Token 323: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49245843291282654
    2. '[' → logprob: -1.117458462715149
    3. ' dp' → logprob: -2.8674583435058594
    4. '   ' → logprob: -6.117458343505859
    5. '(dp' → logprob: -6.992458343505859
    6. '[N' → logprob: -7.492458343505859
    7. ' [' → logprob: -7.492458343505859
    8. '_dp' → logprob: -8.24245834350586
    9. '][' → logprob: -8.86745834350586
    10. '	dp' → logprob: -9.36745834350586

Token 324: ''état' (ID: 116357)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029229186475276947
    2. 'dp' → logprob: -3.779229164123535
    3. ' [' → logprob: -5.529229164123535
    4. ' dp' → logprob: -6.529229164123535
    5. '[N' → logprob: -8.279229164123535
    6. '_dp' → logprob: -8.529229164123535
    7. '   ' → logprob: -11.404229164123535
    8. ' ' → logprob: -11.654229164123535
    9. 'def' → logprob: -12.029229164123535
    10. '_' → logprob: -12.154229164123535

Token 325: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00820153672248125
    2. 'dp' → logprob: -5.008201599121094
    3. ' [' → logprob: -7.008201599121094
    4. ' dp' → logprob: -7.508201599121094
    5. '   ' → logprob: -11.258201599121094
    6. '][' → logprob: -11.758201599121094
    7. '_dp' → logprob: -12.633201599121094
    8. '0' → logprob: -13.383201599121094
    9. 's' → logprob: -13.758201599121094
    10. '	dp' → logprob: -13.883201599121094

Token 326: ' départ' (ID: 32693)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5051637887954712
    2. '0' → logprob: -1.5051637887954712
    3. ' dp' → logprob: -2.8801636695861816
    4. ' la' → logprob: -3.0051636695861816
    5. ' ' → logprob: -3.7551636695861816
    6. 'l' → logprob: -4.005163669586182
    7. '[' → logprob: -4.380163669586182
    8. ' départ' → logprob: -4.755163669586182
    9. ' l' → logprob: -6.255163669586182
    10. 'la' → logprob: -6.630163669586182

Token 327: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5828309059143066
    2. 'dp' → logprob: -1.0828309059143066
    3. ']' → logprob: -2.8328309059143066
    4. '   ' → logprob: -3.9578309059143066
    5. '][' → logprob: -4.332830905914307
    6. ' dp' → logprob: -4.707830905914307
    7. '_dp' → logprob: -7.332830905914307
    8. ']
' → logprob: -7.832830905914307
    9. '(dp' → logprob: -8.207830429077148
    10. '
' → logprob: -8.457830429077148

Token 328: ' où' (ID: 15113)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25325095653533936
    2. ' dp' → logprob: -1.5032509565353394
    3. '[' → logprob: -7.753251075744629
    4. '   ' → logprob: -8.503251075744629
    5. '
' → logprob: -8.753251075744629
    6. '    ' → logprob: -9.503251075744629
    7. ']' → logprob: -9.503251075744629
    8. ')' → logprob: -9.503251075744629
    9. ' 
' → logprob: -10.003251075744629
    10. ' ' → logprob: -10.003251075744629

Token 329: ' aucun' (ID: 41678)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3521224856376648
    2. 'dp' → logprob: -1.2271225452423096
    3. ' on' → logprob: -6.3521223068237305
    4. ' ' → logprob: -7.7271223068237305
    5. ' la' → logprob: -8.10212230682373
    6. ' position' → logprob: -8.47712230682373
    7. '[' → logprob: -8.47712230682373
    8. ' le' → logprob: -8.60212230682373
    9. 'position' → logprob: -8.85212230682373
    10. '   ' → logprob: -9.97712230682373

Token 330: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -0.802119255065918
    2. 'ch' → logprob: -1.927119255065918
    3. ' caractère' → logprob: -2.302119255065918
    4. 'digit' → logprob: -3.052119255065918
    5. 'n' → logprob: -3.427119255065918
    6. 'd' → logprob: -3.552119255065918
    7. ' ' → logprob: -3.677119255065918
    8. '_' → logprob: -3.677119255065918
    9. '_ch' → logprob: -4.177119255065918
    10. ' espace' → logprob: -4.177119255065918

Token 331: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7030296921730042
    2. ' n' → logprob: -0.8280296921730042
    3. ' choisi' → logprob: -3.4530296325683594
    4. ']' → logprob: -4.328029632568359
    5. ')' → logprob: -4.828029632568359
    6. ' a' → logprob: -6.078029632568359
    7. 'a' → logprob: -6.453029632568359
    8. ' placé' → logprob: -6.453029632568359
    9. ',' → logprob: -7.078029632568359
    10. 'dep' → logprob: -7.328029632568359

Token 332: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09841886907815933
    2. ''a' → logprob: -2.723418951034546
    3. ''est' → logprob: -4.098418712615967
    4. '_' → logprob: -5.473418712615967
    5. ''' → logprob: -5.723418712615967
    6. 'n' → logprob: -6.598418712615967
    7. ''ai' → logprob: -7.723418712615967
    8. ''ont' → logprob: -7.723418712615967
    9. ']' → logprob: -8.973419189453125
    10. '_a' → logprob: -9.098419189453125

Token 333: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.3620710074901581
    2. ' été' → logprob: -1.2370710372924805
    3. ' encore' → logprob: -5.1120710372924805
    4. '_' → logprob: -5.6120710372924805
    5. 'pas' → logprob: -6.3620710372924805
    6. ' pas' → logprob: -7.6120710372924805
    7. 't' → logprob: -7.7370710372924805
    8. 'être' → logprob: -8.48707103729248
    9. 'dé' → logprob: -8.48707103729248
    10. 'ét' → logprob: -8.86207103729248

Token 334: ' choisi' (ID: 77245)
  Prédit: ' placé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placé' → logprob: -0.673401415348053
    2. ' choisi' → logprob: -1.0484013557434082
    3. 'cho' → logprob: -3.298401355743408
    4. ' posé' → logprob: -3.673401355743408
    5. ' fixé' → logprob: -3.798401355743408
    6. 'posé' → logprob: -4.173401355743408
    7. ' traité' → logprob: -4.548401355743408
    8. ' pris' → logprob: -5.298401355743408
    9. 'trait' → logprob: -5.548401355743408
    10. ' rempli' → logprob: -5.673401355743408

Token 335: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.586478590965271
    2. ']' → logprob: -1.461478590965271
    3. '[' → logprob: -1.961478590965271
    4. 'dp' → logprob: -3.0864787101745605
    5. '   ' → logprob: -4.4614787101745605
    6. ']
' → logprob: -5.2114787101745605
    7. ' ][' → logprob: -5.3364787101745605
    8. ' dp' → logprob: -6.0864787101745605
    9. ' ]' → logprob: -7.5864787101745605
    10. '
' → logprob: -8.961478233337402

Token 336: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4726458787918091
    2. ' dp' → logprob: -1.097645878791809
    3. '[' → logprob: -4.5976457595825195
    4. ')' → logprob: -4.5976457595825195
    5. '    ' → logprob: -5.0976457595825195
    6. ']' → logprob: -5.5976457595825195
    7. '   ' → logprob: -6.0976457595825195
    8. ' ]' → logprob: -6.0976457595825195
    9. ' ' → logprob: -6.3476457595825195
    10. ' )' → logprob: -6.8476457595825195

Token 337: ' nombre' (ID: 9733)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5214743614196777
    2. ' est' → logprob: -2.0214743614196777
    3. 'position' → logprob: -2.6464743614196777
    4. 'nombre' → logprob: -2.7714743614196777
    5. 'dp' → logprob: -3.1464743614196777
    6. ' nombre' → logprob: -3.7714743614196777
    7. ' position' → logprob: -4.146474361419678
    8. 'pos' → logprob: -5.021474361419678
    9. '0' → logprob: -5.146474361419678
    10. 'plus' → logprob: -5.396474361419678

Token 338: ' form' (ID: 1625)
  Prédit: ' construit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' construit' → logprob: -0.4199216365814209
    2. ' choisi' → logprob: -2.419921636581421
    3. '_' → logprob: -2.669921636581421
    4. ' de' → logprob: -3.544921636581421
    5. '_con' → logprob: -3.794921636581421
    6. ' est' → logprob: -4.044921875
    7. '_construct' → logprob: -4.544921875
    8. ' n' → logprob: -4.669921875
    9. '   ' → logprob: -4.794921875
    10. ']' → logprob: -4.919921875

Token 339: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0057062203995883465
    2. 'ed' → logprob: -5.630706310272217
    3. 'ée' → logprob: -6.380706310272217
    4. 'e' → logprob: -8.005705833435059
    5. '   ' → logprob: -10.505705833435059
    6. 'è' → logprob: -12.255705833435059
    7. '=' → logprob: -12.255705833435059
    8. '[' → logprob: -12.380705833435059
    9. 'éd' → logprob: -12.380705833435059
    10. 'és' → logprob: -12.505705833435059

Token 340: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4861610233783722
    2. ',' → logprob: -1.6111609935760498
    3. ' )' → logprob: -2.73616099357605
    4. ' ,' → logprob: -3.36116099357605
    5. '=' → logprob: -3.61116099357605
    6. ' =' → logprob: -3.98616099357605
    7. ')==' → logprob: -4.736161231994629
    8. ' ==' → logprob: -4.861161231994629
    9. ' ' → logprob: -4.861161231994629
    10. ' est' → logprob: -5.736161231994629

Token 341: ' exactement' (ID: 108701)
  Prédit: ' toujours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toujours' → logprob: -0.1815275251865387
    2. ' égal' → logprob: -2.056527614593506
    3. ' strict' → logprob: -3.806527614593506
    4. 'strict' → logprob: -5.681527614593506
    5. ' exactement' → logprob: -5.806527614593506
    6. ' encore' → logprob: -5.931527614593506
    7. 'tou' → logprob: -6.556527614593506
    8. 'exact' → logprob: -7.056527614593506
    9. ' jusqu' → logprob: -7.056527614593506
    10. ' exact' → logprob: -7.181527614593506

Token 342: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31271591782569885
    2. ' égal' → logprob: -1.5627158880233765
    3. ' ég' → logprob: -3.687716007232666
    4. '=' → logprob: -5.187716007232666
    5. 'égal' → logprob: -5.312716007232666
    6. '1' → logprob: -5.687716007232666
    7. ' =' → logprob: -5.687716007232666
    8. 'equal' → logprob: -5.937716007232666
    9. '[' → logprob: -6.187716007232666
    10. ' à' → logprob: -6.187716007232666

Token 343: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.022834135219454765
    2. 'à' → logprob: -4.522834300994873
    3. ' au' → logprob: -4.772834300994873
    4. ' to' → logprob: -6.897834300994873
    5. ' ' → logprob: -7.147834300994873
    6. '   ' → logprob: -7.522834300994873
    7. 'au' → logprob: -7.897834300994873
    8. ')' → logprob: -8.897833824157715
    9. '0' → logprob: -9.147833824157715
    10. ',' → logprob: -10.022833824157715

Token 344: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10485340654850006
    2. ' N' → logprob: -2.354853391647339
    3. '0' → logprob: -5.729853630065918
    4. ' ' → logprob: -6.729853630065918
    5. '[N' → logprob: -9.729853630065918
    6. '	N' → logprob: -9.979853630065918
    7. 'len' → logprob: -11.229853630065918
    8. '   ' → logprob: -11.229853630065918
    9. '[' → logprob: -11.354853630065918
    10. '"N' → logprob: -11.854853630065918

Token 345: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.025149963796138763
    2. '[' → logprob: -3.9001500606536865
    3. '   ' → logprob: -6.525149822235107
    4. ']' → logprob: -6.650149822235107
    5. ' ][' → logprob: -6.650149822235107
    6. ')][' → logprob: -8.525150299072266
    7. 'dp' → logprob: -8.900150299072266
    8. ']
' → logprob: -9.775150299072266
    9. ']][' → logprob: -10.400150299072266
    10. ',' → logprob: -10.775150299072266

Token 346: ' 
' (ID: 793)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6009637713432312
    2. 'dp' → logprob: -0.9759637713432312
    3. '   ' → logprob: -3.850963830947876
    4. ',' → logprob: -3.975963830947876
    5. '    ' → logprob: -4.225963592529297
    6. '[' → logprob: -5.475963592529297
    7. ' and' → logprob: -5.850963592529297
    8. ' ' → logprob: -5.975963592529297
    9. ' ,' → logprob: -6.350963592529297
    10. ' ][' → logprob: -6.850963592529297

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949540913105011
    2. 'dp' → logprob: -1.6699540615081787
    3. '[' → logprob: -3.9199540615081787
    4. ' dp' → logprob: -4.294954299926758
    5. ',' → logprob: -4.419954299926758
    6. ')' → logprob: -4.794954299926758
    7. ']' → logprob: -5.169954299926758
    8. '][' → logprob: -5.669954299926758
    9. ' ][' → logprob: -7.044954299926758
    10. ' ,' → logprob: -7.169954299926758

Token 348: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.806621789932251
    2. ' et' → logprob: -1.431621789932251
    3. ' dp' → logprob: -1.806621789932251
    4. '   ' → logprob: -2.181621789932251
    5. '[' → logprob: -4.556621551513672
    6. ' and' → logprob: -4.681621551513672
    7. 'et' → logprob: -5.056621551513672
    8. ',' → logprob: -5.431621551513672
    9. '    ' → logprob: -6.431621551513672
    10. ' ' → logprob: -6.556621551513672

Token 349: ' et' (ID: 859)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6542501449584961
    2. 'dp' → logprob: -0.7792501449584961
    3. ' et' → logprob: -4.779250144958496
    4. '   ' → logprob: -5.029250144958496
    5. 'et' → logprob: -6.654250144958496
    6. '    ' → logprob: -6.779250144958496
    7. ' ' → logprob: -7.279250144958496
    8. '0' → logprob: -7.654250144958496
    9. ',' → logprob: -7.779250144958496
    10. ' donc' → logprob: -7.779250144958496

Token 350: ' on' (ID: 402)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2658403813838959
    2. 'le' → logprob: -2.0158402919769287
    3. 'dp' → logprob: -2.8908402919769287
    4. ' dp' → logprob: -3.8908402919769287
    5. ' on' → logprob: -4.390840530395508
    6. '0' → logprob: -5.265840530395508
    7. ' ' → logprob: -6.515840530395508
    8. 'comp' → logprob: -6.765840530395508
    9. ' the' → logprob: -7.265840530395508
    10. ' la' → logprob: -7.765840530395508

Token 351: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5827168822288513
    2. ' n' → logprob: -1.707716941833496
    3. ' continue' → logprob: -1.957716941833496
    4. 'n' → logprob: -3.707716941833496
    5. ' commence' → logprob: -3.957716941833496
    6. 'a' → logprob: -4.332716941833496
    7. ' chois' → logprob: -4.582716941833496
    8. ' met' → logprob: -4.707716941833496
    9. 'continue' → logprob: -4.707716941833496
    10. ' have' → logprob: -4.957716941833496

Token 352: ' ' (ID: 220)
  Prédit: ' choisi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisi' → logprob: -0.03693871200084686
    2. ' ' → logprob: -3.9119386672973633
    3. ' chois' → logprob: -5.536938667297363
    4. '0' → logprob: -6.286938667297363
    5. ' cho' → logprob: -6.536938667297363
    6. ' rempli' → logprob: -6.911938667297363
    7. '[' → logprob: -7.036938667297363
    8. ' chosen' → logprob: -7.286938667297363
    9. 'cho' → logprob: -7.536938667297363
    10. 'chosen' → logprob: -7.536938667297363

Token 353: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41222912073135376
    2. '0' → logprob: -1.162229061126709
    3. 'cho' → logprob: -4.162229061126709
    4. 'comp' → logprob: -5.537229061126709
    5. ' dp' → logprob: -5.662229061126709
    6. ' choisi' → logprob: -6.787229061126709
    7. ' ' → logprob: -7.537229061126709
    8. 'chosen' → logprob: -8.912229537963867
    9. '[' → logprob: -10.162229537963867
    10. '1' → logprob: -10.787229537963867

Token 354: ' chiffre' (ID: 107420)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.8653779029846191
    2. ' chiffres' → logprob: -0.9903779029846191
    3. ' de' → logprob: -2.615377902984619
    4. 'de' → logprob: -3.740377902984619
    5. ' digits' → logprob: -3.740377902984619
    6. 'non' → logprob: -3.740377902984619
    7. 'digits' → logprob: -3.865377902984619
    8. '_non' → logprob: -4.115377902984619
    9. ' chiffre' → logprob: -5.490377902984619
    10. 'ch' → logprob: -5.615377902984619

Token 355: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.7287935614585876
    2. '_non' → logprob: -1.1037936210632324
    3. 'non' → logprob: -1.7287936210632324
    4. 's' → logprob: -5.978793621063232
    5. '_n' → logprob: -5.978793621063232
    6. 'nonnull' → logprob: -6.728793621063232
    7. 'n' → logprob: -7.603793621063232
    8. '   ' → logprob: -7.728793621063232
    9. ' ' → logprob: -8.103793144226074
    10. ' choisi' → logprob: -8.228793144226074

Token 356: ' nul' (ID: 64435)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5947585701942444
    2. 'nul' → logprob: -1.5947585105895996
    3. '_n' → logprob: -1.9697585105895996
    4. ' n' → logprob: -2.9697585105895996
    5. ' nul' → logprob: -2.9697585105895996
    6. 'null' → logprob: -6.2197585105896
    7. 'zero' → logprob: -8.594758987426758
    8. '	n' → logprob: -8.594758987426758
    9. '_null' → logprob: -8.594758987426758
    10. ' null' → logprob: -8.719758987426758

Token 357: ' utilisé' (ID: 53138)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1287066638469696
    2. ']
' → logprob: -2.128706693649292
    3. 'dp' → logprob: -6.628706455230713
    4. ']
' → logprob: -8.503706932067871
    5. '()]
' → logprob: -10.128706932067871
    6. '   ' → logprob: -10.253706932067871
    7. ' ]
' → logprob: -10.253706932067871
    8. ']

' → logprob: -10.503706932067871
    9. '()]' → logprob: -10.628706932067871
    10. '][' → logprob: -10.753706932067871

Token 358: ' :' (ID: 712)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06356373429298401
    2. ']
' → logprob: -2.813563823699951
    3. '   ' → logprob: -6.938563823699951
    4. ']
' → logprob: -8.688563346862793
    5. ' ]' → logprob: -9.063563346862793
    6. ' ]
' → logprob: -9.063563346862793
    7. '][' → logprob: -9.313563346862793
    8. 'dp' → logprob: -10.063563346862793
    9. ']

' → logprob: -10.188563346862793
    10. ')]' → logprob: -11.563563346862793

Token 359: ' il' (ID: 1793)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.057359833270311356
    2. ']
' → logprob: -3.4323599338531494
    3. 'dp' → logprob: -3.8073599338531494
    4. ']
' → logprob: -8.18235969543457
    5. ' ]' → logprob: -8.30735969543457
    6. '][' → logprob: -8.55735969543457
    7. ' dp' → logprob: -9.05735969543457
    8. ']

' → logprob: -9.18235969543457
    9. ' ]
' → logprob: -9.55735969543457
    10. ']=' → logprob: -9.68235969543457

Token 360: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.35016655921936035
    2. '[' → logprob: -1.4751665592193604
    3. 's' → logprob: -3.3501665592193604
    4. ']' → logprob: -4.600166320800781
    5. ' dp' → logprob: -4.725166320800781
    6. ']=' → logprob: -5.850166320800781
    7. '=' → logprob: -6.100166320800781
    8. '   ' → logprob: -6.225166320800781
    9. '[
' → logprob: -7.475166320800781
    10. '][' → logprob: -7.600166320800781

Token 361: ''y' (ID: 27913)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17406117916107178
    2. ']' → logprob: -2.5490612983703613
    3. 's' → logprob: -3.1740612983703613
    4. '[' → logprob: -4.049061298370361
    5. ' dp' → logprob: -5.049061298370361
    6. '=' → logprob: -5.549061298370361
    7. 'n' → logprob: -5.924061298370361
    8. '   ' → logprob: -6.549061298370361
    9. ']=' → logprob: -6.799061298370361
    10. 'f' → logprob: -7.049061298370361

Token 362: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12745411694049835
    2. 'a' → logprob: -2.1274540424346924
    3. ' pas' → logprob: -8.377453804016113
    4. ' ' → logprob: -9.127453804016113
    5. '   ' → logprob: -9.627453804016113
    6. ''a' → logprob: -10.377453804016113
    7. ' avait' → logprob: -10.502453804016113
    8. ' has' → logprob: -11.377453804016113
    9. '	a' → logprob: -11.377453804016113
    10. '  ' → logprob: -11.752453804016113

Token 363: ' qu' (ID: 474)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7065768837928772
    2. ' ' → logprob: -0.7065768837928772
    3. 'dp' → logprob: -4.956576824188232
    4. ' dp' → logprob: -5.831576824188232
    5. '   ' → logprob: -6.581576824188232
    6. ' donc' → logprob: -7.331576824188232
    7. ' une' → logprob: -8.20657730102539
    8. ' exactement' → logprob: -8.45657730102539
    9. '0' → logprob: -8.70657730102539
    10. ' que' → logprob: -8.95657730102539

Token 364: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5122697353363037
    2. '   ' → logprob: -1.7622697353363037
    3. ' une' → logprob: -2.5122697353363037
    4. 'une' → logprob: -2.6372697353363037
    5. ' ' → logprob: -2.8872697353363037
    6. ''une' → logprob: -4.262269973754883
    7. ' exactement' → logprob: -7.262269973754883
    8. '0' → logprob: -7.512269973754883
    9. '  ' → logprob: -7.512269973754883
    10. ''un' → logprob: -7.512269973754883

Token 365: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.22321616113185883
    2. '=' → logprob: -3.0982160568237305
    3. ' =' → logprob: -3.3482160568237305
    4. ' ' → logprob: -3.5982160568237305
    5. ' seul' → logprob: -3.5982160568237305
    6. ' place' → logprob: -3.8482160568237305
    7. '1' → logprob: -4.7232160568237305
    8. 'se' → logprob: -4.7232160568237305
    9. ' possible' → logprob: -5.4732160568237305
    10. '   ' → logprob: -5.9732160568237305

Token 366: ' manière' (ID: 35013)
  Prédit: ' façon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façon' → logprob: -0.324322909116745
    2. ' manière' → logprob: -2.0743229389190674
    3. ' possibilité' → logprob: -3.0743229389190674
    4. 'man' → logprob: -3.5743229389190674
    5. 'fa' → logprob: -3.8243229389190674
    6. '   ' → logprob: -3.9493229389190674
    7. 'poss' → logprob: -4.199322700500488
    8. ' ' → logprob: -4.824322700500488
    9. '1' → logprob: -6.074322700500488
    10. ' façons' → logprob: -6.199322700500488

Token 367: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29884618520736694
    2. '   ' → logprob: -1.4238462448120117
    3. ']' → logprob: -4.548846244812012
    4. ' dp' → logprob: -5.423846244812012
    5. '[' → logprob: -6.673846244812012
    6. '(dp' → logprob: -7.423846244812012
    7. ')' → logprob: -8.423846244812012
    8. '][' → logprob: -9.048846244812012
    9. '	dp' → logprob: -9.048846244812012
    10. '_dp' → logprob: -9.548846244812012

Token 368: ' dém' (ID: 34947)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.10955917090177536
    2. ' faire' → logprob: -2.3595590591430664
    3. 'initial' → logprob: -5.734559059143066
    4. ' choisir' → logprob: -6.734559059143066
    5. '0' → logprob: -7.484559059143066
    6. ' ' → logprob: -7.859559059143066
    7. 'form' → logprob: -7.859559059143066
    8. 'l' → logprob: -7.859559059143066
    9. ' continuer' → logprob: -7.984559059143066
    10. 'cho' → logprob: -8.234559059143066

Token 369: 'arrer' (ID: 85856)
  Prédit: 'arrer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrer' → logprob: -0.000980766722932458
    2. 'arer' → logprob: -7.000980854034424
    3. 'arr' → logprob: -10.750980377197266
    4. '"' → logprob: -11.250980377197266
    5. '   ' → logprob: -12.000980377197266
    6. '
' → logprob: -12.375980377197266
    7. 'ar' → logprob: -12.750980377197266
    8. ']' → logprob: -13.125980377197266
    9. '|' → logprob: -13.125980377197266
    10. '\' → logprob: -13.375980377197266

Token 370: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18404826521873474
    2. '   ' → logprob: -2.3090481758117676
    3. ']' → logprob: -3.1840481758117676
    4. ']
' → logprob: -4.684048175811768
    5. ' dp' → logprob: -4.809048175811768
    6. '[' → logprob: -5.684048175811768
    7. '][' → logprob: -5.934048175811768
    8. '
' → logprob: -6.559048175811768
    9. '(dp' → logprob: -6.809048175811768
    10. '	dp' → logprob: -7.434048175811768

Token 371: 'penser' (ID: 77952)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05660538002848625
    2. ' dp' → logprob: -3.556605339050293
    3. ')' → logprob: -3.681605339050293
    4. ')
' → logprob: -7.556605339050293
    5. ' ' → logprob: -8.306605339050293
    6. '   ' → logprob: -8.556605339050293
    7. ' )' → logprob: -9.181605339050293
    8. '1' → logprob: -10.181605339050293
    9. ']' → logprob: -10.181605339050293
    10. ')]' → logprob: -10.181605339050293

Token 372: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.27887454628944397
    2. ')' → logprob: -1.6538745164871216
    3. ' )' → logprob: -3.153874635696411
    4. ' ' → logprob: -6.028874397277832
    5. 'à' → logprob: -6.528874397277832
    6. '   ' → logprob: -7.028874397277832
    7. ' to' → logprob: -7.153874397277832
    8. ' a' → logprob: -7.403874397277832
    9. ' aux' → logprob: -7.528874397277832
    10. ' au' → logprob: -7.653874397277832

Token 373: ' nombre' (ID: 9733)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.6873383522033691
    2. '0' → logprob: -1.9373383522033691
    3. ' code' → logprob: -1.9373383522033691
    4. ' initial' → logprob: -2.187338352203369
    5. ' ' → logprob: -2.812338352203369
    6. ')' → logprob: -2.812338352203369
    7. ' dp' → logprob: -2.937338352203369
    8. ' state' → logprob: -3.062338352203369
    9. '1' → logprob: -3.437338352203369
    10. ' return' → logprob: -3.812338352203369

Token 374: ' vide' (ID: 21835)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07912860065698624
    2. ' )' → logprob: -2.8291285037994385
    3. ')]' → logprob: -4.829128742218018
    4. ')])' → logprob: -5.954128742218018
    5. '())' → logprob: -6.079128742218018
    6. '=' → logprob: -7.204128742218018
    7. '()' → logprob: -7.329128742218018
    8. '(' → logprob: -7.579128742218018
    9. ' de' → logprob: -8.45412826538086
    10. ' =' → logprob: -8.57912826538086

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008791600354015827
    2. ')]' → logprob: -5.133791446685791
    3. ' )' → logprob: -6.508791446685791
    4. ')])' → logprob: -6.758791446685791
    5. '))' → logprob: -9.75879192352295
    6. ']' → logprob: -10.13379192352295
    7. '])' → logprob: -10.88379192352295
    8. '),' → logprob: -11.25879192352295
    9. ').' → logprob: -11.25879192352295
    10. '   ' → logprob: -11.38379192352295

Token 376: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024974532425403595
    2. ')' → logprob: -4.649974346160889
    3. '   ' → logprob: -4.649974346160889
    4. ']
' → logprob: -5.649974346160889
    5. 'dp' → logprob: -6.524974346160889
    6. ')
' → logprob: -8.024974822998047
    7. '])' → logprob: -9.149974822998047
    8. ')]' → logprob: -10.149974822998047
    9. '[' → logprob: -11.399974822998047
    10. '])
' → logprob: -11.524974822998047

Token 377: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.13351881504058838
    2. ']' → logprob: -2.383518695831299
    3. '   ' → logprob: -3.633518695831299
    4. ']
' → logprob: -5.883518695831299
    5. ' dp' → logprob: -5.883518695831299
    6. '	dp' → logprob: -8.508519172668457
    7. ')' → logprob: -8.758519172668457
    8. '][' → logprob: -9.258519172668457
    9. '_dp' → logprob: -9.633519172668457
    10. '
' → logprob: -9.883519172668457

Token 378: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.25000286102295
    3. '][' → logprob: -15.37500286102295
    4. ' [' → logprob: -15.62500286102295
    5. '```' → logprob: -15.75000286102295
    6. '\[' → logprob: -16.750001907348633
    7. ')[' → logprob: -17.625001907348633
    8. 'def' → logprob: -18.375001907348633
    9. '}[' → logprob: -18.625001907348633
    10. '
' → logprob: -18.875001907348633

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '[' → logprob: -18.25
    4. '۰' → logprob: -18.875
    5. '00' → logprob: -19.625
    6. '000' → logprob: -19.625
    7. '０' → logprob: -20.125
    8. '016' → logprob: -21.0
    9. '012' → logprob: -21.375
    10. '০' → logprob: -21.5

Token 380: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00024263552040793002
    2. '[' → logprob: -8.750242233276367
    3. ']' → logprob: -9.500242233276367
    4. ' ][' → logprob: -11.625242233276367
    5. ')][' → logprob: -16.500242233276367
    6. ']][' → logprob: -16.875242233276367
    7. '```' → logprob: -17.375242233276367
    8. '0' → logprob: -17.625242233276367
    9. '"][' → logprob: -17.625242233276367
    10. ''][' → logprob: -17.750242233276367

Token 381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'False' → logprob: -18.125
    4. '۰' → logprob: -18.125
    5. '<|end|>' → logprob: -18.5
    6. '   ' → logprob: -19.125
    7. '০' → logprob: -19.1875
    8. '[' → logprob: -19.9375
    9. '000' → logprob: -20.0
    10. '1' → logprob: -20.3125

Token 382: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.763666947837919e-05
    2. '[' → logprob: -10.12504768371582
    3. ']' → logprob: -12.12504768371582
    4. ' ][' → logprob: -13.25004768371582
    5. '0' → logprob: -15.12504768371582
    6. '"][' → logprob: -18.12504768371582
    7. '   ' → logprob: -18.37504768371582
    8. ''][' → logprob: -18.62504768371582
    9. ']
' → logprob: -19.25004768371582
    10. '
' → logprob: -19.50004768371582

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -20.0
    4. '000' → logprob: -20.375
    5. '   ' → logprob: -21.75
    6. '00' → logprob: -21.875
    7. '০' → logprob: -22.375
    8. '０' → logprob: -23.0
    9. '०' → logprob: -23.75
    10. '<|end|>' → logprob: -24.0

Token 384: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015872348740231246
    2. ']=' → logprob: -8.750158309936523
    3. ']+=' → logprob: -15.625158309936523
    4. ' ]' → logprob: -16.375158309936523
    5. '=' → logprob: -18.000158309936523
    6. ']
' → logprob: -20.750158309936523
    7. ')' → logprob: -20.875158309936523
    8. ']==' → logprob: -21.375158309936523
    9. '1' → logprob: -21.750158309936523
    10. '']' → logprob: -21.750158309936523

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019882326014339924
    2. ' =' → logprob: -6.251988410949707
    3. ']=' → logprob: -10.251988410949707
    4. ']' → logprob: -10.626988410949707
    5. ')=' → logprob: -17.62698745727539
    6. '[' → logprob: -17.62698745727539
    7. '=

' → logprob: -17.75198745727539
    8. '=
' → logprob: -18.75198745727539
    9. '＝' → logprob: -18.75198745727539
    10. ']+=' → logprob: -19.12698745727539

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -22.125
    5. '۱' → logprob: -23.375
    6. '１' → logprob: -23.375
    7. '  ' → logprob: -23.875
    8. '`' → logprob: -24.25
    9. '১' → logprob: -24.75
    10. '' → logprob: -25.0

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -20.875
    4. '１' → logprob: -23.625
    5. '۱' → logprob: -23.875
    6. '  ' → logprob: -24.125
    7. '```' → logprob: -24.25
    8. '`' → logprob: -25.25
    9. '১' → logprob: -25.375
    10. '0' → logprob: -25.5

Token 388: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.65101717156358e-05
    2. '))' → logprob: -9.375096321105957
    3. ' )' → logprob: -11.875096321105957
    4. ')))' → logprob: -12.625096321105957
    5. ')`' → logprob: -14.875096321105957
    6. ')
' → logprob: -15.250096321105957
    7. '),' → logprob: -15.500096321105957
    8. ')}' → logprob: -16.250097274780273
    9. '   ' → logprob: -16.375097274780273
    10. ')**' → logprob: -16.625097274780273

Token 389: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000193527273950167
    2. '))' → logprob: -8.62519359588623
    3. ')))' → logprob: -11.87519359588623
    4. ' )' → logprob: -12.12519359588623
    5. '])' → logprob: -15.37519359588623
    6. ')`' → logprob: -15.37519359588623
    7. ')])' → logprob: -15.62519359588623
    8. ')
' → logprob: -15.75019359588623
    9. ')}' → logprob: -16.000192642211914
    10. ')}}' → logprob: -16.125192642211914

Token 390: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.47757811343763e-05
    2. '))' → logprob: -10.125044822692871
    3. ' )' → logprob: -13.000044822692871
    4. ')))' → logprob: -13.375044822692871
    5. ')}' → logprob: -15.750044822692871
    6. ')`' → logprob: -15.750044822692871
    7. ')
' → logprob: -16.000043869018555
    8. '   ' → logprob: -16.375043869018555
    9. ')]' → logprob: -16.500043869018555
    10. ']' → logprob: -16.625043869018555

Token 391: ' Bou' (ID: 33816)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.339776832144707e-05
    2. '))' → logprob: -10.000082969665527
    3. ']' → logprob: -10.750082969665527
    4. '])' → logprob: -11.625082969665527
    5. ')]' → logprob: -13.000082969665527
    6. ' )' → logprob: -13.125082969665527
    7. ')))' → logprob: -14.375082969665527
    8. ')
' → logprob: -14.375082969665527
    9. ')])' → logprob: -14.625082969665527
    10. ').' → logprob: -14.750082969665527

Token 392: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0017507458105683327
    2. 'cles' → logprob: -6.626750946044922
    3. 'cl' → logprob: -8.626750946044922
    4. 'c' → logprob: -8.876750946044922
    5. 'cler' → logprob: -10.251750946044922
    6. 'for' → logprob: -10.626750946044922
    7. 'clé' → logprob: -11.001750946044922
    8. 't' → logprob: -11.376750946044922
    9. '   ' → logprob: -11.751750946044922
    10. 'n' → logprob: -13.126750946044922

Token 393: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018009226769208908
    2. 'for' → logprob: -4.143009185791016
    3. ' ' → logprob: -7.018009185791016
    4. ' i' → logprob: -7.268009185791016
    5. ' ' → logprob: -9.018009185791016
    6. ' in' → logprob: -9.393009185791016
    7. ' n' → logprob: -9.768009185791016
    8. ' _' → logprob: -10.518009185791016
    9. '  ' → logprob: -10.768009185791016
    10. '   ' → logprob: -10.893009185791016

Token 394: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.558845579624176
    2. ' range' → logprob: -1.4338455200195312
    3. ' position' → logprob: -2.9338455200195312
    4. 'i' → logprob: -3.4338455200195312
    5. 'pos' → logprob: -3.4338455200195312
    6. ' pos' → logprob: -3.6838455200195312
    7. 'range' → logprob: -3.9338455200195312
    8. ' n' → logprob: -4.433845520019531
    9. ' p' → logprob: -5.433845520019531
    10. 'position' → logprob: -5.558845520019531

Token 395: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25128671526908875
    2. 'i' → logprob: -1.7512867450714111
    3. '_' → logprob: -3.876286745071411
    4. ' position' → logprob: -4.751286506652832
    5. ' _' → logprob: -4.876286506652832
    6. 'position' → logprob: -5.626286506652832
    7. 'pos' → logprob: -5.626286506652832
    8. ' pos' → logprob: -6.626286506652832
    9. 'n' → logprob: -7.001286506652832
    10. ' n' → logprob: -7.126286506652832

Token 396: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0238062534481287
    2. 'in' → logprob: -3.89880633354187
    3. ':' → logprob: -6.148806095123291
    4. ' for' → logprob: -7.523806095123291
    5. 'for' → logprob: -8.64880657196045
    6. ',' → logprob: -8.77380657196045
    7. ' :' → logprob: -9.52380657196045
    8. ' i' → logprob: -9.64880657196045
    9. ')' → logprob: -10.02380657196045
    10. 'range' → logprob: -10.27380657196045

Token 397: ' chiffre' (ID: 107420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06432010978460312
    2. ' N' → logprob: -3.5643200874328613
    3. 'range' → logprob: -4.064320087432861
    4. ' range' → logprob: -4.189320087432861
    5. ' code' → logprob: -7.814320087432861
    6. 'nombre' → logprob: -8.18932056427002
    7. ' for' → logprob: -8.56432056427002
    8. ' number' → logprob: -8.68932056427002
    9. 'number' → logprob: -9.31432056427002
    10. ' ' → logprob: -9.31432056427002

Token 398: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7737433910369873
    2. ':' → logprob: -1.0237433910369873
    3. ' for' → logprob: -2.2737433910369873
    4. ',' → logprob: -3.7737433910369873
    5. ' :' → logprob: -3.7737433910369873
    6. 'for' → logprob: -4.648743629455566
    7. ')' → logprob: -5.273743629455566
    8. ' i' → logprob: -5.273743629455566
    9. '(' → logprob: -5.648743629455566
    10. ' ' → logprob: -6.148743629455566

Token 399: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5565191507339478
    2. ' range' → logprob: -2.431519031524658
    3. '):' → logprob: -2.681519031524658
    4. ' in' → logprob: -2.681519031524658
    5. 'N' → logprob: -2.806519031524658
    6. ' N' → logprob: -3.056519031524658
    7. 'range' → logprob: -3.556519031524658
    8. ' ' → logprob: -4.431519031524658
    9. ' )' → logprob: -4.431519031524658
    10. ' for' → logprob: -4.681519031524658

Token 400: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0321710109710693
    2. 'pos' → logprob: -1.2821710109710693
    3. 'i' → logprob: -1.6571710109710693
    4. ' pos' → logprob: -2.2821710109710693
    5. 'n' → logprob: -3.5321710109710693
    6. ' n' → logprob: -3.6571710109710693
    7. ' position' → logprob: -5.032171249389648
    8. 'position' → logprob: -5.907171249389648
    9. 'digit' → logprob: -5.907171249389648
    10. ' digit' → logprob: -6.282171249389648

Token 401: ' chiffre' (ID: 107420)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2282714545726776
    2. ')' → logprob: -2.353271484375
    3. ' position' → logprob: -3.478271484375
    4. ' _' → logprob: -3.978271484375
    5. ' i' → logprob: -4.228271484375
    6. ' digit' → logprob: -4.228271484375
    7. 'digit' → logprob: -4.728271484375
    8. ' n' → logprob: -5.103271484375
    9. ' in' → logprob: -5.603271484375
    10. 'position' → logprob: -5.728271484375

Token 402: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6273996233940125
    2. ' in' → logprob: -1.0023996829986572
    3. 'in' → logprob: -2.7523996829986572
    4. '):' → logprob: -3.8773996829986572
    5. ' )' → logprob: -4.877399444580078
    6. ',' → logprob: -5.377399444580078
    7. ' ):' → logprob: -7.127399444580078
    8. ' ' → logprob: -7.752399444580078
    9. '):
' → logprob: -8.127399444580078
    10. 'range' → logprob: -9.252399444580078

Token 403: ' N' (ID: 478)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9363422393798828
    2. 'N' → logprob: -1.3113422393798828
    3. ' N' → logprob: -1.4363422393798828
    4. 'range' → logprob: -2.311342239379883
    5. ' ' → logprob: -6.936342239379883
    6. ')' → logprob: -8.311342239379883
    7. ' la' → logprob: -8.686342239379883
    8. '   ' → logprob: -9.436342239379883
    9. '0' → logprob: -10.436342239379883
    10. '  ' → logprob: -11.311342239379883

Token 404: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013613052433356643
    2. ')' → logprob: -7.12636137008667
    3. '):
' → logprob: -8.001360893249512
    4. ' ):' → logprob: -8.501360893249512
    5. ':' → logprob: -11.376360893249512
    6. 'in' → logprob: -12.876360893249512
    7. ' in' → logprob: -13.501360893249512
    8. ',' → logprob: -14.126360893249512
    9. ' )' → logprob: -14.251360893249512
    10. ' :' → logprob: -14.751360893249512

Token 405: ' de' (ID: 334)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.4266188144683838
    2. '):' → logprob: -1.1766188144683838
    3. ' )' → logprob: -3.676618814468384
    4. ')' → logprob: -4.676618576049805
    5. ' ):
' → logprob: -5.926618576049805
    6. '):
' → logprob: -8.051618576049805
    7. '   ' → logprob: -8.176618576049805
    8. ' range' → logprob: -8.301618576049805
    9. 'range' → logprob: -8.301618576049805
    10. ' n' → logprob: -9.051618576049805

Token 406: ' gauche' (ID: 58367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4639286696910858
    2. ' range' → logprob: -1.2139286994934082
    3. ' ' → logprob: -3.088928699493408
    4. 'range' → logprob: -3.588928699493408
    5. ' la' → logprob: -8.08892822265625
    6. ' position' → logprob: -8.58892822265625
    7. ' i' → logprob: -8.83892822265625
    8. '1' → logprob: -8.96392822265625
    9. '   ' → logprob: -10.21392822265625
    10. ')' → logprob: -10.71392822265625

Token 407: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.23296743631362915
    2. 'à' → logprob: -2.2329673767089844
    3. ')' → logprob: -2.3579673767089844
    4. ' )' → logprob: -6.357967376708984
    5. ',' → logprob: -6.482967376708984
    6. '   ' → logprob: -7.107967376708984
    7. ' to' → logprob: -7.232967376708984
    8. 'to' → logprob: -8.232967376708984
    9. ''à' → logprob: -8.732967376708984
    10. '=' → logprob: -8.982967376708984

Token 408: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.11592669039964676
    2. ' droite' → logprob: -2.365926742553711
    3. 'right' → logprob: -4.365926742553711
    4. '   ' → logprob: -7.240926742553711
    5. '```' → logprob: -7.490926742553711
    6. 'la' → logprob: -7.490926742553711
    7. '1' → logprob: -8.240926742553711
    8. 'd' → logprob: -8.240926742553711
    9. ' ' → logprob: -8.240926742553711
    10. 'to' → logprob: -9.740926742553711

Token 409: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020982902497053146
    2. ')' → logprob: -4.02098274230957
    3. '):
' → logprob: -6.02098274230957
    4. ':' → logprob: -8.39598274230957
    5. '   ' → logprob: -9.77098274230957
    6. ' ):' → logprob: -10.14598274230957
    7. 'for' → logprob: -10.27098274230957
    8. ' for' → logprob: -10.39598274230957
    9. ',' → logprob: -11.89598274230957
    10. ']:' → logprob: -13.27098274230957

Token 410: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31589969992637634
    2. ':' → logprob: -1.9408997297286987
    3. '   ' → logprob: -2.940899610519409
    4. ')' → logprob: -3.190899610519409
    5. ']:' → logprob: -3.940899610519409
    6. ']' → logprob: -4.690899848937988
    7. '):
' → logprob: -6.315899848937988
    8. ' for' → logprob: -6.565899848937988
    9. '(n' → logprob: -8.315899848937988
    10. 'for' → logprob: -8.440899848937988

Token 411: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3089791536331177
    2. 'for' (adapté à ' for') → logprob: -1.4339791536331177
    3. ':' → logprob: -4.308979034423828
    4. '   ' → logprob: -4.808979034423828
    5. '
' → logprob: -5.308979034423828
    6. '	for' → logprob: -8.308979034423828
    7. ':
' → logprob: -9.058979034423828
    8. ')' → logprob: -9.183979034423828
    9. ' 
' → logprob: -9.433979034423828
    10. '    
' → logprob: -9.433979034423828

Token 412: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32405152916908264
    2. ' pos' → logprob: -1.3240514993667603
    3. 'i' → logprob: -5.074051380157471
    4. 'pos' → logprob: -5.699051380157471
    5. ' position' → logprob: -7.824051380157471
    6. ' idx' → logprob: -8.699051856994629
    7. ' p' → logprob: -8.949051856994629
    8. '	pos' → logprob: -9.199051856994629
    9. ' n' → logprob: -9.574051856994629
    10. ' ' → logprob: -9.949051856994629

Token 413: 'len' (ID: 3303)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1129610538482666
    2. 'in' → logprob: -2.2379610538482666
    3. ' ' → logprob: -9.737960815429688
    4. '+' → logprob: -9.987960815429688
    5. '	in' → logprob: -11.237960815429688
    6. ',' → logprob: -12.112960815429688
    7. ' ' → logprob: -12.612960815429688
    8. ')' → logprob: -12.987960815429688
    9. '_' → logprob: -13.362960815429688
    10. 'n' → logprob: -13.737960815429688

Token 414: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6330420970916748
    2. ' in' → logprob: -0.7580420970916748
    3. ')' → logprob: -8.008042335510254
    4. ' ' → logprob: -10.008042335510254
    5. ',' → logprob: -10.383042335510254
    6. '1' → logprob: -12.383042335510254
    7. '	in' → logprob: -12.383042335510254
    8. 'n' → logprob: -12.633042335510254
    9. '   ' → logprob: -12.883042335510254
    10. '+' → logprob: -12.883042335510254

Token 415: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31328243017196655
    2. 'range' → logprob: -1.3132824897766113
    3. ' in' → logprob: -11.563282012939453
    4. '(range' → logprob: -12.188282012939453
    5. 'in' → logprob: -12.813282012939453
    6. ' ' → logprob: -13.313282012939453
    7. '   ' → logprob: -14.813282012939453
    8. ')' → logprob: -15.188282012939453
    9. '	range' → logprob: -15.188282012939453
    10. '_' → logprob: -15.438282012939453

Token 416: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4742221236228943
    2. '(' → logprob: -0.9742221236228943
    3. ' (' → logprob: -9.724222183227539
    4. '1' → logprob: -10.099222183227539
    5. '(n' → logprob: -10.599222183227539
    6. '(
' → logprob: -11.099222183227539
    7. '(len' → logprob: -13.224222183227539
    8. ' ' → logprob: -13.599222183227539
    9. '0' → logprob: -15.099222183227539
    10. '   ' → logprob: -15.599222183227539

Token 417: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.286852345103398e-05
    2. '+' → logprob: -10.375042915344238
    3. ' len' → logprob: -13.125042915344238
    4. ')' → logprob: -13.375042915344238
    5. ')+' → logprob: -13.375042915344238
    6. 'l' → logprob: -13.750042915344238
    7. '_len' → logprob: -14.000042915344238
    8. '(len' → logprob: -14.000042915344238
    9. '1' → logprob: -14.125042915344238
    10. '
' → logprob: -14.750042915344238

Token 418: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.051847703754901886
    2. '+' → logprob: -3.0518476963043213
    3. '):
' → logprob: -5.9268479347229
    4. ' +' → logprob: -7.6768479347229
    5. '   ' → logprob: -9.926847457885742
    6. ' ):' → logprob: -10.051847457885742
    7. ')' → logprob: -10.676847457885742
    8. ':' → logprob: -12.551847457885742
    9. '+:' → logprob: -14.051847457885742
    10. ' ' → logprob: -14.301847457885742

Token 419: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8212523460388184
    2. '   ' → logprob: -0.9462523460388184
    3. '       ' → logprob: -2.0712523460388184
    4. '):' → logprob: -3.5712523460388184
    5. ' :' → logprob: -5.071252346038818
    6. ',' → logprob: -5.321252346038818
    7. ')' → logprob: -6.446252346038818
    8. '):
' → logprob: -6.821252346038818
    9. '    ' → logprob: -6.946252346038818
    10. '<|end|>' → logprob: -7.446252346038818

Token 420: ' #' (ID: 1069)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5129868388175964
    2. ':' → logprob: -1.1379868984222412
    3. '   ' → logprob: -2.887986898422241
    4. ' :' → logprob: -4.887986660003662
    5. ' for' → logprob: -5.512986660003662
    6. ' ):' → logprob: -5.637986660003662
    7. ',' → logprob: -5.887986660003662
    8. '):
' → logprob: -5.887986660003662
    9. '       ' → logprob: -6.012986660003662
    10. ' ' → logprob: -7.637986660003662

Token 421: ' R' (ID: 460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4287451505661011
    2. ' for' → logprob: -1.053745150566101
    3. '   ' → logprob: -10.42874526977539
    4. 'range' → logprob: -12.55374526977539
    5. ' range' → logprob: -12.67874526977539
    6. ')' → logprob: -12.80374526977539
    7. ' ' → logprob: -13.67874526977539
    8. '       ' → logprob: -14.05374526977539
    9. 'n' → logprob: -14.30374526977539
    10. '	for' → logprob: -14.42874526977539

Token 422: 'éc' (ID: 5675)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.1384263038635254
    2. 'for' → logprob: -2.2634263038635254
    3. ' for' → logprob: -4.013426303863525
    4. '   ' → logprob: -5.638426303863525
    5. '       ' → logprob: -6.763426303863525
    6. '=' → logprob: -7.513426303863525
    7. ' ' → logprob: -7.763426303863525
    8. 'range' → logprob: -8.388425827026367
    9. 'ang' → logprob: -8.638425827026367
    10. 'anged' → logprob: -9.138425827026367

Token 423: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.028445549309253693
    2. 'ur' → logprob: -4.278445720672607
    3. 'uper' → logprob: -4.903445720672607
    4. 'u' → logprob: -5.903445720672607
    5. 'upr' → logprob: -6.278445720672607
    6. 'urrent' → logprob: -7.653445720672607
    7. 'urse' → logprob: -8.15344524383545
    8. 'op' → logprob: -8.40344524383545
    9. 'urent' → logprob: -8.65344524383545
    10. 'ol' → logprob: -8.77844524383545

Token 424: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.0004940032958984
    2. ')' → logprob: -1.6254940032958984
    3. 'érer' → logprob: -2.2504940032958984
    4. '   ' → logprob: -2.5004940032958984
    5. '       ' → logprob: -2.7504940032958984
    6. ' =' → logprob: -2.8754940032958984
    7. '=' → logprob: -3.5004940032958984
    8. '           ' → logprob: -3.7504940032958984
    9. 'ération' → logprob: -4.250494003295898
    10. ']' → logprob: -4.750494003295898

Token 425: ' le' (ID: 505)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.21138903498649597
    2. 'N' → logprob: -1.8363890647888184
    3. ')' → logprob: -4.586389064788818
    4. ' )' → logprob: -5.336389064788818
    5. ' n' → logprob: -6.211389064788818
    6. 'd' → logprob: -6.336389064788818
    7. ' ' → logprob: -6.461389064788818
    8. ' d' → logprob: -6.836389064788818
    9. '(N' → logprob: -6.836389064788818
    10. 'digit' → logprob: -7.211389064788818

Token 426: ' chiffre' (ID: 107420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9174365997314453
    2. ' N' → logprob: -1.4174365997314453
    3. 'n' → logprob: -1.7924365997314453
    4. ' n' → logprob: -3.0424365997314453
    5. ' max' → logprob: -3.9174365997314453
    6. 'ch' → logprob: -4.167436599731445
    7. 'digit' → logprob: -4.167436599731445
    8. 'd' → logprob: -4.417436599731445
    9. 'c' → logprob: -4.667436599731445
    10. 'max' → logprob: -4.792436599731445

Token 427: ' de' (ID: 334)
  Prédit: ' actuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' actuel' → logprob: -1.4279297590255737
    2. ' courant' → logprob: -1.5529297590255737
    3. ' de' → logprob: -1.9279297590255737
    4. ' current' → logprob: -2.4279298782348633
    5. ' =' → logprob: -2.8029298782348633
    6. ' max' → logprob: -3.3029298782348633
    7. ' N' → logprob: -3.4279298782348633
    8. 'max' → logprob: -3.5529298782348633
    9. 'current' → logprob: -3.6779298782348633
    10. ' n' → logprob: -3.6779298782348633

Token 428: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14667277038097382
    2. ' N' → logprob: -2.0216727256774902
    3. 'n' → logprob: -5.64667272567749
    4. ' n' → logprob: -7.77167272567749
    5. ' la' → logprob: -11.146673202514648
    6. ' ' → logprob: -11.271673202514648
    7. '	N' → logprob: -12.646673202514648
    8. 'l' → logprob: -13.396673202514648
    9. '   ' → logprob: -13.396673202514648
    10. '[N' → logprob: -13.646673202514648

Token 429: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1081039234995842
    2. '=' → logprob: -2.3581039905548096
    3. '[n' → logprob: -5.3581037521362305
    4. ']' → logprob: -7.3581037521362305
    5. '   ' → logprob: -7.4831037521362305
    6. ')' → logprob: -7.7331037521362305
    7. '=n' → logprob: -8.10810375213623
    8. 'n' → logprob: -8.10810375213623
    9. '[N' → logprob: -8.10810375213623
    10. '[' → logprob: -8.98310375213623

Token 430: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013306818902492523
    2. ' n' → logprob: -5.638306617736816
    3. 'position' → logprob: -5.763306617736816
    4. ' la' → logprob: -6.138306617736816
    5. 'la' → logprob: -6.388306617736816
    6. 'l' → logprob: -6.388306617736816
    7. '[n' → logprob: -7.888306617736816
    8. 'c' → logprob: -8.763306617736816
    9. ' position' → logprob: -9.013306617736816
    10. 'index' → logprob: -9.388306617736816

Token 431: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5802420377731323
    2. 'position' → logprob: -0.8302420377731323
    3. ' position' → logprob: -6.455242156982422
    4. 'pos' → logprob: -6.580242156982422
    5. '[n' → logprob: -6.955242156982422
    6. ' n' → logprob: -9.330242156982422
    7. 'place' → logprob: -9.705242156982422
    8. 'current' → logprob: -9.830242156982422
    9. 'posit' → logprob: -10.455242156982422
    10. 'positions' → logprob: -10.580242156982422

Token 432: ' cour' (ID: 2871)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1182715967297554
    2. 'n' → logprob: -2.243271589279175
    3. '[n' → logprob: -5.243271827697754
    4. '	n' → logprob: -10.118271827697754
    5. '(n' → logprob: -10.118271827697754
    6. '_n' → logprob: -10.868271827697754
    7. '   ' → logprob: -11.118271827697754
    8. ' [' → logprob: -11.993271827697754
    9. '[' → logprob: -12.243271827697754
    10. '=n' → logprob: -12.368271827697754

Token 433: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.3412700593471527
    2. 'ant' → logprob: -1.591270089149475
    3. 'ent' → logprob: -3.0912699699401855
    4. 'r' → logprob: -3.4662699699401855
    5. 'ente' → logprob: -5.3412699699401855
    6. 'n' → logprob: -5.8412699699401855
    7. 'rent' → logprob: -7.3412699699401855
    8. 'a' → logprob: -8.591270446777344
    9. 'rant' → logprob: -9.466270446777344
    10. 'nt' → logprob: -10.466270446777344

Token 434: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8774504065513611
    2. ':' → logprob: -1.7524504661560059
    3. ',' → logprob: -1.8774504661560059
    4. '       ' → logprob: -2.502450466156006
    5. 'n' → logprob: -3.252450466156006
    6. ')' → logprob: -3.627450466156006
    7. 'current' → logprob: -3.877450466156006
    8. ' =' → logprob: -4.377450466156006
    9. ']' → logprob: -4.877450466156006
    10. ' :' → logprob: -5.127450466156006

Token 435: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.73446003627032e-05
    2. '_len' → logprob: -10.250097274780273
    3. ']' → logprob: -10.750097274780273
    4. '=len' → logprob: -11.125097274780273
    5. 'n' → logprob: -11.750097274780273
    6. 'en' → logprob: -12.000097274780273
    7. 'pos' → logprob: -13.250097274780273
    8. '(len' → logprob: -13.250097274780273
    9. ')' → logprob: -13.375097274780273
    10. '=' → logprob: -13.625097274780273

Token 436: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8215124607086182
    2. ':' → logprob: -1.0715124607086182
    3. ',' → logprob: -2.696512460708618
    4. ')' → logprob: -2.696512460708618
    5. '       ' → logprob: -3.071512460708618
    6. ']' → logprob: -4.821512222290039
    7. ' =' → logprob: -5.571512222290039
    8. '=' → logprob: -5.821512222290039
    9. ':
' → logprob: -5.821512222290039
    10. 'n' → logprob: -5.946512222290039

Token 437: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10803373157978058
    2. '   ' → logprob: -2.9830336570739746
    3. ' for' → logprob: -3.9830336570739746
    4. ',' → logprob: -4.608033657073975
    5. ' :' → logprob: -5.108033657073975
    6. '       ' → logprob: -5.108033657073975
    7. '):
' → logprob: -5.733033657073975
    8. ':
' → logprob: -6.233033657073975
    9. '):' → logprob: -6.358033657073975
    10. ')' → logprob: -6.608033657073975

Token 438: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5458332300186157
    2. 'digit' → logprob: -1.6708332300186157
    3. ' digit' → logprob: -3.045833110809326
    4. ' =' → logprob: -3.670833110809326
    5. '   ' → logprob: -3.920833110809326
    6. ' )' → logprob: -4.170833110809326
    7. 'd' (adapté à ' d') → logprob: -4.420833110809326
    8. 'max' → logprob: -4.545833110809326
    9. ' max' → logprob: -4.670833110809326
    10. ',' → logprob: -4.670833110809326

Token 439: 'N' (ID: 45)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006752548273652792
    2. '=' → logprob: -5.0067524909973145
    3. 'igit' → logprob: -10.506752967834473
    4. '   ' → logprob: -12.381752967834473
    5. '    ' → logprob: -13.506752967834473
    6. ' ' → logprob: -14.131752967834473
    7. '=current' → logprob: -14.381752967834473
    8. 'd' → logprob: -14.506752967834473
    9. '=N' → logprob: -15.006752967834473
    10. '  ' → logprob: -15.006752967834473

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474763423204422
    2. '=' → logprob: -0.9747633934020996
    3. ']' → logprob: -7.3497633934021
    4. ']=' → logprob: -10.849763870239258
    5. ')' → logprob: -11.974763870239258
    6. '=N' → logprob: -12.099763870239258
    7. ' ' → logprob: -12.224763870239258
    8. 'd' → logprob: -12.974763870239258
    9. '   ' → logprob: -13.599763870239258
    10. ' ]' → logprob: -14.349763870239258

Token 441: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.38687145709991455
    2. ' N' → logprob: -1.1368714570999146
    3. '	N' → logprob: -14.886871337890625
    4. ' ' → logprob: -16.636871337890625
    5. '   ' → logprob: -18.136871337890625
    6. 'n' → logprob: -18.636871337890625
    7. '[N' → logprob: -18.761871337890625
    8. ' ' → logprob: -19.136871337890625
    9. '=N' → logprob: -19.511871337890625
    10. '>N' → logprob: -19.761871337890625

Token 442: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00023572170175611973
    2. '[' → logprob: -8.375235557556152
    3. ' [' → logprob: -12.750235557556152
    4. '][' → logprob: -14.000235557556152
    5. ']' → logprob: -14.125235557556152
    6. '[len' → logprob: -15.375235557556152
    7. '[N' → logprob: -15.625235557556152
    8. ')' → logprob: -16.25023651123047
    9. ')[' → logprob: -16.50023651123047
    10. '[
' → logprob: -16.75023651123047

Token 443: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1472419600977446e-06
    2. ' len' → logprob: -13.875000953674316
    3. ']' → logprob: -16.875001907348633
    4. '[len' → logprob: -17.125001907348633
    5. 'en' → logprob: -17.625001907348633
    6. 'Len' → logprob: -17.750001907348633
    7. 'length' → logprob: -17.875001907348633
    8. 'n' → logprob: -18.375001907348633
    9. '_len' → logprob: -18.500001907348633
    10. '[' → logprob: -18.625001907348633

Token 444: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.167648876318708e-05
    2. '])' → logprob: -11.000041961669922
    3. ')' → logprob: -11.125041961669922
    4. ']
' → logprob: -12.125041961669922
    5. ' ]' → logprob: -12.500041961669922
    6. '[' → logprob: -14.750041961669922
    7. ')]' → logprob: -15.125041961669922
    8. '   ' → logprob: -16.625041961669922
    9. ']
' → logprob: -16.625041961669922
    10. 'd' → logprob: -16.625041961669922

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026979343965649605
    2. ')' → logprob: -3.651979446411133
    3. '   ' → logprob: -8.151979446411133
    4. ':' → logprob: -9.276979446411133
    5. ' for' → logprob: -9.651979446411133
    6. '<|end|>' → logprob: -9.901979446411133
    7. '        
' → logprob: -9.901979446411133
    8. '):
' → logprob: -10.901979446411133
    9. ':
' → logprob: -11.026979446411133
    10. '):' → logprob: -11.276979446411133

Token 446: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03142672777175903
    2. '   ' → logprob: -3.9064266681671143
    3. ' for' → logprob: -5.156426906585693
    4. ')' → logprob: -5.531426906585693
    5. 'for' → logprob: -7.156426906585693
    6. ':' → logprob: -9.156426429748535
    7. '    ' → logprob: -10.781426429748535
    8. ',' → logprob: -10.906426429748535
    9. '):
' → logprob: -10.906426429748535
    10. '      ' → logprob: -11.031426429748535

Token 447: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002613358374219388
    2. ' for' → logprob: -8.250261306762695
    3. '
' → logprob: -20.500261306762695
    4. '   ' → logprob: -20.750261306762695
    5. '	for' → logprob: -20.750261306762695
    6. ' ' → logprob: -22.125261306762695
    7. '#' → logprob: -22.500261306762695
    8. 'For' → logprob: -23.250261306762695
    9. 'pour' → logprob: -24.000261306762695
    10. '```' → logprob: -24.500261306762695

Token 448: ' essa' (ID: 19417)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6328388452529907
    2. 'for' → logprob: -0.7578388452529907
    3. 'or' → logprob: -9.88283920288086
    4. ' continue' → logprob: -10.00783920288086
    5. ' in' → logprob: -10.38283920288086
    6. '	for' → logprob: -10.63283920288086
    7. ' range' → logprob: -10.63283920288086
    8. 'range' → logprob: -11.00783920288086
    9. ' pour' → logprob: -11.75783920288086
    10. ' ,' → logprob: -12.38283920288086

Token 449: 'iera' (ID: 13264)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.1326591670513153
    2. 'y' → logprob: -2.7576591968536377
    3. 'ye' → logprob: -2.8826591968536377
    4. 'aye' → logprob: -5.507658958435059
    5. 'iye' → logprob: -8.507658958435059
    6. 'yer' → logprob: -8.757658958435059
    7. 'yage' → logprob: -8.882658958435059
    8. 'i' → logprob: -9.882658958435059
    9. '```' → logprob: -10.007658958435059
    10. 'e' → logprob: -10.507658958435059

Token 450: ' toutes' (ID: 17502)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8582800030708313
    2. ' d' → logprob: -0.9832800030708313
    3. ' :' → logprob: -1.7332799434661865
    4. 'd' → logprob: -4.858280181884766
    5. ' de' → logprob: -5.108280181884766
    6. ' ' → logprob: -5.608280181884766
    7. ' for' → logprob: -5.733280181884766
    8. 't' → logprob: -7.483280181884766
    9. '_' → logprob: -7.483280181884766
    10. 'for' → logprob: -7.608280181884766

Token 451: ' les' (ID: 1341)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7856712341308594
    2. ' d' → logprob: -1.5356712341308594
    3. ' possible' → logprob: -2.2856712341308594
    4. 'digits' → logprob: -2.4106712341308594
    5. 'possible' → logprob: -3.0356712341308594
    6. ' digits' → logprob: -3.1606712341308594
    7. 'digit' → logprob: -3.7856712341308594
    8. ' ' → logprob: -5.660671234130859
    9. ' digit' → logprob: -5.785671234130859
    10. ' possibles' → logprob: -6.160671234130859

Token 452: ' valeurs' (ID: 73668)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.220948338508606
    2. 'd' → logprob: -1.470948338508606
    3. 'digits' → logprob: -1.720948338508606
    4. 'digit' → logprob: -2.4709482192993164
    5. 'c' → logprob: -2.5959482192993164
    6. 'val' → logprob: -3.5959482192993164
    7. 'for' → logprob: -3.9709482192993164
    8. 'dig' → logprob: -3.9709482192993164
    9. 'possible' → logprob: -4.095948219299316
    10. ' digits' → logprob: -4.220948219299316

Token 453: ' possibles' (ID: 97753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5310714244842529
    2. ' d' → logprob: -1.656071424484253
    3. 'd' → logprob: -3.031071424484253
    4. 'for' → logprob: -3.156071424484253
    5. ' de' → logprob: -3.531071424484253
    6. '   ' → logprob: -3.656071424484253
    7. '(d' → logprob: -3.906071424484253
    8. ' possible' → logprob: -4.531071662902832
    9. ' in' → logprob: -4.656071662902832
    10. '(' → logprob: -5.281071662902832

Token 454: ' du' (ID: 1462)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5045139789581299
    2. ' in' → logprob: -1.6295139789581299
    3. 'for' → logprob: -2.12951397895813
    4. ' d' → logprob: -4.254513740539551
    5. '   ' → logprob: -4.379513740539551
    6. '(' → logprob: -4.504513740539551
    7. 'd' → logprob: -4.629513740539551
    8. ' de' → logprob: -5.004513740539551
    9. ' pour' → logprob: -5.504513740539551
    10. 'range' → logprob: -5.504513740539551

Token 455: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.06829918920993805
    2. 'd' → logprob: -2.9432992935180664
    3. 'digit' → logprob: -4.818299293518066
    4. 'c' → logprob: -6.068299293518066
    5. ' chiffre' → logprob: -6.568299293518066
    6. ' d' → logprob: -8.318299293518066
    7. 'cho' → logprob: -8.443299293518066
    8. 'pro' → logprob: -8.568299293518066
    9. '0' → logprob: -8.693299293518066
    10. ' digit' → logprob: -9.193299293518066

Token 456: ' à' (ID: 1221)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4572501480579376
    2. ' from' → logprob: -2.2072501182556152
    3. ' d' → logprob: -2.7072501182556152
    4. 'for' → logprob: -2.7072501182556152
    5. 'd' → logprob: -3.4572501182556152
    6. ' de' → logprob: -3.7072501182556152
    7. 'from' → logprob: -3.7072501182556152
    8. ' in' → logprob: -4.207250118255615
    9. '   ' → logprob: -4.582250118255615
    10. ' ' → logprob: -5.957250118255615

Token 457: ' cette' (ID: 7696)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5043660402297974
    2. 'cho' → logprob: -1.6293660402297974
    3. '0' → logprob: -1.8793660402297974
    4. 'placer' → logprob: -2.379365921020508
    5. 'for' → logprob: -3.004365921020508
    6. 'n' → logprob: -3.129365921020508
    7. ' choisir' → logprob: -3.254365921020508
    8. 'poser' → logprob: -3.379365921020508
    9. 'd' → logprob: -3.379365921020508
    10. 'la' → logprob: -3.754365921020508

Token 458: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3970659971237183
    2. 'range' → logprob: -1.3970659971237183
    3. '_' → logprob: -2.397066116333008
    4. ']' → logprob: -2.397066116333008
    5. ' range' → logprob: -2.897066116333008
    6. ')' → logprob: -2.897066116333008
    7. 'position' → logprob: -3.022066116333008
    8. 'space' → logprob: -3.522066116333008
    9. 'next' → logprob: -3.897066116333008
    10. 'd' → logprob: -4.147066116333008

Token 459: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2232801467180252
    2. ' for' → logprob: -2.348280191421509
    3. ',' → logprob: -2.848280191421509
    4. ':' → logprob: -3.848280191421509
    5. '   ' → logprob: -4.97327995300293
    6. 'for' → logprob: -4.97327995300293
    7. '<|end|>' → logprob: -6.09827995300293
    8. '           ' → logprob: -6.34827995300293
    9. ' ,' → logprob: -6.72327995300293
    10. ' (' → logprob: -7.22327995300293

Token 460: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9390338063240051
    2. ':' → logprob: -1.0640337467193604
    3. '       ' → logprob: -2.4390337467193604
    4. '   ' → logprob: -2.8140337467193604
    5. ',' → logprob: -3.0640337467193604
    6. 'for' → logprob: -3.3140337467193604
    7. ')' → logprob: -4.8140339851379395
    8. ' :' → logprob: -4.8140339851379395
    9. '           ' → logprob: -5.8140339851379395
    10. ':
' → logprob: -6.3140339851379395

Token 461: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08336663991212845
    2. 'for' → logprob: -2.583366632461548
    3. '       ' → logprob: -5.458366870880127
    4. '   ' → logprob: -9.083366394042969
    5. ' range' → logprob: -10.333366394042969
    6. '	for' → logprob: -10.958366394042969
    7. 'range' → logprob: -11.583366394042969
    8. ':' → logprob: -11.583366394042969
    9. ' ' → logprob: -12.333366394042969
    10. ',' → logprob: -12.333366394042969

Token 462: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23373867571353912
    2. '   ' → logprob: -2.483738660812378
    3. 'for' → logprob: -2.858738660812378
    4. ':' → logprob: -3.108738660812378
    5. ')' → logprob: -4.733738899230957
    6. '       ' → logprob: -5.608738899230957
    7. '):' → logprob: -6.233738899230957
    8. ' :' → logprob: -6.233738899230957
    9. ',' → logprob: -6.483738899230957
    10. ' in' → logprob: -6.858738899230957

Token 463: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3773174285888672
    2. '=' → logprob: -1.3773174285888672
    3. ' for' → logprob: -3.252317428588867
    4. 'range' → logprob: -4.252317428588867
    5. 'urrent' → logprob: -5.877317428588867
    6. ' =' → logprob: -6.127317428588867
    7. 'h' → logprob: -7.377317428588867
    8. 'ont' → logprob: -7.877317428588867
    9. ' in' → logprob: -7.877317428588867
    10. ')' → logprob: -8.002317428588867

Token 464: '-à' (ID: 56297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2737317681312561
    2. ' for' → logprob: -2.0237317085266113
    3. ' d' → logprob: -3.2737317085266113
    4. ' a' → logprob: -4.648731708526611
    5. '_' → logprob: -4.773731708526611
    6. ' de' → logprob: -5.023731708526611
    7. 'range' → logprob: -5.023731708526611
    8. ' à' → logprob: -5.273731708526611
    9. ' pour' → logprob: -5.398731708526611
    10. '   ' → logprob: -5.523731708526611

Token 465: '-dire' (ID: 76064)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.40889376401901245
    2. 'range' → logprob: -1.1588938236236572
    3. 'n' → logprob: -4.908893585205078
    4. '0' → logprob: -5.408893585205078
    5. '1' → logprob: -5.533893585205078
    6. 'd' → logprob: -5.658893585205078
    7. ' ' → logprob: -7.408893585205078
    8. ' d' → logprob: -7.658893585205078
    9. ' N' → logprob: -9.283893585205078
    10. '   ' → logprob: -9.408893585205078

Token 466: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03850787878036499
    2. 'for' → logprob: -3.4135079383850098
    3. ' d' → logprob: -6.16350793838501
    4. ' pour' → logprob: -6.78850793838501
    5. ' from' → logprob: -7.78850793838501
    6. ' ' → logprob: -7.91350793838501
    7. 'd' → logprob: -8.038507461547852
    8. ' range' → logprob: -8.413507461547852
    9. '   ' → logprob: -9.788507461547852
    10. ' de' → logprob: -9.788507461547852

Token 467: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38707008957862854
    2. '0' → logprob: -1.1370700597763062
    3. ' d' → logprob: -9.137069702148438
    4. 'd' → logprob: -9.637069702148438
    5. ' range' → logprob: -11.012069702148438
    6. 'range' → logprob: -13.637069702148438
    7. ' for' → logprob: -13.762069702148438
    8. '_' → logprob: -14.012069702148438
    9. '   ' → logprob: -14.387069702148438
    10. '    ' → logprob: -14.449569702148438

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00170684396289289
    2. ' ' → logprob: -6.376707077026367
    3. 'd' → logprob: -12.376707077026367
    4. 'range' → logprob: -16.251707077026367
    5. ' d' → logprob: -16.626707077026367
    6. 'for' → logprob: -16.626707077026367
    7. ' range' → logprob: -17.501707077026367
    8. '   ' → logprob: -17.501707077026367
    9. 'digit' → logprob: -17.751707077026367
    10. '```' → logprob: -18.501707077026367

Token 469: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.019767411053180695
    2. ' to' → logprob: -4.5197672843933105
    3. ' ' → logprob: -5.6447672843933105
    4. 'à' → logprob: -5.8947672843933105
    5. ' a' → logprob: -7.1447672843933105
    6. ' jusqu' → logprob: -7.5197672843933105
    7. ',' → logprob: -8.269767761230469
    8. 'to' → logprob: -8.269767761230469
    9. ' au' → logprob: -9.019767761230469
    10. ' ' → logprob: -9.894767761230469

Token 470: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6613901257514954
    2. '9' → logprob: -1.0363900661468506
    3. ' d' → logprob: -2.5363900661468506
    4. 'd' → logprob: -3.0363900661468506
    5. ' (' → logprob: -6.53639030456543
    6. '(d' → logprob: -8.66139030456543
    7. '(' → logprob: -8.66139030456543
    8. '10' → logprob: -9.03639030456543
    9. '   ' → logprob: -11.03639030456543
    10. '	d' → logprob: -11.91139030456543

Token 471: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.017936041578650475
    2. 'd' → logprob: -4.1429362297058105
    3. ' ' → logprob: -6.5179362297058105
    4. '(d' → logprob: -9.142935752868652
    5. ' d' → logprob: -9.267935752868652
    6. ' (' → logprob: -9.267935752868652
    7. '(' → logprob: -9.642935752868652
    8. '10' → logprob: -10.142935752868652
    9. '```' → logprob: -11.642935752868652
    10. '   ' → logprob: -11.892935752868652

Token 472: ' inclus' (ID: 11891)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1279881000518799
    2. ':' → logprob: -1.2529881000518799
    3. '   ' → logprob: -1.5029881000518799
    4. ')' → logprob: -2.12798810005188
    5. '):' → logprob: -4.002987861633301
    6. ' :' → logprob: -4.877987861633301
    7. ',' → logprob: -5.127987861633301
    8. ' for' → logprob: -5.127987861633301
    9. ' )' → logprob: -5.877987861633301
    10. ' ' → logprob: -6.627987861633301

Token 473: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8173855543136597
    2. ' for' → logprob: -1.4423855543136597
    3. ':' → logprob: -1.5673855543136597
    4. '   ' → logprob: -2.567385673522949
    5. 'for' → logprob: -4.192385673522949
    6. ')' → logprob: -5.567385673522949
    7. ' :' → logprob: -5.692385673522949
    8. ',' → logprob: -5.942385673522949
    9. '    ' → logprob: -5.942385673522949
    10. '):' → logprob: -6.192385673522949

Token 474: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3854846954345703
    2. '       ' → logprob: -1.7604846954345703
    3. '):' → logprob: -2.3854846954345703
    4. '   ' → logprob: -3.3854846954345703
    5. ')' → logprob: -4.38548469543457
    6. ' for' → logprob: -5.76048469543457
    7. ' :' → logprob: -6.13548469543457
    8. '):
' → logprob: -6.26048469543457
    9. ':
' → logprob: -7.01048469543457
    10. ',' → logprob: -7.13548469543457

Token 475: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4770515263080597
    2. 'for' (adapté à ' for') → logprob: -0.9770514965057373
    3. '   ' → logprob: -6.852051734924316
    4. '       ' → logprob: -7.227051734924316
    5. '0' → logprob: -8.477051734924316
    6. '9' → logprob: -8.602051734924316
    7. ':' → logprob: -8.727051734924316
    8. '	for' → logprob: -8.727051734924316
    9. ' ' → logprob: -9.352051734924316
    10. '    ' → logprob: -9.352051734924316

Token 476: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.865531325340271
    2. ' digit' → logprob: -1.365531325340271
    3. ' val' → logprob: -2.4905314445495605
    4. 'd' → logprob: -2.4905314445495605
    5. 'digit' → logprob: -2.8655314445495605
    6. ' dig' → logprob: -3.8655314445495605
    7. 'dig' → logprob: -4.6155314445495605
    8. ' nd' → logprob: -4.7405314445495605
    9. 'val' → logprob: -5.1780314445495605
    10. ' c' → logprob: -5.6780314445495605

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007948352955281734
    2. 'in' → logprob: -5.007948398590088
    3. ' ' → logprob: -7.007948398590088
    4. 'd' → logprob: -9.00794792175293
    5. ' i' → logprob: -9.88294792175293
    6. '  ' → logprob: -10.25794792175293
    7. '_' → logprob: -10.75794792175293
    8. ',' → logprob: -10.88294792175293
    9. 'i' → logprob: -11.25794792175293
    10. ')' → logprob: -11.38294792175293

Token 478: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.021915877237915993
    2. 'range' → logprob: -4.271915912628174
    3. ' ' → logprob: -5.146915912628174
    4. '0' → logprob: -6.271915912628174
    5. '(range' → logprob: -12.021915435791016
    6. ' in' → logprob: -12.271915435791016
    7. '10' → logprob: -12.771915435791016
    8. '9' → logprob: -14.021915435791016
    9. '	range' → logprob: -14.021915435791016
    10. ' xrange' → logprob: -14.646915435791016

Token 479: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.815280696377158e-05
    2. '10' → logprob: -9.500078201293945
    3. '(
' → logprob: -13.125078201293945
    4. ' (' → logprob: -13.875078201293945
    5. '0' → logprob: -15.250078201293945
    6. '((' → logprob: -17.500078201293945
    7. ' ' → logprob: -17.500078201293945
    8. '(d' → logprob: -17.875078201293945
    9. '(
' → logprob: -19.875078201293945
    10. '   ' → logprob: -20.125078201293945

Token 480: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.3676733690081164e-05
    2. '0' → logprob: -10.75002384185791
    3. ' ' → logprob: -13.50002384185791
    4. '(' → logprob: -14.25002384185791
    5. '   ' → logprob: -16.000022888183594
    6. '1' → logprob: -18.250022888183594
    7. 'd' → logprob: -18.500022888183594
    8. '	' → logprob: -19.375022888183594
    9. ')' → logprob: -20.375022888183594
    10. '  ' → logprob: -20.625022888183594

Token 481: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002205828350270167
    2. ' ):' → logprob: -9.25022029876709
    3. '):
' → logprob: -9.37522029876709
    4. ')' → logprob: -10.87522029876709
    5. ':' → logprob: -11.00022029876709
    6. '   ' → logprob: -13.25022029876709
    7. '       ' → logprob: -14.00022029876709
    8. '):
' → logprob: -15.12522029876709
    9. ' ' → logprob: -15.12522029876709
    10. '():' → logprob: -15.87522029876709

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9696202874183655
    2. ':' → logprob: -1.0946202278137207
    3. '<|end|>' → logprob: -1.5946202278137207
    4. '       ' → logprob: -2.7196202278137207
    5. '<|end|>' → logprob: -5.469620227813721
    6. ' if' → logprob: -5.844620227813721
    7. ' :' → logprob: -6.094620227813721
    8. ':
' → logprob: -6.094620227813721
    9. ',' → logprob: -6.094620227813721
    10. ' ' → logprob: -7.094620227813721

Token 483: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4564174711704254
    2. ':' → logprob: -1.331417441368103
    3. '           ' → logprob: -3.4564175605773926
    4. '<|end|>' → logprob: -3.8314175605773926
    5. ':
' → logprob: -4.456417560577393
    6. ' for' → logprob: -4.581417560577393
    7. ',' → logprob: -5.081417560577393
    8. ' :' → logprob: -5.081417560577393
    9. ' ' → logprob: -5.206417560577393
    10. ' :
' → logprob: -6.581417560577393

Token 484: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08114665001630783
    2. ' for' → logprob: -2.581146717071533
    3. '           ' → logprob: -6.331146717071533
    4. '               ' → logprob: -8.081146240234375
    5. ' ' → logprob: -9.956146240234375
    6. 'if' → logprob: -10.081146240234375
    7. '   ' → logprob: -10.581146240234375
    8. '            ' → logprob: -10.956146240234375
    9. '       ' → logprob: -11.706146240234375
    10. '#' → logprob: -12.206146240234375

Token 485: ' regarde' (ID: 115760)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1293354481458664
    2. 'for' → logprob: -2.129335403442383
    3. 's' → logprob: -6.504335403442383
    4. '=' → logprob: -9.129335403442383
    5. ' if' → logprob: -9.629335403442383
    6. ' =' → logprob: -9.879335403442383
    7. ']' → logprob: -9.879335403442383
    8. '   ' → logprob: -9.879335403442383
    9. ' continue' → logprob: -10.004335403442383
    10. ' ' → logprob: -10.254335403442383

Token 486: ' chacun' (ID: 52136)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08830409497022629
    2. ' if' → logprob: -3.338304042816162
    3. ' ' → logprob: -4.213304042816162
    4. 'for' → logprob: -4.213304042816162
    5. '   ' → logprob: -4.963304042816162
    6. '       ' → logprob: -5.338304042816162
    7. ' ' → logprob: -6.588304042816162
    8. ' dp' → logprob: -6.838304042816162
    9. '    ' → logprob: -7.088304042816162
    10. '  ' → logprob: -7.338304042816162

Token 487: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23436391353607178
    2. ' for' → logprob: -2.4843640327453613
    3. '   ' → logprob: -3.4843640327453613
    4. ' ' → logprob: -4.109364032745361
    5. 'for' → logprob: -4.234364032745361
    6. ' [' → logprob: -4.609364032745361
    7. ' de' → logprob: -4.734364032745361
    8. '[' → logprob: -4.984364032745361
    9. '0' → logprob: -5.484364032745361
    10. ' (' → logprob: -5.609364032745361

Token 488: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002553903963416815
    2. ' ' → logprob: -6.002553939819336
    3. '(' → logprob: -10.127553939819336
    4. ' deux' → logprob: -11.377553939819336
    5. '0' → logprob: -11.752553939819336
    6. '[' → logprob: -12.127553939819336
    7. ' (' → logprob: -12.877553939819336
    8. ' two' → logprob: -13.377553939819336
    9. 'est' → logprob: -13.502553939819336
    10. '3' → logprob: -13.502553939819336

Token 489: ' cas' (ID: 2108)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5336863398551941
    2. 'for' → logprob: -2.283686399459839
    3. ' states' → logprob: -2.658686399459839
    4. '[' → logprob: -2.908686399459839
    5. ' états' → logprob: -3.283686399459839
    6. ' ' → logprob: -3.533686399459839
    7. 'est' → logprob: -3.658686399459839
    8. ' est' → logprob: -3.783686399459839
    9. ' [' → logprob: -4.15868616104126
    10. ' estados' → logprob: -4.40868616104126

Token 490: ' possibles' (ID: 97753)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8003526329994202
    2. ' :' → logprob: -0.9253526329994202
    3. ' for' → logprob: -2.6753525733947754
    4. ',' → logprob: -3.5503525733947754
    5. '           ' → logprob: -4.050352573394775
    6. '               ' → logprob: -4.425352573394775
    7. ' :
' → logprob: -4.800352573394775
    8. ' (' → logprob: -5.675352573394775
    9. ' in' → logprob: -6.050352573394775
    10. '[' → logprob: -6.050352573394775

Token 491: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20797055959701538
    2. ' :' → logprob: -2.08297061920166
    3. ' for' → logprob: -3.08297061920166
    4. 'for' → logprob: -5.08297061920166
    5. ' :
' → logprob: -5.58297061920166
    6. ':
' → logprob: -6.08297061920166
    7. '           ' → logprob: -6.33297061920166
    8. ',' → logprob: -6.70797061920166
    9. '               ' → logprob: -7.33297061920166
    10. '[' → logprob: -7.83297061920166

Token 492: ' le' (ID: 505)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.10474111139774323
    2. 'est' → logprob: -2.354741096496582
    3. 'e' → logprob: -6.729741096496582
    4. ' e' → logprob: -6.979741096496582
    5. ' dp' → logprob: -7.354741096496582
    6. 'dp' → logprob: -7.979741096496582
    7. ' is' → logprob: -8.729741096496582
    8. ' ' → logprob: -8.792241096496582
    9. ' d' → logprob: -9.104741096496582
    10. 'd' → logprob: -9.854741096496582

Token 493: ' dr' (ID: 1498)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.21626757085323334
    2. ' est' → logprob: -1.7162675857543945
    3. 'e' → logprob: -5.3412675857543945
    4. 'plus' → logprob: -6.3412675857543945
    5. 'dp' → logprob: -6.4662675857543945
    6. 'is' → logprob: -6.9662675857543945
    7. ' plus' → logprob: -7.0912675857543945
    8. ' is' → logprob: -7.7162675857543945
    9. ' dp' → logprob: -7.7162675857543945
    10. 'p' → logprob: -7.9662675857543945

Token 494: 'apeau' (ID: 140059)
  Prédit: 'apeau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apeau' → logprob: -0.018448760733008385
    2. 'ap' → logprob: -4.143448829650879
    3. 'dp' → logprob: -7.268448829650879
    4. 'op' → logprob: -7.643448829650879
    5. 'ape' → logprob: -7.893448829650879
    6. 'ep' → logprob: -9.143448829650879
    7. 'apé' → logprob: -9.143448829650879
    8. 'p' → logprob: -9.143448829650879
    9. 'ép' → logprob: -9.393448829650879
    10. 'e' → logprob: -9.518448829650879

Token 495: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5583803057670593
    2. ' for' → logprob: -1.558380365371704
    3. 's' → logprob: -2.433380365371704
    4. '[' → logprob: -3.558380365371704
    5. ' s' → logprob: -3.558380365371704
    6. ',' → logprob: -3.933380365371704
    7. ' est' → logprob: -4.433380126953125
    8. 'for' → logprob: -4.558380126953125
    9. ' de' → logprob: -5.808380126953125
    10. ' ' → logprob: -5.933380126953125

Token 496: '_plus' (ID: 68089)
  Prédit: '_plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plus' → logprob: -0.0005755512393079698
    2. '_' → logprob: -7.500575542449951
    3. '_p' → logprob: -11.37557601928711
    4. 'plus' → logprob: -12.00057601928711
    5. '+' → logprob: -13.75057601928711
    6. '\' → logprob: -14.37557601928711
    7. ' plus' → logprob: -14.37557601928711
    8. '_PLUS' → logprob: -14.50057601928711
    9. ' _' → logprob: -14.62557601928711
    10. '_d' → logprob: -14.87557601928711

Token 497: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.1281772255897522
    2. 'pet' → logprob: -2.1281771659851074
    3. '_pet' → logprob: -6.878177165985107
    4. '_' → logprob: -9.253177642822266
    5. '_plus' → logprob: -10.378177642822266
    6. 'Petit' → logprob: -10.503177642822266
    7. '```' → logprob: -10.628177642822266
    8. 'plus' → logprob: -10.878177642822266
    9. ' petit' → logprob: -12.503177642822266
    10. '_t' → logprob: -12.878177642822266

Token 498: 'etit' (ID: 108358)
  Prédit: 'etit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etit' → logprob: -0.0002270198310725391
    2. 'et' → logprob: -8.750226974487305
    3. 'tit' → logprob: -11.125226974487305
    4. 'osit' → logprob: -11.375226974487305
    5. 'e' → logprob: -12.000226974487305
    6. 'os' → logprob: -12.125226974487305
    7. 'etite' → logprob: -12.125226974487305
    8. 'lus' → logprob: -12.250226974487305
    9. 'tet' → logprob: -12.250226974487305
    10. '```' → logprob: -12.250226974487305

Token 499: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5429231524467468
    2. ' for' → logprob: -1.5429232120513916
    3. ',' → logprob: -3.0429232120513916
    4. 'for' → logprob: -3.1679232120513916
    5. '           ' → logprob: -3.2929232120513916
    6. '       ' → logprob: -3.9179232120513916
    7. ' in' → logprob: -4.4179229736328125
    8. '               ' → logprob: -4.7929229736328125
    9. ':
' → logprob: -4.7929229736328125
    10. '[' → logprob: -5.0429229736328125

Token 500: 'j' (ID: 73)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010482928482815623
    2. '0' → logprob: -7.6260480880737305
    3. ')' → logprob: -8.00104808807373
    4. 'est' → logprob: -8.87604808807373
    5. ' ' → logprob: -10.50104808807373
    6. ' est' → logprob: -11.25104808807373
    7. 'for' → logprob: -11.37604808807373
    8. '):' → logprob: -11.62604808807373
    9. '   ' → logprob: -12.25104808807373
    10. '1' → logprob: -12.62604808807373

Token 501: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.46885713934898376
    2. ')' → logprob: -1.2188571691513062
    3. 'in' → logprob: -3.9688570499420166
    4. ',' → logprob: -4.093857288360596
    5. 'ust' → logprob: -4.093857288360596
    6. '=' → logprob: -4.718857288360596
    7. ' )' → logprob: -5.593857288360596
    8. '])' → logprob: -6.093857288360596
    9. ' =' → logprob: -6.468857288360596
    10. '   ' → logprob: -6.843857288360596

Token 502: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011746286181733012
    2. ' ' → logprob: -6.751174449920654
    3. ')' → logprob: -12.626174926757812
    4. ' range' → logprob: -15.126174926757812
    5. 'range' → logprob: -15.251174926757812
    6. '2' → logprob: -15.626174926757812
    7. ' est' → logprob: -16.376174926757812
    8. ' in' → logprob: -16.501174926757812
    9. '   ' → logprob: -17.001174926757812
    10. '1' → logprob: -17.126174926757812

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010318557906430215
    2. '2' → logprob: -9.250102996826172
    3. 'range' → logprob: -12.250102996826172
    4. ' ' → logprob: -13.250102996826172
    5. '1' → logprob: -15.000102996826172
    6. ')' → logprob: -16.250102996826172
    7. '   ' → logprob: -17.375102996826172
    8. 'for' → logprob: -17.375102996826172
    9. '012' → logprob: -17.375102996826172
    10. '01' → logprob: -17.750102996826172

Token 504: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.19701950252056122
    2. ',' → logprob: -1.9470194578170776
    3. ')' → logprob: -4.072019577026367
    4. 'or' → logprob: -5.197019577026367
    5. '):' → logprob: -5.197019577026367
    6. ';' → logprob: -6.322019577026367
    7. '):
' → logprob: -6.697019577026367
    8. ' ou' → logprob: -6.947019577026367
    9. '
' → logprob: -7.197019577026367
    10. ' and' → logprob: -8.072019577026367

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '
' → logprob: -16.501928329467773
    4. '   ' → logprob: -17.126928329467773
    5. '  ' → logprob: -18.251928329467773
    6. ')' → logprob: -18.251928329467773
    7. ' ' → logprob: -18.626928329467773
    8. ',' → logprob: -19.251928329467773
    9. '    ' → logprob: -19.501928329467773
    10. '0' → logprob: -19.626928329467773

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. 'for' → logprob: -15.3751802444458
    4. '
' → logprob: -15.5001802444458
    5. '```' → logprob: -16.375181198120117
    6. '   ' → logprob: -16.375181198120117
    7. '0' → logprob: -16.625181198120117
    8. ')' → logprob: -17.125181198120117
    9. ' for' → logprob: -17.250181198120117
    10. '<|end|>' → logprob: -18.000181198120117

Token 507: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5796948075294495
    2. '):
' → logprob: -0.8296948075294495
    3. ')' → logprob: -5.954694747924805
    4. '           ' → logprob: -7.079694747924805
    5. '       ' → logprob: -9.204694747924805
    6. '):
' → logprob: -9.704694747924805
    7. ' ):' → logprob: -10.329694747924805
    8. '               ' → logprob: -10.454694747924805
    9. '):

' → logprob: -10.454694747924805
    10. ' ):
' → logprob: -10.579694747924805

Token 508: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04819847643375397
    2. '):' → logprob: -4.298198699951172
    3. ':
' → logprob: -4.298198699951172
    4. '           ' → logprob: -4.923198699951172
    5. ' for' → logprob: -5.173198699951172
    6. '):
' → logprob: -5.548198699951172
    7. 'for' → logprob: -6.798198699951172
    8. '       ' → logprob: -7.673198699951172
    9. ' :' → logprob: -7.798198699951172
    10. '               ' → logprob: -8.173198699951172

Token 509: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4174196124076843
    2. ' for' → logprob: -1.417419672012329
    3. ':
' → logprob: -3.167419672012329
    4. '           ' → logprob: -3.667419672012329
    5. 'for' (adapté à ' for') → logprob: -4.16741943359375
    6. '               ' → logprob: -4.91741943359375
    7. '):
' → logprob: -6.04241943359375
    8. '       ' → logprob: -6.29241943359375
    9. '):' → logprob: -6.29241943359375
    10. ' :' → logprob: -7.16741943359375

Token 510: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.47507667541503906
    2. 'j' → logprob: -0.9750766754150391
    3. ' est' → logprob: -7.475076675415039
    4. 'est' → logprob: -8.350076675415039
    5. ' e' → logprob: -10.100076675415039
    6. 'e' → logprob: -10.100076675415039
    7. ' ' → logprob: -10.225076675415039
    8. '	j' → logprob: -11.037576675415039
    9. '_j' → logprob: -12.100076675415039
    10. '(j' → logprob: -12.475076675415039

Token 511: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38693392276763916
    2. 'in' → logprob: -1.1369339227676392
    3. ' ' → logprob: -10.886934280395508
    4. '<|end|>' → logprob: -11.011934280395508
    5. 'In' → logprob: -11.886934280395508
    6. ')' → logprob: -12.136934280395508
    7. '	in' → logprob: -12.261934280395508
    8. ',' → logprob: -13.261934280395508
    9. '```' → logprob: -13.886934280395508
    10. '[' → logprob: -14.136934280395508

Token 512: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12732230126857758
    2. ' range' → logprob: -2.127322196960449
    3. '[' → logprob: -7.877322196960449
    4. '0' → logprob: -12.12732219696045
    5. '(' → logprob: -12.37732219696045
    6. ' ' → logprob: -13.12732219696045
    7. ' [' → logprob: -14.00232219696045
    8. '(range' → logprob: -14.25232219696045
    9. '   ' → logprob: -14.37732219696045
    10. '2' → logprob: -14.37732219696045

Token 513: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021904718596488237
    2. '2' → logprob: -6.127190589904785
    3. '(
' → logprob: -12.502190589904785
    4. ' (' → logprob: -14.127190589904785
    5. ' ' → logprob: -14.752190589904785
    6. '   ' → logprob: -14.752190589904785
    7. '	' → logprob: -17.50218963623047
    8. '       ' → logprob: -18.25218963623047
    9. '    ' → logprob: -18.37718963623047
    10. '           ' → logprob: -19.12718963623047

Token 514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.526570384972729e-05
    2. ' ' → logprob: -9.875055313110352
    3. '   ' → logprob: -12.750055313110352
    4. '(' → logprob: -15.375055313110352
    5. ')' → logprob: -15.875055313110352
    6. '0' → logprob: -16.87505531311035
    7. '  ' → logprob: -17.00005531311035
    8. '	' → logprob: -17.06255531311035
    9. '    ' → logprob: -17.12505531311035
    10. '
' → logprob: -17.31255531311035

Token 515: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01608375646173954
    2. '):
' → logprob: -4.141083717346191
    3. ')' → logprob: -10.891083717346191
    4. '       ' → logprob: -11.516083717346191
    5. ':' → logprob: -11.766083717346191
    6. '):
' → logprob: -12.641083717346191
    7. '           ' → logprob: -12.891083717346191
    8. '):

' → logprob: -13.141083717346191
    9. ' ):' → logprob: -13.391083717346191
    10. '               ' → logprob: -13.641083717346191

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02646738477051258
    2. ':' → logprob: -3.7764673233032227
    3. '<|end|>' → logprob: -7.026467323303223
    4. ' for' → logprob: -7.276467323303223
    5. '           ' → logprob: -7.651467323303223
    6. ',' → logprob: -8.026467323303223
    7. '       ' → logprob: -8.276467323303223
    8. '<|end|>' → logprob: -9.151467323303223
    9. '                       ' → logprob: -9.401467323303223
    10. ':
' → logprob: -9.526467323303223

Token 517: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009629647247493267
    2. ' for' → logprob: -5.259629726409912
    3. ':' → logprob: -6.634629726409912
    4. '<|end|>' → logprob: -6.884629726409912
    5. '                       ' → logprob: -7.634629726409912
    6. '		           ' → logprob: -7.759629726409912
    7. '               ' → logprob: -8.509629249572754
    8. '<|end|>' → logprob: -8.634629249572754
    9. ',' → logprob: -8.759629249572754
    10. '                    ' → logprob: -9.634629249572754

Token 518: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027692171279340982
    2. ' for' → logprob: -6.0027689933776855
    3. '                   ' → logprob: -8.377769470214844
    4. '               ' → logprob: -10.002769470214844
    5. '#' → logprob: -11.127769470214844
    6. '                ' → logprob: -13.877769470214844
    7. '   ' → logprob: -14.127769470214844
    8. '	for' → logprob: -14.252769470214844
    9. ' ' → logprob: -14.877769470214844
    10. '                 ' → logprob: -15.127769470214844

Token 519: ' considère' (ID: 176437)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5002037286758423
    2. 'for' → logprob: -1.2502037286758423
    3. ' if' → logprob: -3.2502036094665527
    4. '=' → logprob: -3.3752036094665527
    5. 'if' → logprob: -4.125203609466553
    6. ' =' → logprob: -4.625203609466553
    7. 's' → logprob: -5.875203609466553
    8. '           ' → logprob: -7.500203609466553
    9. '[' → logprob: -7.750203609466553
    10. ' ' → logprob: -7.875203609466553

Token 520: ' le' (ID: 505)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0648186206817627
    2. 'for' → logprob: -1.1898186206817627
    3. ' la' → logprob: -2.8148186206817627
    4. 'k' → logprob: -2.9398186206817627
    5. ' le' → logprob: -3.1898186206817627
    6. ' ' → logprob: -3.1898186206817627
    7. 'comp' → logprob: -3.4398186206817627
    8. ' k' → logprob: -3.8148186206817627
    9. 'le' → logprob: -4.189818382263184
    10. ' les' → logprob: -4.189818382263184

Token 521: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.455903559923172
    2. ' dp' → logprob: -1.9559035301208496
    3. 'comp' → logprob: -2.9559035301208496
    4. 'd' → logprob: -3.0809035301208496
    5. ' nombre' → logprob: -3.7059035301208496
    6. 'nombre' → logprob: -4.08090353012085
    7. ' d' → logprob: -4.08090353012085
    8. 'ch' → logprob: -4.33090353012085
    9. 'c' → logprob: -4.70590353012085
    10. 'val' → logprob: -5.08090353012085

Token 522: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.773849606513977
    2. '[' → logprob: -2.3988494873046875
    3. 'd' → logprob: -2.3988494873046875
    4. 's' → logprob: -3.0238494873046875
    5. ' choisi' → logprob: -3.0238494873046875
    6. ')' → logprob: -3.2738494873046875
    7. ' à' → logprob: -3.6488494873046875
    8. '][' → logprob: -3.6488494873046875
    9. '[position' → logprob: -3.6488494873046875
    10. '[pos' → logprob: -3.6488494873046875

Token 523: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.001334309577942
    2. 'fa' → logprob: -1.501334309577942
    3. ' façons' → logprob: -1.626334309577942
    4. 'man' → logprob: -2.0013341903686523
    5. ' man' → logprob: -3.5013341903686523
    6. ' fa' → logprob: -4.876334190368652
    7. ' ch' → logprob: -5.251334190368652
    8. 'ways' → logprob: -5.376334190368652
    9. ' non' → logprob: -5.751334190368652
    10. 'fois' → logprob: -5.751334190368652

Token 524: ' non' (ID: 2893)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.2617378234863281
    2. 'non' → logprob: -1.6367378234863281
    3. ' non' → logprob: -3.386737823486328
    4. 'nonnull' → logprob: -6.511737823486328
    5. '_n' → logprob: -8.761737823486328
    6. '_NON' → logprob: -10.386737823486328
    7. '   ' → logprob: -10.511737823486328
    8. '_' → logprob: -10.511737823486328
    9. 'n' → logprob: -10.511737823486328
    10. '```' → logprob: -10.886737823486328

Token 525: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4151979982852936
    2. 'nul' → logprob: -1.5401979684829712
    3. ' n' → logprob: -3.4151980876922607
    4. '0' → logprob: -3.7901980876922607
    5. '   ' → logprob: -4.040197849273682
    6. 'null' → logprob: -4.415197849273682
    7. '               ' → logprob: -5.165197849273682
    8. 'for' → logprob: -5.415197849273682
    9. 'nz' → logprob: -5.540197849273682
    10. '       ' → logprob: -5.915197849273682

Token 526: 'uls' (ID: 13433)
  Prédit: 'uls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uls' → logprob: -0.021092280745506287
    2. 'z' → logprob: -3.896092176437378
    3. 'ul' → logprob: -8.521092414855957
    4. 'ulls' → logprob: -9.021092414855957
    5. 'ulos' → logprob: -9.896092414855957
    6. 'nz' → logprob: -10.021092414855957
    7. 'n' → logprob: -10.646092414855957
    8. '_z' → logprob: -10.771092414855957
    9. '[' → logprob: -10.896092414855957
    10. 'onz' → logprob: -11.271092414855957

Token 527: ' déjà' (ID: 21229)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5332290530204773
    2. 'for' → logprob: -1.408229112625122
    3. '               ' → logprob: -2.158229112625122
    4. '                   ' → logprob: -3.783229112625122
    5. ' used' → logprob: -4.658228874206543
    6. ' pour' → logprob: -5.533228874206543
    7. 'used' → logprob: -5.908228874206543
    8. ',' → logprob: -6.158228874206543
    9. ' utilisé' → logprob: -6.783228874206543
    10. '           ' → logprob: -6.908228874206543

Token 528: ' utilisés' (ID: 94258)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.480752557516098
    2. ' utilisés' → logprob: -0.9807525873184204
    3. 'used' → logprob: -6.105752468109131
    4. ' used' → logprob: -6.730752468109131
    5. 'pris' → logprob: -6.730752468109131
    6. ' pris' → logprob: -7.230752468109131
    7. ' utilisé' → logprob: -7.855752468109131
    8. ' utilis' → logprob: -8.480752944946289
    9. ' utilisées' → logprob: -8.730752944946289
    10. 'cons' → logprob: -9.230752944946289

Token 529: ' k' (ID: 372)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03965451940894127
    2. '                   ' → logprob: -3.539654493331909
    3. ' for' → logprob: -5.914654731750488
    4. 'for' → logprob: -5.914654731750488
    5. '                ' → logprob: -7.039654731750488
    6. ' in' → logprob: -7.164654731750488
    7. ',' → logprob: -7.414654731750488
    8. '<|end|>' → logprob: -7.414654731750488
    9. '                       ' → logprob: -8.289654731750488
    10. '           ' → logprob: -8.414654731750488

Token 530: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1182866320014
    2. 'in' → logprob: -2.868286609649658
    3. '               ' → logprob: -3.743286609649658
    4. 'for' → logprob: -3.993286609649658
    5. '                   ' → logprob: -5.243286609649658
    6. ' for' → logprob: -5.493286609649658
    7. ')' → logprob: -6.618286609649658
    8. '           ' → logprob: -8.243287086486816
    9. '+' → logprob: -8.493287086486816
    10. ']' → logprob: -8.743287086486816

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16311287879943848
    2. ' for' → logprob: -2.2881128787994385
    3. '                   ' → logprob: -3.4131128787994385
    4. 'for' → logprob: -4.788112640380859
    5. ' in' → logprob: -5.538112640380859
    6. ':' → logprob: -6.788112640380859
    7. '                ' → logprob: -7.538112640380859
    8. '           ' → logprob: -8.03811264038086
    9. '<|end|>' → logprob: -8.16311264038086
    10. '              ' → logprob: -8.66311264038086

Token 532: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36298319697380066
    2. 'for' (adapté à ' for') → logprob: -1.237983226776123
    3. '               ' → logprob: -4.362983226776123
    4. '                   ' → logprob: -6.737983226776123
    5. ':' → logprob: -8.237982749938965
    6. ' in' → logprob: -10.362982749938965
    7. '           ' → logprob: -10.487982749938965
    8. '                       ' → logprob: -10.612982749938965
    9. '	for' → logprob: -10.737982749938965
    10. '                               ' → logprob: -10.987982749938965

Token 533: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759446620941162
    2. 'k' → logprob: -0.8259446620941162
    3. 'K' → logprob: -13.200944900512695
    4. ' in' → logprob: -13.700944900512695
    5. 'range' → logprob: -14.325944900512695
    6. '(k' → logprob: -15.075944900512695
    7. ' ' → logprob: -15.325944900512695
    8. ' K' → logprob: -15.575944900512695
    9. ' ' → logprob: -15.825944900512695
    10. 'int' → logprob: -16.325944900512695

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009761401452124119
    2. 'in' → logprob: -4.634761333465576
    3. ' ' → logprob: -13.009761810302734
    4. '<|end|>' → logprob: -13.759761810302734
    5. '	in' → logprob: -14.009761810302734
    6. ')' → logprob: -14.884761810302734
    7. 'In' → logprob: -15.259761810302734
    8. 'range' → logprob: -15.884761810302734
    9. '[' → logprob: -16.009761810302734
    10. 's' → logprob: -16.634761810302734

Token 535: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269315630197525
    2. ' range' → logprob: -2.126931667327881
    3. '(range' → logprob: -12.751931190490723
    4. ' ' → logprob: -15.251931190490723
    5. '   ' → logprob: -16.12693214416504
    6. '	range' → logprob: -16.75193214416504
    7. '  ' → logprob: -17.75193214416504
    8. '    ' → logprob: -17.75193214416504
    9. ' in' → logprob: -18.12693214416504
    10. 'in' → logprob: -18.12693214416504

Token 536: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -2.6537622034084052e-05
    2. '(' → logprob: -10.87502670288086
    3. 'K' → logprob: -12.50002670288086
    4. '(k' → logprob: -12.87502670288086
    5. ' (' → logprob: -14.00002670288086
    6. '((' → logprob: -15.75002670288086
    7. '   ' → logprob: -16.00002670288086
    8. '(
' → logprob: -16.25002670288086
    9. ' K' → logprob: -17.12502670288086
    10. '(KERN' → logprob: -17.50002670288086

Token 537: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.506661833962426e-05
    2. ' +' → logprob: -9.37508487701416
    3. '+
' → logprob: -16.125085830688477
    4. '
' → logprob: -17.875085830688477
    5. '   ' → logprob: -18.125085830688477
    6. '[' → logprob: -18.375085830688477
    7. '2' → logprob: -19.125085830688477
    8. '＋' → logprob: -19.625085830688477
    9. ' ' → logprob: -19.750085830688477
    10. '()+' → logprob: -19.750085830688477

Token 538: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.686778503237292e-05
    2. '1' → logprob: -9.750097274780273
    3. ' ' → logprob: -10.250097274780273
    4. '   ' → logprob: -13.000097274780273
    5. '3' → logprob: -14.750097274780273
    6. '
' → logprob: -15.375097274780273
    7. '```' → logprob: -16.750097274780273
    8. '+' → logprob: -16.875097274780273
    9. '  ' → logprob: -17.000097274780273
    10. '    ' → logprob: -17.125097274780273

Token 539: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008482214179821312
    2. '):
' → logprob: -7.125848293304443
    3. ':' → logprob: -10.250847816467285
    4. ')' → logprob: -13.000847816467285
    5. ']:' → logprob: -13.125847816467285
    6. ' ):' → logprob: -14.000847816467285
    7. '):

' → logprob: -14.125847816467285
    8. '():' → logprob: -14.250847816467285
    9. '):
' → logprob: -14.500847816467285
    10. ']):' → logprob: -15.125847816467285

Token 540: '                   ' (ID: 699)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04074376821517944
    2. '):
' → logprob: -3.790743827819824
    3. ':' → logprob: -4.665743827819824
    4. ')' → logprob: -5.290743827819824
    5. '               ' → logprob: -6.540743827819824
    6. '                   ' → logprob: -7.040743827819824
    7. '                       ' → logprob: -8.790743827819824
    8. '           ' → logprob: -9.165743827819824
    9. ']:' → logprob: -9.915743827819824
    10. ':
' → logprob: -10.040743827819824

Token 541: ' #' (ID: 1069)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06891203671693802
    2. '):
' → logprob: -3.6939120292663574
    3. ':' → logprob: -3.8189120292663574
    4. ')' → logprob: -4.568912029266357
    5. '                       ' → logprob: -5.318912029266357
    6. '                   ' → logprob: -5.568912029266357
    7. ' :' → logprob: -8.318912506103516
    8. '                           ' → logprob: -9.318912506103516
    9. ':
' → logprob: -9.318912506103516
    10. ',' → logprob: -10.068912506103516

Token 542: ' flag' (ID: 9641)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35264140367507935
    2. ' if' → logprob: -1.2276413440704346
    3. '                   ' → logprob: -6.227641582489014
    4. '                       ' → logprob: -6.477641582489014
    5. 'val' → logprob: -7.852641582489014
    6. '   ' → logprob: -8.852641105651855
    7. ' val' → logprob: -9.977641105651855
    8. '                           ' → logprob: -10.602641105651855
    9. '                    ' → logprob: -11.727641105651855
    10. '                     ' → logprob: -11.977641105651855

Token 543: 'j' (ID: 73)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3401055634021759
    2. '=' → logprob: -1.3401055335998535
    3. 'if' → logprob: -4.0901055335998535
    4. 's' → logprob: -5.4651055335998535
    5. ' if' → logprob: -5.5901055335998535
    6. 'dp' → logprob: -7.4651055335998535
    7. ' ==' → logprob: -8.840106010437012
    8. '==' → logprob: -9.090106010437012
    9. ')' → logprob: -9.715106010437012
    10. 'for' → logprob: -9.840106010437012

Token 544: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18279162049293518
    2. '=' → logprob: -1.8077915906906128
    3. 'if' → logprob: -7.307791709899902
    4. ' ' → logprob: -7.557791709899902
    5. ' if' → logprob: -7.932791709899902
    6. ')' → logprob: -8.182791709899902
    7. ',' → logprob: -8.307791709899902
    8. 'f' → logprob: -8.557791709899902
    9. 's' → logprob: -8.807791709899902
    10. ']' → logprob: -8.932791709899902

Token 545: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1160414218902588
    2. ' ' → logprob: -1.4910414218902588
    3. ' j' → logprob: -2.116041421890259
    4. ' dp' → logprob: -2.241041421890259
    5. '1' → logprob: -2.491041421890259
    6. ' int' → logprob: -2.616041421890259
    7. 'dp' → logprob: -3.866041421890259
    8. 'j' → logprob: -4.86604118347168
    9. 'int' → logprob: -4.86604118347168
    10. '(' → logprob: -4.86604118347168

Token 546: ' nouveau' (ID: 23184)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17407861351966858
    2. ' ' → logprob: -2.6740787029266357
    3. ' j' → logprob: -3.4240787029266357
    4. '0' → logprob: -3.7990787029266357
    5. ' (' → logprob: -4.174078464508057
    6. 'j' → logprob: -4.799078464508057
    7. ' int' → logprob: -5.174078464508057
    8. '(j' → logprob: -5.799078464508057
    9. 'int' → logprob: -6.924078464508057
    10. '(' → logprob: -7.174078464508057

Token 547: ' état' (ID: 59181)
  Prédit: '_est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_est' → logprob: -0.9163078665733337
    2. '_flag' → logprob: -1.0413079261779785
    3. '_' → logprob: -1.7913079261779785
    4. '_d' → logprob: -3.5413079261779785
    5. '_j' → logprob: -4.7913079261779785
    6. '_dp' → logprob: -4.7913079261779785
    7. ' =' → logprob: -4.9163079261779785
    8. 'est' → logprob: -5.2913079261779785
    9. 'flag' → logprob: -5.5413079261779785
    10. ' _' → logprob: -5.6663079261779785

Token 548: ' "' (ID: 392)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35812392830848694
    2. '=' → logprob: -1.2331238985061646
    3. '                   ' → logprob: -5.108123779296875
    4. 'flag' → logprob: -6.358123779296875
    5. '_flag' → logprob: -7.358123779296875
    6. ' flag' → logprob: -8.108123779296875
    7. '                    ' → logprob: -8.233123779296875
    8. ' =
' → logprob: -8.858123779296875
    9. '=
' → logprob: -9.608123779296875
    10. ',' → logprob: -9.858123779296875

Token 549: 'plus' (ID: 11601)
  Prédit: '_plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plus' → logprob: -0.4379504323005676
    2. 'plus' → logprob: -1.1879503726959229
    3. ' plus' → logprob: -3.687950372695923
    4. 'est' → logprob: -4.187950611114502
    5. '_' → logprob: -6.312950611114502
    6. ' j' → logprob: -6.687950611114502
    7. ' =' → logprob: -6.687950611114502
    8. ' est' → logprob: -7.062950611114502
    9. '+' → logprob: -7.562950611114502
    10. 'j' → logprob: -7.562950611114502

Token 550: ' petit' (ID: 20577)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.014000707305967808
    2. '_pet' → logprob: -4.88900089263916
    3. '_plus' → logprob: -5.88900089263916
    4. '_' → logprob: -6.13900089263916
    5. 'pet' → logprob: -6.76400089263916
    6. '_small' → logprob: -8.76400089263916
    7. ' petit' → logprob: -10.51400089263916
    8. '_s' → logprob: -11.01400089263916
    9. '_pt' → logprob: -11.26400089263916
    10. 'plus' → logprob: -11.38900089263916

Token 551: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6888709664344788
    2. ']' → logprob: -1.563870906829834
    3. ' =' → logprob: -1.563870906829834
    4. '"]' → logprob: -3.813870906829834
    5. 'if' → logprob: -4.313870906829834
    6. ' if' → logprob: -4.438870906829834
    7. '=' → logprob: -4.938870906829834
    8. ']"' → logprob: -5.313870906829834
    9. '```' → logprob: -5.688870906829834
    10. '_' → logprob: -6.063870906829834

Token 552: ' après' (ID: 16460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16502432525157928
    2. '=' → logprob: -1.9150242805480957
    3. '                   ' → logprob: -5.415024280548096
    4. '                    ' → logprob: -8.665024757385254
    5. '=j' → logprob: -10.415024757385254
    6. '                       ' → logprob: -10.915024757385254
    7. '               ' → logprob: -11.040024757385254
    8. '                           ' → logprob: -11.415024757385254
    9. '=
' → logprob: -11.915024757385254
    10. '                ' → logprob: -11.915024757385254

Token 553: ' avoir' (ID: 16595)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.34637928009033203
    2. 'd' → logprob: -1.846379280090332
    3. 'dp' → logprob: -3.721379280090332
    4. ' dp' → logprob: -3.846379280090332
    5. ' (' → logprob: -4.096379280090332
    6. ')' → logprob: -4.596379280090332
    7. ' if' → logprob: -4.721379280090332
    8. ':' → logprob: -4.846379280090332
    9. ' ' → logprob: -5.096379280090332
    10. ' =' → logprob: -5.096379280090332

Token 554: ' ajouté' (ID: 127784)
  Prédit: ' choisi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisi' → logprob: -0.07135146856307983
    2. 'cho' → logprob: -2.8213515281677246
    3. 'chosen' → logprob: -5.321351528167725
    4. ' cho' → logprob: -6.571351528167725
    5. ' chosen' → logprob: -6.696351528167725
    6. ' chois' → logprob: -6.946351528167725
    7. 'd' → logprob: -8.446351051330566
    8. ' choix' → logprob: -8.696351051330566
    9. ' pris' → logprob: -9.571351051330566
    10. ' construit' → logprob: -10.196351051330566

Token 555: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5153508186340332
    2. 'd' → logprob: -1.1403508186340332
    3. ' ' → logprob: -4.015350818634033
    4. ' (' → logprob: -4.265350818634033
    5. 'dp' → logprob: -4.640350818634033
    6. '(d' → logprob: -5.390350818634033
    7. '(' → logprob: -5.515350818634033
    8. ' dp' → logprob: -5.515350818634033
    9. ' le' → logprob: -5.640350818634033
    10. '1' → logprob: -5.765350818634033

Token 556: ' chiffre' (ID: 107420)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13133686780929565
    2. ' d' → logprob: -2.3813369274139404
    3. ''d' → logprob: -4.631336688995361
    4. ''' → logprob: -5.131336688995361
    5. 'ch' → logprob: -5.631336688995361
    6. ' '' → logprob: -6.006336688995361
    7. ' ' → logprob: -6.381336688995361
    8. '1' → logprob: -6.506336688995361
    9. 'digit' → logprob: -6.756336688995361
    10. 'token' → logprob: -6.881336688995361

Token 557: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.848605751991272
    2. ' if' → logprob: -1.973605751991272
    3. ' =' → logprob: -2.0986056327819824
    4. 'd' → logprob: -2.3486056327819824
    5. '_d' → logprob: -2.3486056327819824
    6. ' ==' → logprob: -2.4736056327819824
    7. '[' → logprob: -2.8486056327819824
    8. '_' → logprob: -2.9736056327819824
    9. '==' → logprob: -3.2236056327819824
    10. '=' → logprob: -3.3486056327819824

Token 558: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6734127402305603
    2. '=' → logprob: -1.673412799835205
    3. ' if' → logprob: -1.798412799835205
    4. 'if' → logprob: -2.298412799835205
    5. '                   ' → logprob: -4.673412799835205
    6. ']' → logprob: -4.798412799835205
    7. '                       ' → logprob: -5.548412799835205
    8. '               ' → logprob: -5.673412799835205
    9. '           ' → logprob: -6.548412799835205
    10. ')' → logprob: -6.673412799835205

Token 559: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7110506296157837
    2. ' =' → logprob: -0.8360506296157837
    3. ')' → logprob: -3.086050510406494
    4. ' if' → logprob: -4.711050510406494
    5. ']' → logprob: -5.086050510406494
    6. '=' → logprob: -5.211050510406494
    7. '                    ' → logprob: -6.086050510406494
    8. ' )' → logprob: -6.711050510406494
    9. '                           ' → logprob: -6.836050510406494
    10. 'if' → logprob: -7.086050510406494

Token 560: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43165087699890137
    2. '=' → logprob: -1.4316508769989014
    3. 'if' → logprob: -3.5566508769989014
    4. 'flag' → logprob: -3.5566508769989014
    5. ':' → logprob: -4.1816511154174805
    6. '                   ' → logprob: -4.4316511154174805
    7. ' if' → logprob: -5.1816511154174805
    8. ':
' → logprob: -5.5566511154174805
    9. ' :' → logprob: -6.1816511154174805
    10. '                           ' → logprob: -6.4316511154174805

Token 561: ' Si' (ID: 7832)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.520840048789978
    2. ' flag' → logprob: -1.645840048789978
    3. 'if' → logprob: -2.6458401679992676
    4. '=' → logprob: -3.0208401679992676
    5. ' =' → logprob: -3.2708401679992676
    6. ' if' → logprob: -3.5208401679992676
    7. '                   ' → logprob: -4.645840167999268
    8. ':' → logprob: -6.020840167999268
    9. '):
' → logprob: -6.145840167999268
    10. '                           ' → logprob: -6.395840167999268

Token 562: ' on' (ID: 402)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2383248656988144
    2. 'j' → logprob: -2.3633248805999756
    3. ' d' → logprob: -2.6133248805999756
    4. 'd' → logprob: -3.9883248805999756
    5. ' est' → logprob: -4.7383246421813965
    6. ' (' → logprob: -4.8633246421813965
    7. ' not' → logprob: -5.9883246421813965
    8. '(j' → logprob: -6.1133246421813965
    9. 'est' → logprob: -6.2383246421813965
    10. '(' → logprob: -7.2383246421813965

Token 563: ' était' (ID: 16647)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4402197599411011
    2. ' continue' → logprob: -1.940219759941101
    3. 'continue' → logprob: -2.5652198791503906
    4. ' d' → logprob: -2.9402198791503906
    5. 'j' → logprob: -4.190219879150391
    6. 'n' → logprob: -4.315219879150391
    7. ' j' → logprob: -4.565219879150391
    8. 's' → logprob: -5.190219879150391
    9. ' chois' → logprob: -5.690219879150391
    10. 'contin' → logprob: -5.690219879150391

Token 564: ' déjà' (ID: 21229)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8860258460044861
    2. ' j' → logprob: -1.2610259056091309
    3. 'd' → logprob: -1.7610259056091309
    4. ')' → logprob: -2.761025905609131
    5. ' dp' → logprob: -4.011025905609131
    6. 'dp' → logprob: -5.011025905609131
    7. ' )' → logprob: -5.261025905609131
    8. 'j' → logprob: -5.386025905609131
    9. '<' → logprob: -5.761025905609131
    10. '=' → logprob: -5.886025905609131

Token 565: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.12293519824743271
    2. ' plus' → logprob: -2.2479352951049805
    3. 'j' → logprob: -5.4979352951049805
    4. ' j' → logprob: -6.4979352951049805
    5. '_plus' → logprob: -6.7479352951049805
    6. 'strict' → logprob: -7.2479352951049805
    7. 'est' → logprob: -7.4979352951049805
    8. '1' → logprob: -7.6229352951049805
    9. 'sm' → logprob: -8.37293529510498
    10. '[j' → logprob: -8.62293529510498

Token 566: ' petit' (ID: 20577)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29001373052597046
    2. ' petit' → logprob: -2.1650137901306152
    3. '_p' → logprob: -2.7900137901306152
    4. 'pet' → logprob: -2.7900137901306152
    5. ' _' → logprob: -4.915013790130615
    6. '_pet' → logprob: -5.665013790130615
    7. '<' → logprob: -7.290013790130615
    8. '_small' → logprob: -7.415013790130615
    9. '```' → logprob: -8.290013313293457
    10. ' ' → logprob: -8.290013313293457

Token 567: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31333115696907043
    2. ' or' → logprob: -2.313331127166748
    3. 'and' → logprob: -2.563331127166748
    4. ' et' → logprob: -3.313331127166748
    5. ',' → logprob: -3.438331127166748
    6. 'et' → logprob: -5.313331127166748
    7. '                   ' → logprob: -5.438331127166748
    8. ' ou' → logprob: -5.438331127166748
    9. '                       ' → logprob: -5.938331127166748
    10. ')' → logprob: -6.938331127166748

Token 568: 'j' (ID: 73)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.34896206855773926
    2. ')' → logprob: -2.3489620685577393
    3. 'j' → logprob: -2.7239620685577393
    4. ' j' → logprob: -2.9739620685577393
    5. ' ou' → logprob: -3.2239620685577393
    6. 'or' → logprob: -3.8489620685577393
    7. 'ou' → logprob: -4.34896183013916
    8. '),' → logprob: -5.97396183013916
    9. ' )' → logprob: -6.09896183013916
    10. '==' → logprob: -7.09896183013916

Token 569: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012388858944177628
    2. ' ==' → logprob: -4.512388706207275
    3. ')' → logprob: -7.012388706207275
    4. ' or' → logprob: -8.637389183044434
    5. '=' → logprob: -9.137389183044434
    6. ')==' → logprob: -9.762389183044434
    7. 'or' → logprob: -10.012389183044434
    8. 'ou' → logprob: -11.637389183044434
    9. '```' → logprob: -11.887389183044434
    10. '),' → logprob: -12.137389183044434

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008171311928890646
    2. ' ' → logprob: -7.12581729888916
    3. ')' → logprob: -12.12581729888916
    4. '0' → logprob: -12.62581729888916
    5. '
' → logprob: -13.62581729888916
    6. '   ' → logprob: -14.00081729888916
    7. '=' → logprob: -14.50081729888916
    8. '                   ' → logprob: -14.75081729888916
    9. ' =' → logprob: -16.125816345214844
    10. '),' → logprob: -16.250816345214844

Token 571: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5155008435249329
    2. '),' → logprob: -1.015500783920288
    3. '):' → logprob: -4.015501022338867
    4. ' or' → logprob: -4.765501022338867
    5. ' and' → logprob: -4.765501022338867
    6. '):
' → logprob: -5.640501022338867
    7. 'and' → logprob: -7.140501022338867
    8. ',' → logprob: -8.515501022338867
    9. ' )' → logprob: -8.890501022338867
    10. 'or' → logprob: -9.140501022338867

Token 572: ' on' (ID: 402)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6968962550163269
    2. 'flag' → logprob: -1.8218963146209717
    3. ' or' → logprob: -2.5718963146209717
    4. ' if' → logprob: -2.6968963146209717
    5. '                       ' → logprob: -3.4468963146209717
    6. '                           ' → logprob: -3.5718963146209717
    7. '                   ' → logprob: -3.5718963146209717
    8. ':' → logprob: -3.5718963146209717
    9. ' for' → logprob: -3.9468963146209717
    10. 'if' → logprob: -4.696896076202393

Token 573: ' le' (ID: 505)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.39378219842910767
    2. 'continue' → logprob: -1.893782138824463
    3. 'contin' → logprob: -3.018782138824463
    4. ' reste' → logprob: -3.643782138824463
    5. '=' → logprob: -4.393782138824463
    6. ')' → logprob: -4.518782138824463
    7. ' continu' → logprob: -4.893782138824463
    8. ' a' → logprob: -5.143782138824463
    9. ' continues' → logprob: -5.268782138824463
    10. ' peut' → logprob: -5.643782138824463

Token 574: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.7021821737289429
    2. 'maint' → logprob: -1.8271821737289429
    3. ' garde' → logprob: -2.3271822929382324
    4. 'g' → logprob: -2.8271822929382324
    5. 's' → logprob: -2.9521822929382324
    6. 'continue' → logprob: -3.2021822929382324
    7. ' reste' → logprob: -4.077182292938232
    8. 'dp' → logprob: -4.452182292938232
    9. 'con' → logprob: -4.702182292938232
    10. ' conserve' → logprob: -4.702182292938232

Token 575: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16095823049545288
    2. '                   ' → logprob: -2.6609582901000977
    3. '                       ' → logprob: -3.2859582901000977
    4. ':' → logprob: -4.035958290100098
    5. 'or' → logprob: -4.410958290100098
    6. ' ou' → logprob: -5.535958290100098
    7. '               ' → logprob: -6.660958290100098
    8. '   ' → logprob: -7.035958290100098
    9. '                           ' → logprob: -7.285958290100098
    10. ',' → logprob: -7.410958290100098

Token 576: 'don' (ID: 22130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5658362507820129
    2. ')
' → logprob: -2.315836191177368
    3. 'flag' → logprob: -2.565836191177368
    4. 'if' → logprob: -2.815836191177368
    5. '),' → logprob: -2.815836191177368
    6. '                   ' → logprob: -3.190836191177368
    7. ' or' → logprob: -3.940836191177368
    8. '):
' → logprob: -4.440836429595947
    9. ' flag' → logprob: -4.690836429595947
    10. '                       ' → logprob: -4.690836429595947

Token 577: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1453771591186523
    2. 'e' → logprob: -1.2703771591186523
    3. '                   ' → logprob: -2.2703771591186523
    4. '               ' → logprob: -2.6453771591186523
    5. 'r' → logprob: -2.8953771591186523
    6. 'w' → logprob: -3.1453771591186523
    7. ')' → logprob: -4.020377159118652
    8. 'n' → logprob: -4.520377159118652
    9. 'ne' → logprob: -4.645377159118652
    10. 'j' → logprob: -4.895377159118652

Token 578: ' flag' (ID: 9641)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031833499670028687
    2. 'flag' → logprob: -4.031833648681641
    3. ' ' → logprob: -5.531833648681641
    4. ' flag' → logprob: -5.656833648681641
    5. 'True' → logprob: -6.156833648681641
    6. ' True' → logprob: -6.406833648681641
    7. '   ' → logprob: -7.406833648681641
    8. ')' → logprob: -7.656833648681641
    9. 'j' → logprob: -7.781833648681641
    10. ' j' → logprob: -8.65683364868164

Token 579: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009038535878062248
    2. '_j' → logprob: -5.63403844833374
    3. '=' → logprob: -5.88403844833374
    4. ' =' → logprob: -6.13403844833374
    5. '1' → logprob: -8.259038925170898
    6. '_' → logprob: -9.509038925170898
    7. ']' → logprob: -10.634038925170898
    8. ')' → logprob: -10.759038925170898
    9. '[j' → logprob: -10.884038925170898
    10. '=j' → logprob: -11.009038925170898

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043058909475803375
    2. ' =' → logprob: -3.1680588722229004
    3. ')' → logprob: -10.168059349060059
    4. ')=' → logprob: -11.293059349060059
    5. '=True' → logprob: -13.543059349060059
    6. '   ' → logprob: -13.793059349060059
    7. '           ' → logprob: -13.918059349060059
    8. '                   ' → logprob: -13.918059349060059
    9. '=
' → logprob: -14.293059349060059
    10. '=j' → logprob: -14.293059349060059

Token 581: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027063372544944286
    2. ' ' → logprob: -8.25027084350586
    3. '   ' → logprob: -11.87527084350586
    4. 'j' → logprob: -13.37527084350586
    5. '                   ' → logprob: -15.50027084350586
    6. '           ' → logprob: -16.12527084350586
    7. '  ' → logprob: -16.50027084350586
    8. '       ' → logprob: -16.75027084350586
    9. ' j' → logprob: -16.87527084350586
    10. '
' → logprob: -17.12527084350586

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.692145012086257e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -13.625046730041504
    4. 'j' → logprob: -16.12504768371582
    5. '  ' → logprob: -16.50004768371582
    6. '```' → logprob: -17.62504768371582
    7. 'True' → logprob: -17.62504768371582
    8. '
' → logprob: -18.06254768371582
    9. '`' → logprob: -18.37504768371582
    10. '    ' → logprob: -18.56254768371582

Token 583: ' peu' (ID: 9235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3295188844203949
    2. ' if' → logprob: -1.5795189142227173
    3. 'if' → logprob: -2.7045187950134277
    4. ')
' → logprob: -5.829518795013428
    5. '                   ' → logprob: -6.079518795013428
    6. 'else' → logprob: -7.079518795013428
    7. '                       ' → logprob: -7.454518795013428
    8. ' else' → logprob: -8.454519271850586
    9. '               ' → logprob: -8.579519271850586
    10. ' )' → logprob: -8.579519271850586

Token 584: ' importe' (ID: 80493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7108752727508545
    2. '```' → logprob: -1.9608752727508545
    3. 'r' → logprob: -2.3358752727508545
    4. 't' → logprob: -2.5858752727508545
    5. 'u' → logprob: -2.9608752727508545
    6. 'space' → logprob: -3.2108752727508545
    7. 'for' → logprob: -3.3358752727508545
    8. '#' → logprob: -3.5858752727508545
    9. 'vid' → logprob: -3.5858752727508545
    10. ' or' → logprob: -3.7108752727508545

Token 585: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002187256934121251
    2. ' )' → logprob: -6.252187252044678
    3. '),' → logprob: -9.627187728881836
    4. 'd' → logprob: -10.002187728881836
    5. '   ' → logprob: -10.502187728881836
    6. ' ' → logprob: -11.002187728881836
    7. ' j' → logprob: -11.127187728881836
    8. 'j' → logprob: -11.377187728881836
    9. '):' → logprob: -11.627187728881836
    10. ' ' → logprob: -12.002187728881836

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011398615315556526
    2. ' )' → logprob: -7.0011396408081055
    3. 'if' → logprob: -9.001139640808105
    4. ' if' → logprob: -9.751139640808105
    5. 'else' → logprob: -11.376139640808105
    6. '),' → logprob: -11.876139640808105
    7. ' ' → logprob: -11.876139640808105
    8. ').' → logprob: -12.501139640808105
    9. ' else' → logprob: -13.001139640808105
    10. '[' → logprob: -13.251139640808105

Token 587: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7395102977752686
    2. '                   ' → logprob: -0.9895102977752686
    3. '):' → logprob: -1.9895102977752686
    4. '):
' → logprob: -5.114510536193848
    5. '                       ' → logprob: -5.989510536193848
    6. ':' → logprob: -6.614510536193848
    7. '               ' → logprob: -6.614510536193848
    8. ' if' → logprob: -6.864510536193848
    9. 'if' → logprob: -7.614510536193848
    10. '),' → logprob: -8.364510536193848

Token 588: ' #' (ID: 1069)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.044188905507326126
    2. '):
' → logprob: -3.294188976287842
    3. ')' → logprob: -5.419188976287842
    4. '                   ' → logprob: -7.294188976287842
    5. '                       ' → logprob: -8.669188499450684
    6. ':' → logprob: -9.044188499450684
    7. 'if' → logprob: -9.169188499450684
    8. '):
' → logprob: -9.294188499450684
    9. '                           ' → logprob: -9.419188499450684
    10. '=' → logprob: -9.419188499450684

Token 589: ' Si' (ID: 7832)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8066490888595581
    2. ')' → logprob: -1.681649088859558
    3. 'if' → logprob: -1.806649088859558
    4. '                   ' → logprob: -2.8066492080688477
    5. '):
' → logprob: -2.8066492080688477
    6. ' if' → logprob: -3.1816492080688477
    7. ':' → logprob: -3.9316492080688477
    8. '=' → logprob: -4.806649208068848
    9. '                           ' → logprob: -5.681649208068848
    10. '                       ' → logprob: -5.806649208068848

Token 590: ' on' (ID: 402)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03476867452263832
    2. 'j' → logprob: -3.409768581390381
    3. ' not' → logprob: -7.284768581390381
    4. 'not' → logprob: -8.659769058227539
    5. ' ' → logprob: -9.284769058227539
    6. ' on' → logprob: -10.034769058227539
    7. ' d' → logprob: -11.159769058227539
    8. '   ' → logprob: -11.284769058227539
    9. '(j' → logprob: -11.409769058227539
    10. '	j' → logprob: -11.534769058227539

Token 591: ' était' (ID: 16647)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.2035834789276123
    2. 'n' → logprob: -1.8285834789276123
    3. ' j' → logprob: -1.8285834789276123
    4. 'j' → logprob: -2.0785834789276123
    5. '[j' → logprob: -2.9535834789276123
    6. '=' → logprob: -3.2035834789276123
    7. ' n' → logprob: -3.2035834789276123
    8. ' est' → logprob: -3.4535834789276123
    9. '==' → logprob: -3.5785834789276123
    10. '[' → logprob: -4.703583717346191

Token 592: ' encore' (ID: 14043)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3836865723133087
    2. ' égal' → logprob: -1.8836865425109863
    3. ' ' → logprob: -3.0086865425109863
    4. 'égal' → logprob: -3.1336865425109863
    5. '=' → logprob: -3.5086865425109863
    6. '==' → logprob: -4.008686542510986
    7. ' ==' → logprob: -5.008686542510986
    8. ' toujours' → logprob: -5.258686542510986
    9. ' =' → logprob: -6.133686542510986
    10. ' j' → logprob: -6.508686542510986

Token 593: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.43712562322616577
    2. 'égal' → logprob: -2.5621256828308105
    3. ' ==' → logprob: -2.6871256828308105
    4. 'strict' → logprob: -2.9371256828308105
    5. ' strict' → logprob: -3.4371256828308105
    6. '==' → logprob: -3.5621256828308105
    7. ' ' → logprob: -4.1871256828308105
    8. ' à' → logprob: -4.1871256828308105
    9. '0' → logprob: -4.4371256828308105
    10. 'à' → logprob: -4.6871256828308105

Token 594: ' (' (ID: 350)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9993833303451538
    2. ')' → logprob: -1.1243833303451538
    3. ' and' → logprob: -2.4993834495544434
    4. 'and' → logprob: -2.4993834495544434
    5. '):' → logprob: -3.3743834495544434
    6. 'à' → logprob: -3.3743834495544434
    7. ',' → logprob: -3.6243834495544434
    8. '),' → logprob: -4.499383449554443
    9. 'to' → logprob: -4.499383449554443
    10. ' to' → logprob: -4.624383449554443

Token 595: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12714417278766632
    2. ' j' → logprob: -2.1271440982818604
    3. '0' → logprob: -9.127143859863281
    4. ',' → logprob: -10.377143859863281
    5. ',j' → logprob: -10.377143859863281
    6. ' ' → logprob: -10.752143859863281
    7. '   ' → logprob: -12.127143859863281
    8. ' ,' → logprob: -12.627143859863281
    9. ')' → logprob: -12.627143859863281
    10. ' =' → logprob: -13.377143859863281

Token 596: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09705571830272675
    2. ' ==' → logprob: -2.472055673599243
    3. '=' → logprob: -5.097055912017822
    4. ')' → logprob: -6.472055912017822
    5. ')==' → logprob: -8.597055435180664
    6. '[' → logprob: -9.222055435180664
    7. ']==' → logprob: -9.597055435180664
    8. '==
' → logprob: -10.597055435180664
    9. ' =' → logprob: -11.847055435180664
    10. ']' → logprob: -11.847055435180664

Token 597: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023214559769257903
    2. ' ' → logprob: -8.375231742858887
    3. '1' → logprob: -13.750231742858887
    4. ')' → logprob: -15.750231742858887
    5. '=' → logprob: -16.125232696533203
    6. '<|end|>' → logprob: -16.375232696533203
    7. '  ' → logprob: -16.437732696533203
    8. '   ' → logprob: -16.562732696533203
    9. '[' → logprob: -17.812732696533203
    10. '۰' → logprob: -17.937732696533203

Token 598: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.0444823503494263
    2. '):
' → logprob: -1.0444823503494263
    3. ')' → logprob: -2.1694822311401367
    4. '):' → logprob: -2.1694822311401367
    5. ' and' → logprob: -3.0444822311401367
    6. 'and' → logprob: -5.044482231140137
    7. ' et' → logprob: -5.294482231140137
    8. '):

' → logprob: -5.669482231140137
    9. ':' → logprob: -6.794482231140137
    10. '                   ' → logprob: -6.919482231140137

Token 599: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0560903362929821
    2. '):' → logprob: -3.6810903549194336
    3. ' )' → logprob: -4.306090354919434
    4. ' flag' → logprob: -5.556090354919434
    5. ' dp' → logprob: -6.181090354919434
    6. '),' → logprob: -6.806090354919434
    7. '))' → logprob: -7.181090354919434
    8. '               ' → logprob: -7.431090354919434
    9. '                   ' → logprob: -7.431090354919434
    10. '   ' → logprob: -7.431090354919434

Token 600: ' devient' (ID: 63488)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5713364481925964
    2. '=' → logprob: -1.8213365077972412
    3. ' if' → logprob: -1.8213365077972412
    4. 'continue' → logprob: -3.696336507797241
    5. '<=' → logprob: -3.821336507797241
    6. 'flag' → logprob: -3.946336507797241
    7. ' =' → logprob: -4.321336269378662
    8. ' continue' → logprob: -4.696336269378662
    9. ')' → logprob: -5.571336269378662
    10. ' flag' → logprob: -5.571336269378662

Token 601: ' plus' (ID: 2932)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028019767254590988
    2. ' ' → logprob: -3.778019666671753
    3. '0' → logprob: -5.403019905090332
    4. ' int' → logprob: -8.778019905090332
    5. 'int' → logprob: -10.278019905090332
    6. '   ' → logprob: -10.653019905090332
    7. '(' → logprob: -11.528019905090332
    8. ' flag' → logprob: -12.028019905090332
    9. ' (' → logprob: -12.153019905090332
    10. 'flag' → logprob: -12.278019905090332

Token 602: ' petit' (ID: 20577)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.573082685470581
    2. '_p' → logprob: -1.448082685470581
    3. 'pet' → logprob: -2.698082685470581
    4. '_pet' → logprob: -2.948082685470581
    5. ' petit' → logprob: -3.073082685470581
    6. '_small' → logprob: -3.823082685470581
    7. ' _' → logprob: -4.94808292388916
    8. 'Petit' → logprob: -6.32308292388916
    9. '_s' → logprob: -6.57308292388916
    10. ' Petit' → logprob: -7.19808292388916

Token 603: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06998412311077118
    2. '                   ' → logprob: -3.444984197616577
    3. 'if' → logprob: -4.194983959197998
    4. ' =' → logprob: -4.444983959197998
    5. '=' → logprob: -5.069983959197998
    6. '                       ' → logprob: -6.694983959197998
    7. 'flag' → logprob: -8.819984436035156
    8. '=True' → logprob: -8.944984436035156
    9. '               ' → logprob: -9.069984436035156
    10. ',' → logprob: -9.194984436035156

Token 604: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5760277509689331
    2. 'd' → logprob: -0.8260277509689331
    3. '(d' → logprob: -10.326027870178223
    4. ' ' → logprob: -11.451027870178223
    5. ' (' → logprob: -11.451027870178223
    6. ' flag' → logprob: -11.451027870178223
    7. ' ' → logprob: -11.701027870178223
    8. '(' → logprob: -12.451027870178223
    9. '	d' → logprob: -12.576027870178223
    10. 'flag' → logprob: -12.951027870178223

Token 605: ' chiffre' (ID: 107420)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.42883092164993286
    2. 'd' → logprob: -1.053830862045288
    3. ' flag' → logprob: -10.178831100463867
    4. ' ' → logprob: -10.303831100463867
    5. 'flag' → logprob: -10.553831100463867
    6. '	d' → logprob: -12.303831100463867
    7. ' ' → logprob: -12.553831100463867
    8. '  ' → logprob: -12.678831100463867
    9. '_d' → logprob: -12.678831100463867
    10. ')' → logprob: -13.178831100463867

Token 606: ' choisi' (ID: 77245)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3322574496269226
    2. ' d' → logprob: -1.9572575092315674
    3. ' <' → logprob: -2.2072575092315674
    4. '<' → logprob: -3.5822575092315674
    5. ' <=' → logprob: -6.957257270812988
    6. '[d' → logprob: -6.957257270812988
    7. ' ' → logprob: -7.207257270812988
    8. '<=' → logprob: -8.332257270812988
    9. '[' → logprob: -8.832257270812988
    10. '_d' → logprob: -8.957257270812988

Token 607: ' d' (ID: 272)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.050171129405498505
    2. '<' → logprob: -3.050171136856079
    3. ' ' → logprob: -7.0501708984375
    4. ' <=' → logprob: -8.5501708984375
    5. '[' → logprob: -8.8001708984375
    6. ')' → logprob: -9.1751708984375
    7. 'd' → logprob: -9.1751708984375
    8. '<n' → logprob: -10.4251708984375
    9. ' d' → logprob: -10.6751708984375
    10. '<N' → logprob: -11.1751708984375

Token 608: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.046246666461229324
    2. '<' → logprob: -3.1712467670440674
    3. ' <=' → logprob: -5.921246528625488
    4. ' ' → logprob: -7.921246528625488
    5. '<=' → logprob: -9.671246528625488
    6. '<int' → logprob: -10.546246528625488
    7. ' >' → logprob: -10.546246528625488
    8. '[' → logprob: -10.796246528625488
    9. ')' → logprob: -11.421246528625488
    10. ' ' → logprob: -11.671246528625488

Token 609: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.386887788772583
    2. 'd' → logprob: -1.136887788772583
    3. ' ' → logprob: -11.761887550354004
    4. ' ' → logprob: -12.011887550354004
    5. '	d' → logprob: -13.761887550354004
    6. '_d' → logprob: -15.261887550354004
    7. '=' → logprob: -15.261887550354004
    8. '=d' → logprob: -15.386887550354004
    9. ')d' → logprob: -15.636887550354004
    10. '  ' → logprob: -15.886887550354004

Token 610: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.45848218582978e-06
    2. 'd' → logprob: -14.62500286102295
    3. '[N' → logprob: -14.87500286102295
    4. '_N' → logprob: -15.37500286102295
    5. ' N' → logprob: -15.50000286102295
    6. '```' → logprob: -16.000001907348633
    7. ')' → logprob: -16.125001907348633
    8. '[' → logprob: -16.375001907348633
    9. 'j' → logprob: -16.500001907348633
    10. '   ' → logprob: -16.625001907348633

Token 611: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1611996293067932
    2. ')' → logprob: -1.9111995697021484
    3. ':' → logprob: -7.161199569702148
    4. '):
' → logprob: -9.036199569702148
    5. ')):' → logprob: -10.661199569702148
    6. '))' → logprob: -11.411199569702148
    7. ' ):' → logprob: -12.036199569702148
    8. '):
' → logprob: -12.536199569702148
    9. ' and' → logprob: -12.536199569702148
    10. '[' → logprob: -12.661199569702148

Token 612: '                   ' (ID: 699)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25559231638908386
    2. ')' → logprob: -2.1305923461914062
    3. '                   ' → logprob: -2.5055923461914062
    4. '):
' → logprob: -4.255592346191406
    5. '                       ' → logprob: -5.380592346191406
    6. '               ' → logprob: -5.630592346191406
    7. '                           ' → logprob: -6.880592346191406
    8. ':' → logprob: -7.255592346191406
    9. '           ' → logprob: -8.755592346191406
    10. '   ' → logprob: -8.755592346191406

Token 613: ' flag' (ID: 9641)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0985722690820694
    2. ')' → logprob: -2.473572254180908
    3. '))' → logprob: -5.223572254180908
    4. ')):' → logprob: -6.098572254180908
    5. ')))' → logprob: -6.598572254180908
    6. '):
' → logprob: -8.223572731018066
    7. ')])' → logprob: -9.348572731018066
    8. ':' → logprob: -9.348572731018066
    9. ')]' → logprob: -10.598572731018066
    10. ']):' → logprob: -10.973572731018066

Token 614: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' =' → logprob: -15.25
    3. '_j' → logprob: -16.625
    4. '=' → logprob: -18.0
    5. ' j' → logprob: -18.375
    6. '	j' → logprob: -19.5
    7. '```' → logprob: -20.0
    8. '=j' → logprob: -20.25
    9. '

' → logprob: -21.375
    10. '[j' → logprob: -21.375

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018155913800001144
    2. ' =' → logprob: -4.018156051635742
    3. '=j' → logprob: -12.518156051635742
    4. '=(' → logprob: -13.143156051635742
    5. '=

' → logprob: -15.643156051635742
    6. '=
' → logprob: -16.393156051635742
    7. '=int' → logprob: -17.018156051635742
    8. 'j' → logprob: -17.643156051635742
    9. ' =(' → logprob: -18.018156051635742
    10. '＝' → logprob: -18.143156051635742

Token 616: ' j' (ID: 441)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20408153533935547
    2. ' ' → logprob: -1.8290815353393555
    3. ' j' → logprob: -4.3290815353393555
    4. 'j' → logprob: -5.0790815353393555
    5. ' (' → logprob: -5.8290815353393555
    6. '(j' → logprob: -7.3290815353393555
    7. '(' → logprob: -7.8290815353393555
    8. ' int' → logprob: -8.079081535339355
    9. 'int' → logprob: -8.829081535339355
    10. '0' → logprob: -9.079081535339355

Token 617: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4797588884830475
    2. ' or' → logprob: -0.9797588586807251
    3. 'if' → logprob: -5.3547587394714355
    4. ' if' → logprob: -7.1047587394714355
    5. '|' → logprob: -9.229759216308594
    6. ' |' → logprob: -11.229759216308594
    7. '
' → logprob: -12.354759216308594
    8. '1' → logprob: -13.604759216308594
    9. ' ' → logprob: -14.354759216308594
    10. '	or' → logprob: -14.354759216308594

Token 618: ' d' (ID: 272)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.45555779337882996
    2. ' (' → logprob: -1.0805578231811523
    3. ' d' → logprob: -4.080557823181152
    4. 'd' → logprob: -4.705557823181152
    5. '(' → logprob: -7.580557823181152
    6. ' ' → logprob: -10.955557823181152
    7. '   ' → logprob: -11.580557823181152
    8. '[d' → logprob: -12.330557823181152
    9. '	d' → logprob: -12.580557823181152
    10. '  ' → logprob: -12.580557823181152

Token 619: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4291132688522339
    2. '<' → logprob: -1.0541132688522339
    3. '<n' → logprob: -9.304113388061523
    4. '<int' → logprob: -9.554113388061523
    5. '<N' → logprob: -9.929113388061523
    6. ' ' → logprob: -10.054113388061523
    7. '<num' → logprob: -10.554113388061523
    8. '<|end|>' → logprob: -10.554113388061523
    9. '<len' → logprob: -10.929113388061523
    10. ' ' → logprob: -11.804113388061523

Token 620: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038042180240154266
    2. ' d' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.413042068481445
    5. '	d' → logprob: -15.788042068481445
    6. ')d' → logprob: -16.288042068481445
    7. '_d' → logprob: -17.038042068481445
    8. '   ' → logprob: -17.538042068481445
    9. '>d' → logprob: -17.663042068481445
    10. ')' → logprob: -17.788042068481445

Token 621: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011689399980241433
    2. 'len' → logprob: -10.125117301940918
    3. 'n' → logprob: -10.500117301940918
    4. '[N' → logprob: -10.625117301940918
    5. '[len' → logprob: -11.875117301940918
    6. '[' → logprob: -11.875117301940918
    7. '[n' → logprob: -13.000117301940918
    8. '#' → logprob: -13.000117301940918
    9. 'd' → logprob: -13.500117301940918
    10. ')' → logprob: -14.125117301940918

Token 622: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025202972814440727
    2. ')' → logprob: -4.525202751159668
    3. '<|end|>' → logprob: -4.525202751159668
    4. '                    
' → logprob: -6.525202751159668
    5. '               ' → logprob: -7.525202751159668
    6. '
' → logprob: -8.150202751159668
    7. '<|end|>' → logprob: -8.275202751159668
    8. '                    ' → logprob: -8.900202751159668
    9. '           ' → logprob: -9.525202751159668
    10. '                  ' → logprob: -9.900202751159668

Token 623: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0074757677502930164
    2. ')' → logprob: -5.382475852966309
    3. '<|end|>' → logprob: -6.632475852966309
    4. '               ' → logprob: -7.632475852966309
    5. '                    
' → logprob: -7.882475852966309
    6. '                    ' → logprob: -8.632475852966309
    7. '                       ' → logprob: -9.257475852966309
    8. ' )' → logprob: -9.757475852966309
    9. '           ' → logprob: -9.882475852966309
    10. '                           ' → logprob: -10.007475852966309

Token 624: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04783114045858383
    2. '                   ' → logprob: -3.1728310585021973
    3. '):' → logprob: -5.672831058502197
    4. ' )' → logprob: -8.297831535339355
    5. '                       ' → logprob: -8.797831535339355
    6. 'if' → logprob: -8.797831535339355
    7. '               ' → logprob: -8.922831535339355
    8. '                    ' → logprob: -9.047831535339355
    9. '):
' → logprob: -9.547831535339355
    10. '<|end|>' → logprob: -9.547831535339355

Token 625: ' S' (ID: 336)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013963071396574378
    2. ' if' → logprob: -7.126396179199219
    3. '                   ' → logprob: -8.126396179199219
    4. '#' → logprob: -9.001396179199219
    5. '                           ' → logprob: -9.501396179199219
    6. 'next' → logprob: -10.751396179199219
    7. 'new' → logprob: -10.876396179199219
    8. '                       ' → logprob: -11.126396179199219
    9. '                               ' → logprob: -11.876396179199219
    10. 'k' → logprob: -12.126396179199219

Token 626: ''il' (ID: 14683)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4030945897102356
    2. 'if' → logprob: -1.2780945301055908
    3. ' if' → logprob: -3.278094530105591
    4. 'e' → logprob: -5.65309476852417
    5. 'i' → logprob: -6.15309476852417
    6. 't' → logprob: -6.40309476852417
    7. '                    ' → logprob: -6.52809476852417
    8. '   ' → logprob: -7.27809476852417
    9. '=' → logprob: -7.52809476852417
    10. 'dp' → logprob: -7.52809476852417

Token 627: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.91314297914505
    2. 'flag' → logprob: -1.0381429195404053
    3. ' k' → logprob: -2.1631429195404053
    4. ' flag' → logprob: -2.6631429195404053
    5. '(flag' → logprob: -3.6631429195404053
    6. '<=' → logprob: -4.163143157958984
    7. ' <=' → logprob: -4.788143157958984
    8. '[k' → logprob: -6.288143157958984
    9. 'dp' → logprob: -6.413143157958984
    10. 'e' → logprob: -6.413143157958984

Token 628: ''est' (ID: 6616)
  Prédit: '(flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(flag' → logprob: -1.1202229261398315
    2. 'e' → logprob: -1.6202229261398315
    3. '<=' → logprob: -1.6202229261398315
    4. 'if' → logprob: -2.245223045349121
    5. 'flag' → logprob: -2.495223045349121
    6. ' <=' → logprob: -3.495223045349121
    7. '           ' → logprob: -4.995223045349121
    8. '                   ' → logprob: -5.120223045349121
    9. 'dp' → logprob: -5.120223045349121
    10. '               ' → logprob: -5.495223045349121

Token 629: ' *' (ID: 425)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3518544137477875
    2. '(flag' → logprob: -2.3518543243408203
    3. ' pas' → logprob: -2.4768543243408203
    4. 'flag' → logprob: -3.3518543243408203
    5. 'dp' → logprob: -3.8518543243408203
    6. 'k' → logprob: -4.10185432434082
    7. '(k' → logprob: -4.60185432434082
    8. ' k' → logprob: -4.85185432434082
    9. 'd' → logprob: -5.22685432434082
    10. ' flag' → logprob: -5.72685432434082

Token 630: 'pas' (ID: 21122)
  Prédit: '(flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.3836922347545624
    2. 'flag' → logprob: -1.3836922645568848
    3. 'pas' → logprob: -3.0086922645568848
    4. 'k' → logprob: -5.133692264556885
    5. '(k' → logprob: -5.383692264556885
    6. ' flag' → logprob: -6.008692264556885
    7. 'd' → logprob: -6.258692264556885
    8. 'possible' → logprob: -7.258692264556885
    9. '(' → logprob: -7.633692264556885
    10. 'dp' → logprob: -8.508691787719727

Token 631: '*' (ID: 9)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.48780956864356995
    2. 'possible' → logprob: -1.4878095388412476
    3. ')' → logprob: -2.612809658050537
    4. 'flag' → logprob: -4.112809658050537
    5. ' flag' → logprob: -4.237809658050537
    6. '>' → logprob: -4.362809658050537
    7. '(flag' → logprob: -4.862809658050537
    8. ']' → logprob: -5.112809658050537
    9. '=' → logprob: -5.237809658050537
    10. ' dépass' → logprob: -5.612809658050537

Token 632: ' possible' (ID: 4149)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.471815288066864
    2. 'd' → logprob: -1.5968153476715088
    3. ' flag' → logprob: -3.096815347671509
    4. 'None' → logprob: -3.846815347671509
    5. '(flag' → logprob: -3.846815347671509
    6. 'k' → logprob: -3.971815347671509
    7. 'possible' → logprob: -4.09681510925293
    8. '0' → logprob: -4.97181510925293
    9. ')' → logprob: -5.09681510925293
    10. 'non' → logprob: -5.09681510925293

Token 633: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2324672937393188
    2. ' d' → logprob: -1.6074672937393188
    3. 'if' → logprob: -1.9824672937393188
    4. '                   ' → logprob: -2.4824671745300293
    5. ' if' → logprob: -2.7324671745300293
    6. ' or' → logprob: -2.9824671745300293
    7. ':' → logprob: -3.2324671745300293
    8. '                    ' → logprob: -3.4824671745300293
    9. ' flag' → logprob: -3.8574671745300293
    10. '(flag' → logprob: -4.107467174530029

Token 634: ' continuer' (ID: 75597)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.16464976966381073
    2. 'k' → logprob: -2.164649724960327
    3. ' continuer' → logprob: -4.289649963378906
    4. 'continue' → logprob: -5.039649963378906
    5. ' k' → logprob: -5.289649963378906
    6. 'flag' → logprob: -5.664649963378906
    7. 'util' → logprob: -6.914649963378906
    8. 'd' → logprob: -7.289649963378906
    9. '0' → logprob: -7.539649963378906
    10. ' dépasser' → logprob: -7.539649963378906

Token 635: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1979113668203354
    2. 'and' → logprob: -2.072911262512207
    3. '                   ' → logprob: -3.072911262512207
    4. ' if' → logprob: -6.072911262512207
    5. ' et' → logprob: -6.822911262512207
    6. '                       ' → logprob: -7.072911262512207
    7. ':' → logprob: -7.197911262512207
    8. ',' → logprob: -7.447911262512207
    9. 'if' → logprob: -7.572911262512207
    10. ' or' → logprob: -7.822911262512207

Token 636: 'tou' (ID: 143506)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6358919143676758
    2. ' k' → logprob: -1.0108919143676758
    3. 'flag' → logprob: -2.885891914367676
    4. ' flag' → logprob: -3.385891914367676
    5. ' d' → logprob: -6.010891914367676
    6. 'd' → logprob: -6.135891914367676
    7. 'dp' → logprob: -6.385891914367676
    8. '                   ' → logprob: -6.385891914367676
    9. 'if' → logprob: -6.510891914367676
    10. ' dp' → logprob: -6.760891914367676

Token 637: 'jours' (ID: 15650)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6358871459960938
    2. 'k' → logprob: -1.0108871459960938
    3. 'r' → logprob: -3.7608871459960938
    4. 'x' → logprob: -3.8858871459960938
    5. 'jours' → logprob: -4.260887145996094
    6. 'p' → logprob: -4.635887145996094
    7. 'si' → logprob: -5.385887145996094
    8. 'jour' → logprob: -5.635887145996094
    9. ' k' → logprob: -5.635887145996094
    10. 'que' → logprob: -5.635887145996094

Token 638: ' égal' (ID: 15059)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7292593121528625
    2. ' k' → logprob: -0.8542593121528625
    3. '<=' → logprob: -4.229259490966797
    4. 'd' → logprob: -4.604259490966797
    5. 'flag' → logprob: -4.604259490966797
    6. ' flag' → logprob: -4.729259490966797
    7. 'dp' → logprob: -4.729259490966797
    8. ')' → logprob: -4.979259490966797
    9. ' d' → logprob: -5.354259490966797
    10. ' à' → logprob: -5.479259490966797

Token 639: ' mais' (ID: 2899)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44773051142692566
    2. 'and' → logprob: -1.947730541229248
    3. 'et' → logprob: -2.447730541229248
    4. ' et' → logprob: -2.822730541229248
    5. ')' → logprob: -2.947730541229248
    6. '),' → logprob: -4.197730541229248
    7. '                   ' → logprob: -6.947730541229248
    8. '               ' → logprob: -7.447730541229248
    9. '           ' → logprob: -7.947730541229248
    10. '                ' → logprob: -8.32273006439209

Token 640: ' on' (ID: 402)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048656973987817764
    2. ' d' → logprob: -3.048656940460205
    3. ' ' → logprob: -11.173657417297363
    4. '   ' → logprob: -11.298657417297363
    5. ' not' → logprob: -11.423657417297363
    6. '	d' → logprob: -11.798657417297363
    7. 'flag' → logprob: -11.923657417297363
    8. 'not' → logprob: -12.423657417297363
    9. '>d' → logprob: -12.923657417297363
    10. ' flag' → logprob: -13.048657417297363

Token 641: ' veut' (ID: 41653)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14670108258724213
    2. '>' → logprob: -2.5217010974884033
    3. '>d' → logprob: -3.1467010974884033
    4. ' >' → logprob: -4.646700859069824
    5. ' d' → logprob: -6.771700859069824
    6. '                       ' → logprob: -8.146700859069824
    7. '                   ' → logprob: -8.271700859069824
    8. 'cho' → logprob: -8.396700859069824
    9. '           ' → logprob: -8.521700859069824
    10. 'if' → logprob: -8.646700859069824

Token 642: ' mettre' (ID: 25339)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2455027848482132
    2. 'cho' → logprob: -2.6205027103424072
    3. ' d' → logprob: -2.9955027103424072
    4. ' choisir' → logprob: -3.8705027103424072
    5. 'contin' → logprob: -4.120502948760986
    6. ' dépasser' → logprob: -4.245502948760986
    7. 'prendre' → logprob: -4.370502948760986
    8. ' continuer' → logprob: -5.370502948760986
    9. '   ' → logprob: -5.370502948760986
    10. 'mettre' → logprob: -5.495502948760986

Token 643: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.018238792195916176
    2. 'un' → logprob: -4.0182390213012695
    3. '   ' → logprob: -10.76823902130127
    4. 'd' → logprob: -11.01823902130127
    5. ' ' → logprob: -11.01823902130127
    6. '	un' → logprob: -11.51823902130127
    7. ' a' → logprob: -12.14323902130127
    8. '    ' → logprob: -12.14323902130127
    9. ' d' → logprob: -12.26823902130127
    10. '           ' → logprob: -13.64323902130127

Token 644: ' chiffre' (ID: 107420)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44495323300361633
    2. 'ch' → logprob: -1.069953203201294
    3. 'digit' → logprob: -4.444953441619873
    4. ' chiffre' → logprob: -6.694953441619873
    5. ' ' → logprob: -7.569953441619873
    6. 'token' → logprob: -7.569953441619873
    7. '>' → logprob: -7.569953441619873
    8. ' d' → logprob: -8.194952964782715
    9. '```' → logprob: -8.319952964782715
    10. '   ' → logprob: -8.444952964782715

Token 645: ' d' (ID: 272)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09019386023283005
    2. ' >' → logprob: -2.840193748474121
    3. 'sup' → logprob: -4.965193748474121
    4. ' supérieur' → logprob: -4.965193748474121
    5. ' plus' → logprob: -5.965193748474121
    6. 'strict' → logprob: -5.965193748474121
    7. '>d' → logprob: -6.340193748474121
    8. 'plus' → logprob: -6.340193748474121
    9. ' ' → logprob: -6.465193748474121
    10. 'non' → logprob: -6.715193748474121

Token 646: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07461045682430267
    2. ' >' → logprob: -2.699610471725464
    3. ' supérieur' → logprob: -6.199610233306885
    4. '>d' → logprob: -7.324610233306885
    5. ' plus' → logprob: -7.949610233306885
    6. ')' → logprob: -7.949610233306885
    7. ' ' → logprob: -8.074610710144043
    8. 'sup' → logprob: -8.324610710144043
    9. '>s' → logprob: -9.324610710144043
    10. 'plus' → logprob: -9.324610710144043

Token 647: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09137936681509018
    2. 'd' → logprob: -2.466379404067993
    3. ' )' → logprob: -7.591379165649414
    4. ' d' → logprob: -7.716379165649414
    5. '),' → logprob: -7.966379165649414
    6. ' ' → logprob: -8.091379165649414
    7. ' ' → logprob: -8.591379165649414
    8. ')d' → logprob: -8.591379165649414
    9. '=' → logprob: -8.966379165649414
    10. ')
' → logprob: -9.466379165649414

Token 648: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0026194164529442787
    2. ')' → logprob: -6.12761926651001
    3. '):' → logprob: -9.127619743347168
    4. '),' → logprob: -9.377619743347168
    5. 'u' → logprob: -9.877619743347168
    6. '[' → logprob: -10.502619743347168
    7. '```' → logprob: -10.752619743347168
    8. '#' → logprob: -11.002619743347168
    9. ' ' → logprob: -11.002619743347168
    10. 'd' → logprob: -11.002619743347168

Token 649: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.784913957118988
    2. '):' → logprob: -0.784913957118988
    3. '),' → logprob: -2.784914016723633
    4. '):
' → logprob: -4.284914016723633
    5. '                   ' → logprob: -5.534914016723633
    6. ' and' → logprob: -5.909914016723633
    7. ' )' → logprob: -6.159914016723633
    8. 'and' → logprob: -7.159914016723633
    9. '               ' → logprob: -7.659914016723633
    10. '                       ' → logprob: -8.034914016723633

Token 650: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09229262918233871
    2. '):' → logprob: -2.717292547225952
    3. ' )' → logprob: -5.092292785644531
    4. '                   ' → logprob: -5.092292785644531
    5. '                           ' → logprob: -5.592292785644531
    6. '),' → logprob: -6.092292785644531
    7. '):
' → logprob: -6.842292785644531
    8. '                       ' → logprob: -7.217292785644531
    9. '                               ' → logprob: -8.092292785644531
    10. ',' → logprob: -8.342292785644531

Token 651: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.2343961000442505
    2. '                       ' → logprob: -1.6093961000442505
    3. ' if' → logprob: -1.7343961000442505
    4. ' continue' → logprob: -1.7343961000442505
    5. 'if' → logprob: -2.109395980834961
    6. 'continue' → logprob: -4.234395980834961
    7. ':' → logprob: -5.359395980834961
    8. '                    ' → logprob: -5.359395980834961
    9. '                           ' → logprob: -5.359395980834961
    10. '                               ' → logprob: -7.234395980834961

Token 652: ' alors' (ID: 17971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2627702057361603
    2. '):' → logprob: -1.762770175933838
    3. '                   ' → logprob: -3.762770175933838
    4. ' )' → logprob: -4.637770175933838
    5. '                           ' → logprob: -4.762770175933838
    6. '):
' → logprob: -5.262770175933838
    7. '                       ' → logprob: -5.512770175933838
    8. 'if' → logprob: -6.637770175933838
    9. ' continue' → logprob: -6.762770175933838
    10. '               ' → logprob: -6.762770175933838

Token 653: ' on' (ID: 402)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5247117877006531
    2. 'continue' → logprob: -1.3997118473052979
    3. '                       ' → logprob: -2.774711847305298
    4. '                   ' → logprob: -3.024711847305298
    5. '                           ' → logprob: -3.274711847305298
    6. '                               ' → logprob: -4.899711608886719
    7. '	continue' → logprob: -5.774711608886719
    8. '   ' → logprob: -7.649711608886719
    9. '_continue' → logprob: -7.774711608886719
    10. '               ' → logprob: -8.024711608886719

Token 654: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.43022286891937256
    2. ' continue' → logprob: -1.0552228689193726
    3. 'contin' → logprob: -7.055222988128662
    4. '   ' → logprob: -8.555222511291504
    5. '                   ' → logprob: -9.180222511291504
    6. '                       ' → logprob: -9.305222511291504
    7. '_continue' → logprob: -9.430222511291504
    8. '                           ' → logprob: -10.055222511291504
    9. '	continue' → logprob: -10.430222511291504
    10. '               ' → logprob: -10.555222511291504

Token 655: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6385000944137573
    2. ' continue' → logprob: -0.7635000944137573
    3. 'contin' → logprob: -5.388500213623047
    4. ' continues' → logprob: -7.513500213623047
    5. '_continue' → logprob: -8.138500213623047
    6. 'pas' → logprob: -9.138500213623047
    7. '	continue' → logprob: -9.763500213623047
    8. '   ' → logprob: -9.888500213623047
    9. 'continu' → logprob: -9.888500213623047
    10. '           ' → logprob: -10.388500213623047

Token 656: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.09800716489553452
    2. '                   ' → logprob: -3.5980072021484375
    3. '                       ' → logprob: -3.5980072021484375
    4. ' pas' → logprob: -3.8480072021484375
    5. '                           ' → logprob: -4.9730072021484375
    6. 'continue' → logprob: -5.5980072021484375
    7. 'contin' → logprob: -6.8480072021484375
    8. ' continue' → logprob: -6.9730072021484375
    9. '               ' → logprob: -7.0980072021484375
    10. '_pas' → logprob: -7.5980072021484375

Token 657: ' former' (ID: 9254)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3999348282814026
    2. ' continuer' → logprob: -2.024934768676758
    3. ' continue' → logprob: -2.274934768676758
    4. 'contin' → logprob: -2.649934768676758
    5. '                   ' → logprob: -4.149934768676758
    6. '                       ' → logprob: -5.899934768676758
    7. ':' → logprob: -6.399934768676758
    8. 'pas' → logprob: -7.024934768676758
    9. '_continue' → logprob: -7.274934768676758
    10. '               ' → logprob: -7.649934768676758

Token 658: ' un' (ID: 537)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3275240361690521
    2. ' une' → logprob: -2.827523946762085
    3. ' pas' → logprob: -3.577523946762085
    4. '               ' → logprob: -3.702523946762085
    5. '           ' → logprob: -3.952523946762085
    6. 'pas' → logprob: -4.077524185180664
    7. '                       ' → logprob: -4.327524185180664
    8. ' un' → logprob: -4.327524185180664
    9. 'continue' → logprob: -4.327524185180664
    10. 'une' → logprob: -4.452524185180664

Token 659: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7237015962600708
    2. 'ét' → logprob: -0.8487015962600708
    3. ' nombre' → logprob: -3.5987014770507812
    4. ' état' → logprob: -4.348701477050781
    5. '```' → logprob: -4.473701477050781
    6. 'state' → logprob: -5.473701477050781
    7. 'continue' → logprob: -5.598701477050781
    8. 'dp' → logprob: -5.973701477050781
    9. 'nou' → logprob: -6.098701477050781
    10. 'n' → logprob: -6.223701477050781

Token 660: ' val' (ID: 1459)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1173696517944336
    2. '               ' → logprob: -1.6173696517944336
    3. '           ' → logprob: -1.8673696517944336
    4. ' else' → logprob: -2.7423696517944336
    5. ' if' → logprob: -2.9923696517944336
    6. 'continue' → logprob: -3.1173696517944336
    7. 'else' → logprob: -3.4923696517944336
    8. 'd' → logprob: -4.242369651794434
    9. ' qui' → logprob: -4.367369651794434
    10. '                       ' → logprob: -4.742369651794434

Token 661: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -4.1318875446449965e-05
    2. 'able' → logprob: -10.125041007995605
    3. 'ider' → logprob: -14.625041007995605
    4. 'id' → logprob: -15.375041007995605
    5. 'e' → logprob: -16.000041961669922
    6. 'idee' → logprob: -16.000041961669922
    7. 'ides' → logprob: -16.250041961669922
    8. 'idé' → logprob: -16.375041961669922
    9. 'idable' → logprob: -17.125041961669922
    10. '[' → logprob: -17.375041961669922

Token 662: ' dans' (ID: 2671)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06453057378530502
    2. '                       ' → logprob: -3.189530611038208
    3. '.' → logprob: -4.814530372619629
    4. ',' → logprob: -5.689530372619629
    5. ':' → logprob: -6.189530372619629
    6. '                           ' → logprob: -6.564530372619629
    7. ' or' → logprob: -6.564530372619629
    8. '                    ' → logprob: -7.064530372619629
    9. '               ' → logprob: -7.189530372619629
    10. ' continue' → logprob: -7.564530372619629

Token 663: ' N' (ID: 478)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -1.0515145063400269
    2. ' cette' → logprob: -1.5515145063400269
    3. 'this' → logprob: -1.6765145063400269
    4. 'continue' → logprob: -1.9265145063400269
    5. ' this' → logprob: -2.5515146255493164
    6. 'ce' → logprob: -5.051514625549316
    7. 'that' → logprob: -5.551514625549316
    8. ' that' → logprob: -6.051514625549316
    9. ' continue' → logprob: -6.176514625549316
    10. 'la' → logprob: -6.301514625549316

Token 664: ' -' (ID: 533)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20936444401741028
    2. '                       ' → logprob: -2.709364414215088
    3. ':' → logprob: -2.834364414215088
    4. ' or' → logprob: -3.459364414215088
    5. ' and' → logprob: -4.959364414215088
    6. ':
' → logprob: -5.459364414215088
    7. '               ' → logprob: -5.584364414215088
    8. ' else' → logprob: -6.209364414215088
    9. ' if' → logprob: -6.334364414215088
    10. 'and' → logprob: -6.459364414215088

Token 665: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6888479590415955
    2. '[' → logprob: -1.8138480186462402
    3. '   ' → logprob: -2.5638480186462402
    4. '           ' → logprob: -3.3138480186462402
    5. ' continue' → logprob: -3.6888480186462402
    6. 'if' → logprob: -3.8138480186462402
    7. '               ' → logprob: -3.9388480186462402
    8. ' cette' → logprob: -3.9388480186462402
    9. '       ' → logprob: -4.18884801864624
    10. 'inue' → logprob: -4.43884801864624

Token 666: ' saute' (ID: 146395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3577107787132263
    2. ' continue' → logprob: -1.982710838317871
    3. '                   ' → logprob: -2.107710838317871
    4. '                       ' → logprob: -4.107710838317871
    5. 'inue' → logprob: -5.107710838317871
    6. '               ' → logprob: -5.357710838317871
    7. '                           ' → logprob: -5.982710838317871
    8. ')' → logprob: -6.232710838317871
    9. 'if' → logprob: -6.357710838317871
    10. 'contin' → logprob: -6.357710838317871

Token 667: ' ce' (ID: 2357)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05123313143849373
    2. 'continue' → logprob: -3.3012330532073975
    3. '                       ' → logprob: -4.801233291625977
    4. '               ' → logprob: -5.926233291625977
    5. '                    ' → logprob: -7.301233291625977
    6. '   ' → logprob: -7.676233291625977
    7. '           ' → logprob: -7.926233291625977
    8. '                           ' → logprob: -8.801233291625977
    9. '       ' → logprob: -8.801233291625977
    10. '                  ' → logprob: -9.301233291625977

Token 668: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.8439493775367737
    2. 'continue' → logprob: -0.9689493775367737
    3. 'd' → logprob: -2.593949317932129
    4. 'tour' → logprob: -2.843949317932129
    5. 'case' → logprob: -3.968949317932129
    6. '```' → logprob: -4.843949317932129
    7. 'pass' → logprob: -5.093949317932129
    8. 'contin' → logprob: -5.343949317932129
    9. 'else' → logprob: -5.468949317932129
    10. '                   ' → logprob: -5.968949317932129

Token 669: ' avec' (ID: 3937)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02510218322277069
    2. '                       ' → logprob: -4.525102138519287
    3. '                           ' → logprob: -5.525102138519287
    4. '               ' → logprob: -6.025102138519287
    5. ')' → logprob: -6.150102138519287
    6. ' if' → logprob: -6.400102138519287
    7. '                               ' → logprob: -7.650102138519287
    8. ':' → logprob: -7.900102138519287
    9. 'if' → logprob: -7.900102138519287
    10. '                    ' → logprob: -8.150102615356445

Token 670: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0003588224353734404
    2. ' continue' → logprob: -8.000358581542969
    3. '                   ' → logprob: -11.875358581542969
    4. 'if' → logprob: -12.000358581542969
    5. '   ' → logprob: -12.625358581542969
    6. '```' → logprob: -12.875358581542969
    7. 'contin' → logprob: -13.375358581542969
    8. '`' → logprob: -14.625358581542969
    9. '	continue' → logprob: -14.750358581542969
    10. '               ' → logprob: -14.875358581542969

Token 671: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016643505077809095
    2. 'if' → logprob: -7.001664161682129
    3. '                    
' → logprob: -8.376664161682129
    4. '                       ' → logprob: -8.751664161682129
    5. '                           ' → logprob: -9.251664161682129
    6. '                  ' → logprob: -9.626664161682129
    7. ' if' → logprob: -9.876664161682129
    8. '                    ' → logprob: -10.126664161682129
    9. '               ' → logprob: -10.501664161682129
    10. '				' → logprob: -11.501664161682129

Token 672: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011975488450843841
    2. '                    
' → logprob: -10.125120162963867
    3. 'if' → logprob: -10.875120162963867
    4. '               ' → logprob: -11.000120162963867
    5. '                  ' → logprob: -11.125120162963867
    6. '                    ' → logprob: -11.875120162963867
    7. '                       ' → logprob: -12.000120162963867
    8. ' if' → logprob: -12.500120162963867
    9. '				' → logprob: -12.750120162963867
    10. '           ' → logprob: -13.250120162963867

Token 673: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006236622110009193
    2. 'if' (adapté à ' if') → logprob: -5.381236553192139
    3. ' if' → logprob: -6.881236553192139
    4. '                    
' → logprob: -8.506237030029297
    5. '                  ' → logprob: -9.506237030029297
    6. '				' → logprob: -9.756237030029297
    7. '                       ' → logprob: -9.881237030029297
    8. '   ' → logprob: -10.381237030029297
    9. '                           ' → logprob: -10.506237030029297
    10. '               ' → logprob: -10.631237030029297

Token 674: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5009140968322754
    2. ' j' → logprob: -1.3759140968322754
    3. 'not' → logprob: -2.6259140968322754
    4. ' not' → logprob: -2.7509140968322754
    5. '(j' → logprob: -6.375914096832275
    6. '(not' → logprob: -7.125914096832275
    7. 'flag' → logprob: -7.250914096832275
    8. ' flag' → logprob: -7.250914096832275
    9. '   ' → logprob: -7.625914096832275
    10. ' ' → logprob: -8.625913619995117

Token 675: 'flag' (ID: 17665)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024016350507736206
    2. ' j' → logprob: -4.149016380310059
    3. 'not' → logprob: -5.399016380310059
    4. 'flag' → logprob: -6.399016380310059
    5. ' not' → logprob: -7.149016380310059
    6. ' flag' → logprob: -7.774016380310059
    7. '   ' → logprob: -8.149016380310059
    8. '(j' → logprob: -8.774016380310059
    9. '(flag' → logprob: -11.024016380310059
    10. '    ' → logprob: -11.274016380310059

Token 676: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1160349458805285e-05
    2. '==' → logprob: -13.375011444091797
    3. '_j' → logprob: -13.375011444091797
    4. ')' → logprob: -13.625011444091797
    5. '```' → logprob: -13.625011444091797
    6. '
' → logprob: -14.250011444091797
    7. ' j' → logprob: -14.250011444091797
    8. ' ==' → logprob: -14.500011444091797
    9. '=' → logprob: -14.500011444091797
    10. '   ' → logprob: -14.625011444091797

Token 677: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12730298936367035
    2. ' ==' → logprob: -2.127302885055542
    3. ' is' → logprob: -8.877303123474121
    4. ')' → logprob: -9.252303123474121
    5. ')==' → logprob: -10.252303123474121
    6. ' and' → logprob: -10.252303123474121
    7. 'and' → logprob: -10.627303123474121
    8. ' ' → logprob: -11.377303123474121
    9. '0' → logprob: -11.877303123474121
    10. '==
' → logprob: -11.877303123474121

Token 678: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03418292477726936
    2. 'False' → logprob: -3.4091830253601074
    3. ' False' → logprob: -7.784183025360107
    4. ' ' → logprob: -9.15918254852295
    5. '=False' → logprob: -12.28418254852295
    6. '   ' → logprob: -12.40918254852295
    7. '1' → logprob: -13.15918254852295
    8. '==' → logprob: -13.78418254852295
    9. 'false' → logprob: -14.53418254852295
    10. '(False' → logprob: -14.65918254852295

Token 679: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014525558799505234
    2. 'False' → logprob: -4.264525413513184
    3. ' False' → logprob: -8.389525413513184
    4. ' ' → logprob: -9.014525413513184
    5. '1' → logprob: -12.389525413513184
    6. '=False' → logprob: -12.764525413513184
    7. '==' → logprob: -13.514525413513184
    8. '   ' → logprob: -13.889525413513184
    9. '
' → logprob: -14.014525413513184
    10. '=' → logprob: -14.014525413513184

Token 680: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24653133749961853
    2. 'and' → logprob: -1.621531367301941
    3. ')' → logprob: -4.4965314865112305
    4. ' or' → logprob: -4.7465314865112305
    5. 'or' → logprob: -7.7465314865112305
    6. '               ' → logprob: -8.74653148651123
    7. '           ' → logprob: -8.99653148651123
    8. '                   ' → logprob: -9.49653148651123
    9. '                       ' → logprob: -9.49653148651123
    10. ' ' → logprob: -10.24653148651123

Token 681: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7595508694648743
    2. 'and' → logprob: -1.1345508098602295
    3. '                       ' → logprob: -1.6345508098602295
    4. '                           ' → logprob: -4.259551048278809
    5. ':' → logprob: -7.009551048278809
    6. 'continue' → logprob: -9.009551048278809
    7. '                   ' → logprob: -9.509551048278809
    8. '                        ' → logprob: -9.759551048278809
    9. ' continue' → logprob: -10.509551048278809
    10. ' or' → logprob: -10.634551048278809

Token 682: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35851845145225525
    2. ' d' → logprob: -1.6085184812545776
    3. '(d' → logprob: -2.358518362045288
    4. ' (' → logprob: -5.108518600463867
    5. '   ' → logprob: -8.608518600463867
    6. ' ' → logprob: -8.983518600463867
    7. '	d' → logprob: -9.483518600463867
    8. '(' → logprob: -9.733518600463867
    9. '  ' → logprob: -11.108518600463867
    10. '     ' → logprob: -11.733518600463867

Token 683: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07906538248062134
    2. ' d' → logprob: -2.5790653228759766
    3. '   ' → logprob: -9.204065322875977
    4. '(d' → logprob: -10.329065322875977
    5. '	d' → logprob: -11.204065322875977
    6. ' ' → logprob: -11.329065322875977
    7. '  ' → logprob: -12.579065322875977
    8. '     ' → logprob: -12.704065322875977
    9. '    ' → logprob: -12.829065322875977
    10. '>d' → logprob: -13.204065322875977

Token 684: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16227403283119202
    2. '>' → logprob: -1.9122740030288696
    3. '>d' → logprob: -6.28727388381958
    4. '>N' → logprob: -9.912274360656738
    5. 'd' → logprob: -10.162274360656738
    6. '[' → logprob: -10.412274360656738
    7. ' ' → logprob: -11.162274360656738
    8. ')' → logprob: -11.162274360656738
    9. ' >
' → logprob: -12.037274360656738
    10. ' >
' → logprob: -12.412274360656738

Token 685: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005930101033300161
    2. ' d' → logprob: -5.130929946899414
    3. '	d' → logprob: -14.505929946899414
    4. ')d' → logprob: -14.755929946899414
    5. ' ' → logprob: -15.380929946899414
    6. '   ' → logprob: -16.630929946899414
    7. '_d' → logprob: -16.880929946899414
    8. '>d' → logprob: -17.130929946899414
    9. 'flag' → logprob: -17.380929946899414
    10. '  ' → logprob: -17.380929946899414

Token 686: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9623810658231378e-05
    2. 'd' → logprob: -12.000020027160645
    3. ' N' → logprob: -12.500020027160645
    4. '[' → logprob: -12.875020027160645
    5. ' d' → logprob: -13.375020027160645
    6. '[N' → logprob: -13.375020027160645
    7. '```' → logprob: -14.375020027160645
    8. ')' → logprob: -14.875020027160645
    9. '#' → logprob: -15.000020027160645
    10. ' ' → logprob: -15.250020027160645

Token 687: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20600995421409607
    2. '):
' → logprob: -1.7060099840164185
    3. ')' → logprob: -5.581009864807129
    4. '):
' → logprob: -7.331009864807129
    5. ':' → logprob: -9.456009864807129
    6. '):

' → logprob: -10.831009864807129
    7. ' ):' → logprob: -11.081009864807129
    8. '   ' → logprob: -11.331009864807129
    9. ' ):
' → logprob: -11.581009864807129
    10. '                   ' → logprob: -12.081009864807129

Token 688: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001985021401196718
    2. 'continue' → logprob: -6.8769850730896
    3. ' continue' → logprob: -7.6269850730896
    4. ':' → logprob: -7.8769850730896
    5. ':
' → logprob: -10.126984596252441
    6. '                           ' → logprob: -10.751984596252441
    7. '	continue' → logprob: -11.876984596252441
    8. '                   ' → logprob: -12.001984596252441
    9. '       ' → logprob: -13.001984596252441
    10. '   ' → logprob: -13.501984596252441

Token 689: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4797535836696625
    2. ' continue' → logprob: -0.9797536134719849
    3. '                       ' → logprob: -5.229753494262695
    4. '                           ' → logprob: -9.354753494262695
    5. '   ' → logprob: -9.479753494262695
    6. '	continue' → logprob: -9.479753494262695
    7. '                   ' → logprob: -9.854753494262695
    8. ' ' → logprob: -12.604753494262695
    9. '_continue' → logprob: -12.604753494262695
    10. '                               ' → logprob: -12.979753494262695

Token 690: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008993157534860075
    2. ')' → logprob: -8.000899314880371
    3. '                    
' → logprob: -8.250899314880371
    4. '                    ' → logprob: -8.500899314880371
    5. '                       ' → logprob: -10.250899314880371
    6. '                  ' → logprob: -11.375899314880371
    7. '
' → logprob: -11.500899314880371
    8. '<|end|>' → logprob: -11.750899314880371
    9. '                        
' → logprob: -12.125899314880371
    10. '               ' → logprob: -12.625899314880371

Token 691: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42914676666259766
    2. '                   ' → logprob: -1.0541467666625977
    3. '   ' → logprob: -9.554146766662598
    4. '                    ' → logprob: -9.554146766662598
    5. ' )' → logprob: -10.179146766662598
    6. '               ' → logprob: -10.179146766662598
    7. ')
' → logprob: -10.429146766662598
    8. '```' → logprob: -10.554146766662598
    9. '                    
' → logprob: -10.554146766662598
    10. ':' → logprob: -10.679146766662598

Token 692: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011383118107914925
    2. '                    
' → logprob: -7.751138210296631
    3. '                    ' → logprob: -8.376138687133789
    4. 'if' → logprob: -8.751138687133789
    5. '                       ' → logprob: -9.751138687133789
    6. ' if' → logprob: -10.251138687133789
    7. '#' (adapté à ' #') → logprob: -10.251138687133789
    8. '                  ' → logprob: -10.376138687133789
    9. '               ' → logprob: -10.501138687133789
    10. 'new' → logprob: -10.751138687133789

Token 693: ' flag' (ID: 9641)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12339093536138535
    2. 'new' → logprob: -3.3733909130096436
    3. 'count' → logprob: -3.4983909130096436
    4. 'nj' → logprob: -4.123391151428223
    5. 'nk' → logprob: -4.748391151428223
    6. 'n' → logprob: -5.373391151428223
    7. '                   ' → logprob: -5.623391151428223
    8. ' if' → logprob: -5.623391151428223
    9. 'nz' → logprob: -6.248391151428223
    10. 'dp' → logprob: -6.248391151428223

Token 694: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007710324716754258
    2. '_k' → logprob: -8.125770568847656
    3. 'nk' → logprob: -8.500770568847656
    4. 'count' → logprob: -9.750770568847656
    5. 'n' → logprob: -10.250770568847656
    6. 'kk' → logprob: -10.625770568847656
    7. '_count' → logprob: -11.125770568847656
    8. 'kn' → logprob: -11.438270568847656
    9. '```' → logprob: -11.563270568847656
    10. 'c' → logprob: -11.688270568847656

Token 695: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890311628580093
    2. '=' → logprob: -2.5789031982421875
    3. '=k' → logprob: -11.328903198242188
    4. '                    ' → logprob: -15.078903198242188
    5. ' ' → logprob: -15.328903198242188
    6. '=
' → logprob: -15.703903198242188
    7. '    ' → logprob: -16.328903198242188
    8. ' =
' → logprob: -16.703903198242188
    9. '                   ' → logprob: -16.703903198242188
    10. 'k' → logprob: -16.828903198242188

Token 696: ' nouveau' (ID: 23184)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1421467363834381
    2. ' k' → logprob: -2.1421468257904053
    3. 'flag' → logprob: -4.642146587371826
    4. ' flag' → logprob: -5.267146587371826
    5. '=k' → logprob: -9.767147064208984
    6. '   ' → logprob: -10.017147064208984
    7. '0' → logprob: -10.142147064208984
    8. ' =' → logprob: -10.267147064208984
    9. '                           ' → logprob: -10.392147064208984
    10. '(k' → logprob: -10.892147064208984

Token 697: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10289377719163895
    2. ' =' → logprob: -2.352893829345703
    3. '=' → logprob: -6.102893829345703
    4. '_k' → logprob: -8.602893829345703
    5. '=k' → logprob: -8.727893829345703
    6. ' k' → logprob: -9.727893829345703
    7. ' non' → logprob: -10.727893829345703
    8. ' number' → logprob: -12.727893829345703
    9. '```' → logprob: -12.727893829345703
    10. 'non' → logprob: -13.227893829345703

Token 698: ' de' (ID: 334)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.036436084657907486
    2. '_' → logprob: -3.911436080932617
    3. '_des' → logprob: -5.661436080932617
    4. '_de' → logprob: -5.786436080932617
    5. ' non' → logprob: -6.161436080932617
    6. 'non' → logprob: -6.411436080932617
    7. ' de' → logprob: -6.661436080932617
    8. ' =' → logprob: -6.786436080932617
    9. 'de' → logprob: -7.536436080932617
    10. 'des' → logprob: -7.786436080932617

Token 699: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.007855153642594814
    2. ' chiffres' → logprob: -5.25785493850708
    3. 'non' → logprob: -6.63285493850708
    4. 'digits' → logprob: -7.13285493850708
    5. 'c' → logprob: -8.507855415344238
    6. 'k' → logprob: -9.257855415344238
    7. '(ch' → logprob: -9.382855415344238
    8. 'd' → logprob: -10.257855415344238
    9. ' non' → logprob: -10.757855415344238
    10. '```' → logprob: -11.007855415344238

Token 700: ' non' (ID: 2893)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.004606587812304497
    2. 'non' → logprob: -5.5046067237854
    3. ' non' → logprob: -7.7546067237854
    4. 'nonnull' → logprob: -10.004606246948242
    5. '_n' → logprob: -10.504606246948242
    6. '_NON' → logprob: -12.004606246948242
    7. '   ' → logprob: -12.504606246948242
    8. ' ' → logprob: -12.629606246948242
    9. '_' → logprob: -12.754606246948242
    10. '_not' → logprob: -13.129606246948242

Token 701: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2920628786087036
    2. '_n' → logprob: -2.167062759399414
    3. 'z' → logprob: -3.292062759399414
    4. 'nul' → logprob: -3.417062759399414
    5. '_' → logprob: -3.792062759399414
    6. '_z' → logprob: -3.792062759399414
    7. '0' → logprob: -4.417062759399414
    8. ' n' → logprob: -6.042062759399414
    9. '_null' → logprob: -6.167062759399414
    10. 'null' → logprob: -6.792062759399414

Token 702: 'uls' (ID: 13433)
  Prédit: 'uls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uls' → logprob: -0.0005628037615679204
    2. 'z' → logprob: -8.25056266784668
    3. 'ul' → logprob: -8.75056266784668
    4. 'ulls' → logprob: -9.12556266784668
    5. 'ulos' → logprob: -12.12556266784668
    6. '[' → logprob: -12.12556266784668
    7. 'n' → logprob: -12.25056266784668
    8. '   ' → logprob: -12.62556266784668
    9. 'ull' → logprob: -13.00056266784668
    10. '_' → logprob: -13.25056266784668

Token 703: ' après' (ID: 16460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04889244586229324
    2. '=' → logprob: -3.0488924980163574
    3. '                   ' → logprob: -8.1738920211792
    4. '                    ' → logprob: -10.9238920211792
    5. '                           ' → logprob: -13.9238920211792
    6. '				' → logprob: -14.4238920211792
    7. '                ' → logprob: -14.4238920211792
    8. '                       ' → logprob: -14.5488920211792
    9. '=k' → logprob: -14.6738920211792
    10. '               ' → logprob: -14.7988920211792

Token 704: ' avoir' (ID: 16595)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3420061469078064
    2. 'k' → logprob: -1.5920062065124512
    3. ' (' → logprob: -2.592006206512451
    4. ' k' → logprob: -4.592006206512451
    5. '(' → logprob: -7.592006206512451
    6. '(flag' → logprob: -8.342005729675293
    7. 'flag' → logprob: -8.592005729675293
    8. '0' → logprob: -9.217005729675293
    9. ' flag' → logprob: -10.092005729675293
    10. '   ' → logprob: -10.717005729675293

Token 705: ' ajouté' (ID: 127784)
  Prédit: ' ajouté'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouté' → logprob: -0.06867511570453644
    2. ' choisi' → logprob: -3.5686750411987305
    3. 'aj' → logprob: -4.0686750411987305
    4. 'k' → logprob: -4.6936750411987305
    5. 'cho' → logprob: -5.3186750411987305
    6. ' ajout' → logprob: -5.9436750411987305
    7. ' k' → logprob: -6.4436750411987305
    8. ' utilisé' → logprob: -7.8186750411987305
    9. '+' → logprob: -7.9436750411987305
    10. ' (' → logprob: -7.9436750411987305

Token 706: ' d' (ID: 272)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9584307074546814
    2. ' k' → logprob: -1.3334307670593262
    3. 'k' → logprob: -1.7084307670593262
    4. '1' → logprob: -2.583430767059326
    5. ' ' → logprob: -2.833430767059326
    6. '(' → logprob: -4.333430767059326
    7. '(k' → logprob: -4.833430767059326
    8. ' d' → logprob: -5.333430767059326
    9. '0' → logprob: -5.458430767059326
    10. 'd' → logprob: -5.958430767059326

Token 707: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06502644717693329
    2. '=' → logprob: -2.8150265216827393
    3. '                   ' → logprob: -5.81502628326416
    4. 'flag' → logprob: -10.06502628326416
    5. '                    ' → logprob: -11.31502628326416
    6. 'if' → logprob: -12.81502628326416
    7. '+' → logprob: -13.06502628326416
    8. '				' → logprob: -13.19002628326416
    9. '   ' → logprob: -13.31502628326416
    10. ' flag' → logprob: -13.81502628326416

Token 708: '                   ' (ID: 699)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.304648220539093
    2. 'flag' → logprob: -1.4296481609344482
    3. '                   ' → logprob: -4.179648399353027
    4. ' =' → logprob: -4.929648399353027
    5. '=' → logprob: -8.554648399353027
    6. '                    ' → logprob: -9.054648399353027
    7. ' k' → logprob: -9.304648399353027
    8. '```' → logprob: -9.929648399353027
    9. ' if' → logprob: -10.054648399353027
    10. 'k' → logprob: -10.429648399353027

Token 709: ' #' (ID: 1069)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.4741276502609253
    2. ' flag' → logprob: -0.9741276502609253
    3. '                   ' → logprob: -11.099127769470215
    4. '(flag' → logprob: -11.099127769470215
    5. '                           ' → logprob: -11.349127769470215
    6. 'if' → logprob: -13.099127769470215
    7. '0' → logprob: -13.974127769470215
    8. '                       ' → logprob: -14.224127769470215
    9. '	flag' → logprob: -14.349127769470215
    10. ' if' → logprob: -14.349127769470215

Token 710: ' On' (ID: 2160)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.014165159314870834
    2. ' flag' → logprob: -4.264164924621582
    3. '(flag' → logprob: -14.389164924621582
    4. '                   ' → logprob: -14.764164924621582
    5. 'if' → logprob: -14.889164924621582
    6. '                           ' → logprob: -15.764164924621582
    7. 'k' → logprob: -16.2641658782959
    8. '0' → logprob: -17.0141658782959
    9. 'flags' → logprob: -17.2641658782959
    10. '   ' → logprob: -17.2641658782959

Token 711: ' ajoute' (ID: 91611)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0772937536239624
    2. ' flag' → logprob: -2.952293872833252
    3. '_flag' → logprob: -4.327293872833252
    4. 'if' → logprob: -5.827293872833252
    5. 'f' → logprob: -6.827293872833252
    6. '=' → logprob: -6.827293872833252
    7. ' =' → logprob: -6.952293872833252
    8. ' +=' → logprob: -7.202293872833252
    9. 'k' → logprob: -7.702293872833252
    10. '+=' → logprob: -7.827293872833252

Token 712: ' soit' (ID: 17293)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1623667478561401
    2. ' ' → logprob: -1.2873667478561401
    3. '1' → logprob: -1.4123667478561401
    4. ' +' → logprob: -3.1623668670654297
    5. '+' → logprob: -3.6623668670654297
    6. '0' → logprob: -3.7873668670654297
    7. '(' → logprob: -3.7873668670654297
    8. '(k' → logprob: -3.9123668670654297
    9. ' k' → logprob: -4.03736686706543
    10. 'k' → logprob: -5.16236686706543

Token 713: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5452385544776917
    2. ' (' → logprob: -1.5452384948730469
    3. ' ' → logprob: -2.170238494873047
    4. '0' → logprob: -3.295238494873047
    5. '(k' → logprob: -3.920238494873047
    6. '(' → logprob: -4.420238494873047
    7. 'k' → logprob: -4.920238494873047
    8. ' k' → logprob: -5.545238494873047
    9. ' int' → logprob: -5.545238494873047
    10. '(int' → logprob: -5.795238494873047

Token 714: '1' (ID: 16)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6162570714950562
    2. '1' → logprob: -1.1162570714950562
    3. 'k' → logprob: -2.4912571907043457
    4. ' (' → logprob: -3.7412571907043457
    5. '0' → logprob: -4.616257190704346
    6. '(' → logprob: -4.741257190704346
    7. '(int' → logprob: -6.241257190704346
    8. ' ' → logprob: -6.241257190704346
    9. 'int' → logprob: -6.241257190704346
    10. '(flag' → logprob: -7.366257190704346

Token 715: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.048664238303899765
    2. 'if' → logprob: -3.0486643314361572
    3. ' si' → logprob: -10.298664093017578
    4. '+' → logprob: -11.048664093017578
    5. ' +' → logprob: -11.298664093017578
    6. '	if' → logprob: -12.548664093017578
    7. ' ' → logprob: -13.173664093017578
    8. '                   ' → logprob: -13.298664093017578
    9. '```' → logprob: -13.798664093017578
    10. '   ' → logprob: -14.173664093017578

Token 716: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6333186030387878
    2. ' d' → logprob: -0.7583186030387878
    3. '(d' → logprob: -7.3833184242248535
    4. ' (' → logprob: -9.758318901062012
    5. ' ' → logprob: -10.758318901062012
    6. '1' → logprob: -11.383318901062012
    7. '   ' → logprob: -13.008318901062012
    8. '(' → logprob: -13.508318901062012
    9. '	d' → logprob: -13.758318901062012
    10. '0' → logprob: -14.508318901062012

Token 717: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1427745670080185
    2. ' !=' → logprob: -2.0177745819091797
    3. '>' → logprob: -10.39277458190918
    4. '()!=' → logprob: -11.26777458190918
    5. '<|end|>' → logprob: -11.39277458190918
    6. ')!=' → logprob: -11.51777458190918
    7. ']!=' → logprob: -12.14277458190918
    8. '!='' → logprob: -12.14277458190918
    9. '!=(' → logprob: -12.39277458190918
    10. 'd' → logprob: -12.51777458190918

Token 718: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '<|end|>' → logprob: -18.50037956237793
    4. '=' → logprob: -18.62537956237793
    5. '  ' → logprob: -19.62537956237793
    6. '۰' → logprob: -19.87537956237793
    7. '   ' → logprob: -20.12537956237793
    8. ' ' → logprob: -20.62537956237793
    9. '```' → logprob: -21.25037956237793
    10. '０' → logprob: -21.25037956237793

Token 719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.500017166137695
    4. '  ' → logprob: -22.000017166137695
    5. '۰' → logprob: -22.500017166137695
    6. 'zero' → logprob: -22.875017166137695
    7. '=' → logprob: -22.875017166137695
    8. '０' → logprob: -23.000017166137695
    9. '```' → logprob: -23.125017166137695
    10. '    ' → logprob: -23.625017166137695

Token 720: ',' (ID: 11)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06833592802286148
    2. '                   ' → logprob: -3.568336009979248
    3. 'else' → logprob: -3.818336009979248
    4. ',' → logprob: -5.193336009979248
    5. ' or' → logprob: -5.318336009979248
    6. ' if' → logprob: -5.818336009979248
    7. '                       ' → logprob: -7.318336009979248
    8. '                    ' → logprob: -7.818336009979248
    9. 'if' → logprob: -8.19333553314209
    10. ')' → logprob: -8.31833553314209

Token 721: ' soit' (ID: 17293)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3733602464199066
    2. 'else' → logprob: -1.248360276222229
    3. '                   ' → logprob: -4.4983601570129395
    4. ' sinon' → logprob: -5.3733601570129395
    5. ' flag' → logprob: -5.7483601570129395
    6. 'flag' → logprob: -5.9983601570129395
    7. ' or' → logprob: -7.1233601570129395
    8. '                       ' → logprob: -7.1233601570129395
    9. '                    ' → logprob: -7.7483601570129395
    10. '                           ' → logprob: -7.8733601570129395

Token 722: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03806352615356445
    2. ' ' → logprob: -3.2880635261535645
    3. 'k' → logprob: -11.538063049316406
    4. ' k' → logprob: -12.413063049316406
    5. '   ' → logprob: -12.663063049316406
    6. ' ' → logprob: -13.663063049316406
    7. ' dp' → logprob: -13.913063049316406
    8. 'dp' → logprob: -14.163063049316406
    9. '  ' → logprob: -14.288063049316406
    10. ' (' → logprob: -15.413063049316406

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. 'k' → logprob: -16.00048828125
    4. ' ' → logprob: -18.12548828125
    5. '   ' → logprob: -18.37548828125
    6. '00' → logprob: -18.62548828125
    7. '000' → logprob: -18.62548828125
    8. '  ' → logprob: -18.87548828125
    9. '۰' → logprob: -19.62548828125
    10. '```' → logprob: -19.62548828125

Token 724: ' sinon' (ID: 52915)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38734617829322815
    2. 'if' → logprob: -1.7623461484909058
    3. 'flag' → logprob: -3.2623462677001953
    4. '(flag' → logprob: -3.5123462677001953
    5. ' (' → logprob: -3.7623462677001953
    6. ' +' → logprob: -4.137346267700195
    7. ' flag' → logprob: -4.387346267700195
    8. '+' → logprob: -4.512346267700195
    9. '
' → logprob: -5.137346267700195
    10. '(' → logprob: -5.887346267700195

Token 725: ',' (ID: 11)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.8207555413246155
    2. '                   ' → logprob: -1.0707554817199707
    3. '+' → logprob: -2.3207554817199707
    4. ' +' → logprob: -2.9457554817199707
    5. ' flag' → logprob: -3.9457554817199707
    6. '
' → logprob: -4.195755481719971
    7. ' if' → logprob: -4.445755481719971
    8. 'if' → logprob: -4.695755481719971
    9. ' =' → logprob: -5.820755481719971
    10. '=' → logprob: -6.320755481719971

Token 726: ' mais' (ID: 2899)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.22257719933986664
    2. ' flag' → logprob: -1.7225772142410278
    3. 'k' → logprob: -4.972577095031738
    4. '                   ' → logprob: -4.972577095031738
    5. ' k' → logprob: -5.347577095031738
    6. '                           ' → logprob: -7.472577095031738
    7. '                    ' → logprob: -8.222577095031738
    8. 'new' → logprob: -8.597577095031738
    9. '                       ' → logprob: -8.722577095031738
    10. 'if' → logprob: -8.722577095031738

Token 727: ' jamais' (ID: 23077)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2050594985485077
    2. ' k' → logprob: -1.83005952835083
    3. ' on' → logprob: -5.20505952835083
    4. 'dp' → logprob: -5.45505952835083
    5. 'flag' → logprob: -5.70505952835083
    6. ' dp' → logprob: -5.83005952835083
    7. ' flag' → logprob: -6.33005952835083
    8. 'd' → logprob: -6.70505952835083
    9. ' d' → logprob: -6.83005952835083
    10. 'if' → logprob: -7.20505952835083

Token 728: ' plus' (ID: 2932)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.4214774370193481
    2. 'min' → logprob: -1.4214774370193481
    3. 'K' → logprob: -1.6714774370193481
    4. ' min' → logprob: -2.5464773178100586
    5. 'ex' → logprob: -3.0464773178100586
    6. ' dépass' → logprob: -3.4214773178100586
    7. ' supérieur' → logprob: -3.7964773178100586
    8. ' plus' → logprob: -4.046477317810059
    9. '>K' → logprob: -4.046477317810059
    10. ' dépasser' → logprob: -4.046477317810059

Token 729: ' de' (ID: 334)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3948979675769806
    2. ' than' → logprob: -1.3948979377746582
    3. 'than' → logprob: -3.394897937774658
    4. 'que' → logprob: -3.769897937774658
    5. '=' → logprob: -5.144897937774658
    6. '                   ' → logprob: -5.644897937774658
    7. 'd' → logprob: -6.144897937774658
    8. 'de' → logprob: -6.519897937774658
    9. 'min' → logprob: -6.644897937774658
    10. '   ' → logprob: -7.019897937774658

Token 730: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0062842522747814655
    2. ' K' → logprob: -5.256284236907959
    3. '(K' → logprob: -7.006284236907959
    4. ' (' → logprob: -9.506284713745117
    5. 'k' → logprob: -10.631284713745117
    6. '   ' → logprob: -10.756284713745117
    7. ' ' → logprob: -11.381284713745117
    8. '```' → logprob: -12.381284713745117
    9. '(' → logprob: -13.131284713745117
    10. ' ' → logprob: -13.631284713745117

Token 731: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003930218052119017
    2. 'k' → logprob: -6.50393009185791
    3. 'if' → logprob: -7.12893009185791
    4. ' if' → logprob: -7.12893009185791
    5. ' +' → logprob: -7.37893009185791
    6. '+k' → logprob: -9.87893009185791
    7. '1' → logprob: -10.37893009185791
    8. 'and' → logprob: -10.62893009185791
    9. ' and' → logprob: -11.37893009185791
    10. '   ' → logprob: -11.62893009185791

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.93579563125968e-05
    2. '2' → logprob: -9.875089645385742
    3. ' ' → logprob: -10.500089645385742
    4. '+' → logprob: -12.000089645385742
    5. '   ' → logprob: -12.875089645385742
    6. '3' → logprob: -14.500089645385742
    7. '  ' → logprob: -15.000089645385742
    8. '     ' → logprob: -15.875089645385742
    9. '    ' → logprob: -16.125089645385742
    10. '```' → logprob: -16.250089645385742

Token 733: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14098554849624634
    2. '
' → logprob: -2.3909854888916016
    3. 'flag' → logprob: -3.8909854888916016
    4. ' if' → logprob: -4.890985488891602
    5. 'if' → logprob: -5.390985488891602
    6. '                    
' → logprob: -6.015985488891602
    7. ' =' → logprob: -6.265985488891602
    8. ' flag' → logprob: -7.265985488891602
    9. '                    ' → logprob: -7.515985488891602
    10. '               ' → logprob: -8.015985488891602

Token 734: 'on' (ID: 263)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15082162618637085
    2. ' min' → logprob: -2.1508216857910156
    3. ')' → logprob: -5.025821685791016
    4. ')
' → logprob: -5.150821685791016
    5. 'if' → logprob: -5.400821685791016
    6. 'flag' → logprob: -5.775821685791016
    7. ' if' → logprob: -6.525821685791016
    8. '                   ' → logprob: -7.275821685791016
    9. 'k' → logprob: -8.025821685791016
    10. ' flag' → logprob: -8.150821685791016

Token 735: ' borne' (ID: 111819)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1585473120212555
    2. '=min' → logprob: -2.1585474014282227
    3. ' min' → logprob: -3.6585474014282227
    4. '[min' → logprob: -5.908547401428223
    5. 'k' → logprob: -6.658547401428223
    6. 'if' → logprob: -7.658547401428223
    7. 'in' → logprob: -7.908547401428223
    8. '_min' → logprob: -8.908547401428223
    9. ')' → logprob: -9.408547401428223
    10. '=' → logprob: -9.908547401428223

Token 736: ')
' (ID: 446)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.004651672672480345
    2. 'k' → logprob: -5.8796515464782715
    3. 'min' → logprob: -7.2546515464782715
    4. '(' → logprob: -7.8796515464782715
    5. '(min' → logprob: -7.8796515464782715
    6. '=' → logprob: -8.37965202331543
    7. '=k' → logprob: -9.62965202331543
    8. ')' → logprob: -10.37965202331543
    9. ' min' → logprob: -11.12965202331543
    10. ' =' → logprob: -11.50465202331543

Token 737: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4752919673919678
    2. 'flag' → logprob: -1.4752919673919678
    3. '
' → logprob: -2.1002919673919678
    4. ' flag' → logprob: -3.9752919673919678
    5. ' =' → logprob: -5.350292205810547
    6. '=' → logprob: -6.600292205810547
    7. '                    
' → logprob: -7.350292205810547
    8. '               ' → logprob: -8.475292205810547
    9. '                    ' → logprob: -8.475292205810547
    10. '   ' → logprob: -8.600292205810547

Token 738: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.1940285563468933
    2. '                   ' → logprob: -2.569028615951538
    3. ' flag' → logprob: -2.944028615951538
    4. ' =' → logprob: -3.194028615951538
    5. '=' → logprob: -5.194028377532959
    6. '   ' → logprob: -9.319028854370117
    7. '
' → logprob: -9.444028854370117
    8. '                    ' → logprob: -9.569028854370117
    9. '               ' → logprob: -9.819028854370117
    10. '_flag' → logprob: -9.944028854370117

Token 739: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. '_k' → logprob: -14.625000953674316
    3. ' k' → logprob: -16.125
    4. 'к' → logprob: -16.875
    5. '	k' → logprob: -18.125
    6. '```' → logprob: -18.625
    7. '_' → logprob: -19.125
    8. 'j' → logprob: -19.25
    9. '{k' → logprob: -19.25
    10. '=k' → logprob: -19.375

Token 740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142309367656708
    2. ' =' → logprob: -1.7014230489730835
    3. '=min' → logprob: -11.826422691345215
    4. '=k' → logprob: -13.201422691345215
    5. '=max' → logprob: -14.576422691345215
    6. '=
' → logprob: -16.45142364501953
    7. 'k' → logprob: -17.70142364501953
    8. '＝' → logprob: -17.70142364501953
    9. ' ' → logprob: -17.95142364501953
    10. '	' → logprob: -18.45142364501953

Token 741: ' min' (ID: 1349)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3665127158164978
    2. 'min' → logprob: -1.4915127754211426
    3. ' min' → logprob: -2.6165127754211426
    4. ' k' → logprob: -4.741512775421143
    5. '   ' → logprob: -11.616512298583984
    6. 'max' → logprob: -11.991512298583984
    7. ' ' → logprob: -12.116512298583984
    8. '(min' → logprob: -12.616512298583984
    9. '(k' → logprob: -12.866512298583984
    10. '  ' → logprob: -12.991512298583984

Token 742: '(K' (ID: 28797)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0017120669363066554
    2. '(K' → logprob: -6.376711845397949
    3. '(' → logprob: -11.62671184539795
    4. 'k' → logprob: -14.50171184539795
    5. ' (' → logprob: -15.62671184539795
    6. '((' → logprob: -16.001712799072266
    7. '(
' → logprob: -16.501712799072266
    8. 'K' → logprob: -16.751712799072266
    9. '(flag' → logprob: -17.501712799072266
    10. '[k' → logprob: -19.376712799072266

Token 743: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016682932619005442
    2. ' +' → logprob: -8.750166893005371
    3. '+k' → logprob: -11.875166893005371
    4. 'k' → logprob: -13.625166893005371
    5. '   ' → logprob: -16.250165939331055
    6. '[' → logprob: -16.750165939331055
    7. '+
' → logprob: -17.250165939331055
    8. ' ' → logprob: -17.375165939331055
    9. '＋' → logprob: -17.500165939331055
    10. ' k' → logprob: -18.562665939331055

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.375003814697266
    4. '+' → logprob: -17.250003814697266
    5. '  ' → logprob: -19.250003814697266
    6. '2' → logprob: -19.875003814697266
    7. '```' → logprob: -19.875003814697266
    8. '۱' → logprob: -20.062503814697266
    9. 'k' → logprob: -20.375003814697266
    10. '
' → logprob: -20.687503814697266

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005053125787526369
    2. ',k' → logprob: -5.3800530433654785
    3. ' ,' → logprob: -7.7550530433654785
    4. ',
' → logprob: -13.380053520202637
    5. ',(' → logprob: -14.630053520202637
    6. ',n' → logprob: -14.880053520202637
    7. ',max' → logprob: -15.005053520202637
    8. ',d' → logprob: -15.255053520202637
    9. ',K' → logprob: -15.380053520202637
    10. 'k' → logprob: -15.755053520202637

Token 746: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00017958412354346365
    2. ' k' → logprob: -8.625179290771484
    3. '   ' → logprob: -18.000179290771484
    4. '                   ' → logprob: -18.375179290771484
    5. '	k' → logprob: -19.375179290771484
    6. ' ' → logprob: -19.500179290771484
    7. '(k' → logprob: -19.500179290771484
    8. '               ' → logprob: -20.000179290771484
    9. '                           ' → logprob: -20.125179290771484
    10. '           ' → logprob: -20.375179290771484

Token 747: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16540630161762238
    2. ' +' → logprob: -1.915406346321106
    3. '+d' → logprob: -5.790406227111816
    4. '+(' → logprob: -6.165406227111816
    5. ' +(' → logprob: -12.665406227111816
    6. '+
' → logprob: -12.665406227111816
    7. '   ' → logprob: -13.290406227111816
    8. '+D' → logprob: -13.665406227111816
    9. ')' → logprob: -15.165406227111816
    10. ' ' → logprob: -15.540406227111816

Token 748: 'd' (ID: 67)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1148749440908432
    2. 'd' → logprob: -2.239874839782715
    3. '0' → logprob: -6.489874839782715
    4. '(d' → logprob: -8.489874839782715
    5. 'int' → logprob: -8.489874839782715
    6. ' ' → logprob: -9.489874839782715
    7. ' d' → logprob: -10.364874839782715
    8. '(' → logprob: -11.989874839782715
    9. '[d' → logprob: -13.614874839782715
    10. ' int' → logprob: -13.739874839782715

Token 749: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25221091508865356
    2. ' !=' → logprob: -1.5022108554840088
    3. '>' → logprob: -8.62721061706543
    4. '!' → logprob: -10.12721061706543
    5. '()!=' → logprob: -11.12721061706543
    6. '!='' → logprob: -11.50221061706543
    7. ')!=' → logprob: -11.50221061706543
    8. ' ' → logprob: -11.62721061706543
    9. ' >' → logprob: -12.37721061706543
    10. '!="' → logprob: -13.00221061706543

Token 750: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042999427765607834
    2. ' ' → logprob: -3.167999505996704
    3. '   ' → logprob: -16.542999267578125
    4. ' ' → logprob: -16.667999267578125
    5. '  ' → logprob: -16.667999267578125
    6. ')' → logprob: -18.042999267578125
    7. '  
' → logprob: -18.292999267578125
    8. '۰' → logprob: -18.480499267578125
    9. '	' → logprob: -18.792999267578125
    10. '
' → logprob: -19.042999267578125

Token 751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.00002670288086
    4. '  ' → logprob: -18.62502670288086
    5. ')' → logprob: -18.75002670288086
    6. '۰' → logprob: -19.37502670288086
    7. '```' → logprob: -20.25002670288086
    8. '    ' → logprob: -20.75002670288086
    9. '０' → logprob: -20.87502670288086
    10. '	' → logprob: -20.87502670288086

Token 752: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016142871230840683
    2. '))
' → logprob: -4.141142845153809
    3. ')' → logprob: -9.891142845153809
    4. ')))' → logprob: -10.391142845153809
    5. '))
' → logprob: -11.391142845153809
    6. ' ))' → logprob: -11.641142845153809
    7. '                   ' → logprob: -13.516142845153809
    8. ')
' → logprob: -13.641142845153809
    9. '   ' → logprob: -13.766142845153809
    10. '))

' → logprob: -14.016142845153809

Token 753: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001081279362551868
    2. ')' → logprob: -7.001081466674805
    3. '                    
' → logprob: -9.376081466674805
    4. '               ' → logprob: -11.001081466674805
    5. ']' → logprob: -11.876081466674805
    6. '<|end|>' → logprob: -11.876081466674805
    7. '                    ' → logprob: -12.001081466674805
    8. ')
' → logprob: -12.001081466674805
    9. '```' → logprob: -12.126081466674805
    10. '           ' → logprob: -12.501081466674805

Token 754: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010135184274986386
    2. ')' → logprob: -7.37601375579834
    3. 'dp' → logprob: -9.00101375579834
    4. '                    
' → logprob: -9.75101375579834
    5. '                       ' → logprob: -10.00101375579834
    6. '               ' → logprob: -10.87601375579834
    7. '                           ' → logprob: -11.12601375579834
    8. '                    ' → logprob: -11.25101375579834
    9. '   ' → logprob: -11.37601375579834
    10. '                  ' → logprob: -11.37601375579834

Token 755: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013159511145204306
    2. ' dp' → logprob: -7.126316070556641
    3. '                   ' → logprob: -7.751316070556641
    4. 'if' → logprob: -9.50131607055664
    5. '                       ' → logprob: -12.87631607055664
    6. '	dp' → logprob: -13.25131607055664
    7. '(dp' → logprob: -14.12631607055664
    8. '                           ' → logprob: -14.62631607055664
    9. ' if' → logprob: -15.25131607055664
    10. '```' → logprob: -16.00131607055664

Token 756: ' augmente' (ID: 150199)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.162680983543396
    2. ' dp' → logprob: -1.912680983543396
    3. '[' → logprob: -6.5376811027526855
    4. '                   ' → logprob: -8.412680625915527
    5. ']+=' → logprob: -8.787680625915527
    6. '                       ' → logprob: -9.287680625915527
    7. ']' → logprob: -9.662680625915527
    8. 's' → logprob: -9.787680625915527
    9. '                           ' → logprob: -9.787680625915527
    10. '	dp' → logprob: -9.912680625915527

Token 757: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11330640316009521
    2. ' dp' → logprob: -2.7383065223693848
    3. '(dp' → logprob: -3.7383065223693848
    4. '                   ' → logprob: -3.9883065223693848
    5. '                       ' → logprob: -9.863306045532227
    6. '	dp' → logprob: -10.613306045532227
    7. '                           ' → logprob: -11.238306045532227
    8. '                    ' → logprob: -11.863306045532227
    9. '                  ' → logprob: -12.238306045532227
    10. '_dp' → logprob: -12.988306045532227

Token 758: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.055017802864313126
    2. ' dp' → logprob: -2.9300177097320557
    3. ']' → logprob: -9.305017471313477
    4. '][' → logprob: -11.680017471313477
    5. '                   ' → logprob: -12.680017471313477
    6. '(dp' → logprob: -12.805017471313477
    7. '_dp' → logprob: -12.805017471313477
    8. '                       ' → logprob: -12.930017471313477
    9. 'count' → logprob: -12.930017471313477
    10. '	dp' → logprob: -13.055017471313477

Token 759: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0416663885116577
    2. 'dp' → logprob: -1.1666663885116577
    3. ' dp' → logprob: -2.1666665077209473
    4. ' de' → logprob: -2.7916665077209473
    5. '                       ' → logprob: -3.9166665077209473
    6. '(dp' → logprob: -4.166666507720947
    7. '<|end|>' → logprob: -4.166666507720947
    8. '_dp' → logprob: -4.291666507720947
    9. '	dp' → logprob: -4.416666507720947
    10. '[' → logprob: -4.416666507720947

Token 760: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17955179512500763
    2. 'ways' → logprob: -2.554551839828491
    3. 'fa' → logprob: -3.179551839828491
    4. 'man' → logprob: -4.304551601409912
    5. ' façons' → logprob: -4.429551601409912
    6. ']' → logprob: -4.804551601409912
    7. ' ways' → logprob: -5.929551601409912
    8. ' dp' → logprob: -6.304551601409912
    9. '```' → logprob: -6.429551601409912
    10. '[' → logprob: -6.429551601409912

Token 761: ' d' (ID: 272)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9759116768836975
    2. ' dp' → logprob: -0.9759116768836975
    3. 'dp' → logprob: -1.8509116172790527
    4. '(dp' → logprob: -3.6009116172790527
    5. '                       ' → logprob: -3.8509116172790527
    6. ' =' → logprob: -4.850911617279053
    7. ' à' → logprob: -5.100911617279053
    8. '                           ' → logprob: -5.100911617279053
    9. '[' → logprob: -5.850911617279053
    10. ' de' → logprob: -6.100911617279053

Token 762: ''arr' (ID: 49695)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46986687183380127
    2. 'e' → logprob: -1.2198668718338013
    3. ' dp' → logprob: -3.0948667526245117
    4. ''être' → logprob: -4.594866752624512
    5. '(dp' → logprob: -5.344866752624512
    6. '   ' → logprob: -5.719866752624512
    7. ''obtenir' → logprob: -5.719866752624512
    8. 'être' → logprob: -6.469866752624512
    9. '[' → logprob: -6.844866752624512
    10. ''acc' → logprob: -6.969866752624512

Token 763: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.00032283025211654603
    2. '[' → logprob: -9.375323295593262
    3. 'iv' → logprob: -9.500323295593262
    4. 'ive' → logprob: -10.000323295593262
    5. 'ivée' → logprob: -10.125323295593262
    6. 'ver' → logprob: -12.000323295593262
    7. '"' → logprob: -12.125323295593262
    8. '   ' → logprob: -12.250323295593262
    9. '`' → logprob: -12.375323295593262
    10. '=' → logprob: -12.500323295593262

Token 764: ' au' (ID: 2791)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07273652404546738
    2. ' dp' → logprob: -3.4477365016937256
    3. '[n' → logprob: -4.072736740112305
    4. '                   ' → logprob: -4.322736740112305
    5. '[' → logprob: -5.197736740112305
    6. '                       ' → logprob: -6.947736740112305
    7. ' [' → logprob: -7.947736740112305
    8. '                           ' → logprob: -8.197736740112305
    9. '               ' → logprob: -8.447736740112305
    10. '           ' → logprob: -9.072736740112305

Token 765: ' nouvel' (ID: 76298)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.054811302572488785
    2. 'dp' → logprob: -3.5548112392425537
    3. '[n' → logprob: -3.9298112392425537
    4. ' n' → logprob: -5.429811477661133
    5. '(n' → logprob: -7.679811477661133
    6. ' dp' → logprob: -9.179811477661133
    7. 'next' → logprob: -10.179811477661133
    8. '```' → logprob: -10.304811477661133
    9. '   ' → logprob: -11.179811477661133
    10. ' [' → logprob: -11.429811477661133

Token 766: ' état' (ID: 59181)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24683445692062378
    2. '[n' → logprob: -1.9968345165252686
    3. 'n' → logprob: -2.6218345165252686
    4. ' dp' → logprob: -5.4968342781066895
    5. ' [' → logprob: -7.1218342781066895
    6. ' n' → logprob: -7.2468342781066895
    7. '[' → logprob: -7.2468342781066895
    8. '][' → logprob: -7.4968342781066895
    9. '[len' → logprob: -7.6218342781066895
    10. '```' → logprob: -7.7468342781066895

Token 767: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27624425292015076
    2. 'dp' → logprob: -1.7762442827224731
    3. ' dp' → logprob: -2.6512441635131836
    4. '(dp' → logprob: -7.776244163513184
    5. '[n' → logprob: -8.401244163513184
    6. '           ' → logprob: -8.651244163513184
    7. '                       ' → logprob: -8.776244163513184
    8. '               ' → logprob: -9.276244163513184
    9. '[' → logprob: -9.401244163513184
    10. '                    ' → logprob: -9.526244163513184

Token 768: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.025494707748293877
    2. ' dp' → logprob: -3.7754948139190674
    3. 'n' → logprob: -6.525494575500488
    4. '[n' → logprob: -8.275494575500488
    5. 'position' → logprob: -8.650494575500488
    6. '[' → logprob: -9.900494575500488
    7. ' n' → logprob: -9.900494575500488
    8. ' la' → logprob: -10.650494575500488
    9. 'next' → logprob: -10.650494575500488
    10. '```' → logprob: -10.650494575500488

Token 769: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0037665897980332375
    2. 'position' → logprob: -6.8787665367126465
    3. ' dp' → logprob: -7.2537665367126465
    4. 'd' → logprob: -7.3787665367126465
    5. 'la' → logprob: -8.378767013549805
    6. 'pos' → logprob: -8.753767013549805
    7. '   ' → logprob: -8.878767013549805
    8. 'calcul' → logprob: -9.128767013549805
    9. 'nombre' → logprob: -9.253767013549805
    10. 'point' → logprob: -10.003767013549805

Token 770: ' chiffre' (ID: 107420)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5241401195526123
    2. ']' → logprob: -1.6491401195526123
    3. 'dp' → logprob: -2.5241401195526123
    4. '               ' → logprob: -3.3991401195526123
    5. '           ' → logprob: -3.5241401195526123
    6. '][' → logprob: -3.6491401195526123
    7. '                       ' → logprob: -4.649140357971191
    8. '                           ' → logprob: -4.899140357971191
    9. ' dp' → logprob: -5.149140357971191
    10. '                    ' → logprob: -5.524140357971191

Token 771: ' plus' (ID: 2932)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47609975934028625
    2. '][' → logprob: -1.6010997295379639
    3. ' dp' → logprob: -3.726099729537964
    4. '[n' → logprob: -4.226099967956543
    5. ']' → logprob: -4.726099967956543
    6. 'n' → logprob: -4.726099967956543
    7. '+' → logprob: -4.851099967956543
    8. '           ' → logprob: -4.976099967956543
    9. '_dp' → logprob: -4.976099967956543
    10. '[position' → logprob: -5.101099967956543

Token 772: ' loin' (ID: 40875)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8052653074264526
    2. '   ' → logprob: -1.8052653074264526
    3. 'loin' → logprob: -2.180265426635742
    4. 'plus' → logprob: -2.305265426635742
    5. 'près' → logprob: -3.055265426635742
    6. ' n' → logprob: -3.930265426635742
    7. 'pro' → logprob: -3.930265426635742
    8. 'prés' → logprob: -4.805265426635742
    9. '```' → logprob: -4.930265426635742
    10. 'avance' → logprob: -4.930265426635742

Token 773: ',
' (ID: 412)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.033555906265974045
    2. '][' → logprob: -4.15855598449707
    3. ' dp' → logprob: -4.90855598449707
    4. 'dp' → logprob: -5.28355598449707
    5. '(dp' → logprob: -6.65855598449707
    6. '                       ' → logprob: -6.90855598449707
    7. '               ' → logprob: -7.53355598449707
    8. ']' → logprob: -7.65855598449707
    9. '[' → logprob: -7.65855598449707
    10. '           ' → logprob: -8.53355598449707

Token 774: '                   ' (ID: 699)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.8869547843933105
    2. '                   ' → logprob: -1.5119547843933105
    3. '                       ' → logprob: -2.0119547843933105
    4. 'dp' → logprob: -2.1369547843933105
    5. '                               ' → logprob: -2.7619547843933105
    6. '                                   ' → logprob: -4.1369547843933105
    7. '                                           ' → logprob: -4.3869547843933105
    8. '                                       ' → logprob: -5.2619547843933105
    9. ' dp' → logprob: -5.3869547843933105
    10. 'n' → logprob: -6.3869547843933105

Token 775: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9145364761352539
    2. '                   ' → logprob: -1.289536476135254
    3. '                           ' → logprob: -1.664536476135254
    4. '                       ' → logprob: -3.164536476135254
    5. '                               ' → logprob: -3.414536476135254
    6. ' dp' → logprob: -3.789536476135254
    7. '                                   ' → logprob: -4.414536476135254
    8. '                                           ' → logprob: -4.664536476135254
    9. '                    ' → logprob: -5.539536476135254
    10. '                                       ' → logprob: -5.539536476135254

Token 776: ' en' (ID: 469)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5281835198402405
    2. ' dp' → logprob: -1.5281834602355957
    3. '                   ' → logprob: -2.5281834602355957
    4. '                           ' → logprob: -3.1531834602355957
    5. '                       ' → logprob: -4.278183460235596
    6. '                                           ' → logprob: -4.778183460235596
    7. '                               ' → logprob: -5.153183460235596
    8. ']' → logprob: -5.153183460235596
    9. '                                   ' → logprob: -5.653183460235596
    10. '][' → logprob: -5.778183460235596

Token 777: ' accum' (ID: 23148)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28345057368278503
    2. ' dp' → logprob: -1.4084506034851074
    3. '                           ' → logprob: -7.783450603485107
    4. '                               ' → logprob: -8.03345012664795
    5. '                       ' → logprob: -8.40845012664795
    6. '                                ' → logprob: -9.03345012664795
    7. '+=' → logprob: -9.28345012664795
    8. '                   ' → logprob: -9.53345012664795
    9. '                            ' → logprob: -9.53345012664795
    10. '                                   ' → logprob: -9.53345012664795

Token 778: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.7162057161331177
    2. 'dp' → logprob: -0.8412057161331177
    3. 'uant' → logprob: -2.841205596923828
    4. ' dp' → logprob: -4.716205596923828
    5. 'u' → logprob: -4.966205596923828
    6. 'ule' → logprob: -6.341205596923828
    7. 'ulating' → logprob: -6.716205596923828
    8. '(dp' → logprob: -6.841205596923828
    9. 'umul' → logprob: -7.341205596923828
    10. 'uer' → logprob: -8.716205596923828

Token 779: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00893433764576912
    2. 'ating' → logprob: -4.758934497833252
    3. 'dp' → logprob: -9.008934020996094
    4. 'ent' → logprob: -9.883934020996094
    5. 'e' → logprob: -10.508934020996094
    6. '   ' → logprob: -10.883934020996094
    7. 'ate' → logprob: -10.883934020996094
    8. 'er' → logprob: -11.008934020996094
    9. 'at' → logprob: -11.258934020996094
    10. '#' → logprob: -11.758934020996094

Token 780: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022237133234739304
    2. ' dp' → logprob: -3.8972370624542236
    3. '                   ' → logprob: -6.647237300872803
    4. '                           ' → logprob: -8.772236824035645
    5. '                       ' → logprob: -8.897236824035645
    6. '(dp' → logprob: -10.522236824035645
    7. '           ' → logprob: -11.272236824035645
    8. '               ' → logprob: -11.397236824035645
    9. '```' → logprob: -11.772236824035645
    10. '   ' → logprob: -11.897236824035645

Token 781: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26066359877586365
    2. ' dp' → logprob: -1.885663628578186
    3. '                   ' → logprob: -3.5106635093688965
    4. '(dp' → logprob: -4.1356635093688965
    5. ')' → logprob: -4.2606635093688965
    6. ']' → logprob: -5.6356635093688965
    7. '                       ' → logprob: -5.7606635093688965
    8. '                           ' → logprob: -5.8856635093688965
    9. '           ' → logprob: -6.3856635093688965
    10. '_dp' → logprob: -7.1356635093688965

Token 782: ' transitions' (ID: 59824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038743119686841965
    2. ' façons' → logprob: -3.788743019104004
    3. ' dp' → logprob: -5.038743019104004
    4. 'poss' → logprob: -5.163743019104004
    5. ' possibilités' → logprob: -6.538743019104004
    6. 'cases' → logprob: -8.538743019104004
    7. ' ways' → logprob: -8.663743019104004
    8. ']' → logprob: -8.788743019104004
    9. 'man' → logprob: -8.788743019104004
    10. ' possibles' → logprob: -8.913743019104004

Token 783: ' possibles' (ID: 97753)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2534453570842743
    2. 'dp' → logprob: -2.5034453868865967
    3. ' dp' → logprob: -2.6284453868865967
    4. '                       ' → logprob: -3.2534453868865967
    5. '[' → logprob: -4.253445148468018
    6. '                           ' → logprob: -5.128445148468018
    7. '][' → logprob: -5.628445148468018
    8. '(dp' → logprob: -6.503445148468018
    9. '               ' → logprob: -7.003445148468018
    10. '                               ' → logprob: -7.253445148468018

Token 784: ' depuis' (ID: 16277)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008319015032611787
    2. 'dp' → logprob: -7.8758320808410645
    3. '                       ' → logprob: -8.750831604003906
    4. ' dp' → logprob: -9.500831604003906
    5. '[' → logprob: -9.625831604003906
    6. '                           ' → logprob: -10.375831604003906
    7. '
' → logprob: -10.625831604003906
    8. '(dp' → logprob: -10.750831604003906
    9. '               ' → logprob: -11.000831604003906
    10. ',' → logprob: -11.375831604003906

Token 785: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.055180713534355164
    2. ' dp' → logprob: -3.555180788040161
    3. '                   ' → logprob: -3.805180788040161
    4. '[n' → logprob: -7.305180549621582
    5. 'la' → logprob: -8.055180549621582
    6. 'l' → logprob: -8.180180549621582
    7. ' la' → logprob: -8.430180549621582
    8. '                       ' → logprob: -8.680180549621582
    9. 'n' → logprob: -8.680180549621582
    10. '                    ' → logprob: -8.930180549621582

Token 786: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.6805844306945801
    2. 'dp' → logprob: -0.8055844306945801
    3. ' dp' → logprob: -3.93058443069458
    4. '[' → logprob: -5.55558443069458
    5. '[n' → logprob: -5.55558443069458
    6. '`' → logprob: -5.68058443069458
    7. ''ancien' → logprob: -6.05558443069458
    8. 'a' → logprob: -6.18058443069458
    9. '’état' → logprob: -6.68058443069458
    10. 'n' → logprob: -6.80558443069458

Token 787: ' précédent' (ID: 128462)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3213455080986023
    2. 'dp' → logprob: -1.446345567703247
    3. 'n' → logprob: -4.071345329284668
    4. ' dp' → logprob: -5.196345329284668
    5. ' n' → logprob: -5.571345329284668
    6. '           ' → logprob: -5.571345329284668
    7. '                   ' → logprob: -5.571345329284668
    8. ' [' → logprob: -6.071345329284668
    9. '               ' → logprob: -6.196345329284668
    10. '       ' → logprob: -7.696345329284668

Token 788: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01854238100349903
    2. 'dp' → logprob: -4.143542289733887
    3. ' dp' → logprob: -6.393542289733887
    4. '
' → logprob: -8.393542289733887
    5. '(dp' → logprob: -8.643542289733887
    6. '                       ' → logprob: -9.268542289733887
    7. '                    
' → logprob: -9.768542289733887
    8. '               ' → logprob: -9.893542289733887
    9. '           ' → logprob: -9.893542289733887
    10. ']' → logprob: -10.143542289733887

Token 789: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006705015548504889
    2. 'dp' → logprob: -8.250670433044434
    3. ' dp' → logprob: -8.875670433044434
    4. '                       ' → logprob: -9.750670433044434
    5. '
' → logprob: -10.500670433044434
    6. '                    
' → logprob: -10.500670433044434
    7. '               ' → logprob: -10.625670433044434
    8. '(dp' → logprob: -10.750670433044434
    9. ']' → logprob: -10.875670433044434
    10. '           ' → logprob: -11.000670433044434

Token 790: ' dp' (ID: 21546)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09150589257478714
    2. 'dp' (adapté à ' dp') → logprob: -2.966506004333496
    3. ' dp' → logprob: -3.341506004333496
    4. '                       ' → logprob: -8.966506004333496
    5. '(dp' → logprob: -9.216506004333496
    6. '                    
' → logprob: -9.466506004333496
    7. '[' → logprob: -9.841506004333496
    8. '
' → logprob: -10.091506004333496
    9. '	dp' → logprob: -10.341506004333496
    10. '               ' → logprob: -10.591506004333496

Token 791: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.375000953674316
    3. '[' → logprob: -15.500000953674316
    4. 'n' → logprob: -15.750000953674316
    5. '```' → logprob: -18.75
    6. '[len' → logprob: -19.625
    7. ' n' → logprob: -19.75
    8. '][' → logprob: -20.0
    9. '\[' → logprob: -20.125
    10. '[num' → logprob: -20.375

Token 792: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000667640648316592
    2. '[len' → logprob: -7.750667572021484
    3. '[n' → logprob: -8.500667572021484
    4. 'n' → logprob: -11.375667572021484
    5. '][' → logprob: -11.375667572021484
    6. '[' → logprob: -12.625667572021484
    7. ' len' → logprob: -13.375667572021484
    8. '   ' → logprob: -13.500667572021484
    9. '```' → logprob: -13.750667572021484
    10. 'length' → logprob: -14.250667572021484

Token 793: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10107236355543137
    2. '+' → logprob: -2.351072311401367
    3. ' ][' → logprob: -7.726072311401367
    4. ']' → logprob: -8.601072311401367
    5. ' +' → logprob: -8.976072311401367
    6. '[' → logprob: -10.226072311401367
    7. '   ' → logprob: -10.476072311401367
    8. '[j' → logprob: -11.101072311401367
    9. ' ' → logprob: -11.726072311401367
    10. '+j' → logprob: -11.726072311401367

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '][' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.250009536743164
    4. '[' → logprob: -15.250009536743164
    5. '```' → logprob: -15.250009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '
' → logprob: -18.000009536743164
    8. ']' → logprob: -18.750009536743164
    9. '#' → logprob: -18.750009536743164
    10. '１' → logprob: -18.875009536743164

Token 795: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017469677550252527
    2. '[j' → logprob: -9.250174522399902
    3. ' ][' → logprob: -10.125174522399902
    4. ']' → logprob: -10.875174522399902
    5. '[' → logprob: -11.375174522399902
    6. '   ' → logprob: -12.875174522399902
    7. ' ' → logprob: -13.875174522399902
    8. ']][' → logprob: -13.875174522399902
    9. ')][' → logprob: -14.625174522399902
    10. ')[' → logprob: -14.625174522399902

Token 796: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -4.320199877838604e-07
    2. ' flag' → logprob: -14.75
    3. '	flag' → logprob: -18.125
    4. '   ' → logprob: -18.75
    5. '(flag' → logprob: -18.75
    6. '_flag' → logprob: -21.125
    7. 'flags' → logprob: -21.875
    8. '
' → logprob: -22.0
    9. 'fl' → logprob: -22.0
    10. '  ' → logprob: -22.375

Token 797: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: 0.0
    2. ' j' → logprob: -17.375
    3. '[j' → logprob: -17.5
    4. '	j' → logprob: -18.125
    5. 'ј' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. '_j' → logprob: -19.125
    8. 'ĵ' → logprob: -19.25
    9. '   ' → logprob: -19.75
    10. ' ' → logprob: -19.875

Token 798: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.17978286743164062
    2. '[' → logprob: -1.8047828674316406
    3. ']' → logprob: -11.05478286743164
    4. ' ][' → logprob: -11.05478286743164
    5. '   ' → logprob: -13.30478286743164
    6. '"][' → logprob: -13.92978286743164
    7. 'flag' → logprob: -13.92978286743164
    8. ''][' → logprob: -14.67978286743164
    9. ' [' → logprob: -15.05478286743164
    10. '       ' → logprob: -15.05478286743164

Token 799: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -4.320199877838604e-07
    2. ' flag' → logprob: -14.75
    3. '	flag' → logprob: -20.375
    4. '(flag' → logprob: -20.625
    5. '   ' → logprob: -22.625
    6. '_flag' → logprob: -22.625
    7. 'Flag' → logprob: -22.875
    8. 'flags' → logprob: -23.25
    9. ' ' → logprob: -24.0
    10. 'fl' → logprob: -24.125

Token 800: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. 'к' → logprob: -17.625
    3. ' k' → logprob: -18.125
    4. '	k' → logprob: -18.5
    5. '{k' → logprob: -19.0
    6. 'ک' → logprob: -19.625
    7. '‌' → logprob: -20.625
    8. 'ك' → logprob: -20.75
    9. '[' → logprob: -20.75
    10. '_k' → logprob: -20.875

Token 801: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0380435548722744
    2. ']+=' → logprob: -3.28804349899292
    3. '+=' → logprob: -13.663043975830078
    4. ' ]' → logprob: -14.913043975830078
    5. ']+' → logprob: -15.288043975830078
    6. '+]' → logprob: -15.413043975830078
    7. '```' → logprob: -16.913043975830078
    8. ']=' → logprob: -17.038043975830078
    9. '`]' → logprob: -17.663043975830078
    10. '   ' → logprob: -18.413043975830078

Token 802: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003282286459580064
    2. ' +=' → logprob: -6.253282070159912
    3. ']+=' → logprob: -6.628282070159912
    4. '=' → logprob: -10.75328254699707
    5. '```' → logprob: -12.00328254699707
    6. '[' → logprob: -13.37828254699707
    7. '+=(' → logprob: -14.50328254699707
    8. '+' → logprob: -15.25328254699707
    9. '+='' → logprob: -15.25328254699707
    10. ']' → logprob: -15.62828254699707

Token 803: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7610454708337784e-05
    2. ' dp' → logprob: -10.500027656555176
    3. '	dp' → logprob: -20.00002670288086
    4. '(dp' → logprob: -22.37502670288086
    5. '_dp' → logprob: -23.62502670288086
    6. '   ' → logprob: -25.25002670288086
    7. 'd' → logprob: -25.62502670288086
    8. '.dp' → logprob: -25.87502670288086
    9. 'df' → logprob: -26.87502670288086
    10. 'dt' → logprob: -27.62502670288086

Token 804: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0002615742268972099
    2. 'n' → logprob: -8.250261306762695
    3. '```' → logprob: -15.875261306762695
    4. ' n' → logprob: -16.375261306762695
    5. '[' → logprob: -16.875261306762695
    6. ' [' → logprob: -17.000261306762695
    7. '	n' → logprob: -17.375261306762695
    8. '   ' → logprob: -17.625261306762695
    9. ' ' → logprob: -18.375261306762695
    10. '(n' → logprob: -18.750261306762695

Token 805: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.816093228830141e-06
    2. '[len' → logprob: -13.12500286102295
    3. ' len' → logprob: -14.87500286102295
    4. 'length' → logprob: -15.75000286102295
    5. '[' → logprob: -16.875001907348633
    6. '<len' → logprob: -17.000001907348633
    7. 'en' → logprob: -17.250001907348633
    8. '	len' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'Len' → logprob: -17.625001907348633

Token 806: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18129335343837738
    2. '[n' → logprob: -1.9312933683395386
    3. 'len' → logprob: -4.806293487548828
    4. '[j' → logprob: -5.056293487548828
    5. '[' → logprob: -6.056293487548828
    6. '[len' → logprob: -6.556293487548828
    7. '   ' → logprob: -6.931293487548828
    8. ' ' → logprob: -7.806293487548828
    9. 'n' → logprob: -8.306293487548828
    10. ']' → logprob: -8.681293487548828

Token 807: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.961759259458631e-06
    2. ' j' → logprob: -12.250004768371582
    3. '[j' → logprob: -15.625004768371582
    4. '	j' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.6250057220459
    6. '$j' → logprob: -18.0000057220459
    7. ' ' → logprob: -19.6250057220459
    8. '(j' → logprob: -19.7500057220459
    9. '  ' → logprob: -20.0000057220459
    10. '_j' → logprob: -20.1250057220459

Token 808: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004192330234218389
    2. '[k' → logprob: -7.8754191398620605
    3. 'k' → logprob: -10.750419616699219
    4. ']' → logprob: -11.625419616699219
    5. ' ][' → logprob: -11.875419616699219
    6. '[' → logprob: -14.875419616699219
    7. ' ' → logprob: -14.875419616699219
    8. '   ' → logprob: -15.250419616699219
    9. '"][' → logprob: -15.250419616699219
    10. ''][' → logprob: -16.50041961669922

Token 809: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.125
    3. '[k' → logprob: -19.75
    4. '	k' → logprob: -19.75
    5. ' ' → logprob: -20.125
    6. '   ' → logprob: -20.5
    7. '{k' → logprob: -22.125
    8. '  ' → logprob: -22.125
    9. '][' → logprob: -22.75
    10. '```' → logprob: -22.875

Token 810: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.313314952421933e-05
    2. '])' → logprob: -10.000062942504883
    3. ' ]' → logprob: -11.375062942504883
    4. ')' → logprob: -12.875062942504883
    5. ']
' → logprob: -13.500062942504883
    6. ']*' → logprob: -14.000062942504883
    7. '                   ' → logprob: -15.000062942504883
    8. '[' → logprob: -15.250062942504883
    9. '               ' → logprob: -15.750062942504883
    10. ')]' → logprob: -15.875062942504883

Token 811: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017112065688706934
    2. '))' → logprob: -8.875170707702637
    3. ')))' → logprob: -10.625170707702637
    4. ' )' → logprob: -12.500170707702637
    5. ')])' → logprob: -13.750170707702637
    6. ')}}' → logprob: -14.375170707702637
    7. '])' → logprob: -14.750170707702637
    8. '())' → logprob: -15.500170707702637
    9. ')`' → logprob: -15.625170707702637
    10. ')
' → logprob: -15.875170707702637

Token 812: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09166469424962997
    2. ')' → logprob: -2.5916647911071777
    3. '<|end|>' → logprob: -4.466664791107178
    4. ']' → logprob: -7.716664791107178
    5. 'return' → logprob: -8.59166431427002
    6. '#' (adapté à ' #') → logprob: -8.59166431427002
    7. '[' → logprob: -9.84166431427002
    8. '    
' → logprob: -10.09166431427002
    9. ' return' → logprob: -10.21666431427002
    10. '}' → logprob: -10.34166431427002

Token 813: ' À' (ID: 27643)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020342117932159454
    2. '))' → logprob: -9.000203132629395
    3. '])' → logprob: -10.625203132629395
    4. ')]' → logprob: -10.875203132629395
    5. ')))' → logprob: -11.500203132629395
    6. ')])' → logprob: -11.625203132629395
    7. ']' → logprob: -12.000203132629395
    8. ' )' → logprob: -12.375203132629395
    9. ')}' → logprob: -13.125203132629395
    10. ')}}' → logprob: -13.375203132629395

Token 814: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3596853831550106e-05
    2. '))' → logprob: -10.250053405761719
    3. '])' → logprob: -12.125053405761719
    4. ')]' → logprob: -12.875053405761719
    5. ']' → logprob: -13.000053405761719
    6. ')))' → logprob: -13.250053405761719
    7. ' )' → logprob: -13.375053405761719
    8. ')])' → logprob: -13.750053405761719
    9. '   ' → logprob: -13.875053405761719
    10. ')}}' → logprob: -14.625053405761719

Token 815: ' fin' (ID: 2131)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6526004076004028
    2. 'fin' → logprob: -0.7776004076004028
    3. 'print' → logprob: -4.402600288391113
    4. '#' → logprob: -6.027600288391113
    5. ' fin' → logprob: -6.402600288391113
    6. ' return' → logprob: -6.652600288391113
    7. 'la' → logprob: -7.902600288391113
    8. 'final' → logprob: -8.152600288391113
    9. 'part' → logprob: -8.277600288391113
    10. 'def' → logprob: -8.277600288391113

Token 816: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007043913938105106
    2. 'total' → logprob: -6.007043838500977
    3. ' total' → logprob: -7.007043838500977
    4. '[' → logprob: -7.507043838500977
    5. 'def' → logprob: -7.632043838500977
    6. ',' → logprob: -7.632043838500977
    7. ' return' → logprob: -7.757043838500977
    8. 'return' → logprob: -7.882043838500977
    9. 'result' → logprob: -8.382043838500977
    10. ':' → logprob: -8.382043838500977

Token 817: ' on' (ID: 402)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6251558065414429
    2. ' print' → logprob: -1.8751558065414429
    3. 'result' → logprob: -2.1251559257507324
    4. ' total' → logprob: -2.6251559257507324
    5. ' res' → logprob: -3.3751559257507324
    6. '   ' → logprob: -3.7501559257507324
    7. 'total' → logprob: -4.375155925750732
    8. 'print' → logprob: -4.500155925750732
    9. ' return' → logprob: -4.500155925750732
    10. 'res' → logprob: -4.875155925750732

Token 818: ' souhaite' (ID: 68897)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6214346289634705
    2. 'result' → logprob: -1.8714346885681152
    3. 'return' → logprob: -2.1214346885681152
    4. '#' → logprob: -2.8714346885681152
    5. 'total' → logprob: -3.3714346885681152
    6. 'answer' → logprob: -3.7464346885681152
    7. '=' → logprob: -4.121434688568115
    8. ' =' → logprob: -4.621434688568115
    9. 'res' → logprob: -4.746434688568115
    10. ' return' → logprob: -4.746434688568115

Token 819: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7951831221580505
    2. 'return' → logprob: -1.9201831817626953
    3. ')' → logprob: -2.0451831817626953
    4. '#' → logprob: -2.7951831817626953
    5. 'total' → logprob: -3.2951831817626953
    6. '   ' → logprob: -3.2951831817626953
    7. ' return' → logprob: -3.5451831817626953
    8. 'sum' → logprob: -3.5451831817626953
    9. ']' → logprob: -3.6701831817626953
    10. ' total' → logprob: -3.9201831817626953

Token 820: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6658883094787598
    2. 'result' → logprob: -1.1658883094787598
    3. 'rés' → logprob: -2.4158883094787598
    4. 'total' → logprob: -3.2908883094787598
    5. 'return' → logprob: -3.7908883094787598
    6. 's' → logprob: -4.79088830947876
    7. 'sum' → logprob: -5.04088830947876
    8. '#' → logprob: -5.79088830947876
    9. 'nombre' → logprob: -6.16588830947876
    10. 'res' → logprob: -6.16588830947876

Token 821: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.48179173469543457
    2. ' =' → logprob: -2.1067917346954346
    3. ' total' → logprob: -2.3567917346954346
    4. '   ' → logprob: -3.1067917346954346
    5. '=' → logprob: -3.3567917346954346
    6. ' de' → logprob: -3.3567917346954346
    7. '_total' → logprob: -3.4817917346954346
    8. 'de' → logprob: -4.8567914962768555
    9. 'def' → logprob: -5.8567914962768555
    10. 'final' → logprob: -6.1067914962768555

Token 822: ' façons' (ID: 165958)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.547974169254303
    2. 'fa' → logprob: -1.0479741096496582
    3. ' façons' → logprob: -3.172974109649658
    4. 'n' → logprob: -4.172974109649658
    5. 'ch' → logprob: -5.047974109649658
    6. 'nombre' → logprob: -5.922974109649658
    7. 'val' → logprob: -7.172974109649658
    8. '   ' → logprob: -7.297974109649658
    9. '```' → logprob: -7.297974109649658
    10. 'm' → logprob: -7.422974109649658

Token 823: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16798146069049835
    2. ' =' → logprob: -2.7929813861846924
    3. '=' → logprob: -3.1679813861846924
    4. 'def' → logprob: -3.9179813861846924
    5. ' de' → logprob: -4.1679816246032715
    6. 'de' → logprob: -4.6679816246032715
    7. '[' → logprob: -6.6679816246032715
    8. 'return' → logprob: -6.9179816246032715
    9. 'd' → logprob: -7.2929816246032715
    10. 'total' → logprob: -7.9179816246032715

Token 824: ''obtenir' (ID: 191633)
  Prédit: ''obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.6110873818397522
    2. ''arr' → logprob: -1.1110873222351074
    3. ''avoir' → logprob: -2.4860873222351074
    4. 'arr' → logprob: -3.8610873222351074
    5. 'e' → logprob: -3.9860873222351074
    6. ''é' → logprob: -6.486087322235107
    7. ''utiliser' → logprob: -7.111087322235107
    8. ''' → logprob: -7.736087322235107
    9. ''arrivée' → logprob: -7.861087322235107
    10. '’obtenir' → logprob: -8.236087799072266

Token 825: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.031158916652202606
    2. 'un' → logprob: -3.531158924102783
    3. ' une' → logprob: -7.781158924102783
    4. '#' → logprob: -8.156158447265625
    5. 'sum' → logprob: -8.531158447265625
    6. 'def' → logprob: -9.031158447265625
    7. ' #' → logprob: -9.906158447265625
    8. ' le' → logprob: -10.031158447265625
    9. ' des' → logprob: -10.156158447265625
    10. '[]' → logprob: -10.656158447265625

Token 826: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.008724482730031013
    2. ' nombre' → logprob: -4.758724689483643
    3. 'ent' → logprob: -9.883724212646484
    4. '_nombre' → logprob: -11.008724212646484
    5. ' entier' → logprob: -11.383724212646484
    6. 'num' → logprob: -11.508724212646484
    7. '#' → logprob: -12.008724212646484
    8. 'Nombre' → logprob: -12.383724212646484
    9. '```' → logprob: -13.508724212646484
    10. 'n' → logprob: -13.633724212646484

Token 827: ' de' (ID: 334)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4453849792480469
    2. '   ' → logprob: -2.195384979248047
    3. ' <=' → logprob: -2.820384979248047
    4. ' inférieur' → logprob: -2.945384979248047
    5. '[' → logprob: -3.445384979248047
    6. 'strict' → logprob: -3.820384979248047
    7. '```' → logprob: -4.195384979248047
    8. '[n' → logprob: -4.195384979248047
    9. 'dont' → logprob: -5.070384979248047
    10. 'moins' → logprob: -5.445384979248047

Token 828: ' K' (ID: 658)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.25119584798812866
    2. 'N' → logprob: -1.6261959075927734
    3. 'digits' → logprob: -5.001195907592773
    4. 'c' → logprob: -5.751195907592773
    5. 'n' → logprob: -5.876195907592773
    6. '```' → logprob: -6.001195907592773
    7. 'd' → logprob: -6.126195907592773
    8. 'long' → logprob: -6.376195907592773
    9. '#' → logprob: -6.626195907592773
    10. '[N' → logprob: -7.501195907592773

Token 829: ' chiffres' (ID: 105565)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.8487610816955566
    2. '=' → logprob: -0.9737610816955566
    3. '+' → logprob: -2.8487610816955566
    4. 'ou' → logprob: -3.4737610816955566
    5. '_non' → logprob: -3.4737610816955566
    6. ' non' → logprob: -3.9737610816955566
    7. '<=' → logprob: -4.473761081695557
    8. 'digits' → logprob: -4.723761081695557
    9. ' ou' → logprob: -5.098761081695557
    10. 'au' → logprob: -5.223761081695557

Token 830: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002932750794570893
    2. '))' → logprob: -8.750293731689453
    3. '])' → logprob: -9.750293731689453
    4. ')]' → logprob: -10.750293731689453
    5. ']' → logprob: -11.000293731689453
    6. ')])' → logprob: -11.375293731689453
    7. ')))' → logprob: -11.750293731689453
    8. ')`' → logprob: -12.125293731689453
    9. ' )' → logprob: -12.375293731689453
    10. '   ' → logprob: -12.875293731689453

Token 831: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0041662524454295635
    2. 'nul' → logprob: -6.004166126251221
    3. 'null' → logprob: -6.629166126251221
    4. '0' → logprob: -9.004166603088379
    5. 'z' → logprob: -9.504166603088379
    6. 'nz' → logprob: -10.254166603088379
    7. 'nus' → logprob: -11.004166603088379
    8. 'zeros' → logprob: -11.129166603088379
    9. '```' → logprob: -11.129166603088379
    10. ' n' → logprob: -11.129166603088379

Token 832: 'uls' (ID: 13433)
  Prédit: 'uls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uls' → logprob: -0.16258493065834045
    2. 'on' → logprob: -2.0375850200653076
    3. 'onz' → logprob: -5.0375847816467285
    4. 'z' → logprob: -5.1625847816467285
    5. 'u' → logprob: -6.1625847816467285
    6. 'ul' → logprob: -6.7875847816467285
    7. 'ons' → logprob: -6.9125847816467285
    8. 'ulls' → logprob: -7.6625847816467285
    9. 'n' → logprob: -8.037585258483887
    10. '```' → logprob: -8.037585258483887

Token 833: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2138240784406662
    2. 'return' → logprob: -1.9638240337371826
    3. 'result' → logprob: -3.8388240337371826
    4. ' return' → logprob: -3.8388240337371826
    5. 'total' → logprob: -5.213824272155762
    6. ' result' → logprob: -7.463824272155762
    7. ' total' → logprob: -7.588824272155762
    8. '
' → logprob: -7.713824272155762
    9. 'print' → logprob: -7.838824272155762
    10. '    
' → logprob: -8.088824272155762

Token 834: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01331128366291523
    2. 'return' → logprob: -5.513311386108398
    3. ' return' → logprob: -5.888311386108398
    4. 'result' → logprob: -6.138311386108398
    5. 'total' → logprob: -6.263311386108398
    6. ' total' → logprob: -7.388311386108398
    7. ' =' → logprob: -7.513311386108398
    8. '[' → logprob: -8.263311386108398
    9. ' result' → logprob: -8.513311386108398
    10. ',' → logprob: -8.638311386108398

Token 835: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0083729028701782
    2. 'return' → logprob: -1.2583729028701782
    3. ' return' → logprob: -2.3833727836608887
    4. ' =' → logprob: -2.3833727836608887
    5. '   ' → logprob: -3.1333727836608887
    6. '=' → logprob: -3.2583727836608887
    7. 'total' → logprob: -3.2583727836608887
    8. ' result' → logprob: -3.3833727836608887
    9. ' total' → logprob: -5.008372783660889
    10. 'answer' → logprob: -6.633372783660889

Token 836: ' qui' (ID: 2780)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.45931902527809143
    2. '   ' → logprob: -2.0843191146850586
    3. 'return' → logprob: -2.2093191146850586
    4. 'total' → logprob: -2.7093191146850586
    5. 'print' → logprob: -2.9593191146850586
    6. ' result' → logprob: -5.209319114685059
    7. ' return' → logprob: -5.584319114685059
    8. 'answer' → logprob: -6.334319114685059
    9. ' print' → logprob: -6.459319114685059
    10. ' total' → logprob: -6.709319114685059

Token 837: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0030619686003774405
    2. ' =' → logprob: -6.003061771392822
    3. '=sum' → logprob: -8.00306224822998
    4. 'return' → logprob: -8.87806224822998
    5. '=
' → logprob: -9.62806224822998
    6. '=#' → logprob: -11.75306224822998
    7. 's' → logprob: -12.00306224822998
    8. ' return' → logprob: -12.12806224822998
    9. '#' → logprob: -12.62806224822998
    10. 'print' → logprob: -12.75306224822998

Token 838: ' au' (ID: 2791)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08493354171514511
    2. 'dp' → logprob: -2.5849335193634033
    3. ' sum' → logprob: -5.959933757781982
    4. '=sum' → logprob: -6.584933757781982
    5. ' dp' → logprob: -6.709933757781982
    6. '0' → logprob: -8.584933280944824
    7. '   ' → logprob: -8.584933280944824
    8. '=' → logprob: -8.959933280944824
    9. '(dp' → logprob: -9.084933280944824
    10. '(sum' → logprob: -9.459933280944824

Token 839: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.027106277644634247
    2. 'moins' → logprob: -4.027106285095215
    3. 'most' → logprob: -4.777106285095215
    4. 'maximum' → logprob: -8.277106285095215
    5. 'max' → logprob: -9.152106285095215
    6. 'Plus' → logprob: -10.402106285095215
    7. '```' → logprob: -10.652106285095215
    8. 'position' → logprob: -10.777106285095215
    9. ' plus' → logprob: -11.652106285095215
    10. '   ' → logprob: -11.777106285095215

Token 840: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22604478895664215
    2. 'N' → logprob: -1.726044774055481
    3. ' K' → logprob: -4.601044654846191
    4. '   ' → logprob: -5.601044654846191
    5. 'égal' → logprob: -6.476044654846191
    6. '[' → logprob: -6.726044654846191
    7. ' égal' → logprob: -6.851044654846191
    8. '[N' → logprob: -6.976044654846191
    9. 'dans' → logprob: -7.101044654846191
    10. ' N' → logprob: -7.351044654846191

Token 841: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5250590443611145
    2. 'return' → logprob: -1.4000589847564697
    3. 'result' → logprob: -2.5250589847564697
    4. ' return' → logprob: -3.2750589847564697
    5. 'total' → logprob: -3.6500589847564697
    6. ' =' → logprob: -5.400059223175049
    7. ' result' → logprob: -5.525059223175049
    8. ' total' → logprob: -5.900059223175049
    9. 'def' → logprob: -6.025059223175049
    10. '=' → logprob: -6.150059223175049

Token 842: ' 
' (ID: 793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.809276282787323
    2. 'result' → logprob: -0.809276282787323
    3. '   ' → logprob: -2.9342763423919678
    4. 'total' → logprob: -3.1842763423919678
    5. 'res' → logprob: -5.434276103973389
    6. 'print' → logprob: -5.559276103973389
    7. ' return' → logprob: -5.684276103973389
    8. 'answer' → logprob: -6.309276103973389
    9. ' result' → logprob: -7.684276103973389
    10. 'ret' → logprob: -7.934276103973389

Token 843: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6417835354804993
    2. 'return' → logprob: -0.8917835354804993
    3. '   ' → logprob: -3.3917834758758545
    4. 'total' → logprob: -4.141783714294434
    5. ' return' → logprob: -5.141783714294434
    6. 'print' → logprob: -5.391783714294434
    7. ' result' → logprob: -6.141783714294434
    8. 'answer' → logprob: -7.016783714294434
    9. 'res' → logprob: -8.516783714294434
    10. 'ret' → logprob: -8.766783714294434

Token 844: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7587795853614807
    2. 'print' → logprob: -1.133779525756836
    3. 'result' → logprob: -1.633779525756836
    4. 'total' → logprob: -5.008779525756836
    5. 'answer' → logprob: -5.383779525756836
    6. '   ' → logprob: -6.133779525756836
    7. ' return' → logprob: -7.508779525756836
    8. 'ret' → logprob: -8.258779525756836
    9. ' print' → logprob: -8.383779525756836
    10. ' result' → logprob: -9.383779525756836

Token 845: ' Il' (ID: 5329)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2688709497451782
    2. '   ' → logprob: -1.6438709497451782
    3. ' return' → logprob: -3.5188708305358887
    4. 'result' → logprob: -4.643870830535889
    5. ')' → logprob: -6.768870830535889
    6. 'total' → logprob: -7.518870830535889
    7. 'print' → logprob: -7.893870830535889
    8. 'ret' → logprob: -8.143871307373047
    9. '    
' → logprob: -9.143871307373047
    10. '#' → logprob: -9.268871307373047

Token 846: ' y' (ID: 342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12175063043832779
    2. ' =' → logprob: -2.746750593185425
    3. 's' → logprob: -3.746750593185425
    4. 'total' → logprob: -4.746750831604004
    5. 'result' → logprob: -4.996750831604004
    6. 'return' → logprob: -5.621750831604004
    7. 'est' → logprob: -6.746750831604004
    8. 'print' → logprob: -6.996750831604004
    9. 'rés' → logprob: -7.121750831604004
    10. 'sum' → logprob: -7.246750831604004

Token 847: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5219067931175232
    2. '=' → logprob: -1.396906852722168
    3. ' a' → logprob: -2.396906852722168
    4. ' =' → logprob: -2.896906852722168
    5. '+=' → logprob: -6.021906852722168
    6. '#' → logprob: -6.021906852722168
    7. '=a' → logprob: -6.521906852722168
    8. '_a' → logprob: -6.896906852722168
    9. 'à' → logprob: -7.396906852722168
    10. '   ' → logprob: -7.521906852722168

Token 848: ' deux' (ID: 10301)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.025039067491889
    2. ' sum' → logprob: -4.025039196014404
    3. 'result' → logprob: -5.650039196014404
    4. 'dp' → logprob: -7.525039196014404
    5. '   ' → logprob: -7.650039196014404
    6. 'print' → logprob: -7.775039196014404
    7. 'return' → logprob: -8.025038719177246
    8. '=sum' → logprob: -8.525038719177246
    9. 'total' → logprob: -8.900038719177246
    10. 'res' → logprob: -8.900038719177246

Token 849: ' cas' (ID: 2108)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8807910084724426
    2. ')' → logprob: -1.7557909488677979
    3. 'indices' → logprob: -2.005790948867798
    4. 'for' → logprob: -3.255790948867798
    5. '=' → logprob: -3.255790948867798
    6. ' indices' → logprob: -3.755790948867798
    7. 'sum' → logprob: -3.880790948867798
    8. '[' → logprob: -4.005791187286377
    9. 's' → logprob: -4.005791187286377
    10. '#' → logprob: -4.380791187286377

Token 850: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5465657114982605
    2. ' =' → logprob: -1.5465657711029053
    3. 'result' → logprob: -2.7965657711029053
    4. 'total' → logprob: -2.7965657711029053
    5. '   ' → logprob: -3.4215657711029053
    6. '=' → logprob: -3.5465657711029053
    7. 'possible' → logprob: -5.671565532684326
    8. 'return' → logprob: -6.046565532684326
    9. ' total' → logprob: -6.171565532684326
    10. 'for' → logprob: -6.171565532684326

Token 851: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.283389687538147
    2. 'result' → logprob: -1.908389687538147
    3. 'return' → logprob: -2.9083895683288574
    4. 'total' → logprob: -3.4083895683288574
    5. ' return' → logprob: -5.783389568328857
    6. 'res' → logprob: -6.158389568328857
    7. 'sum' → logprob: -6.908389568328857
    8. ' total' → logprob: -7.283389568328857
    9. ' result' → logprob: -7.658389568328857
    10. 'count' → logprob: -7.658389568328857

Token 852: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18036392331123352
    2. 'return' → logprob: -2.305363893508911
    3. 'result' → logprob: -3.055363893508911
    4. ' return' → logprob: -4.30536413192749
    5. 'total' → logprob: -5.80536413192749
    6. ' result' → logprob: -7.43036413192749
    7. 'ret' → logprob: -8.055363655090332
    8. ' total' → logprob: -8.430363655090332
    9. 'res' → logprob: -8.805363655090332
    10. '```' → logprob: -9.305363655090332

Token 853: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2644754946231842
    2. 'return' → logprob: -1.6394754648208618
    3. 'res' → logprob: -4.139475345611572
    4. 'total' → logprob: -4.764475345611572
    5. 'print' → logprob: -5.139475345611572
    6. 'ret' → logprob: -6.014475345611572
    7. 'rés' → logprob: -6.264475345611572
    8. 'answer' → logprob: -6.389475345611572
    9. '   ' → logprob: -7.514475345611572
    10. ' return' → logprob: -7.639475345611572

Token 854: ' So' (ID: 2632)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6032624244689941
    2. 'print' → logprob: -1.1032624244689941
    3. 'rés' → logprob: -3.353262424468994
    4. '#' → logprob: -3.478262424468994
    5. 'res' → logprob: -3.478262424468994
    6. 'return' → logprob: -4.353262424468994
    7. ' print' → logprob: -6.103262424468994
    8. 'total' → logprob: -6.228262424468994
    9. '   ' → logprob: -6.478262424468994
    10. ' result' → logprob: -6.603262424468994

Token 855: 'it' (ID: 278)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.40096381306648254
    2. 'u' → logprob: -1.7759637832641602
    3. 'ur' → logprob: -2.77596378326416
    4. 'n' → logprob: -3.27596378326416
    5. 'l' → logprob: -3.40096378326416
    6. 'nt' → logprob: -5.02596378326416
    7. '   ' → logprob: -5.02596378326416
    8. 'r' → logprob: -5.65096378326416
    9. 'm' → logprob: -6.27596378326416
    10. 'it' → logprob: -6.40096378326416

Token 856: ' le' (ID: 505)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.36014968156814575
    2. 'dp' → logprob: -1.485149621963501
    3. 'result' → logprob: -3.985149621963501
    4. 'sum' → logprob: -3.985149621963501
    5. 'K' → logprob: -4.73514986038208
    6. 'print' → logprob: -4.98514986038208
    7. 'le' → logprob: -5.36014986038208
    8. ' flag' → logprob: -5.61014986038208
    9. '   ' → logprob: -5.86014986038208
    10. 'k' → logprob: -6.11014986038208

Token 857: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7733086943626404
    2. '0' → logprob: -2.398308753967285
    3. 'for' → logprob: -2.398308753967285
    4. 'sum' → logprob: -2.523308753967285
    5. 'flag' → logprob: -2.898308753967285
    6. 'nombre' → logprob: -3.023308753967285
    7. 'N' → logprob: -3.398308753967285
    8. 'result' → logprob: -3.398308753967285
    9. 'plus' → logprob: -4.023308753967285
    10. 'K' → logprob: -4.398308753967285

Token 858: ' construit' (ID: 119882)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5678821802139282
    2. ' =' → logprob: -2.0678820610046387
    3. 'plus' → logprob: -2.0678820610046387
    4. 'est' → logprob: -2.5678820610046387
    5. 'final' → logprob: -2.5678820610046387
    6. '<=' → logprob: -3.1928820610046387
    7. 'dp' → logprob: -3.1928820610046387
    8. 's' → logprob: -3.4428820610046387
    9. 'total' → logprob: -3.5678820610046387
    10. 'd' → logprob: -3.5678820610046387

Token 859: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.22581730782985687
    2. ' est' → logprob: -1.725817322731018
    3. '[' → logprob: -4.6008172035217285
    4. 's' → logprob: -5.9758172035217285
    5. 'a' → logprob: -6.2258172035217285
    6. 'avec' → logprob: -6.4758172035217285
    7. 'd' → logprob: -6.6008172035217285
    8. '#' → logprob: -7.2258172035217285
    9. ' is' → logprob: -7.2258172035217285
    10. '=' → logprob: -7.2258172035217285

Token 860: ' exactement' (ID: 108701)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.33079153299331665
    2. 'strict' → logprob: -1.5807914733886719
    3. 'est' → logprob: -3.830791473388672
    4. '[' → logprob: -3.830791473388672
    5. ' plus' → logprob: -3.955791473388672
    6. 'exact' → logprob: -5.580791473388672
    7. 'moins' → logprob: -5.830791473388672
    8. 'égal' → logprob: -5.955791473388672
    9. '<' → logprob: -7.205791473388672
    10. ' inférieur' → logprob: -7.455791473388672

Token 861: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.6003803014755249
    2. ' égal' → logprob: -0.9753803014755249
    3. '<=' → logprob: -3.3503804206848145
    4. 'equal' → logprob: -3.9753804206848145
    5. '=' → logprob: -4.7253804206848145
    6. '==' → logprob: -5.7253804206848145
    7. '0' → logprob: -6.4753804206848145
    8. ' equal' → logprob: -6.6003804206848145
    9. 'ég' → logprob: -6.8503804206848145
    10. 'à' → logprob: -7.1003804206848145

Token 862: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5865972638130188
    2. ' à' → logprob: -1.211597204208374
    3. '   ' → logprob: -2.961597204208374
    4. '=' → logprob: -3.211597204208374
    5. '(' → logprob: -4.086597442626953
    6. 'au' → logprob: -4.461597442626953
    7. ' =' → logprob: -4.961597442626953
    8. ' (' → logprob: -5.336597442626953
    9. ' au' → logprob: -5.461597442626953
    10. ' ' → logprob: -5.836597442626953

Token 863: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015347270295023918
    2. ' N' → logprob: -4.265347480773926
    3. '[N' → logprob: -7.890347480773926
    4. ' ' → logprob: -8.015347480773926
    5. '0' → logprob: -8.890347480773926
    6. '[' → logprob: -9.515347480773926
    7. 'input' → logprob: -10.265347480773926
    8. '   ' → logprob: -10.515347480773926
    9. '```' → logprob: -10.765347480773926
    10. 'n' → logprob: -10.765347480773926

Token 864: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0538172572851181
    2. ',' → logprob: -3.6788172721862793
    3. '
' → logprob: -4.303817272186279
    4. '+' → logprob: -5.053817272186279
    5. ' or' → logprob: -5.928817272186279
    6. ' +' → logprob: -7.178817272186279
    7. '    
' → logprob: -7.428817272186279
    8. '#' → logprob: -7.803817272186279
    9. '<|end|>' → logprob: -8.053816795349121
    10. ')' → logprob: -8.053816795349121

Token 865: 'dern' (ID: 19098)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8713766932487488
    2. 'dp' → logprob: -0.9963766932487488
    3. ')' → logprob: -2.9963767528533936
    4. ' dp' → logprob: -3.2463767528533936
    5. '   ' → logprob: -3.6213767528533936
    6. 'flag' → logprob: -3.8713767528533936
    7. 'j' → logprob: -3.9963767528533936
    8. ' or' → logprob: -4.3713765144348145
    9. ' flag' → logprob: -4.6213765144348145
    10. '#' → logprob: -4.9963765144348145

Token 866: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.2903953492641449
    2. 'ière' → logprob: -1.5403953790664673
    3. 'ières' → logprob: -3.4153952598571777
    4. '```' → logprob: -6.290395259857178
    5. 'iers' → logprob: -6.540395259857178
    6. 'ié' → logprob: -7.665395259857178
    7. 'i' → logprob: -8.165395736694336
    8. 'def' → logprob: -9.040395736694336
    9. 'iere' → logprob: -9.040395736694336
    10. 'e' → logprob: -9.540395736694336

Token 867: ' chiffre' (ID: 107420)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0023779042530804873
    2. ']' → logprob: -6.627377986907959
    3. ' ][' → logprob: -7.127377986907959
    4. '[' → logprob: -9.1273775100708
    5. '])' → logprob: -10.7523775100708
    6. '   ' → logprob: -10.8773775100708
    7. ')][' → logprob: -10.8773775100708
    8. 'dp' → logprob: -11.1273775100708
    9. ']][' → logprob: -11.8773775100708
    10. ')' → logprob: -11.8773775100708

Token 868: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6611067056655884
    2. '==' → logprob: -1.6611067056655884
    3. ' ==' → logprob: -1.6611067056655884
    4. ']' → logprob: -3.661106586456299
    5. ',' → logprob: -4.411106586456299
    6. '=' → logprob: -4.536106586456299
    7. ']==' → logprob: -4.911106586456299
    8. '[' → logprob: -5.036106586456299
    9. ')' → logprob: -5.286106586456299
    10. ' est' → logprob: -5.661106586456299

Token 869: ' flag' (ID: 9641)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3003884553909302
    2. 'flag' → logprob: -2.0503883361816406
    3. ' j' → logprob: -2.6753883361816406
    4. ' flag' → logprob: -3.6753883361816406
    5. '0' → logprob: -4.300388336181641
    6. '#' → logprob: -4.550388336181641
    7. ')' → logprob: -5.675388336181641
    8. ' #' → logprob: -5.925388336181641
    9. 'dp' → logprob: -6.425388336181641
    10. ' ' → logprob: -7.050388336181641

Token 870: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15497638285160065
    2. ' ==' → logprob: -2.4049763679504395
    3. '==' → logprob: -4.2799763679504395
    4. 's' → logprob: -4.6549763679504395
    5. ' =' → logprob: -4.7799763679504395
    6. '=' → logprob: -5.0299763679504395
    7. ']' → logprob: -5.1549763679504395
    8. '[' → logprob: -6.4049763679504395
    9. ')' → logprob: -6.5299763679504395
    10. '][' → logprob: -6.6549763679504395

Token 871: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8241508603096008
    2. ' ==' → logprob: -1.449150800704956
    3. ']' → logprob: -1.574150800704956
    4. ']==' → logprob: -2.199150800704956
    5. '=' → logprob: -5.949151039123535
    6. ')' → logprob: -5.949151039123535
    7. '])' → logprob: -6.824151039123535
    8. ' ]' → logprob: -8.199151039123535
    9. '```' → logprob: -8.199151039123535
    10. '[' → logprob: -8.199151039123535

Token 872: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.146429223008454e-05
    2. ' ' → logprob: -9.75006103515625
    3. '1' → logprob: -13.87506103515625
    4. '   ' → logprob: -14.25006103515625
    5. ')' → logprob: -14.75006103515625
    6. '[' → logprob: -14.75006103515625
    7. '=' → logprob: -15.68756103515625
    8. '```' → logprob: -16.37506103515625
    9. '۰' → logprob: -16.75006103515625
    10. '...' → logprob: -16.75006103515625

Token 873: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034534833393990993
    2. ' or' → logprob: -6.878453254699707
    3. ')+' → logprob: -6.878453254699707
    4. '   ' → logprob: -7.378453254699707
    5. ' )' → logprob: -8.378453254699707
    6. ']' → logprob: -8.878453254699707
    7. ',' → logprob: -9.253453254699707
    8. '),' → logprob: -9.628453254699707
    9. '+' → logprob: -9.628453254699707
    10. ')
' → logprob: -9.753453254699707

Token 874: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47087422013282776
    2. ']' → logprob: -1.4708741903305054
    3. '   ' → logprob: -1.9708741903305054
    4. '                   ' → logprob: -6.470874309539795
    5. '               ' → logprob: -6.470874309539795
    6. ')]' → logprob: -6.970874309539795
    7. '           ' → logprob: -7.720874309539795
    8. '```' → logprob: -8.220873832702637
    9. '[' → logprob: -8.470873832702637
    10. '.' → logprob: -8.720873832702637

Token 875: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0350867435336113
    2. '               ' → logprob: -4.410086631774902
    3. ')' → logprob: -5.160086631774902
    4. '[' → logprob: -5.410086631774902
    5. '       ' → logprob: -5.910086631774902
    6. '                   ' → logprob: -6.035086631774902
    7. '           ' → logprob: -6.660086631774902
    8. ',' → logprob: -6.660086631774902
    9. '
' → logprob: -6.910086631774902
    10. ']' → logprob: -7.160086631774902

Token 876: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007438759785145521
    2. '
' → logprob: -8.625743865966797
    3. '#' → logprob: -8.750743865966797
    4. 'total' → logprob: -9.125743865966797
    5. '       ' → logprob: -9.375743865966797
    6. ',' → logprob: -9.875743865966797
    7. 'result' → logprob: -10.875743865966797
    8. ' #' → logprob: -11.125743865966797
    9. 'return' → logprob: -11.250743865966797
    10. '  ' → logprob: -11.250743865966797

Token 877: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1783009022474289
    2. '+' → logprob: -2.1783008575439453
    3. '   ' → logprob: -4.053300857543945
    4. ' #' → logprob: -4.553300857543945
    5. '               ' → logprob: -4.678300857543945
    6. '-' → logprob: -4.928300857543945
    7. '                   ' → logprob: -5.678300857543945
    8. ' ' → logprob: -7.053300857543945
    9. ' +' → logprob: -8.178300857543945
    10. '                ' → logprob: -8.928300857543945

Token 878: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0012113067787140608
    2. 'u' → logprob: -7.626211166381836
    3. 'i' → logprob: -8.126211166381836
    4. '#' → logprob: -8.376211166381836
    5. 't' → logprob: -10.126211166381836
    6. '           ' → logprob: -11.251211166381836
    7. '   ' → logprob: -11.251211166381836
    8. 'nt' → logprob: -11.501211166381836
    9. 'is' → logprob: -11.626211166381836
    10. 'r' → logprob: -11.751211166381836

Token 879: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.41175124049186707
    2. 'le' → logprob: -1.6617512702941895
    3. 'flag' → logprob: -2.1617512702941895
    4. ' flag' → logprob: -3.6617512702941895
    5. '(flag' → logprob: -5.5367512702941895
    6. '   ' → logprob: -6.6617512702941895
    7. 'dp' → logprob: -7.9117512702941895
    8. '1' → logprob: -8.036750793457031
    9. 'the' → logprob: -8.661750793457031
    10. '(' → logprob: -8.661750793457031

Token 880: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.046696264296770096
    2. 'flag' → logprob: -4.421696186065674
    3. '[' → logprob: -4.546696186065674
    4. ' ' → logprob: -4.796696186065674
    5. 'nombre' → logprob: -5.546696186065674
    6. 'dern' → logprob: -6.171696186065674
    7. ' code' → logprob: -6.796696186065674
    8. ' flag' → logprob: -6.796696186065674
    9. '`' → logprob: -7.171696186065674
    10. 'number' → logprob: -7.546696186065674

Token 881: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15172617137432098
    2. ' construit' → logprob: -2.651726245880127
    3. 'built' → logprob: -4.026726245880127
    4. 'constructed' → logprob: -4.151726245880127
    5. 'con' → logprob: -4.276726245880127
    6. 'plus' → logprob: -4.776726245880127
    7. 'flag' → logprob: -5.651726245880127
    8. ',' → logprob: -6.276726245880127
    9. ' [' → logprob: -6.651726245880127
    10. 'est' → logprob: -6.776726245880127

Token 882: ' strict' (ID: 12035)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6109157204627991
    2. '[' → logprob: -1.4859156608581543
    3. 'plus' → logprob: -2.2359156608581543
    4. 'strict' → logprob: -2.4859156608581543
    5. ' ' → logprob: -3.8609156608581543
    6. ' plus' → logprob: -4.485915660858154
    7. ' [' → logprob: -6.110915660858154
    8. ' strict' → logprob: -7.485915660858154
    9. 'exact' → logprob: -7.485915660858154
    10. '+' → logprob: -7.735915660858154

Token 883: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.05528787150979042
    2. 'ly' → logprob: -2.9302878379821777
    3. 'ment' → logprob: -8.555288314819336
    4. 'lement' → logprob: -9.680288314819336
    5. 'ément' → logprob: -10.055288314819336
    6. ' inférieur' → logprob: -10.305288314819336
    7. 'rement' → logprob: -11.055288314819336
    8. '1' → logprob: -11.305288314819336
    9. 'emment' → logprob: -11.430288314819336
    10. ' smaller' → logprob: -12.305288314819336

Token 884: ' inférieur' (ID: 191498)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.44584324955940247
    2. ' plus' → logprob: -1.57084321975708
    3. '1' → logprob: -2.44584321975708
    4. ' smaller' → logprob: -3.32084321975708
    5. ' inférieur' → logprob: -4.44584321975708
    6. '+' → logprob: -5.44584321975708
    7. 'sm' → logprob: -5.44584321975708
    8. '_plus' → logprob: -5.82084321975708
    9. 'moins' → logprob: -6.44584321975708
    10. ' moindre' → logprob: -6.82084321975708

Token 885: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35123464465141296
    2. '   ' → logprob: -1.9762346744537354
    3. '(' → logprob: -2.7262346744537354
    4. ' (' → logprob: -3.2262346744537354
    5. ' =' → logprob: -3.6012346744537354
    6. '=' → logprob: -4.226234436035156
    7. ',' → logprob: -5.726234436035156
    8. ':' → logprob: -6.226234436035156
    9. ')' → logprob: -6.601234436035156
    10. ']' → logprob: -7.101234436035156

Token 886: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2789486050605774
    2. 'N' → logprob: -1.9039485454559326
    3. ' ' → logprob: -2.5289485454559326
    4. ' N' → logprob: -4.403948783874512
    5. '0' → logprob: -6.028948783874512
    6. '=' → logprob: -10.778948783874512
    7. '   ' → logprob: -11.403948783874512
    8. ' =' → logprob: -12.278948783874512
    9. '  ' → logprob: -12.778948783874512
    10. 'n' → logprob: -12.903948783874512

Token 887: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49205830693244934
    2. '   ' → logprob: -1.617058277130127
    3. 'result' → logprob: -1.867058277130127
    4. '
' → logprob: -4.492058277130127
    5. ' return' → logprob: -4.992058277130127
    6. 'print' → logprob: -5.492058277130127
    7. 'total' → logprob: -5.742058277130127
    8. ')' → logprob: -6.117058277130127
    9. '```' → logprob: -6.367058277130127
    10. ']' → logprob: -6.367058277130127

Token 888: 'dern' (ID: 19098)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026220278814435005
    2. ' ' → logprob: -6.627622127532959
    3. 'flag' → logprob: -6.877622127532959
    4. ' flag' → logprob: -8.7526216506958
    5. '[' → logprob: -10.0026216506958
    6. ')' → logprob: -10.3776216506958
    7. ',' → logprob: -11.8776216506958
    8. '0' → logprob: -12.3776216506958
    9. 'j' → logprob: -12.3776216506958
    10. ' ' → logprob: -13.2526216506958

Token 889: 'ier' (ID: 905)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9092825651168823
    2. 'er' → logprob: -1.5342825651168823
    3. '][' → logprob: -1.7842825651168823
    4. 't' → logprob: -3.159282684326172
    5. 'ier' → logprob: -3.284282684326172
    6. ')' → logprob: -3.409282684326172
    7. '=' → logprob: -4.034282684326172
    8. '[' → logprob: -4.159282684326172
    9. '   ' → logprob: -4.784282684326172
    10. '])' → logprob: -4.784282684326172

Token 890: ' chiffre' (ID: 107420)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9222890138626099
    2. 'j' → logprob: -1.4222890138626099
    3. 'flag' → logprob: -1.7972890138626099
    4. '[' → logprob: -2.5472888946533203
    5. ']' → logprob: -3.2972888946533203
    6. '_j' → logprob: -4.17228889465332
    7. ' flag' → logprob: -4.67228889465332
    8. ')' → logprob: -4.92228889465332
    9. '[j' → logprob: -5.17228889465332
    10. ',' → logprob: -5.17228889465332

Token 891: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3143729269504547
    2. ',' → logprob: -1.3143728971481323
    3. ' =' → logprob: -7.689373016357422
    4. '[' → logprob: -8.689373016357422
    5. '][' → logprob: -8.689373016357422
    6. '==' → logprob: -9.814373016357422
    7. ']' → logprob: -10.064373016357422
    8. ',j' → logprob: -10.189373016357422
    9. ' ,' → logprob: -10.439373016357422
    10. ',
' → logprob: -10.439373016357422

Token 892: ' flag' (ID: 9641)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0559111125767231
    2. ' ' → logprob: -2.930911064147949
    3. ' flag' → logprob: -7.305911064147949
    4. 'flag' → logprob: -8.43091106414795
    5. ' j' → logprob: -10.18091106414795
    6. ' ' → logprob: -10.18091106414795
    7. ')' → logprob: -10.93091106414795
    8. '[' → logprob: -11.18091106414795
    9. 'j' → logprob: -11.30591106414795
    10. ' [' → logprob: -12.68091106414795

Token 893: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002338144404347986
    2. '=' → logprob: -8.62523365020752
    3. ' =' → logprob: -11.25023365020752
    4. '[' → logprob: -11.50023365020752
    5. ']' → logprob: -12.00023365020752
    6. ' ' → logprob: -12.12523365020752
    7. '==' → logprob: -12.62523365020752
    8. ' ' → logprob: -12.62523365020752
    9. ')' → logprob: -12.75023365020752
    10. '1' → logprob: -13.50023365020752

Token 894: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.36574100604048e-06
    2. ' =' → logprob: -12.750004768371582
    3. '=True' → logprob: -14.125004768371582
    4. '==' → logprob: -15.125004768371582
    5. '=
' → logprob: -15.875004768371582
    6. '='' → logprob: -17.375003814697266
    7. '=

' → logprob: -17.625003814697266
    8. 's' → logprob: -18.250003814697266
    9. '=#' → logprob: -18.375003814697266
    10. '```' → logprob: -18.750003814697266

Token 895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -14.25001049041748
    4. '   ' → logprob: -18.625011444091797
    5. '```' → logprob: -18.875011444091797
    6. '[' → logprob: -19.062511444091797
    7. ')' → logprob: -19.562511444091797
    8. '`' → logprob: -19.687511444091797
    9. '<|end|>' → logprob: -19.750011444091797
    10. '...' → logprob: -19.750011444091797

Token 896: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35533419251441956
    2. ']' → logprob: -1.2303341627120972
    3. ']
' → logprob: -5.105334281921387
    4. ')' → logprob: -8.730334281921387
    5. 'def' → logprob: -9.230334281921387
    6. 'return' → logprob: -9.355334281921387
    7. ' ]' → logprob: -9.605334281921387
    8. '       ' → logprob: -9.605334281921387
    9. '                   ' → logprob: -9.855334281921387
    10. '])' → logprob: -10.230334281921387

Token 897: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2527473270893097
    2. ')' → logprob: -1.5027472972869873
    3. 'return' → logprob: -8.252747535705566
    4. ')
' → logprob: -8.627747535705566
    5. ']' → logprob: -8.627747535705566
    6. ' return' → logprob: -10.127747535705566
    7. 'def' → logprob: -10.502747535705566
    8. '```' → logprob: -10.627747535705566
    9. ' )' → logprob: -10.877747535705566
    10. ')return' → logprob: -11.127747535705566

Token 898: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6846864223480225
    2. '   ' → logprob: -0.8096864223480225
    3. 'result' → logprob: -3.1846864223480225
    4. ' return' → logprob: -5.059686660766602
    5. 'total' → logprob: -6.684686660766602
    6. '
' → logprob: -7.559686660766602
    7. 'answer' → logprob: -8.434686660766602
    8. 'ret' → logprob: -8.559686660766602
    9. '    
' → logprob: -8.809686660766602
    10. ' result' → logprob: -8.809686660766602

Token 899: ' On' (ID: 2160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26986831426620483
    2. '   ' → logprob: -1.5198683738708496
    3. 'return' → logprob: -4.26986837387085
    4. ')
' → logprob: -5.89486837387085
    5. ' return' → logprob: -7.64486837387085
    6. ']' → logprob: -8.019867897033691
    7. ')return' → logprob: -9.144867897033691
    8. 'def' → logprob: -10.769867897033691
    9. '	return' → logprob: -11.269867897033691
    10. '])' → logprob: -11.394867897033691

Token 900: ' addition' (ID: 5856)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.77027827501297
    2. 'return' → logprob: -0.77027827501297
    3. 'result' → logprob: -3.645278215408325
    4. ' =' → logprob: -3.645278215408325
    5. 'total' → logprob: -5.145278453826904
    6. 'print' → logprob: -5.395278453826904
    7. ' return' → logprob: -5.520278453826904
    8. '#' → logprob: -6.020278453826904
    9. 'rés' → logprob: -7.145278453826904
    10. ']' → logprob: -7.395278453826904

Token 901: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.21659256517887115
    2. '=' → logprob: -1.96659255027771
    3. '+=' → logprob: -3.84159255027771
    4. 'e' → logprob: -4.091592788696289
    5. '(' → logprob: -5.216592788696289
    6. 'n' → logprob: -5.716592788696289
    7. 'ner' → logprob: -5.841592788696289
    8. ' +=' → logprob: -7.216592788696289
    9. 'né' → logprob: -7.341592788696289
    10. 'nne' → logprob: -7.341592788696289

Token 902: ' donc' (ID: 14206)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.30223214626312256
    2. 'dp' → logprob: -1.5522321462631226
    3. '(' → logprob: -3.302232265472412
    4. 'result' → logprob: -5.427232265472412
    5. 'return' → logprob: -5.677232265472412
    6. '(
' → logprob: -6.677232265472412
    7. ' dp' → logprob: -7.052232265472412
    8. 'sum' → logprob: -7.302232265472412
    9. '=' → logprob: -7.427232265472412
    10. '   ' → logprob: -7.802232265472412

Token 903: ' ces' (ID: 10532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23515763878822327
    2. 'sum' → logprob: -2.1101577281951904
    3. '(dp' → logprob: -2.4851577281951904
    4. ' dp' → logprob: -6.110157489776611
    5. '(' → logprob: -6.485157489776611
    6. '(sum' → logprob: -7.360157489776611
    7. '(
' → logprob: -8.11015796661377
    8. ' sum' → logprob: -8.23515796661377
    9. '   ' → logprob: -10.73515796661377
    10. '	dp' → logprob: -10.98515796661377

Token 904: ' deux' (ID: 10301)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05458737909793854
    2. ' dp' → logprob: -3.3045873641967773
    3. '[' → logprob: -4.429587364196777
    4. '(dp' → logprob: -6.304587364196777
    5. ']' → logprob: -6.804587364196777
    6. '[
' → logprob: -7.429587364196777
    7. 'sum' → logprob: -8.679587364196777
    8. '=' → logprob: -8.804587364196777
    9. 'return' → logprob: -8.804587364196777
    10. 'for' → logprob: -9.554587364196777

Token 905: ' états' (ID: 184259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05396883934736252
    2. '[
' → logprob: -3.553968906402588
    3. 'dp' → logprob: -4.553968906402588
    4. ']' → logprob: -5.553968906402588
    5. '[j' → logprob: -5.928968906402588
    6. '[n' → logprob: -6.928968906402588
    7. '[i' → logprob: -7.178968906402588
    8. '[len' → logprob: -7.178968906402588
    9. '[val' → logprob: -7.553968906402588
    10. '][' → logprob: -8.05396842956543

Token 906: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3558886647224426
    2. '   ' → logprob: -1.3558886051177979
    3. ' return' → logprob: -3.480888605117798
    4. 'result' → logprob: -5.605888843536377
    5. '[' → logprob: -5.855888843536377
    6. '
' → logprob: -6.980888843536377
    7. 'def' → logprob: -7.230888843536377
    8. 'print' → logprob: -7.480888843536377
    9. '    
' → logprob: -7.730888843536377
    10. ']' → logprob: -7.730888843536377

Token 907: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9519588351249695
    2. ' return' → logprob: -1.0769588947296143
    3. 'dp' → logprob: -1.7019588947296143
    4. ' dp' → logprob: -3.2019588947296143
    5. 'sum' → logprob: -3.8269588947296143
    6. ' range' → logprob: -4.951958656311035
    7. 'range' → logprob: -5.451958656311035
    8. ' sum' → logprob: -5.451958656311035
    9. '[' → logprob: -5.951958656311035
    10. ']' → logprob: -5.951958656311035

Token 908: ' dernière' (ID: 39497)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.034022312611341476
    2. ' return' → logprob: -3.784022331237793
    3. 'sum' → logprob: -5.159022331237793
    4. '+' → logprob: -6.784022331237793
    5. 'print' → logprob: -7.284022331237793
    6. 'end' → logprob: -7.534022331237793
    7. ']' → logprob: -7.659022331237793
    8. 'final' → logprob: -8.034022331237793
    9. '```' → logprob: -8.034022331237793
    10. 'output' → logprob: -8.159022331237793

Token 909: ' position' (ID: 4010)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010627415962517262
    2. '[' → logprob: -5.010627269744873
    3. '][' → logprob: -6.135627269744873
    4. '])' → logprob: -7.760627269744873
    5. 'ligne' → logprob: -7.760627269744873
    6. ')' → logprob: -8.385627746582031
    7. ' ligne' → logprob: -8.760627746582031
    8. '[n' → logprob: -8.885627746582031
    9. '[line' → logprob: -9.885627746582031
    10. ']
' → logprob: -10.510627746582031

Token 910: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3491135537624359
    2. '   ' → logprob: -1.5991135835647583
    3. ' return' → logprob: -2.7241134643554688
    4. 'result' → logprob: -3.8491134643554688
    5. ' =' → logprob: -6.474113464355469
    6. 'print' → logprob: -6.974113464355469
    7. '
' → logprob: -7.349113464355469
    8. '=' → logprob: -7.599113464355469
    9. 'total' → logprob: -7.599113464355469
    10. '[' → logprob: -8.099113464355469

Token 911: 'dp' (ID: 19037)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005729287513531744
    2. ' N' → logprob: -7.62557315826416
    3. '][' → logprob: -10.62557315826416
    4. 'n' → logprob: -11.12557315826416
    5. '[N' → logprob: -11.25057315826416
    6. '   ' → logprob: -11.87557315826416
    7. '-' → logprob: -11.87557315826416
    8. '-N' → logprob: -12.00057315826416
    9. ' -' → logprob: -12.37557315826416
    10. ')' → logprob: -12.62557315826416

Token 912: '[-' (ID: 17503)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.006797782611101866
    2. '][' → logprob: -5.756797790527344
    3. '[len' → logprob: -6.006797790527344
    4. '[' → logprob: -7.756797790527344
    5. '[n' → logprob: -8.006797790527344
    6. '[-' → logprob: -8.506797790527344
    7. ')[' → logprob: -9.506797790527344
    8. '```' → logprob: -10.256797790527344
    9. ' [' → logprob: -10.381797790527344
    10. 'len' → logprob: -11.756797790527344

Token 913: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001640876434976235
    2. 'len' → logprob: -8.750164031982422
    3. '```' → logprob: -13.375164031982422
    4. ' ' → logprob: -13.750164031982422
    5. '   ' → logprob: -14.250164031982422
    6. '][' → logprob: -14.500164031982422
    7. 'def' → logprob: -15.000164031982422
    8. '[' → logprob: -15.125164031982422
    9. ']' → logprob: -15.500164031982422
    10. '#' → logprob: -15.500164031982422

Token 914: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013095177710056305
    2. '][-' → logprob: -4.388095378875732
    3. ']' → logprob: -8.263094902038574
    4. '])' → logprob: -8.388094902038574
    5. '[' → logprob: -10.388094902038574
    6. ' ][' → logprob: -10.513094902038574
    7. '])[' → logprob: -11.638094902038574
    8. '[-' → logprob: -11.763094902038574
    9. ')][' → logprob: -12.263094902038574
    10. '][:' → logprob: -12.513094902038574

Token 915: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00201595202088356
    2. '][' → logprob: -6.502016067504883
    3. '1' → logprob: -7.627016067504883
    4. ']' → logprob: -11.002016067504883
    5. '-' → logprob: -12.877016067504883
    6. '])' → logprob: -13.502016067504883
    7. '])[' → logprob: -13.627016067504883
    8. ')][' → logprob: -13.877016067504883
    9. ']][' → logprob: -14.377016067504883
    10. ' ][' → logprob: -14.502016067504883

Token 916: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3546629548072815
    2. ']' → logprob: -1.9796628952026367
    3. '])' → logprob: -1.9796628952026367
    4. '])+' → logprob: -3.9796628952026367
    5. ']+' → logprob: -5.729662895202637
    6. '][-' → logprob: -9.229662895202637
    7. ' ][' → logprob: -9.854662895202637
    8. '],' → logprob: -10.229662895202637
    9. '[' → logprob: -10.354662895202637
    10. ' ])' → logprob: -10.479662895202637

Token 917: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00017469677550252527
    2. ']' → logprob: -9.375174522399902
    3. 'k' → logprob: -9.750174522399902
    4. '0' → logprob: -11.125174522399902
    5. '-' → logprob: -12.000174522399902
    6. '])' → logprob: -12.375174522399902
    7. '][' → logprob: -13.000174522399902
    8. ' K' → logprob: -13.625174522399902
    9. '1' → logprob: -14.125174522399902
    10. '-K' → logprob: -14.375174522399902

Token 918: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25576135516166687
    2. '])' → logprob: -1.5057613849639893
    3. ']+' → logprob: -6.13076114654541
    4. '])+' → logprob: -6.50576114654541
    5. ']]' → logprob: -9.88076114654541
    6. '][' → logprob: -10.25576114654541
    7. '[' → logprob: -10.38076114654541
    8. '])
' → logprob: -10.88076114654541
    9. ']
' → logprob: -12.63076114654541
    10. ' ]' → logprob: -12.88076114654541

Token 919: ' et' (ID: 859)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03776935115456581
    2. '])' → logprob: -3.662769317626953
    3. ']+' → logprob: -4.537769317626953
    4. '])+' → logprob: -7.912769317626953
    5. ')' → logprob: -8.662769317626953
    6. ' ]' → logprob: -9.412769317626953
    7. '   ' → logprob: -10.412769317626953
    8. '[' → logprob: -10.662769317626953
    9. ']
' → logprob: -11.537769317626953
    10. '][' → logprob: -12.412769317626953

Token 920: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6931518912315369
    2. ' dp' → logprob: -0.6931518912315369
    3. '	dp' → logprob: -12.943151473999023
    4. '   ' → logprob: -13.318151473999023
    5. '(dp' → logprob: -15.318151473999023
    6. '           ' → logprob: -15.943151473999023
    7. '    ' → logprob: -16.068151473999023
    8. '       ' → logprob: -16.693151473999023
    9. '.dp' → logprob: -17.068151473999023
    10. '_dp' → logprob: -17.068151473999023

Token 921: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005744267720729113
    2. '][-' → logprob: -5.380744457244873
    3. '[' → logprob: -6.880744457244873
    4. '][' → logprob: -9.380743980407715
    5. '-' → logprob: -11.880743980407715
    6. '[len' → logprob: -13.505743980407715
    7. '```' → logprob: -13.630743980407715
    8. '   ' → logprob: -14.755743980407715
    9. ']' → logprob: -14.880743980407715
    10. ')[' → logprob: -14.880743980407715

Token 922: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019090480054728687
    2. '-' → logprob: -8.625190734863281
    3. 'len' → logprob: -11.625190734863281
    4. ' ' → logprob: -14.500190734863281
    5. '(-' → logprob: -14.875190734863281
    6. '[-' → logprob: -14.875190734863281
    7. ' -' → logprob: -15.875190734863281
    8. '`' → logprob: -16.00019073486328
    9. '```' → logprob: -16.06269073486328
    10. '][-' → logprob: -16.06269073486328

Token 923: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008996733813546598
    2. '[' → logprob: -7.125899791717529
    3. ' ][' → logprob: -9.875899314880371
    4. ']' → logprob: -10.875899314880371
    5. '][-' → logprob: -11.375899314880371
    6. '1' → logprob: -12.250899314880371
    7. '-' → logprob: -12.625899314880371
    8. '   ' → logprob: -13.750899314880371
    9. ']][' → logprob: -14.000899314880371
    10. ' ' → logprob: -14.500899314880371

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '0' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.000007629394531
    4. '   ' → logprob: -16.25000762939453
    5. '```' → logprob: -16.87500762939453
    6. '[' → logprob: -17.00000762939453
    7. '][' → logprob: -18.37500762939453
    8. '2' → logprob: -18.50000762939453
    9. '  ' → logprob: -18.62500762939453
    10. '(' → logprob: -19.00000762939453

Token 925: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015788905147928745
    2. ' ][' → logprob: -9.375158309936523
    3. '[' → logprob: -10.125158309936523
    4. ']' → logprob: -10.500158309936523
    5. ']][' → logprob: -14.125158309936523
    6. '][-' → logprob: -14.125158309936523
    7. '])' → logprob: -14.375158309936523
    8. ')][' → logprob: -14.375158309936523
    9. '   ' → logprob: -14.750158309936523
    10. ''][' → logprob: -15.375158309936523

Token 926: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.320199877838604e-07
    2. ' K' → logprob: -14.75
    3. '0' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. '   ' → logprob: -18.75
    6. '>K' → logprob: -19.125
    7. ']' → logprob: -19.5
    8. '	K' → logprob: -19.625
    9. '][' → logprob: -20.25
    10. '
' → logprob: -20.625

Token 927: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006654949975199997
    2. ']' → logprob: -7.625665664672852
    3. ')' → logprob: -9.875665664672852
    4. ']))' → logprob: -10.125665664672852
    5. '])]' → logprob: -10.250665664672852
    6. ' ])' → logprob: -11.125665664672852
    7. ']])' → logprob: -11.500665664672852
    8. ')])' → logprob: -11.750665664672852
    9. '])+' → logprob: -12.000665664672852
    10. '[' → logprob: -12.750665664672852

Token 928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3572041392326355
    2. ')' → logprob: -1.3572041988372803
    3. 'return' → logprob: -3.2322041988372803
    4. ' return' → logprob: -6.232203960418701
    5. ']' → logprob: -6.982203960418701
    6. ')
' → logprob: -8.23220443725586
    7. ')return' → logprob: -8.60720443725586
    8. '	return' → logprob: -9.73220443725586
    9. '
' → logprob: -10.23220443725586
    10. '    
' → logprob: -11.10720443725586

Token 929: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09445516765117645
    2. 'result' → logprob: -2.8444552421569824
    3. '   ' → logprob: -4.219455242156982
    4. ')' → logprob: -4.969455242156982
    5. ' return' → logprob: -4.969455242156982
    6. 'total' → logprob: -6.719455242156982
    7. 'print' (adapté à ' print') → logprob: -7.219455242156982
    8. 'ret' → logprob: -7.969455242156982
    9. 'answer' → logprob: -8.094454765319824
    10. 'res' → logprob: -8.469454765319824

Token 930: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0009175319573841989
    2. '(' → logprob: -7.125917434692383
    3. '(sum' → logprob: -9.250917434692383
    4. 'dp' → logprob: -11.750917434692383
    5. ' (' → logprob: -12.000917434692383
    6. '(
' → logprob: -13.000917434692383
    7. 'sum' → logprob: -15.000917434692383
    8. '((' → logprob: -15.375917434692383
    9. ' dp' → logprob: -15.375917434692383
    10. '	dp' → logprob: -17.250917434692383

Token 931: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.31652766466140747
    2. '[N' → logprob: -1.3165276050567627
    3. '[len' → logprob: -6.316527843475342
    4. '[' → logprob: -6.566527843475342
    5. '[n' → logprob: -10.191527366638184
    6. ')' → logprob: -12.816527366638184
    7. 'len' → logprob: -13.066527366638184
    8. ')[' → logprob: -13.816527366638184
    9. '][-' → logprob: -13.941527366638184
    10. '
' → logprob: -14.566527366638184

Token 932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.125
    4. '```' → logprob: -17.0
    5. '
' → logprob: -17.125
    6. '2' → logprob: -17.25
    7. '１' → logprob: -18.625
    8. '           ' → logprob: -18.75
    9. '-' → logprob: -18.875
    10. '``' → logprob: -19.0

Token 933: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031962506473064423
    2. '[' → logprob: -5.7531962394714355
    3. ']' → logprob: -11.253196716308594
    4. ')[' → logprob: -13.003196716308594
    5. ' ][' → logprob: -13.503196716308594
    6. '   ' → logprob: -14.628196716308594
    7. '0' → logprob: -14.753196716308594
    8. '])' → logprob: -15.378196716308594
    9. ' ' → logprob: -15.878196716308594
    10. ''][' → logprob: -16.253196716308594

Token 934: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. '1' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.000045776367188
    4. '[' → logprob: -16.500045776367188
    5. '   ' → logprob: -16.750045776367188
    6. '۰' → logprob: -16.750045776367188
    7. '][' → logprob: -17.625045776367188
    8. '01' → logprob: -17.875045776367188
    9. '０' → logprob: -18.000045776367188
    10. '٠' → logprob: -19.562545776367188

Token 935: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.534558552724775e-05
    2. ' ][' → logprob: -10.875025749206543
    3. ']' → logprob: -12.250025749206543
    4. '[' → logprob: -13.750025749206543
    5. ')][' → logprob: -15.375025749206543
    6. ']][' → logprob: -16.500024795532227
    7. '])' → logprob: -16.875024795532227
    8. '   ' → logprob: -16.875024795532227
    9. ']
' → logprob: -17.125024795532227
    10. '],[' → logprob: -17.625024795532227

Token 936: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.9361264946837764e-07
    2. ' K' → logprob: -16.25
    3. '   ' → logprob: -23.875
    4. '	K' → logprob: -23.875
    5. 'Ｋ' → logprob: -25.0
    6. '>K' → logprob: -26.0
    7. ' ' → logprob: -26.5
    8. '
' → logprob: -26.875
    9. 'k' → logprob: -27.0
    10. '<K' → logprob: -27.25

Token 937: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00713979359716177
    2. ']+' → logprob: -5.007139682769775
    3. '+' → logprob: -8.132140159606934
    4. '])' → logprob: -9.382140159606934
    5. ' ]' → logprob: -10.507140159606934
    6. ')' → logprob: -11.007140159606934
    7. '+]' → logprob: -13.757140159606934
    8. ' +' → logprob: -14.257140159606934
    9. '],' → logprob: -15.882140159606934
    10. ' ' → logprob: -16.007139205932617

Token 938: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005240275990217924
    2. ' +' → logprob: -5.255240440368652
    3. '+
' → logprob: -12.005240440368652
    4. ')' → logprob: -15.380240440368652
    5. '+)' → logprob: -16.630239486694336
    6. ')+' → logprob: -17.755239486694336
    7. '+

' → logprob: -17.755239486694336
    8. ' +
' → logprob: -17.880239486694336
    9. ' ' → logprob: -18.880239486694336
    10. '+d' → logprob: -19.005239486694336

Token 939: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00861456897109747
    2. ' dp' → logprob: -4.758614540100098
    3. '(dp' → logprob: -18.258615493774414
    4. '	dp' → logprob: -19.633615493774414
    5. '.dp' → logprob: -22.258615493774414
    6. '_dp' → logprob: -22.633615493774414
    7. 'df' → logprob: -25.133615493774414
    8. 'dpi' → logprob: -25.258615493774414
    9. 'd' → logprob: -26.008615493774414
    10. 'dq' → logprob: -26.633615493774414

Token 940: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.696889623621246e-06
    2. '-' → logprob: -13.12500286102295
    3. '][-' → logprob: -15.37500286102295
    4. '[' → logprob: -15.62500286102295
    5. '```' → logprob: -15.87500286102295
    6. ')' → logprob: -16.875001907348633
    7. ' [-' → logprob: -17.375001907348633
    8. '...' → logprob: -17.875001907348633
    9. '​' → logprob: -18.375001907348633
    10. '
' → logprob: -18.500001907348633

Token 941: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020461321400944144
    2. '-' → logprob: -8.500205039978027
    3. '[-' → logprob: -13.875205039978027
    4. '][-' → logprob: -17.50020408630371
    5. '(-' → logprob: -17.62520408630371
    6. '```' → logprob: -17.75020408630371
    7. ' -' → logprob: -18.25020408630371
    8. ' ' → logprob: -18.62520408630371
    9. '#' → logprob: -19.25020408630371
    10. 'len' → logprob: -19.50020408630371

Token 942: '][' (ID: 2696)
  Prédit: '][-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.07256825268268585
    2. '[-' → logprob: -3.32256817817688
    3. '][' → logprob: -3.44756817817688
    4. '-' → logprob: -6.197568416595459
    5. ']' → logprob: -9.6975679397583
    6. '1' → logprob: -11.4475679397583
    7. '[' → logprob: -12.5725679397583
    8. ' ][' → logprob: -13.4475679397583
    9. 's' → logprob: -14.6975679397583
    10. '#' → logprob: -14.8225679397583

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -13.250004768371582
    3. '-' → logprob: -13.625004768371582
    4. '[-' → logprob: -13.625004768371582
    5. ' ' → logprob: -15.000004768371582
    6. '```' → logprob: -16.625003814697266
    7. '][-' → logprob: -18.000003814697266
    8. '][' → logprob: -18.375003814697266
    9. ']' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.375003814697266

Token 944: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016611411410849541
    2. ' ][' → logprob: -9.125165939331055
    3. ']' → logprob: -10.750165939331055
    4. '[' → logprob: -10.875165939331055
    5. '[K' → logprob: -11.250165939331055
    6. '```' → logprob: -14.250165939331055
    7. '"][' → logprob: -14.625165939331055
    8. ')[' → logprob: -15.000165939331055
    9. 'K' → logprob: -15.125165939331055
    10. ''][' → logprob: -15.375165939331055

Token 945: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.9361264946837764e-07
    2. ' K' → logprob: -16.0
    3. '<|end|>' → logprob: -20.125
    4. '>K' → logprob: -21.0
    5. ')' → logprob: -21.125
    6. '0' → logprob: -21.25
    7. ']' → logprob: -21.75
    8. ' ' → logprob: -22.0
    9. '	K' → logprob: -22.375
    10. '   ' → logprob: -22.75

Token 946: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016682932619005442
    2. '])' → logprob: -8.750166893005371
    3. '))' → logprob: -12.250166893005371
    4. ' )' → logprob: -13.500166893005371
    5. '})' → logprob: -13.875166893005371
    6. '())' → logprob: -14.750166893005371
    7. '）' → logprob: -15.250166893005371
    8. ')])' → logprob: -15.625166893005371
    9. '`)' → logprob: -15.875166893005371
    10. ')
' → logprob: -16.375165939331055

Token 947: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001804415020160377
    2. '))' → logprob: -6.626804351806641
    3. '])' → logprob: -8.25180435180664
    4. ')))' → logprob: -9.25180435180664
    5. ')])' → logprob: -9.37680435180664
    6. ']' → logprob: -10.87680435180664
    7. ')]' → logprob: -12.62680435180664
    8. ']))' → logprob: -12.87680435180664
    9. ')}}' → logprob: -13.00180435180664
    10. ']])' → logprob: -13.12680435180664

Token 948: ' Point' (ID: 9971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0020742492051795e-05
    2. '))' → logprob: -11.000049591064453
    3. ']' → logprob: -11.250049591064453
    4. '])' → logprob: -11.625049591064453
    5. ')])' → logprob: -12.375049591064453
    6. ')]' → logprob: -13.000049591064453
    7. ' )' → logprob: -13.375049591064453
    8. ')))' → logprob: -13.500049591064453
    9. ')}}' → logprob: -15.250049591064453
    10. '(' → logprob: -15.500049591064453

Token 949: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026050140149891376
    2. ')])' → logprob: -9.500260353088379
    3. ')]' → logprob: -10.000260353088379
    4. '(' → logprob: -10.000260353088379
    5. '])' → logprob: -10.375260353088379
    6. ']' → logprob: -11.000260353088379
    7. '))' → logprob: -11.875260353088379
    8. ')}}' → logprob: -12.000260353088379
    9. ' )' → logprob: -12.250260353088379
    10. ')">' → logprob: -12.625260353088379

Token 950: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.1012001484632492
    2. 'entrée' → logprob: -2.3512001037597656
    3. '__' → logprob: -8.351200103759766
    4. '’entrée' → logprob: -8.476200103759766
    5. 'e' → logprob: -8.726200103759766
    6. 'entr' → logprob: -9.351200103759766
    7. 'entry' → logprob: -9.476200103759766
    8. ''ent' → logprob: -9.726200103759766
    9. 'é' → logprob: -9.851200103759766
    10. 'ent' → logprob: -10.601200103759766

Token 951: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09329336136579514
    2. ':' → logprob: -2.4682934284210205
    3. '()' → logprob: -6.468293190002441
    4. 'def' → logprob: -6.593293190002441
    5. '():
' → logprob: -7.843293190002441
    6. '):' → logprob: -7.843293190002441
    7. '(' → logprob: -8.468293190002441
    8. ':def' → logprob: -8.593293190002441
    9. 'if' → logprob: -9.093293190002441
    10. ')' → logprob: -10.218293190002441

Token 952: ' programme' (ID: 18190)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17209021747112274
    2. '__' → logprob: -2.4220902919769287
    3. 'program' → logprob: -3.7970902919769287
    4. ' script' → logprob: -4.04709005355835
    5. ' if' → logprob: -4.54709005355835
    6. 'script' → logprob: -5.04709005355835
    7. ' code' → logprob: -5.54709005355835
    8. ' program' → logprob: -6.04709005355835
    9. 'code' → logprob: -6.17209005355835
    10. 'main' → logprob: -6.92209005355835

Token 953: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.037453047931194305
    2. '
' → logprob: -3.4124529361724854
    3. ':' → logprob: -6.9124531745910645
    4. ' if' → logprob: -6.9124531745910645
    5. 'run' → logprob: -7.2874531745910645
    6. '<|end|>' → logprob: -8.287452697753906
    7. 'def' → logprob: -8.412452697753906
    8. '(run' → logprob: -8.787452697753906
    9. '

' → logprob: -9.037452697753906
    10. '```' → logprob: -9.287452697753906

Token 954: ' ex' (ID: 513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005342855118215084
    2. 'run' → logprob: -5.255342960357666
    3. ' if' → logprob: -9.505342483520508
    4. '
' → logprob: -10.630342483520508
    5. '```' → logprob: -11.880342483520508
    6. ' run' → logprob: -12.755342483520508
    7. '(run' → logprob: -15.005342483520508
    8. 'def' → logprob: -15.130342483520508
    9. '{
' → logprob: -17.630342483520508
    10. '``' → logprob: -17.755342483520508

Token 955: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.2278347909450531
    2. '=' → logprob: -3.227834701538086
    3. 'if' → logprob: -3.227834701538086
    4. ':' → logprob: -3.477834701538086
    5. 'def' → logprob: -3.477834701538086
    6. 'ecution' → logprob: -3.977834701538086
    7. '```' → logprob: -4.852834701538086
    8. 'ec' → logprob: -4.977834701538086
    9. 'ecutable' → logprob: -4.977834701538086
    10. 'e' → logprob: -5.352834701538086

Token 956: 'ute' (ID: 1331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.931380033493042
    2. 'éc' → logprob: -0.931380033493042
    3. 'ecute' → logprob: -2.431380033493042
    4. 'écution' → logprob: -3.056380033493042
    5. 'ecution' → logprob: -3.806380033493042
    6. 'écut' → logprob: -3.931380033493042
    7. 'é' → logprob: -4.431380271911621
    8. 'ec' → logprob: -4.681380271911621
    9. 'ecutable' → logprob: -5.431380271911621
    10. '=' → logprob: -5.431380271911621

Token 957: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03818849101662636
    2. '():' → logprob: -4.038188457489014
    3. ')' → logprob: -4.163188457489014
    4. 'run' → logprob: -6.663188457489014
    5. '(run' → logprob: -6.913188457489014
    6. 'def' → logprob: -7.163188457489014
    7. '())' → logprob: -7.413188457489014
    8. '(' → logprob: -8.413188934326172
    9. ' ()' → logprob: -8.663188934326172
    10. '()
' → logprob: -9.538188934326172

Token 958: ' fonction' (ID: 17610)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24374134838581085
    2. 'run' → logprob: -1.6187413930892944
    3. ' run' → logprob: -4.743741512298584
    4. 'def' → logprob: -5.493741512298584
    5. 'f' → logprob: -5.868741512298584
    6. ' if' → logprob: -6.618741512298584
    7. '__' → logprob: -7.868741512298584
    8. '_run' → logprob: -8.243741035461426
    9. '(run' → logprob: -9.368741035461426
    10. '`' → logprob: -9.743741035461426

Token 959: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.47626304626464844
    2. 'if' → logprob: -0.9762630462646484
    3. '(run' → logprob: -6.476263046264648
    4. '()
' → logprob: -7.851263046264648
    5. ' run' → logprob: -9.351263046264648
    6. '
' → logprob: -10.101263046264648
    7. '()' → logprob: -10.351263046264648
    8. '{
' → logprob: -10.601263046264648
    9. '```' → logprob: -10.851263046264648
    10. '(
' → logprob: -10.851263046264648

Token 960: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022654302301816642
    2. '())' → logprob: -9.125226974487305
    3. ' )' → logprob: -10.125226974487305
    4. '))' → logprob: -10.500226974487305
    5. '()' → logprob: -11.625226974487305
    6. '])' → logprob: -11.750226974487305
    7. '):' → logprob: -11.875226974487305
    8. ')}}' → logprob: -12.000226974487305
    9. ')])' → logprob: -12.250226974487305
    10. ')}' → logprob: -12.875226974487305

Token 961: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019448090461082757
    2. '):' → logprob: -9.000194549560547
    3. '   ' → logprob: -10.250194549560547
    4. ' )' → logprob: -11.500194549560547
    5. ')
' → logprob: -12.000194549560547
    6. 'def' → logprob: -12.000194549560547
    7. '))' → logprob: -12.125194549560547
    8. ':' → logprob: -13.500194549560547
    9. ' ' → logprob: -13.625194549560547
    10. '```' → logprob: -14.000194549560547

Token 962: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020723477005958557
    2. ' __' → logprob: -3.895723581314087
    3. 'True' → logprob: -8.895723342895508
    4. ' True' → logprob: -10.520723342895508
    5. 'name' → logprob: -11.270723342895508
    6. 'if' → logprob: -13.395723342895508
    7. '```' → logprob: -14.520723342895508
    8. '_name' → logprob: -14.770723342895508
    9. ' ' → logprob: -15.020723342895508
    10. ' name' → logprob: -15.270723342895508

Token 963: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011302133789286017
    2. ' __' → logprob: -7.376130104064941
    3. 'if' → logprob: -7.876130104064941
    4. '==' → logprob: -10.001130104064941
    5. 'name' → logprob: -10.626130104064941
    6. '_name' → logprob: -10.876130104064941
    7. '_' → logprob: -11.126130104064941
    8. ' ==' → logprob: -11.751130104064941
    9. '___' → logprob: -12.501130104064941
    10. '```' → logprob: -12.626130104064941

Token 964: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7083573341369629
    2. ' ==' → logprob: -1.083357334136963
    3. '==' → logprob: -1.833357334136963
    4. ' __' → logprob: -4.833357334136963
    5. ' is' → logprob: -7.583357334136963
    6. 'if' → logprob: -8.208356857299805
    7. '```' → logprob: -8.958356857299805
    8. '.__' → logprob: -9.083356857299805
    9. 'name' → logprob: -9.708356857299805
    10. 'is' → logprob: -10.458356857299805

Token 965: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029895232990384102
    2. ' __' → logprob: -3.529895305633545
    3. 'name' → logprob: -9.779894828796387
    4. ' run' → logprob: -10.904894828796387
    5. '_name' → logprob: -11.154894828796387
    6. '```' → logprob: -11.529894828796387
    7. '___' → logprob: -11.654894828796387
    8. '=' → logprob: -12.279894828796387
    9. 'if' → logprob: -12.654894828796387
    10. '_' → logprob: -12.654894828796387

Token 966: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008870773948729038
    2. ' __' → logprob: -4.758870601654053
    3. 'main' → logprob: -9.008871078491211
    4. ' main' → logprob: -9.633871078491211
    5. 'name' → logprob: -11.133871078491211
    6. '_' → logprob: -11.508871078491211
    7. '_main' → logprob: -11.508871078491211
    8. ' "__' → logprob: -12.008871078491211
    9. '"' → logprob: -12.133871078491211
    10. '_name' → logprob: -12.633871078491211

Token 967: ' principal' (ID: 10589)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.021950174123048782
    2. 'if' → logprob: -4.3969502449035645
    3. '```' → logprob: -5.0219502449035645
    4. ' __' → logprob: -6.6469502449035645
    5. '_name' → logprob: -7.5219502449035645
    6. ' if' → logprob: -8.146949768066406
    7. 'name' → logprob: -9.396949768066406
    8. '#!/' → logprob: -9.521949768066406
    9. '.py' → logprob: -9.646949768066406
    10. '
' → logprob: -9.646949768066406

Token 968: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4989481568336487
    2. '):' → logprob: -2.248948097229004
    3. 'if' → logprob: -2.373948097229004
    4. '):
' → logprob: -2.873948097229004
    5. ':
' → logprob: -2.873948097229004
    6. ')' → logprob: -3.373948097229004
    7. '():
' → logprob: -4.498948097229004
    8. '
' → logprob: -4.498948097229004
    9. '():' → logprob: -4.873948097229004
    10. '```' → logprob: -4.873948097229004

Token 969: 'if' (ID: 366)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25464797019958496
    2. ')' → logprob: -1.504647970199585
    3. '):
' → logprob: -6.629648208618164
    4. 'if' → logprob: -7.379648208618164
    5. ':' → logprob: -7.504648208618164
    6. 'def' → logprob: -9.504648208618164
    7. '   ' → logprob: -10.129648208618164
    8. '):

' → logprob: -10.254648208618164
    9. '```' → logprob: -10.629648208618164
    10. ' if' → logprob: -11.379648208618164

Token 970: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14273643493652344
    2. ' __' → logprob: -2.0177364349365234
    3. 'name' → logprob: -10.267736434936523
    4. ' ' → logprob: -11.642736434936523
    5. '___' → logprob: -11.767736434936523
    6. 'Name' → logprob: -12.642736434936523
    7. '_name' → logprob: -13.017736434936523
    8. '_' → logprob: -13.267736434936523
    9. ' ' → logprob: -14.892736434936523
    10. '﻿' → logprob: -15.142736434936523

Token 971: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0024344047997146845
    2. '==' → logprob: -6.127434253692627
    3. ' ==' → logprob: -8.377434730529785
    4. ' __' → logprob: -12.127434730529785
    5. '=="' → logprob: -12.627434730529785
    6. '__.__' → logprob: -13.002434730529785
    7. '_' → logprob: -13.252434730529785
    8. '___' → logprob: -13.627434730529785
    9. 'name' → logprob: -13.627434730529785
    10. '=='' → logprob: -14.252434730529785

Token 972: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.292907877039397e-06
    2. '==' → logprob: -13.50000286102295
    3. '___' → logprob: -13.75000286102295
    4. '__.__' → logprob: -14.75000286102295
    5. '____' → logprob: -15.87500286102295
    6. '__('' → logprob: -16.750003814697266
    7. ' ==' → logprob: -17.000003814697266
    8. '__
' → logprob: -17.125003814697266
    9. '__["' → logprob: -17.250003814697266
    10. ' __' → logprob: -17.250003814697266

Token 973: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02342715673148632
    2. '==' → logprob: -3.7734272480010986
    3. ' ==' → logprob: -9.14842700958252
    4. '_' → logprob: -10.02342700958252
    5. '=' → logprob: -11.27342700958252
    6. '=="' → logprob: -11.52342700958252
    7. '=='' → logprob: -12.64842700958252
    8. '===' → logprob: -13.27342700958252
    9. '___' → logprob: -13.89842700958252
    10. '__.__' → logprob: -14.52342700958252

Token 974: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006754682399332523
    2. ''' → logprob: -5.0067548751831055
    3. '__' → logprob: -10.506754875183105
    4. ' "__' → logprob: -11.381754875183105
    5. ' '__' → logprob: -15.506754875183105
    6. '"user' → logprob: -16.50675392150879
    7. '"name' → logprob: -16.50675392150879
    8. '("__' → logprob: -17.25675392150879
    9. 'main' → logprob: -17.88175392150879
    10. '('__' → logprob: -18.00675392150879

Token 975: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -17.0
    3. 'm' → logprob: -18.625
    4. 'ma' → logprob: -19.125
    5. 'mai' → logprob: -20.625
    6. ' main' → logprob: -21.25
    7. '_main' → logprob: -21.625
    8. 'maine' → logprob: -21.625
    9. 'mail' → logprob: -22.5
    10. '	main' → logprob: -23.125

Token 976: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06203076243400574
    2. '__' → logprob: -2.812030792236328
    3. '_' → logprob: -9.687030792236328
    4. '__":
' → logprob: -14.062030792236328
    5. '_'' → logprob: -15.562030792236328
    6. '___' → logprob: -16.687030792236328
    7. '__:' → logprob: -17.687030792236328
    8. '__('' → logprob: -18.562030792236328
    9. '__.' → logprob: -19.062030792236328
    10. '____' → logprob: -19.437030792236328

Token 977: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015756424516439438
    2. 'run' → logprob: -4.640756607055664
    3. ' run' → logprob: -5.140756607055664
    4. '	run' → logprob: -9.015756607055664
    5. '(run' → logprob: -12.890756607055664
    6. '   ' → logprob: -12.890756607055664
    7. '_run' → logprob: -14.515756607055664
    8. ':' → logprob: -14.640756607055664
    9. '  ' → logprob: -15.140756607055664
    10. '.run' → logprob: -15.140756607055664

Token 978: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -3.128163257315464e-07
    2. ' run' → logprob: -15.5
    3. '	run' → logprob: -22.75
    4. '(run' → logprob: -22.875
    5. '.run' → logprob: -23.875
    6. '   ' → logprob: -24.125
    7. '_run' → logprob: -24.125
    8. 'Run' → logprob: -25.25
    9. '-run' → logprob: -27.125
    10. '```' → logprob: -27.875

Token 979: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01364882942289114
    2. '))' → logprob: -5.013648986816406
    3. '])' → logprob: -5.513648986816406
    4. ')])' → logprob: -6.263648986816406
    5. ')))' → logprob: -7.263648986816406
    6. ']' → logprob: -9.013648986816406
    7. ']))' → logprob: -9.763648986816406
    8. ')]' → logprob: -10.263648986816406
    9. ']])' → logprob: -10.638648986816406
    10. '))))' → logprob: -11.638648986816406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 977
Tokens correctement prédits (1ère position, stricte): 238
Tokens correctement prédits (1ère position, avec adaptation): 242
Tokens correctement prédits (top 10): 497
Précision stricte (1ère position): 24.36%
Précision adaptée (1ère position): 24.77%
Précision (top 10): 50.87%
================================================================================
