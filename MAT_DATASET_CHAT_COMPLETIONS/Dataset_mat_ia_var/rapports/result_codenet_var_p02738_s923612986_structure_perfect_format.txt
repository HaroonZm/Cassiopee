================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import *
n, M = map(int, input().split())
l = n * 3 + 1
d = zeros((l, n * 5), int64)
d[0][0] = 1
for i in range(1, l):
    j, k = i - 1, i - 2
    d[i] = (d[i - 3] * k * j + roll(d[k], -1) * j + roll(d[j], 1)) % M
print(d[-1][:l].sum() % M)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.31723925471305847
    2. ' array' → logprob: -1.3172392845153809
    3. 'random' → logprob: -5.942239284515381
    4. ' random' → logprob: -6.942239284515381
    5. ' as' → logprob: -8.317238807678223
    6. '*' → logprob: -10.192238807678223
    7. ' ndarray' → logprob: -10.942238807678223
    8. 'as' → logprob: -11.067238807678223
    9. ' numpy' → logprob: -11.567238807678223
    10. 'empty' → logprob: -11.567238807678223

Token 4: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2299823760986328
    2. 'a' → logprob: -2.229982376098633
    3. '.' → logprob: -2.854982376098633
    4. 'import' → logprob: -4.229982376098633
    5. 'random' → logprob: -4.604982376098633
    6. 'array' → logprob: -5.604982376098633
    7. 'as' → logprob: -6.479982376098633
    8. '*' → logprob: -6.604982376098633
    9. 'ar' → logprob: -7.104982376098633
    10. '`' → logprob: -7.229982376098633

Token 5: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6737691164016724
    2. 'umpy' → logprob: -0.9237691164016724
    3. 'a' → logprob: -3.548768997192383
    4. 'um' → logprob: -3.923768997192383
    5. 'e' → logprob: -4.423768997192383
    6. 'u' → logprob: -4.798768997192383
    7. 'd' → logprob: -5.048768997192383
    8. 'ew' → logprob: -5.173768997192383
    9. 'ump' → logprob: -5.548768997192383
    10. 'o' → logprob: -6.048768997192383

Token 6: ' M' (ID: 391)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.43023425340652466
    2. ' m' → logprob: -1.1802341938018799
    3. 'p' → logprob: -3.93023419380188
    4. ' p' → logprob: -4.055234432220459
    5. ' =' → logprob: -6.305234432220459
    6. '=' → logprob: -7.180234432220459
    7. 'k' → logprob: -7.930234432220459
    8. 'd' → logprob: -7.930234432220459
    9. ' n' → logprob: -8.0552339553833
    10. 'n' → logprob: -8.0552339553833

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25470730662345886
    2. ' =' → logprob: -1.5047073364257812
    3. ',' → logprob: -6.004707336425781
    4. ' ' → logprob: -8.754707336425781
    5. ')' → logprob: -9.379707336425781
    6. '.' → logprob: -10.754707336425781
    7. ' ,' → logprob: -11.254707336425781
    8. ' =
' → logprob: -12.379707336425781
    9. '=

' → logprob: -12.379707336425781
    10. 'space' → logprob: -12.504707336425781

Token 8: ' map' (ID: 4014)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5315729379653931
    2. ' ' → logprob: -2.0315728187561035
    3. '100' → logprob: -2.1565728187561035
    4. '5' → logprob: -2.5315728187561035
    5. '50' → logprob: -4.0315728187561035
    6. '20' → logprob: -4.1565728187561035
    7. 'array' → logprob: -4.2815728187561035
    8. 'int' → logprob: -4.4065728187561035
    9. ' int' → logprob: -5.6565728187561035
    10. '3' → logprob: -6.1565728187561035

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22788502275943756
    2. '(' → logprob: -1.6028850078582764
    3. '(str' → logprob: -6.6028852462768555
    4. '(input' → logprob: -7.7278852462768555
    5. '(lambda' → logprob: -7.8528852462768555
    6. 'int' → logprob: -8.727885246276855
    7. '<int' → logprob: -10.352885246276855
    8. '[int' → logprob: -10.727885246276855
    9. '(eval' → logprob: -11.102885246276855
    10. '(
' → logprob: -11.727885246276855

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04997485131025314
    2. ')' → logprob: -3.6749749183654785
    3. 'input' → logprob: -4.2999749183654785
    4. '(' → logprob: -4.9249749183654785
    5. ',input' → logprob: -6.9249749183654785
    6. ',' → logprob: -7.9249749183654785
    7. ' input' → logprob: -8.54997444152832
    8. '```' → logprob: -8.54997444152832
    9. '`' → logprob: -8.79997444152832
    10. '('' → logprob: -8.92497444152832

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023351110517978668
    2. ' input' → logprob: -3.7733511924743652
    3. '(input' → logprob: -9.398350715637207
    4. 'raw' → logprob: -11.398350715637207
    5. ')' → logprob: -11.898350715637207
    6. ' ' → logprob: -13.523350715637207
    7. '=input' → logprob: -13.773350715637207
    8. ',input' → logprob: -14.648350715637207
    9. '	input' → logprob: -14.773350715637207
    10. ' raw' → logprob: -14.898350715637207

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6760551929473877
    2. '()' → logprob: -0.8010551929473877
    3. '().' → logprob: -3.9260551929473877
    4. ')' → logprob: -4.426054954528809
    5. '('' → logprob: -5.176054954528809
    6. '(' → logprob: -6.426054954528809
    7. '());' → logprob: -6.801054954528809
    8. '();)' → logprob: -7.676054954528809
    9. '()))' → logprob: -8.051054954528809
    10. '(()' → logprob: -8.301054954528809

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009250381262972951
    2. 'strip' → logprob: -7.000925064086914
    3. ' split' → logprob: -11.500925064086914
    4. 'rstrip' → logprob: -12.750925064086914
    5. 'read' → logprob: -15.125925064086914
    6. '(split' → logprob: -15.625925064086914
    7. ')' → logprob: -15.750925064086914
    8. 'spl' → logprob: -17.500925064086914
    9. ' strip' → logprob: -17.750925064086914
    10. ' ' → logprob: -18.125925064086914

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12827527523040771
    2. '))' → logprob: -2.1282753944396973
    3. '())' → logprob: -6.753275394439697
    4. '()' → logprob: -9.753274917602539
    5. '')' → logprob: -10.253274917602539
    6. '()))' → logprob: -10.753274917602539
    7. '`)' → logprob: -11.253274917602539
    8. '(' → logprob: -11.503274917602539
    9. ''))' → logprob: -11.628274917602539
    10. ')))' → logprob: -12.003274917602539

Token 15: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14172078669071198
    2. 'A' → logprob: -2.266720771789551
    3. 'x' → logprob: -4.891720771789551
    4. 'v' → logprob: -5.391720771789551
    5. 'matrix' → logprob: -5.391720771789551
    6. 'data' → logprob: -6.141720771789551
    7. 'array' → logprob: -6.141720771789551
    8. 'm' → logprob: -6.516720771789551
    9. 'arr' → logprob: -6.516720771789551
    10. 'd' → logprob: -7.641720771789551

Token 16: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.42488378286361694
    2. 'i' → logprob: -1.5498838424682617
    3. ' =' → logprob: -2.5498838424682617
    4. '=' → logprob: -4.299883842468262
    5. 'ine' → logprob: -4.674883842468262
    6. 'e' → logprob: -5.424883842468262
    7. '=[]' → logprob: -5.424883842468262
    8. 'is' → logprob: -5.424883842468262
    9. 'ines' → logprob: -5.799883842468262
    10. 'en' → logprob: -6.049883842468262

Token 17: ' n' (ID: 297)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8657083511352539
    2. '[]' → logprob: -1.365708351135254
    3. '[' → logprob: -1.615708351135254
    4. '[list' → logprob: -3.490708351135254
    5. ' []' → logprob: -3.865708351135254
    6. ' [' → logprob: -3.990708351135254
    7. '[int' → logprob: -4.115708351135254
    8. ' list' → logprob: -4.365708351135254
    9. 'range' → logprob: -4.490708351135254
    10. 'array' → logprob: -5.365708351135254

Token 18: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.246962547302246
    2. '-' → logprob: -1.496962547302246
    3. '>' → logprob: -2.371962547302246
    4. '+' → logprob: -2.371962547302246
    5. ')' → logprob: -2.496962547302246
    6. '<|end|>' → logprob: -2.996962547302246
    7. '*' → logprob: -3.371962547302246
    8. ',' → logprob: -3.746962547302246
    9. '**' → logprob: -3.746962547302246
    10. '[' → logprob: -4.121962547302246

Token 19: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.12346963584423065
    2. ' M' → logprob: -2.623469591140747
    3. 'ones' → logprob: -4.748469829559326
    4. 'n' → logprob: -5.248469829559326
    5. '[' → logprob: -5.373469829559326
    6. 'ar' → logprob: -5.498469829559326
    7. '1' → logprob: -6.123469829559326
    8. 'array' → logprob: -6.248469829559326
    9. ' ar' → logprob: -6.498469829559326
    10. 'l' → logprob: -6.623469829559326

Token 20: '3' (ID: 18)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.40042561292648315
    2. 'ones' → logprob: -1.900425672531128
    3. 'array' → logprob: -3.150425672531128
    4. 'ar' → logprob: -3.275425672531128
    5. 'n' → logprob: -3.775425672531128
    6. 'log' → logprob: -4.150425434112549
    7. 'eye' → logprob: -4.400425434112549
    8. 'identity' → logprob: -4.525425434112549
    9. 'random' → logprob: -5.275425434112549
    10. '[' → logprob: -5.400425434112549

Token 21: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1571587473154068
    2. '**' → logprob: -3.282158851623535
    3. '+' → logprob: -3.407158851623535
    4. '<|end|>' → logprob: -3.907158851623535
    5. ')' → logprob: -4.657158851623535
    6. ' ' → logprob: -4.782158851623535
    7. '```' → logprob: -5.032158851623535
    8. '.' → logprob: -5.407158851623535
    9. ',' → logprob: -5.532158851623535
    10. '
' → logprob: -5.782158851623535

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38476020097732544
    2. '2' → logprob: -2.1347601413726807
    3. ' ' → logprob: -2.2597601413726807
    4. '4' → logprob: -3.3847601413726807
    5. '3' → logprob: -3.8847601413726807
    6. '7' → logprob: -4.25976037979126
    7. '5' → logprob: -4.50976037979126
    8. '6' → logprob: -5.25976037979126
    9. '10' → logprob: -6.13476037979126
    10. '9' → logprob: -6.25976037979126

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45134422183036804
    2. '2' → logprob: -1.5763442516326904
    3. '3' → logprob: -3.0763442516326904
    4. 'M' → logprob: -3.0763442516326904
    5. '4' → logprob: -3.5763442516326904
    6. '6' → logprob: -4.451344013214111
    7. '5' → logprob: -4.826344013214111
    8. '7' → logprob: -5.076344013214111
    9. ' ' → logprob: -5.951344013214111
    10. ' M' → logprob: -6.201344013214111

Token 24: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4663376808166504
    2. ' ' → logprob: -1.4663376808166504
    3. ')' → logprob: -1.7163376808166504
    4. ',' → logprob: -2.5913376808166504
    5. '`' → logprob: -2.5913376808166504
    6. '*' → logprob: -3.2163376808166504
    7. ' 
' → logprob: -3.3413376808166504
    8. '
' → logprob: -4.46633768081665
    9. '```' → logprob: -4.46633768081665
    10. '\' → logprob: -4.59133768081665

Token 25: 'd' (ID: 67)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3243212699890137
    2. 'a' → logprob: -1.8243212699890137
    3. '\n' → logprob: -1.9493212699890137
    4. 'x' → logprob: -2.3243212699890137
    5. 's' → logprob: -3.3243212699890137
    6. '\' → logprob: -3.3243212699890137
    7. '[' → logprob: -3.5743212699890137
    8. 'd' → logprob: -4.074321269989014
    9. 'print' → logprob: -4.074321269989014
    10. ')' → logprob: -4.074321269989014

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5397734642028809
    2. '[' → logprob: -1.6647734642028809
    3. '=' → logprob: -2.789773464202881
    4. ' ' → logprob: -3.539773464202881
    5. 'array' → logprob: -3.539773464202881
    6. ',' → logprob: -4.039773464202881
    7. '.' → logprob: -4.289773464202881
    8. 'e' → logprob: -4.664773464202881
    9. 'ata' → logprob: -4.664773464202881
    10. 'i' → logprob: -5.164773464202881

Token 27: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.34238314628601074
    2. 'array' → logprob: -2.4673831462860107
    3. 'zeros' → logprob: -2.9673831462860107
    4. ' array' → logprob: -3.0923831462860107
    5. 'empty' → logprob: -3.4673831462860107
    6. ' empty' → logprob: -3.9673831462860107
    7. '{}' → logprob: -4.46738338470459
    8. ' ones' → logprob: -4.59238338470459
    9. '[' → logprob: -4.59238338470459
    10. ' dict' → logprob: -5.09238338470459

Token 28: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31403326988220215
    2. '((' → logprob: -1.5640332698822021
    3. '(l' → logprob: -2.814033269882202
    4. '([' → logprob: -9.314033508300781
    5. '(d' → logprob: -9.939033508300781
    6. '(shape' → logprob: -10.564033508300781
    7. '(n' → logprob: -10.689033508300781
    8. ' (' → logprob: -10.689033508300781
    9. '(
' → logprob: -12.064033508300781
    10. '(int' → logprob: -12.189033508300781

Token 29: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006451270077377558
    2. 'M' → logprob: -5.63145112991333
    3. 'n' → logprob: -6.50645112991333
    4. '2' → logprob: -8.131451606750488
    5. '3' → logprob: -8.131451606750488
    6. '(l' → logprob: -8.256451606750488
    7. '(' → logprob: -8.756451606750488
    8. ',' → logprob: -9.006451606750488
    9. '(M' → logprob: -10.006451606750488
    10. ' l' → logprob: -10.006451606750488

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024728013668209314
    2. '))' → logprob: -6.377472877502441
    3. ')' → logprob: -8.252472877502441
    4. ',l' → logprob: -8.377472877502441
    5. '),' → logprob: -9.377472877502441
    6. ' ,' → logprob: -9.627472877502441
    7. ',d' → logprob: -9.752472877502441
    8. ',)' → logprob: -10.002472877502441
    9. ',),' → logprob: -11.502472877502441
    10. ',
' → logprob: -12.627472877502441

Token 31: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6201322674751282
    2. ' l' → logprob: -1.8701322078704834
    3. '3' → logprob: -2.1201322078704834
    4. ' ' → logprob: -2.9951322078704834
    5. ' M' → logprob: -2.9951322078704834
    6. 'M' → logprob: -3.3701322078704834
    7. '6' → logprob: -4.6201324462890625
    8. '4' → logprob: -4.9951324462890625
    9. ' n' → logprob: -4.9951324462890625
    10. 'n' → logprob: -5.1201324462890625

Token 32: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25615644454956055
    2. ',' → logprob: -2.1311564445495605
    3. '),' → logprob: -2.2561564445495605
    4. ' ,' → logprob: -7.3811564445495605
    5. ')' → logprob: -7.5061564445495605
    6. '+' → logprob: -8.131156921386719
    7. ' ))' → logprob: -8.131156921386719
    8. '*' → logprob: -8.256156921386719
    9. ')),' → logprob: -9.506156921386719
    10. ' ),' → logprob: -9.631156921386719

Token 33: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08798494189977646
    2. '2' → logprob: -3.712985038757324
    3. '4' → logprob: -4.212985038757324
    4. ' ' → logprob: -4.337985038757324
    5. '))' → logprob: -4.462985038757324
    6. '6' → logprob: -4.962985038757324
    7. 'l' → logprob: -5.712985038757324
    8. ',' → logprob: -5.837985038757324
    9. '*' → logprob: -6.087985038757324
    10. 'n' → logprob: -7.337985038757324

Token 34: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1306326985359192
    2. '2' → logprob: -2.3806326389312744
    3. '4' → logprob: -4.2556328773498535
    4. '6' → logprob: -5.3806328773498535
    5. 'l' → logprob: -5.6306328773498535
    6. '))' → logprob: -6.1306328773498535
    7. 'M' → logprob: -6.2556328773498535
    8. 'n' → logprob: -7.0056328773498535
    9. ' ' → logprob: -7.3806328773498535
    10. '5' → logprob: -7.6306328773498535

Token 35: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.052783094346523285
    2. '),' → logprob: -3.1777830123901367
    3. '+' → logprob: -5.052783012390137
    4. ')' → logprob: -6.677783012390137
    5. ' +' → logprob: -6.802783012390137
    6. ' ))' → logprob: -7.802783012390137
    7. ',' → logprob: -8.677783012390137
    8. ')),' → logprob: -9.052783012390137
    9. ')))' → logprob: -9.427783012390137
    10. ' ),' → logprob: -10.177783012390137

Token 36: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.31296586990356445
    2. 'float' → logprob: -2.1879658699035645
    3. ' dtype' → logprob: -2.5629658699035645
    4. 'dtype' → logprob: -3.4379658699035645
    5. ' int' → logprob: -4.0629658699035645
    6. 'int' → logprob: -4.1879658699035645
    7. ')' → logprob: -4.3129658699035645
    8. ' bool' → logprob: -7.8129658699035645
    9. 'bool' → logprob: -7.9379658699035645
    10. ' )' → logprob: -8.687965393066406

Token 37: '64' (ID: 2220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013435659930109978
    2. '))' → logprob: -6.626343727111816
    3. '),' → logprob: -12.126343727111816
    4. ' )' → logprob: -12.251343727111816
    5. ')))' → logprob: -13.126343727111816
    6. '`)' → logprob: -13.626343727111816
    7. ')`' → logprob: -13.876343727111816
    8. ',' → logprob: -14.126343727111816
    9. ')
' → logprob: -14.751343727111816
    10. '[' → logprob: -15.001343727111816

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01604774221777916
    2. '))' → logprob: -4.141047954559326
    3. '),' → logprob: -11.641047477722168
    4. ')))' → logprob: -13.266047477722168
    5. ' )' → logprob: -14.266047477722168
    6. ')
' → logprob: -14.641047477722168
    7. '`)' → logprob: -14.891047477722168
    8. ')`' → logprob: -15.141047477722168
    9. ',' → logprob: -15.766047477722168
    10. '')' → logprob: -15.891047477722168

Token 39: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5274004936218262
    2. ')' → logprob: -1.6524004936218262
    3. '[' → logprob: -1.6524004936218262
    4. '[
' → logprob: -5.152400493621826
    5. ' for' → logprob: -5.277400493621826
    6. '(' → logprob: -5.527400493621826
    7. 'd' → logprob: -5.777400493621826
    8. ' ' → logprob: -6.277400493621826
    9. ',' → logprob: -6.652400493621826
    10. '#' → logprob: -7.027400493621826

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013605899177491665
    2. '.' → logprob: -4.763606071472168
    3. ')' → logprob: -6.013606071472168
    4. '<|end|>' → logprob: -6.763606071472168
    5. 'd' → logprob: -8.013606071472168
    6. '[]' → logprob: -8.638606071472168
    7. '[d' → logprob: -8.888606071472168
    8. '[
' → logprob: -9.263606071472168
    9. '[:]' → logprob: -9.513606071472168
    10. ' ' → logprob: -9.638606071472168

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008424741216003895
    2. ' ' → logprob: -5.258424758911133
    3. ',' → logprob: -6.133424758911133
    4. '1' → logprob: -7.508424758911133
    5. '[' → logprob: -8.633424758911133
    6. ' ,' → logprob: -9.258424758911133
    7. '-' → logprob: -9.508424758911133
    8. 'l' → logprob: -11.008424758911133
    9. 'd' → logprob: -11.258424758911133
    10. '2' → logprob: -11.320924758911133

Token 42: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03037722222507
    2. '][' → logprob: -3.655377149581909
    3. ']' → logprob: -5.905377388000488
    4. ' ,' → logprob: -6.905377388000488
    5. '[' → logprob: -8.780377388000488
    6. ' ' → logprob: -9.905377388000488
    7. ' ][' → logprob: -10.030377388000488
    8. '][:' → logprob: -10.780377388000488
    9. ',[' → logprob: -11.155377388000488
    10. '0' → logprob: -11.655377388000488

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013219048269093037
    2. ':' → logprob: -4.763218879699707
    3. '-' → logprob: -6.888218879699707
    4. ' ' → logprob: -6.888218879699707
    5. ' :' → logprob: -7.138218879699707
    6. 'n' → logprob: -7.513218879699707
    7. ':]' → logprob: -8.763218879699707
    8. 'M' → logprob: -8.888218879699707
    9. 'l' → logprob: -8.888218879699707
    10. '1' → logprob: -8.888218879699707

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008897828869521618
    2. ']=' → logprob: -5.38389778137207
    3. ' ]' → logprob: -5.75889778137207
    4. ',' → logprob: -7.88389778137207
    5. ')' → logprob: -8.50889778137207
    6. '=' → logprob: -8.75889778137207
    7. ']+=' → logprob: -9.13389778137207
    8. '+' → logprob: -9.38389778137207
    9. ')]' → logprob: -9.50889778137207
    10. '[' → logprob: -10.88389778137207

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08949323743581772
    2. ' =' → logprob: -2.4644932746887207
    3. ' ' → logprob: -8.714492797851562
    4. '0' → logprob: -8.839492797851562
    5. '+' → logprob: -9.464492797851562
    6. ' +=' → logprob: -9.464492797851562
    7. '+=' → logprob: -9.964492797851562
    8. '1' → logprob: -11.714492797851562
    9. ',' → logprob: -11.839492797851562
    10. '[' → logprob: -12.589492797851562

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069991666823625565
    2. '0' → logprob: -5.0069990158081055
    3. ' ' → logprob: -9.256999015808105
    4. '-' → logprob: -9.381999015808105
    5. '100' → logprob: -10.381999015808105
    6. 'int' → logprob: -11.131999015808105
    7. '10' → logprob: -11.381999015808105
    8. 'd' → logprob: -11.631999015808105
    9. '2' → logprob: -11.631999015808105
    10. '3' → logprob: -11.756999015808105

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027612484991550446
    2. '0' → logprob: -6.252761363983154
    3. '-' → logprob: -7.377761363983154
    4. ' ' → logprob: -9.127760887145996
    5. 'int' → logprob: -10.377760887145996
    6. 'M' → logprob: -10.877760887145996
    7. 'd' → logprob: -11.252760887145996
    8. '100' → logprob: -11.877760887145996
    9. '10' → logprob: -12.252760887145996
    10. 'n' → logprob: -12.502760887145996

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0078024864196777
    2. 'd' → logprob: -1.2578024864196777
    3. '<|end|>' → logprob: -1.8828024864196777
    4. ' ' → logprob: -3.2578024864196777
    5. '+' → logprob: -3.5078024864196777
    6. '[' → logprob: -3.8828024864196777
    7. '#' → logprob: -3.8828024864196777
    8. '0' → logprob: -4.007802486419678
    9. '\n' → logprob: -4.007802486419678
    10. 'for' → logprob: -4.632802486419678

Token 49: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3517637550830841
    2. ' for' → logprob: -1.9767637252807617
    3. 'd' → logprob: -3.4767637252807617
    4. '.' → logprob: -3.4767637252807617
    5. '+' → logprob: -3.8517637252807617
    6. '\n' → logprob: -4.101763725280762
    7. ' ' → logprob: -5.226763725280762
    8. '' → logprob: -5.226763725280762
    9. ',' → logprob: -5.351763725280762
    10. '[' → logprob: -5.476763725280762

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22955256700515747
    2. ' ' → logprob: -1.6045525074005127
    3. 'i' → logprob: -6.354552745819092
    4. ' _' → logprob: -6.479552745819092
    5. '_' → logprob: -7.229552745819092
    6. ' ' → logprob: -9.854552268981934
    7. '  ' → logprob: -11.104552268981934
    8. ' j' → logprob: -11.104552268981934
    9. '_i' → logprob: -11.479552268981934
    10. ' (' → logprob: -12.479552268981934

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05916302278637886
    2. 'in' → logprob: -3.4341630935668945
    3. ' ' → logprob: -3.6841630935668945
    4. '  ' → logprob: -10.684163093566895
    5. ' i' → logprob: -11.059163093566895
    6. '+' → logprob: -11.809163093566895
    7. ',' → logprob: -12.309163093566895
    8. '	in' → logprob: -12.559163093566895
    9. 'range' → logprob: -12.809163093566895
    10. ' range' → logprob: -13.184163093566895

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04868229478597641
    2. 'range' → logprob: -3.04868221282959
    3. ' ' → logprob: -9.54868221282959
    4. ' xrange' → logprob: -11.17368221282959
    5. '	range' → logprob: -12.54868221282959
    6. '  ' → logprob: -13.67368221282959
    7. ' in' → logprob: -14.04868221282959
    8. '(range' → logprob: -14.17368221282959
    9. ')' → logprob: -14.67368221282959
    10. ' ' → logprob: -14.92368221282959

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018218660727143288
    2. '(n' → logprob: -4.018218517303467
    3. ' (' → logprob: -10.143218994140625
    4. '(l' → logprob: -10.518218994140625
    5. '(i' → logprob: -14.018218994140625
    6. '(
' → logprob: -14.768218994140625
    7. '1' → logprob: -14.893218994140625
    8. '(s' → logprob: -15.518218994140625
    9. ' ' → logprob: -15.768218994140625
    10. '(len' → logprob: -15.768218994140625

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05127447471022606
    2. 'n' → logprob: -3.676274538040161
    3. 'l' → logprob: -3.801274538040161
    4. '0' → logprob: -6.426274299621582
    5. '2' → logprob: -8.051274299621582
    6. ' ' → logprob: -8.926274299621582
    7. 'd' → logprob: -9.551274299621582
    8. '3' → logprob: -9.801274299621582
    9. ' n' → logprob: -10.176274299621582
    10. ' l' → logprob: -10.676274299621582

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014049149118363857
    2. ' ,' → logprob: -4.514049053192139
    3. ',n' → logprob: -6.014049053192139
    4. ',l' → logprob: -7.514049053192139
    5. 'n' → logprob: -13.264049530029297
    6. ',len' → logprob: -13.889049530029297
    7. 'l' → logprob: -14.139049530029297
    8. ',
' → logprob: -14.389049530029297
    9. ' n' → logprob: -14.389049530029297
    10. ' l' → logprob: -14.514049530029297

Token 56: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13774754106998444
    2. ' l' → logprob: -2.1377475261688232
    3. 'n' → logprob: -4.887747764587402
    4. ' n' → logprob: -5.762747764587402
    5. 'M' → logprob: -11.387747764587402
    6. ' ' → logprob: -11.387747764587402
    7. '3' → logprob: -11.512747764587402
    8. ' M' → logprob: -11.512747764587402
    9. '	l' → logprob: -11.887747764587402
    10. '1' → logprob: -12.012747764587402

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0075540971010923386
    2. '):
' → logprob: -5.007554054260254
    3. ':' → logprob: -7.132554054260254
    4. ')' → logprob: -11.007554054260254
    5. '+' → logprob: -11.632554054260254
    6. ' ):' → logprob: -11.882554054260254
    7. '):
' → logprob: -12.757554054260254
    8. ',' → logprob: -13.132554054260254
    9. ']:' → logprob: -14.507554054260254
    10. '}:' → logprob: -14.632554054260254

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19899560511112213
    2. ' d' → logprob: -3.198995590209961
    3. '<|end|>' → logprob: -3.198995590209961
    4. ' for' → logprob: -3.323995590209961
    5. '    ' → logprob: -3.573995590209961
    6. 'd' → logprob: -3.948995590209961
    7. '   ' → logprob: -5.073995590209961
    8. '	for' → logprob: -6.198995590209961
    9. '	d' → logprob: -6.698995590209961
    10. '	' → logprob: -6.698995590209961

Token 59: ' j' (ID: 441)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26663848757743835
    2. 'for' → logprob: -1.6416385173797607
    3. ' ' → logprob: -4.391638278961182
    4. 'd' → logprob: -4.391638278961182
    5. ' d' → logprob: -4.641638278961182
    6. '   ' → logprob: -6.641638278961182
    7. 'j' (adapté à ' j') → logprob: -7.016638278961182
    8. ' j' → logprob: -7.391638278961182
    9. '	for' → logprob: -7.641638278961182
    10. 's' → logprob: -7.641638278961182

Token 60: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4889237880706787
    2. '=' → logprob: -1.2389237880706787
    3. 'n' → logprob: -3.1139237880706787
    4. ' in' → logprob: -3.2389237880706787
    5. 'nt' → logprob: -5.113924026489258
    6. 'range' → logprob: -6.113924026489258
    7. 'in' → logprob: -6.738924026489258
    8. 'for' → logprob: -7.488924026489258
    9. ' ' → logprob: -7.863924026489258
    10. 'or' → logprob: -7.863924026489258

Token 61: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6376227140426636
    2. ' k' → logprob: -0.7626227140426636
    3. 'x' → logprob: -7.512622833251953
    4. '_' → logprob: -7.512622833251953
    5. ' t' → logprob: -7.512622833251953
    6. ' x' → logprob: -7.762622833251953
    7. ' v' → logprob: -8.012622833251953
    8. 'v' → logprob: -8.137622833251953
    9. ' s' → logprob: -8.762622833251953
    10. 't' → logprob: -8.762622833251953

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3348398506641388
    2. '=' → logprob: -1.8348398208618164
    3. ',' → logprob: -2.0848398208618164
    4. ' ,' → logprob: -8.584839820861816
    5. ' ' → logprob: -8.959839820861816
    6. '   ' → logprob: -9.584839820861816
    7. '    ' → logprob: -9.959839820861816
    8. ',j' → logprob: -10.334839820861816
    9. '  ' → logprob: -10.834839820861816
    10. '=int' → logprob: -11.084839820861816

Token 63: ' i' (ID: 575)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08175015449523926
    2. '0' → logprob: -3.7067501544952393
    3. 'map' → logprob: -3.7067501544952393
    4. ' ' → logprob: -3.9567501544952393
    5. ' i' → logprob: -5.70674991607666
    6. ' d' → logprob: -5.83174991607666
    7. ' input' → logprob: -6.83174991607666
    8. ' j' → logprob: -7.70674991607666
    9. ' div' → logprob: -7.95674991607666
    10. 'd' → logprob: -7.95674991607666

Token 64: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2808353304862976
    2. ',' → logprob: -2.2808353900909424
    3. ' -' → logprob: -2.4058353900909424
    4. ' ' → logprob: -3.6558353900909424
    5. ' *' → logprob: -4.905835151672363
    6. '*' → logprob: -5.155835151672363
    7. '//' → logprob: -6.030835151672363
    8. ' //' → logprob: -6.030835151672363
    9. '%' → logprob: -6.155835151672363
    10. ' ,' → logprob: -6.405835151672363

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005381396040320396
    2. ' ' → logprob: -7.750538349151611
    3. '2' → logprob: -9.500537872314453
    4. '3' → logprob: -11.688037872314453
    5. 'j' → logprob: -11.688037872314453
    6. 'k' → logprob: -12.813037872314453
    7. '-' → logprob: -12.938037872314453
    8. '   ' → logprob: -12.938037872314453
    9. 'l' → logprob: -13.688037872314453
    10. '0' → logprob: -14.188037872314453

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015085970517247915
    2. '2' → logprob: -9.750150680541992
    3. ' ' → logprob: -9.875150680541992
    4. '3' → logprob: -10.375150680541992
    5. '   ' → logprob: -12.750150680541992
    6. '4' → logprob: -14.062650680541992
    7. 'l' → logprob: -14.062650680541992
    8. 'k' → logprob: -14.187650680541992
    9. 'j' → logprob: -14.375150680541992
    10. '(' → logprob: -14.500150680541992

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1818953901529312
    2. '   ' → logprob: -3.0568954944610596
    3. ')' → logprob: -3.5568954944610596
    4. '+' → logprob: -4.0568952560424805
    5. ']' → logprob: -4.1818952560424805
    6. 'd' → logprob: -4.4318952560424805
    7. '[' → logprob: -5.3068952560424805
    8. ' ' → logprob: -5.3068952560424805
    9. ' +' → logprob: -5.4318952560424805
    10. ' *' → logprob: -5.8068952560424805

Token 68: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09931754320859909
    2. 'i' → logprob: -3.3493175506591797
    3. ' ' → logprob: -3.5993175506591797
    4. 'j' → logprob: -4.97431755065918
    5. ' i' → logprob: -5.09931755065918
    6. '1' → logprob: -5.59931755065918
    7. '   ' → logprob: -5.59931755065918
    8. 'M' → logprob: -6.34931755065918
    9. 'n' → logprob: -6.59931755065918
    10. 'l' → logprob: -6.84931755065918

Token 69: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3236781358718872
    2. 'd' → logprob: -1.6986781358718872
    3. '   ' → logprob: -1.9486781358718872
    4. '[' → logprob: -2.0736780166625977
    5. '-' → logprob: -2.3236780166625977
    6. '    ' → logprob: -3.8236780166625977
    7. ')' → logprob: -3.8236780166625977
    8. '+' → logprob: -4.073678016662598
    9. 'for' → logprob: -4.198678016662598
    10. ']' → logprob: -4.448678016662598

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025821782648563385
    2. '2' → logprob: -4.150821685791016
    3. '3' → logprob: -4.775821685791016
    4. ' ' → logprob: -6.900821685791016
    5. 'k' → logprob: -9.150821685791016
    6. 'j' → logprob: -9.400821685791016
    7. '4' → logprob: -10.150821685791016
    8. '5' → logprob: -11.275821685791016
    9. ' k' → logprob: -11.775821685791016
    10. ' j' → logprob: -12.025821685791016

Token 71: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017441686242818832
    2. '3' → logprob: -4.642441749572754
    3. '2' → logprob: -4.892441749572754
    4. '4' → logprob: -9.892441749572754
    5. ' ' → logprob: -9.892441749572754
    6. '0' → logprob: -10.517441749572754
    7. '5' → logprob: -11.517441749572754
    8. '6' → logprob: -12.267441749572754
    9. 'k' → logprob: -13.142441749572754
    10. '   ' → logprob: -13.454941749572754

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0907807350158691
    2. '   ' → logprob: -1.5907807350158691
    3. ' 
' → logprob: -2.215780735015869
    4. '<|end|>' → logprob: -2.840780735015869
    5. '```' → logprob: -2.965780735015869
    6. '    ' → logprob: -3.215780735015869
    7. ' if' → logprob: -3.340780735015869
    8. ')' → logprob: -3.340780735015869
    9. '    
' → logprob: -4.090780735015869
    10. '     
' → logprob: -4.340780735015869

Token 74: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0001722574234009
    2. ' ' → logprob: -1.1251722574234009
    3. ' if' → logprob: -2.3751721382141113
    4. '+' → logprob: -2.8751721382141113
    5. '    ' → logprob: -3.1251721382141113
    6. ':' → logprob: -4.250172138214111
    7. ' 
' → logprob: -4.250172138214111
    8. ']' → logprob: -4.500172138214111
    9. 'if' → logprob: -4.750172138214111
    10. ')' → logprob: -4.750172138214111

Token 75: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1704058051109314
    2. '[j' → logprob: -2.170405864715576
    3. '[i' → logprob: -3.170405864715576
    4. '[:,' → logprob: -9.170405387878418
    5. ' [' → logprob: -9.920405387878418
    6. '[d' → logprob: -10.670405387878418
    7. '[n' → logprob: -10.670405387878418
    8. '[I' → logprob: -10.795405387878418
    9. '[...]' → logprob: -10.795405387878418
    10. ']' → logprob: -11.045405387878418

Token 76: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31599652767181396
    2. ']' → logprob: -1.440996527671814
    3. '-' → logprob: -3.9409966468811035
    4. '][:' → logprob: -4.6909966468811035
    5. '][]' → logprob: -6.6909966468811035
    6. ']=' → logprob: -6.8159966468811035
    7. ']+=' → logprob: -6.8159966468811035
    8. '[' → logprob: -7.5659966468811035
    9. '][-' → logprob: -7.9409966468811035
    10. ' ][' → logprob: -7.9409966468811035

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5331995487213135
    2. '[:]' → logprob: -1.7831995487213135
    3. '[' → logprob: -2.2831995487213135
    4. '+=' → logprob: -3.0331995487213135
    5. '|' → logprob: -3.5331995487213135
    6. '^' → logprob: -3.6581995487213135
    7. ' =' → logprob: -3.7831995487213135
    8. ' ^=' → logprob: -5.533199310302734
    9. '[j' → logprob: -5.908199310302734
    10. ' +=' → logprob: -5.908199310302734

Token 78: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2272280752658844
    2. 'd' → logprob: -1.602228045463562
    3. ' (' → logprob: -7.477228164672852
    4. ' ' → logprob: -7.852228164672852
    5. '(' → logprob: -8.102228164672852
    6. '(d' → logprob: -8.477228164672852
    7. '   ' → logprob: -9.977228164672852
    8. '2' → logprob: -10.664728164672852
    9. '	d' → logprob: -10.914728164672852
    10. ' add' → logprob: -10.977228164672852

Token 79: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5248110294342041
    2. ' d' → logprob: -0.8998110294342041
    3. ' ' → logprob: -7.899810791015625
    4. '2' → logprob: -8.524810791015625
    5. ')' → logprob: -8.899810791015625
    6. '(d' → logprob: -8.899810791015625
    7. '4' → logprob: -9.024810791015625
    8. ' (' → logprob: -9.024810791015625
    9. '+d' → logprob: -9.024810791015625
    10. '3' → logprob: -9.274810791015625

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6330791711807251
    2. '[j' → logprob: -0.7580791711807251
    3. '[' → logprob: -7.8830790519714355
    4. ')[' → logprob: -10.508079528808594
    5. 'j' → logprob: -11.383079528808594
    6. ')' → logprob: -11.383079528808594
    7. 'i' → logprob: -11.633079528808594
    8. '-' → logprob: -11.758079528808594
    9. ' [' → logprob: -12.008079528808594
    10. '[k' → logprob: -12.383079528808594

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.390606552362442
    2. ']' → logprob: -1.2656065225601196
    3. ']+' → logprob: -3.640606641769409
    4. ' -' → logprob: -4.51560640335083
    5. ']*' → logprob: -6.39060640335083
    6. '[j' → logprob: -7.01560640335083
    7. ' ]' → logprob: -7.89060640335083
    8. ']-' → logprob: -8.015606880187988
    9. '][' → logprob: -8.640606880187988
    10. 'j' → logprob: -8.765606880187988

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010931326076388359
    2. ' ' → logprob: -4.635931491851807
    3. '2' → logprob: -7.010931491851807
    4. '3' → logprob: -9.510931015014648
    5. ']' → logprob: -9.823431015014648
    6. '-' → logprob: -10.198431015014648
    7. 'j' → logprob: -10.823431015014648
    8. ' j' → logprob: -11.510931015014648
    9. '   ' → logprob: -11.635931015014648
    10. ')' → logprob: -11.698431015014648

Token 83: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003038916504010558
    2. '2' → logprob: -5.8780388832092285
    3. '3' → logprob: -8.503039360046387
    4. ' ' → logprob: -10.753039360046387
    5. '4' → logprob: -12.878039360046387
    6. '5' → logprob: -13.253039360046387
    7. 'j' → logprob: -14.003039360046387
    8. '0' → logprob: -14.128039360046387
    9. '```' → logprob: -14.565539360046387
    10. '   ' → logprob: -14.753039360046387

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021762622520327568
    2. ']+' → logprob: -4.146762847900391
    3. ']*' → logprob: -5.896762847900391
    4. '])' → logprob: -6.521762847900391
    5. ' ]' → logprob: -7.771762847900391
    6. ']<<' → logprob: -7.896762847900391
    7. '+' → logprob: -8.89676284790039
    8. '-' → logprob: -9.64676284790039
    9. '],' → logprob: -10.02176284790039
    10. ']-' → logprob: -10.02176284790039

Token 85: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6362677812576294
    2. ' +' → logprob: -0.7612677812576294
    3. ' *' → logprob: -6.76126766204834
    4. '*' → logprob: -6.76126766204834
    5. ')' → logprob: -7.51126766204834
    6. ' -' → logprob: -8.88626766204834
    7. ' +
' → logprob: -8.88626766204834
    8. '-' → logprob: -9.13626766204834
    9. ' ' → logprob: -9.63626766204834
    10. '>' → logprob: -10.13626766204834

Token 86: ' k' (ID: 372)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8276320099830627
    2. '2' → logprob: -1.577631950378418
    3. 'M' → logprob: -1.577631950378418
    4. ' ' → logprob: -3.077631950378418
    5. ' M' → logprob: -3.827631950378418
    6. '4' → logprob: -4.202631950378418
    7. 'j' → logprob: -4.577631950378418
    8. '6' → logprob: -4.702631950378418
    9. 'k' → logprob: -4.952631950378418
    10. '5' → logprob: -5.077631950378418

Token 87: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4410797655582428
    2. ' +' → logprob: -1.0660797357559204
    3. ' -' → logprob: -5.566079616546631
    4. ')' → logprob: -5.566079616546631
    5. '+d' → logprob: -6.441079616546631
    6. '-' → logprob: -6.566079616546631
    7. '+j' → logprob: -7.941079616546631
    8. '+k' → logprob: -8.066080093383789
    9. ' +
' → logprob: -8.441080093383789
    10. '+
' → logprob: -8.816080093383789

Token 88: ' j' (ID: 441)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.274137258529663
    2. 'M' → logprob: -1.774137258529663
    3. ' k' → logprob: -2.149137258529663
    4. 'k' → logprob: -2.524137258529663
    5. ' d' → logprob: -2.774137258529663
    6. ' (' → logprob: -3.024137258529663
    7. ' ' → logprob: -3.399137258529663
    8. ')' → logprob: -3.649137258529663
    9. 'd' → logprob: -3.649137258529663
    10. ' j' → logprob: -3.899137258529663

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43485185503959656
    2. ' +' → logprob: -1.559851884841919
    3. ' -' → logprob: -2.684851884841919
    4. '-' → logprob: -3.059851884841919
    5. ')' → logprob: -3.809851884841919
    6. '+d' → logprob: -6.68485164642334
    7. '+j' → logprob: -7.05985164642334
    8. '+k' → logprob: -7.05985164642334
    9. ' )' → logprob: -8.30985164642334
    10. '%' → logprob: -8.43485164642334

Token 90: ' roll' (ID: 8465)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08107641339302063
    2. 'd' → logprob: -2.5810763835906982
    3. ' M' → logprob: -7.331076622009277
    4. ' ' → logprob: -7.831076622009277
    5. ' (' → logprob: -8.081076622009277
    6. 'M' → logprob: -8.456076622009277
    7. '(d' → logprob: -9.206076622009277
    8. '(' → logprob: -9.581076622009277
    9. ' ' → logprob: -9.706076622009277
    10. '...' → logprob: -9.831076622009277

Token 91: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.016089389100670815
    2. '(' → logprob: -4.14108943939209
    3. '(
' → logprob: -10.64108943939209
    4. 'd' → logprob: -11.89108943939209
    5. ')' → logprob: -11.89108943939209
    6. ' (' → logprob: -12.01608943939209
    7. '(

' → logprob: -12.89108943939209
    8. 's' → logprob: -13.26608943939209
    9. ',d' → logprob: -13.76608943939209
    10. ' ' → logprob: -13.89108943939209

Token 92: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003564383659977466
    2. '[' → logprob: -8.500356674194336
    3. ',i' → logprob: -9.500356674194336
    4. ',' → logprob: -10.125356674194336
    5. '[
' → logprob: -11.500356674194336
    6. ')' → logprob: -11.875356674194336
    7. ' [' → logprob: -13.000356674194336
    8. '[I' → logprob: -13.000356674194336
    9. ',[' → logprob: -13.125356674194336
    10. '[n' → logprob: -13.125356674194336

Token 93: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.020372183993458748
    2. ']' → logprob: -4.02037239074707
    3. '-' → logprob: -7.14537239074707
    4. ' -' → logprob: -7.89537239074707
    5. ' ],' → logprob: -7.89537239074707
    6. ',' → logprob: -8.39537239074707
    7. '+' → logprob: -9.27037239074707
    8. '],[' → logprob: -9.64537239074707
    9. ' ' → logprob: -10.02037239074707
    10. ' +' → logprob: -10.52037239074707

Token 94: ' -' (ID: 533)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7268723845481873
    2. ' ' → logprob: -1.601872444152832
    3. '1' → logprob: -1.976872444152832
    4. 'j' → logprob: -2.351872444152832
    5. ' -' → logprob: -3.601872444152832
    6. ' i' → logprob: -3.601872444152832
    7. ' (' → logprob: -5.226872444152832
    8. '-' → logprob: -5.226872444152832
    9. 'i' → logprob: -5.476872444152832
    10. '-j' → logprob: -6.226872444152832

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006924465764313936
    2. 'j' → logprob: -6.131924629211426
    3. '2' → logprob: -6.256924629211426
    4. '3' → logprob: -7.506924629211426
    5. 'k' → logprob: -7.506924629211426
    6. '5' → logprob: -7.631924629211426
    7. 'n' → logprob: -7.756924629211426
    8. 'M' → logprob: -8.881924629211426
    9. '(' → logprob: -9.006924629211426
    10. 'i' → logprob: -9.131924629211426

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09610302746295929
    2. '))' → logprob: -3.0961029529571533
    3. ',' → logprob: -3.2211029529571533
    4. ' )' → logprob: -5.846103191375732
    5. ')*' → logprob: -6.471103191375732
    6. ' ,' → logprob: -7.221103191375732
    7. ',)' → logprob: -8.346102714538574
    8. ' ))' → logprob: -8.596102714538574
    9. ' ' → logprob: -8.596102714538574
    10. ')))' → logprob: -8.721102714538574

Token 97: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.27073895931243896
    2. '*' → logprob: -1.770738959312439
    3. ')' → logprob: -2.8957390785217285
    4. '*d' → logprob: -5.3957390785217285
    5. ' )' → logprob: -5.8957390785217285
    6. ' -' → logprob: -7.1457390785217285
    7. '*k' → logprob: -7.2707390785217285
    8. ')*' → logprob: -7.3957390785217285
    9. ' +' → logprob: -7.3957390785217285
    10. '+' → logprob: -7.7707390785217285

Token 98: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3340039253234863
    2. 'k' → logprob: -1.7090039253234863
    3. ' j' → logprob: -2.0840039253234863
    4. '(k' → logprob: -2.3340039253234863
    5. 'i' → logprob: -2.8340039253234863
    6. ' k' → logprob: -2.9590039253234863
    7. '(j' → logprob: -2.9590039253234863
    8. 'M' → logprob: -3.0840039253234863
    9. ' M' → logprob: -3.4590039253234863
    10. '(i' → logprob: -3.7090039253234863

Token 99: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8669415712356567
    2. '+' → logprob: -1.4919415712356567
    3. '-' → logprob: -1.4919415712356567
    4. ' +' → logprob: -2.491941452026367
    5. ')' → logprob: -3.116941452026367
    6. ' )' → logprob: -6.491941452026367
    7. '*' → logprob: -7.616941452026367
    8. ')-' → logprob: -8.866941452026367
    9. ' *' → logprob: -8.866941452026367
    10. ' ' → logprob: -9.616941452026367

Token 100: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.7179403305053711
    2. 'roll' → logprob: -1.092940330505371
    3. ' d' → logprob: -1.967940330505371
    4. 'd' → logprob: -3.342940330505371
    5. ' ' → logprob: -7.717940330505371
    6. ' k' → logprob: -8.592940330505371
    7. ' (' → logprob: -8.592940330505371
    8. 'k' → logprob: -8.905440330505371
    9. '   ' → logprob: -9.155440330505371
    10. ' j' → logprob: -9.217940330505371

Token 101: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00026336227892898023
    2. '(' → logprob: -8.250263214111328
    3. 'd' → logprob: -14.250263214111328
    4. '((' → logprob: -15.125263214111328
    5. ' (' → logprob: -15.250263214111328
    6. '(l' → logprob: -15.875263214111328
    7. '(s' → logprob: -16.125263214111328
    8. '(
' → logprob: -16.125263214111328
    9. '(D' → logprob: -16.250263214111328
    10. ')' → logprob: -16.875263214111328

Token 102: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.018663492053747177
    2. '[k' → logprob: -4.01866340637207
    3. '[i' → logprob: -7.64366340637207
    4. '[' → logprob: -10.64366340637207
    5. 'j' → logprob: -12.51866340637207
    6. '```' → logprob: -13.76866340637207
    7. '[
' → logprob: -13.89366340637207
    8. 'k' → logprob: -14.39366340637207
    9. '[n' → logprob: -14.51866340637207
    10. '(j' → logprob: -14.64366340637207

Token 103: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004788122605532408
    2. '-' → logprob: -6.379787921905518
    3. ' ,' → logprob: -6.504787921905518
    4. ',-' → logprob: -7.504787921905518
    5. ',j' → logprob: -7.754787921905518
    6. ',k' → logprob: -7.879787921905518
    7. ' -' → logprob: -10.004788398742676
    8. '+' → logprob: -10.254788398742676
    9. ')' → logprob: -10.379788398742676
    10. '],' → logprob: -10.629788398742676

Token 104: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07516977190971375
    2. '1' → logprob: -3.075169801712036
    3. ' -' → logprob: -3.825169801712036
    4. ' ' → logprob: -5.575169563293457
    5. '2' → logprob: -8.325169563293457
    6. '+' → logprob: -9.450169563293457
    7. '-k' → logprob: -9.450169563293457
    8. 'k' → logprob: -9.700169563293457
    9. ' k' → logprob: -10.325169563293457
    10. '0' → logprob: -10.950169563293457

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25962507724761963
    2. '-' → logprob: -1.5096250772476196
    3. '2' → logprob: -5.38462495803833
    4. ' ' → logprob: -6.13462495803833
    5. ' -' → logprob: -8.259625434875488
    6. '3' → logprob: -8.384625434875488
    7. '0' → logprob: -8.884625434875488
    8. '+' → logprob: -9.509625434875488
    9. '-k' → logprob: -9.884625434875488
    10. 'k' → logprob: -10.009625434875488

Token 106: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009211484342813492
    2. '))' → logprob: -4.884211540222168
    3. ')*' → logprob: -7.009211540222168
    4. '-' → logprob: -8.384211540222168
    5. ' )' → logprob: -8.634211540222168
    6. '   ' → logprob: -10.134211540222168
    7. ' ' → logprob: -10.634211540222168
    8. '*' → logprob: -10.634211540222168
    9. ' -' → logprob: -10.884211540222168
    10. '+' → logprob: -11.134211540222168

Token 107: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.23801015317440033
    2. ' %' → logprob: -2.6130101680755615
    3. '*' → logprob: -3.1130101680755615
    4. ')' → logprob: -3.2380101680755615
    5. '<|end|>' → logprob: -4.113009929656982
    6. ' *' → logprob: -4.488009929656982
    7. '[' → logprob: -5.363009929656982
    8. ' /' → logprob: -5.738009929656982
    9. ' ' → logprob: -5.738009929656982
    10. '/' → logprob: -5.988009929656982

Token 108: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0003005464968737215
    2. ' M' → logprob: -8.125300407409668
    3. ' ' → logprob: -12.875300407409668
    4. '   ' → logprob: -14.375300407409668
    5. '100' → logprob: -14.750300407409668
    6. 'm' → logprob: -15.125300407409668
    7. '10' → logprob: -16.125301361083984
    8. '(' → logprob: -16.250301361083984
    9. '(M' → logprob: -16.625301361083984
    10. '  ' → logprob: -16.875301361083984

Token 109: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5789398550987244
    2. '(d' → logprob: -0.8289398550987244
    3. '(*' → logprob: -6.078939914703369
    4. '(len' → logprob: -8.578939437866211
    5. '(sum' → logprob: -8.703939437866211
    6. '(
' → logprob: -9.203939437866211
    7. '()' → logprob: -9.703939437866211
    8. '(max' → logprob: -9.953939437866211
    9. '(np' → logprob: -10.203939437866211
    10. '('' → logprob: -10.828939437866211

Token 112: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07838906347751617
    2. ')' → logprob: -2.7033891677856445
    3. '.shape' → logprob: -5.7033891677856445
    4. '[' → logprob: -5.8283891677856445
    5. '[n' → logprob: -7.7033891677856445
    6. '[i' → logprob: -7.8283891677856445
    7. '[l' → logprob: -7.9533891677856445
    8. '))' → logprob: -8.578389167785645
    9. '[len' → logprob: -8.578389167785645
    10. '[:,' → logprob: -8.828389167785645

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.875011444091797
    3. '2' → logprob: -13.375011444091797
    4. '
' → logprob: -14.625011444091797
    5. '   ' → logprob: -15.062511444091797
    6. '3' → logprob: -15.375011444091797
    7. '

' → logprob: -15.437511444091797
    8. '  ' → logprob: -15.625011444091797
    9. '１' → logprob: -15.687511444091797
    10. '```' → logprob: -15.750011444091797

Token 114: '][:' (ID: 63357)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.021324170753359795
    2. ')' → logprob: -4.271324157714844
    3. ']' → logprob: -5.646324157714844
    4. '][' → logprob: -6.271324157714844
    5. '[' → logprob: -7.271324157714844
    6. ',' → logprob: -8.146324157714844
    7. '].' → logprob: -8.396324157714844
    8. '))' → logprob: -9.521324157714844
    9. '],' → logprob: -9.521324157714844
    10. ']))' → logprob: -9.646324157714844

Token 115: 'l' (ID: 75)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008365869522094727
    2. '1' → logprob: -6.008365631103516
    3. '-' → logprob: -7.008365631103516
    4. '5' → logprob: -7.133365631103516
    5. 'l' → logprob: -7.258365631103516
    6. '3' → logprob: -7.383365631103516
    7. '-n' → logprob: -7.508365631103516
    8. 'M' → logprob: -7.883365631103516
    9. ' n' → logprob: -8.008365631103516
    10. '])' → logprob: -8.133365631103516

Token 116: '].' (ID: 1651)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005766240647062659
    2. ')' → logprob: -7.750576496124268
    3. ' ])' → logprob: -9.500576972961426
    4. ']' → logprob: -10.125576972961426
    5. '])
' → logprob: -11.375576972961426
    6. '].' → logprob: -12.250576972961426
    7. ')])' → logprob: -12.500576972961426
    8. '],' → logprob: -13.125576972961426
    9. ']))' → logprob: -13.375576972961426
    10. ')]' → logprob: -13.375576972961426

Token 117: 'sum' (ID: 12298)
  Prédit: 'tolist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tolist' → logprob: -0.027253849431872368
    2. 'sum' → logprob: -3.6522538661956787
    3. 'astype' → logprob: -7.4022536277771
    4. 'to' → logprob: -9.277254104614258
    5. 'copy' → logprob: -9.277254104614258
    6. 't' → logprob: -9.527254104614258
    7. 'arg' → logprob: -10.277254104614258
    8. 'dot' → logprob: -11.527254104614258
    9. 'join' → logprob: -12.027254104614258
    10. 's' → logprob: -12.027254104614258

Token 118: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3136308789253235
    2. '()' → logprob: -1.3136308193206787
    3. ')' → logprob: -8.188631057739258
    4. '(' → logprob: -9.938631057739258
    5. ' ())' → logprob: -10.438631057739258
    6. '())
' → logprob: -12.188631057739258
    7. '()%' → logprob: -13.063631057739258
    8. '())

' → logprob: -14.063631057739258
    9. '();)' → logprob: -14.063631057739258
    10. '()`' → logprob: -14.063631057739258

Token 119: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.869639476761222e-05
    2. '))' → logprob: -11.000039100646973
    3. '`)' → logprob: -12.000039100646973
    4. ' )' → logprob: -12.125039100646973
    5. '+' → logprob: -12.625039100646973
    6. ')
' → logprob: -13.375039100646973
    7. ')`' → logprob: -13.500039100646973
    8. '**' → logprob: -14.375039100646973
    9. '```' → logprob: -14.625039100646973
    10. '*' → logprob: -14.750039100646973

Token 120: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00033558503491804004
    2. ' M' → logprob: -8.000335693359375
    3. '(M' → logprob: -16.500335693359375
    4. '(' → logprob: -17.500335693359375
    5. ' ' → logprob: -18.125335693359375
    6. ')' → logprob: -18.125335693359375
    7. '	M' → logprob: -19.500335693359375
    8. '   ' → logprob: -20.250335693359375
    9. '<M' → logprob: -20.250335693359375
    10. '  ' → logprob: -20.625335693359375

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -15.000001907348633
    4. '))' → logprob: -15.000001907348633
    5. ')`' → logprob: -16.750001907348633
    6. '`)' → logprob: -17.375001907348633
    7. '')' → logprob: -17.500001907348633
    8. '#' → logprob: -18.625001907348633
    9. ')

' → logprob: -18.750001907348633
    10. '),' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 31.93%
Précision adaptée (1ère position): 31.93%
Précision (top 10): 78.15%
================================================================================
