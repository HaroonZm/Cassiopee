================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

class Handler:
    pass

def magic(*args):
    print(args[2], args[0], args[1])

def main():
    X, Y, Z = map(int, [*next(((word for line in sys.stdin for word in line.split()),) for _ in range(3))])
    magic(X, Y, Z)

if __name__ == "__main__":
    foo = lambda: main()
    foo()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12304819375276566
    2. 'import' → logprob: -3.2480483055114746
    3. '\n' → logprob: -3.4980483055114746
    4. '' → logprob: -4.373048305511475
    5. '<|end|>' → logprob: -4.748048305511475
    6. 'print' → logprob: -4.998048305511475
    7. '#' → logprob: -5.123048305511475
    8. '\' → logprob: -6.498048305511475
    9. ',' → logprob: -6.498048305511475
    10. '
' → logprob: -6.623048305511475

Token 4: ' Handler' (ID: 36928)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030362652614712715
    2. ' My' → logprob: -3.780362606048584
    3. ' System' → logprob: -6.030362606048584
    4. ' Space' → logprob: -6.405362606048584
    5. ' A' → logprob: -7.405362606048584
    6. ' User' → logprob: -7.655362606048584
    7. ' C' → logprob: -8.155363082885742
    8. ' ' → logprob: -9.155363082885742
    9. ' Parser' → logprob: -9.155363082885742
    10. ' Basic' → logprob: -9.280363082885742

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009473071550019085
    2. '(' → logprob: -7.00094747543335
    3. '():' → logprob: -11.000946998596191
    4. '(:' → logprob: -11.500946998596191
    5. ':**' → logprob: -12.500946998596191
    6. ' :' → logprob: -13.500946998596191
    7. ':
' → logprob: -13.750946998596191
    8. '```' → logprob: -14.125946998596191
    9. '(":' → logprob: -14.625946998596191
    10. '):' → logprob: -14.875946998596191

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7586126327514648
    2. '(' → logprob: -1.1336126327514648
    3. '    ' → logprob: -2.508612632751465
    4. ':' → logprob: -3.008612632751465
    5. ' ' → logprob: -3.508612632751465
    6. '\' → logprob: -5.008612632751465
    7. ' (' → logprob: -5.133612632751465
    8. ' def' → logprob: -5.258612632751465
    9. '.' → logprob: -5.508612632751465
    10. '```' → logprob: -5.508612632751465

Token 7: ' pass' (ID: 1853)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3828398883342743
    2. 'def' → logprob: -1.2578399181365967
    3. '   ' → logprob: -3.7578399181365967
    4. '    ' → logprob: -4.632839679718018
    5. ' ' → logprob: -7.757839679718018
    6. 'd' → logprob: -9.632840156555176
    7. '    
' → logprob: -10.257840156555176
    8. '_' → logprob: -10.507840156555176
    9. 'de' → logprob: -10.507840156555176
    10. ' d' → logprob: -10.757840156555176

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07733546197414398
    2. '\n' → logprob: -3.4523353576660156
    3. '<|end|>' → logprob: -4.827335357666016
    4. '\' → logprob: -4.952335357666016
    5. '
' → logprob: -4.952335357666016
    6. '(' → logprob: -5.077335357666016
    7. ':' → logprob: -5.077335357666016
    8. '()' → logprob: -6.452335357666016
    9. '```' → logprob: -6.452335357666016
    10. '

' → logprob: -7.327335357666016

Token 9: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3147796392440796
    2. '
' → logprob: -2.189779758453369
    3. ':' → logprob: -3.814779758453369
    4. '_' → logprob: -4.064779758453369
    5. '\n' → logprob: -4.064779758453369
    6. '\' → logprob: -4.189779758453369
    7. '(' → logprob: -4.314779758453369
    8. '<|end|>' → logprob: -4.314779758453369
    9. '#' → logprob: -4.564779758453369
    10. '

' → logprob: -4.564779758453369

Token 10: ' magic' (ID: 19745)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.45726674795150757
    2. ' ' → logprob: -1.0822668075561523
    3. ' process' → logprob: -4.207266807556152
    4. ' space' → logprob: -5.582266807556152
    5. ' my' → logprob: -6.207266807556152
    6. ' handler' → logprob: -6.582266807556152
    7. ' hello' → logprob: -6.582266807556152
    8. ' handle' → logprob: -6.832266807556152
    9. '_' → logprob: -7.082266807556152
    10. ' foo' → logprob: -7.832266807556152

Token 11: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19347582757472992
    2. '_' → logprob: -1.8184758424758911
    3. ' (' → logprob: -4.943475723266602
    4. '_function' → logprob: -6.443475723266602
    5. '_handler' → logprob: -6.568475723266602
    6. '_method' → logprob: -6.568475723266602
    7. '_token' → logprob: -8.443475723266602
    8. ' _' → logprob: -8.443475723266602
    9. ' ' → logprob: -8.693475723266602
    10. '_space' → logprob: -8.818475723266602

Token 12: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.00029923528200015426
    2. ' args' → logprob: -8.500299453735352
    3. ')' → logprob: -10.125299453735352
    4. '_args' → logprob: -10.125299453735352
    5. 'argv' → logprob: -12.375299453735352
    6. 'arguments' → logprob: -12.500299453735352
    7. 'params' → logprob: -13.000299453735352
    8. 'a' → logprob: -14.125299453735352
    9. '$args' → logprob: -14.250299453735352
    10. '   ' → logprob: -14.625299453735352

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6367713212966919
    2. ',' → logprob: -0.7617713212966919
    3. ')' → logprob: -5.511771202087402
    4. ' ,' → logprob: -10.761771202087402
    5. ':' → logprob: -10.886771202087402
    6. '):
' → logprob: -10.886771202087402
    7. '),' → logprob: -11.261771202087402
    8. ',)' → logprob: -11.761771202087402
    9. '   ' → logprob: -12.011771202087402
    10. ' ):' → logprob: -12.511771202087402

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0257519483566284
    2. ':' → logprob: -1.6507519483566284
    3. ' ' → logprob: -1.7757519483566284
    4. '    ' → logprob: -1.9007519483566284
    5. ' :' → logprob: -3.150752067565918
    6. ' return' → logprob: -3.775752067565918
    7. ')' → logprob: -3.900752067565918
    8. ' )' → logprob: -4.525752067565918
    9. '(' → logprob: -5.400752067565918
    10. 'return' → logprob: -5.400752067565918

Token 15: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4035634696483612
    2. ' return' → logprob: -1.5285634994506836
    3. 'return' → logprob: -2.4035634994506836
    4. '    ' → logprob: -4.528563499450684
    5. ' if' → logprob: -5.653563499450684
    6. '#' → logprob: -6.153563499450684
    7. ' """' → logprob: -6.653563499450684
    8. ')' → logprob: -7.403563499450684
    9. ' None' → logprob: -7.403563499450684
    10. ' ' → logprob: -7.528563499450684

Token 16: '(args' (ID: 14885)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007874715374782681
    2. '('' → logprob: -7.750787258148193
    3. '()' → logprob: -8.625787734985352
    4. '("("' → logprob: -9.625787734985352
    5. '(**' → logprob: -10.125787734985352
    6. '("")' → logprob: -10.875787734985352
    7. '("' → logprob: -11.125787734985352
    8. '(*' → logprob: -11.375787734985352
    9. '(args' → logprob: -12.250787734985352
    10. '(
' → logprob: -12.500787734985352

Token 17: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.875000953674316
    3. ')
' → logprob: -16.125
    4. '   ' → logprob: -16.375
    5. ')`' → logprob: -16.5
    6. '))' → logprob: -16.625
    7. '[' → logprob: -16.875
    8. ' ' → logprob: -17.125
    9. '')' → logprob: -17.375
    10. '`)' → logprob: -17.5

Token 18: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.610702363715973e-06
    2. '-' → logprob: -12.250009536743164
    3. ' ' → logprob: -12.750009536743164
    4. '1' → logprob: -13.375009536743164
    5. ')' → logprob: -15.625009536743164
    6. '[' → logprob: -16.500009536743164
    7. ']' → logprob: -17.062509536743164
    8. '2' → logprob: -17.625009536743164
    9. ' -' → logprob: -17.937509536743164
    10. '   ' → logprob: -18.187509536743164

Token 19: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04366641491651535
    2. ']' → logprob: -3.418666362762451
    3. ')' → logprob: -4.793666362762451
    4. '],' → logprob: -6.918666362762451
    5. ' ])' → logprob: -7.918666362762451
    6. '[' → logprob: -8.66866683959961
    7. ')])' → logprob: -10.29366683959961
    8. ']))' → logprob: -10.91866683959961
    9. ' )' → logprob: -11.04366683959961
    10. '][' → logprob: -11.16866683959961

Token 20: ' args' (ID: 4966)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7907681465148926
    2. 'args' → logprob: -1.0407681465148926
    3. ' args' → logprob: -2.2907681465148926
    4. '")' → logprob: -3.5407681465148926
    5. '')' → logprob: -4.040768146514893
    6. '   ' → logprob: -4.290768146514893
    7. ' ' → logprob: -4.915768146514893
    8. ' )' → logprob: -5.165768146514893
    9. '  ' → logprob: -5.540768146514893
    10. ''' → logprob: -6.040768146514893

Token 21: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00411959970369935
    2. ')' → logprob: -5.504119396209717
    3. ']' → logprob: -11.004119873046875
    4. '[]' → logprob: -12.254119873046875
    5. '])' → logprob: -12.629119873046875
    6. ')[' → logprob: -12.754119873046875
    7. '[len' → logprob: -12.754119873046875
    8. '[])' → logprob: -12.879119873046875
    9. '[
' → logprob: -13.629119873046875
    10. '   ' → logprob: -13.754119873046875

Token 22: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8495460748672485
    2. '0' → logprob: -1.0995460748672485
    3. '3' → logprob: -1.8495460748672485
    4. '2' → logprob: -3.099545955657959
    5. '])' → logprob: -3.349545955657959
    6. ')])' → logprob: -7.599545955657959
    7. '-' → logprob: -8.349546432495117
    8. '4' → logprob: -8.349546432495117
    9. ']))' → logprob: -8.349546432495117
    10. ')' → logprob: -8.599546432495117

Token 23: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3926540017127991
    2. '])' → logprob: -1.1426539421081543
    3. ']' → logprob: -6.392653942108154
    4. ',' → logprob: -6.392653942108154
    5. ')])' → logprob: -6.642653942108154
    6. '[' → logprob: -8.142654418945312
    7. '],' → logprob: -8.517654418945312
    8. ' )' → logprob: -8.517654418945312
    9. '),' → logprob: -8.892654418945312
    10. ' ])' → logprob: -9.267654418945312

Token 24: ' args' (ID: 4966)
  Prédit: ' args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.4745783507823944
    2. 'args' → logprob: -0.9745783805847168
    3. ')' → logprob: -8.599577903747559
    4. ',args' → logprob: -8.974577903747559
    5. '(args' → logprob: -9.724577903747559
    6. '$args' → logprob: -10.474577903747559
    7. ' ' → logprob: -10.724577903747559
    8. '	args' → logprob: -11.349577903747559
    9. '  ' → logprob: -11.474577903747559
    10. '.args' → logprob: -11.724577903747559

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012436536140739918
    2. ']' → logprob: -4.637436389923096
    3. '])' → logprob: -6.387436389923096
    4. ')' → logprob: -7.012436389923096
    5. '],' → logprob: -10.762436866760254
    6. ',' → logprob: -11.137436866760254
    7. '][' → logprob: -11.387436866760254
    8. '   ' → logprob: -11.637436866760254
    9. '1' → logprob: -11.762436866760254
    10. ']])' → logprob: -12.387436866760254

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010068769566714764
    2. '2' → logprob: -4.635068893432617
    3. '3' → logprob: -8.510068893432617
    4. '-' → logprob: -10.135068893432617
    5. '0' → logprob: -10.385068893432617
    6. '])' → logprob: -10.635068893432617
    7. ' ' → logprob: -11.510068893432617
    8. ']' → logprob: -13.322568893432617
    9. '4' → logprob: -14.072568893432617
    10. '   ' → logprob: -14.385068893432617

Token 27: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ' )' → logprob: -11.375014305114746
    3. ',' → logprob: -14.625014305114746
    4. '))' → logprob: -14.750014305114746
    5. ')
' → logprob: -14.875014305114746
    6. ']' → logprob: -15.250014305114746
    7. ')])' → logprob: -15.250014305114746
    8. '）' → logprob: -16.00001335144043
    9. ')`' → logprob: -16.12501335144043
    10. '),' → logprob: -16.25001335144043

Token 28: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1332036554813385
    2. 'def' → logprob: -3.7582037448883057
    3. 'magic' → logprob: -3.7582037448883057
    4. '.' → logprob: -3.8832037448883057
    5. '()' → logprob: -4.008203506469727
    6. ')' → logprob: -4.258203506469727
    7. ':' → logprob: -5.258203506469727
    8. '(
' → logprob: -6.008203506469727
    9. '[' → logprob: -6.133203506469727
    10. '@' → logprob: -6.133203506469727

Token 29: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1200430691242218
    2. ' magic' → logprob: -2.2450430393218994
    3. ' handler' → logprob: -5.4950432777404785
    4. ' foo' → logprob: -6.9950432777404785
    5. ' test' → logprob: -7.8700432777404785
    6. ' my' → logprob: -8.24504280090332
    7. ' wrapper' → logprob: -8.62004280090332
    8. ' wrap' → logprob: -8.62004280090332
    9. ' example' → logprob: -8.87004280090332
    10. ' __' → logprob: -8.87004280090332

Token 30: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39215269684791565
    2. '():' → logprob: -1.1421526670455933
    3. '(:' → logprob: -5.392152786254883
    4. ':' → logprob: -7.892152786254883
    5. '()' → logprob: -8.767152786254883
    6. ' ():' → logprob: -9.892152786254883
    7. ' (' → logprob: -10.517152786254883
    8. '(**' → logprob: -10.642152786254883
    9. '(":' → logprob: -11.017152786254883
    10. '(*' → logprob: -11.767152786254883

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07620355486869812
    2. ' handler' → logprob: -3.5762035846710205
    3. ' h' → logprob: -3.8262035846710205
    4. '    ' → logprob: -4.451203346252441
    5. 'handler' → logprob: -5.701203346252441
    6. ' for' → logprob: -6.326203346252441
    7. ' obj' → logprob: -6.326203346252441
    8. 'obj' → logprob: -7.326203346252441
    9. ' import' → logprob: -7.951203346252441
    10. 'h' → logprob: -8.076203346252441

Token 32: ' X' (ID: 2127)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.38560032844543457
    2. 'h' → logprob: -2.3856003284454346
    3. ' handler' → logprob: -2.3856003284454346
    4. '   ' → logprob: -3.0106003284454346
    5. ' obj' → logprob: -3.3856003284454346
    6. 'handler' → logprob: -3.5106003284454346
    7. 'obj' → logprob: -4.1356000900268555
    8. ' instance' → logprob: -6.8856000900268555
    9. ' magic' → logprob: -7.0106000900268555
    10. 'args' → logprob: -7.6356000900268555

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004896077327430248
    2. '=' → logprob: -5.50489616394043
    3. '(' → logprob: -8.12989616394043
    4. '()' → logprob: -8.75489616394043
    5. ' ' → logprob: -9.87989616394043
    6. '   ' → logprob: -10.00489616394043
    7. ',' → logprob: -10.50489616394043
    8. '=sys' → logprob: -10.62989616394043
    9. '```' → logprob: -10.75489616394043
    10. '_handler' → logprob: -10.87989616394043

Token 34: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.3090881109237671
    2. ' Y' → logprob: -1.434088110923767
    3. 'y' → logprob: -3.9340882301330566
    4. ' y' → logprob: -5.559088230133057
    5. '=' → logprob: -7.059088230133057
    6. ' ' → logprob: -7.184088230133057
    7. '*' → logprob: -7.434088230133057
    8. 'handler' → logprob: -7.684088230133057
    9. ' =' → logprob: -7.809088230133057
    10. '_' → logprob: -9.309087753295898

Token 35: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032290320843458176
    2. '=' → logprob: -3.53229022026062
    3. ',' → logprob: -6.032290458679199
    4. ' ' → logprob: -9.0322904586792
    5. '  ' → logprob: -12.0322904586792
    6. ' ,' → logprob: -12.1572904586792
    7. '   ' → logprob: -13.2822904586792
    8. ')' → logprob: -14.4697904586792
    9. '```' → logprob: -14.5947904586792
    10. ' ' → logprob: -14.6572904586792

Token 36: ' Z' (ID: 1489)
  Prédit: ' Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.3897780478000641
    2. 'Z' → logprob: -1.1397780179977417
    3. ' =' → logprob: -6.889778137207031
    4. ' ' → logprob: -7.139778137207031
    5. '=' → logprob: -7.764778137207031
    6. 'handler' → logprob: -9.452278137207031
    7. '*' → logprob: -9.452278137207031
    8. '  ' → logprob: -9.577278137207031
    9. ' handler' → logprob: -9.764778137207031
    10. '   ' → logprob: -10.202278137207031

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009780172258615494
    2. '=' → logprob: -4.634780406951904
    3. ',' → logprob: -11.134779930114746
    4. ' ' → logprob: -11.759779930114746
    5. '  ' → logprob: -14.384779930114746
    6. ' ,' → logprob: -15.822279930114746
    7. '   ' → logprob: -16.134780883789062
    8. ' =
' → logprob: -16.134780883789062
    9. '```' → logprob: -16.322280883789062
    10. ')' → logprob: -16.384780883789062

Token 38: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28756892681121826
    2. '1' → logprob: -1.9125689268112183
    3. '10' → logprob: -3.912569046020508
    4. '5' → logprob: -4.412569046020508
    5. '0' → logprob: -4.537569046020508
    6. ' range' → logprob: -4.662569046020508
    7. 'range' → logprob: -4.662569046020508
    8. '100' → logprob: -5.287569046020508
    9. '(' → logprob: -5.412569046020508
    10. '3' → logprob: -5.537569046020508

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008805187419056892
    2. '(' → logprob: -4.758805274963379
    3. '(str' → logprob: -9.383805274963379
    4. 'int' → logprob: -9.883805274963379
    5. '(
' → logprob: -10.633805274963379
    6. '(float' → logprob: -11.383805274963379
    7. '(lambda' → logprob: -11.633805274963379
    8. '(eval' → logprob: -12.883805274963379
    9. '(list' → logprob: -13.008805274963379
    10. '(input' → logprob: -13.383805274963379

Token 40: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.06094733625650406
    2. '(input' → logprob: -2.9359474182128906
    3. '(' → logprob: -5.810947418212891
    4. ')' → logprob: -6.185947418212891
    5. 'input' → logprob: -8.18594741821289
    6. ',' → logprob: -8.43594741821289
    7. ' (' → logprob: -8.81094741821289
    8. 'sys' → logprob: -9.06094741821289
    9. ',input' → logprob: -9.68594741821289
    10. '=sys' → logprob: -9.93594741821289

Token 41: ' [' (ID: 723)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8289972543716431
    2. ' sys' → logprob: -0.9539972543716431
    3. 'input' → logprob: -2.0789971351623535
    4. 'sys' → logprob: -2.9539971351623535
    5. ' ' → logprob: -7.7039971351623535
    6. '(sys' → logprob: -7.8289971351623535
    7. ')' → logprob: -9.328997611999512
    8. '	sys' → logprob: -9.953997611999512
    9. '=sys' → logprob: -10.078997611999512
    10. '   ' → logprob: -10.703997611999512

Token 42: '*' (ID: 9)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08676348626613617
    2. 'input' → logprob: -2.961763381958008
    3. ' sys' → logprob: -4.211763381958008
    4. ''' → logprob: -4.961763381958008
    5. '(sys' → logprob: -5.461763381958008
    6. ''s' → logprob: -6.086763381958008
    7. '   ' → logprob: -7.336763381958008
    8. '"' → logprob: -7.961763381958008
    9. ' input' → logprob: -8.086763381958008
    10. ''x' → logprob: -8.211763381958008

Token 43: 'next' (ID: 7311)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02470894157886505
    2. ' sys' → logprob: -4.0247087478637695
    3. 'input' → logprob: -5.1497087478637695
    4. '(sys' → logprob: -7.7747087478637695
    5. ' input' → logprob: -9.52470874786377
    6. ''' → logprob: -9.64970874786377
    7. ''s' → logprob: -9.64970874786377
    8. ' ' → logprob: -10.52470874786377
    9. 'range' → logprob: -10.64970874786377
    10. '"' → logprob: -10.89970874786377

Token 44: '(((' (ID: 13163)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0007842566701583564
    2. 'sys' → logprob: -7.875784397125244
    3. '(iter' → logprob: -9.000783920288086
    4. '(open' → logprob: -9.250783920288086
    5. '(' → logprob: -9.875783920288086
    6. '(input' → logprob: -9.875783920288086
    7. '=sys' → logprob: -10.125783920288086
    8. ' sys' → logprob: -11.750783920288086
    9. '(stdin' → logprob: -12.000783920288086
    10. '	sys' → logprob: -12.250783920288086

Token 45: 'word' (ID: 1801)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04375347122550011
    2. 'iter' → logprob: -3.5437533855438232
    3. 'map' → logprob: -5.418753623962402
    4. 'range' → logprob: -6.168753623962402
    5. ' sys' → logprob: -6.543753623962402
    6. 'line' → logprob: -6.793753623962402
    7. '(sys' → logprob: -7.293753623962402
    8. '__' → logprob: -7.293753623962402
    9. 'zip' → logprob: -7.418753623962402
    10. 'enumer' → logprob: -7.418753623962402

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24462519586086273
    2. 'for' → logprob: -1.744625210762024
    3. ',' → logprob: -3.6196250915527344
    4. '(sys' → logprob: -6.244625091552734
    5. ',)' → logprob: -6.244625091552734
    6. ')' → logprob: -6.369625091552734
    7. '.split' → logprob: -6.619625091552734
    8. '(line' → logprob: -6.994625091552734
    9. ' ' → logprob: -7.119625091552734
    10. '  ' → logprob: -7.369625091552734

Token 47: ' line' (ID: 2543)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5726235508918762
    2. 'sys' → logprob: -1.4476234912872314
    3. ' line' → logprob: -2.3226234912872314
    4. 'line' → logprob: -2.3226234912872314
    5. '__' → logprob: -7.4476237297058105
    6. 'input' → logprob: -7.5726237297058105
    7. ' open' → logprob: -7.6976237297058105
    8. ' input' → logprob: -7.9476237297058105
    9. '(sys' → logprob: -7.9476237297058105
    10. 's' → logprob: -8.197623252868652

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006276552099734545
    2. 'in' → logprob: -5.631276607513428
    3. ' sys' → logprob: -7.131276607513428
    4. 'sys' → logprob: -7.506276607513428
    5. 'import' → logprob: -7.631276607513428
    6. 's' → logprob: -8.25627613067627
    7. '(sys' → logprob: -8.25627613067627
    8. ' for' → logprob: -9.38127613067627
    9. ' ' → logprob: -10.00627613067627
    10. 'for' → logprob: -10.38127613067627

Token 49: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3261834383010864
    2. ' sys' → logprob: -1.3261834383010864
    3. 'open' → logprob: -4.951183319091797
    4. ' open' → logprob: -5.201183319091797
    5. '	sys' → logprob: -9.826183319091797
    6. '(sys' → logprob: -9.951183319091797
    7. ' ' → logprob: -10.576183319091797
    8. '   ' → logprob: -10.576183319091797
    9. '```' → logprob: -10.826183319091797
    10. '=sys' → logprob: -10.951183319091797

Token 50: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07915877550840378
    2. 'stdin' → logprob: -2.5791587829589844
    3. ' stdin' → logprob: -8.829158782958984
    4. 'argv' → logprob: -10.329158782958984
    5. '(stdin' → logprob: -10.454158782958984
    6. '.argv' → logprob: -10.704158782958984
    7. 'input' → logprob: -11.704158782958984
    8. 'in' → logprob: -11.829158782958984
    9. ')' → logprob: -11.954158782958984
    10. '.' → logprob: -11.954158782958984

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2070673555135727
    2. 'for' → logprob: -1.8320673704147339
    3. '.readline' → logprob: -4.332067489624023
    4. ')' → logprob: -5.207067489624023
    5. '.readlines' → logprob: -5.707067489624023
    6. ' if' → logprob: -6.582067489624023
    7. '.split' → logprob: -6.707067489624023
    8. '   ' → logprob: -6.832067489624023
    9. ' ' → logprob: -7.832067489624023
    10. 'if' → logprob: -8.207067489624023

Token 52: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.6757482290267944
    2. 'word' → logprob: -0.8007482290267944
    3. ' line' → logprob: -3.800748348236084
    4. 'line' → logprob: -3.925748348236084
    5. '	word' → logprob: -9.925747871398926
    6. ' ' → logprob: -10.550747871398926
    7. '(word' → logprob: -11.050747871398926
    8. ' sys' → logprob: -11.175747871398926
    9. '  ' → logprob: -11.675747871398926
    10. 'token' → logprob: -12.363247871398926

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008728617802262306
    2. 'in' → logprob: -4.758728504180908
    3. 'line' → logprob: -10.883728981018066
    4. '  ' → logprob: -11.133728981018066
    5. '()' → logprob: -11.258728981018066
    6. '<|end|>' → logprob: -11.258728981018066
    7. ' ' → logprob: -11.383728981018066
    8. 'import' → logprob: -11.758728981018066
    9. '   ' → logprob: -12.133728981018066
    10. '<|end|>' → logprob: -12.258728981018066

Token 54: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.016069678589701653
    2. 'line' → logprob: -4.1410698890686035
    3. '	line' → logprob: -11.141069412231445
    4. '(line' → logprob: -11.641069412231445
    5. '#line' → logprob: -12.766069412231445
    6. '[line' → logprob: -13.016069412231445
    7. ' ' → logprob: -13.016069412231445
    8. '   ' → logprob: -14.391069412231445
    9. ' sys' → logprob: -14.391069412231445
    10. '```' → logprob: -14.516069412231445

Token 55: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.07723560929298401
    2. '().' → logprob: -2.952235698699951
    3. '.strip' → logprob: -4.827235698699951
    4. ' if' → logprob: -5.202235698699951
    5. 'split' → logprob: -5.327235698699951
    6. ' .' → logprob: -6.327235698699951
    7. ')' → logprob: -7.577235698699951
    8. '()' → logprob: -8.202235221862793
    9. ' split' → logprob: -8.577235221862793
    10. 'if' → logprob: -8.702235221862793

Token 56: '()),' (ID: 24379)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056303106248378754
    2. '()))' → logprob: -3.931303024291992
    3. '())' → logprob: -4.056303024291992
    4. '())))' → logprob: -4.556303024291992
    5. '()),' → logprob: -5.056303024291992
    6. '('' → logprob: -7.681303024291992
    7. '()]' → logprob: -8.806303024291992
    8. '(),' → logprob: -9.431303024291992
    9. '(' → logprob: -9.931303024291992
    10. '())))
' → logprob: -10.056303024291992

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.334572434425354
    2. 'range' → logprob: -2.2095723152160645
    3. 'next' → logprob: -2.3345723152160645
    4. ' next' → logprob: -2.7095723152160645
    5. ' range' → logprob: -2.8345723152160645
    6. '),' → logprob: -3.0845723152160645
    7. 'None' → logprob: -3.2095723152160645
    8. ' None' → logprob: -3.2095723152160645
    9. ')]' → logprob: -3.3345723152160645
    10. '))' → logprob: -3.4595723152160645

Token 58: ' for' (ID: 395)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.08312027156352997
    2. ')' → logprob: -3.458120346069336
    3. ')]' → logprob: -3.458120346069336
    4. '),' → logprob: -5.333120346069336
    5. '])' → logprob: -6.083120346069336
    6. ')][' → logprob: -6.208120346069336
    7. ' ' → logprob: -7.208120346069336
    8. ')],' → logprob: -7.208120346069336
    9. '])]' → logprob: -7.333120346069336
    10. 'next' → logprob: -7.458120346069336

Token 59: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6917769908905029
    2. '_' → logprob: -1.441776990890503
    3. ' _' → logprob: -2.316776990890503
    4. ' sys' → logprob: -3.066776990890503
    5. 'range' → logprob: -3.191776990890503
    6. ' line' → logprob: -3.816776990890503
    7. ' ' → logprob: -4.441777229309082
    8. ' word' → logprob: -4.566777229309082
    9. ')' → logprob: -5.191777229309082
    10. '___' → logprob: -5.691777229309082

Token 60: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.42071935534477234
    2. ' in' → logprob: -1.2957193851470947
    3. 'range' → logprob: -2.7957193851470947
    4. 'in' → logprob: -4.920719146728516
    5. '(range' → logprob: -7.670719146728516
    6. ' ' → logprob: -7.795719146728516
    7. '_' → logprob: -8.920719146728516
    8. '(' → logprob: -9.170719146728516
    9. '  ' → logprob: -9.670719146728516
    10. ' xrange' → logprob: -9.795719146728516

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.34858620166778564
    2. ' range' → logprob: -1.2235862016677856
    3. ' ' → logprob: -9.348586082458496
    4. '  ' → logprob: -10.848586082458496
    5. '   ' → logprob: -11.223586082458496
    6. '[' → logprob: -11.848586082458496
    7. '(range' → logprob: -11.973586082458496
    8. '(' → logprob: -12.973586082458496
    9. '	range' → logprob: -13.348586082458496
    10. '    ' → logprob: -13.973586082458496

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06284483522176743
    2. '3' → logprob: -2.812844753265381
    3. ' ' → logprob: -7.562844753265381
    4. ' (' → logprob: -8.562845230102539
    5. '4' → logprob: -9.437845230102539
    6. '   ' → logprob: -10.937845230102539
    7. '6' → logprob: -10.937845230102539
    8. '  ' → logprob: -11.437845230102539
    9. '7' → logprob: -11.812845230102539
    10. '5' → logprob: -12.062845230102539

Token 63: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001140453852713108
    2. ' ' → logprob: -6.876140594482422
    3. '6' → logprob: -10.376140594482422
    4. '4' → logprob: -10.751140594482422
    5. '1' → logprob: -11.126140594482422
    6. '2' → logprob: -11.376140594482422
    7. '   ' → logprob: -11.501140594482422
    8. '  ' → logprob: -11.876140594482422
    9. '5' → logprob: -12.751140594482422
    10. '9' → logprob: -13.188640594482422

Token 64: '))' (ID: 915)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.10944858193397522
    2. ')]' → logprob: -2.3594486713409424
    3. ')' → logprob: -4.859448432922363
    4. '))' → logprob: -7.609448432922363
    5. '):' → logprob: -8.484448432922363
    6. ')],' → logprob: -8.609448432922363
    7. ' )' → logprob: -9.359448432922363
    8. ')))' → logprob: -9.484448432922363
    9. '])' → logprob: -9.484448432922363
    10. '),' → logprob: -9.484448432922363

Token 65: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.027126697823405266
    2. ')])' → logprob: -4.027126789093018
    3. ']' → logprob: -5.902126789093018
    4. ' ])' → logprob: -6.402126789093018
    5. ')' → logprob: -6.527126789093018
    6. ')]' → logprob: -6.652126789093018
    7. ']))' → logprob: -6.777126789093018
    8. '])]' → logprob: -8.77712631225586
    9. '])
' → logprob: -9.40212631225586
    10. ']])' → logprob: -9.65212631225586

Token 66: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01572486199438572
    2. '<|end|>' → logprob: -4.2657246589660645
    3. ')
' → logprob: -7.7657246589660645
    4. '[' → logprob: -8.265725135803223
    5. '<|end|>' → logprob: -8.890725135803223
    6. ' ' → logprob: -9.140725135803223
    7. '   ' → logprob: -9.140725135803223
    8. ' )' → logprob: -9.390725135803223
    9. '
' → logprob: -9.640725135803223
    10. ',' → logprob: -9.765725135803223

Token 67: ' magic' (ID: 19745)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.4846579134464264
    2. '(' → logprob: -0.984657883644104
    3. '((' → logprob: -5.6096577644348145
    4. '(*' → logprob: -5.8596577644348145
    5. '('' → logprob: -6.1096577644348145
    6. '(Z' → logprob: -6.7346577644348145
    7. ' (' → logprob: -8.609658241271973
    8. '(Y' → logprob: -9.359658241271973
    9. '("("' → logprob: -10.109658241271973
    10. '(x' → logprob: -10.234658241271973

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00069778086617589
    2. ' ,' → logprob: -7.500697612762451
    3. ',Y' → logprob: -9.00069808959961
    4. ')' → logprob: -11.87569808959961
    5. '+' → logprob: -12.50069808959961
    6. ',Z' → logprob: -12.87569808959961
    7. ' ' → logprob: -13.00069808959961
    8. ',
' → logprob: -13.37569808959961
    9. ',y' → logprob: -13.87569808959961
    10. ',X' → logprob: -14.62569808959961

Token 70: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.008626751601696014
    2. ' Y' → logprob: -4.758626937866211
    3. 'Z' → logprob: -12.008626937866211
    4. '   ' → logprob: -13.008626937866211
    5. '	Y' → logprob: -13.633626937866211
    6. ' ' → logprob: -13.883626937866211
    7. '  ' → logprob: -14.258626937866211
    8. 'y' → logprob: -15.508626937866211
    9. '    ' → logprob: -15.508626937866211
    10. 'YZ' → logprob: -15.883626937866211

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008586966432631016
    2. ' ,' → logprob: -7.125858783721924
    3. ',Z' → logprob: -10.375858306884766
    4. ')' → logprob: -11.000858306884766
    5. 'Z' → logprob: -12.750858306884766
    6. ' ' → logprob: -13.125858306884766
    7. ' Z' → logprob: -15.125858306884766
    8. '),' → logprob: -16.063358306884766
    9. ',
' → logprob: -16.063358306884766
    10. '+' → logprob: -16.125858306884766

Token 72: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.25195547938346863
    2. ' Z' → logprob: -1.501955509185791
    3. ' ' → logprob: -11.876955032348633
    4. ')' → logprob: -12.001955032348633
    5. 'Y' → logprob: -13.189455032348633
    6. '   ' → logprob: -13.251955032348633
    7. '	Z' → logprob: -13.251955032348633
    8. '    ' → logprob: -13.501955032348633
    9. '  ' → logprob: -13.501955032348633
    10. 'z' → logprob: -14.314455032348633

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -14.000015258789062
    4. '))' → logprob: -14.750015258789062
    5. ')

' → logprob: -15.625015258789062
    6. ')`' → logprob: -16.125015258789062
    7. ')
' → logprob: -16.250015258789062
    8. ')))' → logprob: -16.750015258789062
    9. ')#' → logprob: -17.000015258789062
    10. '),' → logprob: -17.500015258789062

Token 74: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047380231320858
    2. '<|end|>' → logprob: -3.422380208969116
    3. '(' → logprob: -4.672380447387695
    4. '
' → logprob: -6.922380447387695
    5. '()' → logprob: -7.297380447387695
    6. '(
' → logprob: -7.422380447387695
    7. '\' → logprob: -7.797380447387695
    8. '\n' → logprob: -7.922380447387695
    9. '#' → logprob: -8.422380447387695
    10. ':' → logprob: -8.547380447387695

Token 75: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0031781906727701426
    2. '__' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.378178596496582
    4. ' ' → logprob: -15.503178596496582
    5. '_' → logprob: -16.253177642822266
    6. '_name' → logprob: -17.878177642822266
    7. '/__' → logprob: -18.128177642822266
    8. ' ___' → logprob: -18.378177642822266
    9. ' "__' → logprob: -18.628177642822266
    10. ' _' → logprob: -18.628177642822266

Token 76: 'name' (ID: 897)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5310420393943787
    2. '.__' → logprob: -1.1560420989990234
    3. ' .' → logprob: -3.5310420989990234
    4. ' ==' → logprob: -4.031042098999023
    5. '__.__' → logprob: -4.156042098999023
    6. '==' → logprob: -4.406042098999023
    7. '__' → logprob: -4.781042098999023
    8. '.py' → logprob: -5.531042098999023
    9. '<|end|>' → logprob: -6.031042098999023
    10. '.name' → logprob: -6.406042098999023

Token 77: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.130576806142926e-05
    2. '==' → logprob: -10.625031471252441
    3. '__.__' → logprob: -12.875031471252441
    4. '_' → logprob: -13.375031471252441
    5. '___' → logprob: -14.250031471252441
    6. '```' → logprob: -14.875031471252441
    7. '=="' → logprob: -15.000031471252441
    8. ' ==' → logprob: -15.000031471252441
    9. '__.' → logprob: -15.500031471252441
    10. '__["' → logprob: -15.625031471252441

Token 78: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3855160176753998
    2. ' ==' → logprob: -1.2605160474777222
    3. '==' → logprob: -3.3855159282684326
    4. '=="' → logprob: -6.510516166687012
    5. '=='' → logprob: -7.510516166687012
    6. '.__' → logprob: -9.385516166687012
    7. '['' → logprob: -9.510516166687012
    8. '```' → logprob: -9.510516166687012
    9. '__.__' → logprob: -9.510516166687012
    10. '[' → logprob: -10.510516166687012

Token 79: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34922224283218384
    2. '"' → logprob: -1.224222183227539
    3. ' "' → logprob: -7.599222183227539
    4. ' '' → logprob: -8.224222183227539
    5. ' "__' → logprob: -12.849222183227539
    6. ''s' → logprob: -13.474222183227539
    7. '__' → logprob: -13.599222183227539
    8. ' '__' → logprob: -14.224222183227539
    9. ' ' → logprob: -14.474222183227539
    10. '`' → logprob: -14.724222183227539

Token 80: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.2113979209971149e-05
    2. 'ma' → logprob: -11.625012397766113
    3. 'name' → logprob: -13.750012397766113
    4. 'py' → logprob: -14.125012397766113
    5. 'm' → logprob: -14.875012397766113
    6. 'maine' → logprob: -15.125012397766113
    7. ' main' → logprob: -15.375012397766113
    8. 'mai' → logprob: -15.500012397766113
    9. 'mp' → logprob: -16.250011444091797
    10. '_main' → logprob: -16.500011444091797

Token 81: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004710295703262091
    2. '__":
' → logprob: -5.5047101974487305
    3. '_' → logprob: -7.3797101974487305
    4. '__:' → logprob: -12.12971019744873
    5. '_"' → logprob: -14.00471019744873
    6. '__["' → logprob: -14.25471019744873
    7. '__",' → logprob: -14.75471019744873
    8. '__("' → logprob: -15.62971019744873
    9. '"' → logprob: -15.75471019744873
    10. '___' → logprob: -16.254711151123047

Token 82: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0038609972689300776
    2. 'main' → logprob: -6.378860950469971
    3. '	main' → logprob: -7.003860950469971
    4. ' ' → logprob: -7.628860950469971
    5. '   ' → logprob: -7.878860950469971
    6. '_main' → logprob: -9.503861427307129
    7. ' ' → logprob: -9.503861427307129
    8. ' 
' → logprob: -10.003861427307129
    9. '    
' → logprob: -10.128861427307129
    10. '_' → logprob: -10.753861427307129

Token 83: ' foo' (ID: 30551)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2521428167819977
    2. ' main' → logprob: -1.5021427869796753
    3. '   ' → logprob: -9.002142906188965
    4. '	main' → logprob: -9.377142906188965
    5. ' ' → logprob: -13.252142906188965
    6. ' ' → logprob: -13.627142906188965
    7. '    
' → logprob: -14.127142906188965
    8. '
' → logprob: -14.502142906188965
    9. '  ' → logprob: -15.002142906188965
    10. '```' → logprob: -15.252142906188965

Token 84: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00471361493691802
    2. 'main' → logprob: -5.504713535308838
    3. '_main' → logprob: -8.629714012145996
    4. ' ()' → logprob: -8.879714012145996
    5. '(' → logprob: -8.879714012145996
    6. '()
' → logprob: -9.629714012145996
    7. ' main' → logprob: -10.379714012145996
    8. '_' → logprob: -10.629714012145996
    9. '.main' → logprob: -11.504714012145996
    10. '().' → logprob: -11.879714012145996

Token 85: ' lambda' (ID: 27871)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.5274476408958435
    2. 'main' → logprob: -1.1524477005004883
    3. ' Handler' → logprob: -2.7774477005004883
    4. ' main' → logprob: -3.6524477005004883
    5. 'int' → logprob: -6.402447700500488
    6. 'magic' → logprob: -7.027447700500488
    7. 'sys' → logprob: -7.652447700500488
    8. ' sys' → logprob: -7.902447700500488
    9. 'input' → logprob: -7.902447700500488
    10. ' ' → logprob: -8.277447700500488

Token 86: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11878363788127899
    2. 'x' → logprob: -3.618783712387085
    3. ':' → logprob: -3.993783712387085
    4. ' a' → logprob: -4.243783473968506
    5. ' args' → logprob: -4.868783473968506
    6. ' s' → logprob: -5.118783473968506
    7. ' sys' → logprob: -5.243783473968506
    8. ' line' → logprob: -5.243783473968506
    9. ' *' → logprob: -5.493783473968506
    10. ' :' → logprob: -5.743783473968506

Token 87: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.084306001663208
    2. ' next' → logprob: -1.959306001663208
    3. 'main' → logprob: -2.584306001663208
    4. ' list' → logprob: -2.709306001663208
    5. ' None' → logprob: -2.709306001663208
    6. 'next' → logprob: -2.959306001663208
    7. ' [' → logprob: -3.334306001663208
    8. ' sys' → logprob: -3.334306001663208
    9. 'None' → logprob: -3.459306001663208
    10. ' int' → logprob: -3.834306001663208

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013615436619147658
    2. '()
' → logprob: -6.75136137008667
    3. '(' → logprob: -9.251361846923828
    4. '()\' → logprob: -10.501361846923828
    5. '<|end|>' → logprob: -11.001361846923828
    6. '()<' → logprob: -11.376361846923828
    7. '();' → logprob: -11.626361846923828
    8. '()

' → logprob: -11.626361846923828
    9. '().' → logprob: -12.376361846923828
    10. '()`' → logprob: -13.001361846923828

Token 89: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08423499763011932
    2. '<|end|>' → logprob: -3.5842349529266357
    3. '()
' → logprob: -4.084235191345215
    4. '
' → logprob: -4.084235191345215
    5. '(' → logprob: -4.834235191345215
    6. 'foo' → logprob: -5.709235191345215
    7. ')' → logprob: -5.959235191345215
    8. '\' → logprob: -6.584235191345215
    9. '' → logprob: -7.084235191345215
    10. '(
' → logprob: -7.584235191345215

Token 90: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.00022213248303160071
    2. ' foo' → logprob: -9.000222206115723
    3. '   ' → logprob: -9.500222206115723
    4. '(foo' → logprob: -11.500222206115723
    5. 'foobar' → logprob: -11.750222206115723
    6. '<|end|>' → logprob: -14.000222206115723
    7. '()' → logprob: -14.250222206115723
    8. 'fo' → logprob: -14.250222206115723
    9. '/foo' → logprob: -14.250222206115723
    10. '.foo' → logprob: -14.375222206115723

Token 91: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.166338137816638e-05
    2. '()
' → logprob: -10.875031471252441
    3. '(' → logprob: -11.500031471252441
    4. '()`' → logprob: -14.125031471252441
    5. '`()' → logprob: -14.500031471252441
    6. ' ()' → logprob: -14.875031471252441
    7. '()

' → logprob: -15.000031471252441
    8. '()(' → logprob: -16.500032424926758
    9. ']()' → logprob: -16.625032424926758
    10. '()<' → logprob: -16.625032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 34.83%
Précision adaptée (1ère position): 35.96%
Précision (top 10): 73.03%
================================================================================
