================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = input().split()
for i in range(n):
    a[i] = int(a[i])
maximum = a[0]
minimum = a[0]
for i in range(n):
    if a[i] > maximum:
        maximum = a[i]
    if a[i] < minimum:
        minimum = a[i]
result = maximum - minimum
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13643822073936462
    2. ')' → logprob: -2.2614381313323975
    3. '()' → logprob: -4.011438369750977
    4. '())' → logprob: -5.636438369750977
    5. '(
' → logprob: -7.636438369750977
    6. '('' → logprob: -8.636438369750977
    7. '```' → logprob: -8.636438369750977
    8. '(()' → logprob: -9.136438369750977
    9. '("("' → logprob: -9.261438369750977
    10. '(

' → logprob: -9.636438369750977

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034043090417981148
    2. '[a' → logprob: -6.503404140472412
    3. 'a' → logprob: -7.753404140472412
    4. '[i' → logprob: -7.878404140472412
    5. '+' → logprob: -8.25340461730957
    6. '[n' → logprob: -8.37840461730957
    7. '.' → logprob: -9.50340461730957
    8. '\[' → logprob: -9.50340461730957
    9. '[:]' → logprob: -9.50340461730957
    10. '=' → logprob: -9.62840461730957

Token 7: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.718782365322113
    2. ' []' → logprob: -0.843782365322113
    3. 'list' → logprob: -3.718782424926758
    4. ' [' → logprob: -3.718782424926758
    5. '[' → logprob: -4.593782424926758
    6. '[int' → logprob: -4.718782424926758
    7. ' list' → logprob: -4.843782424926758
    8. '[input' → logprob: -6.218782424926758
    9. 'a' → logprob: -6.718782424926758
    10. 'n' → logprob: -6.843782424926758

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001439877087250352
    2. ''' → logprob: -7.376440048217773
    3. '('' → logprob: -7.876440048217773
    4. '"' → logprob: -8.876440048217773
    5. '(
' → logprob: -9.376440048217773
    6. '("("' → logprob: -9.501440048217773
    7. ')' → logprob: -10.251440048217773
    8. '()' → logprob: -10.501440048217773
    9. ' (' → logprob: -11.126440048217773
    10. '[' → logprob: -11.126440048217773

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018233293667435646
    2. 'strip' → logprob: -4.018233299255371
    3. 's' → logprob: -10.143233299255371
    4. 'rstrip' → logprob: -11.018233299255371
    5. 'spl' → logprob: -11.393233299255371
    6. 'replace' → logprob: -11.643233299255371
    7. 'r' → logprob: -12.768233299255371
    8. 'sp' → logprob: -12.893233299255371
    9. ' split' → logprob: -13.518233299255371
    10. 'rs' → logprob: -14.643233299255371

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05222046747803688
    2. '()' → logprob: -3.052220582962036
    3. '('' → logprob: -6.052220344543457
    4. '("("' → logprob: -7.052220344543457
    5. '"' → logprob: -8.802220344543457
    6. '("' → logprob: -9.802220344543457
    7. '(
' → logprob: -10.302220344543457
    8. '(

' → logprob: -10.302220344543457
    9. '((' → logprob: -10.552220344543457
    10. ''' → logprob: -11.052220344543457

Token 11: 'for' (ID: 1938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10386238247156143
    2. 'for' → logprob: -2.8538622856140137
    3. 'b' → logprob: -3.8538622856140137
    4. 'c' → logprob: -4.853862285614014
    5. 'n' → logprob: -5.603862285614014
    6. 's' → logprob: -6.103862285614014
    7. 'result' → logprob: -6.353862285614014
    8. '[' → logprob: -6.478862285614014
    9. 'm' → logprob: -7.478862285614014
    10. 'count' → logprob: -7.853862285614014

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09787572920322418
    2. ' i' → logprob: -2.4728758335113525
    3. '  ' → logprob: -4.847875595092773
    4. 'i' → logprob: -7.222875595092773
    5. '_' → logprob: -8.847875595092773
    6. ' ‌' → logprob: -9.847875595092773
    7. ' n' → logprob: -10.097875595092773
    8. ' a' → logprob: -11.097875595092773
    9. ' _' → logprob: -11.597875595092773
    10. ' )' → logprob: -11.722875595092773

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.588808000087738
    2. 'in' → logprob: -0.963808000087738
    3. ' ' → logprob: -3.088808059692383
    4. '  ' → logprob: -5.463808059692383
    5. '_' → logprob: -5.588808059692383
    6. 'n' → logprob: -5.588808059692383
    7. '=' → logprob: -6.838808059692383
    8. '[' → logprob: -6.838808059692383
    9. ')' → logprob: -7.088808059692383
    10. '   ' → logprob: -7.588808059692383

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2015519142150879
    2. 'range' → logprob: -1.701551914215088
    3. ' a' → logprob: -9.57655143737793
    4. 'a' → logprob: -9.95155143737793
    5. ' ' → logprob: -11.82655143737793
    6. 'n' → logprob: -12.57655143737793
    7. '	range' → logprob: -12.70155143737793
    8. '(range' → logprob: -12.95155143737793
    9. ' n' → logprob: -12.95155143737793
    10. ')' → logprob: -14.07655143737793

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12714427709579468
    2. '(n' → logprob: -2.1271443367004395
    3. '(len' → logprob: -8.877143859863281
    4. ' (' → logprob: -9.627143859863281
    5. '(i' → logprob: -12.627143859863281
    6. '(a' → logprob: -13.252143859863281
    7. ' ' → logprob: -13.627143859863281
    8. '(
' → logprob: -13.877143859863281
    9. '(range' → logprob: -14.127143859863281
    10. '((' → logprob: -14.627143859863281

Token 16: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869687616825104
    2. '):' → logprob: -1.136968731880188
    3. '[' → logprob: -10.011968612670898
    4. '+' → logprob: -11.386968612670898
    5. ':' → logprob: -11.511968612670898
    6. '):
' → logprob: -12.511968612670898
    7. '[i' → logprob: -12.511968612670898
    8. ' )' → logprob: -12.886968612670898
    9. ')[' → logprob: -13.136968612670898
    10. ' ' → logprob: -13.261968612670898

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16775478422641754
    2. ' ' → logprob: -2.667754888534546
    3. ' a' → logprob: -3.167754888534546
    4. '    ' → logprob: -4.042754650115967
    5. ' if' → logprob: -4.417754650115967
    6. 'a' → logprob: -4.917754650115967
    7. '    
' → logprob: -6.792754650115967
    8. 'if' → logprob: -7.167754650115967
    9. '[' → logprob: -7.417754650115967
    10. ' print' → logprob: -7.917754650115967

Token 18: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0176565647125244
    2. ' if' → logprob: -1.1426565647125244
    3. 'if' → logprob: -2.1426565647125244
    4. '    ' → logprob: -2.7676565647125244
    5. 'print' → logprob: -2.8926565647125244
    6. 'a' (adapté à ' a') → logprob: -3.2676565647125244
    7. ' a' → logprob: -4.017656326293945
    8. ' print' → logprob: -4.142656326293945
    9. ' ' → logprob: -5.392656326293945
    10. ' for' → logprob: -5.642656326293945

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1434599608182907
    2. '[i' → logprob: -2.0184600353240967
    3. '[a' → logprob: -7.643459796905518
    4. '\[' → logprob: -9.018460273742676
    5. '```' → logprob: -10.268460273742676
    6. '[int' → logprob: -10.393460273742676
    7. '[...]' → logprob: -10.643460273742676
    8. '[I' → logprob: -11.143460273742676
    9. '[]' → logprob: -11.143460273742676
    10. ' [' → logprob: -11.643460273742676

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006507301703095436
    2. ')' → logprob: -5.881507396697998
    3. ' ]' → logprob: -6.506507396697998
    4. '[' → logprob: -7.506507396697998
    5. '])' → logprob: -7.506507396697998
    6. ']=' → logprob: -7.631507396697998
    7. '][' → logprob: -8.50650691986084
    8. ']==' → logprob: -8.88150691986084
    9. ')]' → logprob: -9.63150691986084
    10. '].' → logprob: -9.75650691986084

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32947301864624023
    2. '[' → logprob: -2.0794730186462402
    3. ' =' → logprob: -2.4544730186462402
    4. '<|end|>' → logprob: -3.5794730186462402
    5. ')' → logprob: -4.32947301864624
    6. '+' → logprob: -4.57947301864624
    7. '+=' → logprob: -5.20447301864624
    8. ' +=' → logprob: -5.82947301864624
    9. ']' → logprob: -6.57947301864624
    10. 'print' → logprob: -6.82947301864624

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023247340694069862
    2. ' int' → logprob: -3.773247241973877
    3. 'a' → logprob: -14.523247718811035
    4. '[int' → logprob: -15.148247718811035
    5. '(int' → logprob: -15.273247718811035
    6. '   ' → logprob: -15.398247718811035
    7. 'float' → logprob: -15.523247718811035
    8. '=int' → logprob: -15.648247718811035
    9. '	int' → logprob: -17.02324676513672
    10. ']int' → logprob: -17.02324676513672

Token 23: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16024240851402283
    2. '(a' → logprob: -1.9102424383163452
    3. '(
' → logprob: -11.910242080688477
    4. '('' → logprob: -12.410242080688477
    5. '(

' → logprob: -12.660242080688477
    6. 'a' → logprob: -13.035242080688477
    7. ' (' → logprob: -14.410242080688477
    8. '(`' → logprob: -15.035242080688477
    9. '("("' → logprob: -15.285242080688477
    10. '(A' → logprob: -15.785242080688477

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005834118463099003
    2. '[' → logprob: -5.380834102630615
    3. '[a' → logprob: -7.255834102630615
    4. ')' → logprob: -7.630834102630615
    5. ' [' → logprob: -12.005834579467773
    6. '[
' → logprob: -12.630834579467773
    7. ']' → logprob: -12.880834579467773
    8. ')[' → logprob: -12.880834579467773
    9. '[I' → logprob: -12.880834579467773
    10. '[n' → logprob: -13.880834579467773

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010001848451793194
    2. '))' → logprob: -4.6350016593933105
    3. '])' → logprob: -8.385002136230469
    4. ')])' → logprob: -12.385002136230469
    5. ' )' → logprob: -12.760002136230469
    6. ']' → logprob: -12.760002136230469
    7. ')))' → logprob: -13.260002136230469
    8. ')]' → logprob: -13.510002136230469
    9. ')
' → logprob: -13.760002136230469
    10. '[' → logprob: -14.510002136230469

Token 26: 'maximum' (ID: 78601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.421847939491272
    2. '[' → logprob: -2.2968478202819824
    3. ')' → logprob: -3.0468478202819824
    4. 'print' → logprob: -3.6718478202819824
    5. 'if' → logprob: -3.7968478202819824
    6. '#' → logprob: -3.9218478202819824
    7. '\' → logprob: -4.171847820281982
    8. '   ' → logprob: -4.546847820281982
    9. 'a' → logprob: -4.796847820281982
    10. '\n' → logprob: -4.796847820281982

Token 27: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004110223148018122
    2. '(' → logprob: -6.129110336303711
    3. ')' → logprob: -7.254110336303711
    4. '_max' → logprob: -7.254110336303711
    5. '[' → logprob: -9.379110336303711
    6. 's' → logprob: -9.504110336303711
    7. '(a' → logprob: -9.754110336303711
    8. '_a' → logprob: -9.879110336303711
    9. '(max' → logprob: -10.129110336303711
    10. 'a' → logprob: -10.379110336303711

Token 28: ' a' (ID: 261)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04399089142680168
    2. ' a' → logprob: -3.9189908504486084
    3. 'max' → logprob: -3.9189908504486084
    4. 'a' → logprob: -6.0439910888671875
    5. ' ' → logprob: -7.2939910888671875
    6. ' -' → logprob: -9.168991088867188
    7. ' float' → logprob: -9.543991088867188
    8. '-' → logprob: -10.418991088867188
    9. '0' → logprob: -10.418991088867188
    10. ' None' → logprob: -11.793991088867188

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22994497418403625
    2. '.' → logprob: -1.7299449443817139
    3. '[:]' → logprob: -3.604944944381714
    4. '[i' → logprob: -8.479945182800293
    5. '```' → logprob: -8.979945182800293
    6. '[max' → logprob: -8.979945182800293
    7. '.copy' → logprob: -9.104945182800293
    8. '.[' → logprob: -9.354945182800293
    9. '[a' → logprob: -9.604945182800293
    10. '[:' → logprob: -10.104945182800293

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.44443862256594e-05
    2. 'i' → logprob: -9.875064849853516
    3. ' ' → logprob: -11.375064849853516
    4. '-' → logprob: -13.875064849853516
    5. '1' → logprob: -15.875064849853516
    6. ')' → logprob: -16.625064849853516
    7. ' i' → logprob: -16.625064849853516
    8. '۰' → logprob: -16.937564849853516
    9. '])' → logprob: -17.125064849853516
    10. ']' → logprob: -17.375064849853516

Token 31: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01248080562800169
    2. ' )' → logprob: -4.637480735778809
    3. ']' → logprob: -6.012480735778809
    4. '<|end|>' → logprob: -9.637480735778809
    5. ' ]' → logprob: -9.762480735778809
    6. '])' → logprob: -10.137480735778809
    7. '}' → logprob: -10.512480735778809
    8. '>' → logprob: -10.512480735778809
    9. '[' → logprob: -11.012480735778809
    10. ' ' → logprob: -11.512480735778809

Token 32: 'minimum' (ID: 80931)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00957474485039711
    2. '=' → logprob: -5.134574890136719
    3. ' ' → logprob: -5.759574890136719
    4. '_' → logprob: -8.134574890136719
    5. '<|end|>' → logprob: -8.759574890136719
    6. ')' → logprob: -11.634574890136719
    7. ',' → logprob: -12.134574890136719
    8. ' ,' → logprob: -12.509574890136719
    9. ' _' → logprob: -12.634574890136719
    10. ' =
' → logprob: -12.759574890136719

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4740907549858093
    2. 'a' → logprob: -0.9740907549858093
    3. ' maximum' → logprob: -12.099090576171875
    4. 'maximum' → logprob: -12.974090576171875
    5. ' ' → logprob: -13.349090576171875
    6. '	a' → logprob: -13.724090576171875
    7. 'max' → logprob: -13.724090576171875
    8. ' max' → logprob: -14.099090576171875
    9. ' ' → logprob: -14.224090576171875
    10. '_a' → logprob: -16.099090576171875

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[i' → logprob: -13.750001907348633
    3. '0' → logprob: -15.125001907348633
    4. '\[' → logprob: -15.875001907348633
    5. '```' → logprob: -15.875001907348633
    6. '[
' → logprob: -16.000001907348633
    7. ' [' → logprob: -16.125001907348633
    8. '[...]' → logprob: -18.125001907348633
    9. '[]' → logprob: -18.750001907348633
    10. '[:]' → logprob: -18.750001907348633

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. ']' → logprob: -15.62501049041748
    4. 'i' → logprob: -17.125009536743164
    5. '])' → logprob: -17.750009536743164
    6. '1' → logprob: -17.812509536743164
    7. '```' → logprob: -18.062509536743164
    8. '۰' → logprob: -18.125009536743164
    9. ' ]' → logprob: -18.312509536743164
    10. ')' → logprob: -18.687509536743164

Token 37: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013044030638411641
    2. ')
' → logprob: -7.251304626464844
    3. ']' → logprob: -7.626304626464844
    4. '<|end|>' → logprob: -9.501304626464844
    5. '```' → logprob: -11.751304626464844
    6. ' )' → logprob: -12.251304626464844
    7. '）' → logprob: -13.001304626464844
    8. '[' → logprob: -13.251304626464844
    9. '}' → logprob: -13.251304626464844
    10. '
' → logprob: -13.501304626464844

Token 38: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3149798512458801
    2. 'for' → logprob: -1.3149797916412354
    3. ' for' → logprob: -6.8149800300598145
    4. '
' → logprob: -8.564979553222656
    5. ' 
' → logprob: -8.564979553222656
    6. '```' → logprob: -8.689979553222656
    7. '\n' → logprob: -10.314979553222656
    8. '' → logprob: -11.439979553222656
    9. '  
' → logprob: -11.439979553222656
    10. '

' → logprob: -12.689979553222656

Token 39: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.474780797958374
    2. ' i' → logprob: -0.974780797958374
    3. 'i' → logprob: -7.974781036376953
    4. ' _' → logprob: -9.224781036376953
    5. '  ' → logprob: -9.474781036376953
    6. '<|end|>' → logprob: -9.724781036376953
    7. ' ' → logprob: -10.099781036376953
    8. ' ‌' → logprob: -10.349781036376953
    9. ' range' → logprob: -11.099781036376953
    10. '_' → logprob: -11.474781036376953

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01872878707945347
    2. 'in' → logprob: -4.018728733062744
    3. ' ' → logprob: -7.518728733062744
    4. '	in' → logprob: -11.393729209899902
    5. '  ' → logprob: -12.018729209899902
    6. '+' → logprob: -12.018729209899902
    7. 'range' → logprob: -13.393729209899902
    8. '   ' → logprob: -13.393729209899902
    9. '    ' → logprob: -13.643729209899902
    10. 'n' → logprob: -13.643729209899902

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0026800562627613544
    2. 'range' → logprob: -6.127679824829102
    3. ' ' → logprob: -7.627679824829102
    4. ' a' → logprob: -12.252679824829102
    5. ' r' → logprob: -14.252679824829102
    6. ' ra' → logprob: -14.377679824829102
    7. ' n' → logprob: -14.377679824829102
    8. ' space' → logprob: -15.002679824829102
    9. '	range' → logprob: -15.002679824829102
    10. '(range' → logprob: -15.377679824829102

Token 42: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602860689163208
    2. '(n' → logprob: -1.9102860689163208
    3. ' (' → logprob: -9.785285949707031
    4. '(
' → logprob: -13.285285949707031
    5. '(range' → logprob: -13.285285949707031
    6. '(len' → logprob: -13.785285949707031
    7. '(

' → logprob: -14.785285949707031
    8. ' ' → logprob: -15.160285949707031
    9. '(s' → logprob: -15.910285949707031
    10. '()' → logprob: -16.03528594970703

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002553793019615114
    2. ' ):' → logprob: -8.625255584716797
    3. ')' → logprob: -9.625255584716797
    4. '):
' → logprob: -12.000255584716797
    5. ':' → logprob: -13.125255584716797
    6. '+' → logprob: -14.375255584716797
    7. ' ' → logprob: -15.750255584716797
    8. '>' → logprob: -15.875255584716797
    9. '   ' → logprob: -16.000255584716797
    10. ']:' → logprob: -16.500255584716797

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08551592379808426
    2. ' if' → logprob: -2.5855159759521484
    3. '    ' → logprob: -5.960515975952148
    4. '    
' → logprob: -6.210515975952148
    5. 'if' → logprob: -6.835515975952148
    6. '```' → logprob: -8.335515975952148
    7. ' ' → logprob: -8.585515975952148
    8. ' 
' → logprob: -9.085515975952148
    9. '     
' → logprob: -9.335515975952148
    10. ' ```' → logprob: -9.335515975952148

Token 45: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09621617943048477
    2. '   ' → logprob: -3.4712162017822266
    3. ' ' → logprob: -3.5962162017822266
    4. 'if' (adapté à ' if') → logprob: -4.221216201782227
    5. '```' → logprob: -4.971216201782227
    6. '    ' → logprob: -5.096216201782227
    7. ' ```' → logprob: -5.721216201782227
    8. ' 
' → logprob: -6.596216201782227
    9. ' i' → logprob: -8.346216201782227
    10. '     
' → logprob: -9.096216201782227

Token 46: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.006908602546900511
    2. ' ' → logprob: -5.256908416748047
    3. 'a' → logprob: -6.506908416748047
    4. ' maximum' → logprob: -9.006908416748047
    5. ' ' → logprob: -10.631908416748047
    6. ' max' → logprob: -11.131908416748047
    7. ' (' → logprob: -12.381908416748047
    8. ' n' → logprob: -13.006908416748047
    9. '	a' → logprob: -13.381908416748047
    10. ' i' → logprob: -13.756908416748047

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003818140830844641
    2. '[' → logprob: -7.875381946563721
    3. ' [' → logprob: -14.000381469726562
    4. '[I' → logprob: -14.500381469726562
    5. '[
' → logprob: -15.500381469726562
    6. '```' → logprob: -17.500381469726562
    7. '>' → logprob: -17.750381469726562
    8. ' ' → logprob: -18.000381469726562
    9. '[j' → logprob: -18.125381469726562
    10. '\[' → logprob: -18.125381469726562

Token 48: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2814161479473114
    2. '>' → logprob: -1.4064161777496338
    3. ' ' → logprob: -8.281415939331055
    4. ' <' → logprob: -12.031415939331055
    5. '<' → logprob: -12.781415939331055
    6. ' ' → logprob: -14.156415939331055
    7. '">' → logprob: -14.406415939331055
    8. '  ' → logprob: -14.781415939331055
    9. ')' → logprob: -14.906415939331055
    10. '   ' → logprob: -14.906415939331055

Token 49: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5760842561721802
    2. '>' → logprob: -0.8260842561721802
    3. ' ' → logprob: -9.45108413696289
    4. '<' → logprob: -10.32608413696289
    5. ' <' → logprob: -10.45108413696289
    6. ' greater' → logprob: -14.20108413696289
    7. ' ' → logprob: -14.82608413696289
    8. '">' → logprob: -14.95108413696289
    9. '>a' → logprob: -14.95108413696289
    10. '.' → logprob: -15.20108413696289

Token 50: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.6931484937667847
    2. 'maximum' → logprob: -0.6931484937667847
    3. 'max' → logprob: -14.068148612976074
    4. ' ' → logprob: -14.443148612976074
    5. '  ' → logprob: -17.568147659301758
    6. ' maksimum' → logprob: -17.568147659301758
    7. '.maximum' → logprob: -17.693147659301758
    8. ' ' → logprob: -17.943147659301758
    9. ' max' → logprob: -18.818147659301758
    10. 'Maximum' → logprob: -19.193147659301758

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007222028798423707
    2. ' :' → logprob: -7.250722408294678
    3. ':
' → logprob: -11.62572193145752
    4. ':**' → logprob: -13.87572193145752
    5. '):' → logprob: -14.00072193145752
    6. '<|end|>' → logprob: -14.50072193145752
    7. '>:' → logprob: -15.37572193145752
    8. '：' → logprob: -15.75072193145752
    9. ' :
' → logprob: -16.125722885131836
    10. '=' → logprob: -16.625722885131836

Token 52: '       ' (ID: 309)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.14362673461437225
    2. 'maximum' → logprob: -2.0186266899108887
    3. '.maximum' → logprob: -7.518626689910889
    4. ':' → logprob: -8.518627166748047
    5. 'Maximum' → logprob: -9.268627166748047
    6. ' ' → logprob: -9.893627166748047
    7. ' maksimum' → logprob: -11.018627166748047
    8. '   ' → logprob: -11.643627166748047
    9. ' :' → logprob: -11.893627166748047
    10. ' :
' → logprob: -12.393627166748047

Token 53: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.02552725002169609
    2. 'maximum' (adapté à ' maximum') → logprob: -3.775527238845825
    3. ' ' → logprob: -6.150527477264404
    4. ' a' → logprob: -9.650527000427246
    5. ' max' → logprob: -10.275527000427246
    6. '.maximum' → logprob: -11.275527000427246
    7. 'a' → logprob: -11.400527000427246
    8. ' maksimum' → logprob: -11.400527000427246
    9. 'max' → logprob: -12.150527000427246
    10. 'Maximum' → logprob: -13.025527000427246

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164566993713379
    2. '=' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.264164924621582
    4. ' =
' → logprob: -14.764164924621582
    5. ' =)' → logprob: -17.639163970947266
    6. ' =
' → logprob: -18.389163970947266
    7. ' ==' → logprob: -19.514163970947266
    8. ' +=' → logprob: -19.514163970947266
    9. ',' → logprob: -19.514163970947266
    10. '<|end|>' → logprob: -19.639163970947266

Token 55: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.38688480854034424
    2. 'a' → logprob: -1.1368848085403442
    3. ' ' → logprob: -11.511884689331055
    4. ' ' → logprob: -13.136884689331055
    5. '	a' → logprob: -13.511884689331055
    6. '    ' → logprob: -16.261884689331055
    7. 'i' → logprob: -16.386884689331055
    8. '_a' → logprob: -16.511884689331055
    9. '   ' → logprob: -17.011884689331055
    10. '  ' → logprob: -17.011884689331055

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.494741632603109e-05
    2. '[' → logprob: -9.37508487701416
    3. ' [' → logprob: -17.625085830688477
    4. 'i' → logprob: -18.125085830688477
    5. '```' → logprob: -18.375085830688477
    6. '[a' → logprob: -18.750085830688477
    7. '[I' → logprob: -18.750085830688477
    8. '[
' → logprob: -18.875085830688477
    9. '\[' → logprob: -19.000085830688477
    10. '[j' → logprob: -19.000085830688477

Token 57: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015077588148415089
    2. ']' → logprob: -4.265077590942383
    3. '}' → logprob: -7.140077590942383
    4. ')
' → logprob: -9.640077590942383
    5. '<|end|>' → logprob: -10.640077590942383
    6. ' )' → logprob: -11.515077590942383
    7. '   ' → logprob: -11.765077590942383
    8. '[i' → logprob: -13.015077590942383
    9. '）' → logprob: -13.140077590942383
    10. '[' → logprob: -13.265077590942383

Token 58: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4950982928276062
    2. ' elif' → logprob: -1.870098352432251
    3. '   ' → logprob: -2.245098352432251
    4. ' 
' → logprob: -3.120098352432251
    5. '    
' → logprob: -3.120098352432251
    6. '  
' → logprob: -4.370098114013672
    7. 'if' → logprob: -4.995098114013672
    8. ' ' → logprob: -5.120098114013672
    9. '   
' → logprob: -5.245098114013672
    10. ' if' → logprob: -5.995098114013672

Token 59: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.12049133330583572
    2. ' elif' → logprob: -2.8704912662506104
    3. 'if' (adapté à ' if') → logprob: -3.3704912662506104
    4. '   ' → logprob: -4.9954915046691895
    5. '    
' → logprob: -5.3704915046691895
    6. ' 
' → logprob: -5.7454915046691895
    7. ' if' → logprob: -6.2454915046691895
    8. '
' → logprob: -6.3704915046691895
    9. ' ' → logprob: -6.7454915046691895
    10. '  
' → logprob: -7.2454915046691895

Token 60: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.004625222180038691
    2. 'a' → logprob: -5.37962532043457
    3. ' ' → logprob: -12.87962532043457
    4. ' ' → logprob: -13.25462532043457
    5. '	a' → logprob: -14.50462532043457
    6. '    ' → logprob: -16.62962532043457
    7. '   ' → logprob: -18.25462532043457
    8. '  ' → logprob: -18.37962532043457
    9. '_a' → logprob: -18.87962532043457
    10. ' а' → logprob: -19.00462532043457

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.848420551046729e-05
    2. '[' → logprob: -9.7500581741333
    3. 'i' → logprob: -17.250059127807617
    4. '[
' → logprob: -17.625059127807617
    5. '[int' → logprob: -18.000059127807617
    6. '[I' → logprob: -18.125059127807617
    7. '\[' → logprob: -18.250059127807617
    8. '```' → logprob: -18.375059127807617
    9. ' [' → logprob: -18.875059127807617
    10. '[]' → logprob: -18.875059127807617

Token 62: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.160291850566864
    2. '<' → logprob: -1.9102919101715088
    3. ' ' → logprob: -9.78529167175293
    4. ')' → logprob: -12.28529167175293
    5. ']' → logprob: -13.03529167175293
    6. '<int' → logprob: -14.16029167175293
    7. '<|end|>' → logprob: -14.53529167175293
    8. '[' → logprob: -14.84779167175293
    9. '```' → logprob: -14.91029167175293
    10. '>' → logprob: -15.09779167175293

Token 63: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38693028688430786
    2. '<' → logprob: -1.136930227279663
    3. ' ' → logprob: -9.886930465698242
    4. '<int' → logprob: -13.511930465698242
    5. '<|end|>' → logprob: -13.886930465698242
    6. '2' → logprob: -14.824430465698242
    7. '```' → logprob: -15.074430465698242
    8. '0' → logprob: -15.074430465698242
    9. '1' → logprob: -15.199430465698242
    10. 'a' → logprob: -15.199430465698242

Token 64: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.00524454889819026
    2. 'minimum' → logprob: -5.255244731903076
    3. ' ' → logprob: -11.630244255065918
    4. ' maximum' → logprob: -13.880244255065918
    5. '.minimum' → logprob: -14.755244255065918
    6. ' ' → logprob: -15.255244255065918
    7. 'Minimum' → logprob: -16.255245208740234
    8. ' minimal' → logprob: -16.755245208740234
    9. ' min' → logprob: -17.380245208740234
    10. 'maximum' → logprob: -17.755245208740234

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032828752882778645
    2. ' :' → logprob: -5.7532830238342285
    3. ':
' → logprob: -9.37828254699707
    4. '):' → logprob: -11.87828254699707
    5. ' :
' → logprob: -12.50328254699707
    6. '   ' → logprob: -12.62828254699707
    7. '       ' → logprob: -12.75328254699707
    8. '=' → logprob: -14.50328254699707
    9. '：' → logprob: -14.50328254699707
    10. ':**' → logprob: -14.62828254699707

Token 66: '       ' (ID: 309)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0340045727789402
    2. 'a' → logprob: -3.4090046882629395
    3. ' ' → logprob: -8.909004211425781
    4. '    ' → logprob: -9.409004211425781
    5. '   ' → logprob: -10.159004211425781
    6. ' minimum' → logprob: -10.159004211425781
    7. 'minimum' → logprob: -10.534004211425781
    8. ' ' → logprob: -10.659004211425781
    9. '       ' → logprob: -12.784004211425781
    10. '  ' → logprob: -13.034004211425781

Token 67: ' minimum' (ID: 11085)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519349455833435
    2. 'a' → logprob: -1.5019350051879883
    3. '	a' → logprob: -12.751935005187988
    4. 'minimum' (adapté à ' minimum') → logprob: -14.126935005187988
    5. ' ' → logprob: -14.376935005187988
    6. ' minimum' → logprob: -14.751935005187988
    7. '    ' → logprob: -14.876935005187988
    8. ' ' → logprob: -14.876935005187988
    9. '   ' → logprob: -15.626935005187988
    10. '>a' → logprob: -16.626934051513672

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409364581108093
    2. '=' → logprob: -0.9740936756134033
    3. ' ==' → logprob: -11.724093437194824
    4. ' =
' → logprob: -12.474093437194824
    5. '==' → logprob: -13.849093437194824
    6. ' ' → logprob: -13.849093437194824
    7. '<|end|>' → logprob: -14.224093437194824
    8. '[' → logprob: -14.849093437194824
    9. '=
' → logprob: -15.099093437194824
    10. '   ' → logprob: -15.099093437194824

Token 69: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25193241238594055
    2. 'a' → logprob: -1.5019323825836182
    3. '	a' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.251932144165039
    5. ' ' → logprob: -14.751932144165039
    6. '_a' → logprob: -16.12693214416504
    7. 'i' → logprob: -16.25193214416504
    8. '>a' → logprob: -17.12693214416504
    9. '[a' → logprob: -17.25193214416504
    10. '   ' → logprob: -17.25193214416504

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011049943044781685
    2. '[' → logprob: -4.511049747467041
    3. 'i' → logprob: -14.0110502243042
    4. '```' → logprob: -14.6360502243042
    5. '[
' → logprob: -15.1360502243042
    6. ' ' → logprob: -16.136049270629883
    7. ' [' → logprob: -16.136049270629883
    8. '[I' → logprob: -16.636049270629883
    9. '\[' → logprob: -16.761049270629883
    10. '[j' → logprob: -17.136049270629883

Token 71: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02148660272359848
    2. ']' → logprob: -4.396486759185791
    3. '):' → logprob: -5.021486759185791
    4. ':' → logprob: -6.271486759185791
    5. '[i' → logprob: -8.271486282348633
    6. '[' → logprob: -9.271486282348633
    7. '}' → logprob: -10.271486282348633
    8. '   ' → logprob: -10.646486282348633
    9. ')
' → logprob: -11.271486282348633
    10. ']:' → logprob: -11.396486282348633

Token 72: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05533468723297119
    2. 'p' → logprob: -4.305334568023682
    3. '
' → logprob: -4.305334568023682
    4. '<|end|>' → logprob: -4.805334568023682
    5. ' 
' → logprob: -5.680334568023682
    6. ')' → logprob: -5.805334568023682
    7. '#' → logprob: -5.930334568023682
    8. '\n' → logprob: -6.555334568023682
    9. '' → logprob: -6.680334568023682
    10. 'n' → logprob: -6.805334568023682

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6571120619773865
    2. '=' → logprob: -1.9071121215820312
    3. '[' → logprob: -1.9071121215820312
    4. '.' → logprob: -2.6571121215820312
    5. ' ' → logprob: -2.9071121215820312
    6. '_' → logprob: -3.1571121215820312
    7. ')' → logprob: -5.657112121582031
    8. '[:]' → logprob: -5.907112121582031
    9. 's' → logprob: -6.282112121582031
    10. ''' → logprob: -6.407112121582031

Token 74: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.10137627273797989
    2. 'maximum' → logprob: -2.3513762950897217
    3. ' max' → logprob: -7.976376056671143
    4. 'max' → logprob: -8.1013765335083
    5. ' minimum' → logprob: -8.4763765335083
    6. 'minimum' → logprob: -8.7263765335083
    7. ' ' → logprob: -9.2263765335083
    8. ' maxi' → logprob: -11.4763765335083
    9. ' ' → logprob: -11.8513765335083
    10. '"' → logprob: -11.9763765335083

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2199560403823853
    2. ' -' → logprob: -1.3449560403823853
    3. '<|end|>' → logprob: -1.3449560403823853
    4. ' ' → logprob: -2.3449559211730957
    5. '+' → logprob: -2.8449559211730957
    6. ' +' → logprob: -3.7199559211730957
    7. '-min' → logprob: -6.969955921173096
    8. ',' → logprob: -7.219955921173096
    9. '<|end|>' → logprob: -7.344955921173096
    10. '  ' → logprob: -7.719955921173096

Token 76: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.12692968547344208
    2. ' minimum' → logprob: -2.126929759979248
    3. 'min' → logprob: -13.62692928314209
    4. ' ' → logprob: -16.001930236816406
    5. '.minimum' → logprob: -16.501930236816406
    6. '1' → logprob: -16.626930236816406
    7. 'minimal' → logprob: -17.501930236816406
    8. ' ' → logprob: -17.626930236816406
    9. 'maximum' → logprob: -18.001930236816406
    10. 'mini' → logprob: -18.251930236816406

Token 77: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006101681385189295
    2. '<|end|>' → logprob: -5.381101608276367
    3. ' print' → logprob: -7.381101608276367
    4. ')' → logprob: -8.256101608276367
    5. '#' → logprob: -8.381101608276367
    6. '
' → logprob: -8.506101608276367
    7. '\n' → logprob: -10.381101608276367
    8. '.print' → logprob: -10.506101608276367
    9. '#print' → logprob: -10.631101608276367
    10. '```' → logprob: -10.881101608276367

Token 78: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.676981345459353e-06
    2. ' print' → logprob: -13.125005722045898
    3. 'p' → logprob: -14.125005722045898
    4. 'prin' → logprob: -14.625005722045898
    5. '#print' → logprob: -14.750005722045898
    6. 'pr' → logprob: -14.875005722045898
    7. '```' → logprob: -14.875005722045898
    8. '#' → logprob: -15.000005722045898
    9. '<|end|>' → logprob: -15.250005722045898
    10. ')' → logprob: -15.375005722045898

Token 79: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006762159755453467
    2. '(result' → logprob: -7.500676155090332
    3. '("("' → logprob: -9.375676155090332
    4. '('' → logprob: -10.250676155090332
    5. '()' → logprob: -14.250676155090332
    6. ' (' → logprob: -14.250676155090332
    7. '(`' → logprob: -14.750676155090332
    8. '((' → logprob: -15.125676155090332
    9. '```' → logprob: -15.625676155090332
    10. '(
' → logprob: -15.625676155090332

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.5
    3. '))' → logprob: -18.125
    4. ')`' → logprob: -18.375
    5. '')' → logprob: -19.125
    6. ')
' → logprob: -19.625
    7. '(' → logprob: -19.625
    8. '`)' → logprob: -20.625
    9. '）' → logprob: -21.0
    10. '}' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 44.87%
Précision adaptée (1ère position): 44.87%
Précision (top 10): 78.21%
================================================================================
