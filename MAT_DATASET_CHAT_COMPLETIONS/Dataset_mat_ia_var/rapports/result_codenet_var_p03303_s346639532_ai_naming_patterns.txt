================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_string = input()
step_size = int(input())

result_substring = input_string[::step_size]
print(result_substring)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024985339492559433
    2. ''' → logprob: -3.8999853134155273
    3. ' ' → logprob: -6.149985313415527
    4. ' "' → logprob: -6.399985313415527
    5. '""' → logprob: -8.399985313415527
    6. '"""' → logprob: -8.774985313415527
    7. '"user' → logprob: -9.524985313415527
    8. ' '' → logprob: -9.899985313415527
    9. 'input' → logprob: -10.274985313415527
    10. '```' → logprob: -10.774985313415527

Token 4: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005510857328772545
    2. ''' → logprob: -5.5055108070373535
    3. '"' → logprob: -8.130511283874512
    4. '('' → logprob: -8.130511283874512
    5. '```' → logprob: -8.130511283874512
    6. '`' → logprob: -8.755511283874512
    7. '(
' → logprob: -8.880511283874512
    8. ')' → logprob: -9.630511283874512
    9. '()' → logprob: -10.255511283874512
    10. '[' → logprob: -10.630511283874512

Token 5: 'step' (ID: 17509)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02609126642346382
    2. '.strip' → logprob: -3.7760913372039795
    3. '.split' → logprob: -7.0260910987854
    4. '.lower' → logprob: -7.1510910987854
    5. 'if' → logprob: -8.026091575622559
    6. 'print' → logprob: -8.276091575622559
    7. '=' → logprob: -8.651091575622559
    8. 'strip' → logprob: -9.901091575622559
    9. '.replace' → logprob: -9.901091575622559
    10. ' if' → logprob: -10.026091575622559

Token 6: '_size' (ID: 5044)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.537752628326416
    2. 's' → logprob: -1.162752628326416
    3. '(' → logprob: -3.162752628326416
    4. '=' → logprob: -3.662752628326416
    5. '_size' → logprob: -4.162752628326416
    6. ' =' → logprob: -5.037752628326416
    7. ')' → logprob: -5.162752628326416
    8. '[' → logprob: -6.287752628326416
    9. '_s' → logprob: -6.662752628326416
    10. '(s' → logprob: -7.037752628326416

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5411500930786133
    2. '=' → logprob: -1.2911500930786133
    3. '[' → logprob: -2.5411500930786133
    4. ')' → logprob: -3.9161500930786133
    5. '+' → logprob: -4.041150093078613
    6. ' =' → logprob: -4.291150093078613
    7. ' ' → logprob: -5.541150093078613
    8. ']' → logprob: -6.166150093078613
    9. '```' → logprob: -6.416150093078613
    10. '.' → logprob: -6.791150093078613

Token 8: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4743054509162903
    2. '1' → logprob: -0.9743054509162903
    3. '0' → logprob: -9.224305152893066
    4. '2' → logprob: -10.224305152893066
    5. '4' → logprob: -10.724305152893066
    6. 'int' → logprob: -11.099305152893066
    7. ' len' → logprob: -11.099305152893066
    8. ' int' → logprob: -11.474305152893066
    9. 'input' → logprob: -11.849305152893066
    10. 'len' → logprob: -11.849305152893066

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016528120264410973
    2. '('' → logprob: -4.641528129577637
    3. ''' → logprob: -5.266528129577637
    4. '```' → logprob: -8.266528129577637
    5. '[' → logprob: -8.391528129577637
    6. '"' → logprob: -8.391528129577637
    7. '("("' → logprob: -8.641528129577637
    8. '`' → logprob: -8.641528129577637
    9. ')' → logprob: -9.016528129577637
    10. '_' → logprob: -9.391528129577637

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8349765539169312
    2. '()' → logprob: -1.3349765539169312
    3. '())' → logprob: -1.4599765539169312
    4. '(' → logprob: -2.8349766731262207
    5. '('' → logprob: -5.084976673126221
    6. '_' → logprob: -6.084976673126221
    7. '_)' → logprob: -7.459976673126221
    8. '')' → logprob: -7.709976673126221
    9. '")' → logprob: -7.834976673126221
    10. '`)' → logprob: -7.834976673126221

Token 11: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4301559031009674
    2. 'result' → logprob: -1.305155873298645
    3. '[' → logprob: -3.8051559925079346
    4. 's' → logprob: -4.4301557540893555
    5. 'i' → logprob: -4.5551557540893555
    6. 'output' → logprob: -4.6801557540893555
    7. 'f' → logprob: -5.3051557540893555
    8. 'n' → logprob: -5.4301557540893555
    9. 'if' → logprob: -6.4301557540893555
    10. '=' → logprob: -6.8051557540893555

Token 12: '_sub' (ID: 11572)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5843300223350525
    2. '[' → logprob: -1.0843300819396973
    3. '_' → logprob: -2.9593300819396973
    4. ' =' → logprob: -3.2093300819396973
    5. '[:]' → logprob: -4.834330081939697
    6. '+' → logprob: -7.459330081939697
    7. '```' → logprob: -7.584330081939697
    8. '(' → logprob: -7.584330081939697
    9. '[]' → logprob: -7.709330081939697
    10. 's' → logprob: -7.709330081939697

Token 13: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0067703151144087315
    2. 'str' → logprob: -5.006770133972168
    3. '_string' → logprob: -11.006770133972168
    4. '_str' → logprob: -11.381770133972168
    5. 'script' → logprob: -11.631770133972168
    6. 's' → logprob: -12.506770133972168
    7. '=' → logprob: -12.631770133972168
    8. 'tring' → logprob: -12.881770133972168
    9. 'strings' → logprob: -13.131770133972168
    10. 'stract' → logprob: -13.256770133972168

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36926424503326416
    2. '[' → logprob: -1.8692642450332642
    3. ' =' → logprob: -1.9942642450332642
    4. '_' → logprob: -4.244264125823975
    5. '(' → logprob: -5.744264125823975
    6. '[:]' → logprob: -7.994264125823975
    7. 's' → logprob: -8.369264602661133
    8. '[]' → logprob: -9.744264602661133
    9. '[:' → logprob: -10.244264602661133
    10. ' ' → logprob: -10.369264602661133

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02059035561978817
    2. 'input' → logprob: -3.895590305328369
    3. '"' → logprob: -10.520590782165527
    4. ' ' → logprob: -11.020590782165527
    5. ' "' → logprob: -13.145590782165527
    6. '(input' → logprob: -13.895590782165527
    7. ''' → logprob: -14.770590782165527
    8. ' step' → logprob: -15.270590782165527
    9. '[input' → logprob: -15.270590782165527
    10. ' result' → logprob: -15.895590782165527

Token 16: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.012554984539747238
    2. '(' → logprob: -4.637555122375488
    3. '_' → logprob: -6.137555122375488
    4. 'string' → logprob: -8.637555122375488
    5. '```' → logprob: -9.012555122375488
    6. '_str' → logprob: -9.762555122375488
    7. '('_' → logprob: -10.262555122375488
    8. 'String' → logprob: -10.387555122375488
    9. '("_' → logprob: -10.387555122375488
    10. '_s' → logprob: -10.512555122375488

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020282946527004242
    2. '[:' → logprob: -4.520282745361328
    3. '[:]' → logprob: -4.770282745361328
    4. '[
' → logprob: -7.895282745361328
    5. '[:-' → logprob: -9.145282745361328
    6. '[-' → logprob: -9.145282745361328
    7. '[start' → logprob: -9.895282745361328
    8. '[::-' → logprob: -10.895282745361328
    9. '[int' → logprob: -11.520282745361328
    10. '[]' → logprob: -11.770282745361328

Token 18: '::' (ID: 742)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14548060297966003
    2. '0' → logprob: -2.1454806327819824
    3. 'step' → logprob: -4.145480632781982
    4. ' step' → logprob: -7.020480632781982
    5. ' :' → logprob: -7.145480632781982
    6. '::' → logprob: -8.145480155944824
    7. ':start' → logprob: -8.520480155944824
    8. ' ' → logprob: -8.895480155944824
    9. ':s' → logprob: -9.770480155944824
    10. ':end' → logprob: -10.020480155944824

Token 19: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -6.2729995988775045e-06
    2. ' step' → logprob: -12.000006675720215
    3. '-step' → logprob: -18.0000057220459
    4. '(step' → logprob: -18.8750057220459
    5. '	step' → logprob: -20.7500057220459
    6. 'steps' → logprob: -21.6250057220459
    7. '1' → logprob: -22.0000057220459
    8. '-' → logprob: -22.2500057220459
    9. '.step' → logprob: -22.5000057220459
    10. 'Step' → logprob: -22.6250057220459

Token 20: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -7.398067828034982e-05
    2. '_s' → logprob: -9.75007438659668
    3. '_' → logprob: -11.87507438659668
    4. 'size' → logprob: -12.75007438659668
    5. ' _' → logprob: -13.00007438659668
    6. 's' → logprob: -13.37507438659668
    7. '_step' → logprob: -14.12507438659668
    8. ']' → logprob: -15.37507438659668
    9. '+' → logprob: -15.62507438659668
    10. '_si' → logprob: -15.87507438659668

Token 21: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000104616025055293
    2. ')' → logprob: -9.375104904174805
    3. ')]' → logprob: -11.000104904174805
    4. ' ]' → logprob: -13.375104904174805
    5. '])' → logprob: -14.375104904174805
    6. ']
' → logprob: -14.625104904174805
    7. ']

' → logprob: -15.500104904174805
    8. '']' → logprob: -16.625104904174805
    9. ']
' → logprob: -17.250104904174805
    10. '`]' → logprob: -17.625104904174805

Token 22: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09815242886543274
    2. 'p' → logprob: -3.3481523990631104
    3. '#' → logprob: -3.9731523990631104
    4. '<|end|>' → logprob: -4.4731526374816895
    5. ')' → logprob: -4.5981526374816895
    6. 'prin' → logprob: -5.4731526374816895
    7. '```' → logprob: -5.7231526374816895
    8. 'pr' → logprob: -6.2231526374816895
    9. '\n' → logprob: -6.7231526374816895
    10. '#print' → logprob: -6.9731526374816895

Token 23: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31330248713493347
    2. '(result' → logprob: -1.3133025169372559
    3. 'result' → logprob: -10.813302040100098
    4. '(input' → logprob: -12.438302040100098
    5. '(output' → logprob: -12.563302040100098
    6. '("("' → logprob: -12.813302040100098
    7. '()' → logprob: -12.938302040100098
    8. '(
' → logprob: -13.063302040100098
    9. '('' → logprob: -13.688302040100098
    10. '(`' → logprob: -13.938302040100098

Token 24: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0827624723315239
    2. ')' → logprob: -2.7077624797821045
    3. '_)' → logprob: -4.582762241363525
    4. '_' → logprob: -6.582762241363525
    5. '])' → logprob: -7.082762241363525
    6. '_string' → logprob: -8.582762718200684
    7. '_s' → logprob: -10.582762718200684
    8. ')_' → logprob: -11.082762718200684
    9. '_result' → logprob: -11.332762718200684
    10. 'substring' → logprob: -11.582762718200684

Token 25: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -5.2762428822461516e-05
    2. 'tring' → logprob: -10.250052452087402
    3. 'ring' → logprob: -11.125052452087402
    4. 'str' → logprob: -13.000052452087402
    5. 'ing' → logprob: -15.625052452087402
    6. 'substring' → logprob: -17.00005340576172
    7. '_string' → logprob: -17.00005340576172
    8. 'sting' → logprob: -17.75005340576172
    9. 'r' → logprob: -17.87505340576172
    10. 'String' → logprob: -19.00005340576172

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. '))' → logprob: -17.625
    3. ' )' → logprob: -17.875
    4. '`)' → logprob: -18.25
    5. ')
' → logprob: -18.625
    6. '')' → logprob: -19.25
    7. ')`' → logprob: -19.5
    8. '")' → logprob: -20.375
    9. ')#' → logprob: -20.75
    10. '#' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 41.67%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 75.00%
================================================================================
