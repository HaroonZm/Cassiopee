================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer une valeur entière, puis la stocke dans la variable N.
# input() prend l'entrée standard de l'utilisateur, int() convertit la chaîne en nombre entier.
N = int(input())

# Demande à l'utilisateur de saisir une liste de nombres séparés par des espaces.
# map(int, ...) applique la conversion int à chaque élément de la liste obtenue par input().split().
# list(...) convertit l'itérable map en une liste.
# sorted(..., reverse=True) trie la liste par ordre décroissant.
# La liste triée est stockée dans la variable C.
C = sorted(list(map(int, input().split())), reverse=True)

# Définit une constante 'mod' qui sera utilisée pour calculer des résultats modulo 10**9 + 7,
# ce qui est une grande valeur première souvent utilisée pour éviter les dépassements lors de gros calculs.
mod = 10**9 + 7

# Définition d'une fonction mpow(x, n) qui va calculer (x ** n) modulo 'mod' d'une manière efficace
# utilisant l'exponentiation rapide binaire, plus rapide que d'utiliser x ** n directement.
def mpow(x, n):
    num = 1  # Initialise la variable 'num' à 1, qui sera utilisée pour accumuler le résultat.
    while n > 0:  # Tant que l'exposant n n'est pas nul.
        if n & 1:  # Vérifie si le bit de poids faible de n est égal à 1 (c'est-à-dire si n est impair).
            # Si oui, multiplie num par x et applique l'opération modulo 'mod'.
            num = num * x % mod
        # Met à jour la valeur de x en x * x modulo 'mod' pour la prochaine itération.
        x = x * x % mod
        # Décale tous les bits de n vers la droite d'une position (équivalent à n = n // 2).
        n = n >> 1
    # Retourne le résultat final de la puissance modulaire.
    return num

# Initialise une variable 'count' à 0. Cette variable va servir à accumuler un certain calcul lors de la boucle suivante.
count = 0

# Boucle sur les éléments de la liste C, en utilisant enumerate pour obtenir à la fois l'index (i) et la valeur (c).
# Le second argument de enumerate (c'est-à-dire '2') fait en sorte que le comptage des indices commence à 2 au lieu de 0.
for i, c in enumerate(C, 2):
    # Ajoute à 'count' la valeur de l'élément c multipliée par son index i (i partant de 2).
    count += c * (i)
    # Applique l'opération modulo 'mod' à 'count' après chaque ajout pour éviter les débordements.
    count %= mod

# Calcule le résultat final à afficher :
# - Multiplie 'count' par mpow(2, N-1) (résultat de 2 exposant (N-1) modulo mod).
# - Multiplie encore par mpow(2, N-1), donc au total : count * (2^(N-1)) * (2^(N-1)) % mod.
# - Applique l'opération modulo 'mod' pour rester dans la plage des valeurs possibles.
# - Enfin, affiche le résultat avec print().
print(count * mpow(2, N-1) * mpow(2, N-1) % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2231212854385376
    2. ' ' → logprob: -1.4731212854385376
    3. ':' → logprob: -1.8481212854385376
    4. '_' → logprob: -1.8481212854385376
    5. ' de' → logprob: -2.598121166229248
    6. ''' → logprob: -3.598121166229248
    7. ' :' → logprob: -4.098121166229248
    8. ' d' → logprob: -4.348121166229248
    9. ' =' → logprob: -4.973121166229248
    10. '```' → logprob: -4.973121166229248

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00851953960955143
    2. ' l' → logprob: -5.008519649505615
    3. 'util' → logprob: -7.133519649505615
    4. 'user' → logprob: -7.633519649505615
    5. '#' → logprob: -8.508519172668457
    6. ''' → logprob: -10.383519172668457
    7. '```' → logprob: -10.383519172668457
    8. 'input' → logprob: -10.508519172668457
    9. 'la' → logprob: -10.633519172668457
    10. '`' → logprob: -10.758519172668457

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.6239869594573975
    2. 'util' → logprob: -1.4989869594573975
    3. 'u' → logprob: -1.6239869594573975
    4. ' utilisateur' → logprob: -4.248987197875977
    5. 'a' → logprob: -4.498987197875977
    6. ''' → logprob: -4.873987197875977
    7. '’utilisateur' → logprob: -4.998987197875977
    8. 'us' → logprob: -6.748987197875977
    9. '_util' → logprob: -7.498987197875977
    10. 'Utilisateur' → logprob: -7.748987197875977

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.49866652488708496
    2. 'name' → logprob: -1.373666524887085
    3. 'user' → logprob: -2.623666524887085
    4. 'input' → logprob: -4.248666763305664
    5. 'print' → logprob: -4.748666763305664
    6. 's' → logprob: -4.998666763305664
    7. ' nom' → logprob: -5.248666763305664
    8. 'n' → logprob: -5.498666763305664
    9. 'username' → logprob: -5.748666763305664
    10. '=input' → logprob: -5.998666763305664

Token 7: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2170514166355133
    2. 'e' → logprob: -2.5920515060424805
    3. ''entrée' → logprob: -2.5920515060424805
    4. ''une' → logprob: -4.7170515060424805
    5. ''ent' → logprob: -4.8420515060424805
    6. 'entrée' → logprob: -5.7170515060424805
    7. ''é' → logprob: -6.0920515060424805
    8. '_' → logprob: -6.0920515060424805
    9. ''un' → logprob: -6.0920515060424805
    10. ''utilisateur' → logprob: -6.0920515060424805

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.19223064184188843
    2. 'entrée' → logprob: -1.9422307014465332
    3. 'ent' → logprob: -3.567230701446533
    4. 's' → logprob: -7.192230701446533
    5. 'entre' → logprob: -7.317230701446533
    6. 'input' → logprob: -7.442230701446533
    7. 'enter' → logprob: -8.192230224609375
    8. 'entra' → logprob: -8.942230224609375
    9. 'être' → logprob: -9.192230224609375
    10. 'é' → logprob: -9.567230224609375

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00015002528380136937
    2. 'éer' → logprob: -9.250149726867676
    3. 'é' → logprob: -10.625149726867676
    4. 'e' → logprob: -11.500149726867676
    5. 'ér' → logprob: -13.000149726867676
    6. 'érer' → logprob: -13.000149726867676
    7. ''er' → logprob: -13.000149726867676
    8. 'ée' → logprob: -13.000149726867676
    9. '­er' → logprob: -13.000149726867676
    10. 'erer' → logprob: -13.375149726867676

Token 10: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08928621560335159
    2. ' un' → logprob: -3.2142863273620605
    3. ''' → logprob: -4.0892863273620605
    4. ' une' → logprob: -4.7142863273620605
    5. '_' → logprob: -4.8392863273620605
    6. 'u' → logprob: -5.9642863273620605
    7. 'une' → logprob: -6.7142863273620605
    8. ' u' → logprob: -6.9642863273620605
    9. 'un' → logprob: -6.9642863273620605
    10. ''un' → logprob: -6.9642863273620605

Token 11: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06612423807382584
    2. ' chaîne' → logprob: -2.941124200820923
    3. 'chaine' → logprob: -5.441124439239502
    4. ' phrase' → logprob: -6.191124439239502
    5. ' chaine' → logprob: -6.441124439239502
    6. ' ligne' → logprob: -7.691124439239502
    7. 'phrase' → logprob: -7.941124439239502
    8. ' ' → logprob: -8.066123962402344
    9. '  ' → logprob: -8.691123962402344
    10. '_' → logprob: -8.691123962402344

Token 12: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.40154609084129333
    2. 'value' → logprob: -1.7765461206436157
    3. 'input' → logprob: -3.276546001434326
    4. 'val' → logprob: -3.401546001434326
    5. 'user' → logprob: -3.526546001434326
    6. 'x' → logprob: -4.526546001434326
    7. 'n' → logprob: -4.776546001434326
    8. 'i' → logprob: -4.901546001434326
    9. '_' → logprob: -5.151546001434326
    10. '\n' → logprob: -5.151546001434326

Token 13: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9980595707893372
    2. 'i' → logprob: -1.6230595111846924
    3. 'v' → logprob: -1.7480595111846924
    4. 'x' → logprob: -1.7480595111846924
    5. 'value' → logprob: -3.9980595111846924
    6. 'input' → logprob: -4.1230597496032715
    7. '\n' → logprob: -4.2480597496032715
    8. 'val' → logprob: -4.9980597496032715
    9. '#' → logprob: -5.2480597496032715
    10. 'ent' → logprob: -5.6230597496032715

Token 14: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16842436790466309
    2. 'n' → logprob: -3.418424367904663
    3. '_' → logprob: -3.668424367904663
    4. 'a' → logprob: -4.168424606323242
    5. 'input' → logprob: -4.293424606323242
    6. 'x' → logprob: -4.918424606323242
    7. ',' → logprob: -5.043424606323242
    8. ''' → logprob: -5.043424606323242
    9. '```' → logprob: -5.168424606323242
    10. 'i' → logprob: -5.168424606323242

Token 15: ' la' (ID: 557)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.22447724640369415
    2. 'effect' → logprob: -3.4744772911071777
    3. 'cal' → logprob: -3.8494772911071777
    4. 'stock' → logprob: -4.099477291107178
    5. ' stock' → logprob: -4.349477291107178
    6. ' affiche' → logprob: -4.349477291107178
    7. 's' → logprob: -4.474477291107178
    8. 'v' → logprob: -4.599477291107178
    9. 'print' → logprob: -4.599477291107178
    10. 'calcul' → logprob: -4.724477291107178

Token 16: ' stock' (ID: 6546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44328752160072327
    2. 'print' → logprob: -2.0682876110076904
    3. 'est' → logprob: -3.1932876110076904
    4. 'v' → logprob: -3.5682876110076904
    5. '+' → logprob: -3.8182876110076904
    6. 'aff' → logprob: -3.9432876110076904
    7. 'r' → logprob: -4.318287372589111
    8. 'n' → logprob: -4.443287372589111
    9. 'val' → logprob: -4.443287372589111
    10. '#' → logprob: -4.443287372589111

Token 17: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22572703659534454
    2. 'r' → logprob: -1.8507270812988281
    3. ' ' → logprob: -3.475727081298828
    4. 'e' → logprob: -4.600727081298828
    5. '=' → logprob: -6.975727081298828
    6. ' =' → logprob: -7.350727081298828
    7. 'a' → logprob: -7.975727081298828
    8. ',' → logprob: -8.225727081298828
    9. '   ' → logprob: -8.350727081298828
    10. ' ' → logprob: -8.350727081298828

Token 18: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1008565425872803
    2. 'v' → logprob: -1.1008565425872803
    3. 'i' → logprob: -1.8508565425872803
    4. 'x' → logprob: -2.8508565425872803
    5. 'n' → logprob: -3.3508565425872803
    6. '`' → logprob: -3.7258565425872803
    7. '```' → logprob: -4.350856781005859
    8. 'input' → logprob: -4.850856781005859
    9. ' ' → logprob: -4.975856781005859
    10. 'e' → logprob: -5.225856781005859

Token 19: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3040450811386108
    2. ' une' → logprob: -1.5540450811386108
    3. 'la' → logprob: -1.8040450811386108
    4. ' ' → logprob: -2.3040452003479004
    5. 'une' → logprob: -2.4290452003479004
    6. '_' → logprob: -3.3040452003479004
    7. 'a' → logprob: -3.9290452003479004
    8. '`' → logprob: -4.0540452003479
    9. ' ' → logprob: -4.0540452003479
    10. 'variable' → logprob: -4.1790452003479

Token 20: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.19042542576789856
    2. 'variable' → logprob: -1.8154253959655762
    3. ' ' → logprob: -5.565425395965576
    4. ' valeur' → logprob: -5.565425395965576
    5. 'val' → logprob: -6.190425395965576
    6. 'var' → logprob: -8.565425872802734
    7. ' val' → logprob: -9.315425872802734
    8. 'v' → logprob: -9.315425872802734
    9. '_' → logprob: -9.815425872802734
    10. ' input' → logprob: -9.940425872802734

Token 21: ' N' (ID: 478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16127075254917145
    2. ' ' → logprob: -3.4112708568573
    3. '`' → logprob: -3.6612708568573
    4. 's' → logprob: -4.161270618438721
    5. 'x' → logprob: -4.161270618438721
    6. '```' → logprob: -4.411270618438721
    7. 'i' → logprob: -4.786270618438721
    8. 'a' → logprob: -4.786270618438721
    9. 'n' → logprob: -5.036270618438721
    10. 'v' → logprob: -5.286270618438721

Token 22: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011536635458469391
    2. 'n' → logprob: -4.511536598205566
    3. 'x' → logprob: -8.636536598205566
    4. '#' → logprob: -9.136536598205566
    5. 'i' → logprob: -9.386536598205566
    6. '```' → logprob: -10.136536598205566
    7. '`' → logprob: -10.636536598205566
    8. 'I' → logprob: -11.761536598205566
    9. 'input' → logprob: -11.761536598205566
    10. '_' → logprob: -12.011536598205566

Token 23: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009857849217951298
    2. 'n' → logprob: -4.634857654571533
    3. '#' → logprob: -10.384858131408691
    4. '```' → logprob: -10.509858131408691
    5. 'i' → logprob: -11.384858131408691
    6. 'x' → logprob: -11.759858131408691
    7. '`' → logprob: -11.884858131408691
    8. 'v' → logprob: -12.759858131408691
    9. '_' → logprob: -13.134858131408691
    10. 'I' → logprob: -13.134858131408691

Token 24: ' input' (ID: 3422)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00045700959162786603
    2. 'n' → logprob: -7.875456809997559
    3. ' N' → logprob: -9.625456809997559
    4. '#' → logprob: -12.250456809997559
    5. '```' → logprob: -13.125456809997559
    6. 'print' → logprob: -14.000456809997559
    7. 'x' → logprob: -14.375456809997559
    8. ' ' → logprob: -14.750456809997559
    9. 'input' → logprob: -15.375456809997559
    10. 'user' → logprob: -15.500456809997559

Token 25: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1371588408946991
    2. ' =' → logprob: -2.6371588706970215
    3. '_' → logprob: -3.8871588706970215
    4. 'N' → logprob: -4.5121588706970215
    5. '=' → logprob: -4.6371588706970215
    6. '()' → logprob: -4.8871588706970215
    7. ' ' → logprob: -5.7621588706970215
    8. '(
' → logprob: -6.6371588706970215
    9. ' N' → logprob: -7.5121588706970215
    10. ' (' → logprob: -7.8871588706970215

Token 26: ' prend' (ID: 37463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4829041063785553
    2. 'N' → logprob: -0.9829040765762329
    3. 'n' → logprob: -5.357903957366943
    4. '(
' → logprob: -6.982903957366943
    5. 'int' → logprob: -7.357903957366943
    6. '=' → logprob: -7.357903957366943
    7. ' N' → logprob: -7.482903957366943
    8. '()' → logprob: -8.482904434204102
    9. ' (' → logprob: -8.857904434204102
    10. ' =' → logprob: -8.857904434204102

Token 27: ' l' (ID: 305)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.28668615221977234
    2. ' l' → logprob: -2.1616861820220947
    3. ' la' → logprob: -2.6616861820220947
    4. ' ' → logprob: -4.036685943603516
    5. 'l' → logprob: -4.286685943603516
    6. 'une' → logprob: -4.286685943603516
    7. ' un' → logprob: -5.411685943603516
    8. ''' → logprob: -5.661685943603516
    9. '()' → logprob: -5.911685943603516
    10. 'la' → logprob: -6.661685943603516

Token 28: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.36928462982177734
    2. 'a' → logprob: -1.4942846298217773
    3. ''' → logprob: -2.8692846298217773
    4. ''utilisateur' → logprob: -4.119284629821777
    5. ''ent' → logprob: -5.744284629821777
    6. 'e' → logprob: -5.994284629821777
    7. ''a' → logprob: -6.619284629821777
    8. ''espace' → logprob: -6.869284629821777
    9. ''ordre' → logprob: -7.994284629821777
    10. ''ex' → logprob: -8.369284629821777

Token 29: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49906662106513977
    2. ')' → logprob: -2.6240665912628174
    3. '(' → logprob: -2.7490665912628174
    4. ',' → logprob: -3.1240665912628174
    5. ' )' → logprob: -3.2490665912628174
    6. 'user' → logprob: -3.3740665912628174
    7. '_' → logprob: -3.3740665912628174
    8. '.' → logprob: -4.2490668296813965
    9. ' utilisateur' → logprob: -4.4990668296813965
    10. ' (' → logprob: -4.6240668296813965

Token 30: ' de' (ID: 334)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1139768585562706
    2. 'n' → logprob: -2.2389769554138184
    3. '```' → logprob: -7.863976955413818
    4. ' N' → logprob: -7.988976955413818
    5. '#' → logprob: -9.11397647857666
    6. 'x' → logprob: -9.61397647857666
    7. ':' → logprob: -9.86397647857666
    8. ')' → logprob: -9.98897647857666
    9. ',' → logprob: -10.61397647857666
    10. '`' → logprob: -11.23897647857666

Token 31: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5775086283683777
    2. 'l' → logprob: -0.8275086283683777
    3. '	l' → logprob: -7.577508449554443
    4. ''utilisateur' → logprob: -7.952508449554443
    5. 'util' → logprob: -8.077508926391602
    6. ' ' → logprob: -9.452508926391602
    7. 'user' → logprob: -9.577508926391602
    8. 's' → logprob: -9.577508926391602
    9. ' utilisateur' → logprob: -10.327508926391602
    10. '_l' → logprob: -11.202508926391602

Token 32: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.008451338857412338
    2. ''' → logprob: -5.008451461791992
    3. ''u' → logprob: -7.508451461791992
    4. 'u' → logprob: -7.758451461791992
    5. ''util' → logprob: -8.008451461791992
    6. ''user' → logprob: -8.758451461791992
    7. '’utilisateur' → logprob: -9.383451461791992
    8. 'a' → logprob: -9.383451461791992
    9. ''us' → logprob: -9.883451461791992
    10. ''a' → logprob: -10.633451461791992

Token 33: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001192490803077817
    2. 'n' → logprob: -6.751192569732666
    3. '#' → logprob: -11.501192092895508
    4. '`' → logprob: -12.751192092895508
    5. '```' → logprob: -12.876192092895508
    6. 'x' → logprob: -13.751192092895508
    7. ' N' → logprob: -13.876192092895508
    8. ',' → logprob: -14.251192092895508
    9. ' ' → logprob: -14.626192092895508
    10. '=' → logprob: -14.876192092895508

Token 34: ' int' (ID: 677)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1015342473983765
    2. ' N' → logprob: -1.1015342473983765
    3. ' )' → logprob: -2.351534366607666
    4. ')' → logprob: -2.476534366607666
    5. 'n' → logprob: -2.851534366607666
    6. ' n' → logprob: -4.101534366607666
    7. '")' → logprob: -4.476534366607666
    8. ' ' → logprob: -4.601534366607666
    9. 'int' → logprob: -4.726534366607666
    10. '"' → logprob: -4.726534366607666

Token 35: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005107374745421112
    2. '()' → logprob: -7.7505106925964355
    3. '(
' → logprob: -10.125511169433594
    4. '(input' → logprob: -11.125511169433594
    5. '('' → logprob: -11.750511169433594
    6. '(

' → logprob: -12.500511169433594
    7. ')' → logprob: -12.875511169433594
    8. '("")' → logprob: -13.250511169433594
    9. '("""' → logprob: -13.500511169433594
    10. '("' → logprob: -13.625511169433594

Token 36: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006786000449210405
    2. ')' → logprob: -8.375679016113281
    3. '(
' → logprob: -8.500679016113281
    4. '()' → logprob: -9.500679016113281
    5. '(n' → logprob: -10.375679016113281
    6. '#' → logprob: -10.625679016113281
    7. '('' → logprob: -10.750679016113281
    8. '("")' → logprob: -10.750679016113281
    9. ' (' → logprob: -11.750679016113281
    10. ',' → logprob: -11.750679016113281

Token 37: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.007124049589037895
    2. 'i' → logprob: -5.007123947143555
    3. ' it' → logprob: -9.007123947143555
    4. '()' → logprob: -9.382123947143555
    5. 'issant' → logprob: -10.132123947143555
    6. 'ir' → logprob: -10.382123947143555
    7. '(' → logprob: -10.632123947143555
    8. 'ie' → logprob: -11.007123947143555
    9. '```' → logprob: -11.007123947143555
    10. 'e' → logprob: -11.132123947143555

Token 38: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06604200601577759
    2. '(input' → logprob: -2.816041946411133
    3. 'la' → logprob: -6.691041946411133
    4. '()' → logprob: -7.316041946411133
    5. 'l' → logprob: -7.441041946411133
    6. '(
' → logprob: -8.191041946411133
    7. '(l' → logprob: -8.316041946411133
    8. ' la' → logprob: -8.566041946411133
    9. '_' → logprob: -8.816041946411133
    10. 'input' → logprob: -8.941041946411133

Token 39: ' chaîne' (ID: 89288)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8620463609695435
    2. 'input' → logprob: -1.3620463609695435
    3. 'texte' → logprob: -2.112046241760254
    4. 'entrée' → logprob: -2.487046241760254
    5. 'string' → logprob: -3.862046241760254
    6. ' string' → logprob: -4.112046241760254
    7. ' chaîne' → logprob: -4.362046241760254
    8. ' texte' → logprob: -4.737046241760254
    9. 'chaine' → logprob: -4.737046241760254
    10. 'str' → logprob: -4.862046241760254

Token 40: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032206105533987284
    2. '(
' → logprob: -7.003220558166504
    3. '()' → logprob: -7.503220558166504
    4. '```' → logprob: -7.878220558166504
    5. ')' → logprob: -8.128220558166504
    6. 'e' → logprob: -9.003220558166504
    7. '_' → logprob: -9.003220558166504
    8. ' ' → logprob: -9.003220558166504
    9. '#' → logprob: -9.128220558166504
    10. '('' → logprob: -9.378220558166504

Token 41: ' nombre' (ID: 9733)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1988213062286377
    2. 'ent' → logprob: -2.3238213062286377
    3. ' entier' → logprob: -2.9488213062286377
    4. 'un' → logprob: -3.8238213062286377
    5. 'int' → logprob: -5.573821067810059
    6. ' ' → logprob: -6.198821067810059
    7. ' int' → logprob: -6.823821067810059
    8. ' ent' → logprob: -7.948821067810059
    9. ' nombre' → logprob: -8.198821067810059
    10. ' une' → logprob: -8.448821067810059

Token 42: ' entier' (ID: 80473)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5001369118690491
    2. 'n' → logprob: -1.0001368522644043
    3. ':' → logprob: -4.625136852264404
    4. ' ' → logprob: -5.625136852264404
    5. '(' → logprob: -5.750136852264404
    6. ',' → logprob: -6.750136852264404
    7. '#' → logprob: -7.000136852264404
    8. '.' → logprob: -7.125136852264404
    9. 'x' → logprob: -7.125136852264404
    10. '_' → logprob: -7.250136852264404

Token 43: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0032496044877916574
    2. 'n' → logprob: -5.753249645233154
    3. '#' → logprob: -9.753249168395996
    4. 'x' → logprob: -12.753249168395996
    5. '```' → logprob: -13.378249168395996
    6. '
' → logprob: -13.628249168395996
    7. ' 
' → logprob: -13.753249168395996
    8. ' N' → logprob: -13.878249168395996
    9. '' → logprob: -14.253249168395996
    10. 'v' → logprob: -14.378249168395996

Token 44: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019449377432465553
    2. 'n' → logprob: -6.2519450187683105
    3. '#' → logprob: -11.501944541931152
    4. '```' → logprob: -12.626944541931152
    5. '
' → logprob: -14.126944541931152
    6. '\n' → logprob: -14.251944541931152
    7. '`' → logprob: -14.876944541931152
    8. '\' → logprob: -15.376944541931152
    9. '

' → logprob: -15.376944541931152
    10. ' N' → logprob: -15.876944541931152

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488758534193039
    2. '=' → logprob: -2.929887533187866
    3. ' ' → logprob: -13.429887771606445
    4. ' ' → logprob: -13.554887771606445
    5. ',' → logprob: -14.179887771606445
    6. '=input' → logprob: -14.429887771606445
    7. 'space' → logprob: -14.804887771606445
    8. ' =
' → logprob: -15.054887771606445
    9. '=int' → logprob: -15.304887771606445
    10. '.' → logprob: -15.554887771606445

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10020817816257477
    2. 'int' → logprob: -2.350208282470703
    3. ' input' → logprob: -14.225208282470703
    4. 'input' → logprob: -15.100208282470703
    5. '=int' → logprob: -15.350208282470703
    6. ' ' → logprob: -16.225208282470703
    7. '(int' → logprob: -16.350208282470703
    8. ' ' → logprob: -16.475208282470703
    9. '<int' → logprob: -16.475208282470703
    10. '[int' → logprob: -16.725208282470703

Token 47: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16024483740329742
    2. '(' → logprob: -1.9102448225021362
    3. ' (' → logprob: -11.785244941711426
    4. '(
' → logprob: -12.035244941711426
    5. 'input' → logprob: -13.035244941711426
    6. '(int' → logprob: -13.535244941711426
    7. '(user' → logprob: -13.910244941711426
    8. '()' → logprob: -14.035244941711426
    9. '('' → logprob: -14.535244941711426
    10. '(

' → logprob: -15.035244941711426

Token 48: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014285974204540253
    2. '()' → logprob: -4.639286041259766
    3. '('' → logprob: -6.139286041259766
    4. '())' → logprob: -6.764286041259766
    5. ')' → logprob: -7.264286041259766
    6. '(""))' → logprob: -9.014286041259766
    7. '("("' → logprob: -9.014286041259766
    8. '(
' → logprob: -9.639286041259766
    9. '("")' → logprob: -9.764286041259766
    10. '("' → logprob: -9.764286041259766

Token 49: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.821111261844635
    2. ' ' → logprob: -1.5711112022399902
    3. '+' → logprob: -2.3211112022399902
    4. ')' → logprob: -2.5711112022399902
    5. 'if' → logprob: -3.6961112022399902
    6. '
' → logprob: -3.6961112022399902
    7. '<|end|>' → logprob: -3.6961112022399902
    8. 'i' → logprob: -4.19611120223999
    9. '%' → logprob: -4.44611120223999
    10. '*' → logprob: -4.57111120223999

Token 50: ' Dem' (ID: 9458)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8758596181869507
    2. ' for' → logprob: -1.6258596181869507
    3. 'factor' → logprob: -1.7508596181869507
    4. ' if' → logprob: -2.5008597373962402
    5. 'if' → logprob: -2.6258597373962402
    6. 's' → logprob: -3.5008597373962402
    7. ' factorial' → logprob: -4.87585973739624
    8. 'fact' → logprob: -5.37585973739624
    9. '#' → logprob: -5.50085973739624
    10. 'result' → logprob: -6.00085973739624

Token 51: 'ande' (ID: 4102)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7732740044593811
    2. ' if' → logprob: -1.3982739448547363
    3. 'if' → logprob: -2.1482739448547363
    4. 'e' → logprob: -2.5232739448547363
    5. '<|end|>' → logprob: -3.5232739448547363
    6. 'for' → logprob: -4.398273944854736
    7. 'print' → logprob: -4.523273944854736
    8. ' #' → logprob: -5.523273944854736
    9. ' for' → logprob: -5.773273944854736
    10. ')' → logprob: -5.773273944854736

Token 52: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6184281706809998
    2. '(' → logprob: -1.8684282302856445
    3. 'à' → logprob: -1.8684282302856445
    4. '()' → logprob: -2.6184282302856445
    5. ')' → logprob: -4.3684282302856445
    6. 'au' → logprob: -4.6184282302856445
    7. ''à' → logprob: -4.7434282302856445
    8. ' ' → logprob: -4.9934282302856445
    9. '("' → logprob: -5.3684282302856445
    10. '('' → logprob: -5.4934282302856445

Token 53: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.14502213895320892
    2. 'l' → logprob: -2.14502215385437
    3. ' ' → logprob: -5.395021915435791
    4. '<|end|>' → logprob: -5.520021915435791
    5. ' une' → logprob: -5.645021915435791
    6. ' user' → logprob: -7.020021915435791
    7. ' la' → logprob: -7.145021915435791
    8. ' un' → logprob: -7.520021915435791
    9. 'user' → logprob: -7.520021915435791
    10. ' lâ' → logprob: -7.645021915435791

Token 54: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.007047821767628193
    2. ' utilisateur' → logprob: -5.882047653198242
    3. '’utilisateur' → logprob: -6.507047653198242
    4. 'util' → logprob: -6.757047653198242
    5. 'user' → logprob: -7.632047653198242
    6. '#' → logprob: -8.507047653198242
    7. 'a' → logprob: -8.632047653198242
    8. ' user' → logprob: -9.007047653198242
    9. ''util' → logprob: -9.132047653198242
    10. ' us' → logprob: -9.632047653198242

Token 55: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4245625436306
    2. ' ' → logprob: -1.9245625734329224
    3. 'd' → logprob: -2.549562454223633
    4. '  ' → logprob: -3.799562454223633
    5. ' à' → logprob: -3.799562454223633
    6. 's' → logprob: -4.424562454223633
    7. ' de' → logprob: -4.674562454223633
    8. ')' → logprob: -4.799562454223633
    9. '#' → logprob: -5.049562454223633
    10. '(' → logprob: -5.174562454223633

Token 56: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.4764817953109741
    2. ' entrer' → logprob: -1.9764817953109741
    3. 's' → logprob: -2.3514819145202637
    4. 'entr' → logprob: -2.4764819145202637
    5. 'r' → logprob: -4.101481914520264
    6. 'n' → logprob: -4.601481914520264
    7. ' continuer' → logprob: -4.976481914520264
    8. ' calcul' → logprob: -5.726481914520264
    9. ' rentrer' → logprob: -6.101481914520264
    10. ' ' → logprob: -6.226481914520264

Token 57: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6846440434455872
    2. ' un' → logprob: -0.9346440434455872
    3. ' une' → logprob: -2.4346439838409424
    4. 'une' → logprob: -5.3096442222595215
    5. 'un' → logprob: -5.6846442222595215
    6. '  ' → logprob: -6.5596442222595215
    7. '"' → logprob: -6.8096442222595215
    8. ' l' → logprob: -7.0596442222595215
    9. ' la' → logprob: -7.3096442222595215
    10. ' ' → logprob: -7.5596442222595215

Token 58: ' liste' (ID: 31719)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.885283350944519
    2. ' chaîne' → logprob: -1.510283350944519
    3. ' nombre' → logprob: -2.7602834701538086
    4. ' ' → logprob: -2.7602834701538086
    5. 'n' → logprob: -3.0102834701538086
    6. ' deuxième' → logprob: -3.2602834701538086
    7. 'nombre' → logprob: -3.6352834701538086
    8. ' phrase' → logprob: -3.7602834701538086
    9. 'val' → logprob: -4.135283470153809
    10. ' seconde' → logprob: -4.260283470153809

Token 59: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31684771180152893
    2. 'e' → logprob: -2.191847801208496
    3. 's' → logprob: -2.816847801208496
    4. '(' → logprob: -3.566847801208496
    5. 'a' → logprob: -3.816847801208496
    6. 'de' → logprob: -4.691847801208496
    7. 'es' → logprob: -4.941847801208496
    8. ' de' → logprob: -5.191847801208496
    9. 'des' → logprob: -5.441847801208496
    10. ' des' → logprob: -6.066847801208496

Token 60: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.06570672243833542
    2. ' valeurs' → logprob: -3.190706729888916
    3. 'val' → logprob: -4.565706729888916
    4. 'n' → logprob: -4.940706729888916
    5. 'ent' → logprob: -7.190706729888916
    6. ' ent' → logprob: -7.690706729888916
    7. 'nombre' → logprob: -7.815706729888916
    8. ' n' → logprob: -8.190706253051758
    9. ' nombre' → logprob: -8.315706253051758
    10. ' N' → logprob: -8.440706253051758

Token 61: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33751946687698364
    2. ' lst' → logprob: -2.212519407272339
    3. ' ' → logprob: -2.712519407272339
    4. ',' → logprob: -3.462519407272339
    5. ' ,' → logprob: -3.837519407272339
    6. ' s' → logprob: -4.962519645690918
    7. ' ent' → logprob: -5.337519645690918
    8. 'lst' → logprob: -5.462519645690918
    9. 'numbers' → logprob: -5.712519645690918
    10. ' L' → logprob: -5.837519645690918

Token 62: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00100113230291754
    2. 'é' → logprob: -7.126001358032227
    3. 'ée' → logprob: -9.126001358032227
    4. 'es' → logprob: -9.751001358032227
    5. 'ès' → logprob: -11.501001358032227
    6. 'ées' → logprob: -12.001001358032227
    7. 'par' → logprob: -12.501001358032227
    8. 'e' → logprob: -13.126001358032227
    9. 's' → logprob: -13.376001358032227
    10. '```' → logprob: -13.376001358032227

Token 63: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.213586688041687
    2. 'par' → logprob: -1.713586688041687
    3. 'es' → logprob: -5.088586807250977
    4. 's' → logprob: -5.838586807250977
    5. ' espaces' → logprob: -7.713586807250977
    6. 'space' → logprob: -7.838586807250977
    7. '_par' → logprob: -8.213586807250977
    8. ' ' → logprob: -8.588586807250977
    9. '<|end|>' → logprob: -8.588586807250977
    10. '	par' → logprob: -8.713586807250977

Token 64: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9103818535804749
    2. ' des' → logprob: -1.16038179397583
    3. 'un' → logprob: -2.53538179397583
    4. ' espaces' → logprob: -2.78538179397583
    5. 'es' → logprob: -3.03538179397583
    6. ' ' → logprob: -4.03538179397583
    7. ''espace' → logprob: -4.03538179397583
    8. 'spaces' → logprob: -4.16038179397583
    9. 'esp' → logprob: -4.66038179397583
    10. ' espace' → logprob: -4.78538179397583

Token 65: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.14742150902748108
    2. 'esp' → logprob: -2.3974215984344482
    3. 'es' → logprob: -3.5224215984344482
    4. 'spaces' → logprob: -5.272421360015869
    5. ' espace' → logprob: -6.022421360015869
    6. ''esp' → logprob: -6.147421360015869
    7. 'space' → logprob: -6.272421360015869
    8. ''espace' → logprob: -6.647421360015869
    9. 'paces' → logprob: -7.022421360015869
    10. ' ' → logprob: -7.147421360015869

Token 66: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7550021409988403
    2. 'numbers' → logprob: -1.0050021409988403
    3. 'L' → logprob: -3.255002021789551
    4. 'n' → logprob: -3.755002021789551
    5. 'lst' → logprob: -4.005002021789551
    6. 'l' → logprob: -4.130002021789551
    7. 'liste' → logprob: -4.130002021789551
    8. ' numbers' → logprob: -4.630002021789551
    9. ' lst' → logprob: -5.380002021789551
    10. ' L' → logprob: -5.505002021789551

Token 67: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.1928432583808899
    2. ' numbers' → logprob: -2.692843198776245
    3. 'L' → logprob: -3.442843198776245
    4. 'lst' → logprob: -4.317843437194824
    5. 'values' → logprob: -4.442843437194824
    6. 'nums' → logprob: -4.567843437194824
    7. 'liste' → logprob: -4.817843437194824
    8. 's' → logprob: -4.817843437194824
    9. ' lst' → logprob: -5.067843437194824
    10. 'l' → logprob: -5.567843437194824

Token 68: ' map' (ID: 4014)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.34579700231552124
    2. ' numbers' → logprob: -2.095797061920166
    3. 'L' → logprob: -3.095797061920166
    4. 'lst' → logprob: -3.220797061920166
    5. 'values' → logprob: -3.595797061920166
    6. ' lst' → logprob: -4.345797061920166
    7. ' L' → logprob: -4.345797061920166
    8. 'liste' → logprob: -4.970797061920166
    9. ' values' → logprob: -5.470797061920166
    10. 'l' → logprob: -5.595797061920166

Token 69: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2046455442905426
    2. '(int' → logprob: -1.7046455144882202
    3. '(lambda' → logprob: -6.20464563369751
    4. '(list' → logprob: -6.95464563369751
    5. '(input' → logprob: -9.704645156860352
    6. 'list' → logprob: -9.829645156860352
    7. ' (' → logprob: -10.704645156860352
    8. '()' → logprob: -10.954645156860352
    9. '(str' → logprob: -10.954645156860352
    10. '(
' → logprob: -11.079645156860352

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021833190694451332
    2. ',input' → logprob: -4.146833419799805
    3. ')' → logprob: -5.271833419799805
    4. '(input' → logprob: -8.646833419799805
    5. ',map' → logprob: -8.646833419799805
    6. ' ,' → logprob: -9.021833419799805
    7. '(' → logprob: -9.521833419799805
    8. 'input' → logprob: -10.021833419799805
    9. ',int' → logprob: -10.771833419799805
    10. ',)' → logprob: -11.271833419799805

Token 71: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2256699651479721
    2. ' input' → logprob: -1.6006699800491333
    3. ')' → logprob: -8.600669860839844
    4. '(input' → logprob: -9.850669860839844
    5. ',input' → logprob: -11.850669860839844
    6. '=input' → logprob: -12.350669860839844
    7. ' )' → logprob: -12.725669860839844
    8. '<input' → logprob: -13.350669860839844
    9. '	input' → logprob: -13.725669860839844
    10. '[input' → logprob: -13.725669860839844

Token 72: ' applique' (ID: 180579)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09546490013599396
    2. 'input' → logprob: -2.5954649448394775
    3. '(' → logprob: -4.595464706420898
    4. 'list' → logprob: -5.720464706420898
    5. ')' → logprob: -6.470464706420898
    6. '(list' → logprob: -7.970464706420898
    7. ' input' → logprob: -8.470464706420898
    8. '(
' → logprob: -8.470464706420898
    9. 'map' → logprob: -8.720464706420898
    10. ' (' → logprob: -9.345464706420898

Token 73: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3364759087562561
    2. 'la' → logprob: -2.4614758491516113
    3. 'lambda' → logprob: -2.4614758491516113
    4. 'input' → logprob: -3.0864758491516113
    5. '(int' → logprob: -4.211475849151611
    6. '   ' → logprob: -4.211475849151611
    7. ' ' → logprob: -4.461475849151611
    8. ' la' → logprob: -5.336475849151611
    9. '```' → logprob: -5.711475849151611
    10. 'list' → logprob: -5.711475849151611

Token 74: ' conversion' (ID: 22165)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.9104214906692505
    2. 'int' → logprob: -1.2854214906692505
    3. 'fonction' → logprob: -1.4104214906692505
    4. 'function' → logprob: -3.160421371459961
    5. 'str' → logprob: -4.035421371459961
    6. 'input' → logprob: -4.910421371459961
    7. ' split' → logprob: -5.160421371459961
    8. ' function' → logprob: -6.535421371459961
    9. ' fonction' → logprob: -7.160421371459961
    10. 'lambda' → logprob: -7.285421371459961

Token 75: ' int' (ID: 677)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44689810276031494
    2. '(input' → logprob: -1.196898102760315
    3. '(str' → logprob: -3.3218979835510254
    4. '(int' → logprob: -4.571897983551025
    5. 'input' → logprob: -5.821897983551025
    6. '(list' → logprob: -5.946897983551025
    7. 'list' → logprob: -6.821897983551025
    8. 'str' → logprob: -6.946897983551025
    9. 'sur' → logprob: -7.071897983551025
    10. '(
' → logprob: -7.571897983551025

Token 76: ' à' (ID: 1221)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0001298189163208
    2. ' à' → logprob: -1.3751298189163208
    3. '(' → logprob: -1.6251298189163208
    4. '()' → logprob: -3.1251296997070312
    5. 'sur' → logprob: -3.1251296997070312
    6. 'à' → logprob: -3.7501296997070312
    7. ')' → logprob: -4.000129699707031
    8. ' sur' → logprob: -4.250129699707031
    9. '```' → logprob: -4.500129699707031
    10. '(...)' → logprob: -5.125129699707031

Token 77: ' chaque' (ID: 21194)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5260745286941528
    2. ' input' → logprob: -1.0260745286941528
    3. 'l' → logprob: -3.5260744094848633
    4. 'la' → logprob: -4.526074409484863
    5. ' l' → logprob: -5.276074409484863
    6. ' la' → logprob: -5.526074409484863
    7. ' chaque' → logprob: -7.151074409484863
    8. '(input' → logprob: -9.026074409484863
    9. '[input' → logprob: -9.901074409484863
    10. ' ' → logprob: -10.026074409484863

Token 78: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1368791162967682
    2. 'element' → logprob: -2.8868792057037354
    3. 'input' → logprob: -3.3868792057037354
    4. ' élément' → logprob: -3.6368792057037354
    5. ' input' → logprob: -5.761878967285156
    6. ' element' → logprob: -5.761878967285156
    7. 'val' → logprob: -6.511878967285156
    8. '(input' → logprob: -6.886878967285156
    9. 'elem' → logprob: -7.261878967285156
    10. 'nombre' → logprob: -7.386878967285156

Token 79: ' de' (ID: 334)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1995253711938858
    2. '(input' → logprob: -2.0745253562927246
    3. ' input' → logprob: -3.8245253562927246
    4. ' de' → logprob: -3.9495253562927246
    5. 'de' → logprob: -5.449525356292725
    6. 'split' → logprob: -6.074525356292725
    7. '(' → logprob: -6.324525356292725
    8. 'd' → logprob: -6.574525356292725
    9. '```' → logprob: -7.199525356292725
    10. 'list' → logprob: -7.449525356292725

Token 80: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22590376436710358
    2. ' input' → logprob: -1.6009037494659424
    3. 'l' → logprob: -8.100903511047363
    4. '(input' → logprob: -9.475903511047363
    5. ' l' → logprob: -9.975903511047363
    6. 'la' → logprob: -10.350903511047363
    7. ' la' → logprob: -11.100903511047363
    8. '=input' → logprob: -12.225903511047363
    9. '<input' → logprob: -12.350903511047363
    10. 'entrée' → logprob: -13.475903511047363

Token 81: ' liste' (ID: 31719)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6084184646606445
    2. ' input' → logprob: -1.6084184646606445
    3. 'liste' → logprob: -2.2334184646606445
    4. ' liste' → logprob: -2.3584184646606445
    5. ' chaîne' → logprob: -3.4834184646606445
    6. 'chaine' → logprob: -4.2334184646606445
    7. 'list' → logprob: -5.7334184646606445
    8. 'entrée' → logprob: -6.1084184646606445
    9. 'split' → logprob: -6.6084184646606445
    10. ' chaine' → logprob: -7.6084184646606445

Token 82: ' obten' (ID: 28150)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3563040494918823
    2. '(input' → logprob: -1.6063040494918823
    3. 'input' → logprob: -2.981304168701172
    4. '(
' → logprob: -3.606304168701172
    5. ')' → logprob: -4.481304168701172
    6. 's' → logprob: -6.356304168701172
    7. ' input' → logprob: -6.356304168701172
    8. 'list' → logprob: -6.856304168701172
    9. '()' → logprob: -7.356304168701172
    10. 'split' → logprob: -7.481304168701172

Token 83: 'ue' (ID: 466)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.666459560394287
    2. 'u' → logprob: -1.916459560394287
    3. ')' → logprob: -2.041459560394287
    4. 'e' → logprob: -2.041459560394287
    5. ' par' → logprob: -2.416459560394287
    6. 'split' → logprob: -2.416459560394287
    7. 'par' → logprob: -3.041459560394287
    8. '.split' → logprob: -3.291459560394287
    9. 'ue' → logprob: -3.541459560394287
    10. 'de' → logprob: -3.666459560394287

Token 84: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3529287278652191
    2. '(input' → logprob: -1.2279287576675415
    3. '(
' → logprob: -6.352928638458252
    4. 'input' → logprob: -6.602928638458252
    5. 's' → logprob: -8.10292911529541
    6. ' (' → logprob: -8.60292911529541
    7. ')' → logprob: -8.72792911529541
    8. ',' → logprob: -9.22792911529541
    9. '(split' → logprob: -9.60292911529541
    10. ' input' → logprob: -9.97792911529541

Token 85: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18039029836654663
    2. 'input' → logprob: -1.8053903579711914
    3. 'split' → logprob: -8.555390357971191
    4. ' la' → logprob: -8.680390357971191
    5. '(input' → logprob: -9.680390357971191
    6. 'la' → logprob: -9.805390357971191
    7. ' split' → logprob: -9.930390357971191
    8. 'l' → logprob: -10.180390357971191
    9. ' l' → logprob: -10.305390357971191
    10. ' ' → logprob: -11.430390357971191

Token 86: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3295527696609497
    2. '().' → logprob: -1.3295527696609497
    3. '(' → logprob: -4.20455265045166
    4. 's' → logprob: -7.82955265045166
    5. '())' → logprob: -8.32955265045166
    6. '(split' → logprob: -9.20455265045166
    7. '()(' → logprob: -9.82955265045166
    8. '("")' → logprob: -9.95455265045166
    9. 'split' → logprob: -10.07955265045166
    10. '('' → logprob: -10.20455265045166

Token 87: 'split' (ID: 13627)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.8886680006980896
    2. ' numbers' → logprob: -1.2636680603027344
    3. ' lst' → logprob: -2.3886680603027344
    4. 'lst' → logprob: -3.1386680603027344
    5. 's' → logprob: -3.2636680603027344
    6. 'n' → logprob: -3.3886680603027344
    7. ' L' → logprob: -3.7636680603027344
    8. ' l' → logprob: -4.388668060302734
    9. ' nombres' → logprob: -4.388668060302734
    10. 'l' → logprob: -4.638668060302734

Token 88: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001003751065582037
    2. '(' → logprob: -7.751003742218018
    3. '())' → logprob: -8.001004219055176
    4. '().' → logprob: -9.501004219055176
    5. '()
' → logprob: -10.251004219055176
    6. '()]' → logprob: -10.251004219055176
    7. '()

' → logprob: -11.001004219055176
    8. '(),' → logprob: -11.001004219055176
    9. ' ()' → logprob: -11.251004219055176
    10. '()>' → logprob: -12.126004219055176

Token 89: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.0376918315887451
    2. 'L' → logprob: -2.037691831588745
    3. 'lst' → logprob: -2.287691831588745
    4. 'l' → logprob: -2.412691831588745
    5. ' numbers' → logprob: -2.662691831588745
    6. 'n' → logprob: -2.912691831588745
    7. ' lst' → logprob: -3.162691831588745
    8. ' L' → logprob: -3.287691831588745
    9. 'a' → logprob: -3.537691831588745
    10. 'liste' → logprob: -4.287692070007324

Token 90: ' list' (ID: 1562)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6708152294158936
    2. 'lst' → logprob: -1.6708152294158936
    3. ' lst' → logprob: -2.6708152294158936
    4. 'L' → logprob: -2.7958152294158936
    5. ' numbers' → logprob: -2.7958152294158936
    6. ' L' → logprob: -3.6708152294158936
    7. 'values' → logprob: -3.9208152294158936
    8. 'l' → logprob: -4.045815467834473
    9. 'liste' → logprob: -4.420815467834473
    10. 'list' → logprob: -4.670815467834473

Token 91: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04456349089741707
    2. '()' → logprob: -3.1695635318756104
    3. '=' → logprob: -7.419563293457031
    4. '(...)' → logprob: -8.419563293457031
    5. '(
' → logprob: -8.794563293457031
    6. 's' → logprob: -9.044563293457031
    7. '(map' → logprob: -9.669563293457031
    8. 'es' → logprob: -9.669563293457031
    9. '([]' → logprob: -9.794563293457031
    10. ')' → logprob: -10.419563293457031

Token 92: ' convert' (ID: 8452)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13557711243629456
    2. ' =' → logprob: -2.2605772018432617
    3. '(' → logprob: -4.010577201843262
    4. 'convert' → logprob: -6.635577201843262
    5. ')' → logprob: -7.010577201843262
    6. 's' → logprob: -7.385577201843262
    7. '(
' → logprob: -7.635577201843262
    8. '()' → logprob: -8.635577201843262
    9. ' converts' → logprob: -9.010577201843262
    10. 'N' → logprob: -9.260577201843262

Token 93: 'it' (ID: 278)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.4698024392127991
    2. 'it' → logprob: -1.4698023796081543
    3. 'e' → logprob: -2.9698023796081543
    4. 'ue' → logprob: -3.2198023796081543
    5. '()' → logprob: -3.8448023796081543
    6. '(input' → logprob: -4.344802379608154
    7. '(list' → logprob: -6.094802379608154
    8. 'ifie' → logprob: -6.094802379608154
    9. 'input' → logprob: -6.344802379608154
    10. '(' → logprob: -6.469802379608154

Token 94: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25418001413345337
    2. ' la' → logprob: -2.0041799545288086
    3. '(map' → logprob: -3.0041799545288086
    4. 'l' → logprob: -5.004179954528809
    5. '(
' → logprob: -5.254179954528809
    6. ' l' → logprob: -5.254179954528809
    7. 'map' → logprob: -5.504179954528809
    8. '(input' → logprob: -5.629179954528809
    9. 'la' → logprob: -5.879179954528809
    10. ' le' → logprob: -5.879179954528809

Token 95: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7450060844421387
    2. 'a' → logprob: -1.3700060844421387
    3. 'es' → logprob: -2.3700060844421387
    4. 'map' → logprob: -2.9950060844421387
    5. 'la' → logprob: -3.1200060844421387
    6. '(map' → logprob: -3.2450060844421387
    7. 'input' → logprob: -4.620006084442139
    8. ''entrée' → logprob: -5.495006084442139
    9. '()' → logprob: -5.620006084442139
    10. '(' → logprob: -6.245006084442139

Token 96: 'it' (ID: 278)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02586767077445984
    2. 'entrée' → logprob: -3.9008677005767822
    3. ' input' → logprob: -6.275867462158203
    4. 'ent' → logprob: -7.025867462158203
    5. ''entrée' → logprob: -7.525867462158203
    6. 'map' → logprob: -7.650867462158203
    7. '`' → logprob: -8.400867462158203
    8. 'e' → logprob: -8.525867462158203
    9. 'es' → logprob: -8.775867462158203
    10. 'a' → logprob: -9.025867462158203

Token 97: 'ér' (ID: 2156)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.10591884702444077
    2. 'er' → logprob: -3.1059188842773438
    3. 'ér' → logprob: -3.6059188842773438
    4. 'èr' → logprob: -4.355918884277344
    5. 'érée' → logprob: -5.105918884277344
    6. 'érer' → logprob: -5.855918884277344
    7. 'e' → logprob: -6.230918884277344
    8. 'ération' → logprob: -6.730918884277344
    9. 'éré' → logprob: -6.855918884277344
    10. 'érateur' → logprob: -7.605918884277344

Token 98: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0015927036292850971
    2. 'ateur' → logprob: -7.251592636108398
    3. 'ate' → logprob: -8.251592636108398
    4. 'a' → logprob: -8.501592636108398
    5. 'e' → logprob: -9.376592636108398
    6. '```' → logprob: -9.376592636108398
    7. 'ables' → logprob: -10.376592636108398
    8. 'er' → logprob: -10.501592636108398
    9. 'ator' → logprob: -10.501592636108398
    10. 'iste' → logprob: -10.626592636108398

Token 99: ' map' (ID: 4014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048971906304359436
    2. '(map' → logprob: -3.6739718914031982
    3. ' en' → logprob: -4.798972129821777
    4. '()' → logprob: -5.798972129821777
    5. '(...)' → logprob: -5.798972129821777
    6. '(input' → logprob: -6.298972129821777
    7. 'en' → logprob: -6.548972129821777
    8. ' des' → logprob: -6.923972129821777
    9. '(
' → logprob: -7.548972129821777
    10. 'des' → logprob: -7.798972129821777

Token 100: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009094424545764923
    2. '(int' → logprob: -5.75909423828125
    3. '(lambda' → logprob: -6.00909423828125
    4. '()' → logprob: -6.13409423828125
    5. '(...)' → logprob: -7.38409423828125
    6. '(map' → logprob: -8.88409423828125
    7. '(
' → logprob: -9.38409423828125
    8. '(list' → logprob: -9.38409423828125
    9. '(input' → logprob: -9.50909423828125
    10. '([]' → logprob: -10.00909423828125

Token 101: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.20358557999134064
    2. ' []' → logprob: -2.828585624694824
    3. ' ' → logprob: -2.953585624694824
    4. 'une' → logprob: -3.078585624694824
    5. ' la' → logprob: -4.703585624694824
    6. '[' → logprob: -5.328585624694824
    7. ' liste' → logprob: -5.453585624694824
    8. ' un' → logprob: -5.828585624694824
    9. '[]' → logprob: -6.078585624694824
    10. ' [' → logprob: -6.453585624694824

Token 102: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.013054221868515015
    2. 'liste' → logprob: -4.388054370880127
    3. ' list' → logprob: -8.013053894042969
    4. 'list' → logprob: -8.638053894042969
    5. ' ' → logprob: -11.513053894042969
    6. ' ' → logprob: -12.013053894042969
    7. ' listes' → logprob: -12.513053894042969
    8. 's' → logprob: -13.013053894042969
    9. ' Liste' → logprob: -13.013053894042969
    10. ' []' → logprob: -13.263053894042969

Token 103: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045150358229875565
    2. '()' → logprob: -3.6701502799987793
    3. 's' → logprob: -5.045150279998779
    4. '(
' → logprob: -5.545150279998779
    5. ' (' → logprob: -5.920150279998779
    6. ')' → logprob: -6.795150279998779
    7. '[' → logprob: -7.170150279998779
    8. '_' → logprob: -7.170150279998779
    9. ',' → logprob: -7.545150279998779
    10. '(s' → logprob: -8.420150756835938

Token 104: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.4272613823413849
    2. 'L' → logprob: -1.6772613525390625
    3. 'lst' → logprob: -2.5522613525390625
    4. 'values' → logprob: -3.6772613525390625
    5. 'A' → logprob: -3.9272613525390625
    6. 'nums' → logprob: -4.0522613525390625
    7. 'arr' → logprob: -4.8022613525390625
    8. 'liste' → logprob: -5.3022613525390625
    9. 'array' → logprob: -7.0522613525390625
    10. 'list' → logprob: -7.0522613525390625

Token 105: ' sorted' (ID: 20099)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5280632972717285
    2. 'L' → logprob: -1.9030632972717285
    3. 'lst' → logprob: -2.4030632972717285
    4. ' numbers' → logprob: -2.6530632972717285
    5. 'arr' → logprob: -3.6530632972717285
    6. ' lst' → logprob: -4.0280632972717285
    7. ' L' → logprob: -4.2780632972717285
    8. 'values' → logprob: -4.2780632972717285
    9. 'A' → logprob: -4.6530632972717285
    10. 'nums' → logprob: -4.7780632972717285

Token 106: '(...' (ID: 45935)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004474732850212604
    2. '()' → logprob: -8.000447273254395
    3. '(list' → logprob: -10.375447273254395
    4. '(sorted' → logprob: -10.625447273254395
    5. '(
' → logprob: -11.000447273254395
    6. '_list' → logprob: -11.500447273254395
    7. '(N' → logprob: -12.000447273254395
    8. '(s' → logprob: -12.250447273254395
    9. 's' → logprob: -12.500447273254395
    10. 'list' → logprob: -13.375447273254395

Token 107: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03319698944687843
    2. ')' → logprob: -3.7831969261169434
    3. '()' → logprob: -5.283196926116943
    4. '(N' → logprob: -6.658196926116943
    5. '(sorted' → logprob: -7.033196926116943
    6. '(
' → logprob: -7.158196926116943
    7. '())' → logprob: -7.533196926116943
    8. '(list' → logprob: -8.158197402954102
    9. '(input' → logprob: -8.283197402954102
    10. '(s' → logprob: -9.283197402954102

Token 108: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.5261266231536865
    2. ' reverse' → logprob: -0.9011266231536865
    3. ')' → logprob: -5.901126861572266
    4. ' key' → logprob: -9.151126861572266
    5. '(reverse' → logprob: -10.151126861572266
    6. ' )' → logprob: -10.276126861572266
    7. 'key' → logprob: -10.276126861572266
    8. 'rev' → logprob: -11.401126861572266
    9. 're' → logprob: -11.651126861572266
    10. '.reverse' → logprob: -12.026126861572266

Token 109: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.03366275876760483
    2. '=' → logprob: -3.408662796020508
    3. ' =' → logprob: -11.908662796020508
    4. '=False' → logprob: -12.158662796020508
    5. '=T' → logprob: -13.158662796020508
    6. '=

' → logprob: -13.908662796020508
    7. '=
' → logprob: -14.158662796020508
    8. ')' → logprob: -14.533662796020508
    9. ')=' → logprob: -14.533662796020508
    10. '=N' → logprob: -15.783662796020508

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016657324507832527
    2. '(' → logprob: -4.76665735244751
    3. ',' → logprob: -5.64165735244751
    4. '(N' → logprob: -5.89165735244751
    5. ' )' → logprob: -7.89165735244751
    6. '(
' → logprob: -8.516656875610352
    7. '())' → logprob: -8.516656875610352
    8. '()' → logprob: -8.641656875610352
    9. '))' → logprob: -9.141656875610352
    10. ')
' → logprob: -9.141656875610352

Token 111: ' trie' (ID: 139428)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4106284976005554
    2. ')' → logprob: -2.9106285572052
    3. '(
' → logprob: -3.0356285572052
    4. 'sorted' → logprob: -3.0356285572052
    5. 'tr' → logprob: -3.2856285572052
    6. 'tri' → logprob: -3.7856285572052
    7. 'N' → logprob: -3.9106285572052
    8. 's' → logprob: -4.035628318786621
    9. '()' → logprob: -4.285628318786621
    10. '=' → logprob: -4.660628318786621

Token 112: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18517842888832092
    2. 'la' → logprob: -2.685178518295288
    3. ' la' → logprob: -3.060178518295288
    4. '(N' → logprob: -3.685178518295288
    5. '(l' → logprob: -4.435178279876709
    6. 'ma' → logprob: -5.185178279876709
    7. '()' → logprob: -6.310178279876709
    8. 'l' → logprob: -6.435178279876709
    9. '(ma' → logprob: -6.435178279876709
    10. '(n' → logprob: -6.935178279876709

Token 113: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.04803908243775368
    2. 'list' → logprob: -3.423039197921753
    3. ' liste' → logprob: -4.423038959503174
    4. 'N' → logprob: -7.173038959503174
    5. 'input' → logprob: -7.923038959503174
    6. 'val' → logprob: -8.298039436340332
    7. '```' → logprob: -8.798039436340332
    8. 'lista' → logprob: -8.923039436340332
    9. 's' → logprob: -9.048039436340332
    10. 'Liste' → logprob: -9.298039436340332

Token 114: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07005180418491364
    2. '(
' → logprob: -4.320051670074463
    3. '(...' → logprob: -4.445051670074463
    4. '=' → logprob: -4.695051670074463
    5. '(N' → logprob: -5.070051670074463
    6. ')' → logprob: -5.445051670074463
    7. '...' → logprob: -6.070051670074463
    8. ' =' → logprob: -6.195051670074463
    9. '(...)' → logprob: -6.195051670074463
    10. '()' → logprob: -6.320051670074463

Token 115: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.16988562047481537
    2. ' ordre' → logprob: -1.9198856353759766
    3. 'd' → logprob: -5.044885635375977
    4. 'ord' → logprob: -7.169885635375977
    5. ''ordre' → logprob: -7.169885635375977
    6. 'dé' → logprob: -7.419885635375977
    7. 'val' → logprob: -8.419885635375977
    8. ' défaut' → logprob: -9.169885635375977
    9. 'def' → logprob: -9.294885635375977
    10. 'descending' → logprob: -9.294885635375977

Token 116: ' décro' (ID: 176854)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07278972864151001
    2. ' décro' → logprob: -2.6977896690368652
    3. ' inverse' → logprob: -6.947789669036865
    4. 'desc' → logprob: -7.947789669036865
    5. 'inverse' → logprob: -8.322790145874023
    6. 'dé' → logprob: -8.322790145874023
    7. ' déc' → logprob: -8.447790145874023
    8. 'dec' → logprob: -8.697790145874023
    9. '_d' → logprob: -8.947790145874023
    10. '	d' → logprob: -9.322790145874023

Token 117: 'issant' (ID: 31359)
  Prédit: 'dent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dent' → logprob: -0.290031760931015
    2. 'issant' → logprob: -1.9150317907333374
    3. 'd' → logprob: -2.665031671524048
    4. 'ent' → logprob: -4.665031909942627
    5. 'sent' → logprob: -5.040031909942627
    6. 'ant' → logprob: -5.415031909942627
    7. 's' → logprob: -5.665031909942627
    8. 'isant' → logprob: -6.290031909942627
    9. 'nant' → logprob: -6.415031909942627
    10. '#' → logprob: -6.665031909942627

Token 118: '.
' (ID: 558)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5937002301216125
    2. 'L' → logprob: -1.5937001705169678
    3. 'lst' → logprob: -2.5937001705169678
    4. 'nums' → logprob: -2.9687001705169678
    5. 'liste' → logprob: -3.5937001705169678
    6. ')' → logprob: -4.218700408935547
    7. 'ma' → logprob: -4.218700408935547
    8. 'l' → logprob: -4.343700408935547
    9. 'sorted' → logprob: -4.968700408935547
    10. 'N' → logprob: -5.218700408935547

Token 119: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6975638270378113
    2. 'L' → logprob: -1.197563886642456
    3. 'lst' → logprob: -3.447563886642456
    4. 'nums' → logprob: -3.572563886642456
    5. 'liste' → logprob: -3.822563886642456
    6. 'N' → logprob: -3.947563886642456
    7. 'val' → logprob: -4.072563648223877
    8. 'values' → logprob: -4.322563648223877
    9. 'A' → logprob: -4.322563648223877
    10. 'arr' → logprob: -4.322563648223877

Token 120: ' La' (ID: 3038)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0134731531143188
    2. 'numbers' → logprob: -1.2634731531143188
    3. 'lst' → logprob: -2.0134730339050293
    4. 'liste' → logprob: -2.7634730339050293
    5. 'arr' → logprob: -3.5134730339050293
    6. 'nums' → logprob: -3.6384730339050293
    7. ' L' → logprob: -4.138473033905029
    8. 'values' → logprob: -4.138473033905029
    9. 'sorted' → logprob: -4.263473033905029
    10. ' numbers' → logprob: -4.513473033905029

Token 121: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8399784564971924
    2. 's' → logprob: -1.3399784564971924
    3. 'liste' → logprob: -1.5899784564971924
    4. 'l' → logprob: -4.464978218078613
    5. 'sorted' → logprob: -4.464978218078613
    6. ' sorted' → logprob: -4.714978218078613
    7. ' variable' → logprob: -4.714978218078613
    8. '#' → logprob: -4.964978218078613
    9. 'lst' → logprob: -5.214978218078613
    10. 'variable' → logprob: -5.339978218078613

Token 122: ' tri' (ID: 12665)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.3657069206237793
    2. ' =' → logprob: -1.6157069206237793
    3. 'tri' → logprob: -2.1157069206237793
    4. 'des' → logprob: -2.4907069206237793
    5. ' tri' → logprob: -2.9907069206237793
    6. '_numbers' → logprob: -3.2407069206237793
    7. 's' → logprob: -3.3657069206237793
    8. ' est' → logprob: -3.7407069206237793
    9. 'numbers' → logprob: -4.115706920623779
    10. 'N' → logprob: -4.240706920623779

Token 123: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1160719022154808
    2. 'e' → logprob: -2.241071939468384
    3. 'é' → logprob: -6.866071701049805
    4. ' est' → logprob: -7.116071701049805
    5. 'ee' → logprob: -7.241071701049805
    6. 'te' → logprob: -8.616071701049805
    7. 'est' → logprob: -9.616071701049805
    8. 't' → logprob: -9.616071701049805
    9. 'rée' → logprob: -9.866071701049805
    10. '#' → logprob: -10.116071701049805

Token 124: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17313772439956665
    2. '=' → logprob: -2.298137664794922
    3. 's' → logprob: -4.548137664794922
    4. '_numbers' → logprob: -4.798137664794922
    5. 'des' → logprob: -5.048137664794922
    6. 'numbers' → logprob: -5.048137664794922
    7. 'est' → logprob: -5.548137664794922
    8. ' est' → logprob: -5.798137664794922
    9. ' des' → logprob: -6.048137664794922
    10. 'N' → logprob: -6.423137664794922

Token 125: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.3871462047100067
    2. ' assign' → logprob: -1.637146234512329
    3. 'assign' → logprob: -3.012146234512329
    4. ' assigned' → logprob: -3.137146234512329
    5. 'stock' → logprob: -4.26214599609375
    6. ' affect' → logprob: -4.76214599609375
    7. 'assigned' → logprob: -5.26214599609375
    8. ' stored' → logprob: -7.01214599609375
    9. ' ensuite' → logprob: -7.13714599609375
    10. '_stock' → logprob: -7.63714599609375

Token 126: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0934060737490654
    2. 'é' → logprob: -2.4684059619903564
    3. 'e' → logprob: -5.4684062004089355
    4. '=' → logprob: -9.218405723571777
    5. 'ées' → logprob: -9.843405723571777
    6. 'és' → logprob: -10.468405723571777
    7. 'er' → logprob: -11.218405723571777
    8. ' e' → logprob: -11.718405723571777
    9. ' =' → logprob: -12.093405723571777
    10. ' dans' → logprob: -12.343405723571777

Token 127: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6430578231811523
    2. 'dans' → logprob: -1.5180578231811523
    3. 'sorted' → logprob: -3.1430578231811523
    4. ' =' → logprob: -3.7680578231811523
    5. '(' → logprob: -3.8930578231811523
    6. 'liste' → logprob: -3.8930578231811523
    7. 's' → logprob: -4.018057823181152
    8. ')' → logprob: -4.768057823181152
    9. ' sorted' → logprob: -4.768057823181152
    10. ',' → logprob: -4.893057823181152

Token 128: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5359275341033936
    2. ' L' → logprob: -2.2859275341033936
    3. ' lst' → logprob: -2.2859275341033936
    4. ' sorted' → logprob: -3.0359275341033936
    5. ' numbers' → logprob: -3.5359275341033936
    6. 'L' → logprob: -3.7859275341033936
    7. ' ma' → logprob: -3.9109275341033936
    8. ' liste' → logprob: -4.035927772521973
    9. 'sorted' → logprob: -4.535927772521973
    10. 'la' → logprob: -4.910927772521973

Token 129: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.8480068445205688
    2. 'lst' → logprob: -1.5980068445205688
    3. 'L' → logprob: -2.3480067253112793
    4. 'numbers' → logprob: -2.7230067253112793
    5. ' lst' → logprob: -3.0980067253112793
    6. ' liste' → logprob: -3.2230067253112793
    7. ' L' → logprob: -3.3480067253112793
    8. 'sorted' → logprob: -4.098006725311279
    9. 'list' → logprob: -4.098006725311279
    10. 'l' → logprob: -4.848006725311279

Token 130: ' C' (ID: 363)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.42696794867515564
    2. 'lst' → logprob: -2.3019678592681885
    3. 'numbers' → logprob: -2.5519678592681885
    4. ' L' → logprob: -2.8019678592681885
    5. 'sorted' → logprob: -3.3019678592681885
    6. ' lst' → logprob: -3.9269678592681885
    7. 'liste' → logprob: -4.551968097686768
    8. ' numbers' → logprob: -4.926968097686768
    9. 'nums' → logprob: -5.051968097686768
    10. 'arr' → logprob: -5.176968097686768

Token 131: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038760315626859665
    2. 'C' → logprob: -4.038760185241699
    3. '=' → logprob: -4.288760185241699
    4. ' ' → logprob: -5.788760185241699
    5. 's' → logprob: -6.663760185241699
    6. '_' → logprob: -7.163760185241699
    7. ' =
' → logprob: -7.163760185241699
    8. 'c' → logprob: -8.0387601852417
    9. ',' → logprob: -9.1637601852417
    10. ' C' → logprob: -9.4137601852417

Token 132: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0017250381642952561
    2. ' C' → logprob: -6.376725196838379
    3. ' 
' → logprob: -11.876725196838379
    4. 's' → logprob: -12.251725196838379
    5. 'c' → logprob: -12.626725196838379
    6. '
' → logprob: -13.001725196838379
    7. '```' → logprob: -14.314225196838379
    8. ',' → logprob: -14.376725196838379
    9. '<|end|>' → logprob: -14.689225196838379
    10. ' ' → logprob: -15.001725196838379

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868793845176697
    2. '=' → logprob: -1.1368794441223145
    3. ',' → logprob: -12.261878967285156
    4. '_' → logprob: -14.011878967285156
    5. 's' → logprob: -14.636878967285156
    6. ' ' → logprob: -14.636878967285156
    7. ' ' → logprob: -14.636878967285156
    8. '.' → logprob: -14.886878967285156
    9. ')' → logprob: -15.511878967285156
    10. '_sorted' → logprob: -15.511878967285156

Token 134: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.08896628767251968
    2. ' sorted' → logprob: -2.4639663696289062
    3. 'list' → logprob: -10.838966369628906
    4. '(sorted' → logprob: -12.588966369628906
    5. ' list' → logprob: -13.338966369628906
    6. ' ' → logprob: -14.088966369628906
    7. 'Sorted' → logprob: -14.963966369628906
    8. 's' → logprob: -14.963966369628906
    9. '.sorted' → logprob: -14.963966369628906
    10. '_sorted' → logprob: -15.588966369628906

Token 135: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.020779985934495926
    2. '(map' → logprob: -4.020780086517334
    3. '(' → logprob: -6.395780086517334
    4. '(int' → logprob: -7.020780086517334
    5. ' (' → logprob: -10.270779609680176
    6. '(input' → logprob: -11.020779609680176
    7. 'list' → logprob: -11.895779609680176
    8. '(lst' → logprob: -13.270779609680176
    9. '((' → logprob: -13.520779609680176
    10. '(
' → logprob: -13.770779609680176

Token 136: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0032176414970308542
    2. '(' → logprob: -5.753217697143555
    3. '(
' → logprob: -10.503217697143555
    4. ' (' → logprob: -11.753217697143555
    5. '(int' → logprob: -12.503217697143555
    6. 'map' → logprob: -14.878217697143555
    7. '(m' → logprob: -15.253217697143555
    8. '(

' → logprob: -15.628217697143555
    9. ',map' → logprob: -16.628217697143555
    10. '(mapping' → logprob: -16.753217697143555

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004884212277829647
    2. '(' → logprob: -5.379884243011475
    3. '<int' → logprob: -8.879883766174316
    4. ' (' → logprob: -9.879883766174316
    5. '(
' → logprob: -10.004883766174316
    6. 'int' → logprob: -11.629883766174316
    7. '[int' → logprob: -12.129883766174316
    8. ')' → logprob: -12.754883766174316
    9. '=int' → logprob: -12.754883766174316
    10. ',int' → logprob: -13.004883766174316

Token 138: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008994588628411293
    2. ',input' → logprob: -5.0089945793151855
    3. '(' → logprob: -6.8839945793151855
    4. ',' → logprob: -7.0089945793151855
    5. 'input' → logprob: -8.758995056152344
    6. ' (' → logprob: -8.758995056152344
    7. '(
' → logprob: -11.258995056152344
    8. ' input' → logprob: -11.758995056152344
    9. ')' → logprob: -12.383995056152344
    10. '=input' → logprob: -12.633995056152344

Token 139: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16039909422397614
    2. ' input' → logprob: -1.910399079322815
    3. '(input' → logprob: -8.660399436950684
    4. ',input' → logprob: -14.660399436950684
    5. '_input' → logprob: -15.285399436950684
    6. ' ' → logprob: -15.410399436950684
    7. '<input' → logprob: -15.535399436950684
    8. '	input' → logprob: -15.535399436950684
    9. '=input' → logprob: -15.660399436950684
    10. '[input' → logprob: -16.535398483276367

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.700132997939363e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -15.500017166137695
    4. '()
' → logprob: -19.375017166137695
    5. '(' → logprob: -20.250017166137695
    6. '.split' → logprob: -20.375017166137695
    7. '.' → logprob: -20.625017166137695
    8. '()).' → logprob: -20.875017166137695
    9. '()[' → logprob: -21.000017166137695
    10. '().'' → logprob: -21.250017166137695

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.742448022123426e-05
    2. ' split' → logprob: -10.125067710876465
    3. 'strip' → logprob: -10.625067710876465
    4. ')' → logprob: -13.625067710876465
    5. 'rstrip' → logprob: -14.000067710876465
    6. '.split' → logprob: -15.125067710876465
    7. '(split' → logprob: -15.250067710876465
    8. 'plit' → logprob: -15.875067710876465
    9. ' ' → logprob: -16.62506675720215
    10. 'spl' → logprob: -16.62506675720215

Token 142: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6223999261856079
    2. '())))' → logprob: -0.8723999261856079
    3. '()))' → logprob: -3.1223998069763184
    4. '())' → logprob: -7.372399806976318
    5. ')))' → logprob: -7.997399806976318
    6. '(' → logprob: -8.622400283813477
    7. '()),' → logprob: -10.122400283813477
    8. '())).' → logprob: -10.247400283813477
    9. '()));' → logprob: -10.247400283813477
    10. '())))
' → logprob: -10.497400283813477

Token 143: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.03389948233962059
    2. '()' → logprob: -3.5338995456695557
    3. '))' → logprob: -5.908899307250977
    4. ')))' → logprob: -7.158899307250977
    5. ')' → logprob: -8.033899307250977
    6. '))),' → logprob: -8.658899307250977
    7. ' ' → logprob: -9.533899307250977
    8. '()))' → logprob: -10.533899307250977
    9. ',' → logprob: -11.283899307250977
    10. '),' → logprob: -11.408899307250977

Token 144: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.02982720173895359
    2. 'reverse' → logprob: -3.529827117919922
    3. ' True' → logprob: -9.654827117919922
    4. 'True' → logprob: -11.404827117919922
    5. '(reverse' → logprob: -14.029827117919922
    6. 'Reverse' → logprob: -15.029827117919922
    7. '.reverse' → logprob: -15.904827117919922
    8. '_reverse' → logprob: -16.029827117919922
    9. '=True' → logprob: -16.779827117919922
    10. ')' → logprob: -17.779827117919922

Token 145: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.006716913543641567
    2. '=' → logprob: -5.006716728210449
    3. '=T' → logprob: -14.50671672821045
    4. ' =' → logprob: -14.88171672821045
    5. ')=' → logprob: -15.00671672821045
    6. '=
' → logprob: -15.50671672821045
    7. '=False' → logprob: -16.381717681884766
    8. '=

' → logprob: -16.756717681884766
    9. '==' → logprob: -17.256717681884766
    10. ')' → logprob: -17.631717681884766

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. '))' → logprob: -11.000018119812012
    3. ')
' → logprob: -14.875018119812012
    4. '())' → logprob: -15.250018119812012
    5. ' )' → logprob: -15.500018119812012
    6. '()' → logprob: -16.125017166137695
    7. ')`' → logprob: -16.875017166137695
    8. ')#' → logprob: -17.500017166137695
    9. ')))' → logprob: -17.750017166137695
    10. '`)' → logprob: -18.375017166137695

Token 147: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5503789782524109
    2. '#' → logprob: -1.6753790378570557
    3. 'i' → logprob: -2.5503790378570557
    4. 'if' → logprob: -2.6753790378570557
    5. 's' → logprob: -3.5503790378570557
    6. 'f' → logprob: -3.9253790378570557
    7. 'print' → logprob: -4.550378799438477
    8. 'sum' → logprob: -5.425378799438477
    9. 'S' → logprob: -5.550378799438477
    10. 'F' → logprob: -5.675378799438477

Token 148: ' Déf' (ID: 180635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7561290264129639
    2. 'if' → logprob: -2.006129026412964
    3. 's' → logprob: -2.381129026412964
    4. 'result' → logprob: -2.506129026412964
    5. 'sum' → logprob: -3.131129026412964
    6. 'f' → logprob: -3.256129026412964
    7. 'i' → logprob: -3.381129026412964
    8. '#' → logprob: -3.631129026412964
    9. 'total' → logprob: -3.631129026412964
    10. 'count' → logprob: -4.631129264831543

Token 149: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5440730452537537
    2. 'ini' → logprob: -1.0440731048583984
    3. 'inir' → logprob: -3.2940731048583984
    4. 'inition' → logprob: -3.6690731048583984
    5. 'in' → logprob: -6.169073104858398
    6. 'inis' → logprob: -6.669073104858398
    7. 'inie' → logprob: -7.169073104858398
    8. '#' → logprob: -7.919073104858398
    9. 'initi' → logprob: -8.419073104858398
    10. 'inite' → logprob: -9.544073104858398

Token 150: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9184084534645081
    2. ' ' → logprob: -1.6684083938598633
    3. ' la' → logprob: -1.9184083938598633
    4. ' a' → logprob: -2.2934083938598633
    5. ' def' → logprob: -2.7934083938598633
    6. ' une' → logprob: -3.4184083938598633
    7. 'a' → logprob: -3.7934083938598633
    8. ' ' → logprob: -3.9184083938598633
    9. 's' → logprob: -5.293408393859863
    10. '<|end|>' → logprob: -5.293408393859863

Token 151: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.5917801260948181
    2. 'def' → logprob: -0.9667801260948181
    3. ' fonction' → logprob: -3.091780185699463
    4. ' function' → logprob: -4.716780185699463
    5. 'function' → logprob: -5.466780185699463
    6. ' def' → logprob: -6.716780185699463
    7. ' variable' → logprob: -6.841780185699463
    8. 'f' → logprob: -6.966780185699463
    9. 'for' → logprob: -7.091780185699463
    10. 'variable' → logprob: -7.091780185699463

Token 152: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7880612015724182
    2. ' K' → logprob: -1.7880611419677734
    3. '_' → logprob: -2.0380611419677734
    4. 'K' → logprob: -3.0380611419677734
    5. ' =' → logprob: -3.2880611419677734
    6. 'MAX' → logprob: -3.2880611419677734
    7. ' MAX' → logprob: -3.5380611419677734
    8. 'S' → logprob: -3.9130611419677734
    9. 's' → logprob: -4.413061141967773
    10. 'C' → logprob: -5.288061141967773

Token 153: 'mod' (ID: 4847)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.9964351654052734
    2. 'MAX' → logprob: -1.2464351654052734
    3. ' K' → logprob: -1.8714351654052734
    4. 'M' → logprob: -3.3714351654052734
    5. ' MAX' → logprob: -3.6214351654052734
    6. 'LIMIT' → logprob: -3.6214351654052734
    7. ' M' → logprob: -4.496435165405273
    8. 'MOD' → logprob: -4.621435165405273
    9. ' LIMIT' → logprob: -4.871435165405273
    10. 'MIN' → logprob: -4.996435165405273

Token 154: ''' (ID: 6)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.8166561722755432
    2. ''' → logprob: -1.1916561126708984
    3. ' =' → logprob: -1.5666561126708984
    4. 'ulus' → logprob: -4.566656112670898
    5. 'ULO' → logprob: -4.691656112670898
    6. '=' → logprob: -4.816656112670898
    7. 'ULE' → logprob: -5.316656112670898
    8. ' '' → logprob: -5.941656112670898
    9. 'ulo' → logprob: -5.941656112670898
    10. ' ='' → logprob: -6.441656112670898

Token 155: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006168154999613762
    2. '=' → logprob: -5.256168365478516
    3. ' ' → logprob: -7.006168365478516
    4. 'mod' → logprob: -11.506168365478516
    5. ' =
' → logprob: -11.756168365478516
    6. ' mod' → logprob: -12.381168365478516
    7. ',' → logprob: -13.381168365478516
    8. ' ,' → logprob: -14.006168365478516
    9. ' ' → logprob: -14.006168365478516
    10. 'space' → logprob: -14.506168365478516

Token 156: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798454225063324
    2. '=' → logprob: -1.8048454523086548
    3. ' ' → logprob: -9.554845809936523
    4. '<|end|>' → logprob: -12.179845809936523
    5. ' ' → logprob: -12.429845809936523
    6. ',' → logprob: -12.554845809936523
    7. ' mod' → logprob: -13.429845809936523
    8. 'mod' → logprob: -13.554845809936523
    9. '```' → logprob: -13.679845809936523
    10. '=int' → logprob: -13.679845809936523

Token 157: ' utilisée' (ID: 106548)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1084190607070923
    2. ' used' → logprob: -1.1084190607070923
    3. ' utilisée' → logprob: -2.1084189414978027
    4. ' ' → logprob: -2.6084189414978027
    5. ' utilisé' → logprob: -2.8584189414978027
    6. '=' → logprob: -2.9834189414978027
    7. 'used' → logprob: -4.483418941497803
    8. '<|end|>' → logprob: -4.983418941497803
    9. ' mod' → logprob: -5.608418941497803
    10. ' equal' → logprob: -5.733418941497803

Token 158: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1434469372034073
    2. '=' → logprob: -2.018446922302246
    3. 'mod' → logprob: -8.018446922302246
    4. ',' → logprob: -9.018446922302246
    5. ' pour' → logprob: -9.393446922302246
    6. ' mod' → logprob: -9.643446922302246
    7. ')' → logprob: -10.268446922302246
    8. ' ' → logprob: -10.393446922302246
    9. ' dans' → logprob: -10.893446922302246
    10. 'pour' → logprob: -11.018446922302246

Token 159: ' calcul' (ID: 7559)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.13455823063850403
    2. ' effectuer' → logprob: -3.5095582008361816
    3. ' calcul' → logprob: -3.7595582008361816
    4. ' la' → logprob: -3.8845582008361816
    5. ' les' → logprob: -3.8845582008361816
    6. '100' → logprob: -4.259558200836182
    7. ' l' → logprob: -5.634558200836182
    8. ' ' → logprob: -5.759558200836182
    9. '10' → logprob: -6.384558200836182
    10. ' mod' → logprob: -6.509558200836182

Token 160: 'er' (ID: 259)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6970008015632629
    2. 'er' → logprob: -0.9470008015632629
    3. 'us' → logprob: -2.447000741958618
    4. 'ating' → logprob: -4.572000980377197
    5. '_mod' → logprob: -5.072000980377197
    6. 'ator' → logprob: -6.197000980377197
    7. 'ateur' → logprob: -6.447000980377197
    8. ' mod' → logprob: -6.572000980377197
    9. '#' → logprob: -6.947000980377197
    10. ' modulus' → logprob: -7.447000980377197

Token 161: ' des' (ID: 731)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.41532227396965027
    2. ' les' → logprob: -1.5403223037719727
    3. ' ' → logprob: -2.7903223037719727
    4. ' la' → logprob: -3.4153223037719727
    5. ' l' → logprob: -4.290322303771973
    6. ' des' → logprob: -4.665322303771973
    7. 'le' → logprob: -6.290322303771973
    8. 's' → logprob: -6.665322303771973
    9. '100' → logprob: -7.040322303771973
    10. '1' → logprob: -7.415322303771973

Token 162: ' résultats' (ID: 48985)
  Prédit: ' résultats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.011025538668036461
    2. 'rés' → logprob: -5.011025428771973
    3. ' résultat' → logprob: -7.136025428771973
    4. ' nombres' → logprob: -7.386025428771973
    5. ' rés' → logprob: -7.511025428771973
    6. 'mod' → logprob: -7.761025428771973
    7. ' modulo' → logprob: -8.011025428771973
    8. ' rest' → logprob: -8.261025428771973
    9. '```' → logprob: -8.386025428771973
    10. 's' → logprob: -8.761025428771973

Token 163: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09180565178394318
    2. ' modulo' → logprob: -3.7168056964874268
    3. ' mod' → logprob: -3.9668056964874268
    4. '=' → logprob: -3.9668056964874268
    5. 'mod' → logprob: -4.216805458068848
    6. ' ' → logprob: -4.841805458068848
    7. '_mod' → logprob: -7.466805458068848
    8. ',' → logprob: -7.591805458068848
    9. ' modulus' → logprob: -7.966805458068848
    10. '100' → logprob: -8.216805458068848

Token 164: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025336064398288727
    2. '10' → logprob: -3.9003360271453857
    3. '100' → logprob: -6.400336265563965
    4. ' =' → logprob: -6.775336265563965
    5. '32' → logprob: -7.525336265563965
    6. '<|end|>' → logprob: -8.525336265563965
    7. '1' → logprob: -8.650336265563965
    8. ' ,' → logprob: -8.650336265563965
    9. '=' → logprob: -8.775336265563965
    10. ',' → logprob: -9.650336265563965

Token 165: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3937281370162964
    2. '100' → logprob: -1.1437281370162964
    3. ' ' → logprob: -5.143728256225586
    4. '(' → logprob: -7.643728256225586
    5. '998' → logprob: -7.643728256225586
    6. '1' → logprob: -10.893728256225586
    7. ' (' → logprob: -10.893728256225586
    8. 'int' → logprob: -14.018728256225586
    9. '```' → logprob: -14.268728256225586
    10. '999' → logprob: -14.643728256225586

Token 166: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004401036538183689
    2. '000' → logprob: -5.629401206970215
    3. '00' → logprob: -7.879401206970215
    4. ' **' → logprob: -8.629401206970215
    5. '9' → logprob: -9.629401206970215
    6. '7' → logprob: -9.879401206970215
    7. '^' → logprob: -10.254401206970215
    8. '0' → logprob: -10.504401206970215
    9. '```' → logprob: -11.254401206970215
    10. '*' → logprob: -11.629401206970215

Token 167: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '09' → logprob: -14.500000953674316
    3. '```' → logprob: -14.625000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '10' → logprob: -19.375001907348633
    6. '``' → logprob: -19.625001907348633
    7. '９' → logprob: -20.500001907348633
    8. '8' → logprob: -20.812501907348633
    9. '_' → logprob: -20.875001907348633
    10. '18' → logprob: -20.875001907348633

Token 168: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013469000114127994
    2. ' +' → logprob: -6.626347064971924
    3. '7' → logprob: -11.001346588134766
    4. '+
' → logprob: -13.126346588134766
    5. '9' → logprob: -13.876346588134766
    6. ' ' → logprob: -15.251346588134766
    7. '```' → logprob: -15.376346588134766
    8. '+

' → logprob: -15.876346588134766
    9. ' ' → logprob: -15.876346588134766
    10. '()+' → logprob: -16.251346588134766

Token 169: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003732380224391818
    2. '9' → logprob: -6.128732204437256
    3. ' ' → logprob: -6.503732204437256
    4. '+' → logprob: -10.003732681274414
    5. '```' → logprob: -13.378732681274414
    6. ' +' → logprob: -15.128732681274414
    7. '  ' → logprob: -15.878732681274414
    8. '1' → logprob: -16.003732681274414
    9. '67' → logprob: -16.066232681274414
    10. '<|end|>' → logprob: -16.253732681274414

Token 170: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.5048530030981055e-06
    2. '+' → logprob: -13.625001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '9' → logprob: -17.000001907348633
    5. '```' → logprob: -18.250001907348633
    6. '07' → logprob: -19.562501907348633
    7. ' +' → logprob: -19.875001907348633
    8. '37' → logprob: -20.437501907348633
    9. '67' → logprob: -20.562501907348633
    10. '' → logprob: -20.750001907348633

Token 171: ',
' (ID: 412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15078215301036835
    2. '=' → logprob: -2.6507821083068848
    3. 'mod' → logprob: -2.7757821083068848
    4. ' mod' → logprob: -6.025782108306885
    5. ' ' → logprob: -6.275782108306885
    6. ' =
' → logprob: -7.150782108306885
    7. '_mod' → logprob: -7.150782108306885
    8. ')' → logprob: -7.275782108306885
    9. ',' → logprob: -8.650782585144043
    10. '
' → logprob: -9.400782585144043

Token 172: '#' (ID: 2)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.22960202395915985
    2. 'mod' → logprob: -1.7296019792556763
    3. ' ' → logprob: -3.604602098464966
    4. ' modulus' → logprob: -8.604601860046387
    5. '10' → logprob: -8.854601860046387
    6. ' modulo' → logprob: -8.979601860046387
    7. ')' → logprob: -10.229601860046387
    8. ' )' → logprob: -10.479601860046387
    9. '_mod' → logprob: -10.854601860046387
    10. '0' → logprob: -11.229601860046387

Token 173: ' ce' (ID: 2357)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2014346867799759
    2. ' mod' → logprob: -1.7014347314834595
    3. ' ' → logprob: -11.201435089111328
    4. ' modulo' → logprob: -12.701435089111328
    5. '_mod' → logprob: -13.951435089111328
    6. ' мод' → logprob: -14.201435089111328
    7. ' modulus' → logprob: -14.326435089111328
    8. ' 
' → logprob: -14.826435089111328
    9. '	mod' → logprob: -14.951435089111328
    10. ' ' → logprob: -15.201435089111328

Token 174: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.14982247352600098
    2. ' mod' → logprob: -2.524822473526001
    3. 'mod' → logprob: -3.649822473526001
    4. ' =' → logprob: -4.274822235107422
    5. '=' → logprob: -5.024822235107422
    6. ' modulo' → logprob: -5.274822235107422
    7. 'qui' → logprob: -5.899822235107422
    8. ' sera' → logprob: -7.399822235107422
    9. ' modulus' → logprob: -7.524822235107422
    10. ' que' → logprob: -7.899822235107422

Token 175: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.04201016202569008
    2. ' is' → logprob: -4.042010307312012
    3. ' permet' → logprob: -4.542010307312012
    4. ' garantit' → logprob: -4.792010307312012
    5. ' signifie' → logprob: -6.917010307312012
    6. ' correspond' → logprob: -7.042010307312012
    7. ' mod' → logprob: -7.417010307312012
    8. ' assure' → logprob: -7.792010307312012
    9. 'est' → logprob: -8.167010307312012
    10. ' protège' → logprob: -8.542010307312012

Token 176: ' une' (ID: 2463)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.6103740930557251
    2. ' une' → logprob: -1.735374093055725
    3. ' courant' → logprob: -2.4853739738464355
    4. ' fréquent' → logprob: -2.6103739738464355
    5. 'standard' → logprob: -3.9853739738464355
    6. ' souvent' → logprob: -3.9853739738464355
    7. 's' → logprob: -4.1103739738464355
    8. ' common' → logprob: -4.2353739738464355
    9. ' utilisé' → logprob: -4.8603739738464355
    10. ' commun' → logprob: -5.1103739738464355

Token 177: ' grande' (ID: 10094)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.0746372938156128
    2. ' ' → logprob: -1.1996372938156128
    3. ' prime' → logprob: -2.4496374130249023
    4. ' constante' → logprob: -2.6996374130249023
    5. ' norme' → logprob: -2.8246374130249023
    6. ' standard' → logprob: -3.8246374130249023
    7. ' common' → logprob: -3.8246374130249023
    8. ' ' → logprob: -4.324637413024902
    9. 'pr' → logprob: -4.574637413024902
    10. 'prime' → logprob: -4.699637413024902

Token 178: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32176682353019714
    2. ' mod' → logprob: -2.5717668533325195
    3. ' modulus' → logprob: -3.0717668533325195
    4. 'mod' → logprob: -3.4467668533325195
    5. ' constante' → logprob: -3.5717668533325195
    6. ' valeur' → logprob: -3.6967668533325195
    7. '```' → logprob: -3.9467668533325195
    8. ' number' → logprob: -4.4467668533325195
    9. ' modulo' → logprob: -5.3217668533325195
    10. ' nombre' → logprob: -5.8217668533325195

Token 179: ' première' (ID: 23423)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.7134289741516113
    2. ' mod' → logprob: -1.9634289741516113
    3. 'mod' → logprob: -1.9634289741516113
    4. ' =' → logprob: -2.2134289741516113
    5. ' ' → logprob: -2.2134289741516113
    6. ',' → logprob: -2.7134289741516113
    7. '.' → logprob: -2.7134289741516113
    8. '=' → logprob: -3.4634289741516113
    9. ' modulo' → logprob: -3.5884289741516113
    10. ':' → logprob: -3.5884289741516113

Token 180: ' souvent' (ID: 28137)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.28927141427993774
    2. ')' → logprob: -1.789271354675293
    3. ' mod' → logprob: -3.289271354675293
    4. ' ' → logprob: -4.414271354675293
    5. ',' → logprob: -4.414271354675293
    6. ' )' → logprob: -4.664271354675293
    7. '_mod' → logprob: -5.914271354675293
    8. ' =' → logprob: -5.914271354675293
    9. '.' → logprob: -6.414271354675293
    10. ' (' → logprob: -6.414271354675293

Token 181: ' utilisée' (ID: 106548)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.0978217124938965
    2. ' utilisée' → logprob: -1.0978217124938965
    3. ' mod' → logprob: -1.7228217124938965
    4. 'mod' → logprob: -3.7228217124938965
    5. ' modulo' → logprob: -3.7228217124938965
    6. ' =' → logprob: -4.0978217124938965
    7. ' ' → logprob: -4.3478217124938965
    8. '<|end|>' → logprob: -4.7228217124938965
    9. 'used' → logprob: -4.9728217124938965
    10. ' modulus' → logprob: -5.0978217124938965

Token 182: ' pour' (ID: 1930)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.5946263670921326
    2. ' mod' → logprob: -1.5946264266967773
    3. 'mod' → logprob: -2.0946264266967773
    4. ' pour' → logprob: -2.9696264266967773
    5. ' modulo' → logprob: -3.7196264266967773
    6. ' en' → logprob: -4.094626426696777
    7. ' in' → logprob: -4.469626426696777
    8. 'dans' → logprob: -5.219626426696777
    9. ' ' → logprob: -5.594626426696777
    10. ',' → logprob: -5.719626426696777

Token 183: ' éviter' (ID: 64013)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6837483644485474
    2. ' des' → logprob: -1.3087483644485474
    3. 'les' → logprob: -2.058748245239258
    4. ' éviter' → logprob: -3.183748245239258
    5. 'des' → logprob: -3.558748245239258
    6. 's' → logprob: -5.058748245239258
    7. ' prévenir' → logprob: -5.933748245239258
    8. ' effectuer' → logprob: -6.058748245239258
    9. ' le' → logprob: -6.183748245239258
    10. ' assurer' → logprob: -6.558748245239258

Token 184: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11637192219495773
    2. ' des' → logprob: -2.6163718700408936
    3. 'les' → logprob: -3.8663718700408936
    4. ' overflow' → logprob: -4.991372108459473
    5. 'des' → logprob: -5.866372108459473
    6. ' l' → logprob: -6.116372108459473
    7. ' ' → logprob: -6.866372108459473
    8. '<|end|>' → logprob: -7.241372108459473
    9. 's' → logprob: -7.616372108459473
    10. 'overflow' → logprob: -7.616372108459473

Token 185: ' dépasse' (ID: 165701)
  Prédit: ' déb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déb' → logprob: -0.3848646879196167
    2. ' dépasse' → logprob: -2.0098648071289062
    3. ' overflow' → logprob: -2.1348648071289062
    4. ' erreurs' → logprob: -3.1348648071289062
    5. 'overflow' → logprob: -4.134864807128906
    6. ' conflits' → logprob: -6.134864807128906
    7. ' over' → logprob: -6.509864807128906
    8. ' problèmes' → logprob: -6.509864807128906
    9. 'dé' → logprob: -7.259864807128906
    10. ' collisions' → logprob: -7.759864807128906

Token 186: 'ments' (ID: 1626)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6837821006774902
    2. ')' → logprob: -2.1837821006774902
    3. '1' → logprob: -3.1837821006774902
    4. '=' → logprob: -3.3087821006774902
    5. 's' → logprob: -3.4337821006774902
    6. 'es' → logprob: -3.9337821006774902
    7. ' (' → logprob: -4.05878210067749
    8. 'mod' → logprob: -4.05878210067749
    9. '(' → logprob: -4.18378210067749
    10. '2' → logprob: -4.30878210067749

Token 187: ' lors' (ID: 15456)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16803044080734253
    2. ' ' → logprob: -2.0430305004119873
    3. ' des' → logprob: -4.793030261993408
    4. '_' → logprob: -5.043030261993408
    5. 'de' → logprob: -6.418030261993408
    6. ' (' → logprob: -6.418030261993408
    7. '1' → logprob: -7.168030261993408
    8. ')' → logprob: -7.418030261993408
    9. ',' → logprob: -7.418030261993408
    10. ' =' → logprob: -7.543030261993408

Token 188: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24084250628948212
    2. ' des' → logprob: -2.240842580795288
    3. '<|end|>' → logprob: -2.615842580795288
    4. ' d' → logprob: -4.240842342376709
    5. ' of' → logprob: -4.990842342376709
    6. ')' → logprob: -5.990842342376709
    7. ' ' → logprob: -6.115842342376709
    8. ' du' → logprob: -6.115842342376709
    9. 'des' → logprob: -6.240842342376709
    10. 'de' → logprob: -6.740842342376709

Token 189: ' gros' (ID: 28636)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.26179105043411255
    2. 'calcul' → logprob: -1.6367909908294678
    3. ' ' → logprob: -4.511791229248047
    4. ' calculations' → logprob: -4.761791229248047
    5. ' l' → logprob: -5.011791229248047
    6. 'l' → logprob: -5.261791229248047
    7. ' les' → logprob: -6.636791229248047
    8. ' le' → logprob: -7.261791229248047
    9. 's' → logprob: -7.886791229248047
    10. ' opérations' → logprob: -8.011791229248047

Token 190: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.17795394361019135
    2. 'calcul' → logprob: -1.9279539585113525
    3. ' nombres' → logprob: -5.177953720092773
    4. 'ent' → logprob: -5.427953720092773
    5. 's' → logprob: -5.802953720092773
    6. 'mod' → logprob: -6.552953720092773
    7. ' ent' → logprob: -7.177953720092773
    8. ' espaces' → logprob: -7.177953720092773
    9. ' calculations' → logprob: -7.302953720092773
    10. 'esp' → logprob: -8.927953720092773

Token 191: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.596409022808075
    2. 'ations' → logprob: -0.846409022808075
    3. ')' → logprob: -5.221408843994141
    4. 'ements' → logprob: -5.846408843994141
    5. 'érations' → logprob: -6.346408843994141
    6. 'ulations' → logprob: -6.471408843994141
    7. 'eurs' → logprob: -6.596408843994141
    8. 'ateurs' → logprob: -6.846408843994141
    9. 'nements' → logprob: -6.846408843994141
    10. 'ions' → logprob: -7.096408843994141

Token 192: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1325819194316864
    2. 'mod' → logprob: -3.132581949234009
    3. '(' → logprob: -3.257581949234009
    4. ' )' → logprob: -4.00758171081543
    5. '_' → logprob: -5.13258171081543
    6. ' ' → logprob: -5.25758171081543
    7. '_mod' → logprob: -5.88258171081543
    8. ' (' → logprob: -6.00758171081543
    9. ' mod' → logprob: -6.25758171081543
    10. '(mod' → logprob: -6.75758171081543

Token 193: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10188412666320801
    2. ' mod' → logprob: -2.351884126663208
    3. '
' → logprob: -6.476883888244629
    4. ' 
' → logprob: -9.851883888244629
    5. ' =' → logprob: -10.351883888244629
    6. '_mod' → logprob: -11.726883888244629
    7. ' ' → logprob: -11.851883888244629
    8. '```' → logprob: -12.101883888244629
    9. '	mod' → logprob: -12.226883888244629
    10. '(mod' → logprob: -12.351883888244629

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326324343681335
    2. ' =' → logprob: -0.7576324343681335
    3. ' ' → logprob: -11.0076322555542
    4. ')' → logprob: -12.1326322555542
    5. ',' → logprob: -12.5076322555542
    6. ' =
' → logprob: -13.0076322555542
    7. '=

' → logprob: -13.3826322555542
    8. ' ' → logprob: -13.5076322555542
    9. '<|end|>' → logprob: -15.1326322555542
    10. '=int' → logprob: -15.3826322555542

Token 195: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5777274370193481
    2. '10' → logprob: -0.8277274370193481
    3. '100' → logprob: -6.327727317810059
    4. ' ' → logprob: -15.702727317810059
    5. '1' → logprob: -16.577728271484375
    6. ' (' → logprob: -17.327728271484375
    7. '(' → logprob: -17.827728271484375
    8. '109' → logprob: -18.577728271484375
    9. 'int' → logprob: -18.702728271484375
    10. '​' → logprob: -18.952728271484375

Token 196: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023255497217178345
    2. '100' → logprob: -3.7732555866241455
    3. ' ' → logprob: -11.523255348205566
    4. '(' → logprob: -15.773255348205566
    5. 'int' → logprob: -17.398256301879883
    6. '1' → logprob: -18.023256301879883
    7. '109' → logprob: -18.023256301879883
    8. '```' → logprob: -19.898256301879883
    9. '１０' → logprob: -20.398256301879883
    10. '101' → logprob: -21.273256301879883

Token 197: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00026574634830467403
    2. ' **' → logprob: -8.500266075134277
    3. '9' → logprob: -9.750266075134277
    4. '*' → logprob: -13.125266075134277
    5. '+' → logprob: -13.625266075134277
    6. '^' → logprob: -15.500266075134277
    7. '000' → logprob: -15.500266075134277
    8. ' ' → logprob: -15.750266075134277
    9. '09' → logprob: -17.12526512145996
    10. '009' → logprob: -17.37526512145996

Token 198: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.125
    3. ' ' → logprob: -18.875
    4. '```' → logprob: -20.625
    5. '９' → logprob: -21.125
    6. '+' → logprob: -21.25
    7. '
' → logprob: -22.625
    8. '۹' → logprob: -23.0
    9. '009' → logprob: -23.5625
    10. '९' → logprob: -23.9375

Token 199: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804333135485649
    2. ' +' → logprob: -3.288043260574341
    3. '7' → logprob: -13.913043022155762
    4. '+
' → logprob: -15.163043022155762
    5. ' ' → logprob: -15.538043022155762
    6. ' ' → logprob: -15.913043022155762
    7. '＋' → logprob: -16.163043975830078
    8. ' plus' → logprob: -16.288043975830078
    9. ' +
' → logprob: -16.788043975830078
    10. '9' → logprob: -17.913043975830078

Token 200: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '+' → logprob: -16.75
    4. '07' → logprob: -17.5
    5. '007' → logprob: -20.625
    6. '۷' → logprob: -20.75
    7. '' → logprob: -20.875
    8. '７' → logprob: -21.0
    9. '```' → logprob: -21.375
    10. '७' → logprob: -21.875

Token 201: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -18.125
    3. ' ' → logprob: -18.5
    4. '```' → logprob: -20.0
    5. '' → logprob: -21.125
    6. '+' → logprob: -21.125
    7. '007' → logprob: -21.625
    8. '47' → logprob: -22.0625
    9. '７' → logprob: -22.125
    10. '۷' → logprob: -22.25

Token 202: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21339023113250732
    2. '<|end|>' → logprob: -1.8383902311325073
    3. '#' → logprob: -3.588390350341797
    4. '\n' → logprob: -6.463390350341797
    5. '

' → logprob: -7.463390350341797
    6. ' 
' → logprob: -7.713390350341797
    7. 'n' → logprob: -7.963390350341797
    8. ' ' → logprob: -8.213390350341797
    9. ')' → logprob: -8.213390350341797
    10. '<|end|>' → logprob: -8.213390350341797

Token 203: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.606682538986206
    2. '#' → logprob: -2.106682538986206
    3. 'res' → logprob: -2.856682538986206
    4. 's' → logprob: -2.981682538986206
    5. 'S' → logprob: -3.106682538986206
    6. 'sum' → logprob: -3.231682538986206
    7. 'for' → logprob: -3.731682538986206
    8. 'r' → logprob: -3.981682538986206
    9. 'answer' → logprob: -3.981682538986206
    10. 'count' → logprob: -4.106682777404785

Token 204: ' Dé' (ID: 27247)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11895808577537537
    2. 's' → logprob: -3.368957996368408
    3. 'res' → logprob: -3.368957996368408
    4. 'dp' → logprob: -4.618957996368408
    5. 'total' → logprob: -4.993957996368408
    6. 'r' → logprob: -5.118957996368408
    7. 'sum' → logprob: -5.243957996368408
    8. '#' → logprob: -5.368957996368408
    9. 'answer' → logprob: -5.993957996368408
    10. 'count' → logprob: -6.243957996368408

Token 205: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001070442725904286
    2. '#' → logprob: -7.376070499420166
    3. 'but' → logprob: -8.001070022583008
    4. 'fi' → logprob: -10.126070022583008
    5. 'fin' → logprob: -10.501070022583008
    6. 'def' → logprob: -11.751070022583008
    7. 'for' → logprob: -12.126070022583008
    8. 'r' → logprob: -12.501070022583008
    9. '
' → logprob: -12.626070022583008
    10. 'rés' → logprob: -12.626070022583008

Token 206: 'ition' (ID: 868)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.32446855306625366
    2. 'def' → logprob: -2.4494686126708984
    3. '#' → logprob: -2.5744686126708984
    4. 'ir' → logprob: -2.8244686126708984
    5. 'fin' → logprob: -4.324468612670898
    6. 'ine' → logprob: -4.949468612670898
    7. 'inir' → logprob: -5.074468612670898
    8. 'inition' → logprob: -5.199468612670898
    9. 'e' → logprob: -5.199468612670898
    10. 'if' → logprob: -5.449468612670898

Token 207: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4407506287097931
    2. 'def' → logprob: -1.1907505989074707
    3. ' def' → logprob: -3.3157505989074707
    4. ' de' → logprob: -4.940750598907471
    5. ' of' → logprob: -6.315750598907471
    6. '_' → logprob: -6.565750598907471
    7. ' d' → logprob: -6.565750598907471
    8. ' =' → logprob: -6.690750598907471
    9. ' ' → logprob: -7.315750598907471
    10. ' for' → logprob: -7.690750598907471

Token 208: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02735697664320469
    2. ' e' → logprob: -4.02735710144043
    3. 'u' → logprob: -5.77735710144043
    4. 'ef' → logprob: -6.02735710144043
    5. ''' → logprob: -6.65235710144043
    6. ' ' → logprob: -7.15235710144043
    7. 'f' → logprob: -7.77735710144043
    8. ''une' → logprob: -8.02735710144043
    9. 'a' → logprob: -8.40235710144043
    10. 'é' → logprob: -9.27735710144043

Token 209: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011625961400568485
    2. 'f' → logprob: -5.13662576675415
    3. 'fonction' → logprob: -5.63662576675415
    4. '
' → logprob: -7.51162576675415
    5. ' 
' → logprob: -8.136626243591309
    6. 'd' → logprob: -8.511626243591309
    7. 'function' → logprob: -8.511626243591309
    8. ' def' → logprob: -8.761626243591309
    9. ' function' → logprob: -9.386626243591309
    10. ' fonction' → logprob: -9.511626243591309

Token 210: ' mp' (ID: 11543)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31623950600624084
    2. 'def' → logprob: -1.3162394762039185
    3. ' calculate' → logprob: -7.316239356994629
    4. ' de' → logprob: -7.691239356994629
    5. ' factorial' → logprob: -7.816239356994629
    6. '
' → logprob: -7.941239356994629
    7. ' ' → logprob: -8.941239356994629
    8. 'de' → logprob: -9.566239356994629
    9. ' sum' → logprob: -9.566239356994629
    10. ' ' → logprob: -9.691239356994629

Token 211: 'ow' (ID: 384)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001786086824722588
    2. 'ow' → logprob: -6.751786231994629
    3. '
' → logprob: -8.376786231994629
    4. 'd' → logprob: -9.501786231994629
    5. 'a' → logprob: -10.376786231994629
    6. 'r' → logprob: -10.501786231994629
    7. 'f' → logprob: -10.501786231994629
    8. ' def' → logprob: -10.626786231994629
    9. '@' → logprob: -10.751786231994629
    10. '_def' → logprob: -10.876786231994629

Token 212: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007071967236697674
    2. 'def' → logprob: -5.0070719718933105
    3. '(
' → logprob: -8.757071495056152
    4. '(m' → logprob: -9.882071495056152
    5. '(n' → logprob: -10.132071495056152
    6. ' (' → logprob: -10.257071495056152
    7. '_' → logprob: -10.757071495056152
    8. '(x' → logprob: -11.632071495056152
    9. '(def' → logprob: -12.007071495056152
    10. '**' → logprob: -12.382071495056152

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028519481420516968
    2. ' ,' → logprob: -6.252851963043213
    3. ',x' → logprob: -7.127851963043213
    4. ',n' → logprob: -9.752851486206055
    5. ',y' → logprob: -11.252851486206055
    6. '(x' → logprob: -11.627851486206055
    7. ',
' → logprob: -11.752851486206055
    8. ',k' → logprob: -11.752851486206055
    9. ',a' → logprob: -12.252851486206055
    10. ',p' → logprob: -12.627851486206055

Token 214: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3665481507778168
    2. 'y' → logprob: -1.3665481805801392
    3. 'p' → logprob: -3.6165480613708496
    4. 'k' → logprob: -4.86654806137085
    5. ' n' → logprob: -5.49154806137085
    6. 'b' → logprob: -5.61654806137085
    7. 'e' → logprob: -5.61654806137085
    8. ' y' → logprob: -5.61654806137085
    9. 'a' → logprob: -6.49154806137085
    10. 'm' → logprob: -8.491548538208008

Token 215: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1295803040266037
    2. '):' → logprob: -2.12958025932312
    3. ')' → logprob: -6.004580497741699
    4. ' ,' → logprob: -9.3795804977417
    5. '):
' → logprob: -9.8795804977417
    6. ',
' → logprob: -11.2545804977417
    7. ' ):' → logprob: -11.3795804977417
    8. ',x' → logprob: -12.0045804977417
    9. 'def' → logprob: -12.6295804977417
    10. ':' → logprob: -13.3795804977417

Token 216: ' qui' (ID: 2780)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4651346802711487
    2. 'def' → logprob: -1.715134620666504
    3. '(' → logprob: -1.965134620666504
    4. ':' → logprob: -3.090134620666504
    5. ' def' → logprob: -5.840134620666504
    6. '(
' → logprob: -6.340134620666504
    7. ' :' → logprob: -8.340134620666504
    8. '(n' → logprob: -8.340134620666504
    9. '(def' → logprob: -8.340134620666504
    10. ')' → logprob: -8.840134620666504

Token 217: ' va' (ID: 3423)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006382218096405268
    2. 'def' → logprob: -6.006381988525391
    3. ':
' → logprob: -6.506381988525391
    4. ' :' → logprob: -6.881381988525391
    5. ' calculates' → logprob: -8.25638198852539
    6. ':return' → logprob: -8.63138198852539
    7. ':def' → logprob: -8.63138198852539
    8. 'calcul' → logprob: -8.75638198852539
    9. ' def' → logprob: -8.88138198852539
    10. ' déf' → logprob: -9.00638198852539

Token 218: ' calcul' (ID: 7559)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5776807069778442
    2. ' calcul' → logprob: -1.0776807069778442
    3. ' calculate' → logprob: -3.8276805877685547
    4. ' :' → logprob: -4.077680587768555
    5. ':
' → logprob: -4.702680587768555
    6. '):' → logprob: -4.827680587768555
    7. ' def' → logprob: -4.952680587768555
    8. ' return' → logprob: -5.077680587768555
    9. ' effectuer' → logprob: -5.327680587768555
    10. 'calcul' → logprob: -5.327680587768555

Token 219: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005501718260347843
    2. 'ter' → logprob: -8.125550270080566
    3. 'ate' → logprob: -8.750550270080566
    4. 'e' → logprob: -9.750550270080566
    5. 'ater' → logprob: -10.875550270080566
    6. '```' → logprob: -12.500550270080566
    7. 'ler' → logprob: -13.000550270080566
    8. 'iter' → logprob: -13.000550270080566
    9. '#' → logprob: -13.750550270080566
    10. 'eter' → logprob: -14.375550270080566

Token 220: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.245069682598114
    2. ' (' → logprob: -2.120069742202759
    3. ' x' → logprob: -3.120069742202759
    4. '(' → logprob: -3.745069742202759
    5. ' l' → logprob: -4.74506950378418
    6. ' la' → logprob: -5.37006950378418
    7. 'pow' → logprob: -5.62006950378418
    8. '(pow' → logprob: -5.74506950378418
    9. ' le' → logprob: -6.24506950378418
    10. 'x' → logprob: -6.24506950378418

Token 221: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5777547359466553
    2. ' x' → logprob: -0.8277547359466553
    3. 'pow' → logprob: -6.577754974365234
    4. '(x' → logprob: -8.577754974365234
    5. ' pow' → logprob: -9.327754974365234
    6. ')' → logprob: -9.452754974365234
    7. ')x' → logprob: -10.827754974365234
    8. ' (' → logprob: -10.827754974365234
    9. '(pow' → logprob: -11.452754974365234
    10. ' ' → logprob: -11.702754974365234

Token 222: ' **' (ID: 6240)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.025826334953308
    2. '**' → logprob: -1.025826334953308
    3. ' **' → logprob: -1.400826334953308
    4. ' ,' → logprob: -4.275826454162598
    5. ' %' → logprob: -4.275826454162598
    6. '%' → logprob: -4.900826454162598
    7. ')' → logprob: -7.400826454162598
    8. ' ' → logprob: -9.150826454162598
    9. '```' → logprob: -9.150826454162598
    10. '**,' → logprob: -9.150826454162598

Token 223: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931834816932678
    2. ' n' → logprob: -0.6931834816932678
    3. ' ' → logprob: -10.568183898925781
    4. ')n' → logprob: -12.443183898925781
    5. ')' → logprob: -12.943183898925781
    6. '	n' → logprob: -13.568183898925781
    7. '
' → logprob: -14.068183898925781
    8. '(n' → logprob: -14.068183898925781
    9. ' ' → logprob: -15.193183898925781
    10. ',' → logprob: -15.568183898925781

Token 224: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026427218690514565
    2. ',' → logprob: -6.752642631530762
    3. ' )' → logprob: -7.002642631530762
    4. ')%' → logprob: -7.627642631530762
    5. '%' → logprob: -10.502642631530762
    6. '**' → logprob: -10.877642631530762
    7. ' ,' → logprob: -12.377642631530762
    8. ')
' → logprob: -12.502642631530762
    9. ' ' → logprob: -13.002642631530762
    10. 'def' → logprob: -13.002642631530762

Token 225: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5340328216552734
    2. '(x' → logprob: -1.6590328216552734
    3. ':' → logprob: -2.1590328216552734
    4. ')' → logprob: -3.2840328216552734
    5. ',' → logprob: -3.6590328216552734
    6. '):' → logprob: -3.9090328216552734
    7. ' def' → logprob: -5.034032821655273
    8. '%' → logprob: -5.409032821655273
    9. ' :' → logprob: -5.534032821655273
    10. '(' → logprob: -6.034032821655273

Token 226: ' '' (ID: 461)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7111927270889282
    2. ' mod' → logprob: -0.9611927270889282
    3. '(mod' → logprob: -2.3361926078796387
    4. ' (' → logprob: -3.5861926078796387
    5. '(' → logprob: -6.336192607879639
    6. ' ' → logprob: -8.586193084716797
    7. ' (
' → logprob: -10.336193084716797
    8. '(x' → logprob: -10.461193084716797
    9. ')' → logprob: -10.586193084716797
    10. '_mod' → logprob: -11.336193084716797

Token 227: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.38687798380851746
    2. ' mod' → logprob: -1.1368780136108398
    3. '(mod' → logprob: -12.13687801361084
    4. ' ' → logprob: -14.38687801361084
    5. '	mod' → logprob: -15.13687801361084
    6. '_mod' → logprob: -15.63687801361084
    7. ')' → logprob: -15.88687801361084
    8. ' modul' → logprob: -16.011877059936523
    9. ' ' → logprob: -16.386877059936523
    10. '
' → logprob: -16.636877059936523

Token 228: ''' (ID: 6)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07268387824296951
    2. ')' → logprob: -2.697683811187744
    3. '):
' → logprob: -6.822683811187744
    4. 'def' → logprob: -6.822683811187744
    5. ':' → logprob: -7.822683811187744
    6. ' ):' → logprob: -9.322684288024902
    7. ',' → logprob: -10.197684288024902
    8. ' def' → logprob: -11.447684288024902
    9. ''):' → logprob: -11.947684288024902
    10. '**' → logprob: -12.572684288024902

Token 229: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1626700460910797
    2. 'def' → logprob: -2.037670135498047
    3. '(' → logprob: -4.287670135498047
    4. ':
' → logprob: -5.912670135498047
    5. ')' → logprob: -6.412670135498047
    6. '(x' → logprob: -7.537670135498047
    7. ':def' → logprob: -8.037670135498047
    8. '(
' → logprob: -8.662670135498047
    9. ' def' → logprob: -8.912670135498047
    10. ',' → logprob: -9.162670135498047

Token 230: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18621551990509033
    2. 'u' → logprob: -2.436215400695801
    3. 'ans' → logprob: -3.686215400695801
    4. 'es' → logprob: -4.686215400695801
    5. ''une' → logprob: -4.936215400695801
    6. 'efined' → logprob: -5.186215400695801
    7. 'ef' → logprob: -5.436215400695801
    8. ''un' → logprob: -5.561215400695801
    9. 'é' → logprob: -5.686215400695801
    10. ',' → logprob: -6.061215400695801

Token 231: ' manière' (ID: 35013)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7031696438789368
    2. 'ef' → logprob: -2.078169584274292
    3. 'éf' → logprob: -2.578169584274292
    4. ')' → logprob: -2.953169584274292
    5. 'def' → logprob: -3.078169584274292
    6. ',' → logprob: -3.203169584274292
    7. ' :' → logprob: -3.328169584274292
    8. ' ' → logprob: -3.453169584274292
    9. 'e' → logprob: -3.953169584274292
    10. 'f' → logprob: -4.703169822692871

Token 232: ' efficace' (ID: 54338)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7547173500061035
    2. 'def' → logprob: -1.8797173500061035
    3. ' :' → logprob: -2.1297173500061035
    4. ' efficace' → logprob: -2.6297173500061035
    5. ' optim' → logprob: -2.6297173500061035
    6. ',' → logprob: -3.0047173500061035
    7. '_recursive' → logprob: -3.1297173500061035
    8. ' réc' → logprob: -3.3797173500061035
    9. ' recursive' → logprob: -3.5047173500061035
    10. ' def' → logprob: -3.5047173500061035

Token 233: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6028857231140137
    2. '(x' → logprob: -1.2278857231140137
    3. ':' → logprob: -1.9778857231140137
    4. '(' → logprob: -4.602885723114014
    5. ':
' → logprob: -4.977885723114014
    6. '(
' → logprob: -6.227885723114014
    7. ',' → logprob: -7.477885723114014
    8. ' def' → logprob: -7.852885723114014
    9. '
' → logprob: -8.102886199951172
    10. ' :' → logprob: -8.227886199951172

Token 234: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27374809980392456
    2. '(x' → logprob: -1.5237481594085693
    3. ':' → logprob: -4.39874792098999
    4. ',' → logprob: -5.64874792098999
    5. '(' → logprob: -6.27374792098999
    6. ' def' → logprob: -6.39874792098999
    7. ':
' → logprob: -7.39874792098999
    8. '(
' → logprob: -7.89874792098999
    9. ' (' → logprob: -7.89874792098999
    10. ')' → logprob: -8.023748397827148

Token 235: ' utilisant' (ID: 92474)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08752349764108658
    2. '
' → logprob: -3.4625234603881836
    3. ' def' → logprob: -3.9625234603881836
    4. ':' → logprob: -3.9625234603881836
    5. ',' → logprob: -5.337523460388184
    6. ' :' → logprob: -5.587523460388184
    7. ' ' → logprob: -6.337523460388184
    8. ' 
' → logprob: -6.587523460388184
    9. ':
' → logprob: -7.587523460388184
    10. '

' → logprob: -8.087523460388184

Token 236: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0286720991134644
    2. ' la' → logprob: -1.0286720991134644
    3. '<|end|>' → logprob: -2.153672218322754
    4. ' exponent' → logprob: -3.028672218322754
    5. ' une' → logprob: -3.528672218322754
    6. ' un' → logprob: -3.653672218322754
    7. ' le' → logprob: -3.653672218322754
    8. 'l' → logprob: -4.403672218322754
    9. 'pow' → logprob: -5.528672218322754
    10. ' pow' → logprob: -5.528672218322754

Token 237: ''ex' (ID: 23472)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7968915700912476
    2. 'a' → logprob: -1.5468915700912476
    3. 'e' → logprob: -2.046891689300537
    4. 'def' → logprob: -3.296891689300537
    5. ''' → logprob: -3.546891689300537
    6. ' exponent' → logprob: -3.671891689300537
    7. ' a' → logprob: -3.671891689300537
    8. ' recursion' → logprob: -3.671891689300537
    9. '#' → logprob: -4.671891689300537
    10. ' la' → logprob: -5.171891689300537

Token 238: 'ponent' (ID: 1758)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.45230916142463684
    2. 'ponent' → logprob: -1.0773091316223145
    3. 'pow' → logprob: -4.4523091316223145
    4. 'pon' → logprob: -4.7023091316223145
    5. 'def' → logprob: -7.2023091316223145
    6. 'ponential' → logprob: -7.2023091316223145
    7. 'pone' → logprob: -7.3273091316223145
    8. 'po' → logprob: -8.577309608459473
    9. 'pont' → logprob: -9.827309608459473
    10. 'ponen' → logprob: -10.452309608459473

Token 239: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.014404304325580597
    2. 'i' → logprob: -4.264404296875
    3. 'ielle' → logprob: -9.264404296875
    4. 'iating' → logprob: -10.389404296875
    5. '```' → logprob: -10.889404296875
    6. 'ia' → logprob: -11.139404296875
    7. 'ial' → logprob: -11.389404296875
    8. 'iel' → logprob: -11.514404296875
    9. ' i' → logprob: -11.514404296875
    10. 'ation' → logprob: -11.764404296875

Token 240: ' rapide' (ID: 44887)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004319860599935055
    2. '
' → logprob: -6.754319667816162
    3. 'pow' → logprob: -6.754319667816162
    4. ' def' → logprob: -7.129319667816162
    5. 'par' → logprob: -7.754319667816162
    6. '   ' → logprob: -9.00432014465332
    7. '(pow' → logprob: -9.00432014465332
    8. '(x' → logprob: -9.75432014465332
    9. ' ' → logprob: -9.87932014465332
    10. '(
' → logprob: -10.25432014465332

Token 241: ' b' (ID: 287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5459867715835571
    2. '(x' → logprob: -0.9209867715835571
    3. '(' → logprob: -4.545986652374268
    4. ':' → logprob: -4.795986652374268
    5. '(
' → logprob: -6.670986652374268
    6. ')' → logprob: -7.295986652374268
    7. ' def' → logprob: -7.420986652374268
    8. ':
' → logprob: -7.545986652374268
    9. '(n' → logprob: -8.670987129211426
    10. '
' → logprob: -9.045987129211426

Token 242: 'inaire' (ID: 41465)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03289712965488434
    2. 'in' → logprob: -3.7828972339630127
    3. '^' → logprob: -5.782896995544434
    4. '_' → logprob: -6.407896995544434
    5. 'i' → logprob: -6.407896995544434
    6. '=' → logprob: -7.157896995544434
    7. ')' → logprob: -7.532896995544434
    8. ',' → logprob: -8.032896995544434
    9. 'u' → logprob: -8.032896995544434
    10. 'inary' → logprob: -8.782896995544434

Token 243: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02010839805006981
    2. '(' → logprob: -5.020108222961426
    3. '(x' → logprob: -5.020108222961426
    4. ':' → logprob: -5.770108222961426
    5. '(
' → logprob: -6.270108222961426
    6. ')' → logprob: -7.020108222961426
    7. ':def' → logprob: -8.270108222961426
    8. ':
' → logprob: -8.895108222961426
    9. '(def' → logprob: -9.145108222961426
    10. '
' → logprob: -9.270108222961426

Token 244: ' plus' (ID: 2932)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006873206235468388
    2. ' def' → logprob: -5.00687313079834
    3. '
' → logprob: -8.88187313079834
    4. ' 
' → logprob: -12.13187313079834
    5. ')' → logprob: -13.00687313079834
    6. ':def' → logprob: -13.00687313079834
    7. ':' → logprob: -13.38187313079834
    8. ' déf' → logprob: -13.63187313079834
    9. '	def' → logprob: -14.13187313079834
    10. 'de' → logprob: -14.13187313079834

Token 245: ' rapide' (ID: 44887)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004854803904891014
    2. ' def' → logprob: -5.504854679107666
    3. ':' → logprob: -7.754854679107666
    4. '```' → logprob: -9.379855155944824
    5. ')' → logprob: -10.254855155944824
    6. '=' → logprob: -10.629855155944824
    7. ':
' → logprob: -10.629855155944824
    8. 'dé' → logprob: -10.754855155944824
    9. ' =' → logprob: -10.879855155944824
    10. '
' → logprob: -11.004855155944824

Token 246: ' que' (ID: 661)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00038229089113883674
    2. ' def' → logprob: -8.250382423400879
    3. ':' → logprob: -10.125382423400879
    4. 'de' → logprob: -10.375382423400879
    5. '
' → logprob: -11.250382423400879
    6. ')' → logprob: -11.250382423400879
    7. ':def' → logprob: -11.875382423400879
    8. ',' → logprob: -12.125382423400879
    9. ':
' → logprob: -13.250382423400879
    10. '.' → logprob: -13.250382423400879

Token 247: ' d' (ID: 272)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9421841502189636
    2. ' la' → logprob: -1.6921842098236084
    3. ' une' → logprob: -1.8171842098236084
    4. 'une' → logprob: -2.5671842098236084
    5. 'pow' → logprob: -3.0671842098236084
    6. 'x' → logprob: -3.4421842098236084
    7. ' l' → logprob: -3.5671842098236084
    8. 'na' → logprob: -3.6921842098236084
    9. ' naive' → logprob: -4.317183971405029
    10. ' naï' → logprob: -4.692183971405029

Token 248: ''utiliser' (ID: 133355)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21531453728675842
    2. 'éf' → logprob: -2.7153146266937256
    3. 'iv' → logprob: -3.2153146266937256
    4. 'ef' → logprob: -3.7153146266937256
    5. 'é' → logprob: -3.8403146266937256
    6. 'u' → logprob: -4.3403143882751465
    7. 'éc' → logprob: -4.9653143882751465
    8. 'eux' → logprob: -5.9653143882751465
    9. 'ivid' → logprob: -6.0903143882751465
    10. 'ans' → logprob: -6.3403143882751465

Token 249: ' x' (ID: 1215)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14970949292182922
    2. 'pow' → logprob: -2.649709463119507
    3. ' l' → logprob: -3.399709463119507
    4. 'l' → logprob: -4.899709701538086
    5. 'x' → logprob: -4.899709701538086
    6. '`' → logprob: -5.524709701538086
    7. '```' → logprob: -5.774709701538086
    8. ' la' → logprob: -6.149709701538086
    9. 'le' → logprob: -6.524709701538086
    10. ' pow' → logprob: -6.649709701538086

Token 250: ' **' (ID: 6240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.995271623134613
    2. ',' → logprob: -1.3702716827392578
    3. '**' → logprob: -2.370271682739258
    4. ' **' → logprob: -2.620271682739258
    5. ' %' → logprob: -2.745271682739258
    6. ' *' → logprob: -3.370271682739258
    7. ' ' → logprob: -3.370271682739258
    8. ' ,' → logprob: -3.995271682739258
    9. '%' → logprob: -4.120271682739258
    10. ' def' → logprob: -4.245271682739258

Token 251: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07029318064451218
    2. ' n' → logprob: -2.6952931880950928
    3. ' ' → logprob: -8.445293426513672
    4. '2' → logprob: -9.945293426513672
    5. '(n' → logprob: -9.945293426513672
    6. '
' → logprob: -11.945293426513672
    7. 'mod' → logprob: -12.070293426513672
    8. ',' → logprob: -12.195293426513672
    9. '	n' → logprob: -12.445293426513672
    10. '1' → logprob: -12.570293426513672

Token 252: ' directement' (ID: 52317)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13958674669265747
    2. '(x' → logprob: -2.8895866870880127
    3. 'def' → logprob: -3.0145866870880127
    4. ':' → logprob: -4.014586925506592
    5. '(
' → logprob: -5.389586925506592
    6. ')' → logprob: -6.264586925506592
    7. '_' → logprob: -7.514586925506592
    8. '):' → logprob: -9.264586448669434
    9. '(def' → logprob: -9.264586448669434
    10. '(n' → logprob: -9.389586448669434

Token 253: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016117537394165993
    2. ':' → logprob: -4.391117572784424
    3. '(' → logprob: -7.016117572784424
    4. ':def' → logprob: -7.016117572784424
    5. '(
' → logprob: -7.516117572784424
    6. ':
' → logprob: -7.641117572784424
    7. ')' → logprob: -8.016117095947266
    8. '
' → logprob: -8.766117095947266
    9. ' def' → logprob: -9.391117095947266
    10. '(x' → logprob: -9.391117095947266

Token 254: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.246537173457909e-06
    2. 'd' → logprob: -12.875003814697266
    3. 'de' → logprob: -14.250003814697266
    4. ':def' → logprob: -14.625003814697266
    5. '
' → logprob: -14.875003814697266
    6. ')' → logprob: -17.250003814697266
    7. '_def' → logprob: -17.250003814697266
    8. '```' → logprob: -17.250003814697266
    9. ' def' → logprob: -17.500003814697266
    10. 'ndef' → logprob: -17.500003814697266

Token 255: ' mp' (ID: 11543)
  Prédit: ' mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mp' → logprob: -0.12693482637405396
    2. 'mp' → logprob: -2.126934766769409
    3. '	mp' → logprob: -12.126935005187988
    4. '(mp' → logprob: -15.126935005187988
    5. '_mp' → logprob: -15.376935005187988
    6. ' ' → logprob: -15.501935005187988
    7. 'm' → logprob: -16.126934051513672
    8. ' mpo' → logprob: -16.126934051513672
    9. ' m' → logprob: -16.501934051513672
    10. 'def' → logprob: -16.626934051513672

Token 256: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -2.7610454708337784e-05
    2. ' ow' → logprob: -11.500027656555176
    3. 'pow' → logprob: -11.750027656555176
    4. 'w' → logprob: -12.875027656555176
    5. '
' → logprob: -12.875027656555176
    6. 'o' → logprob: -13.250027656555176
    7. 'owl' → logprob: -14.625027656555176
    8. 'ower' → logprob: -14.750027656555176
    9. '**' → logprob: -14.750027656555176
    10. 'owi' → logprob: -15.875027656555176

Token 257: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0086202472448349
    2. '(' → logprob: -4.758620262145996
    3. ' (' → logprob: -12.133620262145996
    4. '(
' → logprob: -15.133620262145996
    5. '(n' → logprob: -18.13361930847168
    6. '(m' → logprob: -18.25861930847168
    7. '(y' → logprob: -19.00861930847168
    8. '(

' → logprob: -19.25861930847168
    9. '(X' → logprob: -19.75861930847168
    10. ' ' → logprob: -19.88361930847168

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014048899174667895
    2. ' ,' → logprob: -9.125140190124512
    3. ',n' → logprob: -10.375140190124512
    4. ',
' → logprob: -16.125141143798828
    5. 'n' → logprob: -16.500141143798828
    6. '‌,' → logprob: -18.375141143798828
    7. ' n' → logprob: -19.000141143798828
    8. ' ' → logprob: -19.250141143798828
    9. ',x' → logprob: -19.250141143798828
    10. ',

' → logprob: -19.250141143798828

Token 259: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25193020701408386
    2. 'n' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.251930236816406
    4. '	n' → logprob: -15.251930236816406
    5. ' ' → logprob: -16.376930236816406
    6. ')n' → logprob: -17.876930236816406
    7. ')' → logprob: -18.376930236816406
    8. '  ' → logprob: -18.376930236816406
    9. '   ' → logprob: -18.751930236816406
    10. ' 
' → logprob: -19.001930236816406

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000656081538181752
    2. ')' → logprob: -7.5006561279296875
    3. ':' → logprob: -9.750656127929688
    4. '):
' → logprob: -10.500656127929688
    5. ' ):' → logprob: -11.375656127929688
    6. ',' → logprob: -12.250656127929688
    7. '):
' → logprob: -14.500656127929688
    8. '=' → logprob: -15.500656127929688
    9. ' :' → logprob: -15.875656127929688
    10. '}:' → logprob: -17.000656127929688

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04675040766596794
    2. ':' → logprob: -3.17175030708313
    3. ' ' → logprob: -5.921750545501709
    4. ' if' → logprob: -7.546750545501709
    5. '	if' → logprob: -9.17175006866455
    6. ' :' → logprob: -9.29675006866455
    7. '    
' → logprob: -9.54675006866455
    8. ':
' → logprob: -9.79675006866455
    9. '(' → logprob: -10.04675006866455
    10. '```' → logprob: -10.79675006866455

Token 262: ' num' (ID: 2269)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6719939708709717
    2. ' result' → logprob: -1.6719939708709717
    3. ' res' → logprob: -1.6719939708709717
    4. 'if' → logprob: -3.2969939708709717
    5. 'result' → logprob: -3.5469939708709717
    6. ' r' → logprob: -3.7969939708709717
    7. 'r' → logprob: -4.421994209289551
    8. 'res' → logprob: -4.546994209289551
    9. '   ' → logprob: -6.171994209289551
    10. ' ans' → logprob: -7.546994209289551

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016867628321051598
    2. ' =' → logprob: -4.141867637634277
    3. 'ber' → logprob: -7.766867637634277
    4. '   ' → logprob: -8.141867637634277
    5. '  ' → logprob: -9.891867637634277
    6. '    ' → logprob: -10.641867637634277
    7. '	' → logprob: -11.141867637634277
    8. 'er' → logprob: -11.891867637634277
    9. 'r' → logprob: -12.391867637634277
    10. ' ' → logprob: -12.641867637634277

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028303153812885284
    2. 'x' → logprob: -6.127830505371094
    3. ' ' → logprob: -7.377830505371094
    4. ' x' → logprob: -10.877830505371094
    5. '   ' → logprob: -14.627830505371094
    6. 'pow' → logprob: -15.127830505371094
    7. 'int' → logprob: -15.752830505371094
    8. '	x' → logprob: -16.815330505371094
    9. '  ' → logprob: -17.315330505371094
    10. '```' → logprob: -17.315330505371094

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04860077425837517
    2. 'x' → logprob: -3.048600673675537
    3. 'pow' → logprob: -11.923601150512695
    4. 'int' → logprob: -12.798601150512695
    5. ' ' → logprob: -13.548601150512695
    6. ' x' → logprob: -14.173601150512695
    7. '0' → logprob: -14.548601150512695
    8. '```' → logprob: -15.798601150512695
    9. '(x' → logprob: -15.923601150512695
    10. '2' → logprob: -16.048601150512695

Token 266: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2512793242931366
    2. '
' → logprob: -1.751279354095459
    3. '    
' → logprob: -3.376279354095459
    4. '<|end|>' → logprob: -5.501279354095459
    5. ' 
' → logprob: -6.001279354095459
    6. '  
' → logprob: -6.376279354095459
    7. '   
' → logprob: -6.751279354095459
    8. ' while' → logprob: -7.251279354095459
    9. 'while' → logprob: -7.251279354095459
    10. ' ' → logprob: -7.501279354095459

Token 267: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37599289417266846
    2. '    
' → logprob: -2.375992774963379
    3. '
' → logprob: -2.750992774963379
    4. 'while' → logprob: -3.250992774963379
    5. '   
' → logprob: -3.750992774963379
    6. 'for' → logprob: -4.000992774963379
    7. ' ' → logprob: -4.375992774963379
    8. '  ' → logprob: -4.625992774963379
    9. ' while' → logprob: -4.625992774963379
    10. ',' → logprob: -4.750992774963379

Token 268: ' Initialise' (ID: 179601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27103206515312195
    2. ' while' → logprob: -2.2710320949554443
    3. 'while' → logprob: -2.8960320949554443
    4. ' for' → logprob: -3.6460320949554443
    5. 'for' → logprob: -4.146031856536865
    6. '    
' → logprob: -5.021031856536865
    7. 'x' → logprob: -5.146031856536865
    8. 'def' → logprob: -5.271031856536865
    9. ' ' → logprob: -5.396031856536865
    10. ' x' → logprob: -5.771031856536865

Token 269: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40092015266418457
    2. 'x' → logprob: -2.5259201526641846
    3. ' x' → logprob: -2.5259201526641846
    4. ' base' → logprob: -3.5259201526641846
    5. 'result' → logprob: -3.7759201526641846
    6. ' num' → logprob: -4.0259199142456055
    7. 'num' → logprob: -4.0259199142456055
    8. '  ' → logprob: -4.4009199142456055
    9. '   ' → logprob: -4.6509199142456055
    10. ' result' → logprob: -4.6509199142456055

Token 270: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23677703738212585
    2. 'x' → logprob: -1.9867770671844482
    3. 'base' → logprob: -2.9867770671844482
    4. 'res' → logprob: -4.111776828765869
    5. 'while' → logprob: -5.861776828765869
    6. 'rés' → logprob: -6.486776828765869
    7. 'num' → logprob: -7.611776828765869
    8. 'r' → logprob: -7.986776828765869
    9. 'ans' → logprob: -8.486777305603027
    10. '1' → logprob: -8.611777305603027

Token 271: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40207749605178833
    2. ',' → logprob: -2.5270774364471436
    3. '<|end|>' → logprob: -2.7770774364471436
    4. 'x' → logprob: -3.2770774364471436
    5. '   ' → logprob: -4.277077674865723
    6. 'def' → logprob: -4.277077674865723
    7. 'a' → logprob: -4.527077674865723
    8. ' for' → logprob: -4.527077674865723
    9. '  ' → logprob: -4.652077674865723
    10. '=' → logprob: -4.652077674865723

Token 272: 'num' (ID: 4571)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42337313294410706
    2. 'num' → logprob: -1.5483731031417847
    3. 'result' → logprob: -2.173373222351074
    4. 'res' → logprob: -4.173373222351074
    5. 'base' → logprob: -6.298373222351074
    6. 'ans' → logprob: -7.798373222351074
    7. 'a' → logprob: -8.673373222351074
    8. ' x' → logprob: -8.798373222351074
    9. 'rés' → logprob: -8.923373222351074
    10. 'tmp' → logprob: -9.298373222351074

Token 273: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8116416335105896
    2. '   ' → logprob: -1.3116416931152344
    3. '
' → logprob: -2.6866416931152344
    4. 'for' → logprob: -2.9366416931152344
    5. ' for' → logprob: -3.4366416931152344
    6. '    
' → logprob: -3.5616416931152344
    7. '  ' → logprob: -3.9366416931152344
    8. ',' → logprob: -4.186641693115234
    9. '    ' → logprob: -4.311641693115234
    10. ')' → logprob: -4.561641693115234

Token 274: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16124537587165833
    2. '<|end|>' → logprob: -2.036245346069336
    3. '    
' → logprob: -5.411245346069336
    4. ' ' → logprob: -5.661245346069336
    5. '    ' → logprob: -5.911245346069336
    6. '  ' → logprob: -6.161245346069336
    7. '
' → logprob: -6.411245346069336
    8. '<|end|>' → logprob: -6.786245346069336
    9. ',' → logprob: -7.036245346069336
    10. ' for' → logprob: -7.911245346069336

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.625097274780273
    3. 'x' → logprob: -10.625097274780273
    4. 'num' → logprob: -12.125097274780273
    5. '```' → logprob: -14.375097274780273
    6. '   ' → logprob: -15.375097274780273
    7. ' x' → logprob: -16.750097274780273
    8. '`' → logprob: -17.125097274780273
    9. '  ' → logprob: -17.875097274780273
    10. 'le' → logprob: -18.250097274780273

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016917208209633827
    2. 'x' → logprob: -4.5169172286987305
    3. 'num' → logprob: -5.1419172286987305
    4. '```' → logprob: -12.76691722869873
    5. '0' → logprob: -14.01691722869873
    6. ' ' → logprob: -14.39191722869873
    7. '`' → logprob: -15.51691722869873
    8. ' x' → logprob: -15.89191722869873
    9. '
' → logprob: -15.89191722869873
    10. 'mp' → logprob: -16.016916275024414

Token 277: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006308896467089653
    2. '    
' → logprob: -5.5063090324401855
    3. '<|end|>' → logprob: -6.8813090324401855
    4. '
' → logprob: -7.3813090324401855
    5. '    ' → logprob: -8.881308555603027
    6. '  ' → logprob: -9.381308555603027
    7. '   
' → logprob: -9.381308555603027
    8. ',' → logprob: -9.881308555603027
    9. ' while' → logprob: -10.131308555603027
    10. '<|end|>' → logprob: -10.131308555603027

Token 278: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019955333322286606
    2. '    
' → logprob: -4.019955158233643
    3. '    ' → logprob: -6.894955158233643
    4. '     
' → logprob: -7.769955158233643
    5. ' 
' → logprob: -9.0199556350708
    6. '
' → logprob: -9.8949556350708
    7. ' while' → logprob: -10.1449556350708
    8. '   
' → logprob: -10.2699556350708
    9. ' x' → logprob: -10.7699556350708
    10. 'n' → logprob: -11.2699556350708

Token 279: ' sera' (ID: 15511)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *=' → logprob: -1.173927664756775
    2. '   ' → logprob: -1.423927664756775
    3. '=' → logprob: -2.0489277839660645
    4. '*=' → logprob: -2.0489277839660645
    5. ' =' → logprob: -2.2989277839660645
    6. ' <<=' → logprob: -2.9239277839660645
    7. ',' → logprob: -3.9239277839660645
    8. '    ' → logprob: -5.9239277839660645
    9. ' ' → logprob: -6.1739277839660645
    10. ')' → logprob: -6.1739277839660645

Token 280: ' utilisée' (ID: 106548)
  Prédit: ' multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multip' → logprob: -0.22882454097270966
    2. 'multip' → logprob: -2.3538246154785156
    3. 'le' → logprob: -3.1038246154785156
    4. ' le' → logprob: -3.1038246154785156
    5. ' utilisée' → logprob: -5.228824615478516
    6. 'mult' → logprob: -6.103824615478516
    7. ' multipl' → logprob: -6.228824615478516
    8. '   ' → logprob: -6.353824615478516
    9. 'x' → logprob: -6.603824615478516
    10. ' la' → logprob: -6.603824615478516

Token 281: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28548699617385864
    2. ' ' → logprob: -2.410486936569214
    3. 'for' → logprob: -2.410486936569214
    4. ',' → logprob: -3.785486936569214
    5. '<|end|>' → logprob: -4.035487174987793
    6. '   ' → logprob: -4.910487174987793
    7. ' pour' → logprob: -5.410487174987793
    8. '    ' → logprob: -5.910487174987793
    9. ' to' → logprob: -6.535487174987793
    10. ')' → logprob: -6.785487174987793

Token 282: ' accum' (ID: 23148)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9493869543075562
    2. 'x' → logprob: -1.6993869543075562
    3. 'num' → logprob: -1.8243869543075562
    4. 'acc' → logprob: -2.5743870735168457
    5. 'le' → logprob: -3.0743870735168457
    6. 'mult' → logprob: -3.4493870735168457
    7. 'res' → logprob: -3.6993870735168457
    8. 'rés' → logprob: -4.199387073516846
    9. ' multiplier' → logprob: -4.824387073516846
    10. 'i' → logprob: -4.949387073516846

Token 283: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0010834212880581617
    2. 'u' → logprob: -7.0010833740234375
    3. 'er' → logprob: -9.751083374023438
    4. 'érer' → logprob: -10.001083374023438
    5. 'ul' → logprob: -11.001083374023438
    6. '   ' → logprob: -11.501083374023438
    7. 'uer' → logprob: -11.751083374023438
    8. 'urer' → logprob: -11.876083374023438
    9. 'ulé' → logprob: -12.376083374023438
    10. '=' → logprob: -12.751083374023438

Token 284: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0933361053466797
    2. 'x' → logprob: -1.3433361053466797
    3. ' ' → logprob: -1.8433361053466797
    4. '<|end|>' → logprob: -2.3433361053466797
    5. 'result' → logprob: -2.5933361053466797
    6. ' result' → logprob: -2.9683361053466797
    7. ')' → logprob: -4.84333610534668
    8. ' the' → logprob: -5.96833610534668
    9. '  ' → logprob: -6.21833610534668
    10. '*' → logprob: -6.59333610534668

Token 285: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.398788183927536
    2. 'x' → logprob: -1.1487882137298584
    3. ' result' → logprob: -5.023787975311279
    4. 'rés' → logprob: -6.398787975311279
    5. 'res' → logprob: -6.773787975311279
    6. ' x' → logprob: -6.898787975311279
    7. ' résultat' → logprob: -7.023787975311279
    8. 'num' → logprob: -8.023788452148438
    9. 'resultado' → logprob: -9.398788452148438
    10. ' resultat' → logprob: -10.148788452148438

Token 286: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10806914418935776
    2. '<|end|>' → logprob: -2.4830691814422607
    3. '    
' → logprob: -5.358068943023682
    4. ',' → logprob: -5.608068943023682
    5. '  ' → logprob: -6.108068943023682
    6. '    ' → logprob: -6.233068943023682
    7. '
' → logprob: -6.358068943023682
    8. ' ' → logprob: -6.858068943023682
    9. '<|end|>' → logprob: -6.858068943023682
    10. ' while' → logprob: -6.858068943023682

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007888155058026314
    2. '    
' → logprob: -5.882888317108154
    3. ' 
' → logprob: -6.507888317108154
    4. '<|end|>' → logprob: -6.757888317108154
    5. ' while' → logprob: -7.882888317108154
    6. '    ' → logprob: -8.007887840270996
    7. ' ' → logprob: -8.132887840270996
    8. '  
' → logprob: -8.382887840270996
    9. '   
' → logprob: -8.507887840270996
    10. '  ' → logprob: -8.757887840270996

Token 288: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21376758813858032
    2. ' while' → logprob: -1.9637675285339355
    3. 'while' (adapté à ' while') → logprob: -3.0887675285339355
    4. 'x' → logprob: -6.4637675285339355
    5. 'i' → logprob: -6.7137675285339355
    6. ' i' → logprob: -6.8387675285339355
    7. ' x' → logprob: -7.0887675285339355
    8. ' for' → logprob: -7.7137675285339355
    9. 'for' → logprob: -7.9637675285339355
    10. '    
' → logprob: -8.338768005371094

Token 289: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326520442962646
    2. 'n' → logprob: -1.3132652044296265
    3. '(n' → logprob: -13.438264846801758
    4. '	n' → logprob: -14.188264846801758
    5. ' ' → logprob: -14.438264846801758
    6. ' ' → logprob: -15.188264846801758
    7. '   ' → logprob: -15.688264846801758
    8. '_n' → logprob: -15.688264846801758
    9. 'N' → logprob: -17.063264846801758
    10. '
' → logprob: -17.563264846801758

Token 290: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3873552680015564
    2. '>' → logprob: -1.1373553276062012
    3. ':' → logprob: -7.637355327606201
    4. ' :' → logprob: -14.137354850769043
    5. '%' → logprob: -14.637354850769043
    6. ' ' → logprob: -14.887354850769043
    7. ' ' → logprob: -15.637354850769043
    8. '&gt' → logprob: -16.13735580444336
    9. ')' → logprob: -16.26235580444336
    10. '.' → logprob: -17.26235580444336

Token 291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '=' → logprob: -19.00247573852539
    4. '   ' → logprob: -19.12747573852539
    5. '>' → logprob: -19.25247573852539
    6. '  ' → logprob: -20.00247573852539
    7. '۰' → logprob: -20.12747573852539
    8. ' ' → logprob: -20.50247573852539
    9. '```' → logprob: -20.87747573852539
    10. '    ' → logprob: -21.00247573852539

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۰' → logprob: -19.87506675720215
    4. '   ' → logprob: -21.37506675720215
    5. '=' → logprob: -21.62506675720215
    6. '1' → logprob: -21.75006675720215
    7. '```' → logprob: -21.87506675720215
    8. '
' → logprob: -22.37506675720215
    9. '  ' → logprob: -22.50006675720215
    10. '０' → logprob: -22.62506675720215

Token 293: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017217113636434078
    2. ' :' → logprob: -7.1267218589782715
    3. ':
' → logprob: -7.1267218589782715
    4. '   ' → logprob: -9.376721382141113
    5. '       ' → logprob: -11.751721382141113
    6. '<|end|>' → logprob: -12.001721382141113
    7. ' :
' → logprob: -12.126721382141113
    8. '):' → logprob: -12.876721382141113
    9. ',' → logprob: -13.126721382141113
    10. '    ' → logprob: -14.251721382141113

Token 294: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1476902812719345
    2. '   ' → logprob: -2.1476902961730957
    3. '    ' → logprob: -4.647690296173096
    4. '<|end|>' → logprob: -5.522690296173096
    5. ':' → logprob: -6.522690296173096
    6. ' ' → logprob: -6.647690296173096
    7. ' 
' → logprob: -6.772690296173096
    8. '    
' → logprob: -7.647690296173096
    9. '        
' → logprob: -7.897690296173096
    10. 'n' → logprob: -8.147689819335938

Token 295: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27918198704719543
    2. '   ' → logprob: -1.529181957244873
    3. ':' → logprob: -4.279181957244873
    4. '    ' → logprob: -5.029181957244873
    5. ':
' → logprob: -7.029181957244873
    6. '<|end|>' → logprob: -7.154181957244873
    7. ' :' → logprob: -7.279181957244873
    8. ' if' → logprob: -7.279181957244873
    9. '    
' → logprob: -7.529181957244873
    10. '        
' → logprob: -7.529181957244873

Token 296: ' Tant' (ID: 169541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7548907399177551
    2. '       ' → logprob: -1.2548906803131104
    3. 'n' → logprob: -2.0048906803131104
    4. ' if' → logprob: -3.0048906803131104
    5. ' n' → logprob: -3.5048906803131104
    6. 'if' → logprob: -4.2548909187316895
    7. '    ' → logprob: -4.5048909187316895
    8. '    
' → logprob: -6.2548909187316895
    9. '
' → logprob: -6.8798909187316895
    10. '        
' → logprob: -7.3798909187316895

Token 297: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12244044244289398
    2. ' que' → logprob: -2.2474403381347656
    3. '    ' → logprob: -5.747440338134766
    4. '       ' → logprob: -6.247440338134766
    5. ' n' → logprob: -6.747440338134766
    6. 'n' → logprob: -7.372440338134766
    7. '  ' → logprob: -7.872440338134766
    8. ' qu' → logprob: -8.872440338134766
    9. 'abs' → logprob: -9.247440338134766
    10. ' >' → logprob: -9.247440338134766

Token 298: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018151935189962387
    2. 'n' → logprob: -4.018151760101318
    3. '(n' → logprob: -14.268152236938477
    4. ' ' → logprob: -14.393152236938477
    5. '	n' → logprob: -14.518152236938477
    6. ' ' → logprob: -15.893152236938477
    7. ' (' → logprob: -16.518152236938477
    8. '   ' → logprob: -16.768152236938477
    9. '
' → logprob: -16.768152236938477
    10. '_n' → logprob: -17.018152236938477

Token 299: ''ex' (ID: 23472)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07746686786413193
    2. ' >' → logprob: -3.2024669647216797
    3. 'n' → logprob: -3.8274669647216797
    4. '>' → logprob: -4.82746696472168
    5. ' ' → logprob: -6.57746696472168
    6. '   ' → logprob: -6.57746696472168
    7. 'e' → logprob: -8.57746696472168
    8. ' #' → logprob: -9.07746696472168
    9. ' ' → logprob: -9.32746696472168
    10. ' >>=' → logprob: -9.45246696472168

Token 300: 'pos' (ID: 1103)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38149842619895935
    2. '>' → logprob: -2.006498336791992
    3. '&' → logprob: -3.131498336791992
    4. 'n' → logprob: -3.506498336791992
    5. '%' → logprob: -3.506498336791992
    6. 'if' → logprob: -4.006498336791992
    7. '       ' → logprob: -4.381498336791992
    8. ' ' → logprob: -4.756498336791992
    9. ' &' → logprob: -4.756498336791992
    10. '  ' → logprob: -5.256498336791992

Token 301: 'ant' (ID: 493)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4608241021633148
    2. '   ' → logprob: -1.5858241319656372
    3. ' >' → logprob: -2.2108240127563477
    4. '  ' → logprob: -4.835824012756348
    5. ' space' → logprob: -4.960824012756348
    6. ' exponent' → logprob: -5.210824012756348
    7. ' n' → logprob: -5.460824012756348
    8. 'ponent' → logprob: -5.585824012756348
    9. ' **' → logprob: -5.960824012756348
    10. ' >=' → logprob: -6.460824012756348

Token 302: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5951668620109558
    2. '>' → logprob: -1.3451669216156006
    3. ' >' → logprob: -1.7201669216156006
    4. '   ' → logprob: -5.2201666831970215
    5. ' :' → logprob: -6.5951666831970215
    6. ' !=' → logprob: -6.9701666831970215
    7. '!=' → logprob: -7.7201666831970215
    8. ':
' → logprob: -7.9701666831970215
    9. '%' → logprob: -8.34516716003418
    10. '  ' → logprob: -10.34516716003418

Token 303: ' n' (ID: 297)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5847958922386169
    2. '%' → logprob: -1.4597959518432617
    3. ':' → logprob: -1.7097959518432617
    4. ' >' → logprob: -3.5847959518432617
    5. ' %' → logprob: -7.334795951843262
    6. '!=' → logprob: -8.709795951843262
    7. ' :' → logprob: -8.959795951843262
    8. ' ' → logprob: -9.209795951843262
    9. '=' → logprob: -9.459795951843262
    10. ')' → logprob: -9.584795951843262

Token 304: ''est' (ID: 6616)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.13095378875732422
    2. ':' → logprob: -3.380953788757324
    3. ' >' → logprob: -3.505953788757324
    4. '>=' → logprob: -3.505953788757324
    5. '!=' → logprob: -4.380953788757324
    6. '   ' → logprob: -5.130953788757324
    7. ' >=' → logprob: -6.255953788757324
    8. '%' → logprob: -6.380953788757324
    9. ' >>=' → logprob: -6.630953788757324
    10. '=' → logprob: -6.630953788757324

Token 305: ' pas' (ID: 2173)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5274823904037476
    2. '0' → logprob: -1.7774823904037476
    3. '%' → logprob: -2.902482509613037
    4. '1' → logprob: -3.027482509613037
    5. 'pas' → logprob: -3.777482509613037
    6. '   ' → logprob: -4.027482509613037
    7. ' supérieur' → logprob: -4.402482509613037
    8. ' ' → logprob: -4.527482509613037
    9. 'au' → logprob: -5.027482509613037
    10. 'not' → logprob: -5.402482509613037

Token 306: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033406034111976624
    2. '>' → logprob: -4.4084062576293945
    3. ':' → logprob: -5.1584062576293945
    4. '1' → logprob: -5.2834062576293945
    5. ' ' → logprob: -5.6584062576293945
    6. 'None' → logprob: -6.5334062576293945
    7. '">' → logprob: -7.0334062576293945
    8. 'positive' → logprob: -7.4084062576293945
    9. 'greater' → logprob: -7.4084062576293945
    10. 'zero' → logprob: -7.5334062576293945

Token 307: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00978441908955574
    2. ':
' → logprob: -4.75978422164917
    3. ',' → logprob: -7.50978422164917
    4. '   ' → logprob: -7.75978422164917
    5. ' :' → logprob: -8.759784698486328
    6. '       ' → logprob: -11.384784698486328
    7. ' :
' → logprob: -11.884784698486328
    8. ',
' → logprob: -12.009784698486328
    9. '<|end|>' → logprob: -12.384784698486328
    10. '):' → logprob: -13.009784698486328

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08473663777112961
    2. '   ' → logprob: -2.8347365856170654
    3. '    ' → logprob: -4.8347368240356445
    4. '<|end|>' → logprob: -5.2097368240356445
    5. 'n' → logprob: -5.8347368240356445
    6. '    
' → logprob: -6.8347368240356445
    7. ':' → logprob: -7.3347368240356445
    8. ' 
' → logprob: -7.4597368240356445
    9. '        
' → logprob: -7.5847368240356445
    10. ' ' → logprob: -7.7097368240356445

Token 309: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23814618587493896
    2. '       ' → logprob: -2.3631463050842285
    3. '   ' → logprob: -2.8631463050842285
    4. 'if' (adapté à ' if') → logprob: -3.3631463050842285
    5. '    ' → logprob: -3.9881463050842285
    6. ' 
' → logprob: -5.7381463050842285
    7. ' ' → logprob: -5.9881463050842285
    8. '     
' → logprob: -7.7381463050842285
    9. '        
' → logprob: -7.8631463050842285
    10. '    
' → logprob: -8.23814582824707

Token 310: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023312333971261978
    2. 'n' → logprob: -3.7733123302459717
    3. ' (' → logprob: -10.02331256866455
    4. '(n' → logprob: -10.89831256866455
    5. ' ' → logprob: -13.27331256866455
    6. '	n' → logprob: -13.64831256866455
    7. ' ' → logprob: -14.39831256866455
    8. '(' → logprob: -14.52331256866455
    9. '   ' → logprob: -17.773311614990234
    10. '  ' → logprob: -18.523311614990234

Token 311: ' &' (ID: 827)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8163771629333496
    2. ' %' → logprob: -1.0663771629333496
    3. ' &' → logprob: -2.0663771629333496
    4. '&' → logprob: -2.4413771629333496
    5. ' ' → logprob: -10.566377639770508
    6. ' ' → logprob: -12.566377639770508
    7. '&nbsp' → logprob: -14.441377639770508
    8. '&
' → logprob: -14.816377639770508
    9. ' %
' → logprob: -15.316377639770508
    10. '[' → logprob: -15.316377639770508

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.008615493774414
    4. ' ' → logprob: -18.383615493774414
    5. 'n' → logprob: -19.008615493774414
    6. '' → logprob: -19.133615493774414
    7. '１' → logprob: -19.258615493774414
    8. '(' → logprob: -19.383615493774414
    9. '۱' → logprob: -19.696115493774414
    10. '```' → logprob: -19.821115493774414

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -19.875
    4. '' → logprob: -20.75
    5. '01' → logprob: -21.125
    6. '

' → logprob: -21.375
    7. '１' → logprob: -21.5
    8. '۱' → logprob: -22.125
    9. '   ' → logprob: -22.375
    10. ' ' → logprob: -22.375

Token 314: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004909569397568703
    2. ':
' → logprob: -8.25049114227295
    3. '==' → logprob: -8.75049114227295
    4. ' ==' → logprob: -10.12549114227295
    5. ' :' → logprob: -10.87549114227295
    6. '=' → logprob: -11.75049114227295
    7. '>' → logprob: -13.50049114227295
    8. '       ' → logprob: -14.75049114227295
    9. '):' → logprob: -14.75049114227295
    10. '   ' → logprob: -15.00049114227295

Token 315: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6786314845085144
    2. '           ' → logprob: -1.5536315441131592
    3. ' num' → logprob: -1.8036315441131592
    4. 'num' → logprob: -2.678631544113159
    5. '
' → logprob: -3.928631544113159
    6. ' 
' → logprob: -5.05363130569458
    7. '<|end|>' → logprob: -5.05363130569458
    8. '        
' → logprob: -5.42863130569458
    9. '(num' → logprob: -6.05363130569458
    10. '  
' → logprob: -6.92863130569458

Token 316: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6542878746986389
    2. '       ' → logprob: -0.9042878746986389
    3. ' num' → logprob: -2.654287815093994
    4. '           ' → logprob: -6.279287815093994
    5. '(num' → logprob: -6.904287815093994
    6. '        
' → logprob: -7.029287815093994
    7. '
' → logprob: -7.904287815093994
    8. '*num' → logprob: -8.404288291931152
    9. ' 
' → logprob: -9.279288291931152
    10. '   ' → logprob: -9.404288291931152

Token 317: ' Vér' (ID: 159169)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4045755863189697
    2. ' num' → logprob: -1.2795755863189697
    3. '           ' → logprob: -3.0295755863189697
    4. '       ' → logprob: -5.154575347900391
    5. '
' → logprob: -8.27957534790039
    6. '        ' → logprob: -9.65457534790039
    7. '	num' → logprob: -10.02957534790039
    8. '   ' → logprob: -10.27957534790039
    9. '(num' → logprob: -11.02957534790039
    10. '        
' → logprob: -11.27957534790039

Token 318: 'ifie' (ID: 46409)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2770349085330963
    2. '           ' → logprob: -1.527034878730774
    3. '   ' → logprob: -4.652034759521484
    4. '(n' → logprob: -5.152034759521484
    5. ' n' → logprob: -5.777034759521484
    6. '        ' → logprob: -6.652034759521484
    7. '>' → logprob: -7.652034759521484
    8. ':' → logprob: -7.652034759521484
    9. ' (' → logprob: -7.652034759521484
    10. 'n' → logprob: -7.652034759521484

Token 319: ' si' (ID: 1784)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.8691914081573486
    2. ' if' → logprob: -1.9941914081573486
    3. ' ' → logprob: -2.1191914081573486
    4. '        ' → logprob: -2.2441914081573486
    5. '    ' → logprob: -2.3691914081573486
    6. ' num' → logprob: -2.3691914081573486
    7. '           ' → logprob: -2.7441914081573486
    8. '       ' → logprob: -2.7441914081573486
    9. '   ' → logprob: -2.9941914081573486
    10. ' (' → logprob: -3.1191914081573486

Token 320: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03365941718220711
    2. 'n' → logprob: -3.4086594581604004
    3. '(n' → logprob: -11.533658981323242
    4. ' x' → logprob: -14.033658981323242
    5. ' (' → logprob: -14.158658981323242
    6. '	n' → logprob: -14.158658981323242
    7. 'x' → logprob: -14.283658981323242
    8. '1' → logprob: -14.908658981323242
    9. ' ' → logprob: -15.658658981323242
    10. '   ' → logprob: -15.783658981323242

Token 321: ' bit' (ID: 3546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16033999621868134
    2. ' n' → logprob: -1.9103399515151978
    3. 'num' → logprob: -9.535340309143066
    4. '1' → logprob: -11.160340309143066
    5. ' ' → logprob: -11.410340309143066
    6. ' num' → logprob: -11.785340309143066
    7. 'x' → logprob: -13.035340309143066
    8. ' bit' → logprob: -13.410340309143066
    9. ' lowest' → logprob: -14.035340309143066
    10. ' (' → logprob: -14.160340309143066

Token 322: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.564595639705658
    2. ' ' → logprob: -1.1895956993103027
    3. ' n' → logprob: -2.3145956993103027
    4. '   ' → logprob: -4.314595699310303
    5. 'n' → logprob: -4.564595699310303
    6. '    ' → logprob: -7.314595699310303
    7. ' ' → logprob: -7.439595699310303
    8. '```' → logprob: -7.564595699310303
    9. '  ' → logprob: -7.689595699310303
    10. ' (' → logprob: -8.064595222473145

Token 323: ' poids' (ID: 56058)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2092062532901764
    2. ' n' → logprob: -2.3342063426971436
    3. '1' → logprob: -2.4592063426971436
    4. ' ' → logprob: -5.0842061042785645
    5. 'l' → logprob: -9.084206581115723
    6. ' l' → logprob: -10.959206581115723
    7. '	n' → logprob: -11.459206581115723
    8. '   ' → logprob: -11.584206581115723
    9. ' la' → logprob: -11.709206581115723
    10. '0' → logprob: -11.834206581115723

Token 324: ' faible' (ID: 75786)
  Prédit: ' faible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.6132879853248596
    2. 'fa' → logprob: -1.6132879257202148
    3. '1' → logprob: -2.113287925720215
    4. ' ' → logprob: -3.238287925720215
    5. ' ' → logprob: -3.613287925720215
    6. '   ' → logprob: -3.863287925720215
    7. 'fort' → logprob: -4.363287925720215
    8. ' fort' → logprob: -4.488287925720215
    9. 'le' → logprob: -4.988287925720215
    10. '```' → logprob: -5.363287925720215

Token 325: ' de' (ID: 334)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3563525676727295
    2. ' de' → logprob: -1.8563525676727295
    3. 'est' → logprob: -2.7313525676727295
    4. ' set' → logprob: -3.4813525676727295
    5. ' is' → logprob: -4.106352806091309
    6. ' ' → logprob: -4.356352806091309
    7. '1' → logprob: -5.481352806091309
    8. 'set' → logprob: -5.731352806091309
    9. 'de' → logprob: -5.981352806091309
    10. ' n' → logprob: -6.231352806091309

Token 326: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022484004497528
    2. ' n' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.410224914550781
    4. '	n' → logprob: -15.660224914550781
    5. 'x' → logprob: -16.28522491455078
    6. '   ' → logprob: -16.91022491455078
    7. ' ' → logprob: -16.91022491455078
    8. 'l' → logprob: -17.28522491455078
    9. '```' → logprob: -17.28522491455078
    10. '1' → logprob: -17.66022491455078

Token 327: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0439542680978775
    2. ' ==' → logprob: -3.668954372406006
    3. '==' → logprob: -4.418954372406006
    4. ' :' → logprob: -5.918954372406006
    5. ':
' → logprob: -7.043954372406006
    6. '=' → logprob: -7.543954372406006
    7. ' is' → logprob: -7.668954372406006
    8. '   ' → logprob: -8.543953895568848
    9. ' est' → logprob: -8.793953895568848
    10. ' ' → logprob: -9.168953895568848

Token 328: ' égal' (ID: 15059)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01715359091758728
    2. ' ' → logprob: -4.142153739929199
    3. ' set' → logprob: -6.892153739929199
    4. 'set' → logprob: -9.3921537399292
    5. '   ' → logprob: -11.7671537399292
    6. '```' → logprob: -12.2671537399292
    7. ' ' → logprob: -12.7671537399292
    8. '       ' → logprob: -13.7671537399292
    9. '_set' → logprob: -14.2671537399292
    10. '0' → logprob: -15.0171537399292

Token 329: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010258635506033897
    2. ' ' → logprob: -4.760258674621582
    3. ' à' → logprob: -6.510258674621582
    4. 'à' → logprob: -9.260258674621582
    5. '=' → logprob: -10.510258674621582
    6. '   ' → logprob: -11.760258674621582
    7. ' a' → logprob: -12.135258674621582
    8. '```' → logprob: -12.385258674621582
    9. '       ' → logprob: -13.260258674621582
    10. ' ' → logprob: -13.385258674621582

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '```' → logprob: -19.00020408630371
    4. '   ' → logprob: -19.12520408630371
    5. ' ' → logprob: -19.12520408630371
    6. '0' → logprob: -21.25020408630371
    7. '
' → logprob: -21.37520408630371
    8. '  ' → logprob: -21.37520408630371
    9. '' → logprob: -21.62520408630371
    10. '`' → logprob: -21.62520408630371

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -20.125015258789062
    4. '```' → logprob: -21.375015258789062
    5. '0' → logprob: -22.500015258789062
    6. ' ' → logprob: -22.625015258789062
    7. 'n' → logprob: -23.375015258789062
    8. 'l' → logprob: -23.500015258789062
    9. '
' → logprob: -23.500015258789062
    10. '  ' → logprob: -23.750015258789062

Token 332: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020491788163781166
    2. '       ' → logprob: -4.270491600036621
    3. ':
' → logprob: -5.270491600036621
    4. ' :' → logprob: -7.395491600036621
    5. ',' → logprob: -8.645491600036621
    6. '   ' → logprob: -8.895491600036621
    7. '):' → logprob: -9.395491600036621
    8. '           ' → logprob: -10.020491600036621
    9. '<|end|>' → logprob: -10.270491600036621
    10. ':num' → logprob: -11.645491600036621

Token 333: 'c' (ID: 66)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5144930481910706
    2. 'num' → logprob: -1.6394929885864258
    3. ' num' → logprob: -2.514492988586426
    4. ' n' → logprob: -3.389492988586426
    5. ')' → logprob: -3.514492988586426
    6. '       ' → logprob: -3.889492988586426
    7. 'n' → logprob: -3.889492988586426
    8. ' ' → logprob: -4.639492988586426
    9. ' ' → logprob: -6.014492988586426
    10. '   ' → logprob: -6.639492988586426

Token 334: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7324305176734924
    2. '       ' → logprob: -1.1074304580688477
    3. '   ' → logprob: -2.8574304580688477
    4. '=' → logprob: -3.3574304580688477
    5. '    ' → logprob: -4.482430458068848
    6. ' ==' → logprob: -4.482430458068848
    7. ' :' → logprob: -4.857430458068848
    8. '==' → logprob: -5.107430458068848
    9. '```' → logprob: -5.107430458068848
    10. '           ' → logprob: -5.232430458068848

Token 335: '-à' (ID: 56297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.121198296546936
    2. '   ' → logprob: -1.371198296546936
    3. '       ' → logprob: -2.3711981773376465
    4. ' True' → logprob: -2.8711981773376465
    5. 'n' → logprob: -2.9961981773376465
    6. ')' → logprob: -2.9961981773376465
    7. '    ' → logprob: -3.2461981773376465
    8. '1' → logprob: -3.3711981773376465
    9. ' ' → logprob: -3.8711981773376465
    10. ' true' → logprob: -4.1211981773376465

Token 336: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021732202731072903
    2. '   ' → logprob: -7.00217342376709
    3. ' ' → logprob: -7.62717342376709
    4. 'n' → logprob: -8.12717342376709
    5. 'l' → logprob: -9.25217342376709
    6. '=' → logprob: -9.75217342376709
    7. '0' → logprob: -9.87717342376709
    8. 'True' → logprob: -9.87717342376709
    9. '       ' → logprob: -10.12717342376709
    10. 'int' → logprob: -10.50217342376709

Token 337: ' si' (ID: 1784)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8304235339164734
    2. ' que' → logprob: -1.5804235935211182
    3. 'n' → logprob: -2.080423593521118
    4. ' True' → logprob: -2.205423593521118
    5. 'True' → logprob: -2.955423593521118
    6. '   ' → logprob: -3.455423593521118
    7. '       ' → logprob: -3.830423593521118
    8. '1' → logprob: -5.955423355102539
    9. ' si' → logprob: -6.080423355102539
    10. ' if' → logprob: -6.080423355102539

Token 338: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06203557923436165
    2. 'n' → logprob: -2.81203556060791
    3. '   ' → logprob: -10.81203556060791
    4. '(n' → logprob: -10.81203556060791
    5. ' (' → logprob: -11.68703556060791
    6. '	n' → logprob: -11.68703556060791
    7. ' ' → logprob: -12.56203556060791
    8. '1' → logprob: -13.06203556060791
    9. '    ' → logprob: -13.31203556060791
    10. ' ' → logprob: -13.43703556060791

Token 339: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08985994011163712
    2. ' %' → logprob: -2.464859962463379
    3. '&' → logprob: -7.964859962463379
    4. '<|end|>' → logprob: -8.839859962463379
    5. ')' → logprob: -8.964859962463379
    6. '>' → logprob: -9.589859962463379
    7. ' &' → logprob: -9.839859962463379
    8. ' ' → logprob: -10.214859962463379
    9. ':' → logprob: -10.589859962463379
    10. ')%' → logprob: -10.589859962463379

Token 340: ' impair' (ID: 64113)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4951074421405792
    2. 'odd' → logprob: -1.4951074123382568
    3. ' odd' → logprob: -1.8701074123382568
    4. ' ' → logprob: -5.245107650756836
    5. ' impair' → logprob: -5.495107650756836
    6. '   ' → logprob: -6.495107650756836
    7. 'od' → logprob: -7.870107650756836
    8. '.' → logprob: -8.620107650756836
    9. '%' → logprob: -8.870107650756836
    10. 'pair' → logprob: -9.245107650756836

Token 341: ').
' (ID: 6294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2619870901107788
    2. '):' → logprob: -1.6369870901107788
    3. '       ' → logprob: -3.6369872093200684
    4. ' :' → logprob: -5.261987209320068
    5. ')' → logprob: -6.136987209320068
    6. '           ' → logprob: -7.011987209320068
    7. '):
' → logprob: -8.13698673248291
    8. ',' → logprob: -8.38698673248291
    9. ' ):' → logprob: -8.38698673248291
    10. ':
' → logprob: -9.01198673248291

Token 342: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016121044754981995
    2. ':' → logprob: -7.751612186431885
    3. '        
' → logprob: -7.751612186431885
    4. '   ' → logprob: -8.876611709594727
    5. ':
' → logprob: -9.001611709594727
    6. '<|end|>' → logprob: -9.376611709594727
    7. '           ' → logprob: -9.501611709594727
    8. ' :' → logprob: -9.626611709594727
    9. 'num' → logprob: -10.626611709594727
    10. '    ' → logprob: -10.751611709594727

Token 343: ' #' (ID: 1069)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.28746214509010315
    2. '       ' → logprob: -1.9124621152877808
    3. 'num' → logprob: -2.2874622344970703
    4. '           ' → logprob: -7.53746223449707
    5. '	num' → logprob: -10.41246223449707
    6. '   ' → logprob: -11.53746223449707
    7. '               ' → logprob: -12.28746223449707
    8. '(num' → logprob: -12.41246223449707
    9. '        ' → logprob: -12.78746223449707
    10. ',num' → logprob: -12.91246223449707

Token 344: ' Si' (ID: 7832)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.13132642209529877
    2. ' num' → logprob: -2.13132643699646
    3. '           ' → logprob: -6.131326198577881
    4. '       ' → logprob: -6.131326198577881
    5. '	num' → logprob: -10.881326675415039
    6. '   ' → logprob: -11.631326675415039
    7. '               ' → logprob: -12.631326675415039
    8. '(num' → logprob: -12.631326675415039
    9. '```' → logprob: -12.756326675415039
    10. ',num' → logprob: -14.131326675415039

Token 345: ' oui' (ID: 50908)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.6424694061279297
    2. 'num' → logprob: -0.7674694061279297
    3. '(num' → logprob: -5.01746940612793
    4. ' (' → logprob: -7.26746940612793
    5. '   ' → logprob: -7.76746940612793
    6. ' not' → logprob: -8.01746940612793
    7. ' n' → logprob: -8.26746940612793
    8. ' x' → logprob: -8.64246940612793
    9. ' True' → logprob: -8.76746940612793
    10. '    ' → logprob: -8.89246940612793

Token 346: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4799025356769562
    2. '           ' → logprob: -1.2299025058746338
    3. '               ' → logprob: -2.979902505874634
    4. ':
' → logprob: -3.604902505874634
    5. ' =' → logprob: -5.979902744293213
    6. ' num' → logprob: -6.104902744293213
    7. ',' → logprob: -6.604902744293213
    8. 'num' → logprob: -6.604902744293213
    9. '=' → logprob: -7.479902744293213
    10. '       ' → logprob: -7.854902744293213

Token 347: ' multipl' (ID: 44269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.47971418499946594
    2. ' num' → logprob: -1.1047141551971436
    3. '       ' → logprob: -3.3547141551971436
    4. '           ' → logprob: -4.229714393615723
    5. '	num' → logprob: -8.729714393615723
    6. '   ' → logprob: -10.104714393615723
    7. '               ' → logprob: -11.729714393615723
    8. '*num' → logprob: -11.854714393615723
    9. '(num' → logprob: -11.979714393615723
    10. '
' → logprob: -12.354714393615723

Token 348: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.011065510101616383
    2. 'ique' → logprob: -5.886065483093262
    3. 'i' → logprob: -6.011065483093262
    4. 'ier' → logprob: -6.261065483093262
    5. 'ié' → logprob: -6.636065483093262
    6. '   ' → logprob: -6.886065483093262
    7. 'y' → logprob: -7.761065483093262
    8. 'iquer' → logprob: -8.136065483093262
    9. '       ' → logprob: -8.636065483093262
    10. 'ieur' → logprob: -8.636065483093262

Token 349: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014426033943891525
    2. ' num' → logprob: -4.389426231384277
    3. '(num' → logprob: -6.389426231384277
    4. '	num' → logprob: -9.264426231384277
    5. '           ' → logprob: -9.639426231384277
    6. '   ' → logprob: -9.764426231384277
    7. ',num' → logprob: -12.764426231384277
    8. '*num' → logprob: -12.764426231384277
    9. '=num' → logprob: -13.139426231384277
    10. 'x' → logprob: -13.139426231384277

Token 350: ' par' (ID: 686)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.6267960667610168
    2. '=' → logprob: -1.126796007156372
    3. ' *=' → logprob: -2.126796007156372
    4. ' =' → logprob: -4.251796245574951
    5. '*' → logprob: -5.001796245574951
    6. ',' → logprob: -7.626796245574951
    7. '   ' → logprob: -7.751796245574951
    8. ' *' → logprob: -9.251795768737793
    9. '    ' → logprob: -9.376795768737793
    10. '	' → logprob: -9.626795768737793

Token 351: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4741462171077728
    2. ' x' → logprob: -0.9741462469100952
    3. '(x' → logprob: -9.724145889282227
    4. '   ' → logprob: -12.099145889282227
    5. ' (' → logprob: -12.849145889282227
    6. '	x' → logprob: -13.849145889282227
    7. '(' → logprob: -15.849145889282227
    8. '    ' → logprob: -16.724145889282227
    9. ' ' → logprob: -17.349145889282227
    10. ' ' → logprob: -17.724145889282227

Token 352: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9436983466148376
    2. '           ' → logprob: -1.5686984062194824
    3. ',' → logprob: -1.9436984062194824
    4. '*' → logprob: -3.0686984062194824
    5. ' *' → logprob: -3.1936984062194824
    6. ' =' → logprob: -3.4436984062194824
    7. ' %' → logprob: -3.5686984062194824
    8. '%' → logprob: -3.5686984062194824
    9. '=' → logprob: -4.568698406219482
    10. ' *=' → logprob: -4.568698406219482

Token 353: ' applique' (ID: 180579)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1627889722585678
    2. ' num' → logprob: -1.912788987159729
    3. '   ' → logprob: -6.9127888679504395
    4. '(num' → logprob: -6.9127888679504395
    5. '	num' → logprob: -8.412789344787598
    6. '           ' → logprob: -9.037789344787598
    7. '    ' → logprob: -10.287789344787598
    8. '       ' → logprob: -10.537789344787598
    9. '=num' → logprob: -10.537789344787598
    10. '```' → logprob: -10.912789344787598

Token 354: ' l' (ID: 305)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2871241569519043
    2. ' mod' → logprob: -1.6621241569519043
    3. ' num' → logprob: -2.0371241569519043
    4. ' modulo' → logprob: -2.2871241569519043
    5. ' %' → logprob: -2.7871241569519043
    6. '%' → logprob: -2.7871241569519043
    7. ' (' → logprob: -3.0371241569519043
    8. '(num' → logprob: -3.5371241569519043
    9. ' x' → logprob: -3.5371241569519043
    10. 'num' → logprob: -4.162124156951904

Token 355: ''op' (ID: 70747)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04799511283636093
    2. ' %' → logprob: -4.172995090484619
    3. ' modulo' → logprob: -4.422995090484619
    4. 'mod' → logprob: -4.672995090484619
    5. '=' → logprob: -6.422995090484619
    6. '   ' → logprob: -6.547995090484619
    7. ' ' → logprob: -6.922995090484619
    8. ')' → logprob: -7.297995090484619
    9. '`' → logprob: -7.297995090484619
    10. ''' → logprob: -7.297995090484619

Token 356: 'ération' (ID: 24977)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0566346645355225
    2. 'ort' → logprob: -1.0566346645355225
    3. 'mod' → logprob: -1.4316346645355225
    4. ' modulo' → logprob: -4.181634902954102
    5. ' mod' → logprob: -4.681634902954102
    6. ' %' → logprob: -5.056634902954102
    7. 'orm' → logprob: -5.056634902954102
    8. 'ar' → logprob: -5.306634902954102
    9. 'od' → logprob: -5.931634902954102
    10. 'lus' → logprob: -6.431634902954102

Token 357: ' modulo' (ID: 112372)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.17699351906776428
    2. '%' → logprob: -2.5519936084747314
    3. ' %' → logprob: -3.1769936084747314
    4. '%=' → logprob: -3.5519936084747314
    5. 'mod' → logprob: -5.176993370056152
    6. ' modulo' → logprob: -5.801993370056152
    7. 'num' → logprob: -6.551993370056152
    8. '=' → logprob: -6.801993370056152
    9. '   ' → logprob: -7.676993370056152
    10. '=num' → logprob: -7.926993370056152

Token 358: ' '' (ID: 461)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2082711458206177
    2. 'num' → logprob: -1.4582711458206177
    3. ' num' → logprob: -1.7082711458206177
    4. 'mod' → logprob: -2.583271026611328
    5. '(num' → logprob: -2.583271026611328
    6. '(' → logprob: -2.833271026611328
    7. '(mod' → logprob: -2.958271026611328
    8. ' mod' → logprob: -3.958271026611328
    9. ' ' → logprob: -6.458271026611328
    10. '   ' → logprob: -6.958271026611328

Token 359: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011058199219405651
    2. ' mod' → logprob: -4.511058330535889
    3. '(mod' → logprob: -11.51105785369873
    4. '	mod' → logprob: -15.26105785369873
    5. '_mod' → logprob: -16.761058807373047
    6. '.mod' → logprob: -17.886058807373047
    7. '```' → logprob: -18.636058807373047
    8. ' ' → logprob: -18.886058807373047
    9. ' мод' → logprob: -18.886058807373047
    10. ' modulo' → logprob: -19.261058807373047

Token 360: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2049356997013092
    2. '(num' → logprob: -2.9549357891082764
    3. ',' → logprob: -3.0799357891082764
    4. '(' → logprob: -3.7049357891082764
    5. '           ' → logprob: -3.9549357891082764
    6. '   ' → logprob: -4.079935550689697
    7. '%' → logprob: -4.454935550689697
    8. 'num' → logprob: -5.954935550689697
    9. '       ' → logprob: -6.079935550689697
    10. ',num' → logprob: -6.954935550689697

Token 361: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4080995321273804
    2. '=' → logprob: -1.6580995321273804
    3. ' =' → logprob: -1.9080995321273804
    4. '       ' → logprob: -2.28309965133667
    5. '(num' → logprob: -2.28309965133667
    6. 'num' → logprob: -2.78309965133667
    7. '           ' → logprob: -2.90809965133667
    8. '(' → logprob: -3.40809965133667
    9. ' num' → logprob: -4.03309965133667
    10. '(
' → logprob: -5.15809965133667

Token 362: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.6737819314002991
    2. 'num' (adapté à ' num') → logprob: -1.1737818717956543
    3. '           ' → logprob: -1.7987818717956543
    4. '               ' → logprob: -4.173781871795654
    5. '(num' → logprob: -10.048782348632812
    6. '       ' → logprob: -11.173782348632812
    7. '	num' → logprob: -11.173782348632812
    8. ',num' → logprob: -11.423782348632812
    9. '```' → logprob: -11.423782348632812
    10. '   ' → logprob: -12.048782348632812

Token 363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019960589706897736
    2. ' =' → logprob: -4.019960403442383
    3. '*=' → logprob: -6.394960403442383
    4. ' *=' → logprob: -8.894960403442383
    5. '*' → logprob: -13.394960403442383
    6. ' ' → logprob: -16.144960403442383
    7. '%=' → logprob: -16.144960403442383
    8. '＝' → logprob: -16.144960403442383
    9. '   ' → logprob: -16.144960403442383
    10. '	' → logprob: -17.269960403442383

Token 364: ' num' (ID: 2269)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.1478896588087082
    2. ' (' → logprob: -2.0228896141052246
    3. 'num' → logprob: -5.647889614105225
    4. ' num' → logprob: -6.397889614105225
    5. '   ' → logprob: -12.897890090942383
    6. '(' → logprob: -13.147890090942383
    7. ' ' → logprob: -13.272890090942383
    8. '[num' → logprob: -13.522890090942383
    9. ',num' → logprob: -14.022890090942383
    10. '<num' → logprob: -14.272890090942383

Token 365: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4740896224975586
    2. '*' → logprob: -0.9740896224975586
    3. ' ' → logprob: -12.099089622497559
    4. '*num' → logprob: -12.099089622497559
    5. ' ' → logprob: -14.224089622497559
    6. '%' → logprob: -14.599089622497559
    7. '```' → logprob: -15.599089622497559
    8. '**' → logprob: -16.724090576171875
    9. ' %' → logprob: -16.974090576171875
    10. '#' → logprob: -17.599090576171875

Token 366: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10023611038923264
    2. ' x' → logprob: -2.350236177444458
    3. '(x' → logprob: -10.475235939025879
    4. ' (' → logprob: -13.850235939025879
    5. '	x' → logprob: -15.350235939025879
    6. ' ' → logprob: -17.975236892700195
    7. '(' → logprob: -17.975236892700195
    8. '%x' → logprob: -18.975236892700195
    9. '"x' → logprob: -19.975236892700195
    10. '   ' → logprob: -20.100236892700195

Token 367: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011049943044781685
    2. '%' → logprob: -4.511049747467041
    3. ')' → logprob: -13.5110502243042
    4. ')%' → logprob: -15.1360502243042
    5. ' %=' → logprob: -15.5110502243042
    6. ' ' → logprob: -16.386049270629883
    7. '%x' → logprob: -17.136049270629883
    8. '```' → logprob: -17.386049270629883
    9. '%n' → logprob: -17.511049270629883
    10. ' %#' → logprob: -17.511049270629883

Token 368: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.7610454708337784e-05
    2. ' mod' → logprob: -10.500027656555176
    3. '(mod' → logprob: -17.87502670288086
    4. '	mod' → logprob: -20.50002670288086
    5. ' ' → logprob: -23.37502670288086
    6. 'moder' → logprob: -23.37502670288086
    7. '```' → logprob: -23.87502670288086
    8. ' мод' → logprob: -24.00002670288086
    9. '_mod' → logprob: -25.25002670288086
    10. 'MOD' → logprob: -25.37502670288086

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15655936300754547
    2. '        
' → logprob: -3.156559467315674
    3. '
' → logprob: -3.281559467315674
    4. '<|end|>' → logprob: -3.781559467315674
    5. '\n' → logprob: -5.031559467315674
    6. 'n' → logprob: -5.156559467315674
    7. '(n' → logprob: -5.156559467315674
    8. '  
' → logprob: -5.281559467315674
    9. ' 
' → logprob: -5.281559467315674
    10. '    
' → logprob: -6.031559467315674

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005767432739958167
    2. 'n' → logprob: -8.625576972961426
    3. '        
' → logprob: -8.625576972961426
    4. 'x' → logprob: -9.250576972961426
    5. '   ' → logprob: -9.875576972961426
    6. ' x' → logprob: -10.000576972961426
    7. ' ' → logprob: -11.500576972961426
    8. '           ' → logprob: -12.875576972961426
    9. ',' → logprob: -13.000576972961426
    10. ' 
' → logprob: -13.250576972961426

Token 371: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018988829106092453
    2. '       ' → logprob: -4.643988609313965
    3. ' x' → logprob: -4.768988609313965
    4. '   ' → logprob: -7.768988609313965
    5. 'n' → logprob: -8.268988609313965
    6. '        
' → logprob: -12.143988609313965
    7. ' n' → logprob: -12.393988609313965
    8. ' ' → logprob: -12.768988609313965
    9. '	x' → logprob: -13.143988609313965
    10. '    ' → logprob: -13.268988609313965

Token 372: ' Met' (ID: 7227)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.810037742368877e-05
    2. ' x' → logprob: -11.125038146972656
    3. '       ' → logprob: -11.250038146972656
    4. '   ' → logprob: -11.500038146972656
    5. '	x' → logprob: -17.375038146972656
    6. '```' → logprob: -17.750038146972656
    7. 'n' → logprob: -18.500038146972656
    8. ' ' → logprob: -19.000038146972656
    9. '           ' → logprob: -19.375038146972656
    10. '  ' → logprob: -20.625038146972656

Token 373: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8145731687545776
    2. 'n' → logprob: -0.9395731687545776
    3. 'x' → logprob: -2.814573287963867
    4. ' n' → logprob: -2.939573287963867
    5. '       ' → logprob: -3.564573287963867
    6. ' x' → logprob: -3.939573287963867
    7. '	n' → logprob: -6.314573287963867
    8. '           ' → logprob: -7.189573287963867
    9. '  ' → logprob: -7.689573287963867
    10. '    ' → logprob: -7.814573287963867

Token 374: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.005415534600615501
    2. 'n' → logprob: -6.380415439605713
    3. 'jou' → logprob: -6.630415439605713
    4. 'jours' → logprob: -6.755415439605713
    5. '```' → logprob: -7.255415439605713
    6. 'niveau' → logprob: -9.130415916442871
    7. 'jourd' → logprob: -9.380415916442871
    8. 'jum' → logprob: -10.130415916442871
    9. 'journ' → logprob: -10.130415916442871
    10. 'jac' → logprob: -10.755415916442871

Token 375: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06286755949258804
    2. ' x' → logprob: -2.8128676414489746
    3. 'n' → logprob: -7.437867641448975
    4. '       ' → logprob: -8.812867164611816
    5. ' n' → logprob: -8.937867164611816
    6. '   ' → logprob: -10.562867164611816
    7. '	x' → logprob: -12.937867164611816
    8. ' ' → logprob: -14.312867164611816
    9. '    ' → logprob: -14.312867164611816
    10. '           ' → logprob: -14.812867164611816

Token 376: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004074354947078973
    2. ' x' → logprob: -8.125407218933105
    3. 'n' → logprob: -9.125407218933105
    4. 'value' → logprob: -14.250407218933105
    5. 'val' → logprob: -14.500407218933105
    6. ' valeur' → logprob: -14.625407218933105
    7. ' n' → logprob: -15.125407218933105
    8. '   ' → logprob: -15.500407218933105
    9. ' ' → logprob: -16.000408172607422
    10. 'variable' → logprob: -16.125408172607422

Token 377: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0039208377711474895
    2. ' x' → logprob: -5.628921031951904
    3. '       ' → logprob: -8.878920555114746
    4. '   ' → logprob: -9.128920555114746
    5. 'n' → logprob: -10.378920555114746
    6. ' de' → logprob: -10.628920555114746
    7. '	x' → logprob: -12.003920555114746
    8. ' ' → logprob: -12.128920555114746
    9. '=' → logprob: -13.253920555114746
    10. ',' → logprob: -13.878920555114746

Token 378: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.248469718324486e-05
    2. ' x' → logprob: -10.750022888183594
    3. 'n' → logprob: -13.875022888183594
    4. ' ' → logprob: -19.375022888183594
    5. '   ' → logprob: -19.500022888183594
    6. '	x' → logprob: -19.500022888183594
    7. '```' → logprob: -21.875022888183594
    8. 'N' → logprob: -22.000022888183594
    9. ' n' → logprob: -22.125022888183594
    10. '(x' → logprob: -22.625022888183594

Token 379: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019289902411401272
    2. ' =' → logprob: -6.251928806304932
    3. '*=' → logprob: -15.37692928314209
    4. '=
' → logprob: -15.87692928314209
    5. '   ' → logprob: -17.251928329467773
    6. ' ' → logprob: -17.751928329467773
    7. '=

' → logprob: -18.126928329467773
    8. ',' → logprob: -18.126928329467773
    9. '%=' → logprob: -18.251928329467773
    10. 'x' → logprob: -18.626928329467773

Token 380: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07898617535829544
    2. '(x' → logprob: -2.578986167907715
    3. ' x' → logprob: -9.328986167907715
    4. ' (' → logprob: -12.078986167907715
    5. '   ' → logprob: -13.828986167907715
    6. '```' → logprob: -14.453986167907715
    7. '(' → logprob: -14.828986167907715
    8. '	x' → logprob: -17.07898712158203
    9. ' ' → logprob: -17.70398712158203
    10. 'pow' → logprob: -17.95398712158203

Token 381: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07139097154140472
    2. '*' → logprob: -2.9463908672332764
    3. ' =' → logprob: -5.0713911056518555
    4. ' *' → logprob: -5.3213911056518555
    5. '*x' → logprob: -5.4463911056518555
    6. '**' → logprob: -7.4463911056518555
    7. '   ' → logprob: -9.071391105651855
    8. '*=' → logprob: -9.071391105651855
    9. '2' → logprob: -10.321391105651855
    10. ' ' → logprob: -10.946391105651855

Token 382: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020377879263833165
    2. ' x' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.25020408630371
    4. ' ' → logprob: -16.62520408630371
    5. '2' → logprob: -17.50020408630371
    6. '	x' → logprob: -17.62520408630371
    7. '```' → logprob: -18.00020408630371
    8. '(x' → logprob: -19.00020408630371
    9. '%x' → logprob: -20.00020408630371
    10. '`' → logprob: -20.12520408630371

Token 383: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932337880134583
    2. ' %' → logprob: -0.6932337880134583
    3. '   ' → logprob: -10.068233489990234
    4. '%x' → logprob: -10.943233489990234
    5. ' %=' → logprob: -10.943233489990234
    6. ')%' → logprob: -12.693233489990234
    7. ')' → logprob: -13.443233489990234
    8. ' ' → logprob: -14.068233489990234
    9. '       ' → logprob: -14.443233489990234
    10. '%n' → logprob: -14.818233489990234

Token 384: ' '' (ID: 461)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004516039043664932
    2. ' mod' → logprob: -5.629516124725342
    3. 'x' → logprob: -7.129516124725342
    4. '(mod' → logprob: -9.629515647888184
    5. ' x' → logprob: -10.004515647888184
    6. '	mod' → logprob: -13.379515647888184
    7. ' ' → logprob: -13.629515647888184
    8. ' ' → logprob: -16.1295166015625
    9. '(x' → logprob: -16.1295166015625
    10. '```' → logprob: -16.1295166015625

Token 385: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.306760805164231e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -18.50001335144043
    4. '	mod' → logprob: -19.50001335144043
    5. ' ' → logprob: -22.00001335144043
    6. 'x' → logprob: -22.00001335144043
    7. '```' → logprob: -22.00001335144043
    8. 'moder' → logprob: -22.37501335144043
    9. '
' → logprob: -22.62501335144043
    10. '   ' → logprob: -22.75001335144043

Token 386: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10637403279542923
    2. 'x' → logprob: -2.4813740253448486
    3. ' x' → logprob: -4.356374263763428
    4. ',' → logprob: -5.981374263763428
    5. '   ' → logprob: -6.856374263763428
    6. '        
' → logprob: -7.731374263763428
    7. '    
' → logprob: -9.73137378692627
    8. '<|end|>' → logprob: -9.73137378692627
    9. ',
' → logprob: -9.85637378692627
    10. '           ' → logprob: -9.85637378692627

Token 387: ' pour' (ID: 1930)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41632962226867676
    2. '       ' → logprob: -1.1663296222686768
    3. ' x' → logprob: -3.7913296222686768
    4. '        
' → logprob: -5.916329383850098
    5. '   ' → logprob: -6.416329383850098
    6. '    
' → logprob: -7.666329383850098
    7. '   
' → logprob: -7.791329383850098
    8. '  
' → logprob: -7.916329383850098
    9. ',' → logprob: -8.291329383850098
    10. '	x' → logprob: -8.541329383850098

Token 388: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2776066064834595
    2. 'la' → logprob: -1.2776066064834595
    3. ' la' → logprob: -2.90260648727417
    4. 'the' → logprob: -3.15260648727417
    5. ' accél' → logprob: -3.27760648727417
    6. ' the' → logprob: -3.40260648727417
    7. 'x' → logprob: -3.40260648727417
    8. '   ' → logprob: -3.52760648727417
    9. ' ' → logprob: -3.77760648727417
    10. '```' → logprob: -3.90260648727417

Token 389: ' prochaine' (ID: 78876)
  Prédit: ' prochaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -1.0918848514556885
    2. 'pu' → logprob: -1.2168848514556885
    3. 'multip' → logprob: -2.4668848514556885
    4. 'pow' → logprob: -2.7168848514556885
    5. 'while' → logprob: -2.7168848514556885
    6. 'next' → logprob: -3.4668848514556885
    7. 'pro' → logprob: -3.9668848514556885
    8. 'suite' → logprob: -3.9668848514556885
    9. 'ré' → logprob: -4.216884613037109
    10. 'mp' → logprob: -4.591884613037109

Token 390: ' it' (ID: 480)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.566511869430542
    2. ' ' → logprob: -1.316511869430542
    3. ' x' → logprob: -2.691511869430542
    4. '  
' → logprob: -3.066511869430542
    5. 'iteration' → logprob: -4.566512107849121
    6. ' iteration' → logprob: -5.066512107849121
    7. '=' → logprob: -5.566512107849121
    8. '   
' → logprob: -5.691512107849121
    9. ' 
' → logprob: -5.816512107849121
    10. 'pow' → logprob: -5.941512107849121

Token 391: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -6.372916686814278e-05
    2. 'er' → logprob: -10.3750638961792
    3. 'éra' → logprob: -11.5000638961792
    4. 'ér' → logprob: -12.1250638961792
    5. 'é' → logprob: -12.6250638961792
    6. 'ration' → logprob: -13.1250638961792
    7. 'érée' → logprob: -13.2500638961792
    8. 'érations' → logprob: -13.2500638961792
    9. 'éré' → logprob: -13.7500638961792
    10. 't' → logprob: -13.8750638961792

Token 392: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19875748455524445
    2. 'x' → logprob: -1.823757529258728
    3. ' x' → logprob: -4.323757648468018
    4. '   ' → logprob: -5.698757648468018
    5. '        
' → logprob: -7.323757648468018
    6. ',' → logprob: -7.573757648468018
    7. '	x' → logprob: -8.07375717163086
    8. '<|end|>' → logprob: -8.57375717163086
    9. '  
' → logprob: -9.44875717163086
    10. '    
' → logprob: -9.44875717163086

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021356618031859398
    2. 'x' → logprob: -3.8963565826416016
    3. '   ' → logprob: -7.646356582641602
    4. ' x' → logprob: -8.021356582641602
    5. 'n' → logprob: -12.646356582641602
    6. '```' → logprob: -13.271356582641602
    7. ' ' → logprob: -14.271356582641602
    8. '	' → logprob: -14.271356582641602
    9. '      ' → logprob: -14.896356582641602
    10. '           ' → logprob: -15.021356582641602

Token 394: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.024900231510400772
    2. ' x' → logprob: -4.024900436401367
    3. '       ' → logprob: -5.024900436401367
    4. '   ' → logprob: -8.774900436401367
    5. '	x' → logprob: -14.524900436401367
    6. ' ' → logprob: -16.399900436401367
    7. '  ' → logprob: -16.899900436401367
    8. '           ' → logprob: -17.024900436401367
    9. '      ' → logprob: -17.774900436401367
    10. '    ' → logprob: -17.774900436401367

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011706985533237457
    2. ' =' → logprob: -6.751170635223389
    3. '*=' → logprob: -15.376171112060547
    4. '%=' → logprob: -15.376171112060547
    5. '=
' → logprob: -18.126171112060547
    6. ',' → logprob: -18.751171112060547
    7. '=

' → logprob: -18.751171112060547
    8. '＝' → logprob: -18.876171112060547
    9. '.=' → logprob: -19.751171112060547
    10. '*' → logprob: -19.876171112060547

Token 396: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016420960891991854
    2. '(x' → logprob: -6.501642227172852
    3. ' x' → logprob: -8.876642227172852
    4. ' (' → logprob: -15.626642227172852
    5. '(' → logprob: -16.87664222717285
    6. '	x' → logprob: -17.62664222717285
    7. '   ' → logprob: -19.50164222717285
    8. '"x' → logprob: -20.50164222717285
    9. ' ' → logprob: -21.00164222717285
    10. '_x' → logprob: -21.00164222717285

Token 397: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31363150477409363
    2. ' *' → logprob: -1.313631534576416
    3. '*x' → logprob: -7.938631534576416
    4. '**' → logprob: -11.313631057739258
    5. 'x' → logprob: -15.188631057739258
    6. ' ' → logprob: -15.438631057739258
    7. ' ' → logprob: -16.938631057739258
    8. '(x' → logprob: -17.188631057739258
    9. '%' → logprob: -17.313631057739258
    10. '=' → logprob: -17.438631057739258

Token 398: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '	x' → logprob: -19.75001335144043
    4. ' ' → logprob: -22.62501335144043
    5. '%x' → logprob: -22.62501335144043
    6. '"x' → logprob: -23.25001335144043
    7. '<|end|>' → logprob: -23.50001335144043
    8. '$x' → logprob: -24.00001335144043
    9. '   ' → logprob: -24.25001335144043
    10. ')x' → logprob: -24.75001335144043

Token 399: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07889077812433243
    2. '%' → logprob: -2.578890800476074
    3. '```' → logprob: -14.828890800476074
    4. ' ' → logprob: -15.078890800476074
    5. '   ' → logprob: -16.328889846801758
    6. ' ' → logprob: -16.828889846801758
    7. ' %=' → logprob: -16.953889846801758
    8. ')' → logprob: -17.328889846801758
    9. 'mod' → logprob: -17.453889846801758
    10. ' %
' → logprob: -17.453889846801758

Token 400: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.25
    3. '(mod' → logprob: -19.5
    4. '	mod' → logprob: -21.0
    5. '```' → logprob: -23.5
    6. 'moder' → logprob: -24.25
    7. 'modal' → logprob: -24.875
    8. '`' → logprob: -25.125
    9. ' мод' → logprob: -25.375
    10. 'MOD' → logprob: -25.75

Token 401: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17739471793174744
    2. '       ' → logprob: -2.8023946285247803
    3. '   ' → logprob: -2.9273946285247803
    4. ' n' → logprob: -3.5523946285247803
    5. '	n' → logprob: -5.552394866943359
    6. '```' → logprob: -5.552394866943359
    7. '  
' → logprob: -6.052394866943359
    8. '        
' → logprob: -6.177394866943359
    9. '<|end|>' → logprob: -6.677394866943359
    10. '    
' → logprob: -6.802394866943359

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008249067701399326
    2. 'n' → logprob: -4.883249282836914
    3. ' n' → logprob: -8.508249282836914
    4. '   ' → logprob: -9.008249282836914
    5. '	n' → logprob: -9.133249282836914
    6. '```' → logprob: -9.633249282836914
    7. '	' → logprob: -9.883249282836914
    8. '        
' → logprob: -10.383249282836914
    9. '​' → logprob: -11.133249282836914
    10. '<|end|>' → logprob: -11.883249282836914

Token 403: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13475890457630157
    2. '       ' → logprob: -2.384758949279785
    3. ' n' → logprob: -3.384758949279785
    4. '   ' → logprob: -10.009758949279785
    5. '	n' → logprob: -11.134758949279785
    6. '```' → logprob: -12.134758949279785
    7. '        ' → logprob: -12.509758949279785
    8. ' ' → logprob: -13.384758949279785
    9. '	' → logprob: -13.759758949279785
    10. '        
' → logprob: -14.009758949279785

Token 404: ' Déc' (ID: 56995)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12692958116531372
    2. ' n' → logprob: -2.126929521560669
    3. '   ' → logprob: -13.50192928314209
    4. '	n' → logprob: -16.376930236816406
    5. '       ' → logprob: -16.876930236816406
    6. '    ' → logprob: -18.126930236816406
    7. ' ' → logprob: -19.126930236816406
    8. ' ' → logprob: -20.126930236816406
    9. '  ' → logprob: -20.626930236816406
    10. ',n' → logprob: -21.876930236816406

Token 405: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.01590907759964466
    2. 'al' → logprob: -4.765909194946289
    3. 'ro' → logprob: -6.015909194946289
    4. '>>' → logprob: -7.265909194946289
    5. 'ide' → logprob: -7.765909194946289
    6. 'alez' → logprob: -7.765909194946289
    7. 'r' → logprob: -8.015909194946289
    8. 'alee' → logprob: -8.015909194946289
    9. '```' → logprob: -8.515909194946289
    10. 'er' → logprob: -8.765909194946289

Token 406: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687992095947266
    2. ' n' → logprob: -1.1368799209594727
    3. '   ' → logprob: -12.011879920959473
    4. '	n' → logprob: -13.511879920959473
    5. ' ' → logprob: -14.761879920959473
    6. '```' → logprob: -15.011879920959473
    7. ' ' → logprob: -15.386879920959473
    8. 'x' → logprob: -15.511879920959473
    9. '(n' → logprob: -16.136878967285156
    10. ' 
' → logprob: -17.261878967285156

Token 407: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012116250582039356
    2. ' n' → logprob: -4.512116432189941
    3. 'x' → logprob: -7.762116432189941
    4. ' ' → logprob: -8.512116432189941
    5. '<|end|>' → logprob: -8.887116432189941
    6. '   ' → logprob: -9.637116432189941
    7. '>>>' → logprob: -9.887116432189941
    8. ' right' → logprob: -10.637116432189941
    9. 'right' → logprob: -10.887116432189941
    10. 'l' → logprob: -10.887116432189941

Token 408: ' bits' (ID: 18189)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017521760892122984
    2. ' n' → logprob: -6.3767523765563965
    3. ' ' → logprob: -10.376751899719238
    4. '1' → logprob: -12.251751899719238
    5. '>' → logprob: -12.751751899719238
    6. '>>' → logprob: -13.501751899719238
    7. '2' → logprob: -13.501751899719238
    8. ' bits' → logprob: -13.626751899719238
    9. 'b' → logprob: -13.751751899719238
    10. '>>>' → logprob: -13.876751899719238

Token 409: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03376061096787453
    2. ' n' → logprob: -3.4087605476379395
    3. '>>>' → logprob: -9.658761024475098
    4. '>>' → logprob: -10.658761024475098
    5. '   ' → logprob: -11.908761024475098
    6. ' >>=' → logprob: -12.408761024475098
    7. 'x' → logprob: -12.658761024475098
    8. ' ' → logprob: -12.658761024475098
    9. ' right' → logprob: -12.783761024475098
    10. ' ' → logprob: -13.408761024475098

Token 410: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031777136027812958
    2. ' n' → logprob: -5.753177642822266
    3. '	n' → logprob: -17.878177642822266
    4. ' ' → logprob: -17.878177642822266
    5. 'N' → logprob: -18.878177642822266
    6. 'x' → logprob: -19.503177642822266
    7. '>' → logprob: -19.628177642822266
    8. '<|end|>' → logprob: -19.628177642822266
    9. ' ' → logprob: -20.128177642822266
    10. '1' → logprob: -20.628177642822266

Token 411: ' vers' (ID: 3640)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.5925207734107971
    2. ' >>=' → logprob: -0.8425207734107971
    3. 'n' → logprob: -4.717520713806152
    4. '=' → logprob: -5.467520713806152
    5. '>>>' → logprob: -7.342520713806152
    6. '   ' → logprob: -7.342520713806152
    7. ' right' → logprob: -7.467520713806152
    8. ' ' → logprob: -7.592520713806152
    9. ' n' → logprob: -8.342520713806152
    10. ')>>' → logprob: -9.092520713806152

Token 412: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4584604799747467
    2. '1' → logprob: -1.3334604501724243
    3. 'la' → logprob: -3.208460569381714
    4. 'l' → logprob: -3.458460569381714
    5. '<|end|>' → logprob: -4.708460330963135
    6. ' right' → logprob: -5.333460330963135
    7. ' droite' → logprob: -5.708460330963135
    8. 'n' → logprob: -5.708460330963135
    9. '_right' → logprob: -6.458460330963135
    10. 'Right' → logprob: -6.708460330963135

Token 413: ' droite' (ID: 61428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5929321050643921
    2. 'right' → logprob: -0.8429321050643921
    3. ' droite' → logprob: -4.342932224273682
    4. ' right' → logprob: -6.967932224273682
    5. '>>' → logprob: -7.092932224273682
    6. '_right' → logprob: -7.342932224273682
    7. 'Right' → logprob: -7.592932224273682
    8. '>' → logprob: -8.842931747436523
    9. '右' → logprob: -8.842931747436523
    10. ' ' → logprob: -9.092931747436523

Token 414: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2360670566558838
    2. '>>' → logprob: -1.6110670566558838
    3. 'n' → logprob: -1.7360670566558838
    4. ' n' → logprob: -2.361067056655884
    5. '>>>' → logprob: -2.736067056655884
    6. '<|end|>' → logprob: -3.111067056655884
    7. '   ' → logprob: -3.361067056655884
    8. '(n' → logprob: -3.736067056655884
    9. ' >>=' → logprob: -4.111066818237305
    10. '       ' → logprob: -4.486066818237305

Token 415: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.000045776367188
    4. '```' → logprob: -17.125045776367188
    5. '   ' → logprob: -17.750045776367188
    6. ' one' → logprob: -18.125045776367188
    7. '<|end|>' → logprob: -18.875045776367188
    8. '`' → logprob: -20.125045776367188
    9. '‌' → logprob: -20.250045776367188
    10. '۱' → logprob: -20.250045776367188

Token 416: ' position' (ID: 4010)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. ' ' → logprob: -15.750553131103516
    4. ' one' → logprob: -17.375553131103516
    5. '<|end|>' → logprob: -17.500553131103516
    6. '   ' → logprob: -17.875553131103516
    7. '```' → logprob: -18.625553131103516
    8. ')' → logprob: -19.375553131103516
    9. '>' → logprob: -19.375553131103516
    10. '<|end|>' → logprob: -20.125553131103516

Token 417: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.649530827999115
    2. ' n' → logprob: -0.899530827999115
    3. '(n' → logprob: -3.7745308876037598
    4. '>>' → logprob: -4.27453088760376
    5. '<|end|>' → logprob: -4.77453088760376
    6. '>>>' → logprob: -5.52453088760376
    7. ' >>=' → logprob: -5.64953088760376
    8. ' ' → logprob: -6.14953088760376
    9. '1' → logprob: -6.14953088760376
    10. '       ' → logprob: -6.27453088760376

Token 418: 'équ' (ID: 99214)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9807412028312683
    2. ' n' → logprob: -1.105741262435913
    3. 'n' → logprob: -1.230741262435913
    4. ' ' → logprob: -6.605741024017334
    5. '   ' → logprob: -8.605741500854492
    6. '       ' → logprob: -9.105741500854492
    7. '```' → logprob: -9.230741500854492
    8. '>' → logprob: -10.105741500854492
    9. ' ' → logprob: -10.480741500854492
    10. '2' → logprob: -10.480741500854492

Token 419: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.17004261910915375
    2. 'ival' → logprob: -2.1700425148010254
    3. 'iv' → logprob: -3.5450425148010254
    4. 'i' → logprob: -5.295042514801025
    5. 'e' → logprob: -5.670042514801025
    6. '   ' → logprob: -6.670042514801025
    7. '>>>' → logprob: -6.920042514801025
    8. 'ivalence' → logprob: -7.295042514801025
    9. 'val' → logprob: -8.420042991638184
    10. 'u' → logprob: -8.420042991638184

Token 420: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44751524925231934
    2. ' à' → logprob: -1.9475152492523193
    3. ' to' → logprob: -2.4475152492523193
    4. 'à' → logprob: -2.8225152492523193
    5. 'n' → logprob: -3.3225152492523193
    6. 'to' → logprob: -3.5725152492523193
    7. '>>' → logprob: -5.697515487670898
    8. '>>>' → logprob: -6.697515487670898
    9. '   ' → logprob: -7.447515487670898
    10. ' =' → logprob: -7.572515487670898

Token 421: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47408145666122437
    2. 'n' → logprob: -0.9740814566612244
    3. '1' → logprob: -13.099081039428711
    4. '	n' → logprob: -13.599081039428711
    5. ' ' → logprob: -14.849081039428711
    6. '   ' → logprob: -14.974081039428711
    7. ' ' → logprob: -15.599081039428711
    8. '```' → logprob: -16.72408103942871
    9. '(n' → logprob: -17.22408103942871
    10. '>' → logprob: -17.34908103942871

Token 422: ' =' (ID: 314)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.08627983182668686
    2. ' >>=' → logprob: -2.58627986907959
    3. '>>' → logprob: -5.83627986907959
    4. ' //' → logprob: -5.83627986907959
    5. '=' → logprob: -6.71127986907959
    6. '//' → logprob: -8.46127986907959
    7. ' =' → logprob: -9.46127986907959
    8. ' ' → logprob: -11.71127986907959
    9. ' >>' → logprob: -12.96127986907959
    10. ' ' → logprob: -13.71127986907959

Token 423: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326186656951904
    2. 'n' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.688261032104492
    4. '	n' → logprob: -16.938261032104492
    5. '```' → logprob: -17.938261032104492
    6. ')n' → logprob: -18.313261032104492
    7. ' ' → logprob: -18.438261032104492
    8. '(n' → logprob: -19.063261032104492
    9. ' ' → logprob: -19.063261032104492
    10. '<|end|>' → logprob: -20.063261032104492

Token 424: ' //' (ID: 602)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.8199654221534729
    2. ' >>' → logprob: -1.0699653625488281
    3. ' //' → logprob: -1.5699653625488281
    4. '//' → logprob: -5.194965362548828
    5. ' ' → logprob: -6.194965362548828
    6. ' ' → logprob: -7.819965362548828
    7. ' >>=' → logprob: -8.694965362548828
    8. 'n' → logprob: -9.319965362548828
    9. '#' → logprob: -9.569965362548828
    10. '   ' → logprob: -9.694965362548828

Token 425: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -16.750709533691406
    4. '1' → logprob: -17.625709533691406
    5. ' ' → logprob: -18.750709533691406
    6. '   ' → logprob: -19.000709533691406
    7. '>' → logprob: -19.125709533691406
    8. '=' → logprob: -20.000709533691406
    9. '۲' → logprob: -20.250709533691406
    10. '​' → logprob: -20.375709533691406

Token 426: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -17.125
    4. '1' → logprob: -19.375
    5. '>' → logprob: -19.5
    6. '=' → logprob: -21.25
    7. '   ' → logprob: -21.875
    8. '
' → logprob: -22.125
    9. '２' → logprob: -22.25
    10. '۲' → logprob: -22.25

Token 427: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16419252753257751
    2. ')
' → logprob: -2.1641924381256104
    3. '       ' → logprob: -3.5391924381256104
    4. ')n' → logprob: -5.4141926765441895
    5. '<|end|>' → logprob: -6.2891926765441895
    6. '(n' → logprob: -8.039192199707031
    7. '   ' → logprob: -8.414192199707031
    8. 'n' → logprob: -8.914192199707031
    9. '```' → logprob: -9.414192199707031
    10. '<|end|>' → logprob: -9.539192199707031

Token 428: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3791984021663666
    2. '       ' → logprob: -1.629198431968689
    3. ' n' → logprob: -2.1291983127593994
    4. '   ' → logprob: -7.6291985511779785
    5. '	n' → logprob: -9.50419807434082
    6. ' ' → logprob: -13.25419807434082
    7. '	' → logprob: -13.62919807434082
    8. ' ' → logprob: -13.62919807434082
    9. ',n' → logprob: -13.75419807434082
    10. '```' → logprob: -13.75419807434082

Token 429: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011218054220080376
    2. ' n' → logprob: -4.511218070983887
    3. '       ' → logprob: -8.761218070983887
    4. '   ' → logprob: -11.261218070983887
    5. '	n' → logprob: -14.886218070983887
    6. '    ' → logprob: -16.26121711730957
    7. ' ' → logprob: -16.51121711730957
    8. '  ' → logprob: -16.88621711730957
    9. '```' → logprob: -17.01121711730957
    10. '           ' → logprob: -17.63621711730957

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5678215026855469
    2. '>>' → logprob: -1.1928215026855469
    3. ' >>=' → logprob: -2.067821502685547
    4. '//=' → logprob: -6.067821502685547
    5. ' =' → logprob: -6.942821502685547
    6. '>' → logprob: -9.942821502685547
    7. '>>>' → logprob: -9.942821502685547
    8. ' >>' → logprob: -11.317821502685547
    9. '≫' → logprob: -11.317821502685547
    10. ' ' → logprob: -12.692821502685547

Token 431: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02975071594119072
    2. 'n' → logprob: -3.5297508239746094
    3. '	n' → logprob: -15.65475082397461
    4. '<|end|>' → logprob: -16.02975082397461
    5. ' ' → logprob: -17.90475082397461
    6. ' н' → logprob: -18.02975082397461
    7. ' ' → logprob: -19.02975082397461
    8. '>' → logprob: -19.15475082397461
    9. '(n' → logprob: -19.40475082397461
    10. ')n' → logprob: -19.40475082397461

Token 432: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.008476993069052696
    2. ' >>' → logprob: -4.883477210998535
    3. '>' → logprob: -7.758477210998535
    4. '>>>' → logprob: -8.258477210998535
    5. ' ' → logprob: -9.633477210998535
    6. 'n' → logprob: -10.258477210998535
    7. ' ' → logprob: -10.633477210998535
    8. ' >>=' → logprob: -10.758477210998535
    9. '»' → logprob: -11.883477210998535
    10. ' n' → logprob: -12.133477210998535

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.375003814697266
    4. '   ' → logprob: -18.500003814697266
    5. ' ' → logprob: -21.500003814697266
    6. '１' → logprob: -21.625003814697266
    7. '' → logprob: -22.000003814697266
    8. '  ' → logprob: -22.250003814697266
    9. '‌' → logprob: -22.875003814697266
    10. '0' → logprob: -23.000003814697266

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.875
    5. '１' → logprob: -20.8125
    6. '=' → logprob: -21.0625
    7. '0' → logprob: -21.125
    8. '১' → logprob: -21.4375
    9. '' → logprob: -21.5
    10. '۱' → logprob: -21.9375

Token 435: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003623235272243619
    2. '    
' → logprob: -6.128623008728027
    3. 'return' → logprob: -6.878623008728027
    4. ' return' → logprob: -8.878623008728027
    5. '
' → logprob: -9.253623008728027
    6. '<|end|>' → logprob: -10.128623008728027
    7. '        
' → logprob: -10.253623008728027
    8. '	return' → logprob: -10.503623008728027
    9. '  
' → logprob: -10.628623008728027
    10. '	
' → logprob: -11.628623008728027

Token 436: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014382082736119628
    2. 'return' → logprob: -6.876438140869141
    3. ' return' → logprob: -7.876438140869141
    4. '	return' → logprob: -10.75143814086914
    5. ':return' → logprob: -13.00143814086914
    6. '   ' → logprob: -14.12643814086914
    7. ' ' → logprob: -14.62643814086914
    8. '    
' → logprob: -15.25143814086914
    9. '```' → logprob: -16.00143814086914
    10. '  ' → logprob: -16.37643814086914

Token 438: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005806732806377113
    2. '   ' → logprob: -7.500580787658691
    3. ' return' → logprob: -10.500580787658691
    4. ':return' → logprob: -16.250579833984375
    5. '	return' → logprob: -16.625579833984375
    6. 'ret' → logprob: -17.125579833984375
    7. '{return' → logprob: -17.625579833984375
    8. ' ' → logprob: -18.375579833984375
    9. 'eturn' → logprob: -19.875579833984375
    10. '```' → logprob: -19.875579833984375

Token 439: 'ne' (ID: 611)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7488322257995605
    2. 'ne' → logprob: -1.4988322257995605
    3. 'num' → logprob: -1.8738322257995605
    4. 'ner' → logprob: -2.1238322257995605
    5. 'n' → logprob: -3.6238322257995605
    6. ' return' → logprob: -6.4988322257995605
    7. '   ' → logprob: -7.2488322257995605
    8. 'nez' → logprob: -7.7488322257995605
    9. ' ' → logprob: -8.623832702636719
    10. '	num' → logprob: -8.998832702636719

Token 440: ' le' (ID: 505)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07888989895582199
    2. ' num' → logprob: -2.578889846801758
    3. '	num' → logprob: -16.078889846801758
    4. '(num' → logprob: -16.828889846801758
    5. ' ' → logprob: -18.203889846801758
    6. ' le' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.828889846801758
    8. '[num' → logprob: -18.828889846801758
    9. '<num' → logprob: -19.703889846801758
    10. 'le' → logprob: -19.953889846801758

Token 441: ' résultat' (ID: 62556)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0014307129895314574
    2. ' num' → logprob: -6.751430511474609
    3. 'result' → logprob: -8.37643051147461
    4. ' résultat' → logprob: -10.62643051147461
    5. ' result' → logprob: -12.62643051147461
    6. 'rés' → logprob: -13.50143051147461
    7. 'res' → logprob: -14.37643051147461
    8. ' resultat' → logprob: -14.62643051147461
    9. 'resultado' → logprob: -16.37643051147461
    10. '	num' → logprob: -17.12643051147461

Token 442: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35917362570762634
    2. ' num' → logprob: -1.2341736555099487
    3. 'num' → logprob: -4.859173774719238
    4. '(num' → logprob: -6.859173774719238
    5. '	num' → logprob: -7.484173774719238
    6. ' return' → logprob: -7.609173774719238
    7. ',' → logprob: -8.609173774719238
    8. ',num' → logprob: -8.859173774719238
    9. '[num' → logprob: -8.984173774719238
    10. 'return' → logprob: -9.859173774719238

Token 443: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002850879216566682
    2. ' return' → logprob: -6.5028510093688965
    3. 'return' → logprob: -6.7528510093688965
    4. ':return' → logprob: -9.252850532531738
    5. '	return' → logprob: -10.502850532531738
    6. '
' → logprob: -10.877850532531738
    7. ',' → logprob: -11.627850532531738
    8. '    
' → logprob: -12.377850532531738
    9. '{return' → logprob: -12.377850532531738
    10. 'num' → logprob: -13.002850532531738

Token 444: ' la' (ID: 557)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10020752996206284
    2. ' num' → logprob: -2.350207567214966
    3. '(num' → logprob: -14.475207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '	num' → logprob: -16.100208282470703
    6. '<num' → logprob: -17.600208282470703
    7. '   ' → logprob: -17.975208282470703
    8. '[num' → logprob: -18.350208282470703
    9. '=num' → logprob: -18.725208282470703
    10. ',num' → logprob: -18.975208282470703

Token 445: ' puissance' (ID: 63494)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0004929834394715726
    2. 'multip' → logprob: -8.500493049621582
    3. 'fonction' → logprob: -9.250493049621582
    4. 'calcul' → logprob: -9.375493049621582
    5. ' num' → logprob: -9.875493049621582
    6. 'mod' → logprob: -10.625493049621582
    7. 'function' → logprob: -11.875493049621582
    8. 'return' → logprob: -12.375493049621582
    9. 'pow' → logprob: -12.875493049621582
    10. 'pu' → logprob: -13.250493049621582

Token 446: ' mod' (ID: 1812)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20067360997200012
    2. '   ' → logprob: -2.4506735801696777
    3. ' num' → logprob: -2.8256735801696777
    4. '(num' → logprob: -4.325673580169678
    5. 'mod' → logprob: -4.700673580169678
    6. 'return' → logprob: -4.825673580169678
    7. ' return' → logprob: -6.200673580169678
    8. ' ' → logprob: -6.575673580169678
    9. '    
' → logprob: -7.325673580169678
    10. ' modulo' → logprob: -7.575673580169678

Token 447: 'ulaire' (ID: 48584)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.027509374544024467
    2. '(num' → logprob: -5.0275092124938965
    3. 'return' → logprob: -5.1525092124938965
    4. 'ulo' → logprob: -5.5275092124938965
    5. 'ulaire' → logprob: -5.6525092124938965
    6. '
' → logprob: -6.4025092124938965
    7. '```' → logprob: -6.5275092124938965
    8. '   ' → logprob: -6.9025092124938965
    9. 'def' → logprob: -7.4025092124938965
    10. '       ' → logprob: -7.5275092124938965

Token 448: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00963803380727768
    2. ' return' → logprob: -5.134637832641602
    3. 'return' → logprob: -6.259637832641602
    4. ':return' → logprob: -6.884637832641602
    5. '	return' → logprob: -8.509637832641602
    6. '
' → logprob: -8.759637832641602
    7. '    
' → logprob: -9.384637832641602
    8. '(return' → logprob: -9.634637832641602
    9. ':' → logprob: -10.134637832641602
    10. ' ' → logprob: -10.134637832641602

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011892797192558646
    2. 'return' → logprob: -7.001189231872559
    3. ' return' → logprob: -8.251189231872559
    4. '	return' → logprob: -11.251189231872559
    5. ':return' → logprob: -13.001189231872559
    6. '{return' → logprob: -14.876189231872559
    7. '    
' → logprob: -15.001189231872559
    8. '```' → logprob: -15.001189231872559
    9. '   ' → logprob: -15.751189231872559
    10. '
' → logprob: -16.501190185546875

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0036118284333497286
    2. '   ' → logprob: -5.753612041473389
    3. ' return' → logprob: -7.753612041473389
    4. '	return' → logprob: -12.25361156463623
    5. ':return' → logprob: -17.003612518310547
    6. '{return' → logprob: -17.378612518310547
    7. ' ' → logprob: -18.878612518310547
    8. '  ' → logprob: -19.128612518310547
    9. 'eturn' → logprob: -19.128612518310547
    10. 'Return' → logprob: -19.503612518310547

Token 451: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.15310683415737e-05
    2. ' num' → logprob: -10.750021934509277
    3. '(num' → logprob: -20.62502098083496
    4. '	num' → logprob: -21.50002098083496
    5. '[num' → logprob: -23.25002098083496
    6. 'nums' → logprob: -24.12502098083496
    7. '   ' → logprob: -24.50002098083496
    8. 'nu' → logprob: -24.87502098083496
    9. '$num' → logprob: -24.87502098083496
    10. '<num' → logprob: -25.00002098083496

Token 452: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6925482153892517
    2. '#' → logprob: -1.3175482749938965
    3. 'sum' → logprob: -2.8175482749938965
    4. 'total' → logprob: -3.1925482749938965
    5. 'res' → logprob: -3.4425482749938965
    6. 'answer' → logprob: -3.6925482749938965
    7. 'def' → logprob: -4.0675482749938965
    8. 'max' → logprob: -4.1925482749938965
    9. 'K' → logprob: -4.6925482749938965
    10. 'S' → logprob: -5.0675482749938965

Token 454: ' Initialise' (ID: 179601)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37687695026397705
    2. 'answer' → logprob: -2.0018768310546875
    3. 'res' → logprob: -2.7518768310546875
    4. 'ans' → logprob: -2.8768768310546875
    5. 'total' → logprob: -3.7518768310546875
    6. 'dp' → logprob: -4.0018768310546875
    7. 'count' → logprob: -4.8768768310546875
    8. 'sum' → logprob: -5.3768768310546875
    9. '#' → logprob: -6.8768768310546875
    10. 's' → logprob: -7.3768768310546875

Token 455: ' une' (ID: 2463)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0731477737426758
    2. 'ans' → logprob: -1.1981477737426758
    3. 'answer' → logprob: -1.5731477737426758
    4. 'res' → logprob: -2.198147773742676
    5. 'dp' → logprob: -4.198147773742676
    6. 'total' → logprob: -4.698147773742676
    7. 'count' → logprob: -4.948147773742676
    8. 'sum' → logprob: -6.198147773742676
    9. 'max' → logprob: -6.448147773742676
    10. 's' → logprob: -7.573147773742676

Token 456: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1671415567398071
    2. 'dp' → logprob: -1.1671415567398071
    3. 'res' → logprob: -1.9171415567398071
    4. 'answer' → logprob: -2.4171414375305176
    5. 'ans' → logprob: -2.5421414375305176
    6. 'count' → logprob: -3.6671414375305176
    7. 'total' → logprob: -4.667141437530518
    8. 'sum' → logprob: -5.542141437530518
    9. 'max' → logprob: -5.667141437530518
    10. 'cnt' → logprob: -5.792141437530518

Token 457: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9449467062950134
    2. 'answer' → logprob: -1.6949467658996582
    3. 'res' → logprob: -1.8199467658996582
    4. 'ans' → logprob: -2.069946765899658
    5. ' result' → logprob: -3.194946765899658
    6. ' ans' → logprob: -3.819946765899658
    7. ' answer' → logprob: -4.069946765899658
    8. 'total' → logprob: -4.069946765899658
    9. 'dp' → logprob: -4.069946765899658
    10. 'sum' → logprob: -4.819946765899658

Token 458: 'count' (ID: 5420)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5916423797607422
    2. 'res' → logprob: -1.8416423797607422
    3. 'ans' → logprob: -2.091642379760742
    4. 'answer' → logprob: -2.091642379760742
    5. 'dp' → logprob: -4.591642379760742
    6. 'total' → logprob: -4.716642379760742
    7. 'count' → logprob: -4.966642379760742
    8. 'fact' → logprob: -5.716642379760742
    9. 'sum' → logprob: -5.966642379760742
    10. 'max' → logprob: -6.091642379760742

Token 459: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3705514073371887
    2. ' =' → logprob: -1.245551347732544
    3. '_' → logprob: -4.370551586151123
    4. '=' → logprob: -5.495551586151123
    5. '_values' → logprob: -7.120551586151123
    6. ')' → logprob: -8.120551109313965
    7. '_val' → logprob: -8.120551109313965
    8. '_dict' → logprob: -8.120551109313965
    9. '_list' → logprob: -8.245551109313965
    10. '_s' → logprob: -8.245551109313965

Token 460: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327653527259827
    2. '=' → logprob: -0.7577653527259827
    3. 'count' → logprob: -10.007765769958496
    4. '_count' → logprob: -10.007765769958496
    5. 's' → logprob: -10.757765769958496
    6. ',' → logprob: -10.882765769958496
    7. '_' → logprob: -11.007765769958496
    8. ' ' → logprob: -12.132765769958496
    9. '[' → logprob: -12.257765769958496
    10. '_counts' → logprob: -13.007765769958496

Token 461: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007743862923234701
    2. '1' → logprob: -5.132743835449219
    3. 'N' → logprob: -6.507743835449219
    4. ' ' → logprob: -8.632743835449219
    5. 'C' → logprob: -9.882743835449219
    6. '[' → logprob: -10.507743835449219
    7. 'len' → logprob: -10.757743835449219
    8. '{}' → logprob: -11.257743835449219
    9. '[N' → logprob: -11.757743835449219
    10. '[]' → logprob: -11.882743835449219

Token 462: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03250451385974884
    2. '1' → logprob: -3.6575045585632324
    3. '[' → logprob: -5.907504558563232
    4. '{}' → logprob: -6.282504558563232
    5. 'N' → logprob: -6.907504558563232
    6. '[N' → logprob: -8.407504081726074
    7. '{' → logprob: -8.782504081726074
    8. '[]' → logprob: -9.532504081726074
    9. 'C' → logprob: -9.782504081726074
    10. 'len' → logprob: -10.407504081726074

Token 463: '.' (ID: 13)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.024604277219623e-05
    2. '
' → logprob: -10.250040054321289
    3. ' count' → logprob: -12.375040054321289
    4. '_count' → logprob: -15.625040054321289
    5. 'c' → logprob: -16.75004005432129
    6. '(count' → logprob: -16.87504005432129
    7. ',' → logprob: -17.00004005432129
    8. '	count' → logprob: -17.00004005432129
    9. '=' → logprob: -17.12504005432129
    10. '0' → logprob: -17.37504005432129

Token 464: ' Cette' (ID: 27383)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.981667537620524e-06
    2. ' count' → logprob: -13.625001907348633
    3. '
' → logprob: -14.500001907348633
    4. 'c' → logprob: -15.875001907348633
    5. '0' → logprob: -16.500001907348633
    6. '	count' → logprob: -18.375001907348633
    7. 'counter' → logprob: -18.875001907348633
    8. 'co' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '```' → logprob: -19.250001907348633

Token 465: ' variable' (ID: 11076)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6830827593803406
    2. 'count' → logprob: -1.0580828189849854
    3. '=' → logprob: -2.1830828189849854
    4. ' count' → logprob: -3.5580828189849854
    5. 'for' → logprob: -6.058082580566406
    6. ' for' → logprob: -6.933082580566406
    7. ' +=' → logprob: -7.808082580566406
    8. ' ' → logprob: -7.933082580566406
    9. '=count' → logprob: -8.183082580566406
    10. ' ' → logprob: -8.433082580566406

Token 466: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44924211502075195
    2. '<|end|>' → logprob: -1.574242115020752
    3. '=' → logprob: -1.949242115020752
    4. 'count' → logprob: -4.824242115020752
    5. ',' → logprob: -6.324242115020752
    6. ' ' → logprob: -6.949242115020752
    7. '<|end|>' → logprob: -7.574242115020752
    8. '=count' → logprob: -8.324241638183594
    9. ' count' → logprob: -8.949241638183594
    10. '#' → logprob: -9.074241638183594

Token 467: ' servir' (ID: 42557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.061776403337717056
    2. ' count' → logprob: -2.9367763996124268
    3. '0' → logprob: -6.186776638031006
    4. '=' → logprob: -6.186776638031006
    5. ' compter' → logprob: -6.436776638031006
    6. ' ' → logprob: -7.561776638031006
    7. ' =' → logprob: -8.061776161193848
    8. '=count' → logprob: -9.436776161193848
    9. 'comp' → logprob: -9.561776161193848
    10. 'for' → logprob: -10.686776161193848

Token 468: ' à' (ID: 1221)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3232176601886749
    2. ' to' → logprob: -2.6982176303863525
    3. ' count' → logprob: -3.1982176303863525
    4. '=' → logprob: -3.4482176303863525
    5. ' ' → logprob: -3.4482176303863525
    6. ' =' → logprob: -3.5732176303863525
    7. ' à' → logprob: -3.6982176303863525
    8. '<|end|>' → logprob: -3.9482176303863525
    9. ')' → logprob: -4.948217868804932
    10. 'to' → logprob: -5.073217868804932

Token 469: ' accum' (ID: 23148)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03398464247584343
    2. ' ' → logprob: -3.908984661102295
    3. 'count' → logprob: -4.533984661102295
    4. '1' → logprob: -6.033984661102295
    5. ' count' → logprob: -9.533984184265137
    6. ' compter' → logprob: -9.533984184265137
    7. 'len' → logprob: -11.283984184265137
    8. 'sum' → logprob: -11.283984184265137
    9. 'N' → logprob: -11.533984184265137
    10. 'comp' → logprob: -11.533984184265137

Token 470: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.010990871116518974
    2. 'er' → logprob: -4.635991096496582
    3. 'uer' → logprob: -6.885991096496582
    4. 'u' → logprob: -8.635991096496582
    5. 'e' → logprob: -11.760991096496582
    6. 'ul' → logprob: -12.010991096496582
    7. '=' → logprob: -12.385991096496582
    8. 'urer' → logprob: -12.760991096496582
    9. 'ule' → logprob: -12.885991096496582
    10. 'érer' → logprob: -12.885991096496582

Token 471: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5357373356819153
    2. 'count' → logprob: -1.1607372760772705
    3. '1' → logprob: -3.0357372760772705
    4. 'result' → logprob: -4.41073751449585
    5. 'answer' → logprob: -4.78573751449585
    6. 'max' → logprob: -5.16073751449585
    7. 'the' → logprob: -5.66073751449585
    8. 'la' → logprob: -5.66073751449585
    9. ' ' → logprob: -5.78573751449585
    10. 'C' → logprob: -6.03573751449585

Token 472: ' certain' (ID: 4454)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.149936318397522
    2. 'comp' → logprob: -1.524936318397522
    3. 'result' → logprob: -1.774936318397522
    4. 's' → logprob: -2.8999361991882324
    5. 'nombre' → logprob: -2.8999361991882324
    6. 'rés' → logprob: -3.1499361991882324
    7. 'total' → logprob: -3.5249361991882324
    8. ' résultat' → logprob: -3.6499361991882324
    9. ' compteur' → logprob: -4.399936199188232
    10. 'score' → logprob: -4.899936199188232

Token 473: ' calcul' (ID: 7559)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7726014852523804
    2. 'total' → logprob: -1.1476014852523804
    3. 'count' → logprob: -2.02260160446167
    4. 's' → logprob: -3.52260160446167
    5. ' total' → logprob: -4.27260160446167
    6. 'nombre' → logprob: -4.39760160446167
    7. ' résultat' → logprob: -5.14760160446167
    8. 'rés' → logprob: -5.52260160446167
    9. 'res' → logprob: -5.64760160446167
    10. 'value' → logprob: -5.89760160446167

Token 474: ' lors' (ID: 15456)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.043110981583595276
    2. '<|end|>' → logprob: -4.1681108474731445
    3. ' =' → logprob: -4.5431108474731445
    4. '=' → logprob: -4.7931108474731445
    5. ',' → logprob: -6.6681108474731445
    6. '.' → logprob: -6.6681108474731445
    7. '
' → logprob: -6.6681108474731445
    8. ' count' → logprob: -6.6681108474731445
    9. ')' → logprob: -7.7931108474731445
    10. 's' → logprob: -7.9181108474731445

Token 475: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4276760816574097
    2. '#' → logprob: -2.052676200866699
    3. 'for' → logprob: -2.302676200866699
    4. 'count' → logprob: -2.677676200866699
    5. ' de' → logprob: -2.802676200866699
    6. 'C' → logprob: -3.177676200866699
    7. 'range' → logprob: -3.302676200866699
    8. ' d' → logprob: -3.302676200866699
    9. ' for' → logprob: -3.552676200866699
    10. '=' → logprob: -3.927676200866699

Token 476: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.642104983329773
    2. ' range' → logprob: -1.392104983329773
    3. 'N' → logprob: -2.1421051025390625
    4. ' N' → logprob: -3.5171051025390625
    5. '0' → logprob: -3.7671051025390625
    6. 'i' → logprob: -3.8921051025390625
    7. ' i' → logprob: -4.8921051025390625
    8. '1' → logprob: -4.8921051025390625
    9. 'count' → logprob: -5.1421051025390625
    10. '_' → logprob: -5.7671051025390625

Token 477: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011399771319702268
    2. 'range' → logprob: -6.876140117645264
    3. ' for' → logprob: -9.626139640808105
    4. 'N' → logprob: -11.001139640808105
    5. 'sum' → logprob: -12.251139640808105
    6. '1' → logprob: -12.251139640808105
    7. 'count' → logprob: -12.501139640808105
    8. 'while' → logprob: -13.501139640808105
    9. '=' → logprob: -13.501139640808105
    10. 's' → logprob: -13.501139640808105

Token 478: ' suivante' (ID: 107439)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20101512968540192
    2. '
' → logprob: -2.0760152339935303
    3. ' 
' → logprob: -4.451014995574951
    4. ' =' → logprob: -4.701014995574951
    5. '.' → logprob: -5.076014995574951
    6. 's' → logprob: -5.451014995574951
    7. '=' → logprob: -5.576014995574951
    8. '  
' → logprob: -5.701014995574951
    9. ' count' → logprob: -5.826014995574951
    10. '0' → logprob: -6.326014995574951

Token 479: '.
' (ID: 558)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024865958839654922
    2. '
' → logprob: -6.002486705780029
    3. ' count' → logprob: -11.627486228942871
    4. '_count' → logprob: -14.502486228942871
    5. '(count' → logprob: -15.252486228942871
    6. '```' → logprob: -15.502486228942871
    7. '
' → logprob: -15.627486228942871
    8. '.count' → logprob: -15.627486228942871
    9. '.' → logprob: -16.252487182617188
    10. '<count' → logprob: -16.252487182617188

Token 480: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.9361264946837764e-07
    2. ' count' → logprob: -16.875
    3. 'total' → logprob: -17.125
    4. 'sum' → logprob: -17.25
    5. '
' → logprob: -17.625
    6. '```' → logprob: -17.75
    7. '#' → logprob: -18.375
    8. 'c' → logprob: -18.75
    9. 'result' → logprob: -18.75
    10. 'for' → logprob: -18.875

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868723213672638
    2. '=' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.636872291564941
    4. ' +=' → logprob: -14.886872291564941
    5. ' ' → logprob: -16.011873245239258
    6. ',' → logprob: -16.136873245239258
    7. '_' → logprob: -16.136873245239258
    8. 's' → logprob: -17.011873245239258
    9. ')' → logprob: -17.386873245239258
    10. '+=' → logprob: -17.636873245239258

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011117222311440855
    2. ' ' → logprob: -9.12511157989502
    3. 'N' → logprob: -13.62511157989502
    4. '1' → logprob: -14.37511157989502
    5. '(' → logprob: -16.625110626220703
    6. 'C' → logprob: -17.062610626220703
    7. ' N' → logprob: -17.500110626220703
    8. 'sum' → logprob: -17.500110626220703
    9. 'len' → logprob: -18.000110626220703
    10. '10' → logprob: -18.187610626220703

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. 'N' → logprob: -12.375007629394531
    3. '1' → logprob: -13.000007629394531
    4. ' ' → logprob: -14.750007629394531
    5. 'len' → logprob: -16.50000762939453
    6. '100' → logprob: -16.81250762939453
    7. '10' → logprob: -16.93750762939453
    8. 'sum' → logprob: -17.06250762939453
    9. '2' → logprob: -17.12500762939453
    10. '(' → logprob: -17.31250762939453

Token 484: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001334763248451054
    2. 'i' → logprob: -7.3763346672058105
    3. ' for' → logprob: -7.3763346672058105
    4. '#' → logprob: -10.626335144042969
    5. '
' → logprob: -11.001335144042969
    6. 'count' → logprob: -11.501335144042969
    7. 'prev' → logprob: -12.126335144042969
    8. 'max' → logprob: -12.376335144042969
    9. '<|end|>' → logprob: -12.626335144042969
    10. '```' → logprob: -12.751335144042969

Token 485: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026205103495158255
    2. 'i' → logprob: -8.500262260437012
    3. ' for' → logprob: -9.875262260437012
    4. '#' → logprob: -12.750262260437012
    5. ')' → logprob: -14.000262260437012
    6. 'n' → logprob: -14.500262260437012
    7. '```' → logprob: -14.625262260437012
    8. '
' → logprob: -14.875262260437012
    9. 'count' → logprob: -15.000262260437012
    10. 'max' → logprob: -15.375262260437012

Token 486: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.639096970204264e-05
    2. 'i' → logprob: -9.750096321105957
    3. 'current' → logprob: -11.250096321105957
    4. 'prev' → logprob: -12.250096321105957
    5. 'total' → logprob: -12.500096321105957
    6. 'result' → logprob: -13.000096321105957
    7. ' for' → logprob: -13.125096321105957
    8. 'from' → logprob: -13.375096321105957
    9. 'count' → logprob: -13.875096321105957
    10. 'max' → logprob: -14.000096321105957

Token 487: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.04257693514227867
    2. 'c' → logprob: -3.292577028274536
    3. 'r' → logprob: -5.792576789855957
    4. 'for' → logprob: -6.667576789855957
    5. 'cl' → logprob: -9.667576789855957
    6. '#' → logprob: -9.667576789855957
    7. 'cles' → logprob: -10.792576789855957
    8. 'e' → logprob: -11.292576789855957
    9. 'i' → logprob: -12.042576789855957
    10. 'le' → logprob: -12.167576789855957

Token 488: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1632263958454132
    2. 'for' → logprob: -1.9132263660430908
    3. ' i' → logprob: -6.16322660446167
    4. 'i' → logprob: -7.78822660446167
    5. '_' → logprob: -8.538226127624512
    6. ' _' → logprob: -9.038226127624512
    7. ' ' → logprob: -9.163226127624512
    8. ' over' → logprob: -10.538226127624512
    9. ' in' → logprob: -11.538226127624512
    10. ' ' → logprob: -12.163226127624512

Token 489: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.780612587928772
    2. 'C' → logprob: -1.155612587928772
    3. ' range' → logprob: -2.1556124687194824
    4. 'i' → logprob: -2.2806124687194824
    5. ' i' → logprob: -5.530612468719482
    6. ' C' → logprob: -5.905612468719482
    7. 'N' → logprob: -6.655612468719482
    8. 'c' → logprob: -8.53061294555664
    9. 'a' → logprob: -8.90561294555664
    10. '_' → logprob: -9.03061294555664

Token 490: ' éléments' (ID: 57375)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5115190744400024
    2. 'C' → logprob: -1.0115190744400024
    3. 'i' → logprob: -3.511518955230713
    4. ' range' → logprob: -5.011518955230713
    5. ' C' → logprob: -9.636519432067871
    6. 'r' → logprob: -9.761519432067871
    7. ' i' → logprob: -10.261519432067871
    8. 'c' → logprob: -10.636519432067871
    9. 'rang' → logprob: -11.761519432067871
    10. '(range' → logprob: -12.011519432067871

Token 491: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3715115785598755
    2. 'in' → logprob: -1.9965115785598755
    3. ' range' → logprob: -2.746511459350586
    4. 'range' → logprob: -2.746511459350586
    5. '(range' → logprob: -3.871511459350586
    6. 'for' → logprob: -4.496511459350586
    7. 'C' → logprob: -4.996511459350586
    8. ' for' → logprob: -5.996511459350586
    9. 'i' → logprob: -6.746511459350586
    10. ' i' → logprob: -6.996511459350586

Token 492: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5817603468894958
    2. 'range' → logprob: -0.8317603468894958
    3. ' range' → logprob: -5.206760406494141
    4. ' C' → logprob: -8.33176040649414
    5. '(range' → logprob: -10.45676040649414
    6. 'enumer' → logprob: -10.58176040649414
    7. 'sorted' → logprob: -11.95676040649414
    8. 'Range' → logprob: -13.14426040649414
    9. '[C' → logprob: -13.26926040649414
    10. '(C' → logprob: -13.39426040649414

Token 493: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02688315324485302
    2. 'range' → logprob: -3.651883125305176
    3. ' range' → logprob: -7.526883125305176
    4. ' C' → logprob: -10.651883125305176
    5. 'enumer' → logprob: -11.776883125305176
    6. '(range' → logprob: -12.026883125305176
    7. 'for' → logprob: -13.276883125305176
    8. 'list' → logprob: -14.151883125305176
    9. 'sorted' → logprob: -14.401883125305176
    10. '[C' → logprob: -14.526883125305176

Token 494: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.25189441442489624
    2. 'range' → logprob: -2.251894474029541
    3. ' range' → logprob: -2.626894474029541
    4. 'for' → logprob: -4.001894474029541
    5. ' C' → logprob: -4.126894474029541
    6. ' for' → logprob: -5.376894474029541
    7. '(range' → logprob: -5.501894474029541
    8. '(C' → logprob: -6.376894474029541
    9. 'enumer' → logprob: -8.626893997192383
    10. ' in' → logprob: -10.376893997192383

Token 495: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47532445192337036
    2. 'for' → logprob: -0.9753244519233704
    3. ':
' → logprob: -6.975324630737305
    4. ' for' → logprob: -8.475324630737305
    5. 'in' → logprob: -9.600324630737305
    6. ' :' → logprob: -11.850324630737305
    7. ',' → logprob: -11.850324630737305
    8. 'i' → logprob: -12.725324630737305
    9. '[i' → logprob: -12.850324630737305
    10. '[' → logprob: -13.100324630737305

Token 496: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7561021447181702
    2. 'i' → logprob: -1.0061020851135254
    3. ' i' → logprob: -2.6311020851135254
    4. ' for' → logprob: -2.8811020851135254
    5. '_' → logprob: -4.006102085113525
    6. 'range' → logprob: -5.256102085113525
    7. ':' → logprob: -5.631102085113525
    8. ' _' → logprob: -5.631102085113525
    9. ' range' → logprob: -5.756102085113525
    10. ' :' → logprob: -6.381102085113525

Token 497: ' utilisant' (ID: 92474)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00044401636114344
    2. ' range' → logprob: -7.750443935394287
    3. 'enumer' → logprob: -11.625444412231445
    4. '(range' → logprob: -13.125444412231445
    5. 'C' → logprob: -13.500444412231445
    6. 'for' → logprob: -14.750444412231445
    7. 'rang' → logprob: -16.000444412231445
    8. '```' → logprob: -16.250444412231445
    9. 'i' → logprob: -16.375444412231445
    10. '	range' → logprob: -16.375444412231445

Token 498: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006439907010644674
    2. ' range' → logprob: -5.131439685821533
    3. 'enumer' → logprob: -7.756439685821533
    4. 'i' → logprob: -9.881440162658691
    5. 'for' → logprob: -11.256440162658691
    6. '(range' → logprob: -12.256440162658691
    7. '_' → logprob: -12.381440162658691
    8. '```' → logprob: -12.756440162658691
    9. 'C' → logprob: -13.006440162658691
    10. ' enumerate' → logprob: -14.131440162658691

Token 499: ' pour' (ID: 1930)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.009827394969761372
    2. '(en' → logprob: -4.759827613830566
    3. ',' → logprob: -7.634827613830566
    4. '(' → logprob: -8.009827613830566
    5. ':' → logprob: -9.009827613830566
    6. 'for' → logprob: -9.384827613830566
    7. 'enumer' → logprob: -10.009827613830566
    8. 'C' → logprob: -10.634827613830566
    9. ' for' → logprob: -10.759827613830566
    10. ' pour' → logprob: -11.009827613830566

Token 500: ' obtenir' (ID: 54423)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.22800184786319733
    2. ' index' → logprob: -1.8530018329620361
    3. 'i' → logprob: -3.603001832962036
    4. 'indice' → logprob: -4.353002071380615
    5. ' i' → logprob: -5.103002071380615
    6. 'idx' → logprob: -7.478002071380615
    7. 'ind' → logprob: -9.228001594543457
    8. ' idx' → logprob: -9.478001594543457
    9. ' indice' → logprob: -9.853001594543457
    10. ' ind' → logprob: -10.478001594543457

Token 501: ' à' (ID: 1221)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4422743022441864
    2. 'i' → logprob: -1.8172743320465088
    3. ' index' → logprob: -2.442274332046509
    4. ' i' → logprob: -3.067274332046509
    5. 'indice' → logprob: -3.692274332046509
    6. '(index' → logprob: -4.69227409362793
    7. '(' → logprob: -5.06727409362793
    8. 'idx' → logprob: -5.56727409362793
    9. '(i' → logprob: -5.69227409362793
    10. '(_,' → logprob: -5.69227409362793

Token 502: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2885008454322815
    2. 'la' → logprob: -2.2885007858276367
    3. ' la' → logprob: -2.6635007858276367
    4. ' i' → logprob: -3.2885007858276367
    5. 'index' → logprob: -3.5385007858276367
    6. 'l' → logprob: -5.538500785827637
    7. ' index' → logprob: -6.038500785827637
    8. 'indice' → logprob: -6.163500785827637
    9. 'range' → logprob: -6.663500785827637
    10. 'part' → logprob: -7.538500785827637

Token 503: ' fois' (ID: 14697)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0949619933962822
    2. 'i' → logprob: -2.8449618816375732
    3. 'la' → logprob: -3.5949618816375732
    4. '0' → logprob: -6.719962120056152
    5. '1' → logprob: -7.219962120056152
    6. 'indice' → logprob: -7.469962120056152
    7. 'range' → logprob: -7.594962120056152
    8. 'for' → logprob: -7.719962120056152
    9. 'index' → logprob: -7.969962120056152
    10. '```' → logprob: -8.469962120056152

Token 504: ' l' (ID: 305)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.03836872801184654
    2. 'indice' → logprob: -4.4133687019348145
    3. ' index' → logprob: -4.5383687019348145
    4. 'i' → logprob: -5.0383687019348145
    5. ',' → logprob: -5.9133687019348145
    6. '(index' → logprob: -6.2883687019348145
    7. 'enumer' → logprob: -7.1633687019348145
    8. '
' → logprob: -7.5383687019348145
    9. 'la' → logprob: -7.7883687019348145
    10. ' i' → logprob: -7.9133687019348145

Token 505: ''' (ID: 6)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.318865180015564
    2. ' range' → logprob: -1.693865180015564
    3. ',' → logprob: -2.5688652992248535
    4. 'range' → logprob: -2.9438652992248535
    5. 'i' → logprob: -3.0688652992248535
    6. 'x' → logprob: -3.1938652992248535
    7. 'indice' → logprob: -3.1938652992248535
    8. ' index' → logprob: -3.3188652992248535
    9. 'ndice' → logprob: -3.6938652992248535
    10. 'e' → logprob: -3.8188652992248535

Token 506: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06770244985818863
    2. 'index' → logprob: -3.317702531814575
    3. ' i' → logprob: -3.817702531814575
    4. ' index' → logprob: -6.067702293395996
    5. 'range' → logprob: -6.192702293395996
    6. 'indice' → logprob: -6.817702293395996
    7. 'x' → logprob: -6.942702293395996
    8. ',' → logprob: -8.817702293395996
    9. '```' → logprob: -9.067702293395996
    10. ' range' → logprob: -9.442702293395996

Token 507: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07577575743198395
    2. '(C' → logprob: -2.7007758617401123
    3. ' and' → logprob: -6.700775623321533
    4. ' et' → logprob: -7.075775623321533
    5. ' ,' → logprob: -7.200775623321533
    6. '(i' → logprob: -7.325775623321533
    7. 's' → logprob: -7.450775623321533
    8. '(en' → logprob: -7.825775623321533
    9. 'C' → logprob: -8.700776100158691
    10. 'and' → logprob: -8.700776100158691

Token 508: 'i' (ID: 72)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07578228414058685
    2. 'i' → logprob: -3.950782299041748
    3. 'C' → logprob: -4.075782299041748
    4. ' i' → logprob: -4.325782299041748
    5. 'index' → logprob: -5.075782299041748
    6. ' ,' → logprob: -5.200782299041748
    7. '),' → logprob: -5.700782299041748
    8. ')' → logprob: -6.575782299041748
    9. ' C' → logprob: -6.950782299041748
    10. ' index' → logprob: -6.950782299041748

Token 509: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006439079996198416
    2. ')' → logprob: -5.131439208984375
    3. ',)' → logprob: -7.631439208984375
    4. '),' → logprob: -11.006439208984375
    5. ',
' → logprob: -12.756439208984375
    6. ' ,' → logprob: -12.881439208984375
    7. '```' → logprob: -13.756439208984375
    8. ',:)' → logprob: -14.881439208984375
    9. '   ' → logprob: -15.006439208984375
    10. ',),' → logprob: -15.131439208984375

Token 510: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.685467764735222e-05
    2. 'for' → logprob: -10.250086784362793
    3. 'and' → logprob: -11.375086784362793
    4. ' ,' → logprob: -11.375086784362793
    5. ',C' → logprob: -11.375086784362793
    6. ' and' → logprob: -12.125086784362793
    7. ' et' → logprob: -13.125086784362793
    8. ' for' → logprob: -13.750086784362793
    9. ',c' → logprob: -13.750086784362793
    10. ',
' → logprob: -13.750086784362793

Token 511: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7138104438781738
    2. 'la' → logprob: -0.7138104438781738
    3. 'val' → logprob: -3.963810443878174
    4. 'value' → logprob: -6.838810443878174
    5. 'l' → logprob: -8.963809967041016
    6. 'le' → logprob: -9.213809967041016
    7. ' val' → logprob: -9.838809967041016
    8. ' value' → logprob: -10.213809967041016
    9. 'v' → logprob: -11.338809967041016
    10. ' le' → logprob: -11.338809967041016

Token 512: ' valeur' (ID: 41664)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2641652226448059
    2. 'val' → logprob: -1.5141651630401611
    3. ' value' → logprob: -5.26416540145874
    4. 'c' → logprob: -5.51416540145874
    5. 'v' → logprob: -7.38916540145874
    6. ' val' → logprob: -7.51416540145874
    7. 'num' → logprob: -7.76416540145874
    8. 'x' → logprob: -8.014164924621582
    9. ' valeur' → logprob: -8.514164924621582
    10. 'element' → logprob: -8.639164924621582

Token 513: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13054126501083374
    2. 'for' → logprob: -3.0055413246154785
    3. '(C' → logprob: -3.5055413246154785
    4. 'C' → logprob: -4.1305413246154785
    5. ' for' → logprob: -5.7555413246154785
    6. '(i' → logprob: -5.7555413246154785
    7. 'pour' → logprob: -5.7555413246154785
    8. '_,' → logprob: -6.0055413246154785
    9. '(value' → logprob: -6.2555413246154785
    10. '(c' → logprob: -6.2555413246154785

Token 514: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28454023599624634
    2. 'value' → logprob: -2.4095401763916016
    3. 'v' → logprob: -2.7845401763916016
    4. 'val' → logprob: -3.1595401763916016
    5. 'x' → logprob: -3.9095401763916016
    6. 'C' → logprob: -4.534540176391602
    7. ' c' → logprob: -4.659540176391602
    8. 'num' → logprob: -5.659540176391602
    9. 'a' → logprob: -5.909540176391602
    10. ' value' → logprob: -6.159540176391602

Token 515: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5983116626739502
    2. ')' → logprob: -0.8483116626739502
    3. ',)' → logprob: -3.97331166267395
    4. '),' → logprob: -6.098311424255371
    5. 's' → logprob: -7.473311424255371
    6. ' ,' → logprob: -9.223311424255371
    7. 'e' → logprob: -9.348311424255371
    8. '):' → logprob: -10.348311424255371
    9. ',C' → logprob: -10.598311424255371
    10. 'ount' → logprob: -10.848311424255371

Token 516: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016069209203124046
    2. ' for' → logprob: -4.141069412231445
    3. ':' → logprob: -11.141069412231445
    4. 'i' → logprob: -12.016069412231445
    5. ',' → logprob: -12.641069412231445
    6. '
' → logprob: -12.891069412231445
    7. '.' → logprob: -13.891069412231445
    8. 'in' → logprob: -14.016069412231445
    9. '```' → logprob: -14.141069412231445
    10. ')' → logprob: -14.266069412231445

Token 517: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.5577775128767826e-06
    2. ' for' → logprob: -12.125005722045898
    3. '
' → logprob: -18.2500057220459
    4. '```' → logprob: -18.2500057220459
    5. 'from' → logprob: -19.8750057220459
    6. 'i' → logprob: -20.0000057220459
    7. '   ' → logprob: -21.5000057220459
    8. '	for' → logprob: -21.5000057220459
    9. ' 
' → logprob: -21.7500057220459
    10. '  
' → logprob: -22.0000057220459

Token 518: ' second' (ID: 3099)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04876313731074333
    2. ' for' → logprob: -3.0487630367279053
    3. 'i' → logprob: -8.923763275146484
    4. ' i' → logprob: -10.923763275146484
    5. ' ' → logprob: -12.298763275146484
    6. 'n' → logprob: -13.173763275146484
    7. ' code' → logprob: -13.173763275146484
    8. 'range' → logprob: -13.173763275146484
    9. '
' → logprob: -13.423763275146484
    10. 'code' → logprob: -13.423763275146484

Token 519: ' argument' (ID: 10383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14479504525661469
    2. ' for' → logprob: -2.0197949409484863
    3. '=' → logprob: -7.519794940948486
    4. ',' → logprob: -8.394795417785645
    5. ')' → logprob: -8.394795417785645
    6. ' =' → logprob: -8.769795417785645
    7. '.' → logprob: -8.769795417785645
    8. 'token' → logprob: -9.019795417785645
    9. 'or' → logprob: -10.019795417785645
    10. ' in' → logprob: -10.019795417785645

Token 520: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000961362209636718
    2. ',' → logprob: -7.1259613037109375
    3. '0' → logprob: -9.500961303710938
    4. ' =' → logprob: -10.125961303710938
    5. ')' → logprob: -11.625961303710938
    6. '1' → logprob: -11.875961303710938
    7. '=i' → logprob: -11.875961303710938
    8. '=len' → logprob: -12.375961303710938
    9. 'for' → logprob: -13.000961303710938
    10. 'range' → logprob: -13.375961303710938

Token 521: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.18663381040096283
    2. '1' → logprob: -1.811633825302124
    3. '0' → logprob: -5.936633586883545
    4. ' enumerate' → logprob: -5.936633586883545
    5. 'start' → logprob: -7.061633586883545
    6. '```' → logprob: -8.561634063720703
    7. 'en' → logprob: -8.686634063720703
    8. ')' → logprob: -9.436634063720703
    9. ' start' → logprob: -10.061634063720703
    10. 'len' → logprob: -10.061634063720703

Token 522: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33220624923706055
    2. '=' → logprob: -2.0822062492370605
    3. ',' → logprob: -2.4572062492370605
    4. '(C' → logprob: -2.9572062492370605
    5. '=C' → logprob: -5.0822062492370605
    6. ' =' → logprob: -5.7072062492370605
    7. '(len' → logprob: -5.8322062492370605
    8. '=len' → logprob: -5.9572062492370605
    9. ')' → logprob: -6.2072062492370605
    10. '(
' → logprob: -7.2072062492370605

Token 523: 'c' (ID: 66)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018742354586720467
    2. '0' → logprob: -4.268742561340332
    3. ')' → logprob: -6.893742561340332
    4. '2' → logprob: -7.143742561340332
    5. 'i' → logprob: -7.143742561340332
    6. ' ' → logprob: -7.393742561340332
    7. 'N' → logprob: -7.768742561340332
    8. 'start' → logprob: -7.893742561340332
    9. '100' → logprob: -9.893742561340332
    10. '10' → logprob: -9.893742561340332

Token 524: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016604241682216525
    2. ',' → logprob: -6.501660346984863
    3. '=C' → logprob: -9.751660346984863
    4. 'ount' → logprob: -10.876660346984863
    5. '=len' → logprob: -11.376660346984863
    6. '0' → logprob: -11.501660346984863
    7. '=i' → logprob: -11.751660346984863
    8. ' =' → logprob: -11.751660346984863
    9. '=start' → logprob: -12.001660346984863
    10. '1' → logprob: -12.251660346984863

Token 525: '-à' (ID: 56297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14055785536766052
    2. ' ' → logprob: -2.7655577659606934
    3. '0' → logprob: -3.0155577659606934
    4. ',' → logprob: -4.890557765960693
    5. ')' → logprob: -5.390557765960693
    6. '=' → logprob: -5.890557765960693
    7. 'i' → logprob: -7.015557765960693
    8. 'N' → logprob: -7.140557765960693
    9. ' N' → logprob: -7.640557765960693
    10. ' i' → logprob: -7.890557765960693

Token 526: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032153804786503315
    2. '0' → logprob: -5.878215312957764
    3. 'i' → logprob: -8.128215789794922
    4. 'N' → logprob: -10.378215789794922
    5. 'C' → logprob: -11.253215789794922
    6. ' ' → logprob: -11.378215789794922
    7. ')' → logprob: -11.378215789794922
    8. '2' → logprob: -11.503215789794922
    9. 'len' → logprob: -12.253215789794922
    10. '```' → logprob: -12.253215789794922

Token 527: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09350140392780304
    2. '0' → logprob: -2.843501329421997
    3. 'i' → logprob: -4.093501567840576
    4. ' ' → logprob: -5.343501567840576
    5. 'N' → logprob: -5.468501567840576
    6. ' i' → logprob: -6.218501567840576
    7. ')' → logprob: -6.968501567840576
    8. ' N' → logprob: -7.468501567840576
    9. 'len' → logprob: -7.718501567840576
    10. '
' → logprob: -8.093501091003418

Token 528: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014677799306809902
    2. '0' → logprob: -4.389678001403809
    3. 'N' → logprob: -7.264678001403809
    4. '2' → logprob: -7.764678001403809
    5. 'start' → logprob: -7.889678001403809
    6. ' ' → logprob: -9.264678001403809
    7. ')' → logprob: -9.264678001403809
    8. 'i' → logprob: -9.514678001403809
    9. 'count' → logprob: -9.764678001403809
    10. '100' → logprob: -9.889678001403809

Token 529: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22091437876224518
    2. '')' → logprob: -1.970914363861084
    3. ',' → logprob: -2.845914363861084
    4. '`)' → logprob: -8.470914840698242
    5. ',)' → logprob: -8.970914840698242
    6. '',' → logprob: -9.095914840698242
    7. '0' → logprob: -9.220914840698242
    8. '2' → logprob: -10.095914840698242
    9. '")' → logprob: -10.345914840698242
    10. '),' → logprob: -10.470914840698242

Token 530: ' fait' (ID: 7473)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2647188603878021
    2. ')' → logprob: -1.5147188901901245
    3. 'for' → logprob: -4.764719009399414
    4. ' for' → logprob: -6.889719009399414
    5. ' ,' → logprob: -7.889719009399414
    6. ' is' → logprob: -8.264719009399414
    7. '<|end|>' → logprob: -8.389719009399414
    8. ':' → logprob: -8.514719009399414
    9. '),' → logprob: -8.639719009399414
    10. '=' → logprob: -8.764719009399414

Token 531: ' en' (ID: 469)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6843518614768982
    2. ' start' → logprob: -1.809351921081543
    3. ' commencer' → logprob: -2.309351921081543
    4. ' ' → logprob: -2.809351921081543
    5. ')' → logprob: -2.934351921081543
    6. '2' → logprob: -3.184351921081543
    7. ' que' → logprob: -3.684351921081543
    8. 'i' → logprob: -4.559351921081543
    9. 'enumer' → logprob: -4.684351921081543
    10. 'comm' → logprob: -5.309351921081543

Token 532: ' sorte' (ID: 37800)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06364135444164276
    2. ',' → logprob: -3.188641309738159
    3. ')' → logprob: -5.438641548156738
    4. 'enumer' → logprob: -5.438641548156738
    5. 'i' → logprob: -5.688641548156738
    6. ' ' → logprob: -5.688641548156738
    7. ' i' → logprob: -6.188641548156738
    8. ' ,' → logprob: -7.438641548156738
    9. 'range' → logprob: -7.563641548156738
    10. ',i' → logprob: -7.813641548156738

Token 533: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.06833848357200623
    2. ',' → logprob: -3.818338394165039
    3. 'enumer' → logprob: -3.818338394165039
    4. ' for' → logprob: -5.443338394165039
    5. ' i' → logprob: -5.943338394165039
    6. '   ' → logprob: -5.943338394165039
    7. ')' → logprob: -6.068338394165039
    8. ' that' → logprob: -6.068338394165039
    9. 'que' → logprob: -6.318338394165039
    10. ' de' → logprob: -6.693338394165039

Token 534: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2744657099246979
    2. 'i' → logprob: -1.8994656801223755
    3. ' i' → logprob: -2.774465799331665
    4. ' ' → logprob: -3.899465799331665
    5. ' for' → logprob: -5.899465560913086
    6. 'enumer' → logprob: -6.149465560913086
    7. 'for' → logprob: -7.149465560913086
    8. ')' → logprob: -8.024465560913086
    9. '0' → logprob: -8.274465560913086
    10. ',' → logprob: -8.399465560913086

Token 535: ' compt' (ID: 39238)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11043179035186768
    2. 'for' → logprob: -3.235431671142578
    3. '2' → logprob: -3.860431671142578
    4. ' for' → logprob: -3.985431671142578
    5. 'start' → logprob: -4.610431671142578
    6. ' i' → logprob: -4.985431671142578
    7. 'enumer' → logprob: -5.735431671142578
    8. ' start' → logprob: -5.985431671142578
    9. 'count' → logprob: -7.110431671142578
    10. '1' → logprob: -7.235431671142578

Token 536: 'age' (ID: 477)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.6375391483306885
    2. 'er' → logprob: -1.1375391483306885
    3. '2' → logprob: -3.5125391483306885
    4. 'e' → logprob: -4.262538909912109
    5. 'eur' → logprob: -4.262538909912109
    6. 'erm' → logprob: -4.387538909912109
    7. 'ine' → logprob: -4.762538909912109
    8. 'start' → logprob: -5.012538909912109
    9. 'in' → logprob: -5.012538909912109
    10. 'enumer' → logprob: -5.137538909912109

Token 537: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14428314566612244
    2. ')' → logprob: -2.1442830562591553
    3. 'de' → logprob: -5.519283294677734
    4. 'from' → logprob: -5.894283294677734
    5. '=' → logprob: -6.644283294677734
    6. ' from' → logprob: -6.644283294677734
    7. ' =' → logprob: -7.144283294677734
    8. '<|end|>' → logprob: -7.269283294677734
    9. ' démar' → logprob: -7.394283294677734
    10. ' commence' → logprob: -7.519283294677734

Token 538: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29879888892173767
    2. '2' → logprob: -1.54879891872406
    3. ' i' → logprob: -3.2987987995147705
    4. ' ' → logprob: -5.29879903793335
    5. 'enumer' → logprob: -6.17379903793335
    6. ' for' → logprob: -7.79879903793335
    7. 'indices' → logprob: -8.298798561096191
    8. ')' → logprob: -8.423798561096191
    9. 'for' → logprob: -8.548798561096191
    10. ' indices' → logprob: -8.923798561096191

Token 539: ' commence' (ID: 44755)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.127208411693573
    2. ' commence' → logprob: -2.8772084712982178
    3. 'comm' → logprob: -3.8772084712982178
    4. '2' → logprob: -4.252208232879639
    5. ')' → logprob: -4.377208232879639
    6. 'for' → logprob: -5.377208232879639
    7. 'd' → logprob: -6.377208232879639
    8. 'start' → logprob: -6.627208232879639
    9. '   ' → logprob: -6.877208232879639
    10. ' démar' → logprob: -7.127208232879639

Token 540: ' à' (ID: 1221)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02745857648551464
    2. 'from' → logprob: -4.027458667755127
    3. 'à' → logprob: -5.902458667755127
    4. '(' → logprob: -6.152458667755127
    5. '=' → logprob: -7.277458667755127
    6. ' à' → logprob: -7.277458667755127
    7. ' ' → logprob: -7.402458667755127
    8. ' from' → logprob: -7.652458667755127
    9. 'at' → logprob: -7.902458667755127
    10. '<|end|>' → logprob: -7.902458667755127

Token 541: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -19.375001907348633
    4. '۲' → logprob: -19.750001907348633
    5. 'de' → logprob: -20.125001907348633
    6. '```' → logprob: -20.625001907348633
    7. '  
' → logprob: -20.875001907348633
    8. '1' → logprob: -21.000001907348633
    9. '=' → logprob: -21.000001907348633
    10. '২' → logprob: -21.000001907348633

Token 542: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '1' → logprob: -18.875
    4. '
' → logprob: -19.875
    5. 'de' → logprob: -19.875
    6. '۲' → logprob: -20.375
    7. '0' → logprob: -20.5
    8. '```' → logprob: -21.125
    9. '<|end|>' → logprob: -21.375
    10. '২' → logprob: -21.75

Token 543: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07082773745059967
    2. ' for' → logprob: -3.3208277225494385
    3. ',' → logprob: -3.6958277225494385
    4. ')' → logprob: -5.445827960968018
    5. ':' → logprob: -6.320827960968018
    6. '.' → logprob: -7.695827960968018
    7. '
' → logprob: -8.69582748413086
    8. '(i' → logprob: -8.82082748413086
    9. 'enumer' → logprob: -9.57082748413086
    10. ').' → logprob: -9.69582748413086

Token 544: ' lieu' (ID: 23979)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2783764600753784
    2. '2' → logprob: -2.028376579284668
    3. 'for' → logprob: -2.403376579284668
    4. '<|end|>' → logprob: -5.028376579284668
    5. ' for' → logprob: -5.403376579284668
    6. ' i' → logprob: -5.903376579284668
    7. ')' → logprob: -6.028376579284668
    8. ' ' → logprob: -6.903376579284668
    9. '=' → logprob: -7.653376579284668
    10. 'c' → logprob: -8.028376579284668

Token 545: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001295222609769553
    2. '=' → logprob: -9.750129699707031
    3. ',' → logprob: -10.375129699707031
    4. '0' → logprob: -11.125129699707031
    5. ' ' → logprob: -11.125129699707031
    6. '   ' → logprob: -12.250129699707031
    7. 'de' → logprob: -13.125129699707031
    8. ')' → logprob: -13.500129699707031
    9. '#' → logprob: -14.750129699707031
    10. 'i' → logprob: -14.750129699707031

Token 546: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. '0' → logprob: -12.500005722045898
    3. '
' → logprob: -14.125005722045898
    4. ' ' → logprob: -14.250005722045898
    5. '1' → logprob: -16.0000057220459
    6. '...' → logprob: -16.2500057220459
    7. '```' → logprob: -16.2500057220459
    8. 'i' → logprob: -16.3750057220459
    9. ' 
' → logprob: -17.3750057220459
    10. '   ' → logprob: -17.5000057220459

Token 547: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.625001907348633
    3. '1' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '
' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '...' → logprob: -18.125001907348633
    8. '' → logprob: -19.625001907348633
    9. '#' → logprob: -20.125001907348633
    10. '\
' → logprob: -20.375001907348633

Token 548: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00404990604147315
    2. ')' → logprob: -6.129049777984619
    3. ' for' → logprob: -6.379049777984619
    4. '.' → logprob: -10.004050254821777
    5. ').' → logprob: -10.129050254821777
    6. ')
' → logprob: -10.379050254821777
    7. ',' → logprob: -11.004050254821777
    8. '
' → logprob: -11.129050254821777
    9. ':' → logprob: -11.754050254821777
    10. '),' → logprob: -13.004050254821777

Token 549: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.88418151892256e-05
    2. ' for' → logprob: -9.750059127807617
    3. '```' → logprob: -14.875059127807617
    4. ')' → logprob: -17.500059127807617
    5. '
' → logprob: -17.625059127807617
    6. '  
' → logprob: -18.000059127807617
    7. 'or' → logprob: -18.125059127807617
    8. '	for' → logprob: -18.750059127807617
    9. '<|end|>' → logprob: -18.875059127807617
    10. ':' → logprob: -19.125059127807617

Token 550: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868805766105652
    2. ' i' → logprob: -1.13688063621521
    3. '	i' → logprob: -12.261880874633789
    4. '(i' → logprob: -13.136880874633789
    5. ' ' → logprob: -14.136880874633789
    6. ' ' → logprob: -14.261880874633789
    7. '```' → logprob: -14.761880874633789
    8. '   ' → logprob: -15.011880874633789
    9. ' (' → logprob: -15.261880874633789
    10. '  ' → logprob: -16.01188087463379

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038513822946697474
    2. 'in' → logprob: -6.628851413726807
    3. ' in' → logprob: -6.628851413726807
    4. ' ,' → logprob: -6.753851413726807
    5. ',c' → logprob: -11.753850936889648
    6. ',in' → logprob: -12.128850936889648
    7. ' ' → logprob: -12.878850936889648
    8. ',i' → logprob: -13.003850936889648
    9. '=' → logprob: -13.253850936889648
    10. ',v' → logprob: -13.253850936889648

Token 552: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019286326132714748
    2. ' c' → logprob: -6.251928806304932
    3. '	c' → logprob: -18.251928329467773
    4. 'value' → logprob: -19.126928329467773
    5. ')c' → logprob: -19.376928329467773
    6. '```' → logprob: -19.751928329467773
    7. '<|end|>' → logprob: -20.001928329467773
    8. 'C' → logprob: -20.001928329467773
    9. '_c' → logprob: -20.251928329467773
    10. 'с' → logprob: -20.876928329467773

Token 553: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20351450145244598
    2. 'in' → logprob: -1.7035144567489624
    3. ',' → logprob: -6.203514575958252
    4. ' ' → logprob: -9.703514099121094
    5. '	in' → logprob: -12.703514099121094
    6. ')' → logprob: -12.828514099121094
    7. ' ,' → logprob: -13.078514099121094
    8. '  ' → logprob: -13.828514099121094
    9. ' ' → logprob: -13.953514099121094
    10. 's' → logprob: -14.203514099121094

Token 554: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.07889000326395035
    2. ' enumerate' → logprob: -2.578890085220337
    3. 'en' → logprob: -16.203889846801758
    4. 'zip' → logprob: -17.078889846801758
    5. '```' → logprob: -18.578889846801758
    6. ' enumer' → logprob: -18.703889846801758
    7. '(en' → logprob: -18.703889846801758
    8. 'C' → logprob: -18.703889846801758
    9. ' zip' → logprob: -19.578889846801758
    10. 'enum' → logprob: -19.703889846801758

Token 555: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -2.129266067640856e-05
    2. 'C' → logprob: -11.000020980834961
    3. ' (' → logprob: -13.125020980834961
    4. '(' → logprob: -13.125020980834961
    5. ')' → logprob: -15.000020980834961
    6. '(
' → logprob: -15.625020980834961
    7. ' C' → logprob: -16.50002098083496
    8. ',' → logprob: -17.12502098083496
    9. 's' → logprob: -17.87502098083496
    10. '(c' → logprob: -18.37502098083496

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.500005722045898
    3. '2' → logprob: -13.000005722045898
    4. '),' → logprob: -18.8750057220459
    5. '```' → logprob: -19.2500057220459
    6. 's' → logprob: -19.3750057220459
    7. '，' → logprob: -19.5000057220459
    8. '1' → logprob: -19.6250057220459
    9. '   ' → logprob: -19.8750057220459
    10. ' ' → logprob: -20.2500057220459

Token 557: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005928558763116598
    2. ' ' → logprob: -5.1309285163879395
    3. ' 
' → logprob: -18.00592803955078
    4. '   ' → logprob: -18.38092803955078
    5. '  ' → logprob: -18.50592803955078
    6. ' ' → logprob: -18.63092803955078
    7. '  
' → logprob: -19.13092803955078
    8. ')' → logprob: -19.25592803955078
    9. '
' → logprob: -19.63092803955078
    10. '۲' → logprob: -20.25592803955078

Token 558: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.7500057220459
    4. '  ' → logprob: -19.3750057220459
    5. '۲' → logprob: -21.3750057220459
    6. '    ' → logprob: -21.7500057220459
    7. ')' → logprob: -22.1250057220459
    8. '  
' → logprob: -22.2500057220459
    9. '২' → logprob: -22.5000057220459
    10. '२' → logprob: -22.5000057220459

Token 559: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012833021173719317
    2. ':' → logprob: -9.375128746032715
    3. '):
' → logprob: -10.375128746032715
    4. ')' → logprob: -11.375128746032715
    5. '():' → logprob: -15.125128746032715
    6. ' ):' → logprob: -15.250128746032715
    7. '):
' → logprob: -16.3751277923584
    8. '}:' → logprob: -16.7501277923584
    9. ',' → logprob: -17.6251277923584
    10. ']:' → logprob: -17.8751277923584

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001868306309916079
    2. '	count' → logprob: -7.25186824798584
    3. 'count' → logprob: -7.62686824798584
    4. ':' → logprob: -7.62686824798584
    5. ' count' → logprob: -9.50186824798584
    6. '```' → logprob: -9.75186824798584
    7. '[count' → logprob: -10.87686824798584
    8. ':
' → logprob: -11.75186824798584
    9. '(count' → logprob: -12.12686824798584
    10. '    
' → logprob: -12.62686824798584

Token 561: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5106357336044312
    2. 'count' → logprob: -1.0106357336044312
    3. '	count' → logprob: -3.7606358528137207
    4. ' count' → logprob: -4.385635852813721
    5. '```' → logprob: -9.635635375976562
    6. '[count' → logprob: -10.010635375976562
    7. '   ' → logprob: -11.260635375976562
    8. '       ' → logprob: -11.510635375976562
    9. '(count' → logprob: -11.635635375976562
    10. ',count' → logprob: -12.385635375976562

Token 562: ' Aj' (ID: 28294)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.4656579120783135e-05
    2. '   ' → logprob: -10.125044822692871
    3. ' count' → logprob: -13.125044822692871
    4. 'if' → logprob: -13.375044822692871
    5. '```' → logprob: -15.500044822692871
    6. 'temp' → logprob: -15.625044822692871
    7. 'val' → logprob: -16.375043869018555
    8. 'power' → logprob: -16.875043869018555
    9. ' ' → logprob: -16.875043869018555
    10. 'c' → logprob: -17.125043869018555

Token 563: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.03105676732957363
    2. 'out' → logprob: -3.7810568809509277
    3. 'outez' → logprob: -5.156056880950928
    4. 'outer' → logprob: -6.281056880950928
    5. '#' → logprob: -10.28105640411377
    6. 'count' → logprob: -10.40605640411377
    7. 'outes' → logprob: -10.53105640411377
    8. '   ' → logprob: -10.78105640411377
    9. 'uste' → logprob: -11.03105640411377
    10. '```' → logprob: -13.03105640411377

Token 564: ' à' (ID: 1221)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3996788263320923
    2. ' count' → logprob: -1.8996788263320923
    3. ' c' → logprob: -2.6496787071228027
    4. ' (' → logprob: -2.8996787071228027
    5. 'c' → logprob: -3.2746787071228027
    6. '(count' → logprob: -4.524678707122803
    7. '(c' → logprob: -6.274678707122803
    8. '(' → logprob: -6.649678707122803
    9. ' mp' → logprob: -7.524678707122803
    10. 'mp' → logprob: -7.899678707122803

Token 565: ' '' (ID: 461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0012965429341420531
    2. '(count' → logprob: -7.001296520233154
    3. ' count' → logprob: -8.251296997070312
    4. 'c' → logprob: -9.251296997070312
    5. '(c' → logprob: -10.751296997070312
    6. '(i' → logprob: -12.501296997070312
    7. 'i' → logprob: -13.376296997070312
    8. ' (' → logprob: -14.376296997070312
    9. ' c' → logprob: -15.626296997070312
    10. ' i' → logprob: -16.876296997070312

Token 566: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00010092071170220152
    2. '(count' → logprob: -9.375101089477539
    3. ' count' → logprob: -11.250101089477539
    4. 'c' → logprob: -13.000101089477539
    5. '(c' → logprob: -14.375101089477539
    6. '(' → logprob: -17.50010108947754
    7. ' (' → logprob: -17.75010108947754
    8. '(i' → logprob: -17.87510108947754
    9. 'pow' → logprob: -18.00010108947754
    10. 'i' → logprob: -18.50010108947754

Token 567: ''' (ID: 6)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.012935996055603
    2. ' +=' → logprob: -1.762935996055603
    3. ' count' → logprob: -2.0129361152648926
    4. 'count' → logprob: -2.0129361152648926
    5. ' (' → logprob: -2.2629361152648926
    6. '   ' → logprob: -2.8879361152648926
    7. ')' → logprob: -4.012936115264893
    8. '+=' → logprob: -5.387936115264893
    9. '(count' → logprob: -5.762936115264893
    10. 'c' → logprob: -5.887936115264893

Token 568: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.26808494329452515
    2. ' count' → logprob: -1.51808500289917
    3. '(count' → logprob: -4.76808500289917
    4. ' (' → logprob: -5.39308500289917
    5. '   ' → logprob: -6.64308500289917
    6. ' c' → logprob: -7.76808500289917
    7. ' +=' → logprob: -8.018084526062012
    8. 'c' → logprob: -8.643084526062012
    9. '(' → logprob: -8.768084526062012
    10. '
' → logprob: -8.893084526062012

Token 569: ' valeur' (ID: 41664)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08436658978462219
    2. ' c' → logprob: -3.5843665599823
    3. '(c' → logprob: -3.8343665599823
    4. 'count' → logprob: -4.084366798400879
    5. 'mp' → logprob: -4.709366798400879
    6. 'pow' → logprob: -6.334366798400879
    7. ' mp' → logprob: -6.959366798400879
    8. ' (' → logprob: -7.209366798400879
    9. '(mp' → logprob: -7.334366798400879
    10. '(count' → logprob: -7.459366798400879

Token 570: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6176260709762573
    2. ' (' → logprob: -1.8676260709762573
    3. '(c' → logprob: -2.242626190185547
    4. ' c' → logprob: -2.492626190185547
    5. 'mp' → logprob: -2.867626190185547
    6. 'count' → logprob: -4.117626190185547
    7. '(i' → logprob: -4.242626190185547
    8. ' mp' → logprob: -4.492626190185547
    9. '(mp' → logprob: -5.117626190185547
    10. 'pow' → logprob: -5.742626190185547

Token 571: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3346497416496277
    2. 'mp' → logprob: -1.4596498012542725
    3. '(c' → logprob: -3.4596498012542725
    4. '(mp' → logprob: -4.584649562835693
    5. ' mp' → logprob: -5.459649562835693
    6. ' c' → logprob: -5.834649562835693
    7. '(i' → logprob: -7.084649562835693
    8. 'count' → logprob: -7.209649562835693
    9. '(m' → logprob: -7.209649562835693
    10. ' (' → logprob: -8.459650039672852

Token 572: ''' (ID: 6)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.24189169704914093
    2. 'mp' → logprob: -1.6168917417526245
    3. '(c' → logprob: -5.241891860961914
    4. 'pow' → logprob: -5.616891860961914
    5. ' c' → logprob: -5.991891860961914
    6. '(mp' → logprob: -6.366891860961914
    7. ' mp' → logprob: -6.991891860961914
    8. 'count' → logprob: -7.116891860961914
    9. 'cp' → logprob: -7.241891860961914
    10. '(m' → logprob: -8.116891860961914

Token 573: 'élé' (ID: 15228)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25345712900161743
    2. '(c' → logprob: -2.0034570693969727
    3. 'mp' → logprob: -2.6284570693969727
    4. '(m' → logprob: -5.128457069396973
    5. '(mp' → logprob: -5.128457069396973
    6. 'count' → logprob: -5.878457069396973
    7. '(i' → logprob: -7.253457069396973
    8. 'pow' → logprob: -7.878457069396973
    9. 'm' → logprob: -8.253457069396973
    10. '(count' → logprob: -8.628457069396973

Token 574: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0011497443774715066
    2. 'count' → logprob: -7.626149654388428
    3. 'ement' → logprob: -8.126150131225586
    4. '(' → logprob: -9.126150131225586
    5. 'v' → logprob: -9.626150131225586
    6. '#' → logprob: -9.876150131225586
    7. 'c' → logprob: -11.001150131225586
    8. 'm' → logprob: -11.001150131225586
    9. 'ément' → logprob: -11.126150131225586
    10. '```' → logprob: -11.251150131225586

Token 575: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09875394403934479
    2. ' c' → logprob: -2.8487539291381836
    3. 'mp' → logprob: -4.098753929138184
    4. ' (' → logprob: -5.348753929138184
    5. 'pow' → logprob: -5.473753929138184
    6. ' mp' → logprob: -5.848753929138184
    7. '(c' → logprob: -6.223753929138184
    8. 'count' → logprob: -6.348753929138184
    9. '(mp' → logprob: -7.223753929138184
    10. '*' → logprob: -7.348753929138184

Token 576: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018278473988175392
    2. '*' → logprob: -4.0182785987854
    3. '   ' → logprob: -9.768278121948242
    4. '*c' → logprob: -10.768278121948242
    5. ' ' → logprob: -11.268278121948242
    6. ' multiplied' → logprob: -11.768278121948242
    7. ' ' → logprob: -12.018278121948242
    8. ',' → logprob: -12.143278121948242
    9. '*num' → logprob: -12.643278121948242
    10. '```' → logprob: -13.518278121948242

Token 577: 'li' (ID: 1307)
  Prédit: 'ipl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.6748392581939697
    2. 'lié' → logprob: -1.1748392581939697
    3. 'ip' → logprob: -2.2998392581939697
    4. 'ic' → logprob: -3.0498392581939697
    5. 'pli' → logprob: -4.924839019775391
    6. 'plied' → logprob: -5.424839019775391
    7. '*' → logprob: -5.799839019775391
    8. 'iplier' → logprob: -6.049839019775391
    9. 'ply' → logprob: -6.174839019775391
    10. 'pl' → logprob: -6.299839019775391

Token 578: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1804324984550476
    2. 'ée' → logprob: -1.8054325580596924
    3. 'c' → logprob: -8.555432319641113
    4. 'p' → logprob: -8.930432319641113
    5. 'e' → logprob: -9.430432319641113
    6. 'par' → logprob: -9.930432319641113
    7. 'ant' → logprob: -10.055432319641113
    8. 'ié' → logprob: -10.180432319641113
    9. 'ed' → logprob: -10.555432319641113
    10. 'és' → logprob: -10.680432319641113

Token 579: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: ' son' (ID: 2391)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0009250381262972951
    2. ' mp' → logprob: -7.500925064086914
    3. 'i' → logprob: -8.000925064086914
    4. '(mp' → logprob: -11.000925064086914
    5. '(i' → logprob: -11.750925064086914
    6. 'pow' → logprob: -12.625925064086914
    7. '   ' → logprob: -13.000925064086914
    8. '	mp' → logprob: -13.000925064086914
    9. 'c' → logprob: -13.375925064086914
    10. '```' → logprob: -13.875925064086914

Token 581: ' index' (ID: 3472)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0016575668705627322
    2. 'i' → logprob: -7.126657485961914
    3. ' mp' → logprob: -7.126657485961914
    4. 'pow' → logprob: -10.501657485961914
    5. ' i' → logprob: -12.001657485961914
    6. '```' → logprob: -12.376657485961914
    7. '	mp' → logprob: -13.126657485961914
    8. '(mp' → logprob: -13.251657485961914
    9. '...' → logprob: -13.876657485961914
    10. 'mod' → logprob: -13.876657485961914

Token 582: ' i' (ID: 575)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.037328340113162994
    2. '*' → logprob: -4.287328243255615
    3. '   ' → logprob: -4.287328243255615
    4. '<|end|>' → logprob: -5.787328243255615
    5. ',' → logprob: -6.037328243255615
    6. ' ' → logprob: -6.662328243255615
    7. 'count' → logprob: -7.287328243255615
    8. '  ' → logprob: -8.287328720092773
    9. '*i' → logprob: -8.412328720092773
    10. ' and' → logprob: -8.787328720092773

Token 583: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18919339776039124
    2. '   ' → logprob: -1.8141933679580688
    3. '*' → logprob: -4.689193248748779
    4. ',' → logprob: -9.689193725585938
    5. ' ' → logprob: -10.314193725585938
    6. '  ' → logprob: -10.689193725585938
    7. '*i' → logprob: -10.814193725585938
    8. 'count' → logprob: -11.189193725585938
    9. ')' → logprob: -12.189193725585938
    10. ' *
' → logprob: -12.439193725585938

Token 584: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0768940448760986
    2. 'c' → logprob: -1.2018940448760986
    3. ' c' → logprob: -1.9518940448760986
    4. 'i' → logprob: -1.9518940448760986
    5. ' )' → logprob: -3.5768940448760986
    6. ')' → logprob: -3.8268940448760986
    7. 'count' → logprob: -4.3268938064575195
    8. ' mp' → logprob: -5.4518938064575195
    9. '   ' → logprob: -6.3268938064575195
    10. 'mp' → logprob: -6.4518938064575195

Token 585: ' part' (ID: 997)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5712841749191284
    2. ' *' → logprob: -1.1962841749191284
    3. '**' → logprob: -3.071284294128418
    4. ' )' → logprob: -4.071284294128418
    5. ' **' → logprob: -4.196284294128418
    6. ' %' → logprob: -4.446284294128418
    7. '*' → logprob: -4.446284294128418
    8. ' +' → logprob: -4.821284294128418
    9. '   ' → logprob: -5.196284294128418
    10. '%' → logprob: -5.946284294128418

Token 586: 'ant' (ID: 493)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.32963377237319946
    2. ' de' → logprob: -2.8296337127685547
    3. '=' → logprob: -3.4546337127685547
    4. 'icipant' → logprob: -3.4546337127685547
    5. 'icip' → logprob: -3.4546337127685547
    6. 'i' → logprob: -3.5796337127685547
    7. 'ir' → logprob: -3.9546337127685547
    8. 'from' → logprob: -4.079633712768555
    9. ')' → logprob: -4.704633712768555
    10. '```' → logprob: -4.704633712768555

Token 587: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20567888021469116
    2. 'from' → logprob: -1.955678939819336
    3. ' de' → logprob: -3.205678939819336
    4. ' from' → logprob: -6.080678939819336
    5. '```' → logprob: -7.205678939819336
    6. '=' → logprob: -7.830678939819336
    7. '<|end|>' → logprob: -9.205678939819336
    8. ')' → logprob: -9.205678939819336
    9. 'à' → logprob: -9.580678939819336
    10. '   ' → logprob: -10.705678939819336

Token 588: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005928283790126443
    2. 'i' → logprob: -7.7505927085876465
    3. ' ' → logprob: -8.875593185424805
    4. ' i' → logprob: -10.875593185424805
    5. '```' → logprob: -13.125593185424805
    6. ')' → logprob: -14.750593185424805
    7. 'c' → logprob: -15.125593185424805
    8. '0' → logprob: -15.375593185424805
    9. '   ' → logprob: -15.375593185424805
    10. '  ' → logprob: -16.500593185424805

Token 589: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019245444855187088
    2. ' ' → logprob: -8.625192642211914
    3. 'i' → logprob: -11.375192642211914
    4. ' i' → logprob: -13.750192642211914
    5. '   ' → logprob: -16.000192642211914
    6. '0' → logprob: -16.125192642211914
    7. '```' → logprob: -16.375192642211914
    8. '  ' → logprob: -16.875192642211914
    9. '1' → logprob: -17.125192642211914
    10. 'c' → logprob: -17.500192642211914

Token 590: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10144595801830292
    2. ' *' → logprob: -2.7264459133148193
    3. ')*' → logprob: -4.226446151733398
    4. '   ' → logprob: -5.226446151733398
    5. ' )' → logprob: -5.601446151733398
    6. '*' → logprob: -5.726446151733398
    7. ',' → logprob: -5.851446151733398
    8. '*)' → logprob: -8.476446151733398
    9. ' and' → logprob: -8.726446151733398
    10. ')*(' → logprob: -8.976446151733398

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1658712774515152
    2. 'count' → logprob: -2.1658713817596436
    3. ' count' → logprob: -3.2908713817596436
    4. '	count' → logprob: -7.2908711433410645
    5. '
' → logprob: -8.540871620178223
    6. '```' → logprob: -10.665871620178223
    7. ',count' → logprob: -10.665871620178223
    8. '[count' → logprob: -10.915871620178223
    9. '(count' → logprob: -11.790871620178223
    10. '    
' → logprob: -11.915871620178223

Token 592: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.11680594086647034
    2. '   ' → logprob: -2.3668060302734375
    3. ' count' → logprob: -4.1168060302734375
    4. '	count' → logprob: -8.741806030273438
    5. '
' → logprob: -13.116806030273438
    6. '   ' → logprob: -13.616806030273438
    7. '```' → logprob: -14.366806030273438
    8. ',count' → logprob: -14.491806030273438
    9. '[count' → logprob: -14.741806030273438
    10. '  ' → logprob: -14.991806030273438

Token 593: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04860395938158035
    2. '+=' → logprob: -3.0486040115356445
    3. '=' → logprob: -11.923604011535645
    4. ' =' → logprob: -11.923604011535645
    5. '   ' → logprob: -13.298604011535645
    6. '+=(' → logprob: -13.798604011535645
    7. '+' → logprob: -15.673604011535645
    8. ']+=' → logprob: -16.173603057861328
    9. '```' → logprob: -16.298603057861328
    10. ' ' → logprob: -16.548603057861328

Token 594: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04859054833650589
    2. ' c' → logprob: -3.048590660095215
    3. '(c' → logprob: -13.423590660095215
    4. 'i' → logprob: -14.423590660095215
    5. '   ' → logprob: -14.673590660095215
    6. ' (' → logprob: -14.923590660095215
    7. '(' → logprob: -16.2985897064209
    8. ' ' → logprob: -16.2985897064209
    9. '	c' → logprob: -16.4235897064209
    10. ' i' → logprob: -16.6735897064209

Token 595: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00023131117632146925
    2. '*' → logprob: -8.375231742858887
    3. '*i' → logprob: -14.750231742858887
    4. ' ' → logprob: -15.500231742858887
    5. ' ' → logprob: -16.37523078918457
    6. '<|end|>' → logprob: -17.37523078918457
    7. ' **' → logprob: -17.62523078918457
    8. ' *
' → logprob: -18.00023078918457
    9. '*object' → logprob: -18.87523078918457
    10. '```' → logprob: -19.25023078918457

Token 596: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.165027217415627e-05
    2. ' i' → logprob: -11.000021934509277
    3. 'mp' → logprob: -12.250021934509277
    4. ' mp' → logprob: -16.75002098083496
    5. '<|end|>' → logprob: -17.87502098083496
    6. ' ' → logprob: -19.00002098083496
    7. '	i' → logprob: -19.25002098083496
    8. 'pow' → logprob: -20.12502098083496
    9. '  ' → logprob: -20.25002098083496
    10. '```' → logprob: -20.75002098083496

Token 597: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015214069280773401
    2. 'mp' → logprob: -6.501521587371826
    3. ' i' → logprob: -11.001521110534668
    4. '   ' → logprob: -13.626521110534668
    5. ' mp' → logprob: -14.001521110534668
    6. ' ' → logprob: -16.126522064208984
    7. '  ' → logprob: -16.376522064208984
    8. '```' → logprob: -16.876522064208984
    9. '2' → logprob: -17.126522064208984
    10. '    ' → logprob: -17.376522064208984

Token 598: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016618752852082253
    2. ' )' → logprob: -4.766618728637695
    3. '-' → logprob: -5.141618728637695
    4. ' -' → logprob: -6.516618728637695
    5. '%' → logprob: -7.891618728637695
    6. ' %' → logprob: -9.391618728637695
    7. '<|end|>' → logprob: -9.641618728637695
    8. ')%' → logprob: -10.016618728637695
    9. '+' → logprob: -10.766618728637695
    10. ')
' → logprob: -11.141618728637695

Token 599: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: ' Ap' (ID: 6537)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5094070477061905e-05
    2. ' count' → logprob: -11.375015258789062
    3. 'i' → logprob: -13.500015258789062
    4. '
' → logprob: -14.375015258789062
    5. '#' → logprob: -14.625015258789062
    6. 'if' → logprob: -15.125015258789062
    7. '   ' → logprob: -15.625015258789062
    8. 'print' → logprob: -15.875015258789062
    9. '```' → logprob: -16.125015258789062
    10. 'c' → logprob: -16.625015258789062

Token 602: 'plique' (ID: 71193)
  Prédit: 'ply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ply' → logprob: -0.10844239592552185
    2. 'pend' → logprob: -2.4834423065185547
    3. 'pl' → logprob: -5.483442306518555
    4. 'count' → logprob: -5.858442306518555
    5. 'p' → logprob: -5.983442306518555
    6. 'pp' → logprob: -6.108442306518555
    7. 'd' → logprob: -6.233442306518555
    8. 'r' → logprob: -6.358442306518555
    9. 'prox' → logprob: -7.108442306518555
    10. 'pr' → logprob: -7.483442306518555

Token 603: ' l' (ID: 305)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9027726650238037
    2. 'count' → logprob: -0.9027726650238037
    3. 'mod' → logprob: -1.9027726650238037
    4. ' count' → logprob: -3.7777726650238037
    5. ' %' → logprob: -4.402772903442383
    6. ' mod' → logprob: -6.402772903442383
    7. ' %=' → logprob: -6.777772903442383
    8. ' modulo' → logprob: -7.277772903442383
    9. '%=' → logprob: -8.152772903442383
    10. '   ' → logprob: -8.277772903442383

Token 604: ''op' (ID: 70747)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8262171745300293
    2. '%' → logprob: -1.0762171745300293
    3. ' ' → logprob: -2.0762171745300293
    4. ' mod' → logprob: -3.0762171745300293
    5. ' count' → logprob: -3.3262171745300293
    6. 'mod' → logprob: -4.951217174530029
    7. ' modulo' → logprob: -5.951217174530029
    8. ' space' → logprob: -6.826217174530029
    9. ' %=' → logprob: -7.076217174530029
    10. ' ' → logprob: -7.326217174530029

Token 605: 'ération' (ID: 24977)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5658455491065979
    2. '%' → logprob: -1.5658454895019531
    3. 'é' → logprob: -2.190845489501953
    4. 'er' → logprob: -3.690845489501953
    5. 'e' → logprob: -4.565845489501953
    6. 'odu' → logprob: -4.690845489501953
    7. 'ération' → logprob: -4.815845489501953
    8. 'r' → logprob: -5.315845489501953
    9. 'l' → logprob: -5.440845489501953
    10. 'lo' → logprob: -5.690845489501953

Token 606: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.166880264878273
    2. ' %' → logprob: -1.9168802499771118
    3. 'mod' → logprob: -5.541880130767822
    4. ' %=' → logprob: -6.666880130767822
    5. 'count' → logprob: -6.916880130767822
    6. ' mod' → logprob: -8.54188060760498
    7. ' count' → logprob: -8.79188060760498
    8. ' modulo' → logprob: -10.41688060760498
    9. '%=' → logprob: -10.66688060760498
    10. '%
' → logprob: -11.29188060760498

Token 607: ' '' (ID: 461)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.6837511658668518
    2. 'mod' → logprob: -0.9337511658668518
    3. ' mod' → logprob: -2.308751106262207
    4. ' (' → logprob: -6.933751106262207
    5. 'count' → logprob: -6.933751106262207
    6. '(count' → logprob: -7.933751106262207
    7. ' count' → logprob: -8.058751106262207
    8. '(' → logprob: -8.808751106262207
    9. '_mod' → logprob: -11.808751106262207
    10. '	mod' → logprob: -11.808751106262207

Token 608: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.1008713702030946e-06
    2. ' mod' → logprob: -13.250001907348633
    3. '(mod' → logprob: -15.375001907348633
    4. 'count' → logprob: -19.375001907348633
    5. '100' → logprob: -19.875001907348633
    6. '10' → logprob: -20.875001907348633
    7. '	mod' → logprob: -21.500001907348633
    8. 'moder' → logprob: -23.125001907348633
    9. '(' → logprob: -23.375001907348633
    10. '```' → logprob: -23.375001907348633

Token 609: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09805408865213394
    2. '   ' → logprob: -3.0980541706085205
    3. '<|end|>' → logprob: -3.5980541706085205
    4. '%' → logprob: -4.348053932189941
    5. 'count' → logprob: -6.473053932189941
    6. ')%' → logprob: -6.473053932189941
    7. '<|end|>' → logprob: -6.973053932189941
    8. ' %' → logprob: -6.973053932189941
    9. ' )' → logprob: -7.098053932189941
    10. '(count' → logprob: -7.473053932189941

Token 610: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059332218021154404
    2. 'count' → logprob: -3.4343321323394775
    3. ' count' → logprob: -4.559332370758057
    4. '%' → logprob: -4.684332370758057
    5. ' %' → logprob: -6.309332370758057
    6. '
' → logprob: -6.434332370758057
    7. ' %=' → logprob: -6.809332370758057
    8. '%
' → logprob: -7.684332370758057
    9. '(count' → logprob: -8.309331893920898
    10. '[count' → logprob: -8.684331893920898

Token 611: ' '' (ID: 461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004078639671206474
    2. ' count' → logprob: -5.5040788650512695
    3. '(count' → logprob: -16.504077911376953
    4. '	count' → logprob: -17.504077911376953
    5. 'c' → logprob: -18.004077911376953
    6. '   ' → logprob: -18.004077911376953
    7. ' ' → logprob: -18.254077911376953
    8. '[count' → logprob: -18.879077911376953
    9. '=count' → logprob: -19.129077911376953
    10. '$count' → logprob: -19.879077911376953

Token 612: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5048530030981055e-06
    2. ' count' → logprob: -13.500001907348633
    3. '(count' → logprob: -18.875001907348633
    4. 'c' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. 'ount' → logprob: -20.500001907348633
    7. ' ' → logprob: -21.000001907348633
    8. '=count' → logprob: -21.000001907348633
    9. '	count' → logprob: -21.250001907348633
    10. '$count' → logprob: -21.250001907348633

Token 613: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6408472657203674
    2. '%' → logprob: -1.6408472061157227
    3. '   ' → logprob: -2.1408472061157227
    4. ' %' → logprob: -2.2658472061157227
    5. '<|end|>' → logprob: -3.3908472061157227
    6. ' %=' → logprob: -4.515847206115723
    7. ')%' → logprob: -4.640847206115723
    8. ' )' → logprob: -6.390847206115723
    9. '<|end|>' → logprob: -7.515847206115723
    10. 'count' → logprob: -8.140847206115723

Token 614: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7179648876190186
    2. ' %=' → logprob: -1.3429648876190186
    3. '%' → logprob: -2.0929648876190186
    4. '%=' → logprob: -3.0929648876190186
    5. 'count' → logprob: -3.2179648876190186
    6. '
' → logprob: -3.4679648876190186
    7. ' count' → logprob: -5.842965126037598
    8. ' %' → logprob: -6.217965126037598
    9. '=' → logprob: -6.342965126037598
    10. '%
' → logprob: -6.467965126037598

Token 615: ' chaque' (ID: 21194)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.15456648170948029
    2. ' chaque' → logprob: -2.529566526412964
    3. 'each' → logprob: -2.779566526412964
    4. ' each' → logprob: -7.154566287994385
    5. ' count' → logprob: -8.029566764831543
    6. '```' → logprob: -9.779566764831543
    7. ' chacune' → logprob: -9.904566764831543
    8. '=count' → logprob: -10.654566764831543
    9. '100' → logprob: -10.779566764831543
    10. '.' → logprob: -11.154566764831543

Token 616: ' ajout' (ID: 64605)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.264132022857666
    2. '+=' → logprob: -1.389132022857666
    3. '%=' → logprob: -1.889132022857666
    4. 'count' → logprob: -2.139132022857666
    5. ' +=' → logprob: -2.764132022857666
    6. '<|end|>' → logprob: -2.764132022857666
    7. ' %=' → logprob: -3.264132022857666
    8. 'addition' → logprob: -5.264132022857666
    9. 'assignment' → logprob: -5.764132022857666
    10. ' addition' → logprob: -5.764132022857666

Token 617: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011879968456923962
    2. '%' → logprob: -4.761879920959473
    3. '<|end|>' → logprob: -6.761879920959473
    4. ' %' → logprob: -6.886879920959473
    5. ' %=' → logprob: -8.136879920959473
    6. '
' → logprob: -8.386879920959473
    7. '    
' → logprob: -8.761879920959473
    8. ')' → logprob: -9.511879920959473
    9. '<|end|>' → logprob: -9.886879920959473
    10. '%
' → logprob: -10.011879920959473

Token 618: ' éviter' (ID: 64013)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.007363475859165192
    2. ' count' → logprob: -5.257363319396973
    3. ' éviter' → logprob: -6.757363319396973
    4. '   ' → logprob: -8.132363319396973
    5. ' garder' → logprob: -8.257363319396973
    6. 'maint' → logprob: -9.507363319396973
    7. ' assurer' → logprob: -9.882363319396973
    8. 'év' → logprob: -9.882363319396973
    9. ' garantir' → logprob: -10.007363319396973
    10. ' compter' → logprob: -10.257363319396973

Token 619: ' les' (ID: 1341)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.35291606187820435
    2. ' count' → logprob: -1.2279160022735596
    3. '<|end|>' → logprob: -6.477916240692139
    4. 'mod' → logprob: -6.602916240692139
    5. '   ' → logprob: -7.352916240692139
    6. ' mod' → logprob: -7.977916240692139
    7. '```' → logprob: -9.22791576385498
    8. ' ' → logprob: -9.60291576385498
    9. ' overflow' → logprob: -9.85291576385498
    10. '	count' → logprob: -9.85291576385498

Token 620: ' déb' (ID: 37874)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.292770653963089
    2. ' overflow' → logprob: -2.0427706241607666
    3. 'overflow' → logprob: -2.4177706241607666
    4. ' count' → logprob: -3.4177706241607666
    5. 'mod' → logprob: -6.542770862579346
    6. '```' → logprob: -8.042770385742188
    7. 'over' → logprob: -8.667770385742188
    8. 'Overflow' → logprob: -8.792770385742188
    9. ' over' → logprob: -10.042770385742188
    10. ' mod' → logprob: -10.542770385742188

Token 621: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.00033415461075492203
    2. 'ords' → logprob: -8.250333786010742
    3. 'or' → logprob: -11.750333786010742
    4. 'p' → logprob: -11.750333786010742
    5. 'orde' → logprob: -11.750333786010742
    6. 'bord' → logprob: -11.750333786010742
    7. 'ors' → logprob: -12.375333786010742
    8. '```' → logprob: -12.625333786010742
    9. '``' → logprob: -13.000333786010742
    10. 'ou' → logprob: -13.000333786010742

Token 622: 'ements' (ID: 4507)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.06017450988292694
    2. 'ement' → logprob: -3.8101744651794434
    3. 'p' → logprob: -5.185174465179443
    4. 'overflow' → logprob: -5.310174465179443
    5. 'bord' → logprob: -5.935174465179443
    6. 'or' → logprob: -6.185174465179443
    7. '```' → logprob: -6.185174465179443
    8. 'orde' → logprob: -6.435174465179443
    9. 'ort' → logprob: -6.435174465179443
    10. '%' → logprob: -6.560174465179443

Token 623: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04860054701566696
    2. '%' → logprob: -3.298600435256958
    3. ' %' → logprob: -5.048600673675537
    4. '<|end|>' → logprob: -6.548600673675537
    5. ' %=' → logprob: -6.548600673675537
    6. '%
' → logprob: -7.548600673675537
    7. 'count' → logprob: -8.923600196838379
    8. ' count' → logprob: -9.048600196838379
    9. '
' → logprob: -9.548600196838379
    10. ')%' → logprob: -9.673600196838379

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30738866329193115
    2. 'count' → logprob: -1.5573886632919312
    3. ' count' → logprob: -2.9323887825012207
    4. '	count' → logprob: -7.557388782501221
    5. '
' → logprob: -9.932388305664062
    6. '[count' → logprob: -10.307388305664062
    7. '    
' → logprob: -10.932388305664062
    8. '(count' → logprob: -11.182388305664062
    9. ' ' → logprob: -11.307388305664062
    10. ',count' → logprob: -11.807388305664062

Token 625: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0003357006062287837
    2. ' count' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. '	count' → logprob: -17.625335693359375
    5. '(count' → logprob: -18.250335693359375
    6. 'counts' → logprob: -19.500335693359375
    7. '[count' → logprob: -19.500335693359375
    8. '
' → logprob: -20.250335693359375
    9. '$count' → logprob: -20.500335693359375
    10. '=count' → logprob: -21.500335693359375

Token 626: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0815451368689537
    2. ' %=' → logprob: -2.581545114517212
    3. '=' → logprob: -6.456545352935791
    4. '%' → logprob: -6.831545352935791
    5. ' =' → logprob: -13.581544876098633
    6. '   ' → logprob: -15.456544876098633
    7. '	' → logprob: -15.581544876098633
    8. ' ' → logprob: -15.706544876098633
    9. ')%' → logprob: -15.706544876098633
    10. ' %' → logprob: -16.206544876098633

Token 627: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.128163257315464e-07
    2. ' mod' → logprob: -15.5
    3. '(mod' → logprob: -18.25
    4. '10' → logprob: -21.625
    5. '	mod' → logprob: -22.25
    6. 'MOD' → logprob: -24.25
    7. ' мод' → logprob: -24.5
    8. '100' → logprob: -24.5
    9. '```' → logprob: -25.625
    10. '_mod' → logprob: -25.75

Token 628: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02532304637134075
    2. ')' → logprob: -4.400322914123535
    3. 'count' → logprob: -4.900322914123535
    4. 'result' → logprob: -5.900322914123535
    5. '#' → logprob: -6.775322914123535
    6. '<|end|>' → logprob: -7.400322914123535
    7. '
' → logprob: -7.900322914123535
    8. 'mp' → logprob: -9.025322914123535
    9. '```' → logprob: -10.150322914123535
    10. 'answer' → logprob: -10.275322914123535

Token 629: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005461543798446655
    2. 'result' → logprob: -5.380461692810059
    3. 'count' → logprob: -7.505461692810059
    4. '#' → logprob: -8.630461692810059
    5. '<|end|>' → logprob: -9.630461692810059
    6. '```' → logprob: -11.130461692810059
    7. 'answer' → logprob: -11.505461692810059
    8. '#print' → logprob: -12.255461692810059
    9. 'total' → logprob: -12.505461692810059
    10. 'pr' → logprob: -13.130461692810059

Token 630: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017368246335536242
    2. 'result' → logprob: -6.376736640930176
    3. '#' → logprob: -10.876736640930176
    4. 'count' → logprob: -11.876736640930176
    5. 'answer' → logprob: -12.251736640930176
    6. 'ans' → logprob: -13.501736640930176
    7. 'res' → logprob: -13.501736640930176
    8. 'pow' → logprob: -14.751736640930176
    9. '```' → logprob: -15.251736640930176
    10. 'power' → logprob: -15.626736640930176

Token 631: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016143811866641045
    2. 'cul' → logprob: -4.141143798828125
    3. '
' → logprob: -10.266143798828125
    4. 'count' → logprob: -10.766143798828125
    5. '```' → logprob: -11.391143798828125
    6. 'culate' → logprob: -11.516143798828125
    7. 'cule' → logprob: -12.141143798828125
    8. '

' → logprob: -12.141143798828125
    9. 'culated' → logprob: -12.391143798828125
    10. '#' → logprob: -12.516143798828125

Token 632: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.28791454434394836
    2. 'mp' → logprob: -1.912914514541626
    3. 'print' → logprob: -2.537914514541626
    4. 'res' → logprob: -4.412914752960205
    5. 'pow' → logprob: -5.287914752960205
    6. 'answer' → logprob: -5.662914752960205
    7. 'ans' → logprob: -6.912914752960205
    8. 'count' → logprob: -6.912914752960205
    9. 'm' → logprob: -8.037914276123047
    10. '(mp' → logprob: -8.912914276123047

Token 633: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.32782331109046936
    2. 'mp' → logprob: -1.452823281288147
    3. 'pow' → logprob: -3.3278234004974365
    4. 'print' → logprob: -5.452823162078857
    5. 'count' → logprob: -6.077823162078857
    6. 'res' → logprob: -6.827823162078857
    7. 'answer' → logprob: -7.327823162078857
    8. 'power' → logprob: -8.077823638916016
    9. 'rest' → logprob: -8.327823638916016
    10. ' result' → logprob: -8.702823638916016

Token 634: ' final' (ID: 1721)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06750568747520447
    2. 'result' → logprob: -2.9425055980682373
    3. ' =' → logprob: -4.692505836486816
    4. 'pow' → logprob: -6.942505836486816
    5. 'res' → logprob: -6.942505836486816
    6. 'ans' → logprob: -7.692505836486816
    7. 'count' → logprob: -7.942505836486816
    8. '=
' → logprob: -8.317505836486816
    9. '=result' → logprob: -9.192505836486816
    10. 'r' → logprob: -9.692505836486816

Token 635: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011577406898140907
    2. 'res' → logprob: -5.011577606201172
    3. 'answer' → logprob: -6.261577606201172
    4. 'print' → logprob: -6.511577606201172
    5. '=' → logprob: -6.886577606201172
    6. 'ans' → logprob: -8.011577606201172
    7. ' =' → logprob: -9.886577606201172
    8. 'r' → logprob: -10.886577606201172
    9. '=result' → logprob: -11.511577606201172
    10. 'pow' → logprob: -11.761577606201172

Token 636: ' afficher' (ID: 146524)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.00231547630392015
    2. '(mp' → logprob: -6.627315521240234
    3. 'print' → logprob: -7.627315521240234
    4. 'count' → logprob: -8.002315521240234
    5. '(m' → logprob: -9.752315521240234
    6. 'pow' → logprob: -9.877315521240234
    7. '(count' → logprob: -10.627315521240234
    8. ' mp' → logprob: -11.502315521240234
    9. 'int' → logprob: -12.002315521240234
    10. 'mod' → logprob: -12.502315521240234

Token 637: ' :
' (ID: 10039)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02053278498351574
    2. 'print' → logprob: -4.020532608032227
    3. 'answer' → logprob: -6.770532608032227
    4. 'res' → logprob: -7.270532608032227
    5. 'ans' → logprob: -7.895532608032227
    6. '=' → logprob: -8.895532608032227
    7. ' =' → logprob: -12.020532608032227
    8. '```' → logprob: -12.020532608032227
    9. 'output' → logprob: -12.395532608032227
    10. '=result' → logprob: -12.770532608032227

Token 638: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04360604286193848
    2. 'result' → logprob: -3.5436060428619385
    3. 'mp' → logprob: -4.293605804443359
    4. 'res' → logprob: -9.91860580444336
    5. 'count' → logprob: -10.91860580444336
    6. 'answer' → logprob: -11.66860580444336
    7. '```' → logprob: -11.66860580444336
    8. 'pow' → logprob: -11.79360580444336
    9. 'm' → logprob: -12.41860580444336
    10. 'output' → logprob: -12.54360580444336

Token 639: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7033870816230774
    2. 'result' → logprob: -0.7033870816230774
    3. 'mp' → logprob: -4.828387260437012
    4. 'pow' → logprob: -6.453387260437012
    5. 'res' → logprob: -7.828387260437012
    6. 'answer' → logprob: -9.953387260437012
    7. '(result' → logprob: -10.078387260437012
    8. '(mp' → logprob: -10.078387260437012
    9. 'ans' → logprob: -10.453387260437012
    10. 'count' → logprob: -10.828387260437012

Token 640: ' Mult' (ID: 15431)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47346970438957214
    2. 'result' → logprob: -1.0984697341918945
    3. 'mp' → logprob: -3.4734697341918945
    4. 'res' → logprob: -4.5984697341918945
    5. 'pow' → logprob: -6.4734697341918945
    6. 'count' → logprob: -7.9734697341918945
    7. '(mp' → logprob: -8.598469734191895
    8. 'ans' → logprob: -8.973469734191895
    9. 'answer' → logprob: -8.973469734191895
    10. '(result' → logprob: -9.098469734191895

Token 641: 'ipl' (ID: 7840)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5378554463386536
    2. 'ow' → logprob: -1.0378553867340088
    3. 'ip' → logprob: -3.162855386734009
    4. '=' → logprob: -4.662855625152588
    5. 'iplier' → logprob: -5.412855625152588
    6. 'ipl' → logprob: -6.912855625152588
    7. 'op' → logprob: -6.912855625152588
    8. ' =' → logprob: -7.037855625152588
    9. 'p' → logprob: -7.787855625152588
    10. 'yp' → logprob: -8.28785514831543

Token 642: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.032279472798109055
    2. 'lie' → logprob: -3.7822794914245605
    3. 'ies' → logprob: -6.5322794914245605
    4. 'ipl' → logprob: -6.6572794914245605
    5. 'ique' → logprob: -6.7822794914245605
    6. 'lié' → logprob: -7.2822794914245605
    7. 'count' → logprob: -7.4072794914245605
    8. 'e' → logprob: -7.6572794914245605
    9. 'plique' → logprob: -7.6572794914245605
    10. 'ier' → logprob: -8.032279014587402

Token 643: ' '' (ID: 461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.08263780176639557
    2. '(count' → logprob: -3.3326377868652344
    3. 'mp' → logprob: -3.9576377868652344
    4. '(m' → logprob: -4.332637786865234
    5. 'm' → logprob: -4.707637786865234
    6. 'N' → logprob: -6.457637786865234
    7. '(N' → logprob: -8.582637786865234
    8. ' count' → logprob: -8.832637786865234
    9. 'pow' → logprob: -9.582637786865234
    10. '2' → logprob: -9.707637786865234

Token 644: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.48929083347320557
    2. 'mp' → logprob: -0.9892908334732056
    3. 'N' → logprob: -5.114290714263916
    4. '2' → logprob: -5.864290714263916
    5. '(m' → logprob: -6.239290714263916
    6. '(mp' → logprob: -6.364290714263916
    7. '(count' → logprob: -6.614290714263916
    8. 'pow' → logprob: -8.364291191101074
    9. 'm' → logprob: -8.739291191101074
    10. ' mp' → logprob: -8.864291191101074

Token 645: ''' (ID: 6)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.46444374322891235
    2. ',' → logprob: -1.4644436836242676
    3. '*' → logprob: -2.3394436836242676
    4. 'count' → logprob: -4.214443683624268
    5. ' ,' → logprob: -4.464443683624268
    6. ')' → logprob: -5.464443683624268
    7. ' count' → logprob: -5.464443683624268
    8. 'mp' → logprob: -6.089443683624268
    9. ' mp' → logprob: -6.089443683624268
    10. '(mp' → logprob: -6.089443683624268

Token 646: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.558502733707428
    2. '*' → logprob: -1.6835026741027832
    3. ' =' → logprob: -1.9335026741027832
    4. ' *' → logprob: -2.433502674102783
    5. '*=' → logprob: -5.433502674102783
    6. ' *=' → logprob: -6.058502674102783
    7. 'count' → logprob: -6.683502674102783
    8. 'mp' → logprob: -7.058502674102783
    9. ',' → logprob: -7.933502674102783
    10. '   ' → logprob: -9.183503150939941

Token 647: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0007485175738111138
    2. 'N' → logprob: -7.500748634338379
    3. '2' → logprob: -9.250748634338379
    4. 'count' → logprob: -10.125748634338379
    5. ' mp' → logprob: -10.375748634338379
    6. '(mp' → logprob: -11.750748634338379
    7. '10' → logprob: -12.250748634338379
    8. '3' → logprob: -12.875748634338379
    9. 'pow' → logprob: -13.250748634338379
    10. '(N' → logprob: -13.500748634338379

Token 648: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -1.318681188422488e-05
    2. 'pow' → logprob: -11.25001335144043
    3. '(count' → logprob: -17.25001335144043
    4. 'count' → logprob: -17.50001335144043
    5. '(pow' → logprob: -18.25001335144043
    6. '```' → logprob: -18.37501335144043
    7. 'ower' → logprob: -18.37501335144043
    8. 'w' → logprob: -18.50001335144043
    9. '(m' → logprob: -18.87501335144043
    10. '#' → logprob: -19.00001335144043

Token 649: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06790396571159363
    2. '2' → logprob: -3.317903995513916
    3. '(N' → logprob: -3.692903995513916
    4. '(count' → logprob: -6.442903995513916
    5. 'N' → logprob: -6.817903995513916
    6. '(m' → logprob: -7.192903995513916
    7. '10' → logprob: -7.692903995513916
    8. 'count' → logprob: -8.192903518676758
    9. '(pow' → logprob: -9.192903518676758
    10. '3' → logprob: -9.817903518676758

Token 650: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15414170920848846
    2. '(' → logprob: -2.029141664505005
    3. 'N' → logprob: -5.154141902923584
    4. '(N' → logprob: -5.904141902923584
    5. '3' → logprob: -6.654141902923584
    6. '10' → logprob: -7.029141902923584
    7. '4' → logprob: -8.654141426086426
    8. '(m' → logprob: -9.154141426086426
    9. 'm' → logprob: -9.154141426086426
    10. 'count' → logprob: -10.029141426086426

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0780036672949791
    2. '(N' → logprob: -2.9530036449432373
    3. '(' → logprob: -3.9530036449432373
    4. '(count' → logprob: -6.453003883361816
    5. ')' → logprob: -7.203003883361816
    6. '(i' → logprob: -7.828003883361816
    7. ',N' → logprob: -8.328003883361816
    8. 'N' → logprob: -8.453003883361816
    9. ',count' → logprob: -9.078003883361816
    10. '(n' → logprob: -9.203003883361816

Token 652: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.816591434879228e-05
    2. '(N' → logprob: -9.87508773803711
    3. '   ' → logprob: -11.00008773803711
    4. ' N' → logprob: -11.75008773803711
    5. 'n' → logprob: -12.87508773803711
    6. ')' → logprob: -13.50008773803711
    7. '
' → logprob: -13.62508773803711
    8. '(' → logprob: -14.00008773803711
    9. '2' → logprob: -14.37508773803711
    10. 'mod' → logprob: -14.62508773803711

Token 653: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33959680795669556
    2. '-' → logprob: -1.8395967483520508
    3. ',' → logprob: -2.214596748352051
    4. '(N' → logprob: -4.214596748352051
    5. 'N' → logprob: -6.339596748352051
    6. '(' → logprob: -7.339596748352051
    7. '(mod' → logprob: -7.339596748352051
    8. 'mod' → logprob: -7.964596748352051
    9. '```' → logprob: -8.08959674835205
    10. ' -' → logprob: -8.21459674835205

Token 654: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8295281529426575
    2. 'count' → logprob: -1.4545280933380127
    3. 'N' → logprob: -1.4545280933380127
    4. '-' → logprob: -2.7045280933380127
    5. '2' → logprob: -4.079528331756592
    6. '(N' → logprob: -4.829528331756592
    7. '(' → logprob: -6.329528331756592
    8. '(count' → logprob: -6.704528331756592
    9. '3' → logprob: -7.204528331756592
    10. 'mod' → logprob: -8.204527854919434

Token 655: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01333411131054163
    2. ',' → logprob: -4.388334274291992
    3. '-' → logprob: -7.888334274291992
    4. 'count' → logprob: -9.138334274291992
    5. '(N' → logprob: -9.388334274291992
    6. '))' → logprob: -9.763334274291992
    7. '(' → logprob: -10.013334274291992
    8. '),' → logprob: -10.263334274291992
    9. '(count' → logprob: -10.638334274291992
    10. ')`' → logprob: -10.638334274291992

Token 656: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13150985538959503
    2. 'count' → logprob: -2.256509780883789
    3. 'print' → logprob: -4.256509780883789
    4. ')' → logprob: -5.756509780883789
    5. ',' → logprob: -7.506509780883789
    6. '(count' → logprob: -8.506509780883789
    7. 'final' → logprob: -9.756509780883789
    8. '(result' → logprob: -9.881509780883789
    9. '#' → logprob: -10.006509780883789
    10. ' result' → logprob: -10.006509780883789

Token 657: 'rés' (ID: 60278)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003846151754260063
    2. ',' → logprob: -6.378846168518066
    3. '(' → logprob: -6.878846168518066
    4. 'count' → logprob: -7.753846168518066
    5. '%' → logprob: -8.628846168518066
    6. '(count' → logprob: -8.753846168518066
    7. ')%' → logprob: -8.753846168518066
    8. '*' → logprob: -10.628846168518066
    9. ' )' → logprob: -10.628846168518066
    10. 'mod' → logprob: -10.878846168518066

Token 658: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.4263626039028168
    2. 'ult' → logprob: -1.1763626337051392
    3. ')' → logprob: -3.3013625144958496
    4. '**' → logprob: -7.55136251449585
    5. '))' → logprob: -7.92636251449585
    6. 'u' → logprob: -8.801362991333008
    7. 'mod' → logprob: -8.926362991333008
    8. ')%' → logprob: -9.051362991333008
    9. 'ulta' → logprob: -9.176362991333008
    10. ')**' → logprob: -9.551362991333008

Token 659: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04285256564617157
    2. ')' → logprob: -3.7928526401519775
    3. '(count' → logprob: -4.167852401733398
    4. '(
' → logprob: -5.792852401733398
    5. ',' → logprob: -7.917852401733398
    6. '(

' → logprob: -8.667852401733398
    7. ' (' → logprob: -10.167852401733398
    8. '=' → logprob: -10.167852401733398
    9. 'count' → logprob: -10.167852401733398
    10. '#' → logprob: -10.167852401733398

Token 660: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4543509781360626
    2. 'N' → logprob: -2.0793509483337402
    3. 'count' → logprob: -2.3293509483337402
    4. '(N' → logprob: -2.3293509483337402
    5. '```' → logprob: -4.45435094833374
    6. '(' → logprob: -4.82935094833374
    7. '2' → logprob: -5.32935094833374
    8. ' )' → logprob: -5.45435094833374
    9. ' N' → logprob: -5.57935094833374
    10. 'mp' → logprob: -6.20435094833374

Token 661: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.038036823272705
    2. 'count' → logprob: -1.663036823272705
    3. 'mp' → logprob: -1.663036823272705
    4. 'mod' → logprob: -2.288036823272705
    5. '(' → logprob: -2.663036823272705
    6. '(N' → logprob: -3.288036823272705
    7. 'N' → logprob: -3.913036823272705
    8. '(mp' → logprob: -4.413036823272705
    9. '2' → logprob: -4.538036823272705
    10. '(count' → logprob: -5.163036823272705

Token 662: ' expos' (ID: 10300)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6900540590286255
    2. '-' → logprob: -1.3150540590286255
    3. ' -' → logprob: -2.440053939819336
    4. ',' → logprob: -2.565053939819336
    5. '<|end|>' → logprob: -3.690053939819336
    6. '(N' → logprob: -4.065053939819336
    7. '**' → logprob: -4.565053939819336
    8. '*' → logprob: -5.815053939819336
    9. '(n' → logprob: -6.190053939819336
    10. '%' → logprob: -6.565053939819336

Token 663: 'ant' (ID: 493)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.133701354265213
    2. 'ent' → logprob: -2.3837013244628906
    3. 'enti' → logprob: -5.258701324462891
    4. '**' → logprob: -5.258701324462891
    5. 'ential' → logprob: -5.508701324462891
    6. 'N' → logprob: -5.883701324462891
    7. '(n' → logprob: -6.383701324462891
    8. 'ient' → logprob: -6.508701324462891
    9. '<N' → logprob: -6.758701324462891
    10. '(' → logprob: -7.008701324462891

Token 664: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.13607321679592133
    2. 'N' → logprob: -2.761073112487793
    3. ' (' → logprob: -3.011073112487793
    4. ')' → logprob: -5.011073112487793
    5. '(' → logprob: -5.636073112487793
    6. '```' → logprob: -6.261073112487793
    7. ' N' → logprob: -6.761073112487793
    8. '1' → logprob: -7.636073112487793
    9. '`' → logprob: -8.011073112487793
    10. ' )' → logprob: -9.386073112487793

Token 665: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015138177201151848
    2. '(N' → logprob: -4.265138149261475
    3. ' N' → logprob: -7.390138149261475
    4. ' (' → logprob: -8.515138626098633
    5. '(' → logprob: -9.265138626098633
    6. ')' → logprob: -9.890138626098633
    7. ' ' → logprob: -12.515138626098633
    8. '(
' → logprob: -13.515138626098633
    9. '```' → logprob: -13.515138626098633
    10. '-' → logprob: -14.265138626098633

Token 666: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020545506849884987
    2. ' -' → logprob: -3.895545482635498
    3. ')' → logprob: -13.020545959472656
    4. '```' → logprob: -14.145545959472656
    5. ')-' → logprob: -15.770545959472656
    6. ' ' → logprob: -16.020545959472656
    7. '-
' → logprob: -16.270545959472656
    8. '1' → logprob: -16.520545959472656
    9. '
' → logprob: -16.645545959472656
    10. '<|end|>' → logprob: -17.020545959472656

Token 667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6330183148384094
    2. '-' → logprob: -0.7580183148384094
    3. ' -' → logprob: -7.883018493652344
    4. '```' → logprob: -10.633018493652344
    5. 'minus' → logprob: -11.508018493652344
    6. ' ' → logprob: -12.258018493652344
    7. '(' → logprob: -14.383018493652344
    8. '−' → logprob: -14.633018493652344
    9. ')' → logprob: -14.758018493652344
    10. '()-' → logprob: -15.633018493652344

Token 668: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00792576465755701
    2. '))' → logprob: -4.882925987243652
    3. ')))' → logprob: -9.007925987243652
    4. ' )' → logprob: -9.507925987243652
    5. ')**' → logprob: -10.507925987243652
    6. ',' → logprob: -10.507925987243652
    7. ')`' → logprob: -10.757925987243652
    8. '**' → logprob: -11.382925987243652
    9. '),' → logprob: -11.632925987243652
    10. '-' → logprob: -11.632925987243652

Token 669: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033798301592469215
    2. ',' → logprob: -6.003379821777344
    3. '))' → logprob: -7.378379821777344
    4. '),' → logprob: -9.628379821777344
    5. ' )' → logprob: -10.003379821777344
    6. ')
' → logprob: -10.128379821777344
    7. '(' → logprob: -10.628379821777344
    8. ')%' → logprob: -10.628379821777344
    9. ')`' → logprob: -11.128379821777344
    10. '()' → logprob: -11.503379821777344

Token 670: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.007662105839699507
    2. '(mod' → logprob: -5.007662296295166
    3. ' mod' → logprob: -7.132662296295166
    4. ')' → logprob: -10.007661819458008
    5. '```' → logprob: -10.632661819458008
    6. '(' → logprob: -11.007661819458008
    7. ' (' → logprob: -11.007661819458008
    8. 'N' → logprob: -11.382661819458008
    9. '(N' → logprob: -11.507661819458008
    10. '2' → logprob: -11.757661819458008

Token 671: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016340012662112713
    2. 'count' → logprob: -7.126634120941162
    3. ')
' → logprob: -7.376634120941162
    4. ',' → logprob: -9.251633644104004
    5. 'result' → logprob: -9.751633644104004
    6. '#' → logprob: -11.751633644104004
    7. ').' → logprob: -11.876633644104004
    8. 'print' → logprob: -12.126633644104004
    9. '),' → logprob: -12.501633644104004
    10. '%' → logprob: -12.626633644104004

Token 672: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01537591964006424
    2. 'count' → logprob: -4.515376091003418
    3. 'print' → logprob: -5.515376091003418
    4. 'res' → logprob: -8.890376091003418
    5. 'answer' → logprob: -8.890376091003418
    6. 'ans' → logprob: -12.015376091003418
    7. '```' → logprob: -12.515376091003418
    8. 'final' → logprob: -12.640376091003418
    9. ' result' → logprob: -12.765376091003418
    10. '
' → logprob: -14.390376091003418

Token 673: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0010463856160640717
    2. 'print' → logprob: -7.251046180725098
    3. 'count' → logprob: -8.751046180725098
    4. 'res' → logprob: -9.001046180725098
    5. 'answer' → logprob: -10.001046180725098
    6. 'ans' → logprob: -12.501046180725098
    7. '```' → logprob: -12.751046180725098
    8. ' result' → logprob: -13.126046180725098
    9. 'output' → logprob: -14.626046180725098
    10. 'final' → logprob: -15.751046180725098

Token 674: ' Mult' (ID: 15431)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4362340569496155
    2. 'result' → logprob: -1.0612339973449707
    3. 'count' → logprob: -5.061233997344971
    4. 'res' → logprob: -8.061234474182129
    5. 'answer' → logprob: -8.061234474182129
    6. ' result' → logprob: -8.186234474182129
    7. ' print' → logprob: -8.936234474182129
    8. 'ans' → logprob: -10.186234474182129
    9. 'rés' → logprob: -10.311234474182129
    10. 'final' → logprob: -10.936234474182129

Token 675: 'ipl' (ID: 7840)
  Prédit: 'ipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.25556841492652893
    2. 'mod' → logprob: -2.755568504333496
    3. 'urn' → logprob: -3.505568504333496
    4. '_mod' → logprob: -3.505568504333496
    5. 'plique' → logprob: -3.505568504333496
    6. '%' → logprob: -4.755568504333496
    7. 'ure' → logprob: -5.005568504333496
    8. 'turn' → logprob: -5.130568504333496
    9. 'ult' → logprob: -5.255568504333496
    10. 'return' → logprob: -5.380568504333496

Token 676: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.17586731910705566
    2. 'ies' → logprob: -3.1758673191070557
    3. 'y' → logprob: -3.3008673191070557
    4. 'ier' → logprob: -3.5508673191070557
    5. 'e' → logprob: -3.6758673191070557
    6. 'ipl' → logprob: -5.050867080688477
    7. 'ique' → logprob: -5.675867080688477
    8. 'ip' → logprob: -5.925867080688477
    9. 'iez' → logprob: -6.300867080688477
    10. 'pl' → logprob: -6.550867080688477

Token 677: ' encore' (ID: 14043)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4842887222766876
    2. 'count' → logprob: -1.3592886924743652
    3. ' mp' → logprob: -2.7342886924743652
    4. '(' → logprob: -3.4842886924743652
    5. 'mp' → logprob: -4.359288692474365
    6. '(count' → logprob: -4.984288692474365
    7. ' (' → logprob: -5.734288692474365
    8. '2' → logprob: -5.984288692474365
    9. '(mp' → logprob: -6.109288692474365
    10. ' ' → logprob: -6.734288692474365

Token 678: ' par' (ID: 686)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.7559548616409302
    2. '(' → logprob: -0.8809548616409302
    3. 'count' → logprob: -2.3809547424316406
    4. ' (' → logprob: -4.755954742431641
    5. '(
' → logprob: -5.755954742431641
    6. 'by' → logprob: -6.130954742431641
    7. ' by' → logprob: -6.255954742431641
    8. '2' → logprob: -6.380954742431641
    9. ' count' → logprob: -6.630954742431641
    10. '(mp' → logprob: -6.755954742431641

Token 679: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.12494521588087082
    2. 'count' → logprob: -2.8749451637268066
    3. 'N' → logprob: -3.7499451637268066
    4. '(N' → logprob: -4.249945163726807
    5. '(mp' → logprob: -4.749945163726807
    6. '2' → logprob: -5.374945163726807
    7. 'C' → logprob: -5.874945163726807
    8. '(' → logprob: -6.249945163726807
    9. 'mod' → logprob: -6.749945163726807
    10. '3' → logprob: -7.249945163726807

Token 680: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.0004898841143585742
    2. 'pow' → logprob: -7.625489711761475
    3. 'count' → logprob: -15.000490188598633
    4. '(pow' → logprob: -15.250490188598633
    5. '```' → logprob: -15.500490188598633
    6. ' pow' → logprob: -15.875490188598633
    7. '   ' → logprob: -16.000490188598633
    8. ' ow' → logprob: -16.750490188598633
    9. '#' → logprob: -16.750490188598633
    10. 'wow' → logprob: -16.875490188598633

Token 681: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020450672134757042
    2. '(count' → logprob: -4.270450592041016
    3. '(C' → logprob: -5.770450592041016
    4. '(N' → logprob: -6.020450592041016
    5. '(c' → logprob: -8.145450592041016
    6. '((' → logprob: -8.520450592041016
    7. '2' → logprob: -9.770450592041016
    8. '(max' → logprob: -10.145450592041016
    9. 'count' → logprob: -10.395450592041016
    10. '(m' → logprob: -11.020450592041016

Token 682: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14874979853630066
    2. '(count' → logprob: -2.523749828338623
    3. '(C' → logprob: -3.398749828338623
    4. '(N' → logprob: -4.648749828338623
    5. '2' → logprob: -5.648749828338623
    6. '3' → logprob: -5.773749828338623
    7. 'count' → logprob: -5.773749828338623
    8. '(mod' → logprob: -6.398749828338623
    9. '(m' → logprob: -7.023749828338623
    10. '((' → logprob: -7.148749828338623

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11945496499538422
    2. '(N' → logprob: -2.494454860687256
    3. '(' → logprob: -3.994454860687256
    4. '(count' → logprob: -5.494454860687256
    5. ',N' → logprob: -6.119454860687256
    6. 'N' → logprob: -6.744454860687256
    7. ',count' → logprob: -6.869454860687256
    8. '(i' → logprob: -7.244454860687256
    9. '(mod' → logprob: -7.494454860687256
    10. 'mod' → logprob: -8.369455337524414

Token 684: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07413704693317413
    2. '(N' → logprob: -3.574136972427368
    3. '(' → logprob: -4.324137210845947
    4. 'i' → logprob: -4.449137210845947
    5. 'count' → logprob: -4.824137210845947
    6. 'mod' → logprob: -6.324137210845947
    7. '(i' → logprob: -6.824137210845947
    8. '2' → logprob: -7.199137210845947
    9. '(count' → logprob: -7.324137210845947
    10. '10' → logprob: -7.574137210845947

Token 685: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00462154159322381
    2. ' -' → logprob: -5.379621505737305
    3. ')' → logprob: -14.379621505737305
    4. '   ' → logprob: -16.004621505737305
    5. ')-' → logprob: -16.129621505737305
    6. '-N' → logprob: -16.504621505737305
    7. ' ' → logprob: -16.504621505737305
    8. '```' → logprob: -16.504621505737305
    9. '(' → logprob: -16.629621505737305
    10. '#' → logprob: -16.629621505737305

Token 686: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.022758157923817635
    2. 'N' → logprob: -4.8977580070495605
    3. '2' → logprob: -5.1477580070495605
    4. '1' → logprob: -5.5227580070495605
    5. '(' → logprob: -5.8977580070495605
    6. '(N' → logprob: -6.5227580070495605
    7. ' -' → logprob: -8.397758483886719
    8. '4' → logprob: -8.897758483886719
    9. '3' → logprob: -9.147758483886719
    10. '(-' → logprob: -9.522758483886719

Token 687: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19802255928516388
    2. '-' → logprob: -1.8230226039886475
    3. ' -' → logprob: -4.698022365570068
    4. '()' → logprob: -5.323022365570068
    5. ',' → logprob: -6.073022365570068
    6. '))' → logprob: -7.573022365570068
    7. '(' → logprob: -8.698022842407227
    8. '(N' → logprob: -8.698022842407227
    9. '),' → logprob: -8.823022842407227
    10. ' )' → logprob: -8.823022842407227

Token 688: ' donc' (ID: 14206)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19975149631500244
    2. ' *' → logprob: -2.074751377105713
    3. ')' → logprob: -3.074751377105713
    4. '%' → logprob: -5.449751377105713
    5. '   ' → logprob: -5.949751377105713
    6. '(' → logprob: -6.824751377105713
    7. '2' → logprob: -8.199751853942871
    8. 'count' → logprob: -8.199751853942871
    9. '**' → logprob: -9.324751853942871
    10. ' %' → logprob: -9.449751853942871

Token 689: ' au' (ID: 2791)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.1806583404541016
    2. 'count' → logprob: -1.1806583404541016
    3. '**' → logprob: -2.4306583404541016
    4. '(' → logprob: -2.9306583404541016
    5. '2' → logprob: -2.9306583404541016
    6. ' mp' → logprob: -2.9306583404541016
    7. '(mp' → logprob: -3.0556583404541016
    8. '*' → logprob: -3.6806583404541016
    9. '(count' → logprob: -3.8056583404541016
    10. ')' → logprob: -4.305658340454102

Token 690: ' total' (ID: 3609)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01888425461947918
    2. ' ' → logprob: -4.643884181976318
    3. 'pow' → logprob: -5.768884181976318
    4. 'mp' → logprob: -6.143884181976318
    5. ')' → logprob: -7.143884181976318
    6. '0' → logprob: -7.518884181976318
    7. '(' → logprob: -7.768884181976318
    8. '²' → logprob: -8.768884658813477
    9. 'mod' → logprob: -8.768884658813477
    10. '1' → logprob: -8.768884658813477

Token 691: ' :' (ID: 712)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8087597489356995
    2. '(' → logprob: -1.3087596893310547
    3. '(count' → logprob: -2.1837596893310547
    4. 'count' → logprob: -2.6837596893310547
    5. ' (' → logprob: -3.3087596893310547
    6. ' *' → logprob: -4.058759689331055
    7. '**' → logprob: -4.433759689331055
    8. ' count' → logprob: -4.808759689331055
    9. '(mp' → logprob: -4.933759689331055
    10. '%' → logprob: -5.183759689331055

Token 692: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03108450211584568
    2. 'mp' → logprob: -4.1560845375061035
    3. '(count' → logprob: -4.7810845375061035
    4. ' count' → logprob: -5.9060845375061035
    5. '(mp' → logprob: -6.2810845375061035
    6. ' mp' → logprob: -7.0310845375061035
    7. '(' → logprob: -7.4060845375061035
    8. 'pow' → logprob: -8.906084060668945
    9. ' (' → logprob: -9.031084060668945
    10. '(m' → logprob: -9.656084060668945

Token 693: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1483379602432251
    2. '*' → logprob: -2.0233378410339355
    3. '**' → logprob: -5.3983378410339355
    4. ' =' → logprob: -7.6483378410339355
    5. '=' → logprob: -8.023338317871094
    6. ' **' → logprob: -9.398338317871094
    7. '   ' → logprob: -9.523338317871094
    8. ' ' → logprob: -9.648338317871094
    9. '```' → logprob: -10.273338317871094
    10. 'pow' → logprob: -11.148338317871094

Token 694: ' (' (ID: 350)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.08001329749822617
    2. '(m' → logprob: -2.5800132751464844
    3. '(mp' → logprob: -6.955013275146484
    4. 'pow' → logprob: -9.205013275146484
    5. ' mp' → logprob: -10.580013275146484
    6. 'm' → logprob: -11.080013275146484
    7. 'count' → logprob: -11.330013275146484
    8. '2' → logprob: -11.705013275146484
    9. '(' → logprob: -13.330013275146484
    10. '(pow' → logprob: -13.330013275146484

Token 695: '2' (ID: 17)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.04954531416296959
    2. '2' → logprob: -3.2995452880859375
    3. '(mp' → logprob: -5.2995452880859375
    4. '(' → logprob: -5.9245452880859375
    5. ' mp' → logprob: -6.0495452880859375
    6. 'count' → logprob: -7.1745452880859375
    7. 'pow' → logprob: -8.049545288085938
    8. '(m' → logprob: -8.299545288085938
    9. ' ' → logprob: -11.049545288085938
    10. '(count' → logprob: -11.174545288085938

Token 696: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004144407343119383
    2. '*' → logprob: -6.004144191741943
    3. ' **' → logprob: -6.629144191741943
    4. '*(' → logprob: -9.629144668579102
    5. '2' → logprob: -9.879144668579102
    6. 'mp' → logprob: -10.379144668579102
    7. '```' → logprob: -10.504144668579102
    8. '**)' → logprob: -10.629144668579102
    9. ' *' → logprob: -10.754144668579102
    10. ')**' → logprob: -11.004144668579102

Token 697: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.23194454610347748
    2. '(N' → logprob: -1.6069445610046387
    3. '2' → logprob: -5.106944561004639
    4. '(' → logprob: -7.981944561004639
    5. ' (' → logprob: -9.85694408416748
    6. '((' → logprob: -10.85694408416748
    7. ' N' → logprob: -11.10694408416748
    8. ' ' → logprob: -11.85694408416748
    9. '   ' → logprob: -12.48194408416748
    10. '(n' → logprob: -12.85694408416748

Token 698: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004895485006272793
    2. ' -' → logprob: -6.0048956871032715
    3. '*' → logprob: -6.1298956871032715
    4. '2' → logprob: -8.629895210266113
    5. ' ' → logprob: -11.629895210266113
    6. ')' → logprob: -11.754895210266113
    7. '(' → logprob: -12.004895210266113
    8. 'minus' → logprob: -12.254895210266113
    9. '1' → logprob: -12.379895210266113
    10. ' *' → logprob: -12.504895210266113

Token 699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022070204431656748
    2. '2' → logprob: -8.50022029876709
    3. ' ' → logprob: -12.50022029876709
    4. '-' → logprob: -12.62522029876709
    5. '(' → logprob: -12.87522029876709
    6. 'N' → logprob: -13.00022029876709
    7. '(N' → logprob: -13.37522029876709
    8. '
' → logprob: -13.50022029876709
    9. '```' → logprob: -13.50022029876709
    10. '   ' → logprob: -15.25022029876709

Token 700: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10336493700742722
    2. '*' → logprob: -2.728364944458008
    3. '))' → logprob: -4.103364944458008
    4. ')**' → logprob: -4.728364944458008
    5. ' *' → logprob: -4.978364944458008
    6. '**' → logprob: -7.978364944458008
    7. ')*' → logprob: -9.228364944458008
    8. ' )' → logprob: -9.728364944458008
    9. '%' → logprob: -10.228364944458008
    10. '2' → logprob: -10.728364944458008

Token 701: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.46222710609436035
    2. '*' → logprob: -1.0872271060943604
    3. '**' → logprob: -3.8372271060943604
    4. '%' → logprob: -4.587226867675781
    5. ' %' → logprob: -7.462226867675781
    6. ')' → logprob: -7.962226867675781
    7. ' **' → logprob: -9.337226867675781
    8. 'def' → logprob: -9.837226867675781
    9. '2' → logprob: -9.837226867675781
    10. ' ' → logprob: -10.337226867675781

Token 702: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4061780571937561
    2. 'mp' → logprob: -1.2811779975891113
    3. ' mp' → logprob: -3.5311779975891113
    4. 'count' → logprob: -4.656177997589111
    5. ' (' → logprob: -4.906177997589111
    6. '(mp' → logprob: -5.031177997589111
    7. '2' → logprob: -5.906177997589111
    8. '(count' → logprob: -8.28117847442627
    9. ' count' → logprob: -9.03117847442627
    10. 'pow' → logprob: -9.28117847442627

Token 703: '2' (ID: 17)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.32857266068458557
    2. '2' → logprob: -1.5785726308822632
    3. '(' → logprob: -3.3285727500915527
    4. ' mp' → logprob: -3.7035727500915527
    5. 'count' → logprob: -4.828572750091553
    6. '(mp' → logprob: -5.578572750091553
    7. 'pow' → logprob: -7.703572750091553
    8. ' ' → logprob: -8.078572273254395
    9. ' (' → logprob: -8.203572273254395
    10. 'mod' → logprob: -8.828572273254395

Token 704: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4155516028404236
    2. '(' → logprob: -2.1655516624450684
    3. '(N' → logprob: -2.6655516624450684
    4. '^(' → logprob: -3.0405516624450684
    5. '*' → logprob: -3.4155516624450684
    6. '*(' → logprob: -3.6655516624450684
    7. '-' → logprob: -3.9155516624450684
    8. ' (' → logprob: -4.165551662445068
    9. '^' → logprob: -5.665551662445068
    10. ' ' → logprob: -5.790551662445068

Token 705: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008752246387302876
    2. '(N' → logprob: -4.758752346038818
    3. ' (' → logprob: -9.13375186920166
    4. '(' → logprob: -11.25875186920166
    5. ' N' → logprob: -11.25875186920166
    6. '-' → logprob: -13.50875186920166
    7. ' ' → logprob: -14.13375186920166
    8. '   ' → logprob: -14.50875186920166
    9. '{' → logprob: -15.13375186920166
    10. '1' → logprob: -15.63375186920166

Token 706: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7729658540920354e-05
    2. ' -' → logprob: -10.500027656555176
    3. '1' → logprob: -16.000028610229492
    4. '−' → logprob: -18.125028610229492
    5. '   ' → logprob: -18.875028610229492
    6. ' ' → logprob: -19.500028610229492
    7. ')' → logprob: -20.000028610229492
    8. '2' → logprob: -20.250028610229492
    9. 'N' → logprob: -20.625028610229492
    10. '
' → logprob: -21.500028610229492

Token 707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -15.62500286102295
    4. '<|end|>' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.562503814697266
    6. '<|end|>' → logprob: -16.750003814697266
    7. '2' → logprob: -16.812503814697266
    8. '-' → logprob: -17.125003814697266
    9. '۱' → logprob: -17.687503814697266
    10. '१' → logprob: -17.750003814697266

Token 708: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000678361626341939
    2. ')%' → logprob: -7.625678539276123
    3. '))' → logprob: -9.000678062438965
    4. ' )' → logprob: -11.125678062438965
    5. '%' → logprob: -11.250678062438965
    6. '%)' → logprob: -11.250678062438965
    7. ')
' → logprob: -11.875678062438965
    8. ')`' → logprob: -11.875678062438965
    9. ')#' → logprob: -13.125678062438965
    10. '#' → logprob: -13.250678062438965

Token 709: ' %' (ID: 1851)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2545730173587799
    2. 'print' → logprob: -1.5045729875564575
    3. 'count' → logprob: -6.254572868347168
    4. 'res' → logprob: -7.504572868347168
    5. 'answer' → logprob: -9.504572868347168
    6. '
' → logprob: -10.379572868347168
    7. 'ans' → logprob: -11.129572868347168
    8. '```' → logprob: -11.129572868347168
    9. '*' → logprob: -11.629572868347168
    10. ' result' → logprob: -11.754572868347168

Token 710: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0006921819876879454
    2. ' mod' → logprob: -7.750692367553711
    3. '(mod' → logprob: -8.250692367553711
    4. ' (' → logprob: -15.125692367553711
    5. '	mod' → logprob: -16.87569236755371
    6. '```' → logprob: -17.12569236755371
    7. '(' → logprob: -17.25069236755371
    8. '_mod' → logprob: -18.37569236755371
    9. '.mod' → logprob: -19.87569236755371
    10. '`' → logprob: -20.37569236755371

Token 711: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026761337649077177
    2. '
' → logprob: -7.377676010131836
    3. 'result' → logprob: -7.502676010131836
    4. 'count' → logprob: -7.627676010131836
    5. '```' → logprob: -8.502676010131836
    6. ' print' → logprob: -8.627676010131836
    7. '=' → logprob: -8.877676010131836
    8. '%' → logprob: -9.252676010131836
    9. '*' → logprob: -10.002676010131836
    10. ' =' → logprob: -10.002676010131836

Token 712: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004086708649992943
    2. 'result' → logprob: -5.504086494445801
    3. '```' → logprob: -12.0040864944458
    4. '
' → logprob: -14.0040864944458
    5. 'count' → logprob: -14.0040864944458
    6. 'res' → logprob: -15.3790864944458
    7. 'answer' → logprob: -16.129087448120117
    8. ' print' → logprob: -16.379087448120117
    9. 'ans' → logprob: -17.004087448120117
    10. '``' → logprob: -17.254087448120117

Token 713: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38777968287467957
    2. 'print' → logprob: -1.137779712677002
    3. 'res' → logprob: -7.387779712677002
    4. 'ans' → logprob: -8.762779235839844
    5. 'answer' → logprob: -9.012779235839844
    6. '```' → logprob: -12.512779235839844
    7. 'count' → logprob: -12.762779235839844
    8. 'final' → logprob: -13.387779235839844
    9. 'ret' → logprob: -14.262779235839844
    10. 'r' → logprob: -14.637779235839844

Token 714: ' Ap' (ID: 6537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0486510694026947
    2. 'result' → logprob: -3.0486509799957275
    3. 'count' → logprob: -10.423650741577148
    4. 'res' → logprob: -11.048650741577148
    5. ' print' → logprob: -11.923650741577148
    6. 'answer' → logprob: -12.173650741577148
    7. 'ans' → logprob: -13.048650741577148
    8. ' result' → logprob: -13.798650741577148
    9. '#' → logprob: -13.923650741577148
    10. '
' → logprob: -14.048650741577148

Token 715: 'plique' (ID: 71193)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1408189535140991
    2. 'r' → logprob: -1.3908189535140991
    3. 'ply' → logprob: -2.0158190727233887
    4. 'p' → logprob: -2.7658190727233887
    5. 'plique' → logprob: -3.2658190727233887
    6. 'rès' → logprob: -3.3908190727233887
    7. 'pel' → logprob: -3.8908190727233887
    8. 'pend' → logprob: -4.140819072723389
    9. 'pp' → logprob: -4.265819072723389
    10. 'pr' → logprob: -4.265819072723389

Token 716: ' l' (ID: 305)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.4483913481235504
    2. '%' → logprob: -1.448391318321228
    3. 'mod' → logprob: -3.0733914375305176
    4. '(' → logprob: -3.6983914375305176
    5. ' %' → logprob: -3.6983914375305176
    6. '(count' → logprob: -3.9483914375305176
    7. ' (' → logprob: -5.573391437530518
    8. 'count' → logprob: -6.073391437530518
    9. ' mod' → logprob: -6.573391437530518
    10. ')' → logprob: -7.573391437530518

Token 717: ''op' (ID: 70747)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8179793357849121
    2. 'mod' → logprob: -1.317979335784912
    3. ' count' → logprob: -2.317979335784912
    4. '=' → logprob: -2.692979335784912
    5. '(count' → logprob: -3.442979335784912
    6. '%' → logprob: -3.692979335784912
    7. ' mod' → logprob: -3.942979335784912
    8. 'result' → logprob: -4.692979335784912
    9. '(mod' → logprob: -5.192979335784912
    10. ' %=' → logprob: -5.317979335784912

Token 718: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.013324578292667866
    2. '%' → logprob: -5.388324737548828
    3. 'er' → logprob: -5.513324737548828
    4. 'ér' → logprob: -6.388324737548828
    5. 'é' → logprob: -6.513324737548828
    6. 'mod' → logprob: -7.888324737548828
    7. '%(' → logprob: -8.013324737548828
    8. 'ration' → logprob: -8.263324737548828
    9. 'érations' → logprob: -9.513324737548828
    10. '#' → logprob: -9.763324737548828

Token 719: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31737014651298523
    2. '=' → logprob: -1.9423701763153076
    3. 'mod' → logprob: -3.0673701763153076
    4. '(' → logprob: -3.4423701763153076
    5. '(mod' → logprob: -3.9423701763153076
    6. '%=' → logprob: -5.1923699378967285
    7. ' %=' → logprob: -5.3173699378967285
    8. 'result' → logprob: -5.3173699378967285
    9. ' =' → logprob: -5.4423699378967285
    10. '(count' → logprob: -6.0673699378967285

Token 720: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24513909220695496
    2. 'print' → logprob: -1.7451391220092773
    3. '(result' → logprob: -3.9951391220092773
    4. 'count' → logprob: -4.120139122009277
    5. '(count' → logprob: -5.745139122009277
    6. 'res' → logprob: -6.245139122009277
    7. 'final' → logprob: -6.870139122009277
    8. ' =' → logprob: -7.495139122009277
    9. 'mod' → logprob: -8.245139122009277
    10. 'answer' → logprob: -8.495139122009277

Token 721: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0006049798685126007
    2. '(mod' → logprob: -7.62560510635376
    3. ' mod' → logprob: -9.750604629516602
    4. '')' → logprob: -10.375604629516602
    5. ')' → logprob: -10.625604629516602
    6. ''' → logprob: -13.750604629516602
    7. '	mod' → logprob: -14.750604629516602
    8. '```' → logprob: -15.000604629516602
    9. '(' → logprob: -15.500604629516602
    10. '_mod' → logprob: -15.750604629516602

Token 722: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41705432534217834
    2. ')
' → logprob: -1.667054295539856
    3. 'print' → logprob: -2.1670544147491455
    4. 'result' → logprob: -3.2920544147491455
    5. 'count' → logprob: -8.292054176330566
    6. ')
' → logprob: -9.167054176330566
    7. ',' → logprob: -10.292054176330566
    8. ')

' → logprob: -10.667054176330566
    9. '#' → logprob: -11.042054176330566
    10. ' print' → logprob: -11.292054176330566

Token 723: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.693199098110199
    2. 'result' → logprob: -0.693199098110199
    3. 'answer' → logprob: -10.818199157714844
    4. 'res' → logprob: -11.193199157714844
    5. '
' → logprob: -11.818199157714844
    6. 'count' → logprob: -12.068199157714844
    7. 'ans' → logprob: -13.568199157714844
    8. '```' → logprob: -13.568199157714844
    9. 'final' → logprob: -13.818199157714844
    10. '=' → logprob: -14.943199157714844

Token 724: ' rester' (ID: 54655)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005927847698330879
    2. 'count' → logprob: -5.380928039550781
    3. 'result' → logprob: -7.630928039550781
    4. ' print' → logprob: -8.130928039550781
    5. 'final' → logprob: -8.630928039550781
    6. 'le' → logprob: -8.755928039550781
    7. 'comp' → logprob: -9.130928039550781
    8. 'aff' → logprob: -11.505928039550781
    9. '#' → logprob: -11.755928039550781
    10. ' garantir' → logprob: -11.880928039550781

Token 725: ' dans' (ID: 2671)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5696629881858826
    2. 'count' → logprob: -1.0696630477905273
    3. 'dans' → logprob: -4.069663047790527
    4. 'consistent' → logprob: -4.194663047790527
    5. '%' → logprob: -4.319663047790527
    6. 'result' → logprob: -4.444663047790527
    7. 'final' → logprob: -4.444663047790527
    8. '=' → logprob: -4.819663047790527
    9. '(count' → logprob: -5.569663047790527
    10. '(mod' → logprob: -6.319663047790527

Token 726: ' la' (ID: 557)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.676981345459353e-06
    2. ' mod' → logprob: -12.125005722045898
    3. '(mod' → logprob: -15.625005722045898
    4. '```' → logprob: -17.8750057220459
    5. '	mod' → logprob: -18.6250057220459
    6. 'count' → logprob: -18.7500057220459
    7. '100' → logprob: -20.2500057220459
    8. 'the' → logprob: -20.2500057220459
    9. '_mod' → logprob: -21.0000057220459
    10. 'MOD' → logprob: -21.2500057220459

Token 727: ' plage' (ID: 78241)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1310299187898636
    2. 'result' → logprob: -2.6310298442840576
    3. 'range' → logprob: -3.7560298442840576
    4. 'count' → logprob: -4.381030082702637
    5. 'limit' → logprob: -5.506030082702637
    6. '```' → logprob: -5.756030082702637
    7. 'res' → logprob: -6.131030082702637
    8. 'final' → logprob: -7.131030082702637
    9. 'value' → logprob: -7.256030082702637
    10. 'val' → logprob: -7.506030082702637

Token 728: ' des' (ID: 731)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3520115613937378
    2. 'print' → logprob: -1.2270115613937378
    3. '(result' → logprob: -6.352011680603027
    4. 'count' → logprob: -7.727011680603027
    5. 'final' → logprob: -7.727011680603027
    6. 'res' → logprob: -7.852011680603027
    7. '#' → logprob: -8.602011680603027
    8. '(' → logprob: -9.727011680603027
    9. '.
' → logprob: -10.227011680603027
    10. '=' → logprob: -10.477011680603027

Token 729: ' valeurs' (ID: 73668)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.91732100979425e-05
    2. 'val' → logprob: -10.375039100646973
    3. ' mod' → logprob: -12.625039100646973
    4. 'ent' → logprob: -13.125039100646973
    5. 'int' → logprob: -14.750039100646973
    6. 'values' → logprob: -14.875039100646973
    7. '0' → logprob: -15.000039100646973
    8. '100' → logprob: -15.250039100646973
    9. '(mod' → logprob: -15.500039100646973
    10. '10' → logprob: -15.750039100646973

Token 730: ' possibles' (ID: 97753)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2018352597951889
    2. 'result' → logprob: -1.70183527469635
    3. 'count' → logprob: -8.076835632324219
    4. '=' → logprob: -10.201835632324219
    5. 'answer' → logprob: -10.951835632324219
    6. '```' → logprob: -10.951835632324219
    7. '
' → logprob: -11.201835632324219
    8. ' =' → logprob: -11.326835632324219
    9. 'res' → logprob: -11.701835632324219
    10. 'ans' → logprob: -13.701835632324219

Token 731: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04861303046345711
    2. 'result' → logprob: -3.0486130714416504
    3. '
' → logprob: -11.298612594604492
    4. 'count' → logprob: -11.673612594604492
    5. '```' → logprob: -13.298612594604492
    6. 'answer' → logprob: -13.548612594604492
    7. 'res' → logprob: -13.673612594604492
    8. ' print' → logprob: -15.798612594604492
    9. 'final' → logprob: -15.798612594604492
    10. 'ans' → logprob: -16.423612594604492

Token 732: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06198180466890335
    2. 'result' → logprob: -2.8119819164276123
    3. '```' → logprob: -11.811982154846191
    4. 'res' → logprob: -12.561982154846191
    5. 'answer' → logprob: -13.061982154846191
    6. '
' → logprob: -14.561982154846191
    7. 'ans' → logprob: -14.936982154846191
    8. 'final' → logprob: -16.436981201171875
    9. 'count' → logprob: -16.936981201171875
    10. 'output' → logprob: -17.811981201171875

Token 733: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00525154173374176
    2. 'result' → logprob: -5.255251407623291
    3. 'res' → logprob: -11.25525188446045
    4. 'ans' → logprob: -12.63025188446045
    5. 'answer' → logprob: -13.88025188446045
    6. '```' → logprob: -15.13025188446045
    7. '
' → logprob: -16.380250930786133
    8. 'count' → logprob: -16.755250930786133
    9. 'r' → logprob: -16.880250930786133
    10. 'final' → logprob: -17.005250930786133

Token 734: ' Enfin' (ID: 85274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.927930654550437e-05
    2. 'result' → logprob: -10.500029563903809
    3. ' print' → logprob: -13.500029563903809
    4. '#' → logprob: -16.000028610229492
    5. 'count' → logprob: -16.500028610229492
    6. 'final' → logprob: -18.000028610229492
    7. '
' → logprob: -18.250028610229492
    8. 'res' → logprob: -18.750028610229492
    9. 'answer' → logprob: -19.000028610229492
    10. '```' → logprob: -19.125028610229492

Token 735: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012492113746702671
    2. ' print' → logprob: -4.6374921798706055
    3. 'aff' → logprob: -6.7624921798706055
    4. '#' → logprob: -7.0124921798706055
    5. ' affiche' → logprob: -8.762492179870605
    6. ':' → logprob: -9.387492179870605
    7. ' imprime' → logprob: -9.762492179870605
    8. '=' → logprob: -9.762492179870605
    9. 'mod' → logprob: -10.512492179870605
    10. 'prints' → logprob: -10.637492179870605

Token 736: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.375
    3. 'count' → logprob: -19.0
    4. '
' → logprob: -19.0
    5. '#' → logprob: -19.25
    6. 'result' → logprob: -20.5
    7. '```' → logprob: -21.0
    8. 'pr' → logprob: -21.125
    9. '#print' → logprob: -21.625
    10. ')' → logprob: -22.875

Token 737: ' le' (ID: 505)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.09695325791835785
    2. '(print' → logprob: -2.7219531536102295
    3. '(' → logprob: -4.346953392028809
    4. 'print' → logprob: -4.471953392028809
    5. 'count' → logprob: -6.846953392028809
    6. '((' → logprob: -6.971953392028809
    7. '(result' → logprob: -8.346953392028809
    8. '(
' → logprob: -11.221953392028809
    9. '(pow' → logprob: -11.471953392028809
    10. '()' → logprob: -12.221953392028809

Token 738: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09946206957101822
    2. '(result' → logprob: -2.7244620323181152
    3. 'count' → logprob: -3.8494620323181152
    4. '(count' → logprob: -5.599462032318115
    5. 'final' → logprob: -6.724462032318115
    6. '(' → logprob: -7.099462032318115
    7. 'pow' → logprob: -7.224462032318115
    8. 'rés' → logprob: -7.474462032318115
    9. 'print' → logprob: -7.724462032318115
    10. 'res' → logprob: -8.724462509155273

Token 739: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. '
' → logprob: -12.750003814697266
    3. '```' → logprob: -14.000003814697266
    4. '(print' → logprob: -16.875003814697266
    5. ')
' → logprob: -18.000003814697266
    6. ' print' → logprob: -18.125003814697266
    7. '``' → logprob: -19.625003814697266
    8. '#print' → logprob: -19.875003814697266
    9. '(' → logprob: -20.375003814697266
    10. '`
' → logprob: -20.625003814697266

Token 740: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -18.250001907348633
    4. '(print' → logprob: -20.375001907348633
    5. '#print' → logprob: -22.125001907348633
    6. '``' → logprob: -23.125001907348633
    7. '
' → logprob: -23.250001907348633
    8. 'prin' → logprob: -23.375001907348633
    9. 'pr' → logprob: -23.500001907348633
    10. '   ' → logprob: -23.750001907348633

Token 741: '().
' (ID: 58434)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.662937372922897e-05
    2. '(print' → logprob: -9.250096321105957
    3. '```' → logprob: -14.875096321105957
    4. '(' → logprob: -16.125097274780273
    5. '(
' → logprob: -18.125097274780273
    6. '
' → logprob: -18.125097274780273
    7. ' print' → logprob: -18.250097274780273
    8. '()
' → logprob: -19.375097274780273
    9. '(count' → logprob: -19.625097274780273
    10. 'count' → logprob: -20.125097274780273

Token 742: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.000001907348633
    3. '``' → logprob: -19.125001907348633
    4. ' print' → logprob: -19.750001907348633
    5. '
' → logprob: -21.125001907348633
    6. '(print' → logprob: -22.625001907348633
    7. 'pr' → logprob: -23.500001907348633
    8. '`' → logprob: -24.000001907348633
    9. 'prin' → logprob: -24.250001907348633
    10. '`
' → logprob: -24.375001907348633

Token 743: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.13944147527217865
    2. '(' → logprob: -2.13944149017334
    3. '((' → logprob: -4.38944149017334
    4. ' (' → logprob: -10.63944149017334
    5. 'count' → logprob: -13.51444149017334
    6. '(
' → logprob: -13.63944149017334
    7. '(print' → logprob: -14.88944149017334
    8. '(c' → logprob: -15.63944149017334
    9. '()' → logprob: -15.63944149017334
    10. '(((' → logprob: -15.76444149017334

Token 744: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02682640217244625
    2. '*' → logprob: -4.02682638168335
    3. ',' → logprob: -4.77682638168335
    4. ')' → logprob: -8.651826858520508
    5. ' ,' → logprob: -11.276826858520508
    6. '(' → logprob: -12.026826858520508
    7. '(m' → logprob: -12.276826858520508
    8. ' ' → logprob: -12.401826858520508
    9. ' ' → logprob: -12.401826858520508
    10. '   ' → logprob: -13.151826858520508

Token 745: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0004324573092162609
    2. ' mp' → logprob: -7.75043249130249
    3. '(mp' → logprob: -13.375432014465332
    4. '(m' → logprob: -16.00043296813965
    5. '	mp' → logprob: -16.62543296813965
    6. 'pow' → logprob: -18.87543296813965
    7. 'm' → logprob: -18.87543296813965
    8. '(' → logprob: -19.37543296813965
    9. '/mp' → logprob: -19.87543296813965
    10. '   ' → logprob: -20.12543296813965

Token 746: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -5.8961017202818766e-05
    2. 'pow' → logprob: -9.750059127807617
    3. ' ow' → logprob: -15.000059127807617
    4. 'w' → logprob: -15.875059127807617
    5. 'pw' → logprob: -17.125059127807617
    6. 'o' → logprob: -17.250059127807617
    7. '**' → logprob: -17.750059127807617
    8. ' pow' → logprob: -17.750059127807617
    9. '(' → logprob: -18.000059127807617
    10. 'wow' → logprob: -18.125059127807617

Token 747: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.250000953674316
    3. '2' → logprob: -15.750000953674316
    4. '(
' → logprob: -16.5
    5. '((' → logprob: -18.375
    6. '(

' → logprob: -20.5
    7. '```' → logprob: -21.25
    8. '4' → logprob: -21.75
    9. ')(' → logprob: -22.625
    10. '(`' → logprob: -22.625

Token 748: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '(' → logprob: -19.375
    4. ')' → logprob: -21.375
    5. '۲' → logprob: -21.75
    6. '  ' → logprob: -22.0
    7. '   ' → logprob: -22.25
    8. '２' → logprob: -22.25
    9. '22' → logprob: -23.5
    10. '```' → logprob: -23.875

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007912516593933105
    2. '(' → logprob: -5.007912635803223
    3. ',N' → logprob: -7.632912635803223
    4. ' ,' → logprob: -8.007912635803223
    5. '(N' → logprob: -8.007912635803223
    6. '2' → logprob: -11.507912635803223
    7. ' ' → logprob: -11.882912635803223
    8. ',n' → logprob: -11.882912635803223
    9. ',(' → logprob: -12.007912635803223
    10. ' (' → logprob: -12.382912635803223

Token 750: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00046630011638626456
    2. ' N' → logprob: -7.750466346740723
    3. '(N' → logprob: -10.250466346740723
    4. ' (' → logprob: -15.125466346740723
    5. '(' → logprob: -18.125465393066406
    6. '	N' → logprob: -18.625465393066406
    7. ' ' → logprob: -19.625465393066406
    8. '<N' → logprob: -19.750465393066406
    9. '{' → logprob: -20.000465393066406
    10. '   ' → logprob: -20.375465393066406

Token 751: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009756323881447315
    2. ' -' → logprob: -4.634756088256836
    3. ' ' → logprob: -15.384756088256836
    4. '   ' → logprob: -16.009756088256836
    5. '-
' → logprob: -17.759756088256836
    6. '  ' → logprob: -18.009756088256836
    7. '```' → logprob: -18.134756088256836
    8. '\-' → logprob: -18.759756088256836
    9. '−' → logprob: -18.884756088256836
    10. '(' → logprob: -19.384756088256836

Token 752: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7016865611076355
    2. '1' → logprob: -0.7016865611076355
    3. '(' → logprob: -5.201686382293701
    4. '(N' → logprob: -6.076686382293701
    5. 'N' → logprob: -7.576686382293701
    6. ' -' → logprob: -9.07668685913086
    7. '   ' → logprob: -10.45168685913086
    8. ' (' → logprob: -10.95168685913086
    9. ' ' → logprob: -11.07668685913086
    10. '```' → logprob: -12.57668685913086

Token 753: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005303950165398419
    2. '*' → logprob: -7.750530242919922
    3. '**' → logprob: -10.625530242919922
    4. ')**' → logprob: -10.875530242919922
    5. ' *' → logprob: -11.125530242919922
    6. '%' → logprob: -11.375530242919922
    7. '))' → logprob: -11.750530242919922
    8. ')*' → logprob: -11.750530242919922
    9. ',' → logprob: -12.250530242919922
    10. '```' → logprob: -12.500530242919922

Token 754: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08869056403636932
    2. '*' → logprob: -2.5886905193328857
    3. ')' → logprob: -4.838690757751465
    4. '%' → logprob: -7.213690757751465
    5. '**' → logprob: -7.213690757751465
    6. ' %' → logprob: -8.213690757751465
    7. '   ' → logprob: -10.713690757751465
    8. ' ' → logprob: -10.838690757751465
    9. '```' → logprob: -11.088690757751465
    10. ',' → logprob: -11.338690757751465

Token 755: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.1472419600977446e-06
    2. ' mp' → logprob: -13.750000953674316
    3. '(mp' → logprob: -19.625001907348633
    4. 'count' → logprob: -20.750001907348633
    5. '	mp' → logprob: -20.875001907348633
    6. 'print' → logprob: -23.250001907348633
    7. '/mp' → logprob: -23.375001907348633
    8. 'ms' → logprob: -24.375001907348633
    9. '   ' → logprob: -24.500001907348633
    10. 'MP' → logprob: -24.500001907348633

Token 756: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -4.246537173457909e-06
    2. 'pow' → logprob: -12.500003814697266
    3. 'w' → logprob: -14.875003814697266
    4. ' ow' → logprob: -17.000003814697266
    5. '(' → logprob: -17.875003814697266
    6. ' pow' → logprob: -19.375003814697266
    7. '
' → logprob: -19.375003814697266
    8. 'pw' → logprob: -19.625003814697266
    9. 'o' → logprob: -20.000003814697266
    10. '**' → logprob: -20.000003814697266

Token 757: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.00000286102295
    3. '2' → logprob: -15.75000286102295
    4. '(
' → logprob: -16.125001907348633
    5. '((' → logprob: -18.500001907348633
    6. '```' → logprob: -19.875001907348633
    7. ')' → logprob: -20.000001907348633
    8. '(

' → logprob: -20.250001907348633
    9. ')(' → logprob: -21.250001907348633
    10. ' ' → logprob: -21.375001907348633

Token 758: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -11.000019073486328
    3. ' ' → logprob: -12.875019073486328
    4. '   ' → logprob: -19.125019073486328
    5. '(N' → logprob: -19.125019073486328
    6. 'N' → logprob: -20.000019073486328
    7. '  ' → logprob: -20.500019073486328
    8. '۲' → logprob: -20.875019073486328
    9. ')' → logprob: -21.000019073486328
    10. ' (' → logprob: -21.250019073486328

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003054301778320223
    2. ',N' → logprob: -8.37530517578125
    3. ' ,' → logprob: -9.75030517578125
    4. '(N' → logprob: -12.00030517578125
    5. 'N' → logprob: -12.37530517578125
    6. '(' → logprob: -12.62530517578125
    7. '-' → logprob: -13.12530517578125
    8. ',
' → logprob: -15.25030517578125
    9. ' (' → logprob: -15.50030517578125
    10. ',n' → logprob: -16.50030517578125

Token 760: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00038038729690015316
    2. ' N' → logprob: -7.875380516052246
    3. ' ' → logprob: -16.12537956237793
    4. '   ' → logprob: -16.62537956237793
    5. '(N' → logprob: -17.62537956237793
    6. '	N' → logprob: -18.25037956237793
    7. '  ' → logprob: -18.37537956237793
    8. ' (' → logprob: -18.87537956237793
    9. ' ' → logprob: -19.62537956237793
    10. '(' → logprob: -20.12537956237793

Token 761: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0206720617134124e-05
    2. ' -' → logprob: -11.50001049041748
    3. '1' → logprob: -18.500009536743164
    4. '−' → logprob: -19.000009536743164
    5. '   ' → logprob: -19.625009536743164
    6. ')' → logprob: -20.375009536743164
    7. ')-' → logprob: -20.375009536743164
    8. '-
' → logprob: -20.500009536743164
    9. ''-' → logprob: -20.875009536743164
    10. ' ' → logprob: -21.375009536743164

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -17.375
    4. '-' → logprob: -18.125
    5. '   ' → logprob: -19.125
    6. 'N' → logprob: -19.75
    7. '１' → logprob: -19.8125
    8. '(' → logprob: -20.125
    9. '۱' → logprob: -20.25
    10. '2' → logprob: -20.6875

Token 763: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08222833275794983
    2. '%' → logprob: -2.582228422164917
    3. ' %' → logprob: -5.832228183746338
    4. ')%' → logprob: -7.832228183746338
    5. '))' → logprob: -13.832228660583496
    6. ' )' → logprob: -14.082228660583496
    7. '}' → logprob: -14.082228660583496
    8. ' ' → logprob: -14.207228660583496
    9. '%s' → logprob: -14.957228660583496
    10. ' ' → logprob: -15.332228660583496

Token 764: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.038147177547216415
    2. ' %' → logprob: -3.288147211074829
    3. ')' → logprob: -9.16314697265625
    4. ')%' → logprob: -14.28814697265625
    5. ' ' → logprob: -16.16314697265625
    6. ' ' → logprob: -16.78814697265625
    7. '%m' → logprob: -17.41314697265625
    8. '%s' → logprob: -18.16314697265625
    9. '```' → logprob: -18.16314697265625
    10. '%n' → logprob: -19.03814697265625

Token 765: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0024799390230327845
    2. ' mod' → logprob: -6.0024800300598145
    3. '(mod' → logprob: -12.377479553222656
    4. '	mod' → logprob: -17.877479553222656
    5. ' мод' → logprob: -20.752479553222656
    6. '_mod' → logprob: -21.502479553222656
    7. ' ' → logprob: -21.752479553222656
    8. ' ' → logprob: -21.752479553222656
    9. '(' → logprob: -21.877479553222656
    10. 'MOD' → logprob: -22.002479553222656

Token 766: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -16.750001907348633
    4. '))' → logprob: -17.750001907348633
    5. ')`' → logprob: -17.875001907348633
    6. '())' → logprob: -19.500001907348633
    7. '),' → logprob: -19.625001907348633
    8. ')#' → logprob: -19.625001907348633
    9. ')}' → logprob: -20.125001907348633
    10. ')

' → logprob: -20.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 764
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 197
Tokens correctement prédits (top 10): 414
Précision stricte (1ère position): 25.13%
Précision adaptée (1ère position): 25.79%
Précision (top 10): 54.19%
================================================================================
