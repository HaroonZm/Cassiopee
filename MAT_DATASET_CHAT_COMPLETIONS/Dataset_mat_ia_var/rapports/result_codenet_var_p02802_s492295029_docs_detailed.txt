================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    """
    Reads problem submissions, counts the number of accepted problems and the total number of failed attempts
    for those accepted problems before their first 'AC' verdict.

    Input:
        First line: two integers N (number of problems), M (number of submissions)
        Next M lines: each line contains 'p s' where p is problem number (1-indexed), s is verdict ('AC' or 'WA')

    Output:
        Prints two integers: total number of accepted problems, and total number of failed attempts (for solved problems).
    """
    # Read the numbers of problems (N) and submissions (M)
    N, M = map(int, input().split())

    # Arrays to keep track of AC status and number of WA attempts for each problem
    ac = [0 for _ in range(N)]  # ac[i] = 1 if problem i has been solved, 0 otherwise
    wa = [0 for _ in range(N)]  # wa[i] = number of wrong attempts before first correct submission for problem i

    # Process each submission
    for _ in range(M):
        p, s = input().split()
        p = int(p) - 1  # Convert problem number to 0-based index
        
        if s == 'AC':
            # If the problem wasn't accepted before, mark as accepted
            ac[p] = 1
        else:
            # Only count wrong attempts before the problem is accepted
            if ac[p] == 0:
                wa[p] += 1

    # After all submissions, set the wrong attempt counter to zero for unsolved problems
    for i in range(N):
        if ac[i] == 0:
            wa[i] = 0

    # Output total number of solved problems and total number of wrong attempts for solved problems
    print(str(sum(ac)) + " " + str(sum(wa)))


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2690906822681427
    2. '\n' → logprob: -1.8940906524658203
    3. 'import' → logprob: -3.3940906524658203
    4. '<|end|>' → logprob: -3.8940906524658203
    5. '\' → logprob: -4.76909065246582
    6. '[' → logprob: -5.51909065246582
    7. 'newline' → logprob: -5.64409065246582
    8. '
' → logprob: -5.64409065246582
    9. '' → logprob: -5.89409065246582
    10. '<|end|>' → logprob: -6.51909065246582

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04091703146696091
    2. ' main' → logprob: -4.915916919708252
    3. ' space' → logprob: -5.165916919708252
    4. ' process' → logprob: -5.415916919708252
    5. ' ' → logprob: -6.040916919708252
    6. ' sys' → logprob: -6.165916919708252
    7. ' my' → logprob: -6.415916919708252
    8. ' function' → logprob: -6.790916919708252
    9. ' system' → logprob: -6.915916919708252
    10. ' a' → logprob: -6.915916919708252

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007917128503322601
    2. '():' → logprob: -5.3829169273376465
    3. '(:' → logprob: -6.0079169273376465
    4. ':' → logprob: -7.2579169273376465
    5. '(
' → logprob: -10.257917404174805
    6. ' (' → logprob: -10.757917404174805
    7. '(":' → logprob: -10.882917404174805
    8. '(`' → logprob: -11.632917404174805
    9. '):' → logprob: -11.632917404174805
    10. '```' → logprob: -12.507917404174805

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12462575733661652
    2. '(' → logprob: -2.7496256828308105
    3. '\' → logprob: -3.3746256828308105
    4. '    ' → logprob: -5.6246256828308105
    5. '(sys' → logprob: -5.6246256828308105
    6. ':' → logprob: -6.1246256828308105
    7. '()' → logprob: -6.1246256828308105
    8. 'print' → logprob: -6.6246256828308105
    9. '\n' → logprob: -6.7496256828308105
    10. '```' → logprob: -6.8746256828308105

Token 7: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12341000139713287
    2. '   ' → logprob: -3.2484099864959717
    3. 'pass' → logprob: -3.3734099864959717
    4. '    ' → logprob: -3.6234099864959717
    5. 'p' → logprob: -5.498410224914551
    6. ' ' → logprob: -5.998410224914551
    7. ' print' → logprob: -6.498410224914551
    8. 'i' → logprob: -6.748410224914551
    9. 'if' → logprob: -6.998410224914551
    10. 'pr' → logprob: -6.998410224914551

Token 8: '   ' (ID: 271)
  Prédit: 'Process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Process' → logprob: -1.4303058385849
    2. '   ' → logprob: -1.6803058385849
    3. 'Print' → logprob: -2.0553059577941895
    4. 'Run' → logprob: -2.3053059577941895
    5. 'This' → logprob: -2.6803059577941895
    6. 'Parse' → logprob: -2.8053059577941895
    7. 'Initialize' → logprob: -3.4303059577941895
    8. 'Calculate' → logprob: -3.6803059577941895
    9. 'Read' → logprob: -3.9303059577941895
    10. 'Handle' → logprob: -4.0553059577941895

Token 9: ' Reads' (ID: 88839)
  Prédit: 'Print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Print' → logprob: -1.0056886672973633
    2. 'Process' → logprob: -1.5056886672973633
    3. 'This' → logprob: -2.3806886672973633
    4. '   ' → logprob: -3.0056886672973633
    5. 'print' → logprob: -3.1306886672973633
    6. 'Calculate' → logprob: -3.1306886672973633
    7. 'Parse' → logprob: -3.5056886672973633
    8. 'Run' → logprob: -3.7556886672973633
    9. 'Initialize' → logprob: -4.005688667297363
    10. '"""' → logprob: -4.005688667297363

Token 10: ' problem' (ID: 4792)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1159123182296753
    2. ' input' → logprob: -1.1159123182296753
    3. ' from' → logprob: -1.8659123182296753
    4. ' the' → logprob: -1.9909123182296753
    5. ' user' → logprob: -4.365912437438965
    6. 'input' → logprob: -5.240912437438965
    7. ' ' → logprob: -5.240912437438965
    8. ' data' → logprob: -5.365912437438965
    9. ' lines' → logprob: -5.365912437438965
    10. ' )' → logprob: -5.490912437438965

Token 11: ' submissions' (ID: 60667)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3933955132961273
    2. ' description' → logprob: -1.2683955430984497
    3. ' statement' → logprob: -3.89339542388916
    4. 'input' → logprob: -4.89339542388916
    5. ' details' → logprob: -5.14339542388916
    6. ' data' → logprob: -6.01839542388916
    7. ' inputs' → logprob: -6.26839542388916
    8. 'description' → logprob: -6.76839542388916
    9. '_input' → logprob: -6.89339542388916
    10. '_description' → logprob: -7.01839542388916

Token 12: ',' (ID: 11)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3952244520187378
    2. '   ' → logprob: -1.2702244520187378
    3. ' and' → logprob: -3.8952245712280273
    4. 'from' → logprob: -4.020224571228027
    5. ' for' → logprob: -6.270224571228027
    6. ' ' → logprob: -6.270224571228027
    7. ' to' → logprob: -6.895224571228027
    8. '.' → logprob: -7.520224571228027
    9. '    ' → logprob: -7.895224571228027
    10. ',' → logprob: -8.270224571228027

Token 13: ' counts' (ID: 28991)
  Prédit: ' processes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.08017483353614807
    2. '   ' → logprob: -3.3301749229431152
    3. ' process' → logprob: -4.955174922943115
    4. ' and' → logprob: -4.955174922943115
    5. ' parses' → logprob: -4.955174922943115
    6. 'process' → logprob: -5.330174922943115
    7. ' filters' → logprob: -5.455174922943115
    8. '    ' → logprob: -5.705174922943115
    9. ' checks' → logprob: -5.705174922943115
    10. ' analyzes' → logprob: -6.330174922943115

Token 14: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.029891764745116234
    2. ' ' → logprob: -4.1548919677734375
    3. ' and' → logprob: -5.4048919677734375
    4. 'the' → logprob: -6.1548919677734375
    5. ' unique' → logprob: -6.7798919677734375
    6. ' number' → logprob: -7.0298919677734375
    7. ' their' → logprob: -7.4048919677734375
    8. '    ' → logprob: -7.5298919677734375
    9. ' accepted' → logprob: -7.5298919677734375
    10. ' tokens' → logprob: -7.6548919677734375

Token 15: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.01894274167716503
    2. ' unique' → logprob: -4.768942832946777
    3. 'number' → logprob: -5.268942832946777
    4. ' total' → logprob: -5.893942832946777
    5. ' accepted' → logprob: -7.643942832946777
    6. ' successful' → logprob: -8.143942832946777
    7. 'm' → logprob: -8.268942832946777
    8. ' frequency' → logprob: -8.393942832946777
    9. ' submissions' → logprob: -8.393942832946777
    10. 'unique' → logprob: -8.768942832946777

Token 16: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1093529537320137
    2. 's' → logprob: -3.1093530654907227
    3. 'of' → logprob: -3.1093530654907227
    4. '_' → logprob: -4.484353065490723
    5. '_of' → logprob: -6.734353065490723
    6. ' ' → logprob: -6.984353065490723
    7. '   ' → logprob: -9.359353065490723
    8. '_tokens' → logprob: -9.484353065490723
    9. '_s' → logprob: -9.609353065490723
    10. ')' → logprob: -9.609353065490723

Token 17: ' accepted' (ID: 17562)
  Prédit: ' accepted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accepted' → logprob: -0.11694635450839996
    2. ' ' → logprob: -2.8669464588165283
    3. ' unique' → logprob: -4.116946220397949
    4. 'accepted' → logprob: -4.741946220397949
    5. ' each' → logprob: -5.241946220397949
    6. ' successful' → logprob: -5.366946220397949
    7. ' submissions' → logprob: -5.866946220397949
    8. '   ' → logprob: -6.241946220397949
    9. ' Accepted' → logprob: -6.491946220397949
    10. ' approved' → logprob: -6.741946220397949

Token 18: ' problems' (ID: 6840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1699679046869278
    2. ' solutions' → logprob: -2.5449678897857666
    3. ' submissions' → logprob: -3.9199678897857666
    4. ' and' → logprob: -4.044968128204346
    5. ' sub' → logprob: -4.294968128204346
    6. '_' → logprob: -4.794968128204346
    7. '   ' → logprob: -5.919968128204346
    8. '  ' → logprob: -6.169968128204346
    9. ' s' → logprob: -6.544968128204346
    10. '_sub' → logprob: -6.544968128204346

Token 19: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.477097749710083
    2. '   ' → logprob: -1.102097749710083
    3. ' and' → logprob: -3.602097749710083
    4. ',
' → logprob: -5.352097511291504
    5. '
' → logprob: -5.477097511291504
    6. '.' → logprob: -5.977097511291504
    7. '```' → logprob: -5.977097511291504
    8. ' for' → logprob: -6.477097511291504
    9. ' ,' → logprob: -6.727097511291504
    10. 'and' → logprob: -7.102097511291504

Token 20: ' the' (ID: 290)
  Prédit: ' rejected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rejected' → logprob: -0.13290603458881378
    2. ' rejects' → logprob: -3.757905960083008
    3. ' returns' → logprob: -4.007905960083008
    4. ' solves' → logprob: -4.132905960083008
    5. ' calculates' → logprob: -4.632905960083008
    6. ' solved' → logprob: -4.757905960083008
    7. ' failed' → logprob: -5.007905960083008
    8. ' accepted' → logprob: -5.132905960083008
    9. '   ' → logprob: -5.257905960083008
    10. ' the' → logprob: -5.507905960083008

Token 21: ' total' (ID: 3609)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.2885831892490387
    2. ' total' → logprob: -1.5385831594467163
    3. 'number' → logprob: -4.413583278656006
    4. ' accepted' → logprob: -4.663583278656006
    5. 'total' → logprob: -5.288583278656006
    6. 'accepted' → logprob: -5.538583278656006
    7. ' unique' → logprob: -6.663583278656006
    8. ' rejected' → logprob: -6.788583278656006
    9. ' problems' → logprob: -7.413583278656006
    10. ' maximum' → logprob: -8.413582801818848

Token 22: ' number' (ID: 2086)
  Prédit: ' accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accepted' → logprob: -0.5273037552833557
    2. ' number' → logprob: -1.527303695678711
    3. ' submissions' → logprob: -2.652303695678711
    4. 'accepted' → logprob: -3.402303695678711
    5. ' ' → logprob: -3.902303695678711
    6. '   ' → logprob: -4.902303695678711
    7. '```' → logprob: -4.902303695678711
    8. '    ' → logprob: -5.027303695678711
    9. 'sub' → logprob: -5.527303695678711
    10. ' sub' → logprob: -5.527303695678711

Token 23: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.020294394344091415
    2. 'of' → logprob: -4.020294189453125
    3. '   ' → logprob: -7.145294189453125
    4. '    ' → logprob: -8.520294189453125
    5. ' ' → logprob: -8.645294189453125
    6. ')' → logprob: -8.770294189453125
    7. '	of' → logprob: -8.770294189453125
    8. '\n' → logprob: -9.020294189453125
    9. '\' → logprob: -9.270294189453125
    10. '_of' → logprob: -9.520294189453125

Token 24: ' failed' (ID: 9363)
  Prédit: ' accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accepted' → logprob: -0.1501157283782959
    2. 'accepted' → logprob: -3.275115728378296
    3. ' submissions' → logprob: -3.275115728378296
    4. 'sub' → logprob: -3.900115728378296
    5. ' problems' → logprob: -3.900115728378296
    6. ' sub' → logprob: -4.900115966796875
    7. ' submitted' → logprob: -5.650115966796875
    8. ' solved' → logprob: -5.900115966796875
    9. ' ' → logprob: -5.900115966796875
    10. 'pro' → logprob: -6.650115966796875

Token 25: ' attempts' (ID: 27747)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8065755367279053
    2. ' submissions' → logprob: -0.8065755367279053
    3. ' sub' → logprob: -2.8065755367279053
    4. 'sub' → logprob: -3.9315755367279053
    5. ' problems' → logprob: -5.056575775146484
    6. '_sub' → logprob: -5.181575775146484
    7. ' ones' → logprob: -5.931575775146484
    8. 's' → logprob: -5.931575775146484
    9. ' attempts' → logprob: -6.681575775146484
    10. ''' → logprob: -6.931575775146484

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1310746669769287
    2. ',' → logprob: -3.0060746669769287
    3. '.' → logprob: -3.0060746669769287
    4. ' before' → logprob: -4.881074905395508
    5. '"""' → logprob: -5.131074905395508
    6. '"""
' → logprob: -6.631074905395508
    7. '```' → logprob: -6.631074905395508
    8. ' for' → logprob: -6.631074905395508
    9. '
' → logprob: -6.881074905395508
    10. '.
' → logprob: -7.256074905395508

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05999872460961342
    2. '"""' → logprob: -3.0599987506866455
    3. '```' → logprob: -5.809998512268066
    4. '.' → logprob: -5.809998512268066
    5. ' for' → logprob: -6.559998512268066
    6. ',' → logprob: -6.809998512268066
    7. ' before' → logprob: -7.309998512268066
    8. '"""
' → logprob: -7.559998512268066
    9. ' to' → logprob: -7.809998512268066
    10. '"' → logprob: -8.184998512268066

Token 28: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2144932597875595
    2. '"""' → logprob: -1.7144932746887207
    3. '"""
' → logprob: -4.589493274688721
    4. '```' → logprob: -6.589493274688721
    5. '"' → logprob: -7.339493274688721
    6. '""' → logprob: -8.214492797851562
    7. '.' → logprob: -8.714492797851562
    8. '\n' → logprob: -9.464492797851562
    9. ' for' → logprob: -9.839492797851562
    10. ',' → logprob: -9.839492797851562

Token 29: ' those' (ID: 2617)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.006779673509299755
    2. ' the' → logprob: -5.881779670715332
    3. ' a' → logprob: -6.006779670715332
    4. ' all' → logprob: -7.131779670715332
    5. 'each' → logprob: -8.381779670715332
    6. ' ' → logprob: -8.506779670715332
    7. ' accepted' → logprob: -8.756779670715332
    8. ' every' → logprob: -10.006779670715332
    9. ' problems' → logprob: -11.006779670715332
    10. ' previous' → logprob: -11.881779670715332

Token 30: ' accepted' (ID: 17562)
  Prédit: ' problems'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.05593862012028694
    2. 'pro' → logprob: -3.180938720703125
    3. ' accepted' → logprob: -4.805938720703125
    4. 'accepted' → logprob: -6.305938720703125
    5. ' submissions' → logprob: -7.055938720703125
    6. '   ' → logprob: -7.930938720703125
    7. '"""
' → logprob: -8.305938720703125
    8. ' problem' → logprob: -8.555938720703125
    9. 'problem' → logprob: -8.930938720703125
    10. ' that' → logprob: -9.055938720703125

Token 31: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.3049231469631195
    2. '   ' → logprob: -2.6799230575561523
    3. '```' → logprob: -2.6799230575561523
    4. 'pro' → logprob: -3.1799230575561523
    5. '"""' → logprob: -3.3049230575561523
    6. '"""
' → logprob: -4.304923057556152
    7. '.' → logprob: -4.679923057556152
    8. ' """
' → logprob: -4.679923057556152
    9. ' """' → logprob: -5.054923057556152
    10. ' submissions' → logprob: -6.304923057556152

Token 32: ' before' (ID: 2254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0537547841668129
    2. '"""' → logprob: -3.3037548065185547
    3. '```' → logprob: -4.928754806518555
    4. '"""
' → logprob: -5.428754806518555
    5. '
' → logprob: -6.303754806518555
    6. '.' → logprob: -7.178754806518555
    7. '\n' → logprob: -7.678754806518555
    8. '"' → logprob: -8.428754806518555
    9. '""' → logprob: -8.678754806518555
    10. '    
' → logprob: -9.178754806518555

Token 33: ' their' (ID: 1043)
  Prédit: ' acceptance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acceptance' → logprob: -0.26073479652404785
    2. ' the' → logprob: -1.7607347965240479
    3. ' an' → logprob: -3.760734796524048
    4. ' a' → logprob: -4.510734558105469
    5. 'the' → logprob: -5.010734558105469
    6. 'accept' → logprob: -5.260734558105469
    7. ' they' → logprob: -5.260734558105469
    8. ' their' → logprob: -6.135734558105469
    9. ' first' → logprob: -7.010734558105469
    10. ' final' → logprob: -7.135734558105469

Token 34: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.6508315205574036
    2. ' acceptance' → logprob: -0.7758315205574036
    3. 'accept' → logprob: -4.525831699371338
    4. ' successful' → logprob: -6.275831699371338
    5. 'first' → logprob: -6.400831699371338
    6. 'accepted' → logprob: -6.775831699371338
    7. ' accepted' → logprob: -7.025831699371338
    8. ' accept' → logprob: -7.525831699371338
    9. ' final' → logprob: -7.775831699371338
    10. 'successful' → logprob: -8.77583122253418

Token 35: ' '' (ID: 461)
  Prédit: ' acceptance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acceptance' → logprob: -0.40296661853790283
    2. ' accepted' → logprob: -1.1529666185379028
    3. ' accept' → logprob: -4.777966499328613
    4. 'accepted' → logprob: -6.277966499328613
    5. 'accept' → logprob: -6.777966499328613
    6. ' submission' → logprob: -6.902966499328613
    7. ' Accepted' → logprob: -6.902966499328613
    8. ' successful' → logprob: -7.152966499328613
    9. '_accept' → logprob: -7.902966499328613
    10. ' ac' → logprob: -8.277966499328613

Token 36: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.8084439039230347
    2. 'Accepted' → logprob: -1.3084439039230347
    3. 'A' → logprob: -2.058444023132324
    4. ' Accepted' → logprob: -3.308444023132324
    5. ''' → logprob: -4.058444023132324
    6. 'accepted' → logprob: -4.058444023132324
    7. '"' → logprob: -4.183444023132324
    8. ' '' → logprob: -4.683444023132324
    9. 'ac' → logprob: -4.808444023132324
    10. 'a' → logprob: -4.808444023132324

Token 37: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4276067614555359
    2. '"'' → logprob: -1.3026068210601807
    3. '"' → logprob: -2.6776068210601807
    4. ''"' → logprob: -5.302606582641602
    5. ''''' → logprob: -6.677606582641602
    6. '"""' → logprob: -7.802606582641602
    7. ''
' → logprob: -8.802606582641602
    8. '''' → logprob: -9.177606582641602
    9. '')' → logprob: -9.677606582641602
    10. '"""
' → logprob: -9.802606582641602

Token 38: ' verdict' (ID: 75722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009184789843857288
    2. '\n' → logprob: -5.134184837341309
    3. '```' → logprob: -6.634184837341309
    4. '"""' → logprob: -7.634184837341309
    5. '
' → logprob: -7.759184837341309
    6. '\' → logprob: -7.884184837341309
    7. '    
' → logprob: -8.884184837341309
    8. '"' → logprob: -9.134184837341309
    9. '"""
' → logprob: -9.384184837341309
    10. '.' → logprob: -9.509184837341309

Token 39: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05223415791988373
    2. '\n' → logprob: -3.927234172821045
    3. '\' → logprob: -4.677234172821045
    4. '```' → logprob: -4.927234172821045
    5. '
' → logprob: -5.302234172821045
    6. '"""' → logprob: -5.427234172821045
    7. '    
' → logprob: -6.927234172821045
    8. '"' → logprob: -7.052234172821045
    9. '"""
' → logprob: -7.302234172821045
    10. '.' → logprob: -7.427234172821045

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03615153953433037
    2. '"""' → logprob: -3.411151647567749
    3. ' """' → logprob: -6.41115140914917
    4. '```' → logprob: -7.66115140914917
    5. '"' → logprob: -8.911151885986328
    6. '    ' → logprob: -9.536151885986328
    7. '  ' → logprob: -10.036151885986328
    8. '"""
' → logprob: -10.161151885986328
    9. '""' → logprob: -10.286151885986328
    10. ' """
' → logprob: -10.536151885986328

Token 41: ' Input' (ID: 10090)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015778718516230583
    2. '"""' → logprob: -4.515778541564941
    3. ' """' → logprob: -6.640778541564941
    4. '"""
' → logprob: -6.890778541564941
    5. ' """
' → logprob: -7.265778541564941
    6. 'Reads' → logprob: -7.640778541564941
    7. '    ' → logprob: -8.140778541564941
    8. '```' → logprob: -8.265778541564941
    9. '    
' → logprob: -8.765778541564941
    10. '""' → logprob: -9.015778541564941

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0883319228887558
    2. '_lines' → logprob: -4.213331699371338
    3. '():' → logprob: -4.338331699371338
    4. ':
' → logprob: -4.588331699371338
    5. '```' → logprob: -4.838331699371338
    6. ' lines' → logprob: -4.963331699371338
    7. ' =' → logprob: -5.338331699371338
    8. '()' → logprob: -5.713331699371338
    9. '<|end|>' → logprob: -5.713331699371338
    10. '   ' → logprob: -5.713331699371338

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42653319239616394
    2. '    ' → logprob: -1.6765332221984863
    3. '```' → logprob: -2.0515332221984863
    4. ' ' → logprob: -5.676533222198486
    5. ' """' → logprob: -5.676533222198486
    6. ' The' → logprob: -5.676533222198486
    7. ' ```' → logprob: -5.676533222198486
    8. '\n' → logprob: -6.051533222198486
    9. '\' → logprob: -6.176533222198486
    10. '"""' → logprob: -6.176533222198486

Token 44: ' First' (ID: 8338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6074981093406677
    2. 'n' → logprob: -2.4824981689453125
    3. ' n' → logprob: -2.4824981689453125
    4. ' lines' → logprob: -3.1074981689453125
    5. 'The' → logprob: -3.4824981689453125
    6. '"""
' → logprob: -3.9824981689453125
    7. ' The' → logprob: -4.1074981689453125
    8. ' T' → logprob: -4.2324981689453125
    9. ' input' → logprob: -4.3574981689453125
    10. '    ' → logprob: -4.4824981689453125

Token 45: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05909639224410057
    2. '_line' → logprob: -3.684096336364746
    3. ' ' → logprob: -4.184096336364746
    4. '   ' → logprob: -5.184096336364746
    5. ' lines' → logprob: -5.934096336364746
    6. 'line' → logprob: -5.934096336364746
    7. ' =' → logprob: -6.684096336364746
    8. '  ' → logprob: -6.809096336364746
    9. ' few' → logprob: -7.184096336364746
    10. ' input' → logprob: -7.309096336364746

Token 46: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7252745628356934
    2. ' =' → logprob: -2.2252745628356934
    3. ' of' → logprob: -2.4752745628356934
    4. '  ' → logprob: -3.1002745628356934
    5. '<|end|>' → logprob: -3.3502745628356934
    6. ' ' → logprob: -3.4752745628356934
    7. '```' → logprob: -3.7252745628356934
    8. ',' → logprob: -3.9752745628356934
    9. '    ' → logprob: -4.225274562835693
    10. '\' → logprob: -4.350274562835693

Token 47: ' two' (ID: 1920)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1767396181821823
    2. 'n' → logprob: -2.1767396926879883
    3. ' number' → logprob: -3.6767396926879883
    4. '   ' → logprob: -5.051739692687988
    5. ' int' → logprob: -5.176739692687988
    6. 'int' → logprob: -5.426739692687988
    7. ' ' → logprob: -5.926739692687988
    8. ' T' → logprob: -6.926739692687988
    9. ' N' → logprob: -7.176739692687988
    10. 'number' → logprob: -7.551739692687988

Token 48: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -9.817902173381299e-05
    2. ' numbers' → logprob: -9.75009822845459
    3. ' int' → logprob: -11.25009822845459
    4. ' ' → logprob: -11.37509822845459
    5. ' integer' → logprob: -11.75009822845459
    6. ' space' → logprob: -12.37509822845459
    7. ' ints' → logprob: -13.25009822845459
    8. 'inte' → logprob: -14.25009822845459
    9. ' variables' → logprob: -15.37509822845459
    10. 'int' → logprob: -16.000097274780273

Token 49: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32824501395225525
    2. ' n' → logprob: -1.3282450437545776
    3. ',' → logprob: -5.203245162963867
    4. ' ,' → logprob: -6.078245162963867
    5. 'n' → logprob: -7.203245162963867
    6. ' )' → logprob: -7.328245162963867
    7. '"' → logprob: -7.328245162963867
    8. ''' → logprob: -7.328245162963867
    9. ' and' → logprob: -7.328245162963867
    10. '  ' → logprob: -7.703245162963867

Token 50: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05091075599193573
    2. ' ,' → logprob: -3.175910711288452
    3. ' ' → logprob: -5.300910949707031
    4. '<|end|>' → logprob: -6.175910949707031
    5. ' and' → logprob: -7.800910949707031
    6. '  ' → logprob: -8.175910949707031
    7. '<|end|>' → logprob: -10.300910949707031
    8. ' (' → logprob: -10.925910949707031
    9. ')' → logprob: -11.425910949707031
    10. 'and' → logprob: -11.675910949707031

Token 51: 'number' (ID: 8096)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23519541323184967
    2. ' ,' → logprob: -1.6101953983306885
    3. ')' → logprob: -4.860195636749268
    4. ' )' → logprob: -6.735195636749268
    5. ' ' → logprob: -7.735195636749268
    6. ' and' → logprob: -9.23519515991211
    7. ',int' → logprob: -9.73519515991211
    8. '),' → logprob: -9.86019515991211
    9. 'and' → logprob: -10.23519515991211
    10. ',)' → logprob: -10.86019515991211

Token 52: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1505587249994278
    2. 'of' → logprob: -2.4005587100982666
    3. ')' → logprob: -4.025558948516846
    4. '_of' → logprob: -4.150558948516846
    5. '<|end|>' → logprob: -4.650558948516846
    6. '=' → logprob: -5.775558948516846
    7. ' ' → logprob: -6.900558948516846
    8. '  ' → logprob: -7.775558948516846
    9. '<|end|>' → logprob: -8.525558471679688
    10. '	of' → logprob: -8.650558471679688

Token 53: ' problems' (ID: 6840)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.3276621699333191
    2. ' problems' → logprob: -1.9526622295379639
    3. ' submissions' → logprob: -2.577662229537964
    4. ' ' → logprob: -3.452662229537964
    5. 'pro' → logprob: -3.952662229537964
    6. ' )' → logprob: -5.327661991119385
    7. 'sub' → logprob: -5.827661991119385
    8. ' sub' → logprob: -7.327661991119385
    9. ' submitted' → logprob: -7.952661991119385
    10. ')' → logprob: -7.952661991119385

Token 54: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2816406786441803
    2. ')' → logprob: -1.906640648841858
    3. ' and' → logprob: -2.9066407680511475
    4. ' ,' → logprob: -3.4066407680511475
    5. ' )' → logprob: -4.906640529632568
    6. 'and' → logprob: -6.656640529632568
    7. '),' → logprob: -8.281641006469727
    8. ' ),' → logprob: -9.906641006469727
    9. ' solved' → logprob: -10.906641006469727
    10. ' ' → logprob: -11.156641006469727

Token 55: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2067805528640747
    2. ' M' → logprob: -2.331780433654785
    3. '    ' → logprob: -2.956780433654785
    4. '   ' → logprob: -3.706780433654785
    5. '  ' → logprob: -5.206780433654785
    6. ' and' → logprob: -6.206780433654785
    7. ' K' → logprob: -6.581780433654785
    8. ' T' → logprob: -6.831780433654785
    9. '"' → logprob: -7.081780433654785
    10. '```' → logprob: -8.206780433654785

Token 56: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4301835596561432
    2. ' number' → logprob: -1.0551835298538208
    3. 'total' → logprob: -7.180183410644531
    4. ' total' → logprob: -8.305183410644531
    5. 'sub' → logprob: -8.555183410644531
    6. 'the' → logprob: -9.305183410644531
    7. ' submissions' → logprob: -9.805183410644531
    8. ' the' → logprob: -10.430183410644531
    9. ')' → logprob: -11.055183410644531
    10. '   ' → logprob: -11.180183410644531

Token 58: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06287920475006104
    2. 'of' → logprob: -3.0628790855407715
    3. 's' → logprob: -5.0628790855407715
    4. '=' → logprob: -5.6878790855407715
    5. ')' → logprob: -5.9378790855407715
    6. '_of' → logprob: -6.8128790855407715
    7. '<|end|>' → logprob: -8.56287956237793
    8. '	of' → logprob: -9.18787956237793
    9. '   ' → logprob: -9.18787956237793
    10. '[' → logprob: -9.56287956237793

Token 59: ' submissions' (ID: 60667)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.33281636238098145
    2. ' submissions' → logprob: -1.8328163623809814
    3. ' test' → logprob: -3.2078163623809814
    4. ' lines' → logprob: -4.332816123962402
    5. 'attempt' → logprob: -4.707816123962402
    6. ')' → logprob: -4.832816123962402
    7. ' attempts' → logprob: -4.957816123962402
    8. ' users' → logprob: -4.957816123962402
    9. 'participants' → logprob: -5.582816123962402
    10. 'users' → logprob: -5.582816123962402

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. '):' → logprob: -11.500029563903809
    3. ' )' → logprob: -12.000029563903809
    4. ')
' → logprob: -12.875029563903809
    5. '),' → logprob: -13.125029563903809
    6. ' lines' → logprob: -13.250029563903809
    7. '")' → logprob: -13.375029563903809
    8. '```' → logprob: -13.375029563903809
    9. ',' → logprob: -13.750029563903809
    10. ').' → logprob: -14.000029563903809

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7976131439208984
    2. '```' → logprob: -1.5476131439208984
    3. '\n' → logprob: -2.4226131439208984
    4. '\' → logprob: -2.5476131439208984
    5. ')' → logprob: -2.9226131439208984
    6. '"""' → logprob: -3.2976131439208984
    7. ',' → logprob: -4.297613143920898
    8. '""' → logprob: -4.672613143920898
    9. '"""
' → logprob: -4.797613143920898
    10. '
' → logprob: -4.922613143920898

Token 62: ' Next' (ID: 13886)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06879086047410965
    2. '\n' → logprob: -3.318790912628174
    3. '"""
' → logprob: -5.193790912628174
    4. '    ' → logprob: -5.443790912628174
    5. '```' → logprob: -5.443790912628174
    6. '    
' → logprob: -5.568790912628174
    7. ' 
' → logprob: -6.193790912628174
    8. '\' → logprob: -6.318790912628174
    9. '"""' → logprob: -6.568790912628174
    10. ' """
' → logprob: -7.068790912628174

Token 63: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.12235500663518906
    2. ' lines' → logprob: -2.2473549842834473
    3. ' N' → logprob: -5.122354984283447
    4. 'M' → logprob: -6.497354984283447
    5. ' line' → logprob: -7.247354984283447
    6. '   ' → logprob: -7.497354984283447
    7. ' ' → logprob: -8.372355461120605
    8. 'lines' → logprob: -8.372355461120605
    9. 'line' → logprob: -8.997355461120605
    10. '  ' → logprob: -9.122355461120605

Token 64: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.0001170132018160075
    2. ' line' → logprob: -9.250117301940918
    3. ' ' → logprob: -12.250117301940918
    4. '_lines' → logprob: -12.750117301940918
    5. ' tokens' → logprob: -12.750117301940918
    6. 'lines' → logprob: -12.750117301940918
    7. '	lines' → logprob: -13.250117301940918
    8. '   ' → logprob: -13.375117301940918
    9. ' linhas' → logprob: -14.250117301940918
    10. '(lines' → logprob: -14.375117301940918

Token 65: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' each' (ID: 2454)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.9790334701538086
    2. '    ' → logprob: -1.2290334701538086
    3. '   ' → logprob: -2.6040334701538086
    4. ' ' → logprob: -2.6040334701538086
    5. 'problem' → logprob: -2.9790334701538086
    6. '(problem' → logprob: -3.4790334701538086
    7. ' (' → logprob: -3.7290334701538086
    8. ' each' → logprob: -4.604033470153809
    9. ' submission' → logprob: -4.854033470153809
    10. 'Problem' → logprob: -5.479033470153809

Token 67: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16792452335357666
    2. ' submission' → logprob: -2.417924404144287
    3. ' contains' → logprob: -3.542924404144287
    4. 'submission' → logprob: -3.667924404144287
    5. 'line' → logprob: -4.792924404144287
    6. 'contains' → logprob: -7.917924404144287
    7. '   ' → logprob: -8.042924880981445
    8. ' a' → logprob: -8.042924880981445
    9. ' contain' → logprob: -8.167924880981445
    10. ' ' → logprob: -8.167924880981445

Token 68: ' contains' (ID: 8895)
  Prédit: ' contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.14791259169578552
    2. ' describes' → logprob: -2.7729125022888184
    3. ' represents' → logprob: -3.2729125022888184
    4. ' ' → logprob: -4.897912502288818
    5. ' consists' → logprob: -4.897912502288818
    6. ' has' → logprob: -5.022912502288818
    7. '<|end|>' → logprob: -5.397912502288818
    8. 'contains' → logprob: -6.272912502288818
    9. 's' → logprob: -6.647912502288818
    10. ' is' → logprob: -6.647912502288818

Token 69: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07618852704763412
    2. ' problem' → logprob: -3.451188564300537
    3. ' an' → logprob: -3.701188564300537
    4. 'problem' → logprob: -5.576188564300537
    5. ' the' → logprob: -5.701188564300537
    6. ' one' → logprob: -5.826188564300537
    7. ' two' → logprob: -6.451188564300537
    8. 'a' → logprob: -6.701188564300537
    9. ' three' → logprob: -6.951188564300537
    10. '   ' → logprob: -7.076188564300537

Token 70: 'p' (ID: 79)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.1643826961517334
    2. ' problem' → logprob: -2.4143826961517334
    3. 'pro' → logprob: -4.1643829345703125
    4. 'A' → logprob: -4.9143829345703125
    5. 'Problem' → logprob: -5.7893829345703125
    6. 'prob' → logprob: -5.7893829345703125
    7. 'P' → logprob: -5.9143829345703125
    8. 'int' → logprob: -6.0393829345703125
    9. 'p' → logprob: -6.1643829345703125
    10. ' a' → logprob: -6.1643829345703125

Token 71: ' s' (ID: 265)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.027283547446131706
    2. 'r' → logprob: -4.777283668518066
    3. 'rob' → logprob: -4.902283668518066
    4. '_id' → logprob: -5.027283668518066
    5. ' ro' → logprob: -7.027283668518066
    6. 'id' → logprob: -7.652283668518066
    7. '_i' → logprob: -8.027283668518066
    8. 'ID' → logprob: -8.152283668518066
    9. ' p' → logprob: -8.277283668518066
    10. 'i' → logprob: -8.402283668518066

Token 72: ''' (ID: 6)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5053088068962097
    2. ' '' → logprob: -1.7553088665008545
    3. ''' → logprob: -1.8803088665008545
    4. 'tr' → logprob: -3.7553088665008545
    5. 'ub' → logprob: -4.755308628082275
    6. ' t' → logprob: -5.255308628082275
    7. '```' → logprob: -5.255308628082275
    8. '')' → logprob: -5.505308628082275
    9. 'olution' → logprob: -5.630308628082275
    10. ' verdict' → logprob: -5.755308628082275

Token 73: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17359110713005066
    2. '```' → logprob: -2.923591136932373
    3. '
' → logprob: -3.423591136932373
    4. ' ' → logprob: -4.548591136932373
    5. '\n' → logprob: -4.923591136932373
    6. '<|end|>' → logprob: -5.048591136932373
    7. '    
' → logprob: -5.173591136932373
    8. ' =' → logprob: -5.173591136932373
    9. '  ' → logprob: -5.423591136932373
    10. '"""
' → logprob: -5.548591136932373

Token 74: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.017580848187208176
    2. 'p' → logprob: -4.642580986022949
    3. ' the' → logprob: -5.392580986022949
    4. ' problem' → logprob: -6.142580986022949
    5. 'problem' → logprob: -7.892580986022949
    6. 'the' → logprob: -8.01758098602295
    7. ' a' → logprob: -8.14258098602295
    8. ' ' → logprob: -11.14258098602295
    9. ' s' → logprob: -11.39258098602295
    10. ' problems' → logprob: -12.01758098602295

Token 75: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5850703120231628
    2. '<|end|>' → logprob: -1.8350703716278076
    3. ' ' → logprob: -2.0850703716278076
    4. ' (' → logprob: -2.7100703716278076
    5. ':' → logprob: -4.2100701332092285
    6. ' =' → logprob: -4.5850701332092285
    7. ' represents' → logprob: -4.7100701332092285
    8. '   ' → logprob: -5.0850701332092285
    9. ' p' → logprob: -5.0850701332092285
    10. ' _' → logprob: -5.2100701332092285

Token 76: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15520955622196198
    2. ' a' → logprob: -2.405209541320801
    3. 'the' → logprob: -3.155209541320801
    4. ' an' → logprob: -4.655209541320801
    5. ' p' → logprob: -7.530209541320801
    6. ' problem' → logprob: -7.780209541320801
    7. 'a' → logprob: -8.6552095413208
    8. 'problem' → logprob: -9.4052095413208
    9. 'an' → logprob: -10.0302095413208
    10. ' ' → logprob: -10.2802095413208

Token 77: ' number' (ID: 2086)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.9361914992332458
    2. ' number' → logprob: -1.3111915588378906
    3. ' index' → logprob: -1.5611915588378906
    4. '_number' → logprob: -3.0611915588378906
    5. ' ' → logprob: -4.061191558837891
    6. '_index' → logprob: -4.186191558837891
    7. ' id' → logprob: -4.311191558837891
    8. ' _' → logprob: -4.686191558837891
    9. ' ID' → logprob: -5.436191558837891
    10. 'index' → logprob: -5.436191558837891

Token 78: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5654992461204529
    2. ',' → logprob: -1.6904993057250977
    3. ' and' → logprob: -2.1904993057250977
    4. ' ,' → logprob: -2.4404993057250977
    5. ' ' → logprob: -3.3154993057250977
    6. '<|end|>' → logprob: -5.315499305725098
    7. '   ' → logprob: -6.440499305725098
    8. 's' → logprob: -7.065499305725098
    9. '```' → logprob: -7.315499305725098
    10. ')' → logprob: -7.315499305725098

Token 79: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.247731015086174
    2. ' int' → logprob: -1.6227309703826904
    3. '1' → logprob: -4.3727312088012695
    4. ')' → logprob: -5.6227312088012695
    5. ' str' → logprob: -6.2477312088012695
    6. 'str' → logprob: -7.2477312088012695
    7. ' ' → logprob: -7.6227312088012695
    8. '(int' → logprob: -8.12273120880127
    9. ' an' → logprob: -8.37273120880127
    10. '[int' → logprob: -8.37273120880127

Token 80: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.1475837230682373
    2. ' to' → logprob: -2.2725837230682373
    3. '-' → logprob: -3.7725837230682373
    4. '-index' → logprob: -5.772583961486816
    5. ' ≤' → logprob: -6.272583961486816
    6. 'based' → logprob: -6.397583961486816
    7. ')' → logprob: -6.647583961486816
    8. 'to' → logprob: -7.022583961486816
    9. '≤' → logprob: -7.772583961486816
    10. ' -' → logprob: -7.897583961486816

Token 81: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.943783253314905e-05
    2. 'e' → logprob: -10.250059127807617
    3. 'ex' → logprob: -11.500059127807617
    4. ' ed' → logprob: -12.375059127807617
    5. '-based' → logprob: -12.750059127807617
    6. ')' → logprob: -13.375059127807617
    7. 'd' → logprob: -13.375059127807617
    8. 'ing' → logprob: -13.750059127807617
    9. 'based' → logprob: -14.375059127807617
    10. 'es' → logprob: -14.500059127807617

Token 82: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04081941768527031
    2. ' )' → logprob: -3.9158194065093994
    3. '),' → logprob: -4.5408196449279785
    4. ',' → logprob: -5.2908196449279785
    5. ''' → logprob: -6.5408196449279785
    6. '')' → logprob: -6.7908196449279785
    7. ' ,' → logprob: -7.7908196449279785
    8. ' and' → logprob: -7.7908196449279785
    9. ' ),' → logprob: -8.16581916809082
    10. ' ' → logprob: -8.54081916809082

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0889589861035347
    2. ' and' → logprob: -3.213958978652954
    3. 's' → logprob: -3.338958978652954
    4. ' ' → logprob: -4.963959217071533
    5. 'and' → logprob: -7.213959217071533
    6. ' p' → logprob: -7.463959217071533
    7. ' the' → logprob: -8.713958740234375
    8. '    ' → logprob: -8.963958740234375
    9. ''s' → logprob: -9.088958740234375
    10. ' a' → logprob: -9.088958740234375

Token 84: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0073205092921853065
    2. 'is' → logprob: -5.507320404052734
    3. ' =' → logprob: -6.882320404052734
    4. 's' → logprob: -7.007320404052734
    5. '<|end|>' → logprob: -8.257320404052734
    6. ' ' → logprob: -8.382320404052734
    7. '=' → logprob: -8.507320404052734
    8. ':' → logprob: -8.507320404052734
    9. '```' → logprob: -9.632320404052734
    10. ' are' → logprob: -9.632320404052734

Token 85: ' verdict' (ID: 75722)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7759656310081482
    2. ' the' → logprob: -0.7759656310081482
    3. ' either' → logprob: -3.400965690612793
    4. ' verdict' → logprob: -3.400965690612793
    5. 'the' → logprob: -5.275965690612793
    6. ''' → logprob: -5.900965690612793
    7. 'a' → logprob: -6.900965690612793
    8. ' '' → logprob: -7.150965690612793
    9. ' accepted' → logprob: -7.525965690612793
    10. ' "' → logprob: -7.525965690612793

Token 86: ' ('' (ID: 9906)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3138275742530823
    2. ':' → logprob: -2.5638275146484375
    3. '"""
' → logprob: -3.0638275146484375
    4. '"' → logprob: -3.3138275146484375
    5. '"""' → logprob: -3.9388275146484375
    6. '```' → logprob: -4.0638275146484375
    7. '\n' → logprob: -4.3138275146484375
    8. '":' → logprob: -4.4388275146484375
    9. ',' → logprob: -4.9388275146484375
    10. ''' → logprob: -5.0638275146484375

Token 87: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.13658331334590912
    2. 'A' → logprob: -3.0115833282470703
    3. 'WA' → logprob: -3.3865833282470703
    4. 'W' → logprob: -3.7615833282470703
    5. ''' → logprob: -5.13658332824707
    6. ' AC' → logprob: -5.88658332824707
    7. 'R' → logprob: -6.01158332824707
    8. ''A' → logprob: -6.38658332824707
    9. 'OK' → logprob: -6.51158332824707
    10. 'I' → logprob: -6.76158332824707

Token 88: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004100008402019739
    2. '',' → logprob: -5.6290998458862305
    3. '')' → logprob: -8.62909984588623
    4. ''or' → logprob: -8.62909984588623
    5. ' '' → logprob: -9.87909984588623
    6. ' or' → logprob: -10.00409984588623
    7. '','' → logprob: -12.00409984588623
    8. ''s' → logprob: -12.37909984588623
    9. ''),' → logprob: -12.37909984588623
    10. '"' → logprob: -12.50409984588623

Token 89: ' or' (ID: 503)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5134343504905701
    2. ' or' → logprob: -1.6384344100952148
    3. '',' → logprob: -2.138434410095215
    4. '')' → logprob: -2.763434410095215
    5. 'or' → logprob: -5.013434410095215
    6. ',' → logprob: -5.013434410095215
    7. ')' → logprob: -5.263434410095215
    8. '   ' → logprob: -6.263434410095215
    9. ''or' → logprob: -6.513434410095215
    10. '')
' → logprob: -7.638434410095215

Token 90: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7244405746459961
    2. 'WA' → logprob: -0.8494405746459961
    3. ' WA' → logprob: -3.224440574645996
    4. '"' → logprob: -3.974440574645996
    5. ' '' → logprob: -4.474440574645996
    6. ''T' → logprob: -4.599440574645996
    7. ' ' → logprob: -5.974440574645996
    8. '   ' → logprob: -6.474440574645996
    9. 'WR' → logprob: -6.974440574645996
    10. ' "' → logprob: -7.974440574645996

Token 91: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.002967007225379348
    2. 'WR' → logprob: -6.12796688079834
    3. ' WA' → logprob: -7.50296688079834
    4. 'T' → logprob: -9.50296688079834
    5. 'NO' → logprob: -10.37796688079834
    6. 'Wrong' → logprob: -10.62796688079834
    7. 'W' → logprob: -10.75296688079834
    8. 'RE' → logprob: -11.12796688079834
    9. 'PE' → logprob: -11.87796688079834
    10. 'WE' → logprob: -12.25296688079834

Token 92: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4534284770488739
    2. '')
' → logprob: -1.0784285068511963
    3. ''' → logprob: -4.328428268432617
    4. '')

' → logprob: -5.578428268432617
    5. ')' → logprob: -5.828428268432617
    6. '")' → logprob: -7.078428268432617
    7. '\n' → logprob: -7.203428268432617
    8. '')
' → logprob: -7.203428268432617
    9. ')
' → logprob: -7.578428268432617
    10. '")
' → logprob: -7.828428268432617

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023424826562404633
    2. '"""' → logprob: -4.0234246253967285
    3. '```' → logprob: -6.0234246253967285
    4. ' """' → logprob: -7.1484246253967285
    5. ')' → logprob: -7.2734246253967285
    6. '"' → logprob: -7.3984246253967285
    7. '    ' → logprob: -8.898425102233887
    8. '`' → logprob: -8.898425102233887
    9. '  ' → logprob: -9.148425102233887
    10. ' """
' → logprob: -9.773425102233887

Token 94: ' Output' (ID: 18315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024223487824201584
    2. '"""' → logprob: -3.899223566055298
    3. ' """' → logprob: -6.024223327636719
    4. ' """
' → logprob: -7.649223327636719
    5. '"""
' → logprob: -8.274223327636719
    6. '```' → logprob: -8.899223327636719
    7. '    ' → logprob: -9.149223327636719
    8. '"' → logprob: -10.024223327636719
    9. '""' → logprob: -10.399223327636719
    10. 'Example' → logprob: -11.024223327636719

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15588095784187317
    2. ' :' → logprob: -2.030880928039551
    3. ':
' → logprob: -4.780880928039551
    4. ' :
' → logprob: -5.655880928039551
    5. '   ' → logprob: -7.030880928039551
    6. ' ' → logprob: -9.78088092803955
    7. ',' → logprob: -10.03088092803955
    8. '":' → logprob: -10.03088092803955
    9. '```' → logprob: -10.65588092803955
    10. ' =' → logprob: -10.78088092803955

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004804261028766632
    2. ' Prints' → logprob: -6.6298041343688965
    3. '"' → logprob: -7.2548041343688965
    4. '    ' → logprob: -7.5048041343688965
    5. '       ' → logprob: -7.7548041343688965
    6. ' Counts' → logprob: -7.8798041343688965
    7. ' counts' → logprob: -8.379804611206055
    8. ' print' → logprob: -8.504804611206055
    9. 'Print' → logprob: -8.629804611206055
    10. ' prints' → logprob: -8.879804611206055

Token 97: ' Prints' (ID: 92195)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -1.273521065711975
    2. ' The' → logprob: -1.523521065711975
    3. ' Number' → logprob: -1.898521065711975
    4. 'Print' → logprob: -1.898521065711975
    5. 'Number' → logprob: -2.2735209465026855
    6. ' Prints' → logprob: -3.6485209465026855
    7. '   ' → logprob: -3.8985209465026855
    8. ' Print' → logprob: -4.5235209465026855
    9. 'Two' → logprob: -5.0235209465026855
    10. ' Two' → logprob: -5.2735209465026855

Token 98: ' two' (ID: 1920)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2009478509426117
    2. '(' → logprob: -2.8259477615356445
    3. '("' → logprob: -3.0759477615356445
    4. 'the' → logprob: -3.3259477615356445
    5. ' two' → logprob: -4.2009477615356445
    6. '(len' → logprob: -5.2009477615356445
    7. '(N' → logprob: -5.5759477615356445
    8. '"' → logprob: -5.8259477615356445
    9. '()' → logprob: -6.4509477615356445
    10. '('' → logprob: -6.5759477615356445

Token 99: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.001426067785359919
    2. ' numbers' → logprob: -7.0014262199401855
    3. ' space' → logprob: -7.8764262199401855
    4. ' values' → logprob: -9.876425743103027
    5. 'inte' → logprob: -10.126425743103027
    6. ' ' → logprob: -11.001425743103027
    7. ' integer' → logprob: -11.376425743103027
    8. 'space' → logprob: -12.001425743103027
    9. ' spaces' → logprob: -13.376425743103027
    10. '  ' → logprob: -13.501425743103027

Token 100: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6572299599647522
    2. '
' → logprob: -0.7822299599647522
    3. '    
' → logprob: -4.782229900360107
    4. '\n' → logprob: -5.282229900360107
    5. '```' → logprob: -6.157229900360107
    6. ':' → logprob: -6.657229900360107
    7. '<|end|>' → logprob: -6.782229900360107
    8. '  ' → logprob: -7.032229900360107
    9. 'n' → logprob: -7.032229900360107
    10. '    ' → logprob: -7.157229900360107

Token 101: ' total' (ID: 3609)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7640703916549683
    2. '"' → logprob: -1.8890703916549683
    3. ' accepted' → logprob: -2.014070510864258
    4. 'accepted' → logprob: -2.139070510864258
    5. 'Accepted' → logprob: -3.389070510864258
    6. 'the' → logprob: -3.639070510864258
    7. ' number' → logprob: -3.764070510864258
    8. ' "' → logprob: -4.264070510864258
    9. ' end' → logprob: -5.139070510864258
    10. '   ' → logprob: -5.264070510864258

Token 102: ' number' (ID: 2086)
  Prédit: ' accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accepted' → logprob: -0.7448766827583313
    2. '_' → logprob: -1.1198766231536865
    3. ' AC' → logprob: -2.2448766231536865
    4. ' Accepted' → logprob: -3.2448766231536865
    5. ' _' → logprob: -4.119876861572266
    6. ' ' → logprob: -4.994876861572266
    7. '_ac' → logprob: -5.119876861572266
    8. 'AC' → logprob: -5.244876861572266
    9. 'Accepted' → logprob: -5.619876861572266
    10. ' number' → logprob: -5.869876861572266

Token 103: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.48814210295677185
    2. '_of' → logprob: -1.4881421327590942
    3. '_' → logprob: -2.6131420135498047
    4. 'of' → logprob: -2.9881420135498047
    5. '<|end|>' → logprob: -3.7381420135498047
    6. ')' → logprob: -5.488142013549805
    7. ' ' → logprob: -5.863142013549805
    8. 's' → logprob: -6.238142013549805
    9. '_s' → logprob: -7.738142013549805
    10. '"' → logprob: -7.863142013549805

Token 104: ' accepted' (ID: 17562)
  Prédit: ' accepted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accepted' → logprob: -0.006626439280807972
    2. ' solved' → logprob: -5.756626605987549
    3. ' problems' → logprob: -6.256626605987549
    4. 'accepted' → logprob: -7.256626605987549
    5. ' AC' → logprob: -8.13162612915039
    6. ' Accepted' → logprob: -8.25662612915039
    7. 'Accepted' → logprob: -9.13162612915039
    8. 'AC' → logprob: -9.75662612915039
    9. ' ' → logprob: -10.50662612915039
    10. ' ac' → logprob: -10.63162612915039

Token 105: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.006669428199529648
    2. ' accepted' → logprob: -5.381669521331787
    3. ' ' → logprob: -6.631669521331787
    4. ' problem' → logprob: -8.131669044494629
    5. '_pro' → logprob: -8.881669044494629
    6. ' Accepted' → logprob: -9.381669044494629
    7. 'pro' → logprob: -9.756669044494629
    8. ' and' → logprob: -10.756669044494629
    9. 'accepted' → logprob: -10.756669044494629
    10. ' submissions' → logprob: -10.881669044494629

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14312630891799927
    2. ' and' → logprob: -2.6431262493133545
    3. ' ,' → logprob: -2.8931262493133545
    4. '   ' → logprob: -5.768126487731934
    5. ' ' → logprob: -6.018126487731934
    6. '    ' → logprob: -7.643126487731934
    7. '"' → logprob: -8.143126487731934
    8. '  ' → logprob: -9.143126487731934
    9. ',
' → logprob: -9.393126487731934
    10. 'and' → logprob: -10.018126487731934

Token 107: ' and' (ID: 326)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.028156427666544914
    2. 'total' → logprob: -3.6531565189361572
    3. '"' → logprob: -6.778156280517578
    4. ' a' → logprob: -7.778156280517578
    5. ' ' → logprob: -9.778156280517578
    6. ''' → logprob: -9.778156280517578
    7. ' and' → logprob: -10.278156280517578
    8. ' the' → logprob: -10.403156280517578
    9. '(total' → logprob: -10.653156280517578
    10. '    ' → logprob: -11.153156280517578

Token 108: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.1851460486650467
    2. '"' → logprob: -2.4351460933685303
    3. 'total' → logprob: -3.1851460933685303
    4. ' the' → logprob: -3.5601460933685303
    5. ''' → logprob: -4.560145854949951
    6. 'the' → logprob: -7.310145854949951
    7. ' "' → logprob: -8.93514633178711
    8. ' '' → logprob: -9.43514633178711
    9. '   ' → logprob: -10.06014633178711
    10. ' a' → logprob: -10.06014633178711

Token 109: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.024684391915798187
    2. ' failed' → logprob: -4.149684429168701
    3. 'number' → logprob: -5.274684429168701
    4. '_failed' → logprob: -6.524684429168701
    5. 'failed' → logprob: -7.149684429168701
    6. ' ' → logprob: -8.399683952331543
    7. '_' → logprob: -8.899683952331543
    8. ' amount' → logprob: -9.024683952331543
    9. '_number' → logprob: -9.024683952331543
    10. ' rejected' → logprob: -9.149683952331543

Token 110: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.24046474695205688
    2. 'of' → logprob: -1.990464687347412
    3. '_of' → logprob: -3.240464687347412
    4. ')' → logprob: -4.865464687347412
    5. '_' → logprob: -4.990464687347412
    6. ' ' → logprob: -5.115464687347412
    7. '"' → logprob: -5.490464687347412
    8. 'o' → logprob: -5.740464687347412
    9. '(' → logprob: -6.365464687347412
    10. 's' → logprob: -6.490464687347412

Token 111: ' failed' (ID: 9363)
  Prédit: ' failed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' failed' → logprob: -0.014902148395776749
    2. ' rejected' → logprob: -4.639902114868164
    3. ' accepted' → logprob: -5.514902114868164
    4. ' incorrect' → logprob: -7.889902114868164
    5. 'failed' → logprob: -8.139902114868164
    6. ' wrong' → logprob: -8.889902114868164
    7. ' solved' → logprob: -9.889902114868164
    8. '_failed' → logprob: -10.139902114868164
    9. ' WA' → logprob: -10.389902114868164
    10. ' wa' → logprob: -10.389902114868164

Token 112: ' attempts' (ID: 27747)
  Prédit: ' attempts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attempts' → logprob: -0.14202667772769928
    2. '_attempt' → logprob: -2.142026662826538
    3. ' ' → logprob: -5.142026901245117
    4. '_' → logprob: -5.517026901245117
    5. 'attempt' → logprob: -5.517026901245117
    6. ' submissions' → logprob: -7.892026901245117
    7. '_sub' → logprob: -9.142026901245117
    8. ' at' → logprob: -9.267026901245117
    9. ')' → logprob: -9.392026901245117
    10. ' attempt' → logprob: -9.392026901245117

Token 113: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04357807710766792
    2. '
' → logprob: -3.2935781478881836
    3. '```' → logprob: -6.293578147888184
    4. '    
' → logprob: -6.668578147888184
    5. ':' → logprob: -6.793578147888184
    6. '\n' → logprob: -7.918578147888184
    7. 'def' → logprob: -8.668578147888184
    8. 'import' → logprob: -9.168578147888184
    9. ',' → logprob: -9.293578147888184
    10. '  
' → logprob: -9.793578147888184

Token 114: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2026233971118927
    2. ' before' → logprob: -2.0776233673095703
    3. ' )' → logprob: -3.4526233673095703
    4. 'before' → logprob: -4.20262336730957
    5. ' for' → logprob: -5.57762336730957
    6. ' accepted' → logprob: -6.07762336730957
    7. 'accepted' → logprob: -6.45262336730957
    8. '")' → logprob: -7.07762336730957
    9. 'for' → logprob: -7.07762336730957
    10. '   ' → logprob: -7.57762336730957

Token 115: ' solved' (ID: 47244)
  Prédit: ' accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accepted' → logprob: -0.008713492192327976
    2. 'accepted' → logprob: -5.508713722229004
    3. ' the' → logprob: -5.883713722229004
    4. ' all' → logprob: -7.383713722229004
    5. ' )' → logprob: -8.258713722229004
    6. ' those' → logprob: -8.508713722229004
    7. ' problems' → logprob: -8.633713722229004
    8. ' AC' → logprob: -9.258713722229004
    9. 'AC' → logprob: -9.383713722229004
    10. ')' → logprob: -9.883713722229004

Token 116: ' problems' (ID: 6840)
  Prédit: ' problems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problems' → logprob: -0.004411366768181324
    2. 'pro' → logprob: -5.504411220550537
    3. ')' → logprob: -8.504411697387695
    4. ' )' → logprob: -9.504411697387695
    5. '_pro' → logprob: -10.379411697387695
    6. ' problem' → logprob: -12.129411697387695
    7. ' ' → logprob: -13.004411697387695
    8. '```' → logprob: -13.379411697387695
    9. 'Problems' → logprob: -13.504411697387695
    10. ' and' → logprob: -13.879411697387695

Token 117: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024640660732984543
    2. ')
' → logprob: -4.3996405601501465
    3. ').' → logprob: -4.6496405601501465
    4. '   ' → logprob: -7.1496405601501465
    5. ' before' → logprob: -7.8996405601501465
    6. ')

' → logprob: -8.274641036987305
    7. '")' → logprob: -8.274641036987305
    8. ').
' → logprob: -8.399641036987305
    9. 'before' → logprob: -8.774641036987305
    10. ' )' → logprob: -9.524641036987305

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005805428605526686
    2. '
' → logprob: -6.255805492401123
    3. '"""' → logprob: -6.755805492401123
    4. '    
' → logprob: -6.880805492401123
    5. '```' → logprob: -7.005805492401123
    6. 'def' → logprob: -8.255805015563965
    7. ')' → logprob: -9.005805015563965
    8. 'import' → logprob: -9.255805015563965
    9. '"' → logprob: -9.505805015563965
    10. '""' → logprob: -9.880805015563965

Token 119: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04823426157236099
    2. '"""' → logprob: -3.423234224319458
    3. '```' → logprob: -5.548234462738037
    4. '
' → logprob: -5.798234462738037
    5. '"""
' (adapté à ' """
') → logprob: -6.173234462738037
    6. ' """' → logprob: -6.548234462738037
    7. '"' → logprob: -6.673234462738037
    8. ' """
' → logprob: -7.548234462738037
    9. '    
' → logprob: -7.548234462738037
    10. '    ' → logprob: -7.673234462738037

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01936187967658043
    2. '    
' → logprob: -4.644361972808838
    3. '
' → logprob: -4.769361972808838
    4. '```' → logprob: -8.01936149597168
    5. 'n' → logprob: -8.51936149597168
    6. 'import' → logprob: -9.01936149597168
    7. '    ' → logprob: -9.01936149597168
    8. ' 
' → logprob: -9.76936149597168
    9. '\n' → logprob: -10.26936149597168
    10. '\' → logprob: -10.26936149597168

Token 121: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8286868929862976
    2. '   ' → logprob: -0.9536868929862976
    3. 'n' → logprob: -2.5786869525909424
    4. 'pro' → logprob: -2.9536869525909424
    5. ' N' → logprob: -3.5786869525909424
    6. 'accepted' → logprob: -5.328686714172363
    7. ' n' → logprob: -5.453686714172363
    8. ' problems' → logprob: -5.703686714172363
    9. 'input' → logprob: -6.078686714172363
    10. '#' (adapté à ' #') → logprob: -6.453686714172363

Token 122: ' Read' (ID: 5405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9310222864151001
    2. ' N' → logprob: -1.8060222864151
    3. ' input' → logprob: -2.3060221672058105
    4. ' n' → logprob: -2.5560221672058105
    5. 'N' → logprob: -2.8060221672058105
    6. ' problems' → logprob: -2.9310221672058105
    7. 'input' → logprob: -3.6810221672058105
    8. 'accepted' → logprob: -3.8060221672058105
    9. ' accepted' → logprob: -3.9310221672058105
    10. 'n' → logprob: -3.9310221672058105

Token 123: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.037842366844415665
    2. ' N' → logprob: -3.412842273712158
    3. ' input' → logprob: -6.662842273712158
    4. ' sys' → logprob: -6.912842273712158
    5. ' ' → logprob: -7.162842273712158
    6. 'n' → logprob: -7.287842273712158
    7. 'N' → logprob: -9.037842750549316
    8. ' line' → logprob: -9.037842750549316
    9. '   ' → logprob: -9.287842750549316
    10. 'input' → logprob: -9.912842750549316

Token 124: ' numbers' (ID: 8663)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20428961515426636
    2. ' input' → logprob: -2.204289674758911
    3. ' n' → logprob: -3.329289674758911
    4. ' N' → logprob: -4.204289436340332
    5. 'n' → logprob: -4.579289436340332
    6. 'input' → logprob: -5.204289436340332
    7. ' sys' → logprob: -5.954289436340332
    8. '   ' → logprob: -6.954289436340332
    9. ' line' → logprob: -7.204289436340332
    10. ' first' → logprob: -7.329289436340332

Token 125: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07513338327407837
    2. 'n' → logprob: -3.3251333236694336
    3. 'N' → logprob: -3.8251333236694336
    4. ' n' → logprob: -5.075133323669434
    5. ' =' → logprob: -5.450133323669434
    6. ' N' → logprob: -6.075133323669434
    7. '=' → logprob: -7.450133323669434
    8. ',' → logprob: -8.075133323669434
    9. 'line' → logprob: -8.075133323669434
    10. ' line' → logprob: -8.450133323669434

Token 126: ' problems' (ID: 6840)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5095111727714539
    2. 'N' → logprob: -1.1345112323760986
    3. ' sys' → logprob: -2.7595112323760986
    4. ' n' → logprob: -5.0095109939575195
    5. 'n' → logprob: -5.2595109939575195
    6. 'sys' → logprob: -7.0095109939575195
    7. ' ' → logprob: -7.3845109939575195
    8. ' lines' → logprob: -8.25951099395752
    9. ' problems' → logprob: -8.88451099395752
    10. ' input' → logprob: -9.00951099395752

Token 127: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5951964855194092
    2. 'n' → logprob: -0.9701964855194092
    3. ' n' → logprob: -3.595196485519409
    4. ',' → logprob: -3.595196485519409
    5. 'N' → logprob: -4.845196723937988
    6. ' =' → logprob: -5.345196723937988
    7. ' N' → logprob: -6.970196723937988
    8. ',n' → logprob: -7.720196723937988
    9. '(n' → logprob: -8.845196723937988
    10. '=' → logprob: -8.845196723937988

Token 128: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8549071550369263
    2. 'n' → logprob: -1.3549071550369263
    3. ',' → logprob: -2.3549070358276367
    4. ' n' → logprob: -2.3549070358276367
    5. '   ' → logprob: -2.8549070358276367
    6. ')' → logprob: -3.3549070358276367
    7. ' N' → logprob: -4.229907035827637
    8. ',n' → logprob: -5.104907035827637
    9. ' ,' → logprob: -5.229907035827637
    10. ' )' → logprob: -6.229907035827637

Token 129: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005462417611852288
    2. ')' → logprob: -8.1255464553833
    3. ',)' → logprob: -8.6255464553833
    4. ' ,' → logprob: -9.8755464553833
    5. ',
' → logprob: -12.2505464553833
    6. '),' → logprob: -12.8755464553833
    7. 'and' → logprob: -13.0005464553833
    8. ',

' → logprob: -13.5005464553833
    9. ',M' → logprob: -13.7505464553833
    10. ' and' → logprob: -13.8755464553833

Token 130: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047106825513765216
    2. '   ' → logprob: -8.750471115112305
    3. ' ,' → logprob: -8.750471115112305
    4. ' =' → logprob: -10.000471115112305
    5. ',N' → logprob: -10.000471115112305
    6. ',n' → logprob: -10.500471115112305
    7. '=' → logprob: -11.000471115112305
    8. '_,' → logprob: -11.875471115112305
    9. ' and' → logprob: -12.750471115112305
    10. ')' → logprob: -13.000471115112305

Token 131: ' submissions' (ID: 60667)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.4444164037704468
    2. 'M' → logprob: -1.0694164037704468
    3. ' submissions' → logprob: -4.319416522979736
    4. 'sub' → logprob: -6.694416522979736
    5. 'm' → logprob: -7.319416522979736
    6. ' the' → logprob: -8.944416046142578
    7. ' ' → logprob: -9.569416046142578
    8. ' sub' → logprob: -9.819416046142578
    9. 's' → logprob: -9.944416046142578
    10. ' m' → logprob: -11.319416046142578

Token 132: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05471006780862808
    2. 'n' → logprob: -3.6797101497650146
    3. 'N' → logprob: -3.8047101497650146
    4. ' N' → logprob: -5.9297099113464355
    5. ' =' → logprob: -6.8047099113464355
    6. '
' → logprob: -7.3047099113464355
    7. '    
' → logprob: -7.8047099113464355
    8. ',' → logprob: -8.679710388183594
    9. ' n' → logprob: -9.054710388183594
    10. ':' → logprob: -9.304710388183594

Token 133: 'M' (ID: 44)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3629884123802185
    2. ' M' → logprob: -2.3629884719848633
    3. ' )' → logprob: -2.4879884719848633
    4. 'M' → logprob: -3.1129884719848633
    5. ' ' → logprob: -3.1129884719848633
    6. ' N' → logprob: -4.487988471984863
    7. 'N' → logprob: -4.612988471984863
    8. '   ' → logprob: -5.237988471984863
    9. ',' → logprob: -5.612988471984863
    10. ' sys' → logprob: -5.862988471984863

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29465770721435547
    2. ',' → logprob: -1.7946577072143555
    3. ' =' → logprob: -2.6696577072143555
    4. '   ' → logprob: -4.0446577072143555
    5. '=' → logprob: -6.9196577072143555
    6. '):' → logprob: -7.5446577072143555
    7. ')=' → logprob: -8.294657707214355
    8. ' )' → logprob: -8.669657707214355
    9. ')
' → logprob: -9.294657707214355
    10. '),' → logprob: -10.169657707214355

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006823831703513861
    2. 'N' → logprob: -5.631824016571045
    3. 'n' → logprob: -6.006824016571045
    4. ' =' → logprob: -8.006823539733887
    5. ' N' → logprob: -9.131823539733887
    6. '    
' → logprob: -9.256823539733887
    7. '=' → logprob: -9.631823539733887
    8. ',' → logprob: -10.256823539733887
    9. ' line' → logprob: -10.256823539733887
    10. 'line' → logprob: -10.881823539733887

Token 136: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -1.234848141670227
    2. ' N' → logprob: -1.234848141670227
    3. '   ' → logprob: -1.609848141670227
    4. 'n' → logprob: -2.2348480224609375
    5. ' n' → logprob: -2.2348480224609375
    6. ' line' → logprob: -5.8598480224609375
    7. 'line' → logprob: -6.8598480224609375
    8. ' ' → logprob: -8.859848022460938
    9. '    
' → logprob: -9.734848022460938
    10. 'input' → logprob: -10.109848022460938

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ',M' → logprob: -11.75001335144043
    3. ' ,' → logprob: -12.25001335144043
    4. ',
' → logprob: -15.25001335144043
    5. ',m' → logprob: -16.87501335144043
    6. ',N' → logprob: -17.50001335144043
    7. '‌,' → logprob: -18.00001335144043
    8. 'M' → logprob: -18.25001335144043
    9. ',\
' → logprob: -18.25001335144043
    10. ',

' → logprob: -18.50001335144043

Token 138: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.08903641998767853
    2. 'M' → logprob: -2.464036464691162
    3. ' ' → logprob: -9.339035987854004
    4. '  ' → logprob: -13.089035987854004
    5. '    ' → logprob: -13.339035987854004
    6. '   ' → logprob: -13.589035987854004
    7. ' =' → logprob: -14.089035987854004
    8. '=' → logprob: -14.214035987854004
    9. ' ' → logprob: -14.464035987854004
    10. 'm' → logprob: -14.964035987854004

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510355561971664
    2. '=' → logprob: -4.387510299682617
    3. '=input' → logprob: -15.262510299682617
    4. '=sys' → logprob: -15.262510299682617
    5. ' ' → logprob: -15.762510299682617
    6. ',' → logprob: -17.137510299682617
    7. ')' → logprob: -17.262510299682617
    8. '=int' → logprob: -17.262510299682617
    9. '   ' → logprob: -18.137510299682617
    10. '=line' → logprob: -18.137510299682617

Token 140: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018150994554162025
    2. 'map' → logprob: -4.018150806427002
    3. '	map' → logprob: -15.01815128326416
    4. ' ' → logprob: -15.14315128326416
    5. ' list' → logprob: -15.89315128326416
    6. ' sys' → logprob: -16.018150329589844
    7. '   ' → logprob: -16.643150329589844
    8. '[' → logprob: -16.893150329589844
    9. ' ' → logprob: -17.518150329589844
    10. '(map' → logprob: -17.768150329589844

Token 141: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023995166644454002
    2. '(' → logprob: -3.7739951610565186
    3. '(str' → logprob: -7.398995399475098
    4. '(list' → logprob: -9.273995399475098
    5. '(input' → logprob: -10.273995399475098
    6. '(
' → logprob: -13.273995399475098
    7. '(in' → logprob: -13.398995399475098
    8. 'int' → logprob: -14.148995399475098
    9. '(sys' → logprob: -14.148995399475098
    10. '()' → logprob: -14.273995399475098

Token 142: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.02362208254635334
    2. '(input' → logprob: -4.898622035980225
    3. '(' → logprob: -5.273622035980225
    4. ',' → logprob: -5.273622035980225
    5. ')' → logprob: -5.398622035980225
    6. 'sys' → logprob: -7.523622035980225
    7. 'input' → logprob: -8.773622512817383
    8. ',input' → logprob: -9.023622512817383
    9. '=sys' → logprob: -9.398622512817383
    10. ' (' → logprob: -9.398622512817383

Token 143: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3869445323944092
    2. 'sys' → logprob: -1.1369445323944092
    3. 'input' → logprob: -9.761944770812988
    4. ' input' → logprob: -11.261944770812988
    5. '(sys' → logprob: -13.636944770812988
    6. '	sys' → logprob: -14.261944770812988
    7. '=sys' → logprob: -14.386944770812988
    8. '   ' → logprob: -14.761944770812988
    9. ' ' → logprob: -15.886944770812988
    10. 'stdin' → logprob: -17.386943817138672

Token 144: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.084206375409849e-05
    2. '()' → logprob: -10.250041007995605
    3. '())' → logprob: -12.250041007995605
    4. ' ().' → logprob: -14.750041007995605
    5. ')' → logprob: -15.875041007995605
    6. '()
' → logprob: -16.75004005432129
    7. '(' → logprob: -17.25004005432129
    8. '()[' → logprob: -18.37504005432129
    9. '.readline' → logprob: -19.50004005432129
    10. '()))' → logprob: -19.75004005432129

Token 145: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001238004770129919
    2. 'strip' → logprob: -9.000123977661133
    3. 'rstrip' → logprob: -15.000123977661133
    4. ' split' → logprob: -16.750123977661133
    5. '(split' → logprob: -16.750123977661133
    6. 'spl' → logprob: -17.375123977661133
    7. 'read' → logprob: -19.500123977661133
    8. ')' → logprob: -20.000123977661133
    9. '.split' → logprob: -20.125123977661133
    10. '().' → logprob: -20.625123977661133

Token 146: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08271154761314392
    2. ')' → logprob: -2.5827114582061768
    3. '()' → logprob: -5.582711696624756
    4. '))' → logprob: -10.832711219787598
    5. '()))' → logprob: -11.207711219787598
    6. '(' → logprob: -11.457711219787598
    7. '())
' → logprob: -12.207711219787598
    8. ' ())' → logprob: -14.082711219787598
    9. ' )' → logprob: -14.457711219787598
    10. '('' → logprob: -14.457711219787598

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00434977188706398
    2. '    
' → logprob: -5.879349708557129
    3. '
' → logprob: -7.254349708557129
    4. 'pro' → logprob: -7.879349708557129
    5. '```' → logprob: -9.504349708557129
    6. 'problem' → logprob: -9.879349708557129
    7. '#' → logprob: -10.004349708557129
    8. ' problems' → logprob: -10.004349708557129
    9. 'sub' → logprob: -10.004349708557129
    10. '    ' → logprob: -10.129349708557129

Token 148: ' #' (ID: 1069)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.5951086282730103
    2. 'ac' → logprob: -1.8451086282730103
    3. 'pro' → logprob: -2.0951085090637207
    4. 'problem' → logprob: -2.7201085090637207
    5. '#' (adapté à ' #') → logprob: -3.4701085090637207
    6. 'attempt' → logprob: -3.5951085090637207
    7. 'sol' → logprob: -4.220108509063721
    8. 'sub' → logprob: -5.220108509063721
    9. 'results' → logprob: -5.470108509063721
    10. 'AC' → logprob: -5.595108509063721

Token 149: ' Arrays' (ID: 34394)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.9225413799285889
    2. 'accepted' → logprob: -1.1725413799285889
    3. 'problem' → logprob: -2.672541379928589
    4. 'ac' → logprob: -2.797541379928589
    5. '#' → logprob: -3.297541379928589
    6. 'attempt' → logprob: -3.547541379928589
    7. ' accepted' → logprob: -3.922541379928589
    8. 'sub' → logprob: -4.547541618347168
    9. 'AC' → logprob: -4.797541618347168
    10. ' submissions' → logprob: -5.297541618347168

Token 150: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13793791830539703
    2. '   ' → logprob: -3.3879380226135254
    3. ' to' → logprob: -3.5129380226135254
    4. 'accepted' → logprob: -3.7629380226135254
    5. '=' → logprob: -4.262938022613525
    6. '_' → logprob: -5.137938022613525
    7. ' of' → logprob: -5.262938022613525
    8. ' for' → logprob: -5.637938022613525
    9. 'to' → logprob: -5.887938022613525
    10. 'Accepted' → logprob: -6.387938022613525

Token 151: ' keep' (ID: 3357)
  Prédit: ' track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.5712987780570984
    2. ' store' → logprob: -1.6962988376617432
    3. 'track' → logprob: -2.196298837661743
    4. 'store' → logprob: -2.321298837661743
    5. 'keep' → logprob: -3.446298837661743
    6. ' keep' → logprob: -5.196298599243164
    7. ' mark' → logprob: -6.821298599243164
    8. '[' → logprob: -6.821298599243164
    9. 'mark' → logprob: -7.196298599243164
    10. 'False' → logprob: -7.446298599243164

Token 152: ' track' (ID: 5290)
  Prédit: ' track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.3133176565170288
    2. 'track' → logprob: -1.3133176565170288
    3. '   ' → logprob: -10.43831729888916
    4. 'tracking' → logprob: -11.56331729888916
    5. '_track' → logprob: -12.93831729888916
    6. '  ' → logprob: -12.93831729888916
    7. ' ' → logprob: -13.18831729888916
    8. 'tracked' → logprob: -13.43831729888916
    9. 'tracks' → logprob: -13.56331729888916
    10. ' tracking' → logprob: -13.56331729888916

Token 153: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2501665949821472
    2. '   ' → logprob: -1.625166654586792
    3. 'of' → logprob: -3.750166654586792
    4. '_of' → logprob: -7.750166416168213
    5. '    ' → logprob: -8.625166893005371
    6. '_' → logprob: -9.375166893005371
    7. '[' → logprob: -10.250166893005371
    8. '	of' → logprob: -10.250166893005371
    9. 'accepted' → logprob: -10.500166893005371
    10. '  ' → logprob: -11.125166893005371

Token 154: ' AC' (ID: 18577)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.41247522830963135
    2. ' accepted' → logprob: -1.6624752283096313
    3. 'attempt' → logprob: -3.412475109100342
    4. 'AC' → logprob: -3.912475109100342
    5. 'ac' → logprob: -4.287475109100342
    6. ' whether' → logprob: -4.412475109100342
    7. 'sol' → logprob: -4.537475109100342
    8. ' the' → logprob: -4.537475109100342
    9. ' solved' → logprob: -4.662475109100342
    10. ' attempts' → logprob: -4.662475109100342

Token 155: ' status' (ID: 4495)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.3148300349712372
    2. '_' → logprob: -2.1898300647735596
    3. '_counts' → logprob: -2.9398300647735596
    4. '_status' → logprob: -3.5648300647735596
    5. '_attempt' → logprob: -4.3148298263549805
    6. 'ed' → logprob: -4.4398298263549805
    7. ' =' → logprob: -4.4398298263549805
    8. '_sub' → logprob: -4.5648298263549805
    9. 'count' → logprob: -4.5648298263549805
    10. 's' → logprob: -5.1898298263549805

Token 156: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13832271099090576
    2. '   ' → logprob: -2.7633228302001953
    3. ',' → logprob: -3.0133228302001953
    4. 'and' → logprob: -4.763322830200195
    5. ' =' → logprob: -6.013322830200195
    6. '_' → logprob: -6.388322830200195
    7. '_attempt' → logprob: -6.888322830200195
    8. '_completed' → logprob: -7.138322830200195
    9. 'accepted' → logprob: -7.763322830200195
    10. '_status' → logprob: -8.513322830200195

Token 157: ' number' (ID: 2086)
  Prédit: 'WA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'WA' → logprob: -1.2843570709228516
    2. 'failed' → logprob: -1.5343570709228516
    3. 'wrong' → logprob: -2.2843570709228516
    4. 'wa' → logprob: -2.5343570709228516
    5. ' failed' → logprob: -2.5343570709228516
    6. ' wrong' → logprob: -2.5343570709228516
    7. ' WA' → logprob: -3.5343570709228516
    8. 'pen' → logprob: -3.6593570709228516
    9. ' attempts' → logprob: -3.9093570709228516
    10. 'attempt' → logprob: -3.9093570709228516

Token 158: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.06853842735290527
    2. ' of' → logprob: -3.8185384273529053
    3. 'of' → logprob: -3.8185384273529053
    4. '_failed' → logprob: -4.068538665771484
    5. '_attempt' → logprob: -5.568538665771484
    6. '_' → logprob: -8.318538665771484
    7. '=' → logprob: -8.443538665771484
    8. 's' → logprob: -8.568538665771484
    9. 'Of' → logprob: -8.943538665771484
    10. '_s' → logprob: -9.068538665771484

Token 159: ' WA' (ID: 31598)
  Prédit: '_wrong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_wrong' → logprob: -1.5506588220596313
    2. ' failed' → logprob: -1.9256588220596313
    3. '_failed' → logprob: -1.9256588220596313
    4. ' wrong' → logprob: -2.050658702850342
    5. 'failed' → logprob: -2.550658702850342
    6. '_attempt' → logprob: -3.050658702850342
    7. ' attempts' → logprob: -3.175658702850342
    8. '_' → logprob: -3.175658702850342
    9. 'wrong' → logprob: -3.300658702850342
    10. '_w' → logprob: -3.425658702850342

Token 160: ' attempts' (ID: 27747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34714266657829285
    2. '_attempt' → logprob: -1.5971426963806152
    3. '_counts' → logprob: -3.3471426963806152
    4. '_' → logprob: -3.7221426963806152
    5. '_sub' → logprob: -3.8471426963806152
    6. '_count' → logprob: -5.597142696380615
    7. ' attempts' → logprob: -6.222142696380615
    8. '_s' → logprob: -6.847142696380615
    9. '_before' → logprob: -6.972142696380615
    10. ' counts' → logprob: -7.347142696380615

Token 161: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8287472724914551
    2. 'accepted' → logprob: -1.453747272491455
    3. ' accepted' → logprob: -2.203747272491455
    4. ' ac' → logprob: -2.578747272491455
    5. ' before' → logprob: -3.078747272491455
    6. 'ac' → logprob: -3.203747272491455
    7. 'AC' → logprob: -4.328747272491455
    8. ' for' → logprob: -4.578747272491455
    9. ',' → logprob: -5.203747272491455
    10. 's' → logprob: -5.203747272491455

Token 162: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.3394201695919037
    2. 'each' → logprob: -1.839420199394226
    3. '[' → logprob: -3.4644200801849365
    4. ' problems' → logprob: -3.5894200801849365
    5. 'problem' → logprob: -3.8394200801849365
    6. ' [' → logprob: -4.089420318603516
    7. ' ' → logprob: -4.589420318603516
    8. ' problem' → logprob: -5.089420318603516
    9. 'pro' → logprob: -5.589420318603516
    10. ' solved' → logprob: -5.964420318603516

Token 163: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.28143036365509033
    2. 'problem' → logprob: -1.4064303636550903
    3. '_problem' → logprob: -8.7814302444458
    4. '(problem' → logprob: -10.1564302444458
    5. ' problems' → logprob: -10.2814302444458
    6. 'pro' → logprob: -11.0314302444458
    7. ' ' → logprob: -11.5314302444458
    8. 'prob' → logprob: -11.6564302444458
    9. 'proble' → logprob: -12.9064302444458
    10. '.problem' → logprob: -13.0314302444458

Token 164: '
' (ID: 198)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7378649711608887
    2. 'accepted' → logprob: -1.6128649711608887
    3. '   ' → logprob: -1.7378649711608887
    4. ' ac' → logprob: -2.2378649711608887
    5. ' accepted' → logprob: -3.7378649711608887
    6. 'AC' → logprob: -5.112864971160889
    7. ',' → logprob: -6.112864971160889
    8. ' is' → logprob: -6.487864971160889
    9. '
' → logprob: -6.987864971160889
    10. ' AC' → logprob: -7.237864971160889

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3297824561595917
    2. 'accepted' → logprob: -2.329782485961914
    3. ' ac' → logprob: -2.454782485961914
    4. 'ac' → logprob: -2.954782485961914
    5. ' accepted' → logprob: -3.329782485961914
    6. 'AC' → logprob: -5.829782485961914
    7. '_ac' → logprob: -7.079782485961914
    8. 'accept' → logprob: -7.204782485961914
    9. '_' → logprob: -7.329782485961914
    10. ' AC' → logprob: -7.454782485961914

Token 166: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' (adapté à ' ac') → logprob: -0.08520791679620743
    2. 'accepted' → logprob: -3.210207939147949
    3. ' ac' → logprob: -3.585207939147949
    4. ' accepted' → logprob: -5.460207939147949
    5. 'AC' → logprob: -5.835207939147949
    6. '   ' → logprob: -6.085207939147949
    7. 'is' → logprob: -6.835207939147949
    8. ' solved' → logprob: -6.960207939147949
    9. ' is' → logprob: -7.335207939147949
    10. ' AC' → logprob: -7.960207939147949

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.37186598777771
    2. '_count' → logprob: -1.37186598777771
    3. '_status' → logprob: -1.87186598777771
    4. 'quired' → logprob: -2.12186598777771
    5. 'cept' → logprob: -2.62186598777771
    6. '=[' → logprob: -3.62186598777771
    7. '_' → logprob: -3.87186598777771
    8. '_sub' → logprob: -4.121866226196289
    9. 'ed' → logprob: -4.246866226196289
    10. '=' → logprob: -4.496866226196289

Token 168: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0181527491658926
    2. ' [' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.143153190612793
    4. '[N' → logprob: -14.893153190612793
    5. ' ' → logprob: -15.268153190612793
    6. '[n' → logprob: -16.518152236938477
    7. '[int' → logprob: -16.643152236938477
    8. '[i' → logprob: -17.268152236938477
    9. '  ' → logprob: -17.268152236938477
    10. '[len' → logprob: -17.393152236938477

Token 169: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '0' → logprob: -17.12500762939453
    4. '(False' → logprob: -18.75000762939453
    5. '=False' → logprob: -19.87500762939453
    6. '[' → logprob: -20.12500762939453
    7. 'F' → logprob: -20.75000762939453
    8. 'True' → logprob: -21.50000762939453
    9. 'false' → logprob: -21.62500762939453
    10. '.False' → logprob: -21.62500762939453

Token 170: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04094735160470009
    2. ']*' → logprob: -3.290947437286377
    3. ' for' → logprob: -5.915947437286377
    4. ' ]' → logprob: -8.915946960449219
    5. ']*(' → logprob: -10.290946960449219
    6. 'for' → logprob: -10.540946960449219
    7. ',' → logprob: -12.165946960449219
    8. '   ' → logprob: -13.165946960449219
    9. ')' → logprob: -13.665946960449219
    10. ']+' → logprob: -13.915946960449219

Token 171: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020848875865340233
    2. ' _' → logprob: -3.8958489894866943
    3. ' range' → logprob: -8.645849227905273
    4. '_range' → logprob: -9.395849227905273
    5. 'range' → logprob: -10.895849227905273
    6. '_i' → logprob: -11.020849227905273
    7. ' i' → logprob: -12.145849227905273
    8. 'i' → logprob: -12.770849227905273
    9. '_in' → logprob: -13.145849227905273
    10. ' in' → logprob: -13.895849227905273

Token 172: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2785743474960327
    2. 'in' → logprob: -2.4035744667053223
    3. ' range' → logprob: -2.4035744667053223
    4. ' in' → logprob: -2.7785744667053223
    5. ' ' → logprob: -9.278573989868164
    6. '_' → logprob: -9.653573989868164
    7. 'ange' → logprob: -10.278573989868164
    8. ' _' → logprob: -11.653573989868164
    9. '  ' → logprob: -11.903573989868164
    10. '(range' → logprob: -12.153573989868164

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1427103877067566
    2. ' range' → logprob: -2.0177104473114014
    3. ' ' → logprob: -11.39271068572998
    4. 'ange' → logprob: -12.14271068572998
    5. '   ' → logprob: -12.64271068572998
    6. '  ' → logprob: -13.01771068572998
    7. '	range' → logprob: -13.01771068572998
    8. '(range' → logprob: -13.14271068572998
    9. '`' → logprob: -13.51771068572998
    10. 'rang' → logprob: -13.76771068572998

Token 174: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003380846756044775
    2. '(' → logprob: -8.125338554382324
    3. ' (' → logprob: -10.250338554382324
    4. '(M' → logprob: -12.625338554382324
    5. '(n' → logprob: -13.500338554382324
    6. 'N' → logprob: -13.875338554382324
    7. '   ' → logprob: -15.500338554382324
    8. ']' → logprob: -15.625338554382324
    9. '((' → logprob: -15.875338554382324
    10. ' ' → logprob: -15.875338554382324

Token 175: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008741031400859356
    2. ')]
' → logprob: -4.7587409019470215
    3. ')]
' → logprob: -9.75874137878418
    4. ')]

' → logprob: -10.38374137878418
    5. ']' → logprob: -10.63374137878418
    6. ' )' → logprob: -12.13374137878418
    7. ')' → logprob: -12.13374137878418
    8. ' ]' → logprob: -14.25874137878418
    9. ']
' → logprob: -14.63374137878418
    10. '])' → logprob: -15.00874137878418

Token 176: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03454679250717163
    2. '   ' → logprob: -3.9095468521118164
    3. 'wa' → logprob: -4.784546852111816
    4. '    
' → logprob: -6.034546852111816
    5. 'w' → logprob: -7.284546852111816
    6. ' 
' → logprob: -7.284546852111816
    7. '
' → logprob: -7.409546852111816
    8. '  
' → logprob: -7.659546852111816
    9. '   
' → logprob: -8.284546852111816
    10. ',' → logprob: -9.034546852111816

Token 177: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08210907876491547
    2. 'wa' → logprob: -2.832108974456787
    3. 'w' → logprob: -5.332108974456787
    4. '   ' → logprob: -5.582108974456787
    5. '    
' → logprob: -5.707108974456787
    6. 'ac' → logprob: -6.082108974456787
    7. ',' → logprob: -6.832108974456787
    8. '
' → logprob: -6.957108974456787
    9. '   
' → logprob: -7.207108974456787
    10. ' 
' → logprob: -7.457108974456787

Token 178: ' ac' (ID: 1375)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20959007740020752
    2. ' ' → logprob: -2.709589958190918
    3. 'False' → logprob: -2.834589958190918
    4. 'ac' → logprob: -4.584589958190918
    5. ' False' → logprob: -4.959589958190918
    6. 'int' → logprob: -5.459589958190918
    7. '   ' → logprob: -5.584589958190918
    8. ' ac' → logprob: -5.584589958190918
    9. '
' → logprob: -5.834589958190918
    10. 'WA' → logprob: -5.959589958190918

Token 179: '[i' (ID: 1768)
  Prédit: ' status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' status' → logprob: -1.9430944919586182
    2. '_attempt' → logprob: -1.9430944919586182
    3. 'attempt' → logprob: -2.193094491958618
    4. ' attempts' → logprob: -2.318094491958618
    5. '<|end|>' → logprob: -2.318094491958618
    6. ' =' → logprob: -2.318094491958618
    7. 'status' → logprob: -2.818094491958618
    8. '_count' → logprob: -2.818094491958618
    9. '_status' → logprob: -3.568094491958618
    10. ']' → logprob: -3.568094491958618

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03738587722182274
    2. '=' → logprob: -3.912385940551758
    3. ']=' → logprob: -4.787385940551758
    4. ' ]' → logprob: -5.912385940551758
    5. ']==' → logprob: -6.287385940551758
    6. ' =' → logprob: -6.662385940551758
    7. '==' → logprob: -6.912385940551758
    8. ')]' → logprob: -7.787385940551758
    9. ')' → logprob: -8.412385940551758
    10. ']
' → logprob: -8.412385940551758

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49209272861480713
    2. ' =' → logprob: -1.1170927286148071
    3. ':' → logprob: -3.3670926094055176
    4. ' indicates' → logprob: -4.742092609405518
    5. '#' → logprob: -5.742092609405518
    6. ',' → logprob: -6.492092609405518
    7. '==' → logprob: -6.492092609405518
    8. ' will' → logprob: -6.492092609405518
    9. ' is' → logprob: -6.617092609405518
    10. ' represents' → logprob: -6.742092609405518

Token 182: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20384752750396729
    2. '0' → logprob: -1.8288475275039673
    3. ' False' → logprob: -4.078847408294678
    4. ' ' → logprob: -5.578847408294678
    5. '1' → logprob: -6.578847408294678
    6. 'True' → logprob: -6.578847408294678
    7. ' True' → logprob: -9.203847885131836
    8. 'bool' → logprob: -9.453847885131836
    9. 'whether' → logprob: -9.703847885131836
    10. ' whether' → logprob: -10.828847885131836

Token 183: '1' (ID: 16)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.24343018233776093
    2. '0' → logprob: -1.6184301376342773
    3. ' False' → logprob: -4.743430137634277
    4. '1' → logprob: -5.243430137634277
    5. ' ' → logprob: -6.118430137634277
    6. 'True' → logprob: -6.743430137634277
    7. '-' → logprob: -8.618430137634277
    8. 'bool' → logprob: -8.993430137634277
    9. 'int' → logprob: -9.618430137634277
    10. ' True' → logprob: -10.368430137634277

Token 184: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6250327229499817
    2. '<|end|>' → logprob: -1.375032663345337
    3. ' for' → logprob: -2.500032663345337
    4. '
' → logprob: -2.625032663345337
    5. '#' → logprob: -4.375032901763916
    6. ' #' → logprob: -4.750032901763916
    7. 'if' → logprob: -4.750032901763916
    8. '<|end|>' → logprob: -4.875032901763916
    9. ' or' → logprob: -5.500032901763916
    10. ',' → logprob: -5.500032901763916

Token 185: ' problem' (ID: 4792)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.0942203998565674
    2. ' problem' → logprob: -1.4692203998565674
    3. ' ac' → logprob: -1.8442203998565674
    4. ' the' → logprob: -1.9692203998565674
    5. 'problem' → logprob: -2.7192203998565674
    6. 'the' → logprob: -3.0942203998565674
    7. ' a' → logprob: -4.719220161437988
    8. ' solved' → logprob: -5.719220161437988
    9. ' there' → logprob: -6.219220161437988
    10. ' accepted' → logprob: -6.344220161437988

Token 186: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5541610717773438
    2. 'i' → logprob: -0.9291610717773438
    3. ' has' → logprob: -4.304161071777344
    4. ' is' → logprob: -4.554161071777344
    5. '[i' → logprob: -5.679161071777344
    6. ' was' → logprob: -6.054161071777344
    7. 'is' → logprob: -8.179161071777344
    8. 'has' → logprob: -8.929161071777344
    9. '_i' → logprob: -9.304161071777344
    10. ' solved' → logprob: -9.429161071777344

Token 187: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.18706023693084717
    2. ' is' → logprob: -2.3120603561401367
    3. ' was' → logprob: -2.8120603561401367
    4. 'has' → logprob: -5.187060356140137
    5. 'is' → logprob: -5.687060356140137
    6. 'was' → logprob: -7.437060356140137
    7. ' ' → logprob: -7.937060356140137
    8. ' solved' → logprob: -7.937060356140137
    9. ')' → logprob: -8.562060356140137
    10. 'accepted' → logprob: -8.562060356140137

Token 188: ' been' (ID: 1339)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.42967572808265686
    2. ' been' → logprob: -1.0546756982803345
    3. 'accepted' → logprob: -8.054676055908203
    4. 'already' → logprob: -8.804676055908203
    5. 'Been' → logprob: -8.929676055908203
    6. 'received' → logprob: -8.929676055908203
    7. 'ac' → logprob: -8.929676055908203
    8. 'at' → logprob: -11.179676055908203
    9. 'be' → logprob: -11.304676055908203
    10. ' ac' → logprob: -11.804676055908203

Token 189: ' solved' (ID: 47244)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.1670224964618683
    2. ' accepted' → logprob: -2.167022466659546
    3. 'sol' → logprob: -4.417022705078125
    4. 'ac' → logprob: -4.542022705078125
    5. ' solved' → logprob: -4.792022705078125
    6. 'AC' → logprob: -5.542022705078125
    7. 'Accepted' → logprob: -5.667022705078125
    8. ' Accepted' → logprob: -8.792022705078125
    9. 'correct' → logprob: -9.167022705078125
    10. ' AC' → logprob: -9.292022705078125

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019972622394561768
    2. ' else' → logprob: -4.144972801208496
    3. ' ,' → logprob: -6.269972801208496
    4. 'else' → logprob: -6.769972801208496
    5. '   ' → logprob: -7.519972801208496
    6. '<|end|>' → logprob: -8.769972801208496
    7. ';' → logprob: -9.769972801208496
    8. '
' → logprob: -10.644972801208496
    9. ',
' → logprob: -10.769972801208496
    10. ' ' → logprob: -11.019972801208496

Token 191: ' ' (ID: 220)
  Prédit: ' ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ac' → logprob: -0.4237058162689209
    2. ' ' → logprob: -2.048705816268921
    3. '0' → logprob: -2.548705816268921
    4. ' else' → logprob: -2.673705816268921
    5. 'ac' → logprob: -3.423705816268921
    6. '   ' → logprob: -4.2987060546875
    7. 'else' → logprob: -5.1737060546875
    8. ',' → logprob: -5.6737060546875
    9. ' 
' → logprob: -6.1737060546875
    10. '    ' → logprob: -6.2987060546875

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7341285347938538
    2. 'else' → logprob: -0.7341285347938538
    3. ' else' → logprob: -3.734128475189209
    4. 'otherwise' → logprob: -5.609128475189209
    5. '#' → logprob: -5.734128475189209
    6. ' ' → logprob: -5.859128475189209
    7. 'ac' → logprob: -6.359128475189209
    8. '   ' → logprob: -6.484128475189209
    9. '1' → logprob: -6.984128475189209
    10. 'False' → logprob: -7.484128475189209

Token 193: ' otherwise' (ID: 10275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.958369791507721
    2. ',' → logprob: -1.4583697319030762
    3. 'for' → logprob: -2.083369731903076
    4. 'else' → logprob: -2.208369731903076
    5. ' else' → logprob: -2.333369731903076
    6. ')' → logprob: -4.083369731903076
    7. ' otherwise' → logprob: -4.333369731903076
    8. '<|end|>' → logprob: -4.458369731903076
    9. 'otherwise' → logprob: -4.833369731903076
    10. ']' → logprob: -6.583369731903076

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23017029464244843
    2. 'wa' → logprob: -1.8551702499389648
    3. '
' → logprob: -3.230170249938965
    4. ',' → logprob: -5.480170249938965
    5. 'w' → logprob: -6.480170249938965
    6. 'failed' → logprob: -7.230170249938965
    7. '    
' → logprob: -7.730170249938965
    8. ' wa' → logprob: -7.980170249938965
    9. '```' → logprob: -8.105170249938965
    10. 'attempt' → logprob: -8.105170249938965

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10414470732212067
    2. 'wa' → logprob: -2.354144811630249
    3. ' wa' → logprob: -6.47914457321167
    4. 'failed' → logprob: -7.22914457321167
    5. 'w' → logprob: -8.479145050048828
    6. 'fail' → logprob: -8.729145050048828
    7. ',' → logprob: -8.729145050048828
    8. '```' → logprob: -8.729145050048828
    9. 'fails' → logprob: -8.729145050048828
    10. ' failed' → logprob: -9.229145050048828

Token 196: ' wa' (ID: 3123)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' (adapté à ' wa') → logprob: -0.0005065653240308166
    2. ' wa' → logprob: -8.625506401062012
    3. 'wrong' → logprob: -8.750506401062012
    4. '   ' → logprob: -9.625506401062012
    5. 'failed' → logprob: -10.875506401062012
    6. 'fail' → logprob: -11.125506401062012
    7. '```' → logprob: -11.375506401062012
    8. 'WA' → logprob: -12.000506401062012
    9. 'w' → logprob: -12.125506401062012
    10. 'attempt' → logprob: -12.125506401062012

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14335419237613678
    2. '=' → logprob: -2.0183541774749756
    3. 's' → logprob: -7.893354415893555
    4. '_counts' → logprob: -9.268354415893555
    5. 'attempt' → logprob: -9.643354415893555
    6. '_count' → logprob: -9.893354415893555
    7. '_attempt' → logprob: -10.143354415893555
    8. 'count' → logprob: -10.768354415893555
    9. 'counts' → logprob: -10.893354415893555
    10. ' ' → logprob: -12.143354415893555

Token 198: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.31326353549957275
    2. '[' → logprob: -1.3132635354995728
    3. ' ' → logprob: -13.563263893127441
    4. '0' → logprob: -15.063263893127441
    5. '   ' → logprob: -16.563262939453125
    6. ' ' → logprob: -16.813262939453125
    7. '[i' → logprob: -17.938262939453125
    8. '[
' → logprob: -17.938262939453125
    9. '([' → logprob: -18.000762939453125
    10. '=[' → logprob: -18.125762939453125

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '[' → logprob: -15.125027656555176
    4. 'for' → logprob: -15.625027656555176
    5. '   ' → logprob: -18.125028610229492
    6. ' [' → logprob: -18.125028610229492
    7. ' for' → logprob: -18.250028610229492
    8. '00' → logprob: -18.937528610229492
    9. '000' → logprob: -19.187528610229492
    10. '(' → logprob: -19.250028610229492

Token 200: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1002403199672699
    2. 'for' → logprob: -2.3502402305603027
    3. '	for' → logprob: -11.600240707397461
    4. ' ' → logprob: -11.600240707397461
    5. ']' → logprob: -11.850240707397461
    6. '   ' → logprob: -12.350240707397461
    7. ')' → logprob: -13.725240707397461
    8. '  ' → logprob: -14.350240707397461
    9. '(' → logprob: -14.600240707397461
    10. '           ' → logprob: -14.600240707397461

Token 201: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1602937877178192
    2. ' _' → logprob: -1.9102938175201416
    3. ' in' → logprob: -10.285293579101562
    4. '_range' → logprob: -10.910293579101562
    5. ' range' → logprob: -12.285293579101562
    6. ' for' → logprob: -12.535293579101562
    7. '_in' → logprob: -13.035293579101562
    8. 'range' → logprob: -13.160293579101562
    9. ' ' → logprob: -14.160293579101562
    10. '(_' → logprob: -14.660293579101562

Token 202: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09929326176643372
    2. ' range' → logprob: -2.5992932319641113
    3. ' in' → logprob: -3.9742932319641113
    4. 'in' → logprob: -7.224293231964111
    5. '_range' → logprob: -7.599293231964111
    6. '_' → logprob: -8.97429370880127
    7. '(range' → logprob: -10.84929370880127
    8. 'ange' → logprob: -10.97429370880127
    9. ' _' → logprob: -11.72429370880127
    10. ' ' → logprob: -13.97429370880127

Token 203: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1128842830657959
    2. ' range' → logprob: -2.237884283065796
    3. '_' → logprob: -10.487884521484375
    4. '_range' → logprob: -10.612884521484375
    5. '(range' → logprob: -12.362884521484375
    6. 'ange' → logprob: -13.487884521484375
    7. ' _' → logprob: -13.612884521484375
    8. ' ' → logprob: -14.237884521484375
    9. '	range' → logprob: -14.487884521484375
    10. '   ' → logprob: -15.487884521484375

Token 204: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0019069778500124812
    2. 'N' → logprob: -6.501906871795654
    3. ' (' → logprob: -8.126907348632812
    4. ')' → logprob: -9.626907348632812
    5. ']' → logprob: -11.376907348632812
    6. 'range' → logprob: -11.501907348632812
    7. '(' → logprob: -12.001907348632812
    8. ' N' → logprob: -12.501907348632812
    9. ')(' → logprob: -13.126907348632812
    10. '
' → logprob: -13.251907348632812

Token 205: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013977376511320472
    2. ')' → logprob: -9.625140190124512
    3. ']' → logprob: -9.625140190124512
    4. ')]
' → logprob: -12.500140190124512
    5. '   ' → logprob: -13.500140190124512
    6. ' )' → logprob: -13.750140190124512
    7. ')]

' → logprob: -14.625140190124512
    8. '])]' → logprob: -15.750140190124512
    9. '])' → logprob: -15.875140190124512
    10. '')]' → logprob: -16.125139236450195

Token 206: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2407692670822144
    2. '
' → logprob: -1.3657692670822144
    3. 'for' → logprob: -1.9907692670822144
    4. '<|end|>' → logprob: -1.9907692670822144
    5. ' for' → logprob: -2.240769386291504
    6. '

' → logprob: -3.990769386291504
    7. ' ' → logprob: -4.365769386291504
    8. ')' → logprob: -4.490769386291504
    9. '(' → logprob: -4.740769386291504
    10. 'def' → logprob: -4.990769386291504

Token 207: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04116543009877205
    2. '<|end|>' → logprob: -4.541165351867676
    3. '
' → logprob: -4.666165351867676
    4. 'for' → logprob: -4.791165351867676
    5. '   ' → logprob: -5.166165351867676
    6. ']' → logprob: -6.416165351867676
    7. ')' → logprob: -6.541165351867676
    8. 'def' → logprob: -7.041165351867676
    9. ' #' → logprob: -7.541165351867676
    10. ' for' → logprob: -8.041165351867676

Token 208: ' wa' (ID: 3123)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11291792243719101
    2. ' ' → logprob: -2.237917900085449
    3. '[' → logprob: -10.48791790008545
    4. ' [' → logprob: -10.61291790008545
    5. 'int' → logprob: -11.11291790008545
    6. '   ' → logprob: -11.86291790008545
    7. ' range' → logprob: -12.48791790008545
    8. '[int' → logprob: -12.86291790008545
    9. '  ' → logprob: -12.98791790008545
    10. ' wa' → logprob: -13.11291790008545

Token 209: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20954494178295135
    2. '[' → logprob: -2.4595448970794678
    3. ' for' → logprob: -3.4595448970794678
    4. 'for' → logprob: -3.5845448970794678
    5. ' =' → logprob: -4.209545135498047
    6. '_' → logprob: -5.334545135498047
    7. '_for' → logprob: -5.334545135498047
    8. '_counts' → logprob: -5.584545135498047
    9. '_attempt' → logprob: -5.709545135498047
    10. ' _' → logprob: -6.084545135498047

Token 210: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4935263693332672
    2. ']' → logprob: -1.1185263395309448
    3. ' =' → logprob: -3.6185264587402344
    4. ' for' → logprob: -3.9935264587402344
    5. 'for' → logprob: -5.118526458740234
    6. ']+=' → logprob: -5.118526458740234
    7. ']=' → logprob: -5.618526458740234
    8. ' ]' → logprob: -7.243526458740234
    9. ')' → logprob: -7.868526458740234
    10. ' +=' → logprob: -8.243526458740234

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28132256865501404
    2. ' =' → logprob: -1.4063225984573364
    3. ' for' → logprob: -9.406322479248047
    4. 'for' → logprob: -9.781322479248047
    5. ' ' → logprob: -10.906322479248047
    6. ' +=' → logprob: -12.156322479248047
    7. ',' → logprob: -13.156322479248047
    8. ')' → logprob: -13.906322479248047
    9. ' to' → logprob: -14.031322479248047
    10. '   ' → logprob: -14.281322479248047

Token 212: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022513806819916
    2. ' ' → logprob: -1.9102251529693604
    3. '   ' → logprob: -15.035224914550781
    4. '  ' → logprob: -15.535224914550781
    5. 'int' → logprob: -16.34772491455078
    6. ' for' → logprob: -17.22272491455078
    7. ' the' → logprob: -17.22272491455078
    8. ' ' → logprob: -17.34772491455078
    9. 'for' → logprob: -17.53522491455078
    10. '
' → logprob: -17.66022491455078

Token 213: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2759414315223694
    2. ' of' → logprob: -1.5259413719177246
    3. 'for' → logprob: -5.150941371917725
    4. ' for' → logprob: -5.275941371917725
    5. '(' → logprob: -5.525941371917725
    6. '=' → logprob: -5.650941371917725
    7. ' ' → logprob: -5.775941371917725
    8. '[' → logprob: -7.150941371917725
    9. '0' → logprob: -7.525941371917725
    10. '_of' → logprob: -7.525941371917725

Token 214: ' wrong' (ID: 8201)
  Prédit: 'failed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'failed' → logprob: -0.5122330188751221
    2. ' failed' → logprob: -1.512233018875122
    3. 'wrong' → logprob: -1.887233018875122
    4. ' wrong' → logprob: -4.012232780456543
    5. 'incorrect' → logprob: -5.762232780456543
    6. 'attempt' → logprob: -6.262232780456543
    7. ' attempts' → logprob: -6.637232780456543
    8. ' incorrect' → logprob: -6.637232780456543
    9. ' ' → logprob: -7.012232780456543
    10. 'w' → logprob: -7.637232780456543

Token 215: ' attempts' (ID: 27747)
  Prédit: 'attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attempt' → logprob: -0.32981452345848083
    2. ' attempts' → logprob: -1.8298145532608032
    3. '_attempt' → logprob: -2.7048144340515137
    4. 'sub' → logprob: -3.8298144340515137
    5. ' submissions' → logprob: -4.454814434051514
    6. '_sub' → logprob: -4.829814434051514
    7. 'answers' → logprob: -5.954814434051514
    8. ' ' → logprob: -6.079814434051514
    9. ')' → logprob: -6.704814434051514
    10. 'answer' → logprob: -7.079814434051514

Token 216: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.7204431295394897
    2. ' before' → logprob: -1.2204431295394897
    3. 'for' → logprob: -2.2204432487487793
    4. ' for' → logprob: -2.3454432487487793
    5. '   ' → logprob: -4.345443248748779
    6. 'prior' → logprob: -8.095442771911621
    7. ' prior' → logprob: -8.220442771911621
    8. ' that' → logprob: -9.095442771911621
    9. 'that' → logprob: -9.845442771911621
    10. '	before' → logprob: -9.970442771911621

Token 217: ' first' (ID: 1577)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0023990783374756575
    2. ' ac' → logprob: -6.62739896774292
    3. 'accepted' → logprob: -7.12739896774292
    4. 'AC' → logprob: -9.377399444580078
    5. '_ac' → logprob: -10.377399444580078
    6. ' accepted' → logprob: -10.627399444580078
    7. 'first' → logprob: -10.752399444580078
    8. ''ac' → logprob: -10.752399444580078
    9. 'the' → logprob: -11.002399444580078
    10. ' first' → logprob: -11.127399444580078

Token 218: ' correct' (ID: 6145)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.08105530589818954
    2. 'ac' → logprob: -3.0810554027557373
    3. '_ac' → logprob: -4.956055164337158
    4. '"' → logprob: -5.081055164337158
    5. ' AC' → logprob: -5.206055164337158
    6. 'accepted' → logprob: -5.331055164337158
    7. '   ' → logprob: -6.206055164337158
    8. '_AC' → logprob: -6.581055164337158
    9. ' accepted' → logprob: -6.831055164337158
    10. ' ' → logprob: -6.956055164337158

Token 219: ' submission' (ID: 33837)
  Prédit: ' submission'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' submission' → logprob: -0.4961766004562378
    2. '   ' → logprob: -2.4961767196655273
    3. 'answer' → logprob: -2.8711767196655273
    4. ' answer' → logprob: -2.8711767196655273
    5. 'submission' → logprob: -3.1211767196655273
    6. 'attempt' → logprob: -3.3711767196655273
    7. ' attempt' → logprob: -3.6211767196655273
    8. '_submission' → logprob: -4.246176719665527
    9. ' for' → logprob: -4.496176719665527
    10. ')' → logprob: -4.496176719665527

Token 220: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05076085031032562
    2. 'for' → logprob: -3.4257607460021973
    3. ' for' → logprob: -4.300760746002197
    4. '    
' → logprob: -6.050760746002197
    5. '
' → logprob: -7.800760746002197
    6. '	for' → logprob: -8.175761222839355
    7. '<|end|>' → logprob: -8.550761222839355
    8. ',' → logprob: -9.800761222839355
    9. '<|end|>' → logprob: -10.550761222839355
    10. ')' → logprob: -10.800761222839355

Token 221: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.4165992736816406
    2. 'i' → logprob: -1.5415992736816406
    3. ' problem' → logprob: -2.4165992736816406
    4. ' i' → logprob: -4.416599273681641
    5. 'the' → logprob: -4.916599273681641
    6. '[i' → logprob: -5.041599273681641
    7. 'ac' → logprob: -5.166599273681641
    8. ' the' → logprob: -6.291599273681641
    9. 'that' → logprob: -7.166599273681641
    10. '   ' → logprob: -7.416599273681641

Token 222: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.45159757137298584
    2. 'i' → logprob: -1.0765975713729858
    3. '[i' → logprob: -4.576597690582275
    4. ')' → logprob: -5.076597690582275
    5. ']' → logprob: -6.076597690582275
    6. '   ' → logprob: -6.326597690582275
    7. '_i' → logprob: -7.326597690582275
    8. ' ]' → logprob: -7.826597690582275
    9. ' ' → logprob: -8.076597213745117
    10. '(i' → logprob: -8.701597213745117

Token 223: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9695815443992615
    2. '

' → logprob: -1.4695816040039062
    3. ')' → logprob: -1.5945816040039062
    4. '
' → logprob: -2.0945816040039062
    5. ']' → logprob: -3.4695816040039062
    6. ')

' → logprob: -4.219581604003906
    7. 'for' → logprob: -5.219581604003906
    8. '    
' → logprob: -5.469581604003906
    9. ' for' → logprob: -6.344581604003906
    10. '<|end|>' → logprob: -6.594581604003906

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.171211838722229
    2. 'for' → logprob: -1.921211838722229
    3. ' for' → logprob: -4.5462117195129395
    4. '    
' → logprob: -8.296212196350098
    5. '	for' → logprob: -10.296212196350098
    6. '
' → logprob: -10.421212196350098
    7. '```' → logprob: -13.921212196350098
    8. '  
' → logprob: -14.171212196350098
    9. '<|end|>' → logprob: -14.421212196350098
    10. ' 
' → logprob: -14.671212196350098

Token 225: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.0629870858974755e-05
    2. ' for' → logprob: -10.37506103515625
    3. '   ' → logprob: -10.62506103515625
    4. 'total' → logprob: -12.87506103515625
    5. 'accepted' → logprob: -13.12506103515625
    6. 'import' → logprob: -15.75006103515625
    7. 'ac' → logprob: -16.00006103515625
    8. 'count' → logprob: -17.37506103515625
    9. '
' → logprob: -17.50006103515625
    10. 'from' → logprob: -17.50006103515625

Token 226: ' Process' (ID: 12482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008866838761605322
    2. ' for' → logprob: -7.375886917114258
    3. 'accepted' → logprob: -8.750886917114258
    4. 'ac' → logprob: -10.375886917114258
    5. 'sol' → logprob: -10.625886917114258
    6. '   ' → logprob: -11.000886917114258
    7. 'total' → logprob: -11.500886917114258
    8. 'problem' → logprob: -12.500886917114258
    9. 'pro' → logprob: -13.125886917114258
    10. 'AC' → logprob: -13.250886917114258

Token 227: ' each' (ID: 2454)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.35774320363998413
    2. '_' → logprob: -2.607743263244629
    3. ' for' → logprob: -2.732743263244629
    4. 'range' → logprob: -2.732743263244629
    5. '   ' → logprob: -3.107743263244629
    6. 'for' → logprob: -3.232743263244629
    7. ' _' → logprob: -4.482743263244629
    8. ' ' → logprob: -7.857743263244629
    9. '_range' → logprob: -7.857743263244629
    10. ' in' → logprob: -8.232743263244629

Token 228: ' submission' (ID: 33837)
  Prédit: ' submission'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' submission' → logprob: -0.43716487288475037
    2. ' _' → logprob: -2.062164783477783
    3. '_' → logprob: -2.312164783477783
    4. ' line' → logprob: -2.812164783477783
    5. 'submission' → logprob: -3.687164783477783
    6. '_submission' → logprob: -4.312164783477783
    7. '   ' → logprob: -4.812164783477783
    8. 'for' → logprob: -5.562164783477783
    9. ' range' → logprob: -5.562164783477783
    10. ' for' → logprob: -5.687164783477783

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025616264902055264
    2. 'for' → logprob: -6.252561569213867
    3. ' for' → logprob: -7.502561569213867
    4. '    
' → logprob: -10.002561569213867
    5. '
' → logprob: -10.502561569213867
    6. '	for' → logprob: -11.752561569213867
    7. '	
' → logprob: -16.877561569213867
    8. '    ' → logprob: -16.877561569213867
    9. '  
' → logprob: -17.002561569213867
    10. '       ' → logprob: -17.127561569213867

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023579586297273636
    2. 'for' → logprob: -4.1485795974731445
    3. ' for' → logprob: -4.8985795974731445
    4. '
' → logprob: -10.523579597473145
    5. '    
' → logprob: -10.523579597473145
    6. '	for' → logprob: -12.273579597473145
    7. '```' → logprob: -14.898579597473145
    8. ',' → logprob: -15.398579597473145
    9. '    ' → logprob: -16.148578643798828
    10. ' 
' → logprob: -16.773578643798828

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0031846018973737955
    2. ' for' → logprob: -6.003184795379639
    3. '   ' → logprob: -7.253184795379639
    4. '	for' → logprob: -14.25318431854248
    5. '
' → logprob: -16.003185272216797
    6. ' ' → logprob: -17.003185272216797
    7. '    
' → logprob: -17.378185272216797
    8. '  ' → logprob: -18.378185272216797
    9. ' 
' → logprob: -19.128185272216797
    10. '```' → logprob: -19.628185272216797

Token 232: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.023388734087347984
    2. '_' → logprob: -3.773388624191284
    3. ' i' → logprob: -8.898388862609863
    4. ' ' → logprob: -12.273388862609863
    5. 'i' → logprob: -13.398388862609863
    6. '_i' → logprob: -15.148388862609863
    7. ' in' → logprob: -16.398387908935547
    8. ' _
' → logprob: -16.648387908935547
    9. ' line' → logprob: -17.023387908935547
    10. ' ' → logprob: -17.898387908935547

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38710588216781616
    2. 'in' → logprob: -1.137105941772461
    3. ' ' → logprob: -8.387105941772461
    4. '  ' → logprob: -12.887105941772461
    5. 'import' → logprob: -13.887105941772461
    6. '	in' → logprob: -13.887105941772461
    7. '   ' → logprob: -14.762105941772461
    8. ' _' → logprob: -15.262105941772461
    9. ',' → logprob: -15.262105941772461
    10. '    ' → logprob: -15.512105941772461

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004927450208924711
    2. ' range' → logprob: -7.625492572784424
    3. 'input' → logprob: -13.375493049621582
    4. '(range' → logprob: -13.875493049621582
    5. '	range' → logprob: -15.250493049621582
    6. 'in' → logprob: -15.375493049621582
    7. 'ange' → logprob: -15.375493049621582
    8. '   ' → logprob: -15.500493049621582
    9. '```' → logprob: -15.500493049621582
    10. 'sys' → logprob: -15.625493049621582

Token 235: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.006731949746608734
    2. ' (' → logprob: -5.881731986999512
    3. ' M' → logprob: -6.006731986999512
    4. '(' → logprob: -6.756731986999512
    5. 'M' → logprob: -8.506731986999512
    6. ' range' → logprob: -10.381731986999512
    7. '   ' → logprob: -10.881731986999512
    8. ')' → logprob: -11.131731986999512
    9. 'range' → logprob: -11.756731986999512
    10. ',' → logprob: -12.381731986999512

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12711970508098602
    2. '):
' → logprob: -2.127119779586792
    3. ':' → logprob: -9.252120018005371
    4. '   ' → logprob: -10.002120018005371
    5. ',' → logprob: -11.127120018005371
    6. '):
' → logprob: -11.252120018005371
    7. ' ):' → logprob: -11.752120018005371
    8. ')' → logprob: -11.877120018005371
    9. '):

' → logprob: -13.252120018005371
    10. ' ):
' → logprob: -13.627120018005371

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003015001420862973
    2. '   ' → logprob: -9.125301361083984
    3. ' p' → logprob: -9.125301361083984
    4. ' line' → logprob: -9.875301361083984
    5. 'p' → logprob: -10.875301361083984
    6. '        
' → logprob: -13.125301361083984
    7. ',' → logprob: -13.500301361083984
    8. '      ' → logprob: -13.875301361083984
    9. 'line' → logprob: -14.000301361083984
    10. '           ' → logprob: -14.125301361083984

Token 238: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.029939545318484306
    2. ' p' → logprob: -3.529939651489258
    3. '   ' → logprob: -8.904939651489258
    4. ' line' → logprob: -10.654939651489258
    5. 'line' → logprob: -10.904939651489258
    6. '       ' → logprob: -11.904939651489258
    7. 'problem' → logprob: -13.779939651489258
    8. '	p' → logprob: -13.904939651489258
    9. ' ' → logprob: -14.529939651489258
    10. 's' → logprob: -14.904939651489258

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013193413615226746
    2. ' ,' → logprob: -4.388193607330322
    3. ',s' → logprob: -7.888193607330322
    4. ' s' → logprob: -8.138193130493164
    5. 's' → logprob: -11.388193130493164
    6. '_,' → logprob: -13.638193130493164
    7. ' ' → logprob: -13.888193130493164
    8. ',p' → logprob: -14.388193130493164
    9. '‌,' → logprob: -14.763193130493164
    10. ',
' → logprob: -15.263193130493164

Token 240: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38758546113967896
    2. ' s' → logprob: -1.1375854015350342
    3. ' verdict' → logprob: -7.262585639953613
    4. 'ver' → logprob: -11.762585639953613
    5. 'v' → logprob: -13.137585639953613
    6. 'Verd' → logprob: -14.012585639953613
    7. ' ' → logprob: -14.387585639953613
    8. 'status' → logprob: -15.012585639953613
    9. '   ' → logprob: -15.387585639953613
    10. ' Verdict' → logprob: -15.387585639953613

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759425759315491
    2. ' =' → logprob: -0.8259425759315491
    3. '=input' → logprob: -13.325942993164062
    4. ',' → logprob: -13.825942993164062
    5. ' ' → logprob: -15.700942993164062
    6. ')' → logprob: -16.950942993164062
    7. '   ' → logprob: -16.950942993164062
    8. '    ' → logprob: -17.075942993164062
    9. '=line' → logprob: -17.200942993164062
    10. '	' → logprob: -17.450942993164062

Token 242: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693051993846893
    2. ' input' → logprob: -2.1269304752349854
    3. ' sys' → logprob: -13.501930236816406
    4. 'sys' → logprob: -13.751930236816406
    5. ' ' → logprob: -17.126930236816406
    6. 'map' → logprob: -19.126930236816406
    7. '=input' → logprob: -19.126930236816406
    8. '(input' → logprob: -19.251930236816406
    9. '   ' → logprob: -19.501930236816406
    10. '	input' → logprob: -19.751930236816406

Token 243: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3306015716807451e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -15.25001335144043
    4. '.split' → logprob: -18.37501335144043
    5. '(' → logprob: -18.50001335144043
    6. '.' → logprob: -19.25001335144043
    7. '()
' → logprob: -19.75001335144043
    8. '()].' → logprob: -20.00001335144043
    9. '   ' → logprob: -20.37501335144043
    10. ' .' → logprob: -20.37501335144043

Token 244: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003178544342517853
    2. 'strip' → logprob: -5.753178596496582
    3. 'rstrip' → logprob: -14.003178596496582
    4. ' split' → logprob: -19.128177642822266
    5. '(split' → logprob: -20.628177642822266
    6. 'spl' → logprob: -20.628177642822266
    7. '.split' → logprob: -22.378177642822266
    8. '_split' → logprob: -22.628177642822266
    9. 'rs' → logprob: -23.503177642822266
    10. 'sp' → logprob: -23.878177642822266

Token 245: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13593575358390808
    2. '
' → logprob: -2.6359357833862305
    3. '        
' → logprob: -3.6359357833862305
    4. '<|end|>' → logprob: -3.7609357833862305
    5. ')' → logprob: -6.7609357833862305
    6. '        ' → logprob: -7.0109357833862305
    7. '<|end|>' → logprob: -7.1359357833862305
    8. ',' → logprob: -7.3859357833862305
    9. '  
' → logprob: -7.5109357833862305
    10. '    
' → logprob: -7.5109357833862305

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024341002106666565
    2. ' p' → logprob: -4.274341106414795
    3. '        
' → logprob: -6.024341106414795
    4. '   ' → logprob: -6.149341106414795
    5. 'p' → logprob: -6.524341106414795
    6. '<|end|>' → logprob: -6.524341106414795
    7. ' 
' → logprob: -6.774341106414795
    8. '        ' → logprob: -8.149340629577637
    9. '    ' → logprob: -8.399340629577637
    10. '    
' → logprob: -8.524340629577637

Token 247: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0060269152745604515
    2. ' p' → logprob: -5.131026744842529
    3. '       ' → logprob: -9.256027221679688
    4. '   ' → logprob: -13.256027221679688
    5. 'problem' → logprob: -14.756027221679688
    6. 'if' → logprob: -15.756027221679688
    7. 'idx' → logprob: -16.006027221679688
    8. 'i' → logprob: -16.506027221679688
    9. '        
' → logprob: -16.631027221679688
    10. ' problem' → logprob: -17.131027221679688

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38741108775138855
    2. ' =' → logprob: -1.137411117553711
    3. '-' → logprob: -7.887411117553711
    4. '=int' → logprob: -9.387411117553711
    5. '-=' → logprob: -10.137411117553711
    6. ' -=' → logprob: -10.637411117553711
    7. 'int' → logprob: -12.262411117553711
    8. 'p' → logprob: -12.387411117553711
    9. ')' → logprob: -13.012411117553711
    10. '_idx' → logprob: -14.137411117553711

Token 249: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.5491004129871726e-05
    2. ' int' → logprob: -10.000045776367188
    3. '[int' → logprob: -21.750045776367188
    4. '(int' → logprob: -23.250045776367188
    5. '	int' → logprob: -23.625045776367188
    6. '=int' → logprob: -23.750045776367188
    7. '   ' → logprob: -23.875045776367188
    8. '<int' → logprob: -23.875045776367188
    9. ' ' → logprob: -24.125045776367188
    10. '  ' → logprob: -25.125045776367188

Token 250: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0024814847856760025
    2. '(' → logprob: -6.002481460571289
    3. 'p' → logprob: -12.877481460571289
    4. '(
' → logprob: -13.252481460571289
    5. ' (' → logprob: -13.627481460571289
    6. '()' → logprob: -16.37748146057129
    7. ')p' → logprob: -16.87748146057129
    8. ' p' → logprob: -17.25248146057129
    9. '((' → logprob: -17.62748146057129
    10. ')' → logprob: -18.12748146057129

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020020268857479095
    2. ')-' → logprob: -8.750200271606445
    3. '-' → logprob: -10.625200271606445
    4. ' )' → logprob: -11.750200271606445
    5. ' -' → logprob: -12.000200271606445
    6. '       ' → logprob: -14.250200271606445
    7. '-)' → logprob: -14.375200271606445
    8. ')
' → logprob: -14.375200271606445
    9. '[' → logprob: -14.625200271606445
    10. '   ' → logprob: -15.000200271606445

Token 252: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02720675803720951
    2. ' -' → logprob: -3.6522066593170166
    3. '       ' → logprob: -8.527206420898438
    4. ')' → logprob: -8.902206420898438
    5. '<|end|>' → logprob: -9.027206420898438
    6. '#' → logprob: -9.277206420898438
    7. '(p' → logprob: -9.527206420898438
    8. 'p' → logprob: -9.902206420898438
    9. '()-' → logprob: -9.902206420898438
    10. '[' → logprob: -9.902206420898438

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -19.125024795532227
    4. '   ' → logprob: -19.875024795532227
    5. '<|end|>' → logprob: -20.375024795532227
    6. '１' → logprob: -21.812524795532227
    7. '`' → logprob: -21.937524795532227
    8. '0' → logprob: -22.062524795532227
    9. '۱' → logprob: -22.562524795532227
    10. ')' → logprob: -22.625024795532227

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.0000057220459
    4. '```' → logprob: -20.6250057220459
    5. '<|end|>' → logprob: -20.8750057220459
    6. '0' → logprob: -22.7500057220459
    7. '１' → logprob: -22.8750057220459
    8. '`' → logprob: -23.1250057220459
    9. 'to' → logprob: -23.5625057220459
    10. '  ' → logprob: -23.6250057220459

Token 255: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019845126196742058
    2. '
' → logprob: -4.144845008850098
    3. '<|end|>' → logprob: -5.894845008850098
    4. ' if' → logprob: -7.519845008850098
    5. '        
' → logprob: -8.144845008850098
    6. 'if' → logprob: -9.269845008850098
    7. '<|end|>' → logprob: -10.519845008850098
    8. '  
' → logprob: -10.769845008850098
    9. ' 
' → logprob: -10.894845008850098
    10. ',' → logprob: -11.019845008850098

Token 256: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08197356760501862
    2. '
' → logprob: -2.5819735527038574
    3. '<|end|>' → logprob: -6.706973552703857
    4. '        
' → logprob: -7.331973552703857
    5. 'if' → logprob: -7.706973552703857
    6. ' if' → logprob: -7.956973552703857
    7. ' 
' → logprob: -8.831974029541016
    8. '  
' → logprob: -9.456974029541016
    9. '   ' → logprob: -10.081974029541016
    10. '    
' → logprob: -10.581974029541016

Token 257: ' Convert' (ID: 15629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3942822515964508
    2. ' if' → logprob: -1.1442822217941284
    3. '<|end|>' → logprob: -5.644282341003418
    4. 'If' → logprob: -6.394282341003418
    5. '#' → logprob: -6.894282341003418
    6. '
' → logprob: -7.644282341003418
    7. ' 
' → logprob: -8.769282341003418
    8. ' ' → logprob: -9.144282341003418
    9. '```' → logprob: -9.269282341003418
    10. ' #' → logprob: -9.769282341003418

Token 258: ' problem' (ID: 4792)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12276450544595718
    2. ' p' → logprob: -2.3727645874023438
    3. ' to' → logprob: -4.122764587402344
    4. 'to' → logprob: -5.122764587402344
    5. '(p' → logprob: -9.247764587402344
    6. '<|end|>' → logprob: -11.247764587402344
    7. 'problem' → logprob: -11.372764587402344
    8. ' ' → logprob: -12.247764587402344
    9. 'index' → logprob: -12.372764587402344
    10. '_p' → logprob: -12.622764587402344

Token 259: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.8020375370979309
    2. 'number' → logprob: -1.5520374774932861
    3. ' index' → logprob: -1.9270374774932861
    4. 'index' → logprob: -1.9270374774932861
    5. '_number' → logprob: -3.677037477493286
    6. ' to' → logprob: -4.802037715911865
    7. '_index' → logprob: -5.177037715911865
    8. ' p' → logprob: -6.177037715911865
    9. '-' → logprob: -6.677037715911865
    10. 'p' → logprob: -6.677037715911865

Token 260: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.38245928287506104
    2. '<|end|>' → logprob: -1.632459282875061
    3. 'to' → logprob: -2.1324591636657715
    4. '<|end|>' → logprob: -6.2574591636657715
    5. ' if' → logprob: -7.0074591636657715
    6. ' into' → logprob: -7.8824591636657715
    7. 'if' → logprob: -8.00745964050293
    8. ')' → logprob: -9.25745964050293
    9. ',' → logprob: -10.13245964050293
    10. 'token' → logprob: -10.38245964050293

Token 261: ' ' (ID: 220)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.41220882534980774
    2. '0' → logprob: -1.1622087955474854
    3. 'zero' → logprob: -4.1622090339660645
    4. ' ' → logprob: -4.6622090339660645
    5. 'index' → logprob: -14.537208557128906
    6. ' index' → logprob: -15.412208557128906
    7. '-zero' → logprob: -16.787208557128906
    8. '_zero' → logprob: -18.162208557128906
    9. 'Zero' → logprob: -18.162208557128906
    10. ' zer' → logprob: -18.537208557128906

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13452427089214325
    2. 'zero' → logprob: -2.134524345397949
    3. ' zero' → logprob: -4.884524345397949
    4. ' ' → logprob: -13.00952434539795
    5. 'index' → logprob: -13.00952434539795
    6. '-zero' → logprob: -15.50952434539795
    7. '_zero' → logprob: -16.884523391723633
    8. 'Zero' → logprob: -17.884523391723633
    9. 'p' → logprob: -18.259523391723633
    10. ' صفر' → logprob: -19.759523391723633

Token 263: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.06505493074655533
    2. '-index' → logprob: -2.8150548934936523
    3. 'based' → logprob: -5.815054893493652
    4. ' -' → logprob: -9.315054893493652
    5. 'indexed' → logprob: -12.065054893493652
    6. 'index' → logprob: -12.940054893493652
    7. '-' → logprob: -14.065054893493652
    8. '-base' → logprob: -14.065054893493652
    9. ' based' → logprob: -14.565054893493652
    10. '_based' → logprob: -16.44005584716797

Token 264: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5376847386360168
    2. '<|end|>' → logprob: -1.412684679031372
    3. ' index' → logprob: -1.787684679031372
    4. '
' → logprob: -5.912684917449951
    5. ' indexing' → logprob: -6.912684917449951
    6. '<|end|>' → logprob: -7.412684917449951
    7. '#index' → logprob: -8.037684440612793
    8. ')' → logprob: -9.662684440612793
    9. '_index' → logprob: -9.787684440612793
    10. 'idx' → logprob: -9.787684440612793

Token 265: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16966331005096436
    2. '
' → logprob: -1.9196633100509644
    3. '<|end|>' → logprob: -5.044663429260254
    4. ' if' → logprob: -6.669663429260254
    5. '        
' → logprob: -7.044663429260254
    6. 'if' → logprob: -7.794663429260254
    7. '<|end|>' → logprob: -9.294663429260254
    8. '  
' → logprob: -9.544663429260254
    9. ' 
' → logprob: -9.669663429260254
    10. '   ' → logprob: -10.169663429260254

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3490670919418335
    2. 'if' → logprob: -1.3490670919418335
    3. ' if' → logprob: -3.349067211151123
    4. '   ' → logprob: -9.849066734313965
    5. '	if' → logprob: -13.974066734313965
    6. ' ' → logprob: -15.099066734313965
    7. '      ' → logprob: -15.599066734313965
    8. '```' → logprob: -15.599066734313965
    9. '        
' → logprob: -15.849066734313965
    10. '  ' → logprob: -15.974066734313965

Token 267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.127333340875339e-06
    2. '       ' → logprob: -12.500003814697266
    3. ' if' → logprob: -14.750003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '           ' → logprob: -21.375003814697266
    6. '	if' → logprob: -21.875003814697266
    7. '```' → logprob: -22.500003814697266
    8. 'If' → logprob: -22.625003814697266
    9. '        
' → logprob: -22.750003814697266
    10. 'i' → logprob: -23.500003814697266

Token 268: ' s' (ID: 265)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.4607012867927551
    2. 's' → logprob: -1.0857012271881104
    3. 'not' → logprob: -3.7107012271881104
    4. ' ac' → logprob: -5.5857014656066895
    5. ' not' → logprob: -6.2107014656066895
    6. ' s' → logprob: -6.7107014656066895
    7. '(ac' → logprob: -10.585700988769531
    8. '   ' → logprob: -12.460700988769531
    9. '	ac' → logprob: -12.460700988769531
    10. '(not' → logprob: -13.023200988769531

Token 269: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42918193340301514
    2. '==' → logprob: -1.0541819334030151
    3. ' !=' → logprob: -8.429182052612305
    4. '!=' → logprob: -8.804182052612305
    5. '=' → logprob: -9.929182052612305
    6. '=="' → logprob: -10.304182052612305
    7. ')' → logprob: -11.679182052612305
    8. '[' → logprob: -12.054182052612305
    9. '==
' → logprob: -12.304182052612305
    10. ' =="' → logprob: -13.304182052612305

Token 270: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6934248805046082
    2. ''' → logprob: -0.6934248805046082
    3. ' "' → logprob: -9.068425178527832
    4. ' '' → logprob: -9.193425178527832
    5. ''ac' → logprob: -10.318425178527832
    6. '   ' → logprob: -11.318425178527832
    7. ''"' → logprob: -12.068425178527832
    8. ' ' → logprob: -12.068425178527832
    9. '  ' → logprob: -14.443425178527832
    10. '`' → logprob: -14.568425178527832

Token 271: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.1431330293416977
    2. 'WA' → logprob: -2.0181329250335693
    3. ''' → logprob: -8.518133163452148
    4. '"' → logprob: -8.768133163452148
    5. 'W' → logprob: -9.893133163452148
    6. 'WC' → logprob: -11.143133163452148
    7. ' AC' → logprob: -12.393133163452148
    8. '"W' → logprob: -12.518133163452148
    9. ' WA' → logprob: -12.893133163452148
    10. ''ac' → logprob: -13.018133163452148

Token 272: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.7266955375671387
    2. ''' → logprob: -0.9766955375671387
    3. '':' → logprob: -1.9766955375671387
    4. ' and' → logprob: -7.476695537567139
    5. '':
' → logprob: -8.101696014404297
    6. ':' → logprob: -8.726696014404297
    7. 'and' → logprob: -8.851696014404297
    8. '':

' → logprob: -9.226696014404297
    9. '       ' → logprob: -10.226696014404297
    10. ':
' → logprob: -10.226696014404297

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24491842091083527
    2. ' and' → logprob: -1.9949184656143188
    3. ' if' → logprob: -2.9949183464050293
    4. 'if' → logprob: -3.6199183464050293
    5. 'and' → logprob: -6.494918346405029
    6. ':
' → logprob: -6.619918346405029
    7. '       ' → logprob: -6.744918346405029
    8. ':' → logprob: -8.869918823242188
    9. '
' → logprob: -8.869918823242188
    10. '   ' → logprob: -10.619918823242188

Token 274: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05058644711971283
    2. '           ' → logprob: -3.925586462020874
    3. ' if' → logprob: -4.300586223602295
    4. '       ' → logprob: -4.675586223602295
    5. 'ac' → logprob: -5.050586223602295
    6. '   ' → logprob: -8.425586700439453
    7. ' ac' → logprob: -9.800586700439453
    8. '               ' → logprob: -10.425586700439453
    9. ' ' → logprob: -13.300586700439453
    10. '	if' → logprob: -14.050586700439453

Token 275: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0036099248100072145
    2. '           ' → logprob: -6.378610134124756
    3. ' if' → logprob: -6.753610134124756
    4. 'ac' → logprob: -7.253610134124756
    5. '       ' → logprob: -11.128609657287598
    6. '   ' → logprob: -11.878609657287598
    7. '               ' → logprob: -12.378609657287598
    8. ' ac' → logprob: -13.253609657287598
    9. 'If' → logprob: -13.878609657287598
    10. '
' → logprob: -13.878609657287598

Token 276: ' the' (ID: 290)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.76473069190979
    2. ' not' → logprob: -1.26473069190979
    3. 'not' → logprob: -1.76473069190979
    4. ' ac' → logprob: -2.51473069190979
    5. '   ' → logprob: -9.639730453491211
    6. '	ac' → logprob: -11.139730453491211
    7. ' ' → logprob: -12.014730453491211
    8. 'a' → logprob: -12.952230453491211
    9. '(ac' → logprob: -13.202230453491211
    10. '!' → logprob: -13.327230453491211

Token 277: ' problem' (ID: 4792)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.006554797757416964
    2. ' ac' → logprob: -5.63155460357666
    3. 'not' → logprob: -6.00655460357666
    4. ' not' → logprob: -7.63155460357666
    5. '   ' → logprob: -14.88155460357666
    6. '	ac' → logprob: -14.88155460357666
    7. 'problem' → logprob: -14.88155460357666
    8. '
' → logprob: -15.13155460357666
    9. ' problem' → logprob: -15.50655460357666
    10. 'AC' → logprob: -15.50655460357666

Token 278: ' wasn't' (ID: 18101)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.3973308801651001
    2. 'ac' → logprob: -1.7723308801651
    3. 'has' → logprob: -2.1473307609558105
    4. ' hasn't' → logprob: -4.2723307609558105
    5. ' was' → logprob: -4.7723307609558105
    6. 'was' → logprob: -5.0223307609558105
    7. 'not' → logprob: -5.1473307609558105
    8. ' not' → logprob: -6.2723307609558105
    9. ' ac' → logprob: -6.6473307609558105
    10. ' is' → logprob: -6.7723307609558105

Token 279: ' accepted' (ID: 17562)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'already' → logprob: -1.0579670667648315
    2. 'sol' → logprob: -1.1829670667648315
    3. 'ac' → logprob: -1.3079670667648315
    4. ' solved' → logprob: -3.057967185974121
    5. 'accepted' → logprob: -3.932967185974121
    6. ' already' → logprob: -4.932967185974121
    7. ' accepted' → logprob: -7.307967185974121
    8. ' previously' → logprob: -7.682967185974121
    9. ' ac' → logprob: -7.932967185974121
    10. 'AC' → logprob: -8.432967185974121

Token 280: ' before' (ID: 2254)
  Prédit: ' yet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yet' → logprob: -0.6312018036842346
    2. ' and' → logprob: -1.0062017440795898
    3. 'and' → logprob: -2.50620174407959
    4. 'yet' → logprob: -4.13120174407959
    5. '           ' → logprob: -5.88120174407959
    6. ' previously' → logprob: -7.38120174407959
    7. ',' → logprob: -7.63120174407959
    8. ' before' → logprob: -8.13120174407959
    9. ' already' → logprob: -8.50620174407959
    10. 'already' → logprob: -8.63120174407959

Token 281: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08143877238035202
    2. 'and' → logprob: -3.3314387798309326
    3. '           ' → logprob: -3.5814387798309326
    4. ',' → logprob: -4.7064385414123535
    5. ' if' → logprob: -5.9564385414123535
    6. 'if' → logprob: -6.4564385414123535
    7. '               ' → logprob: -7.5814385414123535
    8. ':' → logprob: -7.7064385414123535
    9. ':
' → logprob: -8.206439018249512
    10. '       ' → logprob: -8.706439018249512

Token 282: ' mark' (ID: 1983)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7946217656135559
    2. ' ac' → logprob: -1.0446217060089111
    3. '           ' → logprob: -2.294621706008911
    4. 'if' → logprob: -3.169621706008911
    5. ' if' → logprob: -3.419621706008911
    6. '               ' → logprob: -3.919621706008911
    7. '   ' → logprob: -7.66962194442749
    8. '       ' → logprob: -8.669621467590332
    9. '            ' → logprob: -9.294621467590332
    10. '	ac' → logprob: -9.669621467590332

Token 283: ' as' (ID: 472)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.10351080447435379
    2. ' ac' → logprob: -2.353510856628418
    3. '           ' → logprob: -6.353510856628418
    4. ' it' → logprob: -6.853510856628418
    5. 'it' → logprob: -8.603510856628418
    6. '   ' → logprob: -8.728510856628418
    7. '       ' → logprob: -9.853510856628418
    8. '	ac' → logprob: -10.228510856628418
    9. '               ' → logprob: -10.978510856628418
    10. '(ac' → logprob: -11.103510856628418

Token 284: ' accepted' (ID: 17562)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07912077754735947
    2. 'ac' → logprob: -2.7041208744049072
    3. 'accepted' → logprob: -5.704120635986328
    4. ' ' → logprob: -6.204120635986328
    5. 'sol' → logprob: -6.579120635986328
    6. ' solved' → logprob: -6.704120635986328
    7. ' ac' → logprob: -7.079120635986328
    8. '   ' → logprob: -9.079120635986328
    9. ' accepted' → logprob: -9.454120635986328
    10. ' True' → logprob: -10.579120635986328

Token 285: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3885383903980255
    2. ' and' → logprob: -1.2635383605957031
    3. 'and' → logprob: -3.763538360595703
    4. ' if' → logprob: -4.638538360595703
    5. 'if' → logprob: -5.888538360595703
    6. '               ' → logprob: -6.513538360595703
    7. ',' → logprob: -6.638538360595703
    8. 'ac' → logprob: -7.388538360595703
    9. '       ' → logprob: -9.888538360595703
    10. '
' → logprob: -10.138538360595703

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029444269835948944
    2. ' and' → logprob: -3.6544442176818848
    3. ' if' → logprob: -6.654444217681885
    4. '               ' → logprob: -6.904444217681885
    5. 'and' → logprob: -7.654444217681885
    6. ',' → logprob: -8.654444694519043
    7. 'if' → logprob: -9.154444694519043
    8. 'ac' → logprob: -10.279444694519043
    9. ' ac' → logprob: -10.779444694519043
    10. '       ' → logprob: -10.904444694519043

Token 287: ' ac' (ID: 1375)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004235581960529089
    2. '           ' → logprob: -6.004235744476318
    3. ' if' → logprob: -6.504235744476318
    4. 'ac' (adapté à ' ac') → logprob: -8.37923526763916
    5. '               ' → logprob: -10.62923526763916
    6. '   ' → logprob: -12.12923526763916
    7. '       ' → logprob: -13.50423526763916
    8. ' ac' → logprob: -14.37923526763916
    9. ' ' → logprob: -16.879236221313477
    10. 'If' → logprob: -17.254236221313477

Token 288: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.949026571121067e-05
    2. '[' → logprob: -9.250099182128906
    3. 'p' → logprob: -13.500099182128906
    4. ' [' → logprob: -14.000099182128906
    5. '[i' → logprob: -14.125099182128906
    6. '\[' → logprob: -16.000099182128906
    7. 'if' → logprob: -17.250099182128906
    8. '[ip' → logprob: -17.375099182128906
    9. '[s' → logprob: -17.500099182128906
    10. '][' → logprob: -17.625099182128906

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019418458687141538
    2. ']=' → logprob: -6.251941680908203
    3. '=' → logprob: -11.251941680908203
    4. ']+=' → logprob: -16.001941680908203
    5. ' ]' → logprob: -16.126941680908203
    6. '[' → logprob: -16.751941680908203
    7. ']==' → logprob: -17.251941680908203
    8. '[p' → logprob: -17.501941680908203
    9. ')' → logprob: -18.251941680908203
    10. ']
' → logprob: -18.501941680908203

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052377874962985516
    2. ' =' → logprob: -5.255237579345703
    3. '[' → logprob: -12.630237579345703
    4. '[p' → logprob: -15.005237579345703
    5. '+=' → logprob: -16.130237579345703
    6. ']' → logprob: -16.505237579345703
    7. ' |=' → logprob: -17.255237579345703
    8. ']=' → logprob: -17.505237579345703
    9. '==' → logprob: -18.005237579345703
    10. 'p' → logprob: -18.130237579345703

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.250041007995605
    4. '  ' → logprob: -18.50004005432129
    5. '       ' → logprob: -19.75004005432129
    6. '           ' → logprob: -20.12504005432129
    7. '    ' → logprob: -20.62504005432129
    8. 's' → logprob: -20.62504005432129
    9. 'True' → logprob: -20.81254005432129
    10. '```' → logprob: -20.81254005432129

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -19.5
    4. 'true' → logprob: -20.375
    5. 'True' → logprob: -20.5
    6. 'int' → logprob: -22.25
    7. 's' → logprob: -22.375
    8. '[' → logprob: -22.375
    9. '１' → logprob: -22.375
    10. '```' → logprob: -22.4375

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6290868520736694
    2. '
' → logprob: -1.5040868520736694
    3. 'elif' → logprob: -2.254086971282959
    4. 'else' → logprob: -2.879086971282959
    5. ' if' → logprob: -3.504086971282959
    6. ' else' → logprob: -4.129086971282959
    7. ' elif' → logprob: -4.379086971282959
    8. 'if' → logprob: -4.629086971282959
    9. ' and' → logprob: -4.879086971282959
    10. '<|end|>' → logprob: -5.379086971282959

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09026344865560532
    2. 'elif' → logprob: -3.0902633666992188
    3. 'else' → logprob: -3.7152633666992188
    4. ' else' → logprob: -4.840263366699219
    5. ' elif' → logprob: -4.840263366699219
    6. '<|end|>' → logprob: -7.965263366699219
    7. '
' → logprob: -9.215263366699219
    8. '        
' → logprob: -10.090263366699219
    9. '	elif' → logprob: -10.215263366699219
    10. '           ' → logprob: -10.465263366699219

Token 295: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5301710963249207
    2. '       ' → logprob: -1.0301711559295654
    3. 'else' (adapté à ' else') → logprob: -3.0301711559295654
    4. ' elif' → logprob: -5.155170917510986
    5. ' else' → logprob: -7.780170917510986
    6. '   ' → logprob: -10.280171394348145
    7. '	elif' → logprob: -11.155171394348145
    8. 'elseif' → logprob: -13.530171394348145
    9. '           ' → logprob: -13.905171394348145
    10. '```' → logprob: -14.155171394348145

Token 296: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2725895941257477
    2. ':
' → logprob: -1.6475895643234253
    3. ':' → logprob: -3.147589683532715
    4. ' if' → logprob: -6.272589683532715
    5. 'if' → logprob: -6.897589683532715
    6. ' and' → logprob: -9.772589683532715
    7. '       ' → logprob: -10.022589683532715
    8. 'and' → logprob: -10.397589683532715
    9. '   ' → logprob: -10.897589683532715
    10. '               ' → logprob: -11.022589683532715

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08015986531972885
    2. 'if' → logprob: -2.580159902572632
    3. ' if' → logprob: -6.955159664154053
    4. '   ' → logprob: -8.830160140991211
    5. '               ' → logprob: -9.080160140991211
    6. '       ' → logprob: -9.955160140991211
    7. '	       ' → logprob: -13.080160140991211
    8. 'elif' → logprob: -13.705160140991211
    9. '          ' → logprob: -14.330160140991211
    10. '	if' → logprob: -14.455160140991211

Token 298: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007906957529485226
    2. '           ' → logprob: -5.507906913757324
    3. ' if' → logprob: -6.007906913757324
    4. '       ' → logprob: -6.632906913757324
    5. '   ' → logprob: -10.257906913757324
    6. '	if' → logprob: -12.132906913757324
    7. '               ' → logprob: -13.007906913757324
    8. ' ' → logprob: -13.507906913757324
    9. '#' (adapté à ' #') → logprob: -14.382906913757324
    10. '  ' → logprob: -15.757906913757324

Token 299: ' Only' (ID: 12817)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009759013773873448
    2. '           ' → logprob: -7.000976085662842
    3. ' if' → logprob: -9.875975608825684
    4. '       ' → logprob: -12.000975608825684
    5. '   ' → logprob: -12.250975608825684
    6. '#' → logprob: -14.000975608825684
    7. 'If' → logprob: -14.125975608825684
    8. '	if' → logprob: -15.125975608825684
    9. '               ' → logprob: -15.750975608825684
    10. 'elif' → logprob: -16.2509765625

Token 300: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026055064518004656
    2. ' if' → logprob: -6.002605438232422
    3. '           ' → logprob: -9.002605438232422
    4. '   ' → logprob: -12.252605438232422
    5. '       ' → logprob: -14.127605438232422
    6. ' ' → logprob: -15.002605438232422
    7. '
' → logprob: -15.252605438232422
    8. '               ' → logprob: -15.377605438232422
    9. 'add' → logprob: -15.877605438232422
    10. 'ac' → logprob: -16.252605438232422

Token 301: ' wrong' (ID: 8201)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1391223669052124
    2. ' if' → logprob: -2.139122486114502
    3. 'wa' → logprob: -4.639122486114502
    4. '           ' → logprob: -6.889122486114502
    5. ' wa' → logprob: -7.014122486114502
    6. '   ' → logprob: -7.889122486114502
    7. ' ' → logprob: -9.264122009277344
    8. '       ' → logprob: -10.639122009277344
    9. '               ' → logprob: -11.139122009277344
    10. '  ' → logprob: -11.639122009277344

Token 302: ' attempts' (ID: 27747)
  Prédit: 'attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attempt' → logprob: -0.1306612491607666
    2. ' attempts' → logprob: -2.1306612491607666
    3. '_attempt' → logprob: -5.8806610107421875
    4. ' if' → logprob: -7.7556610107421875
    5. 'if' → logprob: -8.130661010742188
    6. 'answers' → logprob: -9.755661010742188
    7. ' ' → logprob: -9.880661010742188
    8. '   ' → logprob: -10.005661010742188
    9. '[p' → logprob: -11.130661010742188
    10. '```' → logprob: -11.755661010742188

Token 303: ' before' (ID: 2254)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20187531411647797
    2. 'if' → logprob: -1.7018753290176392
    3. '           ' → logprob: -7.82687520980835
    4. '   ' → logprob: -10.076875686645508
    5. '       ' → logprob: -11.201875686645508
    6. '	if' → logprob: -12.576875686645508
    7. ' ' → logprob: -13.701875686645508
    8. '               ' → logprob: -14.576875686645508
    9. '[' → logprob: -14.701875686645508
    10. ' for' → logprob: -14.701875686645508

Token 304: ' the' (ID: 290)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.010992522351443768
    2. 'if' → logprob: -5.260992527008057
    3. ' ac' → logprob: -5.260992527008057
    4. 'the' → logprob: -8.010992050170898
    5. 'accepted' → logprob: -10.010992050170898
    6. '   ' → logprob: -10.135992050170898
    7. ' if' → logprob: -10.260992050170898
    8. ' the' → logprob: -10.510992050170898
    9. '```' → logprob: -11.010992050170898
    10. 'accept' → logprob: -11.510992050170898

Token 305: ' problem' (ID: 4792)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.29172465205192566
    2. 'if' → logprob: -1.416724681854248
    3. ' if' → logprob: -5.541724681854248
    4. 'first' → logprob: -5.791724681854248
    5. ' ac' → logprob: -6.041724681854248
    6. ' first' → logprob: -7.041724681854248
    7. '[' → logprob: -9.41672420501709
    8. 'AC' → logprob: -9.79172420501709
    9. 'problem' → logprob: -10.29172420501709
    10. 'answer' → logprob: -10.66672420501709

Token 306: ' is' (ID: 382)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.629885733127594
    2. 'is' → logprob: -1.0048856735229492
    3. 'has' → logprob: -2.629885673522949
    4. 'was' → logprob: -4.504885673522949
    5. ' is' → logprob: -4.754885673522949
    6. ' has' → logprob: -5.254885673522949
    7. ' ac' → logprob: -6.629885673522949
    8. '   ' → logprob: -7.129885673522949
    9. ' was' → logprob: -7.379885673522949
    10. '[' → logprob: -7.504885673522949

Token 307: ' accepted' (ID: 17562)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.3972240090370178
    2. 'accepted' → logprob: -1.272223949432373
    3. 'sol' → logprob: -3.897223949432373
    4. ' accepted' → logprob: -4.522223949432373
    5. ' solved' → logprob: -4.772223949432373
    6. 'not' → logprob: -5.897223949432373
    7. ' ac' → logprob: -6.272223949432373
    8. 'AC' → logprob: -6.272223949432373
    9. ' not' → logprob: -6.897223949432373
    10. 'Accepted' → logprob: -9.147224426269531

Token 308: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2369585633277893
    2. ' if' → logprob: -1.7369585037231445
    3. 'if' → logprob: -3.3619585037231445
    4. '       ' → logprob: -8.861958503723145
    5. '   ' → logprob: -9.486958503723145
    6. ' and' → logprob: -10.986958503723145
    7. '               ' → logprob: -11.736958503723145
    8. ',' → logprob: -13.486958503723145
    9. '		' → logprob: -13.736958503723145
    10. 'and' → logprob: -13.736958503723145

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010562080889940262
    2. 'if' → logprob: -5.135561943054199
    3. ' if' → logprob: -5.385561943054199
    4. '   ' → logprob: -11.0105619430542
    5. '       ' → logprob: -11.1355619430542
    6. '               ' → logprob: -12.0105619430542
    7. '          ' → logprob: -14.0105619430542
    8. '		' → logprob: -14.0105619430542
    9. '	       ' → logprob: -14.2605619430542
    10. '	   ' → logprob: -14.8855619430542

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00477993069216609
    2. '           ' → logprob: -5.379779815673828
    3. ' if' → logprob: -9.004779815673828
    4. '   ' → logprob: -10.379779815673828
    5. '       ' → logprob: -12.754779815673828
    6. '               ' → logprob: -13.629779815673828
    7. '	if' → logprob: -14.379779815673828
    8. 'wa' → logprob: -14.754779815673828
    9. ' ' → logprob: -15.504779815673828
    10. 'elif' → logprob: -15.879779815673828

Token 311: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.08641498535871506
    2. 'not' → logprob: -2.5864150524139404
    3. ' not' → logprob: -5.211414813995361
    4. ' ac' → logprob: -6.211414813995361
    5. '   ' → logprob: -10.71141529083252
    6. '	ac' → logprob: -12.83641529083252
    7. '(ac' → logprob: -12.96141529083252
    8. '!' → logprob: -13.08641529083252
    9. '(not' → logprob: -14.52391529083252
    10. 'AC' → logprob: -14.52391529083252

Token 312: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.088346359931165e-07
    2. 'p' → logprob: -14.000000953674316
    3. ' [' → logprob: -17.375
    4. '[' → logprob: -17.875
    5. '[
' → logprob: -18.0
    6. '<p' → logprob: -19.75
    7. '```' → logprob: -20.875
    8. '	p' → logprob: -21.0
    9. '[q' → logprob: -21.25
    10. '
' → logprob: -21.25

Token 313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025250518694519997
    2. ']==' → logprob: -3.7752504348754883
    3. '[p' → logprob: -6.275250434875488
    4. '==' → logprob: -9.150250434875488
    5. '[' → logprob: -12.275250434875488
    6. ' ==' → logprob: -12.525250434875488
    7. ' ]' → logprob: -13.025250434875488
    8. ')' → logprob: -13.525250434875488
    9. ')==' → logprob: -14.900250434875488
    10. ']=' → logprob: -15.275250434875488

Token 314: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06575784832239151
    2. ' ==' → logprob: -2.8157577514648438
    3. '0' → logprob: -5.690757751464844
    4. '[' → logprob: -7.940757751464844
    5. ']==' → logprob: -10.190757751464844
    6. ' ' → logprob: -12.690757751464844
    7. ')==' → logprob: -12.690757751464844
    8. '=' → logprob: -13.565757751464844
    9. '==
' → logprob: -13.565757751464844
    10. ')' → logprob: -14.565757751464844

Token 315: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -17.875003814697266
    4. '   ' → logprob: -18.250003814697266
    5. '00' → logprob: -19.250003814697266
    6. '<|end|>' → logprob: -19.562503814697266
    7. '=' → logprob: -19.937503814697266
    8. '０' → logprob: -19.937503814697266
    9. '```' → logprob: -20.437503814697266
    10. '০' → logprob: -20.500003814697266

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -17.000009536743164
    4. '1' → logprob: -17.937509536743164
    5. 'False' → logprob: -18.750009536743164
    6. '۰' → logprob: -18.750009536743164
    7. '```' → logprob: -18.937509536743164
    8. '=' → logprob: -19.562509536743164
    9. '０' → logprob: -19.625009536743164
    10. '	' → logprob: -19.687509536743164

Token 317: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01868080534040928
    2. ':' → logprob: -4.018680572509766
    3. '           ' → logprob: -8.268680572509766
    4. '               ' → logprob: -8.768680572509766
    5. '):
' → logprob: -9.518680572509766
    6. '       ' → logprob: -11.018680572509766
    7. ':
' → logprob: -11.518680572509766
    8. ' :
' → logprob: -12.268680572509766
    9. ':

' → logprob: -12.393680572509766
    10. ',' → logprob: -12.518680572509766

Token 318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33575135469436646
    2. 'wa' → logprob: -1.4607512950897217
    3. ' wa' → logprob: -2.9607512950897217
    4. '           ' → logprob: -7.210751533508301
    5. '                   ' → logprob: -8.3357515335083
    6. '   ' → logprob: -8.5857515335083
    7. '			' → logprob: -10.4607515335083
    8. '       ' → logprob: -10.5857515335083
    9. '                       ' → logprob: -11.0857515335083
    10. '                
' → logprob: -11.2107515335083

Token 319: ' wa' (ID: 3123)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' (adapté à ' wa') → logprob: -0.00010652327910065651
    2. ' wa' → logprob: -9.750106811523438
    3. '               ' → logprob: -10.125106811523438
    4. '                   ' → logprob: -12.375106811523438
    5. '   ' → logprob: -13.000106811523438
    6. '           ' → logprob: -14.000106811523438
    7. 'wan' → logprob: -14.750106811523438
    8. ' ' → logprob: -16.375106811523438
    9. 'wo' → logprob: -17.000106811523438
    10. '                       ' → logprob: -17.125106811523438

Token 320: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: 0.0
    2. 'p' → logprob: -17.5
    3. '[' → logprob: -18.5
    4. ' [' → logprob: -20.0
    5. '[i' → logprob: -22.0
    6. '[m' → logprob: -22.375
    7. '[w' → logprob: -22.5
    8. '[c' → logprob: -22.625
    9. '[q' → logprob: -22.625
    10. '[s' → logprob: -23.25

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1835855394601822
    2. ']+=' → logprob: -1.933585524559021
    3. '+=' → logprob: -3.8085856437683105
    4. ' +=' → logprob: -7.8085856437683105
    5. ')' → logprob: -7.9335856437683105
    6. ']+' → logprob: -9.683585166931152
    7. '+' → logprob: -10.058585166931152
    8. ' ]' → logprob: -10.933585166931152
    9. '+]' → logprob: -11.808585166931152
    10. '[' → logprob: -12.183585166931152

Token 322: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005031120381318033
    2. ' +=' → logprob: -7.625503063201904
    3. ']+=' → logprob: -11.375503540039062
    4. '=' → logprob: -13.125503540039062
    5. '+' → logprob: -13.500503540039062
    6. '[' → logprob: -16.500503540039062
    7. '   ' → logprob: -16.750503540039062
    8. '+='' → logprob: -18.000503540039062
    9. '+=(' → logprob: -18.875503540039062
    10. '+="' → logprob: -19.000503540039062

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '１' → logprob: -22.0
    4. '   ' → logprob: -22.125
    5. '```' → logprob: -22.625
    6. '۱' → logprob: -23.0
    7. '<|end|>' → logprob: -23.9375
    8. '+' → logprob: -24.375
    9. '  ' → logprob: -24.5
    10. '0' → logprob: -24.6875

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '１' → logprob: -20.125
    4. '<|end|>' → logprob: -20.125
    5. '۱' → logprob: -20.5
    6. '```' → logprob: -21.25
    7. '   ' → logprob: -21.8125
    8. '१' → logprob: -21.875
    9. '১' → logprob: -22.0625
    10. '111' → logprob: -22.625

Token 325: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: '   ' (ID: 271)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.8166325688362122
    2. 'total' → logprob: -1.1916325092315674
    3. 'ac' → logprob: -2.1916325092315674
    4. '   ' → logprob: -2.4416325092315674
    5. '    
' → logprob: -3.4416325092315674
    6. '
' → logprob: -5.1916327476501465
    7. 'accept' → logprob: -5.5666327476501465
    8. 'acc' → logprob: -5.8166327476501465
    9. 'num' → logprob: -5.9416327476501465
    10. '  
' → logprob: -6.5666327476501465

Token 327: ' #' (ID: 1069)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.24503253400325775
    2. 'ac' → logprob: -1.745032548904419
    3. 'total' → logprob: -3.495032548904419
    4. '   ' → logprob: -5.49503231048584
    5. 'accept' → logprob: -5.74503231048584
    6. '#' (adapté à ' #') → logprob: -6.37003231048584
    7. 'acc' → logprob: -6.99503231048584
    8. 'num' → logprob: -7.49503231048584
    9. 'count' → logprob: -7.74503231048584
    10. ' accepted' → logprob: -7.99503231048584

Token 328: ' After' (ID: 6311)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.15869612991809845
    2. 'total' → logprob: -2.658696174621582
    3. 'ac' → logprob: -3.033696174621582
    4. '#' → logprob: -4.283696174621582
    5. 'count' → logprob: -5.533696174621582
    6. ' accepted' → logprob: -5.908696174621582
    7. 'accept' → logprob: -5.908696174621582
    8. 'acc' → logprob: -6.783696174621582
    9. 'correct' → logprob: -7.033696174621582
    10. 'ans' → logprob: -7.783696174621582

Token 329: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.25671878457069397
    2. 'the' → logprob: -1.7567187547683716
    3. '   ' → logprob: -4.881718635559082
    4. ' main' → logprob: -5.131718635559082
    5. 'main' → logprob: -5.256718635559082
    6. 'for' → logprob: -5.381718635559082
    7. 'all' → logprob: -5.756718635559082
    8. ' all' → logprob: -5.756718635559082
    9. ' for' → logprob: -5.881718635559082
    10. ' completing' → logprob: -5.881718635559082

Token 330: ' submissions' (ID: 60667)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8463989496231079
    2. '   ' → logprob: -2.0963988304138184
    3. ' submissions' → logprob: -2.2213988304138184
    4. 'ac' → logprob: -2.7213988304138184
    5. 'sub' → logprob: -2.8463988304138184
    6. 'accepted' → logprob: -3.0963988304138184
    7. 'the' → logprob: -3.2213988304138184
    8. 'for' → logprob: -3.3463988304138184
    9. ' for' → logprob: -3.4713988304138184
    10. ' accepted' → logprob: -3.9713988304138184

Token 331: ',' (ID: 11)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.3554714322090149
    2. 'ac' → logprob: -1.7304713726043701
    3. '   ' → logprob: -2.35547137260437
    4. 'total' → logprob: -4.480471611022949
    5. ' accepted' → logprob: -4.980471611022949
    6. 'accept' → logprob: -5.730471611022949
    7. 'acc' → logprob: -6.480471611022949
    8. ' ac' → logprob: -6.855471611022949
    9. 'count' → logprob: -7.230471611022949
    10. ' total' → logprob: -7.730471611022949

Token 332: ' set' (ID: 920)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.5341185927391052
    2. 'ac' → logprob: -1.78411865234375
    3. ' accepted' → logprob: -2.28411865234375
    4. 'total' → logprob: -2.90911865234375
    5. ' total' → logprob: -3.40911865234375
    6. '   ' → logprob: -3.90911865234375
    7. ' ac' → logprob: -4.40911865234375
    8. 'accept' → logprob: -5.03411865234375
    9. 'count' → logprob: -5.53411865234375
    10. 'acc' → logprob: -5.78411865234375

Token 333: ' the' (ID: 290)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.7755816578865051
    2. 'ac' → logprob: -1.0255815982818604
    3. 'total' → logprob: -2.5255815982818604
    4. ' ac' → logprob: -3.2755815982818604
    5. ' accepted' → logprob: -3.5255815982818604
    6. ' total' → logprob: -4.1505818367004395
    7. 'acc' → logprob: -5.2755818367004395
    8. 'count' → logprob: -5.9005818367004395
    9. '   ' → logprob: -6.2755818367004395
    10. 'correct' → logprob: -6.6505818367004395

Token 334: ' wrong' (ID: 8201)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.23308293521404266
    2. 'total' → logprob: -2.1080830097198486
    3. 'ac' → logprob: -2.8580830097198486
    4. 'count' → logprob: -3.9830830097198486
    5. 'ans' → logprob: -6.1080827713012695
    6. 'sol' → logprob: -6.7330827713012695
    7. 'result' → logprob: -6.8580827713012695
    8. 'correct' → logprob: -6.9830827713012695
    9. 'acc' → logprob: -7.1080827713012695
    10. 'answer' → logprob: -7.2330827713012695

Token 335: ' attempt' (ID: 8704)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.026301225647330284
    2. '_counts' → logprob: -4.651301383972168
    3. '_count' → logprob: -4.776301383972168
    4. 'attempt' → logprob: -5.401301383972168
    5. '_sum' → logprob: -7.026301383972168
    6. '_answer' → logprob: -7.401301383972168
    7. '_' → logprob: -7.776301383972168
    8. '_ac' → logprob: -8.276301383972168
    9. ' =' → logprob: -8.401301383972168
    10. '_answers' → logprob: -8.401301383972168

Token 336: ' counter' (ID: 9446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06969974935054779
    2. 'count' → logprob: -3.194699764251709
    3. 'sum' → logprob: -4.069699764251709
    4. 'total' → logprob: -5.819699764251709
    5. 'counts' → logprob: -6.194699764251709
    6. '=' → logprob: -6.569699764251709
    7. ' =' → logprob: -6.694699764251709
    8. '_count' → logprob: -7.194699764251709
    9. ' count' → logprob: -8.81969928741455
    10. '_counts' → logprob: -8.94469928741455

Token 337: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5399373173713684
    2. 'to' → logprob: -1.5399372577667236
    3. '=' → logprob: -2.0399372577667236
    4. 'sum' → logprob: -3.5399372577667236
    5. 'total' → logprob: -4.539937496185303
    6. '[' → logprob: -4.664937496185303
    7. ' =' → logprob: -4.789937496185303
    8. 's' → logprob: -5.039937496185303
    9. '   ' → logprob: -5.164937496185303
    10. ' for' → logprob: -6.789937496185303

Token 338: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5801675319671631
    2. 'sum' → logprob: -0.8301675319671631
    3. ' ' → logprob: -6.330167770385742
    4. ' sum' → logprob: -6.830167770385742
    5. '[' → logprob: -7.330167770385742
    6. 'zero' → logprob: -9.080167770385742
    7. 'wa' → logprob: -9.205167770385742
    8. 'print' → logprob: -9.330167770385742
    9. '```' → logprob: -9.330167770385742
    10. '   ' → logprob: -10.455167770385742

Token 339: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011519313789904118
    2. ' for' → logprob: -4.886519432067871
    3. '   ' → logprob: -6.136519432067871
    4. 'total' → logprob: -6.761519432067871
    5. 'if' → logprob: -8.261519432067871
    6. 'sum' → logprob: -8.761519432067871
    7. '#' → logprob: -9.886519432067871
    8. 'ac' → logprob: -11.136519432067871
    9. '
' → logprob: -11.261519432067871
    10. '[' → logprob: -11.261519432067871

Token 340: ' uns' (ID: 3975)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.022050222381949425
    2. 'all' → logprob: -4.147050380706787
    3. 'ac' → logprob: -6.647050380706787
    4. 'uns' → logprob: -6.897050380706787
    5. 'accepted' → logprob: -7.272050380706787
    6. 'problem' → logprob: -7.397050380706787
    7. 'un' → logprob: -7.772050380706787
    8. 'each' → logprob: -7.897050380706787
    9. ' problems' → logprob: -7.897050380706787
    10. 'the' → logprob: -8.647049903869629

Token 341: 'olved' (ID: 30145)
  Prédit: 'olved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olved' → logprob: -0.0002966127940453589
    2. '   ' → logprob: -8.625296592712402
    3. '
' → logprob: -10.375296592712402
    4. '[' → logprob: -10.625296592712402
    5. 'ol' → logprob: -11.250296592712402
    6. 'ac' → logprob: -12.125296592712402
    7. ' solved' → logprob: -12.125296592712402
    8. 'olve' → logprob: -12.250296592712402
    9. 'accepted' → logprob: -12.375296592712402
    10. 'old' → logprob: -12.500296592712402

Token 342: ' problems' (ID: 6840)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2020181119441986
    2. ' problems' → logprob: -1.702018141746521
    3. 'problem' → logprob: -8.327017784118652
    4. 'for' → logprob: -9.452017784118652
    5. '```' → logprob: -9.827017784118652
    6. 's' → logprob: -10.702017784118652
    7. ',' → logprob: -10.952017784118652
    8. '   ' → logprob: -10.952017784118652
    9. '_pro' → logprob: -11.202017784118652
    10. '#' → logprob: -11.327017784118652

Token 343: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20802177488803864
    2. '   ' → logprob: -1.7080217599868774
    3. ' for' → logprob: -5.083021640777588
    4. '
' → logprob: -8.208022117614746
    5. 'total' → logprob: -10.333022117614746
    6. 'wa' → logprob: -10.458022117614746
    7. '    
' → logprob: -10.708022117614746
    8. '```' → logprob: -11.708022117614746
    9. '  ' → logprob: -12.833022117614746
    10. '#' → logprob: -12.958022117614746

Token 344: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2619172930717468
    2. '   ' → logprob: -1.5119173526763916
    3. ' for' → logprob: -5.1369171142578125
    4. 'wa' → logprob: -6.2619171142578125
    5. '
' → logprob: -6.6369171142578125
    6. 'total' → logprob: -7.6369171142578125
    7. '    
' → logprob: -9.011917114257812
    8. '```' → logprob: -9.011917114257812
    9. 'sum' → logprob: -11.136917114257812
    10. '#' → logprob: -11.136917114257812

Token 345: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002165009966120124
    2. '   ' → logprob: -6.627164840698242
    3. 'total' → logprob: -7.627164840698242
    4. ' for' → logprob: -8.252164840698242
    5. '
' → logprob: -10.252164840698242
    6. 'wa' → logprob: -10.252164840698242
    7. '#' → logprob: -12.752164840698242
    8. 'ac' → logprob: -12.752164840698242
    9. '    
' → logprob: -12.877164840698242
    10. 'result' → logprob: -12.877164840698242

Token 346: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001326433615759015
    2. ' i' → logprob: -6.626326560974121
    3. 'idx' → logprob: -15.501326560974121
    4. '   ' → logprob: -15.876326560974121
    5. '	i' → logprob: -16.126325607299805
    6. 'problem' → logprob: -16.876325607299805
    7. 'p' → logprob: -17.001325607299805
    8. ' ' → logprob: -17.126325607299805
    9. '_i' → logprob: -17.876325607299805
    10. '(i' → logprob: -18.126325607299805

Token 347: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602325439453125
    2. 'in' → logprob: -1.9102325439453125
    3. ',' → logprob: -12.285232543945312
    4. ' ' → logprob: -13.285232543945312
    5. 'range' → logprob: -13.910232543945312
    6. '	in' → logprob: -14.285232543945312
    7. 'In' → logprob: -16.410232543945312
    8. '_in' → logprob: -16.410232543945312
    9. ' range' → logprob: -16.535232543945312
    10. 'import' → logprob: -16.660232543945312

Token 348: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007104054093360901
    2. ' range' → logprob: -7.250710487365723
    3. 'ange' → logprob: -15.625710487365723
    4. '(range' → logprob: -15.875710487365723
    5. 'ran' → logprob: -17.000709533691406
    6. '```' → logprob: -17.000709533691406
    7. '	range' → logprob: -17.250709533691406
    8. '   ' → logprob: -17.250709533691406
    9. ' ' → logprob: -17.625709533691406
    10. '
' → logprob: -17.625709533691406

Token 349: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0006028342177160084
    2. 'N' → logprob: -8.250602722167969
    3. '(' → logprob: -8.500602722167969
    4. '(len' → logprob: -9.000602722167969
    5. '(n' → logprob: -11.750602722167969
    6. '   ' → logprob: -12.875602722167969
    7. 'len' → logprob: -13.250602722167969
    8. ')' → logprob: -14.500602722167969
    9. '(
' → logprob: -14.500602722167969
    10. ' (' → logprob: -14.750602722167969

Token 350: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0013882085913792253
    2. '):' → logprob: -6.626388072967529
    3. '   ' → logprob: -10.001388549804688
    4. ':
' → logprob: -11.876388549804688
    5. '):
' → logprob: -12.751388549804688
    6. '():
' → logprob: -12.876388549804688
    7. ' ):
' → logprob: -13.251388549804688
    8. ':' → logprob: -13.876388549804688
    9. '):

' → logprob: -14.001388549804688
    10. '       ' → logprob: -15.126388549804688

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7332935333251953
    2. '   ' → logprob: -0.8582935333251953
    3. 'if' → logprob: -2.7332935333251953
    4. ' if' → logprob: -3.4832935333251953
    5. '```' → logprob: -10.358293533325195
    6. '<|end|>' → logprob: -10.983293533325195
    7. '    ' → logprob: -11.858293533325195
    8. '	if' → logprob: -11.983293533325195
    9. '           ' → logprob: -12.358293533325195
    10. '     ' → logprob: -12.733293533325195

Token 352: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0013038069009780884
    2. '   ' → logprob: -6.751303672790527
    3. ' if' → logprob: -9.126303672790527
    4. '       ' → logprob: -11.001303672790527
    5. 'wa' → logprob: -11.876303672790527
    6. '```' → logprob: -14.126303672790527
    7. '	if' → logprob: -15.251303672790527
    8. ' ' → logprob: -16.251304626464844
    9. '           ' → logprob: -17.001304626464844
    10. 'If' → logprob: -17.126304626464844

Token 353: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0060086678713560104
    2. ' ac' → logprob: -5.131008625030518
    3. 'not' → logprob: -10.006009101867676
    4. ' not' → logprob: -10.881009101867676
    5. '   ' → logprob: -11.131009101867676
    6. '	ac' → logprob: -14.006009101867676
    7. ' ' → logprob: -15.756009101867676
    8. '(ac' → logprob: -16.00600814819336
    9. '  ' → logprob: -17.13100814819336
    10. 'AC' → logprob: -17.38100814819336

Token 354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.875
    3. '[' → logprob: -17.25
    4. ' [' → logprob: -18.625
    5. '[p' → logprob: -19.0
    6. '\[' → logprob: -19.25
    7. '[
' → logprob: -19.375
    8. '[I' → logprob: -19.375
    9. '```' → logprob: -20.0
    10. '[ii' → logprob: -21.125

Token 355: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21738171577453613
    2. ']' → logprob: -2.342381715774536
    3. ']==' → logprob: -2.592381715774536
    4. ' ==' → logprob: -3.717381715774536
    5. '[' → logprob: -9.592381477355957
    6. '=' → logprob: -10.967381477355957
    7. ')==' → logprob: -11.342381477355957
    8. ')' → logprob: -11.717381477355957
    9. '0' → logprob: -11.842381477355957
    10. '[i' → logprob: -11.967381477355957

Token 356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023676332086324692
    2. ' ==' → logprob: -3.7736763954162598
    3. '0' → logprob: -8.148675918579102
    4. ']==' → logprob: -9.648675918579102
    5. '==
' → logprob: -10.398675918579102
    6. ')==' → logprob: -11.148675918579102
    7. '=' → logprob: -11.398675918579102
    8. ')' → logprob: -12.398675918579102
    9. '[' → logprob: -12.523675918579102
    10. ']' → logprob: -12.773675918579102

Token 357: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006534627173095942
    2. ' ' → logprob: -7.375653266906738
    3. '1' → logprob: -10.625653266906738
    4. '   ' → logprob: -14.250653266906738
    5. '=' → logprob: -14.938153266906738
    6. '```' → logprob: -15.125653266906738
    7. '۰' → logprob: -15.625653266906738
    8. ')' → logprob: -16.563154220581055
    9. 'False' → logprob: -16.563154220581055
    10. '<|end|>' → logprob: -16.688154220581055

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.44574936106801e-05
    2. ' ' → logprob: -9.75007438659668
    3. '1' → logprob: -11.12507438659668
    4. '۰' → logprob: -15.18757438659668
    5. '<|end|>' → logprob: -15.62507438659668
    6. '=' → logprob: -15.93757438659668
    7. 'False' → logprob: -15.93757438659668
    8. '```' → logprob: -16.18757438659668
    9. '   ' → logprob: -16.31257438659668
    10. '2' → logprob: -17.12507438659668

Token 359: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20279352366924286
    2. ':' → logprob: -1.8277934789657593
    3. '           ' → logprob: -3.827793598175049
    4. '       ' → logprob: -7.452793598175049
    5. '):
' → logprob: -8.20279312133789
    6. 'wa' → logprob: -10.32779312133789
    7. ' and' → logprob: -10.45279312133789
    8. ',' → logprob: -10.70279312133789
    9. ':
' → logprob: -10.82779312133789
    10. ' wa' → logprob: -11.32779312133789

Token 360: '           ' (ID: 352)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.049107540398836136
    2. '       ' → logprob: -3.674107551574707
    3. ' wa' → logprob: -4.174107551574707
    4. '           ' → logprob: -5.049107551574707
    5. '   ' → logprob: -7.549107551574707
    6. '```' → logprob: -10.049107551574707
    7. '               ' → logprob: -10.299107551574707
    8. '	       ' → logprob: -10.299107551574707
    9. '-wa' → logprob: -10.674107551574707
    10. '	   ' → logprob: -11.049107551574707

Token 361: ' wa' (ID: 3123)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' (adapté à ' wa') → logprob: -2.558399319241289e-05
    2. ' wa' → logprob: -10.625025749206543
    3. '           ' → logprob: -13.875025749206543
    4. '-wa' → logprob: -16.250024795532227
    5. '   ' → logprob: -16.375024795532227
    6. 'wan' → logprob: -17.500024795532227
    7. '       ' → logprob: -17.750024795532227
    8. '               ' → logprob: -18.000024795532227
    9. 'wo' → logprob: -18.875024795532227
    10. 'Wa' → logprob: -19.500024795532227

Token 362: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. '[I' → logprob: -20.625
    4. ' [' → logprob: -20.75
    5. '[
' → logprob: -20.875
    6. 'i' → logprob: -21.0
    7. '[p' → logprob: -21.25
    8. '
' → logprob: -21.875
    9. '=' → logprob: -21.875
    10. '[u' → logprob: -22.25

Token 363: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010453424416482449
    2. ']' → logprob: -5.260453224182129
    3. ' =' → logprob: -5.510453224182129
    4. ']=' → logprob: -6.760453224182129
    5. ')' → logprob: -13.260453224182129
    6. ')=' → logprob: -14.260453224182129
    7. ' ]' → logprob: -15.135453224182129
    8. '   ' → logprob: -16.385454177856445
    9. '[' → logprob: -16.760454177856445
    10. '0' → logprob: -16.885454177856445

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002475777640938759
    2. ' =' → logprob: -6.002475738525391
    3. '=
' → logprob: -18.25247573852539
    4. '＝' → logprob: -19.00247573852539
    5. '==' → logprob: -19.37747573852539
    6. '.=' → logprob: -19.37747573852539
    7. '=int' → logprob: -19.75247573852539
    8. '0' → logprob: -20.12747573852539
    9. ' ' → logprob: -20.12747573852539
    10. '   ' → logprob: -20.12747573852539

Token 365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '00' → logprob: -18.750003814697266
    4. '000' → logprob: -19.250003814697266
    5. '۰' → logprob: -20.750003814697266
    6. '<|end|>' → logprob: -20.875003814697266
    7. '   ' → logprob: -21.500003814697266
    8. '  ' → logprob: -22.500003814697266
    9. '০' → logprob: -22.812503814697266
    10. '０' → logprob: -23.062503814697266

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '00' → logprob: -17.250001907348633
    4. '000' → logprob: -17.500001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '-' → logprob: -19.625001907348633
    7. '۰' → logprob: -20.562501907348633
    8. '[' → logprob: -20.875001907348633
    9. '1' → logprob: -20.937501907348633
    10. 'None' → logprob: -21.062501907348633

Token 367: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.620546281337738
    2. 'accepted' → logprob: -1.6205463409423828
    3. 'ac' → logprob: -1.9955463409423828
    4. '    
' → logprob: -2.870546340942383
    5. '
' → logprob: -3.745546340942383
    6. 'acc' → logprob: -4.120546340942383
    7. 'accept' → logprob: -4.370546340942383
    8. 'print' → logprob: -5.620546340942383
    9. 'total' → logprob: -5.620546340942383
    10. ' ac' → logprob: -6.370546340942383

Token 368: '   ' (ID: 271)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.4030473530292511
    2. 'ac' → logprob: -1.9030473232269287
    3. 'print' → logprob: -1.9030473232269287
    4. '   ' → logprob: -3.9030473232269287
    5. 'acc' → logprob: -5.403047561645508
    6. 'total' → logprob: -5.403047561645508
    7. 'accept' → logprob: -5.778047561645508
    8. 'num' → logprob: -8.403047561645508
    9. ' accepted' → logprob: -8.528047561645508
    10. 'count' → logprob: -8.653047561645508

Token 369: ' #' (ID: 1069)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.5312858819961548
    2. 'print' → logprob: -1.4062858819961548
    3. 'ac' → logprob: -2.0312857627868652
    4. 'total' → logprob: -3.5312857627868652
    5. '   ' → logprob: -5.906285762786865
    6. 'acc' → logprob: -6.281285762786865
    7. 'accept' → logprob: -7.156285762786865
    8. 'count' → logprob: -7.781285762786865
    9. 'sol' → logprob: -8.656286239624023
    10. 'num' → logprob: -9.031286239624023

Token 370: ' Output' (ID: 18315)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.5425484776496887
    2. 'print' → logprob: -1.292548418045044
    3. 'total' → logprob: -2.292548418045044
    4. 'ac' → logprob: -3.292548418045044
    5. 'count' → logprob: -6.542548656463623
    6. '#' → logprob: -6.792548656463623
    7. 'correct' → logprob: -7.292548656463623
    8. 'accept' → logprob: -7.417548656463623
    9. 'num' → logprob: -7.417548656463623
    10. 'ans' → logprob: -7.667548656463623

Token 371: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00025275684311054647
    2. ' print' → logprob: -8.625252723693848
    3. '   ' → logprob: -9.875252723693848
    4. 'accepted' → logprob: -11.250252723693848
    5. 'ac' → logprob: -12.250252723693848
    6. '```' → logprob: -12.750252723693848
    7. 'accept' → logprob: -14.875252723693848
    8. 'total' → logprob: -16.000253677368164
    9. 'acc' → logprob: -16.125253677368164
    10. '``' → logprob: -16.500253677368164

Token 372: ' number' (ID: 2086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7594666481018066
    2. 'accepted' → logprob: -1.8844666481018066
    3. 'ac' → logprob: -2.1344666481018066
    4. '_ac' → logprob: -2.3844666481018066
    5. 'sum' → logprob: -2.6344666481018066
    6. ' print' → logprob: -3.6344666481018066
    7. '_' → logprob: -4.009466648101807
    8. 'sol' → logprob: -4.634466648101807
    9. '_pro' → logprob: -4.884466648101807
    10. 'pro' → logprob: -4.884466648101807

Token 373: ' of' (ID: 328)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -1.0558812618255615
    2. 'of' → logprob: -1.8058812618255615
    3. '_of' → logprob: -2.5558812618255615
    4. ',' → logprob: -2.6808812618255615
    5. '   ' → logprob: -2.9308812618255615
    6. 'sum' → logprob: -3.0558812618255615
    7. 'Accepted' → logprob: -3.3058812618255615
    8. ' =' → logprob: -3.4308812618255615
    9. 'ac' → logprob: -3.5558812618255615
    10. '_' → logprob: -3.6808812618255615

Token 374: ' solved' (ID: 47244)
  Prédit: 'accepted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accepted' → logprob: -0.5533812642097473
    2. 'ac' → logprob: -1.8033812046051025
    3. ' accepted' → logprob: -2.3033812046051025
    4. 'sol' → logprob: -2.5533812046051025
    5. ' solved' → logprob: -2.8033812046051025
    6. ' ac' → logprob: -4.803381443023682
    7. 'print' → logprob: -5.678381443023682
    8. 'sum' → logprob: -6.178381443023682
    9. ' problems' → logprob: -6.178381443023682
    10. 'pro' → logprob: -6.303381443023682

Token 375: ' problems' (ID: 6840)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3091651201248169
    2. '_pro' → logprob: -1.684165120124817
    3. 'pro' → logprob: -2.9341650009155273
    4. ' =' → logprob: -4.434165000915527
    5. ' ,' → logprob: -5.059165000915527
    6. '   ' → logprob: -5.934165000915527
    7. '_' → logprob: -6.434165000915527
    8. ' problems' → logprob: -6.559165000915527
    9. ' and' → logprob: -6.934165000915527
    10. '=' → logprob: -7.809165000915527

Token 376: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07059593498706818
    2. 'print' → logprob: -2.6955959796905518
    3. ' print' → logprob: -7.570595741271973
    4. 'accepted' → logprob: -9.945595741271973
    5. ',' → logprob: -10.070595741271973
    6. '```' → logprob: -10.570595741271973
    7. 'ac' → logprob: -10.945595741271973
    8. 'total' → logprob: -13.070595741271973
    9. '    
' → logprob: -13.445595741271973
    10. 'accept' → logprob: -13.445595741271973

Token 377: ' total' (ID: 3609)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3279978930950165
    2. ' sum' → logprob: -1.9529979228973389
    3. 'total' → logprob: -2.452997922897339
    4. ' total' → logprob: -3.077997922897339
    5. 'print' → logprob: -5.45299768447876
    6. ' print' → logprob: -7.32799768447876
    7. ' the' → logprob: -8.077998161315918
    8. 'the' → logprob: -8.202998161315918
    9. 'failed' → logprob: -9.827998161315918
    10. '   ' → logprob: -10.077998161315918

Token 378: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9228411316871643
    2. 'sum' → logprob: -1.9228410720825195
    3. 'wa' → logprob: -2.1728410720825195
    4. '_' → logprob: -2.2978410720825195
    5. ' number' → logprob: -2.5478410720825195
    6. 'number' → logprob: -3.2978410720825195
    7. 'failed' → logprob: -4.0478410720825195
    8. '_failed' → logprob: -4.0478410720825195
    9. '=' → logprob: -4.2978410720825195
    10. 'attempt' → logprob: -4.2978410720825195

Token 379: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.031014932319521904
    2. ' of' → logprob: -4.531014919281006
    3. '_of' → logprob: -4.906014919281006
    4. 'sum' → logprob: -5.531014919281006
    5. 'ac' → logprob: -5.656014919281006
    6. '   ' → logprob: -6.406014919281006
    7. 'accepted' → logprob: -6.781014919281006
    8. '(sum' → logprob: -7.156014919281006
    9. '=sum' → logprob: -8.156015396118164
    10. 'print' → logprob: -8.656015396118164

Token 380: ' wrong' (ID: 8201)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.25743043422698975
    2. 'failed' → logprob: -2.0074305534362793
    3. 'wa' → logprob: -3.2574305534362793
    4. ' sum' → logprob: -3.5074305534362793
    5. ' failed' → logprob: -4.382430553436279
    6. 'wrong' → logprob: -4.757430553436279
    7. 'fail' → logprob: -7.007430553436279
    8. 'attempt' → logprob: -7.132430553436279
    9. 'print' → logprob: -7.882430553436279
    10. 'accepted' → logprob: -8.382430076599121

Token 381: ' attempts' (ID: 27747)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.12149453908205032
    2. ' attempts' → logprob: -2.7464945316314697
    3. 'attempt' → logprob: -3.1214945316314697
    4. ' ' → logprob: -6.246494770050049
    5. 'sum' → logprob: -6.871494770050049
    6. ' sum' → logprob: -7.246494770050049
    7. '_' → logprob: -7.871494770050049
    8. ' =' → logprob: -8.24649429321289
    9. '=' → logprob: -8.24649429321289
    10. ')' → logprob: -8.24649429321289

Token 382: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0622045174241066
    2. '   ' → logprob: -2.812204599380493
    3. ' print' → logprob: -8.437204360961914
    4. '```' → logprob: -10.937204360961914
    5. '
' → logprob: -13.437204360961914
    6. '    
' → logprob: -15.187204360961914
    7. '	print' → logprob: -15.187204360961914
    8. 'total' → logprob: -15.812204360961914
    9. '``' → logprob: -16.437204360961914
    10. '`' → logprob: -17.187204360961914

Token 383: ' solved' (ID: 47244)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15569396317005157
    2. ' i' → logprob: -2.905694007873535
    3. 'pro' → logprob: -3.155694007873535
    4. 'sol' → logprob: -4.280694007873535
    5. 'ac' → logprob: -4.530694007873535
    6. ' solved' → logprob: -4.780694007873535
    7. ' ac' → logprob: -5.280694007873535
    8. 'accepted' → logprob: -5.405694007873535
    9. 'problem' → logprob: -6.905694007873535
    10. ' problems' → logprob: -7.280694007873535

Token 384: ' problems' (ID: 6840)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.003905046032741666
    2. ' problems' → logprob: -5.628904819488525
    3. 'ac' → logprob: -8.878905296325684
    4. '_pro' → logprob: -9.253905296325684
    5. ' ac' → logprob: -10.128905296325684
    6. ' pro' → logprob: -12.128905296325684
    7. '   ' → logprob: -12.753905296325684
    8. ' ones' → logprob: -12.878905296325684
    9. '(pro' → logprob: -13.128905296325684
    10. 'for' → logprob: -13.378905296325684

Token 385: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16118724644184113
    2. '   ' → logprob: -1.9111872911453247
    3. ' print' → logprob: -7.411187171936035
    4. '```' → logprob: -8.286187171936035
    5. '
' → logprob: -9.411187171936035
    6. '    
' → logprob: -11.411187171936035
    7. 'total' → logprob: -11.536187171936035
    8. '``' → logprob: -13.536187171936035
    9. '	print' → logprob: -14.036187171936035
    10. '`' → logprob: -14.786187171936035

Token 386: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.051518384367227554
    2. '   ' → logprob: -3.051518440246582
    3. ' print' → logprob: -6.551518440246582
    4. '```' → logprob: -6.551518440246582
    5. '
' → logprob: -9.676518440246582
    6. '``' → logprob: -12.426518440246582
    7. '    
' → logprob: -13.176518440246582
    8. 'total' → logprob: -13.801518440246582
    9. '`' → logprob: -14.301518440246582
    10. '	print' → logprob: -14.801518440246582

Token 387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013095269969198853
    2. ' print' → logprob: -9.250130653381348
    3. '   ' → logprob: -10.375130653381348
    4. 'accepted' → logprob: -13.500130653381348
    5. '```' → logprob: -14.250130653381348
    6. 'ac' → logprob: -14.375130653381348
    7. 'total' → logprob: -14.500130653381348
    8. '    
' → logprob: -15.625130653381348
    9. 'accept' → logprob: -16.125131607055664
    10. 'pr' → logprob: -16.625131607055664

Token 388: '(str' (ID: 7946)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.00023500648967456073
    2. '(' → logprob: -8.375234603881836
    3. 'sum' → logprob: -13.000234603881836
    4. '(ac' → logprob: -13.875234603881836
    5. '(f' → logprob: -14.125234603881836
    6. '(
' → logprob: -15.375234603881836
    7. '(len' → logprob: -15.500234603881836
    8. '((' → logprob: -17.125234603881836
    9. '("' → logprob: -17.500234603881836
    10. '('' → logprob: -17.875234603881836

Token 389: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.00048632267862558365
    2. '(ac' → logprob: -7.750486373901367
    3. 'sum' → logprob: -10.000486373901367
    4. '(' → logprob: -11.625486373901367
    5. 'ac' → logprob: -14.875486373901367
    6. ')' → logprob: -15.250486373901367
    7. '(max' → logprob: -16.000486373901367
    8. '=sum' → logprob: -16.000486373901367
    9. '(len' → logprob: -16.125486373901367
    10. '(
' → logprob: -16.500486373901367

Token 390: '(ac' (ID: 95204)
  Prédit: '(ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -1.0280383548888494e-06
    2. 'ac' → logprob: -14.500000953674316
    3. '(' → logprob: -14.750000953674316
    4. '/ac' → logprob: -17.625001907348633
    5. '	ac' → logprob: -19.000001907348633
    6. ')' → logprob: -19.875001907348633
    7. '(a' → logprob: -20.000001907348633
    8. '#ac' → logprob: -20.125001907348633
    9. '```' → logprob: -20.125001907348633
    10. ' ac' → logprob: -20.500001907348633

Token 391: '))' (ID: 915)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014676864258944988
    2. '()),' → logprob: -4.264677047729492
    3. '(' → logprob: -7.764677047729492
    4. ')' → logprob: -10.264677047729492
    5. '(sum' → logprob: -10.889677047729492
    6. '()' → logprob: -11.014677047729492
    7. ' ())' → logprob: -12.014677047729492
    8. '()))' → logprob: -12.514677047729492
    9. '())
' → logprob: -12.889677047729492
    10. ' )' → logprob: -13.514677047729492

Token 392: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006781450472772121
    2. ' ,' → logprob: -5.006781578063965
    3. '(),' → logprob: -11.006781578063965
    4. ',sum' → logprob: -11.131781578063965
    5. ',end' → logprob: -11.131781578063965
    6. ',"' → logprob: -12.131781578063965
    7. ')' → logprob: -12.631781578063965
    8. ',
' → logprob: -13.006781578063965
    9. '+' → logprob: -13.131781578063965
    10. ',str' → logprob: -13.256781578063965

Token 393: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16065087914466858
    2. ''' → logprob: -1.9106508493423462
    3. ' "' → logprob: -8.535651206970215
    4. ',' → logprob: -9.410651206970215
    5. ' ' → logprob: -9.535651206970215
    6. ' '' → logprob: -10.910651206970215
    7. '("' → logprob: -11.160651206970215
    8. ')' → logprob: -11.410651206970215
    9. '(' → logprob: -11.535651206970215
    10. '('' → logprob: -11.785651206970215

Token 394: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5786167979240417
    2. '"' → logprob: -0.9536167979240417
    3. ' "' → logprob: -3.4536168575286865
    4. ',' → logprob: -4.578616619110107
    5. ' ,' → logprob: -5.203616619110107
    6. ''' → logprob: -5.703616619110107
    7. ' str' → logprob: -6.703616619110107
    8. ')' → logprob: -6.953616619110107
    9. ' )' → logprob: -7.828616619110107
    10. ' ' → logprob: -8.328617095947266

Token 395: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.044613100588321686
    2. 'str' → logprob: -3.2946131229400635
    3. ' +' → logprob: -5.044612884521484
    4. ' str' → logprob: -9.544612884521484
    5. '(str' → logprob: -10.919612884521484
    6. ',str' → logprob: -11.294612884521484
    7. ',' → logprob: -13.669612884521484
    8. '   ' → logprob: -14.044612884521484
    9. '=str' → logprob: -14.044612884521484
    10. '[str' → logprob: -14.669612884521484

Token 396: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.961759259458631e-06
    2. ' str' → logprob: -12.250004768371582
    3. '(str' → logprob: -17.1250057220459
    4. '	str' → logprob: -18.7500057220459
    5. 'sum' → logprob: -19.1250057220459
    6. ' ' → logprob: -20.1250057220459
    7. '   ' → logprob: -20.1250057220459
    8. '[str' → logprob: -21.1250057220459
    9. '=str' → logprob: -21.2500057220459
    10. 'string' → logprob: -21.2500057220459

Token 397: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -1.5048530030981055e-06
    2. 'sum' → logprob: -13.500001907348633
    3. '(' → logprob: -18.000001907348633
    4. '=sum' → logprob: -21.125001907348633
    5. ' (' → logprob: -22.125001907348633
    6. ' sum' → logprob: -22.125001907348633
    7. '((' → logprob: -22.875001907348633
    8. '(max' → logprob: -22.875001907348633
    9. '(s' → logprob: -23.000001907348633
    10. '(
' → logprob: -23.500001907348633

Token 398: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '([' → logprob: -14.875
    3. 'wa' → logprob: -18.375
    4. '((' → logprob: -19.0
    5. ' (' → logprob: -19.5
    6. '(w' → logprob: -20.125
    7. '```' → logprob: -20.25
    8. '(
' → logprob: -20.875
    9. '	' → logprob: -21.625
    10. '[' → logprob: -22.125

Token 399: 'wa' (ID: 1708)
  Prédit: 'wa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.011221705935895443
    2. '(' → logprob: -4.511221885681152
    3. '[' → logprob: -8.886221885681152
    4. '([' → logprob: -10.761221885681152
    5. '(w' → logprob: -11.386221885681152
    6. 'w' → logprob: -13.136221885681152
    7. ' wa' → logprob: -14.761221885681152
    8. 'wo' → logprob: -15.761221885681152
    9. '[w' → logprob: -16.386220932006836
    10. 'waa' → logprob: -16.511220932006836

Token 400: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2833946943283081
    2. '()))' → logprob: -1.408394694328308
    3. ')))' → logprob: -6.533394813537598
    4. '())' → logprob: -7.783394813537598
    5. '()))
' → logprob: -9.283394813537598
    6. '()' → logprob: -9.408394813537598
    7. ')' → logprob: -9.408394813537598
    8. '())))' → logprob: -9.783394813537598
    9. '))
' → logprob: -10.408394813537598
    10. '(' → logprob: -10.908394813537598

Token 401: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '())' → logprob: -14.375001907348633
    3. ')
' → logprob: -15.000001907348633
    4. '))' → logprob: -15.500001907348633
    5. '")' → logprob: -16.375001907348633
    6. ')`' → logprob: -16.500001907348633
    7. ')")' → logprob: -17.250001907348633
    8. ' )' → logprob: -17.250001907348633
    9. '()' → logprob: -17.375001907348633
    10. ')}' → logprob: -17.500001907348633

Token 402: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3133488595485687
    2. '__' → logprob: -1.3133488893508911
    3. '_' → logprob: -9.938348770141602
    4. 'name' → logprob: -11.063348770141602
    5. '_name' → logprob: -11.188348770141602
    6. '___' → logprob: -11.938348770141602
    7. ' ' → logprob: -13.438348770141602
    8. ' ' → logprob: -14.938348770141602
    9. '/__' → logprob: -15.313348770141602
    10. 'Name' → logprob: -15.438348770141602

Token 404: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003643430070951581
    2. ' __' → logprob: -5.87864351272583
    3. 'name' → logprob: -7.62864351272583
    4. '==' → logprob: -8.753643035888672
    5. ' ==' → logprob: -9.253643035888672
    6. '_name' → logprob: -9.628643035888672
    7. '_' → logprob: -11.503643035888672
    8. '```' → logprob: -12.378643035888672
    9. '_NAME' → logprob: -12.753643035888672
    10. '.__' → logprob: -13.003643035888672

Token 405: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.696889623621246e-06
    2. '__.__' → logprob: -13.00000286102295
    3. '==' → logprob: -15.62500286102295
    4. '__('' → logprob: -16.875001907348633
    5. '____' → logprob: -17.625001907348633
    6. '__
' → logprob: -17.750001907348633
    7. '__.' → logprob: -17.875001907348633
    8. '___' → logprob: -17.875001907348633
    9. '=="' → logprob: -18.250001907348633
    10. '__["' → logprob: -18.250001907348633

Token 406: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.051084525883197784
    2. ' ==' → logprob: -3.176084518432617
    3. '==' → logprob: -4.926084518432617
    4. '=="' → logprob: -7.301084518432617
    5. '=='' → logprob: -9.301084518432617
    6. '_' → logprob: -10.801084518432617
    7. '__.__' → logprob: -12.551084518432617
    8. '___' → logprob: -13.301084518432617
    9. '__["' → logprob: -13.676084518432617
    10. ' ' → logprob: -14.301084518432617

Token 407: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014180317521095276
    2. ''' → logprob: -4.2641801834106445
    3. ' "__' → logprob: -11.264180183410645
    4. '__' → logprob: -12.514180183410645
    5. ' '__' → logprob: -15.889180183410645
    6. '"user' → logprob: -16.76418113708496
    7. '"name' → logprob: -17.26418113708496
    8. ''"' → logprob: -17.88918113708496
    9. '("__' → logprob: -18.01418113708496
    10. '"'' → logprob: -18.63918113708496

Token 408: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008668226189911366
    2. '__' → logprob: -4.758668422698975
    3. 'name' → logprob: -10.258667945861816
    4. ''' → logprob: -11.258667945861816
    5. '"' → logprob: -12.758667945861816
    6. '_main' → logprob: -12.883667945861816
    7. ' main' → logprob: -15.633667945861816
    8. 'Main' → logprob: -16.633668899536133
    9. '__':
' → logprob: -17.258668899536133
    10. ''name' → logprob: -17.508668899536133

Token 409: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.006771856918931007
    2. '__' → logprob: -5.006772041320801
    3. '__":
' → logprob: -9.8817720413208
    4. '__:' → logprob: -12.6317720413208
    5. '':' → logprob: -13.8817720413208
    6. '_' → logprob: -14.5067720413208
    7. '':
' → logprob: -14.7567720413208
    8. '():
' → logprob: -15.8817720413208
    9. '('__' → logprob: -16.506771087646484
    10. ':' → logprob: -16.881771087646484

Token 410: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.43533384799957275
    2. ' main' → logprob: -1.6853338479995728
    3. '   ' → logprob: -2.310333728790283
    4. '	main' → logprob: -2.685333728790283
    5. '_main' → logprob: -9.185334205627441
    6. '    
' → logprob: -11.060334205627441
    7. '(main' → logprob: -11.185334205627441
    8. '_MAIN' → logprob: -13.185334205627441
    9. '	Main' → logprob: -13.310334205627441
    10. '
' → logprob: -13.560334205627441

Token 411: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.125
    4. '	main' → logprob: -20.25
    5. 'mai' → logprob: -23.25
    6. '_main' → logprob: -23.375
    7. '.main' → logprob: -23.625
    8. 'ma' → logprob: -23.75
    9. '(main' → logprob: -24.375
    10. 'Main' → logprob: -24.75

Token 412: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 410
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 151
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 33.41%
Précision adaptée (1ère position): 36.83%
Précision (top 10): 76.34%
================================================================================
