================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # On lit les entrées (pourquoi pas utiliser N et K séparément ?)
    n, k = map(int, input().split())
    a = list(map(int, input().split()))

    mod = 10 ** 9 + 7
    res = 0
    # ok, ici on parcourt les couples
    for idx1 in range(n-1):
        for idx2 in range(idx1, n):
            # on saute les égalités, ça me paraît logique
            if a[idx1] == a[idx2]:
                continue
            if k == 1:
                # Cas particulier : on vérifie juste si c'est un renversement
                if a[idx1] > a[idx2]:
                    res = res + 1  # Juste ajouter 1, pas besoin de réfléchir ici
                # sinon on ne fait rien
            else:
                # étrangement, on fait différemment selon l'ordre
                if a[idx1] > a[idx2]:
                    res = res + k + (k*(k-1))//2
                else:
                    # On enlève 1 à k pour... hmm, pas 100% sûr pourquoi mais ça doit être utile
                    k2 = k - 1
                    res = res + k2 + (k2*(k2-1))//2  # j'espère que c'est juste, mais ça suit l'idée
    # enfin, on affiche le résultat modulo mod
    print(res % mod)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' (adapté à ' #') → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08817509561777115
    2. '    ' → logprob: -3.963175058364868
    3. '   ' → logprob: -3.963175058364868
    4. ' pass' → logprob: -3.963175058364868
    5. '#' → logprob: -4.338175296783447
    6. '<|end|>' → logprob: -5.338175296783447
    7. '\' → logprob: -6.338175296783447
    8. 'pass' → logprob: -6.463175296783447
    9. '  ' → logprob: -6.838175296783447
    10. '     ' → logprob: -7.088175296783447

Token 6: ' lit' (ID: 11980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05933210998773575
    2. '_' → logprob: -3.6843321323394775
    3. ' e' → logprob: -4.184331893920898
    4. '   ' → logprob: -4.434331893920898
    5. '    ' → logprob: -6.684331893920898
    6. ' =' → logprob: -6.934331893920898
    7. 'ly' → logprob: -7.434331893920898
    8. ' ```' → logprob: -7.934331893920898
    9. ' the' → logprob: -8.434331893920898
    10. '_e' → logprob: -8.934331893920898

Token 7: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005379484035074711
    2. '(' → logprob: -6.130379676818848
    3. '_' → logprob: -6.880379676818848
    4. '   ' → logprob: -7.505379676818848
    5. '()' → logprob: -7.755379676818848
    6. ' (' → logprob: -8.005379676818848
    7. '    ' → logprob: -8.880379676818848
    8. ' )' → logprob: -9.005379676818848
    9. ' =' → logprob: -9.130379676818848
    10. 'l' → logprob: -9.130379676818848

Token 8: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6815127730369568
    2. ' données' → logprob: -0.9315127730369568
    3. 'f' → logprob: -3.1815128326416016
    4. '   ' → logprob: -4.306512832641602
    5. 'd' → logprob: -4.681512832641602
    6. 'l' → logprob: -4.931512832641602
    7. ' data' → logprob: -5.056512832641602
    8. '  ' → logprob: -5.431512832641602
    9. ' f' → logprob: -5.806512832641602
    10. ' lignes' → logprob: -5.931512832641602

Token 9: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.05660820007324219
    2. 'ée' → logprob: -3.181608200073242
    3. 'é' → logprob: -4.306608200073242
    4. 'ees' → logprob: -11.556608200073242
    5. 'és' → logprob: -11.681608200073242
    6. 'e' → logprob: -11.681608200073242
    7. 'ê' → logprob: -12.806608200073242
    8. 'ee' → logprob: -12.931608200073242
    9. 'è' → logprob: -13.681608200073242
    10. 'es' → logprob: -14.306608200073242

Token 10: ' (' (ID: 350)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.5587784051895142
    2. '   ' → logprob: -1.3087784051895142
    3. '       ' → logprob: -3.0587782859802246
    4. 'n' → logprob: -3.3087782859802246
    5. '\n' → logprob: -3.5587782859802246
    6. '```' → logprob: -4.183778285980225
    7. '\x' → logprob: -5.808778285980225
    8. 'newline' → logprob: -5.933778285980225
    9. '     ' → logprob: -6.058778285980225
    10. '\r' → logprob: -6.058778285980225

Token 11: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42990514636039734
    2. ' )' → logprob: -1.4299051761627197
    3. '   ' → logprob: -2.4299051761627197
    4. ' ' → logprob: -4.179904937744141
    5. 'n' → logprob: -5.554904937744141
    6. ' ' → logprob: -7.554904937744141
    7. '       ' → logprob: -8.05490493774414
    8. '    ' → logprob: -8.30490493774414
    9. '  ' → logprob: -8.92990493774414
    10. 's' → logprob: -8.92990493774414

Token 12: 'quoi' (ID: 27876)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7190788984298706
    2. ' ' → logprob: -1.0940788984298706
    3. ' l' → logprob: -2.96907901763916
    4. ' n' → logprob: -3.59407901763916
    5. ' line' → logprob: -3.96907901763916
    6. ' la' → logprob: -4.21907901763916
    7. ' _' → logprob: -4.71907901763916
    8. '   ' → logprob: -5.09407901763916
    9. ' chaque' → logprob: -5.21907901763916
    10. '_' → logprob: -5.34407901763916

Token 13: ' pas' (ID: 2173)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5301077365875244
    2. ' ' → logprob: -1.9051077365875244
    3. ')' → logprob: -2.0301077365875244
    4. ' ' → logprob: -3.6551077365875244
    5. ' des' → logprob: -4.030107498168945
    6. 'des' → logprob: -4.155107498168945
    7. '?' → logprob: -4.280107498168945
    8. ' ):' → logprob: -4.530107498168945
    9. ' ?)' → logprob: -4.905107498168945
    10. ' ?' → logprob: -5.405107498168945

Token 14: ' utiliser' (ID: 43227)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16651256382465363
    2. ' )' → logprob: -2.2915124893188477
    3. ',' → logprob: -3.4165124893188477
    4. '?' → logprob: -4.666512489318848
    5. ' ' → logprob: -5.541512489318848
    6. ' ' → logprob: -6.291512489318848
    7. ' ,' → logprob: -6.791512489318848
    8. ' ?)' → logprob: -7.541512489318848
    9. '   ' → logprob: -7.916512489318848
    10. '?)' → logprob: -8.041512489318848

Token 15: ' N' (ID: 478)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10044389218091965
    2. 'input' → logprob: -2.6004438400268555
    3. ' la' → logprob: -4.4754438400268555
    4. ' ' → logprob: -6.6004438400268555
    5. ' des' → logprob: -6.7254438400268555
    6. ' sys' → logprob: -7.2254438400268555
    7. 'la' → logprob: -7.3504438400268555
    8. '   ' → logprob: -7.4754438400268555
    9. ' l' → logprob: -7.4754438400268555
    10. '```' → logprob: -7.6004438400268555

Token 16: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20049697160720825
    2. '?' → logprob: -2.3254969120025635
    3. ' )' → logprob: -4.075497150421143
    4. ',' → logprob: -4.200497150421143
    5. '?)' → logprob: -4.950497150421143
    6. 'ombre' → logprob: -5.075497150421143
    7. '_' → logprob: -5.075497150421143
    8. 'umer' → logprob: -5.075497150421143
    9. 'u' → logprob: -5.200497150421143
    10. '=' → logprob: -5.450497150421143

Token 17: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.2519630193710327
    2. ' K' → logprob: -1.3769630193710327
    3. 'M' → logprob: -1.5019630193710327
    4. 'K' → logprob: -1.7519630193710327
    5. '   ' → logprob: -4.251963138580322
    6. ')' → logprob: -4.751963138580322
    7. ' ' → logprob: -5.376963138580322
    8. 'T' → logprob: -5.501963138580322
    9. 'n' → logprob: -5.626963138580322
    10. ' T' → logprob: -5.626963138580322

Token 18: ' sépar' (ID: 97160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022350110113620758
    2. '):' → logprob: -4.522350311279297
    3. '?' → logprob: -5.147350311279297
    4. '   ' → logprob: -6.147350311279297
    5. ' )' → logprob: -6.272350311279297
    6. ',' → logprob: -7.272350311279297
    7. '?)' → logprob: -8.522350311279297
    8. ' ' → logprob: -9.147350311279297
    9. '):
' → logprob: -9.522350311279297
    10. ' ' → logprob: -10.022350311279297

Token 19: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.029936769977211952
    2. 'é' → logprob: -4.404936790466309
    3. 'és' → logprob: -4.404936790466309
    4. 'es' → logprob: -6.404936790466309
    5. 'ées' → logprob: -6.529936790466309
    6. 'ement' → logprob: -8.029936790466309
    7. 'ment' → logprob: -8.029936790466309
    8. 'e' → logprob: -8.404936790466309
    9. 'er' → logprob: -8.404936790466309
    10. '```' → logprob: -8.529936790466309

Token 20: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010612438432872295
    2. '?' → logprob: -5.260612487792969
    3. ' )' → logprob: -5.760612487792969
    4. ',' → logprob: -6.510612487792969
    5. '   ' → logprob: -7.760612487792969
    6. ' ' → logprob: -9.010612487792969
    7. '?)' → logprob: -10.760612487792969
    8. '`)' → logprob: -10.885612487792969
    9. ' ' → logprob: -11.260612487792969
    10. 'n' → logprob: -11.260612487792969

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012226006016135216
    2. ' )' → logprob: -5.387226104736328
    3. ' ' → logprob: -6.012226104736328
    4. '   ' → logprob: -6.137226104736328
    5. ',' → logprob: -6.887226104736328
    6. 'n' → logprob: -7.012226104736328
    7. '```' → logprob: -8.512226104736328
    8. '
' → logprob: -9.012226104736328
    9. '):' → logprob: -9.137226104736328
    10. '?' → logprob: -9.262226104736328

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08385402709245682
    2. ' ' → logprob: -3.5838539600372314
    3. ',' → logprob: -4.2088541984558105
    4. 'n' → logprob: -4.3338541984558105
    5. '    
' → logprob: -5.0838541984558105
    6. '
' → logprob: -5.4588541984558105
    7. ')' → logprob: -6.0838541984558105
    8. '   
' → logprob: -6.0838541984558105
    9. ' 
' → logprob: -6.3338541984558105
    10. '_' → logprob: -6.3338541984558105

Token 23: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.458940327167511
    2. ' ' → logprob: -1.4589402675628662
    3. '   ' → logprob: -2.208940267562866
    4. 'x' → logprob: -5.583940505981445
    5. '
' → logprob: -6.083940505981445
    6. ',' → logprob: -6.208940505981445
    7. 'a' → logprob: -6.333940505981445
    8. ')' → logprob: -6.458940505981445
    9. 'N' → logprob: -6.458940505981445
    10. ' n' → logprob: -6.458940505981445

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10479017347097397
    2. ' =' → logprob: -2.479790210723877
    3. '=' → logprob: -5.354790210723877
    4. '_' → logprob: -5.354790210723877
    5. ' ,' → logprob: -5.479790210723877
    6. ' ' → logprob: -6.604790210723877
    7. 'umber' → logprob: -8.729789733886719
    8. '   ' → logprob: -8.729789733886719
    9. 'u' → logprob: -9.229789733886719
    10. 'um' → logprob: -9.479789733886719

Token 25: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1010984405875206
    2. 'k' → logprob: -2.3510985374450684
    3. ' ' → logprob: -7.226098537445068
    4. ' K' → logprob: -9.72609806060791
    5. ' ' → logprob: -10.35109806060791
    6. '  ' → logprob: -10.60109806060791
    7. 'K' → logprob: -10.85109806060791
    8. '	k' → logprob: -12.35109806060791
    9. ' =' → logprob: -12.47609806060791
    10. 'space' → logprob: -12.72609806060791

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048625290393829346
    2. '=' → logprob: -3.0486252307891846
    3. ',' → logprob: -10.298624992370605
    4. ' ' → logprob: -13.298624992370605
    5. '=input' → logprob: -14.048624992370605
    6. '   ' → logprob: -14.798624992370605
    7. '=int' → logprob: -14.923624992370605
    8. ')' → logprob: -15.173624992370605
    9. '  ' → logprob: -15.673624992370605
    10. ' ' → logprob: -15.673624992370605

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006786066107451916
    2. 'map' → logprob: -5.006785869598389
    3. ' input' → logprob: -9.881786346435547
    4. ' ' → logprob: -11.506786346435547
    5. ' list' → logprob: -12.131786346435547
    6. 'input' → logprob: -13.381786346435547
    7. ' ' → logprob: -14.006786346435547
    8. ' [' → logprob: -14.506786346435547
    9. '	map' → logprob: -14.756786346435547
    10. '   ' → logprob: -15.006786346435547

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6467261910438538
    2. '(' → logprob: -0.7717261910438538
    3. '(str' → logprob: -4.521726131439209
    4. '(lambda' → logprob: -6.521726131439209
    5. '<|end|>' → logprob: -7.396726131439209
    6. '(input' → logprob: -7.896726131439209
    7. 'int' → logprob: -8.396726608276367
    8. '(
' → logprob: -9.146726608276367
    9. '<int' → logprob: -9.521726608276367
    10. '()' → logprob: -9.771726608276367

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005503511056303978
    2. ')' → logprob: -5.8805036544799805
    3. '(' → logprob: -6.3805036544799805
    4. 'input' → logprob: -8.00550365447998
    5. ',input' → logprob: -8.13050365447998
    6. ',' → logprob: -8.38050365447998
    7. ' input' → logprob: -9.88050365447998
    8. '=input' → logprob: -9.88050365447998
    9. ' (' → logprob: -11.63050365447998
    10. '[input' → logprob: -12.38050365447998

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1269378662109375
    2. 'input' → logprob: -2.1269378662109375
    3. ')' → logprob: -11.751937866210938
    4. '(input' → logprob: -14.626937866210938
    5. ' )' → logprob: -14.751937866210938
    6. ' ' → logprob: -14.751937866210938
    7. '	input' → logprob: -15.126937866210938
    8. '=input' → logprob: -15.501937866210938
    9. ',input' → logprob: -16.751937866210938
    10. ' ' → logprob: -16.876937866210938

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7299454212188721
    2. '()' → logprob: -1.354945421218872
    3. '())' → logprob: -1.354945421218872
    4. '());' → logprob: -7.104945182800293
    5. '(' → logprob: -7.979945182800293
    6. '()))' → logprob: -8.229945182800293
    7. ')' → logprob: -8.354945182800293
    8. '()>' → logprob: -9.229945182800293
    9. '();)' → logprob: -9.604945182800293
    10. '(),' → logprob: -10.229945182800293

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000556843588128686
    2. 'strip' → logprob: -7.500556945800781
    3. ' split' → logprob: -13.250556945800781
    4. 'rstrip' → logprob: -13.250556945800781
    5. 'spl' → logprob: -15.375556945800781
    6. 'read' → logprob: -16.87555694580078
    7. '(split' → logprob: -17.62555694580078
    8. ')' → logprob: -18.62555694580078
    9. 'replace' → logprob: -19.50055694580078
    10. '   ' → logprob: -19.62555694580078

Token 33: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09171146154403687
    2. '()))' → logprob: -2.5917115211486816
    3. ')' → logprob: -4.966711521148682
    4. '('' → logprob: -5.966711521148682
    5. '))' → logprob: -6.091711521148682
    6. '()' → logprob: -7.216711521148682
    7. '(' → logprob: -8.841711044311523
    8. '("' → logprob: -10.341711044311523
    9. '()))
' → logprob: -11.966711044311523
    10. '(""))' → logprob: -12.091711044311523

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7085894346237183
    2. ')' → logprob: -1.2085894346237183
    3. '<|end|>' → logprob: -2.958589553833008
    4. '
' → logprob: -3.083589553833008
    5. '\n' → logprob: -3.208589553833008
    6. '   ' → logprob: -3.833589553833008
    7. ',' → logprob: -4.333589553833008
    8. '\' → logprob: -5.333589553833008
    9. ' ' → logprob: -5.458589553833008
    10. '#' → logprob: -5.958589553833008

Token 35: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.864941418170929
    2. '   ' → logprob: -1.3649413585662842
    3. 'n' → logprob: -2.864941358566284
    4. ',' → logprob: -2.864941358566284
    5. '
' → logprob: -2.989941358566284
    6. '    
' → logprob: -3.614941358566284
    7. 'for' → logprob: -3.739941358566284
    8. '\n' → logprob: -3.864941358566284
    9. '```' → logprob: -4.489941596984863
    10. '  ' → logprob: -4.989941596984863

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30816400051116943
    2. '=' → logprob: -2.183164119720459
    3. '[' → logprob: -2.308164119720459
    4. '.' → logprob: -3.933164119720459
    5. '[:]' → logprob: -3.933164119720459
    6. ' ' → logprob: -5.558164119720459
    7. '.append' → logprob: -6.308164119720459
    8. ')' → logprob: -6.433164119720459
    9. ',' → logprob: -6.558164119720459
    10. '[]' → logprob: -6.933164119720459

Token 37: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10026135295629501
    2. 'list' → logprob: -2.3502614498138428
    3. ' [' → logprob: -10.225261688232422
    4. '[' → logprob: -11.725261688232422
    5. ' []' → logprob: -12.725261688232422
    6. '[]' → logprob: -12.725261688232422
    7. 'input' → logprob: -13.850261688232422
    8. ' ' → logprob: -14.100261688232422
    9. ' map' → logprob: -14.225261688232422
    10. ' input' → logprob: -14.225261688232422

Token 38: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13820800185203552
    2. '(map' → logprob: -2.1382079124450684
    3. '(int' → logprob: -4.763207912445068
    4. '(input' → logprob: -6.638207912445068
    5. '()' → logprob: -7.263207912445068
    6. '(range' → logprob: -7.888207912445068
    7. '(
' → logprob: -9.263208389282227
    8. '(eval' → logprob: -10.013208389282227
    9. '<|end|>' → logprob: -10.388208389282227
    10. '(

' → logprob: -10.763208389282227

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01423719897866249
    2. '(' → logprob: -4.264237403869629
    3. '(lambda' → logprob: -10.514237403869629
    4. '(str' → logprob: -11.389237403869629
    5. ' (' → logprob: -12.014237403869629
    6. '<int' → logprob: -12.139237403869629
    7. '(
' → logprob: -12.889237403869629
    8. '[int' → logprob: -13.014237403869629
    9. '(eval' → logprob: -13.014237403869629
    10. '(float' → logprob: -13.139237403869629

Token 40: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8169758915901184
    2. '(input' → logprob: -0.8169758915901184
    3. ',' → logprob: -2.3169758319854736
    4. ',input' → logprob: -4.066976070404053
    5. ')' → logprob: -7.941976070404053
    6. ' ,' → logprob: -8.691975593566895
    7. '(
' → logprob: -9.691975593566895
    8. 'input' → logprob: -10.316975593566895
    9. ' (' → logprob: -10.441975593566895
    10. '(),' → logprob: -10.691975593566895

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869085907936096
    2. 'input' → logprob: -1.1369085311889648
    3. '(input' → logprob: -10.261908531188965
    4. '	input' → logprob: -14.011908531188965
    5. '=input' → logprob: -14.511908531188965
    6. ')' → logprob: -14.761908531188965
    7. ',input' → logprob: -14.761908531188965
    8. '<input' → logprob: -15.386908531188965
    9. ' ' → logprob: -16.13690948486328
    10. '_input' → logprob: -16.38690948486328

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.1557283111615106e-05
    2. '()' → logprob: -10.125041961669922
    3. '(' → logprob: -14.000041961669922
    4. ' ().' → logprob: -14.500041961669922
    5. '.' → logprob: -16.875041961669922
    6. '(.' → logprob: -17.375041961669922
    7. '()))' → logprob: -18.125041961669922
    8. ' .' → logprob: -18.625041961669922
    9. '>().' → logprob: -18.750041961669922
    10. '())' → logprob: -18.750041961669922

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. '(split' → logprob: -13.50000286102295
    3. ')' → logprob: -14.75000286102295
    4. ' split' → logprob: -15.00000286102295
    5. 'strip' → logprob: -15.50000286102295
    6. 'spl' → logprob: -15.50000286102295
    7. '())' → logprob: -17.250001907348633
    8. 'rstrip' → logprob: -17.625001907348633
    9. '()' → logprob: -17.750001907348633
    10. 'plit' → logprob: -18.500001907348633

Token 44: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11776291579008102
    2. '()))' → logprob: -2.617762804031372
    3. ')' → logprob: -3.367762804031372
    4. '())' → logprob: -5.992763042449951
    5. '(' → logprob: -7.242763042449951
    6. '()' → logprob: -8.367762565612793
    7. ')))' → logprob: -8.617762565612793
    8. 'a' → logprob: -12.492762565612793
    9. ' ))' → logprob: -12.492762565612793
    10. '())))' → logprob: -12.492762565612793

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4551604390144348
    2. ' ' → logprob: -2.33016037940979
    3. '   ' → logprob: -2.70516037940979
    4. '' → logprob: -3.33016037940979
    5. ')' → logprob: -3.45516037940979
    6. '<|end|>' → logprob: -3.45516037940979
    7. '```' → logprob: -3.70516037940979
    8. '\n' → logprob: -4.080160617828369
    9. ' 
' → logprob: -4.080160617828369
    10. '\' → logprob: -4.455160617828369

Token 46: ' mod' (ID: 1812)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3337966203689575
    2. 'r' → logprob: -1.8337966203689575
    3. '   ' → logprob: -2.208796501159668
    4. 'a' → logprob: -2.583796501159668
    5. 'max' → logprob: -2.583796501159668
    6. 'm' → logprob: -2.833796501159668
    7. 'for' → logprob: -3.208796501159668
    8. 'c' → logprob: -3.333796501159668
    9. 'result' → logprob: -3.458796501159668
    10. 'n' → logprob: -3.833796501159668

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2832000255584717
    2. ' =' → logprob: -1.4082000255584717
    3. '_' → logprob: -7.908200263977051
    4. ')' → logprob: -8.03320026397705
    5. 'ular' → logprob: -8.15820026397705
    6. ',' → logprob: -8.78320026397705
    7. 'ar' → logprob: -9.53320026397705
    8. '.' → logprob: -9.90820026397705
    9. 'ul' → logprob: -9.90820026397705
    10. 'ulus' → logprob: -9.90820026397705

Token 48: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47749730944633484
    2. ' ' → logprob: -0.9774973392486572
    3. '100' → logprob: -5.727497100830078
    4. '1' → logprob: -8.977497100830078
    5. '998' → logprob: -10.602497100830078
    6. ' (' → logprob: -12.727497100830078
    7. '(' → logprob: -12.852497100830078
    8. 'int' → logprob: -14.102497100830078
    9. ' ' → logprob: -14.477497100830078
    10. ' int' → logprob: -14.977497100830078

Token 49: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.046810247004032135
    2. '100' → logprob: -3.7968101501464844
    3. '998' → logprob: -3.7968101501464844
    4. '1' → logprob: -7.796810150146484
    5. '(' → logprob: -8.046810150146484
    6. 'int' → logprob: -9.296810150146484
    7. 'pow' → logprob: -12.296810150146484
    8. ' ' → logprob: -12.421810150146484
    9. '999' → logprob: -12.921810150146484
    10. '2' → logprob: -13.421810150146484

Token 50: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.18220074474811554
    2. '**' → logprob: -1.8072007894515991
    3. '09' → logprob: -6.057200908660889
    4. '```' → logprob: -10.05720043182373
    5. ' ' → logprob: -10.55720043182373
    6. '009' → logprob: -10.93220043182373
    7. '_' → logprob: -11.80720043182373
    8. '+' → logprob: -12.43220043182373
    9. '000' → logprob: -12.68220043182373
    10. '^' → logprob: -12.80720043182373

Token 51: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.25
    3. '```' → logprob: -18.25
    4. '18' → logprob: -18.875
    5. '10' → logprob: -19.0
    6. '8' → logprob: -19.375
    7. ' ' → logprob: -19.875
    8. '+' → logprob: -19.875
    9. '4' → logprob: -20.5
    10. '6' → logprob: -20.5

Token 52: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '09' → logprob: -14.625000953674316
    3. '18' → logprob: -16.125
    4. '8' → logprob: -16.875
    5. '10' → logprob: -17.75
    6. '+' → logprob: -18.125
    7. ' ' → logprob: -18.125
    8. '15' → logprob: -18.5
    9. '```' → logprob: -18.5
    10. '   ' → logprob: -18.625

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021860685665160418
    2. ' +' → logprob: -6.127186298370361
    3. '+
' → logprob: -15.252185821533203
    4. '7' → logprob: -15.752185821533203
    5. ' plus' → logprob: -16.002185821533203
    6. ' ' → logprob: -16.127185821533203
    7. '+

' → logprob: -16.252185821533203
    8. '46' → logprob: -16.877185821533203
    9. '＋' → logprob: -17.127185821533203
    10. ' +
' → logprob: -17.877185821533203

Token 54: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '+' → logprob: -16.875
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -19.5
    6. '9' → logprob: -20.5
    7. '07' → logprob: -20.6875
    8. '  ' → logprob: -21.5625
    9. '７' → logprob: -21.6875
    10. ' ' → logprob: -22.0625

Token 55: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.375
    3. '9' → logprob: -20.125
    4. ' ' → logprob: -20.25
    5. '```' → logprob: -20.375
    6. '07' → logprob: -21.0
    7. '   ' → logprob: -22.0
    8. '' → logprob: -23.5625
    9. '

' → logprob: -23.9375
    10. '``' → logprob: -24.0

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24770429730415344
    2. '<|end|>' → logprob: -1.622704267501831
    3. '' → logprob: -4.87270450592041
    4. '\n' → logprob: -5.12270450592041
    5. '<|end|>' → logprob: -6.12270450592041
    6. '\' → logprob: -6.24770450592041
    7. ' 
' → logprob: -7.12270450592041
    8. ')' → logprob: -7.49770450592041
    9. ' ' → logprob: -7.99770450592041
    10. '  
' → logprob: -7.99770450592041

Token 57: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6718122363090515
    2. '<|end|>' → logprob: -1.2968122959136963
    3. '   ' → logprob: -1.9218122959136963
    4. '    
' → logprob: -3.7968122959136963
    5. ' ' → logprob: -3.9218122959136963
    6. ' 
' → logprob: -5.296812057495117
    7. '\n' → logprob: -5.796812057495117
    8. '  
' → logprob: -5.921812057495117
    9. '<|end|>' → logprob: -6.171812057495117
    10. '' → logprob: -6.171812057495117

Token 58: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9630419015884399
    2. 'a' → logprob: -1.21304190158844
    3. 'dp' → logprob: -2.4630417823791504
    4. 'res' (adapté à ' res') → logprob: -3.0880417823791504
    5. ')' → logprob: -3.4630417823791504
    6. '   ' → logprob: -3.5880417823791504
    7. '#' → logprob: -3.8380417823791504
    8. 'max' → logprob: -4.08804178237915
    9. ' 
' → logprob: -4.33804178237915
    10. 'c' → logprob: -4.33804178237915

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020550182089209557
    2. '=' → logprob: -3.89555025100708
    3. ' ' → logprob: -12.395549774169922
    4. ',' → logprob: -13.645549774169922
    5. 's' → logprob: -13.895549774169922
    6. ' +=' → logprob: -14.395549774169922
    7. '_' → logprob: -14.770549774169922
    8. ' =
' → logprob: -15.395549774169922
    9. ')' → logprob: -15.520549774169922
    10. '.' → logprob: -16.020549774169922

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38328614830970764
    2. '0' → logprob: -1.2582861185073853
    3. '1' → logprob: -3.383286237716675
    4. 'a' → logprob: -9.508286476135254
    5. ' a' → logprob: -10.008286476135254
    6. ' []' → logprob: -10.383286476135254
    7. 'pow' → logprob: -10.633286476135254
    8. ' k' → logprob: -10.758286476135254
    9. ' [' → logprob: -10.883286476135254
    10. ' n' → logprob: -11.383286476135254

Token 61: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3886193335056305
    2. '0' → logprob: -1.138619303703308
    3. 'pow' → logprob: -6.888619422912598
    4. 'k' → logprob: -8.013619422912598
    5. 'a' → logprob: -9.013619422912598
    6. '[' → logprob: -9.388619422912598
    7. '[]' → logprob: -10.263619422912598
    8. 'sum' → logprob: -10.263619422912598
    9. 'n' → logprob: -10.638619422912598
    10. '(' → logprob: -10.763619422912598

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15922459959983826
    2. ' ' → logprob: -2.159224510192871
    3. '<|end|>' → logprob: -4.909224510192871
    4. '  ' → logprob: -5.534224510192871
    5. ' for' → logprob: -5.784224510192871
    6. '    
' → logprob: -5.784224510192871
    7. '    ' → logprob: -5.909224510192871
    8. ')' → logprob: -5.909224510192871
    9. '\n' → logprob: -6.159224510192871
    10. 'for' → logprob: -6.284224510192871

Token 64: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20672760903835297
    2. ' for' → logprob: -1.8317276239395142
    3. '   ' → logprob: -3.9567275047302246
    4. 'a' → logprob: -5.581727504730225
    5. ' ' → logprob: -7.081727504730225
    6. ')' → logprob: -7.831727504730225
    7. '```' → logprob: -7.956727504730225
    8. '#' (adapté à ' #') → logprob: -8.206727981567383
    9. 'n' → logprob: -8.331727981567383
    10. ',' → logprob: -8.456727981567383

Token 65: ' ok' (ID: 4763)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28915929794311523
    2. ' for' → logprob: -1.4141592979431152
    3. 'a' → logprob: -5.164159297943115
    4. ' a' → logprob: -7.414159297943115
    5. 'from' → logprob: -7.664159297943115
    6. ')' → logprob: -8.289159774780273
    7. 'if' → logprob: -9.039159774780273
    8. 'range' → logprob: -9.164159774780273
    9. '```' → logprob: -9.164159774780273
    10. ' from' → logprob: -9.414159774780273

Token 66: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4410887360572815
    2. ' for' → logprob: -1.5660886764526367
    3. 'for' → logprob: -2.5660886764526367
    4. ' ' → logprob: -2.8160886764526367
    5. '  ' → logprob: -5.941088676452637
    6. '```' → logprob: -6.191088676452637
    7. '<|end|>' → logprob: -6.316088676452637
    8. ':' → logprob: -6.816088676452637
    9. ',' → logprob: -7.316088676452637
    10. ')' → logprob: -7.441088676452637

Token 67: ' ici' (ID: 27994)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7534132599830627
    2. 'for' → logprob: -0.7534132599830627
    3. 'a' → logprob: -4.128413200378418
    4. ' on' → logprob: -4.503413200378418
    5. ' a' → logprob: -4.503413200378418
    6. ' n' → logprob: -5.878413200378418
    7. ' i' → logprob: -6.003413200378418
    8. '   ' → logprob: -6.753413200378418
    9. ' ' → logprob: -6.753413200378418
    10. 'i' → logprob: -7.003413200378418

Token 68: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2864530086517334
    2. '<|end|>' → logprob: -1.2864530086517334
    3. ' ' → logprob: -1.4114530086517334
    4. 'for' → logprob: -2.1614530086517334
    5. ',' → logprob: -3.2864530086517334
    6. '   ' → logprob: -3.6614530086517334
    7. '    ' → logprob: -4.6614532470703125
    8. '  ' → logprob: -5.2864532470703125
    9. '<|end|>' → logprob: -5.2864532470703125
    10. ')' → logprob: -6.9114532470703125

Token 69: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32942190766334534
    2. ' for' → logprob: -1.454421877861023
    3. ' peut' → logprob: -5.3294219970703125
    4. '<|end|>' → logprob: -5.4544219970703125
    5. ' va' → logprob: -5.5794219970703125
    6. ' continue' → logprob: -5.7044219970703125
    7. 'range' → logprob: -5.8294219970703125
    8. ':' → logprob: -5.8294219970703125
    9. ' ' → logprob: -5.8294219970703125
    10. '=' → logprob: -6.2044219970703125

Token 70: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0031626299023628235
    2. 'ours' → logprob: -6.128162860870361
    3. 'oure' → logprob: -7.003162860870361
    4. 'our' → logprob: -10.753162384033203
    5. '_' → logprob: -11.378162384033203
    6. 'ou' → logprob: -12.128162384033203
    7. '\xe2' → logprob: -12.378162384033203
    8. 'ó' → logprob: -12.878162384033203
    9. 'court' → logprob: -12.878162384033203
    10. '\' → logprob: -13.128162384033203

Token 71: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4180123805999756
    2. ' for' → logprob: -2.0430123805999756
    3. 'range' → logprob: -2.2930123805999756
    4. 'for' → logprob: -2.5430123805999756
    5. '(range' → logprob: -2.6680123805999756
    6. ' range' → logprob: -2.6680123805999756
    7. ' i' → logprob: -2.7930123805999756
    8. 'a' → logprob: -3.0430123805999756
    9. ' all' → logprob: -3.6680123805999756
    10. '()' → logprob: -3.7930123805999756

Token 72: ' couples' (ID: 29972)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9590542912483215
    2. ' indices' → logprob: -1.8340542316436768
    3. 'i' → logprob: -2.3340542316436768
    4. 'a' → logprob: -2.4590542316436768
    5. ' k' → logprob: -2.5840542316436768
    6. ' i' → logprob: -3.0840542316436768
    7. 'k' → logprob: -3.3340542316436768
    8. ' for' → logprob: -4.084054470062256
    9. ' a' → logprob: -4.209054470062256
    10. 'for' → logprob: -4.709054470062256

Token 73: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6232945322990417
    2. 'for' → logprob: -1.9982945919036865
    3. ' for' → logprob: -2.1232945919036865
    4. '(i' → logprob: -2.7482945919036865
    5. ' (' → logprob: -2.8732945919036865
    6. ' i' → logprob: -3.2482945919036865
    7. ' ' → logprob: -3.3732945919036865
    8. '   ' → logprob: -4.998294353485107
    9. ',' → logprob: -6.248294353485107
    10. '  ' → logprob: -6.498294353485107

Token 74: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18394194543361664
    2. ' for' → logprob: -2.3089418411254883
    3. 'for' → logprob: -3.4339418411254883
    4. '  ' → logprob: -4.933941841125488
    5. ' i' → logprob: -4.933941841125488
    6. '   ' → logprob: -5.058941841125488
    7. '<|end|>' → logprob: -5.308941841125488
    8. ',' → logprob: -6.058941841125488
    9. ' ,' → logprob: -6.058941841125488
    10. '    ' → logprob: -6.558941841125488

Token 75: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47582608461380005
    2. ' for' → logprob: -0.9758260846138
    3. '   ' → logprob: -6.475826263427734
    4. ' ' → logprob: -8.725826263427734
    5. ' i' → logprob: -11.350826263427734
    6. '  ' → logprob: -11.975826263427734
    7. 'i' → logprob: -12.100826263427734
    8. 'n' → logprob: -12.225826263427734
    9. '	for' → logprob: -12.725826263427734
    10. 'range' → logprob: -12.725826263427734

Token 76: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00306779146194458
    2. ' ' → logprob: -6.253067970275879
    3. 'i' → logprob: -7.003067970275879
    4. ' _' → logprob: -9.003067970275879
    5. '_' → logprob: -9.628067970275879
    6. ' ' → logprob: -11.003067970275879
    7. '_i' → logprob: -12.253067970275879
    8. ' j' → logprob: -12.753067970275879
    9. '	i' → logprob: -12.878067970275879
    10. ' range' → logprob: -12.878067970275879

Token 77: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3931654393672943
    2. ' in' → logprob: -1.3931654691696167
    3. '1' → logprob: -2.768165349960327
    4. ' ,' → logprob: -5.393165588378906
    5. '_' → logprob: -5.643165588378906
    6. 'in' → logprob: -6.143165588378906
    7. ' ' → logprob: -6.393165588378906
    8. 's' → logprob: -6.893165588378906
    9. '```' → logprob: -8.768165588378906
    10. '0' → logprob: -8.768165588378906

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18179760873317719
    2. 'in' → logprob: -2.056797504425049
    3. ',' → logprob: -3.306797504425049
    4. ' ' → logprob: -6.806797504425049
    5. ' ,' → logprob: -7.431797504425049
    6. ',in' → logprob: -11.806797981262207
    7. '1' → logprob: -12.056797981262207
    8. '  ' → logprob: -12.681797981262207
    9. ' i' → logprob: -13.181797981262207
    10. ')' → logprob: -13.181797981262207

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03366990387439728
    2. 'range' → logprob: -3.408669948577881
    3. ' a' → logprob: -11.158669471740723
    4. 'a' → logprob: -12.533669471740723
    5. ' ' → logprob: -12.783669471740723
    6. '(range' → logprob: -13.783669471740723
    7. '	range' → logprob: -13.908669471740723
    8. '   ' → logprob: -14.783669471740723
    9. '```' → logprob: -15.783669471740723
    10. '  ' → logprob: -15.783669471740723

Token 80: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11304760724306107
    2. '(' → logprob: -2.3630475997924805
    3. '(k' → logprob: -4.3630475997924805
    4. '(len' → logprob: -10.98804759979248
    5. '(
' → logprob: -14.36304759979248
    6. ' (' → logprob: -14.61304759979248
    7. '((' → logprob: -15.23804759979248
    8. '(s' → logprob: -15.36304759979248
    9. '(nx' → logprob: -16.113048553466797
    10. '(N' → logprob: -16.238048553466797

Token 81: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006313397083431482
    2. '-' → logprob: -5.256313323974609
    3. ' -' → logprob: -7.881313323974609
    4. ' ):' → logprob: -8.00631332397461
    5. '):
' → logprob: -8.13131332397461
    6. ')' → logprob: -9.88131332397461
    7. ' ' → logprob: -11.75631332397461
    8. '   ' → logprob: -12.25631332397461
    9. ':' → logprob: -12.88131332397461
    10. '1' → logprob: -13.75631332397461

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004947714623995125
    2. ' ' → logprob: -7.625494956970215
    3. '2' → logprob: -12.375494956970215
    4. 'k' → logprob: -13.625494956970215
    5. ')' → logprob: -15.000494956970215
    6. '-' → logprob: -15.000494956970215
    7. '```' → logprob: -16.0629940032959
    8. '   ' → logprob: -16.1254940032959
    9. ' k' → logprob: -16.2504940032959
    10. '  ' → logprob: -17.0629940032959

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003805064770858735
    2. ' ):' → logprob: -8.375380516052246
    3. '):
' → logprob: -9.750380516052246
    4. ')' → logprob: -9.875380516052246
    5. ',' → logprob: -10.250380516052246
    6. ':' → logprob: -13.125380516052246
    7. ' ' → logprob: -14.375380516052246
    8. '):
' → logprob: -14.875380516052246
    9. '):

' → logprob: -15.125380516052246
    10. '():' → logprob: -15.750380516052246

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0165486391633749
    2. ' :' → logprob: -4.3915486335754395
    3. '   ' → logprob: -5.7665486335754395
    4. '):' → logprob: -8.391549110412598
    5. '       ' → logprob: -8.891549110412598
    6. ' for' → logprob: -9.391549110412598
    7. ':
' → logprob: -9.391549110412598
    8. ',' → logprob: -9.641549110412598
    9. '    ' → logprob: -9.641549110412598
    10. ')' → logprob: -10.016549110412598

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11713510751724243
    2. '   ' → logprob: -2.8671350479125977
    3. 'for' (adapté à ' for') → logprob: -2.9921350479125977
    4. '	for' → logprob: -5.867135047912598
    5. '    ' → logprob: -7.867135047912598
    6. ' ' → logprob: -8.742135047912598
    7. '       ' → logprob: -9.617135047912598
    8. '  ' → logprob: -10.992135047912598
    9. '<|end|>' → logprob: -11.242135047912598
    10. '	' → logprob: -12.742135047912598

Token 86: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00030424181022681296
    2. 'idx' → logprob: -8.125304222106934
    3. ' range' → logprob: -13.000304222106934
    4. ' ' → logprob: -13.250304222106934
    5. '	idx' → logprob: -13.250304222106934
    6. '(idx' → logprob: -14.125304222106934
    7. '_idx' → logprob: -14.375304222106934
    8. ' i' → logprob: -15.500304222106934
    9. ' index' → logprob: -15.625304222106934
    10. '[idx' → logprob: -15.750304222106934

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008666218258440495
    2. '1' → logprob: -4.758666038513184
    3. ' ' → logprob: -10.258666038513184
    4. '```' → logprob: -12.758666038513184
    5. '   ' → logprob: -12.883666038513184
    6. 's' → logprob: -13.071166038513184
    7. '_' → logprob: -13.196166038513184
    8. ' in' → logprob: -13.383666038513184
    9. '  ' → logprob: -13.446166038513184
    10. '+' → logprob: -14.071166038513184

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032404589001089334
    2. 'in' → logprob: -5.753240585327148
    3. ' ' → logprob: -10.503240585327148
    4. '    ' → logprob: -11.628240585327148
    5. '   ' → logprob: -11.878240585327148
    6. 'range' → logprob: -12.128240585327148
    7. '1' → logprob: -13.003240585327148
    8. 'In' → logprob: -13.128240585327148
    9. ')' → logprob: -13.503240585327148
    10. '  ' → logprob: -14.128240585327148

Token 89: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693283200263977
    2. 'range' → logprob: -0.693283200263977
    3. '(range' → logprob: -9.193283081054688
    4. '	range' → logprob: -11.693283081054688
    5. ' xrange' → logprob: -12.193283081054688
    6. ' idx' → logprob: -12.193283081054688
    7. '   ' → logprob: -12.693283081054688
    8. ' ' → logprob: -12.818283081054688
    9. '    ' → logprob: -12.818283081054688
    10. 'idx' → logprob: -12.943283081054688

Token 90: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0036535258404910564
    2. '(' → logprob: -6.003653526306152
    3. '(n' → logprob: -7.503653526306152
    4. '(range' → logprob: -8.253653526306152
    5. ' (' → logprob: -9.128653526306152
    6. ' range' → logprob: -9.378653526306152
    7. ' idx' → logprob: -9.628653526306152
    8. 'range' → logprob: -9.753653526306152
    9. 'idx' → logprob: -11.628653526306152
    10. '(index' → logprob: -11.878653526306152

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.500000953674316
    4. '2' → logprob: -15.875000953674316
    5. '+' → logprob: -16.0625
    6. '   ' → logprob: -17.3125
    7. '' → logprob: -17.5625
    8. 's' → logprob: -17.8125
    9. '
' → logprob: -17.875
    10. '_' → logprob: -18.0625

Token 92: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02055473066866398
    2. ' +' → logprob: -3.895554780960083
    3. '1' → logprob: -11.395554542541504
    4. '()+' → logprob: -14.770554542541504
    5. '+
' → logprob: -15.145554542541504
    6. '+k' → logprob: -15.520554542541504
    7. '+n' → logprob: -15.895554542541504
    8. ' ' → logprob: -15.895554542541504
    9. ')+' → logprob: -16.14555549621582
    10. '+)' → logprob: -16.14555549621582

Token 93: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759801864624023
    2. ' n' → logprob: -0.8259801864624023
    3. '	n' → logprob: -10.700980186462402
    4. '+' → logprob: -12.075980186462402
    5. '   ' → logprob: -12.700980186462402
    6. '    ' → logprob: -13.075980186462402
    7. '<|end|>' → logprob: -13.075980186462402
    8. '1' → logprob: -13.825980186462402
    9. ')n' → logprob: -13.825980186462402
    10. ' ' → logprob: -13.950980186462402

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006521748844534159
    2. '):
' → logprob: -5.631521701812744
    3. ')' → logprob: -6.131521701812744
    4. '-' → logprob: -7.631521701812744
    5. '1' → logprob: -9.381522178649902
    6. '+' → logprob: -9.881522178649902
    7. '):

' → logprob: -10.506522178649902
    8. '   ' → logprob: -10.631522178649902
    9. '       ' → logprob: -11.256522178649902
    10. '2' → logprob: -11.381522178649902

Token 95: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29422077536582947
    2. ':' → logprob: -1.5442208051681519
    3. '           ' → logprob: -3.5442206859588623
    4. ' :' → logprob: -5.544220924377441
    5. '<|end|>' → logprob: -5.794220924377441
    6. '):' → logprob: -5.919220924377441
    7. '               ' → logprob: -7.669220924377441
    8. ')' → logprob: -7.669220924377441
    9. '   ' → logprob: -8.044220924377441
    10. ' if' → logprob: -8.169220924377441

Token 96: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3521289527416229
    2. '       ' → logprob: -1.3521289825439453
    3. '               ' → logprob: -4.602128982543945
    4. ' if' → logprob: -4.977128982543945
    5. '<|end|>' → logprob: -4.977128982543945
    6. '   ' → logprob: -5.727128982543945
    7. '        ' → logprob: -6.102128982543945
    8. ' 
' → logprob: -6.352128982543945
    9. '    ' → logprob: -6.477128982543945
    10. '           ' → logprob: -6.602128982543945

Token 97: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10772904008626938
    2. 'if' → logprob: -2.482728958129883
    3. '           ' → logprob: -5.232728958129883
    4. ' pass' → logprob: -5.357728958129883
    5. ' continue' → logprob: -6.107728958129883
    6. '       ' → logprob: -6.482728958129883
    7. ' ' → logprob: -6.607728958129883
    8. '            ' → logprob: -7.732728958129883
    9. '               ' → logprob: -7.857728958129883
    10. '   ' → logprob: -7.857728958129883

Token 98: ' saute' (ID: 146395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2164987325668335
    2. 'if' → logprob: -1.3414987325668335
    3. ' continue' → logprob: -1.4664987325668335
    4. 'continue' → logprob: -2.216498851776123
    5. '   ' → logprob: -4.216498851776123
    6. '       ' → logprob: -4.466498851776123
    7. 's' → logprob: -4.716498851776123
    8. '           ' → logprob: -4.841498851776123
    9. ' ' → logprob: -4.841498851776123
    10. ' mod' → logprob: -4.966498851776123

Token 99: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3374953269958496
    2. '               ' → logprob: -1.8374953269958496
    3. '           ' → logprob: -2.4624953269958496
    4. 'if' → logprob: -4.46249532699585
    5. ' continue' → logprob: -4.58749532699585
    6. '       ' → logprob: -4.71249532699585
    7. ' ' → logprob: -5.58749532699585
    8. '   ' → logprob: -5.71249532699585
    9. '            ' → logprob: -7.33749532699585
    10. 'continue' → logprob: -7.33749532699585

Token 100: ' égal' (ID: 15059)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1498829126358032
    2. ' if' → logprob: -1.2748829126358032
    3. ' ' → logprob: -2.5248827934265137
    4. 'trip' → logprob: -3.0248827934265137
    5. ' trip' → logprob: -3.5248827934265137
    6. 'a' → logprob: -3.6498827934265137
    7. '   ' → logprob: -3.7748827934265137
    8. '          ' → logprob: -3.7748827934265137
    9. 'indices' → logprob: -3.8998827934265137
    10. '  ' → logprob: -3.8998827934265137

Token 101: 'ités' (ID: 12479)
  Prédit: 'ités'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ités' → logprob: -0.09069445729255676
    2. 'ites' → logprob: -2.7156944274902344
    3. 'it' → logprob: -4.590694427490234
    4. 'ité' → logprob: -5.215694427490234
    5. 'es' → logprob: -6.340694427490234
    6. 'if' → logprob: -7.215694427490234
    7. 'ities' → logprob: -7.340694427490234
    8. 'ite' → logprob: -7.465694427490234
    9. '```' → logprob: -7.715694427490234
    10. 'e' → logprob: -8.840694427490234

Token 102: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08344285935163498
    2. ' if' → logprob: -3.0834429264068604
    3. '               ' → logprob: -3.4584429264068604
    4. 'if' → logprob: -6.833442687988281
    5. '       ' → logprob: -6.958442687988281
    6. '<|end|>' → logprob: -8.083442687988281
    7. ',' → logprob: -9.333442687988281
    8. '            ' → logprob: -9.333442687988281
    9. '   ' → logprob: -9.458442687988281
    10. '            
' → logprob: -10.208442687988281

Token 103: ' ça' (ID: 13590)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15657638013362885
    2. '               ' → logprob: -2.40657639503479
    3. ' if' → logprob: -3.65657639503479
    4. ' continue' → logprob: -3.78157639503479
    5. 'if' → logprob: -6.656576156616211
    6. 'continue' → logprob: -6.781576156616211
    7. ' ' → logprob: -6.906576156616211
    8. '            ' → logprob: -7.156576156616211
    9. '   ' → logprob: -7.406576156616211
    10. '       ' → logprob: -8.031576156616211

Token 104: ' me' (ID: 668)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3789106011390686
    2. 'continue' → logprob: -1.5039105415344238
    3. '           ' → logprob: -2.878910541534424
    4. '               ' → logprob: -4.253910541534424
    5. ' continues' → logprob: -4.878910541534424
    6. '	continue' → logprob: -5.628910541534424
    7. '<|end|>' → logprob: -5.628910541534424
    8. '       ' → logprob: -6.378910541534424
    9. '   ' → logprob: -6.378910541534424
    10. ' if' → logprob: -7.003910541534424

Token 105: ' paraît' (ID: 164516)
  Prédit: 'semble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'semble' → logprob: -0.34440577030181885
    2. ' semble' → logprob: -1.7194057703018188
    3. 's' → logprob: -4.469405651092529
    4. 'para' → logprob: -4.469405651092529
    5. ' paraît' → logprob: -4.469405651092529
    6. ' plaît' → logprob: -4.969405651092529
    7. 'sa' → logprob: -5.094405651092529
    8. 't' → logprob: -5.094405651092529
    9. 'pl' → logprob: -5.594405651092529
    10. '```' → logprob: -5.594405651092529

Token 106: ' logique' (ID: 115350)
  Prédit: ' logique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logique' → logprob: -0.1995076984167099
    2. 'log' → logprob: -1.949507713317871
    3. 'correct' → logprob: -4.824507713317871
    4. '           ' → logprob: -5.699507713317871
    5. ' sens' → logprob: -5.824507713317871
    6. 'co' → logprob: -5.949507713317871
    7. 'just' → logprob: -5.949507713317871
    8. 'pas' → logprob: -6.449507713317871
    9. 'logical' → logprob: -6.449507713317871
    10. ' log' → logprob: -6.449507713317871

Token 107: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3030482232570648
    2. '               ' → logprob: -1.4280482530593872
    3. ' if' → logprob: -4.053048133850098
    4. '<|end|>' → logprob: -6.178048133850098
    5. '       ' → logprob: -7.303048133850098
    6. 'if' → logprob: -8.053048133850098
    7. '            ' → logprob: -8.053048133850098
    8. '            
' → logprob: -9.178048133850098
    9. '          ' → logprob: -9.428048133850098
    10. '   ' → logprob: -9.428048133850098

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40472516417503357
    2. '               ' → logprob: -1.154725193977356
    3. ' if' → logprob: -4.654725074768066
    4. '<|end|>' → logprob: -5.279725074768066
    5. '       ' → logprob: -6.154725074768066
    6. '            ' → logprob: -8.529725074768066
    7. 'if' → logprob: -8.654725074768066
    8. '   ' → logprob: -9.154725074768066
    9. '	       ' → logprob: -9.279725074768066
    10. '              ' → logprob: -9.529725074768066

Token 109: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3492700755596161
    2. '           ' → logprob: -1.7242701053619385
    3. 'if' (adapté à ' if') → logprob: -2.3492701053619385
    4. '               ' → logprob: -4.474269866943359
    5. '       ' → logprob: -4.849269866943359
    6. '   ' → logprob: -6.849269866943359
    7. ' ' → logprob: -7.974269866943359
    8. '	       ' → logprob: -8.84926986694336
    9. '	if' → logprob: -9.97426986694336
    10. '            ' → logprob: -10.59926986694336

Token 110: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06326443701982498
    2. 'a' → logprob: -2.8132643699645996
    3. ' idx' → logprob: -6.8132643699646
    4. ' ' → logprob: -9.188264846801758
    5. 'idx' → logprob: -9.938264846801758
    6. '	a' → logprob: -10.688264846801758
    7. ' ' → logprob: -12.188264846801758
    8. '    ' → logprob: -12.563264846801758
    9. '(a' → logprob: -13.063264846801758
    10. ' (' → logprob: -13.188264846801758

Token 111: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00862876046448946
    2. '[' → logprob: -4.758628845214844
    3. '[a' → logprob: -11.758628845214844
    4. '[index' → logprob: -12.633628845214844
    5. ' [' → logprob: -14.008628845214844
    6. '[int' → logprob: -15.008628845214844
    7. '[
' → logprob: -15.258628845214844
    8. '[src' → logprob: -15.258628845214844
    9. '[id' → logprob: -15.383628845214844
    10. '[j' → logprob: -15.383628845214844

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.436450636712834e-05
    2. '2' → logprob: -9.625094413757324
    3. '[idx' → logprob: -10.500094413757324
    4. '```' → logprob: -15.000094413757324
    5. '[' → logprob: -15.250094413757324
    6. '   ' → logprob: -16.875093460083008
    7. ' ' → logprob: -16.875093460083008
    8. '' → logprob: -17.312593460083008
    9. 'idx' → logprob: -17.875093460083008
    10. '１' → logprob: -18.562593460083008

Token 113: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8211091160774231
    2. ' ==' → logprob: -0.9461091160774231
    3. ' <' → logprob: -3.1961090564727783
    4. '==' → logprob: -3.1961090564727783
    5. ' ' → logprob: -3.8211090564727783
    6. '!=' → logprob: -3.8211090564727783
    7. ' >=' → logprob: -4.321109294891357
    8. ' >' → logprob: -4.446109294891357
    9. '>' → logprob: -4.821109294891357
    10. '[' → logprob: -5.446109294891357

Token 114: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7061336040496826
    2. '!=' → logprob: -1.5811336040496826
    3. ' ==' → logprob: -2.5811336040496826
    4. ' >' → logprob: -3.0811336040496826
    5. ' <' → logprob: -3.0811336040496826
    6. '>' → logprob: -3.2061336040496826
    7. '==' → logprob: -3.2061336040496826
    8. '<' → logprob: -3.5811336040496826
    9. ' ' → logprob: -4.206133842468262
    10. '%' → logprob: -5.831133842468262

Token 115: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.28183314204216003
    2. 'a' → logprob: -1.4068331718444824
    3. ' ' → logprob: -7.781833171844482
    4. '0' → logprob: -9.031832695007324
    5. '	a' → logprob: -9.281832695007324
    6. '>a' → logprob: -12.031832695007324
    7. '_a' → logprob: -12.156832695007324
    8. '<|end|>' → logprob: -12.281832695007324
    9. ')a' → logprob: -12.406832695007324
    10. '  ' → logprob: -12.531832695007324

Token 116: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.908022285439074e-05
    2. '[a' → logprob: -10.375059127807617
    3. 'a' → logprob: -10.625059127807617
    4. 'idx' → logprob: -13.250059127807617
    5. '[' → logprob: -13.875059127807617
    6. ' idx' → logprob: -15.500059127807617
    7. '```' → logprob: -15.625059127807617
    8. '	idx' → logprob: -16.000059127807617
    9. '   ' → logprob: -16.500059127807617
    10. ' ' → logprob: -17.000059127807617

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021886874455958605
    2. '1' → logprob: -6.127188682556152
    3. '[idx' → logprob: -13.127188682556152
    4. 'idx' → logprob: -14.502188682556152
    5. ' ' → logprob: -14.877188682556152
    6. ']' → logprob: -15.502188682556152
    7. '```' → logprob: -15.627188682556152
    8. '   ' → logprob: -15.627188682556152
    9. '[' → logprob: -15.877188682556152
    10. '' → logprob: -17.56468963623047

Token 118: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09831644594669342
    2. '):
' → logprob: -2.5983164310455322
    3. ':' → logprob: -4.098316669464111
    4. ')' → logprob: -6.473316669464111
    5. ' or' → logprob: -7.473316669464111
    6. ':
' → logprob: -8.598316192626953
    7. ' ):' → logprob: -9.348316192626953
    8. '   ' → logprob: -10.223316192626953
    9. ' continue' → logprob: -10.223316192626953
    10. '):
' → logprob: -10.348316192626953

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00946104060858488
    2. ' continue' → logprob: -4.759460926055908
    3. 'continue' → logprob: -7.384460926055908
    4. '           ' → logprob: -9.634461402893066
    5. '	continue' → logprob: -9.759461402893066
    6. ' continues' → logprob: -11.009461402893066
    7. ':' → logprob: -11.384461402893066
    8. '<|end|>' → logprob: -11.634461402893066
    9. '                   ' → logprob: -11.759461402893066
    10. '       ' → logprob: -11.759461402893066

Token 120: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7518970370292664
    2. '               ' → logprob: -1.2518970966339111
    3. '                   ' → logprob: -1.5018970966339111
    4. 'continue' (adapté à ' continue') → logprob: -4.126896858215332
    5. '	continue' → logprob: -6.251896858215332
    6. '   ' → logprob: -7.126896858215332
    7. ' ' → logprob: -8.501896858215332
    8. '           ' → logprob: -8.876896858215332
    9. '                       ' → logprob: -9.376896858215332
    10. ' continues' → logprob: -9.376896858215332

Token 121: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09265725314617157
    2. '<|end|>' → logprob: -3.3426573276519775
    3. '
' → logprob: -3.4676573276519775
    4. '            
' → logprob: -3.9676573276519775
    5. '<|end|>' → logprob: -7.092657089233398
    6. '  
' → logprob: -7.467657089233398
    7. '    
' → logprob: -7.842657089233398
    8. ' 
' → logprob: -7.967657089233398
    9. '               ' → logprob: -8.092657089233398
    10. '                
' → logprob: -9.592657089233398

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1795700043439865
    2. '<|end|>' → logprob: -1.929569959640503
    3. '
' → logprob: -4.804570198059082
    4. '            
' → logprob: -5.429570198059082
    5. ' 
' → logprob: -6.429570198059082
    6. '<|end|>' → logprob: -6.679570198059082
    7. '  
' → logprob: -6.804570198059082
    8. '               ' → logprob: -7.554570198059082
    9. '    
' → logprob: -7.679570198059082
    10. ' ' → logprob: -7.929570198059082

Token 123: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38543280959129333
    2. '       ' → logprob: -1.8854328393936157
    3. 'if' (adapté à ' if') → logprob: -2.260432720184326
    4. ' if' → logprob: -3.010432720184326
    5. '<|end|>' → logprob: -5.010432720184326
    6. '               ' → logprob: -6.135432720184326
    7. '            ' → logprob: -7.010432720184326
    8. '        ' → logprob: -7.135432720184326
    9. '            
' → logprob: -7.135432720184326
    10. '   ' → logprob: -7.885432720184326

Token 124: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2825644612312317
    2. ' a' → logprob: -2.032564401626587
    3. ' abs' → logprob: -2.407564401626587
    4. '(a' → logprob: -4.657564640045166
    5. '(' → logprob: -5.407564640045166
    6. 'a' → logprob: -5.657564640045166
    7. ' k' → logprob: -5.907564640045166
    8. 'abs' → logprob: -6.407564640045166
    9. '(abs' → logprob: -6.532564640045166
    10. ' ' → logprob: -6.907564640045166

Token 125: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.21664594113826752
    2. ' ==' → logprob: -2.5916459560394287
    3. ' >' → logprob: -3.3416459560394287
    4. '%' → logprob: -3.5916459560394287
    5. ' <=' → logprob: -3.9666459560394287
    6. '==' → logprob: -4.34164571762085
    7. ' -' → logprob: -4.84164571762085
    8. '>' → logprob: -5.71664571762085
    9. ' >=' → logprob: -5.96664571762085
    10. '-' → logprob: -5.96664571762085

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36297351121902466
    2. '1' → logprob: -1.3629734516143799
    3. ' ' → logprob: -3.36297345161438
    4. '2' → logprob: -4.612973690032959
    5. 'idx' → logprob: -5.987973690032959
    6. 'a' → logprob: -7.362973690032959
    7. '3' → logprob: -8.8629732131958
    8. '-' → logprob: -8.8629732131958
    9. ' idx' → logprob: -9.3629732131958
    10. '(a' → logprob: -9.9879732131958

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6141151189804077
    2. '0' → logprob: -0.8641151189804077
    3. '2' → logprob: -3.3641152381896973
    4. 'idx' → logprob: -6.739115238189697
    5. ' ' → logprob: -7.114115238189697
    6. 'a' → logprob: -8.364114761352539
    7. '3' → logprob: -8.739114761352539
    8. '-' → logprob: -8.739114761352539
    9. 'len' → logprob: -9.739114761352539
    10. 'k' → logprob: -10.114114761352539

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006657334160991013
    2. ' :' → logprob: -7.875665664672852
    3. ':
' → logprob: -8.500665664672852
    4. ' and' → logprob: -9.875665664672852
    5. ' or' → logprob: -10.875665664672852
    6. '):' → logprob: -12.250665664672852
    7. ':return' → logprob: -12.500665664672852
    8. 'and' → logprob: -13.500665664672852
    9. ')' → logprob: -14.125665664672852
    10. ' :
' → logprob: -14.875665664672852

Token 129: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21217311918735504
    2. ':' → logprob: -2.2121732234954834
    3. ':
' → logprob: -2.7121732234954834
    4. '
' → logprob: -4.587172985076904
    5. '           ' → logprob: -5.587172985076904
    6. '       ' → logprob: -8.337173461914062
    7. ' and' → logprob: -8.837173461914062
    8. '):' → logprob: -9.087173461914062
    9. '):
' → logprob: -9.087173461914062
    10. ' :' → logprob: -9.087173461914062

Token 130: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5467422008514404
    2. '                   ' → logprob: -1.0467422008514404
    3. 'res' → logprob: -3.4217422008514404
    4. '
' → logprob: -4.5467424392700195
    5. '           ' → logprob: -5.2967424392700195
    6. 'break' → logprob: -5.2967424392700195
    7. ' res' → logprob: -5.4217424392700195
    8. 'continue' → logprob: -5.6717424392700195
    9. ' break' → logprob: -6.1717424392700195
    10. '                       ' → logprob: -6.5467424392700195

Token 131: ' Cas' (ID: 8066)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.26831698417663574
    2. ' res' → logprob: -1.5183169841766357
    3. 'print' → logprob: -6.018317222595215
    4. 'break' → logprob: -6.143317222595215
    5. 'pass' → logprob: -6.143317222595215
    6. 'if' → logprob: -6.268317222595215
    7. 'continue' → logprob: -6.518317222595215
    8. '   ' → logprob: -6.768317222595215
    9. ' if' → logprob: -7.018317222595215
    10. 'return' → logprob: -7.018317222595215

Token 132: ' particulier' (ID: 47842)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3383291959762573
    2. '               ' → logprob: -1.8383291959762573
    3. ' ' → logprob: -3.463329315185547
    4. '   ' → logprob: -4.088329315185547
    5. '                ' → logprob: -4.213329315185547
    6. '           ' → logprob: -4.588329315185547
    7. ':' → logprob: -5.088329315185547
    8. '                    ' → logprob: -5.463329315185547
    9. ' for' → logprob: -5.588329315185547
    10. ' res' → logprob: -5.838329315185547

Token 133: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1585378646850586
    2. '                   ' → logprob: -2.1585378646850586
    3. ':
' → logprob: -4.158537864685059
    4. '               ' → logprob: -4.408537864685059
    5. '           ' → logprob: -6.158537864685059
    6. '                ' → logprob: -8.283537864685059
    7. ' :' → logprob: -8.408537864685059
    8. '                    
' → logprob: -8.658537864685059
    9. '   ' → logprob: -8.783537864685059
    10. '                       ' → logprob: -9.533537864685059

Token 134: ' on' (ID: 402)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.28171372413635254
    2. 'res' → logprob: -1.6567137241363525
    3. 'print' → logprob: -3.7817137241363525
    4. ' print' → logprob: -3.9067137241363525
    5. ' if' → logprob: -5.281713485717773
    6. ' continue' → logprob: -6.406713485717773
    7. 'if' → logprob: -6.656713485717773
    8. 'continue' → logprob: -7.156713485717773
    9. ' break' → logprob: -7.406713485717773
    10. '1' → logprob: -7.906713485717773

Token 135: ' vér' (ID: 42524)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.8289381265640259
    2. 'return' → logprob: -1.9539381265640259
    3. ' continue' → logprob: -2.3289380073547363
    4. ' n' → logprob: -2.7039380073547363
    5. ' compte' → logprob: -2.9539380073547363
    6. 'n' → logprob: -3.0789380073547363
    7. ' peut' → logprob: -3.2039380073547363
    8. ' ajoute' → logprob: -3.3289380073547363
    9. 'continue' → logprob: -3.4539380073547363
    10. ' a' → logprob: -3.5789380073547363

Token 136: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.005912915337830782
    2. 'if' → logprob: -5.255912780761719
    3. 'ifi' → logprob: -8.505912780761719
    4. 'ifier' → logprob: -8.630912780761719
    5. 'ife' → logprob: -9.255912780761719
    6. 'ifié' → logprob: -9.255912780761719
    7. 'ifiez' → logprob: -10.755912780761719
    8. '```' → logprob: -11.130912780761719
    9. 'i' → logprob: -11.255912780761719
    10. 'ification' → logprob: -11.380912780761719

Token 137: ' juste' (ID: 31553)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.017456093803048134
    2. ' ' → logprob: -4.8924560546875
    3. ' si' → logprob: -5.3924560546875
    4. 'if' → logprob: -5.5174560546875
    5. '    ' → logprob: -8.0174560546875
    6. ' que' → logprob: -8.6424560546875
    7. 'si' → logprob: -8.8924560546875
    8. '   ' → logprob: -9.0174560546875
    9. ' whether' → logprob: -9.2674560546875
    10. ' la' → logprob: -9.5174560546875

Token 138: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13300372660160065
    2. 'if' → logprob: -2.1330037117004395
    3. '   ' → logprob: -5.8830037117004395
    4. ' si' → logprob: -6.6330037117004395
    5. ' ' → logprob: -7.7580037117004395
    6. 'si' → logprob: -7.8830037117004395
    7. '       ' → logprob: -8.258004188537598
    8. ' que' → logprob: -8.633004188537598
    9. 'la' → logprob: -8.758004188537598
    10. 'a' → logprob: -9.383004188537598

Token 139: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6925427317619324
    2. ' a' → logprob: -0.8175427317619324
    3. ' abs' → logprob: -3.692542791366577
    4. 'abs' → logprob: -4.442542552947998
    5. ' (' → logprob: -4.567542552947998
    6. '(a' → logprob: -5.442542552947998
    7. ' idx' → logprob: -5.817542552947998
    8. 'idx' → logprob: -6.317542552947998
    9. ' ' → logprob: -7.692542552947998
    10. '(' → logprob: -7.817542552947998

Token 140: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1505309343338013
    2. '[a' → logprob: -1.2755309343338013
    3. ' a' → logprob: -2.2755308151245117
    4. '[' → logprob: -2.2755308151245117
    5. ''a' → logprob: -2.5255308151245117
    6. 'e' → logprob: -3.6505308151245117
    7. ''' → logprob: -3.6505308151245117
    8. '[idx' → logprob: -3.7755308151245117
    9. ''est' → logprob: -5.150530815124512
    10. '[i' → logprob: -5.275530815124512

Token 141: ' un' (ID: 537)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.2704131603240967
    2. ' différent' → logprob: -2.0204131603240967
    3. 'different' → logprob: -2.3954131603240967
    4. 'diff' → logprob: -2.7704131603240967
    5. 'le' → logprob: -3.1454131603240967
    6. ' possible' → logprob: -3.2704131603240967
    7. 'True' → logprob: -3.2704131603240967
    8. 'une' → logprob: -3.2704131603240967
    9. 'strict' → logprob: -3.5204131603240967
    10. 'un' → logprob: -3.6454131603240967

Token 142: ' ren' (ID: 5427)
  Prédit: ' couple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couple' → logprob: -0.12711907923221588
    2. 'e' → logprob: -3.3771190643310547
    3. ' trip' → logprob: -4.127119064331055
    4. ' multiple' → logprob: -5.002119064331055
    5. 'cou' → logprob: -5.127119064331055
    6. ' unique' → logprob: -5.752119064331055
    7. ' élément' → logprob: -5.752119064331055
    8. 'trip' → logprob: -5.877119064331055
    9. 'a' → logprob: -5.877119064331055
    10. ' bon' → logprob: -6.002119064331055

Token 143: 'verse' (ID: 7093)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.5119792222976685
    2. 'ouveau' → logprob: -1.5119792222976685
    3. 'contre' → logprob: -2.011979103088379
    4. 'verse' → logprob: -2.386979103088379
    5. 'voi' → logprob: -2.761979103088379
    6. 'a' → logprob: -3.511979103088379
    7. 'e' → logprob: -3.636979103088379
    8. 'voy' → logprob: -4.011979103088379
    9. 'ew' → logprob: -4.511979103088379
    10. 'ormal' → logprob: -4.636979103088379

Token 144: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.014458229765295982
    2. 'd' → logprob: -4.639458179473877
    3. 'm' → logprob: -6.514458179473877
    4. 't' → logprob: -6.514458179473877
    5. 'r' → logprob: -6.764458179473877
    6. 'ur' → logprob: -8.889458656311035
    7. 'nt' → logprob: -9.014458656311035
    8. 'ement' → logprob: -10.014458656311035
    9. 'e' → logprob: -10.889458656311035
    10. '()' → logprob: -11.014458656311035

Token 145: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3729952275753021
    2. '           ' → logprob: -1.8729952573776245
    3. ' and' → logprob: -3.122995138168335
    4. ':' → logprob: -3.122995138168335
    5. '                   ' → logprob: -3.372995138168335
    6. ',' → logprob: -4.497995376586914
    7. ' ' → logprob: -5.497995376586914
    8. ':
' → logprob: -5.497995376586914
    9. ' :' → logprob: -5.997995376586914
    10. '   ' → logprob: -5.997995376586914

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1102302297949791
    2. '                   ' → logprob: -3.2352302074432373
    3. '           ' → logprob: -3.3602302074432373
    4. ' and' → logprob: -3.9852302074432373
    5. ':' → logprob: -5.485230445861816
    6. ' if' → logprob: -6.235230445861816
    7. ',' → logprob: -6.360230445861816
    8. '                       ' → logprob: -6.985230445861816
    9. '   ' → logprob: -7.610230445861816
    10. '<|end|>' → logprob: -7.735230445861816

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1623266339302063
    2. 'res' → logprob: -2.1623265743255615
    3. '                   ' → logprob: -3.5373265743255615
    4. ' if' → logprob: -5.412326812744141
    5. '               ' → logprob: -7.037326812744141
    6. ' res' → logprob: -8.41232681274414
    7. '                       ' → logprob: -9.66232681274414
    8. '   ' → logprob: -10.78732681274414
    9. 'return' → logprob: -11.66232681274414
    10. 'continue' → logprob: -11.78732681274414

Token 148: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07055804878473282
    2. 'a' → logprob: -3.1955580711364746
    3. ' (' → logprob: -3.8205580711364746
    4. '(a' → logprob: -5.570558071136475
    5. '(' → logprob: -7.820558071136475
    6. ' ' → logprob: -8.070557594299316
    7. ' idx' → logprob: -8.070557594299316
    8. '  ' → logprob: -9.320557594299316
    9. '	a' → logprob: -9.570557594299316
    10. 'idx' → logprob: -9.695557594299316

Token 149: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.512236498361744e-07
    2. 'idx' → logprob: -14.750000953674316
    3. '[' → logprob: -16.125
    4. '[a' → logprob: -17.0
    5. ' idx' → logprob: -17.75
    6. '[index' → logprob: -18.5
    7. 'a' → logprob: -18.625
    8. ' [' → logprob: -19.5
    9. '	idx' → logprob: -20.125
    10. '(idx' → logprob: -20.375

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08894339203834534
    2. '2' → logprob: -2.4639434814453125
    3. ']' → logprob: -13.901443481445312
    4. '[idx' → logprob: -14.026443481445312
    5. 'idx' → logprob: -14.776443481445312
    6. ' ' → logprob: -14.901443481445312
    7. '```' → logprob: -14.901443481445312
    8. '   ' → logprob: -15.526443481445312
    9. '_idx' → logprob: -15.963943481445312
    10. '[' → logprob: -16.463943481445312

Token 151: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.49293768405914307
    2. ']' → logprob: -0.9929376840591431
    3. ']>' → logprob: -4.2429375648498535
    4. ' >' → logprob: -5.6179375648498535
    5. '<' → logprob: -7.6179375648498535
    6. ' ' → logprob: -9.742938041687012
    7. ' ]' → logprob: -10.492938041687012
    8. ']<' → logprob: -10.742938041687012
    9. 'a' → logprob: -11.117938041687012
    10. '%' → logprob: -11.242938041687012

Token 152: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03416852653026581
    2. ' >' → logprob: -3.4091684818267822
    3. '<' → logprob: -7.659168720245361
    4. ' ' → logprob: -11.034168243408203
    5. '>a' → logprob: -11.159168243408203
    6. ' <' → logprob: -11.284168243408203
    7. '%' → logprob: -13.409168243408203
    8. 'a' → logprob: -13.659168243408203
    9. '```' → logprob: -14.284168243408203
    10. ']>' → logprob: -14.284168243408203

Token 153: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06995522230863571
    2. ' a' → logprob: -2.6949551105499268
    3. ' ' → logprob: -11.069954872131348
    4. '	a' → logprob: -13.194954872131348
    5. '>a' → logprob: -14.819954872131348
    6. ' ' → logprob: -15.069954872131348
    7. '   ' → logprob: -15.444954872131348
    8. '  ' → logprob: -15.694954872131348
    9. 'k' → logprob: -16.194955825805664
    10. '_a' → logprob: -16.444955825805664

Token 154: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00018494461255613714
    2. 'idx' → logprob: -8.625185012817383
    3. 'a' → logprob: -12.875185012817383
    4. ' idx' → logprob: -13.875185012817383
    5. '[' → logprob: -14.250185012817383
    6. '```' → logprob: -14.750185012817383
    7. '_idx' → logprob: -15.875185012817383
    8. '[
' → logprob: -16.000185012817383
    9. '	idx' → logprob: -16.250185012817383
    10. '2' → logprob: -16.250185012817383

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. '```' → logprob: -16.375
    4. ']' → logprob: -16.625
    5. ' ' → logprob: -17.3125
    6. '   ' → logprob: -17.8125
    7. '২' → logprob: -19.0
    8. '0' → logprob: -19.0625
    9. 's' → logprob: -19.4375
    10. '۲' → logprob: -19.4375

Token 156: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04880048334598541
    2. ']:' → logprob: -3.298800468444824
    3. ':' → logprob: -4.798800468444824
    4. '):
' → logprob: -6.173800468444824
    5. ']):' → logprob: -9.423800468444824
    6. ']:
' → logprob: -9.798800468444824
    7. ' ):' → logprob: -9.923800468444824
    8. '}:' → logprob: -10.173800468444824
    9. ':
' → logprob: -10.548800468444824
    10. ' and' → logprob: -11.173800468444824

Token 157: '                   ' (ID: 699)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5100389719009399
    2. ':' → logprob: -1.01003897190094
    3. '                   ' → logprob: -3.3850388526916504
    4. '                       ' → logprob: -7.13503885269165
    5. '               ' → logprob: -7.63503885269165
    6. '           ' → logprob: -9.510039329528809
    7. '                           ' → logprob: -10.385039329528809
    8. '):
' → logprob: -11.510039329528809
    9. ':
' → logprob: -11.760039329528809
    10. '   ' → logprob: -12.260039329528809

Token 158: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.008075127378106117
    2. ' res' → logprob: -4.88307523727417
    3. '                   ' → logprob: -8.133074760437012
    4. '   ' → logprob: -9.508074760437012
    5. '1' → logprob: -9.633074760437012
    6. '                       ' → logprob: -11.133074760437012
    7. ' ' → logprob: -11.633074760437012
    8. '                           ' → logprob: -12.883074760437012
    9. '
' → logprob: -13.008074760437012
    10. '               ' → logprob: -13.133074760437012

Token 159: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01825331151485443
    2. '+=' → logprob: -4.018253326416016
    3. ' =' → logprob: -9.268253326416016
    4. '=' → logprob: -11.768253326416016
    5. '    ' → logprob: -14.393253326416016
    6. '+' → logprob: -15.018253326416016
    7. ']+=' → logprob: -15.893253326416016
    8. ' ' → logprob: -16.018253326416016
    9. '   ' → logprob: -16.393253326416016
    10. ' +' → logprob: -17.393253326416016

Token 160: ' res' (ID: 694)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.03106069751083851
    2. ' (' → logprob: -3.5310606956481934
    3. '1' → logprob: -6.656060695648193
    4. '0' → logprob: -12.156061172485352
    5. '(' → logprob: -12.531061172485352
    6. 'res' → logprob: -12.531061172485352
    7. ' ' → logprob: -12.531061172485352
    8. '   ' → logprob: -13.031061172485352
    9. '(mod' → logprob: -13.656061172485352
    10. '2' → logprob: -13.656061172485352

Token 161: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05501813814043999
    2. ' +' → logprob: -2.930018186569214
    3. '1' → logprob: -9.805018424987793
    4. '(res' → logprob: -10.555018424987793
    5. '(' → logprob: -10.680018424987793
    6. ' (' → logprob: -11.305018424987793
    7. '+(' → logprob: -11.305018424987793
    8. ' ' → logprob: -13.555018424987793
    9. '*' → logprob: -13.555018424987793
    10. ' plus' → logprob: -13.930018424987793

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039659533649683
    2. ' ' → logprob: -7.875396728515625
    3. 'k' → logprob: -12.000396728515625
    4. '(' → logprob: -12.500396728515625
    5. 'n' → logprob: -13.250396728515625
    6. '2' → logprob: -13.250396728515625
    7. 'pow' → logprob: -14.250396728515625
    8. '0' → logprob: -14.750396728515625
    9. '
' → logprob: -15.125396728515625
    10. '   ' → logprob: -15.250396728515625

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5358694731257856e-05
    2. 'k' → logprob: -11.625035285949707
    3. ' ' → logprob: -11.625035285949707
    4. '2' → logprob: -12.000035285949707
    5. '0' → logprob: -12.750035285949707
    6. '(' → logprob: -12.750035285949707
    7. 'n' → logprob: -12.875035285949707
    8. 'pow' → logprob: -14.625035285949707
    9. '(k' → logprob: -14.750035285949707
    10. '(n' → logprob: -14.875035285949707

Token 164: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' Just' (ID: 6214)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'e' (ID: 68)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7077627182006836
    2. 'e' → logprob: -1.0827627182006836
    3. '%' → logprob: -3.2077627182006836
    4. ' mod' → logprob: -3.8327627182006836
    5. ' +=' → logprob: -4.207762718200684
    6. ' res' → logprob: -4.207762718200684
    7. 'es' → logprob: -4.332762718200684
    8. ' a' → logprob: -4.457762718200684
    9. ')' → logprob: -4.832762718200684
    10. ' %' → logprob: -4.957762718200684

Token 168: ' ajouter' (ID: 78457)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7510324120521545
    2. ' ' → logprob: -1.0010323524475098
    3. '1' → logprob: -2.0010323524475098
    4. '<|end|>' → logprob: -4.50103235244751
    5. ' (' → logprob: -4.87603235244751
    6. '(
' → logprob: -6.62603235244751
    7. ')' → logprob: -7.00103235244751
    8. ' res' → logprob: -7.00103235244751
    9. '(res' → logprob: -7.37603235244751
    10. ' )' → logprob: -8.001032829284668

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1685454547405243
    2. ' ' → logprob: -2.2935454845428467
    3. '(' → logprob: -3.4185454845428467
    4. 'res' → logprob: -5.043545246124268
    5. ')' → logprob: -5.543545246124268
    6. '<|end|>' → logprob: -5.793545246124268
    7. ' res' → logprob: -5.918545246124268
    8. '(res' → logprob: -6.043545246124268
    9. ' )' → logprob: -7.293545246124268
    10. ' (' → logprob: -7.918545246124268

Token 171: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7983623147010803
    2. '
' → logprob: -1.1733622550964355
    3. '\n' → logprob: -2.0483622550964355
    4. '               ' → logprob: -2.6733622550964355
    5. '<|end|>' → logprob: -3.9233622550964355
    6. '       ' → logprob: -5.1733622550964355
    7. '<|end|>' → logprob: -5.7983622550964355
    8. '                   ' → logprob: -5.9233622550964355
    9. '            
' → logprob: -6.5483622550964355
    10. '   ' → logprob: -6.7983622550964355

Token 172: ' pas' (ID: 2173)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2392895221710205
    2. ' else' → logprob: -1.7392895221710205
    3. ' ' → logprob: -1.8642895221710205
    4. 'continue' → logprob: -2.4892895221710205
    5. '<|end|>' → logprob: -2.8642895221710205
    6. '               ' → logprob: -2.9892895221710205
    7. '           ' → logprob: -3.2392895221710205
    8. '\n' → logprob: -3.4892895221710205
    9. '                   ' → logprob: -3.9892895221710205
    10. 'else' → logprob: -4.114289283752441

Token 173: ' besoin' (ID: 27703)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9743824005126953
    2. ' modulo' → logprob: -1.2243824005126953
    3. ' res' → logprob: -2.0993824005126953
    4. ' mod' → logprob: -2.8493824005126953
    5. 'res' → logprob: -3.2243824005126953
    6. 'mod' → logprob: -3.7243824005126953
    7. ' ' → logprob: -4.099382400512695
    8. '%' → logprob: -4.474382400512695
    9. ' +=' → logprob: -4.849382400512695
    10. ' a' → logprob: -4.974382400512695

Token 174: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9637380242347717
    2. ' for' → logprob: -1.338737964630127
    3. '           ' → logprob: -2.463737964630127
    4. ' of' → logprob: -2.838737964630127
    5. ' ' → logprob: -2.963737964630127
    6. '                   ' → logprob: -4.088737964630127
    7. ' to' → logprob: -4.213737964630127
    8. '%' → logprob: -4.213737964630127
    9. '=' → logprob: -4.338737964630127
    10. '                       ' → logprob: -4.338737964630127

Token 175: ' réfléchir' (ID: 155135)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8281795978546143
    2. 'res' → logprob: -1.7031795978546143
    3. '%' → logprob: -1.9531795978546143
    4. ' res' → logprob: -2.7031795978546143
    5. ' break' → logprob: -2.7031795978546143
    6. 'mod' → logprob: -3.4531795978546143
    7. ' %' → logprob: -3.7031795978546143
    8. 'continue' → logprob: -3.9531795978546143
    9. ' %=' → logprob: -4.453179359436035
    10. ')' → logprob: -4.953179359436035

Token 176: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7536390423774719
    2. '<|end|>' → logprob: -1.7536389827728271
    3. '
' → logprob: -2.003638982772827
    4. '\n' → logprob: -2.128638982772827
    5. '               ' → logprob: -3.128638982772827
    6. '<|end|>' → logprob: -3.503638982772827
    7. '       ' → logprob: -4.378639221191406
    8. '   ' → logprob: -5.753639221191406
    9. ')' → logprob: -6.003639221191406
    10. '            
' → logprob: -6.503639221191406

Token 178: '               ' (ID: 506)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5581568479537964
    2. '
' → logprob: -1.0581568479537964
    3. '<|end|>' → logprob: -3.433156967163086
    4. '           ' → logprob: -3.558156967163086
    5. '               ' → logprob: -5.308156967163086
    6. '<|end|>' → logprob: -5.808156967163086
    7. '       ' → logprob: -6.058156967163086
    8. ')' → logprob: -6.183156967163086
    9. '            
' → logprob: -7.058156967163086
    10. '   ' → logprob: -7.183156967163086

Token 179: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04558928310871124
    2. ' else' → logprob: -3.9205892086029053
    3. '               ' → logprob: -4.170589447021484
    4. 'else' → logprob: -5.545589447021484
    5. '       ' → logprob: -6.545589447021484
    6. ' continue' → logprob: -7.170589447021484
    7. 'elif' → logprob: -7.170589447021484
    8. ' elif' → logprob: -7.920589447021484
    9. '\n' → logprob: -7.920589447021484
    10. '            ' → logprob: -8.045589447021484

Token 180: ' sinon' (ID: 52915)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9172604084014893
    2. ' continue' → logprob: -1.6672604084014893
    3. 'else' → logprob: -1.9172604084014893
    4. 'continue' → logprob: -1.9172604084014893
    5. ' else' → logprob: -2.5422604084014893
    6. '               ' → logprob: -3.7922604084014893
    7. '       ' → logprob: -4.54226016998291
    8. '   ' → logprob: -6.04226016998291
    9. '	continue' → logprob: -6.91726016998291
    10. ' ' → logprob: -7.41726016998291

Token 181: ' on' (ID: 402)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33512082695961
    2. 'continue' → logprob: -1.4601207971572876
    3. ' pass' → logprob: -3.335120916366577
    4. 'pass' → logprob: -4.585120677947998
    5. '           ' → logprob: -6.335120677947998
    6. '               ' → logprob: -6.585120677947998
    7. ' else' → logprob: -6.710120677947998
    8. '   ' → logprob: -6.835120677947998
    9. 'else' → logprob: -7.335120677947998
    10. '       ' → logprob: -8.460121154785156

Token 182: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.029318680986762047
    2. ' pass' → logprob: -4.279318809509277
    3. 'continue' → logprob: -4.279318809509277
    4. 'pass' → logprob: -8.029318809509277
    5. ' ' → logprob: -8.779318809509277
    6. ' +=' → logprob: -9.029318809509277
    7. '   ' → logprob: -9.279318809509277
    8. 'n' → logprob: -9.529318809509277
    9. '    ' → logprob: -9.654318809509277
    10. ' continues' → logprob: -10.029318809509277

Token 183: ' fait' (ID: 7473)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.23809002339839935
    2. 'continue' → logprob: -1.7380900382995605
    3. 'pass' → logprob: -4.4880900382995605
    4. ' pass' → logprob: -4.6130900382995605
    5. 'pas' → logprob: -4.9880900382995605
    6. ' pas' → logprob: -5.8630900382995605
    7. 'contin' → logprob: -6.1130900382995605
    8. '           ' → logprob: -6.7380900382995605
    9. '               ' → logprob: -7.4880900382995605
    10. ' +=' → logprob: -7.7380900382995605

Token 184: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20144960284233093
    2. ' rien' → logprob: -1.7014496326446533
    3. 'ri' → logprob: -11.076449394226074
    4. 'nothing' → logprob: -11.951449394226074
    5. 'pas' → logprob: -12.451449394226074
    6. ' Rien' → logprob: -12.701449394226074
    7. 'continue' → logprob: -13.451449394226074
    8. '```' → logprob: -13.576449394226074
    9. ' ' → logprob: -13.701449394226074
    10. 'strict' → logprob: -13.826449394226074

Token 185: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009125604294240475
    2. '<|end|>' → logprob: -5.884125709533691
    3. '\n' → logprob: -6.509125709533691
    4. '               ' → logprob: -6.634125709533691
    5. ' else' → logprob: -6.759125709533691
    6. '       ' → logprob: -7.509125709533691
    7. '<|end|>' → logprob: -7.759125709533691
    8. '            
' → logprob: -7.884125709533691
    9. 'else' → logprob: -8.634125709533691
    10. ' elif' → logprob: -9.259125709533691

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08137745410203934
    2. '<|end|>' → logprob: -3.2063775062561035
    3. '\n' → logprob: -4.3313775062561035
    4. '               ' → logprob: -4.3313775062561035
    5. '
' → logprob: -5.2063775062561035
    6. '<|end|>' → logprob: -6.3313775062561035
    7. '            
' → logprob: -7.0813775062561035
    8. ' else' → logprob: -7.3313775062561035
    9. '       ' → logprob: -7.9563775062561035
    10. ' continue' → logprob: -8.206377029418945

Token 187: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.35276728868484497
    2. 'else' (adapté à ' else') → logprob: -1.8527672290802002
    3. '           ' → logprob: -1.9777672290802002
    4. ' elif' → logprob: -7.102767467498779
    5. '               ' → logprob: -7.602767467498779
    6. 'elif' → logprob: -8.102766990661621
    7. '       ' → logprob: -8.352766990661621
    8. '	else' → logprob: -9.852766990661621
    9. '          ' → logprob: -9.977766990661621
    10. '            ' → logprob: -10.227766990661621

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2956780791282654
    2. ':
' → logprob: -1.7956781387329102
    3. '               ' → logprob: -2.42067813873291
    4. '           ' → logprob: -7.17067813873291
    5. ' :' → logprob: -9.04567813873291
    6. '                   ' → logprob: -9.42067813873291
    7. ' :
' → logprob: -10.04567813873291
    8. ' if' → logprob: -11.54567813873291
    9. ':

' → logprob: -11.54567813873291
    10. '       ' → logprob: -11.54567813873291

Token 189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0751328319311142
    2. ' if' → logprob: -3.5751328468322754
    3. ' res' → logprob: -4.450132846832275
    4. 'if' → logprob: -4.575132846832275
    5. ' for' → logprob: -5.075132846832275
    6. 'res' → logprob: -5.450132846832275
    7. '                   ' → logprob: -5.700132846832275
    8. ' pass' → logprob: -6.075132846832275
    9. 'for' → logprob: -6.450132846832275
    10. 'pass' → logprob: -7.075132846832275

Token 190: ' #' (ID: 1069)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.7074283361434937
    2. ' for' → logprob: -1.8324283361434937
    3. ' if' → logprob: -1.8324283361434937
    4. '               ' → logprob: -2.332428455352783
    5. 'res' → logprob: -2.707428455352783
    6. 'if' → logprob: -2.707428455352783
    7. ' pass' → logprob: -2.707428455352783
    8. 'for' → logprob: -2.832428455352783
    9. ' #' → logprob: -3.707428455352783
    10. '#' (adapté à ' #') → logprob: -4.082428455352783

Token 191: ' étr' (ID: 52537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.301595687866211
    2. ' for' → logprob: -1.426595687866211
    3. ' if' → logprob: -3.176595687866211
    4. '#' → logprob: -3.176595687866211
    5. ' #' → logprob: -3.176595687866211
    6. ' multiplier' → logprob: -3.301595687866211
    7. 'if' → logprob: -3.426595687866211
    8. '               ' → logprob: -3.426595687866211
    9. ' res' → logprob: -3.926595687866211
    10. ' pass' → logprob: -4.051595687866211

Token 192: 'angement' (ID: 58322)
  Prédit: 'angement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angement' → logprob: -0.044575586915016174
    2. 'ange' → logprob: -3.4195756912231445
    3. 'anges' → logprob: -5.5445756912231445
    4. 'anger' → logprob: -5.7945756912231445
    5. 'anged' → logprob: -6.5445756912231445
    6. 'ang' → logprob: -7.1695756912231445
    7. 'an' → logprob: -7.4195756912231445
    8. 'angle' → logprob: -7.5445756912231445
    9. 'em' → logprob: -9.044575691223145
    10. 'angements' → logprob: -9.919575691223145

Token 193: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7019614577293396
    2. ' res' → logprob: -1.4519615173339844
    3. ' for' → logprob: -1.8269615173339844
    4. ' if' → logprob: -3.9519615173339844
    5. '                ' → logprob: -4.076961517333984
    6. 'res' → logprob: -4.201961517333984
    7. '               ' → logprob: -4.201961517333984
    8. 'for' → logprob: -4.201961517333984
    9. '                    ' → logprob: -5.076961517333984
    10. '                       ' → logprob: -5.576961517333984

Token 194: ' on' (ID: 402)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6250152587890625
    2. 'res' → logprob: -1.3750152587890625
    3. ' for' → logprob: -3.1250152587890625
    4. 'for' → logprob: -3.2500152587890625
    5. ' if' → logprob: -3.7500152587890625
    6. '#' → logprob: -4.0000152587890625
    7. 'if' → logprob: -4.0000152587890625
    8. ' #' → logprob: -4.7500152587890625
    9. ' pass' → logprob: -5.0000152587890625
    10. ' diff' → logprob: -5.2500152587890625

Token 195: ' fait' (ID: 7473)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.2580326795578003
    2. 'for' → logprob: -1.3830326795578003
    3. 'res' → logprob: -1.8830326795578003
    4. ' continue' → logprob: -2.00803279876709
    5. 'continue' → logprob: -2.63303279876709
    6. ' for' → logprob: -3.25803279876709
    7. '               ' → logprob: -3.88303279876709
    8. 'if' → logprob: -4.38303279876709
    9. '                   ' → logprob: -4.50803279876709
    10. ' doit' → logprob: -5.50803279876709

Token 196: ' diff' (ID: 8868)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3936997652053833
    2. 'res' → logprob: -1.1436997652053833
    3. 'for' → logprob: -6.143699645996094
    4. ' for' → logprob: -6.518699645996094
    5. 'continue' → logprob: -7.268699645996094
    6. '   ' → logprob: -7.768699645996094
    7. ' something' → logprob: -8.143699645996094
    8. ' nothing' → logprob: -8.268699645996094
    9. ' continue' → logprob: -8.393699645996094
    10. ' ' → logprob: -8.518699645996094

Token 197: 'é' (ID: 377)
  Prédit: 'érent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érent' → logprob: -0.5177170038223267
    2. 'érence' → logprob: -1.6427170038223267
    3. 'èrent' → logprob: -3.142716884613037
    4. 'érer' → logprob: -3.267716884613037
    5. 'é' → logprob: -3.517716884613037
    6. 'érents' → logprob: -3.767716884613037
    7. 'er' → logprob: -3.892716884613037
    8. '   ' → logprob: -4.517716884613037
    9. 'érences' → logprob: -4.517716884613037
    10. '               ' → logprob: -4.767716884613037

Token 198: 'rem' (ID: 1935)
  Prédit: 'rent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rent' → logprob: -0.6355441808700562
    2. 'rence' → logprob: -0.8855441808700562
    3. 'r' → logprob: -2.8855443000793457
    4. 'rer' → logprob: -7.885544300079346
    5. 'ren' → logprob: -8.010543823242188
    6. ' rent' → logprob: -8.760543823242188
    7. 'rance' → logprob: -8.823043823242188
    8. '       ' → logprob: -9.510543823242188
    9. '	r' → logprob: -9.948043823242188
    10. 'rend' → logprob: -9.948043823242188

Token 199: 'ment' (ID: 508)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.21902288496494293
    2. 'ence' → logprob: -3.0940229892730713
    3. 'ce' → logprob: -3.0940229892730713
    4. 'er' → logprob: -3.3440229892730713
    5. 'ente' → logprob: -3.8440229892730713
    6. 'ace' → logprob: -4.594022750854492
    7. 'e' → logprob: -4.844022750854492
    8. 't' → logprob: -5.094022750854492
    9. 'cer' → logprob: -5.219022750854492
    10. 'rence' → logprob: -5.469022750854492

Token 200: ' selon' (ID: 27571)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06048785150051117
    2. '               ' → logprob: -3.310487747192383
    3. ' for' → logprob: -5.310487747192383
    4. ' if' → logprob: -5.685487747192383
    5. '                ' → logprob: -5.810487747192383
    6. '                       ' → logprob: -6.060487747192383
    7. '                    ' → logprob: -6.060487747192383
    8. '                    
' → logprob: -6.685487747192383
    9. '           ' → logprob: -6.935487747192383
    10. ':' → logprob: -7.060487747192383

Token 201: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4988772869110107
    2. ' idx' → logprob: -1.4988772869110107
    3. 'k' → logprob: -1.6238772869110107
    4. ' k' → logprob: -1.9988772869110107
    5. ' a' → logprob: -2.4988772869110107
    6. 'idx' → logprob: -2.7488772869110107
    7. '   ' → logprob: -3.8738772869110107
    8. ' whether' → logprob: -4.12387752532959
    9. ' the' → logprob: -4.87387752532959
    10. ' ' → logprob: -4.99887752532959

Token 202: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11945919692516327
    2. 'e' → logprob: -3.6194591522216797
    3. 'if' → logprob: -3.8694591522216797
    4. 'idx' → logprob: -3.8694591522216797
    5. 'k' → logprob: -4.49445915222168
    6. ' idx' → logprob: -5.11945915222168
    7. ' a' → logprob: -5.24445915222168
    8. 'i' → logprob: -5.99445915222168
    9. ''' → logprob: -5.99445915222168
    10. ' k' → logprob: -6.49445915222168

Token 203: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5493232011795044
    2. '               ' → logprob: -1.0493232011795044
    3. ' if' → logprob: -3.174323081970215
    4. '                       ' → logprob: -4.424323081970215
    5. '                ' → logprob: -5.299323081970215
    6. ':' → logprob: -5.424323081970215
    7. 'if' → logprob: -6.174323081970215
    8. '                    ' → logprob: -6.674323081970215
    9. ' ' → logprob: -7.299323081970215
    10. '{' → logprob: -7.424323081970215

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04790239781141281
    2. '                   ' → logprob: -3.4229023456573486
    3. '                ' → logprob: -4.422902584075928
    4. ' if' → logprob: -7.047902584075928
    5. '           ' → logprob: -8.42290210723877
    6. '                       ' → logprob: -8.67290210723877
    7. '                    ' → logprob: -8.79790210723877
    8. '                
' → logprob: -8.92290210723877
    9. '                    
' → logprob: -9.17290210723877
    10. ' ' → logprob: -9.54790210723877

Token 205: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1529906839132309
    2. ' if' → logprob: -2.2779905796051025
    3. '               ' → logprob: -4.277990818023682
    4. '                   ' → logprob: -4.527990818023682
    5. 'diff' → logprob: -5.527990818023682
    6. 'step' → logprob: -5.652990818023682
    7. 'for' → logprob: -6.777990818023682
    8. ' step' → logprob: -7.027990818023682
    9. 'factor' → logprob: -7.152990818023682
    10. 'mult' → logprob: -7.277990818023682

Token 206: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07174453884363174
    2. 'a' → logprob: -2.696744441986084
    3. ' k' → logprob: -7.696744441986084
    4. ' idx' → logprob: -7.821744441986084
    5. '(a' → logprob: -8.321744918823242
    6. 'k' → logprob: -8.571744918823242
    7. ' ' → logprob: -8.821744918823242
    8. ' (' → logprob: -9.071744918823242
    9. 'idx' → logprob: -9.446744918823242
    10. '	a' → logprob: -9.696744918823242

Token 207: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.939851037808694e-05
    2. 'idx' → logprob: -11.125029563903809
    3. '[' → logprob: -11.375029563903809
    4. '[a' → logprob: -13.625029563903809
    5. ' idx' → logprob: -14.500029563903809
    6. ' [' → logprob: -14.500029563903809
    7. 'a' → logprob: -15.000029563903809
    8. '	idx' → logprob: -16.250028610229492
    9. '[
' → logprob: -16.250028610229492
    10. '```' → logprob: -16.375028610229492

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004366294015198946
    2. '2' → logprob: -7.750436782836914
    3. '[' → logprob: -13.375436782836914
    4. '[idx' → logprob: -13.375436782836914
    5. 'idx' → logprob: -14.125436782836914
    6. '```' → logprob: -14.125436782836914
    7. ']' → logprob: -15.062936782836914
    8. ' ' → logprob: -15.250436782836914
    9. 'a' → logprob: -15.437936782836914
    10. '   ' → logprob: -16.562936782836914

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012668977724388242
    2. ']>' → logprob: -6.876266956329346
    3. '>' → logprob: -9.251266479492188
    4. ' ]' → logprob: -10.001266479492188
    5. '[' → logprob: -10.251266479492188
    6. '][' → logprob: -10.626266479492188
    7. ']<' → logprob: -11.001266479492188
    8. ' >' → logprob: -12.501266479492188
    9. '```' → logprob: -13.126266479492188
    10. '[i' → logprob: -13.501266479492188

Token 210: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.41817688941955566
    2. ' >' → logprob: -1.1681768894195557
    3. ' <' → logprob: -4.168176651000977
    4. '<' → logprob: -4.293176651000977
    5. '[' → logprob: -7.043176651000977
    6. ']' → logprob: -7.668176651000977
    7. ' ' → logprob: -8.418176651000977
    8. ']>' → logprob: -10.918176651000977
    9. '   ' → logprob: -11.043176651000977
    10. '```' → logprob: -11.668176651000977

Token 211: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10023891925811768
    2. ' a' → logprob: -2.350238800048828
    3. ' ' → logprob: -11.100238800048828
    4. 'k' → logprob: -11.475238800048828
    5. '	a' → logprob: -13.600238800048828
    6. '0' → logprob: -14.225238800048828
    7. '[a' → logprob: -14.475238800048828
    8. ' k' → logprob: -14.475238800048828
    9. 'n' → logprob: -14.600238800048828
    10. '>a' → logprob: -14.600238800048828

Token 212: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.16398148238658905
    2. 'a' → logprob: -1.9139814376831055
    3. '[a' → logprob: -5.6639814376831055
    4. '[' → logprob: -8.788981437683105
    5. 'idx' → logprob: -9.538981437683105
    6. ' a' → logprob: -9.913981437683105
    7. '   ' → logprob: -13.663981437683105
    8. ' [' → logprob: -13.788981437683105
    9. ' idx' → logprob: -14.163981437683105
    10. '```' → logprob: -14.288981437683105

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1279553291387856e-05
    2. 'idx' → logprob: -11.500011444091797
    3. '[idx' → logprob: -13.875011444091797
    4. '   ' → logprob: -17.250011444091797
    5. '_idx' → logprob: -17.250011444091797
    6. ' ' → logprob: -17.500011444091797
    7. '```' → logprob: -17.625011444091797
    8. '[' → logprob: -18.375011444091797
    9. ']' → logprob: -18.875011444091797
    10. ' idx' → logprob: -19.250011444091797

Token 214: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.669655978679657
    2. ':' → logprob: -1.2946560382843018
    3. ']:
' → logprob: -1.6696560382843018
    4. ':
' → logprob: -3.9196560382843018
    5. '               ' → logprob: -6.294655799865723
    6. '                   ' → logprob: -6.419655799865723
    7. ']' → logprob: -7.294655799865723
    8. ']:
' → logprob: -7.669655799865723
    9. '):' → logprob: -8.044655799865723
    10. '):
' → logprob: -8.169655799865723

Token 215: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5282138586044312
    2. ':
' → logprob: -1.2782138586044312
    3. ':' → logprob: -2.2782139778137207
    4. 'res' → logprob: -3.7782139778137207
    5. '                       ' → logprob: -5.278213977813721
    6. '               ' → logprob: -7.403213977813721
    7. ' res' → logprob: -8.653213500976562
    8. ' and' → logprob: -8.903213500976562
    9. '):
' → logprob: -9.278213500976562
    10. '                           ' → logprob: -9.653213500976562

Token 216: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01905374601483345
    2. ' res' → logprob: -4.019053936004639
    3. '                   ' → logprob: -7.144053936004639
    4. '                       ' → logprob: -9.51905345916748
    5. 'for' → logprob: -11.39405345916748
    6. '(res' → logprob: -12.01905345916748
    7. '                           ' → logprob: -12.39405345916748
    8. '   ' → logprob: -12.76905345916748
    9. '
' → logprob: -13.01905345916748
    10. '               ' → logprob: -13.26905345916748

Token 217: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4010165333747864
    2. ' =' → logprob: -1.2760164737701416
    3. '+=' → logprob: -3.4010164737701416
    4. '=' → logprob: -4.026016712188721
    5. '   ' → logprob: -11.401016235351562
    6. ' ' → logprob: -12.401016235351562
    7. '+=(' → logprob: -12.401016235351562
    8. '    ' → logprob: -13.151016235351562
    9. '+' → logprob: -13.776016235351562
    10. ' -=' → logprob: -14.026016235351562

Token 218: ' res' (ID: 694)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.532376229763031
    2. '(res' → logprob: -0.907376229763031
    3. 'res' → logprob: -4.907376289367676
    4. ' res' → logprob: -6.907376289367676
    5. '                   ' → logprob: -7.407376289367676
    6. '                       ' → logprob: -9.282376289367676
    7. '(' → logprob: -9.907376289367676
    8. '   ' → logprob: -11.657376289367676
    9. '(mod' → logprob: -11.657376289367676
    10. '                           ' → logprob: -11.907376289367676

Token 219: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34869614243507385
    2. '+' → logprob: -1.2236961126327515
    3. '                   ' → logprob: -9.348695755004883
    4. '                       ' → logprob: -10.223695755004883
    5. '               ' → logprob: -10.348695755004883
    6. ' ' → logprob: -10.723695755004883
    7. ' *' → logprob: -11.723695755004883
    8. '*' → logprob: -11.848695755004883
    9. 'mod' → logprob: -11.973695755004883
    10. 'res' → logprob: -12.348695755004883

Token 220: ' k' (ID: 372)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6733598113059998
    2. 'k' → logprob: -1.0483598709106445
    3. '(k' → logprob: -2.6733598709106445
    4. '1' → logprob: -3.5483598709106445
    5. '(' → logprob: -3.6733598709106445
    6. '2' → logprob: -5.5483598709106445
    7. '(pow' → logprob: -5.6733598709106445
    8. '(n' → logprob: -6.1733598709106445
    9. 'a' → logprob: -6.2983598709106445
    10. 'res' → logprob: -6.9233598709106445

Token 221: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7289100289344788
    2. '**' → logprob: -1.603909969329834
    3. ' else' → logprob: -2.353909969329834
    4. 'else' → logprob: -2.853909969329834
    5. ' -' → logprob: -2.978909969329834
    6. '*' → logprob: -3.603909969329834
    7. '           ' → logprob: -4.103909969329834
    8. '   ' → logprob: -4.228909969329834
    9. ')' → logprob: -4.603909969329834
    10. '               ' → logprob: -4.603909969329834

Token 222: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.736722469329834
    2. '1' → logprob: -1.861722469329834
    3. ' (' → logprob: -2.736722469329834
    4. '(' → logprob: -2.861722469329834
    5. 'k' → logprob: -2.986722469329834
    6. '(n' → logprob: -2.986722469329834
    7. '(a' → logprob: -3.486722469329834
    8. '((' → logprob: -3.486722469329834
    9. 'res' → logprob: -4.111722469329834
    10. '-' → logprob: -4.111722469329834

Token 223: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5462013483047485
    2. 'k' → logprob: -1.0462013483047485
    3. '(idx' → logprob: -3.796201229095459
    4. 'idx' → logprob: -4.046201229095459
    5. '(a' → logprob: -4.796201229095459
    6. ' (' → logprob: -5.046201229095459
    7. 'res' → logprob: -5.296201229095459
    8. 'a' → logprob: -6.171201229095459
    9. '(' → logprob: -6.421201229095459
    10. '((' → logprob: -6.671201229095459

Token 224: '*(' (ID: 14793)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4091029167175293
    2. ' -' → logprob: -1.5341029167175293
    3. '*' → logprob: -2.6591029167175293
    4. '*(' → logprob: -3.4091029167175293
    5. ' *' → logprob: -4.159102916717529
    6. ' ' → logprob: -6.909102916717529
    7. '**' → logprob: -8.909103393554688
    8. '
' → logprob: -9.409103393554688
    9. '  ' → logprob: -9.909103393554688
    10. '*k' → logprob: -10.784103393554688

Token 225: 'k' (ID: 74)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001079610432498157
    2. 'k' → logprob: -7.126079559326172
    3. ' -' → logprob: -8.501079559326172
    4. '1' → logprob: -10.126079559326172
    5. '-k' → logprob: -10.376079559326172
    6. '```' → logprob: -15.751079559326172
    7. '*k' → logprob: -16.001079559326172
    8. ' k' → logprob: -16.501079559326172
    9. '−' → logprob: -16.626079559326172
    10. '(k' → logprob: -16.751079559326172

Token 226: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002481246367096901
    2. ' -' → logprob: -6.002481460571289
    3. '+' → logprob: -12.127481460571289
    4. '1' → logprob: -16.62748146057129
    5. '```' → logprob: -16.87748146057129
    6. ' ' → logprob: -17.75248146057129
    7. '−' → logprob: -17.75248146057129
    8. ' +' → logprob: -18.12748146057129
    9. ')' → logprob: -19.00248146057129
    10. '–' → logprob: -19.25248146057129

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.746380237629637e-05
    2. ' ' → logprob: -10.000097274780273
    3. '-' → logprob: -11.250097274780273
    4. ')' → logprob: -11.875097274780273
    5. '   ' → logprob: -11.875097274780273
    6. '```' → logprob: -12.250097274780273
    7. '...' → logprob: -12.375097274780273
    8. '2' → logprob: -13.375097274780273
    9. '                   ' → logprob: -13.437597274780273
    10. ' -' → logprob: -13.562597274780273

Token 228: '))' (ID: 915)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.06076965853571892
    2. ')' → logprob: -2.935769557952881
    3. '//' → logprob: -5.310769557952881
    4. ' )' → logprob: -7.185769557952881
    5. ' //' → logprob: -8.685770034790039
    6. ')>>' → logprob: -13.060770034790039
    7. '))' → logprob: -13.685770034790039
    8. '   ' → logprob: -14.560770034790039
    9. '")' → logprob: -14.685770034790039
    10. ')#' → logprob: -15.435770034790039

Token 229: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0036174089182168245
    2. ' //' → logprob: -5.628617286682129
    3. '```' → logprob: -12.253617286682129
    4. '   ' → logprob: -12.503617286682129
    5. ')//' → logprob: -12.753617286682129
    6. '"' → logprob: -14.128617286682129
    7. '    ' → logprob: -14.128617286682129
    8. '/' → logprob: -14.503617286682129
    9. '#' → logprob: -14.753617286682129
    10. '()' → logprob: -14.878617286682129

Token 230: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -12.625005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '4' → logprob: -14.750005722045898
    5. '```' → logprob: -15.500005722045898
    6. '   ' → logprob: -17.0000057220459
    7. '(' → logprob: -17.0000057220459
    8. '3' → logprob: -17.0625057220459
    9. 'k' → logprob: -18.5000057220459
    10. '  ' → logprob: -18.5000057220459

Token 231: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1610662043094635
    2. '           ' → logprob: -2.1610662937164307
    3. ' else' → logprob: -4.411066055297852
    4. 'else' → logprob: -4.661066055297852
    5. ')' → logprob: -5.911066055297852
    6. '
' → logprob: -5.911066055297852
    7. '                   ' → logprob: -6.786066055297852
    8. '       ' → logprob: -7.036066055297852
    9. '                ' → logprob: -7.536066055297852
    10. ' 
' → logprob: -7.536066055297852

Token 232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06649674475193024
    2. ' else' → logprob: -3.0664968490600586
    3. 'else' → logprob: -4.816496849060059
    4. '<|end|>' → logprob: -5.816496849060059
    5. '           ' → logprob: -6.191496849060059
    6. '                   ' → logprob: -6.566496849060059
    7. ' elif' → logprob: -7.066496849060059
    8. ')' → logprob: -7.191496849060059
    9. 'elif' → logprob: -7.441496849060059
    10. '                ' → logprob: -8.066496849060059

Token 233: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5818156003952026
    2. ' else' → logprob: -1.2068156003952026
    3. '               ' → logprob: -1.9568156003952026
    4. '           ' → logprob: -7.831815719604492
    5. 'elif' → logprob: -8.456815719604492
    6. ' elif' → logprob: -10.581815719604492
    7. '                   ' → logprob: -11.706815719604492
    8. '                ' → logprob: -11.831815719604492
    9. '            ' → logprob: -12.831815719604492
    10. '	else' → logprob: -13.081815719604492

Token 234: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12841588258743286
    2. '                   ' → logprob: -2.753415822982788
    3. ':' → logprob: -2.878415822982788
    4. ' :
' → logprob: -8.378416061401367
    5. '               ' → logprob: -8.503416061401367
    6. '   ' → logprob: -10.503416061401367
    7. ':
' → logprob: -10.628416061401367
    8. '           ' → logprob: -10.628416061401367
    9. '                       ' → logprob: -10.878416061401367
    10. '                    ' → logprob: -11.503416061401367

Token 235: '                   ' (ID: 699)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07258865237236023
    2. ' res' → logprob: -2.8225886821746826
    3. '                   ' → logprob: -4.6975884437561035
    4. '0' → logprob: -7.6975884437561035
    5. '   ' → logprob: -8.322588920593262
    6. '1' → logprob: -8.822588920593262
    7. '                       ' → logprob: -9.447588920593262
    8. '
' → logprob: -9.447588920593262
    9. ' ' → logprob: -9.572588920593262
    10. 'k' → logprob: -9.822588920593262

Token 236: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7082834243774414
    2. 'k' → logprob: -1.3332834243774414
    3. '(k' → logprob: -1.4582834243774414
    4. ' res' → logprob: -5.833283424377441
    5. ' k' → logprob: -6.458283424377441
    6. '(res' → logprob: -6.458283424377441
    7. ' (' → logprob: -6.583283424377441
    8. '((' → logprob: -6.583283424377441
    9. '0' → logprob: -7.083283424377441
    10. '1' → logprob: -7.833283424377441

Token 237: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.018740598112344742
    2. ' res' → logprob: -4.018740653991699
    3. '                   ' → logprob: -7.643740653991699
    4. '               ' → logprob: -10.6437406539917
    5. '   ' → logprob: -11.1437406539917
    6. '                       ' → logprob: -11.5187406539917
    7. 'for' → logprob: -11.5187406539917
    8. 'k' → logprob: -11.6437406539917
    9. '
' → logprob: -11.7687406539917
    10. 'if' → logprob: -12.0187406539917

Token 238: ' enl' (ID: 116494)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.34927400946617126
    2. ' res' → logprob: -1.2242740392684937
    3. 'rés' → logprob: -8.474273681640625
    4. '           ' → logprob: -8.849273681640625
    5. '                   ' → logprob: -8.849273681640625
    6. '               ' → logprob: -9.224273681640625
    7. '   ' → logprob: -10.224273681640625
    8. '                       ' → logprob: -10.599273681640625
    9. '       ' → logprob: -10.974273681640625
    10. '    ' → logprob: -11.224273681640625

Token 239: 'ève' (ID: 41151)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6460003852844238
    2. 'e' → logprob: -1.5210003852844238
    3. 'ève' → logprob: -2.646000385284424
    4. 'ons' → logprob: -3.271000385284424
    5. 'ace' → logprob: -3.896000385284424
    6. 'a' → logprob: -4.021000385284424
    7. 'def' → logprob: -4.396000385284424
    8. 't' → logprob: -4.896000385284424
    9. 'ier' → logprob: -4.896000385284424
    10. '   ' → logprob: -5.271000385284424

Token 240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12143447995185852
    2. ' k' → logprob: -3.246434450149536
    3. ' ' → logprob: -3.621434450149536
    4. 'k' → logprob: -3.746434450149536
    5. ' (' → logprob: -4.621434688568115
    6. '(k' → logprob: -4.746434688568115
    7. 'res' → logprob: -5.996434688568115
    8. '(' → logprob: -6.121434688568115
    9. ' res' → logprob: -6.996434688568115
    10. '                   ' → logprob: -8.121434211730957

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21203581988811493
    2. 'k' → logprob: -2.087035894393921
    3. ' k' → logprob: -3.462035894393921
    4. '(k' → logprob: -3.712035894393921
    5. ' ' → logprob: -5.212035655975342
    6. ' (' → logprob: -5.462035655975342
    7. '(' → logprob: -7.587035655975342
    8. 'res' → logprob: -8.3370361328125
    9. '((' → logprob: -8.7120361328125
    10. '   ' → logprob: -8.8370361328125

Token 242: ' à' (ID: 1221)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6167244911193848
    2. '                   ' → logprob: -1.2417244911193848
    3. ' res' → logprob: -1.8667244911193848
    4. ' +' → logprob: -5.741724491119385
    5. '
' → logprob: -6.241724491119385
    6. '               ' → logprob: -6.241724491119385
    7. '   ' → logprob: -6.366724491119385
    8. '+' → logprob: -6.366724491119385
    9. '                       ' → logprob: -6.616724491119385
    10. ' ' → logprob: -7.241724491119385

Token 243: ' k' (ID: 372)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3378088176250458
    2. 'k' → logprob: -1.5878088474273682
    3. '(k' → logprob: -2.962808847427368
    4. ' res' → logprob: -3.962808847427368
    5. ' k' → logprob: -4.712808609008789
    6. '(res' → logprob: -6.587808609008789
    7. ' (' → logprob: -7.087808609008789
    8. '1' → logprob: -8.837808609008789
    9. '(' → logprob: -8.962808609008789
    10. '   ' → logprob: -10.212808609008789

Token 244: ' pour' (ID: 1930)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39168137311935425
    2. ' -' → logprob: -1.391681432723999
    3. 'res' → logprob: -3.391681432723999
    4. '                   ' → logprob: -4.01668119430542
    5. ' res' → logprob: -4.76668119430542
    6. '   ' → logprob: -4.76668119430542
    7. ')' → logprob: -6.14168119430542
    8. '                           ' → logprob: -7.39168119430542
    9. '               ' → logprob: -7.64168119430542
    10. '           ' → logprob: -7.64168119430542

Token 245: '...' (ID: 1008)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4043923318386078
    2. 'k' → logprob: -2.9043922424316406
    3. '(k' → logprob: -2.9043922424316406
    4. ' ' → logprob: -3.0293922424316406
    5. ' (' → logprob: -3.1543922424316406
    6. '(' → logprob: -3.2793922424316406
    7. ' k' → logprob: -3.5293922424316406
    8. '2' → logprob: -3.9043922424316406
    9. ' res' → logprob: -3.9043922424316406
    10. 'res' → logprob: -4.404392242431641

Token 246: ' hmm' (ID: 186402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05768655613064766
    2. ' ' → logprob: -3.1826865673065186
    3. 'k' → logprob: -5.0576863288879395
    4. '(k' → logprob: -5.8076863288879395
    5. ' (' → logprob: -6.5576863288879395
    6. ' k' → logprob: -6.5576863288879395
    7. '2' → logprob: -6.8076863288879395
    8. '(' → logprob: -6.9326863288879395
    9. '                   ' → logprob: -10.307686805725098
    10. '   ' → logprob: -10.557686805725098

Token 247: ',' (ID: 11)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5884828567504883
    2. ' res' → logprob: -0.9634828567504883
    3. '                   ' → logprob: -2.9634828567504883
    4. '1' → logprob: -5.963482856750488
    5. ' k' → logprob: -6.338482856750488
    6. '                       ' → logprob: -6.713482856750488
    7. '                    ' → logprob: -6.713482856750488
    8. 'k' → logprob: -6.838482856750488
    9. '               ' → logprob: -7.338482856750488
    10. '                  ' → logprob: -7.713482856750488

Token 248: ' pas' (ID: 2173)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2535736858844757
    2. 'k' → logprob: -2.2535736560821533
    3. '(k' → logprob: -3.3785736560821533
    4. ' ' → logprob: -3.6285736560821533
    5. ' k' → logprob: -3.6285736560821533
    6. ' (' → logprob: -4.628573894500732
    7. 'res' → logprob: -4.628573894500732
    8. ' res' → logprob: -5.128573894500732
    9. '(' → logprob: -5.753573894500732
    10. '                   ' → logprob: -7.128573894500732

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29522621631622314
    2. '(k' → logprob: -1.6702262163162231
    3. 'k' → logprob: -3.2952260971069336
    4. '2' → logprob: -4.420226097106934
    5. '(' → logprob: -4.795226097106934
    6. 'sure' → logprob: -5.795226097106934
    7. '((' → logprob: -7.170226097106934
    8. '0' → logprob: -7.420226097106934
    9. ' k' → logprob: -7.670226097106934
    10. ' ' → logprob: -7.795226097106934

Token 250: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17306384444236755
    2. 'k' → logprob: -2.0480637550354004
    3. 'sure' → logprob: -4.6730637550354
    4. '2' → logprob: -4.7980637550354
    5. '(' → logprob: -6.0480637550354
    6. '0' → logprob: -6.2980637550354
    7. '(k' → logprob: -6.5480637550354
    8. 'com' → logprob: -7.4230637550354
    9. '```' → logprob: -7.6730637550354
    10. 'certain' → logprob: -7.7980637550354

Token 251: '%' (ID: 4)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.9702627658843994
    2. 'k' → logprob: -1.3452627658843994
    3. '1' → logprob: -2.3452627658843994
    4. '                   ' → logprob: -2.5952627658843994
    5. ':' → logprob: -3.7202627658843994
    6. '               ' → logprob: -3.8452627658843994
    7. '*k' → logprob: -3.8452627658843994
    8. '*' → logprob: -3.9702627658843994
    9. '0' → logprob: -4.09526252746582
    10. ' (' → logprob: -4.09526252746582

Token 252: ' sûr' (ID: 46415)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012311853468418121
    2. ' ' → logprob: -5.012311935424805
    3. 'k' → logprob: -5.637311935424805
    4. ' k' → logprob: -6.637311935424805
    5. '(k' → logprob: -8.012311935424805
    6. '2' → logprob: -8.887311935424805
    7. '(' → logprob: -9.012311935424805
    8. '   ' → logprob: -10.887311935424805
    9. 'res' → logprob: -11.137311935424805
    10. '```' → logprob: -11.262311935424805

Token 253: ' pourquoi' (ID: 39224)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3978869318962097
    2. 'res' → logprob: -1.7728869915008545
    3. ' res' → logprob: -2.1478869915008545
    4. ')' → logprob: -5.397886753082275
    5. '               ' → logprob: -5.522886753082275
    6. '*' → logprob: -5.772886753082275
    7. '                    ' → logprob: -5.772886753082275
    8. '*(' → logprob: -6.022886753082275
    9. 'k' → logprob: -6.147886753082275
    10. ' (' → logprob: -6.147886753082275

Token 254: ' mais' (ID: 2899)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7228360176086426
    2. 'res' → logprob: -1.0978360176086426
    3. ' res' → logprob: -1.7228360176086426
    4. '               ' → logprob: -7.222836017608643
    5. '   ' → logprob: -7.847836017608643
    6. '                       ' → logprob: -7.847836017608643
    7. '           ' → logprob: -8.097835540771484
    8. '       ' → logprob: -8.847835540771484
    9. '                    ' → logprob: -8.972835540771484
    10. '                  ' → logprob: -9.222835540771484

Token 255: ' ça' (ID: 13590)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5939140915870667
    2. ' res' → logprob: -0.8439140915870667
    3. '                   ' → logprob: -4.218914031982422
    4. '                       ' → logprob: -6.968914031982422
    5. '                    ' → logprob: -7.843914031982422
    6. '               ' → logprob: -7.968914031982422
    7. '
' → logprob: -8.218914031982422
    8. '                     ' → logprob: -8.718914031982422
    9. '                  ' → logprob: -8.718914031982422
    10. ' k' → logprob: -9.218914031982422

Token 256: ' doit' (ID: 21822)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9147940874099731
    2. ' res' → logprob: -2.0397939682006836
    3. '                   ' → logprob: -2.1647939682006836
    4. '*' → logprob: -2.2897939682006836
    5. ')' → logprob: -2.6647939682006836
    6. '-' → logprob: -3.0397939682006836
    7. ' is' → logprob: -3.7897939682006836
    8. ' *' → logprob: -3.7897939682006836
    9. ' -' → logprob: -4.164793968200684
    10. '.' → logprob: -4.289793968200684

Token 257: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.46631163358688354
    2. 'être' → logprob: -1.8413116931915283
    3. ' be' → logprob: -2.2163116931915283
    4. 'faire' → logprob: -4.216311454772949
    5. ' avoir' → logprob: -4.466311454772949
    6. '<|end|>' → logprob: -4.591311454772949
    7. '```' → logprob: -4.716311454772949
    8. 'be' → logprob: -4.841311454772949
    9. ' faire' → logprob: -4.966311454772949
    10. ' etre' → logprob: -5.341311454772949

Token 258: ' utile' (ID: 68237)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.27460014820098877
    2. ' k' → logprob: -1.8996001482009888
    3. '(k' → logprob: -2.649600028991699
    4. ' (' → logprob: -4.774600028991699
    5. ' correct' → logprob: -5.274600028991699
    6. '1' → logprob: -5.899600028991699
    7. 'correct' → logprob: -7.024600028991699
    8. '0' → logprob: -7.524600028991699
    9. ' ' → logprob: -7.649600028991699
    10. '   ' → logprob: -7.899600028991699

Token 259: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4224781095981598
    2. 'res' → logprob: -1.4224780797958374
    3. ' res' → logprob: -2.672478199005127
    4. '*' → logprob: -5.047478199005127
    5. '               ' → logprob: -5.297478199005127
    6. '-' → logprob: -5.297478199005127
    7. '           ' → logprob: -5.422478199005127
    8. '
' → logprob: -6.047478199005127
    9. ' *' → logprob: -6.047478199005127
    10. '   ' → logprob: -6.422478199005127

Token 260: '                   ' (ID: 699)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5042021870613098
    2. '                   ' → logprob: -1.379202127456665
    3. 'res' → logprob: -2.129202127456665
    4. ' k' → logprob: -4.754202365875244
    5. ' (' → logprob: -5.004202365875244
    6. '                    ' → logprob: -6.004202365875244
    7. ' +' → logprob: -6.379202365875244
    8. '+' → logprob: -6.629202365875244
    9. ' ' → logprob: -7.504202365875244
    10. '               ' → logprob: -7.504202365875244

Token 261: ' k' (ID: 372)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07175851613283157
    2. ' res' → logprob: -2.696758508682251
    3. '                   ' → logprob: -6.44675874710083
    4. 'k' (adapté à ' k') → logprob: -9.696758270263672
    5. '   ' → logprob: -10.071758270263672
    6. '               ' → logprob: -10.696758270263672
    7. '                    ' → logprob: -10.946758270263672
    8. ' k' → logprob: -11.071758270263672
    9. '                       ' → logprob: -11.071758270263672
    10. ' ' → logprob: -11.446758270263672

Token 262: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22830039262771606
    2. ' -' → logprob: -2.2283003330230713
    3. '=' → logprob: -2.8533003330230713
    4. ' =' → logprob: -3.8533003330230713
    5. ' -=' → logprob: -4.47830057144165
    6. '-=' → logprob: -5.22830057144165
    7. ')' → logprob: -8.228300094604492
    8. ' ' → logprob: -9.353300094604492
    9. '<|end|>' → logprob: -9.353300094604492
    10. '_minus' → logprob: -9.478300094604492

Token 263: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18736541271209717
    2. '-' → logprob: -1.9373654127120972
    3. ' =' → logprob: -3.9373655319213867
    4. '=' → logprob: -5.687365531921387
    5. '2' → logprob: -6.312365531921387
    6. ' ' → logprob: -7.187365531921387
    7. ' -=' → logprob: -7.187365531921387
    8. '_' → logprob: -9.187365531921387
    9. '-=' → logprob: -9.437365531921387
    10. '_minus' → logprob: -9.562365531921387

Token 264: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.693163275718689
    2. ' k' → logprob: -0.693163275718689
    3. '                   ' → logprob: -12.19316291809082
    4. '                    ' → logprob: -12.44316291809082
    5. ' ' → logprob: -12.69316291809082
    6. '	k' → logprob: -13.69316291809082
    7. '    ' → logprob: -14.19316291809082
    8. '(k' → logprob: -14.44316291809082
    9. ' (' → logprob: -14.56816291809082
    10. ',k' → logprob: -16.06816291809082

Token 265: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06198135390877724
    2. ' -' → logprob: -2.811981439590454
    3. '                   ' → logprob: -11.686981201171875
    4. '           ' → logprob: -13.686981201171875
    5. '               ' → logprob: -14.061981201171875
    6. '   ' → logprob: -14.311981201171875
    7. ' ' → logprob: -14.561981201171875
    8. '                       ' → logprob: -14.686981201171875
    9. '                    ' → logprob: -14.936981201171875
    10. '                           ' → logprob: -15.936981201171875

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018399098189547658
    2. '2' → logprob: -9.125184059143066
    3. ' ' → logprob: -9.500184059143066
    4. '```' → logprob: -17.06268310546875
    5. '   ' → logprob: -17.12518310546875
    6. '１' → logprob: -17.37518310546875
    7. '۱' → logprob: -17.93768310546875
    8. ' ' → logprob: -18.50018310546875
    9. '<|end|>' → logprob: -18.68768310546875
    10. '  ' → logprob: -18.68768310546875

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002553793019615114
    2. '2' → logprob: -8.375255584716797
    3. ' ' → logprob: -10.625255584716797
    4. '   ' → logprob: -16.625255584716797
    5. '１' → logprob: -17.062755584716797
    6. '```' → logprob: -17.125255584716797
    7. '(' → logprob: -17.625255584716797
    8. '  ' → logprob: -17.812755584716797
    9. '۱' → logprob: -17.812755584716797
    10. '-' → logprob: -18.000255584716797

Token 268: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26027777791023254
    2. '                   ' → logprob: -1.5102777481079102
    3. '                    
' → logprob: -5.76027774810791
    4. 'res' → logprob: -6.38527774810791
    5. '*' → logprob: -7.38527774810791
    6. '               ' → logprob: -7.51027774810791
    7. '
' → logprob: -7.63527774810791
    8. ')' → logprob: -7.88527774810791
    9. '           ' → logprob: -8.38527774810791
    10. '                    ' → logprob: -9.01027774810791

Token 269: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03686151280999184
    2. '
' → logprob: -3.5368614196777344
    3. '                    
' → logprob: -5.786861419677734
    4. '                    ' → logprob: -6.786861419677734
    5. '               ' → logprob: -7.036861419677734
    6. '           ' → logprob: -8.161861419677734
    7. '                       ' → logprob: -8.536861419677734
    8. '                  ' → logprob: -8.911861419677734
    9. '                        
' → logprob: -8.911861419677734
    10. '<|end|>' → logprob: -8.911861419677734

Token 270: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.004194505978375673
    2. ' res' → logprob: -5.629194736480713
    3. '                   ' → logprob: -7.504194736480713
    4. '
' → logprob: -10.629194259643555
    5. '(res' → logprob: -12.629194259643555
    6. '
                    
' → logprob: -13.129194259643555
    7. '               ' → logprob: -13.254194259643555
    8. '   ' → logprob: -13.504194259643555
    9. 'for' → logprob: -13.754194259643555
    10. 'k' → logprob: -13.879194259643555

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26032131910324097
    2. '=' → logprob: -1.5103213787078857
    3. ' +=' → logprob: -5.010321140289307
    4. '+=' → logprob: -6.385321140289307
    5. ' ' → logprob: -14.260321617126465
    6. '   ' → logprob: -14.510321617126465
    7. '=res' → logprob: -14.510321617126465
    8. '.=' → logprob: -16.13532066345215
    9. '```' → logprob: -16.26032066345215
    10. '+' → logprob: -16.26032066345215

Token 272: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.03365849331021309
    2. 'res' → logprob: -3.408658504486084
    3. '(res' → logprob: -11.658658027648926
    4. ' (' → logprob: -13.408658027648926
    5. '	res' → logprob: -13.408658027648926
    6. '   ' → logprob: -15.158658027648926
    7. '                           ' → logprob: -15.908658027648926
    8. ' ' → logprob: -16.158658981323242
    9. '_res' → logprob: -16.158658981323242
    10. '(' → logprob: -16.283658981323242

Token 273: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01416398212313652
    2. '+' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.264163970947266
    4. ' ' → logprob: -16.264163970947266
    5. ' plus' → logprob: -16.639163970947266
    6. '+k' → logprob: -17.639163970947266
    7. 's' → logprob: -18.389163970947266
    8. ' +=' → logprob: -18.389163970947266
    9. '＋' → logprob: -18.514163970947266
    10. ' +
' → logprob: -18.764163970947266

Token 274: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.32289454340934753
    2. '(k' → logprob: -1.32289457321167
    3. ' k' → logprob: -5.19789457321167
    4. ' (' → logprob: -5.94789457321167
    5. '(' → logprob: -7.19789457321167
    6. '((' → logprob: -7.69789457321167
    7. '   ' → logprob: -9.322894096374512
    8. ' ' → logprob: -10.822894096374512
    9. '(idx' → logprob: -10.822894096374512
    10. 'res' → logprob: -11.072894096374512

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.391757994890213
    2. '*' → logprob: -1.8917579650878906
    3. ' *' → logprob: -2.7667579650878906
    4. '<|end|>' → logprob: -2.7667579650878906
    5. ' -' → logprob: -4.391757965087891
    6. ' +' → logprob: -4.391757965087891
    7. '-' → logprob: -4.891757965087891
    8. '*(' → logprob: -5.516757965087891
    9. ' ' → logprob: -5.641757965087891
    10. '+' → logprob: -6.391757965087891

Token 276: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0021739318035542965
    2. ' (' → logprob: -6.377173900604248
    3. '(' → logprob: -8.127174377441406
    4. '((' → logprob: -9.252174377441406
    5. 'k' → logprob: -9.627174377441406
    6. '   ' → logprob: -11.627174377441406
    7. '1' → logprob: -13.752174377441406
    8. ' ' → logprob: -13.877174377441406
    9. ' k' → logprob: -15.127174377441406
    10. '  ' → logprob: -15.127174377441406

Token 278: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00771120423451066
    2. '(k' → logprob: -4.882711410522461
    3. ' k' → logprob: -9.257711410522461
    4. ' (' → logprob: -12.257711410522461
    5. '   ' → logprob: -12.882711410522461
    6. '(' → logprob: -13.632711410522461
    7. '	k' → logprob: -15.132711410522461
    8. 'kx' → logprob: -15.257711410522461
    9. ' ' → logprob: -16.38271141052246
    10. '{k' → logprob: -16.38271141052246

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0513702817261219
    2. '*(' → logprob: -3.17637038230896
    3. '*' → logprob: -4.801370143890381
    4. ' *' → logprob: -9.926370620727539
    5. '*k' → logprob: -10.551370620727539
    6. '```' → logprob: -11.301370620727539
    7. '-' → logprob: -11.926370620727539
    8. ' *(' → logprob: -12.426370620727539
    9. '*((' → logprob: -12.551370620727539
    10. '   ' → logprob: -12.676370620727539

Token 280: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.01105300523340702
    2. '*' → logprob: -4.511053085327148
    3. ' *' → logprob: -12.511053085327148
    4. ' *(' → logprob: -14.261053085327148
    5. '*k' → logprob: -14.386053085327148
    6. '*((' → logprob: -15.886053085327148
    7. ')*(' → logprob: -16.01105308532715
    8. '**' → logprob: -16.76105308532715
    9. '*
' → logprob: -17.51105308532715
    10. '*\' → logprob: -20.01105308532715

Token 281: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.696077227592468e-05
    2. '(k' → logprob: -9.625077247619629
    3. ' k' → logprob: -11.750077247619629
    4. '   ' → logprob: -13.500077247619629
    5. '{k' → logprob: -14.250077247619629
    6. '	k' → logprob: -14.875077247619629
    7. '```' → logprob: -16.000076293945312
    8. '_k' → logprob: -16.250076293945312
    9. ' (' → logprob: -16.625076293945312
    10. ' ' → logprob: -16.875076293945312

Token 282: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000786398712079972
    2. ' -' → logprob: -7.250786304473877
    3. '2' → logprob: -9.500786781311035
    4. '1' → logprob: -14.250786781311035
    5. 'k' → logprob: -14.625786781311035
    6. '```' → logprob: -15.500786781311035
    7. '–' → logprob: -16.37578582763672
    8. '-k' → logprob: -16.87578582763672
    9. ')' → logprob: -17.00078582763672
    10. '−' → logprob: -17.25078582763672

Token 283: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038014890742488205
    2. ' -' → logprob: -7.875380039215088
    3. '1' → logprob: -17.12537956237793
    4. '```' → logprob: -18.37537956237793
    5. '+' → logprob: -18.75037956237793
    6. ')' → logprob: -19.50037956237793
    7. ' ' → logprob: -19.62537956237793
    8. '()-' → logprob: -19.75037956237793
    9. '   ' → logprob: -20.12537956237793
    10. '−' → logprob: -20.25037956237793

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015153385465964675
    2. '-' → logprob: -6.5015153884887695
    3. ' -' → logprob: -11.87651538848877
    4. '```' → logprob: -12.62651538848877
    5. ' ' → logprob: -13.50151538848877
    6. '   ' → logprob: -14.75151538848877
    7. '+' → logprob: -14.87651538848877
    8. ')' → logprob: -15.25151538848877
    9. '
' → logprob: -15.37651538848877
    10. '--' → logprob: -17.251514434814453

Token 285: '))' (ID: 915)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.04683709889650345
    2. '))' → logprob: -3.296837091445923
    3. ')' → logprob: -4.796837329864502
    4. ' )' → logprob: -7.796837329864502
    5. '())' → logprob: -9.546836853027344
    6. '   ' → logprob: -12.421836853027344
    7. ')>>' → logprob: -12.421836853027344
    8. '//' → logprob: -12.546836853027344
    9. ')#' → logprob: -13.671836853027344
    10. ' ))' → logprob: -13.671836853027344

Token 286: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.026176393032073975
    2. ')//' → logprob: -3.9011764526367188
    3. ' //' → logprob: -5.276176452636719
    4. ')' → logprob: -7.901176452636719
    5. '()' → logprob: -10.026176452636719
    6. '   ' → logprob: -10.151176452636719
    7. '```' → logprob: -11.026176452636719
    8. ' ' → logprob: -12.026176452636719
    9. ' )' → logprob: -12.151176452636719
    10. '>//' → logprob: -12.401176452636719

Token 287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.75
    4. '۲' → logprob: -18.25
    5. '```' → logprob: -19.1875
    6. '  ' → logprob: -19.3125
    7. '1' → logprob: -19.9375
    8. '22' → logprob: -20.3125
    9. '212' → logprob: -20.5
    10. '२' → logprob: -20.5

Token 288: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1580824851989746
    2. '   ' → logprob: -1.5330824851989746
    3. '
' → logprob: -1.7830824851989746
    4. '<|end|>' → logprob: -1.7830824851989746
    5. '\n' → logprob: -3.0330824851989746
    6. '       ' → logprob: -3.6580824851989746
    7. 'return' → logprob: -4.783082485198975
    8. ' return' → logprob: -5.033082485198975
    9. '<|end|>' → logprob: -5.033082485198975
    10. '               ' → logprob: -5.158082485198975

Token 289: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.161400318145752
    2. '           ' → logprob: -1.286400318145752
    3. '   ' → logprob: -1.286400318145752
    4. 'print' → logprob: -3.161400318145752
    5. 'return' → logprob: -3.161400318145752
    6. '\n' → logprob: -4.661400318145752
    7. '       ' → logprob: -4.911400318145752
    8. '<|end|>' → logprob: -4.911400318145752
    9. ')' → logprob: -5.536400318145752
    10. '+' → logprob: -5.661400318145752

Token 290: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ''espère' (ID: 116557)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1176412105560303
    2. '+=' → logprob: -1.6176412105560303
    3. '+' → logprob: -2.2426412105560303
    4. 'ust' → logprob: -2.4926412105560303
    5. 'e' → logprob: -2.6176412105560303
    6. 'uste' → logprob: -3.4926412105560303
    7. ''ai' → logprob: -3.4926412105560303
    8. ''espère' → logprob: -3.7426412105560303
    9. ''aj' → logprob: -4.117641448974609
    10. '```' → logprob: -4.367641448974609

Token 292: ' que' (ID: 661)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24861951172351837
    2. '\n' → logprob: -2.623619556427002
    3. '   ' → logprob: -2.873619556427002
    4. '<|end|>' → logprob: -3.248619556427002
    5. '           ' → logprob: -3.998619556427002
    6. ' return' → logprob: -4.873619556427002
    7. 'return' → logprob: -4.998619556427002
    8. '    
' → logprob: -5.373619556427002
    9. '<|end|>' → logprob: -5.998619556427002
    10. '       ' → logprob: -6.248619556427002

Token 293: ' c' (ID: 274)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.31939032673835754
    2. 'True' → logprob: -1.3193902969360352
    3. ' k' → logprob: -5.444390296936035
    4. ' res' → logprob: -6.944390296936035
    5. 'res' → logprob: -8.819390296936035
    6. '(True' → logprob: -8.944390296936035
    7. ' ' → logprob: -9.319390296936035
    8. ')' → logprob: -9.319390296936035
    9. 'true' → logprob: -9.569390296936035
    10. ' ' → logprob: -9.569390296936035

Token 294: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.340783029794693
    2. 'a' → logprob: -1.7157829999923706
    3. 'e' → logprob: -2.71578311920166
    4. 'est' → logprob: -3.84078311920166
    5. ''' → logprob: -4.96578311920166
    6. ''a' → logprob: -5.09078311920166
    7. ''était' → logprob: -6.59078311920166
    8. 'ela' → logprob: -7.09078311920166
    9. ''e' → logprob: -7.71578311920166
    10. ' ' → logprob: -7.84078311920166

Token 295: ' juste' (ID: 31553)
  Prédit: ' correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correct' → logprob: -0.3459825813770294
    2. 'correct' → logprob: -1.470982551574707
    3. ' correcte' → logprob: -2.845982551574707
    4. 'exact' → logprob: -7.345982551574707
    5. ' utile' → logprob: -7.595982551574707
    6. 'f' → logprob: -8.095982551574707
    7. ' logique' → logprob: -8.470982551574707
    8. 'right' → logprob: -8.595982551574707
    9. ' juste' → logprob: -8.720982551574707
    10. ' valid' → logprob: -8.720982551574707

Token 296: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19027985632419586
    2. '
' → logprob: -2.065279960632324
    3. '   ' → logprob: -4.315279960632324
    4. '           ' → logprob: -4.690279960632324
    5. '<|end|>' → logprob: -4.940279960632324
    6. 'return' → logprob: -6.065279960632324
    7. ' return' → logprob: -6.065279960632324
    8. '    
' → logprob: -6.315279960632324
    9. ')' → logprob: -6.565279960632324
    10. '\' → logprob: -6.815279960632324

Token 297: ' mais' (ID: 2899)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.711627721786499
    2. ')' → logprob: -1.836627721786499
    3. '<|end|>' → logprob: -2.836627721786499
    4. '   ' → logprob: -2.961627721786499
    5. '\n' → logprob: -2.961627721786499
    6. '
' → logprob: -3.086627721786499
    7. ' return' → logprob: -3.961627721786499
    8. '                   ' → logprob: -4.086627960205078
    9. '```' → logprob: -4.336627960205078
    10. 'return' → logprob: -4.336627960205078

Token 298: ' ça' (ID: 13590)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.8345081210136414
    2. ')' → logprob: -1.5845081806182861
    3. 'pass' → logprob: -2.084508180618286
    4. ' continue' → logprob: -2.584508180618286
    5. ' res' → logprob: -3.459508180618286
    6. ' ' → logprob: -3.709508180618286
    7. '...' → logprob: -3.959508180618286
    8. ' )' → logprob: -4.209507942199707
    9. 'continue' → logprob: -4.209507942199707
    10. '```' → logprob: -4.834507942199707

Token 299: ' suit' (ID: 15170)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5215522050857544
    2. ' +' → logprob: -1.2715522050857544
    3. '
' → logprob: -3.896552085876465
    4. '<|end|>' → logprob: -3.896552085876465
    5. ' +=' → logprob: -4.146552085876465
    6. ' ' → logprob: -4.396552085876465
    7. '\n' → logprob: -4.396552085876465
    8. ')' → logprob: -4.646552085876465
    9. '<|end|>' → logprob: -5.396552085876465
    10. '               ' → logprob: -5.521552085876465

Token 300: ' l' (ID: 305)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8422768712043762
    2. '<|end|>' → logprob: -1.2172768115997314
    3. '   ' → logprob: -2.7172768115997314
    4. ')' → logprob: -3.9672768115997314
    5. ' 
' → logprob: -3.9672768115997314
    6. '    
' → logprob: -3.9672768115997314
    7. '            
' → logprob: -4.4672770500183105
    8. '<|end|>' → logprob: -4.4672770500183105
    9. '                        
' → logprob: -4.5922770500183105
    10. '
' → logprob: -4.7172770500183105

Token 301: ''idée' (ID: 131945)
  Prédit: 'logic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'logic' → logprob: -0.7500190734863281
    2. ' logique' → logprob: -1.2500190734863281
    3. ' logic' → logprob: -2.250019073486328
    4. 'pattern' → logprob: -2.875019073486328
    5. 'intu' → logprob: -3.875019073486328
    6. ' lógica' → logprob: -4.500019073486328
    7. 'k' → logprob: -4.750019073486328
    8. 'code' → logprob: -5.000019073486328
    9. 'int' → logprob: -5.500019073486328
    10. 'indent' → logprob: -5.625019073486328

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3729093670845032
    2. '\n' → logprob: -1.7479093074798584
    3. '<|end|>' → logprob: -2.8729093074798584
    4. '           ' → logprob: -3.4979093074798584
    5. '   ' → logprob: -4.4979095458984375
    6. '<|end|>' → logprob: -4.8729095458984375
    7. '    
' → logprob: -5.1229095458984375
    8. '            
' → logprob: -5.3729095458984375
    9. '  
' → logprob: -5.6229095458984375
    10. '               ' → logprob: -6.1229095458984375

Token 303: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5968962907791138
    2. '
' → logprob: -1.3468962907791138
    3. '<|end|>' → logprob: -1.9718962907791138
    4. '           ' → logprob: -3.471896171569824
    5. '<|end|>' → logprob: -5.721896171569824
    6. '   ' → logprob: -5.846896171569824
    7. '       ' → logprob: -6.596896171569824
    8. '               ' → logprob: -6.596896171569824
    9. '+' → logprob: -6.721896171569824
    10. '    
' → logprob: -7.096896171569824

Token 304: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23313118517398834
    2. 'return' → logprob: -2.108131170272827
    3. ' return' → logprob: -2.483131170272827
    4. 'print' → logprob: -6.858131408691406
    5. '    
' → logprob: -7.108131408691406
    6. '	return' → logprob: -8.233131408691406
    7. '
' → logprob: -8.483131408691406
    8. '```' → logprob: -8.733131408691406
    9. '\n' → logprob: -8.983131408691406
    10. '       ' → logprob: -9.483131408691406

Token 305: ' enfin' (ID: 50642)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17005780339241028
    2. ' return' → logprob: -2.920057773590088
    3. '   ' → logprob: -3.045057773590088
    4. 'res' → logprob: -3.545057773590088
    5. 'print' → logprob: -3.670057773590088
    6. ' print' → logprob: -8.295058250427246
    7. ' res' → logprob: -8.545058250427246
    8. '       ' → logprob: -10.795058250427246
    9. '```' → logprob: -10.795058250427246
    10. '	return' → logprob: -11.545058250427246

Token 306: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5507717132568359
    2. ' return' → logprob: -1.300771713256836
    3. '   ' → logprob: -1.925771713256836
    4. 'print' → logprob: -5.550771713256836
    5. 'res' → logprob: -6.675771713256836
    6. ' print' → logprob: -8.675771713256836
    7. ' res' → logprob: -9.675771713256836
    8. '	return' → logprob: -11.675771713256836
    9. '
' → logprob: -11.925771713256836
    10. '```' → logprob: -11.925771713256836

Token 307: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21181930601596832
    2. 'return' → logprob: -1.7118192911148071
    3. '   ' → logprob: -5.461819171905518
    4. ' return' → logprob: -5.961819171905518
    5. ' print' → logprob: -5.961819171905518
    6. 'res' → logprob: -6.961819171905518
    7. ' res' → logprob: -12.211819648742676
    8. '```' → logprob: -12.836819648742676
    9. '	return' → logprob: -15.586819648742676
    10. '	print' → logprob: -15.586819648742676

Token 308: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018673432990908623
    2. ' print' → logprob: -4.518673419952393
    3. 'return' → logprob: -5.018673419952393
    4. ' return' → logprob: -7.393673419952393
    5. '   ' → logprob: -8.01867389678955
    6. '%' → logprob: -10.76867389678955
    7. 'mod' → logprob: -11.76867389678955
    8. '%=' → logprob: -12.39367389678955
    9. ' %=' → logprob: -13.01867389678955
    10. '#print' → logprob: -13.89367389678955

Token 309: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003149789059534669
    2. ' print' → logprob: -6.75314998626709
    3. '(print' → logprob: -7.00314998626709
    4. '   ' → logprob: -7.25314998626709
    5. '(res' → logprob: -8.25314998626709
    6. '(' → logprob: -9.62814998626709
    7. 'res' → logprob: -10.37814998626709
    8. '
' → logprob: -13.50314998626709
    9. '	print' → logprob: -14.62814998626709
    10. '```' → logprob: -14.62814998626709

Token 310: ' résultat' (ID: 62556)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.016061468049883842
    2. 'result' → logprob: -4.266061305999756
    3. '(res' → logprob: -6.391061305999756
    4. ' res' → logprob: -9.016061782836914
    5. 'print' → logprob: -9.766061782836914
    6. ' result' → logprob: -11.266061782836914
    7. '(' → logprob: -11.516061782836914
    8. 'rés' → logprob: -11.766061782836914
    9. '(result' → logprob: -12.641061782836914
    10. ' (' → logprob: -13.016061782836914

Token 311: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10146534442901611
    2. 'print' → logprob: -2.3514652252197266
    3. ' print' → logprob: -7.101465225219727
    4. '
' → logprob: -7.851465225219727
    5. '```' → logprob: -10.101465225219727
    6. '	print' → logprob: -13.226465225219727
    7. '    
' → logprob: -13.601465225219727
    8. '
' → logprob: -15.351465225219727
    9. '       ' → logprob: -15.851465225219727
    10. ',' → logprob: -16.226465225219727

Token 312: ' mod' (ID: 1812)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.645255982875824
    2. 'mod' → logprob: -1.7702560424804688
    3. ' res' → logprob: -2.3952560424804688
    4. ' mod' → logprob: -2.5202560424804688
    5. '(mod' → logprob: -2.5202560424804688
    6. ' (' → logprob: -3.5202560424804688
    7. '(res' → logprob: -4.520256042480469
    8. '   ' → logprob: -4.645256042480469
    9. '(' → logprob: -6.645256042480469
    10. ' ' → logprob: -6.645256042480469

Token 313: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32014989852905273
    2. 'print' → logprob: -1.3201498985290527
    3. '
' → logprob: -5.445149898529053
    4. ' print' → logprob: -6.070149898529053
    5. '```' → logprob: -8.570150375366211
    6. '    
' → logprob: -10.320150375366211
    7. '	print' → logprob: -11.820150375366211
    8. '
' → logprob: -13.695150375366211
    9. '``' → logprob: -13.945150375366211
    10. 'res' → logprob: -14.195150375366211

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20863941311836243
    2. 'print' → logprob: -1.70863938331604
    3. ' print' → logprob: -4.958639621734619
    4. '```' → logprob: -8.708639144897461
    5. '	print' → logprob: -11.458639144897461
    6. '
' → logprob: -14.083639144897461
    7. '    
' → logprob: -14.833639144897461
    8. '``' → logprob: -14.833639144897461
    9. '       ' → logprob: -15.583639144897461
    10. '.print' → logprob: -16.83363914489746

Token 315: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01295856386423111
    2. ' print' → logprob: -4.512958526611328
    3. '   ' → logprob: -6.262958526611328
    4. '```' → logprob: -13.512958526611328
    5. '
' → logprob: -13.762958526611328
    6. 'res' → logprob: -14.637958526611328
    7. '	print' → logprob: -14.762958526611328
    8. ' res' → logprob: -17.137958526611328
    9. '    
' → logprob: -17.637958526611328
    10. ' ' → logprob: -18.012958526611328

Token 316: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.02978033944964409
    2. '(' → logprob: -3.529780387878418
    3. ' (' → logprob: -10.654780387878418
    4. '(f' → logprob: -12.904780387878418
    5. '((' → logprob: -13.404780387878418
    6. 'res' → logprob: -14.404780387878418
    7. '(
' → logprob: -14.779780387878418
    8. '('' → logprob: -15.029780387878418
    9. '()' → logprob: -15.154780387878418
    10. '(result' → logprob: -16.0297794342041

Token 317: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01815345324575901
    2. '%' → logprob: -4.018153667449951
    3. ')' → logprob: -12.768153190612793
    4. ' ' → logprob: -15.268153190612793
    5. ' %)' → logprob: -15.643153190612793
    6. ' )' → logprob: -15.893153190612793
    7. ')%' → logprob: -16.26815414428711
    8. ' ' → logprob: -16.26815414428711
    9. ' %=' → logprob: -19.76815414428711
    10. '%)' → logprob: -19.76815414428711

Token 318: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04859498515725136
    2. ' mod' → logprob: -3.0485949516296387
    3. '(mod' → logprob: -11.798595428466797
    4. '	mod' → logprob: -16.548595428466797
    5. ' ' → logprob: -18.923595428466797
    6. ' мод' → logprob: -19.048595428466797
    7. '_mod' → logprob: -20.173595428466797
    8. '```' → logprob: -21.048595428466797
    9. ' ' → logprob: -21.798595428466797
    10. 'MOD' → logprob: -21.923595428466797

Token 319: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 319
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 111
Tokens correctement prédits (top 10): 199
Précision stricte (1ère position): 31.97%
Précision adaptée (1ère position): 34.80%
Précision (top 10): 62.38%
================================================================================
