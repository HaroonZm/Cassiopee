================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())

l = [a + b, a - b, a * b]
l.sort()

print(l[2])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0942426547408104
    2. '+' → logprob: -2.469242572784424
    3. ' =' → logprob: -5.594242572784424
    4. ',' → logprob: -7.469242572784424
    5. '+=' → logprob: -7.844242572784424
    6. ' +' → logprob: -8.719243049621582
    7. '```' → logprob: -9.719243049621582
    8. '*' → logprob: -9.844243049621582
    9. '**' → logprob: -10.219243049621582
    10. ' ' → logprob: -10.219243049621582

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42204710841178894
    2. '0' → logprob: -1.6720471382141113
    3. '1' → logprob: -2.0470471382141113
    4. '10' → logprob: -3.6720471382141113
    5. '42' → logprob: -7.672047138214111
    6. '5' → logprob: -7.922047138214111
    7. ' a' → logprob: -8.672046661376953
    8. 'a' → logprob: -8.797046661376953
    9. 'input' → logprob: -9.547046661376953
    10. '2' → logprob: -9.672046661376953

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19934040307998657
    2. '(lambda' → logprob: -2.324340343475342
    3. '```' → logprob: -2.699340343475342
    4. '<|end|>' → logprob: -4.699340343475342
    5. ')' → logprob: -7.074340343475342
    6. '(int' → logprob: -7.324340343475342
    7. '[' → logprob: -7.574340343475342
    8. '`' → logprob: -7.824340343475342
    9. '[int' → logprob: -8.1993408203125
    10. '<|end|>' → logprob: -8.3243408203125

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5411503314971924
    2. '(input' → logprob: -1.0411503314971924
    3. '(' → logprob: -2.9161503314971924
    4. 'input' → logprob: -5.666150093078613
    5. '```' → logprob: -6.291150093078613
    6. '(user' → logprob: -6.916150093078613
    7. '`)' → logprob: -7.666150093078613
    8. ',' → logprob: -7.791150093078613
    9. '(data' → logprob: -7.916150093078613
    10. '))' → logprob: -8.291150093078613

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.027034223079681396
    2. ' input' → logprob: -3.652034282684326
    3. '(input' → logprob: -7.402034282684326
    4. ')' → logprob: -9.027033805847168
    5. '=input' → logprob: -13.902033805847168
    6. ',input' → logprob: -14.027033805847168
    7. ' )' → logprob: -14.652033805847168
    8. '```' → logprob: -15.027033805847168
    9. '[input' → logprob: -15.527033805847168
    10. '<input' → logprob: -15.902033805847168

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5460929870605469
    2. ')' → logprob: -1.5460929870605469
    3. '())' → logprob: -2.046092987060547
    4. '()' → logprob: -2.671092987060547
    5. '('' → logprob: -6.921092987060547
    6. '(""))' → logprob: -7.046092987060547
    7. '(()' → logprob: -7.171092987060547
    8. '))' → logprob: -7.296092987060547
    9. '`()' → logprob: -7.296092987060547
    10. '(
' → logprob: -7.296092987060547

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002736138121690601
    2. 'strip' → logprob: -8.250273704528809
    3. 'rstrip' → logprob: -11.750273704528809
    4. ' split' → logprob: -12.750273704528809
    5. 'read' → logprob: -14.625273704528809
    6. ')' → logprob: -14.750273704528809
    7. '(split' → logprob: -15.000273704528809
    8. 'spl' → logprob: -15.625273704528809
    9. 'startswith' → logprob: -17.125272750854492
    10. '_split' → logprob: -18.125272750854492

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07087970525026321
    2. '())' → logprob: -3.3208796977996826
    3. '))' → logprob: -3.4458796977996826
    4. '()' → logprob: -8.445879936218262
    5. '()))' → logprob: -9.445879936218262
    6. '`)' → logprob: -9.695879936218262
    7. ')`' → logprob: -10.570879936218262
    8. '(' → logprob: -11.070879936218262
    9. ')))' → logprob: -11.945879936218262
    10. ' )' → logprob: -12.320879936218262

Token 11: 'l' (ID: 75)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6275554299354553
    2. 'c' → logprob: -1.1275553703308105
    3. 'if' → logprob: -3.0025553703308105
    4. '#' → logprob: -3.3775553703308105
    5. '*' → logprob: -3.5025553703308105
    6. 'a' → logprob: -4.0025553703308105
    7. 'print' → logprob: -5.8775553703308105
    8. '>' → logprob: -6.8775553703308105
    9. '+c' → logprob: -6.8775553703308105
    10. 'x' → logprob: -7.0025553703308105

Token 12: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35268494486808777
    2. 'e' → logprob: -1.4776849746704102
    3. 'ist' → logprob: -3.47768497467041
    4. 's' → logprob: -4.60268497467041
    5. 'en' → logprob: -5.10268497467041
    6. 'is' → logprob: -5.10268497467041
    7. '=' → logprob: -5.47768497467041
    8. ' =' → logprob: -5.85268497467041
    9. '.' → logprob: -5.97768497467041
    10. '[i' → logprob: -6.60268497467041

Token 13: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5703130960464478
    2. '[a' → logprob: -1.8203130960464478
    3. ' []' → logprob: -1.9453130960464478
    4. ' [' → logprob: -2.945312976837158
    5. '[' → logprob: -3.695312976837158
    6. '[int' → logprob: -4.070312976837158
    7. 'list' → logprob: -4.445312976837158
    8. '[list' → logprob: -4.945312976837158
    9. ' list' → logprob: -5.070312976837158
    10. 'a' → logprob: -5.445312976837158

Token 14: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.393128901720047
    2. '0' → logprob: -1.1431288719177246
    3. 'int' → logprob: -5.393128871917725
    4. ']' → logprob: -6.768128871917725
    5. '1' → logprob: -8.643129348754883
    6. ')' → logprob: -9.018129348754883
    7. 'input' → logprob: -9.518129348754883
    8. 'i' → logprob: -10.018129348754883
    9. ' ' → logprob: -10.393129348754883
    10. ' a' → logprob: -10.768129348754883

Token 15: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03204687312245369
    2. '+' → logprob: -4.032046794891357
    3. ')' → logprob: -5.657046794891357
    4. ',b' → logprob: -5.907046794891357
    5. ')]' → logprob: -5.907046794891357
    6. ' ,' → logprob: -6.157046794891357
    7. '*' → logprob: -7.032046794891357
    8. ' +' → logprob: -7.907046794891357
    9. '-' → logprob: -8.282047271728516
    10. ',a' → logprob: -8.282047271728516

Token 16: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3496275246143341
    2. ' b' → logprob: -1.2246274948120117
    3. '1' → logprob: -7.224627494812012
    4. ' ' → logprob: -8.099627494812012
    5. 'i' → logprob: -9.599627494812012
    6. ' i' → logprob: -9.724627494812012
    7. '0' → logprob: -12.599627494812012
    8. '2' → logprob: -13.224627494812012
    9. 'a' → logprob: -13.474627494812012
    10. '-' → logprob: -13.474627494812012

Token 17: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7037492990493774
    2. ')' → logprob: -1.5787492990493774
    3. ',' → logprob: -1.7037492990493774
    4. ']' → logprob: -2.203749179840088
    5. '])' → logprob: -6.328749179840088
    6. '])]' → logprob: -6.328749179840088
    7. ' for' → logprob: -6.828749179840088
    8. ')])' → logprob: -6.953749179840088
    9. ' )' → logprob: -8.203749656677246
    10. 'for' → logprob: -8.703749656677246

Token 18: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12734770774841309
    2. ' a' → logprob: -2.127347707748413
    3. '0' → logprob: -8.752347946166992
    4. 'abs' → logprob: -9.752347946166992
    5. ' ' → logprob: -10.002347946166992
    6. ' abs' → logprob: -10.002347946166992
    7. '2' → logprob: -10.377347946166992
    8. 'b' → logprob: -11.127347946166992
    9. '(a' → logprob: -11.252347946166992
    10. ' b' → logprob: -11.377347946166992

Token 19: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11002787947654724
    2. '-' → logprob: -2.61002779006958
    3. '*' → logprob: -3.86002779006958
    4. ' *' → logprob: -4.73502779006958
    5. '+' → logprob: -7.98502779006958
    6. ' +' → logprob: -8.735028266906738
    7. ' ' → logprob: -9.235028266906738
    8. ',' → logprob: -9.235028266906738
    9. '*b' → logprob: -10.735028266906738
    10. ' ,' → logprob: -10.860028266906738

Token 20: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889066636562347
    2. ' b' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.828890800476074
    4. ')b' → logprob: -15.078890800476074
    5. '	b' → logprob: -15.953890800476074
    6. '<|end|>' → logprob: -16.078889846801758
    7. ' б' → logprob: -17.328889846801758
    8. '>b' → logprob: -18.328889846801758
    9. ')' → logprob: -18.453889846801758
    10. '1' → logprob: -19.203889846801758

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49649786949157715
    2. ']' → logprob: -1.4964978694915771
    3. ')' → logprob: -1.9964978694915771
    4. ')]' → logprob: -3.496497869491577
    5. '])' → logprob: -7.121498107910156
    6. ' ]' → logprob: -8.871498107910156
    7. ' ,' → logprob: -8.871498107910156
    8. ' )' → logprob: -9.871498107910156
    9. '])]' → logprob: -10.246498107910156
    10. '),' → logprob: -10.871498107910156

Token 22: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17977608740329742
    2. ' a' → logprob: -1.8047760725021362
    3. '0' → logprob: -11.054776191711426
    4. ' ' → logprob: -12.804776191711426
    5. ',' → logprob: -12.929776191711426
    6. '(a' → logprob: -13.304776191711426
    7. '1' → logprob: -13.429776191711426
    8. 'b' → logprob: -13.554776191711426
    9. 'ab' → logprob: -13.929776191711426
    10. '	a' → logprob: -14.179776191711426

Token 23: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0414871871471405
    2. ' *' → logprob: -3.291487216949463
    3. '*b' → logprob: -5.791487216949463
    4. '**' → logprob: -8.666486740112305
    5. '*j' → logprob: -10.041486740112305
    6. '*r' → logprob: -10.666486740112305
    7. '*g' → logprob: -10.791486740112305
    8. '*a' → logprob: -11.041486740112305
    9. '*object' → logprob: -11.416486740112305
    10. '*c' → logprob: -11.416486740112305

Token 24: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10022716224193573
    2. ' b' → logprob: -2.350227117538452
    3. ' ' → logprob: -10.850227355957031
    4. ')b' → logprob: -15.350227355957031
    5. '	b' → logprob: -15.475227355957031
    6. ' б' → logprob: -15.600227355957031
    7. ' ' → logprob: -15.725227355957031
    8. '  ' → logprob: -16.35022735595703
    9. ',' → logprob: -17.22522735595703
    10. 's' → logprob: -17.41272735595703

Token 25: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5327004790306091
    2. ']' → logprob: -1.157700538635254
    3. ')' → logprob: -2.407700538635254
    4. ')]' → logprob: -4.907700538635254
    5. '])' → logprob: -7.532700538635254
    6. ' ]' → logprob: -7.657700538635254
    7. ' ,' → logprob: -8.657700538635254
    8. ' )' → logprob: -9.407700538635254
    9. ',)' → logprob: -11.032700538635254
    10. ')])' → logprob: -11.282700538635254

Token 26: 'l' (ID: 75)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6140341758728027
    2. '<|end|>' → logprob: -1.8640341758728027
    3. 'print' → logprob: -2.2390341758728027
    4. 'l' → logprob: -2.2390341758728027
    5. '
' → logprob: -3.2390341758728027
    6. '[' → logprob: -4.364034175872803
    7. '.' → logprob: -5.239034175872803
    8. ',
' → logprob: -5.364034175872803
    9. '```' → logprob: -5.489034175872803
    10. ')' → logprob: -5.864034175872803

Token 27: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18965770304203033
    2. '<|end|>' → logprob: -1.8146576881408691
    3. '<|end|>' → logprob: -5.689657688140869
    4. '.' → logprob: -6.064657688140869
    5. '```' → logprob: -6.189657688140869
    6. '.sort' → logprob: -8.439658164978027
    7. '\n' → logprob: -8.439658164978027
    8. '
' → logprob: -8.439658164978027
    9. '[l' → logprob: -8.689658164978027
    10. '[
' → logprob: -8.689658164978027

Token 28: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0059806969948112965
    2. '(' → logprob: -5.130980491638184
    3. '()`' → logprob: -10.505980491638184
    4. '()]' → logprob: -12.380980491638184
    5. '())' → logprob: -12.755980491638184
    6. '().' → logprob: -13.005980491638184
    7. ' ()' → logprob: -13.380980491638184
    8. '`()' → logprob: -13.505980491638184
    9. '()
' → logprob: -13.630980491638184
    10. '()

' → logprob: -13.755980491638184

Token 29: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011510594777064398
    2. '```' → logprob: -9.625115394592285
    3. 'for' → logprob: -10.000115394592285
    4. 'p' → logprob: -13.750115394592285
    5. 'pr' → logprob: -15.000115394592285
    6. '``' → logprob: -15.250115394592285
    7. 'l' → logprob: -15.375115394592285
    8. '[' → logprob: -15.375115394592285
    9. 'prin' → logprob: -15.375115394592285
    10. '`' → logprob: -15.500115394592285

Token 30: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3876751661300659
    2. '(l' → logprob: -1.137675166130066
    3. '(*' → logprob: -7.6376752853393555
    4. '("("' → logprob: -8.637675285339355
    5. '(len' → logprob: -10.012675285339355
    6. '((' → logprob: -10.512675285339355
    7. '()' → logprob: -11.262675285339355
    8. '(f' → logprob: -11.262675285339355
    9. '('' → logprob: -11.262675285339355
    10. '(list' → logprob: -12.262675285339355

Token 31: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890499383211136
    2. '[' → logprob: -2.5789051055908203
    3. '))' → logprob: -11.70390510559082
    4. ']' → logprob: -13.20390510559082
    5. '])' → logprob: -13.32890510559082
    6. '`)' → logprob: -14.07890510559082
    7. ' )' → logprob: -14.20390510559082
    8. ')`' → logprob: -14.57890510559082
    9. '[])' → logprob: -15.07890510559082
    10. '[-' → logprob: -15.45390510559082

Token 32: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06828727573156357
    2. '2' → logprob: -3.1932873725891113
    3. '-' → logprob: -3.6932873725891113
    4. '1' → logprob: -9.943286895751953
    5. ' ' → logprob: -10.818286895751953
    6. ' -' → logprob: -11.693286895751953
    7. '])' → logprob: -13.818286895751953
    8. ']' → logprob: -14.068286895751953
    9. ')' → logprob: -14.568286895751953
    10. '```' → logprob: -14.693286895751953

Token 33: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0011916564544662833
    2. ')' → logprob: -7.37619161605835
    3. ']' → logprob: -7.50119161605835
    4. ' ])' → logprob: -12.126192092895508
    5. '])
' → logprob: -12.751192092895508
    6. ')]' → logprob: -14.001192092895508
    7. ')])' → logprob: -14.126192092895508
    8. '],' → logprob: -14.501192092895508
    9. '))' → logprob: -14.626192092895508
    10. ']])' → logprob: -14.876192092895508


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 19.35%
Précision adaptée (1ère position): 19.35%
Précision (top 10): 83.87%
================================================================================
