================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def read_input():
    return input(), input()

def init_letter_lists():
    return [], [], [], []

def update_letter_count(letter, alp, num):
    idx = find_index(letter, alp)
    if idx != -1:
        num[idx] += 1
    else:
        alp.append(letter)
        num.append(1)

def find_index(letter, alp):
    for idx, char in enumerate(alp):
        if char == letter:
            return idx
    return -1

def process_step(i, s, t, alp_s, alp_t, num_s, num_t):
    process_letter(s[i], alp_s, num_s)
    process_letter(t[i], alp_t, num_t)
    return num_s, num_t

def process_letter(char, alp, num):
    cnt = 0
    for j in alp:
        if char == j:
            num[cnt] += 1
        cnt += 1
    if not char in alp:
        alp.append(char)
        num.append(1)

def print_and_quit(msg):
    print(msg)
    quit()

def check_num_lists(num_s, num_t):
    if num_s != num_t:
        print_and_quit('No')

def process_strings(s, t):
    alp_s, alp_t, num_s, num_t = init_letter_lists()
    for i in range(len(s)):
        process_letter(s[i], alp_s, num_s)
        process_letter(t[i], alp_t, num_t)
        check_num_lists(num_s, num_t)
    print('Yes')

def main():
    s, t = read_input()
    process_strings(s, t)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024338087532669306
    2. '```' → logprob: -7.252433776855469
    3. '\n' → logprob: -7.377433776855469
    4. '\' → logprob: -7.877433776855469
    5. 'import' → logprob: -8.002433776855469
    6. '<|end|>' → logprob: -9.252433776855469
    7. '.pi' → logprob: -10.127433776855469
    8. 'a' → logprob: -11.002433776855469
    9. '.e' → logprob: -11.127433776855469
    10. '<|end|>' → logprob: -11.127433776855469

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010168137960135937
    2. ' calculate' → logprob: -5.885168075561523
    3. ' math' → logprob: -6.010168075561523
    4. ' sqrt' → logprob: -6.135168075561523
    5. ' space' → logprob: -7.385168075561523
    6. '_' → logprob: -7.385168075561523
    7. ' factorial' → logprob: -7.385168075561523
    8. ' ' → logprob: -8.885168075561523
    9. ' f' → logprob: -9.135168075561523
    10. ' square' → logprob: -9.635168075561523

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03867602348327637
    2. '_' → logprob: -3.2886760234832764
    3. ' (' → logprob: -9.288676261901855
    4. '_:' → logprob: -9.288676261901855
    5. 's' → logprob: -9.413676261901855
    6. ':' → logprob: -10.038676261901855
    7. '(:' → logprob: -10.038676261901855
    8. '_line' → logprob: -10.413676261901855
    9. '():' → logprob: -10.538676261901855
    10. '```' → logprob: -10.538676261901855

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007518246304243803
    2. '_' → logprob: -5.132518291473389
    3. '():' → logprob: -7.257518291473389
    4. '```' → logprob: -8.88251781463623
    5. ' (' → logprob: -9.00751781463623
    6. ':' → logprob: -9.38251781463623
    7. '(_:' → logprob: -9.50751781463623
    8. '(_' → logprob: -9.50751781463623
    9. 's' → logprob: -9.88251781463623
    10. '):' → logprob: -9.88251781463623

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14513802528381348
    2. '():' → logprob: -2.7701380252838135
    3. '(' → logprob: -3.5201380252838135
    4. ':' → logprob: -3.8951380252838135
    5. '```' → logprob: -4.770137786865234
    6. ' ' → logprob: -5.270137786865234
    7. '()' → logprob: -5.520137786865234
    8. '  ' → logprob: -7.770137786865234
    9. 'return' → logprob: -7.895137786865234
    10. '    
' → logprob: -8.020137786865234

Token 8: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5461525917053223
    2. '   ' → logprob: -1.4211525917053223
    3. 'data' → logprob: -2.5461525917053223
    4. 'user' → logprob: -3.6711525917053223
    5. 'value' → logprob: -4.046152591705322
    6. 'input' → logprob: -4.046152591705322
    7. 'n' → logprob: -4.171152591705322
    8. 'line' → logprob: -4.671152591705322
    9. 'x' → logprob: -5.171152591705322
    10. ' return' → logprob: -5.921152591705322

Token 9: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6541260480880737
    2. ' ' → logprob: -1.5291260480880737
    3. ' input' → logprob: -1.5291260480880737
    4. ' float' → logprob: -3.4041261672973633
    5. 'int' → logprob: -5.654126167297363
    6. ' map' → logprob: -5.904126167297363
    7. ' list' → logprob: -5.904126167297363
    8. 'input' → logprob: -5.904126167297363
    9. ' math' → logprob: -7.404126167297363
    10. 'float' → logprob: -7.904126167297363

Token 10: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008015412837266922
    2. '()' → logprob: -5.0080156326293945
    3. '('' → logprob: -8.258015632629395
    4. '("("' → logprob: -8.508015632629395
    5. '(
' → logprob: -8.633015632629395
    6. ' ' → logprob: -8.758015632629395
    7. '```' → logprob: -9.508015632629395
    8. ''' → logprob: -9.633015632629395
    9. '(

' → logprob: -10.008015632629395
    10. '.' → logprob: -10.133015632629395

Token 11: ' input' (ID: 3422)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 12: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004419935867190361
    2. '(' → logprob: -8.250441551208496
    3. '`()' → logprob: -9.500441551208496
    4. '()
' → logprob: -10.625441551208496
    5. '```' → logprob: -11.000441551208496
    6. '()`' → logprob: -11.125441551208496
    7. ')' → logprob: -11.250441551208496
    8. '()

' → logprob: -11.375441551208496
    9. '().' → logprob: -12.000441551208496
    10. ' ()' → logprob: -12.500441551208496

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3237151801586151
    2. 'a' → logprob: -2.1987152099609375
    3. 'x' → logprob: -2.1987152099609375
    4. 'number' → logprob: -3.8237152099609375
    5. 'value' → logprob: -5.0737152099609375
    6. 'num' → logprob: -5.0737152099609375
    7. 'result' → logprob: -5.3237152099609375
    8. 'n' → logprob: -5.4487152099609375
    9. 'radius' → logprob: -6.0737152099609375
    10. '```' → logprob: -7.0737152099609375

Token 14: ' init' (ID: 6327)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5143265724182129
    2. ' math' → logprob: -1.139326572418213
    3. ' add' → logprob: -3.764326572418213
    4. ' main' → logprob: -3.764326572418213
    5. ' compute' → logprob: -4.389326572418213
    6. '_' → logprob: -4.514326572418213
    7. '_math' → logprob: -6.389326572418213
    8. ' square' → logprob: -6.889326572418213
    9. 'calculate' → logprob: -7.014326572418213
    10. ' area' → logprob: -7.139326572418213

Token 15: '_letter' (ID: 120621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16490504145622253
    2. '_math' → logprob: -3.039905071258545
    3. '_params' → logprob: -4.039905071258545
    4. '(' → logprob: -4.164905071258545
    5. '_array' → logprob: -4.289905071258545
    6. '_val' → logprob: -4.664905071258545
    7. 'ialize' → logprob: -5.539905071258545
    8. '_vector' → logprob: -5.789905071258545
    9. '_space' → logprob: -5.914905071258545
    10. '_parameters' → logprob: -6.039905071258545

Token 16: '_lists' (ID: 93609)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.08995331078767776
    2. '_frequency' → logprob: -4.089953422546387
    3. '_count' → logprob: -4.339953422546387
    4. 's' → logprob: -4.339953422546387
    5. '_counter' → logprob: -4.464953422546387
    6. '_freq' → logprob: -4.589953422546387
    7. '_map' → logprob: -4.964953422546387
    8. '_s' → logprob: -5.464953422546387
    9. '_f' → logprob: -5.839953422546387
    10. '_' → logprob: -6.464953422546387

Token 17: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0064245061948895454
    2. '()' → logprob: -5.131424427032471
    3. '(' → logprob: -8.006424903869629
    4. ' ():' → logprob: -8.881424903869629
    5. ' ()' → logprob: -11.756424903869629
    6. '():
' → logprob: -12.131424903869629
    7. ':' → logprob: -12.881424903869629
    8. '):' → logprob: -14.381424903869629
    9. '(name' → logprob: -14.631424903869629
    10. '(s' → logprob: -14.631424903869629

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004159125965088606
    2. 'a' → logprob: -5.754158973693848
    3. '[]' → logprob: -8.754158973693848
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -8.879158973693848
    5. '    ' → logprob: -9.004158973693848
    6. ' ' → logprob: -9.254158973693848
    7. ' a' → logprob: -9.504158973693848
    8. '    
' → logprob: -10.129158973693848
    9. '<|end|>' → logprob: -10.129158973693848
    10. 'A' → logprob: -10.379158973693848

Token 19: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29959118366241455
    2. ' return' → logprob: -2.549591064453125
    3. 'a' → logprob: -3.424591064453125
    4. 'v' → logprob: -3.674591064453125
    5. ' [' → logprob: -3.924591064453125
    6. ' vowels' → logprob: -4.174591064453125
    7. 'return' (adapté à ' return') → logprob: -4.299591064453125
    8. ' a' → logprob: -4.549591064453125
    9. '[' → logprob: -4.674591064453125
    10. ' letters' → logprob: -5.424591064453125

Token 20: ' [],' (ID: 22188)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9195713996887207
    2. '[],' → logprob: -1.0445713996887207
    3. ' [],' → logprob: -2.0445713996887207
    4. ' [' → logprob: -2.9195713996887207
    5. '[]' → logprob: -4.044571399688721
    6. ' [[]' → logprob: -4.294571399688721
    7. '['' → logprob: -4.669571399688721
    8. '([],' → logprob: -5.169571399688721
    9. '[['' → logprob: -5.169571399688721
    10. ' []' → logprob: -5.169571399688721

Token 21: ' [],' (ID: 22188)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.013005275279283524
    2. '[]' → logprob: -4.638005256652832
    3. ' [],' → logprob: -5.763005256652832
    4. ' ' → logprob: -10.263005256652832
    5. '[],' → logprob: -10.388005256652832
    6. ' []
' → logprob: -10.763005256652832
    7. ' []

' → logprob: -11.763005256652832
    8. ' [];' → logprob: -13.513005256652832
    9. ' [])' → logprob: -13.763005256652832
    10. ' {}' → logprob: -14.263005256652832

Token 22: ' [],' (ID: 22188)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0174860842525959
    2. '[]' → logprob: -4.142486095428467
    3. ' [],' → logprob: -6.767486095428467
    4. ' []
' → logprob: -8.642485618591309
    5. ' []

' → logprob: -10.142485618591309
    6. ' ' → logprob: -10.142485618591309
    7. '[],' → logprob: -10.892485618591309
    8. '[]
' → logprob: -12.017485618591309
    9. ' []
' → logprob: -12.142485618591309
    10. '  ' → logprob: -13.079985618591309

Token 23: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.02833976224064827
    2. '[]' → logprob: -3.6533398628234863
    3. ' [],' → logprob: -6.278339862823486
    4. ' []
' → logprob: -10.028339385986328
    5. ' ' → logprob: -10.153339385986328
    6. '[],' → logprob: -10.278339385986328
    7. ' []

' → logprob: -10.778339385986328
    8. '  ' → logprob: -12.653339385986328
    9. '[]
' → logprob: -12.653339385986328
    10. '<|end|>' → logprob: -12.653339385986328

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001996323699131608
    2. '
' → logprob: -6.5019965171813965
    3. '

' → logprob: -8.376996040344238
    4. '<|end|>' → logprob: -9.376996040344238
    5. '<|end|>' → logprob: -9.501996040344238
    6. '```' → logprob: -9.876996040344238
    7. 'a' → logprob: -11.126996040344238
    8. ' def' → logprob: -11.626996040344238
    9. '\' → logprob: -12.126996040344238
    10. 'd' → logprob: -12.751996040344238

Token 25: ' update' (ID: 4027)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.7589707970619202
    2. ' count' → logprob: -1.8839707374572754
    3. ' calculate' → logprob: -2.7589707374572754
    4. ' check' → logprob: -2.8839707374572754
    5. ' compare' → logprob: -3.2589707374572754
    6. ' find' → logprob: -3.6339707374572754
    7. ' compute' → logprob: -3.6339707374572754
    8. ' sort' → logprob: -3.7589707374572754
    9. ' main' → logprob: -4.008970737457275
    10. ' classify' → logprob: -4.383970737457275

Token 26: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.3377816081047058
    2. '_lists' → logprob: -1.3377816677093506
    3. '_letters' → logprob: -3.9627816677093506
    4. '_' → logprob: -5.7127814292907715
    5. '_counts' → logprob: -7.0877814292907715
    6. '_list' → logprob: -7.8377814292907715
    7. '(' → logprob: -9.33778190612793
    8. '_char' → logprob: -9.83778190612793
    9. '(letter' → logprob: -9.83778190612793
    10. '(_' → logprob: -10.08778190612793

Token 27: '_count' (ID: 7536)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.04875893145799637
    2. '_counts' → logprob: -3.0487589836120605
    3. 's' → logprob: -9.673758506774902
    4. '_sets' → logprob: -10.798758506774902
    5. '_indices' → logprob: -11.298758506774902
    6. '_positions' → logprob: -11.423758506774902
    7. '_list' → logprob: -11.423758506774902
    8. '_arrays' → logprob: -12.173758506774902
    9. '_ranges' → logprob: -12.298758506774902
    10. '_' → logprob: -12.423758506774902

Token 28: '(letter' (ID: 142899)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2438761293888092
    2. '(' → logprob: -2.1188762187957764
    3. '(s' → logprob: -2.3688762187957764
    4. '(letter' → logprob: -6.368875980377197
    5. '(char' → logprob: -8.868876457214355
    6. '(word' → logprob: -8.993876457214355
    7. '_s' → logprob: -9.243876457214355
    8. '(a' → logprob: -9.368876457214355
    9. '(line' → logprob: -9.618876457214355
    10. '_' → logprob: -9.993876457214355

Token 29: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32126060128211975
    2. ',' → logprob: -1.3212605714797974
    3. ')' → logprob: -6.196260452270508
    4. '):' → logprob: -6.446260452270508
    5. '_counts' → logprob: -6.571260452270508
    6. '_s' → logprob: -7.321260452270508
    7. ',s' → logprob: -7.446260452270508
    8. '_lists' → logprob: -7.946260452270508
    9. ')s' → logprob: -8.321260452270508
    10. '_list' → logprob: -8.321260452270508

Token 30: ' alp' (ID: 107692)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -1.0255600214004517
    2. ' letter' → logprob: -1.7755600214004517
    3. ' counts' → logprob: -2.275559902191162
    4. 'lists' → logprob: -2.525559902191162
    5. 'letter' → logprob: -2.900559902191162
    6. 'a' → logprob: -3.275559902191162
    7. ' count' → logprob: -3.400559902191162
    8. 'count' → logprob: -3.525559902191162
    9. ' a' → logprob: -3.650559902191162
    10. 'list' → logprob: -3.900559902191162

Token 31: ',' (ID: 11)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6234852075576782
    2. 'ha' → logprob: -0.8734852075576782
    3. 'has' → logprob: -3.9984850883483887
    4. 'hab' → logprob: -3.9984850883483887
    5. 'hat' → logprob: -5.873485088348389
    6. 'hs' → logprob: -6.248485088348389
    7. 'hah' → logprob: -7.560985088348389
    8. 'hac' → logprob: -7.935985088348389
    9. 'hap' → logprob: -8.185985565185547
    10. ')' → logprob: -8.373485565185547

Token 32: ' num' (ID: 2269)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.9913938045501709
    2. ' counts' → logprob: -1.116393804550171
    3. 'count' → logprob: -2.241393804550171
    4. 'counts' → logprob: -3.241393804550171
    5. ' lists' → logprob: -3.741393804550171
    6. ' alp' → logprob: -3.866393804550171
    7. ' cnt' → logprob: -4.55389404296875
    8. ' lst' → logprob: -4.61639404296875
    9. ' letter' → logprob: -4.74139404296875
    10. 'lst' → logprob: -4.74139404296875

Token 33: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3195381760597229
    2. 'h' → logprob: -1.9445381164550781
    3. 'hs' → logprob: -2.944538116455078
    4. 's' → logprob: -3.194538116455078
    5. '_counts' → logprob: -4.694538116455078
    6. ',' → logprob: -4.694538116455078
    7. 'er' → logprob: -5.819538116455078
    8. '_count' → logprob: -6.444538116455078
    9. '):' → logprob: -6.819538116455078
    10. '_counter' → logprob: -6.819538116455078

Token 34: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0663111209869385
    2. '   ' → logprob: -1.0663111209869385
    3. ':' → logprob: -1.3163111209869385
    4. '):' → logprob: -4.816310882568359
    5. ' ' → logprob: -4.941310882568359
    6. '[num' → logprob: -5.316310882568359
    7. '[:]' → logprob: -5.816310882568359
    8. '  ' → logprob: -5.941310882568359
    9. ',' → logprob: -6.191310882568359
    10. '<|end|>' → logprob: -6.316310882568359

Token 35: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6970208287239075
    2. 'if' → logprob: -0.8220208287239075
    3. ' if' → logprob: -2.8220207691192627
    4. 'num' → logprob: -7.072021007537842
    5. 'index' → logprob: -7.447021007537842
    6. 'alp' → logprob: -7.697021007537842
    7. 'for' → logprob: -7.822021007537842
    8. ' ' → logprob: -9.197020530700684
    9. 'idx' (adapté à ' idx') → logprob: -9.197020530700684
    10. '  ' → logprob: -9.322020530700684

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18371827900409698
    2. '=' → logprob: -1.8087183237075806
    3. 'ex' → logprob: -6.308718204498291
    4. ' ' → logprob: -7.558718204498291
    5. 'x' → logprob: -7.683718204498291
    6. 's' → logprob: -8.05871868133545
    7. '   ' → logprob: -8.55871868133545
    8. ' +=' → logprob: -9.05871868133545
    9. ')' → logprob: -9.30871868133545
    10. '=int' → logprob: -9.68371868133545

Token 37: ' find' (ID: 1646)
  Prédit: ' alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alp' → logprob: -0.3193584680557251
    2. ' ord' → logprob: -1.444358468055725
    3. 'alp' → logprob: -3.6943583488464355
    4. 'ord' → logprob: -4.9443583488464355
    5. ' alph' → logprob: -6.5693583488464355
    6. ' al' → logprob: -6.6943583488464355
    7. ' ' → logprob: -7.5693583488464355
    8. ' alphabet' → logprob: -7.5693583488464355
    9. '   ' → logprob: -7.8818583488464355
    10. '(ord' → logprob: -8.319358825683594

Token 38: '_index' (ID: 7748)
  Prédit: '_letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.13442975282669067
    2. 'ex' → logprob: -2.884429693222046
    3. '_index' → logprob: -3.259429693222046
    4. '(letter' → logprob: -4.509429931640625
    5. '_' → logprob: -5.384429931640625
    6. '_in' → logprob: -5.509429931640625
    7. 'letter' → logprob: -6.509429931640625
    8. '(al' → logprob: -6.634429931640625
    9. 'er' → logprob: -6.759429931640625
    10. 'ter' → logprob: -7.134429931640625

Token 39: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.14918415248394012
    2. '(al' → logprob: -2.274184226989746
    3. '(' → logprob: -3.399184226989746
    4. '(ap' → logprob: -6.899184226989746
    5. '(l' → logprob: -8.024184226989746
    6. '(a' → logprob: -8.524184226989746
    7. 'letter' → logprob: -8.899184226989746
    8. '_(' → logprob: -9.149184226989746
    9. ' (' → logprob: -9.899184226989746
    10. 'alp' → logprob: -10.024184226989746

Token 40: ',' (ID: 11)
  Prédit: '(al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(al' → logprob: -0.8701885938644409
    2. ',' → logprob: -1.245188593864441
    3. '(' → logprob: -1.370188593864441
    4. ' (' → logprob: -4.3701887130737305
    5. '(letter' → logprob: -4.3701887130737305
    6. ')' → logprob: -4.7451887130737305
    7. ' ,' → logprob: -6.8701887130737305
    8. '(ap' → logprob: -7.1201887130737305
    9. '   ' → logprob: -7.2451887130737305
    10. '(l' → logprob: -7.4951887130737305

Token 41: ' alp' (ID: 107692)
  Prédit: ' alp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alp' → logprob: -0.03065311163663864
    2. 'alp' → logprob: -3.5306529998779297
    3. ' al' → logprob: -8.03065299987793
    4. ' alph' → logprob: -8.28065299987793
    5. ' alb' → logprob: -9.65565299987793
    6. ' alphabet' → logprob: -9.90565299987793
    7. ' letter' → logprob: -10.15565299987793
    8. 'al' → logprob: -10.28065299987793
    9. ')' → logprob: -10.96815299987793
    10. ' ' → logprob: -11.21815299987793

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026860633864998817
    2. ',' → logprob: -3.6518607139587402
    3. ')
' → logprob: -8.276860237121582
    4. ' )' → logprob: -9.401860237121582
    5. ' ,' → logprob: -9.901860237121582
    6. '[' → logprob: -10.276860237121582
    7. '(' → logprob: -10.651860237121582
    8. ')
' → logprob: -11.151860237121582
    9. ')

' → logprob: -11.151860237121582
    10. '   ' → logprob: -11.401860237121582

Token 43: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8121688365936279
    2. 'if' → logprob: -0.9371688365936279
    3. '   ' → logprob: -2.062168836593628
    4. ' ' → logprob: -4.437169075012207
    5. ')' → logprob: -4.687169075012207
    6. 'num' → logprob: -5.312169075012207
    7. '    ' → logprob: -6.062169075012207
    8. '<|end|>' → logprob: -6.562169075012207
    9. ',' → logprob: -6.687169075012207
    10. '```' → logprob: -6.937169075012207

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5958228707313538
    2. 'if' (adapté à ' if') → logprob: -0.9708228707313538
    3. ' ' → logprob: -3.595822811126709
    4. ')' → logprob: -4.095822811126709
    5. '   ' → logprob: -4.220822811126709
    6. '    ' → logprob: -6.220822811126709
    7. 'num' → logprob: -6.220822811126709
    8. ' +' → logprob: -6.970822811126709
    9. '<|end|>' → logprob: -7.095822811126709
    10. '(' → logprob: -7.095822811126709

Token 45: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0032200184650719166
    2. 'idx' → logprob: -5.753220081329346
    3. ' ' → logprob: -10.378219604492188
    4. '	idx' → logprob: -12.628219604492188
    5. '(idx' → logprob: -12.628219604492188
    6. ' num' → logprob: -13.253219604492188
    7. ' not' → logprob: -14.003219604492188
    8. '[idx' → logprob: -14.253219604492188
    9. ' index' → logprob: -15.378219604492188
    10. '  ' → logprob: -15.503219604492188

Token 46: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.1763999462127686
    2. ' is' → logprob: -1.5513999462127686
    3. ' !=' → logprob: -1.8013999462127686
    4. '==' → logprob: -2.1763999462127686
    5. '>=' → logprob: -2.5513999462127686
    6. ' ==' → logprob: -2.9263999462127686
    7. 'is' → logprob: -3.1763999462127686
    8. '!=-' → logprob: -4.801400184631348
    9. '=' → logprob: -4.926400184631348
    10. ' >=' → logprob: -5.301400184631348

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.055302537977695465
    2. ' -' → logprob: -2.930302619934082
    3. 'None' → logprob: -8.305302619934082
    4. ' None' → logprob: -8.805302619934082
    5. ' ' → logprob: -10.805302619934082
    6. '   ' → logprob: -13.805302619934082
    7. '  ' → logprob: -14.055302619934082
    8. '0' → logprob: -15.055302619934082
    9. '_None' → logprob: -16.055301666259766
    10. '-none' → logprob: -16.492801666259766

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033784625702537596
    2. ' ' → logprob: -8.000337600708008
    3. '<|end|>' → logprob: -14.125337600708008
    4. '   ' → logprob: -14.500337600708008
    5. '```' → logprob: -14.750337600708008
    6. '  ' → logprob: -15.375337600708008
    7. '    ' → logprob: -15.875337600708008
    8. '2' → logprob: -16.250337600708008
    9. ')' → logprob: -17.187837600708008
    10. '-' → logprob: -17.312837600708008

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0046659111976623535
    2. ':
' → logprob: -5.504665851593018
    3. ' :' → logprob: -7.879665851593018
    4. '   ' → logprob: -9.379666328430176
    5. '):' → logprob: -10.004666328430176
    6. '       ' → logprob: -10.754666328430176
    7. ' :
' → logprob: -11.129666328430176
    8. ',' → logprob: -11.254666328430176
    9. '):
' → logprob: -11.879666328430176
    10. '    ' → logprob: -12.504666328430176

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010419333353638649
    2. ':' → logprob: -5.6354193687438965
    3. '   ' → logprob: -6.0104193687438965
    4. '    ' → logprob: -6.5104193687438965
    5. ' num' → logprob: -7.3854193687438965
    6. ' :' → logprob: -7.7604193687438965
    7. ' ' → logprob: -8.135418891906738
    8. 'num' → logprob: -8.385418891906738
    9. ')' → logprob: -8.760418891906738
    10. '):' → logprob: -8.885418891906738

Token 51: ' num' (ID: 2269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6634266972541809
    2. ' num' → logprob: -1.0384266376495361
    3. 'num' (adapté à ' num') → logprob: -2.288426637649536
    4. '   ' → logprob: -3.913426637649536
    5. '           ' → logprob: -5.288426876068115
    6. ' ' → logprob: -6.288426876068115
    7. '	num' → logprob: -7.913426876068115
    8. '    ' → logprob: -8.663426399230957
    9. '  ' → logprob: -8.663426399230957
    10. '
' → logprob: -8.725926399230957

Token 52: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0008547629113309085
    2. '[' → logprob: -8.0008544921875
    3. '+=' → logprob: -8.0008544921875
    4. '```' → logprob: -9.3758544921875
    5. ' +=' → logprob: -10.0008544921875
    6. '   ' → logprob: -10.8758544921875
    7. '[i' → logprob: -12.2508544921875
    8. '+' → logprob: -12.3758544921875
    9. 's' → logprob: -12.5008544921875
    10. ']+=' → logprob: -12.6258544921875

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018001272110268474
    2. ']+=' → logprob: -6.376800060272217
    3. ' ]' → logprob: -9.501800537109375
    4. '']' → logprob: -11.501800537109375
    5. '[' → logprob: -12.501800537109375
    6. '   ' → logprob: -13.251800537109375
    7. '`]' → logprob: -13.251800537109375
    8. '+=' → logprob: -13.876800537109375
    9. ']+' → logprob: -14.001800537109375
    10. '"]' → logprob: -14.251800537109375

Token 54: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08000393956899643
    2. ' +=' → logprob: -2.5800039768218994
    3. ']+=' → logprob: -7.70500373840332
    4. '=' → logprob: -7.83000373840332
    5. '+' → logprob: -8.33000373840332
    6. '[' → logprob: -11.20500373840332
    7. ']' → logprob: -13.33000373840332
    8. ' ' → logprob: -13.33000373840332
    9. '   ' → logprob: -13.33000373840332
    10. ' =' → logprob: -13.83000373840332

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804241120815277
    2. ' ' → logprob: -3.2880423069000244
    3. '   ' → logprob: -14.538042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '  ' → logprob: -16.163042068481445
    6. '<|end|>' → logprob: -16.288042068481445
    7. '```' → logprob: -16.850542068481445
    8. '+' → logprob: -17.288042068481445
    9. '۱' → logprob: -18.413042068481445
    10. '    ' → logprob: -18.600542068481445

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.00002098083496
    4. '<|end|>' → logprob: -18.00002098083496
    5. '```' → logprob: -18.62502098083496
    6. '  ' → logprob: -19.25002098083496
    7. '+' → logprob: -19.62502098083496
    8. '.' → logprob: -20.37502098083496
    9. '>' → logprob: -20.62502098083496
    10. '۱' → logprob: -20.75002098083496

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.797890841960907
    2. '<|end|>' → logprob: -0.797890841960907
    3. '\n' → logprob: -2.9228909015655518
    4. '   ' → logprob: -4.047890663146973
    5. '    
' → logprob: -5.172890663146973
    6. '```' → logprob: -5.172890663146973
    7. '<|end|>' → logprob: -5.422890663146973
    8. ' 
' → logprob: -6.172890663146973
    9. 'def' → logprob: -6.297890663146973
    10. 'return' → logprob: -6.547890663146973

Token 58: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03387090191245079
    2. 'def' → logprob: -4.408870697021484
    3. '   ' → logprob: -4.783870697021484
    4. '<|end|>' → logprob: -5.408870697021484
    5. '    
' → logprob: -5.658870697021484
    6. '```' → logprob: -6.408870697021484
    7. '\n' → logprob: -6.658870697021484
    8. '  
' → logprob: -7.408870697021484
    9. '

' → logprob: -7.533870697021484
    10. ' 
' → logprob: -8.533870697021484

Token 59: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19979581236839294
    2. '   ' → logprob: -1.9497958421707153
    3. '       ' → logprob: -3.824795722961426
    4. ':
' → logprob: -5.824795722961426
    5. 'num' → logprob: -5.949795722961426
    6. ',' → logprob: -5.949795722961426
    7. ' num' → logprob: -6.449795722961426
    8. '    ' → logprob: -6.699795722961426
    9. 'alp' → logprob: -6.699795722961426
    10. ' alp' → logprob: -6.699795722961426

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4072321653366089
    2. '   ' → logprob: -1.5322321653366089
    3. 'pass' → logprob: -3.0322322845458984
    4. ' pass' → logprob: -3.4072322845458984
    5. 'return' → logprob: -4.032232284545898
    6. ' return' → logprob: -4.532232284545898
    7. 'num' → logprob: -5.157232284545898
    8. ' None' → logprob: -6.907232284545898
    9. ' num' → logprob: -7.282232284545898
    10. 'None' → logprob: -8.157232284545898

Token 62: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' (adapté à ' alp') → logprob: -0.0030717141926288605
    2. '   ' → logprob: -6.5030717849731445
    3. ' alp' → logprob: -6.7530717849731445
    4. 'pass' → logprob: -8.003071784973145
    5. '       ' → logprob: -10.878071784973145
    6. 'alb' → logprob: -11.378071784973145
    7. 'alph' → logprob: -11.503071784973145
    8. ' pass' → logprob: -12.128071784973145
    9. 'al' → logprob: -12.628071784973145
    10. 'ap' → logprob: -13.128071784973145

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0014217838179320097
    2. '.' → logprob: -6.626421928405762
    3. 'append' → logprob: -9.501421928405762
    4. ' .' → logprob: -12.126421928405762
    5. ' append' → logprob: -12.626421928405762
    6. '.Append' → logprob: -12.626421928405762
    7. '.add' → logprob: -12.876421928405762
    8. '.extend' → logprob: -13.126421928405762
    9. '_append' → logprob: -13.501421928405762
    10. '.app' → logprob: -13.626421928405762

Token 64: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.0009125363430939615
    2. '(' → logprob: -7.000912666320801
    3. 'letter' → logprob: -14.2509126663208
    4. '('' → logprob: -16.125911712646484
    5. '(ord' → logprob: -17.000911712646484
    6. ' (' → logprob: -17.125911712646484
    7. '(let' → logprob: -17.500911712646484
    8. '(token' → logprob: -17.500911712646484
    9. '(word' → logprob: -17.625911712646484
    10. '(l' → logprob: -17.750911712646484

Token 65: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03377306088805199
    2. ')' → logprob: -3.4087729454040527
    3. ')
' → logprob: -9.158773422241211
    4. '),' → logprob: -11.658773422241211
    5. '   ' → logprob: -12.033773422241211
    6. '       ' → logprob: -12.533773422241211
    7. ',' → logprob: -13.658773422241211
    8. ')

' → logprob: -14.283773422241211
    9. '')
' → logprob: -14.283773422241211
    10. ' )
' → logprob: -14.783773422241211

Token 66: '       ' (ID: 309)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1113739162683487
    2. '   ' → logprob: -2.6113739013671875
    3. '       ' → logprob: -3.4863739013671875
    4. ' num' → logprob: -6.7363739013671875
    5. '	num' → logprob: -9.236373901367188
    6. '           ' → logprob: -10.986373901367188
    7. 'n' → logprob: -10.986373901367188
    8. '```' → logprob: -11.361373901367188
    9. '  ' → logprob: -12.736373901367188
    10. ',num' → logprob: -12.986373901367188

Token 67: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -1.3425219549390022e-05
    2. ' num' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. '       ' → logprob: -16.37501335144043
    5. '	num' → logprob: -17.75001335144043
    6. 'nu' → logprob: -19.50001335144043
    7. '           ' → logprob: -19.50001335144043
    8. 'n' → logprob: -20.50001335144043
    9. '1' → logprob: -21.12501335144043
    10. '_num' → logprob: -21.25001335144043

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006717863027006388
    2. '.' → logprob: -5.006717681884766
    3. '.app' → logprob: -13.256717681884766
    4. ' .' → logprob: -15.381717681884766
    5. 'append' → logprob: -15.381717681884766
    6. '.Append' → logprob: -16.006717681884766
    7. '.ap' → logprob: -16.131717681884766
    8. '].' → logprob: -17.256717681884766
    9. '.extend' → logprob: -18.381717681884766
    10. '.insert' → logprob: -18.381717681884766

Token 69: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011047935113310814
    2. '1' → logprob: -4.511047840118408
    3. ' (' → logprob: -17.01104736328125
    4. ' ' → logprob: -17.13604736328125
    5. '   ' → logprob: -17.63604736328125
    6. '(
' → logprob: -17.88604736328125
    7. '```' → logprob: -19.13604736328125
    8. '[' → logprob: -20.51104736328125
    9. '(int' → logprob: -20.63604736328125
    10. ')' → logprob: -20.63604736328125

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '0' → logprob: -17.375001907348633
    5. ')' → logprob: -18.250001907348633
    6. '  ' → logprob: -20.250001907348633
    7. '' → logprob: -20.500001907348633
    8. '１' → logprob: -20.625001907348633
    9. '       ' → logprob: -20.875001907348633
    10. '    ' → logprob: -20.937501907348633

Token 71: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023739055905025452
    2. '<|end|>' → logprob: -8.500237464904785
    3. ')
' → logprob: -11.125237464904785
    4. ')return' → logprob: -11.375237464904785
    5. ' )' → logprob: -12.625237464904785
    6. '<|end|>' → logprob: -13.250237464904785
    7. '   ' → logprob: -13.750237464904785
    8. '
' → logprob: -14.500237464904785
    9. '```' → logprob: -15.000237464904785
    10. '),' → logprob: -16.25023651123047

Token 72: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007955804467201233
    2. '
' → logprob: -5.757956027984619
    3. '\' → logprob: -6.257956027984619
    4. 'd' → logprob: -7.007956027984619
    5. '<|end|>' → logprob: -7.132956027984619
    6. '```' → logprob: -7.632956027984619
    7. '_' → logprob: -8.257955551147461
    8. '

' → logprob: -9.507955551147461
    9. '\n' → logprob: -9.507955551147461
    10. ' def' → logprob: -9.632955551147461

Token 73: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.04975154623389244
    2. 'find' → logprob: -3.0497515201568604
    3. ' main' → logprob: -8.674751281738281
    4. ' count' → logprob: -8.674751281738281
    5. ' read' → logprob: -8.799751281738281
    6. 'count' → logprob: -8.924751281738281
    7. ' compare' → logprob: -9.049751281738281
    8. ' process' → logprob: -9.174751281738281
    9. 'compare' → logprob: -10.049751281738281
    10. ' update' → logprob: -10.174751281738281

Token 74: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00026217024424113333
    2. '_' → logprob: -8.250262260437012
    3. ' _' → logprob: -14.750262260437012
    4. '_indices' → logprob: -16.250261306762695
    5. '_idx' → logprob: -16.875261306762695
    6. '__' → logprob: -16.875261306762695
    7. '_INDEX' → logprob: -17.125261306762695
    8. '_indexes' → logprob: -17.125261306762695
    9. 'index' → logprob: -17.375261306762695
    10. '```' → logprob: -17.875261306762695

Token 75: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.016118124127388
    2. '(' → logprob: -4.141118049621582
    3. '(line' → logprob: -11.141118049621582
    4. ' (' → logprob: -11.141118049621582
    5. '(token' → logprob: -11.516118049621582
    6. '(word' → logprob: -12.016118049621582
    7. '(l' → logprob: -12.641118049621582
    8. '(atom' → logprob: -12.766118049621582
    9. '(lst' → logprob: -12.891118049621582
    10. '(a' → logprob: -12.891118049621582

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. ' ,' → logprob: -10.000045776367188
    3. ',
' → logprob: -16.375045776367188
    4. ',array' → logprob: -16.375045776367188
    5. ',list' → logprob: -16.750045776367188
    6. '‌,' → logprob: -17.125045776367188
    7. ',l' → logprob: -17.375045776367188
    8. ',line' → logprob: -18.125045776367188
    9. ',user' → logprob: -18.375045776367188
    10. ',List' → logprob: -18.375045776367188

Token 77: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.2555880844593048
    2. ' alp' → logprob: -1.5055880546569824
    3. 'al' → logprob: -7.380588054656982
    4. 'list' → logprob: -7.630588054656982
    5. ' al' → logprob: -7.755588054656982
    6. 'arr' → logprob: -7.880588054656982
    7. 'alph' → logprob: -8.13058853149414
    8. ' list' → logprob: -8.25558853149414
    9. 'alphabet' → logprob: -8.50558853149414
    10. 'lst' → logprob: -8.50558853149414

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010475777089595795
    2. '):
' → logprob: -6.876047611236572
    3. ')' → logprob: -11.376047134399414
    4. '):
' → logprob: -13.626047134399414
    5. ' ):' → logprob: -13.751047134399414
    6. ':' → logprob: -15.126047134399414
    7. '   ' → logprob: -15.876047134399414
    8. '=' → logprob: -16.001047134399414
    9. '}:' → logprob: -16.376047134399414
    10. '[]):' → logprob: -16.376047134399414

Token 79: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14529970288276672
    2. '   ' → logprob: -2.2702996730804443
    3. 'for' → logprob: -3.7702996730804443
    4. ' try' → logprob: -4.895299911499023
    5. 'try' → logprob: -6.645299911499023
    6. '```' → logprob: -10.270299911499023
    7. ' ' → logprob: -10.520299911499023
    8. '	for' → logprob: -10.770299911499023
    9. ' if' → logprob: -11.395299911499023
    10. '0' → logprob: -11.645299911499023

Token 80: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.043027736246585846
    2. 'try' → logprob: -3.293027639389038
    3. ' for' → logprob: -5.543027877807617
    4. '   ' → logprob: -7.043027877807617
    5. ' try' → logprob: -8.918027877807617
    6. '```' → logprob: -10.168027877807617
    7. 'if' → logprob: -11.293027877807617
    8. '	for' → logprob: -14.793027877807617
    9. 'return' → logprob: -15.293027877807617
    10. '	try' → logprob: -15.668027877807617

Token 81: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004225254990160465
    2. ' idx' → logprob: -5.754225254058838
    3. 'i' → logprob: -6.879225254058838
    4. ' index' → logprob: -11.254225730895996
    5. 'idx' → logprob: -12.629225730895996
    6. '	i' → logprob: -14.004225730895996
    7. ' ' → logprob: -14.754225730895996
    8. '   ' → logprob: -15.379225730895996
    9. 'index' → logprob: -15.629225730895996
    10. '(i' → logprob: -16.00422477722168

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001741935731843114
    2. ' in' → logprob: -6.376741886138916
    3. ' ,' → logprob: -10.376742362976074
    4. 'in' → logprob: -12.501742362976074
    5. ' ' → logprob: -13.251742362976074
    6. '0' → logprob: -14.501742362976074
    7. ',line' → logprob: -14.626742362976074
    8. ',char' → logprob: -14.876742362976074
    9. ',item' → logprob: -15.501742362976074
    10. ',value' → logprob: -15.501742362976074

Token 83: ' char' (ID: 1826)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5961408615112305
    2. ' val' → logprob: -1.2211408615112305
    3. ' ch' → logprob: -2.7211408615112305
    4. 'val' → logprob: -3.9711408615112305
    5. ' char' → logprob: -4.3461408615112305
    6. 'ch' → logprob: -4.7211408615112305
    7. 'l' → logprob: -4.8461408615112305
    8. 'char' → logprob: -4.8461408615112305
    9. 'alp' → logprob: -4.8461408615112305
    10. ' value' → logprob: -5.5961408615112305

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254994809627533
    2. 'in' → logprob: -1.6004995107650757
    3. ' ' → logprob: -10.350499153137207
    4. 's' → logprob: -10.975499153137207
    5. 'enumer' → logprob: -11.975499153137207
    6. 'n' → logprob: -12.725499153137207
    7. ')' → logprob: -12.850499153137207
    8. '	in' → logprob: -12.975499153137207
    9. 'inthe' → logprob: -13.100499153137207
    10. 'ine' → logprob: -13.350499153137207

Token 85: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.20141451060771942
    2. 'enumer' → logprob: -1.7014144659042358
    3. 'Enumer' → logprob: -14.451414108276367
    4. '.enumer' → logprob: -15.826414108276367
    5. '```' → logprob: -15.951414108276367
    6. 'en' → logprob: -16.201414108276367
    7. '(en' → logprob: -16.451414108276367
    8. ' enumer' → logprob: -16.576414108276367
    9. 'enum' → logprob: -16.576414108276367
    10. ' enumeration' → logprob: -18.451414108276367

Token 86: '(al' (ID: 34063)
  Prédit: '(al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(al' → logprob: -0.00012070851516909897
    2. '(ap' → logprob: -9.125121116638184
    3. 'alp' → logprob: -11.500121116638184
    4. '(' → logprob: -14.125121116638184
    5. 'al' → logprob: -14.625121116638184
    6. ' alp' → logprob: -15.250121116638184
    7. '	al' → logprob: -16.125120162963867
    8. '/al' → logprob: -17.875120162963867
    9. '(alpha' → logprob: -18.375120162963867
    10. '(AL' → logprob: -18.500120162963867

Token 87: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003178782993927598
    2. 'ph' → logprob: -6.003178596496582
    3. 'ap' → logprob: -8.253178596496582
    4. 'alp' → logprob: -8.628178596496582
    5. 'phabet' → logprob: -9.003178596496582
    6. 'phal' → logprob: -10.378178596496582
    7. 'pha' → logprob: -10.753178596496582
    8. 'f' → logprob: -11.003178596496582
    9. '```' → logprob: -11.253178596496582
    10. ')' → logprob: -11.503178596496582

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010475777089595795
    2. '):
' → logprob: -6.876047611236572
    3. ')' → logprob: -11.751047134399414
    4. ' ):' → logprob: -12.876047134399414
    5. '):
' → logprob: -13.126047134399414
    6. ':' → logprob: -13.126047134399414
    7. '):

' → logprob: -16.126047134399414
    8. '   ' → logprob: -16.751047134399414
    9. '}:' → logprob: -17.001047134399414
    10. '[]):' → logprob: -17.751047134399414

Token 89: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12228043377399445
    2. '   ' → logprob: -2.2472803592681885
    3. '       ' → logprob: -5.372280597686768
    4. ':
' → logprob: -5.872280597686768
    5. ' :' → logprob: -7.247280597686768
    6. ' if' → logprob: -7.497280597686768
    7. '<|end|>' → logprob: -8.99728012084961
    8. '):' → logprob: -9.37228012084961
    9. ' ' → logprob: -9.49728012084961
    10. '    ' → logprob: -9.62228012084961

Token 90: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8784100413322449
    2. ' if' → logprob: -1.1284101009368896
    3. '   ' → logprob: -1.3784101009368896
    4. '    ' → logprob: -6.1284098625183105
    5. 'if' (adapté à ' if') → logprob: -6.2534098625183105
    6. ' ' → logprob: -6.5034098625183105
    7. '<|end|>' → logprob: -6.6284098625183105
    8. ':' → logprob: -7.7534098625183105
    9. '        
' → logprob: -8.628410339355469
    10. '    
' → logprob: -8.628410339355469

Token 91: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.014230378903448582
    2. 'char' → logprob: -4.264230251312256
    3. ' letter' → logprob: -9.764230728149414
    4. '(char' → logprob: -12.264230728149414
    5. 'letter' → logprob: -13.014230728149414
    6. '<char' → logprob: -13.639230728149414
    7. '	char' → logprob: -14.389230728149414
    8. ' ' → logprob: -15.139230728149414
    9. ',char' → logprob: -15.389230728149414
    10. '.char' → logprob: -16.514230728149414

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197037547826767
    2. '==' → logprob: -2.8119704723358154
    3. '=' → logprob: -13.186970710754395
    4. ' =' → logprob: -15.561970710754395
    5. ')==' → logprob: -15.561970710754395
    6. ']==' → logprob: -15.811970710754395
    7. '===' → logprob: -15.936970710754395
    8. ' ' → logprob: -16.686969757080078
    9. ')' → logprob: -16.936969757080078
    10. ' ' → logprob: -17.186969757080078

Token 93: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.313263863325119
    2. 'letter' → logprob: -1.3132638931274414
    3. ' ' → logprob: -14.063263893127441
    4. '(letter' → logprob: -14.188263893127441
    5. ' lettre' → logprob: -15.063263893127441
    6. '_letter' → logprob: -16.063262939453125
    7. ' le' → logprob: -16.563262939453125
    8. 'let' → logprob: -17.063262939453125
    9. ' letra' → logprob: -17.063262939453125
    10. 'lette' → logprob: -17.188262939453125

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10258517414331436
    2. ':
' → logprob: -2.3525850772857666
    3. ':return' → logprob: -6.102585315704346
    4. '           ' → logprob: -9.852584838867188
    5. '       ' → logprob: -10.102584838867188
    6. '   ' → logprob: -10.852584838867188
    7. '):
' → logprob: -11.352584838867188
    8. ' return' → logprob: -12.727584838867188
    9. ':
' → logprob: -12.977584838867188
    10. ',' → logprob: -13.102584838867188

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023950468748807907
    2. ':' → logprob: -4.523950576782227
    3. ':return' → logprob: -4.898950576782227
    4. ' return' → logprob: -5.648950576782227
    5. ':
' → logprob: -6.523950576782227
    6. 'return' → logprob: -8.648950576782227
    7. '<|end|>' → logprob: -9.773950576782227
    8. '   ' → logprob: -10.148950576782227
    9. '       ' → logprob: -10.523950576782227
    10. '<|end|>' → logprob: -11.523950576782227

Token 96: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.525966465473175
    2. ' return' → logprob: -1.1509664058685303
    3. 'return' (adapté à ' return') → logprob: -2.4009664058685303
    4. '               ' → logprob: -6.775966644287109
    5. ':return' → logprob: -7.775966644287109
    6. '	return' → logprob: -9.15096664428711
    7. '{return' → logprob: -9.52596664428711
    8. ' ' → logprob: -9.65096664428711
    9. '   ' → logprob: -9.65096664428711
    10. '
' → logprob: -10.27596664428711

Token 97: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5759396553039551
    2. 'idx' → logprob: -0.8259396553039551
    3. '	idx' → logprob: -15.950939178466797
    4. '[idx' → logprob: -16.950939178466797
    5. '(idx' → logprob: -17.075939178466797
    6. '_idx' → logprob: -19.075939178466797
    7. '.idx' → logprob: -21.575939178466797
    8. ' ' → logprob: -21.700939178466797
    9. '   ' → logprob: -22.075939178466797
    10. 'index' → logprob: -22.700939178466797

Token 98: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005937448237091303
    2. '   ' → logprob: -5.130937576293945
    3. ' -' → logprob: -12.630937576293945
    4. ' ' → logprob: -13.005937576293945
    5. '  ' → logprob: -14.005937576293945
    6. 'return' → logprob: -14.505937576293945
    7. '<|end|>' → logprob: -14.880937576293945
    8. '-
' → logprob: -15.005937576293945
    9. '```' → logprob: -15.255937576293945
    10. '
' → logprob: -15.755937576293945

Token 99: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003202073508873582
    2. '   ' → logprob: -5.753201961517334
    3. 'return' → logprob: -10.878202438354492
    4. ' -' → logprob: -13.128202438354492
    5. ' return' → logprob: -13.253202438354492
    6. '-return' → logprob: -14.128202438354492
    7. ' ' → logprob: -14.878202438354492
    8. '  ' → logprob: -14.878202438354492
    9. '	return' → logprob: -15.753202438354492
    10. '-
' → logprob: -17.378202438354492

Token 100: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.32392441527918e-05
    2. 'return' (adapté à ' return') → logprob: -10.125053405761719
    3. '   ' → logprob: -11.375053405761719
    4. ' return' → logprob: -14.375053405761719
    5. '-return' → logprob: -14.375053405761719
    6. ' -' → logprob: -15.250053405761719
    7. '\-' → logprob: -16.62505340576172
    8. ' ' → logprob: -17.50005340576172
    9. '	return' → logprob: -17.62505340576172
    10. '```' → logprob: -17.75005340576172

Token 101: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019286326132714748
    2. ' -' → logprob: -6.251928806304932
    3. ' ' → logprob: -20.376928329467773
    4. '−' → logprob: -20.626928329467773
    5. '   ' → logprob: -22.501928329467773
    6. '\-' → logprob: -22.751928329467773
    7. 'None' → logprob: -23.001928329467773
    8. '	' → logprob: -23.126928329467773
    9. '```' → logprob: -23.501928329467773
    10. '1' → logprob: -23.501928329467773

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -20.375
    4. '<|end|>' → logprob: -21.125
    5. '۱' → logprob: -21.375
    6. '１' → logprob: -21.5625
    7. '১' → logprob: -21.625
    8. '१' → logprob: -21.625
    9. '0' → logprob: -21.75
    10. '' → logprob: -22.1875

Token 103: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02350669354200363
    2. '<|end|>' → logprob: -3.8985066413879395
    3. 'a' → logprob: -6.5235066413879395
    4. '```' → logprob: -7.3985066413879395
    5. '  
' → logprob: -8.773507118225098
    6. '<|end|>' → logprob: -8.773507118225098
    7. '\' → logprob: -9.148507118225098
    8. '\n' → logprob: -9.273507118225098
    9. '
' → logprob: -9.648507118225098
    10. '#' → logprob: -9.898507118225098

Token 105: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2041247934103012
    2. ' compare' → logprob: -2.204124689102173
    3. ' count' → logprob: -3.329124689102173
    4. ' process' → logprob: -4.329124927520752
    5. ' calculate' → logprob: -5.329124927520752
    6. 'main' → logprob: -5.329124927520752
    7. ' analyze' → logprob: -5.954124927520752
    8. ' check' → logprob: -6.204124927520752
    9. 'compare' → logprob: -6.204124927520752
    10. ' merge' → logprob: -6.454124927520752

Token 106: '_step' (ID: 27360)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.516659140586853
    2. '_text' → logprob: -1.141659140586853
    3. '_' → logprob: -3.3916592597961426
    4. '_string' → logprob: -3.8916592597961426
    5. '_word' → logprob: -4.766659259796143
    6. '_strings' → logprob: -5.141659259796143
    7. '_words' → logprob: -5.641659259796143
    8. '_data' → logprob: -6.016659259796143
    9. '_line' → logprob: -6.016659259796143
    10. '(' → logprob: -6.516659259796143

Token 107: '(i' (ID: 3649)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0400837659835815
    2. '(' → logprob: -1.4150837659835815
    3. '(s' → logprob: -1.6650837659835815
    4. '(input' → logprob: -2.790083885192871
    5. '(step' → logprob: -2.915083885192871
    6. '(line' → logprob: -3.790083885192871
    7. '(letter' → logprob: -4.165083885192871
    8. '(word' → logprob: -4.415083885192871
    9. '(data' → logprob: -5.040083885192871
    10. '(sentence' → logprob: -5.165083885192871

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25412145256996155
    2. ' ,' → logprob: -2.0041215419769287
    3. '):' → logprob: -2.5041215419769287
    4. ' ):' → logprob: -5.62912130355835
    5. ')' → logprob: -6.50412130355835
    6. '   ' → logprob: -7.50412130355835
    7. '):
' → logprob: -8.379121780395508
    8. ' )' → logprob: -8.379121780395508
    9. 's' → logprob: -8.504121780395508
    10. ' ' → logprob: -9.129121780395508

Token 109: ' s' (ID: 265)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.9217510223388672
    2. 'a' → logprob: -1.5467510223388672
    3. ' alp' → logprob: -2.734251022338867
    4. 'alph' → logprob: -3.796751022338867
    5. 's' → logprob: -3.921751022338867
    6. 'str' → logprob: -4.234251022338867
    7. 'A' → logprob: -4.609251022338867
    8. ' a' → logprob: -4.671751022338867
    9. 'l' → logprob: -4.671751022338867
    10. 'alpha' → logprob: -4.734251022338867

Token 110: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3161625266075134
    2. ',' → logprob: -1.6911625862121582
    3. '1' → logprob: -3.316162586212158
    4. '):
' → logprob: -3.441162586212158
    5. 's' → logprob: -5.441162586212158
    6. 'tring' → logprob: -5.816162586212158
    7. ' ):' → logprob: -6.316162586212158
    8. 'tr' → logprob: -6.441162586212158
    9. ' ,' → logprob: -6.941162586212158
    10. '[i' → logprob: -6.941162586212158

Token 111: ' t' (ID: 260)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.8120028972625732
    2. ' alp' → logprob: -1.6870028972625732
    3. 'a' → logprob: -1.8120028972625732
    4. 'alph' → logprob: -4.062003135681152
    5. ' a' → logprob: -4.249503135681152
    6. 'l' → logprob: -4.562003135681152
    7. 'al' → logprob: -4.749503135681152
    8. 'alpha' → logprob: -4.812003135681152
    9. 'j' → logprob: -5.062003135681152
    10. 'list' → logprob: -5.187003135681152

Token 112: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4667232036590576
    2. ',' → logprob: -1.2167232036590576
    3. 's' → logprob: -2.8417232036590576
    4. '1' → logprob: -5.466723442077637
    5. ' ,' → logprob: -5.841723442077637
    6. ' ):' → logprob: -5.841723442077637
    7. '_s' → logprob: -6.091723442077637
    8. 'a' → logprob: -6.591723442077637
    9. ')' → logprob: -6.966723442077637
    10. '_' → logprob: -7.091723442077637

Token 113: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.5279686450958252
    2. 'a' → logprob: -1.9029686450958252
    3. ' alp' → logprob: -1.9029686450958252
    4. 'alph' → logprob: -4.465468406677246
    5. 'al' → logprob: -4.527968406677246
    6. ' a' → logprob: -4.590468406677246
    7. 'alpha' → logprob: -4.590468406677246
    8. 'ap' → logprob: -5.152968406677246
    9. 'l' → logprob: -5.340468406677246
    10. 'list' → logprob: -5.402968406677246

Token 114: '_s' (ID: 1278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4795258641242981
    2. 's' → logprob: -2.1045258045196533
    3. 'a' → logprob: -2.4795258045196533
    4. '1' → logprob: -2.7295258045196533
    5. '_s' → logprob: -3.1045258045196533
    6. '):' → logprob: -3.4795258045196533
    7. 'S' → logprob: -5.729526042938232
    8. '0' → logprob: -5.854526042938232
    9. 'i' → logprob: -5.854526042938232
    10. 'A' → logprob: -5.854526042938232

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004895365796983242
    2. ' ,' → logprob: -6.004895210266113
    3. 's' → logprob: -7.004895210266113
    4. '):' → logprob: -7.629895210266113
    5. '_,' → logprob: -7.754895210266113
    6. '_s' → logprob: -8.004895210266113
    7. '   ' → logprob: -9.879895210266113
    8. ')' → logprob: -10.004895210266113
    9. '),' → logprob: -10.379895210266113
    10. '_' → logprob: -10.629895210266113

Token 116: ' alp' (ID: 107692)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03603966906666756
    2. 'alp' → logprob: -3.4110395908355713
    3. ' num' → logprob: -6.53603982925415
    4. ' alp' → logprob: -8.536039352416992
    5. 'nums' → logprob: -8.661039352416992
    6. 'al' → logprob: -8.911039352416992
    7. 's' → logprob: -9.161039352416992
    8. 'alph' → logprob: -9.786039352416992
    9. 'n' → logprob: -9.786039352416992
    10. 'alpha' → logprob: -10.536039352416992

Token 117: '_t' (ID: 838)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05822596698999405
    2. 's' → logprob: -3.4332258701324463
    3. '_t' → logprob: -4.308226108551025
    4. 't' → logprob: -4.683226108551025
    5. ',' → logprob: -7.058226108551025
    6. ')' → logprob: -8.433225631713867
    7. '_a' → logprob: -9.058225631713867
    8. 'a' → logprob: -9.308225631713867
    9. '<|end|>' → logprob: -10.433225631713867
    10. '_' → logprob: -10.558225631713867

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019603055261541158
    2. ' ,' → logprob: -8.62519645690918
    3. '   ' → logprob: -11.87519645690918
    4. '):' → logprob: -12.50019645690918
    5. ',num' → logprob: -13.25019645690918
    6. ')' → logprob: -14.12519645690918
    7. '),' → logprob: -14.50019645690918
    8. ',
' → logprob: -14.62519645690918
    9. '‌,' → logprob: -14.62519645690918
    10. ' ' → logprob: -15.00019645690918

Token 119: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.013795921579003334
    2. ' num' → logprob: -4.388795852661133
    3. 'count' → logprob: -8.013795852661133
    4. 'alp' → logprob: -8.388795852661133
    5. 'cnt' → logprob: -8.513795852661133
    6. 'nums' → logprob: -8.888795852661133
    7. 'n' → logprob: -9.763795852661133
    8. '   ' → logprob: -10.013795852661133
    9. 'nu' → logprob: -10.138795852661133
    10. ' alp' → logprob: -10.263795852661133

Token 120: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00133285962510854
    2. 's' → logprob: -7.126332759857178
    3. ')' → logprob: -8.126333236694336
    4. '_' → logprob: -8.751333236694336
    5. ')_' → logprob: -10.876333236694336
    6. ' _' → logprob: -11.001333236694336
    7. '   ' → logprob: -11.626333236694336
    8. '_t' → logprob: -12.001333236694336
    9. '_a' → logprob: -12.126333236694336
    10. ',' → logprob: -13.126333236694336

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002033799421042204
    2. ',num' → logprob: -6.252033710479736
    3. ' ,' → logprob: -10.002034187316895
    4. '):' → logprob: -10.752034187316895
    5. 's' → logprob: -10.752034187316895
    6. '   ' → logprob: -12.627034187316895
    7. '_,' → logprob: -12.752034187316895
    8. '1' → logprob: -13.627034187316895
    9. ',s' → logprob: -13.752034187316895
    10. ',
' → logprob: -13.877034187316895

Token 122: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.008648606948554516
    2. ' num' → logprob: -4.75864839553833
    3. ' ' → logprob: -11.383648872375488
    4. 'n' → logprob: -12.383648872375488
    5. '   ' → logprob: -12.508648872375488
    6. ')' → logprob: -12.758648872375488
    7. '	num' → logprob: -12.758648872375488
    8. ',num' → logprob: -13.696148872375488
    9. '<|end|>' → logprob: -13.696148872375488
    10. '  ' → logprob: -14.071148872375488

Token 123: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.010501799173653126
    2. '_' → logprob: -4.885501861572266
    3. '_s' → logprob: -5.885501861572266
    4. ')' → logprob: -9.760501861572266
    5. 't' → logprob: -10.385501861572266
    6. '_)' → logprob: -12.010501861572266
    7. ')_' → logprob: -12.260501861572266
    8. 's' → logprob: -12.885501861572266
    9. ' _' → logprob: -12.885501861572266
    10. '_,' → logprob: -13.385501861572266

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009811695665121078
    2. ',' → logprob: -4.634811878204346
    3. '):
' → logprob: -10.884811401367188
    4. ')' → logprob: -10.884811401367188
    5. '   ' → logprob: -11.759811401367188
    6. ' ):' → logprob: -11.884811401367188
    7. ':' → logprob: -13.509811401367188
    8. ' ,' → logprob: -14.384811401367188
    9. '):
' → logprob: -15.634811401367188
    10. ' ' → logprob: -15.759811401367188

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004724533762782812
    2. ' if' → logprob: -5.504724502563477
    3. '    
' → logprob: -8.754724502563477
    4. 'if' → logprob: -9.004724502563477
    5. ' for' → logprob: -9.004724502563477
    6. '    ' → logprob: -9.879724502563477
    7. ',' → logprob: -10.754724502563477
    8. 'for' → logprob: -10.879724502563477
    9. 's' → logprob: -11.129724502563477
    10. ' s' → logprob: -11.129724502563477

Token 126: ' process' (ID: 2273)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25398463010787964
    2. ' if' → logprob: -2.0039846897125244
    3. 'if' → logprob: -2.7539846897125244
    4. 'for' → logprob: -5.378984451293945
    5. ' for' → logprob: -5.628984451293945
    6. ' letter' → logprob: -5.628984451293945
    7. 'letter' → logprob: -5.753984451293945
    8. ' s' → logprob: -6.128984451293945
    9. ' c' → logprob: -6.378984451293945
    10. 'c' → logprob: -6.503984451293945

Token 127: '_letter' (ID: 120621)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.7053238749504089
    2. '_' → logprob: -1.4553239345550537
    3. '_s' → logprob: -1.4553239345550537
    4. 'ed' → logprob: -4.330323696136475
    5. 's' → logprob: -4.705323696136475
    6. '_letter' → logprob: -5.705323696136475
    7. '_token' → logprob: -5.955323696136475
    8. 'es' → logprob: -6.080323696136475
    9. '_t' → logprob: -6.580323696136475
    10. '_input' → logprob: -6.955323696136475

Token 128: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0687827318906784
    2. '(' → logprob: -3.3187828063964844
    3. 's' → logprob: -3.8187828063964844
    4. '(i' → logprob: -5.943782806396484
    5. '_' → logprob: -6.693782806396484
    6. '(_' → logprob: -7.193782806396484
    7. 'es' → logprob: -7.568782806396484
    8. '('_' → logprob: -7.568782806396484
    9. '_s' → logprob: -7.693782806396484
    10. '_count' → logprob: -7.818782806396484

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013622589176520705
    2. '[' → logprob: -7.376362323760986
    3. ',' → logprob: -8.126361846923828
    4. ',i' → logprob: -8.751361846923828
    5. ' [' → logprob: -9.626361846923828
    6. ')[' → logprob: -9.751361846923828
    7. ')' → logprob: -9.751361846923828
    8. '   ' → logprob: -11.376361846923828
    9. '[
' → logprob: -11.376361846923828
    10. '[s' → logprob: -11.501361846923828

Token 130: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.47977858781814575
    2. '])' → logprob: -0.9797785878181458
    3. '])
' → logprob: -6.47977876663208
    4. ']' → logprob: -6.47977876663208
    5. ' ],' → logprob: -6.72977876663208
    6. ' ])' → logprob: -6.97977876663208
    7. '])

' → logprob: -9.354778289794922
    8. '-' → logprob: -9.979778289794922
    9. ')' → logprob: -10.104778289794922
    10. ':],' → logprob: -10.229778289794922

Token 131: ' alp' (ID: 107692)
  Prédit: ' alp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alp' → logprob: -0.055089447647333145
    2. 'alp' → logprob: -2.9300894737243652
    3. 'al' → logprob: -9.555088996887207
    4. ' al' → logprob: -9.680088996887207
    5. ' alb' → logprob: -10.930088996887207
    6. ' ' → logprob: -11.180088996887207
    7. ' alph' → logprob: -11.305088996887207
    8. ')' → logprob: -12.180088996887207
    9. 'alb' → logprob: -12.180088996887207
    10. 'alph' → logprob: -12.555088996887207

Token 132: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0280383548888494e-06
    2. ' _' → logprob: -15.250000953674316
    3. '_t' → logprob: -15.625000953674316
    4. ',' → logprob: -15.875000953674316
    5. 's' → logprob: -16.000001907348633
    6. '_' → logprob: -16.000001907348633
    7. ')' → logprob: -16.250001907348633
    8. ')_' → logprob: -17.625001907348633
    9. ',_' → logprob: -18.125001907348633
    10. '_a' → logprob: -18.875001907348633

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026622318546287715
    2. ',num' → logprob: -8.875266075134277
    3. ' ,' → logprob: -9.000266075134277
    4. '   ' → logprob: -14.125266075134277
    5. ',
' → logprob: -14.125266075134277
    6. ',n' → logprob: -15.000266075134277
    7. ')' → logprob: -15.250266075134277
    8. '),' → logprob: -15.875266075134277
    9. '‌,' → logprob: -15.875266075134277
    10. '```' → logprob: -16.125267028808594

Token 134: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03364800289273262
    2. ' num' → logprob: -3.4086480140686035
    3. ' ' → logprob: -14.033647537231445
    4. '[num' → logprob: -14.658647537231445
    5. '   ' → logprob: -15.033647537231445
    6. '	num' → logprob: -15.283647537231445
    7. ',num' → logprob: -16.158647537231445
    8. ')' → logprob: -16.283647537231445
    9. '  ' → logprob: -16.908647537231445
    10. '(num' → logprob: -16.908647537231445

Token 135: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -14.875
    3. '_t' → logprob: -17.125
    4. '_' → logprob: -20.375
    5. ')' → logprob: -20.625
    6. ' _' → logprob: -21.625
    7. ')_' → logprob: -22.125
    8. '_sn' → logprob: -23.25
    9. '_ss' → logprob: -23.375
    10. '_c' → logprob: -24.125

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055308520793914795
    2. ')
' → logprob: -2.9303085803985596
    3. '   ' → logprob: -7.9303083419799805
    4. ')
' → logprob: -10.43030834197998
    5. ',' → logprob: -10.93030834197998
    6. ')

' → logprob: -11.43030834197998
    7. ' )' → logprob: -12.68030834197998
    8. '),' → logprob: -13.05530834197998
    9. ' )
' → logprob: -13.55530834197998
    10. ');' → logprob: -14.80530834197998

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2196199744939804
    2. 'process' → logprob: -2.3446199893951416
    3. ' process' → logprob: -3.3446199893951416
    4. '
' → logprob: -4.0946197509765625
    5. '    
' → logprob: -4.4696197509765625
    6. '<|end|>' → logprob: -4.8446197509765625
    7. ')' → logprob: -4.9696197509765625
    8. ',' → logprob: -5.4696197509765625
    9. ' ' → logprob: -5.4696197509765625
    10. '  
' → logprob: -5.8446197509765625

Token 138: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.09470265358686447
    2. ' process' → logprob: -2.71970272064209
    3. '   ' → logprob: -3.71970272064209
    4. 'if' → logprob: -9.46970272064209
    5. '	process' → logprob: -9.59470272064209
    6. ' if' → logprob: -9.96970272064209
    7. 'update' → logprob: -11.46970272064209
    8. ' ' → logprob: -12.21970272064209
    9. '(process' → logprob: -12.96970272064209
    10. '  ' → logprob: -13.09470272064209

Token 139: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.00022249009634833783
    2. '_' → logprob: -8.750222206115723
    3. '_step' → logprob: -10.500222206115723
    4. '_t' → logprob: -11.000222206115723
    5. '_le' → logprob: -11.625222206115723
    6. '_letters' → logprob: -12.750222206115723
    7. '_line' → logprob: -13.125222206115723
    8. 't' → logprob: -14.125222206115723
    9. ' _' → logprob: -14.250222206115723
    10. '```' → logprob: -14.375222206115723

Token 140: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.001991801429539919
    2. '(' → logprob: -6.5019917488098145
    3. '(s' → logprob: -7.6269917488098145
    4. 't' → logprob: -13.876992225646973
    5. ' (' → logprob: -14.251992225646973
    6. '('' → logprob: -15.626992225646973
    7. '(
' → logprob: -16.251991271972656
    8. '((' → logprob: -16.251991271972656
    9. '(i' → logprob: -16.751991271972656
    10. '(T' → logprob: -16.876991271972656

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005152635276317596
    2. '[' → logprob: -7.625515460968018
    3. ' [' → logprob: -12.00051498413086
    4. ')' → logprob: -12.37551498413086
    5. '[
' → logprob: -12.37551498413086
    6. ')[' → logprob: -13.00051498413086
    7. '```' → logprob: -13.12551498413086
    8. ',i' → logprob: -13.25051498413086
    9. '[I' → logprob: -13.25051498413086
    10. '[j' → logprob: -14.00051498413086

Token 142: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4288828670978546
    2. '],' → logprob: -1.0538828372955322
    3. ' ,' → logprob: -9.428882598876953
    4. ']' → logprob: -9.678882598876953
    5. '),' → logprob: -10.928882598876953
    6. ' ],' → logprob: -11.303882598876953
    7. ' ' → logprob: -12.928882598876953
    8. '‌,' → logprob: -13.178882598876953
    9. '',' → logprob: -14.178882598876953
    10. '   ' → logprob: -14.303882598876953

Token 143: ' alp' (ID: 107692)
  Prédit: ' alp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alp' → logprob: -0.12727506458759308
    2. 'alp' → logprob: -2.127274990081787
    3. 'al' → logprob: -8.627275466918945
    4. ' al' → logprob: -9.627275466918945
    5. 'alb' → logprob: -10.627275466918945
    6. ' alb' → logprob: -10.752275466918945
    7. ' alph' → logprob: -11.502275466918945
    8. ' ' → logprob: -11.877275466918945
    9. ' ' → logprob: -12.127275466918945
    10. 'alph' → logprob: -12.377275466918945

Token 144: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00022034443099983037
    2. '_s' → logprob: -8.50022029876709
    3. 't' → logprob: -11.12522029876709
    4. ')' → logprob: -14.50022029876709
    5. '_' → logprob: -14.87522029876709
    6. '[' → logprob: -15.12522029876709
    7. ',' → logprob: -15.62522029876709
    8. '   ' → logprob: -15.62522029876709
    9. 's' → logprob: -15.75022029876709
    10. '[_' → logprob: -16.625221252441406

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.453737710718997e-05
    2. ',num' → logprob: -10.375044822692871
    3. ' ,' → logprob: -11.250044822692871
    4. ')' → logprob: -15.750044822692871
    5. '),' → logprob: -16.875043869018555
    6. 'num' → logprob: -17.375043869018555
    7. '‌,' → logprob: -17.500043869018555
    8. ',
' → logprob: -17.750043869018555
    9. ',n' → logprob: -18.250043869018555
    10. '`,' → logprob: -18.375043869018555

Token 146: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.2519306540489197
    2. 'num' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.876930236816406
    4. ',num' → logprob: -14.876930236816406
    5. '[num' → logprob: -14.876930236816406
    6. '	num' → logprob: -15.501930236816406
    7. ')' → logprob: -16.001930236816406
    8. '(num' → logprob: -16.376930236816406
    9. '_num' → logprob: -17.251930236816406
    10. '<num' → logprob: -17.376930236816406

Token 147: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -9.424530435353518e-05
    2. ')' → logprob: -10.125094413757324
    3. '_s' → logprob: -10.125094413757324
    4. 't' → logprob: -11.500094413757324
    5. ')_' → logprob: -13.875094413757324
    6. '_' → logprob: -14.000094413757324
    7. '[' → logprob: -14.250094413757324
    8. '   ' → logprob: -14.375094413757324
    9. 's' → logprob: -15.000094413757324
    10. '<|end|>' → logprob: -15.625094413757324

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ')
' → logprob: -11.500011444091797
    3. ' )' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.375011444091797
    5. ')

' → logprob: -16.000011444091797
    6. ',' → logprob: -16.125011444091797
    7. '),' → logprob: -17.250011444091797
    8. '<|end|>' → logprob: -17.250011444091797
    9. ')#' → logprob: -17.750011444091797
    10. ' ' → logprob: -18.000011444091797

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2958438396453857
    2. '<|end|>' → logprob: -1.2958438396453857
    3. '_' → logprob: -1.6708438396453857
    4. '\n' → logprob: -2.5458438396453857
    5. ')' → logprob: -2.7958438396453857
    6. 'def' → logprob: -3.0458438396453857
    7. '\' → logprob: -3.4208438396453857
    8. '   ' → logprob: -4.545844078063965
    9. 'newline' → logprob: -4.670844078063965
    10. ' ' → logprob: -5.170844078063965

Token 150: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9820647239685059
    2. 'def' → logprob: -1.3570647239685059
    3. 'if' → logprob: -1.9820647239685059
    4. 'return' (adapté à ' return') → logprob: -2.357064723968506
    5. 'process' → logprob: -2.732064723968506
    6. 'i' → logprob: -3.982064723968506
    7. 'swap' → logprob: -4.732064723968506
    8. 'for' → logprob: -5.232064723968506
    9. 's' → logprob: -5.232064723968506
    10. 'diff' → logprob: -5.857064723968506

Token 151: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09195756167173386
    2. '_' → logprob: -2.7169575691223145
    3. 'process' → logprob: -4.7169575691223145
    4. ' process' → logprob: -5.7169575691223145
    5. ' 
' → logprob: -6.0919575691223145
    6. '_process' → logprob: -6.4669575691223145
    7. '  
' → logprob: -6.5919575691223145
    8. '(process' → logprob: -6.7169575691223145
    9. '<|end|>' → logprob: -7.0919575691223145
    10. '  ' → logprob: -7.8419575691223145

Token 152: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.022889362648129463
    2. '_' → logprob: -3.8978893756866455
    3. '_t' → logprob: -6.147889137268066
    4. 's' → logprob: -9.022889137268066
    5. ')' → logprob: -10.397889137268066
    6. '_
' → logprob: -11.772889137268066
    7. '_i' → logprob: -12.147889137268066
    8. '```' → logprob: -12.272889137268066
    9. '_

' → logprob: -12.522889137268066
    10. ' _' → logprob: -12.522889137268066

Token 153: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06801756471395493
    2. 's' → logprob: -3.3180174827575684
    3. '_s' → logprob: -4.318017482757568
    4. '[' → logprob: -5.068017482757568
    5. '<|end|>' → logprob: -5.068017482757568
    6. ')' → logprob: -6.568017482757568
    7. ',' → logprob: -6.943017482757568
    8. 'def' → logprob: -8.693017959594727
    9. '_process' → logprob: -8.818017959594727
    10. '_
' → logprob: -9.193017959594727

Token 154: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.474161297082901
    2. ' num' → logprob: -0.9741612672805786
    3. '<|end|>' → logprob: -9.974161148071289
    4. ' ' → logprob: -11.349161148071289
    5. ',num' → logprob: -12.349161148071289
    6. '[num' → logprob: -12.474161148071289
    7. 'alp' → logprob: -12.724161148071289
    8. '(num' → logprob: -12.724161148071289
    9. '	num' → logprob: -13.349161148071289
    10. ' ' → logprob: -13.349161148071289

Token 155: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0002738522016443312
    2. '_s' → logprob: -8.250273704528809
    3. 't' → logprob: -11.375273704528809
    4. '_' → logprob: -14.250273704528809
    5. 's' → logprob: -14.750273704528809
    6. '[' → logprob: -17.250274658203125
    7. '\' → logprob: -17.375274658203125
    8. '   ' → logprob: -17.750274658203125
    9. '```' → logprob: -18.250274658203125
    10. '<|end|>' → logprob: -18.375274658203125

Token 156: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9012011885643005
    2. '
' → logprob: -1.1512012481689453
    3. '_' → logprob: -2.0262012481689453
    4. '<|end|>' → logprob: -2.0262012481689453
    5. ',' → logprob: -6.026201248168945
    6. 'n' → logprob: -6.651201248168945
    7. '\' → logprob: -6.776201248168945
    8. '

' → logprob: -6.776201248168945
    9. ')' → logprob: -6.901201248168945
    10. 'd' → logprob: -7.151201248168945

Token 157: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5404582619667053
    2. 'def' → logprob: -1.1654582023620605
    3. 'd' → logprob: -2.4154582023620605
    4. '
' → logprob: -4.7904582023620605
    5. '\' → logprob: -5.5404582023620605
    6. 'n' → logprob: -6.9154582023620605
    7. '<|end|>' → logprob: -7.2904582023620605
    8. ' ' → logprob: -7.9154582023620605
    9. 'p' → logprob: -8.290458679199219
    10. ' 
' → logprob: -8.665458679199219

Token 158: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.011600269004702568
    2. 'process' → logprob: -4.511600494384766
    3. '_process' → logprob: -8.761600494384766
    4. ' update' → logprob: -9.011600494384766
    5. 'n' → logprob: -10.011600494384766
    6. ' ' → logprob: -10.511600494384766
    7. 'rocess' → logprob: -10.949100494384766
    8. ' main' → logprob: -11.074100494384766
    9. '	process' → logprob: -11.136600494384766
    10. ' find' → logprob: -11.261600494384766

Token 159: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.0056155347265303135
    2. '_' → logprob: -5.255615711212158
    3. '_step' → logprob: -8.005615234375
    4. '_letters' → logprob: -10.755615234375
    5. '_l' → logprob: -11.505615234375
    6. '_s' → logprob: -13.005615234375
    7. '_le' → logprob: -13.380615234375
    8. ' _' → logprob: -13.380615234375
    9. '_word' → logprob: -13.505615234375
    10. '_a' → logprob: -13.630615234375

Token 160: '(char' (ID: 14823)
  Prédit: '(letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.004080897197127342
    2. '(' → logprob: -5.504080772399902
    3. '(l' → logprob: -14.254080772399902
    4. ' (' → logprob: -14.254080772399902
    5. '(let' → logprob: -15.004080772399902
    6. '(line' → logprob: -15.129080772399902
    7. '(s' → logprob: -15.129080772399902
    8. '(word' → logprob: -16.00408172607422
    9. '(a' → logprob: -16.75408172607422
    10. '(
' → logprob: -17.50408172607422

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. ' ,' → logprob: -9.75006103515625
    3. ',char' → logprob: -14.75006103515625
    4. 's' → logprob: -14.87506103515625
    5. '   ' → logprob: -14.87506103515625
    6. ')' → logprob: -14.87506103515625
    7. '):' → logprob: -15.25006103515625
    8. '_,' → logprob: -15.50006103515625
    9. '‌,' → logprob: -15.50006103515625
    10. ',a' → logprob: -17.00006103515625

Token 162: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.04863414540886879
    2. ' alp' → logprob: -3.0486340522766113
    3. 'alph' → logprob: -10.79863452911377
    4. 'al' → logprob: -11.54863452911377
    5. 'alb' → logprob: -11.79863452911377
    6. 'alphabet' → logprob: -13.29863452911377
    7. ' Alp' → logprob: -13.92363452911377
    8. 'alpha' → logprob: -14.04863452911377
    9. ' alph' → logprob: -14.04863452911377
    10. 'alf' → logprob: -14.17363452911377

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10236749798059464
    2. '_s' → logprob: -2.352367401123047
    3. 's' → logprob: -6.727367401123047
    4. '_t' → logprob: -7.352367401123047
    5. ' ,' → logprob: -9.352367401123047
    6. '_,' → logprob: -9.352367401123047
    7. '):' → logprob: -10.227367401123047
    8. ',char' → logprob: -10.852367401123047
    9. '   ' → logprob: -11.352367401123047
    10. 't' → logprob: -11.727367401123047

Token 164: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001702675479464233
    2. ' num' → logprob: -6.376702785491943
    3. 'number' → logprob: -16.2517032623291
    4. ' ' → logprob: -16.5017032623291
    5. 'nums' → logprob: -16.6267032623291
    6. '	num' → logprob: -17.0017032623291
    7. ')' → logprob: -17.0017032623291
    8. 'nu' → logprob: -17.7517032623291
    9. 'n' → logprob: -18.0017032623291
    10. '[num' → logprob: -18.2517032623291

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004627938382327557
    2. '):
' → logprob: -5.379627704620361
    3. '):
' → logprob: -12.50462818145752
    4. ')' → logprob: -12.87962818145752
    5. '):

' → logprob: -14.25462818145752
    6. ':' → logprob: -14.87962818145752
    7. ' ):' → logprob: -15.00462818145752
    8. '[]):' → logprob: -16.879627227783203
    9. '   ' → logprob: -17.379627227783203
    10. 's' → logprob: -17.504627227783203

Token 166: '   ' (ID: 271)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.4892547130584717
    2. '   ' → logprob: -0.9892547130584717
    3. ' update' → logprob: -4.239254951477051
    4. 'idx' → logprob: -8.11425495147705
    5. 'if' → logprob: -8.73925495147705
    6. '	update' → logprob: -9.23925495147705
    7. 'index' → logprob: -10.23925495147705
    8. 'for' → logprob: -11.86425495147705
    9. '   ' → logprob: -11.86425495147705
    10. ' if' → logprob: -11.86425495147705

Token 167: ' cnt' (ID: 27340)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.007372234482318163
    2. 'idx' → logprob: -5.5073723793029785
    3. 'if' → logprob: -5.8823723793029785
    4. ' update' → logprob: -8.00737190246582
    5. 'index' → logprob: -9.50737190246582
    6. '   ' → logprob: -9.88237190246582
    7. 'for' → logprob: -10.63237190246582
    8. 'count' → logprob: -12.50737190246582
    9. ' if' → logprob: -13.38237190246582
    10. ' idx' → logprob: -13.50737190246582

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.234323188662529
    2. '=' → logprob: -1.9843231439590454
    3. '   ' → logprob: -3.734323263168335
    4. 't' → logprob: -3.984323263168335
    5. 'ount' → logprob: -4.109323024749756
    6. ' ' → logprob: -5.109323024749756
    7. '_idx' → logprob: -6.109323024749756
    8. '  ' → logprob: -6.734323024749756
    9. ',' → logprob: -7.234323024749756
    10. 'x' → logprob: -7.359323024749756

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3655651807785034
    2. 'find' → logprob: -1.9905651807785034
    3. 'num' → logprob: -1.9905651807785034
    4. '1' → logprob: -4.865565299987793
    5. 'len' → logprob: -4.865565299987793
    6. ' find' → logprob: -5.115565299987793
    7. ' num' → logprob: -5.490565299987793
    8. ' ' → logprob: -5.865565299987793
    9. 'alp' → logprob: -6.865565299987793
    10. 'count' → logprob: -6.990565299987793

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7543071508407593
    2. 'num' → logprob: -0.8793071508407593
    3. 'find' → logprob: -2.629307270050049
    4. 'alp' → logprob: -4.004307270050049
    5. '1' → logprob: -4.504307270050049
    6. 'len' → logprob: -4.754307270050049
    7. 'sum' → logprob: -6.379307270050049
    8. 'count' → logprob: -7.004307270050049
    9. 'update' → logprob: -7.504307270050049
    10. 'al' → logprob: -8.12930679321289

Token 171: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8695045113563538
    2. ' for' → logprob: -0.9945045113563538
    3. '   ' → logprob: -1.619504451751709
    4. 'while' → logprob: -5.244504451751709
    5. ' while' → logprob: -5.994504451751709
    6. 'idx' → logprob: -6.119504451751709
    7. '<|end|>' → logprob: -6.619504451751709
    8. 'def' → logprob: -7.494504451751709
    9. '	for' → logprob: -8.244504928588867
    10. ' idx' → logprob: -8.744504928588867

Token 173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08824843913316727
    2. 'idx' → logprob: -2.9632484912872314
    3. 'while' → logprob: -3.5882484912872314
    4. ' for' → logprob: -5.963248252868652
    5. 'if' → logprob: -6.088248252868652
    6. ' while' → logprob: -9.088248252868652
    7. 'index' → logprob: -9.838248252868652
    8. '   ' → logprob: -10.338248252868652
    9. ' idx' → logprob: -10.463248252868652
    10. 'i' → logprob: -10.713248252868652

Token 174: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3921998739242554
    2. 'i' → logprob: -1.5171998739242554
    3. ' c' → logprob: -1.5171998739242554
    4. 'c' → logprob: -2.017199993133545
    5. ' idx' → logprob: -2.392199993133545
    6. 'idx' → logprob: -3.392199993133545
    7. ' letter' → logprob: -3.517199993133545
    8. 'letter' → logprob: -4.392199993133545
    9. ' j' → logprob: -5.767199993133545
    10. 'j' → logprob: -6.392199993133545

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007883780635893345
    2. 'in' → logprob: -5.007883548736572
    3. ',' → logprob: -6.882883548736572
    4. ' ,' → logprob: -9.50788402557373
    5. ' ' → logprob: -9.75788402557373
    6. '	in' → logprob: -12.63288402557373
    7. '   ' → logprob: -13.13288402557373
    8. '    ' → logprob: -14.25788402557373
    9. 'range' → logprob: -14.25788402557373
    10. '  ' → logprob: -14.38288402557373

Token 176: ' alp' (ID: 107692)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20568741858005524
    2. ' range' → logprob: -1.705687403678894
    3. 'alp' → logprob: -5.955687522888184
    4. 'num' → logprob: -6.705687522888184
    5. ' alp' → logprob: -8.080687522888184
    6. ' num' → logprob: -9.330687522888184
    7. '   ' → logprob: -12.018187522888184
    8. ' ' → logprob: -12.330687522888184
    9. '	range' → logprob: -12.518187522888184
    10. 'alph' → logprob: -12.580687522888184

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10039418190717697
    2. ':
' → logprob: -2.3503942489624023
    3. '   ' → logprob: -8.975394248962402
    4. ' :' → logprob: -11.225394248962402
    5. '       ' → logprob: -11.475394248962402
    6. '):
' → logprob: -11.850394248962402
    7. '[::-' → logprob: -11.850394248962402
    8. ' :
' → logprob: -12.225394248962402
    9. '[' → logprob: -12.350394248962402
    10. '<|end|>' → logprob: -12.725394248962402

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10989737510681152
    2. 'if' → logprob: -2.8598973751068115
    3. ' if' → logprob: -3.2348973751068115
    4. '   ' → logprob: -5.109897613525391
    5. '<|end|>' → logprob: -7.109897613525391
    6. '    ' → logprob: -9.10989761352539
    7. ' ' → logprob: -9.35989761352539
    8. '      ' → logprob: -9.73489761352539
    9. '	if' → logprob: -10.10989761352539
    10. '<|end|>' → logprob: -10.35989761352539

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004991783644072711
    2. '   ' → logprob: -8.50049877166748
    3. ' if' → logprob: -8.75049877166748
    4. 'cnt' → logprob: -9.50049877166748
    5. '       ' → logprob: -10.00049877166748
    6. 'num' → logprob: -11.62549877166748
    7. '    ' → logprob: -13.25049877166748
    8. '           ' → logprob: -13.50049877166748
    9. '
' → logprob: -13.62549877166748
    10. 'i' → logprob: -14.00049877166748

Token 180: ' char' (ID: 1826)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011435531778261065
    2. ' j' → logprob: -6.876143455505371
    3. 'char' → logprob: -9.376143455505371
    4. '   ' → logprob: -12.001143455505371
    5. 'process' → logprob: -12.251143455505371
    6. '	j' → logprob: -12.876143455505371
    7. ' ' → logprob: -13.376143455505371
    8. '    ' → logprob: -13.938643455505371
    9. '  ' → logprob: -14.063643455505371
    10. 'chr' → logprob: -14.126143455505371

Token 181: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0900060385465622
    2. '==' → logprob: -2.465006113052368
    3. ' <' → logprob: -8.090005874633789
    4. ' !=' → logprob: -8.090005874633789
    5. ' >' → logprob: -8.715005874633789
    6. ' >=' → logprob: -9.590005874633789
    7. '>' → logprob: -9.715005874633789
    8. ' ' → logprob: -10.340005874633789
    9. '<' → logprob: -10.590005874633789
    10. '!=' → logprob: -10.715005874633789

Token 182: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03806685656309128
    2. ' j' → logprob: -3.288066864013672
    3. '   ' → logprob: -11.788066864013672
    4. ' ' → logprob: -12.038066864013672
    5. '    ' → logprob: -12.413066864013672
    6. '  ' → logprob: -13.038066864013672
    7. '	j' → logprob: -13.538066864013672
    8. 'char' → logprob: -14.413066864013672
    9. 's' → logprob: -14.725566864013672
    10. '_j' → logprob: -14.725566864013672

Token 183: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4289763569831848
    2. ':' → logprob: -1.05397629737854
    3. '):
' → logprob: -9.553976058959961
    4. ':return' → logprob: -10.053976058959961
    5. '   ' → logprob: -10.178976058959961
    6. '       ' → logprob: -10.178976058959961
    7. ' :
' → logprob: -10.553976058959961
    8. ':
' → logprob: -11.428976058959961
    9. '           ' → logprob: -11.678976058959961
    10. ' :' → logprob: -11.803976058959961

Token 184: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09202791005373001
    2. ':' → logprob: -3.0920279026031494
    3. '           ' → logprob: -3.2170279026031494
    4. '       ' → logprob: -6.7170281410217285
    5. 'cnt' → logprob: -7.7170281410217285
    6. '   ' → logprob: -8.59202766418457
    7. '):
' → logprob: -9.09202766418457
    8. '
' → logprob: -9.34202766418457
    9. ':return' → logprob: -9.46702766418457
    10. ' cnt' → logprob: -9.96702766418457

Token 185: ' num' (ID: 2269)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.000993272173218429
    2. ' cnt' → logprob: -7.625993251800537
    3. 'return' → logprob: -8.625993728637695
    4. '
' → logprob: -9.000993728637695
    5. 'num' (adapté à ' num') → logprob: -9.625993728637695
    6. '       ' → logprob: -10.125993728637695
    7. 'count' → logprob: -10.625993728637695
    8. '   ' → logprob: -10.750993728637695
    9. '	cnt' → logprob: -11.000993728637695
    10. '           ' → logprob: -11.750993728637695

Token 186: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.21306584775447845
    2. '[' → logprob: -1.8380658626556396
    3. '[num' → logprob: -3.5880658626556396
    4. '[idx' → logprob: -6.4630656242370605
    5. '[c' → logprob: -6.8380656242370605
    6. '[count' → logprob: -7.0880656242370605
    7. '[counter' → logprob: -7.2130656242370605
    8. '[
' → logprob: -8.713066101074219
    9. '[len' → logprob: -9.213066101074219
    10. 'cnt' → logprob: -9.338066101074219

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9423021674156189
    2. ']+=' → logprob: -0.9423021674156189
    3. '+=' → logprob: -1.9423022270202637
    4. ' +=' → logprob: -2.5673022270202637
    5. '[' → logprob: -8.567301750183105
    6. ' ]' → logprob: -9.067301750183105
    7. ')' → logprob: -9.442301750183105
    8. '+' → logprob: -11.817301750183105
    9. ']=' → logprob: -12.817301750183105
    10. '   ' → logprob: -12.817301750183105

Token 188: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3869214951992035
    2. ' +=' → logprob: -1.1369215250015259
    3. ']+=' → logprob: -10.511921882629395
    4. '[' → logprob: -11.386921882629395
    5. '[cnt' → logprob: -11.886921882629395
    6. '=' → logprob: -12.761921882629395
    7. '[count' → logprob: -14.136921882629395
    8. '+' → logprob: -15.011921882629395
    9. '[counter' → logprob: -15.636921882629395
    10. ' ' → logprob: -15.761921882629395

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000805341056548059
    2. ' ' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.250804901123047
    4. '<|end|>' → logprob: -15.750804901123047
    5. '  ' → logprob: -16.875804901123047
    6. '0' → logprob: -18.000804901123047
    7. '```' → logprob: -18.000804901123047
    8. '    ' → logprob: -18.250804901123047
    9. '-' → logprob: -18.625804901123047
    10. '
' → logprob: -18.750804901123047

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -17.25000762939453
    4. '```' → logprob: -18.37500762939453
    5. '-' → logprob: -18.62500762939453
    6. '   ' → logprob: -19.00000762939453
    7. '0' → logprob: -19.25000762939453
    8. '
' → logprob: -19.87500762939453
    9. 'def' → logprob: -20.12500762939453
    10. '  ' → logprob: -20.25000762939453

Token 191: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011270275339484215
    2. '       ' → logprob: -4.511270046234131
    3. 'return' → logprob: -8.886270523071289
    4. '
' → logprob: -10.636270523071289
    5. '               ' → logprob: -10.886270523071289
    6. '   ' → logprob: -11.011270523071289
    7. ' return' → logprob: -11.136270523071289
    8. 'cnt' → logprob: -13.136270523071289
    9. '            
' → logprob: -13.386270523071289
    10. '		' → logprob: -13.761270523071289

Token 192: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009846967877820134
    2. '       ' → logprob: -7.0009846687316895
    3. 'return' → logprob: -10.375985145568848
    4. '               ' → logprob: -11.125985145568848
    5. '
' → logprob: -11.375985145568848
    6. ' return' → logprob: -11.875985145568848
    7. '   ' → logprob: -12.125985145568848
    8. 'cnt' → logprob: -13.125985145568848
    9. '                   ' → logprob: -15.250985145568848
    10. '		' → logprob: -15.375985145568848

Token 193: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013172236271202564
    2. ' cnt' → logprob: -5.138172149658203
    3. 'cnt' (adapté à ' cnt') → logprob: -5.138172149658203
    4. '   ' → logprob: -7.138172149658203
    5. '           ' → logprob: -8.138172149658203
    6. '
' → logprob: -9.513172149658203
    7. '	cnt' → logprob: -9.763172149658203
    8. '	   ' → logprob: -10.638172149658203
    9. '(cnt' → logprob: -10.638172149658203
    10. '[cnt' → logprob: -11.263172149658203

Token 194: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.030471231788396835
    2. ' +=' → logprob: -3.5304713249206543
    3. '+' → logprob: -7.280471324920654
    4. '=' → logprob: -10.405470848083496
    5. '++' → logprob: -13.905470848083496
    6. ']+=' → logprob: -16.030471801757812
    7. '+="' → logprob: -16.030471801757812
    8. '+='' → logprob: -16.780471801757812
    9. '   ' → logprob: -17.530471801757812
    10. ' ' → logprob: -17.530471801757812

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '```' → logprob: -18.75048828125
    4. '
' → logprob: -19.12548828125
    5. '   ' → logprob: -19.50048828125
    6. '0' → logprob: -20.12548828125
    7. '１' → logprob: -20.37548828125
    8. '  ' → logprob: -20.81298828125
    9. ' ' → logprob: -20.87548828125
    10. '۱' → logprob: -21.50048828125

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.5
    4. '<|end|>' → logprob: -20.375
    5. '۱' → logprob: -20.875
    6. '१' → logprob: -21.875
    7. '   ' → logprob: -21.875
    8. '１' → logprob: -22.0
    9. '১' → logprob: -22.625
    10. '
' → logprob: -22.8125

Token 197: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8014377951622009
    2. '<|end|>' → logprob: -1.0514378547668457
    3. '   ' → logprob: -1.6764378547668457
    4. 'def' → logprob: -5.176437854766846
    5. '<|end|>' → logprob: -6.176437854766846
    6. ' ' → logprob: -6.676437854766846
    7. ' if' → logprob: -6.926437854766846
    8. 'else' → logprob: -7.051437854766846
    9. '```' → logprob: -7.051437854766846
    10. ' else' → logprob: -7.676437854766846

Token 200: ' not' (ID: 625)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -1.1513508558273315
    2. ' find' → logprob: -1.2763508558273315
    3. ' char' → logprob: -1.2763508558273315
    4. 'find' → logprob: -2.526350975036621
    5. ' not' → logprob: -4.276350975036621
    6. ' cnt' → logprob: -4.651350975036621
    7. 'not' → logprob: -5.401350975036621
    8. ' letter' → logprob: -5.651350975036621
    9. 'cnt' → logprob: -5.651350975036621
    10. 'process' → logprob: -5.776350975036621

Token 201: ' char' (ID: 1826)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.6182120442390442
    2. 'find' → logprob: -2.1182119846343994
    3. ' any' → logprob: -2.2432119846343994
    4. ' alp' → logprob: -2.4932119846343994
    5. 'alp' → logprob: -3.2432119846343994
    6. ' char' → logprob: -3.7432119846343994
    7. 'char' → logprob: -3.8682119846343994
    8. 'any' → logprob: -4.4932122230529785
    9. ' process' → logprob: -4.4932122230529785
    10. '(find' → logprob: -4.7432122230529785

Token 202: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11286064237356186
    2. 'in' → logprob: -2.237860679626465
    3. '_in' → logprob: -11.487860679626465
    4. ' ' → logprob: -11.987860679626465
    5. 'In' → logprob: -11.987860679626465
    6. 's' → logprob: -12.487860679626465
    7. '[' → logprob: -13.237860679626465
    8. ' or' → logprob: -13.487860679626465
    9. 'is' → logprob: -13.612860679626465
    10. 'n' → logprob: -13.862860679626465

Token 203: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.06996455788612366
    2. ' alp' → logprob: -2.694964647293091
    3. 'alb' → logprob: -10.819964408874512
    4. 'al' → logprob: -12.694964408874512
    5. 'alph' → logprob: -13.319964408874512
    6. 'alf' → logprob: -14.444964408874512
    7. 'alc' → logprob: -14.694964408874512
    8. ' al' → logprob: -14.819964408874512
    9. ' ' → logprob: -14.944964408874512
    10. ' alb' → logprob: -15.069964408874512

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31335607171058655
    2. ':
' → logprob: -1.3133560419082642
    3. ' :' → logprob: -10.438356399536133
    4. '   ' → logprob: -10.688356399536133
    5. ' :
' → logprob: -10.813356399536133
    6. ',' → logprob: -12.438356399536133
    7. '):
' → logprob: -12.438356399536133
    8. ':

' → logprob: -12.563356399536133
    9. '.append' → logprob: -12.813356399536133
    10. ':
' → logprob: -13.438356399536133

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29255208373069763
    2. ':
' → logprob: -1.54255211353302
    3. 'alp' → logprob: -4.0425519943237305
    4. ':' → logprob: -4.4175519943237305
    5. ' alp' → logprob: -5.2925519943237305
    6. '   ' → logprob: -5.6675519943237305
    7. ' :
' → logprob: -7.0425519943237305
    8. '):
' → logprob: -8.66755199432373
    9. ' al' → logprob: -8.91755199432373
    10. ',' → logprob: -8.91755199432373

Token 206: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' (adapté à ' alp') → logprob: -0.1213403046131134
    2. ' alp' → logprob: -2.246340274810791
    3. '   ' → logprob: -5.496340274810791
    4. '       ' → logprob: -5.621340274810791
    5. 'update' → logprob: -8.49634075164795
    6. 'alb' → logprob: -8.49634075164795
    7. 'al' → logprob: -8.74634075164795
    8. ' update' → logprob: -9.87134075164795
    9. 'alph' → logprob: -10.12134075164795
    10. 'ap' → logprob: -11.49634075164795

Token 207: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018029935017693788
    2. '.' → logprob: -8.6251802444458
    3. '.app' → logprob: -15.1251802444458
    4. '.push' → logprob: -16.000181198120117
    5. ' .' → logprob: -16.250181198120117
    6. 'append' → logprob: -16.250181198120117
    7. '.ap' → logprob: -16.375181198120117
    8. '.add' → logprob: -16.625181198120117
    9. '.extend' → logprob: -17.375181198120117
    10. '.Append' → logprob: -18.375181198120117

Token 208: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -2.2127087504486553e-05
    2. '(' → logprob: -11.000021934509277
    3. 'char' → logprob: -12.250021934509277
    4. '(character' → logprob: -15.250021934509277
    5. '(letter' → logprob: -15.750021934509277
    6. ' (' → logprob: -16.000022888183594
    7. '(chr' → logprob: -16.750022888183594
    8. '(car' → logprob: -16.750022888183594
    9. ',char' → logprob: -17.375022888183594
    10. '<char' → logprob: -18.500022888183594

Token 209: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0007154120248742402
    2. ')' → logprob: -7.250715255737305
    3. ')
' → logprob: -12.250715255737305
    4. ' )
' → logprob: -14.875715255737305
    5. ')

' → logprob: -15.375715255737305
    6. '       ' → logprob: -16.125715255737305
    7. '   ' → logprob: -16.875715255737305
    8. '),' → logprob: -18.375715255737305
    9. ');
' → logprob: -18.750715255737305
    10. ',' → logprob: -19.125715255737305

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023552918806672096
    2. 'num' → logprob: -4.023552894592285
    3. '   ' → logprob: -5.398552894592285
    4. ' num' → logprob: -7.148552894592285
    5. ',num' → logprob: -10.773552894592285
    6. '           ' → logprob: -11.148552894592285
    7. ',' → logprob: -11.523552894592285
    8. '	num' → logprob: -11.523552894592285
    9. ' ' → logprob: -11.898552894592285
    10. '[num' → logprob: -12.398552894592285

Token 211: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -1.5690089639974758e-05
    2. ' num' → logprob: -11.500015258789062
    3. '1' → logprob: -12.125015258789062
    4. '
' → logprob: -17.250015258789062
    5. '   ' → logprob: -17.500015258789062
    6. '	num' → logprob: -18.750015258789062
    7. '(num' → logprob: -19.375015258789062
    8. '[num' → logprob: -19.375015258789062
    9. '```' → logprob: -19.625015258789062
    10. '0' → logprob: -19.750015258789062

Token 212: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019291093340143561
    2. '.' → logprob: -6.25192928314209
    3. 'append' → logprob: -15.37692928314209
    4. ' .' → logprob: -16.001928329467773
    5. '.app' → logprob: -16.376928329467773
    6. '.Append' → logprob: -17.251928329467773
    7. '.ap' → logprob: -19.501928329467773
    8. '.extend' → logprob: -19.626928329467773
    9. 'Append' → logprob: -19.751928329467773
    10. '.push' → logprob: -20.001928329467773

Token 213: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.313262403011322
    2. '(' → logprob: -1.3132624626159668
    3. '(
' → logprob: -14.813261985778809
    4. ' ' → logprob: -15.313261985778809
    5. '0' → logprob: -16.938262939453125
    6. '   ' → logprob: -18.188262939453125
    7. ' (' → logprob: -18.438262939453125
    8. '```' → logprob: -18.813262939453125
    9. '
' → logprob: -19.313262939453125
    10. 'def' → logprob: -20.313262939453125

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -16.250001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '```' → logprob: -18.625001907348633
    6. ')' → logprob: -19.562501907348633
    7. '
' → logprob: -19.687501907348633
    8. '2' → logprob: -19.875001907348633
    9. '[' → logprob: -20.500001907348633
    10. '<|end|>' → logprob: -20.625001907348633

Token 215: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4153549020411447e-05
    2. ')
' → logprob: -10.75002384185791
    3. '<|end|>' → logprob: -13.37502384185791
    4. ')return' → logprob: -14.25002384185791
    5. ' )' → logprob: -15.87502384185791
    6. '}' → logprob: -16.875024795532227
    7. ')

' → logprob: -17.000024795532227
    8. '   ' → logprob: -17.375024795532227
    9. ')}' → logprob: -17.500024795532227
    10. '),' → logprob: -17.500024795532227

Token 216: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018064012750983238
    2. '<|end|>' → logprob: -4.268064022064209
    3. ')' → logprob: -7.018064022064209
    4. ',' → logprob: -7.268064022064209
    5. '<|end|>' → logprob: -7.643064022064209
    6. '#' → logprob: -7.893064022064209
    7. ' def' → logprob: -8.01806354522705
    8. '[' → logprob: -8.01806354522705
    9. '.' → logprob: -8.51806354522705
    10. '
' → logprob: -8.76806354522705

Token 217: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.35417211055755615
    2. 'main' → logprob: -2.1041722297668457
    3. ' compare' → logprob: -2.7291722297668457
    4. ' check' → logprob: -3.9791722297668457
    5. 'compare' → logprob: -3.9791722297668457
    6. ' count' → logprob: -4.729172229766846
    7. ' process' → logprob: -4.979172229766846
    8. ' def' → logprob: -4.979172229766846
    9. ' is' → logprob: -5.104172229766846
    10. 'count' → logprob: -5.354172229766846

Token 218: '_and' (ID: 18645)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.6209831833839417
    2. '_counts' → logprob: -1.1209831237792969
    3. '_' → logprob: -2.995983123779297
    4. '_results' → logprob: -4.370983123779297
    5. '_freq' → logprob: -4.370983123779297
    6. '_output' → logprob: -4.745983123779297
    7. '_letter' → logprob: -4.745983123779297
    8. '_letters' → logprob: -4.745983123779297
    9. '_count' → logprob: -4.995983123779297
    10. '_stats' → logprob: -4.995983123779297

Token 219: '_qu' (ID: 32744)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.746185302734375
    2. '_return' → logprob: -1.246185302734375
    3. 'exit' → logprob: -2.621185302734375
    4. 'count' → logprob: -2.746185302734375
    5. '_exit' → logprob: -3.371185302734375
    6. '_compare' → logprob: -3.746185302734375
    7. '_count' → logprob: -4.621185302734375
    8. 'reset' → logprob: -4.871185302734375
    9. '_reset' → logprob: -5.621185302734375
    10. 'compare' → logprob: -5.621185302734375

Token 220: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.41342440247535706
    2. 'ick' → logprob: -1.1634243726730347
    3. 'al' → logprob: -4.788424491882324
    4. 'e' → logprob: -4.788424491882324
    5. 'ant' → logprob: -6.788424491882324
    6. 'ack' → logprob: -6.788424491882324
    7. 'ote' → logprob: -6.788424491882324
    8. 'est' → logprob: -6.913424491882324
    9. 'ite' → logprob: -7.288424491882324
    10. 'eit' → logprob: -7.788424491882324

Token 221: '(msg' (ID: 15182)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003289096348453313
    2. ' ():' → logprob: -8.50032901763916
    3. '():
' → logprob: -9.62532901763916
    4. '()' → logprob: -10.50032901763916
    5. '(' → logprob: -11.25032901763916
    6. '_' → logprob: -11.37532901763916
    7. '()(' → logprob: -13.00032901763916
    8. ' ()' → logprob: -13.12532901763916
    9. '():

' → logprob: -13.75032901763916
    10. ':' → logprob: -14.37532901763916

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04915396496653557
    2. '(msg' → logprob: -3.549154043197632
    3. '):
' → logprob: -4.049153804779053
    4. ')' → logprob: -6.549153804779053
    5. '(message' → logprob: -9.049154281616211
    6. ',msg' → logprob: -9.299154281616211
    7. ',' → logprob: -10.049154281616211
    8. '):

' → logprob: -10.299154281616211
    9. '):
' → logprob: -10.549154281616211
    10. '   ' → logprob: -11.049154281616211

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016401888569816947
    2. ' print' → logprob: -6.501640319824219
    3. 'print' → logprob: -9.126640319824219
    4. 'def' → logprob: -10.876640319824219
    5. ' def' → logprob: -12.501640319824219
    6. 'import' → logprob: -12.751640319824219
    7. '```' → logprob: -13.126640319824219
    8. ' raise' → logprob: -14.001640319824219
    9. ' import' → logprob: -14.251640319824219
    10. '
' → logprob: -16.25164031982422

Token 224: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0058498624712228775
    2. ' print' → logprob: -5.755849838256836
    3. '   ' → logprob: -6.005849838256836
    4. 'import' → logprob: -8.505849838256836
    5. 'raise' → logprob: -13.505849838256836
    6. '```' → logprob: -15.755849838256836
    7. ' raise' → logprob: -16.130849838256836
    8. ' import' → logprob: -16.255849838256836
    9. '
' → logprob: -16.755849838256836
    10. 'exit' → logprob: -16.755849838256836

Token 225: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.00016361083544325083
    2. '(' → logprob: -8.750164031982422
    3. 'msg' → logprob: -12.375164031982422
    4. '()' → logprob: -14.375164031982422
    5. '(f' → logprob: -15.625164031982422
    6. ',msg' → logprob: -16.875164031982422
    7. '[msg' → logprob: -16.875164031982422
    8. '(m' → logprob: -17.500164031982422
    9. '(ms' → logprob: -17.875164031982422
    10. '	msg' → logprob: -17.875164031982422

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031781906727701426
    2. ')
' → logprob: -5.753178119659424
    3. ' )' → logprob: -15.628178596496582
    4. ')
' → logprob: -15.878178596496582
    5. ')return' → logprob: -17.128177642822266
    6. '),' → logprob: -17.378177642822266
    7. '()' → logprob: -18.003177642822266
    8. '())' → logprob: -18.253177642822266
    9. ')`' → logprob: -18.503177642822266
    10. ')

' → logprob: -18.628177642822266

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35466235876083374
    2. 'exit' → logprob: -1.3546624183654785
    3. 'import' → logprob: -3.2296624183654785
    4. 'quit' → logprob: -7.6046624183654785
    5. ' exit' → logprob: -8.35466194152832
    6. 'raise' → logprob: -9.10466194152832
    7. 'return' → logprob: -9.35466194152832
    8. '	exit' → logprob: -10.10466194152832
    9. '_exit' → logprob: -12.47966194152832
    10. ' quit' → logprob: -12.60466194152832

Token 228: ' quit' (ID: 27737)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.014209349639713764
    2. 'quit' (adapté à ' quit') → logprob: -4.264209270477295
    3. 'return' → logprob: -10.014209747314453
    4. 'import' → logprob: -14.014209747314453
    5. ' exit' → logprob: -15.764209747314453
    6. ' quit' → logprob: -17.014209747314453
    7. '   ' → logprob: -18.014209747314453
    8. '	exit' → logprob: -18.889209747314453
    9. 'raise' → logprob: -18.889209747314453
    10. '
' → logprob: -19.264209747314453

Token 229: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.5252596464706585e-05
    2. '(' → logprob: -10.250044822692871
    3. '()
' → logprob: -11.875044822692871
    4. '()`' → logprob: -14.125044822692871
    5. '()

' → logprob: -14.250044822692871
    6. ' ()' → logprob: -15.000044822692871
    7. '()"' → logprob: -15.125044822692871
    8. '()\' → logprob: -15.625044822692871
    9. '()<' → logprob: -15.750044822692871
    10. '().' → logprob: -16.125045776367188

Token 230: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009151478880085051
    2. 'n' → logprob: -7.375915050506592
    3. 's' → logprob: -8.62591552734375
    4. 'if' → logprob: -9.37591552734375
    5. 'for' → logprob: -11.62591552734375
    6. 'input' → logprob: -13.00091552734375
    7. 'a' → logprob: -13.37591552734375
    8. 'ndef' → logprob: -13.50091552734375
    9. '#' → logprob: -13.75091552734375
    10. ' def' → logprob: -13.87591552734375

Token 231: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.056355953216552734
    2. 'main' → logprob: -3.1813559532165527
    3. ' check' → logprob: -5.431355953216553
    4. ' compare' → logprob: -5.806355953216553
    5. ' solve' → logprob: -6.056355953216553
    6. ' is' → logprob: -6.931355953216553
    7. 'compare' → logprob: -8.056356430053711
    8. 'solve' → logprob: -8.056356430053711
    9. ' can' → logprob: -8.181356430053711
    10. ' equal' → logprob: -8.306356430053711

Token 232: '_num' (ID: 9834)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.926405131816864
    2. '_counts' → logprob: -2.551405191421509
    3. '_an' → logprob: -2.551405191421509
    4. '_balance' → logprob: -2.676405191421509
    5. '(s' → logprob: -3.051405191421509
    6. '_letters' → logprob: -3.301405191421509
    7. '_strings' → logprob: -3.426405191421509
    8. '_e' → logprob: -3.551405191421509
    9. '_chars' → logprob: -3.551405191421509
    10. '_bal' → logprob: -3.801405191421509

Token 233: '_lists' (ID: 93609)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5978965163230896
    2. 's' → logprob: -0.9728965163230896
    3. '(' → logprob: -3.2228965759277344
    4. '_s' → logprob: -4.222896575927734
    5. '(_' → logprob: -4.722896575927734
    6. '_equal' → logprob: -5.722896575927734
    7. '(num' → logprob: -6.597896575927734
    8. '_diff' → logprob: -7.097896575927734
    9. '(a' → logprob: -7.722896575927734
    10. '_' → logprob: -7.847896575927734

Token 234: '(num' (ID: 15828)
  Prédit: '(al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(al' → logprob: -0.10967092961072922
    2. '(' → logprob: -2.984670877456665
    3. '(num' → logprob: -3.234670877456665
    4. '(s' → logprob: -4.484671115875244
    5. '(_' → logprob: -6.734671115875244
    6. '(ap' → logprob: -6.984671115875244
    7. '(a' → logprob: -8.859670639038086
    8. '(nums' → logprob: -9.109670639038086
    9. '(n' → logprob: -9.359670639038086
    10. '(len' → logprob: -10.359670639038086

Token 235: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.007429980672895908
    2. 's' → logprob: -5.882430076599121
    3. '):' → logprob: -6.132430076599121
    4. '1' → logprob: -6.257430076599121
    5. '):
' → logprob: -8.257430076599121
    6. '_t' → logprob: -9.132430076599121
    7. ',' → logprob: -9.507430076599121
    8. '_' → logprob: -10.757430076599121
    9. ')' → logprob: -11.382430076599121
    10. '   ' → logprob: -11.382430076599121

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006054531782865524
    2. ',num' → logprob: -5.131054401397705
    3. ' ,' → logprob: -9.006054878234863
    4. '_,' → logprob: -13.256054878234863
    5. ',
' → logprob: -14.881054878234863
    6. '   ' → logprob: -15.006054878234863
    7. 's' → logprob: -15.256054878234863
    8. ' ' → logprob: -16.256053924560547
    9. 'num' → logprob: -16.381053924560547
    10. '[num' → logprob: -16.631053924560547

Token 237: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005235291086137295
    2. ' num' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.38023567199707
    4. ')' → logprob: -15.75523567199707
    5. ' ' → logprob: -15.75523567199707
    6. '	num' → logprob: -16.13023567199707
    7. '[num' → logprob: -16.25523567199707
    8. '  ' → logprob: -16.75523567199707
    9. '_num' → logprob: -16.75523567199707
    10. 'n' → logprob: -17.00523567199707

Token 238: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.008129963040119e-06
    2. '_s' → logprob: -12.750003814697266
    3. 't' → logprob: -14.250003814697266
    4. ',' → logprob: -15.875003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '_' → logprob: -17.000003814697266
    7. '```' → logprob: -17.375003814697266
    8. ' _' → logprob: -17.750003814697266
    9. '_,' → logprob: -17.875003814697266
    10. 's' → logprob: -18.125003814697266

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002541417023167014
    2. '):
' → logprob: -6.002541542053223
    3. ')' → logprob: -10.377541542053223
    4. ',' → logprob: -10.877541542053223
    5. '):
' → logprob: -11.877541542053223
    6. ' ):' → logprob: -12.377541542053223
    7. '   ' → logprob: -13.127541542053223
    8. ':' → logprob: -14.377541542053223
    9. 's' → logprob: -14.752541542053223
    10. '):

' → logprob: -15.002541542053223

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0321187861263752
    2. 'for' → logprob: -3.782118797302246
    3. 'if' → logprob: -4.782118797302246
    4. ' for' → logprob: -8.282118797302246
    5. ' if' → logprob: -8.782118797302246
    6. 'return' → logprob: -10.157118797302246
    7. '```' → logprob: -11.532118797302246
    8. ' return' → logprob: -14.657118797302246
    9. '   ' → logprob: -16.03211784362793
    10. ' ' → logprob: -17.28211784362793

Token 241: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14009113609790802
    2. 'for' → logprob: -2.2650911808013916
    3. 'return' → logprob: -3.6400911808013916
    4. '   ' → logprob: -7.5150909423828125
    5. 'sorted' → logprob: -10.765090942382812
    6. ' if' → logprob: -11.140090942382812
    7. 'max' → logprob: -11.265090942382812
    8. 'total' → logprob: -11.515090942382812
    9. 'def' → logprob: -11.640090942382812
    10. 'num' → logprob: -11.640090942382812

Token 242: ' num' (ID: 2269)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18834997713565826
    2. 'sorted' → logprob: -2.438349962234497
    3. 'sum' → logprob: -2.563349962234497
    4. 'num' → logprob: -5.563350200653076
    5. ' len' → logprob: -5.938350200653076
    6. ' sorted' → logprob: -7.813350200653076
    7. ' sum' → logprob: -8.688349723815918
    8. 'set' → logprob: -9.063349723815918
    9. 'not' → logprob: -9.938349723815918
    10. 'all' → logprob: -10.813349723815918

Token 243: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.3782830137643032e-05
    2. 's' → logprob: -11.62501335144043
    3. '_' → logprob: -12.75001335144043
    4. ' _' → logprob: -14.62501335144043
    5. '_t' → logprob: -14.87501335144043
    6. '```' → logprob: -14.87501335144043
    7. ')_' → logprob: -16.62501335144043
    8. '_a' → logprob: -16.87501335144043
    9. '   ' → logprob: -17.00001335144043
    10. '
' → logprob: -17.12501335144043

Token 244: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7119965553283691
    2. '!=' → logprob: -0.7119965553283691
    3. ' !=' → logprob: -4.211996555328369
    4. ' ==' → logprob: -5.586996555328369
    5. '[' → logprob: -9.961996078491211
    6. '>' → logprob: -11.086996078491211
    7. '   ' → logprob: -11.086996078491211
    8. '<' → logprob: -12.461996078491211
    9. '=' → logprob: -12.461996078491211
    10. '[:]' → logprob: -12.711996078491211

Token 245: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06993865221738815
    2. ' num' → logprob: -2.6949386596679688
    3. ' ' → logprob: -14.319938659667969
    4. '	num' → logprob: -14.444938659667969
    5. '[num' → logprob: -15.194938659667969
    6. '(num' → logprob: -15.569938659667969
    7. '   ' → logprob: -15.694938659667969
    8. '
' → logprob: -15.694938659667969
    9. ',num' → logprob: -16.31993865966797
    10. '_num' → logprob: -16.69493865966797

Token 246: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.417976379045285e-05
    2. '_s' → logprob: -10.125043869018555
    3. 't' → logprob: -12.500043869018555
    4. '_' → logprob: -15.375043869018555
    5. ' _' → logprob: -16.625043869018555
    6. '   ' → logprob: -17.500043869018555
    7. 's' → logprob: -17.500043869018555
    8. '```' → logprob: -18.500043869018555
    9. '_
' → logprob: -18.625043869018555
    10. ''_' → logprob: -19.625043869018555

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00546319829300046
    2. ':
' → logprob: -5.255463123321533
    3. ':return' → logprob: -9.255463600158691
    4. '):' → logprob: -9.755463600158691
    5. ' or' → logprob: -10.505463600158691
    6. '   ' → logprob: -10.880463600158691
    7. ' and' → logprob: -11.380463600158691
    8. 'and' → logprob: -12.255463600158691
    9. 'or' → logprob: -12.255463600158691
    10. '):
' → logprob: -12.880463600158691

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007129086880013347
    2. 'print' → logprob: -7.500712871551514
    3. '   ' → logprob: -9.875713348388672
    4. ':' → logprob: -10.375713348388672
    5. ':
' → logprob: -10.375713348388672
    6. ' print' → logprob: -10.625713348388672
    7. 'return' → logprob: -11.500713348388672
    8. ' return' → logprob: -12.500713348388672
    9. '      ' → logprob: -12.625713348388672
    10. ',' → logprob: -13.000713348388672

Token 249: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003339671529829502
    2. ' print' → logprob: -6.503339767456055
    3. 'return' → logprob: -6.753339767456055
    4. '   ' → logprob: -7.378339767456055
    5. '       ' → logprob: -10.503339767456055
    6. ' return' → logprob: -11.628339767456055
    7. '    ' → logprob: -12.753339767456055
    8. '  ' → logprob: -13.003339767456055
    9. ' ' → logprob: -13.878339767456055
    10. '	print' → logprob: -14.753339767456055

Token 250: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.009001916274428368
    2. '("' → logprob: -5.259001731872559
    3. '("_' → logprob: -5.884001731872559
    4. 'And' → logprob: -7.759001731872559
    5. '(' → logprob: -8.134001731872559
    6. '()' → logprob: -9.509001731872559
    7. '('_' → logprob: -9.759001731872559
    8. 'and' → logprob: -10.384001731872559
    9. '('' → logprob: -10.384001731872559
    10. '_' → logprob: -10.634001731872559

Token 251: '_qu' (ID: 32744)
  Prédit: '_qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qu' → logprob: -0.6931532025337219
    2. 'quit' → logprob: -0.6931532025337219
    3. 'qu' → logprob: -13.068153381347656
    4. ' quit' → logprob: -13.443153381347656
    5. 'Quit' → logprob: -13.818153381347656
    6. '_exit' → logprob: -14.068153381347656
    7. '.quit' → logprob: -15.318153381347656
    8. 'exit' → logprob: -15.943153381347656
    9. 'QUIT' → logprob: -17.068153381347656
    10. '_q' → logprob: -17.318153381347656

Token 252: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0001214237418025732
    2. 'quit' → logprob: -10.687621116638184
    3. 'it's' → logprob: -11.125121116638184
    4. 'ot' → logprob: -11.500121116638184
    5. '```' → logprob: -11.562621116638184
    6. '
' → logprob: -11.812621116638184
    7. 'ит' → logprob: -12.562621116638184
    8. '``' → logprob: -12.875121116638184
    9. 'print' → logprob: -13.062621116638184
    10. 'Quit' → logprob: -13.125121116638184

Token 253: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005337047390639782
    2. '('' → logprob: -5.505337238311768
    3. '(' → logprob: -7.380337238311768
    4. '("("' → logprob: -8.13033676147461
    5. '("")' → logprob: -8.38033676147461
    6. ' ("' → logprob: -10.00533676147461
    7. '("(' → logprob: -10.25533676147461
    8. '(":' → logprob: -11.88033676147461
    9. '("'' → logprob: -11.88033676147461
    10. '(("' → logprob: -12.88033676147461

Token 254: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.44179266691207886
    2. 'No' → logprob: -1.1917927265167236
    3. 'Impossible' → logprob: -3.9417927265167236
    4. '0' → logprob: -5.0667924880981445
    5. 'im' → logprob: -5.4417924880981445
    6. '-' → logprob: -5.4417924880981445
    7. 'IMP' → logprob: -5.5667924880981445
    8. 'Not' → logprob: -6.0667924880981445
    9. 'N' → logprob: -6.5667924880981445
    10. 'NE' → logprob: -6.6917924880981445

Token 255: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004720137920230627
    2. '')
' → logprob: -5.504720211029053
    3. '')

' → logprob: -8.504719734191895
    4. ')' → logprob: -9.379719734191895
    5. '")' → logprob: -9.504719734191895
    6. '!' → logprob: -9.504719734191895
    7. 'def' → logprob: -9.754719734191895
    8. '')
' → logprob: -10.004719734191895
    9. '\n' → logprob: -10.629719734191895
    10. ''' → logprob: -10.754719734191895

Token 256: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024323153775185347
    2. '<|end|>' → logprob: -8.375243186950684
    3. '```' → logprob: -12.000243186950684
    4. '#' → logprob: -13.125243186950684
    5. '
' → logprob: -13.500243186950684
    6. ' def' → logprob: -13.875243186950684
    7. 'return' → logprob: -14.125243186950684
    8. '<|end|>' → logprob: -14.625243186950684
    9. ')' → logprob: -15.000243186950684
    10. 'for' → logprob: -16.500244140625

Token 257: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18715989589691162
    2. ' def' → logprob: -2.562160015106201
    3. ' check' → logprob: -3.562160015106201
    4. ' compare' → logprob: -3.812160015106201
    5. 'def' → logprob: -4.312160015106201
    6. 'main' → logprob: -4.687160015106201
    7. ' is' → logprob: -4.937160015106201
    8. ' process' → logprob: -5.687160015106201
    9. ' can' → logprob: -5.812160015106201
    10. ' solve' → logprob: -6.187160015106201

Token 258: '_strings' (ID: 87251)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9502699375152588
    2. '(' → logprob: -1.3252699375152588
    3. '_step' → logprob: -2.450269937515259
    4. '_input' → logprob: -2.825269937515259
    5. '_' → logprob: -3.075269937515259
    6. '(s' → logprob: -3.700269937515259
    7. '_s' → logprob: -3.825269937515259
    8. '_strings' → logprob: -3.950269937515259
    9. '_steps' → logprob: -4.32526969909668
    10. 's' → logprob: -4.32526969909668

Token 259: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00010843054042197764
    2. ' (' → logprob: -9.37510871887207
    3. '(' → logprob: -10.75010871887207
    4. '(a' → logprob: -14.12510871887207
    5. '(S' → logprob: -14.87510871887207
    6. '(i' → logprob: -15.25010871887207
    7. '((' → logprob: -15.87510871887207
    8. '(strings' → logprob: -16.25010871887207
    9. '(input' → logprob: -16.37510871887207
    10. '(x' → logprob: -17.12510871887207

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003939728485420346
    2. ',t' → logprob: -7.875393867492676
    3. ' ,' → logprob: -11.250393867492676
    4. ',
' → logprob: -14.875393867492676
    5. 't' → logprob: -15.375393867492676
    6. ':' → logprob: -16.375394821166992
    7. '1' → logprob: -17.125394821166992
    8. '_,' → logprob: -17.250394821166992
    9. ',s' → logprob: -17.375394821166992
    10. '   ' → logprob: -17.625394821166992

Token 261: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.225424125790596
    2. ' t' → logprob: -1.6004241704940796
    3. '   ' → logprob: -12.100423812866211
    4. '    ' → logprob: -13.475423812866211
    5. ' ' → logprob: -14.225423812866211
    6. '  ' → logprob: -14.725423812866211
    7. '       ' → logprob: -14.725423812866211
    8. '        ' → logprob: -15.100423812866211
    9. 's' → logprob: -15.225423812866211
    10. ' ' → logprob: -15.350423812866211

Token 262: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12059183418750763
    2. ',' → logprob: -2.245591878890991
    3. '):
' → logprob: -4.870591640472412
    4. '   ' → logprob: -10.74559211730957
    5. '):
' → logprob: -11.12059211730957
    6. ',s' → logprob: -11.24559211730957
    7. ':' → logprob: -11.62059211730957
    8. ')' → logprob: -12.74559211730957
    9. ' ):' → logprob: -12.74559211730957
    10. ' ,' → logprob: -12.87059211730957

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00661056861281395
    2. 'alp' → logprob: -5.25661039352417
    3. ' alp' → logprob: -6.75661039352417
    4. 'n' → logprob: -8.881610870361328
    5. 'al' → logprob: -10.881610870361328
    6. ' n' → logprob: -11.006610870361328
    7. 'alb' → logprob: -11.756610870361328
    8. '```' → logprob: -11.881610870361328
    9. 'def' → logprob: -12.631610870361328
    10. 'length' → logprob: -12.756610870361328

Token 264: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' (adapté à ' alp') → logprob: -0.0038456751499325037
    2. '   ' → logprob: -6.753845691680908
    3. ' alp' → logprob: -6.878845691680908
    4. 'n' → logprob: -7.003845691680908
    5. 'if' → logprob: -8.62884521484375
    6. 'length' → logprob: -8.62884521484375
    7. 'len' → logprob: -8.75384521484375
    8. 'alf' → logprob: -9.75384521484375
    9. 'alph' → logprob: -10.37884521484375
    10. 'alb' → logprob: -10.37884521484375

Token 265: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.3902033970225602e-05
    2. 's' → logprob: -12.125014305114746
    3. '   ' → logprob: -12.500014305114746
    4. ',' → logprob: -13.250014305114746
    5. '_' → logprob: -14.125014305114746
    6. ' _' → logprob: -14.625014305114746
    7. '_a' → logprob: -14.875014305114746
    8. ' =' → logprob: -15.125014305114746
    9. '=' → logprob: -15.375014305114746
    10. '_,' → logprob: -15.625014305114746

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.250041007995605
    3. '=' → logprob: -12.625041007995605
    4. ' =' → logprob: -13.750041007995605
    5. 's' → logprob: -14.750041007995605
    6. ',
' → logprob: -15.500041007995605
    7. '_,' → logprob: -15.500041007995605
    8. 'alp' → logprob: -16.25004005432129
    9. '=[],' → logprob: -16.62504005432129
    10. '[],' → logprob: -16.62504005432129

Token 267: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.1602402776479721
    2. ' alp' → logprob: -1.9102402925491333
    3. 'alb' → logprob: -11.160240173339844
    4. 'alph' → logprob: -14.035240173339844
    5. 'al' → logprob: -14.410240173339844
    6. ' Alp' → logprob: -15.785240173339844
    7. ' alph' → logprob: -16.035240173339844
    8. 'alf' → logprob: -16.285240173339844
    9. ' alb' → logprob: -16.535240173339844
    10. 'alpha' → logprob: -16.660240173339844

Token 268: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00022487416572403163
    2. '_s' → logprob: -8.500225067138672
    3. 't' → logprob: -10.875225067138672
    4. '_,' → logprob: -13.875225067138672
    5. ',' → logprob: -14.375225067138672
    6. '_' → logprob: -14.500225067138672
    7. ',_' → logprob: -15.750225067138672
    8. 's' → logprob: -15.875225067138672
    9. ' _' → logprob: -17.125225067138672
    10. ',t' → logprob: -18.625225067138672

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026872646412812173
    2. '=' → logprob: -8.500268936157227
    3. ' ,' → logprob: -9.875268936157227
    4. ' =' → logprob: -11.875268936157227
    5. ',num' → logprob: -12.000268936157227
    6. 'alp' → logprob: -15.000268936157227
    7. '_,' → logprob: -16.250268936157227
    8. 'num' → logprob: -17.125268936157227
    9. 'al' → logprob: -17.500268936157227
    10. '=[],' → logprob: -17.625268936157227

Token 270: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0007118358626030385
    2. ' num' → logprob: -7.250711917877197
    3. ' ' → logprob: -14.125711441040039
    4. '   ' → logprob: -14.375711441040039
    5. 'nums' → logprob: -14.875711441040039
    6. '  ' → logprob: -15.750711441040039
    7. ',' → logprob: -18.00071144104004
    8. '    ' → logprob: -18.00071144104004
    9. ',num' → logprob: -18.25071144104004
    10. 'n' → logprob: -18.37571144104004

Token 271: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.5
    3. ' _' → logprob: -16.375
    4. '=_' → logprob: -18.5
    5. '_' → logprob: -18.625
    6. '   ' → logprob: -18.875
    7. ',_' → logprob: -19.875
    8. '```' → logprob: -20.5
    9. ' =' → logprob: -21.25
    10. 'def' → logprob: -21.75

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001462107611587271
    2. ',num' → logprob: -8.87514591217041
    3. ' ,' → logprob: -12.00014591217041
    4. '=' → logprob: -15.87514591217041
    5. 'num' → logprob: -17.250146865844727
    6. '_,' → logprob: -17.750146865844727
    7. ' =' → logprob: -19.000146865844727
    8. 's' → logprob: -19.125146865844727
    9. '=num' → logprob: -19.375146865844727
    10. '‌,' → logprob: -19.375146865844727

Token 273: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0019329203059896827
    2. ' num' → logprob: -6.2519330978393555
    3. '   ' → logprob: -12.751933097839355
    4. ' ' → logprob: -14.501933097839355
    5. '  ' → logprob: -15.001933097839355
    6. '	num' → logprob: -15.626933097839355
    7. 'n' → logprob: -16.50193214416504
    8. 'alp' → logprob: -16.62693214416504
    9. '_num' → logprob: -16.87693214416504
    10. '    ' → logprob: -17.12693214416504

Token 274: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0264317337423563
    2. '_s' → logprob: -3.6514317989349365
    3. 's' → logprob: -9.776432037353516
    4. 't' → logprob: -10.026432037353516
    5. '=' → logprob: -11.026432037353516
    6. '_' → logprob: -12.026432037353516
    7. ' =' → logprob: -12.651432037353516
    8. '=_' → logprob: -13.276432037353516
    9. '_=' → logprob: -13.901432037353516
    10. 'def' → logprob: -14.276432037353516

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. 'init' → logprob: -18.251928329467773
    4. '   ' → logprob: -18.376928329467773
    5. '=create' → logprob: -18.376928329467773
    6. '＝' → logprob: -18.501928329467773
    7. ' ' → logprob: -18.876928329467773
    8. ')=' → logprob: -19.501928329467773
    9. ')' → logprob: -19.626928329467773
    10. ',' → logprob: -19.876928329467773

Token 276: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001549089647596702
    2. ' init' → logprob: -9.250154495239258
    3. '[],' → logprob: -9.750154495239258
    4. ' [],' → logprob: -15.750154495239258
    5. '_init' → logprob: -15.875154495239258
    6. '[]' → logprob: -16.250154495239258
    7. '	init' → logprob: -17.000154495239258
    8. '   ' → logprob: -17.750154495239258
    9. '.init' → logprob: -17.875154495239258
    10. 'import' → logprob: -18.875154495239258

Token 277: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -6.749814019713085e-06
    2. '_letters' → logprob: -12.625006675720215
    3. '_' → logprob: -12.750006675720215
    4. '```' → logprob: -16.37500762939453
    5. '_le' → logprob: -16.75000762939453
    6. '_l' → logprob: -16.87500762939453
    7. '_line' → logprob: -17.00000762939453
    8. '_al' → logprob: -17.50000762939453
    9. 'letter' → logprob: -17.50000762939453
    10. '_word' → logprob: -17.75000762939453

Token 278: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -2.4391956685576588e-05
    2. 's' → logprob: -11.125024795532227
    3. 'lists' → logprob: -11.750024795532227
    4. '_arrays' → logprob: -14.750024795532227
    5. '_s' → logprob: -14.875024795532227
    6. 'Lists' → logprob: -15.125024795532227
    7. '_sets' → logprob: -15.750024795532227
    8. '_counts' → logprob: -15.875024795532227
    9. ' lists' → logprob: -16.000024795532227
    10. '_list' → logprob: -16.375024795532227

Token 279: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011075058951973915
    2. '()
' → logprob: -4.511075019836426
    3. '()
' → logprob: -11.136075019836426
    4. '()

' → logprob: -11.386075019836426
    5. '()`' → logprob: -14.636075019836426
    6. ' ()' → logprob: -14.886075019836426
    7. '()\' → logprob: -15.886075019836426
    8. '()"' → logprob: -16.386075973510742
    9. '()

' → logprob: -16.761075973510742
    10. '();' → logprob: -16.886075973510742

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009767776355147362
    2. 'for' → logprob: -5.009768009185791
    3. ' for' → logprob: -5.884768009185791
    4. 'n' → logprob: -9.134767532348633
    5. '
' → logprob: -9.509767532348633
    6. 'length' → logprob: -10.134767532348633
    7. ' length' → logprob: -11.134767532348633
    8. '    
' → logprob: -11.134767532348633
    9. ' n' → logprob: -11.634767532348633
    10. '```' → logprob: -13.259767532348633

Token 281: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004200674593448639
    2. 'length' → logprob: -8.250419616699219
    3. 'n' → logprob: -8.875419616699219
    4. '   ' → logprob: -11.625419616699219
    5. ' for' → logprob: -11.750419616699219
    6. 'if' → logprob: -13.750419616699219
    7. 'i' → logprob: -15.000419616699219
    8. '
' → logprob: -15.000419616699219
    9. 'len' → logprob: -15.625419616699219
    10. 'l' → logprob: -16.00041961669922

Token 282: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141801238059998
    2. 'i' → logprob: -1.7014180421829224
    3. 'range' → logprob: -13.201417922973633
    4. '_i' → logprob: -13.701417922973633
    5. ' range' → logprob: -14.451417922973633
    6. '_' → logprob: -14.951417922973633
    7. 'idx' → logprob: -15.201417922973633
    8. '(i' → logprob: -15.951417922973633
    9. ' idx' → logprob: -16.201417922973633
    10. ' in' → logprob: -16.201417922973633

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009238460334017873
    2. 'in' → logprob: -7.0009236335754395
    3. ' ' → logprob: -11.375924110412598
    4. ',' → logprob: -15.125924110412598
    5. 'range' → logprob: -15.125924110412598
    6. ' range' → logprob: -15.750924110412598
    7. '  ' → logprob: -16.25092315673828
    8. ')' → logprob: -17.00092315673828
    9. '	in' → logprob: -17.50092315673828
    10. '   ' → logprob: -17.62592315673828

Token 284: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868711292743683
    2. 'range' → logprob: -1.136871099472046
    3. '	range' → logprob: -16.511871337890625
    4. '(range' → logprob: -17.386871337890625
    5. ' ' → logprob: -17.386871337890625
    6. ' xrange' → logprob: -18.636871337890625
    7. '   ' → logprob: -19.761871337890625
    8. '  ' → logprob: -19.761871337890625
    9. '_range' → logprob: -20.386871337890625
    10. 'rang' → logprob: -20.636871337890625

Token 285: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.057743949990254e-05
    2. '(min' → logprob: -11.000020980834961
    3. 'len' → logprob: -13.500020980834961
    4. '(max' → logprob: -13.625020980834961
    5. ' (' → logprob: -14.625020980834961
    6. '(' → logprob: -14.625020980834961
    7. ' len' → logprob: -14.750020980834961
    8. '	len' → logprob: -19.12502098083496
    9. ',len' → logprob: -19.50002098083496
    10. '(l' → logprob: -19.87502098083496

Token 286: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.1782583391759545e-05
    2. '(' → logprob: -11.000031471252441
    3. 's' → logprob: -11.125031471252441
    4. ' (' → logprob: -15.625031471252441
    5. ' s' → logprob: -17.125032424926758
    6. ')' → logprob: -17.125032424926758
    7. '(
' → logprob: -17.375032424926758
    8. '_s' → logprob: -18.625032424926758
    9. '(t' → logprob: -19.000032424926758
    10. ')s' → logprob: -20.375032424926758

Token 287: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.8164302706718445
    2. ')):' → logprob: -0.8164302706718445
    3. '):' → logprob: -2.3164303302764893
    4. '):
' → logprob: -4.19143009185791
    5. ')' → logprob: -7.06643009185791
    6. '))' → logprob: -7.19143009185791
    7. ' ' → logprob: -8.31643009185791
    8. '   ' → logprob: -8.94143009185791
    9. ')):
' → logprob: -8.94143009185791
    10. ' ):' → logprob: -9.31643009185791

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000712074339389801
    2. ' num' → logprob: -8.000712394714355
    3. '   ' → logprob: -8.625712394714355
    4. 'num' → logprob: -8.875712394714355
    5. ' process' → logprob: -10.625712394714355
    6. ',' → logprob: -11.125712394714355
    7. 'process' → logprob: -12.125712394714355
    8. ' s' → logprob: -12.500712394714355
    9. '        
' → logprob: -13.250712394714355
    10. 's' → logprob: -13.375712394714355

Token 289: ' process' (ID: 2273)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.22015441954135895
    2. '   ' → logprob: -2.3451545238494873
    3. 'alp' → logprob: -2.7201545238494873
    4. 'process' (adapté à ' process') → logprob: -4.095154285430908
    5. ' num' → logprob: -4.345154285430908
    6. ' alp' → logprob: -5.595154285430908
    7. ' process' → logprob: -6.845154285430908
    8. '       ' → logprob: -7.345154285430908
    9. 'al' → logprob: -9.095154762268066
    10. 'alb' → logprob: -9.095154762268066

Token 290: '_letter' (ID: 120621)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.500004768371582
    3. '_s' → logprob: -14.125004768371582
    4. 's' → logprob: -16.875003814697266
    5. '_steps' → logprob: -17.000003814697266
    6. '_letter' → logprob: -17.250003814697266
    7. ' _' → logprob: -17.625003814697266
    8. 'step' → logprob: -17.875003814697266
    9. ''_' → logprob: -18.000003814697266
    10. '```' → logprob: -18.125003814697266

Token 291: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.085517113911919e-05
    2. '(' → logprob: -10.12505054473877
    3. 's' → logprob: -11.50005054473877
    4. ' (' → logprob: -14.37505054473877
    5. '(t' → logprob: -17.250051498413086
    6. ' s' → logprob: -18.000051498413086
    7. '((' → logprob: -18.125051498413086
    8. '(
' → logprob: -18.375051498413086
    9. '(i' → logprob: -19.125051498413086
    10. '   ' → logprob: -19.875051498413086

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003967071825172752
    2. '[' → logprob: -7.875396728515625
    3. ' [' → logprob: -11.750396728515625
    4. ',' → logprob: -12.750396728515625
    5. ')' → logprob: -13.500396728515625
    6. '
' → logprob: -13.875396728515625
    7. '[s' → logprob: -14.125396728515625
    8. '[I' → logprob: -14.125396728515625
    9. '[
' → logprob: -14.875396728515625
    10. ' ' → logprob: -15.000396728515625

Token 293: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002787359117064625
    2. ' ,' → logprob: -8.25027847290039
    3. '),' → logprob: -11.12527847290039
    4. ')' → logprob: -13.50027847290039
    5. '],' → logprob: -14.75027847290039
    6. '   ' → logprob: -15.25027847290039
    7. 'alp' → logprob: -15.50027847290039
    8. '‌,' → logprob: -16.37527847290039
    9. ' alp' → logprob: -16.62527847290039
    10. ',
' → logprob: -16.87527847290039

Token 294: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.06198180466890335
    2. ' alp' → logprob: -2.8119819164276123
    3. 'alb' → logprob: -11.561982154846191
    4. 'alph' → logprob: -12.936982154846191
    5. 'al' → logprob: -14.061982154846191
    6. 'alf' → logprob: -14.686982154846191
    7. 'alc' → logprob: -15.811982154846191
    8. ' Alp' → logprob: -15.811982154846191
    9. 'alg' → logprob: -16.061981201171875
    10. '   ' → logprob: -16.436981201171875

Token 295: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.7491250875755213e-05
    2. 's' → logprob: -10.750027656555176
    3. '_t' → logprob: -12.125027656555176
    4. '_' → logprob: -14.875027656555176
    5. 't' → logprob: -16.37502670288086
    6. ')' → logprob: -17.25002670288086
    7. ' _' → logprob: -17.75002670288086
    8. ',' → logprob: -18.25002670288086
    9. '
' → logprob: -18.25002670288086
    10. '_p' → logprob: -18.62502670288086

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015894850948825479
    2. ',num' → logprob: -6.501589298248291
    3. ' ,' → logprob: -9.37658977508545
    4. 'num' → logprob: -13.25158977508545
    5. ' num' → logprob: -14.87658977508545
    6. ')' → logprob: -16.251588821411133
    7. ',n' → logprob: -16.626588821411133
    8. ',
' → logprob: -17.126588821411133
    9. '[num' → logprob: -17.251588821411133
    10. '),' → logprob: -17.376588821411133

Token 297: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014163747429847717
    2. ' num' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.764163970947266
    4. ')' → logprob: -17.264163970947266
    5. '   ' → logprob: -17.389163970947266
    6. '	num' → logprob: -17.639163970947266
    7. '  ' → logprob: -18.139163970947266
    8. '
' → logprob: -18.639163970947266
    9. '[num' → logprob: -18.889163970947266
    10. ',num' → logprob: -18.889163970947266

Token 298: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00017970333283301443
    2. 's' → logprob: -9.000179290771484
    3. '_t' → logprob: -9.875179290771484
    4. ')' → logprob: -12.375179290771484
    5. ',' → logprob: -14.750179290771484
    6. 't' → logprob: -16.250179290771484
    7. '[' → logprob: -17.375179290771484
    8. '),' → logprob: -18.250179290771484
    9. '_)' → logprob: -18.875179290771484
    10. ',_' → logprob: -18.875179290771484

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7025283575057983
    2. ')
' → logprob: -0.7025283575057983
    3. '       ' → logprob: -4.702528476715088
    4. ',' → logprob: -8.70252799987793
    5. '   ' → logprob: -9.70252799987793
    6. ')
' → logprob: -10.70252799987793
    7. '),' → logprob: -12.32752799987793
    8. ' )
' → logprob: -12.95252799987793
    9. ')

' → logprob: -13.07752799987793
    10. ' )' → logprob: -13.20252799987793

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006781232077628374
    2. 'process' → logprob: -7.625678062438965
    3. ' process' → logprob: -8.625678062438965
    4. '   ' → logprob: -11.625678062438965
    5. '
' → logprob: -14.375678062438965
    6. '	process' → logprob: -14.500678062438965
    7. ' ' → logprob: -15.875678062438965
    8. '        
' → logprob: -16.00067901611328
    9. '	' → logprob: -16.62567901611328
    10. '.process' → logprob: -16.75067901611328

Token 301: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.00015229015843942761
    2. ' process' → logprob: -9.000152587890625
    3. '       ' → logprob: -10.500152587890625
    4. '   ' → logprob: -13.750152587890625
    5. '	process' → logprob: -15.375152587890625
    6. 'update' → logprob: -17.750152587890625
    7. 'proces' → logprob: -18.875152587890625
    8. '.process' → logprob: -18.875152587890625
    9. '(process' → logprob: -19.500152587890625
    10. ' ' → logprob: -19.750152587890625

Token 302: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -3.404745439183898e-05
    2. '_t' → logprob: -10.37503433227539
    3. 't' → logprob: -13.37503433227539
    4. '_le' → logprob: -14.75003433227539
    5. '_' → logprob: -15.00003433227539
    6. 'letter' → logprob: -15.37503433227539
    7. '_letters' → logprob: -16.12503433227539
    8. '(t' → logprob: -16.75003433227539
    9. 'Letter' → logprob: -17.00003433227539
    10. '(' → logprob: -17.37503433227539

Token 303: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -14.250036239624023
    4. 't' → logprob: -17.500036239624023
    5. '(
' → logprob: -17.750036239624023
    6. '(T' → logprob: -20.250036239624023
    7. '(s' → logprob: -20.250036239624023
    8. '	t' → logprob: -22.125036239624023
    9. '((' → logprob: -22.250036239624023
    10. ' ' → logprob: -22.750036239624023

Token 304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.500011444091797
    3. ' [' → logprob: -14.250011444091797
    4. ',' → logprob: -15.500011444091797
    5. ',i' → logprob: -16.250011444091797
    6. '[
' → logprob: -16.500011444091797
    7. ')' → logprob: -17.125011444091797
    8. 'i' → logprob: -17.125011444091797
    9. ' ' → logprob: -17.250011444091797
    10. ')[' → logprob: -17.625011444091797

Token 305: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004218554822728038
    2. ' ,' → logprob: -8.000421524047852
    3. '],' → logprob: -9.375421524047852
    4. '),' → logprob: -13.875421524047852
    5. '   ' → logprob: -15.125421524047852
    6. '‌,' → logprob: -16.12542152404785
    7. '[],' → logprob: -16.25042152404785
    8. ' ' → logprob: -17.00042152404785
    9. ']' → logprob: -17.12542152404785
    10. ' ],' → logprob: -18.25042152404785

Token 306: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.07892834395170212
    2. ' alp' → logprob: -2.578928232192993
    3. 'alb' → logprob: -10.203927993774414
    4. 'alph' → logprob: -14.078927993774414
    5. 'alf' → logprob: -15.328927993774414
    6. 'al' → logprob: -15.328927993774414
    7. 't' → logprob: -16.203927993774414
    8. 'alpha' → logprob: -16.203927993774414
    9. 'alc' → logprob: -16.453927993774414
    10. ' ' → logprob: -16.953927993774414

Token 307: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00012999906903132796
    2. 't' → logprob: -9.125129699707031
    3. '_s' → logprob: -10.875129699707031
    4. 'T' → logprob: -13.750129699707031
    5. 'num' → logprob: -15.375129699707031
    6. 's' → logprob: -15.625129699707031
    7. '
' → logprob: -16.25012969970703
    8. '_T' → logprob: -16.25012969970703
    9. ',' → logprob: -16.50012969970703
    10. '_' → logprob: -16.50012969970703

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022201328829396516
    2. ',num' → logprob: -8.500222206115723
    3. ' ,' → logprob: -11.000222206115723
    4. ')' → logprob: -13.500222206115723
    5. ',n' → logprob: -16.250221252441406
    6. 'num' → logprob: -16.750221252441406
    7. '```' → logprob: -17.250221252441406
    8. 'def' → logprob: -17.375221252441406
    9. ',
' → logprob: -17.375221252441406
    10. '[' → logprob: -17.500221252441406

Token 309: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3868732452392578
    2. ' num' → logprob: -1.1368732452392578
    3. ' ' → logprob: -13.761873245239258
    4. '   ' → logprob: -14.761873245239258
    5. '[num' → logprob: -15.386873245239258
    6. '
' → logprob: -15.886873245239258
    7. '	num' → logprob: -16.261873245239258
    8. '(num' → logprob: -16.386873245239258
    9. ',num' → logprob: -16.761873245239258
    10. '  ' → logprob: -17.261873245239258

Token 310: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -5.319370302458992e-06
    2. '_s' → logprob: -12.250005722045898
    3. ')' → logprob: -15.500005722045898
    4. '_' → logprob: -15.875005722045898
    5. 't' → logprob: -16.7500057220459
    6. 's' → logprob: -17.6250057220459
    7. '_)' → logprob: -18.5000057220459
    8. ' _' → logprob: -19.1250057220459
    9. ')_' → logprob: -19.2500057220459
    10. '_i' → logprob: -19.5000057220459

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06389445811510086
    2. ')
' → logprob: -2.813894510269165
    3. '   ' → logprob: -6.313894271850586
    4. '       ' → logprob: -9.688894271850586
    5. 'def' → logprob: -10.813894271850586
    6. ')

' → logprob: -11.063894271850586
    7. '<|end|>' → logprob: -12.313894271850586
    8. '
' → logprob: -12.563894271850586
    9. 'check' → logprob: -13.688894271850586
    10. ' )' → logprob: -13.688894271850586

Token 312: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11205238848924637
    2. '
' → logprob: -2.7370524406433105
    3. '<|end|>' → logprob: -3.3620524406433105
    4. '       ' → logprob: -5.6120524406433105
    5. 'check' → logprob: -6.6120524406433105
    6. ' check' → logprob: -6.8620524406433105
    7. '```' → logprob: -9.237051963806152
    8. ',' → logprob: -9.612051963806152
    9. '  ' → logprob: -9.737051963806152
    10. '<|end|>' → logprob: -10.112051963806152

Token 313: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.034005727618932724
    2. '   ' → logprob: -3.534005641937256
    3. 'if' → logprob: -5.909005641937256
    4. ' check' → logprob: -6.784005641937256
    5. '       ' → logprob: -8.159006118774414
    6. '
' → logprob: -10.409006118774414
    7. '  ' → logprob: -11.159006118774414
    8. ' ' → logprob: -11.534006118774414
    9. '```' → logprob: -11.659006118774414
    10. ' if' → logprob: -11.784006118774414

Token 314: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. 'num' → logprob: -16.5
    4. '_number' → logprob: -17.5
    5. '_n' → logprob: -17.875
    6. '_nums' → logprob: -18.0
    7. ' _' → logprob: -19.625
    8. '_NUM' → logprob: -19.75
    9. '```' → logprob: -19.75
    10. '_len' → logprob: -19.875

Token 315: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.47411248087882996
    2. '_num' → logprob: -0.9741125106811523
    3. '_list' → logprob: -11.474112510681152
    4. 's' → logprob: -11.849112510681152
    5. '_nums' → logprob: -12.474112510681152
    6. '_len' → logprob: -12.974112510681152
    7. 'lists' → logprob: -12.974112510681152
    8. '```' → logprob: -13.724112510681152
    9. 'Lists' → logprob: -13.849112510681152
    10. '_' → logprob: -13.974112510681152

Token 316: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00026860725483857095
    2. '(' → logprob: -8.250268936157227
    3. ' (' → logprob: -11.875268936157227
    4. '(nums' → logprob: -15.625268936157227
    5. '(number' → logprob: -16.375268936157227
    6. ',num' → logprob: -16.875268936157227
    7. 'num' → logprob: -17.000268936157227
    8. '(n' → logprob: -17.375268936157227
    9. '(NUM' → logprob: -17.375268936157227
    10. '(s' → logprob: -17.625268936157227

Token 317: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -8.180258191714529e-06
    2. 's' → logprob: -12.000008583068848
    3. '_t' → logprob: -13.375008583068848
    4. ' _' → logprob: -16.37500762939453
    5. '_' → logprob: -16.62500762939453
    6. ')' → logprob: -17.00000762939453
    7. ')_' → logprob: -17.12500762939453
    8. ',' → logprob: -17.75000762939453
    9. '```' → logprob: -17.87500762939453
    10. ',_' → logprob: -18.62500762939453

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007381578907370567
    2. ',num' → logprob: -7.250738143920898
    3. ' ,' → logprob: -10.500738143920898
    4. 'num' → logprob: -15.375738143920898
    5. ',n' → logprob: -15.375738143920898
    6. ',
' → logprob: -15.500738143920898
    7. ')' → logprob: -16.8757381439209
    8. ' num' → logprob: -17.1257381439209
    9. ',

' → logprob: -18.0007381439209
    10. '   ' → logprob: -18.1257381439209

Token 319: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.02324594371020794
    2. ' num' → logprob: -3.7732460498809814
    3. '
' → logprob: -15.023245811462402
    4. ')' → logprob: -17.39824676513672
    5. ' ' → logprob: -17.77324676513672
    6. '	num' → logprob: -17.89824676513672
    7. '[num' → logprob: -18.27324676513672
    8. ',num' → logprob: -18.27324676513672
    9. '(num' → logprob: -18.64824676513672
    10. '<num' → logprob: -18.77324676513672

Token 320: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -8.65707261255011e-06
    2. 't' → logprob: -12.000008583068848
    3. '_s' → logprob: -13.375008583068848
    4. ')' → logprob: -14.125008583068848
    5. '_' → logprob: -16.625009536743164
    6. 's' → logprob: -16.750009536743164
    7. ')_' → logprob: -17.125009536743164
    8. ' _' → logprob: -17.250009536743164
    9. '[' → logprob: -17.750009536743164
    10. '_)' → logprob: -18.375009536743164

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005403796210885048
    2. ')
' → logprob: -5.505403995513916
    3. '())' → logprob: -7.380403995513916
    4. '<|end|>' → logprob: -8.380403518676758
    5. '   ' → logprob: -8.630403518676758
    6. 'def' → logprob: -9.255403518676758
    7. ')return' → logprob: -9.630403518676758
    8. '()' → logprob: -9.755403518676758
    9. '       ' → logprob: -11.380403518676758
    10. ')

' → logprob: -11.505403518676758

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019580135121941566
    2. '<|end|>' → logprob: -6.751957893371582
    3. 'print' → logprob: -7.626957893371582
    4. '       ' → logprob: -9.251957893371582
    5. 'return' → logprob: -9.751957893371582
    6. '```' → logprob: -10.251957893371582
    7. ')' → logprob: -10.376957893371582
    8. 'def' → logprob: -11.126957893371582
    9. '[]' → logprob: -11.251957893371582
    10. '
' → logprob: -11.376957893371582

Token 323: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16677109897136688
    2. 'print' (adapté à ' print') → logprob: -1.9167710542678833
    3. 'return' → logprob: -5.416770935058594
    4. 'if' → logprob: -6.916770935058594
    5. ' return' → logprob: -8.041770935058594
    6. ' print' → logprob: -8.166770935058594
    7. 'def' → logprob: -8.916770935058594
    8. ' if' → logprob: -9.291770935058594
    9. '<|end|>' → logprob: -9.291770935058594
    10. 'for' → logprob: -10.666770935058594

Token 324: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023329682648181915
    2. '("' → logprob: -3.773329734802246
    3. '(' → logprob: -9.398329734802246
    4. ' ('' → logprob: -14.273329734802246
    5. ' ("' → logprob: -15.898329734802246
    6. ''' → logprob: -16.52332878112793
    7. 'Yes' → logprob: -16.64832878112793
    8. '(('' → logprob: -16.64832878112793
    9. '()' → logprob: -16.77332878112793
    10. '"' → logprob: -17.27332878112793

Token 325: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.9623810658231378e-05
    2. 'No' → logprob: -11.875020027160645
    3. 'YES' → logprob: -11.875020027160645
    4. ''' → logprob: -12.875020027160645
    5. ' Yes' → logprob: -13.750020027160645
    6. '"' → logprob: -14.625020027160645
    7. 'Possible' → logprob: -15.125020027160645
    8. 'Yeah' → logprob: -15.500020027160645
    9. '')' → logprob: -15.625020027160645
    10. ''.' → logprob: -16.250019073486328

Token 326: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0002096197713399306
    2. ')' → logprob: -8.50020980834961
    3. '")' → logprob: -12.75020980834961
    4. '')
' → logprob: -12.75020980834961
    5. '!' → logprob: -16.25020980834961
    6. '()' → logprob: -17.00020980834961
    7. ''' → logprob: -17.37520980834961
    8. '.')' → logprob: -17.62520980834961
    9. '')

' → logprob: -17.87520980834961
    10. '')"' → logprob: -18.00020980834961

Token 327: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' main' (ID: 2758)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5264298915863037
    2. ' process' → logprob: -1.6514298915863037
    3. '__' → logprob: -2.0264298915863037
    4. 'process' → logprob: -2.9014298915863037
    5. 'if' → logprob: -4.276430130004883
    6. '_' → logprob: -5.151430130004883
    7. ' main' → logprob: -6.151430130004883
    8. ' read' → logprob: -6.276430130004883
    9. ' _' → logprob: -6.526430130004883
    10. ' if' → logprob: -6.651430130004883

Token 329: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.676292231422849e-05
    2. ' ():' → logprob: -11.250017166137695
    3. '():
' → logprob: -12.625017166137695
    4. '()' → logprob: -15.375017166137695
    5. ':' → logprob: -16.500017166137695
    6. '(' → logprob: -16.875017166137695
    7. '():
' → logprob: -17.625017166137695
    8. '():

' → logprob: -18.625017166137695
    9. '(":' → logprob: -18.875017166137695
    10. '()>' → logprob: -18.875017166137695

Token 330: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2693633437156677
    2. '   ' → logprob: -2.0193634033203125
    3. ' s' → logprob: -2.2693634033203125
    4. '	s' → logprob: -11.644363403320312
    5. ' ' → logprob: -13.019363403320312
    6. 'def' → logprob: -13.519363403320312
    7. '  ' → logprob: -13.519363403320312
    8. '(s' → logprob: -14.394363403320312
    9. '```' → logprob: -14.394363403320312
    10. '
' → logprob: -14.894363403320312

Token 331: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -2.1888679839321412e-05
    2. ' s' → logprob: -10.875021934509277
    3. '   ' → logprob: -12.750021934509277
    4. '```' → logprob: -19.50002098083496
    5. '`s' → logprob: -19.62502098083496
    6. '_s' → logprob: -19.87502098083496
    7. 'def' → logprob: -20.12502098083496
    8. 'a' → logprob: -20.25002098083496
    9. '
' → logprob: -20.62502098083496
    10. '	s' → logprob: -21.12502098083496

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001725511101540178
    2. ',t' → logprob: -9.37517261505127
    3. ' =' → logprob: -9.75017261505127
    4. '=' → logprob: -11.00017261505127
    5. ' ,' → logprob: -11.62517261505127
    6. 's' → logprob: -13.87517261505127
    7. ',s' → logprob: -14.25017261505127
    8. 't' → logprob: -14.25017261505127
    9. '1' → logprob: -14.87517261505127
    10. ',input' → logprob: -15.50017261505127

Token 333: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3132617771625519
    2. 't' → logprob: -1.3132617473602295
    3. ' ' → logprob: -16.563261032104492
    4. ' =' → logprob: -18.563261032104492
    5. 's' → logprob: -18.688261032104492
    6. '   ' → logprob: -18.813261032104492
    7. '`t' → logprob: -19.063261032104492
    8. '    ' → logprob: -19.313261032104492
    9. '  ' → logprob: -19.688261032104492
    10. ' s' → logprob: -19.938261032104492

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020699352025986
    2. ' =' → logprob: -2.3502070903778076
    3. ',' → logprob: -16.22520637512207
    4. '=s' → logprob: -16.35020637512207
    5. ')' → logprob: -16.60020637512207
    6. ' ' → logprob: -17.22520637512207
    7. 's' → logprob: -17.22520637512207
    8. '   ' → logprob: -17.35020637512207
    9. ')=' → logprob: -18.47520637512207
    10. '=input' → logprob: -18.47520637512207

Token 335: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011047935113310814
    2. ' read' → logprob: -4.511047840118408
    3. 'input' → logprob: -15.636048316955566
    4. ' input' → logprob: -17.88604736328125
    5. '	read' → logprob: -17.88604736328125
    6. '   ' → logprob: -19.13604736328125
    7. ' ' → logprob: -20.13604736328125
    8. '(read' → logprob: -20.38604736328125
    9. '  ' → logprob: -21.01104736328125
    10. 're' → logprob: -21.76104736328125

Token 336: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.22855053842067719
    2. '()' → logprob: -1.6035505533218384
    3. '_' → logprob: -6.103550434112549
    4. 'input' → logprob: -7.978550434112549
    5. '_line' → logprob: -8.228550910949707
    6. '_inputs' → logprob: -8.978550910949707
    7. '()
' → logprob: -9.603550910949707
    8. 'line' → logprob: -11.978550910949707
    9. '_in' → logprob: -11.978550910949707
    10. 's' → logprob: -12.103550910949707

Token 337: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3903396725654602
    2. '()
' → logprob: -1.1403396129608154
    3. '
' → logprob: -6.3903398513793945
    4. '   ' → logprob: -6.3903398513793945
    5. '()
' → logprob: -10.765339851379395
    6. '(
' → logprob: -11.265339851379395
    7. '();' → logprob: -11.515339851379395
    8. '()

' → logprob: -11.640339851379395
    9. '()\' → logprob: -11.640339851379395
    10. '():
' → logprob: -11.765339851379395

Token 338: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.272603839635849
    2. '   ' → logprob: -1.5226038694381714
    3. ' process' → logprob: -3.897603750228882
    4. '
' → logprob: -9.647603988647461
    5. '```' → logprob: -9.897603988647461
    6. 'main' → logprob: -10.647603988647461
    7. '	process' → logprob: -11.647603988647461
    8. '_process' → logprob: -12.272603988647461
    9. 'if' → logprob: -12.522603988647461
    10. 'def' → logprob: -12.647603988647461

Token 339: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.038076501339673996
    2. 'if' → logprob: -3.288076400756836
    3. ' process' → logprob: -11.163076400756836
    4. '   ' → logprob: -11.913076400756836
    5. ' if' → logprob: -12.038076400756836
    6. 'for' → logprob: -12.913076400756836
    7. '```' → logprob: -13.038076400756836
    8. 's' → logprob: -13.163076400756836
    9. 'print' → logprob: -15.038076400756836
    10. '(process' → logprob: -15.663076400756836

Token 340: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.25000286102295
    3. '_s' → logprob: -15.12500286102295
    4. 's' → logprob: -15.25000286102295
    5. '_string' → logprob: -16.375001907348633
    6. 'strings' → logprob: -17.500001907348633
    7. '_str' → logprob: -18.500001907348633
    8. 'Strings' → logprob: -19.000001907348633
    9. '_lines' → logprob: -20.375001907348633
    10. '```' → logprob: -20.500001907348633

Token 341: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -14.625001907348633
    4. 's' → logprob: -17.250001907348633
    5. '(t' → logprob: -19.250001907348633
    6. '(
' → logprob: -21.500001907348633
    7. '(S' → logprob: -22.250001907348633
    8. ' ' → logprob: -22.250001907348633
    9. '((' → logprob: -22.375001907348633
    10. '(strings' → logprob: -22.375001907348633

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -11.375021934509277
    3. ',t' → logprob: -11.500021934509277
    4. '   ' → logprob: -15.625021934509277
    5. ',
' → logprob: -16.87502098083496
    6. ')' → logprob: -19.25002098083496
    7. ',s' → logprob: -19.37502098083496
    8. '(' → logprob: -21.12502098083496
    9. 't' → logprob: -21.25002098083496
    10. '‌,' → logprob: -21.50002098083496

Token 343: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014164102263748646
    2. ' t' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.264163970947266
    4. '
' → logprob: -16.014163970947266
    5. ')' → logprob: -16.264163970947266
    6. ' ' → logprob: -16.389163970947266
    7. ')t' → logprob: -16.764163970947266
    8. '	t' → logprob: -17.514163970947266
    9. '`t' → logprob: -17.639163970947266
    10. '    ' → logprob: -17.889163970947266

Token 344: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.37500286102295
    3. '())' → logprob: -14.37500286102295
    4. ' )' → logprob: -15.00000286102295
    5. '))' → logprob: -17.000001907348633
    6. '()' → logprob: -17.250001907348633
    7. ')

' → logprob: -17.625001907348633
    8. ')s' → logprob: -17.625001907348633
    9. '   ' → logprob: -18.000001907348633
    10. ')t' → logprob: -18.125001907348633

Token 345: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006720229052007198
    2. 'main' → logprob: -5.006720066070557
    3. ' if' → logprob: -12.381720542907715
    4. '```' → logprob: -15.506720542907715
    5. ' main' → logprob: -15.881720542907715
    6. '#' → logprob: -16.3817195892334
    7. '
' → logprob: -16.5067195892334
    8. '(main' → logprob: -16.6317195892334
    9. 'print' → logprob: -18.7567195892334
    10. '<|end|>' → logprob: -19.1317195892334

Token 346: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 344
Tokens correctement prédits (1ère position, stricte): 151
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 304
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 49.13%
Précision (top 10): 88.37%
================================================================================
