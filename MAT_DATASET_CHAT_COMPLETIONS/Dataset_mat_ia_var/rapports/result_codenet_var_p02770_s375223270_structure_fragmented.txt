================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    k, q = map(int, input().split())
    d = list(map(int, input().split()))
    return k, q, d

def read_query():
    n, x, m = map(int, input().split())
    return n, x, m

def get_repetition_parts(n, k):
    rep, rest = divmod(n - 1, k)
    return rep, rest

def mods_sequence(d, m):
    return [num % m for num in d]

def get_partial_sum(seq, count):
    from itertools import islice
    return sum(islice(seq, 0, count))

def get_num_zero_elements(mod_seq, rep, rest):
    eq = 0
    for i, gg in enumerate(mod_seq):
        times = rep + (1 if i < rest else 0)
        if gg == 0:
            eq += times
    return eq

def get_last_value(x, total_sum, rep, partial_sum):
    return x + (total_sum * rep) + partial_sum

def get_sum(seq):
    return sum(seq)

def calculate_answer(n, eq, last, m, x):
    return (n - 1) - eq - ((last // m) - (x // m))

def handle_single_query(k, d, n, x, m):
    mod_seq = mods_sequence(d, m)
    rep, rest = get_repetition_parts(n, k)
    total_sum = get_sum(mod_seq)
    partial_sum = get_partial_sum(mod_seq, rest)
    last = get_last_value(x, total_sum, rep, partial_sum)
    eq = get_num_zero_elements(mod_seq, rep, rest)
    ans = calculate_answer(n, eq, last, m, x)
    return ans

def solve():
    k, q, d = read_input()
    results = []
    for _ in range(q):
        n, x, m = read_query()
        ans = handle_single_query(k, d, n, x, m)
        results.append(ans)
    return results

def print_output(results):
    for res in results:
        print(res)

def main():
    results = solve()
    print_output(results)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013885974884033203
    2. '():' → logprob: -4.513885974884033
    3. '_' → logprob: -6.388885974884033
    4. '(:' → logprob: -7.888885974884033
    5. '(_:' → logprob: -8.138885498046875
    6. '```' → logprob: -8.388885498046875
    7. ':' → logprob: -10.013885498046875
    8. '()' → logprob: -10.138885498046875
    9. '(_' → logprob: -10.388885498046875
    10. ' (' → logprob: -10.388885498046875

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' k' (ID: 372)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6689209938049316
    2. '   ' → logprob: -1.1689209938049316
    3. 'input' → logprob: -2.2939209938049316
    4. '```' → logprob: -4.043920993804932
    5. 'data' → logprob: -4.293920993804932
    6. 'x' → logprob: -4.918920993804932
    7. 'r' → logprob: -5.168920993804932
    8. ' ' → logprob: -5.168920993804932
    9. 'pass' → logprob: -5.168920993804932
    10. 'text' → logprob: -5.293920993804932

Token 6: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15479086339473724
    2. 'e' → logprob: -2.9047908782958984
    3. '=' → logprob: -3.2797908782958984
    4. 'ey' → logprob: -4.154790878295898
    5. ':' → logprob: -4.779790878295898
    6. '():' → logprob: -5.029790878295898
    7. '(' → logprob: -5.654790878295898
    8. '()' → logprob: -5.654790878295898
    9. ',' → logprob: -5.904790878295898
    10. 'w' → logprob: -6.779790878295898

Token 7: ' q' (ID: 2335)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.334046334028244
    2. 'v' → logprob: -1.3340463638305664
    3. ' n' → logprob: -4.209046363830566
    4. 'n' → logprob: -6.584046363830566
    5. ' input' → logprob: -7.209046363830566
    6. 'data' → logprob: -7.334046363830566
    7. 'input' → logprob: -7.584046363830566
    8. ' l' → logprob: -7.959046363830566
    9. ' ' → logprob: -7.959046363830566
    10. ' data' → logprob: -8.459046363830566

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2306145429611206
    2. ' =' → logprob: -2.10561466217041
    3. ',' → logprob: -2.48061466217041
    4. ')' → logprob: -8.73061466217041
    5. '_' → logprob: -9.23061466217041
    6. '  ' → logprob: -9.98061466217041
    7. ' ,' → logprob: -10.10561466217041
    8. ' ' → logprob: -10.23061466217041
    9. 'u' → logprob: -10.48061466217041
    10. '[' → logprob: -10.73061466217041

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07593288272619247
    2. 'map' → logprob: -3.2009329795837402
    3. ' input' → logprob: -3.7009329795837402
    4. 'input' → logprob: -4.95093297958374
    5. ' ' → logprob: -8.575932502746582
    6. '0' → logprob: -9.075932502746582
    7. ' int' → logprob: -9.325932502746582
    8. ' k' → logprob: -9.950932502746582
    9. 'int' → logprob: -10.200932502746582
    10. ' list' → logprob: -10.700932502746582

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2200648933649063
    2. '(str' → logprob: -1.8450648784637451
    3. '(' → logprob: -3.345064878463745
    4. '(lambda' → logprob: -5.595065116882324
    5. 'int' → logprob: -8.595065116882324
    6. '(input' → logprob: -8.845065116882324
    7. 'str' → logprob: -9.845065116882324
    8. '```' → logprob: -10.095065116882324
    9. '<|end|>' → logprob: -10.970065116882324
    10. '[int' → logprob: -10.970065116882324

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22995369136333466
    2. '(input' → logprob: -1.729953646659851
    3. ',' → logprob: -4.229953765869141
    4. 'input' → logprob: -5.354953765869141
    5. '(' → logprob: -5.479953765869141
    6. ',input' → logprob: -5.854953765869141
    7. '<|end|>' → logprob: -7.479953765869141
    8. '`)' → logprob: -8.85495376586914
    9. '```' → logprob: -8.85495376586914
    10. '),' → logprob: -9.10495376586914

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6941359043121338
    2. ' input' → logprob: -0.6941359043121338
    3. ')' → logprob: -6.944135665893555
    4. '(input' → logprob: -11.444135665893555
    5. ' )' → logprob: -11.694135665893555
    6. ',input' → logprob: -13.819135665893555
    7. '=input' → logprob: -14.069135665893555
    8. 'raw' → logprob: -14.319135665893555
    9. ' ' → logprob: -14.319135665893555
    10. '	input' → logprob: -14.944135665893555

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8191154599189758
    2. ')' → logprob: -1.069115400314331
    3. '()' → logprob: -2.069115400314331
    4. '('' → logprob: -2.944115400314331
    5. '(' → logprob: -4.44411563873291
    6. '().' → logprob: -4.94411563873291
    7. '')' → logprob: -5.81911563873291
    8. '(""))' → logprob: -5.94411563873291
    9. '`()' → logprob: -6.06911563873291
    10. '("")' → logprob: -6.69411563873291

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005545823951251805
    2. 'strip' → logprob: -7.50055456161499
    3. 'rstrip' → logprob: -14.125555038452148
    4. ' split' → logprob: -14.375555038452148
    5. '(split' → logprob: -15.625555038452148
    6. ')' → logprob: -16.50055503845215
    7. 'spl' → logprob: -18.62555503845215
    8. 'read' → logprob: -19.00055503845215
    9. '```' → logprob: -19.25055503845215
    10. '().' → logprob: -19.62555503845215

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6502372026443481
    2. '())' → logprob: -0.7752372026443481
    3. '))' → logprob: -4.525237083435059
    4. '()' → logprob: -5.525237083435059
    5. '('' → logprob: -6.900237083435059
    6. '()))' → logprob: -7.025237083435059
    7. '(' → logprob: -7.525237083435059
    8. '')' → logprob: -9.650237083435059
    9. '`)' → logprob: -10.275237083435059
    10. '(','' → logprob: -10.525237083435059

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9441616535186768
    2. '   ' → logprob: -1.4441616535186768
    3. '
' → logprob: -1.6941616535186768
    4. '    
' → logprob: -3.1941616535186768
    5. '\' → logprob: -3.8191616535186768
    6. '```' → logprob: -3.9441616535186768
    7. 'return' → logprob: -4.069161415100098
    8. '  
' → logprob: -4.444161415100098
    9. '`' → logprob: -4.569161415100098
    10. ',' → logprob: -4.694161415100098

Token 17: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.601450502872467
    2. '\n' → logprob: -1.6014504432678223
    3. 'return' → logprob: -2.3514504432678223
    4. '\' → logprob: -3.6014504432678223
    5. '    
' → logprob: -3.8514504432678223
    6. '`' → logprob: -3.9764504432678223
    7. 'r' → logprob: -4.101450443267822
    8. ',' → logprob: -4.726450443267822
    9. ' ' → logprob: -4.851450443267822
    10. ' return' → logprob: -4.976450443267822

Token 18: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24948494136333466
    2. ' =' → logprob: -2.3744850158691406
    3. 'ef' → logprob: -3.3744850158691406
    4. '=' → logprob: -3.4994850158691406
    5. 'e' → logprob: -3.4994850158691406
    6. ',e' → logprob: -4.874485015869141
    7. '1' → logprob: -5.499485015869141
    8. 'ist' → logprob: -5.874485015869141
    9. ',k' → logprob: -6.124485015869141
    10. 'istance' → logprob: -6.499485015869141

Token 19: ' list' (ID: 1562)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.08614587038755417
    2. ' {}' → logprob: -2.7111458778381348
    3. 'dict' → logprob: -4.336145877838135
    4. ' dict' → logprob: -6.336145877838135
    5. '{' → logprob: -8.336145401000977
    6. ' defaultdict' → logprob: -8.461145401000977
    7. ' []' → logprob: -8.586145401000977
    8. 'default' → logprob: -8.711145401000977
    9. 'list' → logprob: -9.211145401000977
    10. '[' → logprob: -9.461145401000977

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.599413275718689
    2. '(map' → logprob: -0.849413275718689
    3. '(int' → logprob: -3.8494133949279785
    4. '()' → logprob: -6.4744133949279785
    5. '(input' → logprob: -8.72441291809082
    6. '(eval' → logprob: -10.22441291809082
    7. '(
' → logprob: -10.59941291809082
    8. '(range' → logprob: -10.59941291809082
    9. 'map' → logprob: -10.97441291809082
    10. '[int' → logprob: -11.09941291809082

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022356293629854918
    2. '(' → logprob: -8.750223159790039
    3. 'int' → logprob: -10.375223159790039
    4. '=int' → logprob: -11.375223159790039
    5. '<int' → logprob: -11.750223159790039
    6. '[int' → logprob: -12.000223159790039
    7. '```' → logprob: -13.250223159790039
    8. '(str' → logprob: -13.500223159790039
    9. ',int' → logprob: -13.500223159790039
    10. '<|end|>' → logprob: -13.875223159790039

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36595121026039124
    2. '(input' → logprob: -1.7409511804580688
    3. ',input' → logprob: -2.1159512996673584
    4. '(' → logprob: -4.990951061248779
    5. ')' → logprob: -6.115951061248779
    6. 'input' → logprob: -7.615951061248779
    7. ' ,' → logprob: -7.615951061248779
    8. '),' → logprob: -8.115951538085938
    9. '=input' → logprob: -9.490951538085938
    10. '<|end|>' → logprob: -9.865951538085938

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141547918319702
    2. ' input' → logprob: -1.7014155387878418
    3. ')' → logprob: -14.076415061950684
    4. '(input' → logprob: -14.326415061950684
    5. ',input' → logprob: -15.576415061950684
    6. '<input' → logprob: -15.701415061950684
    7. '=input' → logprob: -15.826415061950684
    8. ' ' → logprob: -15.951415061950684
    9. '	input' → logprob: -16.201416015625
    10. '_input' → logprob: -16.951416015625

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.755678961984813e-05
    2. '()' → logprob: -9.875077247619629
    3. '()))' → logprob: -10.750077247619629
    4. '(' → logprob: -13.125077247619629
    5. ' ().' → logprob: -14.500077247619629
    6. '())' → logprob: -14.500077247619629
    7. '.' → logprob: -14.625077247619629
    8. '))' → logprob: -15.125077247619629
    9. '())))' → logprob: -15.250077247619629
    10. '()));' → logprob: -15.250077247619629

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0921942703134846e-05
    2. 'strip' → logprob: -12.12501049041748
    3. ' split' → logprob: -12.25001049041748
    4. 'rstrip' → logprob: -14.37501049041748
    5. '(split' → logprob: -16.000011444091797
    6. 'read' → logprob: -17.375011444091797
    7. 'spl' → logprob: -18.250011444091797
    8. ')' → logprob: -18.500011444091797
    9. ' ' → logprob: -19.375011444091797
    10. '   ' → logprob: -19.500011444091797

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012533903121948242
    2. '())' → logprob: -4.887534141540527
    3. '()' → logprob: -5.512534141540527
    4. '))' → logprob: -7.387534141540527
    5. '(' → logprob: -9.262534141540527
    6. '()))
' → logprob: -9.387534141540527
    7. '())))' → logprob: -10.387534141540527
    8. '()))

' → logprob: -11.512534141540527
    9. '()));' → logprob: -11.637534141540527
    10. '   ' → logprob: -11.637534141540527

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04508952423930168
    2. ')' → logprob: -3.6700894832611084
    3. 'return' → logprob: -5.6700897216796875
    4. 'd' → logprob: -5.9200897216796875
    5. '```' → logprob: -5.9200897216796875
    6. '[' → logprob: -6.4200897216796875
    7. '<|end|>' → logprob: -6.5450897216796875
    8. ' ' → logprob: -6.6700897216796875
    9. '
' → logprob: -7.1700897216796875
    10. 'for' → logprob: -7.1700897216796875

Token 28: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9000250697135925
    2. ')' → logprob: -1.2750251293182373
    3. 'r' → logprob: -2.4000251293182373
    4. 'd' → logprob: -3.4000251293182373
    5. ' ' → logprob: -3.5250251293182373
    6. 'n' → logprob: -3.5250251293182373
    7. 'for' → logprob: -3.5250251293182373
    8. '[' → logprob: -4.400024890899658
    9. 'return' (adapté à ' return') → logprob: -4.400024890899658
    10. ' for' → logprob: -4.900024890899658

Token 29: ' k' (ID: 372)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7005388140678406
    2. ' k' → logprob: -1.2005388736724854
    3. 'k' → logprob: -1.9505388736724854
    4. 'd' → logprob: -2.8255388736724854
    5. ' (' → logprob: -7.825538635253906
    6. '(k' → logprob: -8.075538635253906
    7. ' ' → logprob: -8.200538635253906
    8. '[k' → logprob: -9.700538635253906
    9. ' [' → logprob: -9.950538635253906
    10. ' ' → logprob: -10.700538635253906

Token 30: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.0019306590547785163
    2. 'q' → logprob: -6.3769307136535645
    3. ' ' → logprob: -9.001930236816406
    4. ',q' → logprob: -10.626930236816406
    5. ' ' → logprob: -10.751930236816406
    6. 'space' → logprob: -11.501930236816406
    7. ' d' → logprob: -11.876930236816406
    8. ''' → logprob: -12.001930236816406
    9. ',' → logprob: -12.126930236816406
    10. '"' → logprob: -12.376930236816406

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056528329849243164
    2. ',d' → logprob: -3.306528329849243
    3. ',
' → logprob: -4.931528091430664
    4. '<|end|>' → logprob: -4.931528091430664
    5. ' ,' → logprob: -6.556528091430664
    6. 'd' → logprob: -6.806528091430664
    7. ' ' → logprob: -8.431528091430664
    8. '
' → logprob: -8.431528091430664
    9. '   ' → logprob: -8.931528091430664
    10. ',k' → logprob: -9.556528091430664

Token 33: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1129002496600151
    2. 'd' → logprob: -2.2379002571105957
    3. ' ' → logprob: -9.862899780273438
    4. ' ' → logprob: -11.487899780273438
    5. '	d' → logprob: -12.237899780273438
    6. '    ' → logprob: -12.737899780273438
    7. '_d' → logprob: -13.612899780273438
    8. 'space' → logprob: -13.612899780273438
    9. '`' → logprob: -14.487899780273438
    10. ' `' → logprob: -14.487899780273438

Token 34: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.574386477470398
    2. 'def' → logprob: -1.324386477470398
    3. '```' → logprob: -2.9493865966796875
    4. '

' → logprob: -3.5743865966796875
    5. '\n' → logprob: -3.8243865966796875
    6. '#' → logprob: -4.3243865966796875
    7. '\' → logprob: -4.4493865966796875
    8. 'd' → logprob: -4.8243865966796875
    9. 'for' → logprob: -4.9493865966796875
    10. '' → logprob: -5.0743865966796875

Token 36: ' read' (ID: 1729)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.6244672536849976
    2. ' process' → logprob: -1.3744672536849976
    3. ' main' → logprob: -2.249467372894287
    4. ' calculate' → logprob: -2.749467372894287
    5. ' read' → logprob: -3.874467372894287
    6. ' compute' → logprob: -5.124467372894287
    7. ' solution' → logprob: -6.374467372894287
    8. ' query' → logprob: -6.749467372894287
    9. ' space' → logprob: -6.749467372894287
    10. ' write' → logprob: -6.749467372894287

Token 37: '_query' (ID: 13012)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.07230758666992188
    2. '_query' → logprob: -3.322307586669922
    3. '_' → logprob: -4.447307586669922
    4. '_output' → logprob: -4.822307586669922
    5. '_queries' → logprob: -5.197307586669922
    6. '_data' → logprob: -5.822307586669922
    7. '_test' → logprob: -6.197307586669922
    8. '_answer' → logprob: -7.447307586669922
    9. ' _' → logprob: -8.572307586669922
    10. '_user' → logprob: -8.697307586669922

Token 38: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003025729674845934
    2. 's' → logprob: -8.2503023147583
    3. ' ():' → logprob: -10.5003023147583
    4. '():
' → logprob: -12.0003023147583
    5. '()' → logprob: -13.0003023147583
    6. '(' → logprob: -14.0003023147583
    7. 'es' → logprob: -14.2503023147583
    8. '_list' → logprob: -14.2503023147583
    9. '_' → logprob: -14.2503023147583
    10. '_input' → logprob: -14.3753023147583

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029506010469049215
    2. '    
' → logprob: -6.627950668334961
    3. ' return' → logprob: -7.127950668334961
    4. 'return' → logprob: -7.502950668334961
    5. '    ' → logprob: -9.627950668334961
    6. '```' → logprob: -10.377950668334961
    7. '()' → logprob: -10.752950668334961
    8. '
' → logprob: -10.752950668334961
    9. ' 
' → logprob: -10.752950668334961
    10. '  ' → logprob: -11.002950668334961

Token 40: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7672199010848999
    2. '   ' → logprob: -1.1422199010849
    3. ' return' → logprob: -2.0172200202941895
    4. 'q' → logprob: -3.1422200202941895
    5. 'query' → logprob: -4.0172200202941895
    6. 'x' → logprob: -5.6422200202941895
    7. ' q' → logprob: -5.7672200202941895
    8. 'a' → logprob: -6.1422200202941895
    9. ' query' → logprob: -6.2672200202941895
    10. 'data' → logprob: -6.5172200202941895

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05434681102633476
    2. ' =' → logprob: -3.179346799850464
    3. '=' → logprob: -5.179347038269043
    4. ' ,' → logprob: -5.929347038269043
    5. ' ' → logprob: -7.304347038269043
    6. 'um' → logprob: -7.429347038269043
    7. 'umber' → logprob: -7.679347038269043
    8. '   ' → logprob: -8.429347038269043
    9. '  ' → logprob: -8.554347038269043
    10. 'e' → logprob: -8.554347038269043

Token 42: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8990986943244934
    2. ' x' → logprob: -1.5240986347198486
    3. 'm' → logprob: -3.0240986347198486
    4. 'k' → logprob: -3.1490986347198486
    5. ' m' → logprob: -3.3990986347198486
    6. ' k' → logprob: -3.5240986347198486
    7. 'a' → logprob: -3.7740986347198486
    8. 'l' → logprob: -4.024098873138428
    9. 'q' → logprob: -4.274098873138428
    10. ' l' → logprob: -4.274098873138428

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46064141392707825
    2. '=' → logprob: -1.0856413841247559
    3. ',' → logprob: -3.460641384124756
    4. ' ' → logprob: -11.835641860961914
    5. ' ,' → logprob: -11.960641860961914
    6. '=query' → logprob: -12.335641860961914
    7. ')' → logprob: -13.460641860961914
    8. ',y' → logprob: -13.460641860961914
    9. '=int' → logprob: -14.335641860961914
    10. '   ' → logprob: -14.585641860961914

Token 44: ' m' (ID: 284)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3704892098903656
    2. ' y' → logprob: -1.620489239692688
    3. 'm' → logprob: -3.7454891204833984
    4. 'v' → logprob: -4.370489120483398
    5. 'c' → logprob: -4.620489120483398
    6. 'z' → logprob: -5.120489120483398
    7. 'k' → logprob: -5.245489120483398
    8. 'p' → logprob: -5.245489120483398
    9. 't' → logprob: -5.245489120483398
    10. 'a' → logprob: -5.245489120483398

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976991832256317
    2. '=' → logprob: -1.8047698736190796
    3. ',' → logprob: -11.054769515991211
    4. ' ' → logprob: -12.429769515991211
    5. '   ' → logprob: -13.429769515991211
    6. ')' → logprob: -13.554769515991211
    7. '  ' → logprob: -13.804769515991211
    8. '=int' → logprob: -14.554769515991211
    9. 'ap' → logprob: -15.554769515991211
    10. '=input' → logprob: -15.679769515991211

Token 46: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0008121283026412129
    2. 'map' → logprob: -7.12581205368042
    3. ' ' → logprob: -12.125812530517578
    4. '	map' → logprob: -14.375812530517578
    5. '  ' → logprob: -14.500812530517578
    6. '   ' → logprob: -14.875812530517578
    7. '(map' → logprob: -15.875812530517578
    8. ' m' → logprob: -16.250812530517578
    9. ' [' → logprob: -16.375812530517578
    10. ' ' → logprob: -16.500812530517578

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12764687836170197
    2. '(' → logprob: -2.1276469230651855
    3. '<|end|>' → logprob: -8.252646446228027
    4. '<int' → logprob: -8.752646446228027
    5. '(lambda' → logprob: -9.377646446228027
    6. '(str' → logprob: -10.127646446228027
    7. '(
' → logprob: -10.252646446228027
    8. ' (' → logprob: -11.002646446228027
    9. '<|end|>' → logprob: -11.127646446228027
    10. '[int' → logprob: -11.252646446228027

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11603996902704239
    2. ',int' → logprob: -2.241039991378784
    3. ',input' → logprob: -5.866039752960205
    4. '(int' → logprob: -8.366040229797363
    5. ' ,' → logprob: -9.116040229797363
    6. '(' → logprob: -11.116040229797363
    7. ',float' → logprob: -11.991040229797363
    8. 'int' → logprob: -12.366040229797363
    9. '=int' → logprob: -13.491040229797363
    10. '(input' → logprob: -13.741040229797363

Token 49: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5197340250015259
    2. 'input' → logprob: -1.0197340250015259
    3. 'int' → logprob: -3.2697339057922363
    4. ' int' → logprob: -5.019733905792236
    5. '(int' → logprob: -13.269734382629395
    6. '(input' → logprob: -13.644734382629395
    7. ',int' → logprob: -14.144734382629395
    8. '=input' → logprob: -14.269734382629395
    9. '<input' → logprob: -14.519734382629395
    10. ' ' → logprob: -14.644734382629395

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010093499440699816
    2. '()' → logprob: -7.001009464263916
    3. ')' → logprob: -9.751008987426758
    4. '())' → logprob: -10.251008987426758
    5. '(' → logprob: -13.751008987426758
    6. ' ().' → logprob: -14.126008987426758
    7. '());' → logprob: -15.376008987426758
    8. '(),' → logprob: -15.376008987426758
    9. '().__' → logprob: -15.501008987426758
    10. '()).' → logprob: -15.626008987426758

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2007883671903983e-05
    2. ')' → logprob: -11.000021934509277
    3. 'strip' → logprob: -12.375021934509277
    4. ' split' → logprob: -14.500021934509277
    5. 'spl' → logprob: -15.250021934509277
    6. '())' → logprob: -16.125022888183594
    7. 'rstrip' → logprob: -16.250022888183594
    8. '()' → logprob: -16.625022888183594
    9. '(split' → logprob: -16.875022888183594
    10. '```' → logprob: -18.000022888183594

Token 52: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008274946012534201
    2. '))' → logprob: -7.125827312469482
    3. '()' → logprob: -11.37582778930664
    4. '())' → logprob: -12.25082778930664
    5. '`)' → logprob: -13.00082778930664
    6. ')
' → logprob: -13.50082778930664
    7. ' )' → logprob: -14.37582778930664
    8. ')`' → logprob: -14.62582778930664
    9. ')")' → logprob: -14.87582778930664
    10. '),' → logprob: -15.12582778930664

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.019237768370658e-05
    2. '	return' → logprob: -10.000090599060059
    3. '<|end|>' → logprob: -11.375090599060059
    4. '       ' → logprob: -11.625090599060059
    5. 'return' → logprob: -11.875090599060059
    6. '    
' → logprob: -12.375090599060059
    7. ' return' → logprob: -12.375090599060059
    8. '```' → logprob: -12.500090599060059
    9. ')' → logprob: -13.500090599060059
    10. '
' → logprob: -14.000090599060059

Token 54: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1357702910900116
    2. 'return' (adapté à ' return') → logprob: -2.135770320892334
    3. ' return' → logprob: -5.510770320892334
    4. 'r' → logprob: -5.760770320892334
    5. '```' → logprob: -7.635770320892334
    6. ' ' → logprob: -8.260769844055176
    7. '  ' → logprob: -8.510769844055176
    8. '	return' → logprob: -8.760769844055176
    9. '`' → logprob: -8.885769844055176
    10. 'n' → logprob: -9.260769844055176

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43312492966651917
    2. ' n' → logprob: -1.0581248998641968
    3. '(n' → logprob: -6.058125019073486
    4. ' (' → logprob: -6.308125019073486
    5. ' ' → logprob: -8.558124542236328
    6. '(' → logprob: -10.058124542236328
    7. '   ' → logprob: -11.558124542236328
    8. '	n' → logprob: -12.308124542236328
    9. '  ' → logprob: -12.933124542236328
    10. ' ' → logprob: -13.433124542236328

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046951865078881383
    2. ',x' → logprob: -7.87546968460083
    3. ' ,' → logprob: -9.500469207763672
    4. '<|end|>' → logprob: -12.000469207763672
    5. ',n' → logprob: -12.625469207763672
    6. ',
' → logprob: -13.500469207763672
    7. '‌,' → logprob: -14.125469207763672
    8. ',user' → logprob: -15.125469207763672
    9. ',y' → logprob: -15.375469207763672
    10. ' ' → logprob: -15.375469207763672

Token 57: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07018828392028809
    2. 'x' → logprob: -2.695188283920288
    3. ' ' → logprob: -8.320188522338867
    4. ' ' → logprob: -12.070188522338867
    5. ''' → logprob: -14.820188522338867
    6. 's' → logprob: -15.070188522338867
    7. 'space' → logprob: -15.070188522338867
    8. ',' → logprob: -15.320188522338867
    9. '"' → logprob: -15.320188522338867
    10. '`' → logprob: -15.570188522338867

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04418696463108063
    2. 'm' → logprob: -4.044187068939209
    3. ' ,' → logprob: -4.294187068939209
    4. ',m' → logprob: -4.794187068939209
    5. ' m' → logprob: -5.669187068939209
    6. ' ' → logprob: -8.41918659210205
    7. '	m' → logprob: -10.29418659210205
    8. '   ' → logprob: -10.29418659210205
    9. '```' → logprob: -11.41918659210205
    10. '  ' → logprob: -11.91918659210205

Token 59: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0788901224732399
    2. 'm' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. ' ' → logprob: -15.828889846801758
    5. '	m' → logprob: -17.328889846801758
    6. '```' → logprob: -17.828889846801758
    7. ' м' → logprob: -18.953889846801758
    8. 's' → logprob: -19.016389846801758
    9. '`' → logprob: -19.328889846801758
    10. 'c' → logprob: -19.453889846801758

Token 60: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10540767014026642
    2. '
' → logprob: -2.73040771484375
    3. '<|end|>' → logprob: -3.60540771484375
    4. '

' → logprob: -5.73040771484375
    5. '```' → logprob: -6.10540771484375
    6. '\' → logprob: -6.85540771484375
    7. '\n' → logprob: -8.48040771484375
    8. '[' → logprob: -8.48040771484375
    9. '#' → logprob: -8.73040771484375
    10. '<|end|>' → logprob: -8.98040771484375

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.873677134513855
    2. '#' → logprob: -1.998677134513855
    3. '
' → logprob: -1.998677134513855
    4. 'd' → logprob: -2.1236772537231445
    5. '\' → logprob: -2.6236772537231445
    6. '<|end|>' → logprob: -2.8736772537231445
    7. '\n' → logprob: -3.3736772537231445
    8. '```' → logprob: -4.2486772537231445
    9. '[' → logprob: -5.3736772537231445
    10. 'n' → logprob: -5.8736772537231445

Token 62: ' get' (ID: 717)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.28179726004600525
    2. ' process' → logprob: -1.6567972898483276
    3. ' main' → logprob: -3.406797170639038
    4. 'solve' → logprob: -4.156797409057617
    5. ' compute' → logprob: -6.531797409057617
    6. 'process' → logprob: -6.656797409057617
    7. ' answer' → logprob: -7.531797409057617
    8. ' calculate' → logprob: -7.781797409057617
    9. ' count' → logprob: -8.156797409057617
    10. ' solution' → logprob: -8.406797409057617

Token 63: '_re' (ID: 3067)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.6810272336006165
    2. '_answer' → logprob: -2.1810271739959717
    3. '_' → logprob: -2.5560271739959717
    4. '_sum' → logprob: -2.6810271739959717
    5. '_result' → logprob: -3.3060271739959717
    6. '_k' → logprob: -3.4310271739959717
    7. '_period' → logprob: -3.5560271739959717
    8. '_cycle' → logprob: -3.8060271739959717
    9. '_next' → logprob: -3.9310271739959717
    10. '_max' → logprob: -4.181027412414551

Token 64: 'petition' (ID: 134449)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09261846542358398
    2. 'mainder' → logprob: -3.217618465423584
    3. 'm' → logprob: -3.592618465423584
    4. 'peating' → logprob: -4.842618465423584
    5. 'peated' → logprob: -4.842618465423584
    6. 'peat' → logprob: -6.717618465423584
    7. 'main' → logprob: -7.217618465423584
    8. 'sid' → logprob: -7.592618465423584
    9. 'pe' → logprob: -7.592618465423584
    10. 'quired' → logprob: -8.092618942260742

Token 65: '_parts' (ID: 81867)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5125341415405273
    2. '_period' → logprob: -1.6375341415405273
    3. '_info' → logprob: -2.6375341415405273
    4. '(' → logprob: -3.6375341415405273
    5. '_count' → logprob: -3.7625341415405273
    6. '_interval' → logprob: -4.137534141540527
    7. '_cycle' → logprob: -4.137534141540527
    8. '():' → logprob: -4.762534141540527
    9. '_pattern' → logprob: -5.012534141540527
    10. '_params' → logprob: -5.137534141540527

Token 66: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20210450887680054
    2. '(n' → logprob: -1.7021045684814453
    3. '(x' → logprob: -8.827104568481445
    4. '():' → logprob: -9.077104568481445
    5. ' (' → logprob: -9.452104568481445
    6. '(def' → logprob: -9.577104568481445
    7. '(k' → logprob: -9.827104568481445
    8. '((' → logprob: -10.077104568481445
    9. '(:' → logprob: -10.577104568481445
    10. '(num' → logprob: -11.327104568481445

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048167374916374683
    2. ' ,' → logprob: -8.500481605529785
    3. ')' → logprob: -8.750481605529785
    4. ',x' → logprob: -9.250481605529785
    5. '):' → logprob: -12.000481605529785
    6. ',n' → logprob: -12.250481605529785
    7. ' ' → logprob: -12.375481605529785
    8. ' )' → logprob: -13.250481605529785
    9. ',)' → logprob: -13.375481605529785
    10. '‌,' → logprob: -13.875481605529785

Token 68: ' k' (ID: 372)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20146244764328003
    2. 'x' → logprob: -1.7014625072479248
    3. ' k' → logprob: -11.826462745666504
    4. ' ' → logprob: -11.826462745666504
    5. ')' → logprob: -12.201462745666504
    6. ' )' → logprob: -12.201462745666504
    7. ' n' → logprob: -12.326462745666504
    8. 'k' → logprob: -12.576462745666504
    9. 'n' → logprob: -13.076462745666504
    10. ' m' → logprob: -13.326462745666504

Token 69: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008110555354505777
    2. '):' → logprob: -7.6258111000061035
    3. ' ,' → logprob: -8.875810623168945
    4. ',x' → logprob: -9.375810623168945
    5. 'x' → logprob: -10.250810623168945
    6. ')' → logprob: -10.625810623168945
    7. ',n' → logprob: -11.500810623168945
    8. 'n' → logprob: -12.500810623168945
    9. '=' → logprob: -12.750810623168945
    10. 'd' → logprob: -12.875810623168945

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2390696257352829
    2. ':' → logprob: -2.114069700241089
    3. ' :' → logprob: -2.739069700241089
    4. ' ' → logprob: -4.48906946182251
    5. ' =' → logprob: -6.36406946182251
    6. '(' → logprob: -6.36406946182251
    7. '():' → logprob: -6.61406946182251
    8. '    ' → logprob: -6.86406946182251
    9. '):' → logprob: -6.86406946182251
    10. 'n' → logprob: -6.98906946182251

Token 71: ' rep' (ID: 2449)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5896306037902832
    2. ' parts' → logprob: -1.9646306037902832
    3. ' ' → logprob: -2.464630603790283
    4. '[' → logprob: -3.214630603790283
    5. 'parts' → logprob: -3.839630603790283
    6. ' [' → logprob: -4.089630603790283
    7. ' cycle' → logprob: -4.339630603790283
    8. ' x' → logprob: -4.714630603790283
    9. 'cycle' → logprob: -4.839630603790283
    10. ' i' → logprob: -5.089630603790283

Token 72: ',' (ID: 11)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.7527594566345215
    2. 'et' → logprob: -1.1277594566345215
    3. 'e' → logprob: -3.0027594566345215
    4. '_len' → logprob: -3.3777594566345215
    5. '=' → logprob: -3.7527594566345215
    6. '_' → logprob: -3.8777594566345215
    7. ' =' → logprob: -4.0027594566345215
    8. '_start' → logprob: -4.3777594566345215
    9. '_length' → logprob: -4.6277594566345215
    10. 'ort' → logprob: -4.6277594566345215

Token 73: ' rest' (ID: 2867)
  Prédit: ' rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.9173852205276489
    2. ' remainder' → logprob: -1.792385220527649
    3. ' cycle' → logprob: -1.917385220527649
    4. ' rest' → logprob: -2.9173851013183594
    5. ' start' → logprob: -3.4173851013183594
    6. ' mod' → logprob: -3.5423851013183594
    7. ' idx' → logprob: -4.042385101318359
    8. ' offset' → logprob: -4.542385101318359
    9. 'rem' → logprob: -4.542385101318359
    10. ' rep' → logprob: -4.667385101318359

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270925521850586
    2. '=' → logprob: -2.017709255218506
    3. ',' → logprob: -10.892709732055664
    4. ' ' → logprob: -11.892709732055664
    5. '  ' → logprob: -12.517709732055664
    6. '   ' → logprob: -13.142709732055664
    7. ')' → logprob: -14.142709732055664
    8. '=int' → logprob: -14.267709732055664
    9. ' =
' → logprob: -15.767709732055664
    10. '```' → logprob: -15.767709732055664

Token 75: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.3110976815223694
    2. ' div' → logprob: -1.9360976219177246
    3. ' n' → logprob: -2.4360976219177246
    4. 'n' → logprob: -3.4360976219177246
    5. '   ' → logprob: -5.936097621917725
    6. ' ' → logprob: -8.561098098754883
    7. '	div' → logprob: -8.686098098754883
    8. '(n' → logprob: -10.186098098754883
    9. '0' → logprob: -10.186098098754883
    10. '(div' → logprob: -10.311098098754883

Token 76: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.935296834039036e-06
    2. 'ision' → logprob: -13.00000286102295
    3. '_mod' → logprob: -15.75000286102295
    4. '-mod' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.875003814697266
    6. 'mods' → logprob: -17.250003814697266
    7. ' mod' → logprob: -17.375003814697266
    8. '(mod' → logprob: -17.375003814697266
    9. '	mod' → logprob: -17.500003814697266
    10. 'Mod' → logprob: -17.625003814697266

Token 77: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003222342347726226
    2. '(' → logprob: -8.125322341918945
    3. 'n' → logprob: -11.000322341918945
    4. ' (' → logprob: -12.375322341918945
    5. ' n' → logprob: -12.500322341918945
    6. ')' → logprob: -14.500322341918945
    7. ')n' → logprob: -14.625322341918945
    8. '	n' → logprob: -15.125322341918945
    9. '(
' → logprob: -16.125322341918945
    10. ' ' → logprob: -16.625322341918945

Token 78: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012197038158774376
    2. ' ,' → logprob: -4.762197017669678
    3. ',k' → logprob: -5.637197017669678
    4. ' ' → logprob: -12.387197494506836
    5. 'k' → logprob: -12.762197494506836
    6. ' k' → logprob: -12.762197494506836
    7. '-' → logprob: -13.262197494506836
    8. ' -' → logprob: -14.137197494506836
    9. ')' → logprob: -15.637197494506836
    10. '-k' → logprob: -15.762197494506836

Token 79: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6938222050666809
    2. ' k' → logprob: -0.6938222050666809
    3. '1' → logprob: -7.568822383880615
    4. ' ' → logprob: -9.818821907043457
    5. '<|end|>' → logprob: -9.943821907043457
    6. '(k' → logprob: -11.193821907043457
    7. '	k' → logprob: -11.318821907043457
    8. ',k' → logprob: -11.943821907043457
    9. '<|end|>' → logprob: -12.193821907043457
    10. '2' → logprob: -12.318821907043457

Token 80: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010497196344658732
    2. '1' → logprob: -6.876049518585205
    3. ' k' → logprob: -11.251049995422363
    4. '(k' → logprob: -12.751049995422363
    5. '(' → logprob: -14.376049995422363
    6. ' ' → logprob: -16.251049041748047
    7. '<|end|>' → logprob: -16.251049041748047
    8. '{k' → logprob: -16.376049041748047
    9. ' (' → logprob: -16.876049041748047
    10. '2' → logprob: -17.001049041748047

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010784282349050045
    2. ' ,' → logprob: -4.760784149169922
    3. ',k' → logprob: -6.135784149169922
    4. ' ' → logprob: -14.010784149169922
    5. '   ' → logprob: -14.760784149169922
    6. 'k' → logprob: -14.760784149169922
    7. ')' → logprob: -15.135784149169922
    8. '‌,' → logprob: -15.260784149169922
    9. ',n' → logprob: -15.635784149169922
    10. ',
' → logprob: -15.760784149169922

Token 82: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5759420990943909
    2. ' k' → logprob: -0.8259420990943909
    3. '	k' → logprob: -13.450942039489746
    4. ' ' → logprob: -14.825942039489746
    5. ')' → logprob: -15.700942039489746
    6. '<|end|>' → logprob: -15.700942039489746
    7. ' к' → logprob: -16.575942993164062
    8. ',k' → logprob: -16.700942993164062
    9. ' 
' → logprob: -16.825942993164062
    10. ' ' → logprob: -16.950942993164062

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003066222125198692
    2. ')
' → logprob: -8.125307083129883
    3. ' )' → logprob: -12.000307083129883
    4. '   ' → logprob: -13.250307083129883
    5. ')

' → logprob: -13.875307083129883
    6. '),' → logprob: -14.250307083129883
    7. ' ' → logprob: -14.875307083129883
    8. ',' → logprob: -16.125307083129883
    9. ')
' → logprob: -16.375307083129883
    10. '))' → logprob: -16.375307083129883

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033677343162707984
    2. '	return' → logprob: -8.750336647033691
    3. '<|end|>' → logprob: -9.625336647033691
    4. ' return' → logprob: -9.750336647033691
    5. 'return' → logprob: -11.250336647033691
    6. '    
' → logprob: -11.750336647033691
    7. ')' → logprob: -11.750336647033691
    8. ':return' → logprob: -12.250336647033691
    9. '<|end|>' → logprob: -12.500336647033691
    10. ',' → logprob: -12.625336647033691

Token 85: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05356757715344429
    2. ' ' → logprob: -3.92856764793396
    3. ' return' → logprob: -4.428567409515381
    4. '	return' → logprob: -4.928567409515381
    5. ' 
' → logprob: -5.303567409515381
    6. ')' → logprob: -6.303567409515381
    7. '    
' → logprob: -7.053567409515381
    8. '\n' → logprob: -7.178567409515381
    9. 'return' (adapté à ' return') → logprob: -7.428567409515381
    10. '\t' → logprob: -7.553567409515381

Token 86: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.5765318870544434
    2. ' rep' → logprob: -0.8265318870544434
    3. '(rep' → logprob: -7.951531887054443
    4. 'rest' → logprob: -9.076532363891602
    5. ' rest' → logprob: -9.951532363891602
    6. ' (' → logprob: -10.326532363891602
    7. '(' → logprob: -10.576532363891602
    8. '   ' → logprob: -12.076532363891602
    9. '	rep' → logprob: -12.451532363891602
    10. 're' → logprob: -13.076532363891602

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002966127940453589
    2. ' ,' → logprob: -8.125296592712402
    3. 'rest' → logprob: -14.875296592712402
    4. ',
' → logprob: -16.00029754638672
    5. 'er' → logprob: -17.50029754638672
    6. ' rest' → logprob: -17.62529754638672
    7. '`,' → logprob: -17.75029754638672
    8. ' ' → logprob: -18.37529754638672
    9. '```' → logprob: -18.37529754638672
    10. ',k' → logprob: -18.50029754638672

Token 88: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.011048289015889168
    2. 'rest' → logprob: -4.511048316955566
    3. '(rest' → logprob: -15.636048316955566
    4. ' ' → logprob: -15.761048316955566
    5. '_rest' → logprob: -16.38604736328125
    6. ' ' → logprob: -16.88604736328125
    7. ' resta' → logprob: -17.13604736328125
    8. '.rest' → logprob: -18.63604736328125
    9. ' r' → logprob: -18.63604736328125
    10. 'Rest' → logprob: -18.76104736328125

Token 89: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04157513007521629
    2. '
' → logprob: -3.4165751934051514
    3. '<|end|>' → logprob: -5.291574954986572
    4. '

' → logprob: -6.041574954986572
    5. ' def' → logprob: -8.41657543182373
    6. '<|end|>' → logprob: -9.04157543182373
    7. '```' → logprob: -9.91657543182373
    8. '[' → logprob: -11.04157543182373
    9. '*' → logprob: -11.41657543182373
    10. '
' → logprob: -11.41657543182373

Token 90: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5547063946723938
    2. 'def' → logprob: -1.679706335067749
    3. 'd' → logprob: -1.804706335067749
    4. '\n' → logprob: -3.804706335067749
    5. '#' → logprob: -4.554706573486328
    6. '\' → logprob: -4.929706573486328
    7. '

' → logprob: -5.179706573486328
    8. 'n' → logprob: -5.429706573486328
    9. '```' → logprob: -5.554706573486328
    10. '<|end|>' → logprob: -5.554706573486328

Token 91: ' mods' (ID: 60449)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.6316854357719421
    2. ' get' → logprob: -1.381685495376587
    3. ' main' → logprob: -2.506685495376587
    4. ' process' → logprob: -3.131685495376587
    5. ' compute' → logprob: -3.881685495376587
    6. ' count' → logprob: -3.881685495376587
    7. ' find' → logprob: -4.256685256958008
    8. ' calculate' → logprob: -4.256685256958008
    9. ' sum' → logprob: -6.006685256958008
    10. ' repeat' → logprob: -6.131685256958008

Token 92: '_sequence' (ID: 55606)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.4649683237075806
    2. '_' → logprob: -1.8399683237075806
    3. '(n' → logprob: -2.089968204498291
    4. '(' → logprob: -2.964968204498291
    5. '_mod' → logprob: -3.089968204498291
    6. '_sum' → logprob: -3.339968204498291
    7. '_sequence' → logprob: -3.589968204498291
    8. '(x' → logprob: -3.964968204498291
    9. '(a' → logprob: -3.964968204498291
    10. '_of' → logprob: -4.089968204498291

Token 93: '(d' (ID: 2572)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5753023028373718
    2. '(' → logprob: -0.9503023028373718
    3. '(m' → logprob: -3.4503023624420166
    4. '(x' → logprob: -4.2003021240234375
    5. '(k' → logprob: -5.8253021240234375
    6. ' (' → logprob: -7.2003021240234375
    7. '(a' → logprob: -9.700302124023438
    8. '((' → logprob: -9.950302124023438
    9. '(s' → logprob: -10.075302124023438
    10. '(_' → logprob: -10.200302124023438

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03853908181190491
    2. '):' → logprob: -3.288539171218872
    3. ' ,' → logprob: -8.788538932800293
    4. ')' → logprob: -9.038538932800293
    5. ',n' → logprob: -9.038538932800293
    6. ' ):' → logprob: -9.538538932800293
    7. '[' → logprob: -11.913538932800293
    8. ',k' → logprob: -12.163538932800293
    9. ':' → logprob: -12.913538932800293
    10. '[n' → logprob: -12.913538932800293

Token 95: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4827762842178345
    2. ' n' → logprob: -1.3577762842178345
    3. ' m' → logprob: -2.857776165008545
    4. 'k' → logprob: -3.232776165008545
    5. ' x' → logprob: -4.357776165008545
    6. 'n' → logprob: -4.857776165008545
    7. 'm' → logprob: -5.857776165008545
    8. ' rep' → logprob: -6.107776165008545
    9. 'x' → logprob: -6.857776165008545
    10. ' d' → logprob: -7.482776165008545

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006801225710660219
    2. '):
' → logprob: -5.006801128387451
    3. ')' → logprob: -10.00680160522461
    4. ' ):' → logprob: -10.75680160522461
    5. '):
' → logprob: -11.63180160522461
    6. ',' → logprob: -11.75680160522461
    7. ':' → logprob: -13.63180160522461
    8. '=' → logprob: -14.75680160522461
    9. '   ' → logprob: -14.88180160522461
    10. '):

' → logprob: -15.75680160522461

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026288922876119614
    2. '[' → logprob: -5.401288986206055
    3. ' return' → logprob: -5.651288986206055
    4. ' result' → logprob: -5.776288986206055
    5. 'result' → logprob: -6.151288986206055
    6. 'mods' → logprob: -6.151288986206055
    7. ' mod' → logprob: -6.526288986206055
    8. ' [' → logprob: -6.901288986206055
    9. '[]' → logprob: -7.151288986206055
    10. ' sequence' → logprob: -7.151288986206055

Token 98: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0405906438827515
    2. '   ' → logprob: -1.6655906438827515
    3. 'res' → logprob: -2.165590763092041
    4. ' res' → logprob: -2.540590763092041
    5. ' [' → logprob: -2.915590763092041
    6. 'seq' → logprob: -3.290590763092041
    7. 'result' → logprob: -3.415590763092041
    8. ' seq' → logprob: -3.790590763092041
    9. 'mods' → logprob: -3.790590763092041
    10. '[i' → logprob: -4.040590763092041

Token 99: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26810383796691895
    2. ' [' → logprob: -1.893103837966919
    3. '[d' → logprob: -3.268103837966919
    4. '[(' → logprob: -3.393103837966919
    5. '[i' → logprob: -5.64310359954834
    6. '[m' → logprob: -5.89310359954834
    7. ' [(' → logprob: -6.26810359954834
    8. '[n' → logprob: -6.89310359954834
    9. '[len' → logprob: -6.89310359954834
    10. '[list' → logprob: -7.39310359954834

Token 100: 'num' (ID: 4571)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08691903203725815
    2. 'i' → logprob: -2.961919069290161
    3. '(x' → logprob: -4.336918830871582
    4. 'di' → logprob: -4.836918830871582
    5. '(i' → logprob: -5.711918830871582
    6. '(di' → logprob: -6.461918830871582
    7. 'xi' → logprob: -7.086918830871582
    8. 'val' → logprob: -7.086918830871582
    9. 'elem' → logprob: -7.586918830871582
    10. 'e' → logprob: -7.711918830871582

Token 101: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.008682293817400932
    2. '%' → logprob: -4.7586822509765625
    3. '%d' → logprob: -10.383682250976562
    4. ' ' → logprob: -10.383682250976562
    5. '%m' → logprob: -12.508682250976562
    6. ' ' → logprob: -13.758682250976562
    7. '%i' → logprob: -14.508682250976562
    8. '%n' → logprob: -16.383682250976562
    9. ' %
' → logprob: -16.383682250976562
    10. '%c' → logprob: -16.383682250976562

Token 102: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.16022443771362305
    2. 'm' → logprob: -1.910224437713623
    3. '	m' → logprob: -15.535224914550781
    4. ' ' → logprob: -17.03522491455078
    5. ' м' → logprob: -17.91022491455078
    6. ' ' → logprob: -18.41022491455078
    7. ')m' → logprob: -20.53522491455078
    8. '(m' → logprob: -20.66022491455078
    9. '   ' → logprob: -20.91022491455078
    10. '*m' → logprob: -21.03522491455078

Token 103: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004710768815129995
    2. 'for' → logprob: -5.379710674285889
    3. ' ' → logprob: -9.379711151123047
    4. '	for' → logprob: -13.004711151123047
    5. '   ' → logprob: -13.504711151123047
    6. ')' → logprob: -13.504711151123047
    7. ']' → logprob: -14.879711151123047
    8. ' d' → logprob: -15.504711151123047
    9. '  ' → logprob: -15.504711151123047
    10. '
' → logprob: -16.129711151123047

Token 104: ' num' (ID: 2269)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.029752103611826897
    2. 'd' → logprob: -3.529752016067505
    3. '	d' → logprob: -14.154751777648926
    4. ' ' → logprob: -14.279751777648926
    5. ' ' → logprob: -15.654751777648926
    6. 'num' → logprob: -16.654752731323242
    7. ' num' → logprob: -16.654752731323242
    8. ')d' → logprob: -17.904752731323242
    9. '  ' → logprob: -18.029752731323242
    10. '_d' → logprob: -18.529752731323242

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04073277860879898
    2. ' d' → logprob: -3.5407328605651855
    3. 'd' → logprob: -5.0407328605651855
    4. 'in' → logprob: -5.4157328605651855
    5. ' ' → logprob: -13.290732383728027
    6. '	d' → logprob: -13.415732383728027
    7. '<|end|>' → logprob: -14.540732383728027
    8. ',d' → logprob: -14.665732383728027
    9. ']' → logprob: -14.790732383728027
    10. ',' → logprob: -14.915732383728027

Token 106: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023245595395565033
    2. ' d' → logprob: -3.7732455730438232
    3. '	d' → logprob: -16.773244857788086
    4. ')d' → logprob: -19.023244857788086
    5. '
' → logprob: -19.523244857788086
    6. '_d' → logprob: -19.648244857788086
    7. '>d' → logprob: -21.648244857788086
    8. '$d' → logprob: -21.773244857788086
    9. '.d' → logprob: -22.148244857788086
    10. '"d' → logprob: -22.398244857788086

Token 107: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.9728669738397e-05
    2. ' ]' → logprob: -9.250100135803223
    3. ']
' → logprob: -12.625100135803223
    4. '   ' → logprob: -16.500099182128906
    5. ')]' → logprob: -16.500099182128906
    6. '()]' → logprob: -16.750099182128906
    7. ']

' → logprob: -16.875099182128906
    8. '`]' → logprob: -18.250099182128906
    9. ']
' → logprob: -18.750099182128906
    10. ' ' → logprob: -19.000099182128906

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0066957115195691586
    2. '<|end|>' → logprob: -5.131695747375488
    3. '<|end|>' → logprob: -7.881695747375488
    4. '[' → logprob: -9.006695747375488
    5. 'for' → logprob: -9.881695747375488
    6. '```' → logprob: -9.881695747375488
    7. 'd' → logprob: -10.381695747375488
    8. '
' → logprob: -10.631695747375488
    9. '#' → logprob: -11.381695747375488
    10. ' def' → logprob: -11.381695747375488

Token 109: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.24555693566799164
    2. 'main' → logprob: -3.3705568313598633
    3. ' sum' → logprob: -3.3705568313598633
    4. ' solve' → logprob: -3.4955568313598633
    5. ' prefix' → logprob: -3.9955568313598633
    6. ' get' → logprob: -4.120556831359863
    7. ' accumulate' → logprob: -4.495556831359863
    8. 'solve' → logprob: -4.745556831359863
    9. 'sum' → logprob: -4.995556831359863
    10. ' compute' → logprob: -4.995556831359863

Token 110: '_partial' (ID: 139756)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.0198450088500977
    2. '_k' → logprob: -1.6448450088500977
    3. '_sum' → logprob: -2.1448450088500977
    4. '_prefix' → logprob: -2.6448450088500977
    5. '_sequence' → logprob: -2.7698450088500977
    6. '_mod' → logprob: -2.8948450088500977
    7. '_c' → logprob: -4.144845008850098
    8. '_max' → logprob: -4.144845008850098
    9. '_total' → logprob: -4.269845008850098
    10. '_m' → logprob: -4.269845008850098

Token 111: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.02555408515036106
    2. '_s' → logprob: -3.7755541801452637
    3. '_sequence' → logprob: -7.025554180145264
    4. 'sum' → logprob: -7.275554180145264
    5. '_prefix' → logprob: -8.400553703308105
    6. '_' → logprob: -8.650553703308105
    7. 's' → logprob: -9.525553703308105
    8. '_mod' → logprob: -10.275553703308105
    9. '_suffix' → logprob: -10.525553703308105
    10. '_answer' → logprob: -10.650553703308105

Token 112: '(seq' (ID: 78669)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8011130690574646
    2. '(' → logprob: -1.4261131286621094
    3. '(d' → logprob: -1.6761131286621094
    4. '(s' → logprob: -2.1761131286621094
    5. '(sequence' → logprob: -6.051113128662109
    6. '_s' → logprob: -6.176113128662109
    7. '(def' → logprob: -6.551113128662109
    8. '_' → logprob: -6.676113128662109
    9. '(n' → logprob: -7.926113128662109
    10. ' s' → logprob: -8.05111312866211

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010490043787285686
    2. ' ,' → logprob: -7.751049041748047
    3. '):' → logprob: -7.751049041748047
    4. 's' → logprob: -9.751049041748047
    5. ',i' → logprob: -10.376049041748047
    6. ',n' → logprob: -10.626049041748047
    7. ',len' → logprob: -11.251049041748047
    8. ',index' → logprob: -11.376049041748047
    9. ',length' → logprob: -11.501049041748047
    10. '):
' → logprob: -11.626049041748047

Token 114: ' count' (ID: 3605)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.9578959345817566
    2. 'length' → logprob: -1.3328959941864014
    3. 'k' → logprob: -2.8328959941864014
    4. 'n' → logprob: -3.2078959941864014
    5. ' start' → logprob: -3.2078959941864014
    6. 'start' → logprob: -3.2078959941864014
    7. ' n' → logprob: -3.2078959941864014
    8. ' k' → logprob: -3.7078959941864014
    9. ' end' → logprob: -4.207895755767822
    10. 'end' → logprob: -4.457895755767822

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020583583042025566
    2. '):
' → logprob: -3.8955836296081543
    3. '):
' → logprob: -10.395583152770996
    4. ')' → logprob: -12.770583152770996
    5. ' ):' → logprob: -12.895583152770996
    6. '   ' → logprob: -13.020583152770996
    7. '=' → logprob: -13.520583152770996
    8. 's' → logprob: -14.145583152770996
    9. ':' → logprob: -14.520583152770996
    10. '):

' → logprob: -15.145583152770996

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005939012626186013
    2. ' return' → logprob: -8.000594139099121
    3. '    
' → logprob: -9.000594139099121
    4. '
' → logprob: -9.625594139099121
    5. 'return' → logprob: -10.375594139099121
    6. '0' → logprob: -11.500594139099121
    7. '	return' → logprob: -11.875594139099121
    8. ' 
' → logprob: -12.375594139099121
    9. ' sum' → logprob: -12.750594139099121
    10. '    ' → logprob: -12.750594139099121

Token 117: ' from' (ID: 591)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32713329792022705
    2. ' return' → logprob: -1.827133297920227
    3. '   ' → logprob: -2.3271331787109375
    4. 'sum' → logprob: -3.9521331787109375
    5. ' sum' → logprob: -6.9521331787109375
    6. '
' → logprob: -8.077133178710938
    7. '    
' → logprob: -10.702133178710938
    8. '	return' → logprob: -10.952133178710938
    9. ' ' → logprob: -11.202133178710938
    10. '  ' → logprob: -11.327133178710938

Token 118: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.005342382006347179
    2. 'it' → logprob: -5.380342483520508
    3. ' ' → logprob: -7.380342483520508
    4. '_it' → logprob: -10.255342483520508
    5. ' math' → logprob: -10.380342483520508
    6. '_' → logprob: -11.380342483520508
    7. 'math' → logprob: -11.630342483520508
    8. ' functools' → logprob: -12.005342483520508
    9. '  ' → logprob: -13.255342483520508
    10. '   ' → logprob: -14.005342483520508

Token 119: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6959792375564575
    2. ' import' → logprob: -0.6959792375564575
    3. '<|end|>' → logprob: -6.695979118347168
    4. 'ertools' → logprob: -7.570979118347168
    5. '	import' → logprob: -7.695979118347168
    6. ' itertools' → logprob: -8.195979118347168
    7. '.' → logprob: -9.445979118347168
    8. '.groupby' → logprob: -9.945979118347168
    9. '```' → logprob: -10.195979118347168
    10. ' take' → logprob: -10.945979118347168

Token 120: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.387042760848999
    2. 'acc' → logprob: -1.137042760848999
    3. '.acc' → logprob: -10.262042999267578
    4. '_acc' → logprob: -10.262042999267578
    5. '	is' → logprob: -10.637042999267578
    6. ' ' → logprob: -10.887042999267578
    7. '	acc' → logprob: -11.137042999267578
    8. '```' → logprob: -11.137042999267578
    9. ' accumulate' → logprob: -11.887042999267578
    10. '   ' → logprob: -12.637042999267578

Token 121: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.1637164789135568e-05
    2. 'lic' → logprob: -12.750011444091797
    3. 'l' → logprob: -13.250011444091797
    4. '   ' → logprob: -13.375011444091797
    5. 'ertools' → logprob: -14.375011444091797
    6. '
' → logprob: -14.625011444091797
    7. 'a' → logprob: -14.625011444091797
    8. '{' → logprob: -14.875011444091797
    9. 'lices' → logprob: -14.875011444091797
    10. '```' → logprob: -15.000011444091797

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018412483856081963
    2. '   ' → logprob: -4.3934125900268555
    3. '    
' → logprob: -6.1434125900268555
    4. ',' → logprob: -6.7684125900268555
    5. ' return' → logprob: -7.1434125900268555
    6. 'return' → logprob: -7.3934125900268555
    7. '  
' → logprob: -8.018412590026855
    8. ' 
' → logprob: -8.268412590026855
    9. '<|end|>' → logprob: -8.393412590026855
    10. 'seq' → logprob: -9.768412590026855

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7067602276802063
    2. '   ' → logprob: -0.7067602276802063
    3. '    
' → logprob: -5.206760406494141
    4. 'return' → logprob: -5.706760406494141
    5. ' return' → logprob: -6.206760406494141
    6. 'sum' → logprob: -7.331760406494141
    7. '  
' → logprob: -7.581760406494141
    8. 'def' → logprob: -7.706760406494141
    9. ' 
' → logprob: -8.20676040649414
    10. ',' → logprob: -8.33176040649414

Token 124: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7409231662750244
    2. ' return' → logprob: -0.7409231662750244
    3. 'return' (adapté à ' return') → logprob: -3.1159231662750244
    4. 'import' → logprob: -7.240922927856445
    5. ' sum' → logprob: -7.615922927856445
    6. '
' → logprob: -7.990922927856445
    7. 'sum' → logprob: -7.990922927856445
    8. '    
' → logprob: -9.115922927856445
    9. ' s' → logprob: -9.990922927856445
    10. 'def' → logprob: -10.240922927856445

Token 125: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.12815719842910767
    2. 'sum' → logprob: -2.128157138824463
    3. ' list' → logprob: -6.753157138824463
    4. 'list' → logprob: -11.128157615661621
    5. ' ' → logprob: -11.628157615661621
    6. '(sum' → logprob: -11.628157615661621
    7. '   ' → logprob: -11.878157615661621
    8. '	sum' → logprob: -12.253157615661621
    9. ' is' → logprob: -12.503157615661621
    10. ' itertools' → logprob: -12.503157615661621

Token 126: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.0002783783129416406
    2. 'is' → logprob: -8.37527847290039
    3. '(' → logprob: -10.75027847290039
    4. '(list' → logprob: -11.00027847290039
    5. '(seq' → logprob: -12.12527847290039
    6. ' is' → logprob: -13.00027847290039
    7. '(it' → logprob: -13.87527847290039
    8. ' (' → logprob: -15.62527847290039
    9. '   ' → logprob: -15.75027847290039
    10. '(sequence' → logprob: -16.00027847290039

Token 127: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.02004028484225273
    2. 'slice' → logprob: -4.770040512084961
    3. 's' → logprob: -5.520040512084961
    4. 'ce' → logprob: -5.520040512084961
    5. 'quence' → logprob: -7.020040512084961
    6. 'q' → logprob: -7.645040512084961
    7. '(' → logprob: -7.770040512084961
    8. '(slice' → logprob: -7.770040512084961
    9. 'ice' → logprob: -8.770040512084961
    10. '   ' → logprob: -9.020040512084961

Token 128: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0058329300954937935
    2. '(iter' → logprob: -5.630833148956299
    3. '(' → logprob: -6.255833148956299
    4. '(sequence' → logprob: -8.13083267211914
    5. '(
' → logprob: -12.25583267211914
    6. ' (' → logprob: -12.38083267211914
    7. ')' → logprob: -12.50583267211914
    8. '(iterator' → logprob: -13.88083267211914
    9. ')(' → logprob: -14.63083267211914
    10. '(it' → logprob: -14.63083267211914

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004869161173701286
    2. ',count' → logprob: -5.879868984222412
    3. '(count' → logprob: -6.379868984222412
    4. ' ,' → logprob: -8.25486946105957
    5. '(' → logprob: -9.37986946105957
    6. '(),' → logprob: -11.50486946105957
    7. '   ' → logprob: -11.75486946105957
    8. 'count' → logprob: -13.25486946105957
    9. '  ' → logprob: -14.25486946105957
    10. ' ' → logprob: -14.62986946105957

Token 130: ' ' (ID: 220)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3133518099784851
    2. ' count' → logprob: -1.3133518695831299
    3. '   ' → logprob: -9.56335163116455
    4. '	count' → logprob: -11.43835163116455
    5. '0' → logprob: -12.06335163116455
    6. ' ' → logprob: -13.31335163116455
    7. '(count' → logprob: -14.06335163116455
    8. '  ' → logprob: -14.93835163116455
    9. ',count' → logprob: -15.68835163116455
    10. '    ' → logprob: -15.81335163116455

Token 131: '0' (ID: 15)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.127333340875339e-06
    2. ' count' → logprob: -12.500003814697266
    3. '0' → logprob: -15.125003814697266
    4. '(count' → logprob: -17.625003814697266
    5. '   ' → logprob: -17.750003814697266
    6. ' ' → logprob: -18.500003814697266
    7. '	count' → logprob: -20.125003814697266
    8. 'int' → logprob: -20.250003814697266
    9. '[count' → logprob: -20.375003814697266
    10. '<count' → logprob: -20.625003814697266

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022037860471755266
    2. ',count' → logprob: -6.752203941345215
    3. ' ,' → logprob: -6.877203941345215
    4. '   ' → logprob: -13.377203941345215
    5. 'count' → logprob: -15.752203941345215
    6. ',
' → logprob: -15.752203941345215
    7. '‌,' → logprob: -16.2522029876709
    8. '<count' → logprob: -17.7522029876709
    9. ',int' → logprob: -17.8772029876709
    10. ' count' → logprob: -18.1272029876709

Token 133: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1269282102584839
    2. ' count' → logprob: -2.1269283294677734
    3. '   ' → logprob: -16.751928329467773
    4. '	count' → logprob: -17.001928329467773
    5. '(count' → logprob: -17.626928329467773
    6. 'int' → logprob: -18.251928329467773
    7. ' ' → logprob: -18.251928329467773
    8. '[count' → logprob: -18.751928329467773
    9. '$count' → logprob: -19.001928329467773
    10. 'Count' → logprob: -19.626928329467773

Token 134: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018446780450176448
    2. ' ))' → logprob: -8.750184059143066
    3. ')' → logprob: -11.000184059143066
    4. '))
' → logprob: -12.125184059143066
    5. ')))' → logprob: -12.875184059143066
    6. '),' → logprob: -14.375184059143066
    7. ',' → logprob: -15.375184059143066
    8. ' ' → logprob: -16.000185012817383
    9. '   ' → logprob: -16.000185012817383
    10. '))

' → logprob: -16.375185012817383

Token 135: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028679681941866875
    2. '<|end|>' → logprob: -3.653679609298706
    3. '
' → logprob: -6.528679847717285
    4. '<|end|>' → logprob: -8.028679847717285
    5. ')' → logprob: -8.278679847717285
    6. ' def' → logprob: -8.903679847717285
    7. '#' → logprob: -10.028679847717285
    8. '[' → logprob: -10.153679847717285
    9. '```' → logprob: -10.278679847717285
    10. '

' → logprob: -11.028679847717285

Token 136: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13869138062000275
    2. ' solve' → logprob: -2.3886914253234863
    3. ' process' → logprob: -4.638691425323486
    4. ' compute' → logprob: -5.013691425323486
    5. ' sum' → logprob: -5.388691425323486
    6. 'main' → logprob: -5.638691425323486
    7. 'solve' → logprob: -5.763691425323486
    8. ' get' → logprob: -6.138691425323486
    9. ' calculate' → logprob: -6.138691425323486
    10. ' find' → logprob: -7.138691425323486

Token 137: '_num' (ID: 9834)
  Prédit: '_full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_full' → logprob: -1.3271085023880005
    2. '_partial' → logprob: -1.3271085023880005
    3. '_re' → logprob: -2.077108383178711
    4. '_sum' → logprob: -2.452108383178711
    5. '_total' → logprob: -2.452108383178711
    6. '_sequence' → logprob: -2.702108383178711
    7. '_prefix' → logprob: -3.577108383178711
    8. '_' → logprob: -3.952108383178711
    9. '_cycle' → logprob: -4.577108383178711
    10. '_k' → logprob: -4.952108383178711

Token 138: '_zero' (ID: 53468)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.4991774559020996
    2. '_elements' → logprob: -2.4991774559020996
    3. '_parts' → logprob: -2.8741774559020996
    4. '_sequence' → logprob: -3.1241774559020996
    5. '_terms' → logprob: -3.7491774559020996
    6. 'ber' → logprob: -3.7491774559020996
    7. '_of' → logprob: -3.8741774559020996
    8. '_mod' → logprob: -4.1241774559021
    9. '_repeat' → logprob: -4.2491774559021
    10. '_sum' → logprob: -4.3741774559021

Token 139: '_elements' (ID: 53344)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3923950791358948
    2. '_mod' → logprob: -2.14239501953125
    3. '_positions' → logprob: -2.51739501953125
    4. 'es' → logprob: -3.76739501953125
    5. '_elements' → logprob: -4.01739501953125
    6. '_count' → logprob: -4.01739501953125
    7. '_sum' → logprob: -4.39239501953125
    8. '_indices' → logprob: -4.76739501953125
    9. '_re' → logprob: -4.89239501953125
    10. '_sequence' → logprob: -5.39239501953125

Token 140: '(mod' (ID: 45051)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.08671583235263824
    2. '(' → logprob: -3.0867159366607666
    3. '(d' → logprob: -4.3367156982421875
    4. '(sequence' → logprob: -4.3367156982421875
    5. '(n' → logprob: -4.9617156982421875
    6. '(s' → logprob: -6.9617156982421875
    7. '(num' → logprob: -7.2117156982421875
    8. '(def' → logprob: -7.2117156982421875
    9. '(k' → logprob: -7.3367156982421875
    10. '(nums' → logprob: -7.4617156982421875

Token 141: '_seq' (ID: 34260)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02111760713160038
    2. 'els' → logprob: -5.021117687225342
    3. 'seq' → logprob: -5.646117687225342
    4. 'd' → logprob: -5.896117687225342
    5. '(d' → logprob: -6.146117687225342
    6. ')' → logprob: -7.021117687225342
    7. 'ules' → logprob: -7.271117687225342
    8. '_sequence' → logprob: -7.271117687225342
    9. '_elements' → logprob: -7.396117687225342
    10. '_count' → logprob: -7.771117687225342

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00861669983714819
    2. '):' → logprob: -5.508616924285889
    3. ' ,' → logprob: -5.508616924285889
    4. ')' → logprob: -9.13361644744873
    5. '):
' → logprob: -9.38361644744873
    6. ',m' → logprob: -9.75861644744873
    7. ',d' → logprob: -10.13361644744873
    8. 's' → logprob: -10.63361644744873
    9. ' ' → logprob: -10.75861644744873
    10. ',n' → logprob: -10.88361644744873

Token 143: ' rep' (ID: 2449)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6383501291275024
    2. ' m' → logprob: -1.6383501291275024
    3. 'k' → logprob: -2.013350009918213
    4. ' rest' → logprob: -3.138350009918213
    5. 'm' → logprob: -3.388350009918213
    6. ' rep' → logprob: -3.763350009918213
    7. ' n' → logprob: -4.513350009918213
    8. ' count' → logprob: -4.638350009918213
    9. 'rest' → logprob: -5.763350009918213
    10. 'count' → logprob: -6.013350009918213

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08205626159906387
    2. '):' → logprob: -2.7070562839508057
    3. '):
' → logprob: -4.957056045532227
    4. ')' → logprob: -5.457056045532227
    5. 's' → logprob: -7.957056045532227
    6. '):

' → logprob: -9.707056045532227
    7. 'ort' → logprob: -10.082056045532227
    8. ' ,' → logprob: -10.207056045532227
    9. 'orts' → logprob: -10.207056045532227
    10. 'lication' → logprob: -10.832056045532227

Token 145: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.04970708116889
    2. ' rest' → logprob: -3.0497071743011475
    3. 'k' → logprob: -7.924706935882568
    4. 'count' → logprob: -9.049707412719727
    5. ' k' → logprob: -9.424707412719727
    6. 'mod' → logprob: -9.549707412719727
    7. 'partial' → logprob: -9.674707412719727
    8. 'rem' → logprob: -9.924707412719727
    9. 'zero' → logprob: -10.174707412719727
    10. 're' → logprob: -10.174707412719727

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23839014768600464
    2. ',' → logprob: -1.6133902072906494
    3. '):
' → logprob: -4.36338996887207
    4. ')' → logprob: -9.61338996887207
    5. ' ):' → logprob: -10.36338996887207
    6. '):
' → logprob: -10.86338996887207
    7. ' ,' → logprob: -11.36338996887207
    8. ':' → logprob: -11.48838996887207
    9. '   ' → logprob: -11.48838996887207
    10. '):

' → logprob: -13.36338996887207

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25049886107444763
    2. 'count' → logprob: -2.6254987716674805
    3. ' zero' → logprob: -2.8754987716674805
    4. 'zero' → logprob: -3.0004987716674805
    5. ' count' → logprob: -3.3754987716674805
    6. 'cnt' → logprob: -5.8754987716674805
    7. 'num' → logprob: -6.1254987716674805
    8. ' cnt' → logprob: -7.3754987716674805
    9. ' num' → logprob: -7.5004987716674805
    10. '
' → logprob: -7.7504987716674805

Token 148: ' eq' (ID: 18955)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40338587760925293
    2. 'count' → logprob: -2.153385877609253
    3. 'zero' → logprob: -2.403385877609253
    4. ' zero' → logprob: -3.528385877609253
    5. ' full' → logprob: -3.653385877609253
    6. ' count' → logprob: -3.903385877609253
    7. 'full' → logprob: -4.153386116027832
    8. 'num' → logprob: -4.403386116027832
    9. 'total' → logprob: -5.653386116027832
    10. 'cnt' → logprob: -5.778386116027832

Token 149: ' =' (ID: 314)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.7743930220603943
    2. 'ual' → logprob: -1.274393081665039
    3. '_count' → logprob: -2.149393081665039
    4. 'u' → logprob: -3.274393081665039
    5. ' =' → logprob: -3.274393081665039
    6. 'al' → logprob: -3.774393081665039
    7. '=' → logprob: -5.024393081665039
    8. '_elements' → logprob: -5.024393081665039
    9. '   ' → logprob: -5.649393081665039
    10. '_' → logprob: -5.649393081665039

Token 150: ' ' (ID: 220)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3967062830924988
    2. 'sum' → logprob: -2.2717063426971436
    3. '(mod' → logprob: -2.5217063426971436
    4. '[' → logprob: -3.0217063426971436
    5. ' mod' → logprob: -3.3967063426971436
    6. ' sum' → logprob: -3.7717063426971436
    7. 'len' → logprob: -4.8967061042785645
    8. '0' → logprob: -5.3967061042785645
    9. 'rep' → logprob: -5.6467061042785645
    10. ' [' → logprob: -5.6467061042785645

Token 151: '0' (ID: 15)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5483899712562561
    2. 'sum' → logprob: -2.0483899116516113
    3. '(mod' → logprob: -2.1733899116516113
    4. '[' → logprob: -2.7983899116516113
    5. 'rep' → logprob: -3.1733899116516113
    6. '0' → logprob: -3.7983899116516113
    7. '(' → logprob: -4.423389911651611
    8. '(sum' → logprob: -4.673389911651611
    9. 'len' → logprob: -4.798389911651611
    10. '(rep' → logprob: -5.173389911651611

Token 152: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020680975168943405
    2. '<|end|>' → logprob: -3.8956809043884277
    3. '<|end|>' → logprob: -9.645681381225586
    4. ' for' → logprob: -11.020681381225586
    5. ' if' → logprob: -12.020681381225586
    6. ' 
' → logprob: -12.145681381225586
    7. 'for' → logprob: -12.145681381225586
    8. '    
' → logprob: -12.145681381225586
    9. '
' → logprob: -12.145681381225586
    10. '  
' → logprob: -12.270681381225586

Token 153: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00028159678913652897
    2. '<|end|>' → logprob: -9.00028133392334
    3. ' for' → logprob: -9.37528133392334
    4. 'for' → logprob: -10.37528133392334
    5. '
' → logprob: -11.37528133392334
    6. ' if' → logprob: -11.87528133392334
    7. ' 
' → logprob: -11.87528133392334
    8. '  
' → logprob: -12.37528133392334
    9. ' ' → logprob: -13.00028133392334
    10. '    
' → logprob: -13.50028133392334

Token 154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015060516307130456
    2. ' for' → logprob: -7.2515058517456055
    3. 'if' → logprob: -8.001505851745605
    4. 'eq' → logprob: -8.251505851745605
    5. 'i' → logprob: -9.626505851745605
    6. '   ' → logprob: -9.876505851745605
    7. 'mod' → logprob: -10.876505851745605
    8. 'zero' → logprob: -11.126505851745605
    9. 'count' → logprob: -11.376505851745605
    10. 'n' → logprob: -11.626505851745605

Token 155: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3367297947406769
    2. 'i' → logprob: -2.0867297649383545
    3. ' num' → logprob: -2.4617297649383545
    4. 'num' → logprob: -3.5867297649383545
    5. '_' → logprob: -4.086730003356934
    6. ' _' → logprob: -4.211730003356934
    7. ' x' → logprob: -5.461730003356934
    8. ' elem' → logprob: -5.461730003356934
    9. ' idx' → logprob: -6.211730003356934
    10. '_i' → logprob: -6.336730003356934

Token 156: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03224172443151474
    2. 'in' → logprob: -4.0322418212890625
    3. ',' → logprob: -4.2822418212890625
    4. ' ' → logprob: -9.032241821289062
    5. ' ,' → logprob: -10.032241821289062
    6. 'n' → logprob: -11.407241821289062
    7. '  ' → logprob: -13.907241821289062
    8. ' i' → logprob: -13.907241821289062
    9. 'range' → logprob: -13.907241821289062
    10. '   ' → logprob: -14.407241821289062

Token 157: ' gg' (ID: 87993)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.23952804505825043
    2. 'val' → logprob: -2.489527940750122
    3. ' num' → logprob: -2.614527940750122
    4. ' val' → logprob: -3.614527940750122
    5. 'mod' → logprob: -4.364528179168701
    6. 'elem' → logprob: -5.364528179168701
    7. 'el' → logprob: -5.864528179168701
    8. 'v' → logprob: -5.989528179168701
    9. 'value' → logprob: -6.114528179168701
    10. ' elem' → logprob: -6.364528179168701

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3188718259334564
    2. 'in' → logprob: -1.9438718557357788
    3. ',' → logprob: -2.0688717365264893
    4. ' ' → logprob: -6.193871974945068
    5. 'o' → logprob: -8.56887149810791
    6. 'en' → logprob: -8.94387149810791
    7. 'i' → logprob: -9.31887149810791
    8. 'er' → logprob: -9.44387149810791
    9. 'd' → logprob: -9.56887149810791
    10. 'e' → logprob: -9.56887149810791

Token 159: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.16022484004497528
    2. 'enumer' → logprob: -1.9102247953414917
    3. 'en' → logprob: -15.160224914550781
    4. '(en' → logprob: -15.285224914550781
    5. '.enumer' → logprob: -16.53522491455078
    6. 'Enumer' → logprob: -16.91022491455078
    7. 'enum' → logprob: -17.66022491455078
    8. '```' → logprob: -18.16022491455078
    9. ' enumer' → logprob: -18.53522491455078
    10. '   ' → logprob: -18.66022491455078

Token 160: '(mod' (ID: 45051)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7603675127029419
    2. '(mod' → logprob: -0.8853675127029419
    3. 'mod' → logprob: -2.1353673934936523
    4. '(' → logprob: -7.260367393493652
    5. ' (' → logprob: -7.260367393493652
    6. '	mod' → logprob: -8.260367393493652
    7. '(m' → logprob: -11.135367393493652
    8. '   ' → logprob: -11.135367393493652
    9. '_mod' → logprob: -11.260367393493652
    10. '(range' → logprob: -11.760367393493652

Token 161: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -7.896309739408025e-07
    2. 'seq' → logprob: -14.125000953674316
    3. '_SEQ' → logprob: -17.5
    4. '_sequence' → logprob: -19.125
    5. '_' → logprob: -19.25
    6. '_se' → logprob: -19.5
    7. '_sec' → logprob: -20.0
    8. 'Seq' → logprob: -20.25
    9. ' seq' → logprob: -20.25
    10. '_sq' → logprob: -20.75

Token 162: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02692527137696743
    2. '):' → logprob: -3.6519253253936768
    3. ' ):
' → logprob: -7.526925086975098
    4. '):
' → logprob: -9.901925086975098
    5. ' ):' → logprob: -10.401925086975098
    6. ':' → logprob: -13.401925086975098
    7. '   ' → logprob: -13.401925086975098
    8. '):

' → logprob: -14.026925086975098
    9. '():
' → logprob: -14.526925086975098
    10. ')' → logprob: -14.651925086975098

Token 163: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6030930280685425
    2. '       ' → logprob: -0.9780930280685425
    3. ':
' → logprob: -2.853093147277832
    4. '():
' → logprob: -5.478093147277832
    5. ' :' → logprob: -5.478093147277832
    6. '():' → logprob: -5.728093147277832
    7. ' if' → logprob: -5.853093147277832
    8. ' :
' → logprob: -5.978093147277832
    9. '   ' → logprob: -7.103093147277832
    10. '    ' → logprob: -8.478093147277832

Token 164: ' times' (ID: 4238)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02647225186228752
    2. 'if' → logprob: -4.151472091674805
    3. '       ' → logprob: -4.776472091674805
    4. '   ' → logprob: -6.901472091674805
    5. '    ' → logprob: -7.776472091674805
    6. ':' → logprob: -9.151472091674805
    7. ' ' → logprob: -9.651472091674805
    8. '        ' → logprob: -10.026472091674805
    9. '           ' → logprob: -10.151472091674805
    10. ' ' → logprob: -10.151472091674805

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5248537659645081
    2. ' =' → logprob: -0.8998537659645081
    3. ' +=' → logprob: -7.024853706359863
    4. ' ' → logprob: -8.399853706359863
    5. '+=' → logprob: -8.399853706359863
    6. '   ' → logprob: -8.899853706359863
    7. 'if' → logprob: -9.649853706359863
    8. ' if' → logprob: -9.774853706359863
    9. '    ' → logprob: -10.899853706359863
    10. ' *=' → logprob: -11.149853706359863

Token 166: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.3908187448978424
    2. ' rep' → logprob: -1.14081871509552
    3. '(rep' → logprob: -5.6408185958862305
    4. '   ' → logprob: -8.39081859588623
    5. ' (' → logprob: -9.64081859588623
    6. '(' → logprob: -10.39081859588623
    7. '	rep' → logprob: -10.76581859588623
    8. '[' → logprob: -11.51581859588623
    9. ' ' → logprob: -11.64081859588623
    10. 're' → logprob: -11.76581859588623

Token 167: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13414841890335083
    2. ' +' → logprob: -2.384148359298706
    3. 'if' → logprob: -3.884148359298706
    4. ' if' → logprob: -4.509148597717285
    5. '   ' → logprob: -6.759148597717285
    6. '
' → logprob: -8.259148597717285
    7. '       ' → logprob: -8.634148597717285
    8. '+(' → logprob: -9.259148597717285
    9. '*' → logprob: -9.634148597717285
    10. '+
' → logprob: -11.009148597717285

Token 168: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050084616988897324
    2. '(int' → logprob: -3.6750845909118652
    3. '1' → logprob: -3.9250845909118652
    4. ' (' → logprob: -5.675084590911865
    5. '(rest' → logprob: -8.550085067749023
    6. 'int' → logprob: -9.925085067749023
    7. '(i' → logprob: -10.550085067749023
    8. '((' → logprob: -10.675085067749023
    9. ' ' → logprob: -11.175085067749023
    10. '[int' → logprob: -12.300085067749023

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013776143314316869
    2. '(' → logprob: -7.126377582550049
    3. ' ' → logprob: -8.251378059387207
    4. '(i' → logprob: -8.251378059387207
    5. ' (' → logprob: -10.126378059387207
    6. '(int' → logprob: -12.376378059387207
    7. 'int' → logprob: -12.626378059387207
    8. 'i' → logprob: -13.251378059387207
    9. '   ' → logprob: -14.876378059387207
    10. '[' → logprob: -15.001378059387207

Token 170: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.026302620768547058
    2. 'if' → logprob: -3.6513025760650635
    3. ')' → logprob: -13.901302337646484
    4. ' ' → logprob: -14.901302337646484
    5. '
' → logprob: -15.151302337646484
    6. '<|end|>' → logprob: -15.401302337646484
    7. '	if' → logprob: -15.776302337646484
    8. 'If' → logprob: -16.276302337646484
    9. '   ' → logprob: -16.776302337646484
    10. 'and' → logprob: -17.026302337646484

Token 171: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012546384707093239
    2. ' i' → logprob: -4.387546539306641
    3. 'rest' → logprob: -10.88754653930664
    4. '   ' → logprob: -12.01254653930664
    5. ' rest' → logprob: -12.63754653930664
    6. '(i' → logprob: -12.76254653930664
    7. ' ' → logprob: -13.01254653930664
    8. '  ' → logprob: -13.88754653930664
    9. '	i' → logprob: -13.88754653930664
    10. '(' → logprob: -14.63754653930664

Token 172: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10055483132600784
    2. ' <' → logprob: -2.350554943084717
    3. '<|end|>' → logprob: -8.225554466247559
    4. '<int' → logprob: -10.975554466247559
    5. '<size' → logprob: -11.225554466247559
    6. '<len' → logprob: -11.600554466247559
    7. ' ' → logprob: -11.975554466247559
    8. '<num' → logprob: -12.475554466247559
    9. '<
' → logprob: -12.850554466247559
    10. '<ll' → logprob: -12.975554466247559

Token 173: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.014168208464980125
    2. ' rest' → logprob: -4.2641682624816895
    3. '   ' → logprob: -13.514167785644531
    4. '(rest' → logprob: -13.764167785644531
    5. ' ' → logprob: -13.889167785644531
    6. '
' → logprob: -14.764167785644531
    7. '=' → logprob: -16.13916778564453
    8. 'res' → logprob: -16.26416778564453
    9. 're' → logprob: -16.32666778564453
    10. '  ' → logprob: -16.38916778564453

Token 174: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00014025058771949261
    2. 'else' → logprob: -8.875140190124512
    3. '	else' → logprob: -16.000141143798828
    4. ' ' → logprob: -16.500141143798828
    5. '<|end|>' → logprob: -16.625141143798828
    6. ')' → logprob: -18.250141143798828
    7. '+' → logprob: -19.875141143798828
    8. ' ' → logprob: -19.875141143798828
    9. '<|end|>' → logprob: -20.000141143798828
    10. '   ' → logprob: -20.250141143798828

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760831832885742
    2. ' ' → logprob: -0.8260831832885742
    3. '1' → logprob: -8.951083183288574
    4. '
' → logprob: -12.201083183288574
    5. '   ' → logprob: -12.576083183288574
    6. '  ' → logprob: -13.576083183288574
    7. ')' → logprob: -13.826083183288574
    8. '    ' → logprob: -13.826083183288574
    9. ' ' → logprob: -13.826083183288574
    10. ' 
' → logprob: -15.576083183288574

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510590255260468
    2. ' ' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.387510299682617
    4. '  ' → logprob: -16.137510299682617
    5. ' ' → logprob: -16.137510299682617
    6. ')' → logprob: -16.950010299682617
    7. '	' → logprob: -17.262510299682617
    8. '    ' → logprob: -17.825010299682617
    9. '
' → logprob: -18.137510299682617
    10. '00' → logprob: -18.387510299682617

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2529376745223999
    2. ')
' → logprob: -1.5029376745224
    3. ' else' → logprob: -7.3779377937316895
    4. ' )
' → logprob: -9.002937316894531
    5. 'else' → logprob: -9.377937316894531
    6. ' )' → logprob: -9.377937316894531
    7. '       ' → logprob: -10.127937316894531
    8. ')
' → logprob: -10.627937316894531
    9. ')

' → logprob: -11.252937316894531
    10. '   ' → logprob: -11.502937316894531

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1019209548830986
    2. '
' → logprob: -2.3519208431243896
    3. ' if' → logprob: -6.851921081542969
    4. 'if' → logprob: -8.726921081542969
    5. '
' → logprob: -9.476921081542969
    6. '        
' → logprob: -9.726921081542969
    7. '           ' → logprob: -9.726921081542969
    8. '<|end|>' → logprob: -9.726921081542969
    9. ' 
' → logprob: -10.226921081542969
    10. '   ' → logprob: -10.351921081542969

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2612041234970093
    2. ' if' → logprob: -2.136204242706299
    3. '       ' → logprob: -3.261204242706299
    4. 'eq' → logprob: -3.261204242706299
    5. '   ' → logprob: -3.511204242706299
    6. ' eq' → logprob: -5.636204242706299
    7. '
' → logprob: -7.136204242706299
    8. '           ' → logprob: -8.13620376586914
    9. '    ' → logprob: -8.88620376586914
    10. '	if' → logprob: -9.01120376586914

Token 180: ' gg' (ID: 87993)
  Prédit: ' gg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gg' → logprob: -0.0631558895111084
    2. 'gg' → logprob: -2.8131558895111084
    3. ' (' → logprob: -7.3131561279296875
    4. '(' → logprob: -8.063156127929688
    5. ' times' → logprob: -9.313156127929688
    6. ' ' → logprob: -10.563156127929688
    7. ' num' → logprob: -11.063156127929688
    8. '   ' → logprob: -11.313156127929688
    9. '  ' → logprob: -11.438156127929688
    10. 'num' → logprob: -11.688156127929688

Token 181: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030267944559454918
    2. '==' → logprob: -3.5302679538726807
    3. ' ' → logprob: -8.030267715454102
    4. ' %' → logprob: -8.905267715454102
    5. '%' → logprob: -10.280267715454102
    6. '=' → logprob: -11.405267715454102
    7. ' =' → logprob: -13.030267715454102
    8. '[' → logprob: -13.155267715454102
    9. '0' → logprob: -13.780267715454102
    10. ' ' → logprob: -14.280267715454102

Token 182: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740825593471527
    2. '0' → logprob: -0.9740825891494751
    3. '  ' → logprob: -13.349082946777344
    4. '   ' → logprob: -13.349082946777344
    5. ' ' → logprob: -14.474082946777344
    6. '<|end|>' → logprob: -14.911582946777344
    7. 'd' → logprob: -15.724082946777344
    8. '    ' → logprob: -15.724082946777344
    9. ' zero' → logprob: -15.849082946777344
    10. '=' → logprob: -16.099082946777344

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. 'zero' → logprob: -16.187931060791016
    4. 'd' → logprob: -16.562931060791016
    5. 'm' → logprob: -16.875431060791016
    6. 'k' → logprob: -16.875431060791016
    7. '00' → logprob: -17.625431060791016
    8. '۰' → logprob: -17.812931060791016
    9. '000' → logprob: -17.875431060791016
    10. '  ' → logprob: -18.437931060791016

Token 184: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0746481791138649
    2. ':' → logprob: -2.699648141860962
    3. '           ' → logprob: -5.449648380279541
    4. '       ' → logprob: -8.574647903442383
    5. '):
' → logprob: -8.699647903442383
    6. ':
' → logprob: -11.199647903442383
    7. ' :
' → logprob: -11.324647903442383
    8. ' and' → logprob: -11.699647903442383
    9. ',' → logprob: -12.324647903442383
    10. '          ' → logprob: -13.449647903442383

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012134487042203546
    2. '
' → logprob: -7.876213550567627
    3. '               ' → logprob: -8.126213073730469
    4. ' eq' → logprob: -8.126213073730469
    5. 'eq' → logprob: -9.251213073730469
    6. '          ' → logprob: -9.376213073730469
    7. '       ' → logprob: -11.501213073730469
    8. '	       ' → logprob: -11.501213073730469
    9. '            
' → logprob: -11.626213073730469
    10. '            ' → logprob: -12.126213073730469

Token 186: ' eq' (ID: 18955)
  Prédit: ' eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eq' → logprob: -0.18299762904644012
    2. 'eq' (adapté à ' eq') → logprob: -2.432997703552246
    3. '               ' → logprob: -3.057997703552246
    4. '           ' → logprob: -3.432997703552246
    5. '            ' → logprob: -9.307997703552246
    6. '       ' → logprob: -10.932997703552246
    7. '_eq' → logprob: -11.307997703552246
    8. '              ' → logprob: -11.432997703552246
    9. '
' → logprob: -11.557997703552246
    10. '          ' → logprob: -11.807997703552246

Token 187: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11326254904270172
    2. '+=' → logprob: -2.23826265335083
    3. '            ' → logprob: -8.488262176513672
    4. '           ' → logprob: -8.988262176513672
    5. '               ' → logprob: -9.988262176513672
    6. '          ' → logprob: -10.863262176513672
    7. '=' → logprob: -11.363262176513672
    8. '              ' → logprob: -11.863262176513672
    9. ']+=' → logprob: -12.113262176513672
    10. '                ' → logprob: -12.113262176513672

Token 188: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.023258758708834648
    2. ' times' → logprob: -3.773258686065674
    3. '1' → logprob: -11.523259162902832
    4. '   ' → logprob: -13.523259162902832
    5. '       ' → logprob: -13.773259162902832
    6. ' ' → logprob: -14.273259162902832
    7. '           ' → logprob: -15.898259162902832
    8. '(times' → logprob: -16.398258209228516
    9. 'time' → logprob: -17.148258209228516
    10. 'tim' → logprob: -17.523258209228516

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02144623175263405
    2. '
' → logprob: -4.271446228027344
    3. 'return' → logprob: -5.521446228027344
    4. ' return' → logprob: -5.896446228027344
    5. '	return' → logprob: -8.021446228027344
    6. '    
' → logprob: -9.021446228027344
    7. '       ' → logprob: -11.271446228027344
    8. '<|end|>' → logprob: -11.771446228027344
    9. ':return' → logprob: -12.021446228027344
    10. ' 
' → logprob: -12.021446228027344

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004699853248894215
    2. 'return' → logprob: -6.00469970703125
    3. ' return' → logprob: -6.12969970703125
    4. '	return' → logprob: -10.25469970703125
    5. '       ' → logprob: -12.00469970703125
    6. '
' → logprob: -13.25469970703125
    7. '   ' → logprob: -15.37969970703125
    8. ':return' → logprob: -15.37969970703125
    9. '  ' → logprob: -15.50469970703125
    10. ' ' → logprob: -15.50469970703125

Token 191: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10233177244663239
    2. 'return' (adapté à ' return') → logprob: -2.9773318767547607
    3. ' return' → logprob: -3.1023318767547607
    4. '	return' → logprob: -6.727331638336182
    5. ' ' → logprob: -8.85233211517334
    6. '       ' → logprob: -10.35233211517334
    7. '
' → logprob: -12.47733211517334
    8. '    
' → logprob: -12.60233211517334
    9. 'eturn' → logprob: -12.60233211517334
    10. '  ' → logprob: -12.72733211517334

Token 192: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.014163628220558167
    2. ' eq' → logprob: -4.264163494110107
    3. '(eq' → logprob: -16.389163970947266
    4. '_eq' → logprob: -19.139163970947266
    5. 'equ' → logprob: -19.639163970947266
    6. '.eq' → logprob: -20.014163970947266
    7. 'eg' → logprob: -20.514163970947266
    8. 'q' → logprob: -21.139163970947266
    9. 'e' → logprob: -21.889163970947266
    10. ' ' → logprob: -22.014163970947266

Token 193: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02666158601641655
    2. '
' → logprob: -4.276661396026611
    3. '<|end|>' → logprob: -4.401661396026611
    4. ' def' → logprob: -10.15166187286377
    5. '

' → logprob: -10.40166187286377
    6. '<|end|>' → logprob: -10.65166187286377
    7. '```' → logprob: -10.90166187286377
    8. '  
' → logprob: -11.15166187286377
    9. '[' → logprob: -12.02666187286377
    10. '#' → logprob: -12.40166187286377

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.641841820150148e-05
    2. '<|end|>' → logprob: -11.12502670288086
    3. '```' → logprob: -12.50002670288086
    4. '#' → logprob: -12.87502670288086
    5. '
' → logprob: -13.25002670288086
    6. ' def' → logprob: -14.12502670288086
    7. 'from' → logprob: -14.25002670288086
    8. 'import' → logprob: -14.75002670288086
    9. 'k' → logprob: -15.37502670288086
    10. ')' → logprob: -15.75002670288086

Token 195: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3304065465927124
    2. 'main' → logprob: -2.330406665802002
    3. ' solve' → logprob: -2.705406665802002
    4. 'solve' → logprob: -3.830406665802002
    5. ' count' → logprob: -3.955406665802002
    6. ' process' → logprob: -3.955406665802002
    7. ' sum' → logprob: -4.955406665802002
    8. 'count' → logprob: -4.955406665802002
    9. ' get' → logprob: -4.955406665802002
    10. 'process' → logprob: -5.080406665802002

Token 196: '_last' (ID: 26359)
  Prédit: '_partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_partial' → logprob: -1.51426100730896
    2. '_re' → logprob: -2.01426100730896
    3. '_sum' → logprob: -2.26426100730896
    4. '_total' → logprob: -2.63926100730896
    5. '_k' → logprob: -2.88926100730896
    6. '_mod' → logprob: -3.01426100730896
    7. 'partial' → logprob: -3.01426100730896
    8. '_full' → logprob: -3.51426100730896
    9. '_max' → logprob: -3.76426100730896
    10. '_sequence' → logprob: -3.88926100730896

Token 197: '_value' (ID: 6734)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.4957554042339325
    2. '_elements' → logprob: -2.620755434036255
    3. '_zero' → logprob: -2.870755434036255
    4. '_value' → logprob: -2.995755434036255
    5. '_num' → logprob: -3.120755434036255
    6. '_part' → logprob: -3.495755434036255
    7. '_index' → logprob: -3.870755434036255
    8. '_token' → logprob: -3.995755434036255
    9. '_number' → logprob: -4.120755195617676
    10. '_mod' → logprob: -4.620755195617676

Token 198: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.30394721031188965
    2. '():' → logprob: -1.8039472103118896
    3. '(' → logprob: -2.6789472103118896
    4. '(k' → logprob: -4.553947448730469
    5. '(d' → logprob: -4.803947448730469
    6. '(seq' → logprob: -5.678947448730469
    7. '(def' → logprob: -5.678947448730469
    8. '(sequence' → logprob: -7.803947448730469
    9. '(s' → logprob: -8.053947448730469
    10. '(mod' → logprob: -8.428947448730469

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002540228422731161
    2. ' ,' → logprob: -6.377540111541748
    3. '):' → logprob: -7.502540111541748
    4. ',
' → logprob: -9.377540588378906
    5. '):
' → logprob: -10.127540588378906
    6. 'def' → logprob: -10.127540588378906
    7. '   ' → logprob: -10.627540588378906
    8. ',n' → logprob: -11.127540588378906
    9. ' ):' → logprob: -11.127540588378906
    10. '_,' → logprob: -11.627540588378906

Token 200: ' total' (ID: 3609)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9483458995819092
    2. 'k' → logprob: -1.5733458995819092
    3. 'n' → logprob: -1.6983458995819092
    4. ' d' → logprob: -3.073345899581909
    5. ' k' → logprob: -3.573345899581909
    6. ' n' → logprob: -3.573345899581909
    7. 'a' → logprob: -3.698345899581909
    8. 'm' → logprob: -3.948345899581909
    9. 'rep' → logprob: -4.198346138000488
    10. ' rep' → logprob: -4.948346138000488

Token 201: '_sum' (ID: 29859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4197719991207123
    2. ')' → logprob: -2.169771909713745
    3. '_k' → logprob: -2.919771909713745
    4. '_times' → logprob: -3.044771909713745
    5. '_steps' → logprob: -3.794771909713745
    6. '_count' → logprob: -3.794771909713745
    7. '_n' → logprob: -4.669772148132324
    8. '_sum' → logprob: -4.669772148132324
    9. ',k' → logprob: -4.669772148132324
    10. '_iterations' → logprob: -5.044772148132324

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03481725975871086
    2. '):' → logprob: -3.6598172187805176
    3. '):
' → logprob: -4.909817218780518
    4. ' ,' → logprob: -7.784817218780518
    5. '   ' → logprob: -8.534817695617676
    6. ')' → logprob: -9.284817695617676
    7. '):
' → logprob: -9.784817695617676
    8. ',d' → logprob: -9.909817695617676
    9. 'def' → logprob: -10.034817695617676
    10. ',
' → logprob: -10.409817695617676

Token 203: ' rep' (ID: 2449)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7281663417816162
    2. ' k' → logprob: -1.4781663417816162
    3. 'n' → logprob: -2.728166341781616
    4. ' rep' → logprob: -2.978166341781616
    5. ' n' → logprob: -2.978166341781616
    6. 'm' → logprob: -3.228166341781616
    7. ' m' → logprob: -3.728166341781616
    8. 'rep' → logprob: -3.853166341781616
    9. 'mod' → logprob: -4.853166580200195
    10. ' mod' → logprob: -4.978166580200195

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35987013578414917
    2. '):' → logprob: -1.359870195388794
    3. '):
' → logprob: -3.109870195388794
    4. '):

' → logprob: -8.734869956970215
    5. '):
' → logprob: -8.734869956970215
    6. ')' → logprob: -9.359869956970215
    7. ',
' → logprob: -9.359869956970215
    8. '   ' → logprob: -9.484869956970215
    9. '+' → logprob: -9.609869956970215
    10. ' ,' → logprob: -9.859869956970215

Token 205: ' partial' (ID: 13664)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.479990154504776
    2. ' rest' → logprob: -0.9799901247024536
    3. ' m' → logprob: -6.604990005493164
    4. 'm' → logprob: -6.979990005493164
    5. 'mod' → logprob: -7.229990005493164
    6. ' k' → logprob: -7.854990005493164
    7. ' d' → logprob: -7.854990005493164
    8. 'k' → logprob: -7.854990005493164
    9. 'd' → logprob: -7.979990005493164
    10. ' mod' → logprob: -7.979990005493164

Token 206: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0027321206871420145
    2. 'sum' → logprob: -6.252732276916504
    3. ')' → logprob: -7.627732276916504
    4. '_' → logprob: -9.002732276916504
    5. '_s' → logprob: -9.502732276916504
    6. '_rest' → logprob: -10.377732276916504
    7. ')_' → logprob: -10.752732276916504
    8. ' sum' → logprob: -11.252732276916504
    9. 's' → logprob: -11.252732276916504
    10. ' _' → logprob: -11.877732276916504

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5673695802688599
    2. ',' → logprob: -1.0673695802688599
    3. '):
' → logprob: -2.4423694610595703
    4. '):
' → logprob: -6.81736946105957
    5. '):

' → logprob: -7.56736946105957
    6. ' ):' → logprob: -8.94236946105957
    7. ' ,' → logprob: -9.31736946105957
    8. ')' → logprob: -9.44236946105957
    9. '   ' → logprob: -9.94236946105957
    10. ',
' → logprob: -10.81736946105957

Token 208: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005755883641541004
    2. '   ' → logprob: -5.75575590133667
    3. ':
' → logprob: -6.25575590133667
    4. ' :' → logprob: -8.380755424499512
    5. '=' → logprob: -9.255755424499512
    6. '():' → logprob: -9.630755424499512
    7. '(x' → logprob: -9.880755424499512
    8. '(' → logprob: -10.505755424499512
    9. ':return' → logprob: -10.505755424499512
    10. ',' → logprob: -10.755755424499512

Token 209: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.165938138961792
    2. '(x' → logprob: -2.290938138961792
    3. '   ' → logprob: -4.165938377380371
    4. 'last' → logprob: -4.540938377380371
    5. 'x' → logprob: -4.665938377380371
    6. ' return' → logprob: -5.790938377380371
    7. 'val' → logprob: -5.915938377380371
    8. 'total' → logprob: -5.915938377380371
    9. 'if' → logprob: -6.290938377380371
    10. 'res' → logprob: -6.790938377380371

Token 210: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006508486345410347
    2. ' (' → logprob: -6.0065083503723145
    3. '((' → logprob: -6.3815083503723145
    4. 'x' → logprob: -6.3815083503723145
    5. '(total' → logprob: -8.256508827209473
    6. '(' → logprob: -8.381508827209473
    7. '(pow' → logprob: -9.381508827209473
    8. '(last' → logprob: -10.881508827209473
    9. 'pow' → logprob: -11.006508827209473
    10. '(((' → logprob: -11.756508827209473

Token 211: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03845304623246193
    2. '+' → logprob: -3.2884531021118164
    3. '<|end|>' → logprob: -8.163453102111816
    4. ' *' → logprob: -10.288453102111816
    5. ' +
' → logprob: -10.413453102111816
    6. 'def' → logprob: -11.163453102111816
    7. ' plus' → logprob: -11.413453102111816
    8. ' ' → logprob: -12.038453102111816
    9. '```' → logprob: -12.163453102111816
    10. '*' → logprob: -12.663453102111816

Token 212: ' (' (ID: 350)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5041487216949463
    2. 'rep' → logprob: -1.5041487216949463
    3. ' total' → logprob: -1.8791487216949463
    4. ' rep' → logprob: -4.004148483276367
    5. '(total' → logprob: -6.254148483276367
    6. '(rep' → logprob: -7.504148483276367
    7. ' (' → logprob: -8.754148483276367
    8. '   ' → logprob: -10.254148483276367
    9. 'k' → logprob: -10.504148483276367
    10. 'rest' → logprob: -10.504148483276367

Token 213: 'total' (ID: 9577)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.015287162736058235
    2. 'k' → logprob: -4.640287399291992
    3. 'total' → logprob: -5.390287399291992
    4. '(rep' → logprob: -7.140287399291992
    5. '(' → logprob: -10.140287399291992
    6. ' rep' → logprob: -10.265287399291992
    7. 'm' → logprob: -10.890287399291992
    8. '(k' → logprob: -11.140287399291992
    9. '(total' → logprob: -11.390287399291992
    10. '100' → logprob: -11.515287399291992

Token 214: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0802738870552275e-05
    2. '_rep' → logprob: -12.37501049041748
    3. 'sum' → logprob: -12.75001049041748
    4. '*' → logprob: -13.12501049041748
    5. '_' → logprob: -14.50001049041748
    6. 'rep' → logprob: -14.75001049041748
    7. ')' → logprob: -15.25001049041748
    8. '
' → logprob: -15.75001049041748
    9. '_s' → logprob: -16.250011444091797
    10. ' ' → logprob: -17.125011444091797

Token 215: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16593602299690247
    2. '*' → logprob: -2.54093599319458
    3. ')' → logprob: -2.66593599319458
    4. ')*' → logprob: -5.91593599319458
    5. ' )' → logprob: -6.41593599319458
    6. ' ' → logprob: -9.165936470031738
    7. '   ' → logprob: -10.290936470031738
    8. '+' → logprob: -10.415936470031738
    9. ')*(' → logprob: -10.665936470031738
    10. '*(' → logprob: -11.415936470031738

Token 216: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.5759449601173401
    2. ' rep' → logprob: -0.8259449601173401
    3. '(rep' → logprob: -12.450944900512695
    4. '	rep' → logprob: -13.825944900512695
    5. '_rep' → logprob: -15.325944900512695
    6. 're' → logprob: -15.700944900512695
    7. ' reps' → logprob: -16.450944900512695
    8. '.rep' → logprob: -17.200944900512695
    9. '   ' → logprob: -17.825944900512695
    10. ')' → logprob: -17.825944900512695

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041300758719444275
    2. ' +' → logprob: -3.5413007736206055
    3. '+' → logprob: -4.5413007736206055
    4. ' )' → logprob: -7.6663007736206055
    5. ')+' → logprob: -8.416300773620605
    6. '*' → logprob: -9.166300773620605
    7. ' ' → logprob: -11.041300773620605
    8. ' *' → logprob: -12.166300773620605
    9. '   ' → logprob: -13.791300773620605
    10. '-' → logprob: -13.916300773620605

Token 218: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07894641906023026
    2. '+' → logprob: -2.578946352005005
    3. ' +
' → logprob: -10.203946113586426
    4. '<|end|>' → logprob: -11.703946113586426
    5. '+
' → logprob: -12.328946113586426
    6. 'def' → logprob: -13.703946113586426
    7. ' ' → logprob: -13.703946113586426
    8. ' *' → logprob: -14.203946113586426
    9. ' ' → logprob: -14.328946113586426
    10. '*' → logprob: -14.453946113586426

Token 219: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.0889425128698349
    2. 'partial' → logprob: -2.463942527770996
    3. '(part' → logprob: -13.338942527770996
    4. '.partial' → logprob: -14.463942527770996
    5. '_partial' → logprob: -14.838942527770996
    6. ' (' → logprob: -15.713942527770996
    7. ' parcial' → logprob: -15.713942527770996
    8. 'partials' → logprob: -15.963942527770996
    9. ' ' → logprob: -17.08894157409668
    10. ' rest' → logprob: -17.71394157409668

Token 220: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.6656825866666622e-05
    2. '_s' → logprob: -10.87502670288086
    3. ' _' → logprob: -12.25002670288086
    4. '_' → logprob: -13.50002670288086
    5. 'sum' → logprob: -14.50002670288086
    6. '_seq' → logprob: -14.62502670288086
    7. '_sym' → logprob: -16.00002670288086
    8. '_val' → logprob: -16.62502670288086
    9. '_split' → logprob: -17.12502670288086
    10. '_S' → logprob: -17.25002670288086

Token 221: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05807412788271904
    2. '#' → logprob: -4.183073997497559
    3. '.' → logprob: -4.558073997497559
    4. '(' → logprob: -4.933073997497559
    5. '<|end|>' → logprob: -5.183073997497559
    6. ')' → logprob: -5.808073997497559
    7. '
' → logprob: -5.933073997497559
    8. 'n' → logprob: -6.308073997497559
    9. 'x' → logprob: -6.308073997497559
    10. ':' → logprob: -6.683073997497559

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003110334277153015
    2. '<|end|>' → logprob: -6.003110408782959
    3. '#' → logprob: -8.6281099319458
    4. '```' → logprob: -8.7531099319458
    5. ')' → logprob: -9.7531099319458
    6. '[' → logprob: -10.0031099319458
    7. ' def' → logprob: -10.1281099319458
    8. '(' → logprob: -10.3781099319458
    9. 'x' → logprob: -10.8781099319458
    10. '<|end|>' → logprob: -11.0031099319458

Token 223: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05053816735744476
    2. ' solve' → logprob: -3.3005380630493164
    3. ' process' → logprob: -5.300538063049316
    4. 'main' → logprob: -6.300538063049316
    5. ' get' → logprob: -6.675538063049316
    6. ' sum' → logprob: -6.800538063049316
    7. 'solve' → logprob: -7.300538063049316
    8. ' count' → logprob: -7.675538063049316
    9. ' compute' → logprob: -7.675538063049316
    10. ' calculate' → logprob: -8.175538063049316

Token 224: '_sum' (ID: 29859)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.130785584449768
    2. '_re' → logprob: -1.880785584449768
    3. '_partial' → logprob: -2.0057854652404785
    4. '_sum' → logprob: -2.1307854652404785
    5. '_k' → logprob: -3.0057854652404785
    6. '_sequence' → logprob: -3.2557854652404785
    7. '_mod' → logprob: -3.3807854652404785
    8. '_full' → logprob: -3.7557854652404785
    9. '_last' → logprob: -4.6307854652404785
    10. '_value' → logprob: -4.7557854652404785

Token 225: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.557055652141571
    2. '_sequence' → logprob: -1.9320557117462158
    3. '(k' → logprob: -3.182055711746216
    4. 'def' → logprob: -3.182055711746216
    5. '(sequence' → logprob: -3.182055711746216
    6. '_' → logprob: -3.432055711746216
    7. '(seq' → logprob: -3.807055711746216
    8. '(n' → logprob: -4.057055473327637
    9. '(a' → logprob: -4.682055473327637
    10. '_parts' → logprob: -4.807055473327637

Token 226: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.111979357432574e-05
    2. ' ,' → logprob: -10.50007152557373
    3. '):' → logprob: -10.62507152557373
    4. '   ' → logprob: -12.37507152557373
    5. ',n' → logprob: -13.00007152557373
    6. ',
' → logprob: -13.25007152557373
    7. '[:' → logprob: -13.37507152557373
    8. '):
' → logprob: -13.50007152557373
    9. ',s' → logprob: -13.62507152557373
    10. ',size' → logprob: -13.75007152557373

Token 227: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.46152153611183167
    2. 'sum' → logprob: -1.7115215063095093
    3. ' return' → logprob: -2.211521625518799
    4. '   ' → logprob: -2.711521625518799
    5. ' sum' → logprob: -4.336521625518799
    6. 'def' → logprob: -10.96152114868164
    7. '
' → logprob: -12.33652114868164
    8. '```' → logprob: -12.33652114868164
    9. '    
' → logprob: -12.96152114868164
    10. ' ' → logprob: -12.96152114868164

Token 228: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5934091806411743
    2. 'sum' → logprob: -0.8434091806411743
    3. ' return' → logprob: -4.468409061431885
    4. ' sum' → logprob: -5.218409061431885
    5. '   ' → logprob: -7.843409061431885
    6. 'def' → logprob: -10.093409538269043
    7. '
' → logprob: -13.968409538269043
    8. '```' → logprob: -14.218409538269043
    9. ' ' → logprob: -14.718409538269043
    10. '  ' → logprob: -15.468409538269043

Token 229: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.061967913061380386
    2. ' sum' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.936967849731445
    4. '(sum' → logprob: -16.311967849731445
    5. '   ' → logprob: -16.936967849731445
    6. '	sum' → logprob: -16.936967849731445
    7. '  ' → logprob: -18.436967849731445
    8. ' ' → logprob: -19.061967849731445
    9. '=sum' → logprob: -19.561967849731445
    10. 'len' → logprob: -20.186967849731445

Token 230: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0013463040813803673
    2. '(' → logprob: -6.626346111297607
    3. '(sequence' → logprob: -11.126346588134766
    4. 'seq' → logprob: -12.876346588134766
    5. '(se' → logprob: -13.126346588134766
    6. '(
' → logprob: -14.126346588134766
    7. '()' → logprob: -16.126346588134766
    8. '<|end|>' → logprob: -16.626346588134766
    9. '(s' → logprob: -17.251346588134766
    10. '(sum' → logprob: -17.876346588134766

Token 231: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '())' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.750000953674316
    4. '()' → logprob: -16.000001907348633
    5. ' )' → logprob: -16.625001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '[' → logprob: -18.750001907348633
    9. '),' → logprob: -18.875001907348633
    10. '))' → logprob: -19.000001907348633

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013091674773022532
    2. '<|end|>' → logprob: -6.751309394836426
    3. '#' → logprob: -10.001309394836426
    4. '<|end|>' → logprob: -10.376309394836426
    5. '```' → logprob: -10.626309394836426
    6. '[' → logprob: -10.751309394836426
    7. ')' → logprob: -12.626309394836426
    8. ' def' → logprob: -12.876309394836426
    9. '[]' → logprob: -13.001309394836426
    10. '
' → logprob: -13.126309394836426

Token 233: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5243228673934937
    2. 'main' → logprob: -0.8993228673934937
    3. 'solve' → logprob: -7.649322986602783
    4. ' solve' → logprob: -7.774322986602783
    5. 'process' → logprob: -9.399322509765625
    6. ' process' → logprob: -9.399322509765625
    7. 'read' → logprob: -10.024322509765625
    8. ' read' → logprob: -10.899322509765625
    9. 'get' → logprob: -11.149322509765625
    10. 'calculate' → logprob: -11.524322509765625

Token 234: '_answer' (ID: 65702)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5055402517318726
    2. '_sequence' → logprob: -2.005540370941162
    3. '_result' → logprob: -2.630540370941162
    4. '_total' → logprob: -2.880540370941162
    5. '(k' → logprob: -3.130540370941162
    6. '_k' → logprob: -4.005540370941162
    7. '(' → logprob: -4.130540370941162
    8. '_answer' → logprob: -4.255540370941162
    9. '(n' → logprob: -5.255540370941162
    10. '_mod' → logprob: -5.505540370941162

Token 235: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2042074054479599
    2. '(' → logprob: -1.704207420349121
    3. ' (' → logprob: -6.704207420349121
    4. '(k' → logprob: -7.204207420349121
    5. '():' → logprob: -7.204207420349121
    6. '(def' → logprob: -10.954207420349121
    7. '(
' → logprob: -11.204207420349121
    8. 'def' → logprob: -12.079207420349121
    9. '(num' → logprob: -12.079207420349121
    10. '(q' → logprob: -12.454207420349121

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003273600013926625
    2. ' ,' → logprob: -8.750327110290527
    3. ',k' → logprob: -8.750327110290527
    4. ',
' → logprob: -12.625327110290527
    5. '):' → logprob: -13.375327110290527
    6. ' k' → logprob: -13.625327110290527
    7. '   ' → logprob: -13.875327110290527
    8. ',n' → logprob: -14.000327110290527
    9. 'k' → logprob: -14.375327110290527
    10. '_,' → logprob: -14.750327110290527

Token 237: ' eq' (ID: 18955)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31389012932777405
    2. ' k' → logprob: -1.3138900995254517
    3. 'd' → logprob: -8.81389045715332
    4. 'q' → logprob: -8.93889045715332
    5. ' d' → logprob: -9.06389045715332
    6. ' q' → logprob: -9.31389045715332
    7. 'x' → logprob: -10.56389045715332
    8. ' ' → logprob: -10.68889045715332
    9. '   ' → logprob: -10.68889045715332
    10. '    ' → logprob: -10.81389045715332

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05571630224585533
    2. 'u' → logprob: -3.3057162761688232
    3. 'q' → logprob: -4.305716514587402
    4. '_,' → logprob: -6.555716514587402
    5. ',q' → logprob: -7.180716514587402
    6. 's' → logprob: -7.430716514587402
    7. ',u' → logprob: -8.180716514587402
    8. ' ,' → logprob: -8.555716514587402
    9. 'd' → logprob: -9.430716514587402
    10. ')' → logprob: -9.430716514587402

Token 239: ' last' (ID: 2174)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2456897348165512
    2. 'x' → logprob: -3.245689630508423
    3. 'q' → logprob: -3.370689630508423
    4. ' k' → logprob: -3.495689630508423
    5. 'rep' → logprob: -3.495689630508423
    6. 'rest' → logprob: -3.870689630508423
    7. 'm' → logprob: -4.120689868927002
    8. 'total' → logprob: -4.495689868927002
    9. 'd' → logprob: -4.995689868927002
    10. 'mod' → logprob: -5.245689868927002

Token 240: ',' (ID: 11)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.013675637543201447
    2. '_val' → logprob: -4.513675689697266
    3. '_' → logprob: -6.888675689697266
    4. '):' → logprob: -7.388675689697266
    5. ',' → logprob: -8.138675689697266
    6. '_v' → logprob: -8.513675689697266
    7. 'value' → logprob: -8.763675689697266
    8. ')' → logprob: -9.263675689697266
    9. ')_' → logprob: -9.263675689697266
    10. '_values' → logprob: -10.263675689697266

Token 241: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.36853769421577454
    2. ' k' → logprob: -2.368537664413452
    3. 'm' → logprob: -2.493537664413452
    4. 'd' → logprob: -3.618537664413452
    5. 'q' → logprob: -3.868537664413452
    6. 'mod' → logprob: -4.118537902832031
    7. ' m' → logprob: -4.243537902832031
    8. ' d' → logprob: -4.868537902832031
    9. 'rep' → logprob: -4.868537902832031
    10. ' mod' → logprob: -5.243537902832031

Token 242: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014236374758183956
    2. '):
' → logprob: -4.2642364501953125
    3. ',' → logprob: -10.389236450195312
    4. ')' → logprob: -10.639236450195312
    5. '):
' → logprob: -11.514236450195312
    6. ':' → logprob: -12.514236450195312
    7. ' ):' → logprob: -13.139236450195312
    8. '   ' → logprob: -14.014236450195312
    9. '):

' → logprob: -14.264236450195312
    10. 'def' → logprob: -15.389236450195312

Token 243: ' x' (ID: 1215)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.719917356967926
    2. 'k' → logprob: -0.844917356967926
    3. ' d' → logprob: -3.5949172973632812
    4. ' k' → logprob: -3.9699172973632812
    5. 'x' → logprob: -4.469917297363281
    6. 'q' → logprob: -4.844917297363281
    7. 'rep' → logprob: -5.344917297363281
    8. 'mod' → logprob: -5.844917297363281
    9. 'eq' → logprob: -6.344917297363281
    10. 'seq' → logprob: -6.594917297363281

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010393260978162289
    2. '):
' → logprob: -5.010393142700195
    3. ',' → logprob: -5.635393142700195
    4. ')' → logprob: -9.635393142700195
    5. ':' → logprob: -11.260393142700195
    6. '):
' → logprob: -11.510393142700195
    7. '   ' → logprob: -12.385393142700195
    8. ' ):' → logprob: -12.385393142700195
    9. '):

' → logprob: -14.010393142700195
    10. '**' → logprob: -14.385393142700195

Token 245: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04681786894798279
    2. ':
' → logprob: -3.2968177795410156
    3. '   ' → logprob: -5.171817779541016
    4. '):' → logprob: -6.421817779541016
    5. '):
' → logprob: -7.171817779541016
    6. 'def' → logprob: -8.671817779541016
    7. ',' → logprob: -8.796817779541016
    8. ')' → logprob: -9.671817779541016
    9. '=' → logprob: -10.046817779541016
    10. ':def' → logprob: -10.046817779541016

Token 246: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20396079123020172
    2. 'return' (adapté à ' return') → logprob: -2.70396089553833
    3. '   ' → logprob: -3.32896089553833
    4. 'ans' → logprob: -3.95396089553833
    5. 'res' → logprob: -4.07896089553833
    6. 'answer' → logprob: -4.57896089553833
    7. 'total' → logprob: -4.70396089553833
    8. 'mod' → logprob: -5.07896089553833
    9. 'result' → logprob: -5.32896089553833
    10. ' if' → logprob: -6.57896089553833

Token 247: ' (' (ID: 350)
  Prédit: '(eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(eq' → logprob: -0.6432220339775085
    2. '((' → logprob: -1.7682220935821533
    3. '(last' → logprob: -2.3932220935821533
    4. '(max' → logprob: -2.6432220935821533
    5. ' (' → logprob: -3.6432220935821533
    6. '(m' → logprob: -3.6432220935821533
    7. '(' → logprob: -3.6432220935821533
    8. '(x' → logprob: -3.7682220935821533
    9. '(n' → logprob: -4.518221855163574
    10. 'eq' → logprob: -5.018221855163574

Token 248: 'n' (ID: 77)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.37945830821990967
    2. '(eq' → logprob: -2.379458427429199
    3. '(last' → logprob: -2.504458427429199
    4. 'eq' → logprob: -2.504458427429199
    5. '((' → logprob: -4.254458427429199
    6. '(n' → logprob: -4.504458427429199
    7. 'n' → logprob: -4.879458427429199
    8. 'x' → logprob: -5.004458427429199
    9. '(' → logprob: -5.129458427429199
    10. '(x' → logprob: -5.379458427429199

Token 249: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5169083476066589
    2. '-' → logprob: -1.5169084072113037
    3. '*' → logprob: -2.0169084072113037
    4. ' *' → logprob: -3.2669084072113037
    5. '+' → logprob: -5.391908168792725
    6. ' +' → logprob: -5.891908168792725
    7. ',' → logprob: -6.016908168792725
    8. ')' → logprob: -6.641908168792725
    9. ' ' → logprob: -6.641908168792725
    10. '%' → logprob: -8.266908645629883

Token 250: ' ' (ID: 220)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.002656989498063922
    2. ' eq' → logprob: -6.127656936645508
    3. '(eq' → logprob: -7.752656936645508
    4. '1' → logprob: -10.377656936645508
    5. '(' → logprob: -12.752656936645508
    6. 'equ' → logprob: -13.627656936645508
    7. 'x' → logprob: -13.752656936645508
    8. ' (' → logprob: -13.752656936645508
    9. '
' → logprob: -13.877656936645508
    10. 'last' → logprob: -14.502656936645508

Token 251: '1' (ID: 16)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.000579719664528966
    2. '(eq' → logprob: -7.750579833984375
    3. ' eq' → logprob: -9.375579833984375
    4. '1' → logprob: -9.875579833984375
    5. '(' → logprob: -12.500579833984375
    6. 'last' → logprob: -12.875579833984375
    7. 'x' → logprob: -13.500579833984375
    8. 'equ' → logprob: -13.875579833984375
    9. '
' → logprob: -14.000579833984375
    10. 'n' → logprob: -14.375579833984375

Token 252: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09865706413984299
    2. ' -' → logprob: -2.5986571311950684
    3. '-' → logprob: -4.473657131195068
    4. '*' → logprob: -5.598657131195068
    5. ')*' → logprob: -6.473657131195068
    6. '+' → logprob: -6.848657131195068
    7. ' )' → logprob: -7.223657131195068
    8. ' +' → logprob: -7.473657131195068
    9. ' *' → logprob: -7.723657131195068
    10. ' ' → logprob: -9.97365665435791

Token 253: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2970222234725952
    2. ' *' → logprob: -1.4220222234725952
    3. '+' → logprob: -5.047022342681885
    4. ' -' → logprob: -5.422022342681885
    5. ' +' → logprob: -6.047022342681885
    6. '-' → logprob: -6.172022342681885
    7. ')' → logprob: -8.297021865844727
    8. ',' → logprob: -9.547021865844727
    9. ' ' → logprob: -10.672021865844727
    10. '
' → logprob: -11.047021865844727

Token 254: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00441480940207839
    2. ' eq' → logprob: -6.004415035247803
    3. '(eq' → logprob: -6.254415035247803
    4. '(' → logprob: -11.504414558410645
    5. ' (' → logprob: -13.254414558410645
    6. 'equ' → logprob: -13.504414558410645
    7. 'last' → logprob: -14.254414558410645
    8. '((' → logprob: -15.129414558410645
    9. 'equal' → logprob: -15.379414558410645
    10. '
' → logprob: -15.504414558410645

Token 255: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' ((' (ID: 3536)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.052796777337789536
    2. '(last' → logprob: -3.5527968406677246
    3. '((' → logprob: -4.552796840667725
    4. '(' → logprob: -5.427796840667725
    5. '(x' → logprob: -6.427796840667725
    6. ' (' → logprob: -6.677796840667725
    7. 'get' → logprob: -6.927796840667725
    8. ' last' → logprob: -7.052796840667725
    9. '1' → logprob: -7.177796840667725
    10. 'x' → logprob: -7.302796840667725

Token 257: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.02129184640944004
    2. '(last' → logprob: -4.021291732788086
    3. 'x' → logprob: -6.896291732788086
    4. 'n' → logprob: -7.396291732788086
    5. ' last' → logprob: -7.771291732788086
    6. '(n' → logprob: -7.896291732788086
    7. 'm' → logprob: -8.396291732788086
    8. '(m' → logprob: -9.021291732788086
    9. '(x' → logprob: -9.146291732788086
    10. '(' → logprob: -9.646291732788086

Token 258: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09058068692684174
    2. '-' → logprob: -2.715580701828003
    3. ' +' → logprob: -5.090580463409424
    4. ' %' → logprob: -5.215580463409424
    5. '+' → logprob: -5.965580463409424
    6. '%' → logprob: -5.965580463409424
    7. ' ' → logprob: -6.090580463409424
    8. ')' → logprob: -6.965580463409424
    9. ' *' → logprob: -8.715580940246582
    10. '*' → logprob: -9.590580940246582

Token 259: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010918774642050266
    2. ' m' → logprob: -6.876091957092285
    3. '   ' → logprob: -10.251091957092285
    4. '1' → logprob: -11.501091957092285
    5. ' ' → logprob: -12.376091957092285
    6. '  ' → logprob: -12.376091957092285
    7. 'x' → logprob: -13.251091957092285
    8. '    ' → logprob: -13.751091957092285
    9. '2' → logprob: -14.376091957092285
    10. '
' → logprob: -14.751091957092285

Token 260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012899604625999928
    2. '))' → logprob: -4.637899398803711
    3. ' )' → logprob: -6.262899398803711
    4. ')*' → logprob: -6.887899398803711
    5. ' ))' → logprob: -9.637899398803711
    6. '-' → logprob: -10.137899398803711
    7. ')%' → logprob: -10.762899398803711
    8. '*' → logprob: -11.137899398803711
    9. ' -' → logprob: -11.262899398803711
    10. '+' → logprob: -11.637899398803711

Token 261: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1525013446807861
    2. ')' → logprob: -1.5275013446807861
    3. ' *' → logprob: -1.5275013446807861
    4. '-' → logprob: -1.9025013446807861
    5. '*' → logprob: -2.527501344680786
    6. '+' → logprob: -5.027501106262207
    7. ')*' → logprob: -5.152501106262207
    8. ' +' → logprob: -5.652501106262207
    9. ' )' → logprob: -5.652501106262207
    10. ' ' → logprob: -7.402501106262207

Token 262: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02406604215502739
    2. '((' → logprob: -4.649065971374512
    3. ' (' → logprob: -4.649065971374512
    4. '(' → logprob: -5.774065971374512
    5. 'x' → logprob: -6.649065971374512
    6. '1' → logprob: -8.899065971374512
    7. ' ((' → logprob: -9.649065971374512
    8. ' x' → logprob: -10.649065971374512
    9. '(
' → logprob: -13.274065971374512
    10. '0' → logprob: -13.399065971374512

Token 263: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018243946135044098
    2. ' x' → logprob: -4.018243789672852
    3. '(x' → logprob: -9.768243789672852
    4. ' (' → logprob: -10.893243789672852
    5. '(' → logprob: -11.393243789672852
    6. '   ' → logprob: -12.268243789672852
    7. '((' → logprob: -14.268243789672852
    8. ' ' → logprob: -14.643243789672852
    9. '	x' → logprob: -14.768243789672852
    10. '
' → logprob: -14.893243789672852

Token 264: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03804665803909302
    2. ' //' → logprob: -3.2880465984344482
    3. ' ' → logprob: -13.538046836853027
    4. '```' → logprob: -13.788046836853027
    5. '`' → logprob: -13.913046836853027
    6. ' ' → logprob: -14.788046836853027
    7. '#' → logprob: -15.163046836853027
    8. '//=' → logprob: -15.413046836853027
    9. '1' → logprob: -15.663046836853027
    10. '//
' → logprob: -15.788046836853027

Token 265: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00012451570364646614
    2. ' m' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.25012493133545
    4. ' ' → logprob: -16.125123977661133
    5. '	m' → logprob: -16.375123977661133
    6. '  ' → logprob: -16.500123977661133
    7. '    ' → logprob: -17.500123977661133
    8. ')' → logprob: -17.625123977661133
    9. '(m' → logprob: -18.125123977661133
    10. '           ' → logprob: -18.250123977661133

Token 266: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6946926116943359
    2. '))' → logprob: -0.6946926116943359
    3. ')))' → logprob: -6.569692611694336
    4. ' )' → logprob: -9.319692611694336
    5. ' ))' → logprob: -10.194692611694336
    6. '1' → logprob: -13.194692611694336
    7. '))
' → logprob: -13.319692611694336
    8. ')
' → logprob: -13.569692611694336
    9. '0' → logprob: -13.944692611694336
    10. '))))' → logprob: -13.944692611694336

Token 267: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033343661576509476
    2. '#' → logprob: -4.28334379196167
    3. 'n' → logprob: -4.40834379196167
    4. '<|end|>' → logprob: -6.15834379196167
    5. 'k' → logprob: -6.53334379196167
    6. 'for' → logprob: -7.03334379196167
    7. '
' → logprob: -7.65834379196167
    8. 'if' → logprob: -7.90834379196167
    9. '\n' → logprob: -8.033343315124512
    10. '```' → logprob: -8.283343315124512

Token 268: ' handle' (ID: 5318)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0057374238967896
    2. 'def' → logprob: -1.3807374238967896
    3. ' read' → logprob: -1.7557374238967896
    4. ' main' → logprob: -1.8807374238967896
    5. 'read' → logprob: -3.7557373046875
    6. 'main' → logprob: -4.8807373046875
    7. ' __' → logprob: -5.0057373046875
    8. '
' → logprob: -5.5057373046875
    9. ' ' → logprob: -5.8807373046875
    10. '__' → logprob: -5.8807373046875

Token 269: '_single' (ID: 46053)
  Prédit: '_query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.7655420303344727
    2. '_input' → logprob: -1.0155420303344727
    3. '_' → logprob: -1.7655420303344727
    4. '_queries' → logprob: -6.890542030334473
    5. '_case' → logprob: -9.015542030334473
    6. '_error' → logprob: -9.140542030334473
    7. '_(' → logprob: -9.765542030334473
    8. '(' → logprob: -10.140542030334473
    9. '_output' → logprob: -10.640542030334473
    10. '_command' → logprob: -11.015542030334473

Token 270: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.5254455208778381
    2. '_element' → logprob: -2.1504454612731934
    3. '_value' → logprob: -2.5254454612731934
    4. '_line' → logprob: -2.6504454612731934
    5. '_input' → logprob: -2.7754454612731934
    6. '_case' → logprob: -3.6504454612731934
    7. '_' → logprob: -3.7754454612731934
    8. 'ton' → logprob: -5.025445461273193
    9. '_n' → logprob: -5.275445461273193
    10. '(n' → logprob: -5.525445461273193

Token 271: '(k' (ID: 12125)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12738581001758575
    2. '(' → logprob: -2.1273858547210693
    3. '():' → logprob: -7.87738561630249
    4. ' (' → logprob: -10.627386093139648
    5. '(q' → logprob: -10.877386093139648
    6. '(def' → logprob: -11.627386093139648
    7. '(
' → logprob: -12.127386093139648
    8. '((' → logprob: -12.627386093139648
    9. '(N' → logprob: -12.877386093139648
    10. '()' → logprob: -13.127386093139648

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.236549335066229e-05
    2. ',n' → logprob: -10.875021934509277
    3. ' ,' → logprob: -13.250021934509277
    4. ',
' → logprob: -14.250021934509277
    5. ',q' → logprob: -14.625021934509277
    6. 'n' → logprob: -15.000021934509277
    7. '   ' → logprob: -17.250022888183594
    8. ',k' → logprob: -17.375022888183594
    9. 'q' → logprob: -18.125022888183594
    10. 'def' → logprob: -18.125022888183594

Token 273: ' d' (ID: 272)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00894118845462799
    2. ' q' → logprob: -5.258941173553467
    3. 'n' → logprob: -5.633941173553467
    4. ' n' → logprob: -9.258941650390625
    5. '   ' → logprob: -11.133941650390625
    6. 'query' → logprob: -12.133941650390625
    7. 'def' → logprob: -13.133941650390625
    8. ')' → logprob: -13.633941650390625
    9. ' ' → logprob: -14.008941650390625
    10. 'x' → logprob: -14.008941650390625

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ',
' → logprob: -12.625007629394531
    3. ' ,' → logprob: -12.875007629394531
    4. ',k' → logprob: -14.500007629394531
    5. ',n' → logprob: -14.875007629394531
    6. ',q' → logprob: -15.625007629394531
    7. '_,' → logprob: -15.750007629394531
    8. '):' → logprob: -16.12500762939453
    9. 'def' → logprob: -16.87500762939453
    10. ',m' → logprob: -16.87500762939453

Token 275: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029773982241749763
    2. 'q' → logprob: -4.029774188995361
    3. ' n' → logprob: -4.529774188995361
    4. 'query' → logprob: -7.779774188995361
    5. '   ' → logprob: -8.654773712158203
    6. ' q' → logprob: -9.279773712158203
    7. ')' → logprob: -10.404773712158203
    8. 'k' → logprob: -11.904773712158203
    9. ' query' → logprob: -11.904773712158203
    10. '):
' → logprob: -12.029773712158203

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',x' → logprob: -13.500006675720215
    4. ',
' → logprob: -15.750006675720215
    5. '   ' → logprob: -16.62500762939453
    6. 'x' → logprob: -17.87500762939453
    7. ',k' → logprob: -18.62500762939453
    8. ',n' → logprob: -18.62500762939453
    9. '_,' → logprob: -19.00000762939453
    10. ',q' → logprob: -19.00000762939453

Token 277: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324652671813965
    2. ' x' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.773246765136719
    4. 'q' → logprob: -15.523246765136719
    5. 'k' → logprob: -15.898246765136719
    6. '   ' → logprob: -16.02324676513672
    7. ',' → logprob: -16.89824676513672
    8. '	x' → logprob: -17.52324676513672
    9. ')' → logprob: -17.77324676513672
    10. '  ' → logprob: -17.89824676513672

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ' ,' → logprob: -10.50003433227539
    3. ',m' → logprob: -12.12503433227539
    4. '   ' → logprob: -14.25003433227539
    5. 'm' → logprob: -14.87503433227539
    6. ',
' → logprob: -15.37503433227539
    7. '):' → logprob: -15.50003433227539
    8. '):
' → logprob: -15.62503433227539
    9. ')' → logprob: -18.00003433227539
    10. '،' → logprob: -18.37503433227539

Token 279: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004621780011802912
    2. ' m' → logprob: -5.379621982574463
    3. '   ' → logprob: -13.754621505737305
    4. ' ' → logprob: -15.504621505737305
    5. '  ' → logprob: -16.629621505737305
    6. '    ' → logprob: -16.879621505737305
    7. '	m' → logprob: -17.004621505737305
    8. ')' → logprob: -17.004621505737305
    9. '       ' → logprob: -17.379621505737305
    10. '           ' → logprob: -17.754621505737305

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.6550729419104755e-05
    2. ')' → logprob: -10.500036239624023
    3. '):
' → logprob: -11.750036239624023
    4. ' ):' → logprob: -14.250036239624023
    5. ':' → logprob: -15.375036239624023
    6. '   ' → logprob: -16.125036239624023
    7. '():' → logprob: -17.375036239624023
    8. ',' → logprob: -17.750036239624023
    9. '):
' → logprob: -17.750036239624023
    10. ')：' → logprob: -18.875036239624023

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002192137064412236
    2. ' rep' → logprob: -6.75219202041626
    3. ' mod' → logprob: -7.25219202041626
    4. 'rep' → logprob: -8.877192497253418
    5. 'mod' → logprob: -9.627192497253418
    6. ' sequence' → logprob: -10.877192497253418
    7. ' seq' → logprob: -11.377192497253418
    8. ' parts' → logprob: -11.627192497253418
    9. '	rep' → logprob: -11.752192497253418
    10. ' total' → logprob: -12.002192497253418

Token 282: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -0.003748533083125949
    2. '   ' → logprob: -6.253748416900635
    3. 'rep' → logprob: -6.753748416900635
    4. ' mod' → logprob: -7.878748416900635
    5. 'mods' → logprob: -9.003748893737793
    6. 'def' → logprob: -10.253748893737793
    7. 'm' → logprob: -10.253748893737793
    8. 'd' → logprob: -10.378748893737793
    9. 'seq' → logprob: -11.128748893737793
    10. 'k' → logprob: -11.878748893737793

Token 283: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.00030578780570067465
    2. '_d' → logprob: -8.750306129455566
    3. '_sequence' → logprob: -8.875306129455566
    4. '_' → logprob: -12.750306129455566
    5. 'seq' → logprob: -12.875306129455566
    6. '_s' → logprob: -14.375306129455566
    7. 'd' → logprob: -14.625306129455566
    8. '_vals' → logprob: -15.375306129455566
    9. '_se' → logprob: -15.750306129455566
    10. 's' → logprob: -16.25030517578125

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024941205978394
    2. '=' → logprob: -1.9102494716644287
    3. ',' → logprob: -10.660249710083008
    4. 's' → logprob: -14.410249710083008
    5. ' =
' → logprob: -15.660249710083008
    6. '  ' → logprob: -15.660249710083008
    7. '   ' → logprob: -15.785249710083008
    8. ' ' → logprob: -15.910249710083008
    9. ' ' → logprob: -16.035249710083008
    10. '_' → logprob: -16.160249710083008

Token 285: ' mods' (ID: 60449)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.023323625326156616
    2. ' mods' → logprob: -3.7733235359191895
    3. '[' → logprob: -10.023324012756348
    4. ' [' → logprob: -11.398324012756348
    5. 'mod' → logprob: -11.773324012756348
    6. '[m' → logprob: -12.648324012756348
    7. '   ' → logprob: -12.648324012756348
    8. '.mods' → logprob: -12.773324012756348
    9. '[d' → logprob: -13.523324012756348
    10. '(mod' → logprob: -13.898324012756348

Token 286: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.004862634465098381
    2. '(d' → logprob: -5.3798627853393555
    3. 'sequence' → logprob: -8.754862785339355
    4. 'Sequence' → logprob: -9.504862785339355
    5. '_seq' → logprob: -12.504862785339355
    6. '_SEQUENCE' → logprob: -12.879862785339355
    7. ' sequence' → logprob: -14.379862785339355
    8. 'seq' → logprob: -14.504862785339355
    9. 'quence' → logprob: -14.504862785339355
    10. '```' → logprob: -14.754862785339355

Token 287: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.134509021649137e-05
    2. '(' → logprob: -9.75006103515625
    3. ' (' → logprob: -12.87506103515625
    4. '(
' → logprob: -15.37506103515625
    5. 'd' → logprob: -16.50006103515625
    6. '((' → logprob: -18.75006103515625
    7. '(k' → logprob: -19.37506103515625
    8. '[d' → logprob: -19.50006103515625
    9. '	d' → logprob: -19.62506103515625
    10. '
' → logprob: -19.75006103515625

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002700377081055194
    2. ',m' → logprob: -8.375269889831543
    3. ' ,' → logprob: -10.375269889831543
    4. 'm' → logprob: -11.875269889831543
    5. ',
' → logprob: -14.500269889831543
    6. '   ' → logprob: -15.125269889831543
    7. '(' → logprob: -15.625269889831543
    8. ')' → logprob: -15.625269889831543
    9. '(m' → logprob: -16.12527084350586
    10. '```' → logprob: -17.37527084350586

Token 289: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008615042082965374
    2. ' m' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.883615493774414
    4. '	m' → logprob: -16.133615493774414
    5. ')m' → logprob: -16.758615493774414
    6. ' ' → logprob: -17.258615493774414
    7. '    ' → logprob: -17.758615493774414
    8. ')' → logprob: -17.883615493774414
    9. '*m' → logprob: -18.758615493774414
    10. ' м' → logprob: -18.758615493774414

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005241106729954481
    2. ')
' → logprob: -5.2552409172058105
    3. ' )' → logprob: -12.380241394042969
    4. ')
' → logprob: -13.505241394042969
    5. '   ' → logprob: -13.880241394042969
    6. ')

' → logprob: -14.755241394042969
    7. ' )
' → logprob: -15.755241394042969
    8. ' ' → logprob: -18.00524139404297
    9. ').' → logprob: -18.25524139404297
    10. '),' → logprob: -18.25524139404297

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00601316848769784
    2. 'rep' → logprob: -5.7560133934021
    3. ' rep' → logprob: -5.8810133934021
    4. '	rep' → logprob: -10.881012916564941
    5. '(rep' → logprob: -12.256012916564941
    6. '
' → logprob: -12.256012916564941
    7. ',' → logprob: -12.631012916564941
    8. 'rest' → logprob: -13.006012916564941
    9. '    
' → logprob: -13.256012916564941
    10. '       ' → logprob: -14.381012916564941

Token 292: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' (adapté à ' rep') → logprob: -0.0566425547003746
    2. 'total' → logprob: -2.931642532348633
    3. ' rep' → logprob: -7.806642532348633
    4. 'k' → logprob: -7.931642532348633
    5. 'eq' → logprob: -7.931642532348633
    6. 'seq' → logprob: -7.931642532348633
    7. 'sum' → logprob: -9.431642532348633
    8. '   ' → logprob: -10.181642532348633
    9. 'n' → logprob: -10.306642532348633
    10. ' total' → logprob: -10.431642532348633

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017720005416776985
    2. ' ,' → logprob: -8.750177383422852
    3. '=' → logprob: -11.375177383422852
    4. ' =' → logprob: -12.125177383422852
    5. ',
' → logprob: -14.625177383422852
    6. '‌,' → logprob: -15.250177383422852
    7. '_,' → logprob: -15.500177383422852
    8. 's' → logprob: -15.875177383422852
    9. ',k' → logprob: -16.12517738342285
    10. '<|end|>' → logprob: -16.37517738342285

Token 294: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.38715532422065735
    2. 'rest' → logprob: -1.137155294418335
    3. '<|end|>' → logprob: -8.512155532836914
    4. ' get' → logprob: -10.387155532836914
    5. '_rest' → logprob: -10.637155532836914
    6. 'get' → logprob: -11.137155532836914
    7. '(rest' → logprob: -11.762155532836914
    8. ' ' → logprob: -14.012155532836914
    9. ' =' → logprob: -14.012155532836914
    10. ' _' → logprob: -14.012155532836914

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132686913013458
    2. '=' → logprob: -1.3132686614990234
    3. '=get' → logprob: -11.938268661499023
    4. '=create' → logprob: -16.188268661499023
    5. ')' → logprob: -16.938268661499023
    6. ',' → logprob: -17.313268661499023
    7. '<|end|>' → logprob: -17.313268661499023
    8. ' ' → logprob: -17.688268661499023
    9. ')=' → logprob: -17.938268661499023
    10. '＝' → logprob: -18.063268661499023

Token 296: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.47407740354537964
    2. 'get' → logprob: -0.9740774035453796
    3. '(get' → logprob: -15.474077224731445
    4. ' div' → logprob: -16.599077224731445
    5. 'div' → logprob: -16.599077224731445
    6. '_get' → logprob: -17.599077224731445
    7. '=get' → logprob: -18.099077224731445
    8. '.get' → logprob: -18.349077224731445
    9. '	get' → logprob: -18.474077224731445
    10. ' ' → logprob: -18.474077224731445

Token 297: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -4.096126576769166e-05
    2. 're' → logprob: -10.125041007995605
    3. '_rep' → logprob: -14.250041007995605
    4. ' repetition' → logprob: -16.12504005432129
    5. '_repeat' → logprob: -17.87504005432129
    6. '_' → logprob: -18.00004005432129
    7. '_parts' → logprob: -18.25004005432129
    8. 'Re' → logprob: -18.50004005432129
    9. 'rep' → logprob: -19.37504005432129
    10. 'num' → logprob: -19.50004005432129

Token 298: 'petition' (ID: 134449)
  Prédit: 'petition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'petition' → logprob: -0.0002123614540323615
    2. 'p' → logprob: -8.750212669372559
    3. 'pet' → logprob: -9.875212669372559
    4. 'peat' → logprob: -13.750212669372559
    5. 'pletion' → logprob: -14.625212669372559
    6. 'pt' → logprob: -14.750212669372559
    7. 'pat' → logprob: -15.500212669372559
    8. 'pit' → logprob: -16.500211715698242
    9. 'pets' → logprob: -17.000211715698242
    10. 'peated' → logprob: -17.625211715698242

Token 299: '_parts' (ID: 81867)
  Prédit: '_parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parts' → logprob: -1.8624639324116288e-06
    2. 'parts' → logprob: -13.625001907348633
    3. 's' → logprob: -15.750001907348633
    4. '(parts' → logprob: -15.875001907348633
    5. ' parts' → logprob: -16.500001907348633
    6. '```' → logprob: -16.625001907348633
    7. '_' → logprob: -17.625001907348633
    8. '_points' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '_places' → logprob: -18.250001907348633

Token 300: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.643152740551159e-05
    2. 'n' → logprob: -10.625036239624023
    3. '(' → logprob: -11.500036239624023
    4. ' (' → logprob: -14.125036239624023
    5. ' n' → logprob: -14.750036239624023
    6. '<|end|>' → logprob: -15.125036239624023
    7. '(len' → logprob: -15.625036239624023
    8. '
' → logprob: -16.750036239624023
    9. '(
' → logprob: -16.750036239624023
    10. '<n' → logprob: -16.875036239624023

Token 301: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.43177542090415955
    2. ',' → logprob: -1.056775450706482
    3. '(k' → logprob: -6.1817755699157715
    4. 'k' → logprob: -7.4317755699157715
    5. ' ,' → logprob: -8.056775093078613
    6. '   ' → logprob: -10.306775093078613
    7. ' k' → logprob: -10.556775093078613
    8. '(' → logprob: -11.931775093078613
    9. ',n' → logprob: -12.056775093078613
    10. '```' → logprob: -12.556775093078613

Token 302: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004307884373702109
    2. ' k' → logprob: -7.750430583953857
    3. '	k' → logprob: -16.625431060791016
    4. '   ' → logprob: -20.000431060791016
    5. '(k' → logprob: -20.375431060791016
    6. ' к' → logprob: -20.375431060791016
    7. '<|end|>' → logprob: -20.750431060791016
    8. ',k' → logprob: -20.875431060791016
    9. '{k' → logprob: -20.875431060791016
    10. '*k' → logprob: -21.750431060791016

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4868770196917467e-05
    2. ')
' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.125024795532227
    4. ' )' → logprob: -15.250024795532227
    5. ')

' → logprob: -16.875024795532227
    6. ')
' → logprob: -17.750024795532227
    7. '),' → logprob: -18.500024795532227
    8. ' ' → logprob: -19.375024795532227
    9. '<|end|>' → logprob: -19.750024795532227
    10. ')#' → logprob: -20.000024795532227

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04513133317232132
    2. 'total' → logprob: -3.7951314449310303
    3. ' partial' → logprob: -4.670131206512451
    4. ' total' → logprob: -5.170131206512451
    5. 'partial' → logprob: -5.295131206512451
    6. 'sum' → logprob: -6.670131206512451
    7. ' sum' → logprob: -9.04513168334961
    8. 'eq' → logprob: -10.04513168334961
    9. 'rest' → logprob: -10.92013168334961
    10. ' eq' → logprob: -11.29513168334961

Token 305: ' total' (ID: 3609)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.2267885059118271
    2. 'total' (adapté à ' total') → logprob: -1.9767885208129883
    3. ' partial' → logprob: -3.1017885208129883
    4. '   ' → logprob: -5.101788520812988
    5. 'eq' → logprob: -5.351788520812988
    6. 'sum' → logprob: -5.476788520812988
    7. ' total' → logprob: -6.351788520812988
    8. 'seq' → logprob: -6.726788520812988
    9. 'part' → logprob: -6.976788520812988
    10. 'rep' → logprob: -9.351788520812988

Token 306: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0014421383384615183
    2. '_' → logprob: -6.751441955566406
    3. ' =' → logprob: -9.126441955566406
    4. '=' → logprob: -10.001441955566406
    5. '_seq' → logprob: -10.001441955566406
    6. '_s' → logprob: -11.001441955566406
    7. ' _' → logprob: -11.126441955566406
    8. ',_' → logprob: -11.126441955566406
    9. ',' → logprob: -11.251441955566406
    10. '=_' → logprob: -12.001441955566406

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. '=get' → logprob: -16.15475082397461
    4. '=sum' → logprob: -16.90475082397461
    5. '   ' → logprob: -17.52975082397461
    6. ' ' → logprob: -18.27975082397461
    7. ' ' → logprob: -18.27975082397461
    8. ',' → logprob: -18.65475082397461
    9. ' +=' → logprob: -19.65475082397461
    10. '  ' → logprob: -19.90475082397461

Token 308: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.36717918515205383
    2. ' get' → logprob: -1.2421791553497314
    3. 'sum' → logprob: -4.2421793937683105
    4. ' sum' → logprob: -5.4921793937683105
    5. '(get' → logprob: -10.242178916931152
    6. '   ' → logprob: -11.367178916931152
    7. '	get' → logprob: -12.242178916931152
    8. '  ' → logprob: -12.867178916931152
    9. '(sum' → logprob: -12.992178916931152
    10. '[get' → logprob: -12.992178916931152

Token 309: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002627662615850568
    2. 'sum' → logprob: -8.250263214111328
    3. '(sum' → logprob: -14.875263214111328
    4. '_num' → logprob: -15.000263214111328
    5. '_' → logprob: -15.125263214111328
    6. '_get' → logprob: -15.250263214111328
    7. ' sum' → logprob: -16.125263214111328
    8. '_seq' → logprob: -16.375263214111328
    9. '_mod' → logprob: -16.875263214111328
    10. 'get' → logprob: -17.125263214111328

Token 310: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.018657641485333443
    2. '(d' → logprob: -4.018657684326172
    3. 'mod' → logprob: -7.643657684326172
    4. '(' → logprob: -10.768657684326172
    5. 'd' → logprob: -12.893657684326172
    6. '(
' → logprob: -13.268657684326172
    7. 'mods' → logprob: -13.893657684326172
    8. '(m' → logprob: -14.518657684326172
    9. '	mod' → logprob: -14.518657684326172
    10. '_mod' → logprob: -14.893657684326172

Token 311: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -1.2113979209971149e-05
    2. 'seq' → logprob: -11.375012397766113
    3. '(seq' → logprob: -14.375012397766113
    4. 'Seq' → logprob: -16.875011444091797
    5. '_SEQ' → logprob: -17.375011444091797
    6. '_sequence' → logprob: -18.125011444091797
    7. ' seq' → logprob: -19.625011444091797
    8. '(' → logprob: -19.625011444091797
    9. '_sq' → logprob: -20.000011444091797
    10. '(d' → logprob: -20.125011444091797

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860259220004082
    2. ')
' → logprob: -3.04860258102417
    3. ')
' → logprob: -12.048603057861328
    4. ')

' → logprob: -12.298603057861328
    5. '   ' → logprob: -12.798603057861328
    6. ' )' → logprob: -13.673603057861328
    7. ' )
' → logprob: -15.298603057861328
    8. 'def' → logprob: -15.798603057861328
    9. '())' → logprob: -15.923603057861328
    10. '))' → logprob: -16.423603057861328

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17575174570083618
    2. 'partial' → logprob: -2.3007516860961914
    3. ' partial' → logprob: -2.8007516860961914
    4. '
' → logprob: -9.800751686096191
    5. '```' → logprob: -9.925751686096191
    6. 'rest' → logprob: -10.550751686096191
    7. '    
' → logprob: -10.800751686096191
    8. 'partials' → logprob: -11.175751686096191
    9. '       ' → logprob: -11.550751686096191
    10. 'part' → logprob: -11.675751686096191

Token 314: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' (adapté à ' partial') → logprob: -0.003204092849045992
    2. ' partial' → logprob: -5.753203868865967
    3. '   ' → logprob: -10.753204345703125
    4. 'part' → logprob: -12.503204345703125
    5. 'partials' → logprob: -14.253204345703125
    6. 'ps' → logprob: -15.628204345703125
    7. 'rest' → logprob: -16.253204345703125
    8. ' ' → logprob: -16.628204345703125
    9. '
' → logprob: -16.628204345703125
    10. '.partial' → logprob: -17.003204345703125

Token 315: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.04898110404610634
    2. '_seq' → logprob: -3.048981189727783
    3. '_sequence' → logprob: -8.548980712890625
    4. '_' → logprob: -9.423980712890625
    5. '=' → logprob: -10.173980712890625
    6. 'sum' → logprob: -10.298980712890625
    7. ' =' → logprob: -10.673980712890625
    8. '_s' → logprob: -11.298980712890625
    9. 'seq' → logprob: -12.423980712890625
    10. '=_' → logprob: -13.048980712890625

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021033883094788
    2. '=' → logprob: -2.350210428237915
    3. '(' → logprob: -13.725210189819336
    4. '   ' → logprob: -14.100210189819336
    5. '(mod' → logprob: -14.225210189819336
    6. '(seq' → logprob: -14.475210189819336
    7. ' ' → logprob: -15.225210189819336
    8. ',' → logprob: -16.475210189819336
    9. '_seq' → logprob: -16.600210189819336
    10. 'seq' → logprob: -16.725210189819336

Token 317: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.08995135128498077
    2. ' get' → logprob: -2.464951276779175
    3. 'sum' → logprob: -6.964951515197754
    4. ' sum' → logprob: -9.714951515197754
    5. '(get' → logprob: -13.214951515197754
    6. '0' → logprob: -13.339951515197754
    7. ' ' → logprob: -13.714951515197754
    8. '	get' → logprob: -14.464951515197754
    9. '   ' → logprob: -15.214951515197754
    10. '
' → logprob: -15.464951515197754

Token 318: '_partial' (ID: 139756)
  Prédit: '_partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_partial' → logprob: -0.0003571535926312208
    2. 'partial' → logprob: -8.250357627868652
    3. '_num' → logprob: -9.750357627868652
    4. '_sum' → logprob: -10.625357627868652
    5. '_part' → logprob: -12.000357627868652
    6. '_re' → logprob: -13.000357627868652
    7. 'num' → logprob: -13.500357627868652
    8. '_' → logprob: -14.625357627868652
    9. 'sum' → logprob: -14.625357627868652
    10. '_sequence' → logprob: -14.750357627868652

Token 319: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0009856504620984197
    2. 'sum' → logprob: -7.125985622406006
    3. '_seq' → logprob: -8.750986099243164
    4. '_sequence' → logprob: -11.125986099243164
    5. 'seq' → logprob: -13.000986099243164
    6. '_value' → logprob: -13.000986099243164
    7. 's' → logprob: -13.125986099243164
    8. 'Sum' → logprob: -14.375986099243164
    9. ' sum' → logprob: -14.500986099243164
    10. 'sequence' → logprob: -15.875986099243164

Token 320: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -5.0259150157216936e-05
    2. '(' → logprob: -10.12505054473877
    3. ' (' → logprob: -12.25005054473877
    4. '(
' → logprob: -13.12505054473877
    5. '(seq' → logprob: -13.37505054473877
    6. '   ' → logprob: -14.37505054473877
    7. 'mod' → logprob: -14.50005054473877
    8. ' mod' → logprob: -15.75005054473877
    9. '(iter' → logprob: -15.75005054473877
    10. '	mod' → logprob: -15.87505054473877

Token 321: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -6.392202976712724e-06
    2. 'seq' → logprob: -12.000006675720215
    3. 'Seq' → logprob: -16.8750057220459
    4. '(seq' → logprob: -17.5000057220459
    5. '_SEQ' → logprob: -18.0000057220459
    6. '_sequence' → logprob: -18.3750057220459
    7. ' seq' → logprob: -20.0000057220459
    8. '_sq' → logprob: -20.1250057220459
    9. '_eq' → logprob: -20.5000057220459
    10. '_se' → logprob: -20.8750057220459

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013373857364058495
    2. ' ,' → logprob: -6.75133752822876
    3. '(rest' → logprob: -9.251337051391602
    4. '   ' → logprob: -9.626337051391602
    5. '(' → logprob: -13.001337051391602
    6. 'rest' → logprob: -13.626337051391602
    7. '  ' → logprob: -13.876337051391602
    8. ' rest' → logprob: -15.626337051391602
    9. ',
' → logprob: -16.1263370513916
    10. '[' → logprob: -16.3763370513916

Token 323: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.043001484125852585
    2. ' rest' → logprob: -3.168001413345337
    3. '(rest' → logprob: -13.043001174926758
    4. ' ' → logprob: -17.168001174926758
    5. '.rest' → logprob: -17.543001174926758
    6. '   ' → logprob: -17.543001174926758
    7. '_rest' → logprob: -18.043001174926758
    8. 'Rest' → logprob: -18.168001174926758
    9. '
' → logprob: -18.918001174926758
    10. 're' → logprob: -19.168001174926758

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007401806069537997
    2. ')
' → logprob: -7.375740051269531
    3. '   ' → logprob: -9.125740051269531
    4. ' )' → logprob: -12.500740051269531
    5. '+' → logprob: -14.000740051269531
    6. ')

' → logprob: -16.12574005126953
    7. ')
' → logprob: -16.75074005126953
    8. ')return' → logprob: -18.00074005126953
    9. '))' → logprob: -18.12574005126953
    10. ' ' → logprob: -18.12574005126953

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1519005000591278
    2. '
' → logprob: -2.15190052986145
    3. ' last' → logprob: -4.401900291442871
    4. '    
' → logprob: -4.901900291442871
    5. 'last' → logprob: -5.401900291442871
    6. '	last' → logprob: -8.526900291442871
    7. '  
' → logprob: -10.276900291442871
    8. '[last' → logprob: -10.276900291442871
    9. '_last' → logprob: -10.651900291442871
    10. '<|end|>' → logprob: -10.776900291442871

Token 326: ' last' (ID: 2174)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.07840218394994736
    2. 'last' (adapté à ' last') → logprob: -2.828402280807495
    3. 'zero' → logprob: -4.953402042388916
    4. 'num' → logprob: -5.078402042388916
    5. ' eq' → logprob: -6.578402042388916
    6. '   ' → logprob: -6.703402042388916
    7. ' last' → logprob: -8.578402519226074
    8. ' zero' → logprob: -10.328402519226074
    9. 'if' → logprob: -10.578402519226074
    10. '0' → logprob: -11.078402519226074

Token 327: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.43901315331459045
    2. ' =' → logprob: -1.189013123512268
    3. '=' → logprob: -3.0640132427215576
    4. '_' → logprob: -5.6890130043029785
    5. '_val' → logprob: -7.9390130043029785
    6. 'value' → logprob: -8.564013481140137
    7. '=_' → logprob: -10.064013481140137
    8. ' _' → logprob: -10.439013481140137
    9. '_values' → logprob: -10.814013481140137
    10. 'Value' → logprob: -11.064013481140137

Token 328: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.006715370807796717
    2. ' get' → logprob: -5.006715297698975
    3. '(get' → logprob: -18.506715774536133
    4. '	get' → logprob: -20.631715774536133
    5. '_get' → logprob: -20.756715774536133
    6. '=get' → logprob: -20.881715774536133
    7. 'x' → logprob: -21.131715774536133
    8. '.get' → logprob: -21.881715774536133
    9. '[get' → logprob: -22.506715774536133
    10. '   ' → logprob: -22.631715774536133

Token 329: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -4.320199877838604e-07
    2. 'last' → logprob: -15.625
    3. '_first' → logprob: -16.5
    4. '_final' → logprob: -17.25
    5. '_' → logprob: -17.5
    6. '_value' → logprob: -17.75
    7. '_total' → logprob: -18.0
    8. ' _' → logprob: -18.75
    9. '```' → logprob: -18.75
    10. '_next' → logprob: -19.25

Token 330: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. 'value' → logprob: -15.000000953674316
    3. '_val' → logprob: -16.25
    4. ' _' → logprob: -16.75
    5. '_' → logprob: -16.75
    6. '_values' → logprob: -17.0
    7. '```' → logprob: -18.125
    8. '_VALUE' → logprob: -19.0
    9. '_last' → logprob: -19.625
    10. '_Value' → logprob: -20.125

Token 331: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4742264747619629
    2. '(' → logprob: -0.9742264747619629
    3. '(
' → logprob: -8.849225997924805
    4. ' (' → logprob: -12.224225997924805
    5. '(

' → logprob: -14.724225997924805
    6. 'x' → logprob: -15.974225997924805
    7. '(space' → logprob: -16.099225997924805
    8. '(user' → logprob: -17.099225997924805
    9. '(n' → logprob: -17.099225997924805
    10. '<|end|>' → logprob: -17.474225997924805

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004701146390289068
    2. ' ,' → logprob: -7.750470161437988
    3. ',total' → logprob: -10.500470161437988
    4. ',
' → logprob: -11.625470161437988
    5. '   ' → logprob: -13.500470161437988
    6. '=' → logprob: -14.625470161437988
    7. 'total' → logprob: -14.750470161437988
    8. ')' → logprob: -15.875470161437988
    9. ',

' → logprob: -16.125469207763672
    10. ' ' → logprob: -16.500469207763672

Token 333: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.011048408225178719
    2. ' total' → logprob: -4.511048316955566
    3. '(total' → logprob: -14.761048316955566
    4. '	total' → logprob: -15.886048316955566
    5. '$total' → logprob: -17.136049270629883
    6. '   ' → logprob: -17.261049270629883
    7. '
' → logprob: -17.761049270629883
    8. ' ' → logprob: -17.886049270629883
    9. 'partial' → logprob: -18.261049270629883
    10. ',total' → logprob: -18.511049270629883

Token 334: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.107425062713446e-06
    2. '_seq' → logprob: -12.000006675720215
    3. 'sum' → logprob: -14.000006675720215
    4. ')' → logprob: -17.50000762939453
    5. '_s' → logprob: -18.12500762939453
    6. '_' → logprob: -18.87500762939453
    7. ' sum' → logprob: -19.25000762939453
    8. '=' → logprob: -19.62500762939453
    9. '_rep' → logprob: -19.87500762939453
    10. '_sequence' → logprob: -20.37500762939453

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012582694762386382
    2. ' ,' → logprob: -9.000125885009766
    3. ')' → logprob: -13.875125885009766
    4. 'rep' → logprob: -14.375125885009766
    5. ',
' → logprob: -14.625125885009766
    6. '   ' → logprob: -15.375125885009766
    7. ' rep' → logprob: -16.500125885009766
    8. '),' → logprob: -17.000125885009766
    9. '‌,' → logprob: -17.250125885009766
    10. '```' → logprob: -17.625125885009766

Token 336: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.1300387680530548
    2. ' rep' → logprob: -2.1300387382507324
    3. ' rest' → logprob: -6.380038738250732
    4. 'rest' → logprob: -6.630038738250732
    5. ' partial' → logprob: -9.75503921508789
    6. 'partial' → logprob: -10.38003921508789
    7. '	rep' → logprob: -14.13003921508789
    8. '(rep' → logprob: -14.50503921508789
    9. '   ' → logprob: -15.75503921508789
    10. '
' → logprob: -16.00503921508789

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000305310997646302
    2. ' ,' → logprob: -8.12530517578125
    3. 'partial' → logprob: -12.37530517578125
    4. '   ' → logprob: -12.87530517578125
    5. ',
' → logprob: -13.75030517578125
    6. ' partial' → logprob: -14.25030517578125
    7. ')' → logprob: -14.87530517578125
    8. '),' → logprob: -16.50030517578125
    9. '(part' → logprob: -16.50030517578125
    10. '_,' → logprob: -16.62530517578125

Token 338: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.00861456897109747
    2. ' partial' → logprob: -4.758614540100098
    3. 'part' → logprob: -18.133615493774414
    4. '.partial' → logprob: -18.633615493774414
    5. 'partials' → logprob: -18.633615493774414
    6. '_partial' → logprob: -19.383615493774414
    7. '(part' → logprob: -19.508615493774414
    8. 'Partial' → logprob: -20.633615493774414
    9. ' parcial' → logprob: -21.633615493774414
    10. '   ' → logprob: -22.133615493774414

Token 339: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.127333340875339e-06
    2. 'sum' → logprob: -12.875003814697266
    3. '_seq' → logprob: -13.500003814697266
    4. 'Sum' → logprob: -18.500003814697266
    5. '_s' → logprob: -18.875003814697266
    6. 's' → logprob: -19.875003814697266
    7. ' sum' → logprob: -19.875003814697266
    8. ')' → logprob: -20.250003814697266
    9. '_rest' → logprob: -20.500003814697266
    10. '_' → logprob: -20.625003814697266

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011086138896644115
    2. ')
' → logprob: -4.5110859870910645
    3. '   ' → logprob: -10.386086463928223
    4. ' )' → logprob: -12.261086463928223
    5. ')
' → logprob: -13.386086463928223
    6. ')

' → logprob: -14.511086463928223
    7. ',' → logprob: -15.136086463928223
    8. ' )
' → logprob: -15.261086463928223
    9. ' ' → logprob: -16.136085510253906
    10. '  ' → logprob: -17.386085510253906

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10096675902605057
    2. '
' → logprob: -2.350966691970825
    3. '    
' → logprob: -8.225966453552246
    4. ' return' → logprob: -8.475966453552246
    5. '<|end|>' → logprob: -8.975966453552246
    6. 'return' → logprob: -9.475966453552246
    7. 'eq' → logprob: -10.850966453552246
    8. ')' → logprob: -11.600966453552246
    9. '	return' → logprob: -11.725966453552246
    10. '```' → logprob: -12.225966453552246

Token 342: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' (adapté à ' eq') → logprob: -0.00022773505770601332
    2. ' eq' → logprob: -8.625227928161621
    3. '   ' → logprob: -10.250227928161621
    4. 'equ' → logprob: -12.625227928161621
    5. 'answer' → logprob: -13.000227928161621
    6. 'ans' → logprob: -13.375227928161621
    7. 'return' → logprob: -13.375227928161621
    8. '
' → logprob: -13.500227928161621
    9. 'result' → logprob: -14.250227928161621
    10. 'zero' → logprob: -14.625227928161621

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716555915772915
    2. '=' → logprob: -5.006716728210449
    3. ' +=' → logprob: -14.25671672821045
    4. ',' → logprob: -14.50671672821045
    5. '   ' → logprob: -17.256715774536133
    6. '  ' → logprob: -17.381715774536133
    7. ' ' → logprob: -18.131715774536133
    8. '	' → logprob: -18.256715774536133
    9. ' =
' → logprob: -18.256715774536133
    10. ' =)' → logprob: -18.381715774536133

Token 344: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03804286941885948
    2. ' get' → logprob: -3.2880427837371826
    3. '(get' → logprob: -14.038043022155762
    4. '0' → logprob: -15.788043022155762
    5. '=get' → logprob: -16.163042068481445
    6. '	get' → logprob: -16.538042068481445
    7. '[get' → logprob: -16.663042068481445
    8. 'sum' → logprob: -17.538042068481445
    9. 'eq' → logprob: -17.663042068481445
    10. '   ' → logprob: -17.788042068481445

Token 345: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -9.507972572464496e-05
    2. '_last' → logprob: -9.50009536743164
    3. 'num' → logprob: -11.00009536743164
    4. '_zero' → logprob: -13.37509536743164
    5. '_' → logprob: -13.87509536743164
    6. 'last' → logprob: -16.25009536743164
    7. '0' → logprob: -16.37509536743164
    8. '_sum' → logprob: -16.50009536743164
    9. '```' → logprob: -16.50009536743164
    10. '_eq' → logprob: -16.75009536743164

Token 346: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -5.240481914370321e-05
    2. 'zero' → logprob: -9.875052452087402
    3. '```' → logprob: -15.125052452087402
    4. '_ZERO' → logprob: -16.000051498413086
    5. '0' → logprob: -16.250051498413086
    6. ' zero' → logprob: -16.375051498413086
    7. '
' → logprob: -16.625051498413086
    8. '(_' → logprob: -17.125051498413086
    9. '_' → logprob: -17.125051498413086
    10. '_elements' → logprob: -17.250051498413086

Token 347: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -8.061054359131958e-06
    2. 'elements' → logprob: -11.750007629394531
    3. '_ELEMENTS' → logprob: -16.00000762939453
    4. '_' → logprob: -18.12500762939453
    5. ' elements' → logprob: -18.87500762939453
    6. 'Elements' → logprob: -19.25000762939453
    7. '```' → logprob: -19.25000762939453
    8. '_element' → logprob: -19.37500762939453
    9. 'lements' → logprob: -19.37500762939453
    10. '(elements' → logprob: -20.00000762939453

Token 348: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -9.491498531133402e-06
    2. 'mod' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.500009536743164
    4. '(' → logprob: -16.500009536743164
    5. '	mod' → logprob: -17.125009536743164
    6. ' mod' → logprob: -17.250009536743164
    7. '(
' → logprob: -17.500009536743164
    8. '```' → logprob: -17.625009536743164
    9. '(m' → logprob: -18.000009536743164
    10. '(Mod' → logprob: -18.250009536743164

Token 349: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.0010348338400945067
    2. 'seq' → logprob: -6.876034736633301
    3. 'Seq' → logprob: -13.5010347366333
    4. '_SEQ' → logprob: -15.1260347366333
    5. '(seq' → logprob: -15.7510347366333
    6. ' seq' → logprob: -16.126035690307617
    7. 'aseq' → logprob: -16.126035690307617
    8. '_se' → logprob: -17.376035690307617
    9. '   ' → logprob: -17.751035690307617
    10. '```' → logprob: -18.501035690307617

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011951648048125207
    2. ' ,' → logprob: -9.25011920928955
    3. '(rep' → logprob: -11.25011920928955
    4. '   ' → logprob: -12.37511920928955
    5. 'rep' → logprob: -12.75011920928955
    6. ',
' → logprob: -13.62511920928955
    7. ')' → logprob: -14.00011920928955
    8. '(' → logprob: -14.87511920928955
    9. '
' → logprob: -15.25011920928955
    10. ' rep' → logprob: -15.50011920928955

Token 351: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.12692926824092865
    2. ' rep' → logprob: -2.12692928314209
    3. '(rep' → logprob: -14.00192928314209
    4. '	rep' → logprob: -15.00192928314209
    5. '_rep' → logprob: -17.376928329467773
    6. '.rep' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.251928329467773
    8. ' ' → logprob: -19.626928329467773
    9. 're' → logprob: -19.751928329467773
    10. 'Rep' → logprob: -19.876928329467773

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. ' ,' → logprob: -10.000045776367188
    3. ',
' → logprob: -15.500045776367188
    4. '(rest' → logprob: -15.625045776367188
    5. '   ' → logprob: -15.750045776367188
    6. 'rest' → logprob: -16.750045776367188
    7. ' rest' → logprob: -16.875045776367188
    8. ')' → logprob: -16.875045776367188
    9. '‌,' → logprob: -17.625045776367188
    10. '<|end|>' → logprob: -17.750045776367188

Token 353: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.10020678490400314
    2. ' rest' → logprob: -2.3502068519592285
    3. '(rest' → logprob: -16.22520637512207
    4. '
' → logprob: -18.60020637512207
    5. '.rest' → logprob: -18.72520637512207
    6. ' ' → logprob: -19.85020637512207
    7. '_rest' → logprob: -19.97520637512207
    8. '   ' → logprob: -20.22520637512207
    9. 'Rest' → logprob: -20.47520637512207
    10. ' resta' → logprob: -21.10020637512207

Token 354: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004693442024290562
    2. '   ' → logprob: -5.754693508148193
    3. ')' → logprob: -6.504693508148193
    4. ')
' → logprob: -11.254693031311035
    5. ' ,' → logprob: -12.379693031311035
    6. ',
' → logprob: -14.629693031311035
    7. ',x' → logprob: -16.25469398498535
    8. ' )' → logprob: -16.50469398498535
    9. ' ' → logprob: -16.62969398498535
    10. ',)' → logprob: -16.75469398498535

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000508591765537858
    2. 'return' → logprob: -8.875508308410645
    3. ' return' → logprob: -8.875508308410645
    4. ')' → logprob: -9.750508308410645
    5. 'answer' → logprob: -9.875508308410645
    6. '
' → logprob: -10.125508308410645
    7. 'result' → logprob: -10.375508308410645
    8. '    
' → logprob: -11.250508308410645
    9. ' answer' → logprob: -11.250508308410645
    10. ' result' → logprob: -11.875508308410645

Token 356: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06625477969646454
    2. 'answer' → logprob: -3.3162548542022705
    3. '   ' → logprob: -4.441254615783691
    4. ' return' → logprob: -4.941254615783691
    5. 'ans' (adapté à ' ans') → logprob: -5.191254615783691
    6. 'result' → logprob: -5.816254615783691
    7. 'res' → logprob: -8.691254615783691
    8. ' answer' → logprob: -9.441254615783691
    9. ' ans' → logprob: -9.691254615783691
    10. 'ret' → logprob: -11.441254615783691

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520558536052704
    2. ' =' → logprob: -1.5020558834075928
    3. ',' → logprob: -9.752056121826172
    4. ' ' → logprob: -11.252056121826172
    5. ' =
' → logprob: -11.502056121826172
    6. 'ow' → logprob: -11.752056121826172
    7. '   ' → logprob: -11.752056121826172
    8. '  ' → logprob: -12.377056121826172
    9. ' ' → logprob: -12.377056121826172
    10. '	' → logprob: -12.502056121826172

Token 358: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.10020839422941208
    2. ' calculate' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.350208282470703
    4. '.calculate' → logprob: -16.725208282470703
    5. ' ' → logprob: -17.725208282470703
    6. 'alculate' → logprob: -17.975208282470703
    7. 'cal' → logprob: -18.475208282470703
    8. '  ' → logprob: -19.225208282470703
    9. 'calc' → logprob: -19.350208282470703
    10. 'Calculate' → logprob: -20.100208282470703

Token 359: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.62500286102295
    3. '_ans' → logprob: -13.62500286102295
    4. ' _' → logprob: -14.75000286102295
    5. '```' → logprob: -16.250003814697266
    6. '
' → logprob: -16.875003814697266
    7. 'answer' → logprob: -16.875003814697266
    8. '_answers' → logprob: -17.250003814697266
    9. 'Answer' → logprob: -17.500003814697266
    10. '_question' → logprob: -18.375003814697266

Token 360: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00744394026696682
    2. '(' → logprob: -5.382443904876709
    3. ' (' → logprob: -5.882443904876709
    4. '(ans' → logprob: -10.507444381713867
    5. '(
' → logprob: -12.757444381713867
    6. '((' → logprob: -14.382444381713867
    7. '```' → logprob: -14.757444381713867
    8. ' ' → logprob: -16.507444381713867
    9. '   ' → logprob: -17.132444381713867
    10. '(None' → logprob: -17.382444381713867

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',
' → logprob: -13.625016212463379
    4. '   ' → logprob: -15.125016212463379
    5. '=' → logprob: -16.500017166137695
    6. ',e' → logprob: -16.875017166137695
    7. '(eq' → logprob: -16.875017166137695
    8. '‌,' → logprob: -18.000017166137695
    9. ',k' → logprob: -18.250017166137695
    10. ')' → logprob: -18.250017166137695

Token 362: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0002036595979006961
    2. ' eq' → logprob: -8.500204086303711
    3. 'equ' → logprob: -15.750204086303711
    4. 'eg' → logprob: -18.37520408630371
    5. '
' → logprob: -18.62520408630371
    6. 'e' → logprob: -18.62520408630371
    7. '(eq' → logprob: -18.75020408630371
    8. '_eq' → logprob: -19.37520408630371
    9. '.eq' → logprob: -20.62520408630371
    10. '   ' → logprob: -21.00020408630371

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011164903844473884
    2. ' ,' → logprob: -9.75011157989502
    3. ',last' → logprob: -9.87511157989502
    4. ',
' → logprob: -13.37511157989502
    5. 'last' → logprob: -16.625112533569336
    6. ' last' → logprob: -16.625112533569336
    7. '=' → logprob: -17.500112533569336
    8. '   ' → logprob: -18.000112533569336
    9. '[last' → logprob: -18.625112533569336
    10. ')' → logprob: -19.125112533569336

Token 364: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.004078639671206474
    2. ' last' → logprob: -5.5040788650512695
    3. '
' → logprob: -16.129077911376953
    4. '	last' → logprob: -16.504077911376953
    5. '_last' → logprob: -17.504077911376953
    6. '(last' → logprob: -17.629077911376953
    7. '[last' → logprob: -17.629077911376953
    8. '   ' → logprob: -17.879077911376953
    9. ' ' → logprob: -18.254077911376953
    10. 'Last' → logprob: -18.254077911376953

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003978992172051221
    2. ',m' → logprob: -8.000397682189941
    3. ' ,' → logprob: -9.750397682189941
    4. ',
' → logprob: -12.500397682189941
    5. 'm' → logprob: -16.250398635864258
    6. '   ' → logprob: -16.375398635864258
    7. '```' → logprob: -16.375398635864258
    8. ',x' → logprob: -16.625398635864258
    9. ')' → logprob: -17.500398635864258
    10. ',k' → logprob: -17.750398635864258

Token 366: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015024791937321424
    2. ' m' → logprob: -6.501502513885498
    3. 'x' → logprob: -15.75150203704834
    4. '
' → logprob: -19.376502990722656
    5. '	m' → logprob: -19.751502990722656
    6. ' ' → logprob: -20.001502990722656
    7. ' x' → logprob: -20.501502990722656
    8. ')m' → logprob: -20.751502990722656
    9. ' 
' → logprob: -20.751502990722656
    10. '```' → logprob: -21.001502990722656

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019388488726690412
    2. ',x' → logprob: -8.87519359588623
    3. ' ,' → logprob: -10.12519359588623
    4. 'x' → logprob: -11.25019359588623
    5. ' x' → logprob: -14.37519359588623
    6. ',
' → logprob: -15.37519359588623
    7. '   ' → logprob: -16.375194549560547
    8. '```' → logprob: -17.125194549560547
    9. ' ' → logprob: -17.750194549560547
    10. '=' → logprob: -18.375194549560547

Token 368: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029601677670143545
    2. ' x' → logprob: -8.125295639038086
    3. '
' → logprob: -17.125295639038086
    4. '	x' → logprob: -17.750295639038086
    5. ' ' → logprob: -18.875295639038086
    6. ')x' → logprob: -19.000295639038086
    7. '<|end|>' → logprob: -19.875295639038086
    8. ')' → logprob: -20.250295639038086
    9. '(x' → logprob: -20.250295639038086
    10. '```' → logprob: -20.500295639038086

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014178205281496048
    2. ')
' → logprob: -4.264178276062012
    3. ' )' → logprob: -12.264178276062012
    4. '+' → logprob: -12.764178276062012
    5. '   ' → logprob: -13.139178276062012
    6. ')

' → logprob: -13.514178276062012
    7. '-' → logprob: -13.889178276062012
    8. ')
' → logprob: -13.889178276062012
    9. ' )
' → logprob: -14.389178276062012
    10. ',' → logprob: -15.139178276062012

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001093427068553865
    2. 'return' → logprob: -7.75109338760376
    3. ' return' → logprob: -7.87609338760376
    4. '
' → logprob: -9.001093864440918
    5. '	return' → logprob: -9.126093864440918
    6. '<|end|>' → logprob: -10.376093864440918
    7. '    
' → logprob: -11.501093864440918
    8. ')' → logprob: -13.001093864440918
    9. '```' → logprob: -13.376093864440918
    10. ':return' → logprob: -13.376093864440918

Token 371: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2606545388698578
    2. '   ' → logprob: -1.5106545686721802
    3. ' return' → logprob: -4.760654449462891
    4. '	return' → logprob: -9.01065444946289
    5. '
' → logprob: -12.51065444946289
    6. 'print' → logprob: -14.51065444946289
    7. 'eturn' → logprob: -15.01065444946289
    8. '```' → logprob: -15.13565444946289
    9. 'def' → logprob: -15.88565444946289
    10. '    
' → logprob: -16.01065444946289

Token 372: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2519329786300659
    2. ' ans' → logprob: -1.501932978630066
    3. '(ans' → logprob: -12.501933097839355
    4. '	ans' → logprob: -15.876933097839355
    5. 'anst' → logprob: -19.37693214416504
    6. '_ans' → logprob: -19.62693214416504
    7. 'answer' → logprob: -21.62693214416504
    8. ' ' → logprob: -22.00193214416504
    9. '
' → logprob: -22.25193214416504
    10. 'int' → logprob: -22.87693214416504

Token 373: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034525298979133368
    2. 'for' → logprob: -6.003452301025391
    3. '#' → logprob: -7.503452301025391
    4. 'if' → logprob: -8.75345230102539
    5. 'print' → logprob: -9.00345230102539
    6. '```' → logprob: -9.75345230102539
    7. 'k' → logprob: -9.87845230102539
    8. 'n' → logprob: -10.62845230102539
    9. '.' → logprob: -13.12845230102539
    10. ' for' → logprob: -13.37845230102539

Token 374: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.841743303695694e-05
    2. 'for' → logprob: -9.37509822845459
    3. 'if' → logprob: -11.62509822845459
    4. '```' → logprob: -12.87509822845459
    5. 'k' → logprob: -14.25009822845459
    6. '#' → logprob: -14.37509822845459
    7. 'n' → logprob: -15.12509822845459
    8. 'd' → logprob: -15.50009822845459
    9. ' def' → logprob: -15.75009822845459
    10. 'print' → logprob: -17.500099182128906

Token 375: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01850283332169056
    2. ' main' → logprob: -4.018502712249756
    3. 'process' → logprob: -8.143503189086914
    4. 'solve' → logprob: -10.643503189086914
    5. 'handle' → logprob: -10.768503189086914
    6. 'read' → logprob: -11.393503189086914
    7. ' process' → logprob: -12.518503189086914
    8. 'run' → logprob: -13.768503189086914
    9. ' solve' → logprob: -14.393503189086914
    10. 'def' → logprob: -15.393503189086914

Token 376: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008073674980551004
    2. '():
' → logprob: -7.125807285308838
    3. ' ():' → logprob: -13.125807762145996
    4. '():
' → logprob: -14.625807762145996
    5. '():

' → logprob: -15.750807762145996
    6. '()' → logprob: -16.00080680847168
    7. '(' → logprob: -16.37580680847168
    8. '(n' → logprob: -16.75080680847168
    9. 'def' → logprob: -18.37580680847168
    10. ':' → logprob: -18.62580680847168

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011415957473218441
    2. 'k' → logprob: -4.761415958404541
    3. ' k' → logprob: -5.886415958404541
    4. 'def' → logprob: -11.636415481567383
    5. '	k' → logprob: -11.636415481567383
    6. '```' → logprob: -13.511415481567383
    7. ',k' → logprob: -14.011415481567383
    8. '(k' → logprob: -15.261415481567383
    9. 'import' → logprob: -15.511415481567383
    10. ' def' → logprob: -16.511415481567383

Token 378: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.062373094260692596
    2. ' k' → logprob: -2.812373161315918
    3. '   ' → logprob: -7.812373161315918
    4. 'import' → logprob: -14.687373161315918
    5. '	k' → logprob: -15.437373161315918
    6. ' ' → logprob: -17.1873722076416
    7. '  ' → logprob: -18.4373722076416
    8. ' import' → logprob: -18.5623722076416
    9. 't' → logprob: -19.0623722076416
    10. 'def' → logprob: -19.6873722076416

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.790129555156454e-05
    2. ',q' → logprob: -9.625067710876465
    3. 'q' → logprob: -13.750067710876465
    4. ' ,' → logprob: -15.000067710876465
    5. '=' → logprob: -15.250067710876465
    6. ' =' → logprob: -16.50006866455078
    7. ' q' → logprob: -17.50006866455078
    8. ',
' → logprob: -17.87506866455078
    9. '_q' → logprob: -18.50006866455078
    10. '_,' → logprob: -18.75006866455078

Token 380: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.014163747429847717
    2. ' q' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.639163970947266
    4. '    ' → logprob: -16.639163970947266
    5. '  ' → logprob: -16.764163970947266
    6. '	q' → logprob: -16.764163970947266
    7. ' ' → logprob: -16.889163970947266
    8. '<|end|>' → logprob: -17.139163970947266
    9. '*q' → logprob: -17.514163970947266
    10. '_q' → logprob: -18.014163970947266

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.726595241460018e-05
    2. ',d' → logprob: -10.62503719329834
    3. ' ,' → logprob: -12.00003719329834
    4. '=' → logprob: -12.62503719329834
    5. ' =' → logprob: -12.87503719329834
    6. ',q' → logprob: -14.50003719329834
    7. ',k' → logprob: -15.62503719329834
    8. 'd' → logprob: -16.125038146972656
    9. '_,' → logprob: -17.625038146972656
    10. 'q' → logprob: -18.000038146972656

Token 382: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0699414312839508
    2. ' d' → logprob: -2.694941520690918
    3. '   ' → logprob: -13.444941520690918
    4. ' =' → logprob: -13.569941520690918
    5. '*d' → logprob: -13.944941520690918
    6. '  ' → logprob: -15.069941520690918
    7. 'data' → logprob: -15.194941520690918
    8. '=' → logprob: -15.694941520690918
    9. '    ' → logprob: -15.819941520690918
    10. '_d' → logprob: -15.944941520690918

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519306540489197
    2. ' =' → logprob: -1.5019307136535645
    3. ',' → logprob: -13.751930236816406
    4. '   ' → logprob: -15.751930236816406
    5. ' ' → logprob: -16.376930236816406
    6. ' =
' → logprob: -16.876930236816406
    7. '  ' → logprob: -17.376930236816406
    8. ')' → logprob: -17.376930236816406
    9. '=
' → logprob: -17.376930236816406
    10. '	' → logprob: -18.001930236816406

Token 384: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3132617771625519
    2. 'read' → logprob: -1.3132617473602295
    3. '	read' → logprob: -17.688261032104492
    4. '   ' → logprob: -19.188261032104492
    5. '_read' → logprob: -19.563261032104492
    6. '(read' → logprob: -19.938261032104492
    7. '.read' → logprob: -21.063261032104492
    8. ' ' → logprob: -21.313261032104492
    9. 'Read' → logprob: -21.938261032104492
    10. '  ' → logprob: -22.313261032104492

Token 385: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.650518920039758e-06
    2. '_inputs' → logprob: -13.750003814697266
    3. '_in' → logprob: -14.625003814697266
    4. '_line' → logprob: -14.625003814697266
    5. 'input' → logprob: -14.875003814697266
    6. '_' → logprob: -15.000003814697266
    7. ' _' → logprob: -15.000003814697266
    8. '_output' → logprob: -15.375003814697266
    9. '```' → logprob: -15.875003814697266
    10. '_code' → logprob: -16.000003814697266

Token 386: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03897371143102646
    2. '()
' → logprob: -3.288973808288574
    3. '   ' → logprob: -7.663973808288574
    4. '()' → logprob: -8.163973808288574
    5. 'for' → logprob: -8.788973808288574
    6. '    
' → logprob: -11.913973808288574
    7. 'def' → logprob: -12.038973808288574
    8. '```' → logprob: -12.163973808288574
    9. ' for' → logprob: -12.913973808288574
    10. '
' → logprob: -13.538973808288574

Token 387: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03541242703795433
    2. '   ' → logprob: -4.160412311553955
    3. ' for' → logprob: -4.160412311553955
    4. '```' → logprob: -5.785412311553955
    5. '	for' → logprob: -7.785412311553955
    6. '<|end|>' → logprob: -9.785412788391113
    7. 'while' → logprob: -10.785412788391113
    8. '    
' → logprob: -11.785412788391113
    9. '
' → logprob: -12.535412788391113
    10. '  ' → logprob: -13.285412788391113

Token 388: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.2994620242971e-06
    2. ' for' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.125008583068848
    4. '```' → logprob: -16.62500762939453
    5. '
' → logprob: -20.37500762939453
    6. '	for' → logprob: -20.75000762939453
    7. 'results' (adapté à ' results') → logprob: -21.37500762939453
    8. 'from' → logprob: -21.75000762939453
    9. 'while' → logprob: -21.87500762939453
    10. '``' → logprob: -22.37500762939453

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196970492601395
    2. '=' → logprob: -2.811969757080078
    3. '=[]' → logprob: -13.436969757080078
    4. '[]' → logprob: -15.811969757080078
    5. ':' → logprob: -16.311969757080078
    6. '   ' → logprob: -16.561969757080078
    7. ' ' → logprob: -16.686969757080078
    8. ',' → logprob: -16.686969757080078
    9. '=[]
' → logprob: -17.061969757080078
    10. '[' → logprob: -18.186969757080078

Token 390: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13532505929470062
    2. '[]
' → logprob: -2.1353249549865723
    3. ' []' → logprob: -4.885324954986572
    4. ' []
' → logprob: -7.135324954986572
    5. '[' → logprob: -11.88532543182373
    6. '[]

' → logprob: -13.38532543182373
    7. '[
' → logprob: -15.63532543182373
    8. ' [' → logprob: -16.510324478149414
    9. ' []

' → logprob: -17.010324478149414
    10. '[]"' → logprob: -18.760324478149414

Token 391: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46743378043174744
    2. ' for' → logprob: -1.2174338102340698
    3. '	for' → logprob: -3.0924336910247803
    4. '   ' → logprob: -3.4674336910247803
    5. '
' → logprob: -8.09243392944336
    6. '```' → logprob: -8.09243392944336
    7. '<|end|>' → logprob: -9.21743392944336
    8. '    
' → logprob: -10.46743392944336
    9. '	
' → logprob: -10.84243392944336
    10. 'def' → logprob: -11.46743392944336

Token 392: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.941850526549388e-06
    2. ' for' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.12500762939453
    4. '```' → logprob: -19.12500762939453
    5. '	for' → logprob: -20.75000762939453
    6. '
' → logprob: -22.87500762939453
    7. '    
' → logprob: -24.62500762939453
    8. 'while' → logprob: -24.75000762939453
    9. '``' → logprob: -24.87500762939453
    10. 'import' → logprob: -25.62500762939453

Token 393: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020389800192788243
    2. ' _' → logprob: -8.500204086303711
    3. '_i' → logprob: -14.750204086303711
    4. '_query' → logprob: -17.62520408630371
    5. '_=' → logprob: -20.00020408630371
    6. ' i' → logprob: -20.25020408630371
    7. '_in' → logprob: -21.50020408630371
    8. '__' → logprob: -21.75020408630371
    9. '_q' → logprob: -21.75020408630371
    10. ' ' → logprob: -22.12520408630371

Token 394: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23591069877147675
    2. ' range' → logprob: -1.7359106540679932
    3. ' in' → logprob: -3.485910654067993
    4. 'in' → logprob: -5.735910892486572
    5. '_' → logprob: -10.235910415649414
    6. ' ' → logprob: -11.735910415649414
    7. ' _' → logprob: -11.860910415649414
    8. '  ' → logprob: -13.735910415649414
    9. '   ' → logprob: -14.485910415649414
    10. '	range' → logprob: -14.985910415649414

Token 395: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1517960956552997e-05
    2. ' range' → logprob: -11.500011444091797
    3. '(range' → logprob: -13.875011444091797
    4. 'in' → logprob: -16.500011444091797
    5. 'ange' → logprob: -16.875011444091797
    6. 'x' → logprob: -16.875011444091797
    7. 'input' → logprob: -17.000011444091797
    8. '   ' → logprob: -17.000011444091797
    9. '	range' → logprob: -17.750011444091797
    10. 'd' → logprob: -18.250011444091797

Token 396: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0036662293132394552
    2. ' q' → logprob: -5.753666400909424
    3. 'q' → logprob: -7.753666400909424
    4. ' (' → logprob: -10.253665924072266
    5. '(' → logprob: -10.753665924072266
    6. '	q' → logprob: -13.253665924072266
    7. '   ' → logprob: -14.628665924072266
    8. '_q' → logprob: -16.503665924072266
    9. ' ' → logprob: -16.628665924072266
    10. ',' → logprob: -16.878665924072266

Token 397: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17464998364448547
    2. '):
' → logprob: -1.924649953842163
    3. ')' → logprob: -4.299650192260742
    4. ':' → logprob: -8.174650192260742
    5. '   ' → logprob: -8.674650192260742
    6. ' ):' → logprob: -8.674650192260742
    7. ' ):
' → logprob: -10.424650192260742
    8. ' )' → logprob: -10.924650192260742
    9. '<|end|>' → logprob: -11.049650192260742
    10. '():
' → logprob: -11.424650192260742

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03195496276021004
    2. '(n' → logprob: -4.406954765319824
    3. 'n' → logprob: -5.531954765319824
    4. '   ' → logprob: -5.531954765319824
    5. ' n' → logprob: -5.531954765319824
    6. '	   ' → logprob: -6.531954765319824
    7. '```' → logprob: -6.906954765319824
    8. 'input' → logprob: -6.906954765319824
    9. '	' → logprob: -7.406954765319824
    10. '(' → logprob: -7.406954765319824

Token 399: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018406866118311882
    2. ' n' → logprob: -4.018406867980957
    3. '   ' → logprob: -8.268406867980957
    4. '	n' → logprob: -15.018406867980957
    5. '       ' → logprob: -16.51840591430664
    6. '  ' → logprob: -17.01840591430664
    7. '```' → logprob: -17.51840591430664
    8. '(n' → logprob: -17.64340591430664
    9. '_n' → logprob: -17.76840591430664
    10. ' ' → logprob: -19.01840591430664

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.50000286102295
    3. ',x' → logprob: -13.50000286102295
    4. '‌,' → logprob: -16.750003814697266
    5. '=' → logprob: -17.375003814697266
    6. ',k' → logprob: -17.625003814697266
    7. ',n' → logprob: -17.625003814697266
    8. 'x' → logprob: -17.875003814697266
    9. ',
' → logprob: -18.000003814697266
    10. '_,' → logprob: -18.375003814697266

Token 401: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28149935603141785
    2. 'x' → logprob: -1.4064993858337402
    3. '<|end|>' → logprob: -8.156498908996582
    4. ' ' → logprob: -9.906498908996582
    5. 's' → logprob: -12.406498908996582
    6. ',x' → logprob: -13.656498908996582
    7. 'space' → logprob: -13.781498908996582
    8. ' read' → logprob: -13.781498908996582
    9. 'read' → logprob: -14.031498908996582
    10. ' ' → logprob: -14.281498908996582

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -12.000009536743164
    3. ',m' → logprob: -13.375009536743164
    4. '=' → logprob: -13.500009536743164
    5. '<|end|>' → logprob: -15.375009536743164
    6. '‌,' → logprob: -16.500009536743164
    7. ',
' → logprob: -17.625009536743164
    8. ',user' → logprob: -17.750009536743164
    9. ' =' → logprob: -18.000009536743164
    10. '_,' → logprob: -18.125009536743164

Token 403: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02324547804892063
    2. ' m' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.648244857788086
    4. '	m' → logprob: -18.398244857788086
    5. '<|end|>' → logprob: -18.523244857788086
    6. '   ' → logprob: -19.023244857788086
    7. '    ' → logprob: -19.648244857788086
    8. '  ' → logprob: -20.273244857788086
    9. ' ' → logprob: -20.648244857788086
    10. '_m' → logprob: -21.148244857788086

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193798542022705
    2. '=' → logprob: -1.501937985420227
    3. ')' → logprob: -11.876937866210938
    4. ')=' → logprob: -14.501937866210938
    5. ' =
' → logprob: -15.001937866210938
    6. '<|end|>' → logprob: -15.501937866210938
    7. '=get' → logprob: -15.626937866210938
    8. '=
' → logprob: -15.751937866210938
    9. '=input' → logprob: -16.126937866210938
    10. '   ' → logprob: -16.126937866210938

Token 405: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.07892558723688126
    2. 'read' → logprob: -2.578925609588623
    3. ' map' → logprob: -10.328925132751465
    4. 'map' → logprob: -13.078925132751465
    5. '	read' → logprob: -13.828925132751465
    6. '(read' → logprob: -17.70392608642578
    7. '   ' → logprob: -18.07892608642578
    8. '_read' → logprob: -18.57892608642578
    9. '    ' → logprob: -19.07892608642578
    10. ' ' → logprob: -19.82892608642578

Token 406: '_query' (ID: 13012)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1610931009054184
    2. '().' → logprob: -1.9110931158065796
    3. '()
' → logprob: -7.661093235015869
    4. '())' → logprob: -8.661092758178711
    5. '_split' → logprob: -10.411092758178711
    6. '();' → logprob: -10.536092758178711
    7. '()(' → logprob: -10.786092758178711
    8. 'split' → logprob: -11.036092758178711
    9. '()[' → logprob: -11.286092758178711
    10. '()>' → logprob: -11.411092758178711

Token 407: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4944955110549927
    2. '
' → logprob: -1.4944955110549927
    3. '<|end|>' → logprob: -2.119495391845703
    4. ')' → logprob: -4.244495391845703
    5. '        
' → logprob: -4.494495391845703
    6. '<|end|>' → logprob: -4.619495391845703
    7. '  
' → logprob: -6.494495391845703
    8. '   ' → logprob: -6.619495391845703
    9. '()' → logprob: -6.619495391845703
    10. ',' → logprob: -7.244495391845703

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021554389968514442
    2. '
' → logprob: -4.021554470062256
    3. '   ' → logprob: -7.021554470062256
    4. '        
' → logprob: -7.271554470062256
    5. 'results' → logprob: -7.646554470062256
    6. ' results' → logprob: -8.021553993225098
    7. '<|end|>' → logprob: -8.021553993225098
    8. '```' → logprob: -8.271553993225098
    9. '  
' → logprob: -9.146553993225098
    10. '    
' → logprob: -9.396553993225098

Token 409: ' ans' (ID: 3345)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.9454293251037598
    2. ' ans' → logprob: -1.1954293251037598
    3. ' results' → logprob: -1.6954293251037598
    4. 'result' → logprob: -2.6954293251037598
    5. 'results' → logprob: -3.3204293251037598
    6. 'ans' (adapté à ' ans') → logprob: -4.57042932510376
    7. '       ' → logprob: -5.19542932510376
    8. ' res' → logprob: -6.07042932510376
    9. ' answer' → logprob: -6.32042932510376
    10. 'res' → logprob: -6.94542932510376

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' =
' → logprob: -15.600207328796387
    4. ')' → logprob: -16.47520637512207
    5. '  ' → logprob: -16.60020637512207
    6. '.append' → logprob: -16.60020637512207
    7. '   ' → logprob: -16.97520637512207
    8. ' ' → logprob: -17.22520637512207
    9. ',' → logprob: -17.60020637512207
    10. ' +=' → logprob: -17.72520637512207

Token 411: ' handle' (ID: 5318)
  Prédit: ' handle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handle' → logprob: -0.25192973017692566
    2. 'handle' → logprob: -1.501929759979248
    3. '	handle' → logprob: -14.50192928314209
    4. '(handle' → logprob: -15.62692928314209
    5. '_handle' → logprob: -17.251930236816406
    6. '.handle' → logprob: -18.376930236816406
    7. '   ' → logprob: -21.251930236816406
    8. ' ' → logprob: -22.126930236816406
    9. ' ' → logprob: -22.376930236816406
    10. 'Handle' → logprob: -22.501930236816406

Token 412: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -6.749814019713085e-06
    2. 'single' → logprob: -12.375006675720215
    3. '(k' → logprob: -13.750006675720215
    4. '_' → logprob: -15.000006675720215
    5. '_SINGLE' → logprob: -15.375006675720215
    6. '```' → logprob: -15.875006675720215
    7. '(' → logprob: -16.00000762939453
    8. '(n' → logprob: -16.12500762939453
    9. '(single' → logprob: -16.25000762939453
    10. '_s' → logprob: -16.62500762939453

Token 413: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -6.2729995988775045e-06
    2. 'query' → logprob: -12.000006675720215
    3. '_answer' → logprob: -17.2500057220459
    4. '_question' → logprob: -17.7500057220459
    5. ' query' → logprob: -18.0000057220459
    6. '_' → logprob: -19.6250057220459
    7. '
' → logprob: -20.2500057220459
    8. '_QUERY' → logprob: -20.2500057220459
    9. ' _' → logprob: -20.3750057220459
    10. '(query' → logprob: -20.6250057220459

Token 414: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.50000286102295
    4. '(
' → logprob: -16.000001907348633
    5. ' k' → logprob: -19.875001907348633
    6. 'k' → logprob: -20.250001907348633
    7. '(K' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.500001907348633
    9. '(kernel' → logprob: -20.625001907348633
    10. '
' → logprob: -20.875001907348633

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032196608372032642
    2. ',d' → logprob: -5.7532196044921875
    3. ' ,' → logprob: -10.128219604492188
    4. ',
' → logprob: -13.753219604492188
    5. 'd' → logprob: -14.753219604492188
    6. '   ' → logprob: -15.003219604492188
    7. ' d' → logprob: -16.128219604492188
    8. '```' → logprob: -16.878219604492188
    9. '
' → logprob: -17.878219604492188
    10. '       ' → logprob: -18.253219604492188

Token 416: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029764611274003983
    2. ' d' → logprob: -3.5297646522521973
    3. '   ' → logprob: -11.279764175415039
    4. '       ' → logprob: -14.279764175415039
    5. '
' → logprob: -15.404764175415039
    6. ' ' → logprob: -15.654764175415039
    7. '    ' → logprob: -15.779764175415039
    8. '	d' → logprob: -15.904764175415039
    9. '  ' → logprob: -16.40476417541504
    10. '      ' → logprob: -17.27976417541504

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.750031471252441
    3. ',n' → logprob: -11.625031471252441
    4. '   ' → logprob: -14.250031471252441
    5. ',
' → logprob: -15.000031471252441
    6. ',k' → logprob: -16.500032424926758
    7. ',x' → logprob: -17.125032424926758
    8. 'n' → logprob: -18.000032424926758
    9. '```' → logprob: -18.250032424926758
    10. '  ' → logprob: -18.375032424926758

Token 418: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889143377542496
    2. ' n' → logprob: -2.5788915157318115
    3. '   ' → logprob: -13.57889175415039
    4. '	n' → logprob: -15.20389175415039
    5. '    ' → logprob: -15.82889175415039
    6. '
' → logprob: -16.82889175415039
    7. ')n' → logprob: -17.20389175415039
    8. '       ' → logprob: -17.57889175415039
    9. '_n' → logprob: -18.32889175415039
    10. '  ' → logprob: -18.45389175415039

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008940708357840776
    2. ',x' → logprob: -7.250894069671631
    3. ' ,' → logprob: -8.625894546508789
    4. '   ' → logprob: -13.000894546508789
    5. ',
' → logprob: -13.375894546508789
    6. 'x' → logprob: -14.125894546508789
    7. ' x' → logprob: -16.00089454650879
    8. '```' → logprob: -16.12589454650879
    9. '=' → logprob: -17.37589454650879
    10. '
' → logprob: -17.37589454650879

Token 420: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692810595035553
    2. ' x' → logprob: -2.1269280910491943
    3. '	x' → logprob: -18.126928329467773
    4. '
' → logprob: -19.126928329467773
    5. '   ' → logprob: -19.126928329467773
    6. ' ' → logprob: -19.626928329467773
    7. ')x' → logprob: -20.876928329467773
    8. '    ' → logprob: -21.376928329467773
    9. ' 
' → logprob: -21.376928329467773
    10. ' ' → logprob: -21.876928329467773

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013195235515013337
    2. ',m' → logprob: -6.751319408416748
    3. ' ,' → logprob: -8.876319885253906
    4. 'm' → logprob: -11.626319885253906
    5. ',
' → logprob: -14.876319885253906
    6. '```' → logprob: -15.126319885253906
    7. ')' → logprob: -18.126319885253906
    8. ' m' → logprob: -18.501319885253906
    9. '   ' → logprob: -18.626319885253906
    10. '‌,' → logprob: -19.001319885253906

Token 422: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889022678136826
    2. ' m' → logprob: -2.578890323638916
    3. '	m' → logprob: -15.453889846801758
    4. ' ' → logprob: -16.328889846801758
    5. '   ' → logprob: -16.453889846801758
    6. ' м' → logprob: -16.953889846801758
    7. '    ' → logprob: -17.328889846801758
    8. ')m' → logprob: -18.078889846801758
    9. '```' → logprob: -18.078889846801758
    10. 'м' → logprob: -18.328889846801758

Token 423: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07921219617128372
    2. ')' → logprob: -2.579212188720703
    3. '       ' → logprob: -8.079212188720703
    4. ')
' → logprob: -11.329212188720703
    5. '   ' → logprob: -15.329212188720703
    6. ' )
' → logprob: -16.329212188720703
    7. ')

' → logprob: -16.579212188720703
    8. ')`
' → logprob: -17.829212188720703
    9. ')\
' → logprob: -18.579212188720703
    10. ' )' → logprob: -18.829212188720703

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013738969573751092
    2. '
' → logprob: -10.125137329101562
    3. 'results' → logprob: -10.125137329101562
    4. '   ' → logprob: -10.375137329101562
    5. '<|end|>' → logprob: -11.375137329101562
    6. '```' → logprob: -11.750137329101562
    7. ' results' → logprob: -12.625137329101562
    8. '        
' → logprob: -14.000137329101562
    9. '[' → logprob: -14.625137329101562
    10. '           ' → logprob: -14.750137329101562

Token 425: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.002242558402940631
    2. ' results' → logprob: -6.252242565155029
    3. '       ' → logprob: -8.752242088317871
    4. '   ' → logprob: -9.377242088317871
    5. '	results' → logprob: -9.627242088317871
    6. '
' → logprob: -13.252242088317871
    7. '```' → logprob: -13.252242088317871
    8. '(results' → logprob: -14.127242088317871
    9. '.results' → logprob: -15.252242088317871
    10. '``' → logprob: -15.377242088317871

Token 426: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001930301426909864
    2. '.' → logprob: -6.251930236816406
    3. '.extend' → logprob: -14.126930236816406
    4. '.app' → logprob: -14.626930236816406
    5. '.push' → logprob: -15.126930236816406
    6. '.Append' → logprob: -16.001930236816406
    7. '.ap' → logprob: -16.376930236816406
    8. '.setdefault' → logprob: -17.126930236816406
    9. '​.' → logprob: -17.376930236816406
    10. '.add' → logprob: -17.751930236816406

Token 427: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. 'ans' → logprob: -15.87500286102295
    4. '(
' → logprob: -17.750003814697266
    5. '(answer' → logprob: -18.250003814697266
    6. '(str' → logprob: -19.250003814697266
    7. '(an' → logprob: -19.875003814697266
    8. '	ans' → logprob: -20.625003814697266
    9. ' ans' → logprob: -21.375003814697266
    10. ' (' → logprob: -21.375003814697266

Token 428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008658776991069317
    2. ')
' → logprob: -4.7586588859558105
    3. '
' → logprob: -11.133658409118652
    4. '   ' → logprob: -11.258658409118652
    5. ')return' → logprob: -11.758658409118652
    6. '<|end|>' → logprob: -12.883658409118652
    7. ' )' → logprob: -13.383658409118652
    8. '```' → logprob: -14.383658409118652
    9. '}' → logprob: -14.633658409118652
    10. '),' → logprob: -14.883658409118652

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2954269051551819
    2. '
' → logprob: -1.420426845550537
    3. '```' → logprob: -4.920426845550537
    4. 'for' → logprob: -5.420426845550537
    5. 'return' → logprob: -6.795426845550537
    6. '    
' → logprob: -7.170426845550537
    7. 'print' → logprob: -7.920426845550537
    8. ' for' → logprob: -9.295427322387695
    9. ' return' → logprob: -10.670427322387695
    10. '  
' → logprob: -11.045427322387695

Token 430: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1208043023943901
    2. ' for' → logprob: -2.3708043098449707
    3. '   ' → logprob: -4.620804309844971
    4. 'print' → logprob: -5.120804309844971
    5. 'return' (adapté à ' return') → logprob: -5.870804309844971
    6. '
' → logprob: -6.620804309844971
    7. ' return' → logprob: -8.120803833007812
    8. '```' → logprob: -9.495803833007812
    9. ' print' → logprob: -10.120803833007812
    10. '    
' → logprob: -12.745803833007812

Token 431: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.048587486147880554
    2. ' results' → logprob: -3.0485875606536865
    3. '	results' → logprob: -16.673587799072266
    4. '(results' → logprob: -17.173587799072266
    5. '
' → logprob: -20.548587799072266
    6. '[' → logprob: -20.923587799072266
    7. '.results' → logprob: -21.048587799072266
    8. 'result' → logprob: -21.423587799072266
    9. '_results' → logprob: -22.048587799072266
    10. 'Results' → logprob: -22.798587799072266

Token 432: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009650575229898095
    2. 'main' → logprob: -7.000965118408203
    3. ' run' → logprob: -10.000965118408203
    4. ' print' → logprob: -12.000965118408203
    5. ' test' → logprob: -14.000965118408203
    6. '_main' → logprob: -14.375965118408203
    7. 'run' → logprob: -15.625965118408203
    8. 'print' → logprob: -15.750965118408203
    9. ' output' → logprob: -16.250965118408203
    10. ' solve' → logprob: -16.750965118408203

Token 435: '_output' (ID: 16732)
  Prédit: '_results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.06407326459884644
    2. '(' → logprob: -3.439073324203491
    3. '_' → logprob: -3.689073324203491
    4. '_result' → logprob: -6.189073085784912
    5. '_(' → logprob: -6.314073085784912
    6. '("_' → logprob: -7.939073085784912
    7. '_answers' → logprob: -9.06407356262207
    8. '_output' → logprob: -9.18907356262207
    9. '_s' → logprob: -9.18907356262207
    10. '(_' → logprob: -9.43907356262207

Token 436: '(results' (ID: 42655)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.39329224824905396
    2. '(results' → logprob: -1.1432921886444092
    3. '(' → logprob: -5.393292427062988
    4. '()' → logprob: -6.643292427062988
    5. '():
' → logprob: -8.018292427062988
    6. ' ():' → logprob: -8.893292427062988
    7. '(*' → logprob: -11.018292427062988
    8. '()(' → logprob: -11.268292427062988
    9. '_' → logprob: -11.893292427062988
    10. '_results' → logprob: -11.893292427062988

Token 437: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007256373763084412
    2. '):
' → logprob: -5.132256507873535
    3. '():' → logprob: -6.757256507873535
    4. '()' → logprob: -9.757256507873535
    5. '():
' → logprob: -10.007256507873535
    6. '(results' → logprob: -10.257256507873535
    7. ')' → logprob: -11.007256507873535
    8. ' ):' → logprob: -12.507256507873535
    9. '   ' → logprob: -13.132256507873535
    10. '):
' → logprob: -13.632256507873535

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03954693302512169
    2. ' for' → logprob: -3.2895469665527344
    3. 'for' → logprob: -6.539546966552734
    4. '```' → logprob: -9.789546966552734
    5. '	for' → logprob: -13.664546966552734
    6. 'def' → logprob: -13.664546966552734
    7. '    
' → logprob: -15.414546966552734
    8. ' print' → logprob: -15.789546966552734
    9. '``' → logprob: -15.914546966552734
    10. '   ' → logprob: -16.164546966552734

Token 439: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002613358374219388
    2. ' for' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.750261306762695
    4. '
' → logprob: -19.750261306762695
    5. '```' → logprob: -19.875261306762695
    6. 'def' → logprob: -20.750261306762695
    7. '	for' → logprob: -21.375261306762695
    8. 'print' → logprob: -23.625261306762695
    9. 'For' → logprob: -24.500261306762695
    10. '_for' → logprob: -25.125261306762695

Token 440: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.028225725516676903
    2. 'result' → logprob: -3.7782256603240967
    3. 'ans' → logprob: -6.028225898742676
    4. ' res' → logprob: -6.028225898742676
    5. 'r' → logprob: -9.278225898742676
    6. ' ans' → logprob: -10.028225898742676
    7. ' result' → logprob: -11.528225898742676
    8. 'answer' → logprob: -14.653225898742676
    9. ' r' → logprob: -14.778225898742676
    10. 'item' → logprob: -17.65322494506836

Token 441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012057077838107944
    2. 'in' → logprob: -6.751205921173096
    3. '   ' → logprob: -10.876205444335938
    4. ' ' → logprob: -11.626205444335938
    5. '	in' → logprob: -13.626205444335938
    6. '  ' → logprob: -13.751205444335938
    7. 'ult' → logprob: -14.251205444335938
    8. 's' → logprob: -14.376205444335938
    9. 't' → logprob: -14.501205444335938
    10. 'i' → logprob: -14.501205444335938

Token 442: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0015023599844425917
    2. ' results' → logprob: -6.501502513885498
    3. '(results' → logprob: -19.001502990722656
    4. '	results' → logprob: -19.626502990722656
    5. '.results' → logprob: -20.751502990722656
    6. 'result' → logprob: -22.751502990722656
    7. '_results' → logprob: -23.001502990722656
    8. 'Results' → logprob: -23.501502990722656
    9. '   ' → logprob: -24.001502990722656
    10. '
' → logprob: -24.501502990722656

Token 443: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07689446210861206
    2. ':
' → logprob: -3.576894521713257
    3. ':' → logprob: -3.826894521713257
    4. 'print' → logprob: -3.826894521713257
    5. '   ' → logprob: -6.326894283294678
    6. ' print' → logprob: -7.701894283294678
    7. ',' → logprob: -9.701894760131836
    8. '```' → logprob: -10.076894760131836
    9. '<|end|>' → logprob: -10.451894760131836
    10. '
' → logprob: -10.826894760131836

Token 444: '       ' (ID: 309)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.30563172698020935
    2. '   ' → logprob: -2.055631637573242
    3. '       ' → logprob: -2.055631637573242
    4. 'print' → logprob: -4.930631637573242
    5. '```' → logprob: -9.930631637573242
    6. '	print' → logprob: -11.055631637573242
    7. '    
' → logprob: -11.430631637573242
    8. '    ' → logprob: -11.555631637573242
    9. '
' → logprob: -12.805631637573242
    10. '     ' → logprob: -13.055631637573242

Token 445: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00015908108616713434
    2. ' print' → logprob: -8.75015926361084
    3. '```' → logprob: -14.75015926361084
    4. '   ' → logprob: -15.50015926361084
    5. '
' → logprob: -17.625158309936523
    6. '``' → logprob: -20.375158309936523
    7. '	print' → logprob: -21.500158309936523
    8. '       ' → logprob: -21.625158309936523
    9. '`' → logprob: -23.125158309936523
    10. 'printf' → logprob: -23.375158309936523

Token 446: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0009124171338044107
    2. 'res' → logprob: -7.000912189483643
    3. '(' → logprob: -14.0009126663208
    4. ' res' → logprob: -15.6259126663208
    5. '$res' → logprob: -19.375911712646484
    6. ',res' → logprob: -20.000911712646484
    7. '(
' → logprob: -20.250911712646484
    8. '	res' → logprob: -20.375911712646484
    9. '=res' → logprob: -21.125911712646484
    10. '_res' → logprob: -22.125911712646484

Token 447: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. '()' → logprob: -16.625
    4. ' )' → logprob: -17.375
    5. '')' → logprob: -17.625
    6. ')`' → logprob: -17.625
    7. '())' → logprob: -18.125
    8. '`)' → logprob: -18.125
    9. '))' → logprob: -18.25
    10. '}' → logprob: -18.5

Token 448: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20748187601566315
    2. 'def' → logprob: -1.957481861114502
    3. '#' → logprob: -3.832481861114502
    4. '```' → logprob: -3.957481861114502
    5. '<|end|>' → logprob: -5.707481861114502
    6. ' if' → logprob: -7.457481861114502
    7. 'for' → logprob: -7.582481861114502
    8. 'print' → logprob: -7.707481861114502
    9. 'k' → logprob: -8.95748233795166
    10. '
' → logprob: -9.33248233795166

Token 449: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024764856789261103
    2. ' main' → logprob: -6.002476692199707
    3. 'if' → logprob: -14.502476692199707
    4. '__' → logprob: -15.627476692199707
    5. 'run' → logprob: -16.50247573852539
    6. '_main' → logprob: -17.50247573852539
    7. '	main' → logprob: -18.75247573852539
    8. ' run' → logprob: -19.87747573852539
    9. 'def' → logprob: -20.75247573852539
    10. ' __' → logprob: -21.37747573852539

Token 450: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.0868278524139896e-05
    2. '():
' → logprob: -10.25006103515625
    3. ' ():' → logprob: -10.75006103515625
    4. '()' → logprob: -13.37506103515625
    5. '(' → logprob: -13.62506103515625
    6. '_' → logprob: -14.25006103515625
    7. '():
' → logprob: -15.25006103515625
    8. '()>' → logprob: -16.00006103515625
    9. ':' → logprob: -16.37506103515625
    10. '():

' → logprob: -16.50006103515625

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014610696816816926
    2. ' k' → logprob: -7.376461029052734
    3. 'def' → logprob: -7.876461029052734
    4. ' results' → logprob: -8.251461029052734
    5. ' def' → logprob: -9.751461029052734
    6. ' if' → logprob: -10.001461029052734
    7. 'k' → logprob: -10.251461029052734
    8. '	k' → logprob: -11.376461029052734
    9. 'results' → logprob: -11.501461029052734
    10. '    
' → logprob: -11.501461029052734

Token 452: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.3765754699707031
    2. ' results' → logprob: -1.3765754699707031
    3. 'k' → logprob: -3.126575469970703
    4. ' k' → logprob: -4.126575469970703
    5. '   ' → logprob: -6.626575469970703
    6. ' ' → logprob: -11.501575469970703
    7. '	results' → logprob: -12.251575469970703
    8. 'res' → logprob: -13.501575469970703
    9. '	k' → logprob: -14.001575469970703
    10. '    
' → logprob: -14.251575469970703

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. '=create' → logprob: -15.825939178466797
    4. '＝' → logprob: -17.450939178466797
    5. ' =
' → logprob: -17.575939178466797
    6. '=get' → logprob: -17.700939178466797
    7. ' +=' → logprob: -18.450939178466797
    8. '	' → logprob: -18.450939178466797
    9. ' ' → logprob: -18.450939178466797
    10. '.extend' → logprob: -18.700939178466797

Token 454: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.06196768581867218
    2. ' solve' → logprob: -2.811967611312866
    3. '.solve' → logprob: -17.186967849731445
    4. '   ' → logprob: -17.686967849731445
    5. ' ' → logprob: -18.186967849731445
    6. 's' → logprob: -19.186967849731445
    7. 'sol' → logprob: -19.436967849731445
    8. '
' → logprob: -19.436967849731445
    9. ' ' → logprob: -19.686967849731445
    10. '(s' → logprob: -19.811967849731445

Token 455: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.0380459688603878
    2. '()' → logprob: -3.288045883178711
    3. '()
' → logprob: -12.538045883178711
    4. '()

' → logprob: -14.663045883178711
    5. '()\' → logprob: -15.538045883178711
    6. '   ' → logprob: -15.663045883178711
    7. '()`' → logprob: -16.53804588317871
    8. '(
' → logprob: -16.53804588317871
    9. '():
' → logprob: -17.28804588317871
    10. '();
' → logprob: -18.28804588317871

Token 456: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09030931442975998
    2. '   ' → logprob: -2.8403093814849854
    3. 'print' → logprob: -3.5903093814849854
    4. ' print' → logprob: -8.090309143066406
    5. '
' → logprob: -10.715309143066406
    6. '    
' → logprob: -11.215309143066406
    7. '```' → logprob: -12.090309143066406
    8. '	print' → logprob: -12.590309143066406
    9. '  
' → logprob: -13.590309143066406
    10. '(print' → logprob: -14.215309143066406

Token 457: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0206720617134124e-05
    2. ' print' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.500009536743164
    4. '
' → logprob: -21.375009536743164
    5. '	print' → logprob: -21.500009536743164
    6. '.print' → logprob: -23.250009536743164
    7. '#print' → logprob: -23.625009536743164
    8. '_print' → logprob: -23.625009536743164
    9. '(print' → logprob: -23.625009536743164
    10. '```' → logprob: -23.875009536743164

Token 458: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.02074892818927765
    2. '_' → logprob: -3.8957488536834717
    3. '_results' → logprob: -9.89574909210205
    4. '(' → logprob: -10.14574909210205
    5. '(_' → logprob: -10.52074909210205
    6. '("_' → logprob: -10.77074909210205
    7. '_outputs' → logprob: -10.77074909210205
    8. '_(' → logprob: -10.89574909210205
    9. '('_' → logprob: -11.52074909210205
    10. ' _' → logprob: -12.27074909210205

Token 459: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.25000286102295
    3. ' (' → logprob: -13.87500286102295
    4. 'results' → logprob: -20.500001907348633
    5. '(resources' → logprob: -20.750001907348633
    6. '(
' → logprob: -20.875001907348633
    7. '(values' → logprob: -21.000001907348633
    8. '()' → logprob: -21.125001907348633
    9. '(res' → logprob: -21.125001907348633
    10. '(events' → logprob: -22.000001907348633

Token 460: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.946405094116926e-05
    2. '())' → logprob: -9.625079154968262
    3. '()' → logprob: -11.625079154968262
    4. ')
' → logprob: -12.375079154968262
    5. ' )' → logprob: -16.250080108642578
    6. ')`' → logprob: -16.875080108642578
    7. '))' → logprob: -17.250080108642578
    8. ')

' → logprob: -17.250080108642578
    9. '`)' → logprob: -18.000080108642578
    10. '')' → logprob: -18.625080108642578

Token 461: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005740713328123093
    2. '
' → logprob: -5.505740642547607
    3. 'main' → logprob: -6.505740642547607
    4. '\n' → logprob: -9.130741119384766
    5. '<|end|>' → logprob: -10.755741119384766
    6. ' if' → logprob: -11.005741119384766
    7. '```' → logprob: -11.255741119384766
    8. '(main' → logprob: -13.255741119384766
    9. ' main' → logprob: -13.505741119384766
    10. '#' → logprob: -13.880741119384766

Token 462: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6350160837173462
    2. ' __' → logprob: -0.7600160837173462
    3. '_name' → logprob: -6.760015964508057
    4. 'name' → logprob: -6.760015964508057
    5. '_' → logprob: -10.010016441345215
    6. ' ' → logprob: -10.510016441345215
    7. '___' → logprob: -11.385016441345215
    8. 'Name' → logprob: -12.385016441345215
    9. ' ' → logprob: -13.010016441345215
    10. ' name' → logprob: -14.010016441345215

Token 463: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028320755809545517
    2. ' ==' → logprob: -3.903320789337158
    3. '==' → logprob: -5.028320789337158
    4. ' __' → logprob: -7.153320789337158
    5. '_' → logprob: -8.1533203125
    6. '=="' → logprob: -9.6533203125
    7. '=='' → logprob: -11.0283203125
    8. '"' → logprob: -11.2783203125
    9. '=' → logprob: -11.5283203125
    10. ''' → logprob: -12.2783203125

Token 464: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.478889215737581e-05
    2. '__.__' → logprob: -10.250054359436035
    3. '==' → logprob: -11.000054359436035
    4. ' ==' → logprob: -14.375054359436035
    5. '"' → logprob: -14.375054359436035
    6. '__.' → logprob: -14.500054359436035
    7. '=="' → logprob: -15.000054359436035
    8. '___' → logprob: -15.625054359436035
    9. '__["' → logprob: -16.12505531311035
    10. '____' → logprob: -16.50005531311035

Token 465: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8402929306030273
    2. '__' → logprob: -1.0902929306030273
    3. ' ==' → logprob: -1.4652929306030273
    4. '=="' → logprob: -6.840292930603027
    5. '"' → logprob: -9.340292930603027
    6. '=='' → logprob: -9.340292930603027
    7. '=' → logprob: -10.715292930603027
    8. '===' → logprob: -11.840292930603027
    9. '_' → logprob: -12.590292930603027
    10. ''' → logprob: -13.215292930603027

Token 466: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859713837504387
    2. ''' → logprob: -3.0485970973968506
    3. ' "__' → logprob: -11.67359733581543
    4. '__' → logprob: -13.92359733581543
    5. ' '__' → logprob: -15.04859733581543
    6. '"user' → logprob: -17.29859733581543
    7. '"name' → logprob: -18.04859733581543
    8. ''"' → logprob: -18.04859733581543
    9. '"'' → logprob: -18.17359733581543
    10. '"_' → logprob: -18.29859733581543

Token 467: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.465036105713807e-06
    2. 'name' → logprob: -12.000007629394531
    3. '__' → logprob: -13.625007629394531
    4. 'm' → logprob: -17.12500762939453
    5. '_main' → logprob: -17.25000762939453
    6. 'ma' → logprob: -18.00000762939453
    7. ' main' → logprob: -18.50000762939453
    8. '```' → logprob: -19.25000762939453
    9. '__':
' → logprob: -19.62500762939453
    10. '-main' → logprob: -20.75000762939453

Token 468: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.10022231191396713
    2. '__' → logprob: -2.35022234916687
    3. '_' → logprob: -11.47522258758545
    4. '__":
' → logprob: -12.35022258758545
    5. '__.' → logprob: -14.47522258758545
    6. '__:' → logprob: -15.60022258758545
    7. '_'' → logprob: -16.225221633911133
    8. '_main' → logprob: -17.100221633911133
    9. '___' → logprob: -17.225221633911133
    10. '':
' → logprob: -17.975221633911133

Token 469: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.069664333248511e-05
    2. ' main' → logprob: -11.000020980834961
    3. '__' → logprob: -12.500020980834961
    4. '_main' → logprob: -16.50002098083496
    5. '	main' → logprob: -17.25002098083496
    6. '(main' → logprob: -19.87502098083496
    7. '   ' → logprob: -20.12502098083496
    8. '.main' → logprob: -21.37502098083496
    9. ' __' → logprob: -22.00002098083496
    10. '___' → logprob: -22.00002098083496

Token 470: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -22.375
    4. 'import' → logprob: -22.75
    5. '.main' → logprob: -26.375
    6. '(main' → logprob: -26.875
    7. '_main' → logprob: -27.125
    8. 'Main' → logprob: -28.625
    9. '__' → logprob: -29.25
    10. '   ' → logprob: -29.5

Token 471: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 469
Tokens correctement prédits (1ère position, stricte): 204
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 405
Précision stricte (1ère position): 43.50%
Précision adaptée (1ère position): 47.33%
Précision (top 10): 86.35%
================================================================================
