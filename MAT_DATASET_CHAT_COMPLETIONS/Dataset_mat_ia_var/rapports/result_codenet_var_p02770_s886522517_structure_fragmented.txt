================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def i1():
    return int(input())

def i2():
    return [int(i) for i in input().split()]

def get_k_q():
    return i2()

def get_d():
    return i2()

def get_query():
    return i2()

def mod_list(d, m):
    return [val % m for val in d]

def zero_mod_flags(d, m):
    return [1 if val % m == 0 else 0 for val in d]

def compute_sum_mod(di, k):
    return sum(di[:k])

def compute_mod_x(x, m):
    return x % m

def chunk_sum(di, n, k):
    return sum(di[:(n-1)%k])

def chunk_sum_zero(dz, n, k):
    return sum(dz[:(n-1)%k])

def main():
    k, q = get_k_q()
    d = get_d()
    for _ in range(q):
        n, x, m = get_query()
        di = mod_list(d, m)
        dz = zero_mod_flags(d, m)
        complete_chunks = (n-1)//k
        partial = (n-1)%k

        total_sum_di = compute_sum_mod(di, k)
        modded_x = compute_mod_x(x, m)
        x_val = complete_chunks * total_sum_di + modded_x
        if partial:
            x_val += chunk_sum(di, n, k)
        ans = n-1 - x_val//m - complete_chunks*sum(dz[:k])
        if partial:
            ans -= chunk_sum_zero(dz, n, k)
        print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' i' (ID: 575)
  → Token d'amorce (pas de prédiction)

Token 2: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2240733504295349
    2. 'f' → logprob: -2.2240734100341797
    3. '_' → logprob: -2.4740734100341797
    4. 'n' → logprob: -5.09907341003418
    5. ':' → logprob: -7.97407341003418
    6. '(n' → logprob: -7.97407341003418
    7. '1' → logprob: -8.72407341003418
    8. '(_' → logprob: -8.84907341003418
    9. 'def' → logprob: -8.97407341003418
    10. 's' → logprob: -9.09907341003418

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.045603975653648376
    2. '\' → logprob: -3.2956039905548096
    3. '```' → logprob: -6.1706037521362305
    4. '   ' → logprob: -7.0456037521362305
    5. '    
' → logprob: -7.2956037521362305
    6. ''\' → logprob: -7.6706037521362305
    7. '
' → logprob: -7.7956037521362305
    8. '' → logprob: -7.7956037521362305
    9. ' 
' → logprob: -7.9206037521362305
    10. ':' → logprob: -8.04560375213623

Token 5: ' return' (ID: 622)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.24060691893100739
    2. 'return' (adapté à ' return') → logprob: -2.9906070232391357
    3. '\' → logprob: -3.2406070232391357
    4. '   ' → logprob: -3.2406070232391357
    5. 'r' → logprob: -3.8656070232391357
    6. 'pass' → logprob: -4.490606784820557
    7. 'a' → logprob: -4.615606784820557
    8. '\t' → logprob: -4.865606784820557
    9. '    ' → logprob: -4.990606784820557
    10. '\r' → logprob: -5.240606784820557

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07853763550519943
    2. ''' → logprob: -2.953537702560425
    3. '"' → logprob: -4.203537464141846
    4. ' None' → logprob: -6.328537464141846
    5. '1' → logprob: -6.578537464141846
    6. ' True' → logprob: -6.703537464141846
    7. '  ' → logprob: -7.078537464141846
    8. 'None' → logprob: -7.578537464141846
    9. '`' → logprob: -7.828537464141846
    10. '_' → logprob: -7.953537464141846

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007649566978216171
    2. '('' → logprob: -7.750764846801758
    3. '.' → logprob: -9.000764846801758
    4. ''' → logprob: -9.875764846801758
    5. ' (' → logprob: -10.125764846801758
    6. '40' → logprob: -10.375764846801758
    7. '32' → logprob: -10.375764846801758
    8. '("("' → logprob: -12.000764846801758
    9. ' ' → logprob: -12.125764846801758
    10. '(
' → logprob: -12.125764846801758

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013693987391889095
    2. ')' → logprob: -4.513693809509277
    3. '()' → logprob: -6.638693809509277
    4. '())' → logprob: -7.263693809509277
    5. '('' → logprob: -9.388693809509277
    6. '(
' → logprob: -9.513693809509277
    7. ' ' → logprob: -9.763693809509277
    8. '<|end|>' → logprob: -9.763693809509277
    9. '```' → logprob: -9.763693809509277
    10. '(()' → logprob: -10.013693809509277

Token 9: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2365299463272095
    2. 'def' → logprob: -1.2365299463272095
    3. '(
' → logprob: -2.61152982711792
    4. '+' → logprob: -2.98652982711792
    5. '```' → logprob: -3.11152982711792
    6. '()' → logprob: -3.23652982711792
    7. '\n' → logprob: -3.23652982711792
    8. 'i' → logprob: -3.73652982711792
    9. '+
' → logprob: -3.73652982711792
    10. '
' → logprob: -3.73652982711792

Token 10: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31560128927230835
    2. 'i' → logprob: -1.3156013488769531
    3. ' ' → logprob: -6.190601348876953
    4. '_' → logprob: -9.440601348876953
    5. ' space' → logprob: -9.690601348876953
    6. 'space' → logprob: -9.815601348876953
    7. 's' → logprob: -10.565601348876953
    8. ' ' → logprob: -10.940601348876953
    9. ' ‌' → logprob: -11.690601348876953
    10. ' s' → logprob: -12.065601348876953

Token 11: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3872053623199463
    2. '2' → logprob: -1.1372053623199463
    3. 'n' → logprob: -8.512205123901367
    4. '3' → logprob: -9.762205123901367
    5. '4' → logprob: -11.137205123901367
    6. '6' → logprob: -11.137205123901367
    7. '()' → logprob: -11.512205123901367
    8. '(' → logprob: -11.637205123901367
    9. '_' → logprob: -11.637205123901367
    10. '0' → logprob: -12.512205123901367

Token 12: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009767776355147362
    2. '(' → logprob: -5.509768009185791
    3. ' ()' → logprob: -6.009768009185791
    4. '():' → logprob: -6.259768009185791
    5. '()>' → logprob: -8.134767532348633
    6. '()*' → logprob: -8.384767532348633
    7. '()">' → logprob: -8.884767532348633
    8. '`()' → logprob: -9.384767532348633
    9. '()<<' → logprob: -9.509767532348633
    10. '()(' → logprob: -10.009767532348633

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05175284296274185
    2. ' ' → logprob: -3.676752805709839
    3. ' return' → logprob: -4.051753044128418
    4. 'return' → logprob: -5.301753044128418
    5. '    ' → logprob: -6.551753044128418
    6. 'int' → logprob: -7.676753044128418
    7. '  ' → logprob: -7.801753044128418
    8. '()' → logprob: -8.676753044128418
    9. '(' → logprob: -9.051753044128418
    10. ' int' → logprob: -9.801753044128418

Token 14: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6857482194900513
    2. 'return' (adapté à ' return') → logprob: -0.9357482194900513
    3. ' ' → logprob: -2.5607481002807617
    4. '   ' → logprob: -3.8107481002807617
    5. 'int' → logprob: -5.810748100280762
    6. ' int' → logprob: -7.310748100280762
    7. '  ' → logprob: -7.435748100280762
    8. 'def' → logprob: -8.935748100280762
    9. '    ' → logprob: -9.310748100280762
    10. 'r' → logprob: -10.685748100280762

Token 15: ' [' (ID: 723)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.13340021669864655
    2. 'int' → logprob: -2.2584002017974854
    3. ' map' → logprob: -4.5084004402160645
    4. '(int' → logprob: -5.8834004402160645
    5. ' tuple' → logprob: -5.8834004402160645
    6. ' ' → logprob: -6.6334004402160645
    7. ' list' → logprob: -6.6334004402160645
    8. 'map' → logprob: -7.7584004402160645
    9. '[int' → logprob: -8.133399963378906
    10. 'list' → logprob: -8.508399963378906

Token 16: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0802738870552275e-05
    2. ' int' → logprob: -11.50001049041748
    3. 'map' → logprob: -15.75001049041748
    4. ' ' → logprob: -15.87501049041748
    5. '   ' → logprob: -16.000011444091797
    6. ']int' → logprob: -16.125011444091797
    7. '(int' → logprob: -16.375011444091797
    8. 'i' → logprob: -16.875011444091797
    9. '  ' → logprob: -17.750011444091797
    10. '	int' → logprob: -18.500011444091797

Token 17: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2363748699426651
    2. '(input' → logprob: -1.611374855041504
    3. '(' → logprob: -4.986374855041504
    4. '(i' → logprob: -5.611374855041504
    5. ' (' → logprob: -8.236374855041504
    6. '(token' → logprob: -9.986374855041504
    7. '(s' → logprob: -10.361374855041504
    8. 'input' → logprob: -11.361374855041504
    9. ']' → logprob: -11.486374855041504
    10. '(
' → logprob: -11.861374855041504

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008276253938674927
    2. '(x' → logprob: -4.883276462554932
    3. 'for' → logprob: -8.758275985717773
    4. ')]' → logprob: -9.633275985717773
    5. ')x' → logprob: -9.758275985717773
    6. 'or' → logprob: -9.883275985717773
    7. '(i' → logprob: -10.133275985717773
    8. '(' → logprob: -10.383275985717773
    9. ' )' → logprob: -10.383275985717773
    10. 'x' → logprob: -10.508275985717773

Token 19: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.21984092891216278
    2. 'for' → logprob: -1.9698408842086792
    3. ' for' → logprob: -2.9698410034179688
    4. '(i' → logprob: -6.219841003417969
    5. '(s' → logprob: -6.594841003417969
    6. '(input' → logprob: -7.094841003417969
    7. 's' → logprob: -7.594841003417969
    8. '(' → logprob: -7.594841003417969
    9. ')' → logprob: -7.594841003417969
    10. '(v' → logprob: -8.469841003417969

Token 20: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014208519831299782
    2. 'input' → logprob: -4.2642083168029785
    3. ' ' → logprob: -10.514208793640137
    4. ' range' → logprob: -12.389208793640137
    5. '(input' → logprob: -12.639208793640137
    6. '=input' → logprob: -12.889208793640137
    7. ' in' → logprob: -13.139208793640137
    8. ' i' → logprob: -13.514208793640137
    9. '<|end|>' → logprob: -13.514208793640137
    10. '  ' → logprob: -14.514208793640137

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09823963046073914
    2. ' input' → logprob: -2.5982396602630615
    3. 'input' → logprob: -4.848239421844482
    4. '(' → logprob: -5.223239421844482
    5. ' ' → logprob: -5.473239421844482
    6. '(input' → logprob: -6.723239421844482
    7. 'in' → logprob: -8.72323989868164
    8. ' range' → logprob: -9.34823989868164
    9. '=input' → logprob: -9.47323989868164
    10. ' (' → logprob: -9.84823989868164

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0889458954334259
    2. ' input' → logprob: -2.4639458656311035
    3. '(input' → logprob: -12.713946342468262
    4. ' ' → logprob: -13.463946342468262
    5. 'range' → logprob: -14.463946342468262
    6. '   ' → logprob: -15.213946342468262
    7. '=input' → logprob: -15.213946342468262
    8. ' range' → logprob: -15.463946342468262
    9. '<input' → logprob: -16.213945388793945
    10. 'list' → logprob: -16.338945388793945

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.52802574634552
    2. '()]' → logprob: -1.27802574634552
    3. '()' → logprob: -2.0280256271362305
    4. '())' → logprob: -10.52802562713623
    5. '()].' → logprob: -11.65302562713623
    6. '(' → logprob: -12.52802562713623
    7. '()][' → logprob: -12.77802562713623
    8. '()`' → logprob: -13.27802562713623
    9. '()[' → logprob: -13.65302562713623
    10. ' ()' → logprob: -13.65302562713623

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001005630983854644
    2. 'strip' → logprob: -9.250100135803223
    3. 'rstrip' → logprob: -12.500100135803223
    4. ' split' → logprob: -14.875100135803223
    5. 'spl' → logprob: -14.875100135803223
    6. '(split' → logprob: -17.50010108947754
    7. 's' → logprob: -19.12510108947754
    8. '.split' → logprob: -20.12510108947754
    9. 'sp' → logprob: -20.87510108947754
    10. ' strip' → logprob: -22.50010108947754

Token 25: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.000508591765537858
    2. '()' → logprob: -7.750508785247803
    3. '())' → logprob: -9.625508308410645
    4. '(' → logprob: -11.500508308410645
    5. ']' → logprob: -14.500508308410645
    6. ')]' → logprob: -14.750508308410645
    7. '()]
' → logprob: -15.000508308410645
    8. '()}' → logprob: -16.12550926208496
    9. '()],' → logprob: -16.62550926208496
    10. '()`' → logprob: -17.00050926208496

Token 26: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0032011198345571756
    2. ']' → logprob: -6.003201007843018
    3. ')]' → logprob: -7.253201007843018
    4. '())' → logprob: -11.628201484680176
    5. '()' → logprob: -12.253201484680176
    6. '])' → logprob: -12.878201484680176
    7. ']()' → logprob: -14.753201484680176
    8. '()]
' → logprob: -15.503201484680176
    9. ' ]' → logprob: -15.878201484680176
    10. '])]' → logprob: -16.50320053100586

Token 27: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018608972430229187
    2. 'd' → logprob: -4.268609046936035
    3. 'n' → logprob: -5.518609046936035
    4. 'a' → logprob: -8.518609046936035
    5. '\' → logprob: -9.518609046936035
    6. '```' → logprob: -10.143609046936035
    7. 'for' → logprob: -10.768609046936035
    8. '
' → logprob: -11.768609046936035
    9. 'N' → logprob: -11.768609046936035
    10. '(n' → logprob: -11.768609046936035

Token 28: ' get' (ID: 717)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.260867714881897
    2. ' i' → logprob: -1.635867714881897
    3. ' s' → logprob: -4.010867595672607
    4. 's' → logprob: -4.385867595672607
    5. ' main' → logprob: -7.760867595672607
    6. 'o' → logprob: -7.760867595672607
    7. ' l' → logprob: -7.885867595672607
    8. ' f' → logprob: -8.010868072509766
    9. ' ' → logprob: -8.135868072509766
    10. ' d' → logprob: -8.260868072509766

Token 29: '_k' (ID: 11637)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0432124137878418
    2. '_input' → logprob: -1.4182124137878418
    3. '_' → logprob: -2.043212413787842
    4. 's' → logprob: -2.543212413787842
    5. '_max' → logprob: -2.918212413787842
    6. '_data' → logprob: -3.918212413787842
    7. '():' → logprob: -5.043212413787842
    8. '_s' → logprob: -5.168212413787842
    9. '_sum' → logprob: -5.168212413787842
    10. 'int' → logprob: -5.293212413787842

Token 30: '_q' (ID: 19384)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10264120995998383
    2. '():' → logprob: -2.3526411056518555
    3. '_value' → logprob: -7.4776411056518555
    4. '():
' → logprob: -7.8526411056518555
    5. '(' → logprob: -7.9776411056518555
    6. 'th' → logprob: -8.477641105651855
    7. 'e' → logprob: -8.977641105651855
    8. '_' → logprob: -9.102641105651855
    9. '()(' → logprob: -9.352641105651855
    10. ' ()' → logprob: -9.602641105651855

Token 31: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014558563008904457
    2. '():' → logprob: -4.889558792114258
    3. 'u' → logprob: -5.264558792114258
    4. '_' → logprob: -8.264558792114258
    5. '():
' → logprob: -8.264558792114258
    6. 'uer' → logprob: -8.514558792114258
    7. '(' → logprob: -8.514558792114258
    8. 'ue' → logprob: -8.639558792114258
    9. 'ues' → logprob: -9.264558792114258
    10. 's' → logprob: -9.514558792114258

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029382407665252686
    2. 'return' → logprob: -6.377938270568848
    3. ' return' → logprob: -7.877938270568848
    4. '       ' → logprob: -8.877938270568848
    5. '    
' → logprob: -9.002938270568848
    6. 'k' → logprob: -9.127938270568848
    7. '```' → logprob: -9.377938270568848
    8. '()' → logprob: -9.377938270568848
    9. '(' → logprob: -9.502938270568848
    10. ' ' → logprob: -9.752938270568848

Token 33: ' return' (ID: 622)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06035756319761276
    2. 'return' (adapté à ' return') → logprob: -3.1853575706481934
    3. '   ' → logprob: -4.185357570648193
    4. 'q' → logprob: -6.560357570648193
    5. 'r' → logprob: -8.810357093811035
    6. ' k' → logprob: -9.185357093811035
    7. '```' → logprob: -9.185357093811035
    8. 'n' → logprob: -9.435357093811035
    9. ' return' → logprob: -10.310357093811035
    10. 'a' → logprob: -11.060357093811035

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3364320397377014
    2. 'i' → logprob: -1.8364319801330566
    3. ' int' → logprob: -2.8364319801330566
    4. 'int' → logprob: -3.7114319801330566
    5. ' tuple' → logprob: -4.461431980133057
    6. ' map' → logprob: -4.586431980133057
    7. ' [' → logprob: -4.961431980133057
    8. '[int' → logprob: -5.336431980133057
    9. ' list' → logprob: -5.836431980133057
    10. 'tuple' → logprob: -6.836431980133057

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007606389466673136
    2. '1' → logprob: -4.882606506347656
    3. ' ' → logprob: -15.507606506347656
    4. '(' → logprob: -18.695106506347656
    5. '２' → logprob: -18.820106506347656
    6. '۲' → logprob: -19.132606506347656
    7. '٢' → logprob: -19.195106506347656
    8. '₂' → logprob: -19.320106506347656
    9. '२' → logprob: -19.445106506347656
    10. '```' → logprob: -19.570106506347656

Token 36: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.935296834039036e-06
    2. '()
' → logprob: -13.50000286102295
    3. ' ()' → logprob: -14.75000286102295
    4. '()<' → logprob: -15.25000286102295
    5. '()]' → logprob: -15.25000286102295
    6. '()(' → logprob: -16.000003814697266
    7. '()`' → logprob: -16.125003814697266
    8. '()

' → logprob: -16.250003814697266
    9. '(' → logprob: -16.875003814697266
    10. '()[' → logprob: -16.875003814697266

Token 37: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2316288948059082
    2. '()

' → logprob: -1.7316288948059082
    3. '()
' → logprob: -2.106628894805908
    4. 'def' → logprob: -2.106628894805908
    5. ':' → logprob: -2.606628894805908
    6. '(' → logprob: -2.606628894805908
    7. '
' → logprob: -2.856628894805908
    8. '():' → logprob: -3.481628894805908
    9. '(
' → logprob: -4.231628894805908
    10. '\n' → logprob: -4.731628894805908

Token 38: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09066779166460037
    2. ' solve' → logprob: -3.090667724609375
    3. '_' → logprob: -4.965667724609375
    4. ' get' → logprob: -5.465667724609375
    5. 'main' → logprob: -5.590667724609375
    6. ' i' → logprob: -5.590667724609375
    7. ' ' → logprob: -5.715667724609375
    8. ' k' → logprob: -6.215667724609375
    9. 'i' → logprob: -6.215667724609375
    10. ' d' → logprob: -6.465667724609375

Token 39: '_d' (ID: 1565)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.855360507965088
    2. '_n' → logprob: -2.105360507965088
    3. '_k' → logprob: -2.105360507965088
    4. '_q' → logprob: -2.230360507965088
    5. '_p' → logprob: -2.480360507965088
    6. '_r' → logprob: -2.605360507965088
    7. '_m' → logprob: -2.855360507965088
    8. '_v' → logprob: -3.105360507965088
    9. '_s' → logprob: -3.105360507965088
    10. '_i' → logprob: -3.105360507965088

Token 40: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1329442411661148
    2. '():' → logprob: -2.257944345474243
    3. '1' → logprob: -4.757944107055664
    4. '_' → logprob: -5.507944107055664
    5. 'ef' → logprob: -7.007944107055664
    6. 'e' → logprob: -7.507944107055664
    7. ' ()' → logprob: -7.757944107055664
    8. '2' → logprob: -7.757944107055664
    9. '():
' → logprob: -8.132944107055664
    10. 'f' → logprob: -8.257944107055664

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012909606099128723
    2. ' return' → logprob: -5.137909412384033
    3. 'return' → logprob: -5.512909412384033
    4. '()' → logprob: -6.137909412384033
    5. '()
' → logprob: -7.387909412384033
    6. ' ' → logprob: -9.512909889221191
    7. ' ()' → logprob: -10.762909889221191
    8. '	return' → logprob: -11.637909889221191
    9. '[]
' → logprob: -11.887909889221191
    10. '[]' → logprob: -12.012909889221191

Token 42: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2751482129096985
    2. 'return' (adapté à ' return') → logprob: -1.7751481533050537
    3. ' return' → logprob: -2.6501481533050537
    4. ' ' → logprob: -8.275148391723633
    5. '```' → logprob: -9.900148391723633
    6. 'd' → logprob: -10.400148391723633
    7. '()' → logprob: -11.150148391723633
    8. '  ' → logprob: -11.400148391723633
    9. 'n' → logprob: -11.525148391723633
    10. 'def' → logprob: -11.650148391723633

Token 43: ' i' (ID: 575)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.336122989654541
    2. ' int' → logprob: -1.461122989654541
    3. '[int' → logprob: -3.461122989654541
    4. ' i' → logprob: -5.086122989654541
    5. 'float' → logprob: -5.836122989654541
    6. ' [' → logprob: -5.961122989654541
    7. 'i' → logprob: -6.086122989654541
    8. ' float' → logprob: -6.461122989654541
    9. '[i' → logprob: -6.586122989654541
    10. '[' → logprob: -6.836122989654541

Token 44: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6932319402694702
    2. '2' → logprob: -0.6932319402694702
    3. '()' → logprob: -10.193231582641602
    4. '(' → logprob: -10.318231582641602
    5. 'nt' → logprob: -12.318231582641602
    6. 'int' → logprob: -13.068231582641602
    7. 'n' → logprob: -13.193231582641602
    8. 'input' → logprob: -13.943231582641602
    9. ' ' → logprob: -14.505731582641602
    10. '(n' → logprob: -14.755731582641602

Token 45: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.127333340875339e-06
    2. '()
' → logprob: -13.000003814697266
    3. '()

' → logprob: -14.750003814697266
    4. '()]' → logprob: -14.750003814697266
    5. '()`' → logprob: -15.500003814697266
    6. ' ()' → logprob: -15.625003814697266
    7. '`()' → logprob: -15.875003814697266
    8. '()<' → logprob: -15.875003814697266
    9. '()\' → logprob: -16.250003814697266
    10. '()(' → logprob: -16.500003814697266

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.400689305039123e-05
    2. 'd' → logprob: -9.875094413757324
    3. 'n' → logprob: -10.875094413757324
    4. '\' → logprob: -11.750094413757324
    5. '```' → logprob: -12.250094413757324
    6. 'class' → logprob: -12.375094413757324
    7. '#' → logprob: -13.750094413757324
    8. 'de' → logprob: -13.875094413757324
    9. 'for' → logprob: -14.375094413757324
    10. '
' → logprob: -14.625094413757324

Token 47: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06614220142364502
    2. ' solve' → logprob: -3.0661420822143555
    3. 'main' → logprob: -5.6911420822143555
    4. 'solve' → logprob: -5.6911420822143555
    5. ' get' → logprob: -6.4411420822143555
    6. ' process' → logprob: -6.9411420822143555
    7. ' solution' → logprob: -7.1911420822143555
    8. ' i' → logprob: -7.1911420822143555
    9. ' def' → logprob: -7.1911420822143555
    10. ' count' → logprob: -7.5661420822143555

Token 48: '_query' (ID: 13012)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.6916896104812622
    2. '_a' → logprob: -1.9416896104812622
    3. '_p' → logprob: -2.1916894912719727
    4. '_m' → logprob: -2.3166894912719727
    5. '_s' → logprob: -2.3166894912719727
    6. '_v' → logprob: -2.8166894912719727
    7. '_c' → logprob: -3.0666894912719727
    8. '_r' → logprob: -3.0666894912719727
    9. '_l' → logprob: -3.5666894912719727
    10. '_t' → logprob: -3.6916894912719727

Token 49: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011439072113716975
    2. '()' → logprob: -9.875114440917969
    3. '():
' → logprob: -10.250114440917969
    4. '_list' → logprob: -11.750114440917969
    5. 's' → logprob: -11.875114440917969
    6. ' ():' → logprob: -12.500114440917969
    7. '_' → logprob: -12.875114440917969
    8. '_input' → logprob: -13.750114440917969
    9. '()[' → logprob: -14.375114440917969
    10. '(' → logprob: -14.625114440917969

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.03521392197581e-05
    2. '()' → logprob: -10.750030517578125
    3. 'return' → logprob: -12.625030517578125
    4. ' return' → logprob: -13.000030517578125
    5. '()
' → logprob: -14.375030517578125
    6. 'def' → logprob: -14.500030517578125
    7. ' ()' → logprob: -14.625030517578125
    8. '(' → logprob: -15.000030517578125
    9. '	return' → logprob: -15.000030517578125
    10. '```' → logprob: -15.000030517578125

Token 51: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31545692682266235
    2. 'return' (adapté à ' return') → logprob: -1.3154568672180176
    3. ' return' → logprob: -6.440456867218018
    4. 'i' → logprob: -8.065457344055176
    5. '[i' → logprob: -9.565457344055176
    6. '[' → logprob: -9.940457344055176
    7. '[int' → logprob: -10.190457344055176
    8. 'def' → logprob: -10.315457344055176
    9. ' i' → logprob: -11.190457344055176
    10. '```' → logprob: -11.315457344055176

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.042799338698387146
    2. '[int' → logprob: -3.917799234390259
    3. '[i' → logprob: -4.542799472808838
    4. '[' → logprob: -5.167799472808838
    5. 'int' → logprob: -6.292799472808838
    6. ' i' → logprob: -6.542799472808838
    7. '[]' → logprob: -7.542799472808838
    8. '(int' → logprob: -7.917799472808838
    9. '(i' → logprob: -8.16779899597168
    10. ' [' → logprob: -8.29279899597168

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009337326046079397
    2. '1' → logprob: -7.000933647155762
    3. 'nt' → logprob: -10.875933647155762
    4. 'n' → logprob: -13.375933647155762
    5. 't' → logprob: -14.000933647155762
    6. '(' → logprob: -14.875933647155762
    7. 'int' → logprob: -15.500933647155762
    8. '(int' → logprob: -16.188434600830078
    9. 'input' → logprob: -16.688434600830078
    10. '(n' → logprob: -17.063434600830078

Token 54: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.200166469876422e-06
    2. '()(' → logprob: -13.875004768371582
    3. '(' → logprob: -14.000004768371582
    4. '()
' → logprob: -14.125004768371582
    5. '()

' → logprob: -14.375004768371582
    6. '()`' → logprob: -14.500004768371582
    7. '()]' → logprob: -14.500004768371582
    8. '`()' → logprob: -15.500004768371582
    9. '()<' → logprob: -15.750004768371582
    10. '().' → logprob: -15.750004768371582

Token 55: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0072090295143425465
    2. 'd' → logprob: -5.007208824157715
    3. '\' → logprob: -9.132208824157715
    4. '#' → logprob: -9.257208824157715
    5. 'de' → logprob: -9.507208824157715
    6. '[' → logprob: -9.757208824157715
    7. '(' → logprob: -9.882208824157715
    8. 'n' → logprob: -10.132208824157715
    9. '```' → logprob: -11.257208824157715
    10. 'for' → logprob: -11.757208824157715

Token 56: ' mod' (ID: 1812)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011709252372384071
    2. ' process' → logprob: -5.261709213256836
    3. ' solve' → logprob: -5.386709213256836
    4. ' solution' → logprob: -7.261709213256836
    5. ' run' → logprob: -7.261709213256836
    6. ' query' → logprob: -8.136709213256836
    7. ' get' → logprob: -10.136709213256836
    8. ' answer' → logprob: -10.136709213256836
    9. ' i' → logprob: -11.761709213256836
    10. ' test' → logprob: -11.886709213256836

Token 57: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.325838565826416
    2. '=' → logprob: -1.825838565826416
    3. ':' → logprob: -2.325838565826416
    4. '():' → logprob: -4.575838565826416
    5. '_' → logprob: -5.700838565826416
    6. '(' → logprob: -6.325838565826416
    7. ' :' → logprob: -6.700838565826416
    8. ' :=' → logprob: -7.575838565826416
    9. 'ular' → logprob: -8.200838088989258
    10. '):' → logprob: -8.450838088989258

Token 58: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03452305495738983
    2. '()' → logprob: -5.034523010253906
    3. 's' → logprob: -5.159523010253906
    4. '_' → logprob: -5.284523010253906
    5. '(s' → logprob: -5.534523010253906
    6. '():' → logprob: -6.034523010253906
    7. '(_' → logprob: -6.034523010253906
    8. 'def' → logprob: -6.409523010253906
    9. '(_)' → logprob: -6.534523010253906
    10. '('' → logprob: -7.034523010253906

Token 59: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06720434129238129
    2. ')' → logprob: -2.817204236984253
    3. ',' → logprob: -5.692204475402832
    4. '[' → logprob: -7.942204475402832
    5. 'ef' → logprob: -8.192204475402832
    6. '[]):' → logprob: -8.192204475402832
    7. ' ):' → logprob: -8.442204475402832
    8. '):
' → logprob: -8.942204475402832
    9. 'ist' → logprob: -9.817204475402832
    10. ''):' → logprob: -9.817204475402832

Token 60: ' m' (ID: 284)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6877687573432922
    2. 'q' → logprob: -0.9377687573432922
    3. 'k' → logprob: -3.0627686977386475
    4. ' k' → logprob: -3.3127686977386475
    5. 'query' → logprob: -5.937768936157227
    6. ' queries' → logprob: -5.937768936157227
    7. ' query' → logprob: -6.062768936157227
    8. ' n' → logprob: -6.187768936157227
    9. 'n' → logprob: -6.437768936157227
    10. 'x' → logprob: -7.187768936157227

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13672389090061188
    2. 'od' → logprob: -2.1367239952087402
    3. ')' → logprob: -5.63672399520874
    4. '):
' → logprob: -6.63672399520874
    5. 'odule' → logprob: -7.01172399520874
    6. '[]):' → logprob: -7.26172399520874
    7. ',' → logprob: -7.63672399520874
    8. '_list' → logprob: -7.88672399520874
    9. 'odel' → logprob: -8.011723518371582
    10. '[' → logprob: -8.136723518371582

Token 62: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3357703685760498
    2. '   ' → logprob: -1.8357703685760498
    3. ':
' → logprob: -2.21077036857605
    4. '[]' → logprob: -5.085770606994629
    5. '[' → logprob: -5.710770606994629
    6. ' =' → logprob: -6.335770606994629
    7. '[:]' → logprob: -6.710770606994629
    8. '=' → logprob: -7.960770606994629
    9. '=[]' → logprob: -7.960770606994629
    10. '_list' → logprob: -8.335770606994629

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8112242817878723
    2. '[' → logprob: -1.9362242221832275
    3. ' for' → logprob: -2.1862242221832275
    4. '   ' → logprob: -2.3112242221832275
    5. ' res' → logprob: -3.0612242221832275
    6. 'return' (adapté à ' return') → logprob: -3.1862242221832275
    7. ' [' → logprob: -3.1862242221832275
    8. 'for' → logprob: -3.9362242221832275
    9. ' n' → logprob: -4.436224460601807
    10. ' result' → logprob: -4.811224460601807

Token 64: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.41785338521003723
    2. '[d' → logprob: -1.6678533554077148
    3. '[' → logprob: -2.667853355407715
    4. '[i' → logprob: -2.792853355407715
    5. '[m' → logprob: -4.792853355407715
    6. '[len' → logprob: -4.792853355407715
    7. '[((' → logprob: -6.792853355407715
    8. ' [' → logprob: -6.917853355407715
    9. ' [(' → logprob: -7.042853355407715
    10. '[k' → logprob: -7.417853355407715

Token 65: 'val' (ID: 1105)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.585808277130127
    2. 'x' → logprob: -1.210808277130127
    3. '(d' → logprob: -2.710808277130127
    4. '(di' → logprob: -3.085808277130127
    5. '(i' → logprob: -4.335808277130127
    6. 'd' → logprob: -4.960808277130127
    7. '((' → logprob: -5.585808277130127
    8. 'di' → logprob: -6.335808277130127
    9. '(v' → logprob: -6.460808277130127
    10. '(e' → logprob: -7.085808277130127

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47431910037994385
    2. '%' → logprob: -0.9743191003799438
    3. '%d' → logprob: -8.849319458007812
    4. '%m' → logprob: -10.099319458007812
    5. '%i' → logprob: -10.349319458007812
    6. ' for' → logprob: -12.224319458007812
    7. '%x' → logprob: -12.599319458007812
    8. '%s' → logprob: -12.724319458007812
    9. ' ' → logprob: -12.849319458007812
    10. '%c' → logprob: -13.099319458007812

Token 67: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009757270105183125
    2. ' m' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.884757041931152
    4. '100' → logprob: -15.884757041931152
    5. 'mod' → logprob: -16.13475799560547
    6. '10' → logprob: -16.13475799560547
    7. 'd' → logprob: -16.63475799560547
    8. ' ' → logprob: -16.88475799560547
    9. '	m' → logprob: -17.00975799560547
    10. '   ' → logprob: -17.00975799560547

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048728618770837784
    2. 'for' → logprob: -3.0487287044525146
    3. ' ' → logprob: -9.423728942871094
    4. '   ' → logprob: -9.923728942871094
    5. '	for' → logprob: -12.298728942871094
    6. ')' → logprob: -12.923728942871094
    7. '  ' → logprob: -13.548728942871094
    8. ']' → logprob: -13.798728942871094
    9. '```' → logprob: -14.423728942871094
    10. '    ' → logprob: -14.673728942871094

Token 69: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.1002165898680687
    2. 'val' → logprob: -2.3502166271209717
    3. 'd' → logprob: -11.72521686553955
    4. ' d' → logprob: -13.85021686553955
    5. '	val' → logprob: -14.22521686553955
    6. ',val' → logprob: -16.600215911865234
    7. '   ' → logprob: -16.850215911865234
    8. '[val' → logprob: -16.975215911865234
    9. '_val' → logprob: -17.475215911865234
    10. 'Val' → logprob: -17.600215911865234

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024890348315238953
    2. 'in' → logprob: -3.774890422821045
    3. 'd' → logprob: -6.524890422821045
    4. ' d' → logprob: -9.024889945983887
    5. ' ' → logprob: -11.024889945983887
    6. 's' → logprob: -11.149889945983887
    7. '<|end|>' → logprob: -11.274889945983887
    8. ']' → logprob: -13.149889945983887
    9. '_' → logprob: -13.649889945983887
    10. ')' → logprob: -13.649889945983887

Token 71: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002475777640938759
    2. ' d' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.37747573852539
    4. '   ' → logprob: -17.50247573852539
    5. '	d' → logprob: -18.37747573852539
    6. '
' → logprob: -19.12747573852539
    7. ')d' → logprob: -19.87747573852539
    8. ']' → logprob: -20.37747573852539
    9. '  ' → logprob: -20.75247573852539
    10. 'def' → logprob: -20.87747573852539

Token 72: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.872261317563243e-05
    2. ' ]' → logprob: -9.875059127807617
    3. ')]' → logprob: -12.000059127807617
    4. ']
' → logprob: -14.000059127807617
    5. '   ' → logprob: -16.375059127807617
    6. '()]' → logprob: -16.375059127807617
    7. '`]' → logprob: -17.375059127807617
    8. ']

' → logprob: -18.125059127807617
    9. 'd' → logprob: -18.250059127807617
    10. ')' → logprob: -18.250059127807617

Token 73: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015002528380136937
    2. '<|end|>' → logprob: -9.375149726867676
    3. 'for' → logprob: -11.125149726867676
    4. '
' → logprob: -11.375149726867676
    5. '```' → logprob: -11.375149726867676
    6. '\' → logprob: -11.500149726867676
    7. '<|end|>' → logprob: -12.250149726867676
    8. '#' → logprob: -13.000149726867676
    9. 'from' → logprob: -13.375149726867676
    10. 'de' → logprob: -13.625149726867676

Token 74: ' zero' (ID: 12421)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08244801312685013
    2. ' mod' → logprob: -3.2074480056762695
    3. ' solve' → logprob: -4.0824480056762695
    4. ' process' → logprob: -4.8324480056762695
    5. ' get' → logprob: -5.9574480056762695
    6. 'main' → logprob: -6.2074480056762695
    7. ' count' → logprob: -7.0824480056762695
    8. ' max' → logprob: -7.2074480056762695
    9. ' run' → logprob: -7.4574480056762695
    10. ' m' → logprob: -7.5824480056762695

Token 75: '_mod' (ID: 15325)
  Prédit: '_based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -1.3755619525909424
    2. '_list' → logprob: -1.8755619525909424
    3. '_div' → logprob: -2.0005619525909424
    4. '_mod' → logprob: -2.0005619525909424
    5. '_sum' → logprob: -2.3755619525909424
    6. '_' → logprob: -2.6255619525909424
    7. '_pad' → logprob: -3.5005619525909424
    8. '_count' → logprob: -3.7505619525909424
    9. '_index' → logprob: -4.125561714172363
    10. '_one' → logprob: -4.125561714172363

Token 76: '_flags' (ID: 33898)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2850540280342102
    2. '_' → logprob: -2.0350539684295654
    3. '(d' → logprob: -2.6600539684295654
    4. '(' → logprob: -4.2850542068481445
    5. '()' → logprob: -4.7850542068481445
    6. '(m' → logprob: -5.1600542068481445
    7. '_m' → logprob: -5.7850542068481445
    8. '_(' → logprob: -6.1600542068481445
    9. '(_' → logprob: -6.2850542068481445
    10. '(_)' → logprob: -6.5350542068481445

Token 77: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37628602981567383
    2. '(d' → logprob: -1.3762860298156738
    3. '():' → logprob: -2.876286029815674
    4. '()' → logprob: -5.876286029815674
    5. '(n' → logprob: -7.501286029815674
    6. '(def' → logprob: -8.001285552978516
    7. '_' → logprob: -8.626285552978516
    8. '(s' → logprob: -8.876285552978516
    9. ' (' → logprob: -9.376285552978516
    10. '(_' → logprob: -9.626285552978516

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016265720478259027
    2. ' ,' → logprob: -9.000163078308105
    3. ',m' → logprob: -10.375163078308105
    4. '):' → logprob: -12.875163078308105
    5. ')' → logprob: -13.000163078308105
    6. ',d' → logprob: -14.625163078308105
    7. '_,' → logprob: -15.250163078308105
    8. '‌,' → logprob: -15.625163078308105
    9. ':' → logprob: -15.750163078308105
    10. 'm' → logprob: -15.750163078308105

Token 79: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3147597014904022
    2. 'm' → logprob: -1.3147597312927246
    3. ' n' → logprob: -7.689759731292725
    4. ' mod' → logprob: -8.189759254455566
    5. 'mod' → logprob: -8.689759254455566
    6. 'n' → logprob: -9.064759254455566
    7. ' d' → logprob: -9.064759254455566
    8. '   ' → logprob: -9.564759254455566
    9. 'd' → logprob: -9.689759254455566
    10. ')' → logprob: -9.814759254455566

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003209229907952249
    2. ')' → logprob: -8.125321388244629
    3. ' ):' → logprob: -11.250321388244629
    4. ',' → logprob: -12.250321388244629
    5. ']:' → logprob: -12.500321388244629
    6. '):
' → logprob: -13.750321388244629
    7. '=' → logprob: -14.750321388244629
    8. '_' → logprob: -14.875321388244629
    9. ':' → logprob: -15.000321388244629
    10. '   ' → logprob: -15.375321388244629

Token 81: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09348078072071075
    2. '():' → logprob: -2.8434808254241943
    3. '   ' → logprob: -3.8434808254241943
    4. ':
' → logprob: -5.218480587005615
    5. '():
' → logprob: -6.593480587005615
    6. ' =' → logprob: -6.968480587005615
    7. ':return' → logprob: -7.468480587005615
    8. ' :' → logprob: -7.968480587005615
    9. '=' → logprob: -8.093481063842773
    10. '):' → logprob: -8.968481063842773

Token 82: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385451316833496
    2. '[' → logprob: -1.5385451316833496
    3. 'return' (adapté à ' return') → logprob: -1.7885451316833496
    4. ' return' → logprob: -4.16354513168335
    5. '[val' → logprob: -4.78854513168335
    6. '[d' → logprob: -5.28854513168335
    7. '[i' → logprob: -6.78854513168335
    8. '[(' → logprob: -6.91354513168335
    9. ' [' → logprob: -7.16354513168335
    10. '[m' → logprob: -7.28854513168335

Token 83: ' [' (ID: 723)
  Prédit: '[val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.20954786241054535
    2. '[' → logprob: -2.709547758102417
    3. ' [' → logprob: -2.709547758102417
    4. '[len' → logprob: -3.334547758102417
    5. '[d' → logprob: -4.209547996520996
    6. '[i' → logprob: -6.459547996520996
    7. '[(' → logprob: -6.584547996520996
    8. '[value' → logprob: -6.959547996520996
    9. ' [(' → logprob: -8.209547996520996
    10. '[int' → logprob: -8.209547996520996

Token 84: '1' (ID: 16)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.44732946157455444
    2. '(val' → logprob: -1.1973295211791992
    3. '1' → logprob: -3.322329521179199
    4. 'd' → logprob: -5.072329521179199
    5. '(d' → logprob: -5.447329521179199
    6. ' val' → logprob: -5.572329521179199
    7. '(' → logprob: -5.947329521179199
    8. 'int' → logprob: -6.572329521179199
    9. '(i' → logprob: -7.322329521179199
    10. 'x' → logprob: -7.447329521179199

Token 85: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01817476563155651
    2. 'if' → logprob: -4.018174648284912
    3. ' ' → logprob: -11.51817512512207
    4. ' val' → logprob: -12.14317512512207
    5. ' for' → logprob: -12.76817512512207
    6. 'val' → logprob: -13.01817512512207
    7. '   ' → logprob: -13.76817512512207
    8. 'e' → logprob: -14.14317512512207
    9. '0' → logprob: -14.14317512512207
    10. ' i' → logprob: -14.76817512512207

Token 86: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7196544408798218
    2. ' val' → logprob: -0.9696544408798218
    3. '(val' → logprob: -2.2196545600891113
    4. 'x' → logprob: -4.219654560089111
    5. ' x' → logprob: -5.219654560089111
    6. '(x' → logprob: -6.344654560089111
    7. ' (' → logprob: -6.469654560089111
    8. 'v' → logprob: -7.969654560089111
    9. '(v' → logprob: -8.219654083251953
    10. '   ' → logprob: -8.719654083251953

Token 87: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1134483814239502
    2. '%' → logprob: -2.23844838142395
    3. '%d' → logprob: -7.613448143005371
    4. '%m' → logprob: -9.238448143005371
    5. '%e' → logprob: -11.363448143005371
    6. ' ' → logprob: -11.613448143005371
    7. '%i' → logprob: -11.863448143005371
    8. '%s' → logprob: -13.488448143005371
    9. '%c' → logprob: -13.738448143005371
    10. '==' → logprob: -13.738448143005371

Token 88: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.42874959111213684
    2. ' m' → logprob: -1.0537495613098145
    3. ' ' → logprob: -10.428750038146973
    4. '<|end|>' → logprob: -11.053750038146973
    5. '   ' → logprob: -13.803750038146973
    6. '  ' → logprob: -14.553750038146973
    7. '<|end|>' → logprob: -15.053750038146973
    8. '```' → logprob: -15.303750038146973
    9. '	m' → logprob: -15.428750038146973
    10. 'd' → logprob: -16.428749084472656

Token 89: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07003890722990036
    2. ' ==' → logprob: -2.6950387954711914
    3. ' else' → logprob: -9.945038795471191
    4. 'else' → logprob: -10.570038795471191
    5. ' ' → logprob: -11.195038795471191
    6. '0' → logprob: -11.945038795471191
    7. '=' → logprob: -12.445038795471191
    8. '==
' → logprob: -13.320038795471191
    9. '!=' → logprob: -13.945038795471191
    10. '```' → logprob: -14.570038795471191

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020839422941208
    2. ' ' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.100208282470703
    4. '  ' → logprob: -15.475208282470703
    5. '```' → logprob: -15.475208282470703
    6. '۰' → logprob: -16.037708282470703
    7. '<|end|>' → logprob: -16.350208282470703
    8. '   ' → logprob: -16.662708282470703
    9. 's' → logprob: -16.787708282470703
    10. '٠' → logprob: -17.600208282470703

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -16.062761306762695
    4. '۰' → logprob: -16.687761306762695
    5. '   ' → logprob: -16.812761306762695
    6. '  ' → logprob: -17.250261306762695
    7. 'zero' → logprob: -17.500261306762695
    8. '০' → logprob: -17.812761306762695
    9. '<|end|>' → logprob: -17.875261306762695
    10. '00' → logprob: -18.000261306762695

Token 92: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.001720996224321425
    2. 'else' → logprob: -6.376720905303955
    3. ' ' → logprob: -11.126721382141113
    4. ' for' → logprob: -13.376721382141113
    5. ' in' → logprob: -13.751721382141113
    6. '    ' → logprob: -14.626721382141113
    7. '   ' → logprob: -14.876721382141113
    8. '	else' → logprob: -15.501721382141113
    9. '```' → logprob: -16.001720428466797
    10. '        ' → logprob: -16.126720428466797

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2811511754989624
    2. ' ' → logprob: -1.4061511754989624
    3. ' ' → logprob: -14.781150817871094
    4. '   ' → logprob: -15.406150817871094
    5. '    ' → logprob: -16.531150817871094
    6. '  ' → logprob: -16.718650817871094
    7. '<|end|>' → logprob: -17.156150817871094
    8. '۰' → logprob: -17.343650817871094
    9. '2' → logprob: -17.406150817871094
    10. '1' → logprob: -17.468650817871094

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.75192928314209
    4. '  ' → logprob: -17.939428329467773
    5. '۰' → logprob: -18.501928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '00' → logprob: -18.689428329467773
    8. '    ' → logprob: -19.251928329467773
    9. '1' → logprob: -19.376928329467773
    10. '０' → logprob: -19.439428329467773

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0011485524009913206
    2. 'for' → logprob: -6.876148700714111
    3. '   ' → logprob: -9.751148223876953
    4. ' ' → logprob: -10.001148223876953
    5. ' val' → logprob: -12.501148223876953
    6. '    ' → logprob: -13.376148223876953
    7. '  ' → logprob: -13.501148223876953
    8. ' in' → logprob: -13.501148223876953
    9. '       ' → logprob: -13.751148223876953
    10. ' d' → logprob: -14.126148223876953

Token 96: ' val' (ID: 1459)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20489296317100525
    2. 'd' → logprob: -1.7048929929733276
    3. ' val' → logprob: -5.829893112182617
    4. 'val' → logprob: -7.579893112182617
    5. '	d' → logprob: -11.579893112182617
    6. '   ' → logprob: -13.204893112182617
    7. ')d' → logprob: -13.329893112182617
    8. ' ' → logprob: -13.392393112182617
    9. '>d' → logprob: -13.579893112182617
    10. ',d' → logprob: -13.704893112182617

Token 97: ' in' (ID: 306)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8218032717704773
    2. 'd' → logprob: -1.321803331375122
    3. ' in' → logprob: -1.446803331375122
    4. 'in' → logprob: -3.196803331375122
    5. ' val' → logprob: -4.696803092956543
    6. 'val' → logprob: -4.821803092956543
    7. ' ' → logprob: -9.196803092956543
    8. ',d' → logprob: -9.946803092956543
    9. ')d' → logprob: -10.821803092956543
    10. '(d' → logprob: -10.946803092956543

Token 98: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013265528250485659
    2. ' d' → logprob: -6.626326560974121
    3. '	d' → logprob: -15.876326560974121
    4. '   ' → logprob: -16.001325607299805
    5. '
' → logprob: -16.376325607299805
    6. ' ' → logprob: -16.626325607299805
    7. '```' → logprob: -17.626325607299805
    8. '  ' → logprob: -17.751325607299805
    9. ')d' → logprob: -18.001325607299805
    10. 'def' → logprob: -18.376325607299805

Token 99: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -3.4881879400927573e-05
    2. ')]' → logprob: -10.500035285949707
    3. ' ]' → logprob: -11.875035285949707
    4. ']
' → logprob: -15.375035285949707
    5. '])' → logprob: -16.50003433227539
    6. ')' → logprob: -16.75003433227539
    7. '()]' → logprob: -16.87503433227539
    8. '`]' → logprob: -18.50003433227539
    9. '']' → logprob: -19.00003433227539
    10. '   ' → logprob: -19.37503433227539

Token 100: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024048985505942255
    2. '
' → logprob: -9.250240325927734
    3. '<|end|>' → logprob: -10.125240325927734
    4. 'from' → logprob: -11.000240325927734
    5. '#' → logprob: -11.000240325927734
    6. 'for' → logprob: -11.125240325927734
    7. 'n' → logprob: -11.375240325927734
    8. '

' → logprob: -11.625240325927734
    9. '```' → logprob: -11.625240325927734
    10. '\' → logprob: -12.000240325927734

Token 101: ' compute' (ID: 23864)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -1.2585461139678955
    2. ' mod' → logprob: -1.6335461139678955
    3. ' main' → logprob: -1.7585461139678955
    4. ' count' → logprob: -2.1335461139678955
    5. ' solve' → logprob: -2.6335461139678955
    6. ' sum' → logprob: -4.383545875549316
    7. ' get' → logprob: -4.383545875549316
    8. ' process' → logprob: -4.383545875549316
    9. ' cumulative' → logprob: -4.383545875549316
    10. ' is' → logprob: -4.633545875549316

Token 102: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3565492630004883
    2. '_sum' → logprob: -1.7315492630004883
    3. '(' → logprob: -1.9815492630004883
    4. '_prefix' → logprob: -2.2315492630004883
    5. '_mod' → logprob: -2.7315492630004883
    6. '_query' → logprob: -3.2315492630004883
    7. '_counts' → logprob: -3.4815492630004883
    8. '_max' → logprob: -3.6065492630004883
    9. '_suffix' → logprob: -3.7315492630004883
    10. '_count' → logprob: -4.231549263000488

Token 103: '_mod' (ID: 15325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1489880084991455
    2. '(d' → logprob: -2.5239880084991455
    3. '_' → logprob: -3.8989880084991455
    4. '(a' → logprob: -4.773987770080566
    5. '(n' → logprob: -5.773987770080566
    6. '_range' → logprob: -6.148987770080566
    7. '_list' → logprob: -6.398987770080566
    8. '(i' → logprob: -6.523987770080566
    9. '_of' → logprob: -6.523987770080566
    10. '_mod' → logprob: -6.523987770080566

Token 104: '(di' (ID: 131744)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.28494134545326233
    2. '(n' → logprob: -2.4099414348602295
    3. '(s' → logprob: -2.9099414348602295
    4. '(' → logprob: -3.2849414348602295
    5. '(k' → logprob: -3.2849414348602295
    6. '(m' → logprob: -4.78494119644165
    7. '(val' → logprob: -5.78494119644165
    8. '_' → logprob: -5.78494119644165
    9. '(a' → logprob: -5.78494119644165
    10. '(def' → logprob: -6.03494119644165

Token 105: ',' (ID: 11)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6163391470909119
    2. 'v' → logprob: -1.3663392066955566
    3. 'f' → logprob: -2.2413392066955566
    4. 'm' → logprob: -3.8663392066955566
    5. '):
' → logprob: -3.9913392066955566
    6. ')' → logprob: -4.866339206695557
    7. '):' → logprob: -5.241339206695557
    8. '(s' → logprob: -5.366339206695557
    9. '):

' → logprob: -5.366339206695557
    10. ',' → logprob: -5.491339206695557

Token 106: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.27033284306526184
    2. 'm' → logprob: -1.5203328132629395
    3. 'mi' → logprob: -5.7703328132629395
    4. ' dj' → logprob: -6.1453328132629395
    5. ' mi' → logprob: -6.1453328132629395
    6. ' mod' → logprob: -6.5203328132629395
    7. ' mj' → logprob: -6.6453328132629395
    8. ' q' → logprob: -6.6453328132629395
    9. ' d' → logprob: -7.1453328132629395
    10. 'dj' → logprob: -7.1453328132629395

Token 107: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17286650836467743
    2. '):' → logprob: -1.9228664636611938
    3. '):
' → logprob: -5.047866344451904
    4. 'm' → logprob: -6.172866344451904
    5. ' ,' → logprob: -7.422866344451904
    6. 'u' → logprob: -7.797866344451904
    7. ',m' → logprob: -7.922866344451904
    8. ')' → logprob: -8.172866821289062
    9. ',i' → logprob: -8.172866821289062
    10. '1' → logprob: -8.422866821289062

Token 108: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11658413708209991
    2. '   ' → logprob: -2.366584062576294
    3. ':
' → logprob: -4.866584300994873
    4. '(' → logprob: -5.491584300994873
    5. ' :' → logprob: -6.866584300994873
    6. '=' → logprob: -7.241584300994873
    7. ' =' → logprob: -7.491584300994873
    8. '[' → logprob: -8.116583824157715
    9. ' (' → logprob: -8.366583824157715
    10. '):' → logprob: -8.366583824157715

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9400977492332458
    2. '   ' → logprob: -1.1900978088378906
    3. ' return' → logprob: -1.1900978088378906
    4. 'sum' → logprob: -7.315097808837891
    5. ' sum' → logprob: -8.94009780883789
    6. 'result' → logprob: -9.06509780883789
    7. ' total' → logprob: -10.44009780883789
    8. 'total' → logprob: -10.44009780883789
    9. ' result' → logprob: -10.81509780883789
    10. ' ' → logprob: -11.31509780883789

Token 110: ' sum' (ID: 4215)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.8944388628005981
    2. 'di' → logprob: -1.0194388628005981
    3. 'sum' → logprob: -2.2694387435913086
    4. ' sum' → logprob: -3.0194387435913086
    5. '(sum' → logprob: -3.5194387435913086
    6. ' di' → logprob: -3.5194387435913086
    7. ' (' → logprob: -4.144438743591309
    8. '(' → logprob: -6.019438743591309
    9. '((' → logprob: -7.644438743591309
    10. '(k' → logprob: -10.144438743591309

Token 111: '(di' (ID: 131744)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.5298017859458923
    2. '(x' → logprob: -1.779801845550537
    3. '(di' → logprob: -2.404801845550537
    4. '([' → logprob: -2.404801845550537
    5. '(i' → logprob: -3.404801845550537
    6. '(' → logprob: -4.154801845550537
    7. '(d' → logprob: -5.154801845550537
    8. '((' → logprob: -5.154801845550537
    9. '(v' → logprob: -7.404801845550537
    10. '([(' → logprob: -7.904801845550537

Token 112: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023343784268945456
    2. '%' → logprob: -7.1273345947265625
    3. ')%' → logprob: -7.5023345947265625
    4. ' )' → logprob: -7.6273345947265625
    5. ' %' → logprob: -7.8773345947265625
    6. '[i' → logprob: -9.627334594726562
    7. 'i' → logprob: -11.002334594726562
    8. '   ' → logprob: -11.752334594726562
    9. ' ' → logprob: -12.502334594726562
    10. '[' → logprob: -12.627334594726562

Token 113: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.2994620242971e-06
    2. ']' → logprob: -12.625008583068848
    3. '])' → logprob: -13.250008583068848
    4. 'len' → logprob: -14.125008583068848
    5. ' k' → logprob: -14.125008583068848
    6. '   ' → logprob: -14.625008583068848
    7. ')' → logprob: -15.000008583068848
    8. '(k' → logprob: -15.375008583068848
    9. '-k' → logprob: -15.500008583068848
    10. 'i' → logprob: -16.62500762939453

Token 114: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00024822709383443
    2. ' ])' → logprob: -8.375247955322266
    3. ']' → logprob: -11.375247955322266
    4. '])
' → logprob: -12.750247955322266
    5. ']%' → logprob: -14.000247955322266
    6. ' ' → logprob: -14.375247955322266
    7. ']))' → logprob: -14.375247955322266
    8. '],' → logprob: -15.250247955322266
    9. ']])' → logprob: -15.375247955322266
    10. '])

' → logprob: -15.750247955322266

Token 115: 'def' (ID: 1314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4271603524684906
    2. '<|end|>' → logprob: -1.802160382270813
    3. 'def' → logprob: -2.3021602630615234
    4. '()' → logprob: -3.4271602630615234
    5. '(' → logprob: -3.8021602630615234
    6. ' %' → logprob: -4.552160263061523
    7. '
' → logprob: -5.927160263061523
    8. '(k' → logprob: -5.927160263061523
    9. '<|end|>' → logprob: -6.177160263061523
    10. '[:]' → logprob: -6.302160263061523

Token 116: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.042762793600559235
    2. 'compute' → logprob: -3.5427627563476562
    3. ' main' → logprob: -5.042762756347656
    4. ' mod' → logprob: -5.292762756347656
    5. ' get' → logprob: -7.667762756347656
    6. ' sum' → logprob: -8.417762756347656
    7. ' i' → logprob: -8.667762756347656
    8. 'mod' → logprob: -9.292762756347656
    9. '__' → logprob: -9.667762756347656
    10. ' __' → logprob: -9.792762756347656

Token 117: '_mod' (ID: 15325)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.022570306435227394
    2. '_mod' → logprob: -4.1475701332092285
    3. '_' → logprob: -5.6475701332092285
    4. '_list' → logprob: -7.0225701332092285
    5. 'sum' → logprob: -7.1475701332092285
    6. '_diff' → logprob: -8.147570610046387
    7. '_val' → logprob: -8.147570610046387
    8. '_s' → logprob: -8.397570610046387
    9. '_max' → logprob: -9.897570610046387
    10. '_m' → logprob: -10.272570610046387

Token 118: '_x' (ID: 7054)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.2543577551841736
    2. '_sum' → logprob: -2.5043578147888184
    3. '(' → logprob: -3.2543578147888184
    4. '_' → logprob: -3.3793578147888184
    5. '_val' → logprob: -3.6293578147888184
    6. '_list' → logprob: -3.7543578147888184
    7. '_value' → logprob: -5.129357814788818
    8. 's' → logprob: -6.129357814788818
    9. '(sum' → logprob: -6.504357814788818
    10. '_di' → logprob: -6.879357814788818

Token 119: '(x' (ID: 4061)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6918528079986572
    2. '(di' → logprob: -1.3168528079986572
    3. 'or' → logprob: -2.6918528079986572
    4. '(sum' → logprob: -3.1918528079986572
    5. '(k' → logprob: -3.4418528079986572
    6. 'sum' → logprob: -3.9418528079986572
    7. '_sum' → logprob: -4.316852569580078
    8. 'k' → logprob: -5.066852569580078
    9. '(val' → logprob: -5.066852569580078
    10. '(' → logprob: -5.191852569580078

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7013307213783264
    2. '):' → logprob: -0.7013307213783264
    3. '[' → logprob: -6.326330661773682
    4. ')' → logprob: -6.701330661773682
    5. '):
' → logprob: -6.826330661773682
    6. '%' → logprob: -6.951330661773682
    7. '[i' → logprob: -7.826330661773682
    8. 's' → logprob: -7.951330661773682
    9. ',k' → logprob: -7.951330661773682
    10. ' ):' → logprob: -8.07633113861084

Token 121: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3735276460647583
    2. 'k' → logprob: -1.2485276460647583
    3. ' m' → logprob: -4.498527526855469
    4. ' y' → logprob: -4.873527526855469
    5. ' ' → logprob: -6.248527526855469
    6. 'm' → logprob: -6.248527526855469
    7. 'y' → logprob: -7.748527526855469
    8. ' x' → logprob: -8.123527526855469
    9. ' mod' → logprob: -8.498527526855469
    10. '2' → logprob: -8.623527526855469

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0053886184468865395
    2. '):
' → logprob: -5.2553887367248535
    3. ')' → logprob: -9.005388259887695
    4. ' ):' → logprob: -10.630388259887695
    5. '):
' → logprob: -12.130388259887695
    6. '):

' → logprob: -14.255388259887695
    7. '   ' → logprob: -14.755388259887695
    8. '=' → logprob: -15.130388259887695
    9. ':' → logprob: -15.255388259887695
    10. ']:' → logprob: -15.755388259887695

Token 123: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15334784984588623
    2. ' x' → logprob: -2.028347969055176
    3. '   ' → logprob: -5.278347969055176
    4. 'return' → logprob: -5.403347969055176
    5. 'x' → logprob: -6.903347969055176
    6. '	return' → logprob: -13.028347969055176
    7. ' ' → logprob: -13.403347969055176
    8. '    ' → logprob: -14.028347969055176
    9. ' (' → logprob: -14.028347969055176
    10. ' ' → logprob: -14.903347969055176

Token 124: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.390865683555603
    2. 'return' (adapté à ' return') → logprob: -1.640865683555603
    3. 'x' → logprob: -2.3908658027648926
    4. ' x' → logprob: -3.2658658027648926
    5. '   ' → logprob: -14.015865325927734
    6. 'eturn' → logprob: -14.640865325927734
    7. ' ' → logprob: -14.765865325927734
    8. ' (' → logprob: -16.265865325927734
    9. '	return' → logprob: -16.265865325927734
    10. '(x' → logprob: -16.390865325927734

Token 125: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16034699976444244
    2. ' x' → logprob: -1.9103469848632812
    3. '(x' → logprob: -9.035346984863281
    4. ' (' → logprob: -13.035346984863281
    5. '(' → logprob: -13.535346984863281
    6. ' ' → logprob: -16.78534698486328
    7. '	x' → logprob: -16.91034698486328
    8. 'pow' → logprob: -17.16034698486328
    9. '((' → logprob: -17.53534698486328
    10. ' ' → logprob: -18.53534698486328

Token 126: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759885907173157
    2. ' %' → logprob: -0.8259885907173157
    3. '%m' → logprob: -10.20098876953125
    4. ' ' → logprob: -12.45098876953125
    5. ' ' → logprob: -13.07598876953125
    6. '%i' → logprob: -13.07598876953125
    7. '%x' → logprob: -13.70098876953125
    8. '%d' → logprob: -14.45098876953125
    9. ')' → logprob: -14.57598876953125
    10. '```' → logprob: -14.95098876953125

Token 127: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019286326132714748
    2. ' m' → logprob: -6.251928806304932
    3. 'k' → logprob: -21.501928329467773
    4. ' ' → logprob: -21.626928329467773
    5. 'x' → logprob: -21.751928329467773
    6. '```' → logprob: -21.876928329467773
    7. ' ' → logprob: -22.126928329467773
    8. '	m' → logprob: -22.126928329467773
    9. '1' → logprob: -22.626928329467773
    10. '(m' → logprob: -22.751928329467773

Token 128: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00445207767188549
    2. '
' → logprob: -5.754452228546143
    3. '<|end|>' → logprob: -7.629452228546143
    4. '#' → logprob: -7.879452228546143
    5. '\' → logprob: -8.879451751708984
    6. '\n' → logprob: -10.004451751708984
    7. ':' → logprob: -10.129451751708984
    8. '[' → logprob: -10.379451751708984
    9. '```' → logprob: -10.379451751708984
    10. ' def' → logprob: -10.879451751708984

Token 130: ' chunk' (ID: 23958)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.048324789851903915
    2. ' solve' → logprob: -3.5483248233795166
    3. ' compute' → logprob: -4.9233245849609375
    4. ' process' → logprob: -5.5483245849609375
    5. 'main' → logprob: -5.5483245849609375
    6. ' mod' → logprob: -7.1733245849609375
    7. ' sum' → logprob: -7.6733245849609375
    8. ' count' → logprob: -7.9233245849609375
    9. 'solve' → logprob: -8.048324584960938
    10. 'compute' → logprob: -8.298324584960938

Token 131: '_sum' (ID: 29859)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.16993571817874908
    2. '_' → logprob: -2.044935703277588
    3. '_size' → logprob: -4.794935703277588
    4. 'ify' → logprob: -5.419935703277588
    5. 's' → logprob: -5.669935703277588
    6. '_array' → logprob: -6.419935703277588
    7. '_s' → logprob: -6.419935703277588
    8. '_(' → logprob: -6.544935703277588
    9. 'def' → logprob: -6.669935703277588
    10. 'ed' → logprob: -6.919935703277588

Token 132: '(di' (ID: 131744)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.342337042093277
    2. '(' → logprob: -2.092337131500244
    3. '(arr' → logprob: -2.592337131500244
    4. '_mod' → logprob: -3.967337131500244
    5. '(lst' → logprob: -4.092337131500244
    6. '_' → logprob: -4.342337131500244
    7. '_list' → logprob: -4.717337131500244
    8. '_s' → logprob: -4.717337131500244
    9. '(data' → logprob: -4.842337131500244
    10. '(s' → logprob: -4.967337131500244

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002195337088778615
    2. 's' → logprob: -6.877195358276367
    3. ',k' → logprob: -7.627195358276367
    4. ' ,' → logprob: -7.752195358276367
    5. '):' → logprob: -9.127195358276367
    6. '_,' → logprob: -10.127195358276367
    7. ',i' → logprob: -10.377195358276367
    8. ',n' → logprob: -11.877195358276367
    9. '):
' → logprob: -11.877195358276367
    10. '[],' → logprob: -12.252195358276367

Token 134: ' n' (ID: 297)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5535178780555725
    2. 'k' → logprob: -0.9285178780555725
    3. ' chunk' → logprob: -4.553517818450928
    4. ' size' → logprob: -4.803517818450928
    5. 'chunk' → logprob: -5.178517818450928
    6. ' m' → logprob: -6.303517818450928
    7. 'size' → logprob: -6.678517818450928
    8. 'm' → logprob: -6.928517818450928
    9. ' n' → logprob: -7.303517818450928
    10. 'n' → logprob: -8.303518295288086

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061653465032577515
    2. '):' → logprob: -3.0616533756256104
    3. '):
' → logprob: -4.6866536140441895
    4. ',k' → logprob: -6.0616536140441895
    5. 'k' → logprob: -7.5616536140441895
    6. ')' → logprob: -7.6866536140441895
    7. ' ,' → logprob: -8.686653137207031
    8. '   ' → logprob: -10.186653137207031
    9. 'def' → logprob: -10.311653137207031
    10. '=' → logprob: -10.436653137207031

Token 136: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6422867774963379
    2. ' k' → logprob: -0.7672867774963379
    3. ' m' → logprob: -5.267286777496338
    4. 'm' → logprob: -5.517286777496338
    5. ' chunk' → logprob: -8.76728630065918
    6. 'chunk' → logprob: -8.76728630065918
    7. '   ' → logprob: -10.26728630065918
    8. ' size' → logprob: -10.51728630065918
    9. ')' → logprob: -10.76728630065918
    10. 'size' → logprob: -11.26728630065918

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018647374818101525
    2. ',' → logprob: -6.876864910125732
    3. '):
' → logprob: -7.126864910125732
    4. ')' → logprob: -10.626864433288574
    5. ' ):' → logprob: -14.001864433288574
    6. ':' → logprob: -14.376864433288574
    7. '):
' → logprob: -14.626864433288574
    8. '=' → logprob: -14.876864433288574
    9. 's' → logprob: -15.001864433288574
    10. '):

' → logprob: -15.251864433288574

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007059176918119192
    2. ':' → logprob: -5.257059097290039
    3. ':
' → logprob: -6.632059097290039
    4. ' =' → logprob: -9.132059097290039
    5. '
' → logprob: -9.632059097290039
    6. '=' → logprob: -10.132059097290039
    7. '[' → logprob: -10.507059097290039
    8. ',' → logprob: -10.507059097290039
    9. '   ' → logprob: -10.507059097290039
    10. '[]' → logprob: -10.632059097290039

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.409775733947754
    2. '   ' → logprob: -1.784775733947754
    3. ' return' → logprob: -2.034775733947754
    4. 'result' → logprob: -2.159775733947754
    5. ' res' → logprob: -2.409775733947754
    6. '[' → logprob: -2.784775733947754
    7. ' [' → logprob: -3.159775733947754
    8. 'sum' → logprob: -3.159775733947754
    9. ' result' → logprob: -3.534775733947754
    10. 'res' → logprob: -3.784775733947754

Token 140: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3906126916408539
    2. '[' → logprob: -1.5156127214431763
    3. ' sum' → logprob: -2.3906126022338867
    4. ' [' → logprob: -4.515612602233887
    5. '(sum' → logprob: -7.390612602233887
    6. '   ' → logprob: -9.140612602233887
    7. '[s' → logprob: -9.640612602233887
    8. '[i' → logprob: -9.765612602233887
    9. '[(' → logprob: -10.140612602233887
    10. ' ' → logprob: -10.390612602233887

Token 141: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.500003814697266
    3. '([' → logprob: -15.250003814697266
    4. 'di' → logprob: -16.625003814697266
    5. '(d' → logprob: -17.250003814697266
    6. ' di' → logprob: -17.500003814697266
    7. '((' → logprob: -17.625003814697266
    8. '(div' → logprob: -17.750003814697266
    9. '(dis' → logprob: -19.000003814697266
    10. '(
' → logprob: -19.000003814697266

Token 142: '[:' (ID: 7808)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5013255476951599
    2. '[:' → logprob: -1.0013256072998047
    3. '[k' → logprob: -4.251325607299805
    4. '[' → logprob: -5.001325607299805
    5. '[i' → logprob: -5.876325607299805
    6. ')' → logprob: -6.501325607299805
    7. '[(' → logprob: -7.751325607299805
    8. 'n' → logprob: -8.376325607299805
    9. ':n' → logprob: -9.376325607299805
    10. '[]' → logprob: -9.376325607299805

Token 143: '(' (ID: 7)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009923716075718403
    2. 'n' → logprob: -4.634923934936523
    3. ' k' → logprob: -9.759923934936523
    4. '   ' → logprob: -10.509923934936523
    5. '(k' → logprob: -10.509923934936523
    6. '(n' → logprob: -10.634923934936523
    7. 'nk' → logprob: -11.259923934936523
    8. ' n' → logprob: -11.884923934936523
    9. ']' → logprob: -12.759923934936523
    10. '(' → logprob: -13.134923934936523

Token 144: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18355102837085724
    2. 'n' → logprob: -1.8085510730743408
    3. ' n' → logprob: -6.558550834655762
    4. ' k' → logprob: -6.933550834655762
    5. '   ' → logprob: -7.058550834655762
    6. '(n' → logprob: -8.433550834655762
    7. '(k' → logprob: -8.933550834655762
    8. ' (' → logprob: -9.933550834655762
    9. ')' → logprob: -10.308550834655762
    10. ' ' → logprob: -10.683550834655762

Token 145: '-' (ID: 12)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.19897420704364777
    2. '*' → logprob: -2.948974132537842
    3. ' *' → logprob: -3.198974132537842
    4. 'k' → logprob: -3.823974132537842
    5. ' -' → logprob: -4.323974132537842
    6. ' ' → logprob: -4.823974132537842
    7. '   ' → logprob: -4.948974132537842
    8. ')]' → logprob: -5.073974132537842
    9. ')' → logprob: -5.073974132537842
    10. '//' → logprob: -5.198974132537842

Token 146: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0038240645080804825
    2. ' k' → logprob: -5.628824234008789
    3. '(k' → logprob: -9.753824234008789
    4. '1' → logprob: -10.003824234008789
    5. '   ' → logprob: -10.128824234008789
    6. ' (' → logprob: -10.253824234008789
    7. ' ' → logprob: -10.878824234008789
    8. 'n' → logprob: -12.253824234008789
    9. '  ' → logprob: -12.503824234008789
    10. '-k' → logprob: -12.878824234008789

Token 147: ')%' (ID: 57656)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.008974391035735607
    2. ')' → logprob: -4.883974552154541
    3. '*k' → logprob: -6.758974552154541
    4. ')*(' → logprob: -9.133974075317383
    5. ')//' → logprob: -10.258974075317383
    6. ')+' → logprob: -10.383974075317383
    7. '+' → logprob: -11.633974075317383
    8. ' )' → logprob: -12.008974075317383
    9. '+k' → logprob: -12.758974075317383
    10. ']*' → logprob: -12.758974075317383

Token 148: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2547355890274048
    2. ' k' → logprob: -1.5047355890274048
    3. '+' → logprob: -6.504735469818115
    4. '+k' → logprob: -7.004735469818115
    5. ' +' → logprob: -9.629735946655273
    6. ' (' → logprob: -9.629735946655273
    7. ')' → logprob: -9.879735946655273
    8. '
' → logprob: -10.004735946655273
    9. ' ' → logprob: -10.129735946655273
    10. '(k' → logprob: -10.254735946655273

Token 149: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10286645591259003
    2. '+' → logprob: -2.3528664112091064
    3. ']' → logprob: -7.1028666496276855
    4. '+k' → logprob: -7.1028666496276855
    5. ' ])' → logprob: -7.6028666496276855
    6. ' +' → logprob: -8.352866172790527
    7. ')' → logprob: -9.727866172790527
    8. ':' → logprob: -10.102866172790527
    9. ']+' → logprob: -10.352866172790527
    10. '*' → logprob: -10.477866172790527

Token 150: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06228136271238327
    2. '<|end|>' → logprob: -3.312281370162964
    3. '+' → logprob: -4.937281131744385
    4. '(' → logprob: -5.312281131744385
    5. ' ' → logprob: -5.312281131744385
    6. '%' → logprob: -6.437281131744385
    7. '*' → logprob: -6.812281131744385
    8. '
' → logprob: -7.187281131744385
    9. '[' → logprob: -7.562281131744385
    10. ':' → logprob: -7.687281131744385

Token 151: ' chunk' (ID: 23958)
  Prédit: ' chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chunk' → logprob: -0.018471114337444305
    2. ' ' → logprob: -4.8934712409973145
    3. 'chunk' → logprob: -5.7684712409973145
    4. ' compute' → logprob: -5.8934712409973145
    5. ' _' → logprob: -6.2684712409973145
    6. '_' → logprob: -6.7684712409973145
    7. ' i' → logprob: -7.7684712409973145
    8. ' mod' → logprob: -7.8934712409973145
    9. '_chunk' → logprob: -8.018470764160156
    10. ' def' → logprob: -8.893470764160156

Token 152: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0006816957029514015
    2. '_' → logprob: -7.6256818771362305
    3. '_s' → logprob: -8.62568187713623
    4. 'sum' → logprob: -12.00068187713623
    5. '_size' → logprob: -12.25068187713623
    6. '_chunk' → logprob: -13.75068187713623
    7. ' _' → logprob: -14.62568187713623
    8. 's' → logprob: -14.75068187713623
    9. '_split' → logprob: -15.50068187713623
    10. '_SUM' → logprob: -15.62568187713623

Token 153: '_zero' (ID: 53468)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(di' → logprob: -7.088138227118179e-05
    2. '(' → logprob: -10.000070571899414
    3. '(def' → logprob: -10.750070571899414
    4. '_di' → logprob: -13.625070571899414
    5. '(d' → logprob: -13.625070571899414
    6. ' (' → logprob: -15.125070571899414
    7. '(dis' → logprob: -15.250070571899414
    8. '(
' → logprob: -15.375070571899414
    9. '(dim' → logprob: -15.500070571899414
    10. '(de' → logprob: -16.000070571899414

Token 154: '(d' (ID: 2572)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.27442529797554016
    2. '_flags' → logprob: -1.5244252681732178
    3. '_' → logprob: -4.649425506591797
    4. 's' → logprob: -5.524425506591797
    5. 'es' → logprob: -6.274425506591797
    6. '_(' → logprob: -6.274425506591797
    7. '(' → logprob: -6.899425506591797
    8. '_flag' → logprob: -7.149425506591797
    9. '(d' → logprob: -7.274425506591797
    10. '(di' → logprob: -7.649425506591797

Token 155: 'z' (ID: 89)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044044392416253686
    2. ',m' → logprob: -8.75044059753418
    3. ' ,' → logprob: -9.00044059753418
    4. ',k' → logprob: -9.75044059753418
    5. ',n' → logprob: -10.00044059753418
    6. '):' → logprob: -11.00044059753418
    7. 'def' → logprob: -12.12544059753418
    8. '   ' → logprob: -12.37544059753418
    9. '[' → logprob: -12.50044059753418
    10. '_,' → logprob: -12.62544059753418

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009718307293951511
    2. '):' → logprob: -5.259718418121338
    3. 'z' → logprob: -6.759718418121338
    4. ' ,' → logprob: -6.884718418121338
    5. ')' → logprob: -7.509718418121338
    6. '_,' → logprob: -7.884718418121338
    7. ']):' → logprob: -7.884718418121338
    8. '_zero' → logprob: -8.75971794128418
    9. '])' → logprob: -9.13471794128418
    10. 'zero' → logprob: -9.75971794128418

Token 157: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6858589053153992
    2. ' k' → logprob: -1.185858964920044
    3. ' n' → logprob: -2.185858964920044
    4. 'n' → logprob: -3.060858964920044
    5. 'm' → logprob: -4.560858726501465
    6. ' m' → logprob: -4.560858726501465
    7. ' z' → logprob: -6.435858726501465
    8. 'z' → logprob: -6.560858726501465
    9. ' q' → logprob: -6.935858726501465
    10. '0' → logprob: -7.060858726501465

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.97024549683556e-05
    2. ',k' → logprob: -9.500080108642578
    3. ' ,' → logprob: -12.375080108642578
    4. ',n' → logprob: -15.875080108642578
    5. '   ' → logprob: -16.375080108642578
    6. 'def' → logprob: -16.375080108642578
    7. ',
' → logprob: -16.375080108642578
    8. ')' → logprob: -16.500080108642578
    9. 'k' → logprob: -17.375080108642578
    10. ',d' → logprob: -17.875080108642578

Token 159: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0037340454291552305
    2. ' k' → logprob: -5.628734111785889
    3. 'm' → logprob: -9.37873363494873
    4. 'n' → logprob: -10.37873363494873
    5. 'z' → logprob: -12.25373363494873
    6. ')' → logprob: -12.62873363494873
    7. ' m' → logprob: -13.37873363494873
    8. ' n' → logprob: -13.50373363494873
    9. '   ' → logprob: -13.62873363494873
    10. ' ' → logprob: -13.75373363494873

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001978714717552066
    2. '):
' → logprob: -6.251978874206543
    3. ')' → logprob: -10.251978874206543
    4. ',' → logprob: -11.626978874206543
    5. '):
' → logprob: -13.251978874206543
    6. '   ' → logprob: -13.876978874206543
    7. ']:' → logprob: -14.251978874206543
    8. ' ):' → logprob: -14.376978874206543
    9. '):

' → logprob: -14.751978874206543
    10. ':' → logprob: -15.126978874206543

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006589128170162439
    2. ' return' → logprob: -5.631588935852051
    3. 'return' → logprob: -6.131588935852051
    4. ' =' → logprob: -7.756588935852051
    5. '=' → logprob: -8.75658893585205
    6. 'sum' → logprob: -9.63158893585205
    7. ' sum' → logprob: -9.75658893585205
    8. ':' → logprob: -10.63158893585205
    9. ' s' → logprob: -11.63158893585205
    10. '   ' → logprob: -11.75658893585205

Token 162: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7050403952598572
    2. 'return' (adapté à ' return') → logprob: -0.8300403952598572
    3. '   ' → logprob: -3.455040454864502
    4. ' sum' → logprob: -3.955040454864502
    5. 'sum' → logprob: -4.205040454864502
    6. ' s' → logprob: -6.830040454864502
    7. '0' → logprob: -7.080040454864502
    8. 's' → logprob: -7.205040454864502
    9. ' total' → logprob: -8.080039978027344
    10. ' ' → logprob: -8.705039978027344

Token 163: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.47740134596824646
    2. ' sum' → logprob: -0.9774013757705688
    3. 'dz' → logprob: -6.727401256561279
    4. ' dz' → logprob: -6.852401256561279
    5. '0' → logprob: -7.477401256561279
    6. ' ' → logprob: -8.977401733398438
    7. 'sz' → logprob: -9.477401733398438
    8. '[' → logprob: -9.664901733398438
    9. '(sum' → logprob: -10.039901733398438
    10. 'len' → logprob: -10.477401733398438

Token 164: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0002619318547658622
    2. '(' → logprob: -9.375262260437012
    3. '([' → logprob: -9.875262260437012
    4. '(z' → logprob: -10.000262260437012
    5. 'dz' → logprob: -10.250262260437012
    6. ' dz' → logprob: -10.375262260437012
    7. ' (' → logprob: -12.875262260437012
    8. '[' → logprob: -12.875262260437012
    9. '((' → logprob: -13.625262260437012
    10. '[d' → logprob: -13.625262260437012

Token 165: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.020449040457606316
    2. '[:' → logprob: -4.020449161529541
    3. '[z' → logprob: -6.770449161529541
    4. '[' → logprob: -7.270449161529541
    5. ':' → logprob: -9.520448684692383
    6. '[n' → logprob: -9.770448684692383
    7. ')' → logprob: -9.895448684692383
    8. '[:-' → logprob: -10.020448684692383
    9. ':z' → logprob: -10.645448684692383
    10. '[k' → logprob: -10.895448684692383

Token 166: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -11.875012397766113
    3. '[(' → logprob: -12.500012397766113
    4. '[n' → logprob: -13.750012397766113
    5. ' [:' → logprob: -15.000012397766113
    6. '[:]' → logprob: -15.375012397766113
    7. ')' → logprob: -15.750012397766113
    8. '[:-' → logprob: -16.00001335144043
    9. '[k' → logprob: -16.87501335144043
    10. '   ' → logprob: -17.00001335144043

Token 167: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12117672711610794
    2. 'k' → logprob: -2.9961767196655273
    3. 'n' → logprob: -3.6211767196655273
    4. '(k' → logprob: -4.121176719665527
    5. ' (' → logprob: -4.496176719665527
    6. '((' → logprob: -5.121176719665527
    7. '(' → logprob: -5.621176719665527
    8. ' n' → logprob: -8.621176719665527
    9. ' k' → logprob: -8.996176719665527
    10. '   ' → logprob: -10.621176719665527

Token 168: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04217827692627907
    2. '(n' → logprob: -3.4171783924102783
    3. 'k' → logprob: -5.042178153991699
    4. ' n' → logprob: -6.792178153991699
    5. ' (' → logprob: -7.792178153991699
    6. '(k' → logprob: -7.792178153991699
    7. '   ' → logprob: -10.0421781539917
    8. 'nk' → logprob: -11.0421781539917
    9. ' k' → logprob: -11.9171781539917
    10. '(' → logprob: -12.0421781539917

Token 169: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03191813826560974
    2. '-k' → logprob: -4.156918048858643
    3. ')%' → logprob: -4.531918048858643
    4. ')' → logprob: -6.156918048858643
    5. '%' → logprob: -6.406918048858643
    6. ' -' → logprob: -7.406918048858643
    7. '   ' → logprob: -8.5319185256958
    8. ' %' → logprob: -9.6569185256958
    9. '-)' → logprob: -9.7819185256958
    10. '-%' → logprob: -9.9069185256958

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007887827814556658
    2. 'k' → logprob: -7.750788688659668
    3. '-' → logprob: -8.250788688659668
    4. ' ' → logprob: -10.000788688659668
    5. '2' → logprob: -11.000788688659668
    6. '%' → logprob: -11.125788688659668
    7. '   ' → logprob: -11.875788688659668
    8. ')' → logprob: -12.625788688659668
    9. '
' → logprob: -12.750788688659668
    10. ' k' → logprob: -13.375788688659668

Token 171: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.006167559418827295
    2. ')' → logprob: -5.131167411804199
    3. ']%' → logprob: -9.3811674118042
    4. ')])' → logprob: -10.0061674118042
    5. ' )' → logprob: -10.2561674118042
    6. ')//' → logprob: -10.3811674118042
    7. '%' → logprob: -10.8811674118042
    8. ')]' → logprob: -11.5061674118042
    9. '   ' → logprob: -11.7561674118042
    10. ')#' → logprob: -13.6311674118042

Token 172: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023298001906368881
    2. ' k' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.500232696533203
    4. ' ' → logprob: -15.000232696533203
    5. '  ' → logprob: -15.500232696533203
    6. ')' → logprob: -15.875232696533203
    7. '	k' → logprob: -16.000232696533203
    8. '```' → logprob: -16.625232696533203
    9. '    ' → logprob: -17.187732696533203
    10. '(k' → logprob: -17.500232696533203

Token 173: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008432662114501
    2. ')' → logprob: -5.133432865142822
    3. '+' → logprob: -6.133432865142822
    4. ')])' → logprob: -8.633432388305664
    5. ')]' → logprob: -10.008432388305664
    6. ']' → logprob: -10.383432388305664
    7. ')+' → logprob: -10.508432388305664
    8. '])+' → logprob: -11.008432388305664
    9. '))' → logprob: -11.508432388305664
    10. ']+' → logprob: -11.633432388305664

Token 174: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04448893293738365
    2. '<|end|>' → logprob: -3.7944889068603516
    3. 'def' → logprob: -4.919488906860352
    4. '[' → logprob: -5.919488906860352
    5. '
' → logprob: -6.044488906860352
    6. '+' → logprob: -6.044488906860352
    7. ']' → logprob: -6.669488906860352
    8. '(' → logprob: -6.794488906860352
    9. '%' → logprob: -7.169488906860352
    10. ':' → logprob: -7.169488906860352

Token 175: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09116663783788681
    2. ' main' → logprob: -2.5911667346954346
    3. 'solve' → logprob: -4.8411664962768555
    4. 'process' → logprob: -6.3411664962768555
    5. ' solve' → logprob: -7.0911664962768555
    6. 'compute' → logprob: -7.4661664962768555
    7. 'chunk' → logprob: -8.341166496276855
    8. 'sum' → logprob: -9.091166496276855
    9. 'max' → logprob: -9.341166496276855
    10. 'calculate' → logprob: -9.591166496276855

Token 176: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.41866585687967e-06
    2. ' ():' → logprob: -12.250008583068848
    3. '():
' → logprob: -12.875008583068848
    4. '()' → logprob: -13.875008583068848
    5. '(' → logprob: -17.00000762939453
    6. '_' → logprob: -18.12500762939453
    7. '():
' → logprob: -18.37500762939453
    8. '()>' → logprob: -19.25000762939453
    9. '(:' → logprob: -19.75000762939453
    10. '(":' → logprob: -19.87500762939453

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040434934198856354
    2. '
' → logprob: -4.040434837341309
    3. '(n' → logprob: -4.665434837341309
    4. 'n' → logprob: -5.540434837341309
    5. '    
' → logprob: -5.665434837341309
    6. ' n' → logprob: -5.665434837341309
    7. '	n' → logprob: -8.165434837341309
    8. ' 
' → logprob: -8.415434837341309
    9. '\n' → logprob: -9.165434837341309
    10. '    ' → logprob: -9.165434837341309

Token 178: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.05750987306237221
    2. 'n' → logprob: -3.0575098991394043
    3. ' k' → logprob: -5.432509899139404
    4. '   ' → logprob: -5.682509899139404
    5. ' n' → logprob: -6.932509899139404
    6. 'q' → logprob: -9.432509422302246
    7. 'import' → logprob: -11.557509422302246
    8. ' ' → logprob: -12.182509422302246
    9. '_k' → logprob: -12.182509422302246
    10. 't' → logprob: -12.307509422302246

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020254701375961304
    2. ',q' → logprob: -6.502025604248047
    3. ' =' → logprob: -7.752025604248047
    4. ',n' → logprob: -10.127025604248047
    5. '=' → logprob: -10.627025604248047
    6. ' ,' → logprob: -11.127025604248047
    7. 'q' → logprob: -12.252025604248047
    8. ',Q' → logprob: -12.377025604248047
    9. ',k' → logprob: -13.377025604248047
    10. ',m' → logprob: -13.752025604248047

Token 180: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.021493492648005486
    2. ' q' → logprob: -3.896493434906006
    3. 'n' → logprob: -7.021493434906006
    4. ' n' → logprob: -10.021493911743164
    5. 'k' → logprob: -12.146493911743164
    6. ' ' → logprob: -13.021493911743164
    7. '<|end|>' → logprob: -13.271493911743164
    8. 'm' → logprob: -13.896493911743164
    9. '   ' → logprob: -14.521493911743164
    10. '  ' → logprob: -14.521493911743164

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759880542755127
    2. ' =' → logprob: -0.8259880542755127
    3. ',' → logprob: -9.950987815856934
    4. ' ' → logprob: -15.200987815856934
    5. ')' → logprob: -15.700987815856934
    6. '=k' → logprob: -16.07598876953125
    7. '   ' → logprob: -16.45098876953125
    8. '=input' → logprob: -16.70098876953125
    9. ')=' → logprob: -16.95098876953125
    10. ',k' → logprob: -16.95098876953125

Token 182: ' get' (ID: 717)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14973585307598114
    2. 'i' → logprob: -2.024735927581787
    3. ' get' → logprob: -5.399735927581787
    4. 'get' → logprob: -6.024735927581787
    5. ' ' → logprob: -10.024735450744629
    6. '  ' → logprob: -10.274735450744629
    7. '   ' → logprob: -10.899735450744629
    8. '    ' → logprob: -14.024735450744629
    9. ' geti' → logprob: -14.149735450744629
    10. '	i' → logprob: -14.649735450744629

Token 183: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.4736459888808895e-05
    2. '_' → logprob: -11.250014305114746
    3. '_q' → logprob: -13.500014305114746
    4. ' _' → logprob: -15.625014305114746
    5. 'k' → logprob: -18.000015258789062
    6. '_key' → logprob: -18.000015258789062
    7. '_s' → logprob: -18.500015258789062
    8. '_n' → logprob: -18.750015258789062
    9. '_d' → logprob: -19.000015258789062
    10. '_j' → logprob: -19.000015258789062

Token 184: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.016806328669190407
    2. '()' → logprob: -4.391806125640869
    3. '_query' → logprob: -6.891806125640869
    4. ',' → logprob: -6.891806125640869
    5. 'q' → logprob: -7.266806125640869
    6. ',q' → logprob: -7.266806125640869
    7. '(),' → logprob: -8.266806602478027
    8. '_' → logprob: -8.516806602478027
    9. ',_' → logprob: -8.891806602478027
    10. '_queries' → logprob: -9.266806602478027

Token 185: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14359068870544434
    2. '   ' → logprob: -2.7685906887054443
    3. '<|end|>' → logprob: -3.2685906887054443
    4. '    
' → logprob: -4.143590927124023
    5. 'd' → logprob: -5.018590927124023
    6. 'def' → logprob: -6.143590927124023
    7. '  
' → logprob: -6.393590927124023
    8. '```' → logprob: -6.768590927124023
    9. '()' → logprob: -7.143590927124023
    10. 'k' → logprob: -7.518590927124023

Token 186: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018714502453804016
    2. '   ' → logprob: -4.143714427947998
    3. '    
' → logprob: -6.643714427947998
    4. 'd' → logprob: -8.018714904785156
    5. '<|end|>' → logprob: -8.268714904785156
    6. '  
' → logprob: -8.768714904785156
    7. 'for' → logprob: -9.393714904785156
    8. 'def' → logprob: -9.393714904785156
    9. '```' → logprob: -9.518714904785156
    10. '
' → logprob: -9.643714904785156

Token 187: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.004128388129174709
    2. 'for' → logprob: -6.129128456115723
    3. 'n' → logprob: -6.629128456115723
    4. 'm' → logprob: -7.754128456115723
    5. ' d' → logprob: -9.254128456115723
    6. '   ' → logprob: -10.254128456115723
    7. ' for' → logprob: -10.879128456115723
    8. 'mod' → logprob: -11.754128456115723
    9. 'di' → logprob: -12.004128456115723
    10. 'data' → logprob: -12.254128456115723

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16041330993175507
    2. '=' → logprob: -1.9104132652282715
    3. ',' → logprob: -8.66041374206543
    4. '   ' → logprob: -12.53541374206543
    5. '=[]' → logprob: -12.66041374206543
    6. 'ef' → logprob: -13.16041374206543
    7. ' ' → logprob: -13.41041374206543
    8. 's' → logprob: -13.91041374206543
    9. '  ' → logprob: -14.53541374206543
    10. '_' → logprob: -14.66041374206543

Token 189: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.18756532669067383
    2. 'i' → logprob: -1.9375653266906738
    3. ' get' → logprob: -3.812565326690674
    4. ' i' → logprob: -5.437565326690674
    5. '(get' → logprob: -7.812565326690674
    6. '[get' → logprob: -9.812564849853516
    7. '[i' → logprob: -10.937564849853516
    8. '=get' → logprob: -11.312564849853516
    9. ' ' → logprob: -11.687564849853516
    10. '  ' → logprob: -12.312564849853516

Token 190: '_d' (ID: 1565)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006688379216939211
    2. 'd' → logprob: -5.256688594818115
    3. '()
' → logprob: -6.881688594818115
    4. '_d' → logprob: -9.131688117980957
    5. '_' → logprob: -9.381688117980957
    6. '(' → logprob: -9.506688117980957
    7. '2' → logprob: -10.006688117980957
    8. 'k' → logprob: -10.631688117980957
    9. ' ()' → logprob: -11.006688117980957
    10. 'q' → logprob: -11.881688117980957

Token 191: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20156985521316528
    2. '()
' → logprob: -1.7015697956085205
    3. '()
' → logprob: -8.951569557189941
    4. '()

' → logprob: -11.201569557189941
    5. '(k' → logprob: -12.201569557189941
    6. '(' → logprob: -12.326569557189941
    7. ' ()' → logprob: -13.451569557189941
    8. '()\' → logprob: -14.826569557189941
    9. ' ()
' → logprob: -14.951569557189941
    10. '(m' → logprob: -15.076569557189941

Token 192: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22471606731414795
    2. '   ' → logprob: -1.849716067314148
    3. ' m' → logprob: -3.8497161865234375
    4. ' for' → logprob: -4.3497161865234375
    5. 'for' → logprob: -4.7247161865234375
    6. 'mod' → logprob: -7.3497161865234375
    7. ' mod' → logprob: -10.099716186523438
    8. 'd' → logprob: -10.099716186523438
    9. '```' → logprob: -10.099716186523438
    10. ' ' → logprob: -10.224716186523438

Token 193: ' for' (ID: 395)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023425528779625893
    2. 'for' (adapté à ' for') → logprob: -3.898425579071045
    3. '   ' → logprob: -7.023425579071045
    4. ' for' → logprob: -7.398425579071045
    5. 'n' → logprob: -7.648425579071045
    6. ' m' → logprob: -7.773425579071045
    7. 'mod' → logprob: -8.523425102233887
    8. 'd' → logprob: -9.523425102233887
    9. 'results' → logprob: -9.773425102233887
    10. 'di' → logprob: -10.398425102233887

Token 194: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0009124171338044107
    2. '_' → logprob: -7.000912189483643
    3. ' ' → logprob: -14.0009126663208
    4. ' ' → logprob: -15.8759126663208
    5. ' i' → logprob: -17.125911712646484
    6. ' __' → logprob: -18.750911712646484
    7. ' _
' → logprob: -20.125911712646484
    8. ' ‌' → logprob: -20.250911712646484
    9. '_query' → logprob: -20.750911712646484
    10. ' query' → logprob: -21.250911712646484

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03374839946627617
    2. 'in' → logprob: -3.4087483882904053
    3. ' ' → logprob: -9.783748626708984
    4. '	in' → logprob: -11.033748626708984
    5. '   ' → logprob: -11.908748626708984
    6. '```' → logprob: -12.283748626708984
    7. '  ' → logprob: -12.408748626708984
    8. 'n' → logprob: -13.283748626708984
    9. 'i' → logprob: -13.533748626708984
    10. 'import' → logprob: -13.658748626708984

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5231506824493408
    2. ' range' → logprob: -0.8981506824493408
    3. ' ' → logprob: -12.148150444030762
    4. 'd' → logprob: -12.523150444030762
    5. '(range' → logprob: -12.648150444030762
    6. 'ange' → logprob: -13.398150444030762
    7. 'q' → logprob: -13.398150444030762
    8. '  ' → logprob: -13.648150444030762
    9. ' in' → logprob: -13.773150444030762
    10. 'in' → logprob: -13.898150444030762

Token 197: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00025228000595234334
    2. '(' → logprob: -8.750252723693848
    3. ' (' → logprob: -9.750252723693848
    4. 'q' → logprob: -10.375252723693848
    5. ' q' → logprob: -12.375252723693848
    6. '()' → logprob: -18.37525177001953
    7. '	q' → logprob: -18.87525177001953
    8. '(query' → logprob: -19.12525177001953
    9. '_q' → logprob: -19.25025177001953
    10. '(i' → logprob: -20.00025177001953

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036851167678833008
    2. '):
' → logprob: -5.628684997558594
    3. ':' → logprob: -10.253684997558594
    4. ')' → logprob: -10.503684997558594
    5. ' ):' → logprob: -11.503684997558594
    6. '():' → logprob: -11.753684997558594
    7. '   ' → logprob: -13.253684997558594
    8. '):
' → logprob: -13.503684997558594
    9. '():
' → logprob: -14.628684997558594
    10. ''):' → logprob: -15.878684997558594

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4813286364078522
    2. '   ' → logprob: -0.9813286066055298
    3. '    ' → logprob: -6.48132848739624
    4. 'query' → logprob: -6.48132848739624
    5. '    
' → logprob: -6.73132848739624
    6. '	   ' → logprob: -7.23132848739624
    7. ' query' → logprob: -7.23132848739624
    8. '_query' → logprob: -8.231328964233398
    9. '
' → logprob: -8.481328964233398
    10. '        
' → logprob: -8.981328964233398

Token 200: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20526477694511414
    2. '   ' → logprob: -2.2052648067474365
    3. 'query' → logprob: -3.3302648067474365
    4. ' x' → logprob: -3.9552648067474365
    5. 'l' → logprob: -4.705264568328857
    6. 'n' (adapté à ' n') → logprob: -5.330264568328857
    7. ' query' → logprob: -6.330264568328857
    8. 'a' → logprob: -6.705264568328857
    9. 'k' → logprob: -6.830264568328857
    10. ' l' → logprob: -7.580264568328857

Token 201: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3538937568664551
    2. '=' → logprob: -1.353893756866455
    3. ',' → logprob: -3.228893756866455
    4. ')' → logprob: -9.603893280029297
    5. '   ' → logprob: -10.103893280029297
    6. ',n' → logprob: -10.853893280029297
    7. ',k' → logprob: -10.853893280029297
    8. '=query' → logprob: -10.978893280029297
    9. ' ,' → logprob: -11.728893280029297
    10. ',q' → logprob: -12.228893280029297

Token 202: ' x' (ID: 1215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.24894894659519196
    2. 'x' → logprob: -1.8739489316940308
    3. '=' → logprob: -3.8739490509033203
    4. 'k' → logprob: -4.37394905090332
    5. ' =' → logprob: -4.49894905090332
    6. ' m' → logprob: -4.62394905090332
    7. ' x' → logprob: -5.62394905090332
    8. 'r' → logprob: -5.99894905090332
    9. 'mod' → logprob: -6.49894905090332
    10. 'a' → logprob: -7.24894905090332

Token 203: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327321529388428
    2. '=' → logprob: -0.7577321529388428
    3. ',' → logprob: -9.007732391357422
    4. ' ' → logprob: -12.632732391357422
    5. '   ' → logprob: -12.882732391357422
    6. ')' → logprob: -13.632732391357422
    7. '  ' → logprob: -14.382732391357422
    8. '    ' → logprob: -14.382732391357422
    9. ')=' → logprob: -15.257732391357422
    10. 'x' → logprob: -15.382732391357422

Token 204: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010018493980169296
    2. 'y' → logprob: -5.385018348693848
    3. ' m' → logprob: -6.135018348693848
    4. '=' → logprob: -6.510018348693848
    5. ' =' → logprob: -7.635018348693848
    6. 'c' → logprob: -8.260018348693848
    7. 'k' → logprob: -8.510018348693848
    8. ' y' → logprob: -9.260018348693848
    9. 'z' → logprob: -9.260018348693848
    10. 'p' → logprob: -9.385018348693848

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134616017341614
    2. ' =' → logprob: -1.3134615421295166
    3. '   ' → logprob: -9.313461303710938
    4. ')' → logprob: -9.313461303710938
    5. ')=' → logprob: -11.188461303710938
    6. ',' → logprob: -13.688461303710938
    7. ' ' → logprob: -13.813461303710938
    8. '	' → logprob: -13.938461303710938
    9. '    ' → logprob: -14.188461303710938
    10. '  ' → logprob: -14.813461303710938

Token 206: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.320339173078537
    2. 'get' → logprob: -1.3203392028808594
    3. 'i' → logprob: -5.445339202880859
    4. ' i' → logprob: -5.945339202880859
    5. '   ' → logprob: -9.94533920288086
    6. '=get' → logprob: -10.69533920288086
    7. '    ' → logprob: -11.07033920288086
    8. '  ' → logprob: -11.69533920288086
    9. ' ' → logprob: -11.69533920288086
    10. ' geti' → logprob: -12.32033920288086

Token 207: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.0002489423204679042
    2. 'query' → logprob: -8.750248908996582
    3. '()' → logprob: -9.500248908996582
    4. '()
' → logprob: -12.000248908996582
    5. '_q' → logprob: -12.875248908996582
    6. '_' → logprob: -13.000248908996582
    7. ' query' → logprob: -13.375248908996582
    8. 'Query' → logprob: -15.125248908996582
    9. '_Query' → logprob: -15.250248908996582
    10. '(query' → logprob: -15.500248908996582

Token 208: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03806444630026817
    2. '()
' → logprob: -3.288064479827881
    3. '()
' → logprob: -11.413064002990723
    4. '():
' → logprob: -12.538064002990723
    5. '()`' → logprob: -12.538064002990723
    6. '()

' → logprob: -13.038064002990723
    7. '():' → logprob: -14.038064002990723
    8. '()\' → logprob: -14.788064002990723
    9. '())' → logprob: -15.038064002990723
    10. '       ' → logprob: -15.288064002990723

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1030782014131546
    2. '
' → logprob: -2.3530781269073486
    3. '<|end|>' → logprob: -6.478078365325928
    4. '        
' → logprob: -7.353078365325928
    5. ',' → logprob: -8.72807788848877
    6. '
' → logprob: -9.35307788848877
    7. '' → logprob: -9.47807788848877
    8. '```' → logprob: -9.60307788848877
    9. '	' → logprob: -9.97807788848877
    10. '   ' → logprob: -9.97807788848877

Token 210: ' di' (ID: 1320)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35783588886260986
    2. ' di' → logprob: -1.6078358888626099
    3. 'di' (adapté à ' di') → logprob: -3.2328357696533203
    4. '
' → logprob: -3.8578357696533203
    5. '   ' → logprob: -4.35783576965332
    6. ' if' → logprob: -5.10783576965332
    7. 'd' → logprob: -5.85783576965332
    8. ' d' → logprob: -6.10783576965332
    9. 'if' → logprob: -6.23283576965332
    10. 'x' → logprob: -6.35783576965332

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632683515548706
    2. ' =' → logprob: -0.757683515548706
    3. ',' → logprob: -10.632683753967285
    4. 'mod' → logprob: -10.757683753967285
    5. 'f' → logprob: -12.132683753967285
    6. '   ' → logprob: -12.632683753967285
    7. '_mod' → logprob: -12.632683753967285
    8. 'm' → logprob: -12.632683753967285
    9. 'x' → logprob: -12.757683753967285
    10. ' ' → logprob: -12.882683753967285

Token 212: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1429445743560791
    2. ' mod' → logprob: -2.017944574356079
    3. '[' → logprob: -9.1429443359375
    4. '   ' → logprob: -10.1429443359375
    5. '	mod' → logprob: -10.2679443359375
    6. ' ' → logprob: -10.5179443359375
    7. ' [' → logprob: -10.5179443359375
    8. 'd' → logprob: -11.3929443359375
    9. '  ' → logprob: -11.7679443359375
    10. '(mod' → logprob: -12.5179443359375

Token 213: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0087516784551553e-05
    2. 'd' → logprob: -11.75001049041748
    3. '(d' → logprob: -14.25001049041748
    4. 'list' → logprob: -14.50001049041748
    5. '(_' → logprob: -15.00001049041748
    6. 's' → logprob: -15.50001049041748
    7. '_' → logprob: -15.62501049041748
    8. '[_' → logprob: -16.250009536743164
    9. '_val' → logprob: -16.625009536743164
    10. 'List' → logprob: -16.875009536743164

Token 214: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -14.875001907348633
    4. '(
' → logprob: -17.125001907348633
    5. 'd' → logprob: -18.000001907348633
    6. ',d' → logprob: -18.000001907348633
    7. '(D' → logprob: -18.250001907348633
    8. '<|end|>' → logprob: -18.875001907348633
    9. '[d' → logprob: -19.750001907348633
    10. ' d' → logprob: -20.125001907348633

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022731706500053406
    2. ',m' → logprob: -3.8977317810058594
    3. ' ,' → logprob: -6.272731781005859
    4. 'm' → logprob: -8.14773178100586
    5. '(m' → logprob: -12.89773178100586
    6. '(' → logprob: -13.02273178100586
    7. ',n' → logprob: -13.64773178100586
    8. ' m' → logprob: -14.02273178100586
    9. ')' → logprob: -14.14773178100586
    10. ' ' → logprob: -14.52273178100586

Token 216: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12693557143211365
    2. ' m' → logprob: -2.1269354820251465
    3. ')m' → logprob: -13.626935958862305
    4. ' ' → logprob: -13.751935958862305
    5. 'x' → logprob: -13.751935958862305
    6. ')' → logprob: -13.876935958862305
    7. ' x' → logprob: -14.126935958862305
    8. '   ' → logprob: -14.126935958862305
    9. '    ' → logprob: -14.251935958862305
    10. '	m' → logprob: -15.001935958862305

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010423363419249654
    2. ')
' → logprob: -6.876042366027832
    3. ' )' → logprob: -11.876042366027832
    4. ')

' → logprob: -13.251042366027832
    5. ')
' → logprob: -14.251042366027832
    6. ' )
' → logprob: -16.876041412353516
    7. '),' → logprob: -18.001041412353516
    8. ');' → logprob: -18.251041412353516
    9. ']' → logprob: -18.376041412353516
    10. ')`' → logprob: -18.376041412353516

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005253560841083527
    2. ' s' → logprob: -6.130253791809082
    3. 's' → logprob: -7.380253791809082
    4. '   ' → logprob: -7.380253791809082
    5. 'sum' → logprob: -8.380253791809082
    6. 'x' → logprob: -8.630253791809082
    7. ' sum' → logprob: -8.880253791809082
    8. '        
' → logprob: -8.880253791809082
    9. ' x' → logprob: -9.005253791809082
    10. '
' → logprob: -9.255253791809082

Token 219: ' dz' (ID: 17303)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.8539108633995056
    2. 's' → logprob: -1.6039109230041504
    3. 'x' → logprob: -2.7289109230041504
    4. 'res' → logprob: -2.9789109230041504
    5. 'sz' → logprob: -3.1039109230041504
    6. 'sum' → logprob: -3.2289109230041504
    7. 'cx' → logprob: -3.8539109230041504
    8. 'prefix' → logprob: -3.9789109230041504
    9. 'flag' → logprob: -4.10391092300415
    10. 'print' → logprob: -4.35391092300415

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740890562534332
    2. ' =' → logprob: -0.9740890264511108
    3. ',' → logprob: -11.474088668823242
    4. '=[]' → logprob: -14.224088668823242
    5. ' ' → logprob: -14.599088668823242
    6. ' =[' → logprob: -16.224088668823242
    7. ' ,' → logprob: -16.474088668823242
    8. '<|end|>' → logprob: -16.974088668823242
    9. ' =
' → logprob: -17.099088668823242
    10. '=[' → logprob: -17.099088668823242

Token 221: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.3132728636264801
    2. ' zero' → logprob: -1.3132728338241577
    3. '   ' → logprob: -11.938272476196289
    4. '0' → logprob: -13.438272476196289
    5. ' ' → logprob: -13.688272476196289
    6. 'zer' → logprob: -14.438272476196289
    7. ' zeros' → logprob: -15.188272476196289
    8. 'zeros' → logprob: -15.188272476196289
    9. '.zero' → logprob: -15.688272476196289
    10. '  ' → logprob: -15.938272476196289

Token 222: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.500001907348633
    3. 'mod' → logprob: -15.125001907348633
    4. 'd' → logprob: -15.750001907348633
    5. '_MOD' → logprob: -16.125001907348633
    6. ' _' → logprob: -16.750001907348633
    7. '```' → logprob: -18.375001907348633
    8. '_m' → logprob: -18.750001907348633
    9. '
' → logprob: -18.875001907348633
    10. '[' → logprob: -19.125001907348633

Token 223: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.00026217024424113333
    2. 'flags' → logprob: -8.250262260437012
    3. 'Flags' → logprob: -14.750262260437012
    4. '```' → logprob: -16.250261306762695
    5. 'flag' → logprob: -16.250261306762695
    6. '_FLAGS' → logprob: -16.375261306762695
    7. 'd' → logprob: -17.375261306762695
    8. '_flag' → logprob: -17.375261306762695
    9. '_' → logprob: -17.500261306762695
    10. 's' → logprob: -17.875261306762695

Token 224: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.8670179997570813e-05
    2. '(di' → logprob: -11.250019073486328
    3. '(' → logprob: -12.625019073486328
    4. ' (' → logprob: -13.125019073486328
    5. '```' → logprob: -16.250019073486328
    6. '<|end|>' → logprob: -16.500019073486328
    7. '(
' → logprob: -17.875019073486328
    8. 'd' → logprob: -18.000019073486328
    9. '(def' → logprob: -18.000019073486328
    10. '(D' → logprob: -18.250019073486328

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018518929136916995
    2. ',m' → logprob: -6.376852035522461
    3. ' ,' → logprob: -8.876852035522461
    4. 'm' → logprob: -11.751852035522461
    5. ')' → logprob: -14.126852035522461
    6. '   ' → logprob: -14.876852035522461
    7. '       ' → logprob: -15.251852035522461
    8. ',n' → logprob: -16.00185203552246
    9. '),' → logprob: -16.00185203552246
    10. '```' → logprob: -16.25185203552246

Token 226: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20142823457717896
    2. ' m' → logprob: -1.7014281749725342
    3. '   ' → logprob: -11.451428413391113
    4. ' ' → logprob: -13.076428413391113
    5. '    ' → logprob: -14.201428413391113
    6. '  ' → logprob: -14.576428413391113
    7. ')' → logprob: -14.951428413391113
    8. '
' → logprob: -15.826428413391113
    9. '       ' → logprob: -16.201427459716797
    10. ')m' → logprob: -16.201427459716797

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06206526979804039
    2. ')
' → logprob: -2.812065362930298
    3. '       ' → logprob: -9.312065124511719
    4. ')
' → logprob: -12.812065124511719
    5. ')

' → logprob: -12.812065124511719
    6. '   ' → logprob: -14.062065124511719
    7. ' )' → logprob: -14.812065124511719
    8. '))' → logprob: -15.812065124511719
    9. ' )
' → logprob: -16.68706512451172
    10. '),' → logprob: -16.68706512451172

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09480761736631393
    2. '
' → logprob: -2.4698076248168945
    3. '<|end|>' → logprob: -5.8448076248168945
    4. '        
' → logprob: -6.3448076248168945
    5. '   ' → logprob: -8.594807624816895
    6. 'for' → logprob: -8.719807624816895
    7. ' for' → logprob: -8.719807624816895
    8. '```' → logprob: -8.969807624816895
    9. '	' → logprob: -9.219807624816895
    10. '  
' → logprob: -9.344807624816895

Token 229: ' complete' (ID: 5533)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.9493502378463745
    2. 'if' → logprob: -2.199350357055664
    3. '   ' → logprob: -2.324350357055664
    4. 'print' → logprob: -2.449350357055664
    5. ' s' → logprob: -2.574350357055664
    6. 'res' → logprob: -2.699350357055664
    7. ' res' → logprob: -2.699350357055664
    8. 's' → logprob: -2.949350357055664
    9. '       ' → logprob: -3.199350357055664
    10. ' print' → logprob: -3.199350357055664

Token 230: '_chunks' (ID: 163246)
  Prédit: '_chunks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -0.4130432605743408
    2. '_cycles' → logprob: -1.4130432605743408
    3. '_blocks' → logprob: -2.538043260574341
    4. '_chunk' → logprob: -5.413043022155762
    5. '_cycle' → logprob: -6.038043022155762
    6. '=' → logprob: -6.163043022155762
    7. ' =' → logprob: -6.288043022155762
    8. '_len' → logprob: -7.163043022155762
    9. '_period' → logprob: -7.163043022155762
    10. '_' → logprob: -7.788043022155762

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003910980653017759
    2. '=' → logprob: -5.628911018371582
    3. ',' → logprob: -8.128911018371582
    4. '   ' → logprob: -12.253911018371582
    5. '_count' → logprob: -12.253911018371582
    6. ' ,' → logprob: -12.628911018371582
    7. 'count' → logprob: -14.003911018371582
    8. ' ' → logprob: -14.253911018371582
    9. '=count' → logprob: -15.128911018371582
    10. ' =(' → logprob: -15.878911018371582

Token 232: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14234371483325958
    2. 'n' → logprob: -2.267343759536743
    3. ' (' → logprob: -3.892343759536743
    4. '(n' → logprob: -4.767343521118164
    5. '(' → logprob: -9.142343521118164
    6. ' k' → logprob: -11.017343521118164
    7. '   ' → logprob: -11.142343521118164
    8. ' ' → logprob: -11.267343521118164
    9. 'k' → logprob: -11.392343521118164
    10. '(k' → logprob: -11.767343521118164

Token 233: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016342267394065857
    2. ' n' → logprob: -4.1413421630859375
    3. '(n' → logprob: -8.266342163085938
    4. 'k' → logprob: -10.391342163085938
    5. '   ' → logprob: -11.516342163085938
    6. ' (' → logprob: -11.766342163085938
    7. '(k' → logprob: -14.266342163085938
    8. ' k' → logprob: -14.641342163085938
    9. '	n' → logprob: -14.891342163085938
    10. ')n' → logprob: -15.016342163085938

Token 234: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1690138876438141
    2. ' //' → logprob: -2.5440139770507812
    3. ' -' → logprob: -2.6690139770507812
    4. ')' → logprob: -5.669013977050781
    5. '//' → logprob: -5.919013977050781
    6. ' ' → logprob: -7.044013977050781
    7. '   ' → logprob: -7.794013977050781
    8. ' )' → logprob: -9.669013977050781
    9. '```' → logprob: -9.794013977050781
    10. ')//' → logprob: -10.669013977050781

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.375015258789062
    3. '   ' → logprob: -13.875015258789062
    4. ')' → logprob: -14.125015258789062
    5. '```' → logprob: -14.625015258789062
    6. 'x' → logprob: -15.250015258789062
    7. '       ' → logprob: -15.250015258789062
    8. '2' → logprob: -15.375015258789062
    9. '
' → logprob: -15.750015258789062
    10. '-' → logprob: -16.500015258789062

Token 236: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12731431424617767
    2. ')//' → logprob: -2.127314329147339
    3. ' )' → logprob: -7.87731409072876
    4. '//' → logprob: -12.252314567565918
    5. ' //' → logprob: -13.752314567565918
    6. ')
' → logprob: -14.127314567565918
    7. '   ' → logprob: -16.2523136138916
    8. ')#' → logprob: -16.3773136138916
    9. '       ' → logprob: -17.2523136138916
    10. ')

' → logprob: -17.3773136138916

Token 237: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023095356300473213
    2. ' k' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.75023078918457
    4. '	k' → logprob: -16.62523078918457
    5. '
' → logprob: -17.12523078918457
    6. ' ' → logprob: -17.25023078918457
    7. '       ' → logprob: -17.37523078918457
    8. '  ' → logprob: -18.00023078918457
    9. '           ' → logprob: -18.75023078918457
    10. '_k' → logprob: -18.75023078918457

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3125459551811218
    2. '
' → logprob: -1.5625460147857666
    3. '        
' → logprob: -3.5625460147857666
    4. '<|end|>' → logprob: -3.5625460147857666
    5. '<|end|>' → logprob: -6.9375457763671875
    6. ',' → logprob: -8.937545776367188
    7. '  
' → logprob: -9.312545776367188
    8. '		
' → logprob: -9.437545776367188
    9. '
' → logprob: -9.437545776367188
    10. '    
' → logprob: -9.562545776367188

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39134830236434937
    2. '
' → logprob: -1.1413483619689941
    3. '        
' → logprob: -6.141348361968994
    4. '<|end|>' → logprob: -6.641348361968994
    5. '
' → logprob: -8.266347885131836
    6. 'rest' → logprob: -8.891347885131836
    7. '   ' → logprob: -9.266347885131836
    8. '```' → logprob: -9.641347885131836
    9. '    
' → logprob: -10.016347885131836
    10. ' remainder' → logprob: -10.016347885131836

Token 240: ' partial' (ID: 13664)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2486073970794678
    2. 'partial' (adapté à ' partial') → logprob: -1.2486073970794678
    3. 'rem' → logprob: -2.2486073970794678
    4. 're' → logprob: -2.3736073970794678
    5. 'result' → logprob: -2.8736073970794678
    6. 'ans' → logprob: -2.8736073970794678
    7. 'total' → logprob: -3.1236073970794678
    8. 'chunk' → logprob: -3.4986073970794678
    9. 'sum' → logprob: -4.498607635498047
    10. 'answer' → logprob: -4.748607635498047

Token 241: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6019136309623718
    2. '_chunk' → logprob: -0.9769136309623718
    3. '_len' → logprob: -3.1019136905670166
    4. ' =' → logprob: -4.1019134521484375
    5. '_size' → logprob: -5.3519134521484375
    6. '=' → logprob: -5.3519134521484375
    7. '_length' → logprob: -6.1019134521484375
    8. '_chunks' → logprob: -6.4769134521484375
    9. 'sum' → logprob: -7.3519134521484375
    10. 'chunk' → logprob: -8.601913452148438

Token 242: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7216154932975769
    2. '(n' → logprob: -0.7216154932975769
    3. '(chunk' → logprob: -4.221615314483643
    4. '(' → logprob: -5.596615314483643
    5. 'chunk' → logprob: -5.846615314483643
    6. ' chunk' → logprob: -6.096615314483643
    7. '(di' → logprob: -6.721615314483643
    8. '(k' → logprob: -6.846615314483643
    9. 'n' → logprob: -7.471615314483643
    10. ' n' → logprob: -7.721615314483643

Token 243: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00022082125360611826
    2. '(n' → logprob: -8.500221252441406
    3. 'k' → logprob: -11.750221252441406
    4. ' n' → logprob: -12.000221252441406
    5. '   ' → logprob: -13.250221252441406
    6. '(k' → logprob: -14.250221252441406
    7. ' (' → logprob: -15.125221252441406
    8. ')n' → logprob: -15.625221252441406
    9. '	n' → logprob: -16.125221252441406
    10. '```' → logprob: -16.125221252441406

Token 244: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005607772618532181
    2. ' -' → logprob: -7.625560760498047
    3. '1' → logprob: -10.625560760498047
    4. ')' → logprob: -10.875560760498047
    5. '%' → logprob: -11.500560760498047
    6. ')%' → logprob: -11.625560760498047
    7. '   ' → logprob: -12.125560760498047
    8. ' %' → logprob: -13.500560760498047
    9. ' ' → logprob: -14.125560760498047
    10. '-%' → logprob: -14.250560760498047

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.500008583068848
    3. '2' → logprob: -13.000008583068848
    4. '-' → logprob: -13.375008583068848
    5. '```' → logprob: -15.250008583068848
    6. ')' → logprob: -16.00000762939453
    7. '%' → logprob: -16.37500762939453
    8. '
' → logprob: -16.75000762939453
    9. '   ' → logprob: -16.87500762939453
    10. '3' → logprob: -18.06250762939453

Token 246: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.11295030266046524
    2. ')' → logprob: -2.237950325012207
    3. '%' → logprob: -9.112950325012207
    4. ' )' → logprob: -11.612950325012207
    5. ')
' → logprob: -12.987950325012207
    6. ')#' → logprob: -12.987950325012207
    7. ' %' → logprob: -13.737950325012207
    8. '%)' → logprob: -13.987950325012207
    9. ']%' → logprob: -14.237950325012207
    10. ')//' → logprob: -14.987950325012207

Token 247: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.339278580620885e-06
    2. ' k' → logprob: -13.000001907348633
    3. '	k' → logprob: -18.375001907348633
    4. '(k' → logprob: -19.375001907348633
    5. '_k' → logprob: -20.000001907348633
    6. 'к' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '  ' → logprob: -20.500001907348633
    9. '
' → logprob: -20.875001907348633
    10. ',k' → logprob: -21.250001907348633

Token 248: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49025073647499084
    2. '       ' → logprob: -0.9902507066726685
    3. '        
' → logprob: -4.490250587463379
    4. '<|end|>' → logprob: -6.490250587463379
    5. '    
' → logprob: -7.115250587463379
    6. '  
' → logprob: -7.490250587463379
    7. '
' → logprob: -7.865250587463379
    8. ' 
' → logprob: -8.115250587463379
    9. '   ' → logprob: -8.115250587463379
    10. ',' → logprob: -8.490250587463379

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01733812689781189
    2. '   ' → logprob: -5.267338275909424
    3. '
' → logprob: -5.642338275909424
    4. '        
' → logprob: -6.267338275909424
    5. 'sum' → logprob: -6.267338275909424
    6. 'total' → logprob: -6.642338275909424
    7. 's' → logprob: -7.142338275909424
    8. ' s' → logprob: -7.767338275909424
    9. ' sum' → logprob: -7.892338275909424
    10. ' total' → logprob: -8.267337799072266

Token 250: ' total' (ID: 3609)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5337287187576294
    2. 'sum' → logprob: -1.6587287187576294
    3. 'total' (adapté à ' total') → logprob: -1.7837287187576294
    4. 'res' → logprob: -1.7837287187576294
    5. 's' → logprob: -2.78372859954834
    6. 'partial' → logprob: -2.78372859954834
    7. 'chunk' → logprob: -3.03372859954834
    8. 'result' → logprob: -4.03372859954834
    9. 'answer' → logprob: -4.15872859954834
    10. 'part' → logprob: -4.65872859954834

Token 251: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48758912086486816
    2. '_sum' → logprob: -0.9875891208648682
    3. '=' → logprob: -5.112588882446289
    4. '_mod' → logprob: -5.237588882446289
    5. '_chunk' → logprob: -6.987588882446289
    6. '_' → logprob: -7.362588882446289
    7. '_chunks' → logprob: -8.487588882446289
    8. '=sum' → logprob: -9.112588882446289
    9. '   ' → logprob: -9.612588882446289
    10. '_val' → logprob: -10.487588882446289

Token 252: '_di' (ID: 77232)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014166101813316345
    2. '=' → logprob: -4.264165878295898
    3. ' +=' → logprob: -14.139165878295898
    4. ' ' → logprob: -14.639165878295898
    5. '_' → logprob: -14.764165878295898
    6. '   ' → logprob: -15.139165878295898
    7. '(' → logprob: -15.139165878295898
    8. ',' → logprob: -15.514165878295898
    9. ' ' → logprob: -15.889165878295898
    10. ' =(' → logprob: -17.0141658782959

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03030007891356945
    2. '=' → logprob: -3.5303001403808594
    3. ' ' → logprob: -7.905300140380859
    4. ' +=' → logprob: -9.03030014038086
    5. ' +' → logprob: -10.03030014038086
    6. '+' → logprob: -11.78030014038086
    7. '+=' → logprob: -13.15530014038086
    8. '   ' → logprob: -13.28030014038086
    9. '    ' → logprob: -13.90530014038086
    10. '=sum' → logprob: -14.15530014038086

Token 254: ' compute' (ID: 23864)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.540963888168335
    2. 'sum' → logprob: -1.290963888168335
    3. ' complete' → logprob: -3.165963888168335
    4. 'complete' → logprob: -3.415963888168335
    5. '(sum' → logprob: -3.540963888168335
    6. ' (' → logprob: -4.415964126586914
    7. 'compute' → logprob: -4.415964126586914
    8. ' compute' → logprob: -4.540964126586914
    9. '(' → logprob: -6.290964126586914
    10. '   ' → logprob: -7.165964126586914

Token 255: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001040671137161553
    2. 'sum' → logprob: -7.251040458679199
    3. '(di' → logprob: -8.1260404586792
    4. 'di' → logprob: -11.5010404586792
    5. '(sum' → logprob: -11.6260404586792
    6. '_mod' → logprob: -13.0010404586792
    7. '_di' → logprob: -13.2510404586792
    8. '(' → logprob: -13.3760404586792
    9. ' sum' → logprob: -13.5010404586792
    10. '(d' → logprob: -13.7510404586792

Token 256: '_mod' (ID: 15325)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.0003015001420862973
    2. '_di' → logprob: -8.750301361083984
    3. '_mod' → logprob: -9.875301361083984
    4. '(mod' → logprob: -10.125301361083984
    5. ' (' → logprob: -10.875301361083984
    6. '(' → logprob: -11.625301361083984
    7. 'di' → logprob: -11.750301361083984
    8. 'mod' → logprob: -11.875301361083984
    9. ' di' → logprob: -12.750301361083984
    10. '(div' → logprob: -13.000301361083984

Token 257: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -14.500000953674316
    3. '(' → logprob: -15.250000953674316
    4. 'di' → logprob: -16.500001907348633
    5. '(div' → logprob: -16.500001907348633
    6. '(d' → logprob: -16.750001907348633
    7. ' di' → logprob: -17.125001907348633
    8. '(dis' → logprob: -17.250001907348633
    9. '(de' → logprob: -18.125001907348633
    10. '_di' → logprob: -19.250001907348633

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17917008697986603
    2. ',k' → logprob: -2.1791701316833496
    3. '(k' → logprob: -3.3041701316833496
    4. ' ,' → logprob: -4.80417013168335
    5. '(' → logprob: -5.55417013168335
    6. 'k' → logprob: -6.80417013168335
    7. ',(' → logprob: -8.554169654846191
    8. ' (' → logprob: -8.804169654846191
    9. '(n' → logprob: -8.804169654846191
    10. ',n' → logprob: -8.929169654846191

Token 259: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003031309461221099
    2. ' k' → logprob: -6.003031253814697
    3. 'complete' → logprob: -8.128031730651855
    4. 'len' → logprob: -9.003031730651855
    5. ' complete' → logprob: -9.753031730651855
    6. '(k' → logprob: -10.503031730651855
    7. '   ' → logprob: -10.753031730651855
    8. 'n' → logprob: -11.878031730651855
    9. '    ' → logprob: -12.253031730651855
    10. ' len' → logprob: -12.378031730651855

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033415461075492203
    2. ')
' → logprob: -8.375333786010742
    3. ' )' → logprob: -10.125333786010742
    4. '       ' → logprob: -10.250333786010742
    5. '+' → logprob: -11.125333786010742
    6. ')*' → logprob: -12.750333786010742
    7. ' +' → logprob: -12.875333786010742
    8. '   ' → logprob: -13.125333786010742
    9. ')+' → logprob: -13.250333786010742
    10. ')

' → logprob: -13.500333786010742

Token 261: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7282890677452087
    2. '       ' → logprob: -0.9782890677452087
    3. '+' → logprob: -3.1032891273498535
    4. '        
' → logprob: -3.7282891273498535
    5. '<|end|>' → logprob: -3.8532891273498535
    6. 'total' → logprob: -3.9782891273498535
    7. ' +' → logprob: -3.9782891273498535
    8. ' total' → logprob: -5.6032891273498535
    9. ' 
' → logprob: -6.6032891273498535
    10. '```' → logprob: -6.8532891273498535

Token 262: ' mod' (ID: 1812)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.17534427344799042
    2. 'result' → logprob: -3.175344228744507
    3. 'partial' → logprob: -3.300344228744507
    4. '       ' → logprob: -3.550344228744507
    5. 'res' → logprob: -4.300344467163086
    6. ' total' → logprob: -4.300344467163086
    7. 'sum' → logprob: -5.175344467163086
    8. 'ans' → logprob: -5.300344467163086
    9. 'answer' → logprob: -5.300344467163086
    10. 'chunk' → logprob: -6.175344467163086

Token 263: 'ded' (ID: 33732)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.1765093356370926
    2. '_val' → logprob: -2.801509380340576
    3. '_sum' → logprob: -2.801509380340576
    4. '_value' → logprob: -4.301509380340576
    5. '_x' → logprob: -4.551509380340576
    6. ' =' → logprob: -4.676509380340576
    7. '_result' → logprob: -5.801509380340576
    8. 'total' → logprob: -6.676509380340576
    9. 'ulo' → logprob: -7.426509380340576
    10. '_' → logprob: -8.051508903503418

Token 264: '_x' (ID: 7054)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.7130998969078064
    2. '_sum' → logprob: -0.7130998969078064
    3. '_' → logprob: -4.713099956512451
    4. '_value' → logprob: -5.588099956512451
    5. '_val' → logprob: -5.963099956512451
    6. '_x' → logprob: -6.213099956512451
    7. '_chunk' → logprob: -6.338099956512451
    8. '_result' → logprob: -8.338099479675293
    9. ' =' → logprob: -9.588099479675293
    10. 'total' → logprob: -10.088099479675293

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026339659467339516
    2. '=' → logprob: -3.6513397693634033
    3. ' ' → logprob: -10.401339530944824
    4. ',' → logprob: -12.776339530944824
    5. ')' → logprob: -13.651339530944824
    6. 'x' → logprob: -14.151339530944824
    7. '  ' → logprob: -14.526339530944824
    8. '_' → logprob: -14.651339530944824
    9. '_val' → logprob: -14.651339530944824
    10. '	' → logprob: -14.776339530944824

Token 266: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.6440528035163879
    2. 'compute' → logprob: -0.7690528035163879
    3. ' x' → logprob: -4.769052982330322
    4. 'x' → logprob: -5.894052982330322
    5. '   ' → logprob: -10.144052505493164
    6. ' mod' → logprob: -10.269052505493164
    7. 'mod' → logprob: -10.394052505493164
    8. ' ' → logprob: -11.019052505493164
    9. '
' → logprob: -11.894052505493164
    10. ' ' → logprob: -12.519052505493164

Token 267: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.1008713702030946e-06
    2. 'mod' → logprob: -13.500001907348633
    3. '_' → logprob: -15.250001907348633
    4. '_mode' → logprob: -16.250001907348633
    5. ' _' → logprob: -16.500001907348633
    6. '_MOD' → logprob: -17.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'omod' → logprob: -18.000001907348633
    9. ''_' → logprob: -18.125001907348633
    10. '_m' → logprob: -18.625001907348633

Token 268: '_x' (ID: 7054)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0330117829144001
    2. '_x' → logprob: -3.5330116748809814
    3. 'mod' → logprob: -6.0330119132995605
    4. 'od' → logprob: -7.2830119132995605
    5. 'x' → logprob: -9.908011436462402
    6. 'd' → logprob: -10.533011436462402
    7. 'ed' → logprob: -11.033011436462402
    8. '_' → logprob: -11.158011436462402
    9. '(x' → logprob: -11.158011436462402
    10. 'o' → logprob: -11.408011436462402

Token 269: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0033203072380274534
    2. '(' → logprob: -5.753320217132568
    3. ' (' → logprob: -8.878320693969727
    4. 'x' → logprob: -13.253320693969727
    5. ' x' → logprob: -13.503320693969727
    6. '(
' → logprob: -16.878320693969727
    7. '((' → logprob: -18.753320693969727
    8. ' ' → logprob: -19.253320693969727
    9. '(int' → logprob: -19.378320693969727
    10. '	x' → logprob: -20.128320693969727

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011847922578454018
    2. ' ,' → logprob: -5.136847972869873
    3. ',m' → logprob: -5.136847972869873
    4. '   ' → logprob: -11.511847496032715
    5. 'm' → logprob: -12.136847496032715
    6. ')' → logprob: -13.011847496032715
    7. ' ' → logprob: -13.011847496032715
    8. '  ' → logprob: -13.761847496032715
    9. ',
' → logprob: -13.886847496032715
    10. '```' → logprob: -14.261847496032715

Token 271: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005235291086137295
    2. ' m' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.00523567199707
    4. '    ' → logprob: -16.00523567199707
    5. ' ' → logprob: -16.25523567199707
    6. '       ' → logprob: -16.25523567199707
    7. '
' → logprob: -16.25523567199707
    8. ')' → logprob: -16.75523567199707
    9. '           ' → logprob: -16.75523567199707
    10. 'mod' → logprob: -17.00523567199707

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011284107313258573
    2. ')
' → logprob: -9.125112533569336
    3. ')

' → logprob: -13.375112533569336
    4. '   ' → logprob: -13.750112533569336
    5. '       ' → logprob: -14.125112533569336
    6. ' )' → logprob: -14.500112533569336
    7. '))' → logprob: -17.500112533569336
    8. ')
' → logprob: -17.500112533569336
    9. ')`' → logprob: -17.500112533569336
    10. ' ' → logprob: -17.625112533569336

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03931405767798424
    2. '<|end|>' → logprob: -4.039314270019531
    3. '
' → logprob: -4.164314270019531
    4. '```' → logprob: -6.039314270019531
    5. 'total' → logprob: -6.664314270019531
    6. '   ' → logprob: -7.539314270019531
    7. '        
' → logprob: -7.789314270019531
    8. '+' → logprob: -9.164314270019531
    9. ' total' → logprob: -9.289314270019531
    10. '<|end|>' → logprob: -9.289314270019531

Token 274: ' x' (ID: 1215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.40076744556427
    2. '       ' → logprob: -1.52576744556427
    3. 'if' → logprob: -2.2757673263549805
    4. 'answer' → logprob: -2.2757673263549805
    5. 'result' → logprob: -2.4007673263549805
    6. 'ans' → logprob: -2.6507673263549805
    7. 'res' → logprob: -2.9007673263549805
    8. 'partial' → logprob: -3.5257673263549805
    9. 'chunk' → logprob: -3.6507673263549805
    10. '
' → logprob: -4.0257673263549805

Token 275: '_val' (ID: 13694)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.8019834160804749
    2. '_count' → logprob: -1.80198335647583
    3. '_mod' → logprob: -1.92698335647583
    4. '_total' → logprob: -2.67698335647583
    5. '_val' → logprob: -2.92698335647583
    6. '_' → logprob: -3.17698335647583
    7. ' =' → logprob: -4.17698335647583
    8. '=' → logprob: -5.05198335647583
    9. ' +=' → logprob: -5.17698335647583
    10. '_add' → logprob: -5.42698335647583

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761387944221497
    2. '=' → logprob: -0.8261387944221497
    3. '_sum' → logprob: -9.326138496398926
    4. '_' → logprob: -10.326138496398926
    5. '   ' → logprob: -10.451138496398926
    6. 's' → logprob: -11.451138496398926
    7. ' ' → logprob: -11.701138496398926
    8. '_total' → logprob: -11.826138496398926
    9. ',' → logprob: -12.201138496398926
    10. '_add' → logprob: -12.826138496398926

Token 277: ' complete' (ID: 5533)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.5896837711334229
    2. ' (' → logprob: -1.9646837711334229
    3. 'mod' → logprob: -1.9646837711334229
    4. '(m' → logprob: -2.589683771133423
    5. '(x' → logprob: -2.964683771133423
    6. ' mod' → logprob: -3.964683771133423
    7. 'x' → logprob: -4.339683532714844
    8. ' x' → logprob: -5.964683532714844
    9. 'm' → logprob: -6.964683532714844
    10. '(' → logprob: -7.089683532714844

Token 278: '_chunks' (ID: 163246)
  Prédit: '_chunks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -3.650518920039758e-06
    2. '_tokens' → logprob: -13.500003814697266
    3. 'chunks' → logprob: -14.250003814697266
    4. '_chunk' → logprob: -14.500003814697266
    5. '*_' → logprob: -14.875003814697266
    6. '_' → logprob: -15.750003814697266
    7. 's' → logprob: -15.750003814697266
    8. 'Chunks' → logprob: -16.625003814697266
    9. '
' → logprob: -16.750003814697266
    10. ' _' → logprob: -17.125003814697266

Token 279: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.061988186091184616
    2. '*' → logprob: -2.811988115310669
    3. ' ' → logprob: -11.93698787689209
    4. '   ' → logprob: -12.56198787689209
    5. '*object' → logprob: -12.68698787689209
    6. '*(' → logprob: -13.68698787689209
    7. ' ' → logprob: -13.68698787689209
    8. '
' → logprob: -13.81198787689209
    9. '**' → logprob: -14.18698787689209
    10. '*out' → logprob: -14.43698787689209

Token 280: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20255105197429657
    2. ' total' → logprob: -1.702551007270813
    3. '(total' → logprob: -6.827550888061523
    4. 'mod' → logprob: -10.702550888061523
    5. ' (' → logprob: -10.952550888061523
    6. ' mod' → logprob: -12.327550888061523
    7. ' ' → logprob: -12.827550888061523
    8. '   ' → logprob: -12.952550888061523
    9. '(' → logprob: -14.202550888061523
    10. '	total' → logprob: -14.327550888061523

Token 281: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8312570318812504e-05
    2. 'sum' → logprob: -11.125018119812012
    3. '_di' → logprob: -13.750018119812012
    4. 'di' → logprob: -14.000018119812012
    5. '_' → logprob: -14.375018119812012
    6. '_val' → logprob: -14.750018119812012
    7. '_mod' → logprob: -15.750018119812012
    8. '```' → logprob: -16.125019073486328
    9. 'k' → logprob: -16.500019073486328
    10. ' _' → logprob: -16.750019073486328

Token 282: '_di' (ID: 77232)
  Prédit: '_di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_di' → logprob: -0.00029852005536668
    2. 'di' → logprob: -8.125298500061035
    3. '(di' → logprob: -13.375298500061035
    4. '_d' → logprob: -14.750298500061035
    5. ' di' → logprob: -15.375298500061035
    6. '_' → logprob: -16.87529945373535
    7. 'Di' → logprob: -17.12529945373535
    8. '_mod' → logprob: -17.25029945373535
    9. '_diag' → logprob: -17.37529945373535
    10. '_DI' → logprob: -17.62529945373535

Token 283: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2132837325334549
    2. '<|end|>' → logprob: -2.0882837772369385
    3. '+' → logprob: -2.9632837772369385
    4. '       ' → logprob: -4.338283538818359
    5. '<|end|>' → logprob: -6.963283538818359
    6. ' ' → logprob: -6.963283538818359
    7. ')' → logprob: -7.713283538818359
    8. ' *' → logprob: -8.46328353881836
    9. ' +
' → logprob: -8.58828353881836
    10. '...' → logprob: -8.71328353881836

Token 284: ' mod' (ID: 1812)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9479261636734009
    2. 'compute' → logprob: -1.1979261636734009
    3. 'chunk' → logprob: -2.4479260444641113
    4. ' compute' → logprob: -2.5729260444641113
    5. ' sum' → logprob: -2.6979260444641113
    6. ' chunk' → logprob: -3.5729260444641113
    7. 'mod' → logprob: -3.9479260444641113
    8. 'partial' → logprob: -4.197926044464111
    9. ' partial' → logprob: -4.447926044464111
    10. ' mod' → logprob: -5.822926044464111

Token 285: 'ded' (ID: 33732)
  Prédit: 'ded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ded' → logprob: -0.03788080811500549
    2. 'ed' → logprob: -3.6628808975219727
    3. 'partial' → logprob: -4.787880897521973
    4. 'xed' → logprob: -6.537880897521973
    5. 'med' → logprob: -7.537880897521973
    6. 'edd' → logprob: -8.412880897521973
    7. 'mod' → logprob: -8.537880897521973
    8. '(part' → logprob: -8.662880897521973
    9. ' partial' → logprob: -9.787880897521973
    10. '_partial' → logprob: -9.912880897521973

Token 286: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.128163257315464e-07
    2. 'x' → logprob: -15.5
    3. ' _' → logprob: -17.0
    4. '_' → logprob: -19.0
    5. '```' → logprob: -20.125
    6. '​' → logprob: -20.75
    7. '_
' → logprob: -21.0
    8. '"_' → logprob: -21.375
    9. '__' → logprob: -21.5
    10. '}_' → logprob: -21.75

Token 287: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.021150752902030945
    2. '+' → logprob: -3.896150827407837
    3. '       ' → logprob: -8.771150588989258
    4. '
' → logprob: -9.021150588989258
    5. ' +
' → logprob: -9.021150588989258
    6. ' if' → logprob: -9.896150588989258
    7. '<|end|>' → logprob: -10.146150588989258
    8. 'if' → logprob: -10.896150588989258
    9. '+
' → logprob: -11.021150588989258
    10. ' *' → logprob: -11.146150588989258

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.375939279794693
    2. '
' → logprob: -1.6259392499923706
    3. '<|end|>' → logprob: -2.75093936920166
    4. '        
' → logprob: -3.12593936920166
    5. '+' → logprob: -6.37593936920166
    6. ' if' → logprob: -6.37593936920166
    7. '  
' → logprob: -7.12593936920166
    8. ' 
' → logprob: -7.37593936920166
    9. 'if' → logprob: -7.50093936920166
    10. ' +' → logprob: -7.50093936920166

Token 289: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33968085050582886
    2. ' if' → logprob: -2.0896809101104736
    3. 'if' (adapté à ' if') → logprob: -3.9646809101104736
    4. 'total' → logprob: -3.9646809101104736
    5. 'print' → logprob: -4.0896806716918945
    6. 'rest' → logprob: -4.3396806716918945
    7. ' total' → logprob: -4.3396806716918945
    8. ' partial' → logprob: -4.4646806716918945
    9. ' print' → logprob: -4.8396806716918945
    10. ' remainder' → logprob: -4.8396806716918945

Token 290: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.022221630439162254
    2. 'partial' → logprob: -4.272221565246582
    3. ' x' → logprob: -5.772221565246582
    4. ' complete' → logprob: -6.147221565246582
    5. ' zero' → logprob: -6.897221565246582
    6. ' dz' → logprob: -7.897221565246582
    7. ' chunk' → logprob: -8.022221565246582
    8. '(part' → logprob: -8.147221565246582
    9. 'x' → logprob: -9.147221565246582
    10. ' ' → logprob: -9.397221565246582

Token 291: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4643958508968353
    2. ' >' → logprob: -1.0893958806991577
    3. ':' → logprob: -3.714395761489868
    4. ' !=' → logprob: -5.589395999908447
    5. '==' → logprob: -5.839395999908447
    6. '!=' → logprob: -5.839395999908447
    7. ' ==' → logprob: -6.839395999908447
    8. '>:' → logprob: -10.464395523071289
    9. ' :' → logprob: -10.839395523071289
    10. '>=' → logprob: -12.464395523071289

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14876551926136017
    2. ':' → logprob: -2.1487655639648438
    3. ':
' → logprob: -4.273765563964844
    4. ' +' → logprob: -6.398765563964844
    5. '+' → logprob: -6.523765563964844
    6. '<|end|>' → logprob: -6.648765563964844
    7. '
' → logprob: -7.023765563964844
    8. '       ' → logprob: -8.023765563964844
    9. ',' → logprob: -8.023765563964844
    10. ' +=' → logprob: -8.398765563964844

Token 293: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03387412428855896
    2. 'x' (adapté à ' x') → logprob: -3.408874034881592
    3. '           ' → logprob: -8.65887451171875
    4. '               ' → logprob: -11.78387451171875
    5. ' +' → logprob: -12.03387451171875
    6. '       ' → logprob: -12.03387451171875
    7. '        ' → logprob: -12.15887451171875
    8. ' ' → logprob: -12.28387451171875
    9. '            ' → logprob: -12.53387451171875
    10. '+' → logprob: -12.90887451171875

Token 294: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0007213685312308371
    2. ' +=' → logprob: -8.000720977783203
    3. '+=' → logprob: -8.125720977783203
    4. '_' → logprob: -9.750720977783203
    5. 'val' → logprob: -11.625720977783203
    6. '_x' → logprob: -12.500720977783203
    7. 'x' → logprob: -12.750720977783203
    8. '+' → logprob: -12.875720977783203
    9. '=' → logprob: -12.875720977783203
    10. ' =' → logprob: -13.000720977783203

Token 295: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31328821182250977
    2. ' +=' → logprob: -1.3132882118225098
    3. '+' → logprob: -10.688287734985352
    4. '=' → logprob: -13.313287734985352
    5. ' +' → logprob: -14.313287734985352
    6. '+=(' → logprob: -14.438287734985352
    7. '   ' → logprob: -15.563287734985352
    8. ' -=' → logprob: -15.813287734985352
    9. ' =' → logprob: -16.31328773498535
    10. '	' → logprob: -16.43828773498535

Token 296: ' chunk' (ID: 23958)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.447988897562027
    2. 'chunk' → logprob: -1.9479888677597046
    3. 'compute' → logprob: -2.322988986968994
    4. ' sum' → logprob: -2.447988986968994
    5. ' chunk' → logprob: -3.697988986968994
    6. ' compute' → logprob: -4.697988986968994
    7. '   ' → logprob: -9.072988510131836
    8. ' ' → logprob: -11.572988510131836
    9. '	sum' → logprob: -11.697988510131836
    10. '    ' → logprob: -11.697988510131836

Token 297: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.45848218582978e-06
    2. 'sum' → logprob: -13.12500286102295
    3. '_chunk' → logprob: -15.37500286102295
    4. '_s' → logprob: -16.250001907348633
    5. '```' → logprob: -18.125001907348633
    6. '
' → logprob: -18.250001907348633
    7. '_val' → logprob: -18.375001907348633
    8. '_' → logprob: -18.500001907348633
    9. 's' → logprob: -18.500001907348633
    10. '\' → logprob: -18.625001907348633

Token 298: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -2.927930654550437e-05
    2. '(d' → logprob: -10.750029563903809
    3. '_di' → logprob: -12.375029563903809
    4. '(' → logprob: -13.500029563903809
    5. 'di' → logprob: -13.750029563903809
    6. ' di' → logprob: -14.625029563903809
    7. ' (' → logprob: -15.375029563903809
    8. '_zero' → logprob: -16.000028610229492
    9. '```' → logprob: -16.500028610229492
    10. '(def' → logprob: -16.625028610229492

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001329287188127637
    2. ' ,' → logprob: -6.75132942199707
    3. ',d' → logprob: -8.87632942199707
    4. ',k' → logprob: -12.50132942199707
    5. '(' → logprob: -12.75132942199707
    6. '           ' → logprob: -12.87632942199707
    7. '(d' → logprob: -13.50132942199707
    8. ',n' → logprob: -13.50132942199707
    9. '   ' → logprob: -13.62632942199707
    10. '(part' → logprob: -13.75132942199707

Token 300: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7895681262016296
    2. 'n' → logprob: -1.5395681858062744
    3. 'partial' → logprob: -1.9145681858062744
    4. 'k' → logprob: -2.0395681858062744
    5. ' d' → logprob: -4.414567947387695
    6. ' n' → logprob: -4.414567947387695
    7. 'di' → logprob: -4.414567947387695
    8. ' k' → logprob: -4.789567947387695
    9. ' partial' → logprob: -5.164567947387695
    10. 'x' → logprob: -7.039567947387695

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023631771910004318
    2. ' ,' → logprob: -9.000236511230469
    3. ',k' → logprob: -9.125236511230469
    4. '           ' → logprob: -13.250236511230469
    5. '   ' → logprob: -14.500236511230469
    6. ',x' → logprob: -14.750236511230469
    7. '       ' → logprob: -14.750236511230469
    8. ',p' → logprob: -15.000236511230469
    9. ',
' → logprob: -15.250236511230469
    10. ',m' → logprob: -16.75023651123047

Token 302: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.659005157416686e-05
    2. ' k' → logprob: -9.625066757202148
    3. 'partial' → logprob: -14.625066757202148
    4. '
' → logprob: -18.00006675720215
    5. ')' → logprob: -18.37506675720215
    6. ' partial' → logprob: -18.62506675720215
    7. '   ' → logprob: -19.00006675720215
    8. 'kx' → logprob: -19.62506675720215
    9. '	k' → logprob: -20.00006675720215
    10. '```' → logprob: -20.37506675720215

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001681405701674521
    2. ')
' → logprob: -8.750167846679688
    3. '       ' → logprob: -12.000167846679688
    4. ' )' → logprob: -13.125167846679688
    5. ')

' → logprob: -14.000167846679688
    6. '+' → logprob: -14.750167846679688
    7. '   ' → logprob: -15.750167846679688
    8. ' ' → logprob: -17.000167846679688
    9. ')return' → logprob: -17.125167846679688
    10. ')#' → logprob: -17.250167846679688

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07231079787015915
    2. '
' → logprob: -3.07231068611145
    3. '<|end|>' → logprob: -3.82231068611145
    4. '+' → logprob: -8.072310447692871
    5. ' else' → logprob: -8.322310447692871
    6. '        
' → logprob: -8.697310447692871
    7. 'else' → logprob: -8.947310447692871
    8. ' return' → logprob: -9.322310447692871
    9. '  
' → logprob: -9.447310447692871
    10. 'return' → logprob: -9.572310447692871

Token 305: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4412120580673218
    2. '       ' → logprob: -1.0662120580673218
    3. ' else' → logprob: -5.691212177276611
    4. ' if' → logprob: -5.816212177276611
    5. '<|end|>' → logprob: -5.941212177276611
    6. 'else' → logprob: -7.066212177276611
    7. '        
' → logprob: -7.941212177276611
    8. ' return' → logprob: -8.191211700439453
    9. 'if' → logprob: -8.191211700439453
    10. '   ' → logprob: -8.191211700439453

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01821596920490265
    2. '=' → logprob: -4.018216133117676
    3. ' +=' → logprob: -10.268216133117676
    4. '_' → logprob: -11.518216133117676
    5. ',' → logprob: -12.143216133117676
    6. '   ' → logprob: -12.518216133117676
    7. ' ' → logprob: -13.268216133117676
    8. '  ' → logprob: -13.518216133117676
    9. '    ' → logprob: -13.643216133117676
    10. 's' → logprob: -13.643216133117676

Token 307: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5385713577270508
    2. ' x' → logprob: -0.9135713577270508
    3. '(x' → logprob: -4.413571357727051
    4. ' (' → logprob: -5.913571357727051
    5. '(' → logprob: -9.03857135772705
    6. '   ' → logprob: -9.28857135772705
    7. 'str' → logprob: -10.03857135772705
    8. '((' → logprob: -10.03857135772705
    9. ' str' → logprob: -10.28857135772705
    10. '0' → logprob: -10.41357135772705

Token 308: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9682654142379761
    2. '%' → logprob: -1.843265414237976
    3. '*' → logprob: -2.0932655334472656
    4. ' -' → logprob: -2.8432655334472656
    5. ' *' → logprob: -2.9682655334472656
    6. '   ' → logprob: -3.4682655334472656
    7. ' %' → logprob: -3.5932655334472656
    8. '       ' → logprob: -3.5932655334472656
    9. '<|end|>' → logprob: -3.5932655334472656
    10. '>' → logprob: -3.8432655334472656

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011986821191385388
    2. 'x' → logprob: -6.751198768615723
    3. ' ' → logprob: -10.751198768615723
    4. ' x' → logprob: -12.126198768615723
    5. '
' → logprob: -14.751198768615723
    6. 'val' → logprob: -15.001198768615723
    7. '2' → logprob: -15.126198768615723
    8. '0' → logprob: -15.626198768615723
    9. '(x' → logprob: -15.876198768615723
    10. '(' → logprob: -16.876197814941406

Token 310: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9684134125709534
    2. '<|end|>' → logprob: -1.4684133529663086
    3. '+' → logprob: -1.8434133529663086
    4. '
' → logprob: -2.3434133529663086
    5. ' +' → logprob: -2.5934133529663086
    6. ' if' → logprob: -3.8434133529663086
    7. '+
' → logprob: -4.968413352966309
    8. '%' → logprob: -5.343413352966309
    9. ')' → logprob: -5.343413352966309
    10. ' -' → logprob: -5.593413352966309

Token 311: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027587538585066795
    2. ' x' → logprob: -4.277587413787842
    3. '(x' → logprob: -4.402587413787842
    4. ' (' → logprob: -7.277587413787842
    5. 'sum' → logprob: -8.777587890625
    6. 'chunk' → logprob: -9.902587890625
    7. '(' → logprob: -10.027587890625
    8. '   ' → logprob: -10.152587890625
    9. '       ' → logprob: -10.777587890625
    10. '(sum' → logprob: -11.277587890625

Token 312: '_val' (ID: 13694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1082980632781982
    2. 'if' → logprob: -1.3582980632781982
    3. ' if' → logprob: -1.6082980632781982
    4. '+' → logprob: -3.1082980632781982
    5. '       ' → logprob: -3.3582980632781982
    6. '%' → logprob: -3.6082980632781982
    7. '+
' → logprob: -3.7332980632781982
    8. ' +' → logprob: -3.8582980632781982
    9. '<|end|>' → logprob: -4.233298301696777
    10. '%
' → logprob: -4.483298301696777

Token 313: '//' (ID: 393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01570596918463707
    2. '
' → logprob: -4.2657060623168945
    3. 'print' → logprob: -7.7657060623168945
    4. '<|end|>' → logprob: -7.7657060623168945
    5. '        
' → logprob: -8.390706062316895
    6. '   ' → logprob: -9.015706062316895
    7. '```' → logprob: -9.265706062316895
    8. '	' → logprob: -10.140706062316895
    9. ',' → logprob: -10.265706062316895
    10. ' if' → logprob: -10.265706062316895

Token 314: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00022845028433948755
    2. ' m' → logprob: -8.500228881835938
    3. 'k' → logprob: -11.750228881835938
    4. '2' → logprob: -12.000228881835938
    5. 'mod' → logprob: -13.250228881835938
    6. 'x' → logprob: -13.500228881835938
    7. ' ' → logprob: -13.625228881835938
    8. '   ' → logprob: -13.625228881835938
    9. '1' → logprob: -13.750228881835938
    10. '>' → logprob: -14.000228881835938

Token 315: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1285279542207718
    2. '
' → logprob: -2.503527879714966
    3. '<|end|>' → logprob: -3.503527879714966
    4. '   ' → logprob: -5.253528118133545
    5. ')' → logprob: -7.378528118133545
    6. '```' → logprob: -7.753528118133545
    7. '()' → logprob: -8.003527641296387
    8. 'print' → logprob: -8.253527641296387
    9. ')
' → logprob: -8.503527641296387
    10. '	' → logprob: -8.878527641296387

Token 316: ' complete' (ID: 5533)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.8595696687698364
    2. 'chunk' → logprob: -1.3595696687698364
    3. '(x' → logprob: -2.359569549560547
    4. 'x' → logprob: -2.484569549560547
    5. '(' → logprob: -3.234569549560547
    6. '(chunk' → logprob: -3.609569549560547
    7. '(d' → logprob: -3.984569549560547
    8. ' chunk' → logprob: -4.609569549560547
    9. ' dz' → logprob: -4.734569549560547
    10. ' (' → logprob: -4.984569549560547

Token 317: '_chunks' (ID: 163246)
  Prédit: '_chunks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -2.935296834039036e-06
    2. '_chunk' → logprob: -13.37500286102295
    3. 'chunks' → logprob: -13.62500286102295
    4. 'Chunks' → logprob: -17.000003814697266
    5. 's' → logprob: -17.125003814697266
    6. '```' → logprob: -17.125003814697266
    7. '_' → logprob: -17.250003814697266
    8. '_complete' → logprob: -17.875003814697266
    9. '*_' → logprob: -18.125003814697266
    10. '_chars' → logprob: -18.625003814697266

Token 318: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1829449087381363
    2. '*' → logprob: -1.807944893836975
    3. '<|end|>' → logprob: -5.9329447746276855
    4. '*(' → logprob: -8.682945251464844
    5. '+' → logprob: -9.307945251464844
    6. 'def' → logprob: -10.057945251464844
    7. ' +' → logprob: -10.182945251464844
    8. ')' → logprob: -10.432945251464844
    9. '   ' → logprob: -10.557945251464844
    10. '       ' → logprob: -10.557945251464844

Token 319: 'sum' (ID: 12298)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.3196549117565155
    2. 'sum' → logprob: -2.069654941558838
    3. 'chunk' → logprob: -2.069654941558838
    4. 'zero' → logprob: -4.444654941558838
    5. ' dz' → logprob: -5.694654941558838
    6. ' sum' → logprob: -5.819654941558838
    7. ' chunk' → logprob: -7.069654941558838
    8. '   ' → logprob: -7.444654941558838
    9. ' zero' → logprob: -8.56965446472168
    10. '(' → logprob: -8.81965446472168

Token 320: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0006311862962320447
    2. 'dz' → logprob: -7.875631332397461
    3. '(z' → logprob: -8.625631332397461
    4. '(' → logprob: -9.875631332397461
    5. ' dz' → logprob: -12.125631332397461
    6. ' (' → logprob: -12.500631332397461
    7. 'Dz' → logprob: -12.750631332397461
    8. '(dx' → logprob: -13.375631332397461
    9. '(
' → logprob: -13.500631332397461
    10. 'd' → logprob: -13.750631332397461

Token 321: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00012654215970542282
    2. '[' → logprob: -10.375126838684082
    3. '```' → logprob: -10.375126838684082
    4. '[z' → logprob: -11.375126838684082
    5. '
' → logprob: -11.625126838684082
    6. '(z' → logprob: -11.625126838684082
    7. '[i' → logprob: -12.000126838684082
    8. '[:' → logprob: -12.000126838684082
    9. '(d' → logprob: -12.750126838684082
    10. '   ' → logprob: -13.250126838684082

Token 322: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.050997983664274216
    2. ')' → logprob: -3.4259979724884033
    3. '(k' → logprob: -4.175998210906982
    4. '[k' → logprob: -6.550998210906982
    5. ',k' → logprob: -8.925997734069824
    6. '[' → logprob: -9.675997734069824
    7. ',' → logprob: -10.300997734069824
    8. ')
' → logprob: -10.300997734069824
    9. '(d' → logprob: -10.300997734069824
    10. ')+' → logprob: -10.550997734069824

Token 323: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.5776860184123507e-06
    2. ' k' → logprob: -13.00000286102295
    3. '(k' → logprob: -15.37500286102295
    4. '(' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ' ' → logprob: -17.625001907348633
    7. '
' → logprob: -18.375001907348633
    8. 'partial' → logprob: -18.500001907348633
    9. 'len' → logprob: -19.000001907348633
    10. '[k' → logprob: -19.000001907348633

Token 324: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01658123917877674
    2. '])
' → logprob: -4.141581058502197
    3. '       ' → logprob: -8.266581535339355
    4. ')' → logprob: -8.766581535339355
    5. '])

' → logprob: -10.391581535339355
    6. ' ])' → logprob: -11.016581535339355
    7. '])
' → logprob: -11.016581535339355
    8. ']' → logprob: -11.141581535339355
    9. '   ' → logprob: -11.266581535339355
    10. '])-' → logprob: -11.641581535339355

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1526840329170227
    2. '
' → logprob: -2.152683973312378
    3. 'print' → logprob: -3.777683973312378
    4. '        
' → logprob: -7.277684211730957
    5. '<|end|>' → logprob: -7.527684211730957
    6. '```' → logprob: -7.777684211730957
    7. '   ' → logprob: -7.902684211730957
    8. '
' → logprob: -9.027684211730957
    9. ' print' → logprob: -9.652684211730957
    10. ',
' → logprob: -10.027684211730957

Token 326: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07746245712041855
    2. 'print' → logprob: -3.2024624347686768
    3. '
' → logprob: -3.7024624347686768
    4. '   ' → logprob: -5.077462673187256
    5. '<|end|>' → logprob: -6.702462673187256
    6. '```' → logprob: -7.077462673187256
    7. ' print' → logprob: -8.202462196350098
    8. 'return' → logprob: -8.702462196350098
    9. '        
' → logprob: -9.202462196350098
    10. '	' → logprob: -9.202462196350098

Token 327: ' partial' (ID: 13664)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8917443156242371
    2. ' ans' → logprob: -1.2667443752288818
    3. ' partial' → logprob: -1.5167443752288818
    4. ' mod' → logprob: -3.016744375228882
    5. 'x' → logprob: -4.141744136810303
    6. ' n' → logprob: -4.891744136810303
    7. 'partial' → logprob: -5.391744136810303
    8. ' not' → logprob: -5.391744136810303
    9. ' __' → logprob: -6.641744136810303
    10. 'mod' → logprob: -6.891744136810303

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009215855039656162
    2. ':
' → logprob: -5.634215831756592
    3. '>' → logprob: -6.134215831756592
    4. '==' → logprob: -6.759215831756592
    5. ' >' → logprob: -7.134215831756592
    6. ' ==' → logprob: -7.384215831756592
    7. ' !=' → logprob: -7.884215831756592
    8. '!=' → logprob: -8.25921630859375
    9. ' :' → logprob: -9.13421630859375
    10. '   ' → logprob: -9.88421630859375

Token 329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017981117125600576
    2. '   ' → logprob: -7.376798152923584
    3. '       ' → logprob: -8.251797676086426
    4. ' x' → logprob: -8.501797676086426
    5. '	       ' → logprob: -8.501797676086426
    6. ' ans' → logprob: -8.626797676086426
    7. '+' → logprob: -9.126797676086426
    8. ' +' → logprob: -9.626797676086426
    9. 'x' → logprob: -10.876797676086426
    10. '	   ' → logprob: -11.126797676086426

Token 330: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10040303319692612
    2. ' ans' → logprob: -2.350403070449829
    3. '           ' → logprob: -8.85040283203125
    4. '	ans' → logprob: -10.97540283203125
    5. '       ' → logprob: -11.35040283203125
    6. '   ' → logprob: -11.60040283203125
    7. '(ans' → logprob: -12.60040283203125
    8. 'x' → logprob: -13.10040283203125
    9. ' ' → logprob: -13.10040283203125
    10. '+' → logprob: -13.35040283203125

Token 331: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4214969873428345
    2. ' +=' → logprob: -1.4214969873428345
    3. ' -=' → logprob: -2.421496868133545
    4. '-=' → logprob: -4.296496868133545
    5. '-' → logprob: -9.171497344970703
    6. '   ' → logprob: -10.546497344970703
    7. '+' → logprob: -10.796497344970703
    8. '=' → logprob: -11.671497344970703
    9. ' -' → logprob: -12.296497344970703
    10. ' ' → logprob: -12.796497344970703

Token 332: ' chunk' (ID: 23958)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.013868462294340134
    2. ' sum' → logprob: -4.38886833190918
    3. 'chunk' → logprob: -6.88886833190918
    4. 'dz' → logprob: -8.76386833190918
    5. '   ' → logprob: -9.38886833190918
    6. ' chunk' → logprob: -10.76386833190918
    7. 'sz' → logprob: -10.88886833190918
    8. '	sum' → logprob: -11.01386833190918
    9. '  ' → logprob: -11.63886833190918
    10. ' dz' → logprob: -11.76386833190918

Token 333: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.3425219549390022e-05
    2. 'sum' → logprob: -11.25001335144043
    3. '_val' → logprob: -15.50001335144043
    4. 's' → logprob: -17.25001335144043
    5. 'Sum' → logprob: -17.37501335144043
    6. ' sum' → logprob: -18.37501335144043
    7. '_' → logprob: -18.37501335144043
    8. 'val' → logprob: -18.62501335144043
    9. 'ed' → logprob: -19.00001335144043
    10. '
' → logprob: -19.12501335144043

Token 334: '_zero' (ID: 53468)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.4867981970310211
    2. '(z' → logprob: -0.9867981672286987
    3. '_zero' → logprob: -4.861798286437988
    4. 'zero' → logprob: -5.361798286437988
    5. 'dz' → logprob: -9.486798286437988
    6. '_z' → logprob: -10.361798286437988
    7. 'z' → logprob: -10.611798286437988
    8. '```' → logprob: -10.736798286437988
    9. ' (' → logprob: -11.111798286437988
    10. 'Zero' → logprob: -11.236798286437988

Token 335: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.75001335144043
    3. ' (' → logprob: -12.25001335144043
    4. '(z' → logprob: -16.00001335144043
    5. '(
' → logprob: -17.00001335144043
    6. '```' → logprob: -17.25001335144043
    7. 'dz' → logprob: -18.12501335144043
    8. ' ' → logprob: -18.62501335144043
    9. '(dx' → logprob: -18.75001335144043
    10. 'Dz' → logprob: -18.75001335144043

Token 336: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6681728363037109
    2. '(z' → logprob: -0.7931728363037109
    3. '(d' → logprob: -3.418172836303711
    4. ' (' → logprob: -7.168172836303711
    5. 'dz' → logprob: -7.543172836303711
    6. '(' → logprob: -8.793172836303711
    7. '
' → logprob: -8.793172836303711
    8. '```' → logprob: -8.793172836303711
    9. ')' → logprob: -9.168172836303711
    10. ',' → logprob: -9.543172836303711

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026907172054052353
    2. '(d' → logprob: -4.401906967163086
    3. ',d' → logprob: -4.401906967163086
    4. ' ,' → logprob: -6.276906967163086
    5. ')' → logprob: -9.776906967163086
    6. '(' → logprob: -10.401906967163086
    7. '```' → logprob: -10.651906967163086
    8. ' (' → logprob: -10.901906967163086
    9. ',
' → logprob: -11.776906967163086
    10. 'd' → logprob: -12.151906967163086

Token 338: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06229357048869133
    2. ' n' → logprob: -2.812293529510498
    3. '   ' → logprob: -8.937294006347656
    4. 'partial' → logprob: -9.062294006347656
    5. 'd' → logprob: -10.437294006347656
    6. '    ' → logprob: -11.437294006347656
    7. ' partial' → logprob: -11.562294006347656
    8. ' ' → logprob: -12.062294006347656
    9. '  ' → logprob: -12.687294006347656
    10. ',' → logprob: -12.687294006347656

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028171599842607975
    2. ',k' → logprob: -8.87528133392334
    3. ' ,' → logprob: -8.87528133392334
    4. '   ' → logprob: -14.37528133392334
    5. '```' → logprob: -14.87528133392334
    6. ')' → logprob: -15.75028133392334
    7. ',m' → logprob: -15.87528133392334
    8. ',n' → logprob: -16.125282287597656
    9. ',q' → logprob: -16.125282287597656
    10. ',p' → logprob: -16.125282287597656

Token 340: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002809036523103714
    2. ' k' → logprob: -5.877809047698975
    3. '   ' → logprob: -13.377808570861816
    4. 'partial' → logprob: -13.752808570861816
    5. ' ' → logprob: -14.377808570861816
    6. '
' → logprob: -15.377808570861816
    7. '    ' → logprob: -15.877808570861816
    8. '  ' → logprob: -15.877808570861816
    9. '```' → logprob: -15.877808570861816
    10. ')' → logprob: -15.877808570861816

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04897315427660942
    2. ')
' → logprob: -3.0489730834960938
    3. '       ' → logprob: -7.923973083496094
    4. ' )' → logprob: -11.423973083496094
    5. ')

' → logprob: -12.298973083496094
    6. '   ' → logprob: -12.298973083496094
    7. ')
' → logprob: -13.423973083496094
    8. ' )
' → logprob: -13.673973083496094
    9. ')\
' → logprob: -15.048973083496094
    10. '))' → logprob: -15.798973083496094

Token 342: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08353684097528458
    2. '       ' → logprob: -2.5835368633270264
    3. 'print' → logprob: -5.583536624908447
    4. '
' → logprob: -8.083537101745605
    5. '<|end|>' → logprob: -8.208537101745605
    6. '    
' → logprob: -9.083537101745605
    7. '```' → logprob: -9.333537101745605
    8. '        
' → logprob: -10.083537101745605
    9. ' print' → logprob: -10.833537101745605
    10. '	print' → logprob: -11.333537101745605

Token 343: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2597852349281311
    2. '       ' → logprob: -1.6347851753234863
    3. '
' → logprob: -3.6347851753234863
    4. '   ' → logprob: -5.009785175323486
    5. ' print' → logprob: -8.259785652160645
    6. '        
' → logprob: -8.759785652160645
    7. '```' → logprob: -9.259785652160645
    8. 'return' → logprob: -9.759785652160645
    9. '<|end|>' → logprob: -10.134785652160645
    10. '    
' → logprob: -10.384785652160645

Token 344: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.6895233531831764e-05
    2. '()' → logprob: -10.62502670288086
    3. '(' → logprob: -13.75002670288086
    4. '(x' → logprob: -14.12502670288086
    5. 'ans' → logprob: -15.12502670288086
    6. ' (' → logprob: -15.25002670288086
    7. '(answer' → logprob: -15.75002670288086
    8. '((' → logprob: -17.87502670288086
    9. '(a' → logprob: -17.87502670288086
    10. '(abs' → logprob: -18.00002670288086

Token 345: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.375001907348633
    3. '`)' → logprob: -15.875001907348633
    4. ')`' → logprob: -16.000001907348633
    5. '))' → logprob: -16.250001907348633
    6. '())' → logprob: -16.750001907348633
    7. ' )' → logprob: -16.750001907348633
    8. '")' → logprob: -17.125001907348633
    9. '')' → logprob: -17.250001907348633
    10. '()' → logprob: -17.500001907348633

Token 346: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5085666179656982
    2. ')' → logprob: -1.5085666179656982
    3. '<|end|>' → logprob: -1.8835666179656982
    4. '#' → logprob: -5.008566856384277
    5. '```' → logprob: -5.133566856384277
    6. '
' → logprob: -5.133566856384277
    7. '(' → logprob: -5.383566856384277
    8. '(
' → logprob: -7.133566856384277
    9. '()
' → logprob: -7.758566856384277
    10. '<|end|>' → logprob: -8.008566856384277


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 345
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 143
Tokens correctement prédits (top 10): 289
Précision stricte (1ère position): 39.71%
Précision adaptée (1ère position): 41.45%
Précision (top 10): 83.77%
================================================================================
