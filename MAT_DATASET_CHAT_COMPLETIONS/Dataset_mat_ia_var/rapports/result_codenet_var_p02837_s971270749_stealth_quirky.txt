================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce as rdc
from operator import add

get = lambda : int(__import__('builtins').input())
L = []
for __ in (lambda n: [None]*n)(get()):
    inner = []
    for _ in range(get()):
        X, Y = (lambda z: (int(z[0])-1,int(z[1])))(__import__('builtins').input().split())
        inner += [(X, Y)]
    L += [inner]

chk = lambda V: sum(any(V[j] and V[x]!=y for x,y in L[j]) for j in range(len(L)))
from itertools import product as prod

for poss in (list(x) for x in prod([1,0],[None]*len(L))):
    if not chk(poss):
        final = rdc(add, poss)
        break

print(final)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: ' r' (ID: 428)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.06318420171737671
    2. ' reduce' → logprob: -2.8131842613220215
    3. '_reduce' → logprob: -7.1881842613220215
    4. 'r' → logprob: -8.938183784484863
    5. 'red' → logprob: -8.938183784484863
    6. 'redu' → logprob: -9.438183784484863
    7. ' ' → logprob: -10.563183784484863
    8. 'rd' → logprob: -11.313183784484863
    9. '```' → logprob: -11.438183784484863
    10. '`' → logprob: -11.563183784484863

Token 6: 'dc' (ID: 13964)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08184845745563507
    2. 'ed' → logprob: -2.581848382949829
    3. 'educ' → logprob: -6.956848621368408
    4. 'educt' → logprob: -7.331848621368408
    5. 'u' → logprob: -7.831848621368408
    6. ',' → logprob: -8.08184814453125
    7. '.' → logprob: -9.20684814453125
    8. '#' → logprob: -9.20684814453125
    9. '|' → logprob: -10.08184814453125
    10. '```' → logprob: -10.20684814453125

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17899475991725922
    2. '.' → logprob: -1.9289947748184204
    3. ',' → logprob: -4.678994655609131
    4. '\(' → logprob: -5.928994655609131
    5. '\' → logprob: -6.678994655609131
    6. '\n' → logprob: -6.678994655609131
    7. '(
' → logprob: -7.303994655609131
    8. 'm' → logprob: -7.803994655609131
    9. '
' → logprob: -7.928994655609131
    10. ''' → logprob: -8.428995132446289

Token 8: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06285491585731506
    2. ',' → logprob: -3.6878550052642822
    3. '.' → logprob: -3.6878550052642822
    4. '(
' → logprob: -6.312854766845703
    5. '\(' → logprob: -6.437854766845703
    6. '\' → logprob: -6.562854766845703
    7. ':' → logprob: -6.812854766845703
    8. 'r' → logprob: -7.312854766845703
    9. 'm' → logprob: -7.437854766845703
    10. '
' → logprob: -7.562854766845703

Token 9: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.33066925406455994
    2. ' operator' → logprob: -1.7056692838668823
    3. 'math' → logprob: -2.9556691646575928
    4. ' itertools' → logprob: -3.4556691646575928
    5. ' math' → logprob: -4.455669403076172
    6. 'collections' → logprob: -5.830669403076172
    7. ' collections' → logprob: -7.330669403076172
    8. 'it' → logprob: -7.705669403076172
    9. 'os' → logprob: -9.080669403076172
    10. '_operator' → logprob: -9.205669403076172

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.049864739179611206
    2. 'import' → logprob: -3.0498647689819336
    3. '.' → logprob: -7.299864768981934
    4. ' ' → logprob: -7.549864768981934
    5. ' .' → logprob: -10.424864768981934
    6. '	import' → logprob: -10.924864768981934
    7. '<|end|>' → logprob: -11.049864768981934
    8. '.import' → logprob: -13.299864768981934
    9. ' ,' → logprob: -13.549864768981934
    10. ' ' → logprob: -13.674864768981934

Token 11: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.7168711423873901
    2. ' add' → logprob: -0.8418711423873901
    3. ' import' → logprob: -3.9668712615966797
    4. 'mul' → logprob: -4.21687126159668
    5. ' mul' → logprob: -4.34187126159668
    6. 'import' → logprob: -4.46687126159668
    7. 'item' → logprob: -5.34187126159668
    8. ' item' → logprob: -5.46687126159668
    9. ' ' → logprob: -5.59187126159668
    10. 'getitem' → logprob: -5.84187126159668

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2982454001903534
    2. ')' → logprob: -2.798245429992676
    3. '(r' → logprob: -3.048245429992676
    4. ',' → logprob: -3.173245429992676
    5. '(
' → logprob: -4.048245429992676
    6. ' ' → logprob: -4.048245429992676
    7. '\' → logprob: -4.298245429992676
    8. ' (' → logprob: -4.548245429992676
    9. '
' → logprob: -4.673245429992676
    10. '\n' → logprob: -4.923245429992676

Token 13: 'get' (ID: 522)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018582524731755257
    2. '(
' → logprob: -4.643582344055176
    3. 'a' → logprob: -6.518582344055176
    4. 'result' → logprob: -6.768582344055176
    5. ',' → logprob: -7.018582344055176
    6. '\' → logprob: -7.143582344055176
    7. '#' → logprob: -7.268582344055176
    8. 'r' → logprob: -7.643582344055176
    9. 'def' → logprob: -7.768582344055176
    10. ')' → logprob: -7.893582344055176

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42131662368774414
    2. 'attr' → logprob: -1.1713166236877441
    3. '_item' → logprob: -4.046316623687744
    4. '_sum' → logprob: -4.921316623687744
    5. '_attr' → logprob: -5.671316623687744
    6. 'ter' → logprob: -6.796316623687744
    7. 'item' → logprob: -6.921316623687744
    8. '_total' → logprob: -7.171316623687744
    9. 'sum' → logprob: -7.921316623687744
    10. ' _' → logprob: -8.046316146850586

Token 15: ' lambda' (ID: 27871)
  Prédit: 'rd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rd' → logprob: -0.7257844805717468
    2. 'lambda' → logprob: -1.1007845401763916
    3. ' lambda' → logprob: -1.9757845401763916
    4. 'get' → logprob: -3.6007845401763916
    5. 'sum' → logprob: -5.2257843017578125
    6. ' get' → logprob: -5.6007843017578125
    7. ' r' → logprob: -5.9757843017578125
    8. 'input' → logprob: -6.9757843017578125
    9. ' rd' → logprob: -6.9757843017578125
    10. 'getitem' → logprob: -7.1007843017578125

Token 16: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09668143838644028
    2. ' lambda' → logprob: -3.3466813564300537
    3. 'x' → logprob: -3.7216813564300537
    4. ' a' → logprob: -4.596681594848633
    5. ' s' → logprob: -4.596681594848633
    6. ' ' → logprob: -5.471681594848633
    7. 'a' → logprob: -5.971681594848633
    8. ' lst' → logprob: -6.596681594848633
    9. 'lambda' → logprob: -6.596681594848633
    10. 's' → logprob: -7.221681594848633

Token 17: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8872801661491394
    2. 'rd' → logprob: -0.8872801661491394
    3. ' input' → logprob: -3.012280225753784
    4. 'int' → logprob: -3.512280225753784
    5. 'sum' → logprob: -4.387279987335205
    6. ' ' → logprob: -4.512279987335205
    7. '0' → logprob: -4.637279987335205
    8. 'map' → logprob: -4.762279987335205
    9. 'reduce' → logprob: -4.762279987335205
    10. '[' → logprob: -5.012279987335205

Token 18: '(__' (ID: 11782)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23032967746257782
    2. '(' → logprob: -1.6053296327590942
    3. 'input' → logprob: -5.480329513549805
    4. '()' → logprob: -7.605329513549805
    5. '((' → logprob: -9.105329513549805
    6. '(get' → logprob: -10.605329513549805
    7. '(open' → logprob: -11.230329513549805
    8. '('' → logprob: -11.355329513549805
    9. '("")' → logprob: -11.480329513549805
    10. '(int' → logprob: -11.855329513549805

Token 19: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.004203882534056902
    2. 'built' → logprob: -5.754203796386719
    3. 'input' → logprob: -7.879203796386719
    4. 'name' → logprob: -8.129203796386719
    5. 'stdin' → logprob: -8.129203796386719
    6. 'next' → logprob: -11.254203796386719
    7. 'file' → logprob: -11.254203796386719
    8. 'code' → logprob: -11.504203796386719
    9. 'builtin' → logprob: -12.254203796386719
    10. 'build' → logprob: -12.254203796386719

Token 20: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3780882656574249
    2. '('' → logprob: -1.7530882358551025
    3. '("("' → logprob: -2.2530882358551025
    4. '__('' → logprob: -4.128088474273682
    5. '("' → logprob: -4.628088474273682
    6. '__("' → logprob: -5.878088474273682
    7. '('__' → logprob: -7.003088474273682
    8. '<|end|>' → logprob: -7.253088474273682
    9. '("__' → logprob: -7.628088474273682
    10. '(math' → logprob: -7.753088474273682

Token 21: 'built' (ID: 81936)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2549998164176941
    2. 'built' → logprob: -1.5049998760223389
    3. 'math' → logprob: -5.87999963760376
    4. 'random' → logprob: -9.505000114440918
    5. 'm' → logprob: -9.630000114440918
    6. 'ms' → logprob: -9.755000114440918
    7. 'operator' → logprob: -11.255000114440918
    8. 're' → logprob: -11.505000114440918
    9. ' built' → logprob: -11.505000114440918
    10. 'code' → logprob: -11.880000114440918

Token 22: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -3.7385154428193346e-05
    2. '__' → logprob: -10.75003719329834
    3. 'i' → logprob: -11.75003719329834
    4. 'in' → logprob: -12.87503719329834
    5. '```' → logprob: -13.00003719329834
    6. 'ints' → logprob: -14.25003719329834
    7. '-ins' → logprob: -15.00003719329834
    8. 'íns' → logprob: -15.12503719329834
    9. 'insics' → logprob: -15.62503719329834
    10. 'insu' → logprob: -15.87503719329834

Token 23: '').' (ID: 3426)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5423246622085571
    2. '.input' → logprob: -1.9173246622085571
    3. '').' → logprob: -2.0423245429992676
    4. ').' → logprob: -2.6673245429992676
    5. ').__' → logprob: -3.7923245429992676
    6. '.__' → logprob: -4.167324542999268
    7. '.get' → logprob: -4.417324542999268
    8. ' .' → logprob: -5.542324542999268
    9. '.import' → logprob: -5.917324542999268
    10. ' ).' → logprob: -6.292324542999268

Token 24: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012630375567823648
    2. 'int' → logprob: -9.375125885009766
    3. 'get' → logprob: -10.875125885009766
    4. 'eval' → logprob: -11.500125885009766
    5. ' input' → logprob: -12.375125885009766
    6. 'raw' → logprob: -13.000125885009766
    7. 'inp' → logprob: -13.250125885009766
    8. 'abs' → logprob: -13.750125885009766
    9. 'max' → logprob: -14.250125885009766
    10. '__' → logprob: -14.250125885009766

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05339105799794197
    2. '()' → logprob: -3.4283909797668457
    3. ')' → logprob: -4.678390979766846
    4. '(' → logprob: -4.678390979766846
    5. '('' → logprob: -8.428391456604004
    6. ' ())' → logprob: -8.553391456604004
    7. '()))' → logprob: -9.053391456604004
    8. '().' → logprob: -9.678391456604004
    9. '(()' → logprob: -9.678391456604004
    10. '());' → logprob: -10.178391456604004

Token 26: 'L' (ID: 43)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042863186448812485
    2. '(
' → logprob: -3.542863130569458
    3. '()' → logprob: -4.792863368988037
    4. ')' → logprob: -6.667863368988037
    5. '
' → logprob: -7.417863368988037
    6. 'def' → logprob: -7.542863368988037
    7. '(

' → logprob: -8.292862892150879
    8. ',' → logprob: -8.417862892150879
    9. '('\' → logprob: -8.542862892150879
    10. '\n' → logprob: -8.542862892150879

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7279552221298218
    2. '=' → logprob: -0.9779552221298218
    3. 'ist' → logprob: -2.8529553413391113
    4. '=[]' → logprob: -3.1029553413391113
    5. '[' → logprob: -4.352955341339111
    6. 'ambda' → logprob: -4.602955341339111
    7. '(' → logprob: -5.852955341339111
    8. 'amb' → logprob: -6.227955341339111
    9. 'et' → logprob: -6.477955341339111
    10. '[]' → logprob: -6.602955341339111

Token 28: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5779123306274414
    2. '[' → logprob: -1.0779123306274414
    3. ' []' → logprob: -2.5779123306274414
    4. '[get' → logprob: -4.827912330627441
    5. ' [' → logprob: -4.952912330627441
    6. 'get' → logprob: -5.327912330627441
    7. ' get' → logprob: -7.327912330627441
    8. '[r' → logprob: -7.827912330627441
    9. 'list' → logprob: -8.077912330627441
    10. ' list' → logprob: -8.077912330627441

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02526179328560829
    2. 'n' → logprob: -3.900261878967285
    3. ' for' → logprob: -6.150261878967285
    4. '_' → logprob: -7.525261878967285
    5. 'L' → logprob: -7.650261878967285
    6. 'def' → logprob: -8.025261878967285
    7. 'N' → logprob: -8.025261878967285
    8. 'i' → logprob: -8.400261878967285
    9. 'try' → logprob: -9.650261878967285
    10. 't' → logprob: -9.650261878967285

Token 30: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08242716640233994
    2. ' i' → logprob: -3.2074272632598877
    3. '_' → logprob: -3.4574272632598877
    4. ' ' → logprob: -4.957427024841309
    5. 'i' → logprob: -9.457427024841309
    6. ' ' → logprob: -11.082427024841309
    7. ' range' → logprob: -11.707427024841309
    8. ' in' → logprob: -11.832427024841309
    9. ' ‌' → logprob: -13.082427024841309
    10. ' I' → logprob: -13.332427024841309

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13903731107711792
    2. '_' → logprob: -2.2640373706817627
    3. 'in' → logprob: -3.7640373706817627
    4. ' _' → logprob: -6.514037132263184
    5. ' ' → logprob: -7.889037132263184
    6. 'i' → logprob: -8.139037132263184
    7. ' i' → logprob: -8.139037132263184
    8. 'n' → logprob: -9.389037132263184
    9. 'L' → logprob: -10.014037132263184
    10. ' L' → logprob: -10.514037132263184

Token 32: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.577292799949646
    2. ' range' → logprob: -0.827292799949646
    3. 'get' → logprob: -6.8272929191589355
    4. ' get' → logprob: -8.452292442321777
    5. ' ' → logprob: -11.202292442321777
    6. '_' → logprob: -11.952292442321777
    7. 'r' → logprob: -11.952292442321777
    8. 'rang' → logprob: -12.452292442321777
    9. 'iter' → logprob: -12.577292442321777
    10. ' xrange' → logprob: -12.952292442321777

Token 33: 'lambda' (ID: 35280)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009344357065856457
    2. ' range' → logprob: -5.134344577789307
    3. '[' → logprob: -6.509344577789307
    4. 'get' → logprob: -6.759344577789307
    5. '0' → logprob: -8.759344100952148
    6. 'iter' → logprob: -8.884344100952148
    7. 'rd' → logprob: -9.009344100952148
    8. ' ' → logprob: -9.384344100952148
    9. ')' → logprob: -9.759344100952148
    10. '[get' → logprob: -9.759344100952148

Token 34: ' n' (ID: 297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7509785294532776
    2. 'range' → logprob: -0.7509785294532776
    3. ':' → logprob: -3.500978469848633
    4. 'get' → logprob: -4.250978469848633
    5. ' get' → logprob: -5.375978469848633
    6. 'r' → logprob: -6.750978469848633
    7. ' ' → logprob: -7.000978469848633
    8. '[' → logprob: -7.250978469848633
    9. ' r' → logprob: -7.500978469848633
    10. 'x' → logprob: -7.750978469848633

Token 35: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051511019468307495
    2. ' :' → logprob: -3.92651104927063
    3. ' range' → logprob: -4.051510810852051
    4. 'range' → logprob: -4.551510810852051
    5. '(range' → logprob: -7.176510810852051
    6. ' n' → logprob: -7.551510810852051
    7. '(n' → logprob: -7.676510810852051
    8. ':n' → logprob: -7.926510810852051
    9. 'n' → logprob: -9.67651081085205
    10. ' (' → logprob: -9.92651081085205

Token 36: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0627758726477623
    2. ' range' → logprob: -2.8127758502960205
    3. '[' → logprob: -7.5627760887146
    4. '__' → logprob: -10.187775611877441
    5. 'list' → logprob: -10.562775611877441
    6. 'n' → logprob: -10.562775611877441
    7. '(range' → logprob: -10.812775611877441
    8. 'iter' → logprob: -10.812775611877441
    9. 're' → logprob: -10.937775611877441
    10. ')' → logprob: -11.312775611877441

Token 37: 'None' (ID: 8505)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.036945492029190063
    2. 'int' → logprob: -3.9119455814361572
    3. '__' → logprob: -5.286945343017578
    4. 'rd' → logprob: -5.661945343017578
    5. '_' → logprob: -6.036945343017578
    6. ' get' → logprob: -7.036945343017578
    7. '0' → logprob: -7.161945343017578
    8. '(get' → logprob: -7.536945343017578
    9. 'n' → logprob: -7.661945343017578
    10. 'i' → logprob: -7.661945343017578

Token 38: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42843371629714966
    2. '()' → logprob: -1.5534336566925049
    3. ' for' → logprob: -2.678433656692505
    4. ']*' → logprob: -3.428433656692505
    5. ']' → logprob: -4.178433895111084
    6. '()]' → logprob: -4.303433895111084
    7. ']()' → logprob: -6.178433895111084
    8. '(n' → logprob: -6.428433895111084
    9. ']*(' → logprob: -6.678433895111084
    10. '(None' → logprob: -7.053433895111084

Token 39: 'n' (ID: 77)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.18580418825149536
    2. 'n' → logprob: -2.1858041286468506
    3. ' get' → logprob: -3.1858041286468506
    4. ' n' → logprob: -4.56080436706543
    5. '(get' → logprob: -5.43580436706543
    6. 'rd' → logprob: -8.31080436706543
    7. '(n' → logprob: -8.56080436706543
    8. ' ' → logprob: -9.31080436706543
    9. ' (' → logprob: -9.43580436706543
    10. ')get' → logprob: -9.43580436706543

Token 40: ')(' (ID: 4898)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.22229750454425812
    2. '(' → logprob: -2.222297430038452
    3. ')(' → logprob: -2.722297430038452
    4. ')(__' → logprob: -4.597297668457031
    5. '(int' → logprob: -5.097297668457031
    6. ')' → logprob: -5.472297668457031
    7. '(len' → logprob: -6.472297668457031
    8. '):' → logprob: -7.347297668457031
    9. ')((' → logprob: -7.472297668457031
    10. '(__' → logprob: -7.972297668457031

Token 41: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.016658615320920944
    2. ' get' → logprob: -4.141658782958984
    3. '(get' → logprob: -7.891658782958984
    4. '3' → logprob: -9.641658782958984
    5. ' ' → logprob: -10.516658782958984
    6. '1' → logprob: -10.766658782958984
    7. '2' → logprob: -10.891658782958984
    8. ')get' → logprob: -10.891658782958984
    9. '10' → logprob: -11.016658782958984
    10. '5' → logprob: -11.641658782958984

Token 42: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018763523548841476
    2. '())' → logprob: -4.768763542175293
    3. '()))' → logprob: -4.893763542175293
    4. '()):
' → logprob: -6.393763542175293
    5. '():' → logprob: -8.393763542175293
    6. '):' → logprob: -9.018763542175293
    7. '());' → logprob: -9.268763542175293
    8. ' (' → logprob: -9.518763542175293
    9. ' ())' → logprob: -9.768763542175293
    10. '())))' → logprob: -9.893763542175293

Token 43: '   ' (ID: 271)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.1399555802345276
    2. 'L' → logprob: -2.264955520629883
    3. '   ' → logprob: -3.639955520629883
    4. '    ' → logprob: -8.889955520629883
    5. '    
' → logprob: -9.139955520629883
    6. '	L' → logprob: -9.139955520629883
    7. ' ' → logprob: -10.264955520629883
    8. ' 
' → logprob: -10.639955520629883
    9. '```' → logprob: -11.139955520629883
    10. ' ' → logprob: -11.389955520629883

Token 44: ' inner' (ID: 12694)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4765174388885498
    2. ' L' → logprob: -0.9765174388885498
    3. '   ' → logprob: -6.226517677307129
    4. '    ' → logprob: -8.601517677307129
    5. ' ' → logprob: -9.476517677307129
    6. '    
' → logprob: -9.851517677307129
    7. ' 
' → logprob: -11.039017677307129
    8. 'x' → logprob: -11.164017677307129
    9. 'a' → logprob: -11.351517677307129
    10. '	L' → logprob: -11.414017677307129

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22484460473060608
    2. '=' → logprob: -2.2248446941375732
    3. '_input' → logprob: -3.2248446941375732
    4. '_' → logprob: -3.5998446941375732
    5. '_val' → logprob: -5.224844455718994
    6. '_list' → logprob: -5.474844455718994
    7. '_value' → logprob: -5.599844455718994
    8. ' ' → logprob: -5.974844455718994
    9. '_in' → logprob: -5.974844455718994
    10. ' _' → logprob: -6.724844455718994

Token 46: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.208828330039978
    2. 'get' → logprob: -1.333828330039978
    3. '[get' → logprob: -1.333828330039978
    4. '[int' → logprob: -2.5838284492492676
    5. '[' → logprob: -2.8338284492492676
    6. 'rd' → logprob: -3.7088284492492676
    7. 'int' → logprob: -5.208828449249268
    8. ' list' → logprob: -5.958828449249268
    9. ' get' → logprob: -6.583828449249268
    10. '[list' → logprob: -6.708828449249268

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2584730386734009
    2. ' for' → logprob: -1.6334730386734009
    3. 'for' → logprob: -3.5084729194641113
    4. '<|end|>' → logprob: -7.008472919464111
    5. '    
' → logprob: -7.508472919464111
    6. '	for' → logprob: -8.25847339630127
    7. ' ' → logprob: -8.50847339630127
    8. '    ' → logprob: -9.13347339630127
    9. 'L' → logprob: -9.50847339630127
    10. ' L' → logprob: -9.75847339630127

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.054115213453769684
    2. ' for' → logprob: -3.0541152954101562
    3. '   ' → logprob: -5.679115295410156
    4. 'inner' → logprob: -6.304115295410156
    5. 'while' → logprob: -9.179115295410156
    6. ' inner' → logprob: -9.304115295410156
    7. 'L' → logprob: -10.929115295410156
    8. '    
' → logprob: -11.429115295410156
    9. ' ' → logprob: -11.929115295410156
    10. '	for' → logprob: -12.179115295410156

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.261857271194458
    2. '__' → logprob: -1.636857271194458
    3. ' _' → logprob: -3.511857271194458
    4. ' __' → logprob: -5.886857032775879
    5. '___' → logprob: -5.886857032775879
    6. ' ' → logprob: -8.886857032775879
    7. 'i' → logprob: -10.011857032775879
    8. ' in' → logprob: -10.136857032775879
    9. 'j' → logprob: -10.511857032775879
    10. ' i' → logprob: -10.761857032775879

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11299566924571991
    2. 'in' → logprob: -2.2379956245422363
    3. ' ' → logprob: -9.237996101379395
    4. '_' → logprob: -10.112996101379395
    5. '    ' → logprob: -11.612996101379395
    6. '_in' → logprob: -12.737996101379395
    7. 'range' → logprob: -12.862996101379395
    8. ' _' → logprob: -12.987996101379395
    9. 'get' → logprob: -12.987996101379395
    10. 'import' → logprob: -13.112996101379395

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.46698832511901855
    2. ' range' → logprob: -1.2169883251190186
    3. '(' → logprob: -2.9669883251190186
    4. '(range' → logprob: -4.466988563537598
    5. ' (' → logprob: -4.716988563537598
    6. 'get' → logprob: -6.716988563537598
    7. '[' → logprob: -7.466988563537598
    8. '_' → logprob: -7.591988563537598
    9. '(get' → logprob: -8.091988563537598
    10. '(lambda' → logprob: -8.091988563537598

Token 52: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.011784774251282215
    2. '(' → logprob: -4.511784553527832
    3. 'get' → logprob: -7.886784553527832
    4. ' (' → logprob: -8.511784553527832
    5. '((' → logprob: -10.136784553527832
    6. ' get' → logprob: -10.636784553527832
    7. '(r' → logprob: -10.761784553527832
    8. '(int' → logprob: -11.011784553527832
    9. ' ' → logprob: -11.386784553527832
    10. '()' → logprob: -11.886784553527832

Token 53: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004788834135979414
    2. '()):
' → logprob: -5.754788875579834
    3. '():' → logprob: -6.629788875579834
    4. '())' → logprob: -8.629788398742676
    5. '(' → logprob: -10.254788398742676
    6. '):' → logprob: -10.504788398742676
    7. ' (' → logprob: -11.254788398742676
    8. '()>' → logprob: -11.629788398742676
    9. '()))' → logprob: -12.754788398742676
    10. ' ()' → logprob: -12.879788398742676

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008788274135440588
    2. '   ' → logprob: -8.375879287719727
    3. 'inner' → logprob: -8.750879287719727
    4. '    ' → logprob: -9.000879287719727
    5. '        
' → logprob: -9.250879287719727
    6. ' inner' → logprob: -9.500879287719727
    7. '	   ' → logprob: -10.000879287719727
    8. '<|end|>' → logprob: -10.875879287719727
    9. '           ' → logprob: -11.000879287719727
    10. '	' → logprob: -11.000879287719727

Token 55: ' X' (ID: 2127)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.225483700633049
    2. '   ' → logprob: -1.8504836559295654
    3. ' inner' → logprob: -3.2254836559295654
    4. '       ' → logprob: -6.1004838943481445
    5. '           ' → logprob: -7.3504838943481445
    6. 'x' → logprob: -7.6004838943481445
    7. 'v' → logprob: -7.9754838943481445
    8. ' ' → logprob: -8.100483894348145
    9. 'val' → logprob: -8.850483894348145
    10. 'i' → logprob: -9.225483894348145

Token 56: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.283500999212265
    2. ' =' → logprob: -1.5335010290145874
    3. ',' → logprob: -3.658500909805298
    4. '=int' → logprob: -6.283501148223877
    5. '=input' → logprob: -6.408501148223877
    6. '.append' → logprob: -6.533501148223877
    7. ',input' → logprob: -9.408500671386719
    8. '.' → logprob: -10.658500671386719
    9. ' ,' → logprob: -10.783500671386719
    10. ',y' → logprob: -11.033500671386719

Token 57: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.023527998477220535
    2. ' Y' → logprob: -3.7735280990600586
    3. '_' → logprob: -9.148528099060059
    4. ' ' → logprob: -10.023528099060059
    5. '=' → logprob: -10.523528099060059
    6. 'y' → logprob: -10.523528099060059
    7. '*' → logprob: -10.898528099060059
    8. '_Y' → logprob: -11.273528099060059
    9. ' =' → logprob: -11.773528099060059
    10. '  ' → logprob: -12.273528099060059

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0889434963464737
    2. ' =' → logprob: -2.4639434814453125
    3. ',' → logprob: -12.963943481445312
    4. '=input' → logprob: -13.713943481445312
    5. '=int' → logprob: -15.713943481445312
    6. ' ' → logprob: -16.213943481445312
    7. ')' → logprob: -16.838943481445312
    8. '=line' → logprob: -16.838943481445312
    9. '＝' → logprob: -17.213943481445312
    10. '=

' → logprob: -17.338943481445312

Token 59: ' (' (ID: 350)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.44924527406692505
    2. ' map' → logprob: -1.5742452144622803
    3. 'get' → logprob: -2.0742452144622803
    4. 'map' → logprob: -3.8242452144622803
    5. ' input' → logprob: -5.199245452880859
    6. 'input' → logprob: -7.199245452880859
    7. ' list' → logprob: -8.44924545288086
    8. ' [' → logprob: -8.69924545288086
    9. ' ' → logprob: -9.19924545288086
    10. '[get' → logprob: -9.19924545288086

Token 60: 'lambda' (ID: 35280)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7164868116378784
    2. 'map' → logprob: -0.8414868116378784
    3. 'int' → logprob: -3.841486930847168
    4. ' map' → logprob: -3.966486930847168
    5. ')' → logprob: -4.341486930847168
    6. 'rd' → logprob: -4.591486930847168
    7. ' get' → logprob: -4.716486930847168
    8. 'input' → logprob: -5.716486930847168
    9. 'list' → logprob: -6.966486930847168
    10. ')get' → logprob: -7.716486930847168

Token 61: ' z' (ID: 579)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3472123146057129
    2. 'int' → logprob: -2.097212314605713
    3. ' get' → logprob: -2.097212314605713
    4. ' int' → logprob: -4.097212314605713
    5. ':int' → logprob: -5.097212314605713
    6. '(int' → logprob: -5.222212314605713
    7. 'map' → logprob: -5.722212314605713
    8. '(get' → logprob: -5.972212314605713
    9. ':' → logprob: -6.347212314605713
    10. '__' → logprob: -6.472212314605713

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024724746122956276
    2. ':int' → logprob: -4.774724960327148
    3. ':z' → logprob: -5.024724960327148
    4. ' :' → logprob: -5.274724960327148
    5. ':list' → logprob: -6.524724960327148
    6. ',z' → logprob: -6.649724960327148
    7. ',' → logprob: -7.649724960327148
    8. 'z' → logprob: -8.774724960327148
    9. ':i' → logprob: -9.274724960327148
    10. ':n' → logprob: -9.399724960327148

Token 63: ' (' (ID: 350)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.5469598770141602
    2. 'list' → logprob: -1.6719598770141602
    3. 'int' → logprob: -1.9219598770141602
    4. ' map' → logprob: -2.17195987701416
    5. '[int' → logprob: -2.67195987701416
    6. 'map' → logprob: -2.92195987701416
    7. ' int' → logprob: -3.17195987701416
    8. 'z' → logprob: -3.17195987701416
    9. 'tuple' → logprob: -3.54695987701416
    10. ' tuple' → logprob: -3.67195987701416

Token 64: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13294872641563416
    2. ' int' → logprob: -3.632948637008667
    3. 'z' → logprob: -3.882948637008667
    4. '[int' → logprob: -4.257948875427246
    5. '(int' → logprob: -4.382948875427246
    6. 'rd' → logprob: -4.507948875427246
    7. 'map' → logprob: -4.632948875427246
    8. 'tuple' → logprob: -5.132948875427246
    9. 'get' → logprob: -5.257948875427246
    10. ' z' → logprob: -5.382948875427246

Token 65: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.02502196840941906
    2. '(x' → logprob: -3.900022029876709
    3. '(i' → logprob: -5.900022029876709
    4. '(' → logprob: -6.900022029876709
    5. 'z' → logprob: -8.27502155303955
    6. '(s' → logprob: -9.40002155303955
    7. '(y' → logprob: -9.52502155303955
    8. ')(' → logprob: -9.52502155303955
    9. '(a' → logprob: -10.15002155303955
    10. '(v' → logprob: -10.52502155303955

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4013396203517914
    2. '.split' → logprob: -1.2763396501541138
    3. ')' → logprob: -4.276339530944824
    4. '.strip' → logprob: -4.401339530944824
    5. '(z' → logprob: -5.151339530944824
    6. '(x' → logprob: -5.651339530944824
    7. '),' → logprob: -5.776339530944824
    8. '))' → logprob: -5.901339530944824
    9. '(' → logprob: -6.526339530944824
    10. ',' → logprob: -6.776339530944824

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016375737031921744
    2. ' ' → logprob: -6.8766374588012695
    3. '
' → logprob: -8.50163745880127
    4. '1' → logprob: -9.62663745880127
    5. ']),' → logprob: -9.87663745880127
    6. 'X' → logprob: -10.50163745880127
    7. '])' → logprob: -10.50163745880127
    8. '-' → logprob: -10.75163745880127
    9. ']' → logprob: -11.00163745880127
    10. ')' → logprob: -11.06413745880127

Token 68: '])-' (ID: 160447)
  Prédit: ']),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.3931821584701538
    2. '),' → logprob: -1.1431821584701538
    3. '],' → logprob: -5.518182277679443
    4. '])' → logprob: -7.393182277679443
    5. ')' → logprob: -7.768182277679443
    6. '[' → logprob: -8.143181800842285
    7. ']' → logprob: -8.518181800842285
    8. '']),' → logprob: -8.893181800842285
    9. ' ),' → logprob: -9.143181800842285
    10. '.strip' → logprob: -9.268181800842285

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008654399774968624
    2. ' ' → logprob: -4.758654594421387
    3. '2' → logprob: -11.883654594421387
    4. '0' → logprob: -12.071154594421387
    5. 'int' → logprob: -12.258654594421387
    6. '   ' → logprob: -13.008654594421387
    7. '4' → logprob: -13.258654594421387
    8. ',' → logprob: -13.321154594421387
    9. '3' → logprob: -13.446154594421387
    10. '  ' → logprob: -13.571154594421387

Token 70: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016861280892044306
    2. ',int' → logprob: -6.876686096191406
    3. ' ,' → logprob: -7.501686096191406
    4. ',
' → logprob: -11.001686096191406
    5. ',y' → logprob: -11.126686096191406
    6. '<|end|>' → logprob: -11.376686096191406
    7. ',input' → logprob: -11.501686096191406
    8. ',Y' → logprob: -12.126686096191406
    9. ',X' → logprob: -12.126686096191406
    10. ',x' → logprob: -12.751686096191406

Token 71: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -9.364928700961173e-05
    2. '(' → logprob: -9.500093460083008
    3. '<|end|>' → logprob: -11.750093460083008
    4. '(y' → logprob: -11.875093460083008
    5. '<|end|>' → logprob: -14.125093460083008
    6. '(w' → logprob: -14.250093460083008
    7. ' (' → logprob: -14.875093460083008
    8. '	z' → logprob: -15.000093460083008
    9. '[z' → logprob: -15.000093460083008
    10. '(zip' → logprob: -15.500093460083008

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001999642699956894
    2. '1' → logprob: -8.625200271606445
    3. ' [' → logprob: -12.125200271606445
    4. '-' → logprob: -12.375200271606445
    5. ' ' → logprob: -13.250200271606445
    6. '[-' → logprob: -13.500200271606445
    7. '[
' → logprob: -13.625200271606445
    8. '(' → logprob: -14.312700271606445
    9. ')' → logprob: -14.500200271606445
    10. '<|end|>' → logprob: -14.812700271606445

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009955333080142736
    2. '0' → logprob: -7.875995635986328
    3. ' ' → logprob: -8.375995635986328
    4. '-' → logprob: -8.875995635986328
    5. '2' → logprob: -9.250995635986328
    6. '])' → logprob: -9.500995635986328
    7. '```' → logprob: -11.125995635986328
    8. '   ' → logprob: -11.563495635986328
    9. ']))' → logprob: -11.750995635986328
    10. '_' → logprob: -11.750995635986328

Token 74: ']))' (ID: 20259)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.8414836525917053
    2. ']-' → logprob: -1.3414835929870605
    3. '])-' → logprob: -1.3414835929870605
    4. '])' → logprob: -4.2164835929870605
    5. '[' → logprob: -4.4664835929870605
    6. ')' → logprob: -4.7164835929870605
    7. ']))' → logprob: -5.4664835929870605
    8. '-' → logprob: -5.5914835929870605
    9. ']' → logprob: -6.9664835929870605
    10. '')' → logprob: -7.9664835929870605

Token 75: ')(__' (ID: 155158)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8935297727584839
    2. '(z' → logprob: -1.0185297727584839
    3. ')(' → logprob: -1.7685297727584839
    4. '(__' → logprob: -4.768529891967773
    5. ')(__' → logprob: -4.893529891967773
    6. ')' → logprob: -5.018529891967773
    7. '(x' → logprob: -5.018529891967773
    8. '(' → logprob: -5.643529891967773
    9. '(X' → logprob: -5.643529891967773
    10. '('' → logprob: -5.768529891967773

Token 76: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -8.180258191714529e-06
    2. '.import' → logprob: -12.500008583068848
    3. '(import' → logprob: -12.625008583068848
    4. '.' → logprob: -15.000008583068848
    5. ''import' → logprob: -15.000008583068848
    6. ' import' → logprob: -15.875008583068848
    7. '('' → logprob: -16.12500762939453
    8. 'built' → logprob: -17.12500762939453
    9. '_import' → logprob: -17.25000762939453
    10. '_' → logprob: -17.25000762939453

Token 77: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.0003693013568408787
    2. '__("' → logprob: -8.62536907196045
    3. '__' → logprob: -8.75036907196045
    4. '__(' → logprob: -11.25036907196045
    5. '__(
' → logprob: -11.50036907196045
    6. '_' → logprob: -12.00036907196045
    7. '('' → logprob: -13.37536907196045
    8. '___' → logprob: -15.75036907196045
    9. '('__' → logprob: -16.250370025634766
    10. '__)' → logprob: -16.375370025634766

Token 78: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.00480259582400322
    2. 'sys' → logprob: -6.004802703857422
    3. 'b' → logprob: -6.879802703857422
    4. 're' → logprob: -7.879802703857422
    5. ' built' → logprob: -8.254802703857422
    6. 'collections' → logprob: -8.879802703857422
    7. ''b' → logprob: -9.004802703857422
    8. ''' → logprob: -9.504802703857422
    9. 'builtin' → logprob: -9.504802703857422
    10. 'string' → logprob: -9.879802703857422

Token 79: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.05736039951443672
    2. 'eds' → logprob: -3.1823604106903076
    3. 'ed' → logprob: -4.9323601722717285
    4. 'ils' → logprob: -6.1823601722717285
    5. 'als' → logprob: -6.4323601722717285
    6. '__' → logprob: -6.5573601722717285
    7. 's' → logprob: -7.3073601722717285
    8. 't' → logprob: -7.9323601722717285
    9. 'lins' → logprob: -7.9323601722717285
    10. 'uilt' → logprob: -8.807360649108887

Token 80: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.43542200326919556
    2. '.' → logprob: -1.6854219436645508
    3. ').__' → logprob: -3.060421943664551
    4. '__.' → logprob: -3.560421943664551
    5. '.input' → logprob: -4.185421943664551
    6. '__.__' → logprob: -4.435421943664551
    7. ')' → logprob: -4.685421943664551
    8. ' ).' → logprob: -4.935421943664551
    9. '').' → logprob: -4.935421943664551
    10. '.__' → logprob: -5.185421943664551

Token 81: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00036561701563186944
    2. ' input' → logprob: -8.500365257263184
    3. ' ' → logprob: -10.750365257263184
    4. '.input' → logprob: -11.000365257263184
    5. 'inp' → logprob: -11.125365257263184
    6. 'list' → logprob: -11.250365257263184
    7. ')' → logprob: -11.375365257263184
    8. '[input' → logprob: -11.500365257263184
    9. 'stdin' → logprob: -11.625365257263184
    10. 'abs' → logprob: -11.625365257263184

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00013619766104966402
    2. '()' → logprob: -9.000136375427246
    3. ' ().' → logprob: -12.000136375427246
    4. '.' → logprob: -13.375136375427246
    5. '(' → logprob: -13.375136375427246
    6. '.split' → logprob: -14.375136375427246
    7. ' ' → logprob: -14.500136375427246
    8. '('' → logprob: -14.625136375427246
    9. '('').' → logprob: -14.750136375427246
    10. '().__' → logprob: -14.750136375427246

Token 83: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25301411747932434
    2. 'strip' → logprob: -1.503014087677002
    3. 'rstrip' → logprob: -7.003014087677002
    4. ' split' → logprob: -8.87801456451416
    5. ' strip' → logprob: -10.37801456451416
    6. 'spl' → logprob: -13.37801456451416
    7. 'rs' → logprob: -14.00301456451416
    8. '.split' → logprob: -14.37801456451416
    9. 'replace' → logprob: -14.62801456451416
    10. '().' → logprob: -14.62801456451416

Token 84: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10405093431472778
    2. '()' → logprob: -2.354050874710083
    3. '('' → logprob: -5.854051113128662
    4. '()))' → logprob: -7.979051113128662
    5. ')' → logprob: -8.479050636291504
    6. '(' → logprob: -8.979050636291504
    7. '())
' → logprob: -9.104050636291504
    8. ' ())' → logprob: -9.479050636291504
    9. '(','' → logprob: -10.354050636291504
    10. '());' → logprob: -11.229050636291504

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009962068870663643
    2. ')' → logprob: -5.88496208190918
    3. '<|end|>' → logprob: -5.88496208190918
    4. 'inner' → logprob: -6.38496208190918
    5. ' inner' → logprob: -7.25996208190918
    6. '	' → logprob: -7.75996208190918
    7. '        
' → logprob: -7.75996208190918
    8. ',' → logprob: -8.38496208190918
    9. '           ' → logprob: -8.38496208190918
    10. '   ' → logprob: -8.75996208190918

Token 86: ' inner' (ID: 12694)
  Prédit: ' inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.8412370681762695
    2. '       ' → logprob: -1.0912370681762695
    3. 'inner' (adapté à ' inner') → logprob: -1.4662370681762695
    4. '   ' → logprob: -7.7162370681762695
    5. ' if' → logprob: -7.9662370681762695
    6. ' ' → logprob: -8.09123706817627
    7. '_inner' → logprob: -8.34123706817627
    8. '<|end|>' → logprob: -8.59123706817627
    9. '        
' → logprob: -9.71623706817627
    10. ',' → logprob: -9.84123706817627

Token 87: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00464882655069232
    2. '.' → logprob: -5.379648685455322
    3. '.extend' → logprob: -11.62964916229248
    4. '.app' → logprob: -12.12964916229248
    5. '.add' → logprob: -12.25464916229248
    6. '.setdefault' → logprob: -12.50464916229248
    7. 'append' → logprob: -13.00464916229248
    8. ' .' → logprob: -13.25464916229248
    9. ').' → logprob: -15.00464916229248
    10. '.ap' → logprob: -15.00464916229248

Token 88: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.009389940649271011
    2. ' [(' → logprob: -5.509389877319336
    3. '[' → logprob: -6.009389877319336
    4. '[Y' → logprob: -6.259389877319336
    5. '[X' → logprob: -7.884389877319336
    6. '[((' → logprob: -8.134389877319336
    7. ' [' → logprob: -9.509389877319336
    8. '[[' → logprob: -9.884389877319336
    9. '[x' → logprob: -10.259389877319336
    10. '[y' → logprob: -10.634389877319336

Token 89: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.015527698211371899
    2. '(X' → logprob: -4.515527725219727
    3. 'Y' → logprob: -5.890527725219727
    4. ' X' → logprob: -7.515527725219727
    5. ')' → logprob: -7.890527725219727
    6. '(' → logprob: -8.140527725219727
    7. ' (' → logprob: -8.640527725219727
    8. ' ' → logprob: -9.765527725219727
    9. '   ' → logprob: -9.890527725219727
    10. '(Y' → logprob: -10.140527725219727

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055774591863155365
    2. ',Y' → logprob: -3.055774688720703
    3. ' ,' → logprob: -5.055774688720703
    4. ',
' → logprob: -8.555774688720703
    5. '+' → logprob: -8.555774688720703
    6. ',y' → logprob: -8.805774688720703
    7. 'Y' → logprob: -9.430774688720703
    8. ',

' → logprob: -10.555774688720703
    9. '-' → logprob: -10.680774688720703
    10. ' ' → logprob: -10.805774688720703

Token 91: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0031846018973737955
    2. ' Y' → logprob: -5.753184795379639
    3. ' ' → logprob: -12.62818431854248
    4. '   ' → logprob: -14.12818431854248
    5. ')' → logprob: -14.62818431854248
    6. '	Y' → logprob: -14.75318431854248
    7. 'X' → logprob: -14.87818431854248
    8. '  ' → logprob: -15.00318431854248
    9. '(Y' → logprob: -15.75318431854248
    10. 'y' → logprob: -15.75318431854248

Token 92: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000636308453977108
    2. '),' → logprob: -8.250636100769043
    3. ')' → logprob: -8.750636100769043
    4. ')],' → logprob: -9.125636100769043
    5. ' )' → logprob: -9.875636100769043
    6. ',' → logprob: -10.750636100769043
    7. ')]
' → logprob: -11.500636100769043
    8. ')])' → logprob: -11.875636100769043
    9. '))' → logprob: -12.375636100769043
    10. '+' → logprob: -12.750636100769043

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023544415831565857
    2. 'L' → logprob: -3.7735443115234375
    3. ' L' → logprob: -9.023544311523438
    4. '       ' → logprob: -9.523544311523438
    5. '<|end|>' → logprob: -10.148544311523438
    6. '```' → logprob: -11.523544311523438
    7. '	L' → logprob: -11.773544311523438
    8. '  ' → logprob: -11.773544311523438
    9. '
' → logprob: -12.148544311523438
    10. '    
' → logprob: -12.523544311523438

Token 94: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.00638091005384922
    2. '   ' → logprob: -5.131381034851074
    3. ' L' → logprob: -7.756381034851074
    4. ' ' → logprob: -12.256381034851074
    5. '```' → logprob: -12.506381034851074
    6. '	L' → logprob: -12.881381034851074
    7. '  ' → logprob: -13.131381034851074
    8. '<|end|>' → logprob: -13.631381034851074
    9. '       ' → logprob: -14.006381034851074
    10. '[' → logprob: -14.006381034851074

Token 95: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2818252444267273
    2. '.' → logprob: -1.406825304031372
    3. ' .' → logprob: -8.406825065612793
    4. '+=' → logprob: -8.656825065612793
    5. '.app' → logprob: -9.281825065612793
    6. ' +=' → logprob: -9.906825065612793
    7. '.=' → logprob: -10.156825065612793
    8. '+.' → logprob: -10.656825065612793
    9. '​.' → logprob: -11.156825065612793
    10. '.extend' → logprob: -11.781825065612793

Token 96: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002888682356569916
    2. ' [' → logprob: -8.375288963317871
    3. '   ' → logprob: -11.125288963317871
    4. '[(' → logprob: -11.500288963317871
    5. '[i' → logprob: -11.750288963317871
    6. '(inner' → logprob: -12.375288963317871
    7. '  ' → logprob: -12.750288963317871
    8. ' ' → logprob: -13.000288963317871
    9. '[left' → logprob: -13.125288963317871
    10. '[in' → logprob: -13.250288963317871

Token 97: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.0004952482995577157
    2. ' inner' → logprob: -7.625495433807373
    3. '(inner' → logprob: -12.500494956970215
    4. '   ' → logprob: -13.000494956970215
    5. 'inners' → logprob: -14.625494956970215
    6. 'tuple' → logprob: -15.000494956970215
    7. ' ' → logprob: -15.125494956970215
    8. '  ' → logprob: -16.25049591064453
    9. '(' → logprob: -16.75049591064453
    10. 'internal' → logprob: -17.37549591064453

Token 98: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41961145401000977
    2. ')' → logprob: -1.4196114540100098
    3. ')]' → logprob: -2.2946114540100098
    4. ' ]' → logprob: -10.544610977172852
    5. '])' → logprob: -11.044610977172852
    6. ']
' → logprob: -11.169610977172852
    7. ')
' → logprob: -12.044610977172852
    8. ' )' → logprob: -12.294610977172852
    9. '']' → logprob: -12.544610977172852
    10. '()]' → logprob: -12.544610977172852

Token 99: 'chk' (ID: 63607)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2155652791261673
    2. 'print' → logprob: -2.7155652046203613
    3. 'L' → logprob: -3.3405652046203613
    4. 'max' → logprob: -4.215565204620361
    5. 'result' → logprob: -4.340565204620361
    6. 'res' → logprob: -4.715565204620361
    7. 'def' → logprob: -5.090565204620361
    8. 'r' → logprob: -5.465565204620361
    9. 'answer' → logprob: -5.465565204620361
    10. 'sum' → logprob: -5.465565204620361

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43079131841659546
    2. ' =' → logprob: -1.0557913780212402
    3. '_' → logprob: -7.18079137802124
    4. 's' → logprob: -8.180790901184082
    5. '=[]' → logprob: -8.180790901184082
    6. ' ' → logprob: -8.555790901184082
    7. '[' → logprob: -9.305790901184082
    8. ',' → logprob: -9.305790901184082
    9. '(' → logprob: -9.805790901184082
    10. '=[' → logprob: -10.055790901184082

Token 101: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.21915213763713837
    2. '(lambda' → logprob: -2.4691522121429443
    3. '[]' → logprob: -3.4691522121429443
    4. 'rd' → logprob: -4.094151973724365
    5. ' lambda' → logprob: -4.094151973724365
    6. '[' → logprob: -4.344151973724365
    7. 'False' → logprob: -4.594151973724365
    8. 'True' → logprob: -5.094151973724365
    9. 'all' → logprob: -5.469151973724365
    10. 'len' → logprob: -6.094151973724365

Token 102: ' V' (ID: 631)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9037784934043884
    2. 'x' → logprob: -1.6537785530090332
    3. ' s' → logprob: -2.778778553009033
    4. ' lst' → logprob: -3.153778553009033
    5. ' L' → logprob: -3.278778553009033
    6. ' a' → logprob: -3.278778553009033
    7. ' l' → logprob: -3.528778553009033
    8. 'a' → logprob: -3.653778553009033
    9. 's' → logprob: -3.903778553009033
    10. 'L' → logprob: -3.903778553009033

Token 103: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5277174711227417
    2. ':' → logprob: -1.0277174711227417
    3. ' :' → logprob: -3.4027175903320312
    4. ',V' → logprob: -5.152717590332031
    5. ',v' → logprob: -5.902717590332031
    6. ' ,' → logprob: -6.152717590332031
    7. ',x' → logprob: -7.027717590332031
    8. 'V' → logprob: -7.277717590332031
    9. ',n' → logprob: -7.277717590332031
    10. ',:' → logprob: -7.652717590332031

Token 104: ' sum' (ID: 4215)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7545688152313232
    2. 'all' → logprob: -1.0045688152313232
    3. 'rd' → logprob: -2.5045688152313232
    4. 'len' → logprob: -4.004569053649902
    5. 'sum' → logprob: -4.379569053649902
    6. 'any' → logprob: -4.379569053649902
    7. ' V' → logprob: -4.879569053649902
    8. ' any' → logprob: -5.004569053649902
    9. ' sum' → logprob: -5.254569053649902
    10. ' len' → logprob: -5.379569053649902

Token 105: '(any' (ID: 68951)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.6452165842056274
    2. '(map' → logprob: -1.5202165842056274
    3. '((' → logprob: -2.270216464996338
    4. '(' → logprob: -2.395216464996338
    5. '([' → logprob: -3.145216464996338
    6. '(x' → logprob: -5.520216464996338
    7. '([(' → logprob: -5.520216464996338
    8. '(list' → logprob: -6.020216464996338
    9. '(add' → logprob: -6.145216464996338
    10. '(rd' → logprob: -7.020216464996338

Token 106: '(V' (ID: 16949)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2644305229187012
    2. '(x' → logprob: -1.5144305229187012
    3. '(v' → logprob: -1.6394305229187012
    4. '(y' → logprob: -2.264430522918701
    5. '(Y' → logprob: -3.264430522918701
    6. '(j' → logprob: -3.764430522918701
    7. '(i' → logprob: -3.889430522918701
    8. '(((' → logprob: -4.014430522918701
    9. '(V' → logprob: -4.014430522918701
    10. '(' → logprob: -4.139430522918701

Token 107: '[j' (ID: 7895)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7480683326721191
    2. '[i' → logprob: -1.2480683326721191
    3. '(i' → logprob: -2.623068332672119
    4. '(x' → logprob: -2.623068332672119
    5. '))' → logprob: -4.748068332672119
    6. '(k' → logprob: -4.873068332672119
    7. '[j' → logprob: -4.873068332672119
    8. ')==' → logprob: -4.873068332672119
    9. '[x' → logprob: -5.373068332672119
    10. '(v' → logprob: -5.373068332672119

Token 108: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.300544798374176
    2. ']' → logprob: -1.4255447387695312
    3. ']>=' → logprob: -4.550544738769531
    4. '[i' → logprob: -5.925544738769531
    5. ']==' → logprob: -7.050544738769531
    6. '>=' → logprob: -7.425544738769531
    7. 'i' → logprob: -7.550544738769531
    8. 'for' → logprob: -7.675544738769531
    9. '[k' → logprob: -8.050544738769531
    10. 'k' → logprob: -8.050544738769531

Token 109: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9338104128837585
    2. ' for' → logprob: -1.1838104724884033
    3. '[j' → logprob: -2.0588104724884033
    4. '>=' → logprob: -3.4338104724884033
    5. '[' → logprob: -3.5588104724884033
    6. ')' → logprob: -3.6838104724884033
    7. '==' → logprob: -3.6838104724884033
    8. '[i' → logprob: -4.058810234069824
    9. ' >=' → logprob: -4.683810234069824
    10. 'and' → logprob: -5.058810234069824

Token 110: ' V' (ID: 631)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2854419946670532
    2. 'k' → logprob: -1.9104419946670532
    3. 'V' → logprob: -2.0354418754577637
    4. 'L' → logprob: -2.2854418754577637
    5. '(i' → logprob: -2.7854418754577637
    6. 'j' → logprob: -3.1604418754577637
    7. ' i' → logprob: -3.4104418754577637
    8. '(L' → logprob: -3.5354418754577637
    9. ' (' → logprob: -3.6604418754577637
    10. ' V' → logprob: -3.7854418754577637

Token 111: '[x' (ID: 17295)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4171595871448517
    2. '[j' → logprob: -1.2921595573425293
    3. '[k' → logprob: -3.4171595573425293
    4. 'i' → logprob: -4.292159557342529
    5. 'j' → logprob: -5.292159557342529
    6. '[' → logprob: -5.542159557342529
    7. 'k' → logprob: -6.042159557342529
    8. ' [' → logprob: -6.917159557342529
    9. ' i' → logprob: -7.042159557342529
    10. '(i' → logprob: -7.042159557342529

Token 112: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024351824074983597
    2. 'and' → logprob: -5.274351596832275
    3. 'for' → logprob: -5.649351596832275
    4. '!=' → logprob: -6.024351596832275
    5. ']!=' → logprob: -6.149351596832275
    6. ' for' → logprob: -6.274351596832275
    7. '<x' → logprob: -6.649351596832275
    8. ' and' → logprob: -7.024351596832275
    9. ']==' → logprob: -7.024351596832275
    10. 'x' → logprob: -7.399351596832275

Token 113: 'y' (ID: 88)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.39754822850227356
    2. 'V' → logprob: -1.6475481986999512
    3. 'x' → logprob: -2.647548198699951
    4. '0' → logprob: -3.272548198699951
    5. 'False' → logprob: -5.147548198699951
    6. '1' → logprob: -5.272548198699951
    7. '-' → logprob: -5.522548198699951
    8. ' ' → logprob: -6.022548198699951
    9. 'y' → logprob: -6.397548198699951
    10. '   ' → logprob: -6.397548198699951

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3591417074203491
    2. 'for' → logprob: -1.2341417074203491
    3. '[j' → logprob: -5.359141826629639
    4. '[x' → logprob: -6.359141826629639
    5. ' ' → logprob: -6.609141826629639
    6. ')' → logprob: -6.859141826629639
    7. '   ' → logprob: -7.984141826629639
    8. ' and' → logprob: -7.984141826629639
    9. 'and' → logprob: -8.23414134979248
    10. '[' → logprob: -9.10914134979248

Token 115: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06089473515748978
    2. 'range' → logprob: -3.310894727706909
    3. ' x' → logprob: -4.685894966125488
    4. 'j' → logprob: -4.810894966125488
    5. ' range' → logprob: -5.310894966125488
    6. ' j' → logprob: -8.685894966125488
    7. 'y' → logprob: -10.435894966125488
    8. '(' → logprob: -10.685894966125488
    9. 'i' → logprob: -11.185894966125488
    10. '(x' → logprob: -11.560894966125488

Token 116: ',y' (ID: 16103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.294127881526947
    2. 'in' → logprob: -1.4191279411315918
    3. 'range' → logprob: -5.169127941131592
    4. ',' → logprob: -5.794127941131592
    5. ' range' → logprob: -6.044127941131592
    6. ' ' → logprob: -7.169127941131592
    7. '  ' → logprob: -8.294127464294434
    8. 'j' → logprob: -8.294127464294434
    9. ',j' → logprob: -9.044127464294434
    10. '   ' → logprob: -9.419127464294434

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2815222144126892
    2. 'in' → logprob: -1.406522274017334
    3. ')' → logprob: -8.656521797180176
    4. 'range' → logprob: -9.906521797180176
    5. ' ' → logprob: -10.031521797180176
    6. ',j' → logprob: -10.531521797180176
    7. 'j' → logprob: -10.906521797180176
    8. ',' → logprob: -11.156521797180176
    9. ' range' → logprob: -11.281521797180176
    10. ' j' → logprob: -11.781521797180176

Token 118: ' L' (ID: 451)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.7429451942443848
    2. 'enumer' → logprob: -0.7429451942443848
    3. 'range' → logprob: -3.7429451942443848
    4. ' range' → logprob: -4.992945194244385
    5. 'L' → logprob: -5.242945194244385
    6. '[(' → logprob: -5.492945194244385
    7. ' zip' → logprob: -5.617945194244385
    8. 'zip' → logprob: -5.867945194244385
    9. ' L' → logprob: -7.117945194244385
    10. '[' → logprob: -8.492944717407227

Token 119: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.022652236744761467
    2. 'j' → logprob: -4.6476521492004395
    3. '[i' → logprob: -5.0226521492004395
    4. ')' → logprob: -5.5226521492004395
    5. '])' → logprob: -8.022652626037598
    6. '[' → logprob: -8.272652626037598
    7. '   ' → logprob: -8.522652626037598
    8. 'i' → logprob: -9.022652626037598
    9. ' ' → logprob: -9.022652626037598
    10. '[x' → logprob: -9.022652626037598

Token 120: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0032345133367925882
    2. ')' → logprob: -6.503234386444092
    3. 'if' → logprob: -7.878234386444092
    4. ']' → logprob: -7.878234386444092
    5. ' ])' → logprob: -8.37823486328125
    6. ' ' → logprob: -8.87823486328125
    7. '))' → logprob: -9.00323486328125
    8. ' if' → logprob: -9.62823486328125
    9. ':' → logprob: -9.75323486328125
    10. ']))' → logprob: -9.87823486328125

Token 121: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4779999852180481
    2. ' for' → logprob: -0.9779999852180481
    3. ')' → logprob: -5.853000164031982
    4. ',' → logprob: -7.728000164031982
    5. '   ' → logprob: -8.477999687194824
    6. ' in' → logprob: -9.477999687194824
    7. 'if' → logprob: -9.477999687194824
    8. 'in' → logprob: -9.977999687194824
    9. ' if' → logprob: -10.102999687194824
    10. 'range' → logprob: -10.477999687194824

Token 122: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6630949378013611
    2. 'range' → logprob: -1.0380949974060059
    3. 'j' → logprob: -2.163094997406006
    4. ' j' → logprob: -4.163094997406006
    5. ' xrange' → logprob: -9.663094520568848
    6. ' ' → logprob: -11.163094520568848
    7. 'enumer' → logprob: -13.038094520568848
    8. 'x' → logprob: -13.663094520568848
    9. '   ' → logprob: -13.788094520568848
    10. '(range' → logprob: -13.788094520568848

Token 123: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9575821161270142
    2. ' in' → logprob: -1.2075821161270142
    3. ' range' → logprob: -1.3325821161270142
    4. 'in' → logprob: -2.9575819969177246
    5. ')' → logprob: -6.707581996917725
    6. ',' → logprob: -9.332582473754883
    7. '(range' → logprob: -9.582582473754883
    8. ' xrange' → logprob: -9.707582473754883
    9. ' ' → logprob: -10.332582473754883
    10. '<|end|>' → logprob: -11.207582473754883

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012513183988630772
    2. ' range' → logprob: -4.387513160705566
    3. 'L' → logprob: -14.137513160705566
    4. '(range' → logprob: -14.137513160705566
    5. ')' → logprob: -14.262513160705566
    6. 'len' → logprob: -15.262513160705566
    7. '[' → logprob: -15.262513160705566
    8. ' ' → logprob: -15.637513160705566
    9. ' xrange' → logprob: -15.637513160705566
    10. '	range' → logprob: -15.762513160705566

Token 125: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.030284708365797997
    2. 'len' → logprob: -3.5302846431732178
    3. '(get' → logprob: -8.405284881591797
    4. '(' → logprob: -8.655284881591797
    5. ' len' → logprob: -9.405284881591797
    6. 'get' → logprob: -11.030284881591797
    7. ' (' → logprob: -11.280284881591797
    8. '   ' → logprob: -12.030284881591797
    9. '(__' → logprob: -12.280284881591797
    10. '(n' → logprob: -12.655284881591797

Token 126: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.39957401156425476
    2. '(V' → logprob: -1.1495740413665771
    3. 'L' → logprob: -4.524573802947998
    4. 'V' → logprob: -6.649573802947998
    5. '(' → logprob: -8.149574279785156
    6. ' (' → logprob: -9.774574279785156
    7. ' L' → logprob: -9.899574279785156
    8. ')' → logprob: -10.274574279785156
    9. ' V' → logprob: -11.899574279785156
    10. '(ch' → logprob: -12.274574279785156

Token 127: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05549157038331032
    2. ')))' → logprob: -2.9304916858673096
    3. ')' → logprob: -8.43049144744873
    4. ' ))' → logprob: -8.93049144744873
    5. '))
' → logprob: -9.93049144744873
    6. '))+' → logprob: -9.93049144744873
    7. '+' → logprob: -10.30549144744873
    8. '))))' → logprob: -10.30549144744873
    9. ')):' → logprob: -11.43049144744873
    10. ')))
' → logprob: -11.68049144744873

Token 128: 'from' (ID: 2845)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6211392879486084
    2. 'V' → logprob: -1.4961392879486084
    3. 'for' → logprob: -2.1211392879486084
    4. 'ans' → logprob: -3.4961392879486084
    5. 'res' → logprob: -3.9961392879486084
    6. 'if' → logprob: -4.9961395263671875
    7. ' for' → logprob: -5.3711395263671875
    8. '_' → logprob: -5.6211395263671875
    9. 'v' → logprob: -5.6211395263671875
    10. 'r' → logprob: -5.6211395263671875

Token 129: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.2423559427261353
    2. ' itertools' → logprob: -1.6173559427261353
    3. 'math' → logprob: -1.9923559427261353
    4. ' collections' → logprob: -2.2423558235168457
    5. ' math' → logprob: -2.6173558235168457
    6. 'operator' → logprob: -2.7423558235168457
    7. ' operator' → logprob: -3.1173558235168457
    8. ' functools' → logprob: -3.6173558235168457
    9. 'heap' → logprob: -3.8673558235168457
    10. 'sys' → logprob: -4.742355823516846

Token 130: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0700603649020195
    2. 'import' → logprob: -2.6950602531433105
    3. '	import' → logprob: -9.945060729980469
    4. 'ertools' → logprob: -10.820060729980469
    5. ' itertools' → logprob: -10.945060729980469
    6. '<|end|>' → logprob: -11.445060729980469
    7. '.com' → logprob: -11.695060729980469
    8. '_import' → logprob: -12.570060729980469
    9. ' imports' → logprob: -12.695060729980469
    10. 'com' → logprob: -12.945060729980469

Token 131: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.6803293228149414
    2. 'product' → logprob: -0.8053293228149414
    3. 'com' → logprob: -3.4303293228149414
    4. ' combinations' → logprob: -4.430329322814941
    5. ' permutations' → logprob: -6.555329322814941
    6. 'compress' → logprob: -8.305329322814941
    7. ' chain' → logprob: -8.430329322814941
    8. 'chain' → logprob: -9.055329322814941
    9. 'acc' → logprob: -9.305329322814941
    10. ' accumulate' → logprob: -9.305329322814941

Token 132: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20397520065307617
    2. '(' → logprob: -2.953975200653076
    3. 'V' → logprob: -3.828975200653076
    4. ' for' → logprob: -4.453975200653076
    5. '(
' → logprob: -4.578975200653076
    6. 'res' → logprob: -4.828975200653076
    7. 'result' → logprob: -5.328975200653076
    8. 'range' → logprob: -5.328975200653076
    9. '(V' → logprob: -5.578975200653076
    10. '(range' → logprob: -5.578975200653076

Token 133: ' prod' (ID: 10207)
  Prédit: 'prd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prd' → logprob: -0.08778493851423264
    2. 'pr' → logprob: -3.212785005569458
    3. 'prod' → logprob: -3.337785005569458
    4. 'prt' → logprob: -5.462784767150879
    5. 'product' → logprob: -6.087784767150879
    6. ' pr' → logprob: -6.837784767150879
    7. 'pro' → logprob: -8.087784767150879
    8. 'p' → logprob: -8.837784767150879
    9. 'pd' → logprob: -9.212784767150879
    10. ' prod' → logprob: -9.712784767150879

Token 134: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5500954389572144
    2. '<|end|>' → logprob: -1.6750954389572144
    3. '(range' → logprob: -2.175095558166504
    4. '(
' → logprob: -3.425095558166504
    5. '
' → logprob: -3.800095558166504
    6. '(V' → logprob: -4.300095558166504
    7. 'for' → logprob: -4.425095558166504
    8. 'range' → logprob: -4.675095558166504
    9. ' (' → logprob: -5.925095558166504
    10. ' for' → logprob: -6.175095558166504

Token 135: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6534526348114014
    2. 'for' → logprob: -1.6534526348114014
    3. 'range' → logprob: -2.1534526348114014
    4. 'V' → logprob: -3.0284526348114014
    5. '(range' → logprob: -3.4034526348114014
    6. '(V' → logprob: -3.7784526348114014
    7. '(
' → logprob: -4.5284528732299805
    8. '(*' → logprob: -4.9034528732299805
    9. 'def' → logprob: -5.1534528732299805
    10. '*' → logprob: -5.6534528732299805

Token 136: ' poss' (ID: 2456)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.10123429447412491
    2. 'V' → logprob: -3.476234197616577
    3. ' bits' → logprob: -4.726234436035156
    4. ' v' → logprob: -4.851234436035156
    5. ' p' → logprob: -5.351234436035156
    6. ' vals' → logprob: -5.476234436035156
    7. ' b' → logprob: -5.601234436035156
    8. ' ans' → logprob: -5.788734436035156
    9. ' mask' → logprob: -5.913734436035156
    10. ' n' → logprob: -6.538734436035156

Token 137: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.46482130885124207
    2. ' in' → logprob: -1.0898213386535645
    3. 'ibilities' → logprob: -3.4648213386535645
    4. 'ibility' → logprob: -5.9648213386535645
    5. 'ible' → logprob: -7.3398213386535645
    6. 'ibl' → logprob: -8.089820861816406
    7. 'ib' → logprob: -8.464820861816406
    8. 's' → logprob: -8.839820861816406
    9. 'ibil' → logprob: -9.214820861816406
    10. ',' → logprob: -10.339820861816406

Token 138: ' (' (ID: 350)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.029780574142932892
    2. ' prod' → logprob: -3.529780626296997
    3. 'rd' → logprob: -11.404780387878418
    4. 'product' → logprob: -12.404780387878418
    5. 'pro' → logprob: -12.529780387878418
    6. '(prod' → logprob: -12.529780387878418
    7. ' ' → logprob: -13.404780387878418
    8. '   ' → logprob: -13.654780387878418
    9. '.prod' → logprob: -13.654780387878418
    10. 'list' → logprob: -13.904780387878418

Token 139: 'list' (ID: 2641)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0022072356659919024
    2. ' prod' → logprob: -6.127207279205322
    3. 'rd' → logprob: -11.627206802368164
    4. ')' → logprob: -12.627206802368164
    5. '
' → logprob: -13.252206802368164
    6. 'prd' → logprob: -13.377206802368164
    7. '   ' → logprob: -13.752206802368164
    8. '(prod' → logprob: -13.877206802368164
    9. 'product' → logprob: -14.002206802368164
    10. '.prod' → logprob: -14.002206802368164

Token 140: '(x' (ID: 4061)
  Prédit: '(prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prod' → logprob: -0.15075591206550598
    2. 'prod' → logprob: -2.0257558822631836
    3. ')(' → logprob: -5.025755882263184
    4. ')' → logprob: -7.275755882263184
    5. '(' → logprob: -8.150755882263184
    6. ' prod' → logprob: -8.275755882263184
    7. '(pro' → logprob: -10.150755882263184
    8. '=' → logprob: -10.400755882263184
    9. ' (' → logprob: -10.400755882263184
    10. '
' → logprob: -10.525755882263184

Token 141: ')' (ID: 8)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.3021205961704254
    2. 'rd' → logprob: -2.5521206855773926
    3. '(prod' → logprob: -2.6771206855773926
    4. ' for' → logprob: -2.9271206855773926
    5. 'for' → logprob: -3.6771206855773926
    6. '=' → logprob: -4.677120685577393
    7. 'ro' → logprob: -5.302120685577393
    8. ' in' → logprob: -5.552120685577393
    9. ')' → logprob: -5.677120685577393
    10. 'product' → logprob: -5.802120685577393

Token 142: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8795701861381531
    2. 'in' → logprob: -1.3795702457427979
    3. 'prod' → logprob: -2.004570245742798
    4. '(prod' → logprob: -2.004570245742798
    5. 'for' → logprob: -3.254570245742798
    6. ' for' → logprob: -3.879570245742798
    7. '=' → logprob: -6.379570007324219
    8. ')' → logprob: -6.629570007324219
    9. ' prod' → logprob: -7.504570007324219
    10. '(pro' → logprob: -8.004570007324219

Token 143: ' x' (ID: 1215)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.5760219097137451
    2. ' prod' → logprob: -0.8260219097137451
    3. '(prod' → logprob: -10.076022148132324
    4. '.prod' → logprob: -11.701022148132324
    5. ' ' → logprob: -11.826022148132324
    6. '_prod' → logprob: -12.326022148132324
    7. 'rd' → logprob: -12.451022148132324
    8. ')' → logprob: -12.826022148132324
    9. '
' → logprob: -13.076022148132324
    10. 'pro' → logprob: -13.201022148132324

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28123098611831665
    2. 'in' → logprob: -1.4062309265136719
    3. 'prod' → logprob: -10.781230926513672
    4. '
' → logprob: -11.156230926513672
    5. '=' → logprob: -11.781230926513672
    6. ' ' → logprob: -12.156230926513672
    7. 's' → logprob: -12.406230926513672
    8. '

' → logprob: -12.406230926513672
    9. 'n' → logprob: -12.781230926513672
    10. 'import' → logprob: -13.281230926513672

Token 145: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.008839933201670647
    2. ' prod' → logprob: -4.758840084075928
    3. 'rd' → logprob: -8.63383960723877
    4. 'product' → logprob: -11.00883960723877
    5. '(prod' → logprob: -11.75883960723877
    6. 'pro' → logprob: -12.13383960723877
    7. 'prd' → logprob: -12.13383960723877
    8. '.prod' → logprob: -12.88383960723877
    9. '
' → logprob: -13.25883960723877
    10. ' ' → logprob: -13.38383960723877

Token 146: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2963584065437317
    2. '(range' → logprob: -1.796358346939087
    3. '((' → logprob: -2.421358346939087
    4. '(' → logprob: -6.796358585357666
    5. '(*' → logprob: -8.046358108520508
    6. '('' → logprob: -8.671358108520508
    7. 'range' → logprob: -10.296358108520508
    8. '(([' → logprob: -10.296358108520508
    9. '(['' → logprob: -10.796358108520508
    10. '[' → logprob: -11.046358108520508

Token 147: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013785229064524174
    2. 'True' → logprob: -5.013785362243652
    3. 'False' → logprob: -5.013785362243652
    4. '1' → logprob: -8.888785362243652
    5. '[' → logprob: -9.013785362243652
    6. '(' → logprob: -9.888785362243652
    7. ' ' → logprob: -10.763785362243652
    8. '-' → logprob: -11.138785362243652
    9. 'range' → logprob: -11.263785362243652
    10. '   ' → logprob: -11.888785362243652

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003571535926312208
    2. ' ,' → logprob: -8.125357627868652
    3. '0' → logprob: -10.000357627868652
    4. ',-' → logprob: -12.625357627868652
    5. '(' → logprob: -13.250357627868652
    6. '2' → logprob: -13.500357627868652
    7. ' ' → logprob: -13.625357627868652
    8. '   ' → logprob: -13.875357627868652
    9. ',
' → logprob: -14.125357627868652
    10. '

' → logprob: -14.250357627868652

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017087960615754128
    2. '2' → logprob: -4.267087936401367
    3. ' ' → logprob: -6.017087936401367
    4. '-' → logprob: -7.767087936401367
    5. 'True' → logprob: -11.142087936401367
    6. '1' → logprob: -11.267087936401367
    7. ' -' → logprob: -11.642087936401367
    8. 'False' → logprob: -11.892087936401367
    9. '  ' → logprob: -12.954587936401367
    10. '4' → logprob: -13.017087936401367

Token 150: '],[' (ID: 32964)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00024763107649050653
    2. ' ],' → logprob: -9.125247955322266
    3. ']' → logprob: -9.625247955322266
    4. ',' → logprob: -10.500247955322266
    5. '],[' → logprob: -11.375247955322266
    6. '),' → logprob: -12.125247955322266
    7. ''],' → logprob: -12.250247955322266
    8. '},' → logprob: -12.625247955322266
    9. '],
' → logprob: -12.750247955322266
    10. ']*' → logprob: -13.500247955322266

Token 151: 'None' (ID: 8505)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6466565728187561
    2. '0' → logprob: -1.7716565132141113
    3. '1' → logprob: -1.7716565132141113
    4. 'len' → logprob: -2.3966565132141113
    5. ']' → logprob: -3.3966565132141113
    6. 'True' → logprob: -5.521656513214111
    7. ' ' → logprob: -6.271656513214111
    8. ']*(' → logprob: -6.896656513214111
    9. '...' → logprob: -7.396656513214111
    10. ' len' → logprob: -7.396656513214111

Token 152: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7172831892967224
    2. '],' → logprob: -1.3422832489013672
    3. ',None' → logprob: -2.217283248901367
    4. ']))' → logprob: -2.342283248901367
    5. '])' → logprob: -3.467283248901367
    6. ']' → logprob: -5.717283248901367
    7. 'None' → logprob: -5.967283248901367
    8. '])))' → logprob: -6.092283248901367
    9. '],[' → logprob: -6.592283248901367
    10. ' ,' → logprob: -7.592283248901367

Token 153: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.26365113258361816
    2. '(len' → logprob: -1.5136511325836182
    3. ' len' → logprob: -4.763650894165039
    4. '(' → logprob: -7.138650894165039
    5. ' (' → logprob: -7.513650894165039
    6. '1' → logprob: -7.638650894165039
    7. '2' → logprob: -8.263650894165039
    8. 'sum' → logprob: -8.638650894165039
    9. '0' → logprob: -9.013650894165039
    10. '3' → logprob: -9.263650894165039

Token 154: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.023676447570323944
    2. 'L' → logprob: -3.7736763954162598
    3. '(pos' → logprob: -8.398676872253418
    4. '[L' → logprob: -9.773676872253418
    5. '(' → logprob: -10.273676872253418
    6. ' L' → logprob: -10.523676872253418
    7. '([' → logprob: -10.773676872253418
    8. 'pos' → logprob: -11.398676872253418
    9. 'poss' → logprob: -11.648676872253418
    10. ')' → logprob: -11.898676872253418

Token 155: '))' (ID: 915)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.6604495644569397
    2. '))' → logprob: -0.7854495644569397
    3. ')):' → logprob: -4.035449504852295
    4. ')' → logprob: -5.160449504852295
    5. '))))' → logprob: -6.035449504852295
    6. '),' → logprob: -7.660449504852295
    7. ')):
' → logprob: -8.160449981689453
    8. '[' → logprob: -8.410449981689453
    9. ',' → logprob: -8.535449981689453
    10. ')));' → logprob: -9.285449981689453

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5251290202140808
    2. ')):' → logprob: -1.5251290798187256
    3. '))' → logprob: -2.5251290798187256
    4. ',' → logprob: -3.1501290798187256
    5. ')' → logprob: -3.1501290798187256
    6. '[' → logprob: -4.2751288414001465
    7. ')))' → logprob: -6.1501288414001465
    8. ' if' → logprob: -6.5251288414001465
    9. '):
' → logprob: -6.5251288414001465
    10. ')):
' → logprob: -6.6501288414001465

Token 157: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6744353175163269
    2. '):' → logprob: -2.1744353771209717
    3. '[pos' → logprob: -2.1744353771209717
    4. '[' → logprob: -2.2994353771209717
    5. ')' → logprob: -3.2994353771209717
    6. ' if' → logprob: -3.2994353771209717
    7. '<|end|>' → logprob: -3.9244353771209717
    8. '   ' → logprob: -4.174435138702393
    9. '(pos' → logprob: -4.424435138702393
    10. ' ' → logprob: -5.049435138702393

Token 158: ' if' (ID: 538)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Index' → logprob: -1.1072791814804077
    2. '   ' → logprob: -1.8572791814804077
    3. 'Trace' → logprob: -2.6072793006896973
    4. 'Type' → logprob: -2.7322793006896973
    5. ')' → logprob: -2.8572793006896973
    6. ' Type' → logprob: -3.2322793006896973
    7. ' Index' → logprob: -3.3572793006896973
    8. 'Syntax' → logprob: -3.6072793006896973
    9. ' ' → logprob: -3.8572793006896973
    10. '    ' → logprob: -3.8572793006896973

Token 159: ' not' (ID: 625)
  Prédit: ' chk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chk' → logprob: -0.7882519364356995
    2. 'chk' → logprob: -1.1632518768310547
    3. ' not' → logprob: -1.6632518768310547
    4. ' all' → logprob: -3.9132518768310547
    5. 'not' → logprob: -4.663251876831055
    6. ' sum' → logprob: -5.163251876831055
    7. 'all' → logprob: -6.038251876831055
    8. ' len' → logprob: -6.538251876831055
    9. 'sum' → logprob: -6.913251876831055
    10. ' ' → logprob: -7.163251876831055

Token 160: ' chk' (ID: 63648)
  Prédit: 'chk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chk' → logprob: -0.16323794424533844
    2. ' chk' → logprob: -1.9132379293441772
    3. ' any' → logprob: -6.538238048553467
    4. 'any' → logprob: -8.038237571716309
    5. ' sum' → logprob: -8.288237571716309
    6. 'poss' → logprob: -8.788237571716309
    7. ' all' → logprob: -8.913237571716309
    8. 'sum' → logprob: -9.038237571716309
    9. ' ' → logprob: -9.788237571716309
    10. 'all' → logprob: -9.913237571716309

Token 161: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.00011594036914175376
    2. '(' → logprob: -9.125116348266602
    3. '((' → logprob: -12.875116348266602
    4. '[pos' → logprob: -14.125116348266602
    5. ')' → logprob: -14.250116348266602
    6. '(pass' → logprob: -14.500116348266602
    7. '```' → logprob: -15.000116348266602
    8. '(
' → logprob: -15.250116348266602
    9. 'poss' → logprob: -15.250116348266602
    10. '(`' → logprob: -15.375116348266602

Token 162: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0445127372804563e-05
    2. 'poss' → logprob: -12.50001049041748
    3. '[pos' → logprob: -12.62501049041748
    4. '[' → logprob: -13.50001049041748
    5. 'sible' → logprob: -14.25001049041748
    6. ')' → logprob: -15.25001049041748
    7. '[s' → logprob: -15.50001049041748
    8. ')]' → logprob: -15.75001049041748
    9. ''s' → logprob: -16.375009536743164
    10. 'ss' → logprob: -16.375009536743164

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00873157661408186
    2. '):
' → logprob: -4.758731365203857
    3. '[' → logprob: -9.633731842041016
    4. ':' → logprob: -10.758731842041016
    5. ')' → logprob: -11.633731842041016
    6. '[]):' → logprob: -11.633731842041016
    7. '):
' → logprob: -12.508731842041016
    8. '   ' → logprob: -13.133731842041016
    9. '):

' → logprob: -13.383731842041016
    10. ' ):' → logprob: -13.883731842041016

Token 164: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5239253640174866
    2. '       ' → logprob: -1.0239253044128418
    3. ':
' → logprob: -3.398925304412842
    4. '[' → logprob: -5.148925304412842
    5. '   ' → logprob: -6.148925304412842
    6. '):' → logprob: -6.273925304412842
    7. ' :' → logprob: -6.523925304412842
    8. '    ' → logprob: -7.398925304412842
    9. '):
' → logprob: -7.773925304412842
    10. '():' → logprob: -8.02392578125

Token 165: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0613564252853394
    2. ' break' → logprob: -1.1863564252853394
    3. ' print' → logprob: -1.5613564252853394
    4. 'break' → logprob: -2.561356544494629
    5. '   ' → logprob: -3.061356544494629
    6. '       ' → logprob: -4.436356544494629
    7. ' for' → logprob: -6.686356544494629
    8. '    ' → logprob: -7.186356544494629
    9. 'for' → logprob: -8.436356544494629
    10. ' pass' → logprob: -8.686356544494629

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28859642148017883
    2. '_' → logprob: -1.7885963916778564
    3. '=' → logprob: -3.6635963916778564
    4. ' _' → logprob: -4.6635966300964355
    5. '_pos' → logprob: -5.0385966300964355
    6. '   ' → logprob: -5.2885966300964355
    7. ' ' → logprob: -5.4135966300964355
    8. ')' → logprob: -5.5385966300964355
    9. 's' → logprob: -5.9135966300964355
    10. '_result' → logprob: -5.9135966300964355

Token 167: ' r' (ID: 428)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.1080653965473175
    2. ' poss' → logprob: -2.358065366744995
    3. 'pos' → logprob: -5.358065605163574
    4. '[pos' → logprob: -6.108065605163574
    5. '[' → logprob: -8.108065605163574
    6. 'list' → logprob: -8.733065605163574
    7. '   ' → logprob: -9.108065605163574
    8. ' list' → logprob: -9.608065605163574
    9. ' [' → logprob: -9.983065605163574
    10. '[x' → logprob: -10.420565605163574

Token 168: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0006046222406439483
    2. 'duce' → logprob: -8.000604629516602
    3. 'ed' → logprob: -9.375604629516602
    4. 'dx' → logprob: -10.125604629516602
    5. 'duc' → logprob: -10.750604629516602
    6. 'd' → logprob: -10.750604629516602
    7. 'du' → logprob: -11.000604629516602
    8. 'final' → logprob: -11.250604629516602
    9. '[' → logprob: -11.500604629516602
    10. 'educ' → logprob: -11.625604629516602

Token 169: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.08491930365562439
    2. 'add' → logprob: -2.5849192142486572
    3. ' add' → logprob: -5.209919452667236
    4. '(' → logprob: -7.834919452667236
    5. ')add' → logprob: -9.709918975830078
    6. ' (' → logprob: -10.209918975830078
    7. '(lambda' → logprob: -10.584918975830078
    8. '	add' → logprob: -11.834918975830078
    9. '(
' → logprob: -11.959918975830078
    10. '(ad' → logprob: -12.334918975830078

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09779465943574905
    2. ',pos' → logprob: -2.472794771194458
    3. '(pos' → logprob: -5.097794532775879
    4. ' ,' → logprob: -6.972794532775879
    5. ')(' → logprob: -7.097794532775879
    6. '   ' → logprob: -7.972794532775879
    7. ',p' → logprob: -9.222794532775879
    8. ',(' → logprob: -9.222794532775879
    9. '[pos' → logprob: -9.222794532775879
    10. ',[' → logprob: -9.722794532775879

Token 171: ' poss' (ID: 2456)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.3564054071903229
    2. ' poss' → logprob: -1.7314053773880005
    3. '[pos' → logprob: -2.23140549659729
    4. 'pos' → logprob: -4.856405258178711
    5. '[' → logprob: -5.731405258178711
    6. '[[' → logprob: -6.981405258178711
    7. '   ' → logprob: -7.106405258178711
    8. ' [' → logprob: -7.356405258178711
    9. '(pos' → logprob: -7.731405258178711
    10. '[p' → logprob: -8.356405258178711

Token 172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002914238488301635
    2. ')
' → logprob: -5.8779144287109375
    3. ' )' → logprob: -9.502914428710938
    4. '[' → logprob: -11.127914428710938
    5. '   ' → logprob: -12.377914428710938
    6. '))' → logprob: -12.877914428710938
    7. ')#' → logprob: -13.127914428710938
    8. ')return' → logprob: -13.252914428710938
    9. ')+' → logprob: -13.627914428710938
    10. ')))' → logprob: -13.627914428710938

Token 173: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43596434593200684
    2. '[' → logprob: -1.3109643459320068
    3. '(' → logprob: -3.685964345932007
    4. '<|end|>' → logprob: -4.185964584350586
    5. '(
' → logprob: -4.935964584350586
    6. ' ' → logprob: -5.060964584350586
    7. '
' → logprob: -5.185964584350586
    8. '[:]' → logprob: -5.310964584350586
    9. 's' → logprob: -5.560964584350586
    10. ')
' → logprob: -5.935964584350586

Token 174: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0176893472671509
    2. 'break' (adapté à ' break') → logprob: -1.8926893472671509
    3. 'print' → logprob: -2.1426892280578613
    4. ' break' → logprob: -2.1426892280578613
    5. '
' → logprob: -3.0176892280578613
    6. '   ' → logprob: -3.1426892280578613
    7. '.' → logprob: -3.3926892280578613
    8. ' ' → logprob: -4.017689228057861
    9. ' 
' → logprob: -4.017689228057861
    10. '[' → logprob: -4.392689228057861

Token 175: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7844641804695129
    2. '[' → logprob: -1.0344641208648682
    3. ')' → logprob: -2.284464120864868
    4. '(
' → logprob: -3.409464120864868
    5. ' ' → logprob: -4.159464359283447
    6. ',' → logprob: -5.159464359283447
    7. ' )' → logprob: -5.534464359283447
    8. '.' → logprob: -6.159464359283447
    9. ' (' → logprob: -6.409464359283447
    10. '([' → logprob: -6.409464359283447

Token 176: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1141767501831055
    2. ')' → logprob: -1.4891767501831055
    3. '(' → logprob: -1.6141767501831055
    4. ' ' → logprob: -2.2391767501831055
    5. ' )' → logprob: -2.4891767501831055
    6. '.' → logprob: -4.1141767501831055
    7. ' (' → logprob: -4.2391767501831055
    8. '(
' → logprob: -4.9891767501831055
    9. ',' → logprob: -5.6141767501831055
    10. '   ' → logprob: -5.9891767501831055

Token 177: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.0012921433662995696
    2. '(' → logprob: -6.7512922286987305
    3. 'final' → logprob: -9.25129222869873
    4. '()' → logprob: -11.00129222869873
    5. '('' → logprob: -12.25129222869873
    6. '(len' → logprob: -13.75129222869873
    7. '(*' → logprob: -13.87629222869873
    8. '(sum' → logprob: -14.25129222869873
    9. '(`' → logprob: -15.00129222869873
    10. '((' → logprob: -15.25129222869873

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016086915275081992
    2. ' )' → logprob: -9.625161170959473
    3. '))' → logprob: -9.750161170959473
    4. '[' → logprob: -10.750161170959473
    5. ')
' → logprob: -12.000161170959473
    6. '+' → logprob: -12.750161170959473
    7. ')`' → logprob: -13.500161170959473
    8. ')))' → logprob: -14.125161170959473
    9. '`)' → logprob: -15.000161170959473
    10. ']' → logprob: -15.125161170959473


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 176
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 32.95%
Précision adaptée (1ère position): 34.09%
Précision (top 10): 70.45%
================================================================================
