================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def get_input():
    return sys.stdin.readline

def parse_first_line(input_func):
    return map(int, input_func().split())

def parse_d_list(input_func):
    return list(map(int, input_func().split()))

def run_query_line(input_func):
    return map(int, input_func().split())

def mod_list(D, m, K):
    return [D[i] % m for i in range(K)]

def compute_smda_mda0(md, K, limit):
    smda = 0
    mda0 = 0
    for i in range(limit):
        if md[i] == 0:
            mda0 += 1
        smda += md[i]
    return smda, mda0

def compute_smd_md0(md, K, start):
    smd = 0
    md0 = 0
    for i in range(start, K):
        if md[i] == 0:
            md0 += 1
        smd += md[i]
    return smd, md0

def sum_md(md):
    return sum(md)

def compute_roop(n, K):
    return (n - 1) // K

def compute_modulo(val, m):
    return val % m

def calc_result(n, x, m, sum_md_val, roop, smda, md0, mda0):
    numerator = x % m + sum_md_val * roop + smda
    term1 = (numerator) // m
    term2 = md0 * roop
    term3 = mda0
    return n - 1 - term1 - term2 - term3

def process_single_query(D, K, n, x, m):
    md = mod_list(D, m, K)
    limit = (n - 1) % K
    smda, mda0 = compute_smda_mda0(md, K, limit)
    smd, md0 = compute_smd_md0(md, K, limit)
    sum_md_val = sum_md(md)
    roop = compute_roop(n, K)
    result = calc_result(n, x, m, sum_md_val, roop, smda, md0, mda0)
    return result

def process_queries(Q, D, K, input_func):
    for _ in range(Q):
        n, x, m = run_query_line(input_func)
        result = process_single_query(D, K, n, x, m)
        print(result)

def main():
    input_func = get_input()
    K, Q = parse_first_line(input_func)
    D = parse_d_list(input_func)
    process_queries(Q, D, K, input_func)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0482071116566658
    2. '_name' → logprob: -4.0482072830200195
    3. ' _' → logprob: -4.2982072830200195
    4. '_user' → logprob: -5.6732072830200195
    5. '(' → logprob: -6.2982072830200195
    6. '_line' → logprob: -6.5482072830200195
    7. '_filename' → logprob: -7.2982072830200195
    8. '_input' → logprob: -7.4232072830200195
    9. '```' → logprob: -7.5482072830200195
    10. '_char' → logprob: -7.5482072830200195

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011491031385958195
    2. '_' → logprob: -4.511490821838379
    3. ' (' → logprob: -9.386490821838379
    4. '():' → logprob: -9.386490821838379
    5. '(_' → logprob: -9.511490821838379
    6. '("("' → logprob: -10.511490821838379
    7. 's' → logprob: -10.761490821838379
    8. '_parent' → logprob: -10.886490821838379
    9. '_(' → logprob: -11.011490821838379
    10. '(
' → logprob: -11.761490821838379

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7482948303222656
    2. '   ' → logprob: -0.8732948303222656
    3. ' return' → logprob: -3.6232948303222656
    4. ' ' → logprob: -4.248294830322266
    5. '()' → logprob: -4.373294830322266
    6. '```' → logprob: -4.623294830322266
    7. ''' → logprob: -4.873294830322266
    8. 'return' → logprob: -4.998294830322266
    9. '(return' → logprob: -5.248294830322266
    10. '    ' → logprob: -5.248294830322266

Token 8: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5489835143089294
    2. '   ' → logprob: -1.4239835739135742
    3. ' return' → logprob: -1.9239835739135742
    4. 'input' → logprob: -4.173983573913574
    5. ' ' → logprob: -4.423983573913574
    6. 'user' → logprob: -5.923983573913574
    7. ' input' → logprob: -6.173983573913574
    8. 'r' → logprob: -7.298983573913574
    9. '    ' → logprob: -7.423983573913574
    10. 'x' → logprob: -7.673983573913574

Token 9: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17433007061481476
    2. ' sys' → logprob: -2.299329996109009
    3. 'input' → logprob: -3.299329996109009
    4. ' ' → logprob: -3.799329996109009
    5. 'sys' → logprob: -8.67432975769043
    6. '"' → logprob: -9.04932975769043
    7. ' ' → logprob: -10.67432975769043
    8. ' "' → logprob: -10.92432975769043
    9. ' int' → logprob: -11.79932975769043
    10. '  ' → logprob: -12.04932975769043

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5430126190185547
    2. '.stdin' → logprob: -0.9180126190185547
    3. '.argv' → logprob: -4.293012619018555
    4. '.stdout' → logprob: -5.918012619018555
    5. '.readline' → logprob: -6.668012619018555
    6. '.input' → logprob: -6.918012619018555
    7. '.exit' → logprob: -7.668012619018555
    8. ' .' → logprob: -7.918012619018555
    9. '.std' → logprob: -10.293012619018555
    10. '.get' → logprob: -10.418012619018555

Token 11: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05099967494606972
    2. '.readline' → logprob: -3.050999641418457
    3. '.read' → logprob: -6.050999641418457
    4. '[' → logprob: -11.300999641418457
    5. 'read' → logprob: -11.425999641418457
    6. '.readlines' → logprob: -11.675999641418457
    7. '.Read' → logprob: -11.925999641418457
    8. ' .' → logprob: -13.300999641418457
    9. '.get' → logprob: -13.550999641418457
    10. '."""' → logprob: -13.675999641418457

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014753451570868492
    2. '().' → logprob: -4.389753341674805
    3. ' ()' → logprob: -6.764753341674805
    4. '(' → logprob: -7.264753341674805
    5. '()(' → logprob: -8.139753341674805
    6. '`()' → logprob: -10.514753341674805
    7. '()
' → logprob: -11.264753341674805
    8. '```' → logprob: -11.639753341674805
    9. '()\' → logprob: -11.639753341674805
    10. ' ' → logprob: -11.764753341674805

Token 13: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005257497541606426
    2. '().' → logprob: -7.875525951385498
    3. '()(' → logprob: -9.75052547454834
    4. '(' → logprob: -10.00052547454834
    5. ' ()' → logprob: -10.25052547454834
    6. '`()' → logprob: -13.00052547454834
    7. '()`' → logprob: -14.00052547454834
    8. '()
' → logprob: -14.62552547454834
    9. '```' → logprob: -14.62552547454834
    10. ']()' → logprob: -14.62552547454834

Token 14: ' parse' (ID: 8420)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1930202692747116
    2. ' ' → logprob: -3.3180203437805176
    3. ' _' → logprob: -3.4430203437805176
    4. '_' → logprob: -3.4430203437805176
    5. ' main' → logprob: -3.4430203437805176
    6. '_get' → logprob: -4.318020343780518
    7. ' process' → logprob: -5.068020343780518
    8. ' ()' → logprob: -5.568020343780518
    9. '(' → logprob: -6.068020343780518
    10. '()' → logprob: -6.318020343780518

Token 15: '_first' (ID: 29347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1411209106445312
    2. '_line' → logprob: -1.1411209106445312
    3. '_input' → logprob: -1.7661209106445312
    4. '()' → logprob: -2.6411209106445312
    5. '(line' → logprob: -3.0161209106445312
    6. '_' → logprob: -3.1411209106445312
    7. '(input' → logprob: -4.516120910644531
    8. '_token' → logprob: -6.266120910644531
    9. '("")' → logprob: -6.641120910644531
    10. '("("' → logprob: -6.641120910644531

Token 16: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.002975322073325515
    2. '_' → logprob: -6.0029754638671875
    3. '_token' → logprob: -8.002975463867188
    4. '_word' → logprob: -9.752975463867188
    5. '()' → logprob: -10.252975463867188
    6. '(' → logprob: -11.252975463867188
    7. '_name' → logprob: -11.502975463867188
    8. '_input' → logprob: -11.502975463867188
    9. '_value' → logprob: -11.627975463867188
    10. ' _' → logprob: -12.377975463867188

Token 17: '(input' (ID: 10054)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7340002655982971
    2. '()' → logprob: -1.2340002059936523
    3. '(' → logprob: -1.4840002059936523
    4. ' ()' → logprob: -7.234000205993652
    5. '_' → logprob: -8.734000205993652
    6. '()(' → logprob: -8.859000205993652
    7. '("("' → logprob: -8.859000205993652
    8. ':' → logprob: -8.984000205993652
    9. ' ():' → logprob: -9.359000205993652
    10. '().' → logprob: -9.859000205993652

Token 18: '_func' (ID: 22252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17652460932731628
    2. '())' → logprob: -2.3015246391296387
    3. '()' → logprob: -2.9265246391296387
    4. '(' → logprob: -5.301524639129639
    5. '_line' → logprob: -6.426524639129639
    6. '_' → logprob: -7.051524639129639
    7. '_)' → logprob: -8.30152416229248
    8. '_token' → logprob: -9.92652416229248
    9. ' )' → logprob: -10.05152416229248
    10. ')_' → logprob: -10.05152416229248

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2227381467819214
    2. ')' → logprob: -1.3477381467819214
    3. '()' → logprob: -1.4727381467819214
    4. '():' → logprob: -1.5977381467819214
    5. '())' → logprob: -4.347738265991211
    6. '(' → logprob: -7.097738265991211
    7. ' ):' → logprob: -9.847738265991211
    8. ' )' → logprob: -10.097738265991211
    9. '(),' → logprob: -10.222738265991211
    10. '   ' → logprob: -10.597738265991211

Token 20: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008321888744831085
    2. '(' → logprob: -5.008321762084961
    3. '():' → logprob: -7.383321762084961
    4. '().' → logprob: -8.008321762084961
    5. ' ()' → logprob: -8.508321762084961
    6. '   ' → logprob: -8.758321762084961
    7. '()(' → logprob: -9.633321762084961
    8. ' =' → logprob: -10.383321762084961
    9. '=' → logprob: -10.508321762084961
    10. '())' → logprob: -10.633321762084961

Token 21: ' return' (ID: 622)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05306021869182587
    2. '   ' → logprob: -4.178060054779053
    3. 'line' → logprob: -4.178060054779053
    4. ' input' → logprob: -4.678060054779053
    5. ' return' → logprob: -6.053060054779053
    6. '    ' → logprob: -6.053060054779053
    7. 'input' → logprob: -6.303060054779053
    8. ' ' → logprob: -7.053060054779053
    9. ' token' → logprob: -7.053060054779053
    10. ' tokens' → logprob: -7.303060054779053

Token 22: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.19628486037254333
    2. ' list' → logprob: -2.946284770965576
    3. ' input' → logprob: -3.071284770965576
    4. 'int' → logprob: -3.321284770965576
    5. ' map' → logprob: -3.446284770965576
    6. ' tuple' → logprob: -4.946284770965576
    7. 'input' → logprob: -6.571284770965576
    8. 'list' → logprob: -6.696284770965576
    9. ' ' → logprob: -7.196284770965576
    10. 'map' → logprob: -7.821284770965576

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16152232885360718
    2. '(' → logprob: -1.911522388458252
    3. '(lambda' → logprob: -7.286522388458252
    4. '(str' → logprob: -7.536522388458252
    5. '(float' → logprob: -10.536521911621094
    6. '(
' → logprob: -11.411521911621094
    7. 'int' → logprob: -12.411521911621094
    8. '(s' → logprob: -12.536521911621094
    9. '(bool' → logprob: -12.536521911621094
    10. '=int' → logprob: -12.661521911621094

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04276827722787857
    2. '(' → logprob: -3.2927682399749756
    3. ' (' → logprob: -5.917768478393555
    4. ')' → logprob: -6.542768478393555
    5. '(next' → logprob: -8.542768478393555
    6. 'input' → logprob: -9.167768478393555
    7. ' input' → logprob: -9.292768478393555
    8. ',input' → logprob: -9.542768478393555
    9. '(
' → logprob: -9.792768478393555
    10. ' )' → logprob: -11.042768478393555

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.020568516105413437
    2. 'input' → logprob: -3.895568609237671
    3. ' next' → logprob: -11.14556884765625
    4. ')' → logprob: -11.64556884765625
    5. '(input' → logprob: -13.64556884765625
    6. ',input' → logprob: -14.27056884765625
    7. 'next' → logprob: -15.02056884765625
    8. ' )' → logprob: -15.27056884765625
    9. '	input' → logprob: -15.39556884765625
    10. ' ' → logprob: -15.64556884765625

Token 26: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -7.457669562427327e-05
    2. ')' → logprob: -10.37507438659668
    3. '_function' → logprob: -11.37507438659668
    4. 'func' → logprob: -11.50007438659668
    5. '_funcs' → logprob: -12.37507438659668
    6. '_FUNC' → logprob: -13.00007438659668
    7. ' _' → logprob: -13.25007438659668
    8. ')_' → logprob: -13.25007438659668
    9. '_' → logprob: -13.25007438659668
    10. '_fun' → logprob: -13.62507438659668

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.48660600185394287
    2. '()' → logprob: -1.2366060018539429
    3. '().' → logprob: -2.3616061210632324
    4. ')' → logprob: -8.111605644226074
    5. ' ())' → logprob: -9.111605644226074
    6. '()`' → logprob: -9.986605644226074
    7. '()))' → logprob: -10.361605644226074
    8. ' ()' → logprob: -10.361605644226074
    9. '`()' → logprob: -11.111605644226074
    10. '();)' → logprob: -11.111605644226074

Token 28: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38735532760620117
    2. 'split' → logprob: -1.1373553276062012
    3. 'rstrip' → logprob: -7.637355327606201
    4. ' strip' → logprob: -13.63735580444336
    5. ' split' → logprob: -14.01235580444336
    6. '(split' → logprob: -17.26235580444336
    7. 'spl' → logprob: -17.51235580444336
    8. '(strip' → logprob: -17.88735580444336
    9. 'rs' → logprob: -19.13735580444336
    10. '.strip' → logprob: -19.38735580444336

Token 29: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012744003906846046
    2. '()))' → logprob: -6.751274585723877
    3. '()' → logprob: -9.251274108886719
    4. ')' → logprob: -12.126274108886719
    5. '())
' → logprob: -13.751274108886719
    6. ' ())' → logprob: -14.126274108886719
    7. '))' → logprob: -15.001274108886719
    8. '(' → logprob: -15.501274108886719
    9. '()),' → logprob: -15.751274108886719
    10. '());' → logprob: -16.50127410888672

Token 30: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008420956321060658
    2. '(' → logprob: -4.883420944213867
    3. '()

' → logprob: -8.133420944213867
    4. '()
' → logprob: -8.258420944213867
    5. '(
' → logprob: -9.133420944213867
    6. '()\' → logprob: -9.758420944213867
    7. '<|end|>' → logprob: -11.008420944213867
    8. '(

' → logprob: -11.258420944213867
    9. '()[' → logprob: -11.883420944213867
    10. ')' → logprob: -11.883420944213867

Token 31: ' parse' (ID: 8420)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7320332527160645
    2. ' main' → logprob: -1.2320332527160645
    3. ' parse' → logprob: -2.2320332527160645
    4. ' calculate' → logprob: -2.6070332527160645
    5. ' process' → logprob: -4.6070332527160645
    6. 'solve' → logprob: -4.6070332527160645
    7. ' compute' → logprob: -4.8570332527160645
    8. 'calculate' → logprob: -5.6070332527160645
    9. ' get' → logprob: -5.7320332527160645
    10. 'main' → logprob: -5.9820332527160645

Token 32: '_d' (ID: 1565)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.022407812997698784
    2. '_first' → logprob: -4.1474080085754395
    3. '_next' → logprob: -5.8974080085754395
    4. '_line' → logprob: -6.7724080085754395
    5. '_input' → logprob: -7.1474080085754395
    6. '_list' → logprob: -7.6474080085754395
    7. '_rest' → logprob: -8.272407531738281
    8. '_remaining' → logprob: -8.522407531738281
    9. '_' → logprob: -9.397407531738281
    10. '_other' → logprob: -9.647407531738281

Token 33: '_list' (ID: 4162)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.23046033084392548
    2. 'ef' → logprob: -2.3554604053497314
    3. 'ay' → logprob: -2.6054604053497314
    4. 'ays' → logprob: -5.480460166931152
    5. 'eep' → logprob: -5.855460166931152
    6. 'ate' → logprob: -6.105460166931152
    7. 'escription' → logprob: -6.105460166931152
    8. 'im' → logprob: -6.480460166931152
    9. 'es' → logprob: -6.480460166931152
    10. 'efs' → logprob: -6.605460166931152

Token 34: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011661761673167348
    2. '(' → logprob: -7.001166343688965
    3. ' (' → logprob: -8.376166343688965
    4. '=input' → logprob: -11.751166343688965
    5. '```' → logprob: -12.376166343688965
    6. '_input' → logprob: -13.251166343688965
    7. '[input' → logprob: -13.626166343688965
    8. '_list' → logprob: -13.751166343688965
    9. ',input' → logprob: -13.876166343688965
    10. 's' → logprob: -13.876166343688965

Token 35: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -6.802049756515771e-05
    2. 'func' → logprob: -10.375067710876465
    3. '_function' → logprob: -11.500067710876465
    4. ')' → logprob: -11.500067710876465
    5. ')_' → logprob: -12.125067710876465
    6. '_FUNC' → logprob: -12.250067710876465
    7. '_funcs' → logprob: -13.250067710876465
    8. '_' → logprob: -13.500067710876465
    9. ')(_' → logprob: -14.250067710876465
    10. '_fun' → logprob: -14.375067710876465

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00714027089998126
    2. '):
' → logprob: -6.007140159606934
    3. '():' → logprob: -6.132140159606934
    4. ')' → logprob: -6.382140159606934
    5. '()' → logprob: -7.382140159606934
    6. ' ):' → logprob: -10.007140159606934
    7. '():
' → logprob: -10.382140159606934
    8. '):
' → logprob: -10.632140159606934
    9. '   ' → logprob: -11.132140159606934
    10. ':' → logprob: -11.882140159606934

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017162315780296922
    2. ' return' → logprob: -7.126716136932373
    3. 'def' → logprob: -8.126716613769531
    4. 'return' → logprob: -8.251716613769531
    5. 'n' → logprob: -9.126716613769531
    6. '[]' → logprob: -9.751716613769531
    7. ' []' → logprob: -10.251716613769531
    8. '(' → logprob: -10.501716613769531
    9. '()' → logprob: -11.126716613769531
    10. ' def' → logprob: -11.251716613769531

Token 38: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4025709927082062
    2. ' return' → logprob: -1.1525709629058838
    3. 'return' (adapté à ' return') → logprob: -4.527571201324463
    4. ' d' → logprob: -6.402571201324463
    5. 'd' → logprob: -6.777571201324463
    6. 'def' → logprob: -7.277571201324463
    7. ' def' → logprob: -7.402571201324463
    8. 'n' → logprob: -8.152570724487305
    9. ' n' → logprob: -9.027570724487305
    10. ' list' → logprob: -9.652570724487305

Token 39: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.28401264548301697
    2. 'list' → logprob: -1.4090126752853394
    3. ' map' → logprob: -6.784012794494629
    4. 'map' → logprob: -6.909012794494629
    5. ' [' → logprob: -8.284012794494629
    6. '[' → logprob: -8.409012794494629
    7. '[list' → logprob: -8.534012794494629
    8. ' ' → logprob: -10.909012794494629
    9. '[]' → logprob: -11.659012794494629
    10. '[int' → logprob: -11.909012794494629

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002925638109445572
    2. '(' → logprob: -6.002925872802734
    3. '(int' → logprob: -7.752925872802734
    4. '(input' → logprob: -11.502925872802734
    5. 'map' → logprob: -11.877925872802734
    6. '(
' → logprob: -14.877925872802734
    7. '(parse' → logprob: -14.877925872802734
    8. '_map' → logprob: -15.002925872802734
    9. '(eval' → logprob: -15.127925872802734
    10. '()' → logprob: -15.252925872802734

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00044592362246476114
    2. '(' → logprob: -8.000446319580078
    3. 'int' → logprob: -9.500446319580078
    4. '[int' → logprob: -11.250446319580078
    5. ')' → logprob: -12.125446319580078
    6. ',int' → logprob: -12.250446319580078
    7. '<int' → logprob: -12.500446319580078
    8. ' (' → logprob: -12.875446319580078
    9. '(lambda' → logprob: -13.125446319580078
    10. '=int' → logprob: -13.375446319580078

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008132012444548309
    2. ',input' → logprob: -7.125813007354736
    3. '(),' → logprob: -12.750813484191895
    4. ' ,' → logprob: -13.000813484191895
    5. '(' → logprob: -13.750813484191895
    6. '(input' → logprob: -13.875813484191895
    7. '),' → logprob: -14.625813484191895
    8. 'input' → logprob: -14.750813484191895
    9. '‌,' → logprob: -15.500813484191895
    10. ',(' → logprob: -15.625813484191895

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021119564771652
    2. 'input' → logprob: -2.3502111434936523
    3. '(input' → logprob: -12.600211143493652
    4. ',input' → logprob: -14.975211143493652
    5. '	input' → logprob: -15.225211143493652
    6. '   ' → logprob: -15.350211143493652
    7. ' ' → logprob: -15.725211143493652
    8. '=input' → logprob: -16.35021209716797
    9. ')' → logprob: -16.97521209716797
    10. '[input' → logprob: -16.97521209716797

Token 44: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.000215457082958892
    2. 'func' → logprob: -8.500215530395508
    3. 'Func' → logprob: -12.500215530395508
    4. '```' → logprob: -12.750215530395508
    5. '_function' → logprob: -13.750215530395508
    6. '_FUNC' → logprob: -13.875215530395508
    7. ')' → logprob: -14.000215530395508
    8. '(func' → logprob: -15.000215530395508
    9. '_' → logprob: -15.250215530395508
    10. ')_' → logprob: -15.500215530395508

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02352520264685154
    2. '()' → logprob: -3.8985252380371094
    3. '()))' → logprob: -6.148525238037109
    4. '())))' → logprob: -7.273525238037109
    5. '())' → logprob: -9.27352523803711
    6. '()[' → logprob: -11.27352523803711
    7. ')' → logprob: -11.64852523803711
    8. '()));' → logprob: -12.27352523803711
    9. ')))' → logprob: -12.64852523803711
    10. '().__' → logprob: -12.77352523803711

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015084355836734176
    2. 'strip' → logprob: -6.5015082359313965
    3. 'rstrip' → logprob: -12.376508712768555
    4. ' split' → logprob: -13.376508712768555
    5. 'read' → logprob: -15.751508712768555
    6. ')' → logprob: -16.501508712768555
    7. '(split' → logprob: -16.626508712768555
    8. 'spl' → logprob: -17.251508712768555
    9. ' strip' → logprob: -18.876508712768555
    10. '_split' → logprob: -20.501508712768555

Token 47: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3180435001850128
    2. '()))' → logprob: -1.3180434703826904
    3. ')' → logprob: -6.0680437088012695
    4. '())' → logprob: -6.3180437088012695
    5. '()' → logprob: -7.4430437088012695
    6. ')))' → logprob: -10.06804370880127
    7. '(' → logprob: -11.44304370880127
    8. ' ))' → logprob: -12.56804370880127
    9. '   ' → logprob: -13.19304370880127
    10. '())))' → logprob: -13.19304370880127

Token 48: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35372647643089294
    2. '(' → logprob: -1.2287265062332153
    3. '(
' → logprob: -5.853726387023926
    4. '()
' → logprob: -7.728726387023926
    5. '()

' → logprob: -8.103726387023926
    6. ':' → logprob: -8.353726387023926
    7. 'def' → logprob: -8.478726387023926
    8. '<|end|>' → logprob: -8.853726387023926
    9. '_' → logprob: -8.978726387023926
    10. '#' → logprob: -9.103726387023926

Token 49: ' run' (ID: 2461)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2422250360250473
    2. ' solve' → logprob: -2.117224931716919
    3. ' process' → logprob: -3.242224931716919
    4. ' calculate' → logprob: -3.617224931716919
    5. 'main' → logprob: -4.992225170135498
    6. 'solve' → logprob: -5.242225170135498
    7. ' compute' → logprob: -5.492225170135498
    8. ' count' → logprob: -5.992225170135498
    9. 'calculate' → logprob: -6.242225170135498
    10. ' find' → logprob: -6.242225170135498

Token 50: '_query' (ID: 13012)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19768768548965454
    2. '_' → logprob: -1.8226876258850098
    3. '():' → logprob: -4.82268762588501
    4. '(_' → logprob: -5.94768762588501
    5. '(:' → logprob: -6.44768762588501
    6. '(_:' → logprob: -6.44768762588501
    7. '_(' → logprob: -6.94768762588501
    8. '_:' → logprob: -7.19768762588501
    9. '```' → logprob: -7.32268762588501
    10. '(**' → logprob: -7.69768762588501

Token 51: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002754472428932786
    2. 's' → logprob: -6.7527546882629395
    3. '(query' → logprob: -7.1277546882629395
    4. ' (' → logprob: -8.377754211425781
    5. '_' → logprob: -9.002754211425781
    6. '(s' → logprob: -9.127754211425781
    7. '("("' → logprob: -9.752754211425781
    8. '_query' → logprob: -10.127754211425781
    9. '_(' → logprob: -10.627754211425781
    10. '_s' → logprob: -10.752754211425781

Token 52: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4798392355442047
    2. '(input' → logprob: -0.9798392057418823
    3. 's' → logprob: -5.354839324951172
    4. '(s' → logprob: -7.729839324951172
    5. ' (' → logprob: -8.604839324951172
    6. '(line' → logprob: -9.479839324951172
    7. '():' → logprob: -9.604839324951172
    8. '(query' → logprob: -9.854839324951172
    9. '_' → logprob: -10.479839324951172
    10. '(_' → logprob: -10.979839324951172

Token 53: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00012118533049942926
    2. '_' → logprob: -9.875121116638184
    3. ')' → logprob: -10.875121116638184
    4. ')_' → logprob: -11.000121116638184
    5. 'func' → logprob: -11.250121116638184
    6. '_FUNC' → logprob: -11.625121116638184
    7. '_funcs' → logprob: -12.375121116638184
    8. '_f' → logprob: -12.875121116638184
    9. ')(_' → logprob: -13.500121116638184
    10. '_function' → logprob: -13.625121116638184

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018387178715784103
    2. ')' → logprob: -8.750184059143066
    3. ' ):' → logprob: -11.625184059143066
    4. '():' → logprob: -11.875184059143066
    5. ':' → logprob: -12.250184059143066
    6. '):
' → logprob: -12.375184059143066
    7. ',' → logprob: -15.500184059143066
    8. '   ' → logprob: -16.37518310546875
    9. ' ' → logprob: -17.12518310546875
    10. '()' → logprob: -17.25018310546875

Token 55: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04959193989634514
    2. '   ' → logprob: -3.5495920181274414
    3. ':' → logprob: -4.674592018127441
    4. '()' → logprob: -5.424592018127441
    5. ' ():' → logprob: -5.799592018127441
    6. '):' → logprob: -7.174592018127441
    7. 'def' → logprob: -7.174592018127441
    8. '(' → logprob: -7.174592018127441
    9. '():
' → logprob: -8.674592018127441
    10. ' ()' → logprob: -8.924592018127441

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427698314189911
    2. ' line' → logprob: -1.7177698612213135
    3. ' return' → logprob: -3.3427698612213135
    4. 'line' → logprob: -4.092769622802734
    5. ' parts' → logprob: -4.217769622802734
    6. 'def' → logprob: -4.467769622802734
    7. 'return' (adapté à ' return') → logprob: -4.717769622802734
    8. ' tokens' → logprob: -5.467769622802734
    9. ' query' → logprob: -5.592769622802734
    10. 'query' → logprob: -5.842769622802734

Token 57: ' map' (ID: 4014)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -1.2284563779830933
    2. ' list' → logprob: -1.9784563779830933
    3. ' input' → logprob: -2.103456497192383
    4. ' map' → logprob: -2.228456497192383
    5. 'input' → logprob: -2.478456497192383
    6. 'list' → logprob: -2.478456497192383
    7. ' sys' → logprob: -2.603456497192383
    8. 'map' → logprob: -2.978456497192383
    9. 'tuple' → logprob: -3.353456497192383
    10. 'sys' → logprob: -4.978456497192383

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3149215579032898
    2. '(' → logprob: -1.3149216175079346
    3. '<|end|>' → logprob: -7.6899213790893555
    4. 'int' → logprob: -7.8149213790893555
    5. '[int' → logprob: -8.189921379089355
    6. '<int' → logprob: -8.564921379089355
    7. '(str' → logprob: -9.189921379089355
    8. '(lambda' → logprob: -10.189921379089355
    9. '_' → logprob: -10.564921379089355
    10. '<|end|>' → logprob: -10.939921379089355

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00830049254000187
    2. ',input' → logprob: -5.008300304412842
    3. '(' → logprob: -7.133300304412842
    4. '(input' → logprob: -7.258300304412842
    5. ')' → logprob: -9.63330078125
    6. ',(' → logprob: -12.00830078125
    7. 'input' → logprob: -12.50830078125
    8. ' ,' → logprob: -13.38330078125
    9. ')(' → logprob: -13.75830078125
    10. ' (' → logprob: -13.88330078125

Token 60: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.023254914209246635
    2. 'input' → logprob: -3.773254871368408
    3. ')' → logprob: -13.023255348205566
    4. '<|end|>' → logprob: -13.023255348205566
    5. '(input' → logprob: -13.148255348205566
    6. '	input' → logprob: -14.273255348205566
    7. ',input' → logprob: -14.398255348205566
    8. '_input' → logprob: -14.773255348205566
    9. '=input' → logprob: -15.148255348205566
    10. ' ' → logprob: -15.148255348205566

Token 61: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00024192029377445579
    2. 'func' → logprob: -8.500242233276367
    3. '_f' → logprob: -11.125242233276367
    4. '```' → logprob: -12.000242233276367
    5. '_function' → logprob: -12.125242233276367
    6. '_funcs' → logprob: -12.750242233276367
    7. '_FUNC' → logprob: -13.000242233276367
    8. 'Func' → logprob: -13.375242233276367
    9. '_fun' → logprob: -13.500242233276367
    10. 'f' → logprob: -13.500242233276367

Token 62: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5539234280586243
    2. '().' → logprob: -0.9289234280586243
    3. '())' → logprob: -3.6789233684539795
    4. ')' → logprob: -5.303923606872559
    5. '`()' → logprob: -10.303923606872559
    6. '().__' → logprob: -11.678923606872559
    7. '()(' → logprob: -11.928923606872559
    8. '()
' → logprob: -12.053923606872559
    9. '());' → logprob: -12.428923606872559
    10. '|()
' → logprob: -12.428923606872559

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00023441045777872205
    2. ')' → logprob: -9.375234603881836
    3. 'strip' → logprob: -9.375234603881836
    4. 'read' → logprob: -9.875234603881836
    5. '()' → logprob: -12.000234603881836
    6. '().' → logprob: -12.875234603881836
    7. '())' → logprob: -13.500234603881836
    8. '(split' → logprob: -14.250234603881836
    9. ' split' → logprob: -14.500234603881836
    10. 'rstrip' → logprob: -14.500234603881836

Token 64: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007930849678814411
    2. ')' → logprob: -5.007930755615234
    3. '()' → logprob: -6.757930755615234
    4. '()))' → logprob: -10.132930755615234
    5. '))' → logprob: -11.882930755615234
    6. ' ())' → logprob: -12.757930755615234
    7. '())
' → logprob: -13.757930755615234
    8. '(' → logprob: -13.882930755615234
    9. '();)' → logprob: -14.882930755615234
    10. ' )' → logprob: -15.507930755615234

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3176002502441406
    2. ':' → logprob: -1.8176002502441406
    3. '()' → logprob: -1.8176002502441406
    4. '(' → logprob: -2.1926002502441406
    5. '<|end|>' → logprob: -2.3176002502441406
    6. '\n' → logprob: -2.5676002502441406
    7. '
' → logprob: -2.8176002502441406
    8. '(
' → logprob: -4.067600250244141
    9. '\' → logprob: -4.567600250244141
    10. '#' → logprob: -5.067600250244141

Token 66: ' mod' (ID: 1812)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.009558336809277534
    2. '_main' → logprob: -5.384558200836182
    3. 'main' → logprob: -5.384558200836182
    4. ' process' → logprob: -8.75955867767334
    5. ' solve' → logprob: -9.13455867767334
    6. '_' → logprob: -10.38455867767334
    7. 'process' → logprob: -11.50955867767334
    8. ' run' → logprob: -11.63455867767334
    9. '_process' → logprob: -11.75955867767334
    10. 'solve' → logprob: -11.88455867767334

Token 67: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7210652232170105
    2. ':' → logprob: -1.2210652828216553
    3. '=' → logprob: -2.2210652828216553
    4. '_' → logprob: -3.4710652828216553
    5. ' :' → logprob: -3.4710652828216553
    6. ' ' → logprob: -3.5960652828216553
    7. 'ular' → logprob: -5.721065044403076
    8. '(' → logprob: -5.846065044403076
    9. 'ulo' → logprob: -5.971065044403076
    10. '   ' → logprob: -6.221065044403076

Token 68: '(D' (ID: 9908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007256731390953064
    2. '_' → logprob: -6.007256507873535
    3. 's' → logprob: -7.382256507873535
    4. ' (' → logprob: -7.632256507873535
    5. '_list' → logprob: -7.757256507873535
    6. ':' → logprob: -8.007256507873535
    7. '[:]' → logprob: -8.007256507873535
    8. '(lst' → logprob: -8.257256507873535
    9. '_(' → logprob: -8.632256507873535
    10. 'def' → logprob: -8.757256507873535

Token 69: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01850622147321701
    2. ',' → logprob: -4.393506050109863
    3. ')' → logprob: -5.393506050109863
    4. ' ):' → logprob: -6.893506050109863
    5. '):
' → logprob: -9.393506050109863
    6. '[' → logprob: -9.518506050109863
    7. '[]):' → logprob: -9.893506050109863
    8. '_list' → logprob: -10.268506050109863
    9. ')):' → logprob: -10.893506050109863
    10. '),' → logprob: -11.018506050109863

Token 70: ' m' (ID: 284)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0247907638549805
    2. ' mod' → logprob: -1.7747907638549805
    3. 'mod' → logprob: -2.3997907638549805
    4. 'M' → logprob: -2.6497907638549805
    5. ' q' → logprob: -3.0247907638549805
    6. ' m' → logprob: -3.1497907638549805
    7. ' Q' → logprob: -3.2747907638549805
    8. ' K' → logprob: -3.5247907638549805
    9. 'm' → logprob: -3.5247907638549805
    10. 'q' → logprob: -3.8997907638549805

Token 71: ',' (ID: 11)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.1278732866048813
    2. '):' → logprob: -2.127873182296753
    3. 'odule' → logprob: -8.127873420715332
    4. 'odu' → logprob: -8.502873420715332
    5. 'ods' → logprob: -9.502873420715332
    6. 'odel' → logprob: -9.502873420715332
    7. 'ap' → logprob: -10.002873420715332
    8. '):
' → logprob: -10.252873420715332
    9. ':' → logprob: -10.377873420715332
    10. ')' → logprob: -10.502873420715332

Token 72: ' K' (ID: 658)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4092791080474854
    2. ' q' → logprob: -2.2842791080474854
    3. 'x' → logprob: -2.5342791080474854
    4. 'n' → logprob: -2.5342791080474854
    5. 'k' → logprob: -2.6592791080474854
    6. ' n' → logprob: -3.0342791080474854
    7. ' x' → logprob: -3.2842791080474854
    8. 'i' → logprob: -3.4092791080474854
    9. ' k' → logprob: -3.5342791080474854
    10. 'Q' → logprob: -4.221778869628906

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012954773847013712
    2. ',' → logprob: -7.376295566558838
    3. ')' → logprob: -7.626295566558838
    4. 'u' → logprob: -9.87629508972168
    5. '):
' → logprob: -10.00129508972168
    6. '_list' → logprob: -10.50129508972168
    7. '[]):' → logprob: -11.12629508972168
    8. 's' → logprob: -12.12629508972168
    9. ':' → logprob: -12.25129508972168
    10. ''):' → logprob: -12.50129508972168

Token 74: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027213026769459248
    2. '   ' → logprob: -6.752721309661865
    3. ' :' → logprob: -7.627721309661865
    4. ':
' → logprob: -7.877721309661865
    5. '):' → logprob: -8.627720832824707
    6. ',' → logprob: -8.877720832824707
    7. ' =' → logprob: -9.002720832824707
    8. ':list' → logprob: -9.877720832824707
    9. '_list' → logprob: -10.127720832824707
    10. '=' → logprob: -10.127720832824707

Token 75: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7857847213745117
    2. ' result' → logprob: -1.5357847213745117
    3. '[' → logprob: -2.4107847213745117
    4. ' return' → logprob: -2.5357847213745117
    5. ' res' → logprob: -3.4107847213745117
    6. ' n' → logprob: -3.6607847213745117
    7. '   ' → logprob: -3.7857847213745117
    8. 'result' → logprob: -3.9107847213745117
    9. ' mod' → logprob: -4.785784721374512
    10. ' ' → logprob: -5.035784721374512

Token 76: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0975902080535889
    2. '[(' → logprob: -1.3475902080535889
    3. '[' → logprob: -1.4725902080535889
    4. ' [(' → logprob: -1.8475902080535889
    5. '[D' → logprob: -4.472590446472168
    6. '[((' → logprob: -5.472590446472168
    7. '[len' → logprob: -7.222590446472168
    8. '[[' → logprob: -7.472590446472168
    9. '[d' → logprob: -7.597590446472168
    10. '[i' → logprob: -8.472590446472168

Token 77: 'D' (ID: 35)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0789535716176033
    2. 'd' → logprob: -3.328953504562378
    3. '((' → logprob: -3.953953504562378
    4. '(x' → logprob: -4.953953742980957
    5. ' (' → logprob: -5.203953742980957
    6. '(D' → logprob: -5.328953742980957
    7. 'x' → logprob: -7.203953742980957
    8. '   ' → logprob: -7.328953742980957
    9. '(di' → logprob: -7.828953742980957
    10. '(' → logprob: -7.953953742980957

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7197969555854797
    2. ' %' → logprob: -0.9697969555854797
    3. '%' → logprob: -2.344796895980835
    4. 'i' → logprob: -3.594796895980835
    5. ' i' → logprob: -5.469797134399414
    6. '%i' → logprob: -5.594797134399414
    7. '[' → logprob: -6.844797134399414
    8. ']' → logprob: -7.094797134399414
    9. ' ' → logprob: -8.219797134399414
    10. ']%' → logprob: -9.719797134399414

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004630553536117077
    2. ']%' → logprob: -5.5046305656433105
    3. ':' → logprob: -8.504630088806152
    4. ':]' → logprob: -9.629630088806152
    5. ':i' → logprob: -9.754630088806152
    6. '%' → logprob: -9.754630088806152
    7. '*' → logprob: -10.004630088806152
    8. ' ]' → logprob: -10.504630088806152
    9. '+' → logprob: -10.754630088806152
    10. '::' → logprob: -11.379630088806152

Token 80: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10896667838096619
    2. '%' → logprob: -2.608966588973999
    3. ']' → logprob: -3.733966588973999
    4. '%i' → logprob: -5.858966827392578
    5. '%m' → logprob: -6.733966827392578
    6. ']%' → logprob: -7.733966827392578
    7. ' ' → logprob: -7.858966827392578
    8. '[i' → logprob: -8.858966827392578
    9. ':' → logprob: -9.108966827392578
    10. ':i' → logprob: -9.233966827392578

Token 81: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1218971237540245
    2. ' m' → logprob: -2.2468972206115723
    3. 'K' → logprob: -4.996897220611572
    4. ' K' → logprob: -6.121897220611572
    5. ' (' → logprob: -10.496896743774414
    6. ' ' → logprob: -10.871896743774414
    7. '(m' → logprob: -11.121896743774414
    8. '(' → logprob: -12.246896743774414
    9. ' ' → logprob: -12.621896743774414
    10. '(K' → logprob: -13.121896743774414

Token 82: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34891852736473083
    2. 'for' → logprob: -1.2239185571670532
    3. ' ' → logprob: -8.098918914794922
    4. ' i' → logprob: -10.098918914794922
    5. '	for' → logprob: -10.223918914794922
    6. '+' → logprob: -10.723918914794922
    7. ']' → logprob: -11.098918914794922
    8. '   ' → logprob: -11.223918914794922
    9. '+i' → logprob: -11.223918914794922
    10. '  ' → logprob: -11.973918914794922

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02979295887053013
    2. 'i' → logprob: -3.5297930240631104
    3. ' range' → logprob: -10.654792785644531
    4. 'range' → logprob: -11.029792785644531
    5. '	i' → logprob: -13.904792785644531
    6. ' ' → logprob: -14.404792785644531
    7. ' ' → logprob: -14.404792785644531
    8. ' in' → logprob: -15.029792785644531
    9. 'Range' → logprob: -16.27979278564453
    10. 'I' → logprob: -17.02979278564453

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04829968884587288
    2. 'in' → logprob: -3.298299789428711
    3. ' range' → logprob: -5.173299789428711
    4. 'range' → logprob: -5.423299789428711
    5. ' ' → logprob: -9.423299789428711
    6. '<|end|>' → logprob: -11.298299789428711
    7. '	range' → logprob: -11.798299789428711
    8. ' xrange' → logprob: -11.923299789428711
    9. '(range' → logprob: -12.048299789428711
    10. '  ' → logprob: -12.673299789428711

Token 85: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408562898635864
    2. ' range' → logprob: -0.9740856289863586
    3. 'K' → logprob: -12.599085807800293
    4. '	range' → logprob: -13.349085807800293
    5. ' K' → logprob: -13.474085807800293
    6. ' xrange' → logprob: -14.224085807800293
    7. '(range' → logprob: -14.349085807800293
    8. ' ' → logprob: -14.599085807800293
    9. '   ' → logprob: -15.849085807800293
    10. 'rang' → logprob: -16.474084854125977

Token 86: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.007445475552231073
    2. '(' → logprob: -5.507445335388184
    3. '(len' → logprob: -5.757445335388184
    4. 'K' → logprob: -9.132445335388184
    5. '(i' → logprob: -10.132445335388184
    6. '(m' → logprob: -11.132445335388184
    7. ' (' → logprob: -11.257445335388184
    8. '(k' → logprob: -11.507445335388184
    9. 'len' → logprob: -12.382445335388184
    10. '((' → logprob: -13.132445335388184

Token 87: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.978233846486546e-05
    2. ')' → logprob: -10.750049591064453
    3. ' )' → logprob: -11.125049591064453
    4. ']' → logprob: -11.625049591064453
    5. ')]
' → logprob: -13.250049591064453
    6. '   ' → logprob: -14.625049591064453
    7. '+' → logprob: -14.750049591064453
    8. ' ' → logprob: -14.875049591064453
    9. ' ]' → logprob: -14.875049591064453
    10. ')}' → logprob: -15.375049591064453

Token 88: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.30781540274620056
    2. ' mod' → logprob: -1.682815432548523
    3. ' solve' → logprob: -3.6828153133392334
    4. ' max' → logprob: -4.4328155517578125
    5. ' run' → logprob: -4.6828155517578125
    6. ' process' → logprob: -5.0578155517578125
    7. 'main' → logprob: -5.3078155517578125
    8. 'mod' → logprob: -5.6828155517578125
    9. ' count' → logprob: -6.1828155517578125
    10. ' is' → logprob: -6.3078155517578125

Token 90: '_sm' (ID: 76283)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.6413303017616272
    2. '_prefix' → logprob: -1.5163302421569824
    3. '_sum' → logprob: -2.6413302421569824
    4. '_max' → logprob: -3.3913302421569824
    5. '_' → logprob: -3.5163302421569824
    6. '(' → logprob: -3.7663302421569824
    7. '_result' → logprob: -3.8913302421569824
    8. '_answer' → logprob: -4.516330242156982
    9. '_suffix' → logprob: -4.641330242156982
    10. '_hash' → logprob: -5.016330242156982

Token 91: 'da' (ID: 2529)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2696247398853302
    2. 'o' → logprob: -2.769624710083008
    3. 'aller' → logprob: -3.144624710083008
    4. 'od' → logprob: -3.269624710083008
    5. 'alls' → logprob: -4.019624710083008
    6. 'oothed' → logprob: -4.269624710083008
    7. '(all' → logprob: -4.519624710083008
    8. 'a' → logprob: -4.894624710083008
    9. 'th' → logprob: -5.394624710083008
    10. '_all' → logprob: -5.644624710083008

Token 92: '_m' (ID: 1285)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.4089204668998718
    2. 'p' → logprob: -1.9089205265045166
    3. 'x' → logprob: -2.4089205265045166
    4. 'l' → logprob: -4.5339202880859375
    5. '(S' → logprob: -4.5339202880859375
    6. 'm' → logprob: -4.7839202880859375
    7. '_list' → logprob: -5.2839202880859375
    8. 'a' → logprob: -5.4089202880859375
    9. 'c' → logprob: -5.6589202880859375
    10. '(L' → logprob: -5.7839202880859375

Token 93: 'da' (ID: 2529)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.7023411393165588
    2. 'od' → logprob: -0.9523411393165588
    3. 'a' → logprob: -4.327341079711914
    4. 'atrix' → logprob: -4.577341079711914
    5. 'odule' → logprob: -4.952341079711914
    6. 'd' → logprob: -5.077341079711914
    7. 'ods' → logprob: -5.202341079711914
    8. 'ap' → logprob: -5.327341079711914
    9. 'o' → logprob: -5.452341079711914
    10. 'ean' → logprob: -5.452341079711914

Token 94: '0' (ID: 15)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.21802350878715515
    2. '(K' → logprob: -3.7180235385894775
    3. '(' → logprob: -3.8430235385894775
    4. '_m' → logprob: -4.218023300170898
    5. '_' → logprob: -4.343023300170898
    6. '_list' → logprob: -4.843023300170898
    7. 's' → logprob: -4.968023300170898
    8. 'x' → logprob: -4.968023300170898
    9. '(S' → logprob: -4.968023300170898
    10. 'm' → logprob: -4.968023300170898

Token 95: '(md' (ID: 113930)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.10937187075614929
    2. '0' → logprob: -3.1093719005584717
    3. '(d' → logprob: -4.359371662139893
    4. '1' → logprob: -5.234371662139893
    5. 'a' → logprob: -5.734371662139893
    6. 'm' → logprob: -5.734371662139893
    7. '(m' → logprob: -5.984371662139893
    8. '_m' → logprob: -6.109371662139893
    9. 'def' → logprob: -6.109371662139893
    10. 'k' → logprob: -6.234371662139893

Token 96: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03529908135533333
    2. 'm' → logprob: -4.035299301147461
    3. '_list' → logprob: -4.535299301147461
    4. '0' → logprob: -6.035299301147461
    5. '_a' → logprob: -6.910299301147461
    6. '_m' → logprob: -7.785299301147461
    7. 'A' → logprob: -8.035299301147461
    8. 'list' → logprob: -8.160299301147461
    9. 'alist' → logprob: -8.285299301147461
    10. '):
' → logprob: -8.785299301147461

Token 97: ' K' (ID: 658)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.4170809984207153
    2. ' K' → logprob: -1.4170809984207153
    3. 'm' → logprob: -1.9170809984207153
    4. 'K' → logprob: -2.042080879211426
    5. ' md' → logprob: -2.667080879211426
    6. ' D' → logprob: -3.917080879211426
    7. 'k' → logprob: -4.167080879211426
    8. ' k' → logprob: -4.167080879211426
    9. 'md' → logprob: -4.354580879211426
    10. 'D' → logprob: -4.604580879211426

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006400577258318663
    2. ' ,' → logprob: -5.1314005851745605
    3. ',m' → logprob: -9.006400108337402
    4. '):' → logprob: -9.131400108337402
    5. '0' → logprob: -9.631400108337402
    6. '):
' → logprob: -9.756400108337402
    7. ',d' → logprob: -11.006400108337402
    8. ' ' → logprob: -11.381400108337402
    9. 'm' → logprob: -11.506400108337402
    10. '1' → logprob: -11.631400108337402

Token 99: ' limit' (ID: 5967)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.2432420253753662
    2. 'm' → logprob: -2.118242025375366
    3. ' md' → logprob: -2.118242025375366
    4. ' D' → logprob: -2.243242025375366
    5. ' M' → logprob: -3.118242025375366
    6. 'D' → logprob: -3.180742025375366
    7. ' sm' → logprob: -3.618242025375366
    8. 'md' → logprob: -3.680742025375366
    9. ' d' → logprob: -3.805742025375366
    10. 'M' → logprob: -4.243242263793945

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02158600650727749
    2. 's' → logprob: -4.271585941314697
    3. '=' → logprob: -6.146585941314697
    4. ')' → logprob: -6.396585941314697
    5. ',' → logprob: -6.521585941314697
    6. '):
' → logprob: -7.146585941314697
    7. '0' → logprob: -7.771585941314697
    8. ' ):' → logprob: -7.771585941314697
    9. '_' → logprob: -9.146586418151855
    10. '=None' → logprob: -9.521586418151855

Token 101: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08137130737304688
    2. '   ' → logprob: -3.206371307373047
    3. ' :' → logprob: -4.081371307373047
    4. ':
' → logprob: -4.331371307373047
    5. ',' → logprob: -5.706371307373047
    6. ' :
' → logprob: -6.206371307373047
    7. '):' → logprob: -6.831371307373047
    8. '[' → logprob: -7.956371307373047
    9. '):
' → logprob: -8.456371307373047
    10. 'def' → logprob: -9.331371307373047

Token 102: ' sm' (ID: 1765)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2094026356935501
    2. ' sm' → logprob: -2.459402561187744
    3. ' result' → logprob: -3.709402561187744
    4. 'sm' (adapté à ' sm') → logprob: -3.959402561187744
    5. ' res' → logprob: -4.834402561187744
    6. 'result' → logprob: -4.834402561187744
    7. ' m' → logprob: -4.834402561187744
    8. ' for' → logprob: -4.959402561187744
    9. 'm' → logprob: -5.084402561187744
    10. 'for' → logprob: -5.709402561187744

Token 103: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.008740204386413097
    2. 'a' → logprob: -5.258740425109863
    3. 'd' → logprob: -6.008740425109863
    4. '   ' → logprob: -8.133740425109863
    5. ' =' → logprob: -8.383740425109863
    6. '=' → logprob: -8.383740425109863
    7. '_da' → logprob: -9.258740425109863
    8. 'ad' → logprob: -10.258740425109863
    9. ',' → logprob: -10.383740425109863
    10. '0' → logprob: -11.446240425109863

Token 104: ' =' (ID: 314)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.39582115411758423
    2. '_' → logprob: -1.2708210945129395
    3. ' =' → logprob: -3.2708210945129395
    4. '=' → logprob: -5.8958210945129395
    5. '_a' → logprob: -6.6458210945129395
    6. '0' → logprob: -6.8958210945129395
    7. ',' → logprob: -7.0208210945129395
    8. '_,' → logprob: -7.7708210945129395
    9. '_d' → logprob: -8.145821571350098
    10. '_md' → logprob: -8.270821571350098

Token 105: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8820685148239136
    2. '0' → logprob: -1.0070685148239136
    3. ' [' → logprob: -1.6320685148239136
    4. 'sum' → logprob: -4.757068634033203
    5. ' ' → logprob: -5.007068634033203
    6. ' sum' → logprob: -5.132068634033203
    7. 'md' → logprob: -6.507068634033203
    8. ' md' → logprob: -6.882068634033203
    9. '[min' → logprob: -7.507068634033203
    10. '[m' → logprob: -7.632068634033203

Token 106: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1889169067144394
    2. '0' → logprob: -1.8139169216156006
    3. 'md' → logprob: -6.0639166831970215
    4. 'sum' → logprob: -6.0639166831970215
    5. ' [' → logprob: -6.3139166831970215
    6. '[m' → logprob: -6.4389166831970215
    7. '[min' → logprob: -8.06391716003418
    8. '[K' → logprob: -9.18891716003418
    9. '[int' → logprob: -9.56391716003418
    10. ' ' → logprob: -9.81391716003418

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13214164972305298
    2. '<|end|>' → logprob: -2.757141590118408
    3. ' for' → logprob: -3.632141590118408
    4. '   ' → logprob: -4.007141590118408
    5. 'for' → logprob: -5.007141590118408
    6. '	for' → logprob: -5.132141590118408
    7. ',' → logprob: -6.632141590118408
    8. '<|end|>' → logprob: -7.007141590118408
    9. '    
' → logprob: -8.507142066955566
    10. ',
' → logprob: -8.882142066955566

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09205009788274765
    2. ' for' → logprob: -3.092050075531006
    3. '<|end|>' → logprob: -3.592050075531006
    4. '
' → logprob: -4.467050075531006
    5. 'for' → logprob: -6.217050075531006
    6. '	for' → logprob: -7.467050075531006
    7. ',' → logprob: -7.842050075531006
    8. ' ' → logprob: -8.592050552368164
    9. '<|end|>' → logprob: -9.092050552368164
    10. '    
' → logprob: -9.967050552368164

Token 109: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013092710636556149
    2. ' for' → logprob: -4.888092517852783
    3. '   ' → logprob: -5.513092517852783
    4. 'm' (adapté à ' m') → logprob: -7.013092517852783
    5. 'md' → logprob: -8.513092994689941
    6. 'sm' → logprob: -8.638092994689941
    7. 'i' → logprob: -9.763092994689941
    8. 'while' → logprob: -10.763092994689941
    9. ' m' → logprob: -10.888092994689941
    10. '	for' → logprob: -11.763092994689941

Token 110: 'da' (ID: 2529)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7532753348350525
    2. 'for' → logprob: -0.8782753348350525
    3. ' =' → logprob: -3.3782753944396973
    4. '=' → logprob: -3.5032753944396973
    5. 'da' → logprob: -3.7532753944396973
    6. 'def' → logprob: -4.878275394439697
    7. 'a' → logprob: -5.628275394439697
    8. 'm' → logprob: -6.378275394439697
    9. 'od' → logprob: -6.378275394439697
    10. 'ax' → logprob: -6.378275394439697

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11093134433031082
    2. ' =' → logprob: -2.610931396484375
    3. '=' → logprob: -3.485931396484375
    4. '_' → logprob: -7.985931396484375
    5. ' ' → logprob: -8.235931396484375
    6. 'x' → logprob: -9.360931396484375
    7. ' +=' → logprob: -9.860931396484375
    8. ',' → logprob: -9.860931396484375
    9. '  ' → logprob: -10.610931396484375
    10. '+=' → logprob: -10.985931396484375

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6337095499038696
    2. '=' → logprob: -0.7587095499038696
    3. ',' → logprob: -7.63370943069458
    4. '_' → logprob: -7.75870943069458
    5. ' +=' → logprob: -9.508709907531738
    6. '[' → logprob: -10.008709907531738
    7. ' ' → logprob: -10.508709907531738
    8. '+=' → logprob: -10.633709907531738
    9. '=[]' → logprob: -12.508709907531738
    10. '   ' → logprob: -12.883709907531738

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09305118769407272
    2. ' ' → logprob: -2.7180511951446533
    3. '[' → logprob: -4.343050956726074
    4. ' [' → logprob: -4.718050956726074
    5. '[]' → logprob: -7.968050956726074
    6. ' []' → logprob: -9.218050956726074
    7. 'md' → logprob: -9.343050956726074
    8. ' md' → logprob: -9.593050956726074
    9. '{}' → logprob: -9.593050956726074
    10. '[m' → logprob: -10.093050956726074

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030606860294938087
    2. '[' → logprob: -3.655606746673584
    3. 'md' → logprob: -5.905606746673584
    4. '[]' → logprob: -7.405606746673584
    5. ' ' → logprob: -8.405607223510742
    6. 'float' → logprob: -8.780607223510742
    7. '{}' → logprob: -9.405607223510742
    8. ' [' → logprob: -9.530607223510742
    9. '[m' → logprob: -9.655607223510742
    10. '[K' → logprob: -9.655607223510742

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053841546177864075
    2. '   ' → logprob: -3.1788415908813477
    3. ' for' → logprob: -4.928841590881348
    4. '<|end|>' → logprob: -6.178841590881348
    5. '    
' → logprob: -7.553841590881348
    6. 'for' → logprob: -7.928841590881348
    7. '	for' → logprob: -8.928841590881348
    8. '  
' → logprob: -9.053841590881348
    9. '
' → logprob: -9.303841590881348
    10. '<|end|>' → logprob: -9.553841590881348

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29470548033714294
    2. ' for' → logprob: -1.4197055101394653
    3. '
' → logprob: -4.794705390930176
    4. 'for' → logprob: -5.419705390930176
    5. '	for' → logprob: -7.544705390930176
    6. '<|end|>' → logprob: -8.794705390930176
    7. '    
' → logprob: -10.044705390930176
    8. ',' → logprob: -11.544705390930176
    9. ' ' → logprob: -11.919705390930176
    10. '<|end|>' → logprob: -12.794705390930176

Token 117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2948996126651764
    2. ' for' → logprob: -1.544899582862854
    3. '   ' → logprob: -3.1698997020721436
    4. '
' → logprob: -11.044899940490723
    5. '	for' → logprob: -11.169899940490723
    6. 'i' → logprob: -11.544899940490723
    7. ' i' → logprob: -11.794899940490723
    8. ' ' → logprob: -13.544899940490723
    9. '```' → logprob: -13.669899940490723
    10. '  ' → logprob: -14.169899940490723

Token 118: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015252886340022087
    2. 'i' → logprob: -4.265253067016602
    3. ' md' → logprob: -7.890253067016602
    4. ' _' → logprob: -8.765253067016602
    5. ' idx' → logprob: -9.140253067016602
    6. ' j' → logprob: -9.140253067016602
    7. ' k' → logprob: -9.765253067016602
    8. ' d' → logprob: -10.265253067016602
    9. 'd' → logprob: -10.390253067016602
    10. '_' → logprob: -10.390253067016602

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01111183688044548
    2. 'in' → logprob: -4.511111736297607
    3. ' ' → logprob: -10.136112213134766
    4. ',' → logprob: -11.511112213134766
    5. 'range' → logprob: -12.761112213134766
    6. '   ' → logprob: -13.136112213134766
    7. '```' → logprob: -13.386112213134766
    8. ')' → logprob: -13.886112213134766
    9. '  ' → logprob: -13.886112213134766
    10. '	in' → logprob: -14.011112213134766

Token 120: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519441843032837
    2. 'range' → logprob: -1.5019441843032837
    3. ' ' → logprob: -12.251944541931152
    4. '(range' → logprob: -12.501944541931152
    5. '	range' → logprob: -12.501944541931152
    6. ' xrange' → logprob: -14.376944541931152
    7. '   ' → logprob: -14.501944541931152
    8. 'ange' → logprob: -14.626944541931152
    9. '  ' → logprob: -15.001944541931152
    10. ' ' → logprob: -15.626944541931152

Token 121: '(limit' (ID: 112473)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0006339243846014142
    2. '(' → logprob: -7.375633716583252
    3. '(len' → logprob: -12.62563419342041
    4. 'K' → logprob: -13.50063419342041
    5. ' K' → logprob: -14.00063419342041
    6. ' (' → logprob: -14.25063419342041
    7. '(k' → logprob: -15.00063419342041
    8. '(M' → logprob: -15.62563419342041
    9. '((' → logprob: -16.250633239746094
    10. '(
' → logprob: -16.375633239746094

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019165901467204094
    2. '):
' → logprob: -4.019165992736816
    3. ' ):' → logprob: -7.269165992736816
    4. '+' → logprob: -8.394165992736816
    5. ':' → logprob: -10.019165992736816
    6. '   ' → logprob: -10.644165992736816
    7. ' ):
' → logprob: -11.519165992736816
    8. ',' → logprob: -12.769165992736816
    9. ')' → logprob: -12.894165992736816
    10. '-' → logprob: -13.144165992736816

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07543467730283737
    2. ':' → logprob: -2.950434684753418
    3. ':
' → logprob: -4.450434684753418
    4. '   ' → logprob: -6.200434684753418
    5. ' if' → logprob: -6.450434684753418
    6. ' :' → logprob: -6.700434684753418
    7. '<|end|>' → logprob: -6.950434684753418
    8. ' :
' → logprob: -7.575434684753418
    9. '+' → logprob: -7.700434684753418
    10. 'if' → logprob: -8.075434684753418

Token 124: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2199804782867432
    2. ' if' → logprob: -1.3449804782867432
    3. ' sm' → logprob: -2.094980478286743
    4. '       ' → logprob: -2.094980478286743
    5. 'if' (adapté à ' if') → logprob: -2.469980478286743
    6. 'sm' → logprob: -2.969980478286743
    7. 'md' → logprob: -3.844980478286743
    8. ' md' → logprob: -4.094980239868164
    9. ' m' → logprob: -4.219980239868164
    10. 'm' → logprob: -5.469980239868164

Token 125: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.011334630660712719
    2. 'md' → logprob: -4.761334419250488
    3. ' sm' → logprob: -7.011334419250488
    4. ' (' → logprob: -7.511334419250488
    5. '(md' → logprob: -7.636334419250488
    6. ' i' → logprob: -7.761334419250488
    7. ' not' → logprob: -9.136334419250488
    8. 'i' → logprob: -9.886334419250488
    9. '(' → logprob: -10.386334419250488
    10. '	md' → logprob: -10.511334419250488

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009769558673724532
    2. '[' → logprob: -7.000977039337158
    3. ' [' → logprob: -10.3759765625
    4. '```' → logprob: -11.6259765625
    5. '[I' → logprob: -12.1259765625
    6. '==' → logprob: -12.5009765625
    7. 'i' → logprob: -13.3759765625
    8. '[m' → logprob: -13.5009765625
    9. '[j' → logprob: -13.5009765625
    10. '\[' → logprob: -13.8759765625

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09052950143814087
    2. ']==' → logprob: -3.215529441833496
    3. '==' → logprob: -4.840529441833496
    4. '[' → logprob: -4.965529441833496
    5. ' ]' → logprob: -4.965529441833496
    6. ']:' → logprob: -4.965529441833496
    7. ']>' → logprob: -5.590529441833496
    8. '%' → logprob: -5.590529441833496
    9. ' ==' → logprob: -5.715529441833496
    10. '>' → logprob: -6.090529441833496

Token 128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7429053783416748
    2. ' ==' → logprob: -0.9929053783416748
    3. '>' → logprob: -2.617905378341675
    4. ' >=' → logprob: -4.117905616760254
    5. ' >' → logprob: -4.492905616760254
    6. ' <' → logprob: -4.492905616760254
    7. '>=' → logprob: -4.742905616760254
    8. '<' → logprob: -5.117905616760254
    9. '%' → logprob: -5.117905616760254
    10. ':' → logprob: -5.492905616760254

Token 129: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39111360907554626
    2. '0' → logprob: -1.1411136388778687
    3. '1' → logprob: -5.891113758087158
    4. ' md' → logprob: -8.01611328125
    5. 'md' → logprob: -8.14111328125
    6. ' m' → logprob: -8.26611328125
    7. 'm' → logprob: -8.64111328125
    8. ' i' → logprob: -9.64111328125
    9. ' K' → logprob: -10.07861328125
    10. '   ' → logprob: -10.32861328125

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005231393966823816
    2. '1' → logprob: -5.8802313804626465
    3. 'm' → logprob: -7.1302313804626465
    4. ' ' → logprob: -7.2552313804626465
    5. '-' → logprob: -8.255231857299805
    6. 'i' → logprob: -8.755231857299805
    7. 'md' → logprob: -8.880231857299805
    8. 'K' → logprob: -9.005231857299805
    9. '2' → logprob: -10.005231857299805
    10. 'sm' → logprob: -10.130231857299805

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08933135122060776
    2. ':
' → logprob: -2.4643313884735107
    3. ' and' → logprob: -7.964331150054932
    4. '       ' → logprob: -11.21433162689209
    5. ' or' → logprob: -11.83933162689209
    6. 'and' → logprob: -11.83933162689209
    7. ':
' → logprob: -12.71433162689209
    8. ':

' → logprob: -12.83933162689209
    9. '):
' → logprob: -12.96433162689209
    10. '<|end|>' → logprob: -13.21433162689209

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005304077640175819
    2. ':' → logprob: -5.755303859710693
    3. 'm' → logprob: -7.505303859710693
    4. ' m' → logprob: -8.130304336547852
    5. ':
' → logprob: -8.255304336547852
    6. '       ' → logprob: -8.380304336547852
    7. 'sm' → logprob: -8.505304336547852
    8. ',' → logprob: -9.255304336547852
    9. '          ' → logprob: -9.505304336547852
    10. ' sm' → logprob: -9.505304336547852

Token 133: ' m' (ID: 284)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.5643560290336609
    2. 'sm' → logprob: -1.0643560886383057
    3. ' m' → logprob: -3.3143560886383057
    4. 'm' (adapté à ' m') → logprob: -3.4393560886383057
    5. '               ' → logprob: -4.189355850219727
    6. '           ' → logprob: -6.064355850219727
    7. '   ' → logprob: -9.189355850219727
    8. '       ' → logprob: -9.564355850219727
    9. 's' → logprob: -10.064355850219727
    10. '	sm' → logprob: -10.189355850219727

Token 134: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.00011391390580683947
    2. 'd' → logprob: -10.250113487243652
    3. 'a' → logprob: -10.500113487243652
    4. 'oda' → logprob: -11.125113487243652
    5. 'm' → logprob: -11.750113487243652
    6. 'dae' → logprob: -12.125113487243652
    7. '```' → logprob: -12.875113487243652
    8. 'do' → logprob: -12.875113487243652
    9. 'dao' → logprob: -13.375113487243652
    10. '   ' → logprob: -13.500113487243652

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.135819760151207e-05
    2. '+=' → logprob: -9.87507152557373
    3. ' +=' → logprob: -11.25007152557373
    4. '=' → logprob: -12.62507152557373
    5. '+' → logprob: -13.12507152557373
    6. ' ' → logprob: -15.25007152557373
    7. 'o' → logprob: -15.25007152557373
    8. '
' → logprob: -15.93757152557373
    9. ' =' → logprob: -16.125070571899414
    10. '```' → logprob: -16.312570571899414

Token 136: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3869105577468872
    2. ' +=' → logprob: -1.1369105577468872
    3. '=' → logprob: -10.636910438537598
    4. '+' → logprob: -12.011910438537598
    5. ']+=' → logprob: -12.136910438537598
    6. '   ' → logprob: -14.136910438537598
    7. ' =' → logprob: -14.261910438537598
    8. '       ' → logprob: -14.761910438537598
    9. '           ' → logprob: -14.761910438537598
    10. ' ' → logprob: -14.886910438537598

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00486844964325428
    2. ' ' → logprob: -5.379868507385254
    3. 'D' → logprob: -8.754868507385254
    4. 'K' → logprob: -10.004868507385254
    5. ' D' → logprob: -11.379868507385254
    6. '   ' → logprob: -12.004868507385254
    7. ' K' → logprob: -12.129868507385254
    8. 'md' → logprob: -12.129868507385254
    9. 'i' → logprob: -12.379868507385254
    10. '0' → logprob: -13.254868507385254

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.2576454335358e-05
    2. 'K' → logprob: -10.500092506408691
    3. 'D' → logprob: -10.625092506408691
    4. ' ' → logprob: -10.625092506408691
    5. 'md' → logprob: -11.875092506408691
    6. '0' → logprob: -13.125092506408691
    7. 'i' → logprob: -13.500092506408691
    8. 'm' → logprob: -13.750092506408691
    9. 'sm' → logprob: -14.000092506408691
    10. 'd' → logprob: -14.625092506408691

Token 139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0351102277636528
    2. '
' → logprob: -4.410109996795654
    3. ' else' → logprob: -4.660109996795654
    4. 'else' → logprob: -5.160109996795654
    5. '<|end|>' → logprob: -5.160109996795654
    6. '   ' → logprob: -7.160109996795654
    7. '<|end|>' → logprob: -8.785110473632812
    8. '```' → logprob: -9.785110473632812
    9. 'return' → logprob: -9.910110473632812
    10. '	else' → logprob: -10.285110473632812

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010093079879879951
    2. 'else' → logprob: -5.0100932121276855
    3. ' else' → logprob: -6.0100932121276855
    4. '   ' → logprob: -7.3850932121276855
    5. 'return' → logprob: -9.010092735290527
    6. 'sm' → logprob: -10.010092735290527
    7. ' sm' → logprob: -10.885092735290527
    8. 'elif' → logprob: -10.885092735290527
    9. '<|end|>' → logprob: -11.135092735290527
    10. '```' → logprob: -11.135092735290527

Token 141: ' sm' (ID: 1765)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7375386953353882
    2. ' else' → logprob: -0.8625386953353882
    3. '       ' → logprob: -2.7375388145446777
    4. ' sm' → logprob: -4.612538814544678
    5. 'sm' (adapté à ' sm') → logprob: -4.737538814544678
    6. '   ' → logprob: -4.737538814544678
    7. 'elif' → logprob: -5.112538814544678
    8. ' elif' → logprob: -6.862538814544678
    9. '    ' → logprob: -9.36253833770752
    10. '  ' → logprob: -10.11253833770752

Token 142: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -12.750003814697266
    3. 'ada' → logprob: -14.875003814697266
    4. 'a' → logprob: -15.375003814697266
    5. ' da' → logprob: -15.750003814697266
    6. 'да' → logprob: -16.125003814697266
    7. 'd' → logprob: -16.875003814697266
    8. '  ' → logprob: -17.750003814697266
    9. 'ida' → logprob: -17.875003814697266
    10. ' ' → logprob: -18.125003814697266

Token 143: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16050204634666443
    2. ' +=' → logprob: -1.9105020761489868
    3. '=' → logprob: -8.910502433776855
    4. '+' → logprob: -9.035502433776855
    5. ']+=' → logprob: -11.160502433776855
    6. '+=(' → logprob: -13.285502433776855
    7. '   ' → logprob: -13.410502433776855
    8. ',' → logprob: -13.910502433776855
    9. '```' → logprob: -14.160502433776855
    10. '+='' → logprob: -14.160502433776855

Token 144: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.12714019417762756
    2. ' md' → logprob: -2.1271402835845947
    3. '1' → logprob: -9.252140045166016
    4. '(md' → logprob: -10.377140045166016
    5. 'm' → logprob: -10.627140045166016
    6. '   ' → logprob: -11.377140045166016
    7. '	md' → logprob: -11.502140045166016
    8. '0' → logprob: -12.002140045166016
    9. ' ' → logprob: -12.502140045166016
    10. 'abs' → logprob: -12.627140045166016

Token 145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019150081789121032
    2. '[' → logprob: -8.625191688537598
    3. '```' → logprob: -11.875191688537598
    4. 'i' → logprob: -13.375191688537598
    5. '[
' → logprob: -13.500191688537598
    6. ' [' → logprob: -14.250191688537598
    7. '\[' → logprob: -14.625191688537598
    8. '`' → logprob: -15.125191688537598
    9. '[I' → logprob: -16.12519073486328
    10. '[s' → logprob: -16.75019073486328

Token 146: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20507843792438507
    2. ')' → logprob: -1.7050784826278687
    3. '[i' → logprob: -6.330078601837158
    4. '])' → logprob: -6.955078601837158
    5. ')]' → logprob: -8.080078125
    6. '[' → logprob: -8.205078125
    7. ' ]' → logprob: -8.705078125
    8. '<|end|>' → logprob: -9.830078125
    9. ' )' → logprob: -10.330078125
    10. '   ' → logprob: -10.580078125

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001767170149832964
    2. ' return' → logprob: -7.251767158508301
    3. '<|end|>' → logprob: -8.0017671585083
    4. '    
' → logprob: -8.1267671585083
    5. 'return' → logprob: -9.2517671585083
    6. '	return' → logprob: -9.3767671585083
    7. '       ' → logprob: -9.5017671585083
    8. ' 
' → logprob: -10.0017671585083
    9. ' ' → logprob: -10.5017671585083
    10. '
' → logprob: -10.8767671585083

Token 148: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13201306760311127
    2. ' return' → logprob: -2.2570130825042725
    3. 'return' (adapté à ' return') → logprob: -4.132012844085693
    4. ' ' → logprob: -6.507012844085693
    5. '	return' → logprob: -7.132012844085693
    6. '<|end|>' → logprob: -7.757012844085693
    7. '    
' → logprob: -9.757013320922852
    8. '
' → logprob: -10.007013320922852
    9. ':return' → logprob: -10.257013320922852
    10. ' 
' → logprob: -10.507013320922852

Token 149: ' sm' (ID: 1765)
  Prédit: ' sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.12883558869361877
    2. 'sm' → logprob: -2.128835678100586
    3. '(sm' → logprob: -6.378835678100586
    4. ' (' → logprob: -8.753835678100586
    5. '(' → logprob: -10.128835678100586
    6. '(s' → logprob: -12.003835678100586
    7. '   ' → logprob: -13.003835678100586
    8. '	sm' → logprob: -13.753835678100586
    9. ' ' → logprob: -14.753835678100586
    10. 's' → logprob: -15.003835678100586

Token 150: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.0003430912329349667
    2. 'a' → logprob: -8.125343322753906
    3. 'ada' → logprob: -10.125343322753906
    4. 'oda' → logprob: -13.000343322753906
    5. 'да' → logprob: -13.500343322753906
    6. 'sm' → logprob: -14.500343322753906
    7. ' da' → logprob: -14.500343322753906
    8. 'ad' → logprob: -15.125343322753906
    9. 'eda' → logprob: -15.250343322753906
    10. '   ' → logprob: -15.500343322753906

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02066088654100895
    2. ',m' → logprob: -3.895660877227783
    3. ' ,' → logprob: -9.395661354064941
    4. '<|end|>' → logprob: -11.020661354064941
    5. 'm' → logprob: -11.145661354064941
    6. ' m' → logprob: -13.145661354064941
    7. '+' → logprob: -13.895661354064941
    8. ',module' → logprob: -14.895661354064941
    9. '<|end|>' → logprob: -15.270661354064941
    10. ',
' → logprob: -15.645661354064941

Token 152: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0028053484857082367
    2. 'm' → logprob: -5.877805233001709
    3. ' ' → logprob: -15.752805709838867
    4. ' ' → logprob: -15.877805709838867
    5. 'md' → logprob: -15.877805709838867
    6. '	m' → logprob: -17.502805709838867
    7. '0' → logprob: -17.877805709838867
    8. ' md' → logprob: -17.877805709838867
    9. ' sm' → logprob: -18.502805709838867
    10. '```' → logprob: -18.627805709838867

Token 153: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.00023154958034865558
    2. '0' → logprob: -9.250231742858887
    3. 'm' → logprob: -9.250231742858887
    4. 'd' → logprob: -10.500231742858887
    5. 'dae' → logprob: -13.125231742858887
    6. 'dao' → logprob: -13.875231742858887
    7. '_da' → logprob: -14.250231742858887
    8. 'xda' → logprob: -14.250231742858887
    9. ' da' → logprob: -14.625231742858887
    10. '```' → logprob: -14.625231742858887

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. 'o' → logprob: -12.500008583068848
    3. ' ' → logprob: -12.875008583068848
    4. 'm' → logprob: -14.000008583068848
    5. '_' → logprob: -14.500008583068848
    6. 'a' → logprob: -14.625008583068848
    7. 'O' → logprob: -16.500009536743164
    8. 'x' → logprob: -16.687509536743164
    9. 'r' → logprob: -16.750009536743164
    10. '00' → logprob: -17.062509536743164

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00027933192905038595
    2. 'import' → logprob: -8.500279426574707
    3. 'if' → logprob: -10.250279426574707
    4. 'for' → logprob: -10.750279426574707
    5. '#' → logprob: -11.250279426574707
    6. '```' → logprob: -13.125279426574707
    7. 'from' → logprob: -14.000279426574707
    8. ' def' → logprob: -14.125279426574707
    9. '<|end|>' → logprob: -14.250279426574707
    10. 'K' → logprob: -15.625279426574707

Token 157: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.055104780942201614
    2. ' solve' → logprob: -3.3051047325134277
    3. ' process' → logprob: -4.430104732513428
    4. 'main' → logprob: -6.305104732513428
    5. ' compute' → logprob: -6.930104732513428
    6. ' mod' → logprob: -7.930104732513428
    7. 'solve' → logprob: -8.055105209350586
    8. ' run' → logprob: -8.180105209350586
    9. ' count' → logprob: -8.805105209350586
    10. '_main' → logprob: -9.055105209350586

Token 158: '_s' (ID: 1278)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.7661094069480896
    2. '_m' → logprob: -1.8911094665527344
    3. '_md' → logprob: -2.0161094665527344
    4. '_max' → logprob: -3.2661094665527344
    5. '_sum' → logprob: -4.016109466552734
    6. '_s' → logprob: -4.016109466552734
    7. '_prefix' → logprob: -4.266109466552734
    8. '_min' → logprob: -4.516109466552734
    9. '_l' → logprob: -5.016109466552734
    10. '_diff' → logprob: -5.141109466552734

Token 159: 'md' (ID: 3978)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00850299745798111
    2. 'um' → logprob: -5.383502960205078
    3. 'md' → logprob: -6.383502960205078
    4. 'ub' → logprob: -7.383502960205078
    5. 'uffix' → logprob: -7.633502960205078
    6. 'ma' → logprob: -8.758502960205078
    7. 'mma' → logprob: -9.008502960205078
    8. 'd' → logprob: -9.633502960205078
    9. 'mall' → logprob: -9.758502960205078
    10. '_m' → logprob: -9.758502960205078

Token 160: '_md' (ID: 82641)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001789881061995402
    2. 'alist' → logprob: -9.125179290771484
    3. '_a' → logprob: -11.125179290771484
    4. '(md' → logprob: -11.625179290771484
    5. 'al' → logprob: -11.750179290771484
    6. 'd' → logprob: -12.375179290771484
    7. 'md' → logprob: -12.375179290771484
    8. '(a' → logprob: -12.625179290771484
    9. 'A' → logprob: -13.000179290771484
    10. 'b' → logprob: -13.000179290771484

Token 161: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6628655791282654
    2. '(md' → logprob: -0.9128655791282654
    3. '(K' → logprob: -2.78786563873291
    4. '(D' → logprob: -4.66286563873291
    5. '(m' → logprob: -5.78786563873291
    6. '(a' → logprob: -6.41286563873291
    7. '(d' → logprob: -6.53786563873291
    8. '(M' → logprob: -7.03786563873291
    9. '(k' → logprob: -7.41286563873291
    10. '(' → logprob: -7.78786563873291

Token 162: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.003964774310588837
    2. '(sm' → logprob: -5.628964900970459
    3. '(m' → logprob: -8.6289644241333
    4. 'md' → logprob: -9.8789644241333
    5. '(s' → logprob: -10.0039644241333
    6. '(sd' → logprob: -11.2539644241333
    7. '_md' → logprob: -11.2539644241333
    8. 'sm' → logprob: -11.6289644241333
    9. '(' → logprob: -11.6289644241333
    10. 's' → logprob: -11.8789644241333

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002497767563909292
    2. '):' → logprob: -8.625249862670898
    3. ' ,' → logprob: -10.375249862670898
    4. ',K' → logprob: -10.875249862670898
    5. '):
' → logprob: -11.375249862670898
    6. ',
' → logprob: -13.250249862670898
    7. '0' → logprob: -13.375249862670898
    8. 'K' → logprob: -13.750249862670898
    9. '_,' → logprob: -14.750249862670898
    10. ')' → logprob: -14.875249862670898

Token 164: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11837823688983917
    2. ' K' → logprob: -2.243378162384033
    3. 'm' → logprob: -5.868378162384033
    4. 'md' → logprob: -6.618378162384033
    5. 'limit' → logprob: -7.368378162384033
    6. ' m' → logprob: -8.368378639221191
    7. ' limit' → logprob: -8.993378639221191
    8. ' md' → logprob: -9.368378639221191
    9. 'len' → logprob: -9.743378639221191
    10. 'def' → logprob: -10.118378639221191

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005918366368860006
    2. '):' → logprob: -5.255918502807617
    3. '):
' → logprob: -7.505918502807617
    4. '0' → logprob: -9.755918502807617
    5. ' ,' → logprob: -10.880918502807617
    6. ',i' → logprob: -11.005918502807617
    7. '   ' → logprob: -11.505918502807617
    8. ')' → logprob: -11.880918502807617
    9. ',
' → logprob: -12.755918502807617
    10. '):
' → logprob: -12.755918502807617

Token 166: ' start' (ID: 1604)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.41214603185653687
    2. ' limit' → logprob: -1.1621460914611816
    3. 'K' → logprob: -3.9121460914611816
    4. ' K' → logprob: -5.537146091461182
    5. 'm' → logprob: -7.537146091461182
    6. ' m' → logprob: -8.787145614624023
    7. 'md' → logprob: -9.162145614624023
    8. '0' → logprob: -10.349645614624023
    9. '   ' → logprob: -10.537145614624023
    10. ' ' → logprob: -10.849645614624023

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18208260834217072
    2. '):
' → logprob: -2.4320826530456543
    3. ',' → logprob: -2.5570826530456543
    4. '=' → logprob: -7.682082653045654
    5. '+' → logprob: -8.807082176208496
    6. '):
' → logprob: -9.557082176208496
    7. '):

' → logprob: -9.557082176208496
    8. 'index' → logprob: -9.932082176208496
    9. '   ' → logprob: -10.057082176208496
    10. ')' → logprob: -10.057082176208496

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019821643363684416
    2. ' sm' → logprob: -6.87698221206665
    3. ':' → logprob: -8.126981735229492
    4. ':
' → logprob: -8.126981735229492
    5. ',' → logprob: -8.751981735229492
    6. 'sm' → logprob: -9.376981735229492
    7. ' limit' → logprob: -10.626981735229492
    8. 'def' → logprob: -11.251981735229492
    9. 's' → logprob: -11.501981735229492
    10. '):
' → logprob: -11.501981735229492

Token 169: ' sm' (ID: 1765)
  Prédit: ' sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.7194899320602417
    2. 'sm' (adapté à ' sm') → logprob: -1.4694899320602417
    3. '   ' → logprob: -1.5944899320602417
    4. 's' → logprob: -2.5944900512695312
    5. ' s' → logprob: -5.469490051269531
    6. 'md' → logprob: -7.469490051269531
    7. 'def' → logprob: -9.344490051269531
    8. ' md' → logprob: -9.719490051269531
    9. 'm' → logprob: -10.094490051269531
    10. '
' → logprob: -10.219490051269531

Token 170: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0149467708542943
    2. 'da' → logprob: -4.264946937561035
    3. '=' → logprob: -7.514946937561035
    4. '   ' → logprob: -8.889946937561035
    5. ' =' → logprob: -9.389946937561035
    6. 'md' → logprob: -12.264946937561035
    7. '  ' → logprob: -12.889946937561035
    8. 'a' → logprob: -13.389946937561035
    9. 'def' → logprob: -13.889946937561035
    10. '_da' → logprob: -14.014946937561035

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5810564756393433
    2. ' =' → logprob: -0.8310564756393433
    3. 'a' → logprob: -5.331056594848633
    4. ',' → logprob: -8.706056594848633
    5. '   ' → logprob: -9.331056594848633
    6. '  ' → logprob: -13.331056594848633
    7. ' ' → logprob: -13.456056594848633
    8. 'A' → logprob: -13.456056594848633
    9. ' +=' → logprob: -13.581056594848633
    10. ' ' → logprob: -14.331056594848633

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03853736072778702
    2. ' ' → logprob: -3.2885372638702393
    3. 'md' → logprob: -8.53853702545166
    4. 'sum' → logprob: -9.03853702545166
    5. ' sum' → logprob: -9.28853702545166
    6. ' md' → logprob: -9.53853702545166
    7. '=' → logprob: -11.91353702545166
    8. '   ' → logprob: -12.66353702545166
    9. ' =' → logprob: -13.91353702545166
    10. '  ' → logprob: -14.28853702545166

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002694555325433612
    2. ' ' → logprob: -6.002694606781006
    3. 'sum' → logprob: -9.127694129943848
    4. 'md' → logprob: -9.377694129943848
    5. ' sum' → logprob: -11.627694129943848
    6. '[' → logprob: -12.377694129943848
    7. ' md' → logprob: -12.377694129943848
    8. 'm' → logprob: -13.627694129943848
    9. ' [' → logprob: -13.940194129943848
    10. '   ' → logprob: -14.065194129943848

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19879892468452454
    2. '   ' → logprob: -1.8237988948822021
    3. '<|end|>' → logprob: -4.198799133300781
    4. ',' → logprob: -6.573799133300781
    5. ' for' → logprob: -7.073799133300781
    6. '<|end|>' → logprob: -7.698799133300781
    7. '    
' → logprob: -8.073799133300781
    8. ' 
' → logprob: -8.448799133300781
    9. '	for' → logprob: -9.073799133300781
    10. ',
' → logprob: -9.323799133300781

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06868457794189453
    2. '
' → logprob: -2.9436845779418945
    3. ' for' → logprob: -5.0686845779418945
    4. 'for' → logprob: -5.6936845779418945
    5. ',' → logprob: -5.9436845779418945
    6. 'md' → logprob: -7.4436845779418945
    7. '<|end|>' → logprob: -7.8186845779418945
    8. 'm' → logprob: -9.318684577941895
    9. '	for' → logprob: -9.943684577941895
    10. 'def' → logprob: -10.193684577941895

Token 176: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' (adapté à ' md') → logprob: -0.43016448616981506
    2. 'm' → logprob: -1.3051644563674927
    3. ' md' → logprob: -3.0551645755767822
    4. ' m' → logprob: -3.6801645755767822
    5. '   ' → logprob: -5.305164337158203
    6. 'for' → logprob: -7.680164337158203
    7. ' for' → logprob: -8.430164337158203
    8. '       ' → logprob: -8.805164337158203
    9. '    ' → logprob: -8.930164337158203
    10. ' ' → logprob: -10.055164337158203

Token 177: '0' (ID: 15)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.18391011655330658
    2. '[' → logprob: -1.9339101314544678
    3. '0' → logprob: -4.308909893035889
    4. '=' → logprob: -5.808909893035889
    5. '[
' → logprob: -6.433909893035889
    6. '<|end|>' → logprob: -6.433909893035889
    7. ',' → logprob: -7.058909893035889
    8. ' =' → logprob: -7.558909893035889
    9. '[s' → logprob: -7.933909893035889
    10. '```' → logprob: -8.058910369873047

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6957882046699524
    2. ' =' → logprob: -0.6957882046699524
    3. ' +=' → logprob: -6.445788383483887
    4. '[' → logprob: -7.945788383483887
    5. '+=' → logprob: -8.195788383483887
    6. ',' → logprob: -8.445788383483887
    7. '   ' → logprob: -9.695788383483887
    8. '==' → logprob: -10.195788383483887
    9. ' ' → logprob: -10.570788383483887
    10. ' ==' → logprob: -10.945788383483887

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02976229228079319
    2. ' ' → logprob: -3.5297622680664062
    3. 'start' → logprob: -12.154762268066406
    4. '   ' → logprob: -13.154762268066406
    5. '1' → logprob: -13.154762268066406
    6. ' start' → logprob: -14.717262268066406
    7. '  ' → logprob: -15.154762268066406
    8. '[]' → logprob: -15.154762268066406
    9. '=' → logprob: -15.217262268066406
    10. '[' → logprob: -15.842262268066406

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020973898062948138
    2. ' ' → logprob: -8.50020980834961
    3. 'start' → logprob: -12.25020980834961
    4. '-' → logprob: -14.62520980834961
    5. '1' → logprob: -15.37520980834961
    6. '[]' → logprob: -15.75020980834961
    7. 'K' → logprob: -16.43770980834961
    8. ' -' → logprob: -16.43770980834961
    9. '=' → logprob: -16.75020980834961
    10. ' start' → logprob: -16.87520980834961

Token 181: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5630358457565308
    2. '   ' → logprob: -0.9380358457565308
    3. '<|end|>' → logprob: -3.3130359649658203
    4. ' for' → logprob: -6.43803596496582
    5. '<|end|>' → logprob: -8.31303596496582
    6. '	for' → logprob: -8.56303596496582
    7. '    
' → logprob: -8.81303596496582
    8. 'for' → logprob: -8.81303596496582
    9. ',' → logprob: -8.93803596496582
    10. ',
' → logprob: -10.31303596496582

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000913370808120817
    2. ' for' → logprob: -7.625913143157959
    3. 'for' → logprob: -8.000913619995117
    4. '	for' → logprob: -9.500913619995117
    5. '
' → logprob: -11.500913619995117
    6. ',' → logprob: -13.250913619995117
    7. '<|end|>' → logprob: -13.500913619995117
    8. '    
' → logprob: -14.125913619995117
    9. 'def' → logprob: -15.250913619995117
    10. '   ' → logprob: -15.500913619995117

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0076987906359136105
    2. ' for' → logprob: -5.257699012756348
    3. '   ' → logprob: -6.007699012756348
    4. '	for' → logprob: -13.132699012756348
    5. '
' → logprob: -16.50769805908203
    6. 'i' → logprob: -16.88269805908203
    7. '```' → logprob: -17.13269805908203
    8. 'range' → logprob: -17.63269805908203
    9. ' ' → logprob: -19.00769805908203
    10. 'def' → logprob: -19.13269805908203

Token 184: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759827494621277
    2. 'i' → logprob: -0.8259827494621277
    3. '	i' → logprob: -11.075983047485352
    4. 'j' → logprob: -12.200983047485352
    5. '   ' → logprob: -12.200983047485352
    6. ' j' → logprob: -12.325983047485352
    7. ' ' → logprob: -12.700983047485352
    8. '_i' → logprob: -13.075983047485352
    9. 'range' → logprob: -14.200983047485352
    10. '```' → logprob: -14.200983047485352

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004642779938876629
    2. 'in' → logprob: -5.379642963409424
    3. 'range' → logprob: -11.379642486572266
    4. ' ' → logprob: -12.004642486572266
    5. ' range' → logprob: -13.629642486572266
    6. ',' → logprob: -14.379642486572266
    7. '   ' → logprob: -14.379642486572266
    8. '[start' → logprob: -14.754642486572266
    9. 's' → logprob: -15.004642486572266
    10. 'In' → logprob: -15.004642486572266

Token 186: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759885311126709
    2. 'range' → logprob: -0.8259885311126709
    3. 'start' → logprob: -10.57598876953125
    4. ' start' → logprob: -10.82598876953125
    5. '(range' → logprob: -13.70098876953125
    6. ' in' → logprob: -14.32598876953125
    7. ' ' → logprob: -14.45098876953125
    8. '	range' → logprob: -14.45098876953125
    9. ' xrange' → logprob: -15.32598876953125
    10. 'in' → logprob: -15.70098876953125

Token 187: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3893650472164154
    2. '(start' → logprob: -1.1393650770187378
    3. ' start' → logprob: -6.014365196228027
    4. '(' → logprob: -11.014365196228027
    5. '=start' → logprob: -11.639365196228027
    6. '[start' → logprob: -11.764365196228027
    7. '	start' → logprob: -12.514365196228027
    8. '   ' → logprob: -12.514365196228027
    9. ',start' → logprob: -12.889365196228027
    10. ' (' → logprob: -12.889365196228027

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021572799887508154
    2. ' ,' → logprob: -7.002157211303711
    3. '+' → logprob: -7.627157211303711
    4. ',K' → logprob: -7.627157211303711
    5. ',len' → logprob: -9.127157211303711
    6. '   ' → logprob: -9.627157211303711
    7. '):' → logprob: -10.377157211303711
    8. ',start' → logprob: -10.752157211303711
    9. ' +' → logprob: -12.127157211303711
    10. ',k' → logprob: -12.377157211303711

Token 189: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0070177530869841576
    2. ' K' → logprob: -5.007017612457275
    3. 'start' → logprob: -8.257018089294434
    4. ' start' → logprob: -11.382018089294434
    5. '   ' → logprob: -11.757018089294434
    6. 'limit' → logprob: -11.882018089294434
    7. ' ' → logprob: -12.007018089294434
    8. 'len' → logprob: -12.382018089294434
    9. 'min' → logprob: -13.882018089294434
    10. '	K' → logprob: -14.007018089294434

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759928822517395
    2. '):
' → logprob: -0.8259928822517395
    3. ':' → logprob: -10.200992584228516
    4. '   ' → logprob: -11.575992584228516
    5. '):
' → logprob: -12.950992584228516
    6. ':
' → logprob: -13.700992584228516
    7. '+' → logprob: -13.825992584228516
    8. '):

' → logprob: -13.950992584228516
    9. '}:' → logprob: -14.825992584228516
    10. '():
' → logprob: -15.325992584228516

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000776038970798254
    2. ' if' → logprob: -7.5007758140563965
    3. '   ' → logprob: -8.625776290893555
    4. 'if' → logprob: -10.875776290893555
    5. '```' → logprob: -11.875776290893555
    6. '	' → logprob: -12.625776290893555
    7. '<|end|>' → logprob: -12.750776290893555
    8. '	if' → logprob: -13.500776290893555
    9. ':' → logprob: -13.500776290893555
    10. '        
' → logprob: -13.875776290893555

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6560831069946289
    2. ' if' → logprob: -1.531083106994629
    3. '   ' → logprob: -1.906083106994629
    4. '       ' → logprob: -2.156083106994629
    5. 'md' → logprob: -8.906083106994629
    6. '```' → logprob: -9.281083106994629
    7. ' ' → logprob: -9.781083106994629
    8. '	if' → logprob: -10.531083106994629
    9. '    ' → logprob: -10.906083106994629
    10. '     ' → logprob: -11.531083106994629

Token 193: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.6931482553482056
    2. ' md' → logprob: -0.6931482553482056
    3. '	md' → logprob: -14.693148612976074
    4. '(md' → logprob: -15.068148612976074
    5. '   ' → logprob: -15.693148612976074
    6. '.md' → logprob: -15.693148612976074
    7. 'd' → logprob: -17.568147659301758
    8. '    ' → logprob: -18.068147659301758
    9. ' ' → logprob: -18.193147659301758
    10. 'not' → logprob: -18.443147659301758

Token 194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1041145626222715e-05
    2. '[' → logprob: -12.125011444091797
    3. 'i' → logprob: -12.250011444091797
    4. ' [' → logprob: -15.750011444091797
    5. '```' → logprob: -15.750011444091797
    6. '[I' → logprob: -16.250011444091797
    7. ' i' → logprob: -17.500011444091797
    8. '[start' → logprob: -17.500011444091797
    9. '[
' → logprob: -17.625011444091797
    10. '[j' → logprob: -17.625011444091797

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004681814927607775
    2. ']==' → logprob: -5.379681587219238
    3. '[i' → logprob: -10.504681587219238
    4. ' ]' → logprob: -11.004681587219238
    5. '[' → logprob: -11.629681587219238
    6. '==' → logprob: -12.004681587219238
    7. ' ==' → logprob: -13.754681587219238
    8. '[]' → logprob: -14.504681587219238
    9. ']
' → logprob: -15.754681587219238
    10. '']' → logprob: -16.379682540893555

Token 196: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.576165497303009
    2. ' ==' → logprob: -0.826165497303009
    3. ']==' → logprob: -8.951165199279785
    4. '[' → logprob: -9.451165199279785
    5. ')==' → logprob: -11.951165199279785
    6. ']' → logprob: -12.826165199279785
    7. ' ' → logprob: -13.076165199279785
    8. '==
' → logprob: -13.201165199279785
    9. '```' → logprob: -13.576165199279785
    10. '=' → logprob: -13.576165199279785

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282528191804886
    2. ' ' → logprob: -2.237825393676758
    3. '   ' → logprob: -12.987825393676758
    4. '  ' → logprob: -15.237825393676758
    5. ' ' → logprob: -16.237825393676758
    6. '    ' → logprob: -16.737825393676758
    7. '[' → logprob: -17.050325393676758
    8. '       ' → logprob: -17.050325393676758
    9. '=' → logprob: -17.237825393676758
    10. '1' → logprob: -17.362825393676758

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.625139236450195
    4. '=' → logprob: -18.875139236450195
    5. '  ' → logprob: -19.125139236450195
    6. '1' → logprob: -19.250139236450195
    7. '۰' → logprob: -19.250139236450195
    8. '```' → logprob: -19.687639236450195
    9. 'def' → logprob: -19.750139236450195
    10. '00' → logprob: -19.875139236450195

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34205731749534607
    2. ':
' → logprob: -1.5920573472976685
    3. '           ' → logprob: -2.467057228088379
    4. '       ' → logprob: -6.717057228088379
    5. '<|end|>' → logprob: -9.967057228088379
    6. ',' → logprob: -10.717057228088379
    7. '               ' → logprob: -11.342057228088379
    8. '):
' → logprob: -11.342057228088379
    9. '          ' → logprob: -11.592057228088379
    10. '   ' → logprob: -12.217057228088379

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014579739654436707
    2. 'md' → logprob: -6.626458168029785
    3. ' md' → logprob: -9.251458168029785
    4. '       ' → logprob: -11.001458168029785
    5. '0' → logprob: -12.001458168029785
    6. '          ' → logprob: -12.376458168029785
    7. '               ' → logprob: -12.626458168029785
    8. ',' → logprob: -14.126458168029785
    9. ' ' → logprob: -14.251458168029785
    10. '```' → logprob: -14.251458168029785

Token 201: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' (adapté à ' md') → logprob: -0.0049009425565600395
    2. ' md' → logprob: -5.754900932312012
    3. '           ' → logprob: -6.379900932312012
    4. '       ' → logprob: -11.379900932312012
    5. '	md' → logprob: -11.754900932312012
    6. '
' → logprob: -13.379900932312012
    7. '.md' → logprob: -13.754900932312012
    8. '               ' → logprob: -13.879900932312012
    9. '   ' → logprob: -13.879900932312012
    10. ' ' → logprob: -14.754900932312012

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. '[i' → logprob: -18.0
    4. '[' → logprob: -19.25
    5. ' ' → logprob: -19.375
    6. '۰' → logprob: -19.625
    7. '
' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. 'i' → logprob: -21.25
    10. '０' → logprob: -21.625

Token 203: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38687849044799805
    2. '+=' → logprob: -1.136878490447998
    3. ']+=' → logprob: -12.386878967285156
    4. '+' → logprob: -13.511878967285156
    5. '       ' → logprob: -14.761878967285156
    6. '    ' → logprob: -15.261878967285156
    7. '   ' → logprob: -15.261878967285156
    8. '        ' → logprob: -15.261878967285156
    9. '           ' → logprob: -15.511878967285156
    10. '```' → logprob: -16.011878967285156

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751326560974121
    4. '```' → logprob: -17.751325607299805
    5. '       ' → logprob: -17.876325607299805
    6. '0' → logprob: -18.251325607299805
    7. '+' → logprob: -18.438825607299805
    8. ' ' → logprob: -18.813825607299805
    9. '           ' → logprob: -18.813825607299805
    10. '１' → logprob: -19.188825607299805

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -19.68750762939453
    4. '
' → logprob: -19.81250762939453
    5. '```' → logprob: -19.93750762939453
    6. '-' → logprob: -20.12500762939453
    7. '   ' → logprob: -20.18750762939453
    8. '0' → logprob: -20.75000762939453
    9. '１' → logprob: -20.81250762939453
    10. '۱' → logprob: -21.00000762939453

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011612925445660949
    2. '<|end|>' → logprob: -7.001161098480225
    3. 's' → logprob: -8.751161575317383
    4. '<|end|>' → logprob: -9.751161575317383
    5. '        
' → logprob: -12.126161575317383
    6. '```' → logprob: -12.376161575317383
    7. '
' → logprob: -12.501161575317383
    8. ',' → logprob: -12.626161575317383
    9. ' s' → logprob: -13.001161575317383
    10. '	s' → logprob: -13.626161575317383

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025760135613381863
    2. 's' → logprob: -6.002575874328613
    3. '<|end|>' → logprob: -10.002575874328613
    4. '   ' → logprob: -11.002575874328613
    5. '<|end|>' → logprob: -11.252575874328613
    6. '```' → logprob: -11.377575874328613
    7. '	' → logprob: -12.627575874328613
    8. '	s' → logprob: -12.877575874328613
    9. ' s' → logprob: -14.002575874328613
    10. '
' → logprob: -14.127575874328613

Token 208: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006299942615441978
    2. ' sm' → logprob: -7.625629901885986
    3. '       ' → logprob: -9.250630378723145
    4. '```' → logprob: -10.625630378723145
    5. '   ' → logprob: -11.625630378723145
    6. 'sm' (adapté à ' sm') → logprob: -12.750630378723145
    7. 'm' → logprob: -13.125630378723145
    8. 'd' → logprob: -13.250630378723145
    9. 'md' → logprob: -13.375630378723145
    10. ' ' → logprob: -13.750630378723145

Token 209: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.723973582556937e-05
    2. ' d' → logprob: -11.750017166137695
    3. '[i' → logprob: -12.875017166137695
    4. '   ' → logprob: -13.125017166137695
    5. '[' → logprob: -13.375017166137695
    6. '[d' → logprob: -13.500017166137695
    7. ' +=' → logprob: -15.000017166137695
    8. '    ' → logprob: -15.375017166137695
    9. '	d' → logprob: -15.750017166137695
    10. '       ' → logprob: -15.750017166137695

Token 210: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31327590346336365
    2. '+=' → logprob: -1.313275933265686
    3. '+' → logprob: -11.313276290893555
    4. ']+=' → logprob: -14.813276290893555
    5. '=' → logprob: -14.938276290893555
    6. ' ' → logprob: -15.438276290893555
    7. '   ' → logprob: -15.438276290893555
    8. ' +' → logprob: -15.688276290893555
    9. '+="' → logprob: -15.688276290893555
    10. '+='' → logprob: -15.813276290893555

Token 211: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.02975141443312168
    2. ' md' → logprob: -3.5297513008117676
    3. '	md' → logprob: -14.404751777648926
    4. '(md' → logprob: -15.529751777648926
    5. '.md' → logprob: -16.77975082397461
    6. 'mod' → logprob: -17.40475082397461
    7. ' ' → logprob: -17.40475082397461
    8. '_md' → logprob: -19.02975082397461
    9. '   ' → logprob: -19.40475082397461
    10. '
' → logprob: -19.52975082397461

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001322639436693862
    2. '[' → logprob: -9.00013256072998
    3. '```' → logprob: -12.12513256072998
    4. '[
' → logprob: -13.75013256072998
    5. '\[' → logprob: -14.00013256072998
    6. ' [' → logprob: -14.50013256072998
    7. 'i' → logprob: -14.75013256072998
    8. '[I' → logprob: -15.37513256072998
    9. '   ' → logprob: -15.75013256072998
    10. '`' → logprob: -16.125131607055664

Token 213: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3012886941432953
    2. '<|end|>' → logprob: -1.4262887239456177
    3. ']' → logprob: -4.176288604736328
    4. '}' → logprob: -6.426288604736328
    5. '<|end|>' → logprob: -6.426288604736328
    6. '[i' → logprob: -7.176288604736328
    7. '
' → logprob: -8.801288604736328
    8. '   ' → logprob: -8.926288604736328
    9. '[' → logprob: -9.801288604736328
    10. ')
' → logprob: -10.176288604736328

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005440961103886366
    2. ' return' → logprob: -8.000544548034668
    3. '<|end|>' → logprob: -9.375544548034668
    4. 'return' → logprob: -10.000544548034668
    5. '	return' → logprob: -10.000544548034668
    6. '
' → logprob: -10.750544548034668
    7. '<|end|>' → logprob: -12.625544548034668
    8. '       ' → logprob: -12.875544548034668
    9. ',' → logprob: -13.125544548034668
    10. '    
' → logprob: -13.375544548034668

Token 215: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.40776950120925903
    2. '   ' → logprob: -1.4077694416046143
    3. ' return' → logprob: -2.4077694416046143
    4. '	return' → logprob: -9.407769203186035
    5. '
' → logprob: -10.157769203186035
    6. ' ' → logprob: -10.282769203186035
    7. '       ' → logprob: -13.157769203186035
    8. '<|end|>' → logprob: -13.282769203186035
    9. ':return' → logprob: -13.907769203186035
    10. '  ' → logprob: -14.032769203186035

Token 216: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008660420775413513
    2. ' sm' → logprob: -4.758660316467285
    3. '(s' → logprob: -10.008660316467285
    4. ' (' → logprob: -15.008660316467285
    5. 'sm' → logprob: -15.133660316467285
    6. '(' → logprob: -15.633660316467285
    7. ' ' → logprob: -16.3836612701416
    8. '   ' → logprob: -17.1336612701416
    9. '	s' → logprob: -17.1336612701416
    10. '_s' → logprob: -18.3836612701416

Token 217: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.512236498361744e-07
    2. ' d' → logprob: -15.000000953674316
    3. '<|end|>' → logprob: -16.25
    4. 's' → logprob: -16.75
    5. 'def' → logprob: -17.5
    6. '_d' → logprob: -17.875
    7. ',' → logprob: -19.0
    8. 'sd' → logprob: -20.25
    9. ')d' → logprob: -20.375
    10. 'ds' → logprob: -20.375

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.749814019713085e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',m' → logprob: -14.375006675720215
    4. 'md' → logprob: -15.000006675720215
    5. ',
' → logprob: -15.500006675720215
    6. '(md' → logprob: -16.50000762939453
    7. ' md' → logprob: -17.00000762939453
    8. '0' → logprob: -17.50000762939453
    9. '.md' → logprob: -17.75000762939453
    10. '‌,' → logprob: -18.00000762939453

Token 219: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.20141372084617615
    2. 'md' → logprob: -1.7014137506484985
    3. '	md' → logprob: -15.576414108276367
    4. 'm' → logprob: -16.076414108276367
    5. '(md' → logprob: -16.201414108276367
    6. ' m' → logprob: -16.826414108276367
    7. '.md' → logprob: -17.576414108276367
    8. '_md' → logprob: -18.451414108276367
    9. ' ' → logprob: -18.576414108276367
    10. '0' → logprob: -19.326414108276367

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -13.250004768371582
    3. '[i' → logprob: -13.625004768371582
    4. '[' → logprob: -14.500004768371582
    5. '<|end|>' → logprob: -15.375004768371582
    6. '[start' → logprob: -15.875004768371582
    7. ' ' → logprob: -15.875004768371582
    8. ']' → logprob: -16.625003814697266
    9. ',' → logprob: -16.750003814697266
    10. '1' → logprob: -16.875003814697266

Token 221: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004927277565002441
    2. '(' → logprob: -6.379927158355713
    3. '<|end|>' → logprob: -6.504927158355713
    4. ':' → logprob: -6.879927158355713
    5. '[' → logprob: -8.754927635192871
    6. ':def' → logprob: -8.879927635192871
    7. '(def' → logprob: -9.379927635192871
    8. '\' → logprob: -9.754927635192871
    9. '```' → logprob: -10.004927635192871
    10. ' def' → logprob: -10.254927635192871

Token 223: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.17647185921669006
    2. ' process' → logprob: -2.3014719486236572
    3. ' solve' → logprob: -3.3014719486236572
    4. 'main' → logprob: -4.426471710205078
    5. 'process' → logprob: -5.301471710205078
    6. 'solve' → logprob: -5.801471710205078
    7. ' run' → logprob: -6.801471710205078
    8. ' compute' → logprob: -7.301471710205078
    9. '_main' → logprob: -7.926471710205078
    10. ' mod' → logprob: -8.051471710205078

Token 224: '_md' (ID: 82641)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23081690073013306
    2. '(' → logprob: -1.6058168411254883
    3. '_list' → logprob: -6.230816841125488
    4. '(
' → logprob: -7.855816841125488
    5. 'def' → logprob: -8.480816841125488
    6. '_md' → logprob: -8.480816841125488
    7. '_s' → logprob: -8.730816841125488
    8. '[' → logprob: -8.730816841125488
    9. '_tokens' → logprob: -8.855816841125488
    10. '<|end|>' → logprob: -8.855816841125488

Token 225: '(md' (ID: 113930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3428366780281067
    2. '(md' → logprob: -1.592836618423462
    3. '[' → logprob: -2.842836618423462
    4. '[:]' → logprob: -4.967836856842041
    5. '([' → logprob: -5.092836856842041
    6. '(a' → logprob: -6.467836856842041
    7. '([]' → logprob: -6.467836856842041
    8. 'a' → logprob: -6.467836856842041
    9. '_list' → logprob: -6.592836856842041
    10. '0' → logprob: -6.717836856842041

Token 226: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29336923360824585
    2. '):' → logprob: -1.4183692932128906
    3. '):
' → logprob: -4.793369293212891
    4. '   ' → logprob: -6.918369293212891
    5. '[' → logprob: -7.293369293212891
    6. '[start' → logprob: -7.418369293212891
    7. ')' → logprob: -7.543369293212891
    8. ' ,' → logprob: -7.918369293212891
    9. '[:' → logprob: -8.91836929321289
    10. ' ):' → logprob: -9.16836929321289

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7774205803871155
    2. 'return' → logprob: -0.7774205803871155
    3. ' return' → logprob: -2.5274205207824707
    4. 'sum' → logprob: -7.027420520782471
    5. ' sum' → logprob: -10.027420997619629
    6. 'def' → logprob: -12.152420997619629
    7. '	return' → logprob: -12.402420997619629
    8. '
' → logprob: -12.527420997619629
    9. '```' → logprob: -13.152420997619629
    10. '=' → logprob: -13.277420997619629

Token 228: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06514909863471985
    2. 'sum' → logprob: -2.8151490688323975
    3. ' return' → logprob: -5.815149307250977
    4. '   ' → logprob: -9.315149307250977
    5. ' sum' → logprob: -9.565149307250977
    6. '0' → logprob: -10.315149307250977
    7. ' ' → logprob: -14.690149307250977
    8. '	return' → logprob: -15.440149307250977
    9. '```' → logprob: -15.690149307250977
    10. '
' → logprob: -16.315149307250977

Token 229: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16022443771362305
    2. ' sum' → logprob: -1.910224437713623
    3. ' ' → logprob: -16.16022491455078
    4. '	sum' → logprob: -16.28522491455078
    5. '(sum' → logprob: -16.53522491455078
    6. '   ' → logprob: -16.66022491455078
    7. '  ' → logprob: -17.66022491455078
    8. ' ' → logprob: -18.41022491455078
    9. '=sum' → logprob: -18.53522491455078
    10. '0' → logprob: -19.41022491455078

Token 230: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.00039135036058723927
    2. '(' → logprob: -7.875391483306885
    3. 'md' → logprob: -11.500391006469727
    4. ' (' → logprob: -15.125391006469727
    5. '	md' → logprob: -15.375391006469727
    6. '_md' → logprob: -16.000391006469727
    7. '(
' → logprob: -16.000391006469727
    8. '(mc' → logprob: -16.875391006469727
    9. ' md' → logprob: -17.000391006469727
    10. '.md' → logprob: -17.125391006469727

Token 231: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.625001907348633
    4. '[' → logprob: -16.625001907348633
    5. '))' → logprob: -17.750001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '())' → logprob: -18.250001907348633
    9. '}' → logprob: -18.750001907348633
    10. '[])' → logprob: -18.875001907348633

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20356009900569916
    2. '<|end|>' → logprob: -1.9535601139068604
    3. '[' → logprob: -3.8285601139068604
    4. '\n' → logprob: -5.328559875488281
    5. '(' → logprob: -5.578559875488281
    6. '
' → logprob: -5.703559875488281
    7. '\' → logprob: -5.953559875488281
    8. ')' → logprob: -6.078559875488281
    9. '#' → logprob: -6.578559875488281
    10. ' def' → logprob: -7.453559875488281

Token 233: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2601531445980072
    2. 'main' → logprob: -1.5101531744003296
    3. ' mod' → logprob: -6.010153293609619
    4. 'mod' → logprob: -6.010153293609619
    5. 'def' → logprob: -6.760153293609619
    6. '__' → logprob: -8.260152816772461
    7. ' max' → logprob: -8.260152816772461
    8. 'max' → logprob: -8.385152816772461
    9. ' __' → logprob: -8.760152816772461
    10. 'md' → logprob: -8.760152816772461

Token 234: '_ro' (ID: 65472)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.7150624394416809
    2. '_md' → logprob: -1.0900623798370361
    3. '_s' → logprob: -2.215062379837036
    4. '_' → logprob: -3.840062379837036
    5. '_prefix' → logprob: -4.340062618255615
    6. '_m' → logprob: -4.840062618255615
    7. '_max' → logprob: -5.090062618255615
    8. '_sum' → logprob: -5.090062618255615
    9. '_total' → logprob: -6.465062618255615
    10. '_mod' → logprob: -6.715062618255615

Token 235: 'op' (ID: 467)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.908789336681366
    2. 'w' → logprob: -1.7837893962860107
    3. 'ot' → logprob: -1.9087893962860107
    4. 'ut' → logprob: -2.2837893962860107
    5. 'und' → logprob: -2.6587893962860107
    6. 'll' → logprob: -3.6587893962860107
    7. 'of' → logprob: -4.158789157867432
    8. 'f' → logprob: -4.783789157867432
    9. 'b' → logprob: -5.408789157867432
    10. 'ugh' → logprob: -5.408789157867432

Token 236: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22888675332069397
    2. 's' → logprob: -3.103886842727661
    3. '_line' → logprob: -3.103886842727661
    4. '_count' → logprob: -3.728886842727661
    5. '_' → logprob: -4.353886604309082
    6. '_list' → logprob: -4.728886604309082
    7. '(n' → logprob: -4.978886604309082
    8. '(md' → logprob: -5.103886604309082
    9. '_md' → logprob: -5.353886604309082
    10. '(line' → logprob: -5.603886604309082

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10071619600057602
    2. '):' → logprob: -2.7257161140441895
    3. ')' → logprob: -4.7257161140441895
    4. '):
' → logprob: -4.9757161140441895
    5. ' ,' → logprob: -6.1007161140441895
    6. '_' → logprob: -6.2257161140441895
    7. 's' → logprob: -6.3507161140441895
    8. 'e' → logprob: -6.3507161140441895
    9. 'u' → logprob: -6.6007161140441895
    10. ',
' → logprob: -6.9757161140441895

Token 238: ' K' (ID: 658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6243818998336792
    2. 'K' → logprob: -1.2493818998336792
    3. 'D' → logprob: -2.7493820190429688
    4. 'md' → logprob: -2.9993820190429688
    5. ' m' → logprob: -4.499382019042969
    6. 'input' → logprob: -4.624382019042969
    7. 'Q' → logprob: -4.624382019042969
    8. 'q' → logprob: -4.624382019042969
    9. ' K' → logprob: -4.749382019042969
    10. ' md' → logprob: -5.374382019042969

Token 239: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019126241386402398
    2. ' ,' → logprob: -9.500191688537598
    3. '):' → logprob: -9.875191688537598
    4. ',
' → logprob: -10.750191688537598
    5. '):
' → logprob: -10.875191688537598
    6. ',input' → logprob: -11.125191688537598
    7. ',m' → logprob: -12.625191688537598
    8. '   ' → logprob: -13.250191688537598
    9. ',n' → logprob: -13.500191688537598
    10. 'm' → logprob: -14.125191688537598

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054257042706012726
    2. ' for' → logprob: -3.1792571544647217
    3. 'for' → logprob: -5.054256916046143
    4. '       ' → logprob: -7.429256916046143
    5. 'md' → logprob: -7.429256916046143
    6. '    
' → logprob: -7.679256916046143
    7. ' result' → logprob: -8.0542573928833
    8. '    ' → logprob: -8.0542573928833
    9. ' [' → logprob: -8.3042573928833
    10. 'result' → logprob: -8.4292573928833

Token 241: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.480843424797058
    2. 'for' → logprob: -1.605843424797058
    3. 'result' → logprob: -2.2308435440063477
    4. 'res' → logprob: -2.3558435440063477
    5. 'return' (adapté à ' return') → logprob: -2.7308435440063477
    6. ' for' → logprob: -3.4808435440063477
    7. 'm' → logprob: -3.6058435440063477
    8. 'md' → logprob: -3.8558435440063477
    9. 'r' → logprob: -3.9808435440063477
    10. ' result' → logprob: -3.9808435440063477

Token 242: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6857133507728577
    2. '(n' → logprob: -1.310713291168213
    3. ' n' → logprob: -2.435713291168213
    4. ' (' → logprob: -2.935713291168213
    5. '[n' → logprob: -3.685713291168213
    6. '(' → logprob: -4.810713291168213
    7. '(K' → logprob: -4.810713291168213
    8. 'K' → logprob: -4.935713291168213
    9. '[K' → logprob: -5.435713291168213
    10. '[' → logprob: -5.435713291168213

Token 243: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023065049201250076
    2. 'K' → logprob: -4.398065090179443
    3. '(n' → logprob: -5.023065090179443
    4. ' n' → logprob: -6.398065090179443
    5. '2' → logprob: -7.523065090179443
    6. '(K' → logprob: -7.773065090179443
    7. '1' → logprob: -7.898065090179443
    8. '(' → logprob: -8.523064613342285
    9. '10' → logprob: -8.523064613342285
    10. ' (' → logprob: -8.898064613342285

Token 244: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6638507843017578
    2. ')' → logprob: -2.163850784301758
    3. ' %' → logprob: -2.163850784301758
    4. '-' → logprob: -2.663850784301758
    5. ' -' → logprob: -2.788850784301758
    6. '+' → logprob: -3.413850784301758
    7. '%' → logprob: -3.413850784301758
    8. ' +' → logprob: -3.538850784301758
    9. ' )' → logprob: -4.163850784301758
    10. '//' → logprob: -4.538850784301758

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10334279388189316
    2. 'K' → logprob: -2.3533427715301514
    3. '(K' → logprob: -6.2283430099487305
    4. ' K' → logprob: -7.7283430099487305
    5. ' ' → logprob: -7.8533430099487305
    6. '(' → logprob: -8.97834300994873
    7. '2' → logprob: -9.60334300994873
    8. ' (' → logprob: -10.10334300994873
    9. 'n' → logprob: -10.72834300994873
    10. '(n' → logprob: -10.85334300994873

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14850342273712158
    2. 'K' → logprob: -2.023503303527832
    3. '(K' → logprob: -5.273503303527832
    4. '(' → logprob: -7.898503303527832
    5. ' K' → logprob: -9.023503303527832
    6. '2' → logprob: -9.773503303527832
    7. ' ' → logprob: -10.273503303527832
    8. 'n' → logprob: -10.398503303527832
    9. '(n' → logprob: -10.523503303527832
    10. ' (' → logprob: -11.398503303527832

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022777693811804056
    2. ')//' → logprob: -6.127277851104736
    3. ' )' → logprob: -9.377277374267578
    4. '//' → logprob: -12.627277374267578
    5. '+' → logprob: -12.877277374267578
    6. ',' → logprob: -14.252277374267578
    7. ' +' → logprob: -14.752277374267578
    8. ' //' → logprob: -14.752277374267578
    9. ')
' → logprob: -15.127277374267578
    10. ')#' → logprob: -16.252277374267578

Token 248: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.019658474251627922
    2. ' %' → logprob: -4.51965856552124
    3. '//' → logprob: -5.14465856552124
    4. '%' → logprob: -6.76965856552124
    5. ')' → logprob: -7.76965856552124
    6. '<|end|>' → logprob: -7.89465856552124
    7. '+' → logprob: -8.144658088684082
    8. '#' → logprob: -9.019658088684082
    9. ' +' → logprob: -9.144658088684082
    10. ' #' → logprob: -9.144658088684082

Token 249: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004622968845069408
    2. ' K' → logprob: -5.379622936248779
    3. ' ' → logprob: -14.379623413085938
    4. '2' → logprob: -14.629623413085938
    5. '   ' → logprob: -15.004623413085938
    6. '	K' → logprob: -15.129623413085938
    7. '(' → logprob: -15.379623413085938
    8. '(K' → logprob: -15.629623413085938
    9. '  ' → logprob: -15.754623413085938
    10. '1' → logprob: -15.754623413085938

Token 250: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18533779680728912
    2. 'main' → logprob: -1.810337781906128
    3. ' compute' → logprob: -7.185338020324707
    4. '__' → logprob: -7.560338020324707
    5. ' mod' → logprob: -7.935338020324707
    6. ' run' → logprob: -7.935338020324707
    7. 'compute' → logprob: -7.935338020324707
    8. ' get' → logprob: -7.935338020324707
    9. 'def' → logprob: -8.060338020324707
    10. ' solve' → logprob: -8.310338020324707

Token 253: '_mod' (ID: 15325)
  Prédit: '_ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.26062652468681335
    2. '_sm' → logprob: -3.2606265544891357
    3. '_sum' → logprob: -3.6356265544891357
    4. '_s' → logprob: -3.8856265544891357
    5. '_md' → logprob: -4.385626316070557
    6. '_max' → logprob: -4.885626316070557
    7. '_run' → logprob: -4.885626316070557
    8. '_m' → logprob: -4.885626316070557
    9. '_query' → logprob: -5.135626316070557
    10. 'sm' → logprob: -5.260626316070557

Token 254: 'ulo' (ID: 5953)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16652174293994904
    2. '(n' → logprob: -2.5415217876434326
    3. '(D' → logprob: -3.0415217876434326
    4. '_list' → logprob: -4.4165215492248535
    5. '(m' → logprob: -5.2915215492248535
    6. '(md' → logprob: -6.5415215492248535
    7. 'def' → logprob: -6.9165215492248535
    8. '_' → logprob: -7.1665215492248535
    9. '<|end|>' → logprob: -7.2915215492248535
    10. '```' → logprob: -7.4165215492248535

Token 255: '(val' (ID: 17391)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14075815677642822
    2. '(m' → logprob: -2.3907580375671387
    3. '(' → logprob: -3.3907580375671387
    4. '(md' → logprob: -6.390758037567139
    5. 'def' → logprob: -6.640758037567139
    6. '(M' → logprob: -7.265758037567139
    7. ':' → logprob: -7.640758037567139
    8. '():' → logprob: -8.265758514404297
    9. '(N' → logprob: -8.640758514404297
    10. '(num' → logprob: -8.890758514404297

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2605055570602417
    2. '):' → logprob: -1.5105055570602417
    3. '):
' → logprob: -5.760505676269531
    4. ')' → logprob: -5.760505676269531
    5. ' ,' → logprob: -7.260505676269531
    6. '   ' → logprob: -8.510505676269531
    7. ',val' → logprob: -8.510505676269531
    8. ',
' → logprob: -8.635505676269531
    9. 's' → logprob: -8.760505676269531
    10. '(' → logprob: -9.135505676269531

Token 257: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7200492024421692
    2. 'm' → logprob: -1.4700491428375244
    3. ' K' → logprob: -2.0950491428375244
    4. ' mod' → logprob: -2.7200491428375244
    5. 'mod' → logprob: -2.9700491428375244
    6. 'K' → logprob: -3.3450491428375244
    7. 'k' → logprob: -6.4700493812561035
    8. ' k' → logprob: -6.4700493812561035
    9. ' modulus' → logprob: -6.4700493812561035
    10. ' M' → logprob: -7.4700493812561035

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011144264601171017
    2. '):
' → logprob: -4.511144161224365
    3. ' ):' → logprob: -9.886144638061523
    4. ')' → logprob: -10.136144638061523
    5. '):
' → logprob: -12.761144638061523
    6. '):

' → logprob: -13.511144638061523
    7. '   ' → logprob: -14.761144638061523
    8. ':' → logprob: -14.761144638061523
    9. ',' → logprob: -15.511144638061523
    10. ' ' → logprob: -15.761144638061523

Token 259: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4587708115577698
    2. 'return' → logprob: -1.833770751953125
    3. ' val' → logprob: -1.833770751953125
    4. '   ' → logprob: -3.458770751953125
    5. 'val' → logprob: -4.083770751953125
    6. '	return' → logprob: -12.958770751953125
    7. '	val' → logprob: -13.458770751953125
    8. '    ' → logprob: -13.833770751953125
    9. '(val' → logprob: -14.583770751953125
    10. '```' → logprob: -14.583770751953125

Token 260: ' return' (ID: 622)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03334550932049751
    2. ' val' → logprob: -4.033345699310303
    3. 'return' (adapté à ' return') → logprob: -4.283345699310303
    4. ' return' → logprob: -6.658345699310303
    5. '(val' → logprob: -14.533345222473145
    6. '	val' → logprob: -16.03334617614746
    7. '   ' → logprob: -16.15834617614746
    8. '[val' → logprob: -16.65834617614746
    9. ' (' → logprob: -17.15834617614746
    10. '_val' → logprob: -17.28334617614746

Token 261: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.31326258182525635
    2. ' val' → logprob: -1.3132625818252563
    3. '(val' → logprob: -14.188262939453125
    4. '	val' → logprob: -16.813262939453125
    5. ' (' → logprob: -17.563262939453125
    6. '(' → logprob: -18.688262939453125
    7. '[val' → logprob: -19.188262939453125
    8. ' ' → logprob: -19.438262939453125
    9. '_val' → logprob: -19.938262939453125
    10. 'int' → logprob: -20.313262939453125

Token 262: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02325083687901497
    2. '%' → logprob: -3.7732508182525635
    3. '%m' → logprob: -12.523250579833984
    4. ' ' → logprob: -13.648250579833984
    5. ' ' → logprob: -15.148250579833984
    6. '%s' → logprob: -16.523250579833984
    7. '%i' → logprob: -16.648250579833984
    8. '%d' → logprob: -17.023250579833984
    9. '%n' → logprob: -17.148250579833984
    10. '%c' → logprob: -17.648250579833984

Token 263: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02975083328783512
    2. ' m' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.52975082397461
    4. '<|end|>' → logprob: -16.77975082397461
    5. ' ' → logprob: -17.52975082397461
    6. ' (' → logprob: -17.90475082397461
    7. '(m' → logprob: -18.02975082397461
    8. '  ' → logprob: -18.15475082397461
    9. '```' → logprob: -18.27975082397461
    10. '   ' → logprob: -18.40475082397461

Token 264: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34421536326408386
    2. '\n' → logprob: -2.0942153930664062
    3. ':' → logprob: -2.9692153930664062
    4. '<|end|>' → logprob: -3.2192153930664062
    5. '(' → logprob: -3.8442153930664062
    6. '
' → logprob: -3.9692153930664062
    7. ')' → logprob: -4.219215393066406
    8. '\' → logprob: -5.219215393066406
    9. '[' → logprob: -5.844215393066406
    10. 'n' → logprob: -5.969215393066406

Token 266: ' calc' (ID: 25691)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3882681429386139
    2. ' main' → logprob: -1.1382681131362915
    3. 'mod' → logprob: -7.888267993927002
    4. 'compute' → logprob: -8.63826847076416
    5. ' mod' → logprob: -8.88826847076416
    6. 'process' → logprob: -9.01326847076416
    7. 'solve' → logprob: -9.01326847076416
    8. 'max' → logprob: -9.51326847076416
    9. 'pow' → logprob: -9.88826847076416
    10. ' compute' → logprob: -10.13826847076416

Token 267: '_result' (ID: 11623)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3426652252674103
    2. '_' → logprob: -1.842665195465088
    3. '_max' → logprob: -3.217665195465088
    4. '_mod' → logprob: -4.092665195465088
    5. '_total' → logprob: -4.342665195465088
    6. '_m' → logprob: -4.717665195465088
    7. '_query' → logprob: -5.217665195465088
    8. 'ulate' → logprob: -5.342665195465088
    9. '_s' → logprob: -5.842665195465088
    10. '_list' → logprob: -5.842665195465088

Token 268: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.208948016166687
    2. '(n' → logprob: -1.708948016166687
    3. '(input' → logprob: -5.958948135375977
    4. '(def' → logprob: -7.208948135375977
    5. '(md' → logprob: -7.458948135375977
    6. '(a' → logprob: -7.583948135375977
    7. '(m' → logprob: -7.833948135375977
    8. '():' → logprob: -7.833948135375977
    9. ' (' → logprob: -7.958948135375977
    10. '(query' → logprob: -8.208948135375977

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011266500689089298
    2. ' ,' → logprob: -4.761266708374023
    3. ')' → logprob: -6.511266708374023
    4. '):' → logprob: -7.886266708374023
    5. ' )' → logprob: -8.636266708374023
    6. ',n' → logprob: -9.011266708374023
    7. ' ' → logprob: -9.386266708374023
    8. '):
' → logprob: -9.511266708374023
    9. '   ' → logprob: -10.261266708374023
    10. '[' → logprob: -10.261266708374023

Token 270: ' x' (ID: 1215)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7460698485374451
    2. ' K' → logprob: -0.9960698485374451
    3. 'm' → logprob: -2.37106990814209
    4. ' m' → logprob: -2.87106990814209
    5. 'D' → logprob: -6.12106990814209
    6. ' D' → logprob: -6.49606990814209
    7. 'k' → logprob: -7.37106990814209
    8. 'md' → logprob: -7.87106990814209
    9. ' md' → logprob: -8.12106990814209
    10. 'M' → logprob: -8.18356990814209

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11941052973270416
    2. '):' → logprob: -2.244410514831543
    3. '):
' → logprob: -6.244410514831543
    4. ' ,' → logprob: -6.369410514831543
    5. '_,' → logprob: -7.619410514831543
    6. ' ):' → logprob: -7.994410514831543
    7. '[' → logprob: -8.119410514831543
    8. '_' → logprob: -8.119410514831543
    9. '1' → logprob: -8.619410514831543
    10. '0' → logprob: -8.619410514831543

Token 272: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47419804334640503
    2. 'K' → logprob: -1.5991981029510498
    3. ' m' → logprob: -2.97419810295105
    4. 'k' → logprob: -3.09919810295105
    5. ' K' → logprob: -3.59919810295105
    6. 'y' → logprob: -3.97419810295105
    7. 'd' → logprob: -5.349197864532471
    8. ' y' → logprob: -5.474197864532471
    9. 'D' → logprob: -5.599197864532471
    10. 'q' → logprob: -5.724197864532471

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12763670086860657
    2. '):' → logprob: -2.127636671066284
    3. '):
' → logprob: -8.502636909484863
    4. ' ,' → logprob: -8.877636909484863
    5. ')' → logprob: -9.502636909484863
    6. ' ):' → logprob: -9.502636909484863
    7. ',K' → logprob: -9.877636909484863
    8. '1' → logprob: -10.752636909484863
    9. '0' → logprob: -11.002636909484863
    10. 'K' → logprob: -11.127636909484863

Token 274: ' sum' (ID: 4215)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.04007401689887047
    2. 'D' → logprob: -4.165073871612549
    3. ' K' → logprob: -4.290073871612549
    4. 'd' → logprob: -5.665073871612549
    5. 'k' → logprob: -6.040073871612549
    6. 'md' → logprob: -7.165073871612549
    7. 'q' → logprob: -7.665073871612549
    8. ' D' → logprob: -8.290074348449707
    9. '   ' → logprob: -8.415074348449707
    10. 'a' → logprob: -8.665074348449707

Token 275: '_md' (ID: 82641)
  Prédit: '_md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_md' → logprob: -0.049315907061100006
    2. 'md' → logprob: -4.049315929412842
    3. '_' → logprob: -4.674315929412842
    4. '_d' → logprob: -4.799315929412842
    5. 'D' → logprob: -5.549315929412842
    6. 'd' → logprob: -5.799315929412842
    7. ')' → logprob: -6.299315929412842
    8. '_)' → logprob: -6.799315929412842
    9. 's' → logprob: -7.174315929412842
    10. '_m' → logprob: -7.799315929412842

Token 276: '_val' (ID: 13694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5508525371551514
    2. '):' → logprob: -0.9258525371551514
    3. '):
' → logprob: -4.4258527755737305
    4. ')' → logprob: -4.8008527755737305
    5. '0' → logprob: -5.3008527755737305
    6. ' ):' → logprob: -7.6758527755737305
    7. ' ,' → logprob: -8.17585277557373
    8. '_,' → logprob: -8.30085277557373
    9. '_md' → logprob: -8.67585277557373
    10. '):

' → logprob: -8.92585277557373

Token 277: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2933785617351532
    2. '):
' → logprob: -1.5433785915374756
    3. ',' → logprob: -3.2933785915374756
    4. ')' → logprob: -6.2933783531188965
    5. '):
' → logprob: -6.9183783531188965
    6. ' ):' → logprob: -8.043378829956055
    7. '):

' → logprob: -8.793378829956055
    8. '   ' → logprob: -10.793378829956055
    9. ' ):
' → logprob: -10.793378829956055
    10. '_' → logprob: -10.918378829956055

Token 278: ' ro' (ID: 974)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8712580800056458
    2. 'sm' → logprob: -1.746258020401001
    3. 'md' → logprob: -2.246258020401001
    4. ' sm' → logprob: -2.621258020401001
    5. 'm' → logprob: -2.746258020401001
    6. ' K' → logprob: -3.121258020401001
    7. 'limit' → logprob: -3.371258020401001
    8. ' md' → logprob: -4.24625825881958
    9. ' m' → logprob: -4.49625825881958
    10. ' limit' → logprob: -4.87125825881958

Token 279: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00025204161647707224
    2. 'p' → logprob: -8.750251770019531
    3. 'o' → logprob: -10.125251770019531
    4. 'оп' → logprob: -12.000251770019531
    5. '```' → logprob: -12.250251770019531
    6. 'opt' → logprob: -12.812751770019531
    7. 'of' → logprob: -12.875251770019531
    8. 'ops' → logprob: -12.875251770019531
    9. '   ' → logprob: -13.125251770019531
    10. ' =' → logprob: -13.250251770019531

Token 280: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3937765955924988
    2. ',' → logprob: -1.2687766551971436
    3. '):
' → logprob: -3.5187766551971436
    4. 's' → logprob: -5.0187764167785645
    5. ')' → logprob: -5.1437764167785645
    6. '_count' → logprob: -7.0187764167785645
    7. '):

' → logprob: -8.268776893615723
    8. '):
' → logprob: -8.393776893615723
    9. ' ):' → logprob: -8.643776893615723
    10. '_,' → logprob: -9.268776893615723

Token 281: ' sm' (ID: 1765)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.29493892192840576
    2. ' K' → logprob: -1.5449389219284058
    3. 'md' → logprob: -4.294939041137695
    4. ' md' → logprob: -4.419939041137695
    5. ' sm' → logprob: -5.169939041137695
    6. 'sm' → logprob: -6.169939041137695
    7. 'd' → logprob: -6.794939041137695
    8. 'D' → logprob: -6.919939041137695
    9. '   ' → logprob: -7.294939041137695
    10. 'mod' → logprob: -7.669939041137695

Token 282: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.0007859219331294298
    2. 'd' → logprob: -7.750785827636719
    3. 'a' → logprob: -8.125785827636719
    4. 'od' → logprob: -11.000785827636719
    5. '_da' → logprob: -12.000785827636719
    6. 'ad' → logprob: -12.250785827636719
    7. 'md' → logprob: -12.500785827636719
    8. '   ' → logprob: -12.625785827636719
    9. 'да' → logprob: -12.750785827636719
    10. 'oda' → logprob: -13.000785827636719

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028172992169857025
    2. 'a' → logprob: -4.153172969818115
    3. ' ,' → logprob: -5.153172969818115
    4. '):' → logprob: -5.778172969818115
    5. '_,' → logprob: -6.528172969818115
    6. '_a' → logprob: -7.153172969818115
    7. ')' → logprob: -7.653172969818115
    8. '_m' → logprob: -9.903173446655273
    9. ',_' → logprob: -9.903173446655273
    10. '+' → logprob: -10.153173446655273

Token 284: ' md' (ID: 17280)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16160336136817932
    2. ' m' → logprob: -1.911603331565857
    3. 'sm' → logprob: -7.5366034507751465
    4. 'md' → logprob: -8.036602973937988
    5. ' sm' → logprob: -8.911602973937988
    6. '   ' → logprob: -9.786602973937988
    7. 'x' → logprob: -10.224102973937988
    8. 'mod' → logprob: -10.474102973937988
    9. ' ' → logprob: -10.599102973937988
    10. '```' → logprob: -11.036602973937988

Token 285: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47481223940849304
    2. '0' → logprob: -0.9748122692108154
    3. '```' → logprob: -8.349812507629395
    4. '[' → logprob: -9.474812507629395
    5. ',' → logprob: -9.724812507629395
    6. '[i' → logprob: -9.849812507629395
    7. ')' → logprob: -10.224812507629395
    8. '   ' → logprob: -10.474812507629395
    9. 'array' → logprob: -10.724812507629395
    10. 'arr' → logprob: -10.724812507629395

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01770828105509281
    2. '):' → logprob: -4.6427083015441895
    3. '0' → logprob: -5.2677083015441895
    4. '):
' → logprob: -6.7677083015441895
    5. ')' → logprob: -7.8927083015441895
    6. ' ,' → logprob: -7.8927083015441895
    7. '_,' → logprob: -8.142707824707031
    8. ',
' → logprob: -8.392707824707031
    9. 'a' → logprob: -9.017707824707031
    10. 'o' → logprob: -10.267707824707031

Token 287: ' m' (ID: 284)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6679907441139221
    2. ' K' → logprob: -1.6679906845092773
    3. 'm' → logprob: -2.0429906845092773
    4. ' m' → logprob: -2.6679906845092773
    5. 'sm' → logprob: -3.2929906845092773
    6. ' sm' → logprob: -3.6679906845092773
    7. 'x' → logprob: -4.792990684509277
    8. ' x' → logprob: -5.417990684509277
    9. 'md' → logprob: -5.417990684509277
    10. '   ' → logprob: -5.792990684509277

Token 288: 'da' (ID: 2529)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0698045864701271
    2. '0' → logprob: -3.0698046684265137
    3. 'da' → logprob: -4.069804668426514
    4. '```' → logprob: -6.944804668426514
    5. ')' → logprob: -7.194804668426514
    6. '_a' → logprob: -7.694804668426514
    7. 'd' → logprob: -8.319804191589355
    8. '   ' → logprob: -8.569804191589355
    9. '_' → logprob: -8.694804191589355
    10. 'ax' → logprob: -9.694804191589355

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027301779482513666
    2. ')' → logprob: -8.625272750854492
    3. ',' → logprob: -10.125272750854492
    4. 'def' → logprob: -10.875272750854492
    5. '```' → logprob: -11.500272750854492
    6. '_' → logprob: -12.000272750854492
    7. 'o' → logprob: -12.750272750854492
    8. '):
' → logprob: -12.875272750854492
    9. '`)' → logprob: -13.250272750854492
    10. '):' → logprob: -14.000272750854492

Token 290: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14741390943527222
    2. '):' → logprob: -2.272413969039917
    3. '):
' → logprob: -3.397413969039917
    4. ',
' → logprob: -8.022414207458496
    5. ')' → logprob: -9.272414207458496
    6. '   ' → logprob: -10.397414207458496
    7. '):

' → logprob: -10.522414207458496
    8. ' ):' → logprob: -10.772414207458496
    9. ' ,' → logprob: -11.147414207458496
    10. '):
' → logprob: -11.772414207458496

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41443949937820435
    2. ':' → logprob: -1.1644394397735596
    3. ':
' → logprob: -3.9144394397735596
    4. '<|end|>' → logprob: -6.289439678192139
    5. '):' → logprob: -7.039439678192139
    6. ',' → logprob: -7.289439678192139
    7. '):
' → logprob: -7.414439678192139
    8. '():
' → logprob: -7.664439678192139
    9. '{' → logprob: -8.03943920135498
    10. ' :' → logprob: -8.03943920135498

Token 292: ' numerator' (ID: 149054)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39121589064598083
    2. 'return' → logprob: -1.8912159204483032
    3. ' if' → logprob: -2.6412158012390137
    4. '   ' → logprob: -3.3912158012390137
    5. ' return' → logprob: -3.6412158012390137
    6. 'res' → logprob: -3.7662158012390137
    7. 'result' → logprob: -4.391215801239014
    8. ' res' → logprob: -6.391215801239014
    9. 'total' → logprob: -6.641215801239014
    10. 'ans' → logprob: -7.016215801239014

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282901465892792
    2. '=' → logprob: -2.2378289699554443
    3. '   ' → logprob: -12.987829208374023
    4. ',' → logprob: -13.487829208374023
    5. ')' → logprob: -13.862829208374023
    6. ' ' → logprob: -14.237829208374023
    7. ' =
' → logprob: -15.362829208374023
    8. 's' → logprob: -15.612829208374023
    9. ':' → logprob: -15.987829208374023
    10. '    ' → logprob: -16.487829208374023

Token 294: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4127376079559326
    2. 'sum' → logprob: -1.9127376079559326
    3. '(n' → logprob: -2.0377376079559326
    4. '(x' → logprob: -2.1627376079559326
    5. ' (' → logprob: -2.5377376079559326
    6. 'n' → logprob: -2.6627376079559326
    7. '(sum' → logprob: -3.0377376079559326
    8. ' x' → logprob: -3.4127376079559326
    9. '(m' → logprob: -3.9127376079559326
    10. 'm' → logprob: -4.162737846374512

Token 295: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.44066116213798523
    2. '*' → logprob: -1.3156611919403076
    3. ' +' → logprob: -3.3156611919403076
    4. ' -' → logprob: -3.5656611919403076
    5. '+' → logprob: -3.9406611919403076
    6. '-' → logprob: -5.5656609535217285
    7. '*n' → logprob: -10.315661430358887
    8. '*m' → logprob: -10.315661430358887
    9. ' ' → logprob: -10.565661430358887
    10. '**' → logprob: -10.815661430358887

Token 296: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.031114203855395317
    2. ' m' → logprob: -3.531114101409912
    3. ' (' → logprob: -8.03111457824707
    4. '(m' → logprob: -8.15611457824707
    5. '(n' → logprob: -8.28111457824707
    6. 'n' → logprob: -8.40611457824707
    7. '(' → logprob: -8.53111457824707
    8. ' n' → logprob: -10.90611457824707
    9. 'mod' → logprob: -11.90611457824707
    10. ' ' → logprob: -11.90611457824707

Token 297: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8455939888954163
    2. ' sm' → logprob: -1.8455939292907715
    3. ' sum' → logprob: -1.8455939292907715
    4. 'sm' → logprob: -2.0955939292907715
    5. ' (' → logprob: -2.8455939292907715
    6. '(sum' → logprob: -3.7205939292907715
    7. '(sm' → logprob: -3.9705939292907715
    8. '(' → logprob: -4.5955939292907715
    9. ' ro' → logprob: -4.5955939292907715
    10. '(ro' → logprob: -5.7205939292907715

Token 299: '_md' (ID: 82641)
  Prédit: '_md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_md' → logprob: -1.4021237802808173e-05
    2. 'md' → logprob: -11.375014305114746
    3. '_mod' → logprob: -13.750014305114746
    4. '(md' → logprob: -15.500014305114746
    5. '_' → logprob: -15.625014305114746
    6. 'Md' → logprob: -15.875014305114746
    7. '_mc' → logprob: -16.25001335144043
    8. '_nd' → logprob: -16.25001335144043
    9. '_dm' → logprob: -16.25001335144043
    10. '```' → logprob: -16.37501335144043

Token 300: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.723973582556937e-05
    2. 'val' → logprob: -11.125017166137695
    3. '```' → logprob: -14.250017166137695
    4. '_' → logprob: -14.750017166137695
    5. 'Val' → logprob: -14.875017166137695
    6. ' _' → logprob: -15.125017166137695
    7. '_VAL' → logprob: -16.125017166137695
    8. '   ' → logprob: -16.250017166137695
    9. '*' → logprob: -16.375017166137695
    10. '
' → logprob: -16.375017166137695

Token 301: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.0030289290007203817
    2. ' ro' → logprob: -6.003028869628906
    3. '(ro' → logprob: -7.628028869628906
    4. ' (' → logprob: -10.378028869628906
    5. '(' → logprob: -11.128028869628906
    6. ' ' → logprob: -12.378028869628906
    7. '  ' → logprob: -13.253028869628906
    8. '   ' → logprob: -13.253028869628906
    9. ' ' → logprob: -13.440528869628906
    10. 'rop' → logprob: -13.565528869628906

Token 303: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.398067828034982e-05
    2. 'p' → logprob: -9.62507438659668
    3. 'оп' → logprob: -12.62507438659668
    4. ' op' → logprob: -14.37507438659668
    5. '(op' → logprob: -14.50007438659668
    6. 'opf' → logprob: -14.62507438659668
    7. '_op' → logprob: -14.62507438659668
    8. '<|end|>' → logprob: -14.87507438659668
    9. '0' → logprob: -15.25007438659668
    10. '	op' → logprob: -15.37507438659668

Token 304: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.008175752125680447
    2. ' sm' → logprob: -4.883175849914551
    3. '(sm' → logprob: -7.758175849914551
    4. '(' → logprob: -10.00817584991455
    5. ' (' → logprob: -10.00817584991455
    6. '   ' → logprob: -10.88317584991455
    7. '(s' → logprob: -11.50817584991455
    8. '(m' → logprob: -12.38317584991455
    9. '((' → logprob: -12.75817584991455
    10. 'sum' → logprob: -13.13317584991455

Token 306: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.012557562440633774
    2. 'a' → logprob: -4.387557506561279
    3. 'd' → logprob: -10.512557983398438
    4. '   ' → logprob: -12.387557983398438
    5. 'sm' → logprob: -13.512557983398438
    6. '
' → logprob: -13.637557983398438
    7. 'oda' → logprob: -13.762557983398438
    8. 'ad' → logprob: -13.887557983398438
    9. 'od' → logprob: -13.887557983398438
    10. ' da' → logprob: -14.137557983398438

Token 307: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1536475270986557
    2. '<|end|>' → logprob: -2.7786474227905273
    3. ' %' → logprob: -3.1536474227905273
    4. ')' → logprob: -4.403647422790527
    5. '   ' → logprob: -4.653647422790527
    6. 'def' → logprob: -5.528647422790527
    7. ' 
' → logprob: -5.778647422790527
    8. '%' → logprob: -5.903647422790527
    9. ' ' → logprob: -6.528647422790527
    10. ' -' → logprob: -7.278647422790527

Token 309: ' term' (ID: 2914)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0788545310497284
    2. ')' → logprob: -2.953854560852051
    3. '
' → logprob: -4.953854560852051
    4. '%' → logprob: -5.078854560852051
    5. '%m' → logprob: -5.953854560852051
    6. ' m' → logprob: -6.203854560852051
    7. ')%' → logprob: -6.453854560852051
    8. ' return' → logprob: -6.828854560852051
    9. ' )' → logprob: -8.07885456085205
    10. ' numerator' → logprob: -8.07885456085205

Token 310: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6942359209060669
    2. '1' → logprob: -0.9442359209060669
    3. '_mod' → logprob: -3.1942358016967773
    4. '2' → logprob: -3.4442358016967773
    5. '=' → logprob: -4.319235801696777
    6. '_' → logprob: -5.194235801696777
    7. '_den' → logprob: -5.569235801696777
    8. '0' → logprob: -5.819235801696777
    9. 's' → logprob: -6.194235801696777
    10. '_val' → logprob: -6.694235801696777

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06218435615301132
    2. '=' → logprob: -2.8121843338012695
    3. ',' → logprob: -9.31218433380127
    4. '   ' → logprob: -9.93718433380127
    5. '%' → logprob: -11.43718433380127
    6. ' ' → logprob: -11.56218433380127
    7. '_mod' → logprob: -11.68718433380127
    8. '_num' → logprob: -12.06218433380127
    9. '_n' → logprob: -12.18718433380127
    10. '_' → logprob: -12.18718433380127

Token 312: ' (' (ID: 350)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.7182636260986328
    2. '(n' → logprob: -1.4682636260986328
    3. ' numerator' → logprob: -1.5932636260986328
    4. ' (' → logprob: -3.968263626098633
    5. 'md' → logprob: -4.093263626098633
    6. 'm' → logprob: -4.093263626098633
    7. '(m' → logprob: -4.843263626098633
    8. '(' → logprob: -5.468263626098633
    9. '((' → logprob: -5.968263626098633
    10. '(x' → logprob: -5.968263626098633

Token 313: 'numer' (ID: 81553)
  Prédit: 'numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.46059945225715637
    2. ' numerator' → logprob: -1.210599422454834
    3. 'm' → logprob: -3.460599422454834
    4. '(n' → logprob: -4.085599422454834
    5. 'n' → logprob: -4.710599422454834
    6. 'x' → logprob: -5.210599422454834
    7. 'md' → logprob: -5.960599422454834
    8. ' (' → logprob: -6.585599422454834
    9. '(m' → logprob: -7.335599422454834
    10. ' m' → logprob: -7.335599422454834

Token 314: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -4.008129963040119e-06
    2. 'tor' → logprob: -13.125003814697266
    3. 'umerator' → logprob: -15.000003814697266
    4. 'ATOR' → logprob: -15.125003814697266
    5. 'x' → logprob: -15.500003814697266
    6. ')' → logprob: -15.625003814697266
    7. 'um' → logprob: -15.875003814697266
    8. 'атор' → logprob: -16.000003814697266
    9. '-' → logprob: -16.250003814697266
    10. '   ' → logprob: -16.250003814697266

Token 315: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1521223932504654
    2. ')' → logprob: -2.2771224975585938
    3. '%' → logprob: -4.027122497558594
    4. ' *' → logprob: -4.277122497558594
    5. ' -' → logprob: -5.902122497558594
    6. ' //' → logprob: -6.402122497558594
    7. ' )' → logprob: -7.027122497558594
    8. '*' → logprob: -7.402122497558594
    9. ' +' → logprob: -8.527122497558594
    10. '-' → logprob: -8.777122497558594

Token 316: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.021614711731672287
    2. '%' → logprob: -3.8966147899627686
    3. ' //' → logprob: -7.5216145515441895
    4. '%m' → logprob: -7.6466145515441895
    5. '//' → logprob: -11.396615028381348
    6. '   ' → logprob: -12.146615028381348
    7. '%n' → logprob: -12.271615028381348
    8. '%e' → logprob: -12.521615028381348
    9. '%d' → logprob: -12.646615028381348
    10. ' *' → logprob: -12.646615028381348

Token 317: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007948118261992931
    2. ' m' → logprob: -4.88294792175293
    3. 'K' → logprob: -8.25794792175293
    4. '   ' → logprob: -10.75794792175293
    5. ' K' → logprob: -11.25794792175293
    6. ' ' → logprob: -11.63294792175293
    7. '  ' → logprob: -12.82044792175293
    8. 'n' → logprob: -12.88294792175293
    9. '1' → logprob: -12.94544792175293
    10. '(m' → logprob: -13.07044792175293

Token 318: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' term' (ID: 2914)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8820619583129883
    2. '   ' → logprob: -1.5070619583129883
    3. '<|end|>' → logprob: -1.6320619583129883
    4. '+' → logprob: -3.3820619583129883
    5. '%' → logprob: -3.3820619583129883
    6. '    ' → logprob: -4.632061958312988
    7. ' *' → logprob: -4.632061958312988
    8. '*' → logprob: -4.757061958312988
    9. ' +' → logprob: -4.882061958312988
    10. 'return' → logprob: -4.882061958312988

Token 321: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015843961387872696
    2. '2' → logprob: -4.890843868255615
    3. '(' → logprob: -5.890843868255615
    4. ')' → logprob: -7.140843868255615
    5. '=' → logprob: -7.140843868255615
    6. '_' → logprob: -7.640843868255615
    7. '```' → logprob: -7.890843868255615
    8. '0' → logprob: -8.140844345092773
    9. ' =' → logprob: -8.140844345092773
    10. '*' → logprob: -8.140844345092773

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313269704580307
    2. '=' → logprob: -1.3132697343826294
    3. '   ' → logprob: -12.81326961517334
    4. ',' → logprob: -13.18826961517334
    5. ' ' → logprob: -14.43826961517334
    6. '*' → logprob: -15.06326961517334
    7. ':' → logprob: -15.06326961517334
    8. ' =(' → logprob: -15.06326961517334
    9. 'def' → logprob: -15.31326961517334
    10. ' *' → logprob: -15.43826961517334

Token 323: ' md' (ID: 17280)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.3157509565353394
    2. 'm' → logprob: -1.6907509565353394
    3. 'md' → logprob: -1.6907509565353394
    4. '(md' → logprob: -1.9407509565353394
    5. ' (' → logprob: -3.190751075744629
    6. '((' → logprob: -3.190751075744629
    7. '(ro' → logprob: -3.690751075744629
    8. '(n' → logprob: -3.940751075744629
    9. '(' → logprob: -4.315751075744629
    10. 'ro' → logprob: -4.565751075744629

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. 'a' → logprob: -11.375017166137695
    3. '[' → logprob: -13.125017166137695
    4. ' ' → logprob: -13.125017166137695
    5. '```' → logprob: -14.125017166137695
    6. '   ' → logprob: -15.375017166137695
    7. 'array' → logprob: -15.625017166137695
    8. '_' → logprob: -16.125017166137695
    9. '1' → logprob: -16.125017166137695
    10. '  ' → logprob: -16.500017166137695

Token 325: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16324998438358307
    2. ' +' → logprob: -2.413249969482422
    3. '*' → logprob: -3.163249969482422
    4. '+' → logprob: -4.413249969482422
    5. '<|end|>' → logprob: -5.413249969482422
    6. '   ' → logprob: -7.038249969482422
    7. '
' → logprob: -8.163249969482422
    8. 'def' → logprob: -8.788249969482422
    9. ' ' → logprob: -8.913249969482422
    10. ')' → logprob: -8.913249969482422

Token 326: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.2010200172662735
    2. '((' → logprob: -2.2010200023651123
    3. '(ro' → logprob: -3.7010200023651123
    4. ' ((' → logprob: -4.451020240783691
    5. '(n' → logprob: -4.576020240783691
    6. ' (' → logprob: -4.826020240783691
    7. '(' → logprob: -5.451020240783691
    8. ' ro' → logprob: -5.701020240783691
    9. 'term' → logprob: -5.701020240783691
    10. '   ' → logprob: -6.951020240783691

Token 327: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -9.817902173381299e-05
    2. 'o' → logprob: -9.87509822845459
    3. 'p' → logprob: -11.37509822845459
    4. '0' → logprob: -11.62509822845459
    5. 'opf' → logprob: -12.37509822845459
    6. '1' → logprob: -12.50009822845459
    7. 'opt' → logprob: -13.43759822845459
    8. 'm' → logprob: -13.50009822845459
    9. '(op' → logprob: -13.68759822845459
    10. 'oop' → logprob: -13.68759822845459

Token 328: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5001856088638306
    2. '+' → logprob: -1.1251856088638306
    3. '   ' → logprob: -2.750185489654541
    4. '+
' → logprob: -6.375185489654541
    5. ' +
' → logprob: -6.375185489654541
    6. '<|end|>' → logprob: -7.000185489654541
    7. 'def' → logprob: -8.5001859664917
    8. '
' → logprob: -8.8751859664917
    9. ')' → logprob: -9.2501859664917
    10. '  ' → logprob: -9.7501859664917

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1376434564590454
    2. '+' → logprob: -2.762643337249756
    3. ' +' → logprob: -2.762643337249756
    4. '<|end|>' → logprob: -7.262643337249756
    5. ' +
' → logprob: -7.637643337249756
    6. '+
' → logprob: -7.762643337249756
    7. ')' → logprob: -8.512643814086914
    8. '
' → logprob: -8.762643814086914
    9. '  ' → logprob: -9.137643814086914
    10. ' ' → logprob: -9.637643814086914

Token 330: ' term' (ID: 2914)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5378093123435974
    2. '   ' → logprob: -1.1628093719482422
    3. ' +' → logprob: -2.912809371948242
    4. 'return' → logprob: -3.912809371948242
    5. 'result' → logprob: -4.162809371948242
    6. 'term' (adapté à ' term') → logprob: -4.787809371948242
    7. '+
' → logprob: -5.537809371948242
    8. ' +
' → logprob: -8.287809371948242
    9. 'answer' → logprob: -8.787809371948242
    10. ' return' → logprob: -8.912809371948242

Token 331: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.035053472965955734
    2. '2' → logprob: -3.7850534915924072
    3. '1' → logprob: -4.910053253173828
    4. ' =' → logprob: -5.660053253173828
    5. '=' → logprob: -7.285053253173828
    6. ' +=' → logprob: -9.535053253173828
    7. '   ' → logprob: -9.535053253173828
    8. ' ' → logprob: -10.910053253173828
    9. '+=' → logprob: -11.535053253173828
    10. '_' → logprob: -11.910053253173828

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43117478489875793
    2. '=' → logprob: -1.0561747550964355
    3. ' +' → logprob: -6.3061747550964355
    4. '+' → logprob: -7.6811747550964355
    5. ' +=' → logprob: -9.056175231933594
    6. '   ' → logprob: -10.431175231933594
    7. ' ' → logprob: -11.306175231933594
    8. '+=' → logprob: -11.306175231933594
    9. '    ' → logprob: -11.806175231933594
    10. ',' → logprob: -13.306175231933594

Token 333: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12803292274475098
    2. ' m' → logprob: -2.128032922744751
    3. ' (' → logprob: -8.128032684326172
    4. '0' → logprob: -8.628032684326172
    5. ' ' → logprob: -8.753032684326172
    6. '   ' → logprob: -8.878032684326172
    7. '(m' → logprob: -9.378032684326172
    8. 'md' → logprob: -10.378032684326172
    9. 'min' → logprob: -10.628032684326172
    10. '(' → logprob: -10.753032684326172

Token 334: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.0016969610005617142
    2. '   ' → logprob: -7.376697063446045
    3. 'a' → logprob: -7.626697063446045
    4. '  ' → logprob: -8.251696586608887
    5. ' *' → logprob: -9.376696586608887
    6. '*' → logprob: -9.751696586608887
    7. ' -' → logprob: -10.126696586608887
    8. ' ' → logprob: -10.501696586608887
    9. '**' → logprob: -10.626696586608887
    10. '```' → logprob: -10.876696586608887

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '[' → logprob: -17.375
    4. 'o' → logprob: -18.0
    5. '```' → logprob: -18.375
    6. '<|end|>' → logprob: -18.5
    7. '   ' → logprob: -18.875
    8. '۰' → logprob: -19.375
    9. '_' → logprob: -19.5
    10. '  ' → logprob: -20.25

Token 336: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7236940264701843
    2. '   ' → logprob: -1.348694086074829
    3. '+' → logprob: -2.098694086074829
    4. '
' → logprob: -2.848694086074829
    5. '<|end|>' → logprob: -2.973694086074829
    6. ')' → logprob: -4.97369384765625
    7. ' +
' → logprob: -5.22369384765625
    8. '+
' → logprob: -5.34869384765625
    9. 'def' → logprob: -5.84869384765625
    10. '<|end|>' → logprob: -6.84869384765625

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008104100823402405
    2. '+' → logprob: -5.50810432434082
    3. ' +' → logprob: -6.25810432434082
    4. 'return' → logprob: -7.13310432434082
    5. ')' → logprob: -7.75810432434082
    6. '<|end|>' → logprob: -8.00810432434082
    7. ' return' → logprob: -8.75810432434082
    8. '
' → logprob: -9.50810432434082
    9. '+
' → logprob: -9.50810432434082
    10. ' +
' → logprob: -9.88310432434082

Token 338: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016718285158276558
    2. 'return' (adapté à ' return') → logprob: -4.14171838760376
    3. ')' → logprob: -8.641717910766602
    4. ' return' → logprob: -8.766717910766602
    5. '	return' → logprob: -8.891717910766602
    6. '+' → logprob: -9.266717910766602
    7. 'result' → logprob: -10.266717910766602
    8. '    
' → logprob: -10.641717910766602
    9. '
' → logprob: -11.016717910766602
    10. 'def' → logprob: -11.266717910766602

Token 339: ' n' (ID: 297)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.2812088429927826
    2. ' term' → logprob: -1.406208872795105
    3. '   ' → logprob: -10.406208992004395
    4. '(term' → logprob: -10.781208992004395
    5. ' ' → logprob: -12.406208992004395
    6. 'ter' → logprob: -13.906208992004395
    7. ' (' → logprob: -14.281208992004395
    8. '  ' → logprob: -15.031208992004395
    9. '(' → logprob: -15.406208992004395
    10. ' int' → logprob: -15.593708992004395

Token 340: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' ' (ID: 220)
  Prédit: '(term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(term' → logprob: -0.23958949744701385
    2. ' (' → logprob: -1.6145894527435303
    3. 'term' → logprob: -5.114589691162109
    4. '(' → logprob: -5.364589691162109
    5. ' term' → logprob: -5.989589691162109
    6. '1' → logprob: -7.364589691162109
    7. '(n' → logprob: -9.48958969116211
    8. '(x' → logprob: -9.73958969116211
    9. '(int' → logprob: -10.61458969116211
    10. '(t' → logprob: -10.86458969116211

Token 342: '1' (ID: 16)
  Prédit: '(term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(term' → logprob: -0.019058536738157272
    2. 'term' → logprob: -4.144058704376221
    3. '1' → logprob: -6.644058704376221
    4. '(' → logprob: -6.644058704376221
    5. ' (' → logprob: -7.894058704376221
    6. '(int' → logprob: -11.769058227539062
    7. ' term' → logprob: -11.769058227539062
    8. '((' → logprob: -12.019058227539062
    9. '(max' → logprob: -12.769058227539062
    10. '(t' → logprob: -12.769058227539062

Token 343: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' term' (ID: 2914)
  Prédit: '(term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(term' → logprob: -0.009721734561026096
    2. ' (' → logprob: -4.884721755981445
    3. 'term' → logprob: -6.384721755981445
    4. '(' → logprob: -7.884721755981445
    5. ' term' → logprob: -11.009721755981445
    6. '(t' → logprob: -11.759721755981445
    7. '   ' → logprob: -12.009721755981445
    8. '((' → logprob: -12.259721755981445
    9. '(int' → logprob: -12.884721755981445
    10. '(max' → logprob: -13.759721755981445

Token 345: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.024398239329457283
    2. '1' → logprob: -3.7743983268737793
    3. '2' → logprob: -6.774398326873779
    4. '
' → logprob: -12.399397850036621
    5. '_' → logprob: -13.899397850036621
    6. ' ' → logprob: -14.149397850036621
    7. '```' → logprob: -14.524397850036621
    8. '   ' → logprob: -14.649397850036621
    9. 'term' → logprob: -14.774397850036621
    10. ' 
' → logprob: -15.024397850036621

Token 346: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4510137140750885
    2. '<|end|>' → logprob: -1.3260136842727661
    3. ' +' → logprob: -2.5760138034820557
    4. ')' → logprob: -4.201013565063477
    5. '*' → logprob: -5.951013565063477
    6. ' ' → logprob: -6.951013565063477
    7. ' *' → logprob: -7.201013565063477
    8. '+
' → logprob: -7.451013565063477
    9. '[' → logprob: -7.951013565063477
    10. ' +
' → logprob: -8.076013565063477

Token 347: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.06949403882026672
    2. ' term' → logprob: -3.3194940090179443
    3. '(term' → logprob: -3.8194940090179443
    4. ' (' → logprob: -4.819494247436523
    5. '(' → logprob: -7.194494247436523
    6. '   ' → logprob: -8.569494247436523
    7. ' ' → logprob: -12.819494247436523
    8. '  ' → logprob: -13.569494247436523
    9. '       ' → logprob: -13.694494247436523
    10. '    ' → logprob: -13.819494247436523

Token 348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012512944638729095
    2. '3' → logprob: -4.387513160705566
    3. ' ' → logprob: -13.512513160705566
    4. '   ' → logprob: -14.012513160705566
    5. '
' → logprob: -15.262513160705566
    6. 's' → logprob: -16.01251220703125
    7. 'term' → logprob: -16.13751220703125
    8. '```' → logprob: -16.13751220703125
    9. '(' → logprob: -16.26251220703125
    10. '`' → logprob: -16.88751220703125

Token 349: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.001503313542343676
    2. ' term' → logprob: -6.5015034675598145
    3. '   ' → logprob: -15.126502990722656
    4. 'ter' → logprob: -15.126502990722656
    5. ' ' → logprob: -16.126502990722656
    6. '(term' → logprob: -16.626502990722656
    7. '-term' → logprob: -17.126502990722656
    8. '  ' → logprob: -17.501502990722656
    9. 'termin' → logprob: -17.751502990722656
    10. 'terminal' → logprob: -18.001502990722656

Token 351: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. 'm' → logprob: -18.125
    3. 't' → logprob: -19.375
    4. '۳' → logprob: -19.75
    5. '৩' → logprob: -19.8125
    6. '```' → logprob: -20.25
    7. '３' → logprob: -20.4375
    8. 'type' → logprob: -20.5
    9. 'three' → logprob: -20.8125
    10. 'term' → logprob: -21.0

Token 352: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06198415905237198
    2. 'main' → logprob: -2.811984062194824
    3. ' get' → logprob: -12.436984062194824
    4. ' run' → logprob: -12.686984062194824
    5. ' solve' → logprob: -12.936984062194824
    6. 'def' → logprob: -13.186984062194824
    7. 'get' → logprob: -13.936984062194824
    8. ' calculate' → logprob: -14.061984062194824
    9. 'solve' → logprob: -14.436984062194824
    10. ' process' → logprob: -14.561984062194824

Token 355: '_single' (ID: 46053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.116976022720337
    2. '_query' → logprob: -1.241976022720337
    3. '(n' → logprob: -1.616976022720337
    4. '_input' → logprob: -2.241976022720337
    5. '_queries' → logprob: -2.741976022720337
    6. '(input' → logprob: -5.116975784301758
    7. '_line' → logprob: -5.491975784301758
    8. '_inputs' → logprob: -6.616975784301758
    9. '(query' → logprob: -7.991975784301758
    10. '_data' → logprob: -8.116975784301758

Token 356: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.0007174347410909832
    2. '_line' → logprob: -7.500717639923096
    3. '_' → logprob: -9.875717163085938
    4. '_input' → logprob: -10.625717163085938
    5. 'query' → logprob: -10.750717163085938
    6. '_value' → logprob: -11.375717163085938
    7. '_case' → logprob: -11.875717163085938
    8. '_question' → logprob: -12.125717163085938
    9. '_command' → logprob: -12.500717163085938
    10. '_step' → logprob: -12.625717163085938

Token 357: '(D' (ID: 9908)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09119383990764618
    2. '(n' → logprob: -2.591193914413452
    3. '(query' → logprob: -5.216193675994873
    4. '(' → logprob: -6.091193675994873
    5. ' (' → logprob: -6.341193675994873
    6. '(x' → logprob: -6.466193675994873
    7. '(q' → logprob: -7.091193675994873
    8. '(line' → logprob: -8.341194152832031
    9. '(i' → logprob: -10.591194152832031
    10. '(def' → logprob: -11.216194152832031

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002614550176076591
    2. ' ,' → logprob: -8.625261306762695
    3. ',n' → logprob: -10.125261306762695
    4. ',
' → logprob: -11.000261306762695
    5. '):' → logprob: -11.875261306762695
    6. ',m' → logprob: -12.625261306762695
    7. ',x' → logprob: -12.625261306762695
    8. 'x' → logprob: -13.625261306762695
    9. '_,' → logprob: -13.875261306762695
    10. 'm' → logprob: -13.875261306762695

Token 359: ' K' (ID: 658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5281969904899597
    2. ' m' → logprob: -1.5281970500946045
    3. 'x' → logprob: -2.4031970500946045
    4. ' x' → logprob: -3.0281970500946045
    5. 'n' → logprob: -4.028196811676025
    6. ' n' → logprob: -4.153196811676025
    7. 'K' → logprob: -4.528196811676025
    8. ' K' → logprob: -5.278196811676025
    9. 'Q' → logprob: -6.903196811676025
    10. 'q' → logprob: -6.903196811676025

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ' ,' → logprob: -11.875016212463379
    3. ',n' → logprob: -12.625016212463379
    4. ',x' → logprob: -13.125016212463379
    5. ',
' → logprob: -13.500016212463379
    6. ',m' → logprob: -14.000016212463379
    7. '   ' → logprob: -15.000016212463379
    8. 'm' → logprob: -15.250016212463379
    9. 'n' → logprob: -15.375016212463379
    10. 'x' → logprob: -16.000015258789062

Token 361: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2595502436161041
    2. 'n' → logprob: -2.1345503330230713
    3. ' x' → logprob: -3.0095503330230713
    4. 'm' → logprob: -3.3845503330230713
    5. ' n' → logprob: -4.259550094604492
    6. 'query' → logprob: -5.259550094604492
    7. ' m' → logprob: -6.009550094604492
    8. 'q' → logprob: -6.134550094604492
    9. '   ' → logprob: -6.759550094604492
    10. ' query' → logprob: -7.009550094604492

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.957014556974173e-05
    2. ' ,' → logprob: -10.125069618225098
    3. ',x' → logprob: -10.750069618225098
    4. 'x' → logprob: -12.375069618225098
    5. '):
' → logprob: -14.250069618225098
    6. ',
' → logprob: -14.375069618225098
    7. '   ' → logprob: -14.750069618225098
    8. ',n' → logprob: -14.875069618225098
    9. '):' → logprob: -15.000069618225098
    10. ',m' → logprob: -15.125069618225098

Token 363: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03926798328757286
    2. ' x' → logprob: -3.2892680168151855
    3. 'm' → logprob: -6.7892680168151855
    4. ' m' → logprob: -9.539267539978027
    5. '   ' → logprob: -11.414267539978027
    6. ' ' → logprob: -12.164267539978027
    7. ')' → logprob: -13.289267539978027
    8. '  ' → logprob: -13.664267539978027
    9. '	x' → logprob: -13.851767539978027
    10. ',' → logprob: -13.914267539978027

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.710618905955926e-05
    2. ' ,' → logprob: -9.625097274780273
    3. ',m' → logprob: -11.250097274780273
    4. '):' → logprob: -11.875097274780273
    5. '):
' → logprob: -12.000097274780273
    6. 'm' → logprob: -13.125097274780273
    7. '   ' → logprob: -13.875097274780273
    8. ',
' → logprob: -14.000097274780273
    9. ')' → logprob: -15.500097274780273
    10. '):

' → logprob: -15.750097274780273

Token 365: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17975328862667084
    2. ' m' → logprob: -1.804753303527832
    3. ' ' → logprob: -12.679753303527832
    4. ',' → logprob: -12.929753303527832
    5. '   ' → logprob: -14.054753303527832
    6. ')' → logprob: -14.179753303527832
    7. '	m' → logprob: -15.054753303527832
    8. ',m' → logprob: -15.054753303527832
    9. '    ' → logprob: -15.554753303527832
    10. '  ' → logprob: -15.929753303527832

Token 366: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06241677701473236
    2. ',' → logprob: -2.8124167919158936
    3. '):
' → logprob: -7.8124165534973145
    4. ')' → logprob: -10.312417030334473
    5. '   ' → logprob: -12.312417030334473
    6. ' ):' → logprob: -12.312417030334473
    7. '):
' → logprob: -14.437417030334473
    8. ':' → logprob: -15.187417030334473
    9. '):

' → logprob: -15.562417030334473
    10. ' ,' → logprob: -15.937417030334473

Token 367: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025812607258558273
    2. ':
' → logprob: -4.52581262588501
    3. '():' → logprob: -5.27581262588501
    4. '   ' → logprob: -5.40081262588501
    5. '):' → logprob: -6.90081262588501
    6. '(' → logprob: -7.15081262588501
    7. '():
' → logprob: -7.65081262588501
    8. '<|end|>' → logprob: -7.77581262588501
    9. '(
' → logprob: -7.90081262588501
    10. '[' → logprob: -7.90081262588501

Token 368: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' (adapté à ' md') → logprob: -0.6468661427497864
    2. ' md' → logprob: -0.7718661427497864
    3. '   ' → logprob: -4.271866321563721
    4. '	md' → logprob: -9.521865844726562
    5. 'mod' → logprob: -9.646865844726562
    6. ' mod' → logprob: -10.146865844726562
    7. '_md' → logprob: -11.896865844726562
    8. '```' → logprob: -12.021865844726562
    9. '    ' → logprob: -12.271865844726562
    10. '       ' → logprob: -13.271865844726562

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246292024850845
    2. ' =' → logprob: -3.7732462882995605
    3. ',' → logprob: -14.773246765136719
    4. '[' → logprob: -15.023246765136719
    5. '=
' → logprob: -16.64824676513672
    6. '=[' → logprob: -16.89824676513672
    7. '   ' → logprob: -17.77324676513672
    8. '=

' → logprob: -17.89824676513672
    9. ')' → logprob: -18.14824676513672
    10. '=[]' → logprob: -18.52324676513672

Token 370: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5766656398773193
    2. ' mod' → logprob: -0.8266656398773193
    3. '[' → logprob: -7.701665878295898
    4. ' [' → logprob: -8.451665878295898
    5. '[D' → logprob: -10.576665878295898
    6. '	mod' → logprob: -11.201665878295898
    7. '(mod' → logprob: -12.076665878295898
    8. '_mod' → logprob: -12.326665878295898
    9. ' ' → logprob: -12.951665878295898
    10. 'm' → logprob: -13.076665878295898

Token 371: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.73314929776825e-05
    2. '(D' → logprob: -10.00008773803711
    3. 'List' → logprob: -10.25008773803711
    4. '[D' → logprob: -12.75008773803711
    5. '_List' → logprob: -13.37508773803711
    6. '_lst' → logprob: -14.12508773803711
    7. '_' → logprob: -14.75008773803711
    8. 'ist' → logprob: -15.87508773803711
    9. 'list' → logprob: -16.37508773803711
    10. '_lists' → logprob: -16.50008773803711

Token 372: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. ' (' → logprob: -18.125
    4. '(
' → logprob: -18.375
    5. '[D' → logprob: -19.25
    6. '(DE' → logprob: -19.5
    7. '(Dense' → logprob: -19.75
    8. 'D' → logprob: -19.75
    9. '(C' → logprob: -20.125
    10. '(Data' → logprob: -20.375

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046749215107411146
    2. ',m' → logprob: -7.750467300415039
    3. ' ,' → logprob: -10.250467300415039
    4. ',n' → logprob: -14.500467300415039
    5. 'm' → logprob: -14.750467300415039
    6. ',
' → logprob: -15.125467300415039
    7. ',K' → logprob: -16.37546730041504
    8. '   ' → logprob: -17.37546730041504
    9. '(' → logprob: -17.50046730041504
    10. ' ' → logprob: -17.62546730041504

Token 374: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10020710527896881
    2. ' m' → logprob: -2.3502070903778076
    3. '<|end|>' → logprob: -15.350207328796387
    4. ')m' → logprob: -16.22520637512207
    5. '	m' → logprob: -16.60020637512207
    6. ' м' → logprob: -16.85020637512207
    7. ')' → logprob: -16.97520637512207
    8. '[' → logprob: -17.85020637512207
    9. ' ' → logprob: -17.85020637512207
    10. ' ' → logprob: -18.85020637512207

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.637786231702194e-05
    2. ',K' → logprob: -9.750086784362793
    3. ' ,' → logprob: -10.750086784362793
    4. ',n' → logprob: -12.625086784362793
    5. ',m' → logprob: -13.875086784362793
    6. 'K' → logprob: -14.500086784362793
    7. ',x' → logprob: -14.500086784362793
    8. ')' → logprob: -14.500086784362793
    9. 'm' → logprob: -14.750086784362793
    10. ',k' → logprob: -15.375086784362793

Token 376: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001170460251159966
    2. ' K' → logprob: -6.751170635223389
    3. '	K' → logprob: -15.62617015838623
    4. '   ' → logprob: -17.126171112060547
    5. '>K' → logprob: -17.501171112060547
    6. ')' → logprob: -17.626171112060547
    7. '
' → logprob: -18.626171112060547
    8. ',K' → logprob: -18.876171112060547
    9. ' ' → logprob: -19.001171112060547
    10. '(K' → logprob: -19.501171112060547

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -15.125024795532227
    4. ')

' → logprob: -16.625024795532227
    5. '   ' → logprob: -17.375024795532227
    6. ')
' → logprob: -17.625024795532227
    7. '),' → logprob: -17.750024795532227
    8. ');' → logprob: -18.125024795532227
    9. ').' → logprob: -18.500024795532227
    10. ',' → logprob: -18.750024795532227

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03816588222980499
    2. '
' → logprob: -3.538165807723999
    3. '    
' → logprob: -4.913166046142578
    4. ')' → logprob: -8.288166046142578
    5. '  
' → logprob: -8.663166046142578
    6. '<|end|>' → logprob: -8.663166046142578
    7. '```' → logprob: -9.538166046142578
    8. 'md' → logprob: -9.538166046142578
    9. ' sm' → logprob: -9.663166046142578
    10. ',' → logprob: -10.038166046142578

Token 379: ' limit' (ID: 5967)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.018330208957195282
    2. 'ro' → logprob: -4.393330097198486
    3. 'limit' (adapté à ' limit') → logprob: -5.643330097198486
    4. 'sum' → logprob: -6.643330097198486
    5. ' sm' → logprob: -7.893330097198486
    6. '   ' → logprob: -8.143330574035645
    7. 's' → logprob: -9.268330574035645
    8. 'md' → logprob: -9.268330574035645
    9. 'lim' → logprob: -11.143330574035645
    10. 'n' → logprob: -11.268330574035645

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759450793266296
    2. '=' → logprob: -0.8259450793266296
    3. ',' → logprob: -13.200944900512695
    4. ')' → logprob: -13.950944900512695
    5. ' ' → logprob: -14.325944900512695
    6. ' =
' → logprob: -14.575944900512695
    7. '<|end|>' → logprob: -14.700944900512695
    8. '   ' → logprob: -14.825944900512695
    9. '=int' → logprob: -15.575944900512695
    10. '```' → logprob: -16.325944900512695

Token 381: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6809211373329163
    2. 'n' → logprob: -1.3059210777282715
    3. '(n' → logprob: -2.8059210777282715
    4. '(x' → logprob: -2.8059210777282715
    5. 'min' → logprob: -3.0559210777282715
    6. 'K' → logprob: -4.0559210777282715
    7. '(min' → logprob: -4.4309210777282715
    8. ' (' → logprob: -5.3059210777282715
    9. ' x' → logprob: -5.3059210777282715
    10. '(K' → logprob: -5.3059210777282715

Token 382: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28396373987197876
    2. 'x' → logprob: -1.408963680267334
    3. 'K' → logprob: -7.158963680267334
    4. '(n' → logprob: -7.283963680267334
    5. '(x' → logprob: -7.533963680267334
    6. 'm' → logprob: -8.033964157104492
    7. 'min' → logprob: -8.908964157104492
    8. ' n' → logprob: -9.658964157104492
    9. '(K' → logprob: -9.658964157104492
    10. ' x' → logprob: -10.033964157104492

Token 383: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20316848158836365
    2. ' -' → logprob: -1.703168511390686
    3. ' ' → logprob: -7.4531683921813965
    4. ')' → logprob: -7.9531683921813965
    5. '%' → logprob: -7.9531683921813965
    6. ' //' → logprob: -8.703168869018555
    7. '   ' → logprob: -9.078168869018555
    8. ' %' → logprob: -9.203168869018555
    9. '1' → logprob: -10.328168869018555
    10. '	' → logprob: -11.203168869018555

Token 384: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009784539230167866
    2. ' ' → logprob: -4.634784698486328
    3. '<|end|>' → logprob: -11.384784698486328
    4. '2' → logprob: -11.884784698486328
    5. '   ' → logprob: -12.384784698486328
    6. 'def' → logprob: -13.384784698486328
    7. '<|end|>' → logprob: -14.259784698486328
    8. '0' → logprob: -14.384784698486328
    9. '  ' → logprob: -14.509784698486328
    10. '
' → logprob: -14.634784698486328

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010235115041723475
    2. ' ' → logprob: -9.250102043151855
    3. '2' → logprob: -12.750102043151855
    4. '<|end|>' → logprob: -13.625102043151855
    5. '
' → logprob: -14.500102043151855
    6. 'def' → logprob: -14.625102043151855
    7. '   ' → logprob: -14.875102043151855
    8. '<|end|>' → logprob: -15.625102043151855
    9. '...' → logprob: -16.375102996826172
    10. ')' → logprob: -16.437602996826172

Token 386: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018585572252050042
    2. ')//' → logprob: -6.626858711242676
    3. ' )' → logprob: -7.626858711242676
    4. ')%' → logprob: -10.626858711242676
    5. '//' → logprob: -12.251858711242676
    6. ')
' → logprob: -12.251858711242676
    7. '%' → logprob: -12.626858711242676
    8. '   ' → logprob: -12.626858711242676
    9. ' //' → logprob: -12.876858711242676
    10. ' %' → logprob: -14.251858711242676

Token 387: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.15761278569698334
    2. ' //' → logprob: -2.4076128005981445
    3. '%' → logprob: -2.9076128005981445
    4. '//' → logprob: -6.9076128005981445
    5. ')' → logprob: -9.532612800598145
    6. '   ' → logprob: -9.782612800598145
    7. '%n' → logprob: -11.657612800598145
    8. '	' → logprob: -11.907612800598145
    9. '```' → logprob: -11.907612800598145
    10. ' ' → logprob: -12.157612800598145

Token 388: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02324594371020794
    2. ' K' → logprob: -3.7732460498809814
    3. 'k' → logprob: -15.648245811462402
    4. '	K' → logprob: -15.773245811462402
    5. ' ' → logprob: -16.52324676513672
    6. '   ' → logprob: -16.89824676513672
    7. '>K' → logprob: -17.27324676513672
    8. '(K' → logprob: -18.89824676513672
    9. '  ' → logprob: -19.27324676513672
    10. '```' → logprob: -19.39824676513672

Token 389: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.37695521116256714
    2. '+' → logprob: -1.751955270767212
    3. '   ' → logprob: -2.126955270767212
    4. '<|end|>' → logprob: -4.626955032348633
    5. '
' → logprob: -4.751955032348633
    6. '<|end|>' → logprob: -6.876955032348633
    7. '+
' → logprob: -7.376955032348633
    8. '```' → logprob: -7.626955032348633
    9. '    
' → logprob: -7.751955032348633
    10. ' +
' → logprob: -8.751955032348633

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30545923113822937
    2. '
' → logprob: -1.6804592609405518
    3. '    
' → logprob: -3.6804592609405518
    4. 'sm' → logprob: -3.8054592609405518
    5. '<|end|>' → logprob: -4.180459022521973
    6. ' sm' → logprob: -5.055459022521973
    7. '  
' → logprob: -6.180459022521973
    8. '```' → logprob: -6.805459022521973
    9. ',' → logprob: -6.930459022521973
    10. ' +' → logprob: -7.680459022521973

Token 391: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' (adapté à ' sm') → logprob: -0.6093101501464844
    2. ' sm' → logprob: -0.8593101501464844
    3. '   ' → logprob: -3.4843101501464844
    4. ',' → logprob: -6.484310150146484
    5. ')' → logprob: -8.859310150146484
    6. '    
' → logprob: -8.984310150146484
    7. '	sm' → logprob: -9.484310150146484
    8. 's' → logprob: -9.859310150146484
    9. 'md' → logprob: -9.859310150146484
    10. '_sm' → logprob: -10.359310150146484

Token 392: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -5.943783253314905e-05
    2. 'a' → logprob: -10.750059127807617
    3. 'd' → logprob: -10.750059127807617
    4. '=' → logprob: -12.125059127807617
    5. ',' → logprob: -12.250059127807617
    6. ' =' → logprob: -12.625059127807617
    7. '_da' → logprob: -14.125059127807617
    8. '   ' → logprob: -14.625059127807617
    9. 'да' → logprob: -15.250059127807617
    10. 'ada' → logprob: -15.250059127807617

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010835404973477125
    2. '=' → logprob: -7.1260833740234375
    3. ',m' → logprob: -9.001083374023438
    4. ' =' → logprob: -9.126083374023438
    5. ' ,' → logprob: -10.001083374023438
    6. ',d' → logprob: -15.376083374023438
    7. ',n' → logprob: -15.751083374023438
    8. ',s' → logprob: -15.876083374023438
    9. 'md' → logprob: -16.001083374023438
    10. ',val' → logprob: -16.001083374023438

Token 394: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.042339522391557693
    2. ' m' → logprob: -3.292339563369751
    3. 'md' → logprob: -5.542339324951172
    4. 'compute' → logprob: -8.792339324951172
    5. '0' → logprob: -9.792339324951172
    6. ' md' → logprob: -10.417339324951172
    7. 'sum' → logprob: -10.542339324951172
    8. 'def' → logprob: -11.042339324951172
    9. ' compute' → logprob: -11.292339324951172
    10. '   ' → logprob: -11.292339324951172

Token 395: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.001054603373631835
    2. 'a' → logprob: -6.876054763793945
    3. 'd' → logprob: -11.501054763793945
    4. '_da' → logprob: -13.626054763793945
    5. '```' → logprob: -13.688554763793945
    6. ' da' → logprob: -13.813554763793945
    7. 'm' → logprob: -13.938554763793945
    8. 'def' → logprob: -14.001054763793945
    9. '=' → logprob: -14.251054763793945
    10. 'да' → logprob: -14.626054763793945

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. 'o' → logprob: -14.75
    3. '_' → logprob: -16.75
    4. ' ' → logprob: -18.125
    5. 'O' → logprob: -19.125
    6. '=' → logprob: -19.375
    7. '00' → logprob: -19.375
    8. ' =' → logprob: -19.75
    9. '```' → logprob: -19.75
    10. '۰' → logprob: -19.875

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '   ' → logprob: -15.350207328796387
    4. ' ' → logprob: -17.22520637512207
    5. ',' → logprob: -18.22520637512207
    6. '```' → logprob: -18.22520637512207
    7. '=get' → logprob: -18.72520637512207
    8. '＝' → logprob: -18.72520637512207
    9. ')' → logprob: -18.72520637512207
    10. ')=' → logprob: -19.22520637512207

Token 398: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.005233882926404476
    2. ' compute' → logprob: -5.2552337646484375
    3. '   ' → logprob: -15.880233764648438
    4. ' ' → logprob: -17.505233764648438
    5. 'calculate' → logprob: -18.005233764648438
    6. '.compute' → logprob: -19.505233764648438
    7. 'computer' → logprob: -19.755233764648438
    8. '_compute' → logprob: -20.005233764648438
    9. '  ' → logprob: -20.505233764648438
    10. 'comput' → logprob: -20.630233764648438

Token 399: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.00012403888104017824
    2. 'sm' → logprob: -9.000123977661133
    3. '(sm' → logprob: -15.250123977661133
    4. '	sm' → logprob: -16.375123977661133
    5. '_s' → logprob: -16.625123977661133
    6. 'Sm' → logprob: -16.750123977661133
    7. ' sm' → logprob: -17.250123977661133
    8. '_m' → logprob: -18.000123977661133
    9. '_SM' → logprob: -18.625123977661133
    10. '_sw' → logprob: -18.625123977661133

Token 400: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -3.8219583075260743e-05
    2. 'a' → logprob: -10.875038146972656
    3. 'd' → logprob: -12.000038146972656
    4. 'да' → logprob: -13.000038146972656
    5. '   ' → logprob: -13.250038146972656
    6. 'def' → logprob: -14.312538146972656
    7. '0' → logprob: -14.625038146972656
    8. ' da' → logprob: -14.687538146972656
    9. '_da' → logprob: -14.875038146972656
    10. '(' → logprob: -14.937538146972656

Token 401: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0200811754912138
    2. '_md' → logprob: -4.270081043243408
    3. 'md' → logprob: -5.645081043243408
    4. '(md' → logprob: -6.395081043243408
    5. ',' → logprob: -7.770081043243408
    6. 'm' → logprob: -8.645081520080566
    7. 'a' → logprob: -10.645081520080566
    8. '```' → logprob: -11.270081520080566
    9. '_sm' → logprob: -11.520081520080566
    10. 'sm' → logprob: -12.145081520080566

Token 402: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.007828421890735626
    2. 'd' → logprob: -4.882828235626221
    3. '0' → logprob: -9.632828712463379
    4. 'a' → logprob: -10.132828712463379
    5. '(' → logprob: -10.382828712463379
    6. '[i' → logprob: -11.132828712463379
    7. '(d' → logprob: -12.007828712463379
    8. '(i' → logprob: -12.132828712463379
    9. 'dao' → logprob: -12.257828712463379
    10. '[' → logprob: -12.320328712463379

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.065608562901616e-05
    2. 'a' → logprob: -9.625081062316895
    3. '(m' → logprob: -13.000081062316895
    4. ' ' → logprob: -13.125081062316895
    5. '(' → logprob: -13.250081062316895
    6. '```' → logprob: -13.500081062316895
    7. 'o' → logprob: -13.625081062316895
    8. '   ' → logprob: -13.750081062316895
    9. '[' → logprob: -14.125081062316895
    10. 'm' → logprob: -14.750081062316895

Token 404: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -9.088346359931165e-07
    2. 'md' → logprob: -14.375000953674316
    3. '(mod' → logprob: -15.625000953674316
    4. '	md' → logprob: -16.875
    5. '.md' → logprob: -17.5
    6. ' (' → logprob: -17.875
    7. ' md' → logprob: -18.875
    8. '(
' → logprob: -18.875
    9. '```' → logprob: -19.0
    10. '/md' → logprob: -19.25

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001987722353078425
    2. ' ,' → logprob: -8.750198364257812
    3. 'limit' → logprob: -10.750198364257812
    4. '(limit' → logprob: -11.000198364257812
    5. ' limit' → logprob: -14.000198364257812
    6. ',
' → logprob: -14.375198364257812
    7. '(md' → logprob: -16.000198364257812
    8. '   ' → logprob: -16.250198364257812
    9. '_limit' → logprob: -16.375198364257812
    10. ')' → logprob: -16.750198364257812

Token 406: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6781368255615234
    2. 'limit' → logprob: -0.8031368255615234
    3. ' limit' → logprob: -3.4281368255615234
    4. ' K' → logprob: -4.428136825561523
    5. 'md' → logprob: -10.678136825561523
    6. 'lim' → logprob: -10.803136825561523
    7. '   ' → logprob: -10.803136825561523
    8. '    ' → logprob: -10.803136825561523
    9. ' ' → logprob: -11.553136825561523
    10. 'm' → logprob: -11.928136825561523

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. 'limit' → logprob: -12.25001049041748
    3. ' ,' → logprob: -12.50001049041748
    4. ',
' → logprob: -13.25001049041748
    5. ' limit' → logprob: -16.125011444091797
    6. ')' → logprob: -16.625011444091797
    7. '(limit' → logprob: -16.875011444091797
    8. ',

' → logprob: -17.625011444091797
    9. '   ' → logprob: -17.750011444091797
    10. '```' → logprob: -18.375011444091797

Token 408: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00015860427811276168
    2. ' limit' → logprob: -8.750158309936523
    3. '(limit' → logprob: -17.125158309936523
    4. '   ' → logprob: -17.375158309936523
    5. '
' → logprob: -18.250158309936523
    6. 'lim' → logprob: -18.750158309936523
    7. ' ' → logprob: -20.875158309936523
    8. '-limit' → logprob: -21.125158309936523
    9. '_limit' → logprob: -21.250158309936523
    10. '    ' → logprob: -21.375158309936523

Token 409: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39541059732437134
    2. ' +' → logprob: -1.1454105377197266
    3. ')' → logprob: -4.770410537719727
    4. '   ' → logprob: -11.520410537719727
    5. ')
' → logprob: -11.520410537719727
    6. '+)' → logprob: -12.895410537719727
    7. ')+' → logprob: -13.145410537719727
    8. ' )' → logprob: -13.520410537719727
    9. '```' → logprob: -16.020410537719727
    10. ' ' → logprob: -16.145410537719727

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023612072691321373
    2. '<|end|>' → logprob: -4.648612022399902
    3. '
' → logprob: -5.273612022399902
    4. '	s' → logprob: -6.398612022399902
    5. ' sm' → logprob: -6.523612022399902
    6. '    
' → logprob: -6.648612022399902
    7. '	sm' → logprob: -7.023612022399902
    8. 'sm' → logprob: -7.148612022399902
    9. '```' → logprob: -7.523612022399902
    10. ')' → logprob: -7.773612022399902

Token 411: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009257660247385502
    2. ' sm' → logprob: -5.259257793426514
    3. '   ' → logprob: -5.634257793426514
    4. '
' → logprob: -8.759257316589355
    5. ' s' → logprob: -10.009257316589355
    6. 'md' → logprob: -10.009257316589355
    7. 'sm' (adapté à ' sm') → logprob: -10.384257316589355
    8. ',' → logprob: -10.384257316589355
    9. '       ' → logprob: -10.759257316589355
    10. '```' → logprob: -10.884257316589355

Token 412: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28298646211624146
    2. 'da' → logprob: -1.4079864025115967
    3. ',' → logprob: -6.907986640930176
    4. 'a' → logprob: -7.407986640930176
    5. 's' → logprob: -9.782986640930176
    6. ' =' → logprob: -10.407986640930176
    7. '=' → logprob: -10.532986640930176
    8. '   ' → logprob: -10.907986640930176
    9. '
' → logprob: -11.282986640930176
    10. 'sm' → logprob: -11.282986640930176

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018232580623589456
    2. ' ,' → logprob: -8.750182151794434
    3. '=' → logprob: -11.750182151794434
    4. '_,' → logprob: -12.125182151794434
    5. 'md' → logprob: -13.000182151794434
    6. ' =' → logprob: -13.250182151794434
    7. '```' → logprob: -13.625182151794434
    8. ',m' → logprob: -13.750182151794434
    9. '‌,' → logprob: -14.750182151794434
    10. ',
' → logprob: -15.000182151794434

Token 414: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.2014598250389099
    2. ' md' → logprob: -1.7014598846435547
    3. 'm' → logprob: -10.576459884643555
    4. ' m' → logprob: -11.701459884643555
    5. '(md' → logprob: -12.451459884643555
    6. '	md' → logprob: -12.451459884643555
    7. '_md' → logprob: -12.701459884643555
    8. ' ' → logprob: -14.326459884643555
    9. '0' → logprob: -14.701459884643555
    10. '.md' → logprob: -15.451459884643555

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004366294015198946
    2. ' =' → logprob: -8.500436782836914
    3. '=' → logprob: -9.750436782836914
    4. ',' → logprob: -10.000436782836914
    5. '_' → logprob: -10.000436782836914
    6. '```' → logprob: -10.125436782836914
    7. '[' → logprob: -10.500436782836914
    8. 'md' → logprob: -12.375436782836914
    9. ' ' → logprob: -13.000436782836914
    10. 'def' → logprob: -13.125436782836914

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142552256584167
    2. '=' → logprob: -1.701425552368164
    3. '   ' → logprob: -11.701425552368164
    4. ',' → logprob: -12.951425552368164
    5. ' ' → logprob: -14.201425552368164
    6. '```' → logprob: -15.701425552368164
    7. '  ' → logprob: -15.826425552368164
    8. '    ' → logprob: -15.826425552368164
    9. ')' → logprob: -16.826425552368164
    10. '[' → logprob: -16.951425552368164

Token 417: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.02324605919420719
    2. ' compute' → logprob: -3.7732460498809814
    3. '_compute' → logprob: -15.023245811462402
    4. '.compute' → logprob: -15.523245811462402
    5. 'calculate' → logprob: -17.39824676513672
    6. ' ' → logprob: -17.39824676513672
    7. 'computer' → logprob: -17.52324676513672
    8. '(com' → logprob: -18.77324676513672
    9. '
' → logprob: -18.77324676513672
    10. '0' → logprob: -19.02324676513672

Token 418: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.01106278970837593
    2. 's' → logprob: -4.5110626220703125
    3. 'md' → logprob: -11.261062622070312
    4. '_md' → logprob: -13.636062622070312
    5. '(s' → logprob: -14.636062622070312
    6. 'compute' → logprob: -15.511062622070312
    7. '(md' → logprob: -16.011062622070312
    8. '
' → logprob: -17.636062622070312
    9. '```' → logprob: -17.886062622070312
    10. '_compute' → logprob: -18.011062622070312

Token 419: 'md' (ID: 3978)
  Prédit: 'md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -1.3425219549390022e-05
    2. 'mod' → logprob: -11.62501335144043
    3. '_md' → logprob: -12.62501335144043
    4. 'm' → logprob: -14.37501335144043
    5. 'd' → logprob: -16.00001335144043
    6. ' md' → logprob: -16.25001335144043
    7. 'mb' → logprob: -17.12501335144043
    8. '_m' → logprob: -17.12501335144043
    9. 'MD' → logprob: -17.37501335144043
    10. 'mdat' → logprob: -17.62501335144043

Token 420: '_md' (ID: 82641)
  Prédit: '_md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_md' → logprob: -0.5132083892822266
    2. '(md' → logprob: -1.5132083892822266
    3. '0' → logprob: -2.1382083892822266
    4. 'md' → logprob: -2.7632083892822266
    5. '	md' → logprob: -8.888208389282227
    6. '```' → logprob: -10.013208389282227
    7. ' md' → logprob: -10.513208389282227
    8. 'd' → logprob: -11.013208389282227
    9. '[' → logprob: -11.013208389282227
    10. '/md' → logprob: -11.638208389282227

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.87500286102295
    3. 'O' → logprob: -14.62500286102295
    4. 'o' → logprob: -14.87500286102295
    5. ' ' → logprob: -14.87500286102295
    6. '```' → logprob: -15.12500286102295
    7. '(md' → logprob: -15.87500286102295
    8. '[' → logprob: -16.500003814697266
    9. '   ' → logprob: -16.500003814697266
    10. '_' → logprob: -16.625003814697266

Token 422: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -2.5776860184123507e-06
    2. 'md' → logprob: -13.37500286102295
    3. '(mod' → logprob: -15.12500286102295
    4. '(' → logprob: -15.25000286102295
    5. '	md' → logprob: -16.125001907348633
    6. '.md' → logprob: -16.625001907348633
    7. ' (' → logprob: -17.000001907348633
    8. '(
' → logprob: -17.750001907348633
    9. ' md' → logprob: -17.875001907348633
    10. '```' → logprob: -18.000001907348633

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47447824478149414
    2. '(md' → logprob: -0.9744782447814941
    3. 'md' → logprob: -8.349477767944336
    4. ' ,' → logprob: -9.849477767944336
    5. '	md' → logprob: -10.599477767944336
    6. ' md' → logprob: -10.599477767944336
    7. ')' → logprob: -10.974477767944336
    8. '(' → logprob: -11.599477767944336
    9. '   ' → logprob: -11.724477767944336
    10. '```' → logprob: -12.099477767944336

Token 424: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01108389999717474
    2. ' K' → logprob: -4.511084079742432
    3. '   ' → logprob: -10.886083602905273
    4. 'limit' → logprob: -12.136083602905273
    5. '0' → logprob: -12.761083602905273
    6. ' ' → logprob: -13.011083602905273
    7. 'md' → logprob: -13.886083602905273
    8. '    ' → logprob: -13.886083602905273
    9. ')' → logprob: -14.011083602905273
    10. ' limit' → logprob: -14.136083602905273

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003948028665035963
    2. ' ,' → logprob: -5.753948211669922
    3. '(limit' → logprob: -8.378948211669922
    4. 'limit' → logprob: -9.003948211669922
    5. '   ' → logprob: -9.753948211669922
    6. '0' → logprob: -9.878948211669922
    7. '(' → logprob: -10.003948211669922
    8. '(md' → logprob: -10.128948211669922
    9. '```' → logprob: -10.253948211669922
    10. ',K' → logprob: -10.753948211669922

Token 426: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.004790972452610731
    2. ' limit' → logprob: -5.379790782928467
    3. '0' → logprob: -9.129791259765625
    4. 'K' → logprob: -10.504791259765625
    5. '(limit' → logprob: -10.879791259765625
    6. 'lim' → logprob: -12.754791259765625
    7. 'start' → logprob: -13.254791259765625
    8. '
' → logprob: -13.379791259765625
    9. 'n' → logprob: -13.379791259765625
    10. ' K' → logprob: -13.504791259765625

Token 427: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26810964941978455
    2. '+' → logprob: -1.768109679222107
    3. ' +' → logprob: -2.7681095600128174
    4. ')
' → logprob: -7.6431097984313965
    5. ',' → logprob: -7.7681097984313965
    6. '+)' → logprob: -7.8931097984313965
    7. '   ' → logprob: -8.018109321594238
    8. ' )' → logprob: -9.393109321594238
    9. '+n' → logprob: -11.268109321594238
    10. '```' → logprob: -11.893109321594238

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018662870861589909
    2. '<|end|>' → logprob: -6.876866340637207
    3. ')' → logprob: -7.876866340637207
    4. '
' → logprob: -8.876866340637207
    5. '    
' → logprob: -9.001866340637207
    6. '    ' → logprob: -9.501866340637207
    7. ',' → logprob: -10.251866340637207
    8. '```' → logprob: -10.876866340637207
    9. ' return' → logprob: -11.501866340637207
    10. '<|end|>' → logprob: -12.001866340637207

Token 429: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037098053842782974
    2. 'sm' → logprob: -4.412097930908203
    3. ' sm' → logprob: -5.412097930908203
    4. 'numer' → logprob: -5.912097930908203
    5. 'sum' (adapté à ' sum') → logprob: -6.037097930908203
    6. ')' → logprob: -6.037097930908203
    7. '```' → logprob: -6.037097930908203
    8. ' numerator' → logprob: -6.412097930908203
    9. 'result' → logprob: -6.537097930908203
    10. 'return' → logprob: -6.787097930908203

Token 430: '_md' (ID: 82641)
  Prédit: '_md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_md' → logprob: -5.490809417096898e-05
    2. 'md' → logprob: -10.125055313110352
    3. '_' → logprob: -11.875055313110352
    4. 'd' → logprob: -12.000055313110352
    5. '_val' → logprob: -15.000055313110352
    6. '_d' → logprob: -15.125055313110352
    7. '_pd' → logprob: -15.875055313110352
    8. '_dm' → logprob: -16.00005531311035
    9. '_sm' → logprob: -16.12505531311035
    10. '_=' → logprob: -16.12505531311035

Token 431: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.03075217641890049
    2. ' =' → logprob: -3.655752182006836
    3. '=' → logprob: -5.780752182006836
    4. '_md' → logprob: -7.030752182006836
    5. '(md' → logprob: -8.905752182006836
    6. '_' → logprob: -9.030752182006836
    7. '_value' → logprob: -9.655752182006836
    8. 'val' → logprob: -9.780752182006836
    9. 'md' → logprob: -10.655752182006836
    10. '   ' → logprob: -10.905752182006836

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198415905237198
    2. '=' → logprob: -2.811984062194824
    3. '=sum' → logprob: -11.061984062194824
    4. ',' → logprob: -14.561984062194824
    5. '  ' → logprob: -16.68698501586914
    6. ' ' → logprob: -16.68698501586914
    7. '   ' → logprob: -16.93698501586914
    8. ')' → logprob: -17.06198501586914
    9. 'sum' → logprob: -17.06198501586914
    10. '=s' → logprob: -17.06198501586914

Token 433: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023430652916431427
    2. ' sum' → logprob: -3.773430585861206
    3. 'sm' → logprob: -8.773430824279785
    4. ' sm' → logprob: -11.398430824279785
    5. 's' → logprob: -11.773430824279785
    6. '(sum' → logprob: -12.398430824279785
    7. '	sum' → logprob: -13.398430824279785
    8. ' ' → logprob: -13.648430824279785
    9. '   ' → logprob: -13.773430824279785
    10. ' ' → logprob: -14.398430824279785

Token 434: '_md' (ID: 82641)
  Prédit: '(md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.0035560044925659895
    2. 'md' → logprob: -6.128555774688721
    3. '_md' → logprob: -6.628555774688721
    4. '(' → logprob: -10.878556251525879
    5. '	md' → logprob: -11.378556251525879
    6. 'Md' → logprob: -12.378556251525879
    7. ' md' → logprob: -12.628556251525879
    8. '.md' → logprob: -13.378556251525879
    9. 's' → logprob: -13.503556251525879
    10. '(s' → logprob: -13.628556251525879

Token 435: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.625027656555176
    3. ' (' → logprob: -13.500027656555176
    4. 'md' → logprob: -14.375027656555176
    5. '(
' → logprob: -14.750027656555176
    6. '.md' → logprob: -14.875027656555176
    7. '(mod' → logprob: -14.875027656555176
    8. '	md' → logprob: -16.000028610229492
    9. '(mc' → logprob: -16.250028610229492
    10. '(nd' → logprob: -17.250028610229492

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00081153231440112
    2. ')
' → logprob: -7.125811576843262
    3. ' )' → logprob: -12.375811576843262
    4. '   ' → logprob: -14.000811576843262
    5. ')

' → logprob: -14.125811576843262
    6. '())' → logprob: -14.500811576843262
    7. '()' → logprob: -16.125810623168945
    8. ')
' → logprob: -16.250810623168945
    9. '<|end|>' → logprob: -16.250810623168945
    10. '[' → logprob: -17.125810623168945

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009482608293183148
    2. ' ro' → logprob: -7.625948429107666
    3. 'ro' → logprob: -8.375947952270508
    4. '<|end|>' → logprob: -9.000947952270508
    5. '```' → logprob: -10.250947952270508
    6. ')' → logprob: -11.000947952270508
    7. '
' → logprob: -11.250947952270508
    8. '_ro' → logprob: -11.375947952270508
    9. ',' → logprob: -12.000947952270508
    10. '    
' → logprob: -12.625947952270508

Token 438: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' (adapté à ' ro') → logprob: -0.34997648000717163
    2. '   ' → logprob: -1.3499765396118164
    3. ' ro' → logprob: -3.3499765396118164
    4. '       ' → logprob: -8.474976539611816
    5. '```' → logprob: -8.474976539611816
    6. 'return' → logprob: -8.849976539611816
    7. '
' → logprob: -9.599976539611816
    8. ' ' → logprob: -9.724976539611816
    9. '_ro' → logprob: -9.724976539611816
    10. ' return' → logprob: -10.724976539611816

Token 439: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00018983196059707552
    2. 'p' → logprob: -8.625189781188965
    3. ' =' → logprob: -12.375189781188965
    4. '_op' → logprob: -13.500189781188965
    5. 'o' → logprob: -13.625189781188965
    6. '0' → logprob: -14.250189781188965
    7. 'оп' → logprob: -14.375189781188965
    8. '=' → logprob: -14.375189781188965
    9. '   ' → logprob: -15.250189781188965
    10. '	op' → logprob: -15.500189781188965

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196802109479904
    2. '=' → logprob: -2.8119680881500244
    3. ',' → logprob: -14.936967849731445
    4. 's' → logprob: -17.936967849731445
    5. ' ' → logprob: -17.936967849731445
    6. ')' → logprob: -18.186967849731445
    7. '＝' → logprob: -19.436967849731445
    8. ' =
' → logprob: -19.936967849731445
    9. '=int' → logprob: -20.436967849731445
    10. '```' → logprob: -20.561967849731445

Token 441: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.10381091386079788
    2. ' compute' → logprob: -2.353811025619507
    3. '(n' → logprob: -5.853810787200928
    4. ' (' → logprob: -7.228810787200928
    5. '(' → logprob: -14.478811264038086
    6. 'n' → logprob: -14.603811264038086
    7. 'calculate' → logprob: -14.728811264038086
    8. 'calc' → logprob: -15.103811264038086
    9. ' n' → logprob: -15.228811264038086
    10. '_compute' → logprob: -15.353811264038086

Token 442: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.001083302078768611
    2. '(n' → logprob: -7.2510833740234375
    3. 'ro' → logprob: -8.001083374023438
    4. '(ro' → logprob: -10.376083374023438
    5. 'Ro' → logprob: -13.501083374023438
    6. '(' → logprob: -13.501083374023438
    7. '```' → logprob: -14.001083374023438
    8. 'n' → logprob: -14.001083374023438
    9. 's' → logprob: -15.376083374023438
    10. '_' → logprob: -15.501083374023438

Token 443: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.2948405128554441e-05
    2. 'оп' → logprob: -11.50001335144043
    3. '(op' → logprob: -13.50001335144043
    4. 'p' → logprob: -14.00001335144043
    5. 'ops' → logprob: -16.25001335144043
    6. '_op' → logprob: -16.37501335144043
    7. '	op' → logprob: -17.06251335144043
    8. 'o' → logprob: -17.62501335144043
    9. 'opup' → logprob: -17.68751335144043
    10. '(p' → logprob: -17.68751335144043

Token 444: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.0590548703912646e-05
    2. 'n' → logprob: -10.750030517578125
    3. '(' → logprob: -11.625030517578125
    4. ' (' → logprob: -16.000030517578125
    5. '(
' → logprob: -17.250030517578125
    6. ' n' → logprob: -17.875030517578125
    7. '	n' → logprob: -17.875030517578125
    8. ',n' → logprob: -18.375030517578125
    9. ')n' → logprob: -19.750030517578125
    10. '<n' → logprob: -19.875030517578125

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000918008794542402
    2. ',K' → logprob: -7.000917911529541
    3. ' ,' → logprob: -12.1259183883667
    4. 'K' → logprob: -14.6259183883667
    5. '<|end|>' → logprob: -15.3759183883667
    6. ',
' → logprob: -15.5009183883667
    7. ',k' → logprob: -17.000917434692383
    8. ' K' → logprob: -17.000917434692383
    9. ')' → logprob: -17.375917434692383
    10. '‌,' → logprob: -17.500917434692383

Token 446: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005234002135694027
    2. ' K' → logprob: -5.2552337646484375
    3. '   ' → logprob: -15.505233764648438
    4. ')' → logprob: -17.130233764648438
    5. '	K' → logprob: -17.630233764648438
    6. '```' → logprob: -17.630233764648438
    7. '>K' → logprob: -17.880233764648438
    8. ' ' → logprob: -18.630233764648438
    9. ',K' → logprob: -19.005233764648438
    10. '  ' → logprob: -19.630233764648438

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0484450437361374e-05
    2. ')
' → logprob: -10.125040054321289
    3. ' )' → logprob: -15.875040054321289
    4. ')

' → logprob: -16.62504005432129
    5. '   ' → logprob: -17.00004005432129
    6. ')n' → logprob: -17.87504005432129
    7. ')#' → logprob: -18.37504005432129
    8. ')return' → logprob: -18.62504005432129
    9. ')`' → logprob: -18.75004005432129
    10. ')
' → logprob: -19.00004005432129

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015344099141657352
    2. ')' → logprob: -5.140344142913818
    3. '<|end|>' → logprob: -5.265344142913818
    4. '```' → logprob: -6.765344142913818
    5. '	return' → logprob: -7.015344142913818
    6. '	n' → logprob: -7.640344142913818
    7. '	x' → logprob: -8.26534366607666
    8. '	md' → logprob: -8.76534366607666
    9. ',' → logprob: -9.01534366607666
    10. '[' → logprob: -9.14034366607666

Token 449: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.9188957214355469
    2. '   ' → logprob: -1.2938957214355469
    3. 'return' → logprob: -1.4188957214355469
    4. 'res' → logprob: -3.043895721435547
    5. 'numer' → logprob: -3.918895721435547
    6. 'term' → logprob: -4.918895721435547
    7. '```' → logprob: -6.168895721435547
    8. 'ret' → logprob: -6.668895721435547
    9. ' return' → logprob: -6.668895721435547
    10. 'answer' → logprob: -6.918895721435547

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011051944456994534
    2. '=' → logprob: -4.511052131652832
    3. ',' → logprob: -14.011052131652832
    4. ' ' → logprob: -14.261052131652832
    5. ' =)' → logprob: -14.261052131652832
    6. '<|end|>' → logprob: -14.511052131652832
    7. '   ' → logprob: -15.261052131652832
    8. ' =
' → logprob: -15.261052131652832
    9. '[' → logprob: -16.136051177978516
    10. '	' → logprob: -16.261051177978516

Token 451: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.01815134845674038
    2. ' calc' → logprob: -4.01815128326416
    3. '(calc' → logprob: -13.64315128326416
    4. 'cal' → logprob: -15.51815128326416
    5. '.calc' → logprob: -17.893152236938477
    6. '   ' → logprob: -18.018152236938477
    7. '_calc' → logprob: -18.268152236938477
    8. 'Calc' → logprob: -18.518152236938477
    9. '
' → logprob: -20.018152236938477
    10. '```' → logprob: -21.018152236938477

Token 452: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.320199877838604e-07
    2. '_res' → logprob: -16.125
    3. 'result' → logprob: -16.5
    4. '_' → logprob: -16.875
    5. ' _' → logprob: -17.25
    6. '_RESULT' → logprob: -17.25
    7. '_results' → logprob: -17.875
    8. '_Result' → logprob: -18.25
    9. '   ' → logprob: -18.5
    10. '```' → logprob: -19.75

Token 453: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023353327065706253
    2. '(' → logprob: -3.773353338241577
    3. '(
' → logprob: -9.273353576660156
    4. ' (' → logprob: -11.273353576660156
    5. '((' → logprob: -15.148353576660156
    6. '(
' → logprob: -15.398353576660156
    7. 'n' → logprob: -15.523353576660156
    8. '(

' → logprob: -15.648353576660156
    9. '```' → logprob: -15.898353576660156
    10. '   ' → logprob: -16.273353576660156

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026195356622338295
    2. ',x' → logprob: -6.002619743347168
    3. ' ,' → logprob: -9.002619743347168
    4. '   ' → logprob: -11.252619743347168
    5. ',
' → logprob: -12.377619743347168
    6. '=' → logprob: -13.502619743347168
    7. 'x' → logprob: -14.252619743347168
    8. '(x' → logprob: -15.252619743347168
    9. '=x' → logprob: -15.502619743347168
    10. ' x' → logprob: -15.502619743347168

Token 455: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0059290360659360886
    2. ' x' → logprob: -5.130928993225098
    3. '
' → logprob: -15.130928993225098
    4. '	x' → logprob: -16.255929946899414
    5. '   ' → logprob: -16.630929946899414
    6. ' ' → logprob: -17.380929946899414
    7. '```' → logprob: -18.255929946899414
    8. '    ' → logprob: -18.380929946899414
    9. '
' → logprob: -19.380929946899414
    10. '    
' → logprob: -19.630929946899414

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018824731232598424
    2. ',m' → logprob: -6.626882553100586
    3. ' ,' → logprob: -7.501882553100586
    4. ',
' → logprob: -13.126882553100586
    5. 'm' → logprob: -14.001882553100586
    6. '```' → logprob: -14.501882553100586
    7. '   ' → logprob: -15.376882553100586
    8. ')' → logprob: -15.626882553100586
    9. '[' → logprob: -16.126882553100586
    10. '=' → logprob: -16.751882553100586

Token 457: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.88418151892256e-05
    2. ' m' → logprob: -9.750059127807617
    3. '<|end|>' → logprob: -14.625059127807617
    4. ')' → logprob: -19.500059127807617
    5. '```' → logprob: -19.875059127807617
    6. ')m' → logprob: -20.125059127807617
    7. '	m' → logprob: -20.375059127807617
    8. '
' → logprob: -21.000059127807617
    9. ' ' → logprob: -21.375059127807617
    10. '%m' → logprob: -22.375059127807617

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005233656847849488
    2. ' ,' → logprob: -7.625523567199707
    3. ',sum' → logprob: -10.625523567199707
    4. 'sum' → logprob: -11.500523567199707
    5. ' sum' → logprob: -15.000523567199707
    6. ',
' → logprob: -15.000523567199707
    7. ')' → logprob: -15.625523567199707
    8. ',s' → logprob: -16.62552261352539
    9. '```' → logprob: -17.12552261352539
    10. '   ' → logprob: -17.62552261352539

Token 459: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0004306692280806601
    2. ' sum' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.125431060791016
    4. '
' → logprob: -19.875431060791016
    5. '	sum' → logprob: -20.125431060791016
    6. '(sum' → logprob: -20.875431060791016
    7. '  ' → logprob: -20.875431060791016
    8. '```' → logprob: -21.250431060791016
    9. '    ' → logprob: -21.375431060791016
    10. ' ' → logprob: -21.375431060791016

Token 460: '_md' (ID: 82641)
  Prédit: '_md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_md' → logprob: -7.584239938296378e-06
    2. 'md' → logprob: -12.125007629394531
    3. '_val' → logprob: -13.500007629394531
    4. '_mod' → logprob: -15.250007629394531
    5. '_mc' → logprob: -15.500007629394531
    6. '_cd' → logprob: -16.87500762939453
    7. '```' → logprob: -17.00000762939453
    8. ')' → logprob: -17.37500762939453
    9. '_pd' → logprob: -17.62500762939453
    10. '_sd' → logprob: -17.62500762939453

Token 461: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.016080472618341446
    2. 'val' → logprob: -4.141080379486084
    3. 'md' → logprob: -10.266080856323242
    4. '```' → logprob: -12.641080856323242
    5. 'Val' → logprob: -13.391080856323242
    6. '[' → logprob: -13.391080856323242
    7. ')' → logprob: -13.766080856323242
    8. '[val' → logprob: -14.516080856323242
    9. '_list' → logprob: -14.641080856323242
    10. '_VAL' → logprob: -14.891080856323242

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ',
' → logprob: -15.375059127807617
    4. ' ro' → logprob: -16.375059127807617
    5. 'ro' → logprob: -16.750059127807617
    6. ')' → logprob: -16.875059127807617
    7. '‌,' → logprob: -17.750059127807617
    8. '```' → logprob: -18.375059127807617
    9. ',
' → logprob: -19.000059127807617
    10. '_ro' → logprob: -19.500059127807617

Token 463: ' ro' (ID: 974)
  Prédit: ' ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.5759429931640625
    2. 'ro' → logprob: -0.8259429931640625
    3. '(ro' → logprob: -13.075942993164062
    4. '_ro' → logprob: -13.950942993164062
    5. 'roach' → logprob: -15.325942993164062
    6. '```' → logprob: -16.575942993164062
    7. '.ro' → logprob: -16.950942993164062
    8. 'r' → logprob: -16.950942993164062
    9. ')' → logprob: -17.075942993164062
    10. 'rop' → logprob: -17.200942993164062

Token 464: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.9361264946837764e-07
    2. 'оп' → logprob: -16.0
    3. 'o' → logprob: -18.0
    4. 'p' → logprob: -18.125
    5. '0' → logprob: -19.375
    6. '	op' → logprob: -19.5
    7. '(op' → logprob: -19.625
    8. '```' → logprob: -20.3125
    9. 'oop' → logprob: -20.6875
    10. 'ap' → logprob: -20.75

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004785744531545788
    2. ' ,' → logprob: -7.750478744506836
    3. 'sm' → logprob: -10.875478744506836
    4. ' sm' → logprob: -11.000478744506836
    5. '   ' → logprob: -11.625478744506836
    6. ',
' → logprob: -13.625478744506836
    7. '```' → logprob: -14.625478744506836
    8. ',s' → logprob: -15.375478744506836
    9. 'Sm' → logprob: -15.500478744506836
    10. '  ' → logprob: -15.500478744506836

Token 466: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.0067161982879042625
    2. ' sm' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.506715774536133
    4. '    ' → logprob: -16.381715774536133
    5. '	sm' → logprob: -16.756715774536133
    6. '       ' → logprob: -16.881715774536133
    7. '     ' → logprob: -17.131715774536133
    8. ' ' → logprob: -17.381715774536133
    9. 's' → logprob: -17.381715774536133
    10. 'sd' → logprob: -18.006715774536133

Token 467: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -2.3199920178740285e-05
    2. 'a' → logprob: -11.000022888183594
    3. 'd' → logprob: -12.500022888183594
    4. '0' → logprob: -13.250022888183594
    5. 'да' → logprob: -15.375022888183594
    6. '_da' → logprob: -16.625022888183594
    7. 'sa' → logprob: -16.750022888183594
    8. '1' → logprob: -16.875022888183594
    9. 'dao' → logprob: -16.875022888183594
    10. '```' → logprob: -17.250022888183594

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8590300139039755e-05
    2. ' ,' → logprob: -10.500048637390137
    3. ',m' → logprob: -10.875048637390137
    4. 'm' → logprob: -13.875048637390137
    5. ',
' → logprob: -14.750048637390137
    6. 'md' → logprob: -15.000048637390137
    7. '```' → logprob: -15.375048637390137
    8. ')' → logprob: -17.00004768371582
    9. ',

' → logprob: -17.37504768371582
    10. '   ' → logprob: -17.62504768371582

Token 469: ' md' (ID: 17280)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003181994194164872
    2. ' m' → logprob: -5.7531819343566895
    3. 'md' → logprob: -12.378182411193848
    4. 'mdb' → logprob: -17.75318145751953
    5. '```' → logprob: -17.75318145751953
    6. ' ' → logprob: -17.87818145751953
    7. '	m' → logprob: -17.87818145751953
    8. '   ' → logprob: -18.87818145751953
    9. ' md' → logprob: -19.87818145751953
    10. 'mdat' → logprob: -20.25318145751953

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. 'a' → logprob: -10.750021934509277
    3. 'da' → logprob: -15.125021934509277
    4. '[' → logprob: -16.500022888183594
    5. '```' → logprob: -16.500022888183594
    6. 'o' → logprob: -17.250022888183594
    7. '_' → logprob: -17.625022888183594
    8. '۰' → logprob: -18.125022888183594
    9. '０' → logprob: -18.187522888183594
    10. ' ' → logprob: -18.500022888183594

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001005419879220426
    2. ',m' → logprob: -7.50100564956665
    3. ' ,' → logprob: -7.75100564956665
    4. 'm' → logprob: -11.126005172729492
    5. '   ' → logprob: -12.876005172729492
    6. ',
' → logprob: -13.251005172729492
    7. ' m' → logprob: -13.501005172729492
    8. '```' → logprob: -13.876005172729492
    9. ' ' → logprob: -16.001005172729492
    10. ')' → logprob: -16.626005172729492

Token 472: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.626502990722656
    4. ' ' → logprob: -17.751502990722656
    5. '	m' → logprob: -18.751502990722656
    6. '  ' → logprob: -20.751502990722656
    7. '    ' → logprob: -20.876502990722656
    8. '     ' → logprob: -21.501502990722656
    9. '
' → logprob: -21.626502990722656
    10. '```' → logprob: -21.626502990722656

Token 473: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.5100666284561157
    2. 'a' → logprob: -1.1350666284561157
    3. '0' → logprob: -2.635066509246826
    4. '```' → logprob: -5.510066509246826
    5. ')' → logprob: -7.260066509246826
    6. ' ' → logprob: -7.385066509246826
    7. '   ' → logprob: -8.260066986083984
    8. 'A' → logprob: -8.385066986083984
    9. '  ' → logprob: -8.635066986083984
    10. '``' → logprob: -9.635066986083984

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -16.625
    4. '[' → logprob: -18.125
    5. 'o' → logprob: -18.375
    6. '<|end|>' → logprob: -18.875
    7. '۰' → logprob: -19.125
    8. ')' → logprob: -19.25
    9. ',' → logprob: -19.375
    10. '０' → logprob: -20.0

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '))' → logprob: -17.500001907348633
    6. ')return' → logprob: -17.625001907348633
    7. ')}' → logprob: -18.375001907348633
    8. '}' → logprob: -18.875001907348633
    9. ')#' → logprob: -19.750001907348633
    10. '()' → logprob: -20.000001907348633

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007469753036275506
    2. '
' → logprob: -7.875747203826904
    3. 'return' → logprob: -8.625746726989746
    4. '	return' → logprob: -9.375746726989746
    5. ' return' → logprob: -9.625746726989746
    6. '<|end|>' → logprob: -10.625746726989746
    7. '    
' → logprob: -12.000746726989746
    8. '```' → logprob: -13.375746726989746
    9. ':return' → logprob: -13.750746726989746
    10. ')' → logprob: -14.250746726989746

Token 477: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030579114332795143
    2. ' return' → logprob: -4.280579090118408
    3. '
' → logprob: -5.030579090118408
    4. '	return' → logprob: -5.405579090118408
    5. 'return' (adapté à ' return') → logprob: -5.530579090118408
    6. '<|end|>' → logprob: -7.030579090118408
    7. ')' → logprob: -8.655579566955566
    8. '    
' → logprob: -10.530579566955566
    9. ' ' → logprob: -10.530579566955566
    10. '```' → logprob: -10.780579566955566

Token 478: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.005233763717114925
    2. ' result' → logprob: -5.2552337646484375
    3. '(result' → logprob: -18.880233764648438
    4. '[result' → logprob: -22.255233764648438
    5. '_result' → logprob: -22.380233764648438
    6. '	result' → logprob: -22.630233764648438
    7. '0' → logprob: -24.005233764648438
    8. '$result' → logprob: -24.130233764648438
    9. ',result' → logprob: -24.380233764648438
    10. '=result' → logprob: -24.630233764648438

Token 479: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0054026078432798386
    2. ' process' → logprob: -5.880402565002441
    3. 'main' → logprob: -6.005402565002441
    4. 'process' → logprob: -9.130402565002441
    5. ' solve' → logprob: -11.130402565002441
    6. '	main' → logprob: -13.630402565002441
    7. '_main' → logprob: -13.755402565002441
    8. 'solve' → logprob: -14.005402565002441
    9. ' run' → logprob: -14.130402565002441
    10. ' solution' → logprob: -14.880402565002441

Token 482: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.15359927713871002
    2. '_single' → logprob: -2.653599262237549
    3. '_query' → logprob: -2.778599262237549
    4. '_' → logprob: -5.153599262237549
    5. '_multiple' → logprob: -6.278599262237549
    6. '_all' → logprob: -6.403599262237549
    7. '_list' → logprob: -9.028599739074707
    8. '_mult' → logprob: -9.778599739074707
    9. '_s' → logprob: -9.903599739074707
    10. ' _' → logprob: -10.403599739074707

Token 483: '(Q' (ID: 14437)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001458331593312323
    2. '(' → logprob: -6.626458168029785
    3. '(D' → logprob: -9.751458168029785
    4. '(query' → logprob: -10.376458168029785
    5. '(inputs' → logprob: -11.376458168029785
    6. '():' → logprob: -11.501458168029785
    7. '(list' → logprob: -13.001458168029785
    8. '(Input' → logprob: -13.001458168029785
    9. '(import' → logprob: -13.126458168029785
    10. '(INPUT' → logprob: -13.126458168029785

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. '):' → logprob: -10.375045776367188
    3. ',D' → logprob: -11.375045776367188
    4. ' ,' → logprob: -13.250045776367188
    5. ',input' → logprob: -14.250045776367188
    6. ',
' → logprob: -15.875045776367188
    7. ',Q' → logprob: -16.375045776367188
    8. ',List' → logprob: -17.000045776367188
    9. ':' → logprob: -17.250045776367188
    10. ',n' → logprob: -18.375045776367188

Token 485: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004140852950513363
    2. ' D' → logprob: -5.504140853881836
    3. 'input' → logprob: -10.754140853881836
    4. 'queries' → logprob: -11.004140853881836
    5. ')' → logprob: -12.629140853881836
    6. 'import' → logprob: -12.754140853881836
    7. '   ' → logprob: -12.879140853881836
    8. ' queries' → logprob: -13.129140853881836
    9. 'sys' → logprob: -13.129140853881836
    10. ' input' → logprob: -13.129140853881836

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.375019073486328
    3. ',
' → logprob: -12.375019073486328
    4. ',K' → logprob: -13.500019073486328
    5. '):
' → logprob: -13.500019073486328
    6. ',Q' → logprob: -15.625019073486328
    7. '‌,' → logprob: -15.875019073486328
    8. '   ' → logprob: -16.000019073486328
    9. '):' → logprob: -16.625019073486328
    10. 'def' → logprob: -17.250019073486328

Token 487: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.023250950500369072
    2. ' K' → logprob: -3.7732510566711426
    3. ' ' → logprob: -13.023250579833984
    4. 'Q' → logprob: -14.398250579833984
    5. '<|end|>' → logprob: -14.648250579833984
    6. '   ' → logprob: -14.898250579833984
    7. '  ' → logprob: -15.023250579833984
    8. ',' → logprob: -15.023250579833984
    9. ',K' → logprob: -15.023250579833984
    10. ')' → logprob: -15.273250579833984

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ',n' → logprob: -12.625005722045898
    3. '):' → logprob: -14.000005722045898
    4. ' ,' → logprob: -14.375005722045898
    5. ',
' → logprob: -15.500005722045898
    6. 'n' → logprob: -15.625005722045898
    7. '):
' → logprob: -15.750005722045898
    8. '   ' → logprob: -16.2500057220459
    9. ',x' → logprob: -16.6250057220459
    10. '‌,' → logprob: -18.5000057220459

Token 489: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6954594850540161
    2. 'queries' → logprob: -1.3204594850540161
    3. ' queries' → logprob: -2.1954593658447266
    4. ' input' → logprob: -2.3204593658447266
    5. 'query' → logprob: -3.8204593658447266
    6. ' query' → logprob: -6.445459365844727
    7. 'm' → logprob: -7.820459365844727
    8. ' m' → logprob: -8.445459365844727
    9. '):
' → logprob: -9.320459365844727
    10. 'inputs' → logprob: -10.195459365844727

Token 490: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0008254681597463787
    2. '_' → logprob: -7.87582540512085
    3. '):' → logprob: -8.000825881958008
    4. '):
' → logprob: -9.500825881958008
    5. 'func' → logprob: -11.000825881958008
    6. ')_' → logprob: -12.500825881958008
    7. '_funcs' → logprob: -12.625825881958008
    8. '_FUNC' → logprob: -12.875825881958008
    9. '_fun' → logprob: -13.125825881958008
    10. '_f' → logprob: -13.125825881958008

Token 491: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005290837725624442
    2. '):
' → logprob: -7.6255292892456055
    3. ')' → logprob: -10.125529289245605
    4. ' ):' → logprob: -14.750529289245605
    5. '):
' → logprob: -15.250529289245605
    6. '):

' → logprob: -15.875529289245605
    7. '   ' → logprob: -16.00052833557129
    8. ',' → logprob: -16.12552833557129
    9. ':' → logprob: -17.50052833557129
    10. '():' → logprob: -18.12552833557129

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5211597084999084
    2. '
' → logprob: -2.8961596488952637
    3. '```' → logprob: -2.8961596488952637
    4. '	for' → logprob: -3.1461596488952637
    5. '    
' → logprob: -3.3961596488952637
    6. '\' → logprob: -3.3961596488952637
    7. '<|end|>' → logprob: -3.3961596488952637
    8. '	
' → logprob: -3.8961596488952637
    9. '\n' → logprob: -4.021159648895264
    10. ':' → logprob: -4.021159648895264

Token 493: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0225937366485596
    2. 'results' → logprob: -1.3975937366485596
    3. '   ' → logprob: -1.6475937366485596
    4. ' result' → logprob: -2.3975937366485596
    5. ' results' → logprob: -2.3975937366485596
    6. ' for' → logprob: -5.0225934982299805
    7. '
' → logprob: -5.6475934982299805
    8. 'for' (adapté à ' for') → logprob: -6.2725934982299805
    9. ' res' → logprob: -6.5225934982299805
    10. '```' → logprob: -6.5225934982299805

Token 494: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1002463549375534
    2. '_' → logprob: -2.3502464294433594
    3. ' i' → logprob: -10.72524642944336
    4. ' in' → logprob: -11.72524642944336
    5. ' ' → logprob: -11.72524642944336
    6. '_i' → logprob: -14.60024642944336
    7. ' ' → logprob: -14.72524642944336
    8. ' range' → logprob: -15.35024642944336
    9. '  ' → logprob: -15.97524642944336
    10. 'i' → logprob: -16.10024642944336

Token 495: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001387262367643416
    2. 'in' → logprob: -6.626387119293213
    3. ' ' → logprob: -10.126387596130371
    4. '  ' → logprob: -11.626387596130371
    5. '   ' → logprob: -12.501387596130371
    6. 's' → logprob: -13.501387596130371
    7. '	in' → logprob: -13.626387596130371
    8. 'n' → logprob: -13.751387596130371
    9. 'i' → logprob: -13.751387596130371
    10. '    ' → logprob: -14.376387596130371

Token 496: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023214559769257903
    2. ' range' → logprob: -8.375231742858887
    3. '	range' → logprob: -14.500231742858887
    4. '(range' → logprob: -15.000231742858887
    5. '   ' → logprob: -15.500231742858887
    6. 'ange' → logprob: -16.125232696533203
    7. 'input' → logprob: -16.250232696533203
    8. ' ' → logprob: -16.250232696533203
    9. 'in' → logprob: -16.375232696533203
    10. '  ' → logprob: -16.500232696533203

Token 497: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.2233183042553719e-05
    2. 'Q' → logprob: -11.750012397766113
    3. '(' → logprob: -12.625012397766113
    4. 'range' → logprob: -15.000012397766113
    5. ' Q' → logprob: -15.125012397766113
    6. ' (' → logprob: -15.250012397766113
    7. '(range' → logprob: -17.000011444091797
    8. ' range' → logprob: -17.250011444091797
    9. '   ' → logprob: -18.250011444091797
    10. ',' → logprob: -18.250011444091797

Token 498: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08949454128742218
    2. '):
' → logprob: -2.464494466781616
    3. ':' → logprob: -8.089494705200195
    4. ')' → logprob: -8.589494705200195
    5. '   ' → logprob: -10.214494705200195
    6. ',' → logprob: -11.464494705200195
    7. '):
' → logprob: -12.589494705200195
    8. ':
' → logprob: -12.714494705200195
    9. '():
' → logprob: -13.464494705200195
    10. '):

' → logprob: -13.589494705200195

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008527222089469433
    2. '```' → logprob: -5.7585272789001465
    3. '        
' → logprob: -7.1335272789001465
    4. '	   ' → logprob: -7.5085272789001465
    5. '<|end|>' → logprob: -7.7585272789001465
    6. '	' → logprob: -7.7585272789001465
    7. 'input' → logprob: -7.8835272789001465
    8. '		
' → logprob: -8.258526802062988
    9. 'query' → logprob: -8.383526802062988
    10. '(' → logprob: -8.383526802062988

Token 500: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00043734462815336883
    2. ' n' → logprob: -8.37543773651123
    3. '   ' → logprob: -8.50043773651123
    4. '       ' → logprob: -13.12543773651123
    5. '	n' → logprob: -15.00043773651123
    6. 'line' → logprob: -15.37543773651123
    7. '```' → logprob: -15.75043773651123
    8. '    
' → logprob: -15.75043773651123
    9. 'x' → logprob: -16.125436782836914
    10. '(n' → logprob: -16.375436782836914

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018542143516242504
    2. ',x' → logprob: -8.625185012817383
    3. ' ,' → logprob: -12.750185012817383
    4. 'x' → logprob: -12.750185012817383
    5. '_,' → logprob: -16.750185012817383
    6. '‌,' → logprob: -17.750185012817383
    7. ',m' → logprob: -18.125185012817383
    8. ',n' → logprob: -18.125185012817383
    9. ',
' → logprob: -18.500185012817383
    10. ' x' → logprob: -18.750185012817383

Token 502: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026301691308617592
    2. ' x' → logprob: -3.651301622390747
    3. ' ' → logprob: -14.026301383972168
    4. '	x' → logprob: -16.026302337646484
    5. '*' → logprob: -16.651302337646484
    6. '  ' → logprob: -16.776302337646484
    7. '_x' → logprob: -16.901302337646484
    8. '    ' → logprob: -17.026302337646484
    9. '   ' → logprob: -17.026302337646484
    10. '<|end|>' → logprob: -17.026302337646484

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.440506407059729e-05
    2. ',m' → logprob: -11.00003433227539
    3. '=' → logprob: -11.50003433227539
    4. ' ,' → logprob: -11.87503433227539
    5. ' =' → logprob: -15.25003433227539
    6. 'm' → logprob: -15.50003433227539
    7. '،' → logprob: -19.37503433227539
    8. '‌,' → logprob: -19.50003433227539
    9. '_,' → logprob: -19.50003433227539
    10. '=m' → logprob: -20.00003433227539

Token 504: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020545506849884987
    2. ' m' → logprob: -3.895545482635498
    3. ' ' → logprob: -13.270545959472656
    4. '<|end|>' → logprob: -14.270545959472656
    5. '	m' → logprob: -15.020545959472656
    6. ',m' → logprob: -15.520545959472656
    7. ',' → logprob: -15.770545959472656
    8. '_m' → logprob: -15.770545959472656
    9. '  ' → logprob: -16.145545959472656
    10. '    ' → logprob: -16.395545959472656

Token 505: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740801155567169
    2. ' =' → logprob: -0.9740800857543945
    3. ')' → logprob: -13.349080085754395
    4. '=input' → logprob: -14.474080085754395
    5. ',' → logprob: -14.724080085754395
    6. ')=' → logprob: -15.349080085754395
    7. '=line' → logprob: -15.599080085754395
    8. '＝' → logprob: -16.97408103942871
    9. '   ' → logprob: -17.22408103942871
    10. ' =)' → logprob: -17.72408103942871

Token 506: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.14289681613445282
    2. ' run' → logprob: -2.017896890640259
    3. 'map' → logprob: -9.26789665222168
    4. '   ' → logprob: -9.64289665222168
    5. ' map' → logprob: -9.89289665222168
    6. '	run' → logprob: -13.01789665222168
    7. '
' → logprob: -13.26789665222168
    8. 'process' → logprob: -13.51789665222168
    9. '       ' → logprob: -13.76789665222168
    10. ' ' → logprob: -14.14289665222168

Token 507: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -1.3544423381972592e-05
    2. 'query' → logprob: -11.25001335144043
    3. ' query' → logprob: -15.75001335144043
    4. 'Query' → logprob: -16.25001335144043
    5. '_QUERY' → logprob: -17.00001335144043
    6. '(query' → logprob: -17.00001335144043
    7. '(input' → logprob: -17.62501335144043
    8. '
' → logprob: -18.00001335144043
    9. '_Query' → logprob: -18.12501335144043
    10. '_queries' → logprob: -18.12501335144043

Token 508: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0004411591507960111
    2. '(input' → logprob: -7.750441074371338
    3. '(line' → logprob: -12.500441551208496
    4. 'line' → logprob: -13.125441551208496
    5. '_lines' → logprob: -13.500441551208496
    6. '_func' → logprob: -13.750441551208496
    7. '_list' → logprob: -14.000441551208496
    8. ' line' → logprob: -15.000441551208496
    9. '```' → logprob: -15.000441551208496
    10. '_LINE' → logprob: -15.500441551208496

Token 509: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.988221684878226e-06
    2. '=input' → logprob: -12.875006675720215
    3. ' (' → logprob: -13.250006675720215
    4. '(' → logprob: -13.750006675720215
    5. ',input' → logprob: -14.125006675720215
    6. 'input' → logprob: -14.500006675720215
    7. '[input' → logprob: -16.62500762939453
    8. '<input' → logprob: -18.25000762939453
    9. ' input' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.37500762939453

Token 510: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.4140441635390744e-05
    2. 'func' → logprob: -11.250014305114746
    3. ')' → logprob: -14.250014305114746
    4. ')_' → logprob: -15.750014305114746
    5. '_FUNC' → logprob: -16.00001335144043
    6. '_funcs' → logprob: -16.50001335144043
    7. '_fun' → logprob: -17.00001335144043
    8. '_)' → logprob: -17.62501335144043
    9. 'Func' → logprob: -17.75001335144043
    10. '```' → logprob: -17.75001335144043

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046340446919202805
    2. '())' → logprob: -3.2963404655456543
    3. '()' → logprob: -4.796340465545654
    4. ' )' → logprob: -13.421339988708496
    5. ')
' → logprob: -13.546339988708496
    6. '())
' → logprob: -14.671339988708496
    7. '))' → logprob: -14.921339988708496
    8. ' ())' → logprob: -15.046339988708496
    9. '()
' → logprob: -15.171339988708496
    10. '）' → logprob: -15.421339988708496

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15044613182544708
    2. '
' → logprob: -2.7754461765289307
    3. '        
' → logprob: -4.025445938110352
    4. ':
' → logprob: -4.025445938110352
    5. '<|end|>' → logprob: -4.025445938110352
    6. ':' → logprob: -4.150445938110352
    7. ',' → logprob: -6.900445938110352
    8. '    
' → logprob: -7.025445938110352
    9. '	' → logprob: -7.150445938110352
    10. '   ' → logprob: -7.150445938110352

Token 513: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021531054750084877
    2. 'result' (adapté à ' result') → logprob: -4.521531105041504
    3. ' result' → logprob: -5.146531105041504
    4. '
' → logprob: -6.021531105041504
    5. 'yield' → logprob: -7.271531105041504
    6. '        
' → logprob: -7.396531105041504
    7. ' yield' → logprob: -7.396531105041504
    8. '```' → logprob: -9.896531105041504
    9. '	yield' → logprob: -10.146531105041504
    10. '<|end|>' → logprob: -10.771531105041504

Token 514: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269443929195404
    2. '=' → logprob: -2.1269443035125732
    3. '   ' → logprob: -11.501944541931152
    4. '       ' → logprob: -12.751944541931152
    5. '    ' → logprob: -13.626944541931152
    6. '        ' → logprob: -14.251944541931152
    7. '	' → logprob: -15.001944541931152
    8. ' =
' → logprob: -15.251944541931152
    9. ' ' → logprob: -15.751944541931152
    10. ',' → logprob: -15.876944541931152

Token 515: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.5759395956993103
    2. 'process' → logprob: -0.8259395956993103
    3. '(process' → logprob: -15.950939178466797
    4. '	process' → logprob: -17.325939178466797
    5. ' proces' → logprob: -18.450939178466797
    6. '_process' → logprob: -19.825939178466797
    7. '.process' → logprob: -20.200939178466797
    8. 'proces' → logprob: -20.325939178466797
    9. 'rocess' → logprob: -22.700939178466797
    10. '   ' → logprob: -22.700939178466797

Token 516: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -4.203409844194539e-05
    2. '_queries' → logprob: -10.500041961669922
    3. '_' → logprob: -12.000041961669922
    4. 'single' → logprob: -12.125041961669922
    5. '_query' → logprob: -14.375041961669922
    6. '_s' → logprob: -14.875041961669922
    7. '_SINGLE' → logprob: -15.250041961669922
    8. '(single' → logprob: -15.250041961669922
    9. ' _' → logprob: -15.375041961669922
    10. '(D' → logprob: -15.625041961669922

Token 517: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.50000286102295
    3. '_queries' → logprob: -14.00000286102295
    4. 'query' → logprob: -15.87500286102295
    5. '_Query' → logprob: -16.125001907348633
    6. '_question' → logprob: -17.750001907348633
    7. '_QUERY' → logprob: -18.250001907348633
    8. '_result' → logprob: -18.500001907348633
    9. '(query' → logprob: -18.875001907348633
    10. 'Query' → logprob: -19.000001907348633

Token 518: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -15.125021934509277
    4. ' (' → logprob: -16.00002098083496
    5. '(Dense' → logprob: -18.00002098083496
    6. '((' → logprob: -18.12502098083496
    7. 'D' → logprob: -18.25002098083496
    8. '```' → logprob: -20.37502098083496
    9. '(

' → logprob: -21.12502098083496
    10. '(d' → logprob: -21.12502098083496

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.612634362885728e-05
    2. ',K' → logprob: -9.625076293945312
    3. ' ,' → logprob: -11.625076293945312
    4. ',
' → logprob: -14.500076293945312
    5. ',Q' → logprob: -15.625076293945312
    6. 'K' → logprob: -16.375076293945312
    7. ',n' → logprob: -16.625076293945312
    8. ',k' → logprob: -16.750076293945312
    9. '```' → logprob: -16.875076293945312
    10. '‌,' → logprob: -17.500076293945312

Token 520: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008624620735645294
    2. ' K' → logprob: -4.75862455368042
    3. 'n' → logprob: -12.133625030517578
    4. ' ' → logprob: -13.633625030517578
    5. '   ' → logprob: -13.883625030517578
    6. ' n' → logprob: -14.508625030517578
    7. '    ' → logprob: -14.758625030517578
    8. '	K' → logprob: -14.883625030517578
    9. 'm' → logprob: -15.383625030517578
    10. 'k' → logprob: -15.508625030517578

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022916549642104656
    2. ',n' → logprob: -8.500228881835938
    3. ' ,' → logprob: -10.625228881835938
    4. ',
' → logprob: -14.375228881835938
    5. 'n' → logprob: -14.875228881835938
    6. '```' → logprob: -15.625228881835938
    7. '   ' → logprob: -15.875228881835938
    8. '       ' → logprob: -17.125228881835938
    9. '),' → logprob: -18.250228881835938
    10. '
' → logprob: -18.250228881835938

Token 522: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0788901224732399
    2. ' n' → logprob: -2.578890085220337
    3. '	n' → logprob: -15.078889846801758
    4. 'int' → logprob: -16.703889846801758
    5. ')n' → logprob: -17.078889846801758
    6. '    ' → logprob: -17.203889846801758
    7. '   ' → logprob: -18.078889846801758
    8. '(n' → logprob: -18.078889846801758
    9. '
' → logprob: -18.203889846801758
    10. '_n' → logprob: -19.328889846801758

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014370749704539776
    2. ',x' → logprob: -9.375144004821777
    3. ' ,' → logprob: -9.750144004821777
    4. '   ' → logprob: -15.750144004821777
    5. '```' → logprob: -15.750144004821777
    6. ',
' → logprob: -16.50014305114746
    7. ')' → logprob: -17.25014305114746
    8. 'x' → logprob: -17.37514305114746
    9. '-' → logprob: -17.50014305114746
    10. '	' → logprob: -17.75014305114746

Token 524: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. '	x' → logprob: -18.376502990722656
    4. '   ' → logprob: -18.376502990722656
    5. ' ' → logprob: -19.876502990722656
    6. '
' → logprob: -20.001502990722656
    7. '    ' → logprob: -20.001502990722656
    8. '```' → logprob: -20.501502990722656
    9. '  ' → logprob: -21.251502990722656
    10. '       ' → logprob: -21.376502990722656

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001980570232262835
    2. ',m' → logprob: -8.625198364257812
    3. ' ,' → logprob: -11.000198364257812
    4. 'm' → logprob: -13.500198364257812
    5. '```' → logprob: -15.250198364257812
    6. ',
' → logprob: -16.875198364257812
    7. '   ' → logprob: -18.125198364257812
    8. '，' → logprob: -20.125198364257812
    9. '_,' → logprob: -20.375198364257812
    10. '[m' → logprob: -20.375198364257812

Token 526: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01815006136894226
    2. ' m' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.018150329589844
    4. ' ' → logprob: -17.268150329589844
    5. '    ' → logprob: -17.393150329589844
    6. '	m' → logprob: -18.018150329589844
    7. '  ' → logprob: -19.018150329589844
    8. '
' → logprob: -19.018150329589844
    9. '```' → logprob: -19.268150329589844
    10. '       ' → logprob: -19.893150329589844

Token 527: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761616230010986
    2. ')
' → logprob: -0.8261616230010986
    3. '       ' → logprob: -8.70116138458252
    4. '   ' → logprob: -9.95116138458252
    5. ')
' → logprob: -12.32616138458252
    6. ')

' → logprob: -14.32616138458252
    7. '):
' → logprob: -14.32616138458252
    8. ')`
' → logprob: -14.82616138458252
    9. ')return' → logprob: -15.32616138458252
    10. ')\
' → logprob: -15.32616138458252

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.5822400857578032e-05
    2. 'print' → logprob: -10.875025749206543
    3. '```' → logprob: -12.750025749206543
    4. '	' → logprob: -13.750025749206543
    5. '        
' → logprob: -14.125025749206543
    6. '   ' → logprob: -14.250025749206543
    7. '<|end|>' → logprob: -14.375025749206543
    8. ' print' → logprob: -15.125025749206543
    9. 'yield' → logprob: -15.875025749206543
    10. '
' → logprob: -16.25002670288086

Token 529: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006802525836974382
    2. ' print' → logprob: -5.256802558898926
    3. '       ' → logprob: -6.506802558898926
    4. 'yield' → logprob: -9.631802558898926
    5. ' yield' → logprob: -11.756802558898926
    6. '
' → logprob: -14.631802558898926
    7. '```' → logprob: -15.131802558898926
    8. '   ' → logprob: -16.63180160522461
    9. '	print' → logprob: -17.63180160522461
    10. '``' → logprob: -19.13180160522461

Token 530: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0009175319573841989
    2. '(' → logprob: -7.000917434692383
    3. 'result' → logprob: -12.125917434692383
    4. '('' → logprob: -16.250917434692383
    5. '(
' → logprob: -16.375917434692383
    6. '(results' → logprob: -16.500917434692383
    7. '()' → logprob: -16.625917434692383
    8. '(f' → logprob: -16.875917434692383
    9. '=result' → logprob: -17.000917434692383
    10. ',result' → logprob: -17.000917434692383

Token 531: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.375004768371582
    3. '()' → logprob: -16.250003814697266
    4. ' )' → logprob: -16.250003814697266
    5. '`)' → logprob: -16.625003814697266
    6. ')`' → logprob: -17.125003814697266
    7. '))' → logprob: -17.375003814697266
    8. '())' → logprob: -17.375003814697266
    9. '')' → logprob: -17.625003814697266
    10. '")' → logprob: -18.500003814697266

Token 532: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9754080772399902
    2. 'if' → logprob: -1.4754080772399902
    3. '```' → logprob: -1.7254080772399902
    4. 'import' → logprob: -2.3504080772399902
    5. '#' → logprob: -3.3504080772399902
    6. '<|end|>' → logprob: -3.4754080772399902
    7. 'input' → logprob: -3.6004080772399902
    8. '()' → logprob: -5.35040807723999
    9. 'D' → logprob: -5.35040807723999
    10. '
' → logprob: -5.47540807723999

Token 533: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12692873179912567
    2. ' main' → logprob: -2.1269288063049316
    3. 'def' → logprob: -14.876928329467773
    4. '_main' → logprob: -15.001928329467773
    5. '	main' → logprob: -18.126928329467773
    6. 'run' → logprob: -19.251928329467773
    7. 'process' → logprob: -19.626928329467773
    8. ' def' → logprob: -20.001928329467773
    9. ' run' → logprob: -20.251928329467773
    10. 'solve' → logprob: -20.251928329467773

Token 534: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.7994282795116305e-05
    2. '():
' → logprob: -10.00004768371582
    3. ' ():' → logprob: -13.25004768371582
    4. '():
' → logprob: -15.12504768371582
    5. '()' → logprob: -15.25004768371582
    6. '()>' → logprob: -16.37504768371582
    7. '(' → logprob: -17.00004768371582
    8. ':' → logprob: -17.12504768371582
    9. '(":' → logprob: -17.62504768371582
    10. '():

' → logprob: -17.75004768371582

Token 535: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5382423400878906
    2. ' input' → logprob: -1.0382423400878906
    3. '   ' → logprob: -2.7882423400878906
    4. '(input' → logprob: -8.16324234008789
    5. '```' → logprob: -9.16324234008789
    6. '	input' → logprob: -9.28824234008789
    7. '_input' → logprob: -9.28824234008789
    8. '
' → logprob: -11.41324234008789
    9. ',input' → logprob: -11.41324234008789
    10. 'import' → logprob: -11.78824234008789

Token 536: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.25213494896888733
    2. ' input' → logprob: -1.502134919166565
    3. '   ' → logprob: -8.502135276794434
    4. 'import' → logprob: -13.627135276794434
    5. '_input' → logprob: -13.877135276794434
    6. '	input' → logprob: -14.627135276794434
    7. 'Input' → logprob: -16.502134323120117
    8. '(input' → logprob: -17.252134323120117
    9. ' ' → logprob: -17.502134323120117
    10. ',input' → logprob: -17.502134323120117

Token 537: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0011802274966612458
    2. '()' → logprob: -7.001180171966553
    3. '_' → logprob: -8.876180648803711
    4. 'func' → logprob: -9.251180648803711
    5. '_line' → logprob: -11.751180648803711
    6. '_f' → logprob: -11.876180648803711
    7. '_fn' → logprob: -12.251180648803711
    8. '_function' → logprob: -12.751180648803711
    9. '()
' → logprob: -13.251180648803711
    10. '=' → logprob: -13.376180648803711

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38708531856536865
    2. ' =' → logprob: -1.1370853185653687
    3. '()' → logprob: -8.6370849609375
    4. '=sys' → logprob: -10.2620849609375
    5. '=input' → logprob: -14.0120849609375
    6. '＝' → logprob: -15.2620849609375
    7. ' ' → logprob: -15.7620849609375
    8. '=lambda' → logprob: -16.0120849609375
    9. ' ()' → logprob: -16.3870849609375
    10. '=get' → logprob: -16.5120849609375

Token 539: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.16117234528064728
    2. 'sys' → logprob: -1.9111723899841309
    3. 'input' → logprob: -7.411172389984131
    4. ' get' → logprob: -8.161171913146973
    5. ' sys' → logprob: -9.786171913146973
    6. '(get' → logprob: -13.911171913146973
    7. ' input' → logprob: -14.911171913146973
    8. '(sys' → logprob: -15.536171913146973
    9. 'lambda' → logprob: -16.53617286682129
    10. '=get' → logprob: -17.03617286682129

Token 540: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.085517113911919e-05
    2. 'input' → logprob: -10.25005054473877
    3. '_' → logprob: -11.25005054473877
    4. '_line' → logprob: -13.75005054473877
    5. '(input' → logprob: -15.62505054473877
    6. '_func' → logprob: -15.62505054473877
    7. ' input' → logprob: -16.000051498413086
    8. ' _' → logprob: -16.125051498413086
    9. '_inputs' → logprob: -16.125051498413086
    10. '_sys' → logprob: -16.625051498413086

Token 541: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00026646157493814826
    2. '()
' → logprob: -8.250266075134277
    3. '()

' → logprob: -13.250266075134277
    4. '()\' → logprob: -14.000266075134277
    5. '()`' → logprob: -14.125266075134277
    6. '()"' → logprob: -14.625266075134277
    7. '())' → logprob: -14.750266075134277
    8. '();' → logprob: -14.875266075134277
    9. '()<' → logprob: -15.625266075134277
    10. ')' → logprob: -16.875267028808594

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009151002392172813
    2. 'n' → logprob: -5.009150981903076
    3. ' n' → logprob: -7.384150981903076
    4. 'line' → logprob: -7.634150981903076
    5. 'L' → logprob: -7.884150981903076
    6. 'N' → logprob: -8.134151458740234
    7. ' line' → logprob: -9.134151458740234
    8. ' first' → logprob: -9.509151458740234
    9. 'first' → logprob: -9.634151458740234
    10. 'a' → logprob: -9.759151458740234

Token 543: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.5768397450447083
    2. 'N' → logprob: -1.2018396854400635
    3. 'Q' → logprob: -2.3268396854400635
    4. 'T' → logprob: -3.4518396854400635
    5. 'L' → logprob: -5.576839923858643
    6. 'H' → logprob: -5.951839923858643
    7. 'M' → logprob: -7.451839923858643
    8. 'A' → logprob: -7.576839923858643
    9. 'R' → logprob: -8.451839447021484
    10. 'n' → logprob: -8.951839447021484

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005093460902571678
    2. ' =' → logprob: -6.255093574523926
    3. '=' → logprob: -6.380093574523926
    4. ',n' → logprob: -7.255093574523926
    5. ',N' → logprob: -8.005093574523926
    6. 'n' → logprob: -8.630093574523926
    7. ' ,' → logprob: -9.380093574523926
    8. ',K' → logprob: -10.255093574523926
    9. 'N' → logprob: -10.380093574523926
    10. ',Q' → logprob: -10.380093574523926

Token 545: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.1325061172246933
    2. ' Q' → logprob: -2.1325061321258545
    3. 'N' → logprob: -6.257505893707275
    4. 'K' → logprob: -6.257505893707275
    5. ' =' → logprob: -7.507505893707275
    6. ' K' → logprob: -8.007506370544434
    7. ' N' → logprob: -8.507506370544434
    8. ' ' → logprob: -8.632506370544434
    9. '=' → logprob: -9.007506370544434
    10. 'n' → logprob: -9.757506370544434

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694281339645386
    2. ' =' → logprob: -2.1269428730010986
    3. ',' → logprob: -12.12694263458252
    4. '=input' → logprob: -12.50194263458252
    5. '=sys' → logprob: -12.62694263458252
    6. '=line' → logprob: -13.62694263458252
    7. ')=' → logprob: -15.75194263458252
    8. ')' → logprob: -15.87694263458252
    9. ' ' → logprob: -15.87694263458252
    10. '=k' → logprob: -16.126943588256836

Token 547: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.23829622566699982
    2. 'parse' → logprob: -1.7382962703704834
    3. ' map' → logprob: -3.4882962703704834
    4. 'map' → logprob: -5.863296031951904
    5. ' run' → logprob: -5.988296031951904
    6. 'run' → logprob: -8.238296508789062
    7. ' next' → logprob: -10.613296508789062
    8. ' ' → logprob: -12.113296508789062
    9. 'next' → logprob: -12.113296508789062
    10. '	parse' → logprob: -13.363296508789062

Token 548: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0017082560807466507
    2. 'first' → logprob: -6.376708030700684
    3. '(int' → logprob: -13.376708030700684
    4. '(' → logprob: -14.001708030700684
    5. 'int' → logprob: -14.376708030700684
    6. ' first' → logprob: -14.751708030700684
    7. '(first' → logprob: -14.876708030700684
    8. 'First' → logprob: -14.876708030700684
    9. '
' → logprob: -15.126708030700684
    10. '_next' → logprob: -15.251708030700684

Token 549: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.000205566844670102
    2. 'line' → logprob: -8.500205993652344
    3. '(line' → logprob: -14.000205993652344
    4. '(input' → logprob: -14.500205993652344
    5. ' line' → logprob: -15.125205993652344
    6. 'input' → logprob: -15.750205993652344
    7. 'Line' → logprob: -16.750205993652344
    8. '(' → logprob: -16.875205993652344
    9. '_func' → logprob: -16.875205993652344
    10. '_input' → logprob: -17.125205993652344

Token 550: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.935296834039036e-06
    2. 'input' → logprob: -13.25000286102295
    3. ' (' → logprob: -14.37500286102295
    4. '(' → logprob: -14.62500286102295
    5. ',input' → logprob: -18.000003814697266
    6. '=input' → logprob: -18.375003814697266
    7. '(lambda' → logprob: -18.500003814697266
    8. ' input' → logprob: -19.375003814697266
    9. '<input' → logprob: -20.125003814697266
    10. '[input' → logprob: -20.625003814697266

Token 551: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.0445127372804563e-05
    2. 'func' → logprob: -11.50001049041748
    3. ')' → logprob: -15.12501049041748
    4. ')_' → logprob: -17.250009536743164
    5. '_)' → logprob: -19.000009536743164
    6. '_FUNC' → logprob: -19.625009536743164
    7. '_fun' → logprob: -20.125009536743164
    8. '_' → logprob: -20.250009536743164
    9. 'Func' → logprob: -20.375009536743164
    10. '())' → logprob: -20.750009536743164

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. ')
' → logprob: -9.500088691711426
    3. '())' → logprob: -11.750088691711426
    4. '()' → logprob: -12.250088691711426
    5. ' )' → logprob: -14.625088691711426
    6. '   ' → logprob: -16.12508773803711
    7. ')#' → logprob: -16.62508773803711
    8. ')
' → logprob: -16.87508773803711
    9. '))' → logprob: -17.25008773803711
    10. '),' → logprob: -17.75008773803711

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12733080983161926
    2. 'D' → logprob: -2.127330780029297
    3. ' D' → logprob: -8.502330780029297
    4. '```' → logprob: -8.877330780029297
    5. '	D' → logprob: -10.502330780029297
    6. '
' → logprob: -11.377330780029297
    7. '   ' → logprob: -12.127330780029297
    8. '    
' → logprob: -12.252330780029297
    9. ' ' → logprob: -13.127330780029297
    10. ',D' → logprob: -13.377330780029297

Token 554: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.0007148159202188253
    2. '   ' → logprob: -7.2507147789001465
    3. ' D' → logprob: -12.500715255737305
    4. '```' → logprob: -14.750715255737305
    5. 'd' → logprob: -15.125715255737305
    6. '	D' → logprob: -15.500715255737305
    7. ' ' → logprob: -15.625715255737305
    8. '  ' → logprob: -16.000715255737305
    9. '    
' → logprob: -17.375715255737305
    10. '`' → logprob: -17.500715255737305

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42870771884918213
    2. ' =' → logprob: -1.0537077188491821
    3. ',' → logprob: -12.42870807647705
    4. ' ' → logprob: -14.30370807647705
    5. '	' → logprob: -14.67870807647705
    6. '   ' → logprob: -14.80370807647705
    7. '=[]' → logprob: -15.05370807647705
    8. '＝' → logprob: -15.80370807647705
    9. '=list' → logprob: -15.80370807647705
    10. '=D' → logprob: -15.80370807647705

Token 556: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0067161982879042625
    2. ' parse' → logprob: -5.006716251373291
    3. '=parse' → logprob: -15.256715774536133
    4. '	parse' → logprob: -15.381715774536133
    5. '(parse' → logprob: -15.506715774536133
    6. '   ' → logprob: -16.506715774536133
    7. '_parse' → logprob: -17.006715774536133
    8. 'list' → logprob: -17.506715774536133
    9. '.parse' → logprob: -18.006715774536133
    10. ' ' → logprob: -18.256715774536133

Token 557: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.034592388459714e-06
    2. '_first' → logprob: -12.125005722045898
    3. 'd' → logprob: -14.750005722045898
    4. '_list' → logprob: -15.500005722045898
    5. '_single' → logprob: -17.1250057220459
    6. 'first' → logprob: -18.1250057220459
    7. '```' → logprob: -19.7500057220459
    8. '_input' → logprob: -20.8750057220459
    9. '_second' → logprob: -20.8750057220459
    10. 'def' → logprob: -21.1250057220459

Token 558: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. 'list' → logprob: -15.000000953674316
    3. '_func' → logprob: -15.125000953674316
    4. 'List' → logprob: -18.5
    5. '_lists' → logprob: -19.5
    6. 'func' → logprob: -19.75
    7. '_LIST' → logprob: -20.125
    8. '_List' → logprob: -20.625
    9. '_line' → logprob: -21.25
    10. '_' → logprob: -21.75

Token 559: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.176947600673884e-05
    2. 'input' → logprob: -10.750021934509277
    3. '[input' → logprob: -16.12502098083496
    4. ' input' → logprob: -16.37502098083496
    5. '=input' → logprob: -16.87502098083496
    6. ' (' → logprob: -17.50002098083496
    7. '(' → logprob: -17.50002098083496
    8. ',input' → logprob: -17.62502098083496
    9. '<input' → logprob: -18.25002098083496
    10. '```' → logprob: -19.50002098083496

Token 560: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00020449401927180588
    2. 'func' → logprob: -8.500204086303711
    3. '```' → logprob: -14.875204086303711
    4. ')' → logprob: -15.375204086303711
    5. '_function' → logprob: -16.62520408630371
    6. '_' → logprob: -16.75020408630371
    7. 'Func' → logprob: -17.00020408630371
    8. '()' → logprob: -17.25020408630371
    9. '(input' → logprob: -17.25020408630371
    10. '(func' → logprob: -17.62520408630371

Token 561: ')
' (ID: 446)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06224249303340912
    2. ')' → logprob: -2.8122425079345703
    3. 'input' → logprob: -8.81224250793457
    4. ',input' → logprob: -9.56224250793457
    5. '(' → logprob: -10.81224250793457
    6. ')
' → logprob: -11.18724250793457
    7. '=input' → logprob: -12.06224250793457
    8. '())' → logprob: -12.68724250793457
    9. '()' → logprob: -12.81224250793457
    10. ',' → logprob: -13.18724250793457

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10270586609840393
    2. 'process' → logprob: -2.352705955505371
    3. ' process' → logprob: -6.852705955505371
    4. '
' → logprob: -6.852705955505371
    5. '```' → logprob: -8.477705955505371
    6. 'for' → logprob: -8.977705955505371
    7. '    
' → logprob: -10.727705955505371
    8. '	process' → logprob: -11.227705955505371
    9. ' for' → logprob: -11.727705955505371
    10. '``' → logprob: -13.477705955505371

Token 563: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.002584220143035054
    2. ' process' → logprob: -6.002584457397461
    3. '   ' → logprob: -9.252584457397461
    4. 'for' → logprob: -11.502584457397461
    5. '```' → logprob: -13.502584457397461
    6. '
' → logprob: -14.627584457397461
    7. '	process' → logprob: -14.752584457397461
    8. ' for' → logprob: -14.877584457397461
    9. '(process' → logprob: -17.12758445739746
    10. ' ' → logprob: -17.50258445739746

Token 564: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -3.531315314830863e-06
    2. 'queries' → logprob: -13.250003814697266
    3. '_' → logprob: -13.375003814697266
    4. '_questions' → logprob: -16.625003814697266
    5. 'Queries' → logprob: -17.000003814697266
    6. '_requests' → logprob: -17.375003814697266
    7. '_query' → logprob: -18.375003814697266
    8. '```' → logprob: -18.500003814697266
    9. '_single' → logprob: -18.750003814697266
    10. '_calls' → logprob: -18.750003814697266

Token 565: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.320199877838604e-07
    2. 'Q' → logprob: -15.5
    3. ' (' → logprob: -16.375
    4. '(' → logprob: -16.625
    5. ' Q' → logprob: -19.125
    6. '   ' → logprob: -20.25
    7. '	Q' → logprob: -20.25
    8. '(K' → logprob: -20.625
    9. '(D' → logprob: -21.0
    10. '<Q' → logprob: -21.0

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048119694110937417
    2. ' ,' → logprob: -7.875481128692627
    3. ',D' → logprob: -9.250481605529785
    4. '(D' → logprob: -12.750481605529785
    5. ')' → logprob: -13.875481605529785
    6. ',
' → logprob: -14.125481605529785
    7. '(' → logprob: -15.750481605529785
    8. '   ' → logprob: -16.00048065185547
    9. '
' → logprob: -16.37548065185547
    10. ',K' → logprob: -17.50048065185547

Token 567: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0380416102707386
    2. ' D' → logprob: -3.288041591644287
    3. '   ' → logprob: -15.788042068481445
    4. '	D' → logprob: -16.538042068481445
    5. ' ' → logprob: -18.413042068481445
    6. '[D' → logprob: -18.913042068481445
    7. '
' → logprob: -19.038042068481445
    8. ',D' → logprob: -19.038042068481445
    9. '>D' → logprob: -19.163042068481445
    10. '(D' → logprob: -19.413042068481445

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.97155623533763e-05
    2. ' ,' → logprob: -9.750089645385742
    3. ',K' → logprob: -10.375089645385742
    4. ',
' → logprob: -17.125089645385742
    5. '   ' → logprob: -17.625089645385742
    6. 'K' → logprob: -17.750089645385742
    7. ' K' → logprob: -18.250089645385742
    8. '```' → logprob: -19.500089645385742
    9. ')' → logprob: -20.375089645385742
    10. ',k' → logprob: -20.500089645385742

Token 569: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01815006136894226
    2. ' K' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.143150329589844
    4. '	K' → logprob: -17.143150329589844
    5. ' ' → logprob: -17.268150329589844
    6. '
' → logprob: -17.643150329589844
    7. '    ' → logprob: -18.893150329589844
    8. ',K' → logprob: -18.893150329589844
    9. '  ' → logprob: -19.143150329589844
    10. '```' → logprob: -19.393150329589844

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ',input' → logprob: -11.500019073486328
    3. ' ,' → logprob: -11.625019073486328
    4. 'input' → logprob: -17.000019073486328
    5. '   ' → logprob: -17.125019073486328
    6. '```' → logprob: -17.625019073486328
    7. ')' → logprob: -17.875019073486328
    8. ' input' → logprob: -20.000019073486328
    9. ',
' → logprob: -20.000019073486328
    10. 'import' → logprob: -20.375019073486328

Token 571: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022422909736633
    2. ' input' → logprob: -1.910224199295044
    3. '(input' → logprob: -18.66022491455078
    4. '=input' → logprob: -19.91022491455078
    5. '_input' → logprob: -20.16022491455078
    6. '<input' → logprob: -20.66022491455078
    7. ')' → logprob: -20.91022491455078
    8. ',input' → logprob: -21.16022491455078
    9. '[input' → logprob: -21.28522491455078
    10. '.input' → logprob: -21.41022491455078

Token 572: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.9361264946837764e-07
    2. 'func' → logprob: -16.0
    3. '_' → logprob: -19.375
    4. '_FUNC' → logprob: -19.75
    5. '_function' → logprob: -20.125
    6. '_fun' → logprob: -20.25
    7. ')' → logprob: -20.875
    8. ')_' → logprob: -22.25
    9. 'Func' → logprob: -22.5
    10. '_)' → logprob: -22.625

Token 573: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '())' → logprob: -11.875008583068848
    3. ' )' → logprob: -13.625008583068848
    4. ')
' → logprob: -14.375008583068848
    5. '()' → logprob: -15.625008583068848
    6. '))' → logprob: -17.000009536743164
    7. ')

' → logprob: -18.000009536743164
    8. ')}' → logprob: -18.000009536743164
    9. ')`' → logprob: -18.750009536743164
    10. '   ' → logprob: -19.000009536743164

Token 574: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06363577395677567
    2. '```' → logprob: -2.81363582611084
    3. '
' → logprob: -6.68863582611084
    4. ' if' → logprob: -8.68863582611084
    5. 'main' → logprob: -9.06363582611084
    6. '\n' → logprob: -9.68863582611084
    7. '<|end|>' → logprob: -10.06363582611084
    8. '\' → logprob: -11.31363582611084
    9. '``' → logprob: -11.43863582611084
    10. '    
' → logprob: -12.93863582611084

Token 575: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 573
Tokens correctement prédits (1ère position, stricte): 262
Tokens correctement prédits (1ère position, avec adaptation): 280
Tokens correctement prédits (top 10): 484
Précision stricte (1ère position): 45.72%
Précision adaptée (1ère position): 48.87%
Précision (top 10): 84.47%
================================================================================
