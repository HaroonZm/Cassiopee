================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
s = input()
print(f"{s[:k-1]}{s[k-1].lower()}{s[k:]}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023713937029242516
    2. ' =' → logprob: -4.398714065551758
    3. ',' → logprob: -4.523714065551758
    4. ' ' → logprob: -10.148714065551758
    5. '*' → logprob: -10.273714065551758
    6. '+' → logprob: -10.398714065551758
    7. ')' → logprob: -10.398714065551758
    8. '[' → logprob: -10.648714065551758
    9. '.' → logprob: -10.773714065551758
    10. '_' → logprob: -10.773714065551758

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06594569236040115
    2. ' map' → logprob: -3.690945625305176
    3. ' n' → logprob: -4.440945625305176
    4. '0' → logprob: -4.565945625305176
    5. ' input' → logprob: -4.940945625305176
    6. 'map' → logprob: -5.690945625305176
    7. 'input' → logprob: -5.940945625305176
    8. '10' → logprob: -6.190945625305176
    9. '1' → logprob: -7.940945625305176
    10. ' int' → logprob: -8.065945625305176

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0960182324051857
    2. '<|end|>' → logprob: -2.4710183143615723
    3. '```' → logprob: -6.096018314361572
    4. '<|end|>' → logprob: -6.346018314361572
    5. '(lambda' → logprob: -7.596018314361572
    6. ')' → logprob: -7.596018314361572
    7. '(user' → logprob: -7.846018314361572
    8. '(int' → logprob: -8.471017837524414
    9. 'user' → logprob: -8.846017837524414
    10. '[' → logprob: -9.221017837524414

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012436065822839737
    2. ')' → logprob: -5.0124359130859375
    3. '(' → logprob: -5.5124359130859375
    4. 'input' → logprob: -6.7624359130859375
    5. '(user' → logprob: -9.387435913085938
    6. '(str' → logprob: -9.512435913085938
    7. '```' → logprob: -9.637435913085938
    8. '=input' → logprob: -9.762435913085938
    9. '(int' → logprob: -9.887435913085938
    10. ' input' → logprob: -10.512435913085938

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5763772130012512
    2. ' input' → logprob: -0.8263772130012512
    3. '(input' → logprob: -7.8263773918151855
    4. ')' → logprob: -10.451376914978027
    5. ',input' → logprob: -12.201376914978027
    6. '=input' → logprob: -13.076376914978027
    7. '[input' → logprob: -14.576376914978027
    8. '<input' → logprob: -14.826376914978027
    9. '	input' → logprob: -15.326376914978027
    10. 'stdin' → logprob: -15.576376914978027

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7178155183792114
    2. '()' → logprob: -1.4678155183792114
    3. ')' → logprob: -1.9678155183792114
    4. '().' → logprob: -2.717815399169922
    5. '```' → logprob: -3.842815399169922
    6. '(' → logprob: -4.092815399169922
    7. '`()' → logprob: -4.592815399169922
    8. '('' → logprob: -5.092815399169922
    9. '`)' → logprob: -5.717815399169922
    10. '')' → logprob: -5.842815399169922

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000565541791729629
    2. 'strip' → logprob: -7.500565528869629
    3. 'rstrip' → logprob: -11.875565528869629
    4. ' split' → logprob: -12.625565528869629
    5. 'read' → logprob: -13.875565528869629
    6. ')' → logprob: -13.875565528869629
    7. '(split' → logprob: -15.625565528869629
    8. 'spl' → logprob: -15.625565528869629
    9. 'startswith' → logprob: -17.500566482543945
    10. 's' → logprob: -17.750566482543945

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08872120827436447
    2. '())' → logprob: -2.96372127532959
    3. '))' → logprob: -3.46372127532959
    4. '()' → logprob: -6.46372127532959
    5. '()))' → logprob: -8.58872127532959
    6. '`)' → logprob: -9.21372127532959
    7. '(' → logprob: -9.83872127532959
    8. '>)' → logprob: -11.46372127532959
    9. ')`' → logprob: -11.58872127532959
    10. ')))' → logprob: -11.71372127532959

Token 11: 's' (ID: 82)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1579228937625885
    2. '```' → logprob: -3.2829229831695557
    3. '
' → logprob: -3.7829229831695557
    4. 'if' → logprob: -3.7829229831695557
    5. '\' → logprob: -4.407922744750977
    6. 'for' → logprob: -4.657922744750977
    7. '#' → logprob: -5.282922744750977
    8. '`' → logprob: -5.407922744750977
    9. 'n' → logprob: -5.407922744750977
    10. ')' → logprob: -5.532922744750977

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13108868896961212
    2. '.' → logprob: -2.2560887336730957
    3. '=' → logprob: -4.756088733673096
    4. '[:]' → logprob: -5.506088733673096
    5. ' =' → logprob: -6.006088733673096
    6. '[:' → logprob: -7.256088733673096
    7. '[i' → logprob: -7.631088733673096
    8. '[input' → logprob: -8.256088256835938
    9. 's' → logprob: -8.756088256835938
    10. '[s' → logprob: -8.881088256835938

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34873753786087036
    2. ' input' → logprob: -1.2237374782562256
    3. '""' → logprob: -8.848737716674805
    4. '''' → logprob: -10.098737716674805
    5. '[input' → logprob: -10.848737716674805
    6. '"' → logprob: -11.223737716674805
    7. 'list' → logprob: -11.473737716674805
    8. '=input' → logprob: -11.723737716674805
    9. '(input' → logprob: -11.848737716674805
    10. ''' → logprob: -11.973737716674805

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1709033101797104
    2. '()' → logprob: -1.9209033250808716
    3. ''' → logprob: -5.670903205871582
    4. '('' → logprob: -5.920903205871582
    5. ')' → logprob: -6.420903205871582
    6. '"' → logprob: -6.670903205871582
    7. '("("' → logprob: -8.170903205871582
    8. '```' → logprob: -8.170903205871582
    9. '[' → logprob: -8.795903205871582
    10. '.' → logprob: -8.920903205871582

Token 15: 'print' (ID: 1598)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8729762434959412
    2. 'result' → logprob: -1.747976303100586
    3. 'if' → logprob: -1.997976303100586
    4. 'dp' → logprob: -2.372976303100586
    5. 'c' → logprob: -3.122976303100586
    6. 'd' → logprob: -3.372976303100586
    7. 'counts' → logprob: -3.372976303100586
    8. 'for' → logprob: -3.747976303100586
    9. 'cnt' → logprob: -4.872976303100586
    10. 'ans' → logprob: -5.122976303100586

Token 16: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001057698973454535
    2. '('' → logprob: -7.1260576248168945
    3. '(s' → logprob: -8.751057624816895
    4. '("("' → logprob: -9.501057624816895
    5. '(len' → logprob: -12.001057624816895
    6. '()' → logprob: -12.376057624816895
    7. 's' → logprob: -12.501057624816895
    8. '((' → logprob: -13.251057624816895
    9. '(f' → logprob: -14.376057624816895
    10. '(max' → logprob: -14.501057624816895

Token 17: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1572464555501938
    2. ')' → logprob: -3.1572463512420654
    3. '"{' → logprob: -3.4072463512420654
    4. '(' → logprob: -3.5322463512420654
    5. '"' → logprob: -3.5322463512420654
    6. ''{' → logprob: -5.2822465896606445
    7. '")' → logprob: -5.6572465896606445
    8. '){' → logprob: -7.0322465896606445
    9. '{s' → logprob: -7.5322465896606445
    10. '{})' → logprob: -7.9072465896606445

Token 18: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054716840386390686
    2. 'n' → logprob: -3.3047168254852295
    3. 'k' → logprob: -4.179717063903809
    4. ' s' → logprob: -8.179717063903809
    5. 'len' → logprob: -8.679717063903809
    6. ''' → logprob: -8.804717063903809
    7. ''s' → logprob: -8.804717063903809
    8. '{' → logprob: -8.804717063903809
    9. ''{' → logprob: -9.679717063903809
    10. '{s' → logprob: -9.804717063903809

Token 19: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.1901278793811798
    2. '[k' → logprob: -1.9401278495788574
    3. '[n' → logprob: -3.5651278495788574
    4. '[' → logprob: -8.190128326416016
    5. '{k' → logprob: -8.190128326416016
    6. '[-' → logprob: -8.440128326416016
    7. '.count' → logprob: -9.565128326416016
    8. '*k' → logprob: -9.815128326416016
    9. '[::-' → logprob: -9.940128326416016
    10. '[:-' → logprob: -10.315128326416016

Token 20: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00013977376511320472
    2. 'n' → logprob: -9.375140190124512
    3. ' k' → logprob: -10.625140190124512
    4. '-k' → logprob: -10.625140190124512
    5. '-' → logprob: -13.000140190124512
    6. '-n' → logprob: -14.125140190124512
    7. 's' → logprob: -14.250140190124512
    8. ' -' → logprob: -14.625140190124512
    9. ' ' → logprob: -14.875140190124512
    10. '{k' → logprob: -15.000140190124512

Token 21: '-' (ID: 12)
  Prédit: ']}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.6516695022583008
    2. '}' → logprob: -0.7766695022583008
    3. ']' → logprob: -4.276669502258301
    4. '}")' → logprob: -5.776669502258301
    5. ']}"' → logprob: -7.651669502258301
    6. '}]' → logprob: -7.651669502258301
    7. '...' → logprob: -8.1516695022583
    8. ' }' → logprob: -8.6516695022583
    9. '-' → logprob: -9.0266695022583
    10. '+' → logprob: -10.1516695022583

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.567575034452602e-05
    2. ' ' → logprob: -9.87509536743164
    3. '-' → logprob: -10.62509536743164
    4. '+' → logprob: -11.75009536743164
    5. ']' → logprob: -13.00009536743164
    6. 'len' → logprob: -13.62509536743164
    7. 'k' → logprob: -13.62509536743164
    8. '2' → logprob: -13.75009536743164
    9. '])' → logprob: -13.87509536743164
    10. ']+' → logprob: -13.87509536743164

Token 23: ']}' (ID: 28000)
  Prédit: ']}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.45055943727493286
    2. ']' → logprob: -1.325559377670288
    3. 's' → logprob: -2.825559377670288
    4. '+' → logprob: -3.450559377670288
    5. ']+' → logprob: -5.575559616088867
    6. '}' → logprob: -6.825559616088867
    7. 'k' → logprob: -8.075559616088867
    8. ']}"' → logprob: -8.075559616088867
    9. '+k' → logprob: -8.950559616088867
    10. ' ]' → logprob: -9.450559616088867

Token 24: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5274785757064819
    2. 's' → logprob: -1.652478575706482
    3. '{k' → logprob: -2.2774786949157715
    4. '{s' → logprob: -2.4024786949157715
    5. 'k' → logprob: -4.4024786949157715
    6. '[' → logprob: -5.0274786949157715
    7. '}' → logprob: -6.4024786949157715
    8. '+' → logprob: -6.6524786949157715
    9. ']' → logprob: -6.6524786949157715
    10. '{}' → logprob: -6.9024786949157715

Token 25: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014776058960705996
    2. ''' → logprob: -7.5014777183532715
    3. ''s' → logprob: -8.751477241516113
    4. ''*' → logprob: -9.376477241516113
    5. ''-' → logprob: -9.501477241516113
    6. ''.' → logprob: -9.751477241516113
    7. '">' → logprob: -9.876477241516113
    8. ''}' → logprob: -9.876477241516113
    9. 'k' → logprob: -9.876477241516113
    10. 'chr' → logprob: -10.501477241516113

Token 26: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.06437656283378601
    2. '.upper' → logprob: -2.9393765926361084
    3. '.lower' → logprob: -5.314376354217529
    4. '[:' → logprob: -7.189376354217529
    5. '.capitalize' → logprob: -7.189376354217529
    6. '}' → logprob: -7.439376354217529
    7. '[' → logprob: -7.564376354217529
    8. 'k' → logprob: -7.814376354217529
    9. '[::-' → logprob: -8.439376831054688
    10. '.replace' → logprob: -8.814376831054688

Token 27: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04473233222961426
    2. ']}' → logprob: -3.9197323322296143
    3. '].' → logprob: -4.169732093811035
    4. ' -' → logprob: -5.544732093811035
    5. ':' → logprob: -6.169732093811035
    6. ':].' → logprob: -6.544732093811035
    7. ']' → logprob: -7.419732093811035
    8. 'k' → logprob: -8.919732093811035
    9. ':k' → logprob: -9.544732093811035
    10. ':]' → logprob: -9.794732093811035

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14039470255374908
    2. ']}' → logprob: -2.890394687652588
    3. 'k' → logprob: -3.390394687652588
    4. ']' → logprob: -4.015394687652588
    5. '].' → logprob: -4.390394687652588
    6. '}' → logprob: -5.890394687652588
    7. ':' → logprob: -6.390394687652588
    8. ':k' → logprob: -6.640394687652588
    9. '])' → logprob: -6.890394687652588
    10. '-' → logprob: -7.015394687652588

Token 29: '].' (ID: 1651)
  Prédit: '.upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.810966968536377
    2. ':].' → logprob: -2.060966968536377
    3. '].' → logprob: -2.185966968536377
    4. ':' → logprob: -2.560966968536377
    5. '+' → logprob: -2.810966968536377
    6. '}.' → logprob: -2.935966968536377
    7. '}' → logprob: -3.435966968536377
    8. '.lower' → logprob: -3.935966968536377
    9. 'k' → logprob: -4.560966968536377
    10. 's' → logprob: -4.685966968536377

Token 30: 'lower' (ID: 30330)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.31826749444007874
    2. 'lower' → logprob: -1.3182674646377563
    3. 'isl' → logprob: -6.068267345428467
    4. 'swap' → logprob: -6.068267345428467
    5. 'capitalize' → logprob: -8.068267822265625
    6. 'replace' → logprob: -11.068267822265625
    7. 'isdigit' → logprob: -11.818267822265625
    8. 'is' → logprob: -11.818267822265625
    9. 'title' → logprob: -12.693267822265625
    10. '.upper' → logprob: -12.693267822265625

Token 31: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.05272260680794716
    2. '()' → logprob: -3.052722692489624
    3. '())' → logprob: -5.677722454071045
    4. '}' → logprob: -7.427722454071045
    5. '()){' → logprob: -10.302722930908203
    6. '}{' → logprob: -10.427722930908203
    7. '})' → logprob: -11.427722930908203
    8. '(' → logprob: -11.427722930908203
    9. ')}' → logprob: -12.552722930908203
    10. '()]' → logprob: -12.677722930908203

Token 32: '}{' (ID: 29124)
  Prédit: '}{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}{' → logprob: -0.14448435604572296
    2. '}' → logprob: -2.269484281539917
    3. '}")' → logprob: -3.644484281539917
    4. 's' → logprob: -6.519484519958496
    5. '()}' → logprob: -6.769484519958496
    6. '}s' → logprob: -6.894484519958496
    7. '{' → logprob: -8.144484519958496
    8. '{s' → logprob: -8.394484519958496
    9. '}')' → logprob: -8.519484519958496
    10. '"}' → logprob: -8.644484519958496

Token 33: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.292907877039397e-06
    2. ' s' → logprob: -12.75000286102295
    3. '{s' → logprob: -15.25000286102295
    4. '(s' → logprob: -16.625003814697266
    5. '	s' → logprob: -17.250003814697266
    6. 'f' → logprob: -17.375003814697266
    7. '}s' → logprob: -17.375003814697266
    8. ')s' → logprob: -18.750003814697266
    9. '-s' → logprob: -18.750003814697266
    10. ''s' → logprob: -19.125003814697266

Token 34: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0015070053050294518
    2. '[' → logprob: -6.501506805419922
    3. 'k' → logprob: -13.126506805419922
    4. '(k' → logprob: -14.376506805419922
    5. ':k' → logprob: -14.501506805419922
    6. '+' → logprob: -14.751506805419922
    7. '[len' → logprob: -14.751506805419922
    8. '[:' → logprob: -15.001506805419922
    9. '+k' → logprob: -15.751506805419922
    10. '[i' → logprob: -16.251506805419922

Token 35: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7967122197151184
    2. ':]' → logprob: -1.2967121601104736
    3. ':].' → logprob: -1.2967121601104736
    4. ']}' → logprob: -6.296712398529053
    5. '].' → logprob: -8.421711921691895
    6. ']' → logprob: -8.921711921691895
    7. '-' → logprob: -9.796711921691895
    8. '+' → logprob: -10.421711921691895
    9. ':k' → logprob: -10.921711921691895
    10. ':]

' → logprob: -11.671711921691895

Token 36: ']}' (ID: 28000)
  Prédit: ']}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.005054194945842028
    2. ']' → logprob: -5.505053997039795
    3. ']}"' → logprob: -7.005053997039795
    4. '}' → logprob: -10.630054473876953
    5. '])' → logprob: -11.255054473876953
    6. ' ]' → logprob: -11.505054473876953
    7. '}]' → logprob: -11.755054473876953
    8. '].' → logprob: -12.255054473876953
    9. '}")' → logprob: -13.130054473876953
    10. ']}
' → logprob: -14.255054473876953

Token 37: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3133820593357086
    2. ')' → logprob: -1.3133820295333862
    3. ')")' → logprob: -9.313382148742676
    4. '"' → logprob: -11.563382148742676
    5. '`)' → logprob: -12.313382148742676
    6. '```' → logprob: -12.438382148742676
    7. '')' → logprob: -12.813382148742676
    8. ' )' → logprob: -12.813382148742676
    9. '}")' → logprob: -13.688382148742676
    10. '”)' → logprob: -13.813382148742676


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 48.57%
Précision adaptée (1ère position): 48.57%
Précision (top 10): 85.71%
================================================================================
