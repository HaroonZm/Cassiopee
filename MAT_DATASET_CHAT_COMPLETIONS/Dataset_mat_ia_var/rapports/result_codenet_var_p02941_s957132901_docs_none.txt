================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import bisect
sys.setrecursionlimit(1000000000)
from heapq import heappush, heappop
from collections import defaultdict
from itertools import accumulate
from collections import Counter
from collections import deque
from operator import itemgetter
from itertools import permutations
mod = 10**9 + 7
inf = float('inf')
def I(): return int(sys.stdin.readline())
def LI(): return list(map(int,sys.stdin.readline().split()))
n = I()
a = LI()
b = LI()
h = []
V = [0]*n
for i,v in enumerate(b):
    heappush(h,(-v,i))
    V[i] = v
ans = 0
while h:
    v,i = heappop(h)
    v = -v
    tmp = V[(i+1) % n] + V[i-1]
    if v == a[i]:
        continue
    s = (v - a[i])//tmp
    if s <= 0:
        print(-1)
        quit()
    ans += s
    v -= s*tmp
    V[i] = v
    if v != a[i]:
        heappush(h,(-v,i))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -15.000012397766113
    4. '"os' → logprob: -15.250012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16191306710243225
    2. '\' → logprob: -3.2869131565093994
    3. 'import' → logprob: -3.6619131565093994
    4. '\n' → logprob: -3.6619131565093994
    5. '```' → logprob: -4.16191291809082
    6. '<|end|>' → logprob: -4.16191291809082
    7. '
' → logprob: -4.53691291809082
    8. '

' → logprob: -5.16191291809082
    9. '<|end|>' → logprob: -5.78691291809082
    10. '' → logprob: -5.91191291809082

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1315985918045044
    2. '\n' → logprob: -1.6315985918045044
    3. '.' → logprob: -2.006598472595215
    4. '
' → logprob: -2.006598472595215
    5. '```' → logprob: -2.506598472595215
    6. '\' → logprob: -3.131598472595215
    7. '<|end|>' → logprob: -3.381598472595215
    8. '

' → logprob: -3.631598472595215
    9. ',' → logprob: -4.381598472595215
    10. '<|end|>' → logprob: -5.631598472595215

Token 7: ' bis' (ID: 7204)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1645096093416214
    2. ' os' → logprob: -1.914509654045105
    3. 'random' → logprob: -5.9145097732543945
    4. 're' → logprob: -7.6645097732543945
    5. ' random' → logprob: -7.6645097732543945
    6. ' re' → logprob: -8.289509773254395
    7. 'collections' → logprob: -9.289509773254395
    8. 'numpy' → logprob: -10.039509773254395
    9. ' itertools' → logprob: -10.039509773254395
    10. ' numpy' → logprob: -10.164509773254395

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0009166974923573434
    2. 't' → logprob: -7.000916481018066
    3. 'ected' → logprob: -12.625916481018066
    4. 'ection' → logprob: -14.625916481018066
    5. 'e' → logprob: -14.875916481018066
    6. '```' → logprob: -15.000916481018066
    7. 'ec' → logprob: -15.625916481018066
    8. 'ector' → logprob: -15.750916481018066
    9. 'ective' → logprob: -16.500917434692383
    10. 'p' → logprob: -16.500917434692383

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.056951642036438
    2. '<|end|>' → logprob: -1.056951642036438
    3. 'import' → logprob: -2.0569515228271484
    4. '\n' → logprob: -2.4319515228271484
    5. '

' → logprob: -3.4319515228271484
    6. '```' → logprob: -4.181951522827148
    7. '.' → logprob: -4.306951522827148
    8. '' → logprob: -5.181951522827148
    9. '<|end|>' → logprob: -5.181951522827148
    10. '\' → logprob: -5.306951522827148

Token 10: 'sys' (ID: 17324)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8629054427146912
    2. '
' → logprob: -1.612905502319336
    3. '<|end|>' → logprob: -1.987905502319336
    4. 'import' → logprob: -2.362905502319336
    5. '\n' → logprob: -2.987905502319336
    6. '.' → logprob: -3.612905502319336
    7. '```' → logprob: -3.987905502319336
    8. ',' → logprob: -4.487905502319336
    9. '\' → logprob: -4.987905502319336
    10. 'def' → logprob: -5.237905502319336

Token 11: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2961512513575144e-05
    2. '.readline' → logprob: -12.250022888183594
    3. ' .' → logprob: -12.500022888183594
    4. '."""' → logprob: -13.000022888183594
    5. '.`' → logprob: -13.125022888183594
    6. '.​' → logprob: -13.375022888183594
    7. '.user' → logprob: -14.500022888183594
    8. '.exit' → logprob: -14.500022888183594
    9. '.setdefault' → logprob: -14.500022888183594
    10. '.]' → logprob: -14.625022888183594

Token 12: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.1596481204032898
    2. '_limit' → logprob: -2.4096481800079346
    3. '_rec' → logprob: -3.6596481800079346
    4. '_version' → logprob: -5.2846479415893555
    5. '_' → logprob: -5.6596479415893555
    6. '_trace' → logprob: -5.7846479415893555
    7. '_max' → logprob: -6.0346479415893555
    8. 'limit' → logprob: -6.0346479415893555
    9. '_threshold' → logprob: -6.1596479415893555
    10. 't' → logprob: -6.4096479415893555

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0010476969182491302
    2. 'urs' → logprob: -7.376047611236572
    3. 'limit' → logprob: -8.62604808807373
    4. 'ursive' → logprob: -9.12604808807373
    5. 'ur' → logprob: -9.75104808807373
    6. 'u' → logprob: -11.25104808807373
    7. 't' → logprob: -11.50104808807373
    8. 'ursor' → logprob: -11.75104808807373
    9. 'size' → logprob: -12.12604808807373
    10. 'ision' → logprob: -12.12604808807373

Token 14: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.08924534171819687
    2. '_limit' → logprob: -2.464245319366455
    3. ' limit' → logprob: -8.964245796203613
    4. '_depth' → logprob: -9.089245796203613
    5. 'ault' → logprob: -10.964245796203613
    6. 'lim' → logprob: -11.089245796203613
    7. 'depth' → logprob: -11.339245796203613
    8. 'al' → logprob: -12.089245796203613
    9. '_LIMIT' → logprob: -12.964245796203613
    10. '_' → logprob: -13.089245796203613

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1279553291387856e-05
    2. '((' → logprob: -12.625011444091797
    3. '(
' → logprob: -13.125011444091797
    4. '(

' → logprob: -13.375011444091797
    5. '("("' → logprob: -13.875011444091797
    6. '```' → logprob: -13.875011444091797
    7. ' (' → logprob: -14.125011444091797
    8. '()' → logprob: -15.125011444091797
    9. '(()' → logprob: -15.250011444091797
    10. '(None' → logprob: -15.375011444091797

Token 16: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003186267102137208
    2. '100' → logprob: -5.753186225891113
    3. '300' → logprob: -12.128186225891113
    4. '500' → logprob: -13.878186225891113
    5. '200' → logprob: -14.003186225891113
    6. '250' → logprob: -14.378186225891113
    7. '1' → logprob: -14.753186225891113
    8. ' ' → logprob: -15.003186225891113
    9. '150' → logprob: -16.62818717956543
    10. '400' → logprob: -17.50318717956543

Token 17: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.313364177942276
    2. '00' → logprob: -1.3133641481399536
    3. '0' → logprob: -9.188364028930664
    4. '_' → logprob: -15.313364028930664
    5. '001' → logprob: -17.563364028930664
    6. '007' → logprob: -17.688364028930664
    7. '```' → logprob: -18.688364028930664
    8. '006' → logprob: -18.813364028930664
    9. '010' → logprob: -19.188364028930664
    10. '050' → logprob: -19.688364028930664

Token 18: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01815345324575901
    2. '0' → logprob: -4.018153667449951
    3. ' )' → logprob: -13.643153190612793
    4. '1' → logprob: -14.018153190612793
    5. '```' → logprob: -14.268153190612793
    6. '))' → logprob: -14.768153190612793
    7. '`)' → logprob: -15.893153190612793
    8. ')
' → logprob: -16.51815414428711
    9. '')' → logprob: -16.51815414428711
    10. '+' → logprob: -17.01815414428711

Token 19: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.813969957875088e-05
    2. '0' → logprob: -9.625067710876465
    3. ' )' → logprob: -13.375067710876465
    4. '))' → logprob: -15.500067710876465
    5. '1' → logprob: -15.750067710876465
    6. ')
' → logprob: -16.12506866455078
    7. '```' → logprob: -17.75006866455078
    8. ')

' → logprob: -18.25006866455078
    9. '`)' → logprob: -18.37506866455078
    10. '6' → logprob: -18.62506866455078

Token 20: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -14.62500286102295
    4. '))' → logprob: -16.500003814697266
    5. '```' → logprob: -17.125003814697266
    6. '0' → logprob: -17.625003814697266
    7. ')

' → logprob: -17.625003814697266
    8. '),' → logprob: -18.625003814697266
    9. '）' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.125003814697266

Token 21: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24235612154006958
    2. '

' → logprob: -1.9923560619354248
    3. '\' → logprob: -3.867356061935425
    4. '
' → logprob: -3.992356061935425
    5. '\n' → logprob: -3.992356061935425
    6. '' → logprob: -4.867356300354004
    7. '```' → logprob: -5.242356300354004
    8. 'def' → logprob: -5.617356300354004
    9. '#' → logprob: -6.742356300354004
    10. 'import' → logprob: -7.867356300354004

Token 22: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.02376888319849968
    2. 'collections' → logprob: -4.773768901824951
    3. ' itertools' → logprob: -4.898768901824951
    4. '_' → logprob: -5.898768901824951
    5. ' functools' → logprob: -6.398768901824951
    6. ' math' → logprob: -6.648768901824951
    7. ' ' → logprob: -6.773768901824951
    8. ' heap' → logprob: -7.523768901824951
    9. ' threading' → logprob: -9.523768424987793
    10. ' sys' → logprob: -10.273768424987793

Token 23: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'i' → logprob: -17.875
    3. 'queue' → logprob: -18.625
    4. 'u' → logprob: -19.25
    5. 'f' → logprob: -19.25
    6. ' queue' → logprob: -19.5
    7. 'import' → logprob: -19.875
    8. 'n' → logprob: -20.125
    9. 'a' → logprob: -20.25
    10. 'e' → logprob: -20.375

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.008172920905053616
    2. 'import' → logprob: -4.883172988891602
    3. ' ' → logprob: -7.508172988891602
    4. '	import' → logprob: -11.758172988891602
    5. '_import' → logprob: -13.508172988891602
    6. '  ' → logprob: -13.508172988891602
    7. '<|end|>' → logprob: -13.633172988891602
    8. '.' → logprob: -13.883172988891602
    9. 'space' → logprob: -14.383172988891602
    10. ' space' → logprob: -14.383172988891602

Token 25: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.014582413248717785
    2. 'he' → logprob: -4.389582633972168
    3. ' ' → logprob: -6.264582633972168
    4. ' heap' → logprob: -9.389582633972168
    5. ' n' → logprob: -10.764582633972168
    6. 'heap' → logprob: -11.014582633972168
    7. ' hea' → logprob: -11.264582633972168
    8. ' h' → logprob: -11.639582633972168
    9. ' merge' → logprob: -12.514582633972168
    10. 'n' → logprob: -12.764582633972168

Token 26: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.10023567825555801
    2. 'ap' → logprob: -2.3502357006073
    3. 'a' → logprob: -10.475235939025879
    4. 'ап' → logprob: -15.100235939025879
    5. '```' → logprob: -15.725235939025879
    6. 'aq' → logprob: -16.475234985351562
    7. '[' → logprob: -17.225234985351562
    8. 'q' → logprob: -17.600234985351562
    9. '	app' → logprob: -17.850234985351562
    10. 'appen' → logprob: -17.975234985351562

Token 27: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00015860427811276168
    2. 'op' → logprob: -8.750158309936523
    3. 'us' → logprob: -17.000158309936523
    4. 'u' → logprob: -18.750158309936523
    5. 'o' → logprob: -19.250158309936523
    6. '```' → logprob: -19.500158309936523
    7. '[' → logprob: -19.750158309936523
    8. '   ' → logprob: -20.250158309936523
    9. 'USH' → logprob: -20.625158309936523
    10. 'ut' → logprob: -20.625158309936523

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4272746741771698
    2. ' ' → logprob: -1.3022747039794922
    3. '<|end|>' → logprob: -3.177274703979492
    4. 'he' → logprob: -4.052274703979492
    5. ' ,' → logprob: -4.927274703979492
    6. ' he' → logprob: -5.552274703979492
    7. 'import' → logprob: -6.427274703979492
    8. '  ' → logprob: -6.552274703979492
    9. '(' → logprob: -6.552274703979492
    10. ' and' → logprob: -7.927274703979492

Token 29: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.030135050415992737
    2. 'he' → logprob: -3.530135154724121
    3. 'heap' → logprob: -8.530135154724121
    4. ' heap' → logprob: -8.655135154724121
    5. ' ' → logprob: -12.030135154724121
    6. '.he' → logprob: -13.780135154724121
    7. ' heaps' → logprob: -13.905135154724121
    8. '```' → logprob: -13.905135154724121
    9. ' hea' → logprob: -14.405135154724121
    10. '_he' → logprob: -14.405135154724121

Token 30: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.627176768844947e-05
    2. 'ap' → logprob: -9.250096321105957
    3. 'a' → logprob: -17.50009536743164
    4. 'appen' → logprob: -17.87509536743164
    5. ' app' → logprob: -18.87509536743164
    6. 'ап' → logprob: -19.00009536743164
    7. 'appt' → logprob: -19.25009536743164
    8. 'appe' → logprob: -19.37509536743164
    9. '_app' → logprob: -19.50009536743164
    10. '	app' → logprob: -19.75009536743164

Token 31: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.624555291840807e-05
    2. 'ush' → logprob: -9.500076293945312
    3. 'o' → logprob: -13.625076293945312
    4. '   ' → logprob: -17.375076293945312
    5. ' op' → logprob: -17.625076293945312
    6. 'оп' → logprob: -17.875076293945312
    7. 'opleft' → logprob: -18.000076293945312
    8. '

' → logprob: -18.125076293945312
    9. 'p' → logprob: -18.250076293945312
    10. 'opp' → logprob: -18.375076293945312

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17371264100074768
    2. '

' → logprob: -2.173712730407715
    3. '' → logprob: -3.923712730407715
    4. 'def' → logprob: -4.798712730407715
    5. '```' → logprob: -4.798712730407715
    6. '
' → logprob: -5.798712730407715
    7. 'import' → logprob: -5.923712730407715
    8. '\n' → logprob: -6.673712730407715
    9. '\' → logprob: -7.548712730407715
    10. 'class' → logprob: -8.173712730407715

Token 33: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48999011516571045
    2. '

' → logprob: -0.9899901151657104
    3. 'def' → logprob: -4.739990234375
    4. '```' → logprob: -6.239990234375
    5. '
' → logprob: -6.489990234375
    6. '' → logprob: -6.739990234375
    7. 'import' → logprob: -7.239990234375
    8. 'n' → logprob: -7.614990234375
    9. 'class' → logprob: -7.614990234375
    10. '\n' → logprob: -9.239990234375

Token 34: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.23269258439540863
    2. 'collections' → logprob: -1.7326925992965698
    3. ' itertools' → logprob: -3.4826924800872803
    4. ' functools' → logprob: -10.35769271850586
    5. ' math' → logprob: -11.48269271850586
    6. 'it' → logprob: -11.73269271850586
    7. '_' → logprob: -12.10769271850586
    8. ' queue' → logprob: -12.23269271850586
    9. 'queue' → logprob: -12.85769271850586
    10. ' operator' → logprob: -13.85769271850586

Token 35: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.015004904940724373
    2. ' import' → logprob: -4.265005111694336
    3. 'abc' → logprob: -7.515005111694336
    4. '<|end|>' → logprob: -9.265005111694336
    5. '.' → logprob: -10.015005111694336
    6. '.Counter' → logprob: -10.265005111694336
    7. '```' → logprob: -10.515005111694336
    8. 'ounter' → logprob: -11.390005111694336
    9. ' defaultdict' → logprob: -11.640005111694336
    10. 'deque' → logprob: -11.640005111694336

Token 36: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5769058465957642
    2. ' deque' → logprob: -0.8269058465957642
    3. 'deque' → logprob: -6.951905727386475
    4. ' de' → logprob: -12.076906204223633
    5. 'default' → logprob: -13.576906204223633
    6. ' Counter' → logprob: -13.701906204223633
    7. 'de' → logprob: -14.451906204223633
    8. ' default' → logprob: -14.951906204223633
    9. ' ' → logprob: -16.951906204223633
    10. '.de' → logprob: -17.201906204223633

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7231641411781311
    2. '

' → logprob: -0.7231641411781311
    3. 'def' → logprob: -4.973164081573486
    4. 'class' → logprob: -5.348164081573486
    5. '<|end|>' → logprob: -5.473164081573486
    6. 'import' → logprob: -5.723164081573486
    7. '' → logprob: -5.848164081573486
    8. '
' → logprob: -6.223164081573486
    9. 'n' → logprob: -6.223164081573486
    10. '```' → logprob: -7.223164081573486

Token 38: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45814213156700134
    2. '

' → logprob: -1.0831421613693237
    3. 'def' → logprob: -4.708142280578613
    4. 'class' → logprob: -4.958142280578613
    5. '
' → logprob: -5.083142280578613
    6. 'import' → logprob: -5.833142280578613
    7. '' → logprob: -6.458142280578613
    8. 'n' → logprob: -7.708142280578613
    9. 'd' → logprob: -8.208142280578613
    10. '```' → logprob: -8.208142280578613

Token 39: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.012112597934901714
    2. ' typing' → logprob: -5.137112617492676
    3. ' queue' → logprob: -5.887112617492676
    4. ' math' → logprob: -6.762112617492676
    5. ' functools' → logprob: -6.762112617492676
    6. ' collections' → logprob: -7.762112617492676
    7. ' ' → logprob: -8.262112617492676
    8. ' heap' → logprob: -8.762112617492676
    9. ' operator' → logprob: -9.137112617492676
    10. ' sys' → logprob: -10.762112617492676

Token 40: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009140134789049625
    2. 'import' → logprob: -4.7591400146484375
    3. ' .' → logprob: -8.509140014648438
    4. '.' → logprob: -9.134140014648438
    5. ' ' → logprob: -9.384140014648438
    6. '	import' → logprob: -9.884140014648438
    7. ' itertools' → logprob: -10.759140014648438
    8. '<|end|>' → logprob: -11.134140014648438
    9. '.groupby' → logprob: -11.259140014648438
    10. '.import' → logprob: -12.009140014648438

Token 41: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.4542351961135864
    2. ' combinations' → logprob: -1.5792351961135864
    3. ' accumulate' → logprob: -1.9542351961135864
    4. 'com' → logprob: -5.204235076904297
    5. ' group' → logprob: -5.329235076904297
    6. ' product' → logprob: -5.454235076904297
    7. ' count' → logprob: -7.079235076904297
    8. ' chain' → logprob: -7.704235076904297
    9. 'acc' → logprob: -7.954235076904297
    10. 'per' → logprob: -8.079235076904297

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44597023725509644
    2. '

' → logprob: -1.0709702968597412
    3. 'n' → logprob: -5.070970058441162
    4. 'import' → logprob: -5.695970058441162
    5. '
' → logprob: -6.195970058441162
    6. '\n' → logprob: -6.445970058441162
    7. 'def' → logprob: -7.070970058441162
    8. '' → logprob: -7.320970058441162
    9. '```' → logprob: -7.320970058441162
    10. '


' → logprob: -7.945970058441162

Token 43: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26809078454971313
    2. '

' → logprob: -1.7680907249450684
    3. 'def' → logprob: -3.7680907249450684
    4. 'import' → logprob: -4.143090724945068
    5. '<|end|>' → logprob: -4.768090724945068
    6. 'n' → logprob: -5.143090724945068
    7. '```' → logprob: -5.643090724945068
    8. 'class' → logprob: -6.143090724945068
    9. '' → logprob: -6.518090724945068
    10. '\n' → logprob: -6.768090724945068

Token 44: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.23744136095046997
    2. ' math' → logprob: -1.6124413013458252
    3. 'operator' → logprob: -4.987441539764404
    4. ' functools' → logprob: -6.112441539764404
    5. 'math' → logprob: -6.862441539764404
    6. ' bis' → logprob: -7.112441539764404
    7. ' sys' → logprob: -7.862441539764404
    8. ' fractions' → logprob: -8.112441062927246
    9. ' ' → logprob: -9.112441062927246
    10. ' heap' → logprob: -9.237441062927246

Token 45: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011073877103626728
    2. ' import' → logprob: -4.886074066162109
    3. '<|end|>' → logprob: -5.761074066162109
    4. '.' → logprob: -9.01107406616211
    5. '	import' → logprob: -9.38607406616211
    6. 'from' → logprob: -10.13607406616211
    7. '_import' → logprob: -10.63607406616211
    8. '<|end|>' → logprob: -11.26107406616211
    9. 'ertools' → logprob: -12.51107406616211
    10. '.import' → logprob: -12.51107406616211

Token 46: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.38376665115356445
    2. 'deque' → logprob: -1.3837666511535645
    3. ' defaultdict' → logprob: -2.7587666511535645
    4. ' Counter' → logprob: -5.5087666511535645
    5. 'Counter' → logprob: -8.383766174316406
    6. 'de' → logprob: -8.508766174316406
    7. 'default' → logprob: -9.383766174316406
    8. ' ' → logprob: -10.383766174316406
    9. ' de' → logprob: -10.633766174316406
    10. ' ' → logprob: -10.758766174316406

Token 47: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5881167054176331
    2. '
' → logprob: -0.8381167054176331
    3. 'def' → logprob: -5.713116645812988
    4. '
' → logprob: -6.213116645812988
    5. 'import' → logprob: -6.338116645812988
    6. '\n' → logprob: -6.588116645812988
    7. '' → logprob: -7.088116645812988
    8. '```' → logprob: -7.338116645812988
    9. '


' → logprob: -7.463116645812988
    10. 'n' → logprob: -7.838116645812988

Token 48: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21217204630374908
    2. '

' → logprob: -1.837172031402588
    3. 'd' → logprob: -4.712172031402588
    4. 'n' → logprob: -5.087172031402588
    5. 'def' → logprob: -5.337172031402588
    6. '' → logprob: -5.462172031402588
    7. '#' → logprob: -6.087172031402588
    8. '
' → logprob: -6.087172031402588
    9. 'import' → logprob: -7.087172031402588
    10. '```' → logprob: -7.712172031402588

Token 49: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9080653190612793
    2. ' typing' → logprob: -1.0330653190612793
    3. ' functools' → logprob: -2.0330653190612793
    4. ' operator' → logprob: -2.6580653190612793
    5. ' itertools' → logprob: -3.9080653190612793
    6. ' fractions' → logprob: -5.283065319061279
    7. ' heap' → logprob: -5.658065319061279
    8. 'math' → logprob: -5.908065319061279
    9. ' collections' → logprob: -6.158065319061279
    10. ' queue' → logprob: -6.283065319061279

Token 50: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.17996640503406525
    2. 'import' → logprob: -1.8049664497375488
    3. '<|end|>' → logprob: -9.05496597290039
    4. '	import' → logprob: -10.17996597290039
    5. '.' → logprob: -10.92996597290039
    6. ' ' → logprob: -11.05496597290039
    7. '_import' → logprob: -11.80496597290039
    8. ' ' → logprob: -11.80496597290039
    9. ' defaultdict' → logprob: -12.30496597290039
    10. '_' → logprob: -12.55496597290039

Token 51: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.0628945380449295
    2. 'deque' → logprob: -2.812894582748413
    3. ' defaultdict' → logprob: -7.062894344329834
    4. ' Ordered' → logprob: -9.937894821166992
    5. 'Ordered' → logprob: -11.687894821166992
    6. 'de' → logprob: -11.937894821166992
    7. ' de' → logprob: -12.812894821166992
    8. ' named' → logprob: -13.437894821166992
    9. 'Deque' → logprob: -13.687894821166992
    10. 'named' → logprob: -14.187894821166992

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21919868886470795
    2. '

' → logprob: -1.8441987037658691
    3. 'import' → logprob: -4.469198703765869
    4. 'def' → logprob: -4.594198703765869
    5. 'n' → logprob: -4.844198703765869
    6. '\n' → logprob: -6.719198703765869
    7. '#' → logprob: -6.719198703765869
    8. '' → logprob: -6.719198703765869
    9. '<|end|>' → logprob: -6.719198703765869
    10. '
' → logprob: -7.094198703765869

Token 53: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4152742624282837
    2. '

' → logprob: -2.040274143218994
    3. 'def' → logprob: -2.790274143218994
    4. 'import' → logprob: -3.415274143218994
    5. '<|end|>' → logprob: -3.540274143218994
    6. '#' → logprob: -3.915274143218994
    7. '\n' → logprob: -4.040274143218994
    8. 'class' → logprob: -4.415274143218994
    9. '\' → logprob: -4.540274143218994
    10. '```' → logprob: -4.540274143218994

Token 54: ' operator' (ID: 11019)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.1096179485321045
    2. ' typing' → logprob: -1.3596179485321045
    3. ' math' → logprob: -1.7346179485321045
    4. ' heap' → logprob: -1.9846179485321045
    5. ' operator' → logprob: -3.6096179485321045
    6. ' queue' → logprob: -4.234618186950684
    7. ' fractions' → logprob: -4.359618186950684
    8. ' itertools' → logprob: -4.734618186950684
    9. ' random' → logprob: -4.859618186950684
    10. 'math' → logprob: -5.234618186950684

Token 55: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.006637571379542351
    2. 'import' → logprob: -5.1316375732421875
    3. '<|end|>' → logprob: -7.3816375732421875
    4. ' ' → logprob: -9.631637573242188
    5. '	import' → logprob: -11.756637573242188
    6. '<|end|>' → logprob: -12.381637573242188
    7. ' as' → logprob: -12.506637573242188
    8. ' ' → logprob: -13.881637573242188
    9. '_import' → logprob: -14.506637573242188
    10. ' Import' → logprob: -15.006637573242188

Token 56: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.3213612139225006
    2. 'item' → logprob: -1.3213611841201782
    3. ' attr' → logprob: -5.696361064910889
    4. '.item' → logprob: -6.821361064910889
    5. 'attr' → logprob: -6.946361064910889
    6. '	item' → logprob: -7.071361064910889
    7. ' ' → logprob: -7.446361064910889
    8. 'getitem' → logprob: -8.321361541748047
    9. '=item' → logprob: -8.571361541748047
    10. ' mul' → logprob: -8.821361541748047

Token 57: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00026753442944027483
    2. 'get' → logprob: -8.25026798248291
    3. 'gett' → logprob: -12.50026798248291
    4. 'g' → logprob: -13.62526798248291
    5. 'getitem' → logprob: -13.87526798248291
    6. 'gte' → logprob: -16.250267028808594
    7. 'attr' → logprob: -16.875267028808594
    8. 'Getter' → logprob: -16.875267028808594
    9. 'ge' → logprob: -17.125267028808594
    10. 'got' → logprob: -17.375267028808594

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0947488471865654
    2. '

' → logprob: -3.2197487354278564
    3. '' → logprob: -3.8447487354278564
    4. '<|end|>' → logprob: -4.5947489738464355
    5. '\n' → logprob: -5.2197489738464355
    6. 'import' → logprob: -5.5947489738464355
    7. '#' → logprob: -6.3447489738464355
    8. '\' → logprob: -6.5947489738464355
    9. 'def' → logprob: -7.0947489738464355
    10. 'n' → logprob: -7.0947489738464355

Token 59: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32095396518707275
    2. '

' → logprob: -2.070953845977783
    3. 'd' → logprob: -2.820953845977783
    4. '' → logprob: -3.445953845977783
    5. 'n' → logprob: -3.945953845977783
    6. 'import' → logprob: -5.070953845977783
    7. '#' → logprob: -5.320953845977783
    8. '\' → logprob: -5.445953845977783
    9. 'a' → logprob: -5.445953845977783
    10. '
' → logprob: -5.695953845977783

Token 60: ' itertools' (ID: 103178)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.06614565849304199
    2. 'math' → logprob: -3.566145658493042
    3. 'fun' → logprob: -3.691145658493042
    4. ' math' → logprob: -5.191145896911621
    5. ' itertools' → logprob: -6.441145896911621
    6. 'heap' → logprob: -6.816145896911621
    7. ' heap' → logprob: -7.191145896911621
    8. ' fractions' → logprob: -8.066145896911621
    9. 'operator' → logprob: -8.191145896911621
    10. 'typing' → logprob: -8.316145896911621

Token 61: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.049450021237134933
    2. 'import' → logprob: -3.049449920654297
    3. '<|end|>' → logprob: -7.174449920654297
    4. '	import' → logprob: -10.424449920654297
    5. '.' → logprob: -10.549449920654297
    6. ' ' → logprob: -10.549449920654297
    7. '<|end|>' → logprob: -12.049449920654297
    8. ' ' → logprob: -13.424449920654297
    9. '_import' → logprob: -13.549449920654297
    10. ' im' → logprob: -14.299449920654297

Token 62: ' permutations' (ID: 174595)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.2449622005224228
    2. 'group' → logprob: -2.619962215423584
    3. ' permutations' → logprob: -2.994962215423584
    4. ' product' → logprob: -3.119962215423584
    5. 'product' → logprob: -3.494962215423584
    6. ' accumulate' → logprob: -5.119962215423584
    7. 'per' → logprob: -5.494962215423584
    8. 'com' → logprob: -5.869962215423584
    9. ' combinations' → logprob: -5.994962215423584
    10. 'count' → logprob: -6.619962215423584

Token 63: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7894796133041382
    2. '<|end|>' → logprob: -1.0394796133041382
    3. '
' → logprob: -2.2894797325134277
    4. 'import' → logprob: -3.4144797325134277
    5. '\' → logprob: -4.164479732513428
    6. ',' → logprob: -4.289479732513428
    7. 'n' → logprob: -5.289479732513428
    8. '<|end|>' → logprob: -5.414479732513428
    9. '#' → logprob: -5.539479732513428
    10. 'from' → logprob: -6.164479732513428

Token 64: 'mod' (ID: 4847)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1299163103103638
    2. '
' → logprob: -1.2549163103103638
    3. '\n' → logprob: -2.254916191101074
    4. '<|end|>' → logprob: -2.629916191101074
    5. 'def' → logprob: -3.129916191101074
    6. '\' → logprob: -3.254916191101074
    7. 'from' → logprob: -3.629916191101074
    8. 'a' → logprob: -4.254916191101074
    9. 'd' → logprob: -4.379916191101074
    10. '#' → logprob: -4.379916191101074

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07054638862609863
    2. '=' → logprob: -2.6955463886260986
    3. ' ' → logprob: -7.4455461502075195
    4. ' =)' → logprob: -11.82054615020752
    5. '_' → logprob: -12.44554615020752
    6. ' =
' → logprob: -12.57054615020752
    7. ',' → logprob: -12.82054615020752
    8. '  ' → logprob: -13.07054615020752
    9. '<|end|>' → logprob: -13.19554615020752
    10. '.' → logprob: -13.82054615020752

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31666332483291626
    2. '10' → logprob: -1.3166632652282715
    3. '100' → logprob: -5.6916632652282715
    4. '998' → logprob: -10.81666374206543
    5. '1' → logprob: -14.06666374206543
    6. 'int' → logprob: -14.81666374206543
    7. ' (' → logprob: -15.81666374206543
    8. ' ' → logprob: -16.19166374206543
    9. ' int' → logprob: -16.31666374206543
    10. 'pow' → logprob: -16.56666374206543

Token 67: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0298769548535347
    2. '100' → logprob: -3.529876947402954
    3. ' ' → logprob: -9.529876708984375
    4. '998' → logprob: -9.904876708984375
    5. '1' → logprob: -12.904876708984375
    6. 'int' → logprob: -13.529876708984375
    7. '(' → logprob: -16.904876708984375
    8. 'pow' → logprob: -17.654876708984375
    9. '999' → logprob: -17.904876708984375
    10. '0' → logprob: -18.529876708984375

Token 68: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.013824254274368286
    2. '09' → logprob: -4.763824462890625
    3. '**' → logprob: -5.388824462890625
    4. '000' → logprob: -7.513824462890625
    5. '00' → logprob: -10.513824462890625
    6. '009' → logprob: -11.388824462890625
    7. '0' → logprob: -11.638824462890625
    8. '^' → logprob: -11.888824462890625
    9. ' ' → logprob: -11.888824462890625
    10. '07' → logprob: -12.138824462890625

Token 69: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.25
    3. ' ' → logprob: -18.125
    4. '+' → logprob: -18.625
    5. '```' → logprob: -19.875
    6. '10' → logprob: -20.5
    7. '19' → logprob: -21.0
    8. '18' → logprob: -21.25
    9. '９' → logprob: -21.5
    10. '_' → logprob: -22.5

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0038188379257917404
    2. '7' → logprob: -6.003818988800049
    3. ' +' → logprob: -6.628818988800049
    4. '37' → logprob: -12.25381851196289
    5. ' ' → logprob: -12.37881851196289
    6. '+
' → logprob: -12.50381851196289
    7. ' plus' → logprob: -13.37881851196289
    8. '+

' → logprob: -13.62881851196289
    9. '46' → logprob: -14.25381851196289
    10. '＋' → logprob: -14.50381851196289

Token 71: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.896309739408025e-07
    2. '+' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '9' → logprob: -17.375
    5. '07' → logprob: -18.625
    6. '```' → logprob: -19.25
    7. '   ' → logprob: -19.75
    8. '  ' → logprob: -20.375
    9. '

' → logprob: -21.0
    10. '79' → logprob: -21.125

Token 72: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.375
    3. ' ' → logprob: -18.0
    4. '```' → logprob: -19.25
    5. '

' → logprob: -19.875
    6. '07' → logprob: -20.125
    7. '   ' → logprob: -20.5
    8. '9' → logprob: -20.5
    9. '' → logprob: -21.3125
    10. '  ' → logprob: -22.0625

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1456626057624817
    2. 'def' → logprob: -2.270662546157837
    3. 'n' → logprob: -4.270662784576416
    4. '
' → logprob: -5.270662784576416
    5. '' → logprob: -5.395662784576416
    6. '

' → logprob: -5.520662784576416
    7. '\n' → logprob: -6.145662784576416
    8. '#' → logprob: -7.270662784576416
    9. 'import' → logprob: -7.770662784576416
    10. '```' → logprob: -7.895662784576416

Token 74: 'inf' (ID: 22226)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17894484102725983
    2. '

' → logprob: -1.9289448261260986
    3. 'def' → logprob: -4.928945064544678
    4. '' → logprob: -5.428945064544678
    5. '\n' → logprob: -6.053945064544678
    6. '
' → logprob: -6.303945064544678
    7. 'n' → logprob: -6.803945064544678
    8. '\' → logprob: -7.428945064544678
    9. '#' → logprob: -8.55394458770752
    10. 'd' → logprob: -8.67894458770752

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032239374704658985
    2. '=' → logprob: -5.753223896026611
    3. ',' → logprob: -10.87822437286377
    4. ')' → logprob: -11.62822437286377
    5. ' ' → logprob: -12.50322437286377
    6. '.' → logprob: -12.75322437286377
    7. ' =
' → logprob: -13.25322437286377
    8. '<|end|>' → logprob: -13.37822437286377
    9. ' ,' → logprob: -13.50322437286377
    10. ' ' → logprob: -13.87822437286377

Token 76: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3790639042854309
    2. '10' → logprob: -1.7540638446807861
    3. ' float' → logprob: -2.379063844680786
    4. 'float' → logprob: -3.004063844680786
    5. '1' → logprob: -9.004063606262207
    6. '100' → logprob: -10.004063606262207
    7. 'int' → logprob: -11.379063606262207
    8. '(float' → logprob: -12.129063606262207
    9. ' int' → logprob: -12.254063606262207
    10. ' (' → logprob: -12.879063606262207

Token 77: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008715149946510792
    2. ''' → logprob: -5.0087151527404785
    3. ''in' → logprob: -6.5087151527404785
    4. '(' → logprob: -8.63371467590332
    5. '32' → logprob: -9.88371467590332
    6. ''a' → logprob: -10.00871467590332
    7. ''t' → logprob: -10.38371467590332
    8. ''s' → logprob: -10.38371467590332
    9. '"' → logprob: -11.13371467590332
    10. ''i' → logprob: -11.38371467590332

Token 78: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.057132210582494736
    2. ''' → logprob: -3.1821322441101074
    3. 'inf' → logprob: -4.432132244110107
    4. '"' → logprob: -7.182132244110107
    5. ''ins' → logprob: -7.557132244110107
    6. ''i' → logprob: -8.80713176727295
    7. ''ex' → logprob: -9.30713176727295
    8. ''information' → logprob: -9.68213176727295
    9. ''on' → logprob: -10.05713176727295
    10. ''inc' → logprob: -10.18213176727295

Token 79: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '')' → logprob: -11.375012397766113
    3. ')
' → logprob: -15.000012397766113
    4. ' )' → logprob: -17.250011444091797
    5. '")' → logprob: -17.375011444091797
    6. '()' → logprob: -17.500011444091797
    7. ')

' → logprob: -18.000011444091797
    8. '),' → logprob: -18.125011444091797
    9. '))' → logprob: -18.250011444091797
    10. '<|end|>' → logprob: -18.875011444091797

Token 80: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07345452904701233
    2. 'def' → logprob: -3.8234546184539795
    3. '

' → logprob: -3.8234546184539795
    4. '\n' → logprob: -4.9484543800354
    5. '' → logprob: -5.0734543800354
    6. 'n' → logprob: -5.0734543800354
    7. '#' → logprob: -6.3234543800354
    8. '\' → logprob: -6.3234543800354
    9. '
' → logprob: -6.3234543800354
    10. 'd' → logprob: -6.8234543800354

Token 81: ' I' (ID: 357)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03755868226289749
    2. ' dfs' → logprob: -3.4125587940216064
    3. ' solve' → logprob: -6.037558555603027
    4. ' s' → logprob: -8.037558555603027
    5. ' dp' → logprob: -8.037558555603027
    6. ' bfs' → logprob: -8.537558555603027
    7. ' ' → logprob: -8.662558555603027
    8. '_' → logprob: -8.912558555603027
    9. ' _' → logprob: -10.287558555603027
    10. ' a' → logprob: -10.537558555603027

Token 82: '():' (ID: 9442)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001878543058410287
    2. 'nt' → logprob: -6.75187873840332
    3. 'nit' → logprob: -8.37687873840332
    4. 'np' → logprob: -8.75187873840332
    5. '():' → logprob: -9.00187873840332
    6. 'N' → logprob: -9.25187873840332
    7. '(n' → logprob: -10.25187873840332
    8. '()' → logprob: -11.12687873840332
    9. '_n' → logprob: -11.25187873840332
    10. 'ndef' → logprob: -12.00187873840332

Token 83: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.008404641412198544
    2. ' int' → logprob: -5.258404731750488
    3. ' ' → logprob: -6.383404731750488
    4. 'return' → logprob: -6.758404731750488
    5. 'int' → logprob: -9.383404731750488
    6. '    ' → logprob: -9.383404731750488
    7. '   ' → logprob: -9.508404731750488
    8. ' map' → logprob: -10.008404731750488
    9. ' input' → logprob: -12.008404731750488
    10. ' ' → logprob: -12.258404731750488

Token 84: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20158211886882782
    2. ' int' → logprob: -1.7015820741653442
    3. ' map' → logprob: -9.576581954956055
    4. 'map' → logprob: -9.951581954956055
    5. 'input' → logprob: -10.701581954956055
    6. ' ' → logprob: -11.701581954956055
    7. ' input' → logprob: -12.201581954956055
    8. ' sys' → logprob: -12.326581954956055
    9. '(int' → logprob: -12.326581954956055
    10. 'sys' → logprob: -13.326581954956055

Token 85: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29523250460624695
    2. '(input' → logprob: -1.5452325344085693
    3. '()' → logprob: -3.2952325344085693
    4. '(sys' → logprob: -5.29523229598999
    5. 'input' → logprob: -8.545232772827148
    6. '(
' → logprob: -10.420232772827148
    7. '('' → logprob: -11.670232772827148
    8. '().' → logprob: -11.795232772827148
    9. '(stdin' → logprob: -11.795232772827148
    10. '((' → logprob: -12.045232772827148

Token 86: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.2948405128554441e-05
    2. '.readline' → logprob: -11.50001335144043
    3. '.' → logprob: -13.00001335144043
    4. '.argv' → logprob: -15.25001335144043
    5. '.stdout' → logprob: -16.25001335144043
    6. 'stdin' → logprob: -16.75001335144043
    7. '.std' → logprob: -17.12501335144043
    8. '(stdin' → logprob: -17.50001335144043
    9. ' stdin' → logprob: -18.50001335144043
    10. '.input' → logprob: -19.50001335144043

Token 87: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014180023572407663
    2. '.' → logprob: -9.250142097473145
    3. '.read' → logprob: -10.000142097473145
    4. '.buffer' → logprob: -16.500141143798828
    5. ' .' → logprob: -16.875141143798828
    6. '.Read' → logprob: -17.625141143798828
    7. '.)' → logprob: -17.750141143798828
    8. '.stdin' → logprob: -17.750141143798828
    9. ' readline' → logprob: -17.750141143798828
    10. '.readlines' → logprob: -18.000141143798828

Token 88: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38725051283836365
    2. '().' → logprob: -1.137250542640686
    3. '()' → logprob: -7.8872504234313965
    4. ' ())' → logprob: -12.762250900268555
    5. '();)' → logprob: -15.137250900268555
    6. '(' → logprob: -15.262250900268555
    7. ')' → logprob: -16.012250900268555
    8. '()\' → logprob: -16.387250900268555
    9. '()]' → logprob: -16.637250900268555
    10. '.readline' → logprob: -16.762250900268555

Token 89: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009198847226798534
    2. '\' → logprob: -5.1341986656188965
    3. '
' → logprob: -6.5091986656188965
    4. '\n' → logprob: -7.1341986656188965
    5. '<|end|>' → logprob: -7.7591986656188965
    6. ' def' → logprob: -8.884199142456055
    7. ' 
' → logprob: -9.384199142456055
    8. '  
' → logprob: -9.759199142456055
    9. 'ndef' → logprob: -10.009199142456055
    10. '' → logprob: -10.384199142456055

Token 90: ' LI' (ID: 14875)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07925822585821152
    2. 'L' → logprob: -3.4542582035064697
    3. 'A' → logprob: -3.9542582035064697
    4. '()' → logprob: -5.204258441925049
    5. ' S' → logprob: -5.454258441925049
    6. 'input' → logprob: -5.829258441925049
    7. 'M' → logprob: -6.204258441925049
    8. 'J' → logprob: -6.829258441925049
    9. 'LS' → logprob: -6.954258441925049
    10. 's' → logprob: -6.954258441925049

Token 91: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022072356659919024
    2. '()' → logprob: -6.127207279205322
    3. ' ():' → logprob: -12.252206802368164
    4. '()]' → logprob: -12.377206802368164
    5. '():
' → logprob: -12.752206802368164
    6. '()>' → logprob: -13.377206802368164
    7. ' ()' → logprob: -13.627206802368164
    8. '[]' → logprob: -13.752206802368164
    9. 'list' → logprob: -13.877206802368164
    10. '):' → logprob: -14.377206802368164

Token 92: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2014811635017395
    2. 'list' → logprob: -1.7014811038970947
    3. ' map' → logprob: -10.076480865478516
    4. 'map' → logprob: -10.826480865478516
    5. 'return' → logprob: -13.451480865478516
    6. ' return' → logprob: -13.576480865478516
    7. '[list' → logprob: -14.076480865478516
    8. '=list' → logprob: -14.451480865478516
    9. '(list' → logprob: -14.951480865478516
    10. ' [' → logprob: -15.076480865478516

Token 93: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07892702519893646
    2. ' list' → logprob: -2.5789270401000977
    3. 'map' → logprob: -10.953927040100098
    4. '[list' → logprob: -10.953927040100098
    5. ' map' → logprob: -14.203927040100098
    6. '[' → logprob: -14.203927040100098
    7. '	list' → logprob: -14.703927040100098
    8. '(list' → logprob: -15.828927040100098
    9. ' [' → logprob: -16.20392608642578
    10. '=list' → logprob: -16.57892608642578

Token 94: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001506409258581698
    2. '(' → logprob: -6.501506328582764
    3. 'map' → logprob: -12.751506805419922
    4. '(int' → logprob: -15.001506805419922
    5. ' map' → logprob: -15.126506805419922
    6. '<|end|>' → logprob: -15.626506805419922
    7. '	map' → logprob: -15.876506805419922
    8. '(
' → logprob: -16.626506805419922
    9. ' (' → logprob: -17.501506805419922
    10. '()' → logprob: -17.626506805419922

Token 95: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008310707635246217
    2. 'int' → logprob: -7.375831127166748
    3. '(' → logprob: -8.87583065032959
    4. '[int' → logprob: -10.75083065032959
    5. '<int' → logprob: -11.00083065032959
    6. '<|end|>' → logprob: -11.62583065032959
    7. ',int' → logprob: -12.00083065032959
    8. ']int' → logprob: -12.50083065032959
    9. '=int' → logprob: -12.75083065032959
    10. '(str' → logprob: -13.75083065032959

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5872700810432434
    2. '(sys' → logprob: -0.8372700810432434
    3. 'sys' → logprob: -4.837270259857178
    4. ' ,' → logprob: -6.337270259857178
    5. '=sys' → logprob: -7.212270259857178
    6. ' sys' → logprob: -7.587270259857178
    7. '	sys' → logprob: -8.46226978302002
    8. '(' → logprob: -10.08726978302002
    9. ' (' → logprob: -10.58726978302002
    10. ',(' → logprob: -11.71226978302002

Token 97: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0011745095252990723
    2. ' sys' → logprob: -6.751174449920654
    3. '(sys' → logprob: -12.626174926757812
    4. '=sys' → logprob: -14.626174926757812
    5. '	sys' → logprob: -15.126174926757812
    6. 'input' → logprob: -15.126174926757812
    7. 'str' → logprob: -17.876174926757812
    8. ')' → logprob: -17.876174926757812
    9. '/sys' → logprob: -18.251174926757812
    10. '```' → logprob: -19.126174926757812

Token 98: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.253090865968261e-06
    2. '.stdout' → logprob: -12.000009536743164
    3. 'stdin' → logprob: -13.500009536743164
    4. '.' → logprob: -13.625009536743164
    5. '.std' → logprob: -15.125009536743164
    6. '.stderr' → logprob: -16.500009536743164
    7. '.readline' → logprob: -16.750009536743164
    8. '.st' → logprob: -16.875009536743164
    9. '.argv' → logprob: -17.000009536743164
    10. ' stdin' → logprob: -17.625009536743164

Token 99: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.127333340875339e-06
    2. 'stdin' → logprob: -13.500003814697266
    3. 'read' → logprob: -13.625003814697266
    4. '.stdin' → logprob: -14.500003814697266
    5. ' readline' → logprob: -15.000003814697266
    6. '.readlines' → logprob: -15.250003814697266
    7. '.' → logprob: -15.750003814697266
    8. 'buffer' → logprob: -16.250003814697266
    9. '.read' → logprob: -16.375003814697266
    10. 'reader' → logprob: -17.875003814697266

Token 100: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.749814019713085e-06
    2. '.readline' → logprob: -12.625006675720215
    3. '()' → logprob: -13.500006675720215
    4. ' ().' → logprob: -13.500006675720215
    5. '.' → logprob: -15.000006675720215
    6. ')' → logprob: -15.750006675720215
    7. '(' → logprob: -16.25000762939453
    8. ' .' → logprob: -17.37500762939453
    9. '().__' → logprob: -18.75000762939453
    10. '))' → logprob: -19.00000762939453

Token 101: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.22421568632125854
    2. 'rstrip' → logprob: -1.9742157459259033
    3. 'split' → logprob: -3.4742157459259033
    4. 'read' → logprob: -3.4742157459259033
    5. ' strip' → logprob: -11.724215507507324
    6. 'rs' → logprob: -13.099215507507324
    7. ' readline' → logprob: -13.474215507507324
    8. ')' → logprob: -13.474215507507324
    9. '.readline' → logprob: -14.724215507507324
    10. ' split' → logprob: -15.224215507507324

Token 102: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08751083165407181
    2. '))' → logprob: -2.587510824203491
    3. '()' → logprob: -4.83751106262207
    4. '())' → logprob: -8.08751106262207
    5. '()))
' → logprob: -8.08751106262207
    6. '(' → logprob: -11.21251106262207
    7. ')' → logprob: -11.71251106262207
    8. '()))

' → logprob: -12.08751106262207
    9. '())))' → logprob: -12.58751106262207
    10. '()));' → logprob: -12.58751106262207

Token 103: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033009357284754515
    2. 'd' → logprob: -6.12830114364624
    3. 'n' → logprob: -6.87830114364624
    4. '\' → logprob: -10.378300666809082
    5. 'for' → logprob: -11.628300666809082
    6. '
' → logprob: -12.003300666809082
    7. '#' → logprob: -12.128300666809082
    8. 'class' → logprob: -12.253300666809082
    9. 't' → logprob: -12.628300666809082
    10. 's' → logprob: -12.753300666809082

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02390449494123459
    2. '=' → logprob: -3.77390456199646
    3. ' ' → logprob: -7.773904323577881
    4. ',' → logprob: -8.523904800415039
    5. '=int' → logprob: -11.773904800415039
    6. ' ,' → logprob: -12.023904800415039
    7. '<|end|>' → logprob: -12.273904800415039
    8. '.' → logprob: -12.398904800415039
    9. ' =
' → logprob: -12.523904800415039
    10. ')' → logprob: -12.898904800415039

Token 105: ' I' (ID: 357)
  Prédit: ' I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.03821671009063721
    2. 'I' → logprob: -3.2882165908813477
    3. ' int' → logprob: -9.163216590881348
    4. ' ' → logprob: -10.038216590881348
    5. 'int' → logprob: -11.288216590881348
    6. ' LI' → logprob: -11.663216590881348
    7. 'LI' → logprob: -12.163216590881348
    8. ' ' → logprob: -15.413216590881348
    9. '	I' → logprob: -16.788217544555664
    10. '  ' → logprob: -16.913217544555664

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002216869033873081
    2. '(' → logprob: -6.127216815948486
    3. '()
' → logprob: -10.502217292785645
    4. '()

' → logprob: -13.752217292785645
    5. ' ()' → logprob: -13.877217292785645
    6. ')' → logprob: -14.127217292785645
    7. '())' → logprob: -15.127217292785645
    8. '(
' → logprob: -15.502217292785645
    9. '()>' → logprob: -15.752217292785645
    10. '(

' → logprob: -16.002216339111328

Token 107: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025043020024895668
    2. 'A' → logprob: -4.15004301071167
    3. 'arr' → logprob: -5.40004301071167
    4. 'lst' → logprob: -5.90004301071167
    5. 'dp' → logprob: -7.90004301071167
    6. 'l' → logprob: -8.400043487548828
    7. 'd' → logprob: -8.525043487548828
    8. 's' → logprob: -8.525043487548828
    9. 'data' → logprob: -8.525043487548828
    10. 'L' → logprob: -9.150043487548828

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054990947246551514
    2. '=' → logprob: -2.9299910068511963
    3. '[' → logprob: -10.179990768432617
    4. 's' → logprob: -10.679990768432617
    5. ' ' → logprob: -11.554990768432617
    6. '=[]' → logprob: -11.804990768432617
    7. '_' → logprob: -11.929990768432617
    8. ',' → logprob: -12.054990768432617
    9. '[:]' → logprob: -12.554990768432617
    10. ' =[' → logprob: -12.929990768432617

Token 109: ' LI' (ID: 14875)
  Prédit: ' LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LI' → logprob: -0.026388194411993027
    2. 'LI' → logprob: -3.651388168334961
    3. ' ' → logprob: -10.276388168334961
    4. ' L' → logprob: -10.276388168334961
    5. ' ' → logprob: -12.526388168334961
    6. ' []' → logprob: -12.901388168334961
    7. 'I' → logprob: -12.901388168334961
    8. ' [' → logprob: -13.026388168334961
    9. '[]' → logprob: -13.026388168334961
    10. 'L' → logprob: -13.151388168334961

Token 110: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6050065159797668
    2. '<|end|>' → logprob: -1.230006456375122
    3. '[' → logprob: -2.605006456375122
    4. 'a' → logprob: -3.355006456375122
    5. '\n' → logprob: -4.730006694793701
    6. '#' → logprob: -4.855006694793701
    7. '.' → logprob: -5.355006694793701
    8. 'b' → logprob: -5.605006694793701
    9. '<|end|>' → logprob: -5.980006694793701
    10. ')' → logprob: -5.980006694793701

Token 111: 'b' (ID: 65)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3494652509689331
    2. 'a' → logprob: -1.724465250968933
    3. 'c' → logprob: -3.2244653701782227
    4. 'd' → logprob: -3.8494653701782227
    5. 's' → logprob: -4.224465370178223
    6. 'count' → logprob: -4.599465370178223
    7. 'cnt' → logprob: -5.099465370178223
    8. 'b' → logprob: -5.474465370178223
    9. 'counts' → logprob: -5.849465370178223
    10. 'ans' → logprob: -5.974465370178223

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00977285485714674
    2. '=' → logprob: -4.634772777557373
    3. '=[]' → logprob: -12.634773254394531
    4. ',' → logprob: -13.009773254394531
    5. '.' → logprob: -13.259773254394531
    6. '[:]' → logprob: -13.259773254394531
    7. '=a' → logprob: -13.384773254394531
    8. ' =[' → logprob: -13.384773254394531
    9. ' ' → logprob: -13.509773254394531
    10. '[' → logprob: -14.009773254394531

Token 113: ' LI' (ID: 14875)
  Prédit: ' LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LI' → logprob: -0.1689261943101883
    2. 'LI' → logprob: -1.9189262390136719
    3. '[]' → logprob: -5.668926239013672
    4. ' []' → logprob: -6.043926239013672
    5. ' [' → logprob: -7.043926239013672
    6. '[' → logprob: -7.293926239013672
    7. 'a' → logprob: -7.543926239013672
    8. ' a' → logprob: -8.293926239013672
    9. '[a' → logprob: -9.168926239013672
    10. ' sorted' → logprob: -9.293926239013672

Token 114: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013405199570115656
    2. '(' → logprob: -9.125134468078613
    3. '()]' → logprob: -12.000134468078613
    4. '()
' → logprob: -12.500134468078613
    5. '().' → logprob: -12.875134468078613
    6. '()[' → logprob: -13.000134468078613
    7. ' ()' → logprob: -13.250134468078613
    8. '();' → logprob: -13.375134468078613
    9. '())' → logprob: -13.375134468078613
    10. '()

' → logprob: -13.625134468078613

Token 115: 'h' (ID: 71)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4956863522529602
    2. 'c' → logprob: -0.9956863522529602
    3. 'd' → logprob: -5.1206865310668945
    4. 'res' → logprob: -5.9956865310668945
    5. 'result' → logprob: -6.1206865310668945
    6. '
' → logprob: -6.2456865310668945
    7. 'ans' → logprob: -6.3706865310668945
    8. 'a' → logprob: -6.6206865310668945
    9. 's' → logprob: -6.8706865310668945
    10. 'cnt' → logprob: -7.3706865310668945

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46016374230384827
    2. '=' → logprob: -1.0851637125015259
    3. '=[]' → logprob: -3.8351638317108154
    4. '=[' → logprob: -5.210163593292236
    5. 'ash' → logprob: -7.460163593292236
    6. 'a' → logprob: -7.710163593292236
    7. ',' → logprob: -7.710163593292236
    8. 's' → logprob: -8.210164070129395
    9. '={}' → logprob: -8.460164070129395
    10. '   ' → logprob: -8.585164070129395

Token 117: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5282306671142578
    2. '[' → logprob: -2.028230667114258
    3. 'default' → logprob: -2.278230667114258
    4. 'a' → logprob: -3.278230667114258
    5. '0' → logprob: -3.403230667114258
    6. '[]' → logprob: -3.778230667114258
    7. ' defaultdict' → logprob: -3.778230667114258
    8. ' [' → logprob: -4.153230667114258
    9. '[a' → logprob: -4.778230667114258
    10. ' {}' → logprob: -4.903230667114258

Token 118: 'V' (ID: 53)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021045419271104038
    2. ')' → logprob: -9.000210762023926
    3. ' for' → logprob: -10.000210762023926
    4. '<|end|>' → logprob: -11.000210762023926
    5. '(' → logprob: -12.250210762023926
    6. ']' → logprob: -12.625210762023926
    7. '[]' → logprob: -12.625210762023926
    8. '[' → logprob: -12.750210762023926
    9. '0' → logprob: -12.875210762023926
    10. 'he' → logprob: -13.000210762023926

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9329389929771423
    2. ' =' → logprob: -1.432939052581787
    3. 'al' → logprob: -1.932939052581787
    4. 'is' → logprob: -2.557939052581787
    5. 'alue' → logprob: -3.432939052581787
    6. 'alid' → logprob: -3.932939052581787
    7. 'for' → logprob: -4.057939052581787
    8. 'isted' → logprob: -4.057939052581787
    9. '=[]' → logprob: -4.057939052581787
    10. 'a' → logprob: -4.807939052581787

Token 120: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.026000328361988068
    2. ' []' → logprob: -4.651000499725342
    3. '[' → logprob: -5.026000499725342
    4. 'set' → logprob: -5.901000499725342
    5. '{}' → logprob: -6.026000499725342
    6. 'deque' → logprob: -6.151000499725342
    7. 'default' → logprob: -7.526000499725342
    8. '[n' → logprob: -7.901000499725342
    9. ' defaultdict' → logprob: -7.901000499725342
    10. '0' → logprob: -8.026000022888184

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07171158492565155
    2. 'False' → logprob: -2.946711540222168
    3. '[]' → logprob: -5.196711540222168
    4. '[' → logprob: -5.196711540222168
    5. ']' → logprob: -6.321711540222168
    6. 'inf' → logprob: -6.696711540222168
    7. ' [' → logprob: -6.946711540222168
    8. '(' → logprob: -8.071711540222168
    9. ' False' → logprob: -8.071711540222168
    10. '-' → logprob: -8.446711540222168

Token 122: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10623564571142197
    2. ']*' → logprob: -2.4812357425689697
    3. ']*(' → logprob: -4.356235504150391
    4. ' for' → logprob: -5.856235504150391
    5. 'for' → logprob: -6.606235504150391
    6. ' ]' → logprob: -9.60623550415039
    7. ']+' → logprob: -10.85623550415039
    8. ',' → logprob: -11.23123550415039
    9. ')' → logprob: -13.60623550415039
    10. ')]' → logprob: -13.73123550415039

Token 123: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31882891058921814
    2. '(n' → logprob: -1.4438289403915405
    3. '(' → logprob: -3.318828821182251
    4. '100' → logprob: -8.568828582763672
    5. '10' → logprob: -9.318828582763672
    6. ' n' → logprob: -9.443828582763672
    7. ' (' → logprob: -9.568828582763672
    8. '3' → logprob: -10.568828582763672
    9. '300' → logprob: -10.568828582763672
    10. '20' → logprob: -10.693828582763672

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6503393054008484
    2. '<|end|>' → logprob: -0.9003393054008484
    3. ' ' → logprob: -3.525339365005493
    4. 'for' → logprob: -4.150339126586914
    5. ' 
' → logprob: -4.275339126586914
    6. ' for' → logprob: -4.900339126586914
    7. '\n' → logprob: -6.900339126586914
    8. '<|end|>' → logprob: -7.150339126586914
    9. '' → logprob: -7.400339126586914
    10. 'n' → logprob: -7.650339126586914

Token 125: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001872593886218965
    2. ' for' → logprob: -6.876872539520264
    3. ')' → logprob: -7.501872539520264
    4. 'def' → logprob: -9.626873016357422
    5. '<|end|>' → logprob: -10.001873016357422
    6. 'd' → logprob: -10.501873016357422
    7. 'f' → logprob: -11.001873016357422
    8. 'he' → logprob: -11.001873016357422
    9. '0' → logprob: -11.126873016357422
    10. '[' → logprob: -11.251873016357422

Token 126: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0007232757634483278
    2. ' _' → logprob: -8.000722885131836
    3. 'i' → logprob: -8.125722885131836
    4. '_' → logprob: -10.000722885131836
    5. ' ' → logprob: -10.125722885131836
    6. ' ' → logprob: -13.250722885131836
    7. '	i' → logprob: -13.250722885131836
    8. '_i' → logprob: -13.750722885131836
    9. ' x' → logprob: -14.625722885131836
    10. ' ‌' → logprob: -14.750722885131836

Token 127: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016297345981001854
    2. 'in' → logprob: -4.141297340393066
    3. ' ' → logprob: -8.391297340393066
    4. ',' → logprob: -10.766297340393066
    5. 'n' → logprob: -12.141297340393066
    6. 'range' → logprob: -12.266297340393066
    7. '	in' → logprob: -13.766297340393066
    8. 's' → logprob: -14.641297340393066
    9. ' ,' → logprob: -14.766297340393066
    10. ' range' → logprob: -14.891297340393066

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01539481058716774
    2. 'in' → logprob: -4.265394687652588
    3. 'enumer' → logprob: -7.015394687652588
    4. 'n' → logprob: -8.640395164489746
    5. ' enumerate' → logprob: -9.015395164489746
    6. ',' → logprob: -11.390395164489746
    7. 'en' → logprob: -11.765395164489746
    8. 's' → logprob: -11.890395164489746
    9. '```' → logprob: -13.265395164489746
    10. 'enum' → logprob: -14.265395164489746

Token 129: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.02324780821800232
    2. ' enumerate' → logprob: -3.773247718811035
    3. 'en' → logprob: -13.773247718811035
    4. '(en' → logprob: -13.898247718811035
    5. 'enum' → logprob: -15.023247718811035
    6. '```' → logprob: -17.64824867248535
    7. 'Enumer' → logprob: -17.77324867248535
    8. 'range' → logprob: -18.27324867248535
    9. '.enumer' → logprob: -18.39824867248535
    10. 'enu' → logprob: -18.64824867248535

Token 130: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011439072113716975
    2. '(b' → logprob: -9.375114440917969
    3. '(zip' → logprob: -11.250114440917969
    4. '(range' → logprob: -12.125114440917969
    5. '((' → logprob: -12.875114440917969
    6. '(en' → logprob: -13.125114440917969
    7. '(' → logprob: -13.250114440917969
    8. 'a' → logprob: -13.375114440917969
    9. ' (' → logprob: -13.500114440917969
    10. '(s' → logprob: -14.625114440917969

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012535012501757592
    2. '):
' → logprob: -9.75012493133545
    3. ' ):' → logprob: -10.12512493133545
    4. ':' → logprob: -11.62512493133545
    5. ')' → logprob: -11.75012493133545
    6. '[:' → logprob: -13.25012493133545
    7. ']):' → logprob: -13.50012493133545
    8. ')):' → logprob: -13.50012493133545
    9. '():' → logprob: -13.62512493133545
    10. ']:' → logprob: -13.87512493133545

Token 132: '   ' (ID: 271)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.23105138540267944
    2. ' if' → logprob: -2.231051445007324
    3. '   ' → logprob: -2.356051445007324
    4. 'he' → logprob: -5.606051445007324
    5. 'if' → logprob: -8.606051445007324
    6. ' h' → logprob: -9.481051445007324
    7. ' V' → logprob: -10.106051445007324
    8. '    ' → logprob: -11.293551445007324
    9. ' ' → logprob: -11.418551445007324
    10. '   ' → logprob: -11.481051445007324

Token 133: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.25652074813842773
    2. ' he' → logprob: -1.6315207481384277
    3. ' if' → logprob: -4.506520748138428
    4. 'if' → logprob: -4.506520748138428
    5. '   ' → logprob: -4.881520748138428
    6. ' V' → logprob: -7.756520748138428
    7. 'V' → logprob: -8.006521224975586
    8. 'h' → logprob: -9.444021224975586
    9. 'v' → logprob: -10.694021224975586
    10. ' ' → logprob: -11.194021224975586

Token 134: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.320199877838604e-07
    2. 'ap' → logprob: -15.5
    3. ' app' → logprob: -16.875
    4. 'a' → logprob: -16.875
    5. 'append' → logprob: -17.5
    6. '```' → logprob: -19.875
    7. 'APP' → logprob: -20.25
    8. 'pp' → logprob: -20.5
    9. 'appen' → logprob: -20.75
    10. 'appe' → logprob: -20.875

Token 135: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.674858301877975e-05
    2. 'push' → logprob: -9.250096321105957
    3. 'app' → logprob: -15.125096321105957
    4. 'op' → logprob: -16.375097274780273
    5. 'u' → logprob: -17.125097274780273
    6. 'p' → logprob: -17.250097274780273
    7. '```' → logprob: -17.250097274780273
    8. 'Push' → logprob: -17.375097274780273
    9. 'pp' → logprob: -17.625097274780273
    10. 'sh' → logprob: -17.750097274780273

Token 136: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.098748053773306e-05
    2. '(' → logprob: -9.75006103515625
    3. '(s' → logprob: -13.12506103515625
    4. '(H' → logprob: -15.87506103515625
    5. '((' → logprob: -16.50006103515625
    6. ' (' → logprob: -16.75006103515625
    7. '(q' → logprob: -17.00006103515625
    8. 'h' → logprob: -17.12506103515625
    9. '(v' → logprob: -17.62506103515625
    10. '(a' → logprob: -17.75006103515625

Token 137: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1953437775373459
    2. '((' → logprob: -2.1953437328338623
    3. ',' → logprob: -3.8203437328338623
    4. '(v' → logprob: -3.9453437328338623
    5. ',(' → logprob: -3.9453437328338623
    6. ')' → logprob: -6.070343971252441
    7. ' (' → logprob: -6.570343971252441
    8. '(-' → logprob: -7.820343971252441
    9. ',v' → logprob: -8.070343971252441
    10. '(i' → logprob: -8.320343971252441

Token 138: '(-' (ID: 8087)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.01531463023275137
    2. '(' → logprob: -5.26531457901001
    3. '(-' → logprob: -5.39031457901001
    4. '(i' → logprob: -5.39031457901001
    5. ' (' → logprob: -7.51531457901001
    6. '((' → logprob: -9.515315055847168
    7. '(a' → logprob: -9.640315055847168
    8. '(V' → logprob: -9.765315055847168
    9. '(b' → logprob: -10.390315055847168
    10. '(abs' → logprob: -10.390315055847168

Token 139: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002306792652234435
    2. 'a' → logprob: -6.502306938171387
    3. '(v' → logprob: -7.627306938171387
    4. 'i' → logprob: -8.877306938171387
    5. '(i' → logprob: -9.377306938171387
    6. '(a' → logprob: -10.377306938171387
    7. ')' → logprob: -11.252306938171387
    8. 'b' → logprob: -11.627306938171387
    9. ' v' → logprob: -11.877306938171387
    10. ')v' → logprob: -12.002306938171387

Token 140: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.02225205861032009
    2. ',' → logprob: -3.897252082824707
    3. ' ,' → logprob: -6.397252082824707
    4. ',(' → logprob: -10.897252082824707
    5. ',n' → logprob: -11.647252082824707
    6. ',index' → logprob: -12.397252082824707
    7. ',v' → logprob: -13.397252082824707
    8. '),' → logprob: -13.897252082824707
    9. ',int' → logprob: -14.022252082824707
    10. '(i' → logprob: -14.147252082824707

Token 141: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010831133840838447
    2. ')' → logprob: -9.50010871887207
    3. ' ))' → logprob: -10.75010871887207
    4. '))
' → logprob: -11.62510871887207
    5. ')))' → logprob: -13.75010871887207
    6. ',' → logprob: -13.87510871887207
    7. '));' → logprob: -15.25010871887207
    8. '))

' → logprob: -15.37510871887207
    9. '),' → logprob: -15.37510871887207
    10. ' ' → logprob: -16.00010871887207

Token 142: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007271283306181431
    2. 'for' → logprob: -5.3822712898254395
    3. ' while' → logprob: -7.1322712898254395
    4. 'res' → logprob: -7.5072712898254395
    5. 'dp' → logprob: -7.5072712898254395
    6. 'ans' → logprob: -8.007270812988281
    7. ')' → logprob: -9.882270812988281
    8. 'max' → logprob: -9.882270812988281
    9. 'd' → logprob: -10.132270812988281
    10. 'def' → logprob: -10.257270812988281

Token 143: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.0009469495271332562
    2. 'while' → logprob: -8.000946998596191
    3. 'for' → logprob: -8.000946998596191
    4. ' V' → logprob: -9.375946998596191
    5. '0' → logprob: -10.125946998596191
    6. 'print' → logprob: -10.375946998596191
    7. 'v' → logprob: -10.375946998596191
    8. 'b' → logprob: -11.000946998596191
    9. ')' → logprob: -11.125946998596191
    10. ' ' → logprob: -11.500946998596191

Token 144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007261329446919262
    2. '[' → logprob: -7.250726222991943
    3. ' [' → logprob: -11.875725746154785
    4. '[v' → logprob: -12.875725746154785
    5. '[I' → logprob: -12.875725746154785
    6. '[n' → logprob: -14.625725746154785
    7. '=' → logprob: -14.875725746154785
    8. '[s' → logprob: -15.000725746154785
    9. '[V' → logprob: -15.000725746154785
    10. '[a' → logprob: -15.375725746154785

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2278023511171341
    2. '=' → logprob: -2.227802276611328
    3. ']=' → logprob: -2.727802276611328
    4. ' =' → logprob: -4.102802276611328
    5. ']+=' → logprob: -4.977802276611328
    6. ')' → logprob: -5.727802276611328
    7. ' ]' → logprob: -6.352802276611328
    8. '+=' → logprob: -6.977802276611328
    9. ')=' → logprob: -7.477802276611328
    10. ' +=' → logprob: -8.602802276611328

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001581162796355784
    2. ' =' → logprob: -6.626581192016602
    3. '+=' → logprob: -8.376581192016602
    4. '=v' → logprob: -11.751581192016602
    5. '=i' → logprob: -12.126581192016602
    6. '=int' → logprob: -12.376581192016602
    7. ' +=' → logprob: -12.501581192016602
    8. '=True' → logprob: -14.751581192016602
    9. '=index' → logprob: -15.001581192016602
    10. '.=' → logprob: -15.501581192016602

Token 147: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2655716836452484
    2. '1' → logprob: -2.6405715942382812
    3. 'a' → logprob: -3.0155715942382812
    4. 'b' → logprob: -3.2655715942382812
    5. '0' → logprob: -3.6405715942382812
    6. ' v' → logprob: -3.7655715942382812
    7. '-' → logprob: -5.265571594238281
    8. 'inf' → logprob: -5.515571594238281
    9. '-v' → logprob: -5.765571594238281
    10. ' a' → logprob: -6.015571594238281

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1294485628604889
    2. '<|end|>' → logprob: -2.504448652267456
    3. 'while' → logprob: -4.379448413848877
    4. ' 
' → logprob: -4.629448413848877
    5. '+' → logprob: -5.629448413848877
    6. ' while' → logprob: -6.004448413848877
    7. 'for' → logprob: -6.254448413848877
    8. '0' → logprob: -6.629448413848877
    9. '  
' → logprob: -6.629448413848877
    10. ')' → logprob: -6.629448413848877

Token 149: 'ans' (ID: 616)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07346539199352264
    2. 'for' → logprob: -3.698465347290039
    3. 'res' → logprob: -4.448465347290039
    4. 'dp' → logprob: -4.698465347290039
    5. 'ans' → logprob: -4.948465347290039
    6. 'q' → logprob: -5.823465347290039
    7. 'visited' → logprob: -5.948465347290039
    8. 'used' → logprob: -5.948465347290039
    9. 'd' → logprob: -6.448465347290039
    10. 'p' → logprob: -6.573465347290039

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490316078066826
    2. '=' → logprob: -2.929903268814087
    3. ' ' → logprob: -11.304903030395508
    4. ',' → logprob: -12.179903030395508
    5. 's' → logprob: -14.554903030395508
    6. '=[]' → logprob: -14.554903030395508
    7. '_' → logprob: -14.804903030395508
    8. ' =
' → logprob: -14.929903030395508
    9. ' +=' → logprob: -15.304903030395508
    10. '=int' → logprob: -15.679903030395508

Token 151: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00866976473480463
    2. '[]' → logprob: -5.008669853210449
    3. ' ' → logprob: -6.758669853210449
    4. '[' → logprob: -7.758669853210449
    5. 'inf' → logprob: -9.00866985321045
    6. ' []' → logprob: -9.50866985321045
    7. '[]
' → logprob: -10.38366985321045
    8. '-' → logprob: -10.63366985321045
    9. '1' → logprob: -10.88366985321045
    10. ' [' → logprob: -11.00866985321045

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013527699746191502
    2. '[]' → logprob: -4.388527870178223
    3. 'inf' → logprob: -8.388527870178223
    4. '[' → logprob: -8.888527870178223
    5. 'max' → logprob: -9.013527870178223
    6. 'sum' → logprob: -9.388527870178223
    7. 'V' → logprob: -9.638527870178223
    8. '-' → logprob: -9.638527870178223
    9. '1' → logprob: -9.888527870178223
    10. 'v' → logprob: -10.388527870178223

Token 153: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.304776132106781
    2. 'for' → logprob: -1.6797761917114258
    3. '
' → logprob: -2.679776191711426
    4. ' while' → logprob: -5.054776191711426
    5. ' for' → logprob: -7.054776191711426
    6. '<|end|>' → logprob: -9.554776191711426
    7. '\n' → logprob: -9.679776191711426
    8. '0' → logprob: -10.054776191711426
    9. 'def' → logprob: -10.054776191711426
    10. ',' → logprob: -10.054776191711426

Token 154: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004797615110874176
    2. 'for' → logprob: -5.379797458648682
    3. ' while' → logprob: -9.00479793548584
    4. 'q' → logprob: -11.00479793548584
    5. '```' → logprob: -11.87979793548584
    6. ')' → logprob: -12.37979793548584
    7. 'While' → logprob: -12.37979793548584
    8. 'def' → logprob: -12.75479793548584
    9. 'dp' → logprob: -12.87979793548584
    10. 'w' → logprob: -13.00479793548584

Token 155: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04306062310934067
    2. ' h' → logprob: -3.168060541152954
    3. 'len' → logprob: -10.418060302734375
    4. ' len' → logprob: -11.293060302734375
    5. 'True' → logprob: -11.418060302734375
    6. '(h' → logprob: -12.918060302734375
    7. ' True' → logprob: -13.293060302734375
    8. '	h' → logprob: -13.918060302734375
    9. 'n' → logprob: -14.293060302734375
    10. 'V' → logprob: -14.918060302734375

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012833021173719317
    2. '):' → logprob: -9.875128746032715
    3. ' and' → logprob: -10.000128746032715
    4. 'and' → logprob: -11.125128746032715
    5. '>:' → logprob: -11.250128746032715
    6. ':
' → logprob: -13.375128746032715
    7. ':**' → logprob: -14.250128746032715
    8. ':not' → logprob: -15.125128746032715
    9. '!=' → logprob: -15.625128746032715
    10. '}:' → logprob: -16.0001277923584

Token 157: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.37819230556488037
    2. ' v' → logprob: -1.5031923055648804
    3. ',' → logprob: -3.25319242477417
    4. ',v' → logprob: -3.87819242477417
    5. ' ,' → logprob: -4.50319242477417
    6. '   ' → logprob: -5.00319242477417
    7. ',-' → logprob: -5.37819242477417
    8. ' -' → logprob: -5.50319242477417
    9. '-v' → logprob: -5.62819242477417
    10. '-' → logprob: -7.12819242477417

Token 158: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.14744693040847778
    2. ' v' → logprob: -2.022446870803833
    3. '-v' → logprob: -6.272447109222412
    4. 'p' → logprob: -8.022446632385254
    5. 'x' → logprob: -8.022446632385254
    6. ' -' → logprob: -8.147446632385254
    7. 'pv' → logprob: -8.272446632385254
    8. 'V' → logprob: -8.772446632385254
    9. 'value' → logprob: -8.897446632385254
    10. '   ' → logprob: -8.897446632385254

Token 159: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5808229446411133
    2. ',i' → logprob: -0.8308229446411133
    3. ',u' → logprob: -6.830822944641113
    4. 'idx' → logprob: -7.080822944641113
    5. ' ,' → logprob: -7.455822944641113
    6. 'i' → logprob: -7.705822944641113
    7. ',index' → logprob: -7.955822944641113
    8. ',-' → logprob: -8.455822944641113
    9. ',c' → logprob: -8.455822944641113
    10. ' =' → logprob: -8.705822944641113

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. '   ' → logprob: -15.686968803405762
    4. ')=' → logprob: -15.936968803405762
    5. ')' → logprob: -16.061967849731445
    6. 'he' → logprob: -16.186967849731445
    7. ' ' → logprob: -16.686967849731445
    8. ' he' → logprob: -16.686967849731445
    9. '=

' → logprob: -16.811967849731445
    10. ',' → logprob: -17.061967849731445

Token 161: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.033647309988737106
    2. ' he' → logprob: -3.408647298812866
    3. '-he' → logprob: -14.283647537231445
    4. 'h' → logprob: -15.033647537231445
    5. '   ' → logprob: -15.533647537231445
    6. 'heap' → logprob: -15.783647537231445
    7. '_he' → logprob: -16.158647537231445
    8. '.he' → logprob: -16.783647537231445
    9. ' ' → logprob: -17.408647537231445
    10. ' -' → logprob: -17.533647537231445

Token 162: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0001818489981815219
    2. 'pp' → logprob: -8.625182151794434
    3. 'ap' → logprob: -13.625182151794434
    4. 'pop' → logprob: -14.250182151794434
    5. 'p' → logprob: -16.625181198120117
    6. 'a' → logprob: -16.625181198120117
    7. 'op' → logprob: -16.875181198120117
    8. 'll' → logprob: -17.250181198120117
    9. ' app' → logprob: -17.375181198120117
    10. 'h' → logprob: -17.500181198120117

Token 163: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -4.36574100604048e-06
    2. 'o' → logprob: -13.000004768371582
    3. '(op' → logprob: -15.000004768371582
    4. '

' → logprob: -15.250004768371582
    5. 'оп' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.500004768371582
    7. '
' → logprob: -15.750004768371582
    8. '```' → logprob: -16.000003814697266
    9. 'pop' → logprob: -16.125003814697266
    10. ' op' → logprob: -16.125003814697266

Token 164: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. 'h' → logprob: -19.25
    4. ' (' → logprob: -20.125
    5. ',h' → logprob: -20.875
    6. '(H' → logprob: -21.5
    7. '(s' → logprob: -22.125
    8. '(heap' → logprob: -22.5
    9. '(
' → logprob: -22.75
    10. ' h' → logprob: -22.75

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.500015258789062
    4. ')`' → logprob: -14.750015258789062
    5. '))' → logprob: -15.875015258789062
    6. ')

' → logprob: -17.000015258789062
    7. ')
' → logprob: -17.250015258789062
    8. '()' → logprob: -17.375015258789062
    9. '`)' → logprob: -17.750015258789062
    10. '())' → logprob: -18.625015258789062

Token 166: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2075182944536209
    2. 'v' → logprob: -1.8325183391571045
    3. ' if' → logprob: -4.457518100738525
    4. '   ' → logprob: -5.207518100738525
    5. 'if' → logprob: -5.832518100738525
    6. ' v' → logprob: -5.832518100738525
    7. '<|end|>' → logprob: -6.707518100738525
    8. ')' → logprob: -6.832518100738525
    9. '    
' → logprob: -7.082518100738525
    10. ' 
' → logprob: -8.082518577575684

Token 167: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0017624057363718748
    2. 'if' → logprob: -7.126762390136719
    3. ' v' → logprob: -7.251762390136719
    4. '-v' → logprob: -9.376762390136719
    5. 'i' → logprob: -9.751762390136719
    6. 'print' → logprob: -10.001762390136719
    7. 'for' → logprob: -11.001762390136719
    8. ' if' → logprob: -11.376762390136719
    9. 'V' → logprob: -11.876762390136719
    10. '   ' → logprob: -12.251762390136719

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.47757811343763e-05
    2. '=-' → logprob: -10.125044822692871
    3. '*=' → logprob: -12.750044822692871
    4. ' =' → logprob: -13.375044822692871
    5. '=
' → logprob: -16.625043869018555
    6. '=

' → logprob: -16.625043869018555
    7. '*' → logprob: -17.250043869018555
    8. '-=' → logprob: -18.250043869018555
    9. '＝' → logprob: -19.000043869018555
    10. '+=' → logprob: -19.000043869018555

Token 169: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4935295283794403
    2. '-v' → logprob: -0.9935295581817627
    3. '-V' → logprob: -4.118529319763184
    4. '-' → logprob: -5.868529319763184
    5. '-value' → logprob: -10.618529319763184
    6. '-int' → logprob: -10.618529319763184
    7. '-val' → logprob: -10.618529319763184
    8. '-ve' → logprob: -11.243529319763184
    9. '-num' → logprob: -11.618529319763184
    10. '-max' → logprob: -11.868529319763184

Token 170: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -18.25
    3. '<|end|>' → logprob: -19.0
    4. '	v' → logprob: -21.625
    5. 'value' → logprob: -21.875
    6. 've' → logprob: -22.5
    7. ')v' → logprob: -22.75
    8. 'int' → logprob: -22.875
    9. 'V' → logprob: -23.125
    10. 'vi' → logprob: -23.625

Token 171: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8403384685516357
    2. ' if' → logprob: -0.9653384685516357
    3. 'if' → logprob: -1.9653384685516357
    4. '   ' → logprob: -3.5903384685516357
    5. ' for' → logprob: -4.465338706970215
    6. 'for' → logprob: -5.715338706970215
    7. '    
' → logprob: -6.715338706970215
    8. '#' → logprob: -7.340338706970215
    9. ' 
' → logprob: -7.465338706970215
    10. ',' → logprob: -7.590338706970215

Token 172: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22726216912269592
    2. '   ' → logprob: -2.227262258529663
    3. ' if' → logprob: -2.477262258529663
    4. 'for' → logprob: -4.852262020111084
    5. ' for' → logprob: -5.852262020111084
    6. '#' → logprob: -8.102262496948242
    7. '<|end|>' → logprob: -9.102262496948242
    8. 'max' → logprob: -9.477262496948242
    9. ',' → logprob: -9.727262496948242
    10. '    
' → logprob: -10.227262496948242

Token 173: ' tmp' (ID: 8919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03278383985161781
    2. 'for' → logprob: -3.5327837467193604
    3. 'ans' → logprob: -7.0327839851379395
    4. '#' → logprob: -7.7827839851379395
    5. 'j' → logprob: -7.7827839851379395
    6. 'while' → logprob: -8.157783508300781
    7. 'idx' → logprob: -8.782783508300781
    8. 'max' → logprob: -9.407783508300781
    9. ' if' → logprob: -9.407783508300781
    10. 'x' → logprob: -9.407783508300781

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02983645536005497
    2. '=' → logprob: -3.529836416244507
    3. '=v' → logprob: -9.904836654663086
    4. ',' → logprob: -11.529836654663086
    5. '=i' → logprob: -12.029836654663086
    6. 'v' → logprob: -12.029836654663086
    7. '=max' → logprob: -12.029836654663086
    8. 'max' → logprob: -13.654836654663086
    9. '=int' → logprob: -13.654836654663086
    10. ' ' → logprob: -14.154836654663086

Token 175: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.7825841903686523
    2. 'v' → logprob: -1.6575841903686523
    3. 'min' → logprob: -1.6575841903686523
    4. '0' → logprob: -3.1575841903686523
    5. 'max' → logprob: -3.1575841903686523
    6. 'inf' → logprob: -3.2825841903686523
    7. 'a' → logprob: -4.032584190368652
    8. 'math' → logprob: -4.532584190368652
    9. 'float' → logprob: -5.907584190368652
    10. ' V' → logprob: -6.282584190368652

Token 176: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5928495486150496e-05
    2. '[:]' → logprob: -11.625016212463379
    3. '[' → logprob: -12.625016212463379
    4. 'i' → logprob: -12.750016212463379
    5. '[n' → logprob: -15.125016212463379
    6. '[:' → logprob: -15.500016212463379
    7. '<|end|>' → logprob: -16.750015258789062
    8. '[I' → logprob: -16.750015258789062
    9. '[s' → logprob: -17.250015258789062
    10. '[a' → logprob: -17.250015258789062

Token 177: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03387239947915077
    2. '(i' → logprob: -3.408872365951538
    3. ' i' → logprob: -8.658872604370117
    4. ' (' → logprob: -10.658872604370117
    5. '_i' → logprob: -11.908872604370117
    6. '[i' → logprob: -12.658872604370117
    7. '{i' → logprob: -12.658872604370117
    8. ')i' → logprob: -12.658872604370117
    9. '   ' → logprob: -13.158872604370117
    10. ')' → logprob: -13.158872604370117

Token 178: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01984279230237007
    2. '+' → logprob: -4.019842624664307
    3. ' -' → logprob: -7.144842624664307
    4. ')' → logprob: -7.769842624664307
    5. '+n' → logprob: -8.644843101501465
    6. ')]' → logprob: -8.894843101501465
    7. ']' → logprob: -9.144843101501465
    8. ' +' → logprob: -10.394843101501465
    9. ']+' → logprob: -12.269843101501465
    10. '1' → logprob: -12.269843101501465

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018852073117159307
    2. 'n' → logprob: -8.875188827514648
    3. ' ' → logprob: -10.375188827514648
    4. '-' → logprob: -11.125188827514648
    5. ' n' → logprob: -13.375188827514648
    6. '0' → logprob: -14.375188827514648
    7. ' -' → logprob: -16.37518882751465
    8. '2' → logprob: -16.50018882751465
    9. ')' → logprob: -16.87518882751465
    10. '   ' → logprob: -17.00018882751465

Token 180: ')' (ID: 8)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.2520357370376587
    2. ')' → logprob: -1.5020357370376587
    3. ' )' → logprob: -9.377036094665527
    4. ')]' → logprob: -11.877036094665527
    5. '%n' → logprob: -12.502036094665527
    6. ')n' → logprob: -12.502036094665527
    7. ']%' → logprob: -13.502036094665527
    8. ')
' → logprob: -13.502036094665527
    9. '%' → logprob: -13.752036094665527
    10. ')])' → logprob: -14.252036094665527

Token 181: ' %' (ID: 1851)
  Prédit: '%n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%n' → logprob: -0.5903865694999695
    2. ')%' → logprob: -1.0903866291046143
    3. ']%' → logprob: -2.5903866291046143
    4. ')' → logprob: -4.340386390686035
    5. ']' → logprob: -4.590386390686035
    6. '%' → logprob: -4.715386390686035
    7. ' %' → logprob: -6.090386390686035
    8. '%i' → logprob: -8.840386390686035
    9. '])' → logprob: -9.840386390686035
    10. ')n' → logprob: -9.965386390686035

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007100477814674377
    2. ' n' → logprob: -7.2507100105285645
    3. '	n' → logprob: -17.250709533691406
    4. '
' → logprob: -18.250709533691406
    5. '   ' → logprob: -18.750709533691406
    6. ')n' → logprob: -19.250709533691406
    7. '```' → logprob: -20.625709533691406
    8. ' ' → logprob: -21.375709533691406
    9. ',n' → logprob: -21.500709533691406
    10. '_n' → logprob: -21.750709533691406

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030383204575628042
    2. ']
' → logprob: -6.12803840637207
    3. ' ]' → logprob: -7.87803840637207
    4. ']+' → logprob: -8.12803840637207
    5. ']-' → logprob: -9.75303840637207
    6. ']

' → logprob: -10.50303840637207
    7. ')]' → logprob: -10.62803840637207
    8. ')' → logprob: -10.75303840637207
    9. '])' → logprob: -10.75303840637207
    10. ']*' → logprob: -11.12803840637207

Token 184: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23667871952056885
    2. ' +' → logprob: -2.4866786003112793
    3. '
' → logprob: -2.9866786003112793
    4. '<|end|>' → logprob: -3.7366786003112793
    5. ' and' → logprob: -4.736678600311279
    6. 'v' → logprob: -4.986678600311279
    7. 'if' → logprob: -5.236678600311279
    8. 'and' → logprob: -5.236678600311279
    9. ' if' → logprob: -5.236678600311279
    10. ' -' → logprob: -5.361678600311279

Token 185: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.025658437982201576
    2. ' V' → logprob: -4.27565860748291
    3. 'v' → logprob: -4.52565860748291
    4. '   ' → logprob: -8.27565860748291
    5. ' v' → logprob: -8.77565860748291
    6. 'a' → logprob: -9.15065860748291
    7. '       ' → logprob: -10.90065860748291
    8. '1' → logprob: -11.65065860748291
    9. ' ' → logprob: -11.77565860748291
    10. '    ' → logprob: -11.77565860748291

Token 186: '[i' (ID: 1768)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.008582189679145813
    2. '[i' → logprob: -4.88358211517334
    3. '((' → logprob: -7.38358211517334
    4. '(i' → logprob: -8.75858211517334
    5. '[((' → logprob: -9.25858211517334
    6. '[' → logprob: -10.25858211517334
    7. '   ' → logprob: -10.63358211517334
    8. 'i' → logprob: -11.25858211517334
    9. ' [(' → logprob: -11.25858211517334
    10. '	' → logprob: -11.88358211517334

Token 187: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002237566513940692
    2. '-' → logprob: -7.627237796783447
    3. ']
' → logprob: -8.252237319946289
    4. ' -' → logprob: -8.377237319946289
    5. ' ]' → logprob: -8.377237319946289
    6. ']+' → logprob: -8.377237319946289
    7. ']-' → logprob: -8.502237319946289
    8. '<|end|>' → logprob: -8.877237319946289
    9. ']>' → logprob: -9.002237319946289
    10. '+' → logprob: -9.252237319946289

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016039233014453202
    2. ' ' → logprob: -8.875160217285156
    3. '2' → logprob: -11.000160217285156
    4. ']' → logprob: -13.125160217285156
    5. '...' → logprob: -15.062660217285156
    6. '```' → logprob: -15.125160217285156
    7. '0' → logprob: -15.187660217285156
    8. '-' → logprob: -15.625160217285156
    9. ')' → logprob: -15.687660217285156
    10. '<|end|>' → logprob: -15.750160217285156

Token 189: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007486884482204914
    2. ']%' → logprob: -5.757486820220947
    3. ')' → logprob: -6.257486820220947
    4. ' ]' → logprob: -6.757486820220947
    5. '])' → logprob: -7.257486820220947
    6. '%n' → logprob: -8.757487297058105
    7. ' %' → logprob: -8.882487297058105
    8. ')%' → logprob: -9.757487297058105
    9. ')]' → logprob: -9.882487297058105
    10. '%' → logprob: -10.882487297058105

Token 190: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4336980879306793
    2. 'if' (adapté à ' if') → logprob: -1.058698058128357
    3. '<|end|>' → logprob: -6.1836981773376465
    4. ')' → logprob: -6.4336981773376465
    5. '
' → logprob: -8.058697700500488
    6. '   ' → logprob: -8.933697700500488
    7. ' ' → logprob: -9.058697700500488
    8. '%' → logprob: -9.183697700500488
    9. 'v' → logprob: -9.308697700500488
    10. 'V' → logprob: -9.308697700500488

Token 192: ' v' (ID: 323)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.9707671403884888
    2. ' v' → logprob: -1.0957671403884888
    3. 'v' → logprob: -1.7207671403884888
    4. 'tmp' → logprob: -2.345767021179199
    5. ' V' → logprob: -4.970767021179199
    6. 'V' → logprob: -5.345767021179199
    7. '(tmp' → logprob: -8.2207670211792
    8. ' ' → logprob: -9.2207670211792
    9. ' ' → logprob: -10.9082670211792
    10. ' (' → logprob: -10.9082670211792

Token 193: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5269712209701538
    2. '>' → logprob: -0.9019712209701538
    3. ' <' → logprob: -6.151971340179443
    4. '<' → logprob: -7.401971340179443
    5. ' >=' → logprob: -7.526971340179443
    6. '>=' → logprob: -8.151970863342285
    7. ' <=' → logprob: -9.526970863342285
    8. '+' → logprob: -9.776970863342285
    9. ' ' → logprob: -10.026970863342285
    10. '<=' → logprob: -11.026970863342285

Token 194: ' a' (ID: 261)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04047923535108566
    2. ' tmp' → logprob: -3.6654791831970215
    3. 'V' → logprob: -5.2904791831970215
    4. 'max' → logprob: -5.5404791831970215
    5. '0' → logprob: -5.7904791831970215
    6. '1' → logprob: -6.7904791831970215
    7. ' ' → logprob: -7.5404791831970215
    8. ' V' → logprob: -8.54047966003418
    9. ' max' → logprob: -9.16547966003418
    10. 'ans' → logprob: -10.54047966003418

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024323153775185347
    2. '[tmp' → logprob: -8.875243186950684
    3. 'i' → logprob: -9.500243186950684
    4. '[' → logprob: -10.875243186950684
    5. '[V' → logprob: -13.375243186950684
    6. '[(' → logprob: -13.375243186950684
    7. ' [' → logprob: -13.625243186950684
    8. '[v' → logprob: -14.000243186950684
    9. '```' → logprob: -14.125243186950684
    10. '[I' → logprob: -14.375243186950684

Token 196: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08163479715585709
    2. ']' → logprob: -2.581634759902954
    3. '[i' → logprob: -6.456634998321533
    4. '[' → logprob: -7.831634998321533
    5. ']==' → logprob: -8.706634521484375
    6. ']+' → logprob: -8.956634521484375
    7. ':' → logprob: -8.956634521484375
    8. ']>' → logprob: -9.456634521484375
    9. '):' → logprob: -9.831634521484375
    10. ']:
' → logprob: -10.081634521484375

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4102964401245117
    2. '   ' → logprob: -1.1602964401245117
    3. ' and' → logprob: -4.660296440124512
    4. ':' → logprob: -5.410296440124512
    5. ' continue' → logprob: -5.535296440124512
    6. ':
' → logprob: -6.785296440124512
    7. 'continue' → logprob: -6.910296440124512
    8. ' if' → logprob: -7.035296440124512
    9. '
' → logprob: -7.910296440124512
    10. 'if' → logprob: -8.410296440124512

Token 198: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.41711723804473877
    2. 'ans' → logprob: -2.042117118835449
    3. '   ' → logprob: -2.292117118835449
    4. ' continue' → logprob: -2.542117118835449
    5. ' ans' → logprob: -4.292117118835449
    6. 'V' → logprob: -4.667117118835449
    7. 'pass' → logprob: -6.292117118835449
    8. 'if' → logprob: -6.292117118835449
    9. ' V' → logprob: -6.667117118835449
    10. '       ' → logprob: -6.792117118835449

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005597410723567009
    2. ' if' → logprob: -5.5055975914001465
    3. 'if' → logprob: -7.5055975914001465
    4. '<|end|>' → logprob: -8.005597114562988
    5. '    
' → logprob: -8.255597114562988
    6. '
' → logprob: -8.755597114562988
    7. ')' → logprob: -8.880597114562988
    8. '  ' → logprob: -11.505597114562988
    9. '    ' → logprob: -11.630597114562988
    10. '       ' → logprob: -11.630597114562988

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08394358307123184
    2. ' if' → logprob: -2.8339436054229736
    3. 'if' → logprob: -4.4589433670043945
    4. ')' → logprob: -5.8339433670043945
    5. '<|end|>' → logprob: -5.8339433670043945
    6. '    
' → logprob: -6.2089433670043945
    7. '
' → logprob: -6.9589433670043945
    8. 'V' → logprob: -8.208943367004395
    9. ' V' → logprob: -8.333943367004395
    10. ' 
' → logprob: -8.583943367004395

Token 201: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3636229634284973
    2. ' if' → logprob: -1.2386229038238525
    3. '   ' → logprob: -4.363623142242432
    4. 'V' → logprob: -7.613623142242432
    5. 'elif' → logprob: -7.613623142242432
    6. 'diff' → logprob: -8.738622665405273
    7. '    
' → logprob: -9.113622665405273
    8. 'v' → logprob: -9.238622665405273
    9. 'ans' → logprob: -9.363622665405273
    10. ' V' → logprob: -9.363622665405273

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6106280088424683
    2. 'um' → logprob: -0.8606280088424683
    3. '=' → logprob: -3.610628128051758
    4. 'et' → logprob: -5.985628128051758
    5. 'core' → logprob: -7.110628128051758
    6. 't' → logprob: -7.110628128051758
    7. 'u' → logprob: -7.985628128051758
    8. 'ub' → logprob: -8.110628128051758
    9. 'ize' → logprob: -8.110628128051758
    10. '=(' → logprob: -8.985628128051758

Token 203: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2959133386611938
    2. 'tmp' → logprob: -1.2959133386611938
    3. 'min' → logprob: -1.5459133386611938
    4. 'max' → logprob: -2.1709132194519043
    5. 'a' → logprob: -3.2959132194519043
    6. 'V' → logprob: -3.7959132194519043
    7. 'set' → logprob: -4.045913219451904
    8. ' min' → logprob: -4.420913219451904
    9. ' tmp' → logprob: -5.045913219451904
    10. ' v' → logprob: -5.045913219451904

Token 204: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6242367625236511
    2. 'tmp' → logprob: -1.374236822128296
    3. 'a' → logprob: -1.999236822128296
    4. 'V' → logprob: -2.874236822128296
    5. 'max' → logprob: -5.374236583709717
    6. ' tmp' → logprob: -5.749236583709717
    7. ' v' → logprob: -5.874236583709717
    8. '(tmp' → logprob: -6.249236583709717
    9. '(v' → logprob: -7.124236583709717
    10. '(a' → logprob: -7.124236583709717

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6638346910476685
    2. '+' → logprob: -1.4138346910476685
    3. '-' → logprob: -1.9138346910476685
    4. ' +' → logprob: -2.413834571838379
    5. '*' → logprob: -6.788834571838379
    6. 'tmp' → logprob: -7.038834571838379
    7. '-s' → logprob: -7.163834571838379
    8. '+s' → logprob: -7.913834571838379
    9. '-v' → logprob: -8.163834571838379
    10. ' *' → logprob: -8.163834571838379

Token 206: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17413097620010376
    2. 'max' → logprob: -2.424130916595459
    3. 'tmp' → logprob: -3.049130916595459
    4. '1' → logprob: -4.049130916595459
    5. '(a' → logprob: -6.549130916595459
    6. ' a' → logprob: -6.674130916595459
    7. 'min' → logprob: -6.799130916595459
    8. ' max' → logprob: -6.799130916595459
    9. '(max' → logprob: -7.674130916595459
    10. ' tmp' → logprob: -8.049131393432617

Token 207: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.5
    3. ')' → logprob: -16.125
    4. '[' → logprob: -17.5
    5. '[I' → logprob: -17.75
    6. ' [' → logprob: -18.0
    7. '[a' → logprob: -18.875
    8. '```' → logprob: -19.375
    9. ')[' → logprob: -19.5
    10. '_i' → logprob: -20.0

Token 208: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02901764214038849
    2. ')//' → logprob: -3.779017686843872
    3. '+' → logprob: -5.779017448425293
    4. ')+' → logprob: -7.154017448425293
    5. ' )' → logprob: -7.279017448425293
    6. '])' → logprob: -7.904017448425293
    7. ' +' → logprob: -8.529017448425293
    8. ')>>' → logprob: -8.779017448425293
    9. ')*' → logprob: -8.904017448425293
    10. ']' → logprob: -9.154017448425293

Token 209: '//' (ID: 393)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8689985275268555
    2. ' +' → logprob: -1.2439985275268555
    3. ' //' → logprob: -1.8689985275268555
    4. '//' → logprob: -2.8689985275268555
    5. '%' → logprob: -3.6189985275268555
    6. ' %' → logprob: -3.7439985275268555
    7. '
' → logprob: -4.4939985275268555
    8. ' -' → logprob: -5.2439985275268555
    9. '-' → logprob: -5.7439985275268555
    10. '*' → logprob: -5.9939985275268555

Token 210: 'tmp' (ID: 11669)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00553398160263896
    2. '3' → logprob: -5.2555341720581055
    3. 'tmp' → logprob: -8.380534172058105
    4. ' ' → logprob: -10.755534172058105
    5. '4' → logprob: -11.130534172058105
    6. '(' → logprob: -11.630534172058105
    7. 'n' → logprob: -12.630534172058105
    8. '5' → logprob: -12.755534172058105
    9. '(tmp' → logprob: -12.880534172058105
    10. '10' → logprob: -13.255534172058105

Token 211: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06569600105285645
    2. '<|end|>' → logprob: -3.0656960010528564
    3. '+' → logprob: -5.065695762634277
    4. ' 
' → logprob: -5.815695762634277
    5. ')' → logprob: -6.065695762634277
    6. '   ' → logprob: -6.690695762634277
    7. '<|end|>' → logprob: -6.690695762634277
    8. ' if' → logprob: -7.065695762634277
    9. '    
' → logprob: -7.815695762634277
    10. ' +' → logprob: -8.065695762634277

Token 212: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1828055381774902
    2. 'V' → logprob: -1.4328055381774902
    3. '   ' → logprob: -1.4328055381774902
    4. ' if' → logprob: -2.1828055381774902
    5. '
' → logprob: -2.6828055381774902
    6. '+' → logprob: -4.55780553817749
    7. '<|end|>' → logprob: -4.68280553817749
    8. ' V' → logprob: -4.80780553817749
    9. ' for' → logprob: -6.30780553817749
    10. 'for' → logprob: -6.55780553817749

Token 213: ' if' (ID: 538)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.29824498295783997
    2. 'if' (adapté à ' if') → logprob: -1.6732449531555176
    3. ' if' → logprob: -3.0482449531555176
    4. ' V' → logprob: -4.423244953155518
    5. 'v' → logprob: -5.173244953155518
    6. 's' → logprob: -5.923244953155518
    7. ' for' → logprob: -7.173244953155518
    8. 'for' → logprob: -7.423244953155518
    9. ' ans' → logprob: -8.173245429992676
    10. '
' → logprob: -8.548245429992676

Token 214: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08895517885684967
    2. 's' → logprob: -2.4639551639556885
    3. ' not' → logprob: -11.71395492553711
    4. '(s' → logprob: -12.58895492553711
    5. ' ' → logprob: -13.83895492553711
    6. 'not' → logprob: -14.21395492553711
    7. 'v' → logprob: -14.58895492553711
    8. ' v' → logprob: -14.71395492553711
    9. ' (' → logprob: -15.08895492553711
    10. ' ' → logprob: -15.46395492553711

Token 215: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47807183861732483
    2. ' >' → logprob: -0.9780718088150024
    3. '>=' → logprob: -6.728071689605713
    4. ':' → logprob: -6.978071689605713
    5. '==' → logprob: -7.228071689605713
    6. ' >=' → logprob: -7.978071689605713
    7. '<=' → logprob: -8.228072166442871
    8. ' <=' → logprob: -8.603072166442871
    9. ' ==' → logprob: -8.728072166442871
    10. '>:' → logprob: -9.728072166442871

Token 216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02975199744105339
    2. ' ' → logprob: -3.529752016067505
    3. '1' → logprob: -14.154751777648926
    4. '   ' → logprob: -15.529751777648926
    5. 's' → logprob: -16.154752731323242
    6. '10' → logprob: -16.717252731323242
    7. '  ' → logprob: -16.717252731323242
    8. '2' → logprob: -16.842252731323242
    9. ' ' → logprob: -16.842252731323242
    10. '5' → logprob: -17.279752731323242

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019300628919154406
    2. ' ' → logprob: -6.251930236816406
    3. '1' → logprob: -14.251930236816406
    4. 's' → logprob: -15.376930236816406
    5. '   ' → logprob: -15.876930236816406
    6. '10' → logprob: -16.751930236816406
    7. '2' → logprob: -16.939430236816406
    8. '9' → logprob: -17.064430236816406
    9. '
' → logprob: -17.376930236816406
    10. '  ' → logprob: -17.376930236816406

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012629959732294083
    2. ':
' → logprob: -4.387629985809326
    3. ' or' → logprob: -9.637629508972168
    4. '   ' → logprob: -10.262629508972168
    5. ':return' → logprob: -12.387629508972168
    6. ' :' → logprob: -12.512629508972168
    7. '       ' → logprob: -12.637629508972168
    8. ' continue' → logprob: -13.012629508972168
    9. 'continue' → logprob: -13.137629508972168
    10. ':
' → logprob: -13.512629508972168

Token 219: '       ' (ID: 309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5733770132064819
    2. '   ' → logprob: -0.9483770132064819
    3. 'continue' → logprob: -3.0733771324157715
    4. '       ' → logprob: -6.0733771324157715
    5. '	continue' → logprob: -8.448376655578613
    6. ' ans' → logprob: -9.698376655578613
    7. '```' → logprob: -10.448376655578613
    8. ' break' → logprob: -10.573376655578613
    9. '
' → logprob: -11.448376655578613
    10. '   ' → logprob: -11.635876655578613

Token 220: ' print' (ID: 2123)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1984936147928238
    2. ' continue' → logprob: -2.198493719100952
    3. '   ' → logprob: -2.698493719100952
    4. 'V' → logprob: -7.448493480682373
    5. ' V' → logprob: -7.948493480682373
    6. 'break' → logprob: -8.073493957519531
    7. ' break' → logprob: -9.073493957519531
    8. '       ' → logprob: -9.448493957519531
    9. ' ' → logprob: -9.573493957519531
    10. 's' → logprob: -9.823493957519531

Token 221: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024052312597632408
    2. '(-' → logprob: -4.024052143096924
    3. '0' → logprob: -5.274052143096924
    4. '(' → logprob: -8.149052619934082
    5. '("' → logprob: -8.274052619934082
    6. '"-' → logprob: -9.649052619934082
    7. '"' → logprob: -9.899052619934082
    8. '("-' → logprob: -10.899052619934082
    9. '-im' → logprob: -11.649052619934082
    10. ' -' → logprob: -11.774052619934082

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -15.875000953674316
    4. '-' → logprob: -16.875
    5. '2' → logprob: -17.25
    6. '１' → logprob: -17.625
    7. '   ' → logprob: -17.8125
    8. '11' → logprob: -18.0625
    9. '
' → logprob: -18.125
    10. '{' → logprob: -18.3125

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5239028930664062
    2. ')
' → logprob: -0.8989028930664062
    3. '       ' → logprob: -7.898902893066406
    4. ')return' → logprob: -8.148902893066406
    5. ')
' → logprob: -9.398902893066406
    6. ')`
' → logprob: -11.398902893066406
    7. '   ' → logprob: -12.273902893066406
    8. ');' → logprob: -12.648902893066406
    9. '```' → logprob: -13.023902893066406
    10. ' )' → logprob: -13.148902893066406

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001831565605243668
    2. '<|end|>' → logprob: -9.50018310546875
    3. '
' → logprob: -9.75018310546875
    4. ')' → logprob: -11.25018310546875
    5. '   ' → logprob: -11.62518310546875
    6. ',' → logprob: -12.25018310546875
    7. '           ' → logprob: -12.25018310546875
    8. '        
' → logprob: -12.25018310546875
    9. '```' → logprob: -12.50018310546875
    10. '	' → logprob: -13.50018310546875

Token 225: ' quit' (ID: 27737)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.15376253426074982
    2. '       ' → logprob: -2.0287625789642334
    3. ' exit' → logprob: -5.153762340545654
    4. 'break' → logprob: -5.528762340545654
    5. 'import' → logprob: -7.903762340545654
    6. '	exit' → logprob: -8.028762817382812
    7. 'sys' → logprob: -8.403762817382812
    8. ' break' → logprob: -9.278762817382812
    9. '
' → logprob: -9.278762817382812
    10. '   ' → logprob: -10.403762817382812

Token 226: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0776568204164505
    2. ')' → logprob: -3.8276567459106445
    3. '    
' → logprob: -3.8276567459106445
    4. ' 
' → logprob: -4.2026567459106445
    5. '<|end|>' → logprob: -5.0776567459106445
    6. ' )' → logprob: -5.9526567459106445
    7. '   
' → logprob: -6.0776567459106445
    8. '     
' → logprob: -6.3276567459106445
    9. '  
' → logprob: -7.5776567459106445
    10. '        
' → logprob: -7.8276567459106445

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010440812446177006
    2. 'V' → logprob: -5.260440826416016
    3. ' for' → logprob: -5.760440826416016
    4. ' V' → logprob: -6.760440826416016
    5. 'for' → logprob: -8.760440826416016
    6. '    
' → logprob: -9.010440826416016
    7. '```' → logprob: -9.010440826416016
    8. '       ' → logprob: -9.260440826416016
    9. ')' → logprob: -9.260440826416016
    10. '
' → logprob: -10.010440826416016

Token 228: ' ans' (ID: 3345)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.5322258472442627
    2. 'ans' (adapté à ' ans') → logprob: -0.9072258472442627
    3. 'for' → logprob: -5.032225608825684
    4. '   ' → logprob: -6.282225608825684
    5. 'if' → logprob: -7.907225608825684
    6. 'print' → logprob: -9.282225608825684
    7. 'v' → logprob: -10.032225608825684
    8. ' ans' → logprob: -10.907225608825684
    9. 'a' → logprob: -11.032225608825684
    10. ' V' → logprob: -11.032225608825684

Token 229: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.009758212603628635
    2. '+=' → logprob: -4.634757995605469
    3. '+=(' → logprob: -14.384757995605469
    4. ' -=' → logprob: -14.759757995605469
    5. ']+=' → logprob: -14.884757995605469
    6. '+' → logprob: -14.884757995605469
    7. ' ' → logprob: -15.509757995605469
    8. '+='' → logprob: -15.634757995605469
    9. '+="' → logprob: -17.25975799560547
    10. ' =' → logprob: -17.25975799560547

Token 230: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01416350994259119
    2. ' s' → logprob: -4.264163494110107
    3. '1' → logprob: -18.139163970947266
    4. '(s' → logprob: -18.514163970947266
    5. 'v' → logprob: -19.264163970947266
    6. 'abs' → logprob: -19.264163970947266
    7. ' ' → logprob: -19.389163970947266
    8. ' ans' → logprob: -19.764163970947266
    9. '
' → logprob: -19.889163970947266
    10. 'ans' → logprob: -20.014163970947266

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004723818507045507
    2. 'V' → logprob: -6.004724025726318
    3. '
' → logprob: -6.504724025726318
    4. ' V' → logprob: -8.37972354888916
    5. '```' → logprob: -8.62972354888916
    6. '<|end|>' → logprob: -8.75472354888916
    7. ',' → logprob: -9.87972354888916
    8. '    
' → logprob: -10.00472354888916
    9. ' for' → logprob: -10.87972354888916
    10. '``' → logprob: -11.62972354888916

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014451064169406891
    2. 'V' → logprob: -4.264451026916504
    3. ' V' → logprob: -8.889451026916504
    4. '```' → logprob: -9.264451026916504
    5. 'for' → logprob: -10.639451026916504
    6. ' for' → logprob: -11.764451026916504
    7. '``' → logprob: -11.889451026916504
    8. '  ' → logprob: -12.264451026916504
    9. '       ' → logprob: -12.639451026916504
    10. 'v' → logprob: -13.014451026916504

Token 233: ' v' (ID: 323)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.003756375052034855
    2. 'for' → logprob: -6.378756523132324
    3. '   ' → logprob: -6.753756523132324
    4. 'v' (adapté à ' v') → logprob: -8.003756523132324
    5. ' V' → logprob: -8.003756523132324
    6. 'new' → logprob: -9.878756523132324
    7. '```' → logprob: -10.378756523132324
    8. 'tmp' → logprob: -10.878756523132324
    9. '
' → logprob: -10.878756523132324
    10. 'x' → logprob: -11.003756523132324

Token 234: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.21586118638515472
    2. ' -=' → logprob: -1.715861201286316
    3. '=' → logprob: -4.5908613204956055
    4. '-' → logprob: -5.8408613204956055
    5. ' =' → logprob: -6.7158613204956055
    6. '+=' → logprob: -10.215861320495605
    7. '%=' → logprob: -10.965861320495605
    8. ' -' → logprob: -11.590861320495605
    9. '=v' → logprob: -11.965861320495605
    10. 'v' → logprob: -12.965861320495605

Token 235: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11297202110290527
    2. 'tmp' → logprob: -2.2379720211029053
    3. ' s' → logprob: -9.487972259521484
    4. ' tmp' → logprob: -9.862972259521484
    5. '   ' → logprob: -11.737972259521484
    6. '(tmp' → logprob: -11.987972259521484
    7. '/tmp' → logprob: -13.237972259521484
    8. '(s' → logprob: -13.362972259521484
    9. '[tmp' → logprob: -14.237972259521484
    10. '	tmp' → logprob: -14.612972259521484

Token 236: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0021876145619899035
    2. ' *' → logprob: -6.127187728881836
    3. '*(' → logprob: -13.127187728881836
    4. '[tmp' → logprob: -15.502187728881836
    5. 'tmp' → logprob: -16.127187728881836
    6. '
' → logprob: -16.502187728881836
    7. ' ' → logprob: -17.002187728881836
    8. '**' → logprob: -17.252187728881836
    9. '*
' → logprob: -17.377187728881836
    10. '(tmp' → logprob: -17.377187728881836

Token 237: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.002477081725373864
    2. ' tmp' → logprob: -6.002477169036865
    3. '(tmp' → logprob: -13.627476692199707
    4. '/tmp' → logprob: -16.002477645874023
    5. '	tmp' → logprob: -16.627477645874023
    6. '[tmp' → logprob: -17.377477645874023
    7. 'temp' → logprob: -17.377477645874023
    8. '$tmp' → logprob: -17.627477645874023
    9. ',tmp' → logprob: -19.627477645874023
    10. '_tmp' → logprob: -19.627477645874023

Token 238: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2605767250061035
    2. 'V' → logprob: -1.5105767250061035
    3. ' V' → logprob: -5.3855767250061035
    4. '
' → logprob: -5.8855767250061035
    5. ',' → logprob: -7.8855767250061035
    6. '<|end|>' → logprob: -7.8855767250061035
    7. ')' → logprob: -8.510576248168945
    8. '```' → logprob: -9.260576248168945
    9. '  ' → logprob: -10.385576248168945
    10. ' ' → logprob: -10.510576248168945

Token 239: '   ' (ID: 271)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.1027272641658783
    2. '   ' → logprob: -2.352727174758911
    3. ' V' → logprob: -6.22772741317749
    4. '<|end|>' → logprob: -8.477726936340332
    5. '```' → logprob: -8.727726936340332
    6. ')V' → logprob: -9.852726936340332
    7. ')' → logprob: -9.977726936340332
    8. '
' → logprob: -10.227726936340332
    9. 'v' → logprob: -11.852726936340332
    10. '``' → logprob: -12.352726936340332

Token 240: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.0021435972303152084
    2. ' V' → logprob: -6.252143383026123
    3. 'if' → logprob: -9.752143859863281
    4. ')' → logprob: -9.877143859863281
    5. '   ' → logprob: -9.877143859863281
    6. ' if' → logprob: -10.502143859863281
    7. '```' → logprob: -12.002143859863281
    8. '
' → logprob: -12.377143859863281
    9. ')V' → logprob: -12.377143859863281
    10. '<|end|>' → logprob: -12.752143859863281

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. '```' → logprob: -17.0
    4. '[I' → logprob: -17.25
    5. '\[' → logprob: -17.375
    6. '[(' → logprob: -17.875
    7. '[
' → logprob: -18.25
    8. '.__' → logprob: -18.5
    9. 'i' → logprob: -18.625
    10. '[index' → logprob: -19.5

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3786574900150299
    2. '=' → logprob: -1.5036574602127075
    3. ']=' → logprob: -2.628657579421997
    4. ' =' → logprob: -3.878657579421997
    5. ']+=' → logprob: -11.128657341003418
    6. ')' → logprob: -11.753657341003418
    7. ')=' → logprob: -11.878657341003418
    8. ' ]' → logprob: -12.128657341003418
    9. '[' → logprob: -12.753657341003418
    10. '<|end|>' → logprob: -13.128657341003418

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164102263748646
    2. ' =' → logprob: -4.264163970947266
    3. '=v' → logprob: -15.264163970947266
    4. '＝' → logprob: -16.014163970947266
    5. '.=' → logprob: -16.014163970947266
    6. '<|end|>' → logprob: -17.389163970947266
    7. '=}' → logprob: -17.889163970947266
    8. '=
' → logprob: -17.889163970947266
    9. '=

' → logprob: -18.139163970947266
    10. '=int' → logprob: -18.389163970947266

Token 244: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. ' v' → logprob: -12.500003814697266
    3. '	v' → logprob: -19.250003814697266
    4. '   ' → logprob: -21.875003814697266
    5. '```' → logprob: -21.875003814697266
    6. '<|end|>' → logprob: -22.375003814697266
    7. '$v' → logprob: -22.625003814697266
    8. '(v' → logprob: -22.875003814697266
    9. 'int' → logprob: -23.125003814697266
    10. '
' → logprob: -23.125003814697266

Token 245: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005425465060397983
    2. ' if' → logprob: -8.875542640686035
    3. 'if' → logprob: -9.125542640686035
    4. ' for' → logprob: -9.125542640686035
    5. 'for' → logprob: -9.375542640686035
    6. 'he' → logprob: -10.125542640686035
    7. ' he' → logprob: -10.500542640686035
    8. '<|end|>' → logprob: -11.750542640686035
    9. '```' → logprob: -11.875542640686035
    10. '  ' → logprob: -12.250542640686035

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8768930435180664
    2. '<|end|>' → logprob: -0.8768930435180664
    3. ' if' → logprob: -2.1268930435180664
    4. ')' → logprob: -3.8768930435180664
    5. 'if' → logprob: -4.501893043518066
    6. '    ' → logprob: -4.876893043518066
    7. ',' → logprob: -5.876893043518066
    8. '    
' → logprob: -6.501893043518066
    9. ' ' → logprob: -7.251893043518066
    10. '  ' → logprob: -7.376893043518066

Token 247: ' if' (ID: 538)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.013120461255311966
    2. 'if' (adapté à ' if') → logprob: -4.513120651245117
    3. '   ' → logprob: -6.388120651245117
    4. ' he' → logprob: -8.263120651245117
    5. '```' → logprob: -9.888120651245117
    6. ' if' → logprob: -10.388120651245117
    7. 'for' → logprob: -10.638120651245117
    8. 'heap' → logprob: -11.638120651245117
    9. '    
' → logprob: -12.638120651245117
    10. ' ' → logprob: -13.013120651245117

Token 248: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014701887965202332
    2. 'V' → logprob: -4.514701843261719
    3. ' v' → logprob: -5.764701843261719
    4. 'i' → logprob: -8.389701843261719
    5. ' V' → logprob: -9.264701843261719
    6. 'h' → logprob: -9.389701843261719
    7. 'a' → logprob: -10.389701843261719
    8. 's' → logprob: -11.139701843261719
    9. '(v' → logprob: -11.264701843261719
    10. 'b' → logprob: -11.264701843261719

Token 249: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.24785633385181427
    2. ' >' → logprob: -1.7478563785552979
    3. '<' → logprob: -3.622856378555298
    4. ' <' → logprob: -4.122856140136719
    5. '<=' → logprob: -7.122856140136719
    6. '!=' → logprob: -7.497856140136719
    7. ' <=' → logprob: -7.997856140136719
    8. '0' → logprob: -8.372856140136719
    9. ' !=' → logprob: -8.622856140136719
    10. ' ' → logprob: -8.747856140136719

Token 250: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09191395342350006
    2. '0' → logprob: -2.466913938522339
    3. ' a' → logprob: -5.966914176940918
    4. ' ' → logprob: -8.091914176940918
    5. 'v' → logprob: -10.591914176940918
    6. 'inf' → logprob: -10.716914176940918
    7. '-' → logprob: -11.341914176940918
    8. 'b' → logprob: -11.591914176940918
    9. '   ' → logprob: -11.716914176940918
    10. '-a' → logprob: -11.841914176940918

Token 251: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.250000953674316
    3. '[' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.250001907348633
    5. '```' → logprob: -16.875001907348633
    6. '[I' → logprob: -17.125001907348633
    7. '(i' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '[
' → logprob: -20.000001907348633
    10. '{i' → logprob: -20.250001907348633

Token 252: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21044108271598816
    2. ':
' → logprob: -2.0854411125183105
    3. '):' → logprob: -3.2104411125183105
    4. '):
' → logprob: -3.7104411125183105
    5. '   ' → logprob: -7.8354411125183105
    6. ' and' → logprob: -8.960440635681152
    7. '       ' → logprob: -9.460440635681152
    8. ')' → logprob: -9.960440635681152
    9. ']:' → logprob: -11.085440635681152
    10. 'and' → logprob: -11.960440635681152

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05149517580866814
    2. ' he' → logprob: -3.17649507522583
    3. '   ' → logprob: -4.92649507522583
    4. 'he' → logprob: -6.80149507522583
    5. ',' → logprob: -10.176495552062988
    6. ' ' → logprob: -10.926495552062988
    7. '      ' → logprob: -11.551495552062988
    8. '  ' → logprob: -11.926495552062988
    9. '     ' → logprob: -11.926495552062988
    10. '    ' → logprob: -12.801495552062988

Token 254: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.04311520606279373
    2. ' he' → logprob: -3.4181151390075684
    3. '   ' → logprob: -4.668115139007568
    4. '  ' → logprob: -11.418115615844727
    5. ' ' → logprob: -11.668115615844727
    6. '```' → logprob: -12.168115615844727
    7. '       ' → logprob: -13.043115615844727
    8. 'heap' → logprob: -13.543115615844727
    9. 'hev' → logprob: -14.043115615844727
    10. '    ' → logprob: -14.043115615844727

Token 255: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.173704271830502e-06
    2. 'push' → logprob: -13.00000286102295
    3. 'pp' → logprob: -14.50000286102295
    4. 'ap' → logprob: -15.50000286102295
    5. 'append' → logprob: -17.125003814697266
    6. ' app' → logprob: -17.250003814697266
    7. '```' → logprob: -17.375003814697266
    8. 'appen' → logprob: -18.125003814697266
    9. 'he' → logprob: -18.500003814697266
    10. 'a' → logprob: -18.750003814697266

Token 256: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.512236498361744e-07
    2. 'push' → logprob: -14.500000953674316
    3. 'sh' → logprob: -17.625
    4. 'u' → logprob: -19.625
    5. 'op' → logprob: -19.625
    6. 'Push' → logprob: -20.125
    7. 'ut' → logprob: -20.375
    8. '   ' → logprob: -20.625
    9. 'p' → logprob: -20.625
    10. '

' → logprob: -20.75

Token 257: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.5048530030981055e-06
    2. 'h' → logprob: -13.500001907348633
    3. '(' → logprob: -20.375001907348633
    4. ',h' → logprob: -21.125001907348633
    5. '	h' → logprob: -21.375001907348633
    6. '[h' → logprob: -22.000001907348633
    7. '```' → logprob: -22.875001907348633
    8. ' h' → logprob: -23.250001907348633
    9. '<h' → logprob: -23.875001907348633
    10. '   ' → logprob: -24.000001907348633

Token 258: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0013445195509120822
    2. ',h' → logprob: -7.126344680786133
    3. ',' → logprob: -8.376344680786133
    4. '(-' → logprob: -8.501344680786133
    5. '(' → logprob: -9.501344680786133
    6. ',(' → logprob: -10.501344680786133
    7. 'h' → logprob: -13.376344680786133
    8. ' (' → logprob: -13.751344680786133
    9. '((-' → logprob: -14.126344680786133
    10. '(-(' → logprob: -14.876344680786133

Token 259: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.9361264946837764e-07
    2. ' (-' → logprob: -16.375
    3. '(' → logprob: -18.25
    4. '(-(' → logprob: -19.25
    5. '((-' → logprob: -19.625
    6. '   ' → logprob: -19.625
    7. '(v' → logprob: -21.5
    8. '```' → logprob: -22.625
    9. '  ' → logprob: -22.75
    10. '-v' → logprob: -23.125

Token 260: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.542423165636137e-05
    2. 'V' → logprob: -9.375085830688477
    3. ' v' → logprob: -15.375085830688477
    4. ')v' → logprob: -15.875085830688477
    5. '(v' → logprob: -16.750085830688477
    6. '```' → logprob: -17.500085830688477
    7. ')' → logprob: -17.875085830688477
    8. '	v' → logprob: -18.000085830688477
    9. '
' → logprob: -18.625085830688477
    10. '   ' → logprob: -18.625085830688477

Token 261: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.005954752676188946
    2. ',' → logprob: -5.130954742431641
    3. ' ,' → logprob: -10.63095474243164
    4. 'i' → logprob: -13.38095474243164
    5. '[i' → logprob: -16.00595474243164
    6. ',
' → logprob: -16.50595474243164
    7. ' i' → logprob: -16.75595474243164
    8. '```' → logprob: -17.25595474243164
    9. '(i' → logprob: -17.63095474243164
    10. ',a' → logprob: -17.75595474243164

Token 262: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694858014583588
    2. '))' → logprob: -2.126948595046997
    3. ')
' → logprob: -10.876948356628418
    4. '))
' → logprob: -14.126948356628418
    5. ')))' → logprob: -15.126948356628418
    6. ' )' → logprob: -15.751948356628418
    7. ')}' → logprob: -16.251949310302734
    8. ')

' → logprob: -17.501949310302734
    9. ')v' → logprob: -17.501949310302734
    10. '})' → logprob: -17.626949310302734

Token 263: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.8889261304575484e-06
    2. 'ans' → logprob: -13.000003814697266
    3. '(' → logprob: -13.625003814697266
    4. ' (' → logprob: -15.125003814697266
    5. '(answer' → logprob: -16.875003814697266
    6. '(
' → logprob: -17.250003814697266
    7. '	ans' → logprob: -17.500003814697266
    8. '(abs' → logprob: -18.125003814697266
    9. '(a' → logprob: -18.875003814697266
    10. '(an' → logprob: -19.625003814697266

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -13.500003814697266
    3. '```' → logprob: -13.875003814697266
    4. '())' → logprob: -15.125003814697266
    5. ')
' → logprob: -15.250003814697266
    6. '<|end|>' → logprob: -15.375003814697266
    7. '')' → logprob: -15.500003814697266
    8. '*' → logprob: -15.500003814697266
    9. '()' → logprob: -16.375003814697266
    10. '`)' → logprob: -16.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 263
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 126
Tokens correctement prédits (top 10): 224
Précision stricte (1ère position): 45.25%
Précision adaptée (1ère position): 47.91%
Précision (top 10): 85.17%
================================================================================
