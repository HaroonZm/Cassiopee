================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = list(input())
R = []
G = []
B = []
cnt = 0

for i in range(N):
    if S[i] == "R":
        R.append(i)
    elif S[i] == "G":
        G.append(i)
    else:
        B.append(i)

B = set(B)
b = len(B)

for i in R:
    for j in G:
        check = 0
        m = min(i, j)
        M = max(i, j)
        r = M - m
        left = m - r
        right = M + r
        if r % 2 == 0:
            center = m + r // 2
            if center in B:
                check += 1
        if left in B:
            check += 1
        if right in B:
            check += 1
        cnt += b - check

print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002836232597474009
    2. ''' → logprob: -9.250283241271973
    3. '(N' → logprob: -9.625283241271973
    4. '`' → logprob: -10.250283241271973
    5. '```' → logprob: -10.375283241271973
    6. '(
' → logprob: -10.625283241271973
    7. '("("' → logprob: -11.750283241271973
    8. '('' → logprob: -12.250283241271973
    9. 'N' → logprob: -12.500283241271973
    10. ')' → logprob: -12.750283241271973

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25961247086524963
    2. '(' → logprob: -1.5096124410629272
    3. '()' → logprob: -5.509612560272217
    4. '())' → logprob: -5.884612560272217
    5. '(
' → logprob: -8.759612083435059
    6. '```' → logprob: -9.134612083435059
    7. '`)' → logprob: -9.134612083435059
    8. '')' → logprob: -9.509612083435059
    9. '")' → logprob: -9.759612083435059
    10. '))' → logprob: -10.134612083435059

Token 5: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6132920980453491
    2. 'if' → logprob: -1.4882920980453491
    3. 'i' → logprob: -2.8632922172546387
    4. 'x' → logprob: -3.2382922172546387
    5. 'a' → logprob: -3.3632922172546387
    6. 's' → logprob: -3.7382922172546387
    7. 'f' → logprob: -4.113292217254639
    8. '\n' → logprob: -4.988292217254639
    9. '#' → logprob: -5.113292217254639
    10. '`' → logprob: -5.113292217254639

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29350852966308594
    2. '.' → logprob: -1.418508529663086
    3. '=' → logprob: -4.918508529663086
    4. ' =' → logprob: -6.918508529663086
    5. '+' → logprob: -7.043508529663086
    6. '_' → logprob: -7.543508529663086
    7. '\[' → logprob: -7.543508529663086
    8. ')' → logprob: -7.918508529663086
    9. '[:]' → logprob: -7.918508529663086
    10. '[]' → logprob: -8.168508529663086

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20176725089550018
    2. ' input' → logprob: -1.7017672061920166
    3. '""' → logprob: -8.951766967773438
    4. '"' → logprob: -10.576766967773438
    5. '(input' → logprob: -10.576766967773438
    6. ' ' → logprob: -10.576766967773438
    7. '[input' → logprob: -10.576766967773438
    8. '=input' → logprob: -10.701766967773438
    9. ''' → logprob: -10.826766967773438
    10. '''' → logprob: -10.826766967773438

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018577903392724693
    2. '(S' → logprob: -9.2501859664917
    3. '('' → logprob: -10.6251859664917
    4. '("("' → logprob: -10.7501859664917
    5. '(
' → logprob: -11.5001859664917
    6. '(range' → logprob: -11.8751859664917
    7. '()' → logprob: -11.8751859664917
    8. '(input' → logprob: -13.0001859664917
    9. '((' → logprob: -13.1251859664917
    10. '(N' → logprob: -13.3751859664917

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12749053537845612
    2. '()' → logprob: -2.127490520477295
    3. '(' → logprob: -8.377490997314453
    4. ')' → logprob: -8.752490997314453
    5. '()))' → logprob: -8.877490997314453
    6. ' ())' → logprob: -11.252490997314453
    7. '().' → logprob: -11.752490997314453
    8. '();)' → logprob: -12.502490997314453
    9. '()]' → logprob: -13.127490997314453
    10. '());' → logprob: -13.502490997314453

Token 10: 'R' (ID: 49)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018990937620401382
    2. 'count' → logprob: -4.268990993499756
    3. 'i' → logprob: -6.768990993499756
    4. 'c' → logprob: -7.018990993499756
    5. 'f' → logprob: -7.518990993499756
    6. ' for' → logprob: -8.143990516662598
    7. 's' → logprob: -8.143990516662598
    8. 'd' → logprob: -8.518990516662598
    9. 'n' → logprob: -8.518990516662598
    10. 'counter' → logprob: -8.768990516662598

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9814794659614563
    2. '[' → logprob: -0.9814794659614563
    3. '.append' → logprob: -2.7314794063568115
    4. 'E' → logprob: -2.8564794063568115
    5. 'ever' → logprob: -3.8564794063568115
    6. '.reverse' → logprob: -3.8564794063568115
    7. ' =' → logprob: -3.9814794063568115
    8. '(' → logprob: -4.231479644775391
    9. '[:]' → logprob: -4.231479644775391
    10. '[::-' → logprob: -5.231479644775391

Token 12: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07191894203424454
    2. 'S' → logprob: -3.4469189643859863
    3. '[' → logprob: -3.8219189643859863
    4. '['' → logprob: -5.196918964385986
    5. '["' → logprob: -5.821918964385986
    6. '0' → logprob: -6.321918964385986
    7. 'len' → logprob: -6.821918964385986
    8. ' []' → logprob: -6.821918964385986
    9. '[S' → logprob: -7.071918964385986
    10. '[len' → logprob: -7.071918964385986

Token 13: 'G' (ID: 38)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012830403633415699
    2. 'f' → logprob: -4.8878302574157715
    3. ' for' → logprob: -5.7628302574157715
    4. '_' → logprob: -7.3878302574157715
    5. 'i' → logprob: -7.5128302574157715
    6. '(' → logprob: -7.7628302574157715
    7. 'F' → logprob: -8.63783073425293
    8. ' ' → logprob: -9.63783073425293
    9. 'n' → logprob: -10.01283073425293
    10. 'd' → logprob: -10.51283073425293

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6784729361534119
    2. ' =' → logprob: -0.9284729361534119
    3. '.' → logprob: -3.4284729957580566
    4. ' ' → logprob: -3.8034729957580566
    5. '.append' → logprob: -4.303472995758057
    6. '(' → logprob: -5.303472995758057
    7. '=[]' → logprob: -5.553472995758057
    8. ',' → logprob: -5.678472995758057
    9. ')' → logprob: -5.928472995758057
    10. '[' → logprob: -6.053472995758057

Token 15: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25283610820770264
    2. '0' → logprob: -2.127836227416992
    3. '{}' → logprob: -3.002836227416992
    4. '[' → logprob: -3.752836227416992
    5. ' []' → logprob: -5.127836227416992
    6. 'len' → logprob: -5.502836227416992
    7. '['' → logprob: -5.502836227416992
    8. 'set' → logprob: -5.502836227416992
    9. '{' → logprob: -6.002836227416992
    10. 'S' → logprob: -6.002836227416992

Token 16: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33899956941604614
    2. 'f' → logprob: -1.4639995098114014
    3. ' ' → logprob: -3.8389995098114014
    4. 'i' → logprob: -4.0889997482299805
    5. ' for' → logprob: -4.7139997482299805
    6. 'F' → logprob: -6.2139997482299805
    7. 'n' → logprob: -6.3389997482299805
    8. 'r' → logprob: -7.0889997482299805
    9. '=' → logprob: -7.3389997482299805
    10. 't' → logprob: -7.4639997482299805

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233380794525146
    2. '=' → logprob: -0.8983380794525146
    3. '=[]' → logprob: -8.773338317871094
    4. '[]' → logprob: -10.523338317871094
    5. ')' → logprob: -11.898338317871094
    6. ']' → logprob: -12.023338317871094
    7. ' ' → logprob: -12.398338317871094
    8. '[:]' → logprob: -12.523338317871094
    9. '[' → logprob: -13.023338317871094
    10. '.' → logprob: -13.148338317871094

Token 18: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0012617830652743578
    2. ' []' → logprob: -7.2512617111206055
    3. '[' → logprob: -7.6262617111206055
    4. '0' → logprob: -10.376261711120605
    5. '[]
' → logprob: -10.501261711120605
    6. '[]}' → logprob: -13.126261711120605
    7. '[]

' → logprob: -13.626261711120605
    8. ' ' → logprob: -13.876261711120605
    9. '[])' → logprob: -14.876261711120605
    10. '[int' → logprob: -15.251261711120605

Token 19: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003144896763842553
    2. ' for' → logprob: -8.125314712524414
    3. 'f' → logprob: -11.625314712524414
    4. '```' → logprob: -12.125314712524414
    5. 'i' → logprob: -13.625314712524414
    6. '
' → logprob: -14.000314712524414
    7. ' ' → logprob: -14.875314712524414
    8. 'n' → logprob: -15.250314712524414
    9. '\n' → logprob: -15.375314712524414
    10. ')' → logprob: -15.500314712524414

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06104962155222893
    2. ' =' → logprob: -3.561049699783325
    3. '=' → logprob: -3.686049699783325
    4. '[' → logprob: -5.936049461364746
    5. ' ' → logprob: -6.311049461364746
    6. 's' → logprob: -6.936049461364746
    7. ' _' → logprob: -9.936049461364746
    8. '(' → logprob: -10.186049461364746
    9. '_=' → logprob: -10.186049461364746
    10. 'a' → logprob: -10.686049461364746

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011295147240161896
    2. ' ' → logprob: -4.511295318603516
    3. '{' → logprob: -9.261295318603516
    4. '[' → logprob: -9.511295318603516
    5. ' [' → logprob: -10.261295318603516
    6. ' {' → logprob: -10.761295318603516
    7. '{}' → logprob: -11.136295318603516
    8. '{'' → logprob: -12.886295318603516
    9. ' {'' → logprob: -13.011295318603516
    10. ' {}' → logprob: -13.636295318603516

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062959685921669
    2. '[' → logprob: -3.312959671020508
    3. '{' → logprob: -3.812959671020508
    4. '{}' → logprob: -6.562959671020508
    5. '{'' → logprob: -7.437959671020508
    6. ' ' → logprob: -8.062959671020508
    7. ' [' → logprob: -9.187959671020508
    8. '{"' → logprob: -9.687959671020508
    9. ' {' → logprob: -11.562959671020508
    10. '(' → logprob: -11.812959671020508

Token 23: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017890146002173424
    2. ' for' → logprob: -4.142889976501465
    3. '
' → logprob: -6.642889976501465
    4. '<|end|>' → logprob: -9.017889976501465
    5. '\n' → logprob: -9.142889976501465
    6. ' ' → logprob: -9.392889976501465
    7. ' 
' → logprob: -9.642889976501465
    8. '' → logprob: -9.642889976501465
    9. 'f' → logprob: -10.017889976501465
    10. '```' → logprob: -11.017889976501465

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010032468708232045
    2. ' for' → logprob: -9.500100135803223
    3. 'f' → logprob: -10.750100135803223
    4. '```' → logprob: -13.250100135803223
    5. 'i' → logprob: -13.500100135803223
    6. '
' → logprob: -15.125100135803223
    7. 'r' → logprob: -15.500100135803223
    8. 'F' → logprob: -16.37510108947754
    9. 'd' → logprob: -16.75010108947754
    10. 'n' → logprob: -17.12510108947754

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5815582275390625
    2. ' ' → logprob: -0.8315582275390625
    3. ' _' → logprob: -5.3315582275390625
    4. 'i' → logprob: -7.7065582275390625
    5. '_' → logprob: -8.206558227539062
    6. '  ' → logprob: -10.331558227539062
    7. ' ‌' → logprob: -12.331558227539062
    8. ' ```' → logprob: -13.081558227539062
    9. ' I' → logprob: -13.581558227539062
    10. ' `' → logprob: -14.331558227539062

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06472212821245193
    2. 'in' → logprob: -2.8147220611572266
    3. ' ' → logprob: -5.939722061157227
    4. '  ' → logprob: -9.314722061157227
    5. ' i' → logprob: -12.189722061157227
    6. '	in' → logprob: -12.189722061157227
    7. 'n' → logprob: -13.189722061157227
    8. '```' → logprob: -13.314722061157227
    9. '   ' → logprob: -13.564722061157227
    10. 'In' → logprob: -13.689722061157227

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009146820520982146
    2. 'range' → logprob: -7.000914573669434
    3. ' xrange' → logprob: -13.500914573669434
    4. ' ' → logprob: -13.750914573669434
    5. '	range' → logprob: -14.750914573669434
    6. '(range' → logprob: -15.750914573669434
    7. ')' → logprob: -16.50091552734375
    8. '  ' → logprob: -18.00091552734375
    9. '_range' → logprob: -18.12591552734375
    10. '.range' → logprob: -18.25091552734375

Token 28: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16039147973060608
    2. '(N' → logprob: -1.9103914499282837
    3. '(n' → logprob: -9.410391807556152
    4. ' (' → logprob: -9.660391807556152
    5. '(
' → logprob: -11.410391807556152
    6. '(len' → logprob: -11.910391807556152
    7. '(

' → logprob: -13.785391807556152
    8. ' ' → logprob: -14.285391807556152
    9. '(i' → logprob: -14.410391807556152
    10. ' N' → logprob: -14.660391807556152

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007975964690558612
    2. ')' → logprob: -7.250797748565674
    3. ':' → logprob: -9.875797271728516
    4. '):
' → logprob: -10.375797271728516
    5. ' ):' → logprob: -12.750797271728516
    6. '+' → logprob: -14.500797271728516
    7. '):

' → logprob: -14.875797271728516
    8. ')>' → logprob: -16.125797271728516
    9. ' ' → logprob: -16.500797271728516
    10. '-' → logprob: -16.500797271728516

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11805085837841034
    2. ' ' → logprob: -2.4930508136749268
    3. '<|end|>' → logprob: -4.993051052093506
    4. '    
' → logprob: -5.118051052093506
    5. '    ' → logprob: -5.493051052093506
    6. ' if' → logprob: -5.868051052093506
    7. ' 
' → logprob: -5.993051052093506
    8. ':' → logprob: -6.243051052093506
    9. '  ' → logprob: -6.618051052093506
    10. '```' → logprob: -6.743051052093506

Token 31: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40201061964035034
    2. 'if' (adapté à ' if') → logprob: -1.6520106792449951
    3. '   ' → logprob: -2.027010679244995
    4. ' for' → logprob: -5.527010440826416
    5. 'for' → logprob: -6.027010440826416
    6. ' ' → logprob: -7.902010440826416
    7. '```' → logprob: -8.652010917663574
    8. '    ' → logprob: -9.152010917663574
    9. 'S' → logprob: -9.152010917663574
    10. 's' → logprob: -9.277010917663574

Token 32: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.016091851517558098
    2. 'S' → logprob: -4.141091823577881
    3. ' ' → logprob: -9.891092300415039
    4. ' ' → logprob: -12.516092300415039
    5. '<|end|>' → logprob: -14.391092300415039
    6. '(S' → logprob: -14.641092300415039
    7. 's' → logprob: -15.266092300415039
    8. ')' → logprob: -15.266092300415039
    9. ' (' → logprob: -15.391092300415039
    10. '>S' → logprob: -15.453592300415039

Token 33: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.250005722045898
    3. ' [' → logprob: -14.750005722045898
    4. '[I' → logprob: -14.875005722045898
    5. '```' → logprob: -16.5000057220459
    6. '\[' → logprob: -16.8750057220459
    7. '==' → logprob: -17.5000057220459
    8. 'i' → logprob: -18.2500057220459
    9. '[
' → logprob: -18.2500057220459
    10. '[a' → logprob: -18.3750057220459

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36031973361968994
    2. '==' → logprob: -1.48531973361969
    3. ']==' → logprob: -2.7353196144104004
    4. ' ==' → logprob: -4.8603196144104
    5. '=' → logprob: -6.4853196144104
    6. ' ]' → logprob: -7.3603196144104
    7. ']=='' → logprob: -7.4853196144104
    8. ' ' → logprob: -8.485320091247559
    9. '[' → logprob: -9.485320091247559
    10. '===' → logprob: -9.610320091247559

Token 35: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5792196393013
    2. ' ==' → logprob: -0.8292196393013
    3. '=='' → logprob: -6.454219818115234
    4. '=' → logprob: -7.704219818115234
    5. ' ' → logprob: -8.454219818115234
    6. '[' → logprob: -8.704219818115234
    7. ''' → logprob: -8.954219818115234
    8. '=="' → logprob: -9.079219818115234
    9. ' =='' → logprob: -9.579219818115234
    10. ' =' → logprob: -9.704219818115234

Token 36: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006180775817483664
    2. 'R' → logprob: -8.250617980957031
    3. ' '' → logprob: -8.875617980957031
    4. '"' → logprob: -9.125617980957031
    5. ' ' → logprob: -9.625617980957031
    6. ''r' → logprob: -11.375617980957031
    7. ' R' → logprob: -11.500617980957031
    8. ''A' → logprob: -11.625617980957031
    9. ' ' → logprob: -12.250617980957031
    10. '`' → logprob: -13.625617980957031

Token 37: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.01649540290236473
    2. ''' → logprob: -4.141495227813721
    3. '"' → logprob: -8.266495704650879
    4. 'B' → logprob: -8.766495704650879
    5. ' R' → logprob: -10.266495704650879
    6. '_R' → logprob: -13.391495704650879
    7. '	R' → logprob: -13.641495704650879
    8. '?' → logprob: -13.766495704650879
    9. ' ' → logprob: -13.766495704650879
    10. ''"' → logprob: -14.016495704650879

Token 38: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.04906022176146507
    2. '"' → logprob: -3.299060106277466
    3. '"):' → logprob: -4.549060344696045
    4. '")' → logprob: -9.174059867858887
    5. '):' → logprob: -9.424059867858887
    6. '"]:' → logprob: -9.674059867858887
    7. ':' → logprob: -10.174059867858887
    8. ' ":' → logprob: -10.299059867858887
    9. ' "' → logprob: -10.674059867858887
    10. '">' → logprob: -11.424059867858887

Token 39: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0554269440472126
    2. ' R' → logprob: -3.680426836013794
    3. ' :' → logprob: -4.305427074432373
    4. 'R' → logprob: -4.430427074432373
    5. '   ' → logprob: -6.555427074432373
    6. ' ' → logprob: -7.930427074432373
    7. ':R' → logprob: -8.055426597595215
    8. '):' → logprob: -8.555426597595215
    9. '	R' → logprob: -8.930426597595215
    10. ':
' → logprob: -9.055426597595215

Token 40: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.25204896926879883
    2. 'R' (adapté à ' R') → logprob: -1.5020489692687988
    3. ' ' → logprob: -9.75204849243164
    4. ' G' → logprob: -11.50204849243164
    5. '   ' → logprob: -11.62704849243164
    6. '    ' → logprob: -11.75204849243164
    7. 'G' → logprob: -11.75204849243164
    8. ' ' → logprob: -12.75204849243164
    9. '  ' → logprob: -13.00204849243164
    10. ' `' → logprob: -13.00204849243164

Token 41: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10022467374801636
    2. '.' → logprob: -2.350224733352661
    3. ' .' → logprob: -11.850224494934082
    4. '.app' → logprob: -12.225224494934082
    5. '.ap' → logprob: -12.975224494934082
    6. 'append' → logprob: -13.475224494934082
    7. '.add' → logprob: -13.600224494934082
    8. '.extend' → logprob: -15.225224494934082
    9. '.Append' → logprob: -15.225224494934082
    10. '.push' → logprob: -15.475224494934082

Token 42: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. 'i' → logprob: -15.375261306762695
    4. '(
' → logprob: -17.000261306762695
    5. '((' → logprob: -17.125261306762695
    6. ' (' → logprob: -17.375261306762695
    7. '(I' → logprob: -17.500261306762695
    8. '("("' → logprob: -17.500261306762695
    9. '(x' → logprob: -18.875261306762695
    10. '('' → logprob: -18.875261306762695

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.20734242349863e-05
    2. ' )' → logprob: -9.750072479248047
    3. ')
' → logprob: -11.250072479248047
    4. '   ' → logprob: -15.750072479248047
    5. '))' → logprob: -15.875072479248047
    6. '")' → logprob: -17.000072479248047
    7. ' ' → logprob: -17.000072479248047
    8. ')

' → logprob: -17.000072479248047
    9. '')' → logprob: -17.125072479248047
    10. '),' → logprob: -17.250072479248047

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.23787738382816315
    2. ' elif' → logprob: -1.612877368927002
    3. '   ' → logprob: -4.862877368927002
    4. '<|end|>' → logprob: -6.237877368927002
    5. ' ' → logprob: -6.737877368927002
    6. '	elif' → logprob: -6.862877368927002
    7. 'else' → logprob: -9.23787784576416
    8. '  ' → logprob: -9.36287784576416
    9. '```' → logprob: -9.73787784576416
    10. '    ' → logprob: -9.73787784576416

Token 46: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.00901018362492323
    2. ' ' → logprob: -5.134010314941406
    3. 'S' → logprob: -5.884010314941406
    4. ' ' → logprob: -8.634010314941406
    5. '<|end|>' → logprob: -9.509010314941406
    6. '  ' → logprob: -11.134010314941406
    7. '"' → logprob: -12.384010314941406
    8. 's' → logprob: -12.509010314941406
    9. ')' → logprob: -12.884010314941406
    10. ' s' → logprob: -13.259010314941406

Token 47: '[i' (ID: 1768)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32331690192222595
    2. '==' → logprob: -1.3233169317245483
    3. '[' → logprob: -5.323317050933838
    4. '[i' → logprob: -5.448317050933838
    5. '[]' → logprob: -7.198317050933838
    6. ' ' → logprob: -11.57331657409668
    7. ')' → logprob: -11.69831657409668
    8. '=' → logprob: -11.94831657409668
    9. '[a' → logprob: -12.57331657409668
    10. '[user' → logprob: -12.57331657409668

Token 48: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08896323293447495
    2. '==' → logprob: -2.463963270187378
    3. ' ' → logprob: -11.713963508605957
    4. ')' → logprob: -12.338963508605957
    5. ']==' → logprob: -12.588963508605957
    6. ']' → logprob: -12.713963508605957
    7. '=' → logprob: -13.713963508605957
    8. '=="' → logprob: -14.463963508605957
    9. ' ' → logprob: -14.588963508605957
    10. '[' → logprob: -14.588963508605957

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20143164694309235
    2. '==' → logprob: -1.7014316320419312
    3. '=' → logprob: -11.951431274414062
    4. '=="' → logprob: -12.451431274414062
    5. ' =' → logprob: -12.701431274414062
    6. ' ' → logprob: -13.076431274414062
    7. '===' → logprob: -14.201431274414062
    8. ' =="' → logprob: -14.326431274414062
    9. ' ' → logprob: -15.076431274414062
    10. ')' → logprob: -15.451431274414062

Token 50: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01579819805920124
    2. ' "' → logprob: -4.390798091888428
    3. '"G' → logprob: -6.515798091888428
    4. ''' → logprob: -6.640798091888428
    5. ' ' → logprob: -8.890798568725586
    6. ' G' → logprob: -9.015798568725586
    7. 'G' → logprob: -9.640798568725586
    8. ' ' → logprob: -9.640798568725586
    9. '"B' → logprob: -10.265798568725586
    10. '"""' → logprob: -11.140798568725586

Token 51: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.009085915051400661
    2. '"G' → logprob: -4.7590861320495605
    3. '"' → logprob: -8.009085655212402
    4. ''' → logprob: -9.134085655212402
    5. ' G' → logprob: -11.634085655212402
    6. 'B' → logprob: -12.259085655212402
    7. '""' → logprob: -12.884085655212402
    8. '")' → logprob: -13.134085655212402
    9. 'Ｇ' → logprob: -13.134085655212402
    10. '"B' → logprob: -13.259085655212402

Token 52: '":
' (ID: 9213)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.643722653388977
    2. '"):' → logprob: -0.893722653388977
    3. '):' → logprob: -3.7687225341796875
    4. ')' → logprob: -4.1437225341796875
    5. ':' → logprob: -4.3937225341796875
    6. '":' → logprob: -4.3937225341796875
    7. '"):
' → logprob: -7.1437225341796875
    8. '">' → logprob: -8.018722534179688
    9. ''):' → logprob: -8.893722534179688
    10. '"' → logprob: -9.143722534179688

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012398036196827888
    2. ':' → logprob: -4.7623982429504395
    3. ':
' → logprob: -5.8873982429504395
    4. '   ' → logprob: -7.1373982429504395
    5. ' G' → logprob: -9.387397766113281
    6. '           ' → logprob: -10.637397766113281
    7. '```' → logprob: -11.137397766113281
    8. '      ' → logprob: -11.637397766113281
    9. '     ' → logprob: -11.762397766113281
    10. '):
' → logprob: -11.762397766113281

Token 54: ' G' (ID: 499)
  Prédit: ' G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.09441351145505905
    2. 'G' (adapté à ' G') → logprob: -2.4694135189056396
    3. '       ' → logprob: -5.3444132804870605
    4. ' B' → logprob: -8.219413757324219
    5. 'B' → logprob: -8.344413757324219
    6. '   ' → logprob: -9.594413757324219
    7. '        ' → logprob: -10.219413757324219
    8. '           ' → logprob: -11.219413757324219
    9. ' ' → logprob: -11.594413757324219
    10. '	G' → logprob: -11.594413757324219

Token 55: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.38806504011154175
    2. '.' → logprob: -1.1380650997161865
    3. ' .' → logprob: -6.763064861297607
    4. ').' → logprob: -10.638065338134766
    5. '.app' → logprob: -12.013065338134766
    6. '.add' → logprob: -13.263065338134766
    7. '.setdefault' → logprob: -13.638065338134766
    8. '.extend' → logprob: -14.013065338134766
    9. '].' → logprob: -14.388065338134766
    10. ')' → logprob: -14.638065338134766

Token 56: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -14.750046730041504
    4. '(ii' → logprob: -15.000046730041504
    5. '(I' → logprob: -16.250045776367188
    6. '("("' → logprob: -17.250045776367188
    7. '((' → logprob: -17.375045776367188
    8. '(ord' → logprob: -18.500045776367188
    9. '(int' → logprob: -18.625045776367188
    10. '```' → logprob: -18.625045776367188

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.978233846486546e-05
    2. ')i' → logprob: -10.250049591064453
    3. ')
' → logprob: -11.375049591064453
    4. '   ' → logprob: -14.250049591064453
    5. 'i' → logprob: -14.375049591064453
    6. ' )' → logprob: -14.375049591064453
    7. '[i' → logprob: -15.125049591064453
    8. '(i' → logprob: -15.625049591064453
    9. '))' → logprob: -15.875049591064453
    10. '`)' → logprob: -16.500049591064453

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13728833198547363
    2. 'elif' → logprob: -2.2622883319854736
    3. ' elif' → logprob: -3.8872883319854736
    4. '```' → logprob: -6.8872880935668945
    5. '	elif' → logprob: -7.1372880935668945
    6. '  ' → logprob: -7.5122880935668945
    7. ' ' → logprob: -7.6372880935668945
    8. 'else' → logprob: -8.262288093566895
    9. ' else' → logprob: -8.512288093566895
    10. '<|end|>' → logprob: -9.262288093566895

Token 59: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.043262019753456116
    2. '   ' → logprob: -3.793262004852295
    3. ' elif' → logprob: -4.043262004852295
    4. 'B' → logprob: -6.543262004852295
    5. 'else' (adapté à ' else') → logprob: -7.918262004852295
    6. 'b' → logprob: -8.668262481689453
    7. ' B' → logprob: -8.668262481689453
    8. ' else' → logprob: -10.293262481689453
    9. ' ' → logprob: -10.293262481689453
    10. '	elif' → logprob: -10.418262481689453

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10395875573158264
    2. ':
' → logprob: -2.35395884513855
    3. '       ' → logprob: -6.228958606719971
    4. '   ' → logprob: -6.853958606719971
    5. 'B' → logprob: -8.353959083557129
    6. ' :
' → logprob: -9.228959083557129
    7. ':B' → logprob: -9.353959083557129
    8. ' :' → logprob: -9.603959083557129
    9. ' B' → logprob: -9.603959083557129
    10. '           ' → logprob: -10.478959083557129

Token 61: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.020750917494297028
    2. ' B' → logprob: -3.8957509994506836
    3. '"B' → logprob: -9.395750999450684
    4. '   ' → logprob: -9.645750999450684
    5. '       ' → logprob: -10.770750999450684
    6. '           ' → logprob: -11.395750999450684
    7. '	B' → logprob: -12.020750999450684
    8. '`' → logprob: -12.145750999450684
    9. '"' → logprob: -12.145750999450684
    10. '```' → logprob: -12.520750999450684

Token 62: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0005544631858356297
    2. ' B' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.000554084777832
    4. '  ' → logprob: -15.750554084777832
    5. '	B' → logprob: -15.750554084777832
    6. '```' → logprob: -15.875554084777832
    7. '       ' → logprob: -16.12555503845215
    8. '           ' → logprob: -16.37555503845215
    9. ' ' → logprob: -16.87555503845215
    10. 'b' → logprob: -17.12555503845215

Token 63: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3133294880390167
    2. '.append' → logprob: -1.3133294582366943
    3. '.app' → logprob: -10.688329696655273
    4. 'append' → logprob: -10.938329696655273
    5. ' .' → logprob: -11.063329696655273
    6. '.Append' → logprob: -12.938329696655273
    7. ').' → logprob: -13.188329696655273
    8. '```' → logprob: -13.938329696655273
    9. '.add' → logprob: -14.063329696655273
    10. '.ap' → logprob: -14.313329696655273

Token 64: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -9.7500581741333
    3. '(ii' → logprob: -17.875059127807617
    4. '(I' → logprob: -18.125059127807617
    5. '(int' → logprob: -18.375059127807617
    6. '(
' → logprob: -18.375059127807617
    7. 'i' → logprob: -18.625059127807617
    8. ' (' → logprob: -18.750059127807617
    9. '((' → logprob: -19.250059127807617
    10. '(index' → logprob: -19.500059127807617

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.0536883615423e-05
    2. ')i' → logprob: -9.500080108642578
    3. ' )' → logprob: -12.625080108642578
    4. '))' → logprob: -14.500080108642578
    5. '[i' → logprob: -14.625080108642578
    6. ')
' → logprob: -14.875080108642578
    7. ')`' → logprob: -15.000080108642578
    8. ')#' → logprob: -15.875080108642578
    9. ')}' → logprob: -16.125080108642578
    10. '   ' → logprob: -16.250080108642578

Token 66: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5690089639974758e-05
    2. ' for' → logprob: -11.375015258789062
    3. '```' → logprob: -13.375015258789062
    4. 'cnt' → logprob: -13.625015258789062
    5. 'from' → logprob: -14.375015258789062
    6. '
' → logprob: -14.875015258789062
    7. 'count' → logprob: -16.000015258789062
    8. 'n' → logprob: -16.375015258789062
    9. 'i' → logprob: -17.000015258789062
    10. '   ' → logprob: -17.375015258789062

Token 67: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' set' (ID: 920)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7833722233772278
    2. 'set' → logprob: -1.658372163772583
    3. 'list' → logprob: -1.908372163772583
    4. ' sorted' → logprob: -2.783372163772583
    5. ' set' → logprob: -3.033372163772583
    6. ' list' → logprob: -3.408372163772583
    7. 'B' → logprob: -3.783372163772583
    8. 'len' → logprob: -4.283372402191162
    9. '[]' → logprob: -5.033372402191162
    10. ' B' → logprob: -5.033372402191162

Token 69: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4305058419704437
    2. '(B' → logprob: -1.0555058717727661
    3. '()' → logprob: -6.555505752563477
    4. '((' → logprob: -9.180505752563477
    5. '([' → logprob: -10.430505752563477
    6. '("("' → logprob: -10.430505752563477
    7. '(range' → logprob: -10.430505752563477
    8. '(S' → logprob: -10.680505752563477
    9. '(R' → logprob: -10.805505752563477
    10. '(`' → logprob: -10.930505752563477

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009244420798495412
    2. '())' → logprob: -7.625924587249756
    3. '()' → logprob: -8.125924110412598
    4. ' )' → logprob: -8.875924110412598
    5. '))' → logprob: -15.250924110412598
    6. '(' → logprob: -15.250924110412598
    7. ')
' → logprob: -15.875924110412598
    8. ' ())' → logprob: -15.875924110412598
    9. ')`' → logprob: -16.625925064086914
    10. '),' → logprob: -17.000925064086914

Token 71: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007517361082136631
    2. ' for' → logprob: -7.375751972198486
    3. 'G' → logprob: -9.500751495361328
    4. 'count' → logprob: -11.000751495361328
    5. 'cnt' → logprob: -11.250751495361328
    6. '```' → logprob: -11.375751495361328
    7. 'R' → logprob: -13.000751495361328
    8. 'from' → logprob: -13.250751495361328
    9. '
' → logprob: -14.000751495361328
    10. ')' → logprob: -14.250751495361328

Token 72: ' =' (ID: 314)
  Prédit: '_cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.2548782527446747
    2. 'cnt' → logprob: -2.129878282546997
    3. 'nt' → logprob: -3.629878282546997
    4. '_len' → logprob: -4.004878044128418
    5. 'len' → logprob: -4.629878044128418
    6. ' =' → logprob: -4.629878044128418
    7. '=len' → logprob: -5.129878044128418
    8. 'for' → logprob: -5.379878044128418
    9. '=[]' → logprob: -5.504878044128418
    10. '_count' → logprob: -5.629878044128418

Token 73: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051915042102336884
    2. 'len' → logprob: -3.551914930343628
    3. ' ' → logprob: -3.926914930343628
    4. '[]' → logprob: -7.301915168762207
    5. '-' → logprob: -7.801915168762207
    6. ' len' → logprob: -8.551915168762207
    7. 'B' → logprob: -8.551915168762207
    8. 'list' → logprob: -8.926915168762207
    9. 'sorted' → logprob: -9.176915168762207
    10. '{}' → logprob: -9.301915168762207

Token 74: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.003732499200850725
    2. '(' → logprob: -6.003732681274414
    3. '(R' → logprob: -6.878732681274414
    4. '(G' → logprob: -9.003732681274414
    5. '(S' → logprob: -10.003732681274414
    6. 'B' → logprob: -10.378732681274414
    7. '(b' → logprob: -10.753732681274414
    8. '(A' → logprob: -13.753732681274414
    9. '(s' → logprob: -14.378732681274414
    10. '(C' → logprob: -14.628732681274414

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003268831642344594
    2. ' )' → logprob: -8.125327110290527
    3. '()' → logprob: -11.125327110290527
    4. '())' → logprob: -11.875327110290527
    5. '))' → logprob: -12.500327110290527
    6. ')
' → logprob: -12.625327110290527
    7. '(' → logprob: -14.125327110290527
    8. ')-' → logprob: -15.625327110290527
    9. ' ' → logprob: -15.750327110290527
    10. ')

' → logprob: -15.875327110290527

Token 76: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011782770976424217
    2. ' for' → logprob: -4.761782646179199
    3. '
' → logprob: -5.761782646179199
    4. '```' → logprob: -12.5117826461792
    5. '\n' → logprob: -12.7617826461792
    6. 'cnt' → logprob: -13.1367826461792
    7. '<|end|>' → logprob: -13.5117826461792
    8. ' 
' → logprob: -13.7617826461792
    9. '  
' → logprob: -13.7617826461792
    10. '

' → logprob: -14.0117826461792

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09198670089244843
    2. ' R' → logprob: -2.841986656188965
    3. ' ' → logprob: -3.841986656188965
    4. ' _' → logprob: -5.091986656188965
    5. ' r' → logprob: -7.841986656188965
    6. ' G' → logprob: -7.966986656188965
    7. 'i' → logprob: -8.716986656188965
    8. '_' → logprob: -8.716986656188965
    9. ' I' → logprob: -8.716986656188965
    10. ' x' → logprob: -8.966986656188965

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01053612120449543
    2. 'in' → logprob: -4.635536193847656
    3. ' ' → logprob: -7.510536193847656
    4. ' range' → logprob: -9.135536193847656
    5. 'range' → logprob: -9.510536193847656
    6. '  ' → logprob: -10.635536193847656
    7. '   ' → logprob: -11.760536193847656
    8. 'n' → logprob: -12.260536193847656
    9. ' i' → logprob: -12.760536193847656
    10. ')' → logprob: -12.885536193847656

Token 79: ' R' (ID: 460)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0742519348859787
    2. ' R' → logprob: -2.699251890182495
    3. 'range' → logprob: -5.699252128601074
    4. 'R' → logprob: -7.199252128601074
    5. ' ' → logprob: -9.699252128601074
    6. '(range' → logprob: -10.324252128601074
    7. ' xrange' → logprob: -10.949252128601074
    8. '  ' → logprob: -11.199252128601074
    9. ' G' → logprob: -11.386752128601074
    10. '   ' → logprob: -11.386752128601074

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036716848611831665
    2. ' :' → logprob: -3.536716938018799
    3. ' in' → logprob: -5.036716938018799
    4. 'in' → logprob: -8.03671646118164
    5. ')' → logprob: -10.16171646118164
    6. '):' → logprob: -10.66171646118164
    7. ',' → logprob: -10.78671646118164
    8. ':
' → logprob: -11.78671646118164
    9. ':**' → logprob: -12.53671646118164
    10. 'n' → logprob: -12.66171646118164

Token 81: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4953405559062958
    2. ' for' → logprob: -1.2453405857086182
    3. 'for' → logprob: -2.995340585708618
    4. '   ' → logprob: -3.495340585708618
    5. ':
' → logprob: -3.870340585708618
    6. '	for' → logprob: -8.120340347290039
    7. ' ' → logprob: -8.245340347290039
    8. '<|end|>' → logprob: -8.745340347290039
    9. '  ' → logprob: -8.870340347290039
    10. '+' → logprob: -8.870340347290039

Token 82: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4741749167442322
    2. ' for' → logprob: -0.9741749167442322
    3. '   ' → logprob: -9.349174499511719
    4. '	for' → logprob: -12.099174499511719
    5. '    ' → logprob: -13.224174499511719
    6. ' ' → logprob: -13.349174499511719
    7. '       ' → logprob: -14.349174499511719
    8. '```' → logprob: -14.849174499511719
    9. '  ' → logprob: -15.099174499511719
    10. '<|end|>' → logprob: -15.099174499511719

Token 83: ' j' (ID: 441)
  Prédit: ' G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.07103706151247025
    2. 'G' → logprob: -2.6960370540618896
    3. ' ' → logprob: -7.571037292480469
    4. ' range' → logprob: -8.571037292480469
    5. 'range' → logprob: -8.696037292480469
    6. ' j' → logprob: -9.696037292480469
    7. ')' → logprob: -10.196037292480469
    8. 'j' → logprob: -10.696037292480469
    9. '  ' → logprob: -10.821037292480469
    10. '   ' → logprob: -11.071037292480469

Token 84: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6338288187980652
    2. ' in' → logprob: -0.7588288187980652
    3. 'G' → logprob: -6.758828639984131
    4. ' G' → logprob: -10.008829116821289
    5. ' ' → logprob: -11.883829116821289
    6. 'for' → logprob: -12.258829116821289
    7. 's' → logprob: -13.133829116821289
    8. '   ' → logprob: -13.383829116821289
    9. ')' → logprob: -13.883829116821289
    10. '=' → logprob: -14.133829116821289

Token 85: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.03807351365685463
    2. ' G' → logprob: -3.2880735397338867
    3. ' ' → logprob: -11.038073539733887
    4. '   ' → logprob: -11.788073539733887
    5. '	G' → logprob: -13.038073539733887
    6. 'range' → logprob: -13.413073539733887
    7. ' range' → logprob: -14.225573539733887
    8. '  ' → logprob: -14.350573539733887
    9. ' ' → logprob: -14.600573539733887
    10. '_G' → logprob: -14.975573539733887

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.6934557505883276e-05
    2. ':
' → logprob: -10.250057220458984
    3. ' :' → logprob: -11.000057220458984
    4. ' in' → logprob: -13.625057220458984
    5. '):' → logprob: -14.000057220458984
    6. '   ' → logprob: -14.000057220458984
    7. ')' → logprob: -15.125057220458984
    8. 's' → logprob: -15.250057220458984
    9. ':

' → logprob: -15.375057220458984
    10. '<|end|>' → logprob: -15.875057220458984

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18236854672431946
    2. ':' → logprob: -1.807368516921997
    3. ':
' → logprob: -7.557368755340576
    4. '<|end|>' → logprob: -7.932368755340576
    5. ' :' → logprob: -8.182368278503418
    6. '        ' → logprob: -8.307368278503418
    7. ' ' → logprob: -8.432368278503418
    8. '        
' → logprob: -8.557368278503418
    9. '```' → logprob: -8.932368278503418
    10. '   ' → logprob: -9.307368278503418

Token 88: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39474159479141235
    2. 'cnt' → logprob: -1.8947415351867676
    3. 'k' → logprob: -2.5197415351867676
    4. ' cnt' → logprob: -3.0197415351867676
    5. 'if' → logprob: -3.8947415351867676
    6. ' if' → logprob: -5.144741535186768
    7. 'x' → logprob: -5.394741535186768
    8. '       ' → logprob: -5.644741535186768
    9. 'count' → logprob: -6.019741535186768
    10. ' k' → logprob: -6.144741535186768

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5082118511199951
    2. ' if' → logprob: -1.6332118511199951
    3. 'if' → logprob: -2.383211851119995
    4. '_' → logprob: -3.258211851119995
    5. '=' → logprob: -3.508211851119995
    6. ' ' → logprob: -3.633211851119995
    7. 's' → logprob: -5.508212089538574
    8. '_idx' → logprob: -6.008212089538574
    9. 'k' → logprob: -6.758212089538574
    10. '   ' → logprob: -7.008212089538574

Token 90: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3597294092178345
    2. 'abs' → logprob: -1.3597294092178345
    3. '(i' → logprob: -2.359729290008545
    4. '(abs' → logprob: -2.484729290008545
    5. '(' → logprob: -2.609729290008545
    6. '3' → logprob: -2.984729290008545
    7. 'b' → logprob: -3.234729290008545
    8. '(b' → logprob: -3.484729290008545
    9. '(R' → logprob: -3.734729290008545
    10. ' (' → logprob: -4.484729290008545

Token 91: '0' (ID: 15)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.36393997073173523
    2. '2' → logprob: -2.7389400005340576
    3. 'i' → logprob: -2.7389400005340576
    4. 'j' → logprob: -2.8639400005340576
    5. '(i' → logprob: -3.8639400005340576
    6. 'N' → logprob: -4.3639397621154785
    7. 'R' → logprob: -4.4889397621154785
    8. '(abs' → logprob: -4.4889397621154785
    9. '{' → logprob: -4.7389397621154785
    10. 'b' → logprob: -4.9889397621154785

Token 92: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013841301202774048
    2. '<|end|>' → logprob: -4.888841152191162
    3. '	' → logprob: -6.263841152191162
    4. ' for' → logprob: -7.138841152191162
    5. 'for' → logprob: -7.388841152191162
    6. ' ' → logprob: -7.388841152191162
    7. '   ' → logprob: -7.513841152191162
    8. '
' → logprob: -8.13884162902832
    9. '        
' → logprob: -8.26384162902832
    10. '           ' → logprob: -8.51384162902832

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.268254896393046e-05
    2. '<|end|>' → logprob: -10.250082969665527
    3. '   ' → logprob: -10.750082969665527
    4. ' for' → logprob: -12.000082969665527
    5. '      ' → logprob: -12.500082969665527
    6. '           ' → logprob: -12.625082969665527
    7. '	' → logprob: -13.000082969665527
    8. '#' → logprob: -13.500082969665527
    9. '```' → logprob: -13.500082969665527
    10. ' ' → logprob: -13.750082969665527

Token 94: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12202532589435577
    2. '       ' → logprob: -2.87202525138855
    3. ' for' → logprob: -3.62202525138855
    4. 'k' → logprob: -3.87202525138855
    5. 'if' → logprob: -4.872025489807129
    6. 'while' → logprob: -6.997025489807129
    7. 'd' → logprob: -7.747025489807129
    8. ' k' → logprob: -7.747025489807129
    9. '           ' → logprob: -7.997025489807129
    10. ' if' → logprob: -8.122025489807129

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4621732831001282
    2. '=' → logprob: -1.0871732234954834
    3. 'id' → logprob: -3.8371732234954834
    4. 'iddle' → logprob: -5.5871734619140625
    5. 'ax' → logprob: -5.9621734619140625
    6. 'for' → logprob: -6.5871734619140625
    7. 'in' → logprob: -6.5871734619140625
    8. 'ult' → logprob: -7.7121734619140625
    9. '=k' → logprob: -8.462173461914062
    10. '=i' → logprob: -8.712173461914062

Token 96: ' min' (ID: 1349)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2068265676498413
    2. '(i' → logprob: -1.3318265676498413
    3. ' abs' → logprob: -1.8318265676498413
    4. 'abs' → logprob: -2.581826686859131
    5. ' i' → logprob: -2.581826686859131
    6. 'i' → logprob: -2.956826686859131
    7. '(abs' → logprob: -3.956826686859131
    8. ' ' → logprob: -4.206826686859131
    9. ' j' → logprob: -4.331826686859131
    10. '2' → logprob: -4.706826686859131

Token 97: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.6100132496794686e-05
    2. '(abs' → logprob: -10.125056266784668
    3. '(' → logprob: -11.375056266784668
    4. 'abs' → logprob: -13.000056266784668
    5. '(j' → logprob: -13.750056266784668
    6. 'i' → logprob: -14.125056266784668
    7. '(len' → logprob: -16.37505531311035
    8. '[i' → logprob: -16.62505531311035
    9. '((' → logprob: -17.37505531311035
    10. '([' → logprob: -17.50005531311035

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19266285002231598
    2. ',j' → logprob: -2.4426629543304443
    3. 'j' → logprob: -2.5676629543304443
    4. ' ,' → logprob: -4.692662715911865
    5. ' j' → logprob: -6.067662715911865
    6. '(j' → logprob: -9.817663192749023
    7. ')' → logprob: -11.192663192749023
    8. ',
' → logprob: -11.442663192749023
    9. '+j' → logprob: -12.067663192749023
    10. ',len' → logprob: -12.192663192749023

Token 99: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0205562524497509
    2. ' j' → logprob: -3.8955562114715576
    3. '   ' → logprob: -11.645556449890137
    4. ' ' → logprob: -12.270556449890137
    5. '  ' → logprob: -14.770556449890137
    6. '	j' → logprob: -15.395556449890137
    7. '    ' → logprob: -16.14555549621582
    8. '       ' → logprob: -16.64555549621582
    9. ')' → logprob: -17.02055549621582
    10. '     ' → logprob: -17.14555549621582

Token 100: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25300559401512146
    2. ')' → logprob: -1.5030056238174438
    3. '       ' → logprob: -7.503005504608154
    4. ' )
' → logprob: -8.003005981445312
    5. ' )' → logprob: -10.003005981445312
    6. ')
' → logprob: -10.253005981445312
    7. ')-' → logprob: -10.503005981445312
    8. '*' → logprob: -10.628005981445312
    9. '-' → logprob: -11.253005981445312
    10. ' -' → logprob: -11.878005981445312

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007002120837569237
    2. 'k' → logprob: -6.382002353668213
    3. ' k' → logprob: -6.507002353668213
    4. ',' → logprob: -6.882002353668213
    5. '<|end|>' → logprob: -6.882002353668213
    6. ',k' → logprob: -7.257002353668213
    7. '        
' → logprob: -8.757001876831055
    8. 'n' → logprob: -8.882001876831055
    9. ' l' → logprob: -8.882001876831055
    10. ' for' → logprob: -9.257001876831055

Token 102: ' M' (ID: 391)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8731164932250977
    2. 'x' → logprob: -0.8731164932250977
    3. '       ' → logprob: -2.8731164932250977
    4. 'ax' → logprob: -3.3731164932250977
    5. 'M' (adapté à ' M') → logprob: -3.8731164932250977
    6. 'l' → logprob: -4.248116493225098
    7. ' n' → logprob: -4.623116493225098
    8. 'k' → logprob: -4.748116493225098
    9. ' M' → logprob: -5.123116493225098
    10. ' ' → logprob: -5.373116493225098

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021787881851196
    2. '=' → logprob: -2.350217819213867
    3. ' ' → logprob: -12.225217819213867
    4. '   ' → logprob: -12.725217819213867
    5. '       ' → logprob: -13.975217819213867
    6. '        ' → logprob: -14.475217819213867
    7. '    ' → logprob: -14.600217819213867
    8. '  ' → logprob: -14.975217819213867
    9. ',' → logprob: -15.100217819213867
    10. 'ax' → logprob: -15.600217819213867

Token 104: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.03805067762732506
    2. 'max' → logprob: -3.288050651550293
    3. ' ' → logprob: -11.663050651550293
    4. '(max' → logprob: -15.413050651550293
    5. '	max' → logprob: -15.788050651550293
    6. '=max' → logprob: -15.788050651550293
    7. '   ' → logprob: -16.16305160522461
    8. '  ' → logprob: -17.66305160522461
    9. '[max' → logprob: -17.91305160522461
    10. ',max' → logprob: -19.16305160522461

Token 105: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006392885115928948
    2. '(' → logprob: -7.37563943862915
    3. ' (' → logprob: -11.500638961791992
    4. '(I' → logprob: -14.375638961791992
    5. '(k' → logprob: -14.375638961791992
    6. '(m' → logprob: -14.625638961791992
    7. ' ' → logprob: -15.625638961791992
    8. 'i' → logprob: -15.750638961791992
    9. ')' → logprob: -15.750638961791992
    10. '()' → logprob: -16.000638961791992

Token 106: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020294437126722187
    2. '(m' → logprob: -9.500203132629395
    3. ',' → logprob: -9.875203132629395
    4. ' (' → logprob: -10.000203132629395
    5. '(' → logprob: -10.750203132629395
    6. ')' → logprob: -12.625203132629395
    7. '       ' → logprob: -12.875203132629395
    8. '(j' → logprob: -14.250203132629395
    9. ',i' → logprob: -14.250203132629395
    10. ' ,' → logprob: -14.375203132629395

Token 107: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15198703110218048
    2. ' j' → logprob: -2.026987075805664
    3. 'i' → logprob: -5.026987075805664
    4. ' i' → logprob: -6.026987075805664
    5. 'm' → logprob: -9.151987075805664
    6. ' ' → logprob: -9.526987075805664
    7. ' m' → logprob: -9.901987075805664
    8. '   ' → logprob: -10.526987075805664
    9. ')' → logprob: -11.151987075805664
    10. '    ' → logprob: -12.026987075805664

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11037947982549667
    2. ')
' → logprob: -2.610379457473755
    3. '       ' → logprob: -3.485379457473755
    4. ')
' → logprob: -8.985379219055176
    5. '<|end|>' → logprob: -9.485379219055176
    6. ' )' → logprob: -9.610379219055176
    7. '<|end|>' → logprob: -10.735379219055176
    8. '):
' → logprob: -10.860379219055176
    9. ')

' → logprob: -11.860379219055176
    10. '```' → logprob: -12.360379219055176

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009165783412754536
    2. '        
' → logprob: -7.625916481018066
    3. '<|end|>' → logprob: -8.125916481018066
    4. '
' → logprob: -9.750916481018066
    5. '  
' → logprob: -10.750916481018066
    6. ' for' → logprob: -11.375916481018066
    7. '<|end|>' → logprob: -11.750916481018066
    8. ',' → logprob: -12.125916481018066
    9. '           ' → logprob: -12.625916481018066
    10. '```' → logprob: -12.625916481018066

Token 110: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01365670282393694
    2. 'for' → logprob: -5.0136566162109375
    3. ' for' → logprob: -5.0136566162109375
    4. '```' → logprob: -8.763656616210938
    5. 'k' → logprob: -10.013656616210938
    6. '        
' → logprob: -11.138656616210938
    7. '<|end|>' → logprob: -11.513656616210938
    8. ' k' → logprob: -11.513656616210938
    9. '           ' → logprob: -12.388656616210938
    10. '
' → logprob: -12.388656616210938

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1120903491973877
    2. 'em' → logprob: -1.3620903491973877
    3. 'es' → logprob: -1.9870903491973877
    4. 'ange' → logprob: -2.6120903491973877
    5. 'ight' → logprob: -2.9870903491973877
    6. 'e' → logprob: -3.4870903491973877
    7. 'for' → logprob: -3.7370903491973877
    8. '=' → logprob: -3.9870903491973877
    9. 'r' → logprob: -4.237090110778809
    10. ' -=' → logprob: -5.487090110778809

Token 112: ' M' (ID: 391)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7526177763938904
    2. 'M' → logprob: -1.3776178359985352
    3. ' b' → logprob: -2.377617835998535
    4. ' M' → logprob: -2.377617835998535
    5. 'R' → logprob: -4.377617835998535
    6. ' (' → logprob: -4.377617835998535
    7. 'B' → logprob: -4.752617835998535
    8. 'm' → logprob: -5.002617835998535
    9. 'len' → logprob: -5.002617835998535
    10. '(b' → logprob: -5.002617835998535

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4680454134941101
    2. '-' → logprob: -1.0930454730987549
    3. '-r' → logprob: -3.343045473098755
    4. '-i' → logprob: -6.468045234680176
    5. '+' → logprob: -8.093045234680176
    6. '-m' → logprob: -8.343045234680176
    7. ' +' → logprob: -8.468045234680176
    8. ' ' → logprob: -8.718045234680176
    9. '-l' → logprob: -8.718045234680176
    10. 'ange' → logprob: -8.843045234680176

Token 114: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.842555426876061e-06
    2. ' m' → logprob: -12.250004768371582
    3. ' ' → logprob: -17.8750057220459
    4. '	m' → logprob: -18.2500057220459
    5. '1' → logprob: -19.2500057220459
    6. '2' → logprob: -19.7500057220459
    7. 'check' → logprob: -19.8750057220459
    8. 'i' → logprob: -20.3750057220459
    9. '<m' → logprob: -20.8750057220459
    10. '   ' → logprob: -20.8750057220459

Token 115: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1148970127105713
    2. ' for' → logprob: -1.2398970127105713
    3. 'for' → logprob: -1.4898970127105713
    4. '       ' → logprob: -2.6148970127105713
    5. '2' → logprob: -3.3648970127105713
    6. 'r' → logprob: -3.9898970127105713
    7. ' ' → logprob: -4.364896774291992
    8. '<|end|>' → logprob: -5.739896774291992
    9. '<|end|>' → logprob: -5.989896774291992
    10. ' r' → logprob: -6.239896774291992

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08599209040403366
    2. 'for' → logprob: -2.9609920978546143
    3. ' for' → logprob: -3.9609920978546143
    4. '
' → logprob: -5.085991859436035
    5. '<|end|>' → logprob: -5.835991859436035
    6. '        
' → logprob: -6.835991859436035
    7. ' ' → logprob: -8.460991859436035
    8. '   ' → logprob: -8.460991859436035
    9. '           ' → logprob: -8.960991859436035
    10. '  
' → logprob: -9.210991859436035

Token 117: ' left' (ID: 3561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25801458954811096
    2. 'if' → logprob: -1.6330145597457886
    3. ' for' → logprob: -4.258014678955078
    4. 'cnt' → logprob: -5.383014678955078
    5. ' if' → logprob: -5.508014678955078
    6. '       ' → logprob: -5.633014678955078
    7. 'k' → logprob: -5.758014678955078
    8. '
' → logprob: -7.508014678955078
    9. 'count' → logprob: -7.633014678955078
    10. 'd' → logprob: -8.258014678955078

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10243421047925949
    2. '=' → logprob: -2.3524341583251953
    3. ' ' → logprob: -6.977434158325195
    4. ',' → logprob: -7.852434158325195
    5. '_' → logprob: -8.602434158325195
    6. '_idx' → logprob: -8.977434158325195
    7. '   ' → logprob: -9.727434158325195
    8. 'check' → logprob: -9.852434158325195
    9. 'over' → logprob: -10.102434158325195
    10. 'for' → logprob: -10.102434158325195

Token 119: ' m' (ID: 284)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5358017683029175
    2. 'm' → logprob: -1.0358017683029175
    3. 'r' → logprob: -3.785801887512207
    4. ' M' → logprob: -4.660801887512207
    5. '1' → logprob: -5.035801887512207
    6. '0' → logprob: -5.285801887512207
    7. 'max' → logprob: -5.410801887512207
    8. ' m' → logprob: -5.785801887512207
    9. 'b' → logprob: -6.035801887512207
    10. ' ' → logprob: -6.660801887512207

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0036531686782837
    2. '+' → logprob: -1.2536531686782837
    3. '-' → logprob: -1.3786531686782837
    4. ' +' → logprob: -2.378653049468994
    5. '+r' → logprob: -6.003653049468994
    6. '-r' → logprob: -7.253653049468994
    7. '   ' → logprob: -9.878653526306152
    8. '       ' → logprob: -10.003653526306152
    9. 'r' → logprob: -10.253653526306152
    10. ' ' → logprob: -11.003653526306152

Token 121: ' r' (ID: 428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.359486848115921
    2. 'r' → logprob: -1.2344868183135986
    3. ' ' → logprob: -4.984487056732178
    4. ' r' → logprob: -5.609487056732178
    5. '(r' → logprob: -8.48448657989502
    6. ' (' → logprob: -8.60948657989502
    7. '(' → logprob: -10.23448657989502
    8. '0' → logprob: -11.79698657989502
    9. '2' → logprob: -12.04698657989502
    10. '   ' → logprob: -12.54698657989502

Token 122: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11835101991891861
    2. 'for' → logprob: -2.4933509826660156
    3. 'if' → logprob: -4.243350982666016
    4. ' for' → logprob: -5.118350982666016
    5. 'while' → logprob: -6.118350982666016
    6. ' if' → logprob: -6.368350982666016
    7. '        
' → logprob: -6.493350982666016
    8. '<|end|>' → logprob: -6.743350982666016
    9. '	' → logprob: -7.493350982666016
    10. '	for' → logprob: -8.243350982666016

Token 123: '       ' (ID: 309)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.82313072681427
    2. ' if' → logprob: -1.69813072681427
    3. '<|end|>' → logprob: -1.82313072681427
    4. 'if' → logprob: -2.4481306076049805
    5. '>=' → logprob: -2.8231306076049805
    6. ';' → logprob: -3.9481306076049805
    7. ' ' → logprob: -4.4481306076049805
    8. ' <' → logprob: -4.9481306076049805
    9. ',' → logprob: -5.0731306076049805
    10. '       ' → logprob: -5.1981306076049805

Token 124: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4634493291378021
    2. '>=' → logprob: -1.0884493589401245
    3. 'right' (adapté à ' right') → logprob: -3.963449239730835
    4. ' if' → logprob: -4.838449478149414
    5. ' >=' → logprob: -5.213449478149414
    6. ' right' → logprob: -7.588449478149414
    7. '>' → logprob: -7.838449478149414
    8. '0' → logprob: -8.213449478149414
    9. 'while' → logprob: -9.338449478149414
    10. 'for' → logprob: -9.463449478149414

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022513806819916
    2. '=' → logprob: -1.9102251529693604
    3. '>' → logprob: -15.160224914550781
    4. ' ' → logprob: -15.535224914550781
    5. ' +=' → logprob: -16.03522491455078
    6. ' ==' → logprob: -16.03522491455078
    7. ' <=' → logprob: -16.53522491455078
    8. ')' → logprob: -16.66022491455078
    9. ' =)' → logprob: -16.78522491455078
    10. ',' → logprob: -17.03522491455078

Token 126: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16070802509784698
    2. ' M' → logprob: -1.9107080698013306
    3. ' ' → logprob: -7.660707950592041
    4. 'm' → logprob: -12.0357084274292
    5. '  ' → logprob: -13.2857084274292
    6. '   ' → logprob: -13.4107084274292
    7. '     ' → logprob: -14.5357084274292
    8. '	M' → logprob: -14.6607084274292
    9. '    ' → logprob: -14.7857084274292
    10. '
' → logprob: -15.0357084274292

Token 127: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5233075618743896
    2. ' +' → logprob: -0.8983075618743896
    3. '+r' → logprob: -8.648307800292969
    4. ' ' → logprob: -13.148307800292969
    5. '+
' → logprob: -13.273307800292969
    6. '+j' → logprob: -13.898307800292969
    7. ' +
' → logprob: -14.773307800292969
    8. '=' → logprob: -15.148307800292969
    9. ' plus' → logprob: -15.148307800292969
    10. '+k' → logprob: -15.148307800292969

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00034595211036503315
    2. ' r' → logprob: -8.000346183776855
    3. '1' → logprob: -11.500346183776855
    4. '<|end|>' → logprob: -15.375346183776855
    5. ' ' → logprob: -16.25034523010254
    6. ')' → logprob: -18.62534523010254
    7. '	r' → logprob: -18.62534523010254
    8. '_r' → logprob: -19.00034523010254
    9. '0' → logprob: -19.12534523010254
    10. '   ' → logprob: -19.12534523010254

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007366549223661423
    2. '<|end|>' → logprob: -6.00736665725708
    3. '
' → logprob: -6.25736665725708
    4. 'for' → logprob: -6.50736665725708
    5. 'if' → logprob: -7.75736665725708
    6. ' for' → logprob: -7.88236665725708
    7. '        
' → logprob: -8.382366180419922
    8. ' if' → logprob: -9.257366180419922
    9. '```' → logprob: -10.007366180419922
    10. '<|end|>' → logprob: -10.007366180419922

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0696374922990799
    2. '
' → logprob: -2.8196375370025635
    3. ' if' → logprob: -6.069637298583984
    4. '<|end|>' → logprob: -6.194637298583984
    5. 'if' → logprob: -6.569637298583984
    6. '        
' → logprob: -7.319637298583984
    7. ' ' → logprob: -8.819637298583984
    8. '           ' → logprob: -8.819637298583984
    9. '   ' → logprob: -8.944637298583984
    10. '\n' → logprob: -9.194637298583984

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.037703461945056915
    2. ' if' → logprob: -3.912703514099121
    3. '       ' → logprob: -4.412703514099121
    4. 'for' → logprob: -5.412703514099121
    5. '
' → logprob: -8.412703514099121
    6. ' for' → logprob: -9.412703514099121
    7. 'cnt' → logprob: -10.162703514099121
    8. '        
' → logprob: -10.412703514099121
    9. '   ' → logprob: -11.037703514099121
    10. ' ' → logprob: -11.787703514099121

Token 132: ' r' (ID: 428)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2689147889614105
    2. 'left' → logprob: -1.518914818763733
    3. ' right' → logprob: -4.518914699554443
    4. 'right' → logprob: -6.268914699554443
    5. '0' → logprob: -6.643914699554443
    6. ' (' → logprob: -7.018914699554443
    7. '(left' → logprob: -7.018914699554443
    8. ' ' → logprob: -7.393914699554443
    9. '(' → logprob: -9.018915176391602
    10. ' check' → logprob: -9.518915176391602

Token 133: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20470140874385834
    2. ' <' → logprob: -2.5797014236450195
    3. '>' → logprob: -2.8297014236450195
    4. ' <=' → logprob: -3.4547014236450195
    5. ' >=' → logprob: -4.9547014236450195
    6. ' ==' → logprob: -5.0797014236450195
    7. ' !=' → logprob: -6.4547014236450195
    8. '<' → logprob: -6.7047014236450195
    9. ' ' → logprob: -7.0797014236450195
    10. '<=' → logprob: -7.5797014236450195

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20660088956356049
    2. ' ' → logprob: -1.9566009044647217
    3. '3' → logprob: -3.9566009044647217
    4. '!=' → logprob: -4.456600666046143
    5. '=' → logprob: -4.581600666046143
    6. '!' → logprob: -5.831600666046143
    7. '==' → logprob: -6.831600666046143
    8. ' !=' → logprob: -9.3316011428833
    9. '1' → logprob: -9.9566011428833
    10. '>' → logprob: -9.9566011428833

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00729377381503582
    2. '3' → logprob: -5.007293701171875
    3. ' ' → logprob: -7.882293701171875
    4. '!=' → logprob: -9.132293701171875
    5. '1' → logprob: -10.257293701171875
    6. '!' → logprob: -10.507293701171875
    7. '==' → logprob: -11.882293701171875
    8. '>' → logprob: -12.257293701171875
    9. '=' → logprob: -12.882293701171875
    10. ' !=' → logprob: -13.257293701171875

Token 136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9716537594795227
    2. '==' → logprob: -1.221653699874878
    3. ' !=' → logprob: -1.721653699874878
    4. '!=' → logprob: -1.971653699874878
    5. '=' → logprob: -5.096653938293457
    6. '0' → logprob: -6.721653938293457
    7. ' ' → logprob: -7.346653938293457
    8. ':' → logprob: -8.346653938293457
    9. '!' → logprob: -8.971653938293457
    10. ' =' → logprob: -9.096653938293457

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07537055760622025
    2. '1' → logprob: -2.8253705501556396
    3. ' ' → logprob: -4.325370788574219
    4. '2' → logprob: -9.575370788574219
    5. '```' → logprob: -12.762870788574219
    6. '=' → logprob: -13.450370788574219
    7. '  ' → logprob: -13.637870788574219
    8. '!' → logprob: -14.075370788574219
    9. '   ' → logprob: -14.262870788574219
    10. '3' → logprob: -14.450370788574219

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057020850479602814
    2. '1' → logprob: -2.932020902633667
    3. ' ' → logprob: -6.432020664215088
    4. '2' → logprob: -7.557020664215088
    5. '==' → logprob: -13.807021141052246
    6. '```' → logprob: -13.807021141052246
    7. '=' → logprob: -14.432021141052246
    8. '3' → logprob: -14.619521141052246
    9. '!=' → logprob: -14.744521141052246
    10. '!' → logprob: -15.119521141052246

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002744365716353059
    2. ' and' → logprob: -6.252744197845459
    3. ':
' → logprob: -7.252744197845459
    4. '           ' → logprob: -9.877744674682617
    5. ' or' → logprob: -11.002744674682617
    6. 'and' → logprob: -11.377744674682617
    7. '       ' → logprob: -11.627744674682617
    8. ',' → logprob: -11.627744674682617
    9. ' :' → logprob: -11.877744674682617
    10. '   ' → logprob: -14.377744674682617

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009580892510712147
    2. 'if' → logprob: -5.259581089019775
    3. ' if' → logprob: -6.509581089019775
    4. 'cnt' → logprob: -6.884581089019775
    5. 'check' → logprob: -7.509581089019775
    6. ' cnt' → logprob: -8.009580612182617
    7. '               ' → logprob: -8.259580612182617
    8. '       ' → logprob: -8.259580612182617
    9. ' check' → logprob: -8.384580612182617
    10. 'continue' → logprob: -9.384580612182617

Token 141: ' center' (ID: 6170)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3637179434299469
    2. 'if' → logprob: -1.9887179136276245
    3. 'check' → logprob: -2.363718032836914
    4. 'continue' → logprob: -3.613718032836914
    5. 'cnt' → logprob: -4.113718032836914
    6. ' if' → logprob: -4.613718032836914
    7. ' check' → logprob: -4.613718032836914
    8. '       ' → logprob: -5.738718032836914
    9. ' cnt' → logprob: -6.238718032836914
    10. '               ' → logprob: -6.238718032836914

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995176523923874
    2. '=' → logprob: -2.6949517726898193
    3. ' ' → logprob: -11.944952011108398
    4. ' ' → logprob: -13.194952011108398
    5. '_' → logprob: -13.694952011108398
    6. 'x' → logprob: -14.194952011108398
    7. '   ' → logprob: -14.319952011108398
    8. '=center' → logprob: -14.319952011108398
    9. 's' → logprob: -14.444952011108398
    10. 'if' → logprob: -14.694952011108398

Token 143: ' m' (ID: 284)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08092305809259415
    2. '(m' → logprob: -2.705923080444336
    3. ' m' → logprob: -5.205923080444336
    4. 'm' → logprob: -5.705923080444336
    5. '(' → logprob: -6.330923080444336
    6. '(M' → logprob: -9.205923080444336
    7. ' M' → logprob: -10.205923080444336
    8. ' ' → logprob: -10.205923080444336
    9. '(int' → logprob: -10.580923080444336
    10. 'M' → logprob: -10.580923080444336

Token 144: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5326879620552063
    2. '+' → logprob: -0.9076879620552063
    3. '+r' → logprob: -4.657688140869141
    4. ' -' → logprob: -11.40768814086914
    5. '-' → logprob: -12.03268814086914
    6. ' ' → logprob: -13.28268814086914
    7. ' plus' → logprob: -13.28268814086914
    8. '+i' → logprob: -13.40768814086914
    9. '+(' → logprob: -14.03268814086914
    10. '+k' → logprob: -14.15768814086914

Token 145: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019368429202586412
    2. '(r' → logprob: -6.251936912536621
    3. ' r' → logprob: -12.126936912536621
    4. ' (' → logprob: -13.126936912536621
    5. '(' → logprob: -14.751936912536621
    6. '
' → logprob: -15.751936912536621
    7. '_r' → logprob: -16.626935958862305
    8. '	r' → logprob: -17.001935958862305
    9. '\' → logprob: -17.126935958862305
    10. '   ' → logprob: -17.126935958862305

Token 146: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.003183420980349183
    2. ' //' → logprob: -5.753183364868164
    3. '#' → logprob: -12.753183364868164
    4. ' ' → logprob: -13.878183364868164
    5. '//=' → logprob: -14.378183364868164
    6. ' ' → logprob: -14.503183364868164
    7. '>>' → logprob: -15.753183364868164
    8. '           ' → logprob: -16.003183364868164
    9. '2' → logprob: -16.003183364868164
    10. '/' → logprob: -16.128183364868164

Token 147: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.87504005432129
    4. '           ' → logprob: -18.50004005432129
    5. '۲' → logprob: -19.87504005432129
    6. '  ' → logprob: -20.12504005432129
    7. '２' → logprob: -20.37504005432129
    8. '1' → logprob: -21.12504005432129
    9. '(' → logprob: -21.12504005432129
    10. '२' → logprob: -21.31254005432129

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.0000057220459
    4. '۲' → logprob: -20.0000057220459
    5. '1' → logprob: -20.1250057220459
    6. '２' → logprob: -20.9375057220459
    7. '  ' → logprob: -20.9375057220459
    8. '२' → logprob: -21.3125057220459
    9. '```' → logprob: -21.5625057220459
    10. '212' → logprob: -21.6875057220459

Token 149: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010600169189274311
    2. '<|end|>' → logprob: -4.8856000900268555
    3. '               ' → logprob: -6.7606000900268555
    4. '
' → logprob: -7.0106000900268555
    5. '<|end|>' → logprob: -8.635600090026855
    6. ' if' → logprob: -8.885600090026855
    7. '            
' → logprob: -9.010600090026855
    8. '       ' → logprob: -9.010600090026855
    9. '		' → logprob: -9.135600090026855
    10. ',' → logprob: -10.010600090026855

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005820717662572861
    2. '<|end|>' → logprob: -5.3808207511901855
    3. '               ' → logprob: -7.5058207511901855
    4. '
' → logprob: -8.630820274353027
    5. '       ' → logprob: -8.630820274353027
    6. '<|end|>' → logprob: -9.505820274353027
    7. '            
' → logprob: -10.130820274353027
    8. ' if' → logprob: -10.255820274353027
    9. '		' → logprob: -10.255820274353027
    10. 'continue' → logprob: -11.130820274353027

Token 151: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005330401472747326
    2. '           ' → logprob: -5.255330562591553
    3. ' if' → logprob: -9.755330085754395
    4. 'check' → logprob: -10.630330085754395
    5. '       ' → logprob: -12.380330085754395
    6. 'continue' → logprob: -12.505330085754395
    7. '               ' → logprob: -13.255330085754395
    8. '            
' → logprob: -13.380330085754395
    9. '
' → logprob: -14.005330085754395
    10. 'count' → logprob: -14.755330085754395

Token 152: ' center' (ID: 6170)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16035328805446625
    2. ' S' → logprob: -2.785353183746338
    3. 'center' → logprob: -3.035353183746338
    4. ' center' → logprob: -4.160353183746338
    5. '(center' → logprob: -4.410353183746338
    6. '(S' → logprob: -5.410353183746338
    7. ' (' → logprob: -5.910353183746338
    8. '(' → logprob: -7.535353183746338
    9. ' ' → logprob: -7.785353183746338
    10. 'len' → logprob: -8.035353660583496

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2214396446943283
    2. ' not' → logprob: -1.7214395999908447
    3. 'in' → logprob: -4.096439838409424
    4. 'not' → logprob: -5.846439838409424
    5. ' ' → logprob: -8.471439361572266
    6. ')' → logprob: -11.096439361572266
    7. ' !=' → logprob: -11.346439361572266
    8. '>' → logprob: -11.346439361572266
    9. ' <' → logprob: -11.846439361572266
    10. '<|end|>' → logprob: -11.846439361572266

Token 154: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.009929148480296135
    2. ' B' → logprob: -4.634929180145264
    3. 'S' → logprob: -8.759928703308105
    4. 'R' → logprob: -12.384928703308105
    5. ' ' → logprob: -12.509928703308105
    6. '	B' → logprob: -12.634928703308105
    7. ' S' → logprob: -13.384928703308105
    8. '   ' → logprob: -14.134928703308105
    9. '[B' → logprob: -14.634928703308105
    10. '(B' → logprob: -14.884928703308105

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010313981212675571
    2. ' and' → logprob: -4.760313987731934
    3. ':
' → logprob: -7.010313987731934
    4. '           ' → logprob: -8.135313987731934
    5. 'and' → logprob: -8.760313987731934
    6. '):' → logprob: -8.885313987731934
    7. ' or' → logprob: -9.135313987731934
    8. '               ' → logprob: -10.635313987731934
    9. '<|end|>' → logprob: -11.010313987731934
    10. ')' → logprob: -11.635313987731934

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07991635054349899
    2. 'cnt' → logprob: -3.20491623878479
    3. '           ' → logprob: -3.45491623878479
    4. 'continue' → logprob: -5.704916477203369
    5. '                   ' → logprob: -7.454916477203369
    6. ' cnt' → logprob: -8.079916000366211
    7. '	cnt' → logprob: -8.829916000366211
    8. '	           ' → logprob: -10.204916000366211
    9. 'count' → logprob: -10.329916000366211
    10. 'check' → logprob: -10.829916000366211

Token 157: ' check' (ID: 2371)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1140398234128952
    2. '               ' → logprob: -3.489039897918701
    3. 'continue' → logprob: -3.489039897918701
    4. '                   ' → logprob: -3.989039897918701
    5. ' cnt' → logprob: -4.114039897918701
    6. 'check' (adapté à ' check') → logprob: -4.864039897918701
    7. '           ' → logprob: -6.489039897918701
    8. '	cnt' → logprob: -6.864039897918701
    9. ' continue' → logprob: -8.114039421081543
    10. 'count' → logprob: -8.364039421081543

Token 158: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2843397855758667
    2. ' =' → logprob: -1.9093397855758667
    3. '+=' → logprob: -2.7843399047851562
    4. '=' → logprob: -3.2843399047851562
    5. '   ' → logprob: -10.784339904785156
    6. ' -=' → logprob: -10.909339904785156
    7. ' ' → logprob: -11.409339904785156
    8. ' ==' → logprob: -12.284339904785156
    9. '+' → logprob: -12.784339904785156
    10. '    ' → logprob: -12.784339904785156

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043686782009899616
    2. ' ' → logprob: -7.750436782836914
    3. 'b' → logprob: -12.125436782836914
    4. ' b' → logprob: -15.500436782836914
    5. '2' → logprob: -16.250436782836914
    6. '   ' → logprob: -16.875436782836914
    7. 'cnt' → logprob: -17.437936782836914
    8. '3' → logprob: -17.500436782836914
    9. '100' → logprob: -17.687936782836914
    10. 'len' → logprob: -17.687936782836914

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024263552040793002
    2. 'b' → logprob: -9.125242233276367
    3. ' ' → logprob: -9.250242233276367
    4. '-' → logprob: -10.375242233276367
    5. '2' → logprob: -13.625242233276367
    6. '0' → logprob: -13.750242233276367
    7. 'len' → logprob: -14.000242233276367
    8. 'cnt' → logprob: -14.375242233276367
    9. ' -' → logprob: -14.875242233276367
    10. ' b' → logprob: -15.125242233276367

Token 161: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08172499388456345
    2. '<|end|>' → logprob: -2.8317248821258545
    3. ')' → logprob: -5.331725120544434
    4. '           ' → logprob: -5.456725120544434
    5. '               ' → logprob: -5.831725120544434
    6. '
' → logprob: -6.331725120544434
    7. 'continue' → logprob: -6.706725120544434
    8. '        ' → logprob: -6.706725120544434
    9. ' ' → logprob: -7.206725120544434
    10. ' continue' → logprob: -7.831725120544434

Token 163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03876100853085518
    2. '       ' → logprob: -3.2887609004974365
    3. 'for' → logprob: -7.538761138916016
    4. ' if' → logprob: -8.788761138916016
    5. '   ' → logprob: -10.663761138916016
    6. 'else' → logprob: -12.788761138916016
    7. ' ' → logprob: -13.163761138916016
    8. '	if' → logprob: -13.413761138916016
    9. '        
' → logprob: -13.538761138916016
    10. 'left' → logprob: -13.788761138916016

Token 164: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5822041034698486
    2. 'left' → logprob: -0.8322041034698486
    3. ' right' → logprob: -5.7072038650512695
    4. 'right' → logprob: -6.3322038650512695
    5. '(left' → logprob: -7.5822038650512695
    6. ' check' → logprob: -8.45720386505127
    7. ' ' → logprob: -8.83220386505127
    8. ' (' → logprob: -9.58220386505127
    9. '	left' → logprob: -9.83220386505127
    10. 'check' → logprob: -9.95720386505127

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25404518842697144
    2. 'in' → logprob: -1.5040452480316162
    3. '>=' → logprob: -6.504045009613037
    4. ' ' → logprob: -8.004045486450195
    5. ' >=' → logprob: -8.504045486450195
    6. '>' → logprob: -10.129045486450195
    7. ' ' → logprob: -11.504045486450195
    8. '   ' → logprob: -11.629045486450195
    9. ' not' → logprob: -12.504045486450195
    10. ' i' → logprob: -12.629045486450195

Token 166: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5759451985359192
    2. ' B' → logprob: -0.8259451985359192
    3. ' ' → logprob: -13.075944900512695
    4. '	B' → logprob: -13.825944900512695
    5. 'b' → logprob: -14.575944900512695
    6. ' range' → logprob: -14.700944900512695
    7. 'range' → logprob: -15.075944900512695
    8. '   ' → logprob: -15.388444900512695
    9. '  ' → logprob: -15.575944900512695
    10. ' ' → logprob: -16.138444900512695

Token 167: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46458500623703003
    2. ':' → logprob: -1.9645850658416748
    3. ' and' → logprob: -2.089585065841675
    4. ' or' → logprob: -2.714585065841675
    5. ':
' → logprob: -3.839585065841675
    6. 'and' → logprob: -4.339584827423096
    7. '          ' → logprob: -5.464584827423096
    8. 'or' → logprob: -6.839584827423096
    9. '               ' → logprob: -7.839584827423096
    10. '       ' → logprob: -8.339585304260254

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011208624579012394
    2. ' check' → logprob: -4.886208534240723
    3. 'check' → logprob: -6.011208534240723
    4. '               ' → logprob: -7.136208534240723
    5. ' and' → logprob: -8.886208534240723
    6. ':
' → logprob: -9.886208534240723
    7. ' or' → logprob: -10.261208534240723
    8. '          ' → logprob: -10.386208534240723
    9. ':' → logprob: -11.136208534240723
    10. '       ' → logprob: -11.386208534240723

Token 169: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.3873778283596039
    2. ' check' → logprob: -1.1373778581619263
    3. '           ' → logprob: -7.637377738952637
    4. '               ' → logprob: -11.512377738952637
    5. '	check' → logprob: -11.762377738952637
    6. '            ' → logprob: -12.762377738952637
    7. ' ' → logprob: -14.012377738952637
    8. '(check' → logprob: -14.387377738952637
    9. '.check' → logprob: -14.637377738952637
    10. '   ' → logprob: -14.887377738952637

Token 170: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519419491291046
    2. '+=' → logprob: -1.5019419193267822
    3. '           ' → logprob: -12.626941680908203
    4. '        ' → logprob: -13.376941680908203
    5. '       ' → logprob: -13.501941680908203
    6. '=' → logprob: -13.501941680908203
    7. '   ' → logprob: -13.751941680908203
    8. '+' → logprob: -13.876941680908203
    9. '>' → logprob: -14.376941680908203
    10. '    ' → logprob: -14.376941680908203

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011050417087972164
    2. ' ' → logprob: -4.511050224304199
    3. 'b' → logprob: -13.5110502243042
    4. 'check' → logprob: -15.3860502243042
    5. ' b' → logprob: -15.6985502243042
    6. '   ' → logprob: -15.7610502243042
    7. 'cnt' → logprob: -16.136051177978516
    8. 'len' → logprob: -16.136051177978516
    9. ' check' → logprob: -16.323551177978516
    10. '2' → logprob: -16.698551177978516

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.87508487701416
    3. 'b' → logprob: -10.37508487701416
    4. 'B' → logprob: -13.62508487701416
    5. 'check' → logprob: -14.50008487701416
    6. '-' → logprob: -15.50008487701416
    7. '2' → logprob: -15.87508487701416
    8. '0' → logprob: -16.000085830688477
    9. 'len' → logprob: -16.250085830688477
    10. ' b' → logprob: -16.500085830688477

Token 173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022010602697264403
    2. 'if' → logprob: -9.00022029876709
    3. ' if' → logprob: -9.37522029876709
    4. '   ' → logprob: -11.75022029876709
    5. '           ' → logprob: -13.87522029876709
    6. '<|end|>' → logprob: -13.87522029876709
    7. '```' → logprob: -14.00022029876709
    8. '
' → logprob: -15.12522029876709
    9. '      ' → logprob: -15.25022029876709
    10. '     ' → logprob: -16.375219345092773

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.869017852295656e-06
    2. '   ' → logprob: -12.375006675720215
    3. 'if' → logprob: -13.500006675720215
    4. '           ' → logprob: -14.000006675720215
    5. ' if' → logprob: -15.500006675720215
    6. '      ' → logprob: -16.87500762939453
    7. '```' → logprob: -17.37500762939453
    8. '<|end|>' → logprob: -17.50000762939453
    9. '	' → logprob: -17.62500762939453
    10. '     ' → logprob: -17.75000762939453

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32364651560783386
    2. '       ' → logprob: -1.3236465454101562
    3. ' if' → logprob: -4.573646545410156
    4. '   ' → logprob: -11.698646545410156
    5. ' ' → logprob: -14.323646545410156
    6. '	if' → logprob: -14.323646545410156
    7. '           ' → logprob: -14.448646545410156
    8. '```' → logprob: -15.323646545410156
    9. 'right' → logprob: -15.823646545410156
    10. '      ' → logprob: -16.823646545410156

Token 176: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.07889044284820557
    2. 'right' → logprob: -2.578890323638916
    3. '	right' → logprob: -15.078890800476074
    4. ' ' → logprob: -15.953890800476074
    5. '(right' → logprob: -15.953890800476074
    6. '   ' → logprob: -16.453889846801758
    7. '[right' → logprob: -17.703889846801758
    8. ' left' → logprob: -17.828889846801758
    9. 'left' → logprob: -18.328889846801758
    10. 'r' → logprob: -19.578889846801758

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011723674833774567
    2. 'in' → logprob: -6.7511725425720215
    3. ' ' → logprob: -13.126172065734863
    4. ' ' → logprob: -16.25117301940918
    5. '	in' → logprob: -17.37617301940918
    6. 'In' → logprob: -17.87617301940918
    7. ')' → logprob: -18.50117301940918
    8. ' not' → logprob: -19.62617301940918
    9. ' в' → logprob: -19.75117301940918
    10. '   ' → logprob: -19.87617301940918

Token 178: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5231476426124573
    2. 'B' → logprob: -0.8981476426124573
    3. ' ' → logprob: -11.023147583007812
    4. ' ' → logprob: -12.898147583007812
    5. 'b' → logprob: -13.648147583007812
    6. '	B' → logprob: -14.023147583007812
    7. '   ' → logprob: -14.585647583007812
    8. '  ' → logprob: -14.710647583007812
    9. ')' → logprob: -14.960647583007812
    10. '`' → logprob: -15.585647583007812

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013014101423323154
    2. ' in' → logprob: -5.138014316558838
    3. '           ' → logprob: -5.513014316558838
    4. 'in' → logprob: -6.888014316558838
    5. ':
' → logprob: -7.138014316558838
    6. ')' → logprob: -7.888014316558838
    7. '==' → logprob: -8.26301383972168
    8. '):' → logprob: -8.26301383972168
    9. '          ' → logprob: -9.51301383972168
    10. ' ==' → logprob: -9.76301383972168

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20400084555149078
    2. 'check' → logprob: -1.9540008306503296
    3. ' check' → logprob: -3.204000949859619
    4. '          ' → logprob: -7.079000949859619
    5. '               ' → logprob: -7.454000949859619
    6. '       ' → logprob: -8.579000473022461
    7. '(check' → logprob: -8.704000473022461
    8. '==' → logprob: -9.329000473022461
    9. '+=' → logprob: -9.454000473022461
    10. '```' → logprob: -10.079000473022461

Token 181: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.20142805576324463
    2. 'check' (adapté à ' check') → logprob: -1.7014280557632446
    3. '1' → logprob: -11.701428413391113
    4. '	check' → logprob: -13.201428413391113
    5. ' ' → logprob: -13.576428413391113
    6. '           ' → logprob: -13.826428413391113
    7. '(check' → logprob: -14.826428413391113
    8. '.check' → logprob: -15.201428413391113
    9. 'count' → logprob: -15.326428413391113
    10. '```' → logprob: -15.451428413391113

Token 182: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759525299072266
    2. ' +=' → logprob: -0.8259525299072266
    3. '           ' → logprob: -12.575952529907227
    4. '+' → logprob: -12.825952529907227
    5. ']+=' → logprob: -12.950952529907227
    6. '          ' → logprob: -13.200952529907227
    7. '=' → logprob: -14.450952529907227
    8. '        ' → logprob: -14.825952529907227
    9. ' ' → logprob: -15.200952529907227
    10. '>' → logprob: -15.325952529907227

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04299987852573395
    2. ' ' → logprob: -3.1679999828338623
    3. ')' → logprob: -15.918000221252441
    4. '(' → logprob: -16.167999267578125
    5. '   ' → logprob: -16.167999267578125
    6. ' ' → logprob: -16.292999267578125
    7. '```' → logprob: -16.417999267578125
    8. '0' → logprob: -16.980499267578125
    9. '  ' → logprob: -17.417999267578125
    10. 'b' → logprob: -17.917999267578125

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'b' → logprob: -15.250003814697266
    4. '<|end|>' → logprob: -15.750003814697266
    5. '2' → logprob: -17.750003814697266
    6. '(' → logprob: -17.875003814697266
    7. '```' → logprob: -18.000003814697266
    8. ')' → logprob: -18.250003814697266
    9. '.' → logprob: -18.875003814697266
    10. '-' → logprob: -19.437503814697266

Token 185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5268014073371887
    2. 'cnt' → logprob: -0.9018014073371887
    3. ' cnt' → logprob: -6.026801586151123
    4. 'if' → logprob: -7.026801586151123
    5. '   ' → logprob: -8.651801109313965
    6. '           ' → logprob: -9.776801109313965
    7. '	cnt' → logprob: -9.776801109313965
    8. ' if' → logprob: -11.026801109313965
    9. '(cnt' → logprob: -11.151801109313965
    10. '[cnt' → logprob: -11.401801109313965

Token 186: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4779323637485504
    2. '       ' → logprob: -0.977932333946228
    3. '           ' → logprob: -5.727932453155518
    4. ' cnt' → logprob: -8.10293197631836
    5. 'if' → logprob: -9.22793197631836
    6. '   ' → logprob: -9.22793197631836
    7. '	cnt' → logprob: -10.47793197631836
    8. '```' → logprob: -11.10293197631836
    9. '               ' → logprob: -11.60293197631836
    10. '[cnt' → logprob: -11.97793197631836

Token 187: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0006047414499334991
    2. '       ' → logprob: -8.000604629516602
    3. 'if' → logprob: -8.375604629516602
    4. ' cnt' → logprob: -10.375604629516602
    5. 'for' → logprob: -12.250604629516602
    6. 'count' → logprob: -14.125604629516602
    7. '   ' → logprob: -14.625604629516602
    8. '           ' → logprob: -15.000604629516602
    9. '	cnt' → logprob: -15.000604629516602
    10. 'counter' → logprob: -15.250604629516602

Token 188: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38692033290863037
    2. '+=' → logprob: -1.1369203329086304
    3. '+' → logprob: -10.011919975280762
    4. ']+=' → logprob: -13.261919975280762
    5. '=' → logprob: -14.011919975280762
    6. ' +' → logprob: -14.636919975280762
    7. '+=(' → logprob: -14.886919975280762
    8. '   ' → logprob: -15.011919975280762
    9. '+="' → logprob: -15.261919975280762
    10. '+='' → logprob: -15.386919975280762

Token 189: ' b' (ID: 287)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.002051647286862135
    2. 'b' → logprob: -7.002051830291748
    3. ' check' → logprob: -7.252051830291748
    4. 'len' → logprob: -8.00205135345459
    5. '(check' → logprob: -9.75205135345459
    6. 'max' → logprob: -11.50205135345459
    7. 'min' → logprob: -11.87705135345459
    8. 'B' → logprob: -12.75205135345459
    9. '   ' → logprob: -12.87705135345459
    10. ' b' → logprob: -13.00205135345459

Token 190: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0009205120149999857
    2. ' check' → logprob: -7.000920295715332
    3. '(check' → logprob: -11.875920295715332
    4. 'len' → logprob: -14.125920295715332
    5. '	check' → logprob: -14.750920295715332
    6. ' ' → logprob: -15.000920295715332
    7. '   ' → logprob: -15.125920295715332
    8. '           ' → logprob: -16.50092124938965
    9. '       ' → logprob: -16.50092124938965
    10. '(' → logprob: -17.00092124938965

Token 192: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.451116051815916e-05
    2. '<|end|>' → logprob: -11.000024795532227
    3. ' print' → logprob: -12.625024795532227
    4. '```' → logprob: -13.250024795532227
    5. '
' → logprob: -13.375024795532227
    6. 'for' → logprob: -14.875024795532227
    7. '\n' → logprob: -14.875024795532227
    8. '#print' → logprob: -16.000024795532227
    9. ')' → logprob: -16.250024795532227
    10. '#' → logprob: -17.000024795532227

Token 193: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.735893965815194e-05
    2. ' print' → logprob: -11.500017166137695
    3. '```' → logprob: -12.250017166137695
    4. '<|end|>' → logprob: -13.000017166137695
    5. '#print' → logprob: -15.875017166137695
    6. ')' → logprob: -18.250017166137695
    7. '	print' → logprob: -18.500017166137695
    8. '``' → logprob: -18.750017166137695
    9. 'for' → logprob: -19.000017166137695
    10. '#' → logprob: -19.250017166137695

Token 194: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10025670379400253
    2. '(cnt' → logprob: -2.3502566814422607
    3. '("("' → logprob: -10.60025691986084
    4. '('' → logprob: -11.47525691986084
    5. '(
' → logprob: -12.60025691986084
    6. '(count' → logprob: -12.97525691986084
    7. '(`' → logprob: -13.35025691986084
    8. '()' → logprob: -13.60025691986084
    9. '(c' → logprob: -13.60025691986084
    10. ' (' → logprob: -13.60025691986084

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')`' → logprob: -16.5
    4. ')
' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. '))' → logprob: -18.375
    7. '+' → logprob: -18.75
    8. '`)' → logprob: -18.75
    9. '#' → logprob: -18.875
    10. '')' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 193
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 155
Précision stricte (1ère position): 38.86%
Précision adaptée (1ère position): 43.52%
Précision (top 10): 80.31%
================================================================================
