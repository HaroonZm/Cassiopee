================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_first_value, input_second_value = map(int, input().split())
product_of_values = input_first_value * input_second_value
sum_of_modified_values = (1 * input_first_value) + (1 * input_second_value) - 1
final_result = product_of_values - sum_of_modified_values
print(final_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_first' (ID: 29347)
  → Token d'amorce (pas de prédiction)

Token 2: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3332170844078064
    2. '=' → logprob: -1.8332171440124512
    3. '[' → logprob: -2.958217144012451
    4. '.' → logprob: -3.083217144012451
    5. ')' → logprob: -4.833217144012451
    6. ' =' → logprob: -5.208217144012451
    7. '```' → logprob: -5.333217144012451
    8. '(' → logprob: -6.083217144012451
    9. '+' → logprob: -6.833217144012451
    10. ':' → logprob: -6.833217144012451

Token 4: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8208963871002197
    2. ' ' → logprob: -1.3208963871002197
    3. 'input' → logprob: -1.8208963871002197
    4. '=' → logprob: -2.5708963871002197
    5. '_input' → logprob: -3.9458963871002197
    6. ' input' → logprob: -4.945896148681641
    7. ' =' → logprob: -4.945896148681641
    8. '=input' → logprob: -5.945896148681641
    9. ')' → logprob: -6.195896148681641
    10. ',' → logprob: -6.195896148681641

Token 5: '_second' (ID: 67724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06454086303710938
    2. '.' → logprob: -3.3145408630371094
    3. '[' → logprob: -4.564540863037109
    4. '=' → logprob: -4.814540863037109
    5. ')' → logprob: -5.439540863037109
    6. '```' → logprob: -6.439540863037109
    7. ' =' → logprob: -7.689540863037109
    8. '(' → logprob: -8.43954086303711
    9. ',' → logprob: -8.68954086303711
    10. '`' → logprob: -9.56454086303711

Token 6: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16665557026863098
    2. '=' → logprob: -2.4166555404663086
    3. ',' → logprob: -3.4166555404663086
    4. ')' → logprob: -4.291655540466309
    5. '.' → logprob: -4.666655540466309
    6. '```' → logprob: -5.916655540466309
    7. ' =' → logprob: -6.541655540466309
    8. '+' → logprob: -6.791655540466309
    9. '[' → logprob: -6.916655540466309
    10. ':' → logprob: -8.416655540466309

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8225956559181213
    2. '_' → logprob: -0.8225956559181213
    3. ',' → logprob: -2.6975955963134766
    4. '+' → logprob: -3.4475955963134766
    5. ')' → logprob: -4.947595596313477
    6. ' =' → logprob: -5.072595596313477
    7. '```' → logprob: -5.947595596313477
    8. '.' → logprob: -6.072595596313477
    9. '*' → logprob: -6.697595596313477
    10. ' ' → logprob: -7.572595596313477

Token 8: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4149607717990875
    2. 'input' → logprob: -1.1649607419967651
    3. ' map' → logprob: -4.414960861206055
    4. ' ' → logprob: -4.664960861206055
    5. ' int' → logprob: -5.914960861206055
    6. 'map' → logprob: -6.789960861206055
    7. ' []' → logprob: -7.039960861206055
    8. 'int' → logprob: -8.039960861206055
    9. '0' → logprob: -8.414960861206055
    10. '[]' → logprob: -8.539960861206055

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9081547260284424
    2. '(lambda' → logprob: -0.9081547260284424
    3. '<|end|>' → logprob: -1.9081547260284424
    4. '(int' → logprob: -3.6581547260284424
    5. '```' → logprob: -5.408154487609863
    6. '<|end|>' → logprob: -5.908154487609863
    7. '(str' → logprob: -6.658154487609863
    8. ')' → logprob: -6.783154487609863
    9. '(input' → logprob: -6.908154487609863
    10. '(eval' → logprob: -7.283154487609863

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03204375132918358
    2. ')' → logprob: -3.657043695449829
    3. 'input' → logprob: -5.657043933868408
    4. '(' → logprob: -6.907043933868408
    5. '(user' → logprob: -7.907043933868408
    6. ' input' → logprob: -8.53204345703125
    7. '[input' → logprob: -8.65704345703125
    8. '```' → logprob: -8.90704345703125
    9. '('' → logprob: -9.90704345703125
    10. '(inputs' → logprob: -9.90704345703125

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048603612929582596
    2. ' input' → logprob: -3.0486035346984863
    3. '(input' → logprob: -11.298604011535645
    4. ')' → logprob: -12.798604011535645
    5. 'str' → logprob: -15.298604011535645
    6. 'user' → logprob: -15.423604011535645
    7. ',input' → logprob: -15.548604011535645
    8. '=input' → logprob: -16.923603057861328
    9. '_input' → logprob: -17.173603057861328
    10. 'range' → logprob: -17.173603057861328

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3331388533115387
    2. '())' → logprob: -1.7081388235092163
    3. '('' → logprob: -3.083138942718506
    4. '(' → logprob: -3.583138942718506
    5. '().' → logprob: -3.833138942718506
    6. ')' → logprob: -5.458138942718506
    7. '`()' → logprob: -7.208138942718506
    8. '(()' → logprob: -7.708138942718506
    9. '());' → logprob: -8.833138465881348
    10. '("' → logprob: -8.833138465881348

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005094261723570526
    2. 'strip' → logprob: -7.625509262084961
    3. ' split' → logprob: -11.375509262084961
    4. 'rstrip' → logprob: -11.625509262084961
    5. 'spl' → logprob: -14.875509262084961
    6. ')' → logprob: -15.000509262084961
    7. 'startswith' → logprob: -15.875509262084961
    8. '(split' → logprob: -16.50050926208496
    9. 'replace' → logprob: -16.87550926208496
    10. '```' → logprob: -17.00050926208496

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.24552617967128754
    2. ')' → logprob: -1.6205261945724487
    3. '))' → logprob: -4.245526313781738
    4. '()))' → logprob: -6.120526313781738
    5. '()' → logprob: -6.495526313781738
    6. '(' → logprob: -6.870526313781738
    7. '('' → logprob: -7.370526313781738
    8. ' ())' → logprob: -9.620526313781738
    9. '`)' → logprob: -10.120526313781738
    10. '')' → logprob: -10.995526313781738

Token 15: 'product' (ID: 5260)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05825475975871086
    2. '+
' → logprob: -4.058254718780518
    3. '#' → logprob: -4.433254718780518
    4. '*' → logprob: -4.683254718780518
    5. ')' → logprob: -5.308254718780518
    6. '<|end|>' → logprob: -5.558254718780518
    7. ',' → logprob: -5.808254718780518
    8. 'if' → logprob: -6.808254718780518
    9. '.' → logprob: -7.433254718780518
    10. '\n' → logprob: -7.433254718780518

Token 16: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04724879562854767
    2. '_' → logprob: -3.1722488403320312
    3. '_product' → logprob: -6.797248840332031
    4. '(product' → logprob: -6.797248840332031
    5. '(_)' → logprob: -7.047248840332031
    6. '()' → logprob: -7.547248840332031
    7. ')' → logprob: -9.047248840332031
    8. '```' → logprob: -9.547248840332031
    9. '_products' → logprob: -10.047248840332031
    10. '_first' → logprob: -10.422248840332031

Token 17: '_values' (ID: 20393)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0592857599258423
    2. '_values' → logprob: -1.1842857599258423
    3. ' input' → logprob: -1.3092857599258423
    4. '_input' → logprob: -3.5592856407165527
    5. '_first' → logprob: -4.559285640716553
    6. '_numbers' → logprob: -4.684285640716553
    7. '_inputs' → logprob: -4.684285640716553
    8. 'product' → logprob: -5.684285640716553
    9. '_product' → logprob: -5.809285640716553
    10. '_' → logprob: -5.934285640716553

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22727878391742706
    2. ' =' → logprob: -2.102278709411621
    3. '_' → logprob: -2.977278709411621
    4. '<|end|>' → logprob: -4.102278709411621
    5. ')' → logprob: -5.727278709411621
    6. '*' → logprob: -5.852278709411621
    7. ' ' → logprob: -6.352278709411621
    8. ' *=' → logprob: -6.477278709411621
    9. ' +=' → logprob: -6.977278709411621
    10. '+=' → logprob: -7.727278709411621

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47413644194602966
    2. ' input' → logprob: -0.974136471748352
    3. 'product' → logprob: -10.474136352539062
    4. ' product' → logprob: -10.599136352539062
    5. ' ' → logprob: -13.224136352539062
    6. 'int' → logprob: -13.224136352539062
    7. '(input' → logprob: -13.974136352539062
    8. '0' → logprob: -14.224136352539062
    9. '1' → logprob: -15.099136352539062
    10. '<input' → logprob: -15.974136352539062

Token 20: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.4734416604042053
    2. '_' → logprob: -1.5984416007995605
    3. '_second' → logprob: -1.8484416007995605
    4. '(' → logprob: -4.5984416007995605
    5. ')' → logprob: -6.4734416007995605
    6. '"' → logprob: -6.5984416007995605
    7. 'First' → logprob: -7.0984416007995605
    8. ''' → logprob: -7.3484416007995605
    9. '_)' → logprob: -7.4734416007995605
    10. '```' → logprob: -7.5984416007995605

Token 21: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7008547782897949
    2. '_value' → logprob: -0.7008547782897949
    3. '_values' → logprob: -5.200854778289795
    4. '_product' → logprob: -6.825854778289795
    5. '_second' → logprob: -7.325854778289795
    6. '_first' → logprob: -8.200855255126953
    7. '_val' → logprob: -9.200855255126953
    8. '__' → logprob: -11.575855255126953
    9. ' _' → logprob: -12.200855255126953
    10. '_)' → logprob: -13.075855255126953

Token 22: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4744948446750641
    2. '*' → logprob: -0.9744948148727417
    3. ' ' → logprob: -8.849494934082031
    4. ' *>' → logprob: -9.724494934082031
    5. '_' → logprob: -10.224494934082031
    6. '**' → logprob: -10.349494934082031
    7. ' *=' → logprob: -10.849494934082031
    8. '*>' → logprob: -11.099494934082031
    9. '```' → logprob: -11.099494934082031
    10. '`' → logprob: -11.099494934082031

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889275997877121
    2. ' input' → logprob: -2.578892707824707
    3. ' ' → logprob: -13.203892707824707
    4. '_input' → logprob: -14.703892707824707
    5. '<input' → logprob: -15.703892707824707
    6. '(input' → logprob: -16.203893661499023
    7. '	input' → logprob: -16.453893661499023
    8. ' ' → logprob: -16.578893661499023
    9. 'int' → logprob: -16.703893661499023
    10. '=input' → logprob: -17.078893661499023

Token 24: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.011573994532227516
    2. '_first' → logprob: -4.511573791503906
    3. '_' → logprob: -7.636573791503906
    4. '._' → logprob: -11.511573791503906
    5. ')_' → logprob: -11.636573791503906
    6. '_SECOND' → logprob: -12.761573791503906
    7. '```' → logprob: -13.011573791503906
    8. '_seconds' → logprob: -13.261573791503906
    9. '_value' → logprob: -13.261573791503906
    10. 'Second' → logprob: -13.511573791503906

Token 25: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.07062925398349762
    2. '_' → logprob: -2.695629358291626
    3. '_val' → logprob: -7.945629119873047
    4. '_values' → logprob: -8.820629119873047
    5. ' _' → logprob: -9.445629119873047
    6. ''_' → logprob: -10.445629119873047
    7. '_v' → logprob: -11.195629119873047
    8. '_variable' → logprob: -11.820629119873047
    9. '"_' → logprob: -11.945629119873047
    10. '_f' → logprob: -12.195629119873047

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36921876668930054
    2. '\n' → logprob: -2.1192188262939453
    3. '+' → logprob: -2.7442188262939453
    4. '<|end|>' → logprob: -3.7442188262939453
    5. '+
' → logprob: -3.7442188262939453
    6. '*' → logprob: -3.9942188262939453
    7. 'newline' → logprob: -4.744218826293945
    8. '```' → logprob: -4.744218826293945
    9. 'print' → logprob: -4.994218826293945
    10. '#' → logprob: -5.119218826293945

Token 27: 'sum' (ID: 12298)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014923651469871402
    2. '
' → logprob: -7.876492500305176
    3. 'if' → logprob: -8.126492500305176
    4. '\n' → logprob: -8.251492500305176
    5. '```' → logprob: -8.751492500305176
    6. '#' → logprob: -9.501492500305176
    7. '\' → logprob: -10.001492500305176
    8. ' print' → logprob: -10.251492500305176
    9. '<|end|>' → logprob: -10.376492500305176
    10. 'newline' → logprob: -10.376492500305176

Token 28: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.3843039870262146
    2. '_' → logprob: -1.5093040466308594
    3. '(' → logprob: -2.3843040466308594
    4. '(_)' → logprob: -5.759304046630859
    5. '(_' → logprob: -6.759304046630859
    6. '_value' → logprob: -8.13430404663086
    7. '_product' → logprob: -8.50930404663086
    8. '_(' → logprob: -8.75930404663086
    9. '('_' → logprob: -9.25930404663086
    10. ' _' → logprob: -9.25930404663086

Token 29: '_modified' (ID: 93538)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00014764121442567557
    2. '_' → logprob: -9.000147819519043
    3. '_value' → logprob: -11.625147819519043
    4. 'values' → logprob: -11.750147819519043
    5. '_products' → logprob: -13.375147819519043
    6. ' _' → logprob: -13.375147819519043
    7. ' values' → logprob: -13.500147819519043
    8. '_product' → logprob: -13.750147819519043
    9. '_first' → logprob: -14.375147819519043
    10. '_vals' → logprob: -14.500147819519043

Token 30: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0035919947549700737
    2. '_value' → logprob: -5.878592014312744
    3. '_' → logprob: -7.253592014312744
    4. '_s' → logprob: -10.753591537475586
    5. '_vals' → logprob: -11.253591537475586
    6. '_val' → logprob: -11.503591537475586
    7. '_first' → logprob: -12.003591537475586
    8. '_variables' → logprob: -12.628591537475586
    9. '_tokens' → logprob: -12.753591537475586
    10. '_input' → logprob: -13.128591537475586

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010024980641901493
    2. ' +=' → logprob: -5.2600250244140625
    3. ' ' → logprob: -6.1350250244140625
    4. '_' → logprob: -7.0100250244140625
    5. '=' → logprob: -7.1350250244140625
    6. '<|end|>' → logprob: -7.3850250244140625
    7. ' +' → logprob: -9.635025024414062
    8. ' _' → logprob: -9.760025024414062
    9. ',' → logprob: -10.385025024414062
    10. '+' → logprob: -10.760025024414062

Token 32: ' (' (ID: 350)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8273155093193054
    2. ' (' → logprob: -0.9523155093193054
    3. '(input' → logprob: -2.57731556892395
    4. 'input' → logprob: -2.70231556892395
    5. ' product' → logprob: -3.95231556892395
    6. '(' → logprob: -5.702315330505371
    7. 'product' → logprob: -5.827315330505371
    8. ' int' → logprob: -6.202315330505371
    9. '0' → logprob: -6.702315330505371
    10. '(product' → logprob: -6.827315330505371

Token 33: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10806518793106079
    2. ' input' → logprob: -2.358065128326416
    3. 'product' → logprob: -5.608065128326416
    4. '(input' → logprob: -5.983065128326416
    5. ' product' → logprob: -7.233065128326416
    6. ' (' → logprob: -7.733065128326416
    7. 'int' → logprob: -8.858065605163574
    8. '(' → logprob: -9.733065605163574
    9. '2' → logprob: -9.733065605163574
    10. ' ' → logprob: -9.858065605163574

Token 34: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5291915535926819
    2. '+' → logprob: -0.9041915535926819
    3. '/' → logprob: -6.279191493988037
    4. '-' → logprob: -6.779191493988037
    5. ' -' → logprob: -7.154191493988037
    6. ' /' → logprob: -7.279191493988037
    7. '0' → logprob: -7.654191493988037
    8. ')' → logprob: -8.154191970825195
    9. ' )' → logprob: -8.279191970825195
    10. '*' → logprob: -8.779191970825195

Token 35: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5226436853408813
    2. 'input' → logprob: -1.6476436853408813
    3. ' input' → logprob: -2.522643566131592
    4. '+' → logprob: -3.522643566131592
    5. ' ' → logprob: -3.522643566131592
    6. ' +' → logprob: -3.647643566131592
    7. '2' → logprob: -4.022643566131592
    8. ')' → logprob: -4.272643566131592
    9. ' )' → logprob: -4.647643566131592
    10. '1' → logprob: -6.272643566131592

Token 36: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.03366322070360184
    2. '_second' → logprob: -3.533663272857666
    3. '_' → logprob: -5.783663272857666
    4. ' _' → logprob: -7.408663272857666
    5. '_)' → logprob: -9.533662796020508
    6. '_value' → logprob: -9.533662796020508
    7. '_f' → logprob: -10.408662796020508
    8. ')' → logprob: -11.408662796020508
    9. ')_' → logprob: -12.533662796020508
    10. '+' → logprob: -12.783662796020508

Token 37: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00021998681768309325
    2. '_' → logprob: -8.62522029876709
    3. ' _' → logprob: -11.37522029876709
    4. ')_' → logprob: -11.87522029876709
    5. '_values' → logprob: -12.00022029876709
    6. '_val' → logprob: -12.00022029876709
    7. ')' → logprob: -12.12522029876709
    8. '_)' → logprob: -13.87522029876709
    9. 'value' → logprob: -14.62522029876709
    10. ' )' → logprob: -14.62522029876709

Token 38: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.49212193489074707
    2. ')' → logprob: -1.242121934890747
    3. '+' → logprob: -2.617121934890747
    4. ' )' → logprob: -3.742121934890747
    5. ')+' → logprob: -6.492121696472168
    6. ')+(' → logprob: -7.492121696472168
    7. '+)' → logprob: -8.367121696472168
    8. '-' → logprob: -8.617121696472168
    9. '*' → logprob: -8.742121696472168
    10. ' ' → logprob: -8.867121696472168

Token 39: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14281520247459412
    2. '+' → logprob: -2.017815113067627
    3. ' +
' → logprob: -10.017815589904785
    4. '-' → logprob: -10.392815589904785
    5. ' -' → logprob: -11.017815589904785
    6. ' ' → logprob: -11.392815589904785
    7. ')' → logprob: -11.767815589904785
    8. ' *' → logprob: -12.142815589904785
    9. '*' → logprob: -12.267815589904785
    10. '<|end|>' → logprob: -12.517815589904785

Token 40: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16092047095298767
    2. ' (' → logprob: -1.91092050075531
    3. 'input' → logprob: -8.785920143127441
    4. '(input' → logprob: -9.035920143127441
    5. ' input' → logprob: -9.035920143127441
    6. '1' → logprob: -9.160920143127441
    7. ' ' → logprob: -9.285920143127441
    8. '2' → logprob: -9.785920143127441
    9. '(int' → logprob: -11.285920143127441
    10. '0' → logprob: -12.035920143127441

Token 41: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1247167587280273
    2. '1' → logprob: -1.2497167587280273
    3. ' ' → logprob: -1.2497167587280273
    4. ' input' → logprob: -2.9997167587280273
    5. 'input' → logprob: -3.7497167587280273
    6. '3' → logprob: -4.499716758728027
    7. '10' → logprob: -5.624716758728027
    8. ' (' → logprob: -5.999716758728027
    9. ')' → logprob: -6.124716758728027
    10. '5' → logprob: -6.499716758728027

Token 42: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25245746970176697
    2. '*' → logprob: -1.5024574995040894
    3. ' ' → logprob: -7.627457618713379
    4. ')' → logprob: -11.502457618713379
    5. '+' → logprob: -11.752457618713379
    6. '**' → logprob: -12.252457618713379
    7. ' +' → logprob: -12.377457618713379
    8. ' **' → logprob: -12.752457618713379
    9. '0' → logprob: -13.127457618713379
    10. ' ' → logprob: -13.752457618713379

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.061970602720975876
    2. 'input' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.561970710754395
    4. ')' → logprob: -15.061970710754395
    5. '2' → logprob: -15.311970710754395
    6. '(input' → logprob: -15.311970710754395
    7. '_input' → logprob: -15.561970710754395
    8. ' ' → logprob: -16.186969757080078
    9. '=input' → logprob: -16.186969757080078
    10. '<input' → logprob: -16.311969757080078

Token 44: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -7.226628895296017e-06
    2. '_first' → logprob: -12.125007629394531
    3. 'second' → logprob: -13.875007629394531
    4. '_' → logprob: -14.875007629394531
    5. ')_' → logprob: -15.500007629394531
    6. '_value' → logprob: -16.00000762939453
    7. 'Second' → logprob: -16.37500762939453
    8. '_SECOND' → logprob: -17.25000762939453
    9. ')' → logprob: -18.50000762939453
    10. '_seconds' → logprob: -18.62500762939453

Token 45: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2200749754119897e-06
    2. 'value' → logprob: -13.500001907348633
    3. '_' → logprob: -15.125001907348633
    4. '_val' → logprob: -15.750001907348633
    5. '_values' → logprob: -15.875001907348633
    6. ' _' → logprob: -16.875001907348633
    7. ')_' → logprob: -17.750001907348633
    8. '_second' → logprob: -17.750001907348633
    9. '_Value' → logprob: -18.000001907348633
    10. 'Value' → logprob: -18.250001907348633

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001487140398239717
    2. ' )' → logprob: -8.87514877319336
    3. '+' → logprob: -12.50014877319336
    4. ')
' → logprob: -13.87514877319336
    5. '))' → logprob: -14.12514877319336
    6. '**' → logprob: -14.50014877319336
    7. '`)' → logprob: -14.62514877319336
    8. '')' → logprob: -14.87514877319336
    9. ')**' → logprob: -15.12514877319336
    10. ' +' → logprob: -15.25014877319336

Token 47: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5109894275665283
    2. '+' → logprob: -1.3859894275665283
    3. '+
' → logprob: -2.2609894275665283
    4. '<|end|>' → logprob: -4.635989189147949
    5. '*' → logprob: -4.885989189147949
    6. ')' → logprob: -5.010989189147949
    7. '\n' → logprob: -5.760989189147949
    8. ' ' → logprob: -5.885989189147949
    9. '```' → logprob: -6.010989189147949
    10. '' → logprob: -6.260989189147949

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11729350686073303
    2. ' ' → logprob: -2.6172935962677
    3. '2' → logprob: -3.9922935962677
    4. 'product' → logprob: -4.492293357849121
    5. ' product' → logprob: -5.742293357849121
    6. '3' → logprob: -6.742293357849121
    7. '10' → logprob: -6.867293357849121
    8. ' (' → logprob: -7.367293357849121
    9. '5' → logprob: -7.992293357849121
    10. '100' → logprob: -8.367293357849121

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15231835842132568
    2. '2' → logprob: -2.0273184776306152
    3. 'product' → logprob: -5.402318477630615
    4. ' ' → logprob: -6.527318477630615
    5. '(' → logprob: -6.777318477630615
    6. '3' → logprob: -7.277318477630615
    7. '10' → logprob: -8.152318000793457
    8. 'input' → logprob: -8.527318000793457
    9. '0' → logprob: -8.527318000793457
    10. '100' → logprob: -8.652318000793457

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: 'final' (ID: 17196)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3193769156932831
    2. '<|end|>' → logprob: -2.1943769454956055
    3. '
' → logprob: -2.8193769454956055
    4. '+' → logprob: -3.5693769454956055
    5. '*' → logprob: -3.8193769454956055
    6. ')' → logprob: -4.0693769454956055
    7. '```' → logprob: -4.9443769454956055
    8. '#' → logprob: -5.1943769454956055
    9. ' ' → logprob: -5.4443769454956055
    10. 'product' → logprob: -5.8193769454956055

Token 52: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0035392516292631626
    2. '_product' → logprob: -6.378539085388184
    3. '_value' → logprob: -7.253539085388184
    4. ' _' → logprob: -8.003539085388184
    5. '_result' → logprob: -8.378539085388184
    6. '_token' → logprob: -9.128539085388184
    7. '_code' → logprob: -9.378539085388184
    8. '_output' → logprob: -9.378539085388184
    9. '_factor' → logprob: -9.878539085388184
    10. '_space' → logprob: -10.378539085388184

Token 53: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09287747740745544
    2. ' =' → logprob: -2.8428773880004883
    3. '=' → logprob: -3.8428773880004883
    4. '<|end|>' → logprob: -5.467877388000488
    5. ')' → logprob: -6.467877388000488
    6. ' ' → logprob: -6.592877388000488
    7. ' _' → logprob: -7.217877388000488
    8. '(' → logprob: -8.217877388000488
    9. '```' → logprob: -8.967877388000488
    10. '_=' → logprob: -9.342877388000488

Token 54: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5237268209457397
    2. 'product' → logprob: -0.8987268209457397
    3. 'sum' → logprob: -8.148726463317871
    4. ' sum' → logprob: -8.398726463317871
    5. '(product' → logprob: -10.398726463317871
    6. ' max' → logprob: -11.273726463317871
    7. 'max' → logprob: -11.523726463317871
    8. ' (' → logprob: -12.023726463317871
    9. ' ' → logprob: -12.148726463317871
    10. 'prod' → logprob: -12.648726463317871

Token 55: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0007364890188910067
    2. '_' → logprob: -7.250736713409424
    3. '_o' → logprob: -11.125736236572266
    4. ' _' → logprob: -12.625736236572266
    5. '__' → logprob: -13.250736236572266
    6. '_product' → logprob: -13.750736236572266
    7. '_for' → logprob: -13.875736236572266
    8. ''_' → logprob: -14.000736236572266
    9. '___' → logprob: -14.375736236572266
    10. '```' → logprob: -14.625736236572266

Token 56: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00014859484508633614
    2. 'values' → logprob: -8.87514877319336
    3. '_' → logprob: -12.12514877319336
    4. '_value' → logprob: -12.75014877319336
    5. '_VALUES' → logprob: -15.75014877319336
    6. 'Values' → logprob: -16.50014877319336
    7. '_val' → logprob: -17.00014877319336
    8. '_vals' → logprob: -17.25014877319336
    9. ' values' → logprob: -17.25014877319336
    10. 'value' → logprob: -18.25014877319336

Token 57: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7684680819511414
    2. '+' → logprob: -1.0184681415557861
    3. ' +' → logprob: -2.393468141555786
    4. '*' → logprob: -2.893468141555786
    5. ' -' → logprob: -4.018467903137207
    6. ' *' → logprob: -5.143467903137207
    7. '<|end|>' → logprob: -6.393467903137207
    8. ' ' → logprob: -6.643467903137207
    9. ')' → logprob: -7.768467903137207
    10. '+
' → logprob: -8.393467903137207

Token 58: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16022644937038422
    2. ' sum' → logprob: -1.9102264642715454
    3. '(sum' → logprob: -14.035226821899414
    4. '_sum' → logprob: -14.035226821899414
    5. '	sum' → logprob: -14.410226821899414
    6. ' ' → logprob: -16.785226821899414
    7. '1' → logprob: -17.285226821899414
    8. 's' → logprob: -18.160226821899414
    9. '=sum' → logprob: -18.785226821899414
    10. '.sum' → logprob: -19.035226821899414

Token 59: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0002682496269699186
    2. '_' → logprob: -8.50026798248291
    3. '__' → logprob: -10.87526798248291
    4. '_o' → logprob: -11.12526798248291
    5. '___' → logprob: -11.62526798248291
    6. '_for' → logprob: -11.62526798248291
    7. ' _' → logprob: -12.62526798248291
    8. ''_' → logprob: -13.00026798248291
    9. '_or' → logprob: -13.62526798248291
    10. '```' → logprob: -14.25026798248291

Token 60: '_modified' (ID: 93538)
  Prédit: '_modified'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_modified' → logprob: -0.0005566088366322219
    2. 'modified' → logprob: -7.500556468963623
    3. '_' → logprob: -13.625556945800781
    4. '_mod' → logprob: -14.000556945800781
    5. '_values' → logprob: -14.250556945800781
    6. '_value' → logprob: -14.875556945800781
    7. '_modifier' → logprob: -15.750556945800781
    8. '```' → logprob: -16.37555694580078
    9. '_modify' → logprob: -16.50055694580078
    10. '_product' → logprob: -16.50055694580078

Token 61: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0001601539261173457
    2. '_value' → logprob: -8.750160217285156
    3. '_' → logprob: -13.875160217285156
    4. '_val' → logprob: -15.125160217285156
    5. '_vals' → logprob: -15.375160217285156
    6. 'values' → logprob: -17.125160217285156
    7. '_results' → logprob: -17.375160217285156
    8. '_VALUES' → logprob: -17.750160217285156
    9. ' _' → logprob: -18.375160217285156
    10. '_product' → logprob: -18.500160217285156

Token 62: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03244912251830101
    2. '
' → logprob: -3.6574490070343018
    3. '+' → logprob: -6.657449245452881
    4. ' print' → logprob: -6.782449245452881
    5. '<|end|>' → logprob: -7.157449245452881
    6. ')' → logprob: -7.532449245452881
    7. '#' → logprob: -7.782449245452881
    8. '\n' → logprob: -7.907449245452881
    9. '```' → logprob: -8.032448768615723
    10. '\' → logprob: -8.032448768615723

Token 63: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '(final' (ID: 14111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1269364058971405
    2. '(final' → logprob: -2.126936435699463
    3. '('' → logprob: -13.251935958862305
    4. '("("' → logprob: -13.251935958862305
    5. '(f' → logprob: -13.501935958862305
    6. ' (' → logprob: -13.751935958862305
    7. '(`' → logprob: -14.126935958862305
    8. 'final' → logprob: -15.001935958862305
    9. '()' → logprob: -15.126935958862305
    10. '(
' → logprob: -15.126935958862305

Token 65: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0312718003988266
    2. '_' → logprob: -3.5312716960906982
    3. '_value' → logprob: -7.281271934509277
    4. '_final' → logprob: -7.906271934509277
    5. ')_' → logprob: -8.906271934509277
    6. '_output' → logprob: -9.281271934509277
    7. '_res' → logprob: -9.781271934509277
    8. '_)' → logprob: -10.031271934509277
    9. '_results' → logprob: -10.031271934509277
    10. '_token' → logprob: -11.156271934509277

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.500000953674316
    3. '`)' → logprob: -15.875000953674316
    4. '))' → logprob: -16.25
    5. ')`' → logprob: -16.625
    6. ')
' → logprob: -17.25
    7. '')' → logprob: -17.375
    8. '()' → logprob: -18.125
    9. '(' → logprob: -18.25
    10. '```' → logprob: -18.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 40.62%
Précision adaptée (1ère position): 40.62%
Précision (top 10): 76.56%
================================================================================
