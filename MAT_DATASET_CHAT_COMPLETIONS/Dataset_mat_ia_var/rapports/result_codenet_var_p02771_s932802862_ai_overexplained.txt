================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une ligne de texte. La fonction input() attend une entrée utilisateur sous forme de chaîne de caractères.
ligne = input()

# Utilise la méthode split() sur la chaîne obtenue pour diviser la chaîne là où il y a des espaces.
# Cela produit une liste de sous-chaînes, chacune représentant un nombre entré par l'utilisateur en tant que chaîne de caractères.
valeurs = ligne.split()

# Utilise une compréhension de liste pour parcourir chaque élément, c'est-à-dire chaque chaîne de caractères dans la liste 'valeurs'.
# Transforme chaque chaîne de caractères représentant un nombre en un entier avec la fonction int().
# Construit une nouvelle liste 'a' qui contient tous ces entiers.
a = [int(i) for i in valeurs]

# Trie la liste 'a' en ordre croissant.
# L'appel à la méthode sort() réorganise les éléments dans la liste de façon à ce qu'ils soient du plus petit au plus grand.
a.sort()

# Vérifie une condition complexe pour savoir si exactement deux des trois entiers sont égaux et le troisième est différent.
# 'a[0]' correspond au premier élément (le plus petit après tri), 'a[1]' au deuxième, 'a[2]' au troisième (le plus grand après tri).

# Première partie de la condition : (a[0] == a[1] and a[1] != a[2])
# Vérifie si les deux premiers éléments sont égaux (c'est-à-dire au moins un doublon au début)
# et si ces deux-là sont différents du troisième.

# Seconde partie de la condition : (a[0] != a[1] and a[1] == a[2])
# Vérifie si le premier est différent du deuxième, mais le deuxième est égal au troisième (doublon en fin de liste triée).

# L'opérateur 'or' signifie que si une des deux conditions est vraie, la réponse globale est vraie.
if (a[0] == a[1] and a[1] != a[2]) or (a[0] != a[1] and a[1] == a[2]):
    # Si la condition ci-dessus est vraie, affiche la chaîne "Yes" à l'écran pour indiquer que deux éléments sont identiques.
    print("Yes")
else:
    # Sinon, affiche "No" pour signifier que la condition n'était pas satisfaite.
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5254546403884888
    2. ' de' → logprob: -2.025454521179199
    3. ' ' → logprob: -2.400454521179199
    4. ':' → logprob: -2.525454521179199
    5. '_' → logprob: -3.150454521179199
    6. ' :' → logprob: -3.900454521179199
    7. '```' → logprob: -4.525454521179199
    8. ' =' → logprob: -4.900454521179199
    9. ' d' → logprob: -5.025454521179199
    10. ''' → logprob: -5.150454521179199

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02239242009818554
    2. ' l' → logprob: -3.897392511367798
    3. 'user' → logprob: -6.897392272949219
    4. ''' → logprob: -8.897392272949219
    5. ' user' → logprob: -9.022392272949219
    6. 'util' → logprob: -9.022392272949219
    7. '#' → logprob: -9.397392272949219
    8. 'la' → logprob: -9.522392272949219
    9. '`' → logprob: -10.522392272949219
    10. '_' → logprob: -10.647392272949219

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.050799041986465454
    2. 'util' → logprob: -3.9257991313934326
    3. 'u' → logprob: -4.9257988929748535
    4. ' utilisateur' → logprob: -4.9257988929748535
    5. '’utilisateur' → logprob: -4.9257988929748535
    6. ''' → logprob: -5.4257988929748535
    7. 'a' → logprob: -6.0507988929748535
    8. 'user' → logprob: -8.050799369812012
    9. ''user' → logprob: -8.175799369812012
    10. 'us' → logprob: -8.925799369812012

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.41761481761932373
    2. 'name' → logprob: -1.9176148176193237
    3. 'user' → logprob: -2.4176149368286133
    4. 'input' → logprob: -3.0426149368286133
    5. 'age' → logprob: -4.292614936828613
    6. 'print' → logprob: -4.542614936828613
    7. 'username' → logprob: -5.167614936828613
    8. 's' → logprob: -5.167614936828613
    9. 'prenom' → logprob: -5.167614936828613
    10. 'n' → logprob: -5.292614936828613

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6045140624046326
    2. ' saisir' → logprob: -1.3545141220092773
    3. ' ' → logprob: -2.3545141220092773
    4. ' ' → logprob: -3.8545141220092773
    5. 'r' → logprob: -4.104514122009277
    6. 'entr' → logprob: -4.354514122009277
    7. '```' → logprob: -4.729514122009277
    8. '_' → logprob: -4.854514122009277
    9. 'entrée' → logprob: -5.104514122009277
    10. ' entrer' → logprob: -5.104514122009277

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8823860883712769
    2. ''' → logprob: -1.8823860883712769
    3. ' un' → logprob: -2.1323862075805664
    4. ' une' → logprob: -2.1323862075805664
    5. '_' → logprob: -2.5073862075805664
    6. 's' → logprob: -3.5073862075805664
    7. 'une' → logprob: -4.007386207580566
    8. 'un' → logprob: -4.382386207580566
    9. '`' → logprob: -4.632386207580566
    10. ''un' → logprob: -4.632386207580566

Token 9: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00626802071928978
    2. ' chaîne' → logprob: -6.00626802444458
    3. 'space' → logprob: -7.25626802444458
    4. 'chaine' → logprob: -7.50626802444458
    5. ' phrase' → logprob: -7.63126802444458
    6. ' espace' → logprob: -7.75626802444458
    7. ' ligne' → logprob: -8.006267547607422
    8. ' ' → logprob: -8.631267547607422
    9. '  ' → logprob: -9.256267547607422
    10. 'phrase' → logprob: -9.381267547607422

Token 10: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.837379515171051
    2. 'input' → logprob: -1.3373794555664062
    3. 'user' → logprob: -2.2123794555664062
    4. 's' → logprob: -2.4623794555664062
    5. 'i' → logprob: -3.0873794555664062
    6. 'u' → logprob: -3.5873794555664062
    7. '_' → logprob: -4.337379455566406
    8. 'ligne' → logprob: -4.712379455566406
    9. 'print' → logprob: -5.587379455566406
    10. '#' → logprob: -6.462379455566406

Token 11: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.09733187407255173
    2. 'texte' → logprob: -2.4723317623138428
    3. 'commande' → logprob: -4.972332000732422
    4. '#' → logprob: -7.472332000732422
    5. 'comment' → logprob: -7.597332000732422
    6. 'text' → logprob: -8.722332000732422
    7. ' code' → logprob: -10.222332000732422
    8. '```' → logprob: -10.472332000732422
    9. ' texte' → logprob: -10.597332000732422
    10. 'command' → logprob: -10.597332000732422

Token 12: '.' (ID: 13)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3067108392715454
    2. 'user' → logprob: -1.5567108392715454
    3. 'text' → logprob: -4.056710720062256
    4. 'i' → logprob: -4.681710720062256
    5. 's' → logprob: -4.681710720062256
    6. 'u' → logprob: -5.681710720062256
    7. 'texte' → logprob: -5.806710720062256
    8. '_' → logprob: -5.931710720062256
    9. 'print' → logprob: -6.056710720062256
    10. '```' → logprob: -6.431710720062256

Token 13: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5199160575866699
    2. 'input' → logprob: -1.76991605758667
    3. 's' → logprob: -2.51991605758667
    4. 'text' → logprob: -2.64491605758667
    5. 'texte' → logprob: -3.01991605758667
    6. 'txt' → logprob: -4.89491605758667
    7. 't' → logprob: -5.26991605758667
    8. 'print' → logprob: -5.51991605758667
    9. 'l' → logprob: -5.51991605758667
    10. 'ligne' → logprob: -6.26991605758667

Token 14: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039358075708150864
    2. 's' → logprob: -3.664358139038086
    3. '_' → logprob: -4.789358139038086
    4. 'input' → logprob: -6.039358139038086
    5. 'n' → logprob: -8.039358139038086
    6. ' input' → logprob: -8.289358139038086
    7. 'i' → logprob: -8.414358139038086
    8. '  ' → logprob: -8.664358139038086
    9. ' i' → logprob: -8.789358139038086
    10. ' _' → logprob: -8.789358139038086

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5049467086791992
    2. ' input' → logprob: -1.1299467086791992
    3. 's' → logprob: -3.504946708679199
    4. ' ' → logprob: -3.629946708679199
    5. '(input' → logprob: -5.004946708679199
    6. '_' → logprob: -5.629946708679199
    7. '=input' → logprob: -5.879946708679199
    8. '(' → logprob: -7.004946708679199
    9. ' =' → logprob: -7.504946708679199
    10. 'print' → logprob: -8.1299467086792

Token 16: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005149058997631073
    2. '('' → logprob: -7.875514984130859
    3. '("' → logprob: -9.62551498413086
    4. '()' → logprob: -10.50051498413086
    5. '(
' → logprob: -11.62551498413086
    6. '("""' → logprob: -11.62551498413086
    7. ''' → logprob: -12.25051498413086
    8. '(`' → logprob: -12.50051498413086
    9. ')' → logprob: -13.00051498413086
    10. '("("' → logprob: -13.12551498413086

Token 17: ' attend' (ID: 13384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004064509645104408
    2. ''' → logprob: -7.004064559936523
    3. ' ' → logprob: -7.004064559936523
    4. ' (' → logprob: -7.379064559936523
    5. '('' → logprob: -7.879064559936523
    6. '.' → logprob: -8.129064559936523
    7. 's' → logprob: -8.379064559936523
    8. '_' → logprob: -9.129064559936523
    9. '"' → logprob: -9.254064559936523
    10. ',' → logprob: -9.379064559936523

Token 18: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9800567030906677
    2. ' une' → logprob: -1.2300567626953125
    3. 'une' → logprob: -1.9800567626953125
    4. 's' → logprob: -3.3550567626953125
    5. ' que' → logprob: -3.7300567626953125
    6. 'ue' → logprob: -3.8550567626953125
    7. ' la' → logprob: -3.9800567626953125
    8. 'ent' → logprob: -4.4800567626953125
    9. ')' → logprob: -4.6050567626953125
    10. 'l' → logprob: -4.8550567626953125

Token 19: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.4545815587043762
    2. 'chaine' → logprob: -2.2045814990997314
    3. ' chaîne' → logprob: -2.4545814990997314
    4. 's' → logprob: -2.5795814990997314
    5. 'cha' → logprob: -2.5795814990997314
    6. ' entrée' → logprob: -5.7045817375183105
    7. 'ligne' → logprob: -6.0795817375183105
    8. 'string' → logprob: -6.3295817375183105
    9. ' ' → logprob: -6.9545817375183105
    10. ' ligne' → logprob: -6.9545817375183105

Token 20: ' utilisateur' (ID: 115595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49723657965660095
    2. '_' → logprob: -1.3722366094589233
    3. '.' → logprob: -2.872236490249634
    4. ',' → logprob: -3.872236490249634
    5. '()' → logprob: -4.747236728668213
    6. 's' → logprob: -4.872236728668213
    7. ' (' → logprob: -4.997236728668213
    8. ')' → logprob: -5.247236728668213
    9. ' ' → logprob: -5.247236728668213
    10. ':' → logprob: -5.372236728668213

Token 21: ' sous' (ID: 14487)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45089542865753174
    2. '(' → logprob: -2.575895309448242
    3. '#' → logprob: -2.950895309448242
    4. 'u' → logprob: -3.450895309448242
    5. 'user' → logprob: -3.575895309448242
    6. ',' → logprob: -3.575895309448242
    7. 's' → logprob: -3.700895309448242
    8. '_' → logprob: -4.075895309448242
    9. ')' → logprob: -4.200895309448242
    10. '\n' → logprob: -4.200895309448242

Token 22: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.22034227848052979
    2. 'forme' → logprob: -1.7203422784805298
    3. 'chaine' → logprob: -4.47034215927124
    4. 'form' → logprob: -5.72034215927124
    5. 'la' → logprob: -6.09534215927124
    6. 'texte' → logprob: -7.59534215927124
    7. 'ent' → logprob: -7.72034215927124
    8. '```' → logprob: -8.595342636108398
    9. 'forma' → logprob: -9.220342636108398
    10. 'une' → logprob: -9.345342636108398

Token 23: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.019022980704903603
    2. ' de' → logprob: -4.2690229415893555
    3. 'd' → logprob: -5.6440229415893555
    4. 'de' → logprob: -7.0190229415893555
    5. 's' → logprob: -7.8940229415893555
    6. ''d' → logprob: -12.269022941589355
    7. 'e' → logprob: -12.269022941589355
    8. ''' → logprob: -12.269022941589355
    9. ' ' → logprob: -12.644022941589355
    10. 'r' → logprob: -13.144022941589355

Token 24: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6138467192649841
    2. 'cha' → logprob: -0.8638467192649841
    3. ' chaîne' → logprob: -3.738846778869629
    4. 'texte' → logprob: -5.238846778869629
    5. 'str' → logprob: -5.363846778869629
    6. 'string' → logprob: -5.738846778869629
    7. ' chaine' → logprob: -9.113846778869629
    8. 'chain' → logprob: -10.113846778869629
    9. '-cha' → logprob: -10.738846778869629
    10. 's' → logprob: -11.613846778869629

Token 25: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8765993714332581
    2. '.' → logprob: -2.2515993118286133
    3. ')' → logprob: -2.5015993118286133
    4. '#' → logprob: -2.6265993118286133
    5. '_' → logprob: -2.6265993118286133
    6. ',' → logprob: -2.6265993118286133
    7. 's' → logprob: -3.1265993118286133
    8. '"' → logprob: -3.6265993118286133
    9. 'input' → logprob: -3.8765993118286133
    10. '`' → logprob: -4.251599311828613

Token 26: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09353484213352203
    2. ' caractères' → logprob: -2.4685349464416504
    3. 'texte' → logprob: -5.59353494644165
    4. ' caract' → logprob: -7.71853494644165
    5. ' caracteres' → logprob: -8.468534469604492
    6. ' caractère' → logprob: -10.218534469604492
    7. 'chaine' → logprob: -10.593534469604492
    8. ''' → logprob: -10.593534469604492
    9. 'c' → logprob: -10.593534469604492
    10. '_car' → logprob: -10.843534469604492

Token 27: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5667072534561157
    2. '\' → logprob: -2.316707134246826
    3. '\n' → logprob: -2.566707134246826
    4. '.' → logprob: -2.691707134246826
    5. '#' → logprob: -3.566707134246826
    6. 'n' → logprob: -4.066707134246826
    7. 's' → logprob: -4.066707134246826
    8. ')' → logprob: -4.191707134246826
    9. '_' → logprob: -4.316707134246826
    10. 'a' → logprob: -4.316707134246826

Token 28: 'ligne' (ID: 94660)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.507824420928955
    2. '\' → logprob: -2.132824420928955
    3. 't' → logprob: -2.132824420928955
    4. '\n' → logprob: -2.257824420928955
    5. 's' → logprob: -2.507824420928955
    6. 'n' → logprob: -3.007824420928955
    7. 'l' → logprob: -3.007824420928955
    8. '#' → logprob: -3.132824420928955
    9. 'user' → logprob: -3.257824420928955
    10. 'i' → logprob: -3.382824420928955

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013960393145680428
    2. '=' → logprob: -4.888960361480713
    3. 's' → logprob: -5.638960361480713
    4. '_' → logprob: -6.138960361480713
    5. ' ' → logprob: -7.763960361480713
    6. '.' → logprob: -9.638960838317871
    7. 'space' → logprob: -10.138960838317871
    8. 'es' → logprob: -10.513960838317871
    9. ')' → logprob: -11.513960838317871
    10. '_space' → logprob: -11.638960838317871

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47408443689346313
    2. 'input' → logprob: -0.9740844368934631
    3. '=input' → logprob: -12.349084854125977
    4. '(input' → logprob: -13.349084854125977
    5. '	input' → logprob: -14.599084854125977
    6. '<input' → logprob: -14.724084854125977
    7. ' ' → logprob: -15.224084854125977
    8. ' ' → logprob: -15.974084854125977
    9. '_input' → logprob: -17.099084854125977
    10. ',input' → logprob: -17.099084854125977

Token 31: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006909898947924376
    2. '('' → logprob: -7.625690937042236
    3. '("("' → logprob: -8.625691413879395
    4. '(
' → logprob: -12.250691413879395
    5. '()' → logprob: -12.250691413879395
    6. ' (' → logprob: -12.500691413879395
    7. '("")' → logprob: -12.875691413879395
    8. '(`' → logprob: -13.125691413879395
    9. '("""' → logprob: -13.375691413879395
    10. '("' → logprob: -13.500691413879395

Token 32: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020626675337553024
    2. '.strip' → logprob: -4.520626544952393
    3. '<|end|>' → logprob: -6.395626544952393
    4. ' ' → logprob: -7.020626544952393
    5. '#' → logprob: -7.020626544952393
    6. '[:]' → logprob: -7.145626544952393
    7. '```' → logprob: -7.270626544952393
    8. '[' → logprob: -7.395626544952393
    9. ')' → logprob: -7.520626544952393
    10. '\' → logprob: -7.770626544952393

Token 33: ' Util' (ID: 13564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11440415680408478
    2. ' ' → logprob: -3.4894042015075684
    3. ' if' → logprob: -3.4894042015075684
    4. ' print' → logprob: -3.7394042015075684
    5. 'if' → logprob: -4.489404201507568
    6. '#' → logprob: -5.114404201507568
    7. ' #' → logprob: -6.364404201507568
    8. '_' → logprob: -7.739404201507568
    9. '"' → logprob: -8.11440372467041
    10. ')' → logprob: -8.23940372467041

Token 34: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010112311691045761
    2. '#' → logprob: -5.010112285614014
    3. 'sat' → logprob: -6.260112285614014
    4. 'sage' → logprob: -7.885112285614014
    5. 'ser' → logprob: -8.010112762451172
    6. 'se' → logprob: -8.135112762451172
    7. 'isateur' → logprob: -8.760112762451172
    8. 'sa' → logprob: -9.260112762451172
    9. ''s' → logprob: -10.635112762451172
    10. 'sar' → logprob: -10.760112762451172

Token 35: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10946483165025711
    2. '("' → logprob: -2.8594648838043213
    3. '()' → logprob: -3.3594648838043213
    4. '('' → logprob: -4.984464645385742
    5. '("""' → logprob: -6.109464645385742
    6. '().' → logprob: -7.859464645385742
    7. '(
' → logprob: -7.859464645385742
    8. '.' → logprob: -7.984464645385742
    9. '.strip' → logprob: -8.734464645385742
    10. '.lower' → logprob: -8.984464645385742

Token 36: ' méthode' (ID: 71490)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lower' → logprob: -1.032393217086792
    2. '.strip' → logprob: -1.282393217086792
    3. '.upper' → logprob: -1.907393217086792
    4. '.' → logprob: -2.032393217086792
    5. '.split' → logprob: -2.657393217086792
    6. 'len' → logprob: -5.782393455505371
    7. '.capitalize' → logprob: -5.782393455505371
    8. '.replace' → logprob: -5.907393455505371
    9. '.l' → logprob: -6.407393455505371
    10. '.s' → logprob: -6.782393455505371

Token 37: ' split' (ID: 12648)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2671608030796051
    2. '.strip' → logprob: -2.0171608924865723
    3. '.lower' → logprob: -2.3921608924865723
    4. '.split' → logprob: -5.517160892486572
    5. '.upper' → logprob: -5.517160892486572
    6. 'strip' → logprob: -7.642160892486572
    7. '.capitalize' → logprob: -8.392160415649414
    8. '.l' → logprob: -8.642160415649414
    9. 'lower' → logprob: -8.767160415649414
    10. '.startswith' → logprob: -8.892160415649414

Token 38: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2714668810367584
    2. '('' → logprob: -1.896466851234436
    3. '()' → logprob: -2.5214669704437256
    4. '("' → logprob: -5.2714667320251465
    5. '("("' → logprob: -6.2714667320251465
    6. '("")' → logprob: -9.646467208862305
    7. '('.')' → logprob: -9.896467208862305
    8. '(
' → logprob: -10.021467208862305
    9. '(

' → logprob: -10.521467208862305
    10. '("""' → logprob: -10.771467208862305

Token 39: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16458727419376373
    2. '()' → logprob: -1.9145872592926025
    3. '('' → logprob: -5.539587497711182
    4. '("' → logprob: -8.539587020874023
    5. '(
' → logprob: -9.414587020874023
    6. '().' → logprob: -10.664587020874023
    7. '("""' → logprob: -10.789587020874023
    8. '("")' → logprob: -11.039587020874023
    9. ' (' → logprob: -11.039587020874023
    10. '(

' → logprob: -11.414587020874023

Token 40: ' la' (ID: 557)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7769029140472412
    2. ' la' → logprob: -1.0269029140472412
    3. ' ligne' → logprob: -2.776902914047241
    4. '()' → logprob: -3.026902914047241
    5. 'la' → logprob: -3.026902914047241
    6. 'l' → logprob: -4.40190315246582
    7. ' ' → logprob: -6.27690315246582
    8. 'une' → logprob: -6.40190315246582
    9. 'chaine' → logprob: -6.40190315246582
    10. ' l' → logprob: -6.90190315246582

Token 41: ' chaîne' (ID: 89288)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8584806323051453
    2. ' ligne' → logprob: -1.10848069190979
    3. ' chaîne' → logprob: -1.73348069190979
    4. 'chaine' → logprob: -3.60848069190979
    5. ' chaine' → logprob: -3.60848069190979
    6. ' string' → logprob: -4.983480453491211
    7. 'string' → logprob: -6.233480453491211
    8. ' variable' → logprob: -6.733480453491211
    9. 'l' → logprob: -6.858480453491211
    10. ' ' → logprob: -7.108480453491211

Token 42: ' obten' (ID: 28150)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16511821746826172
    2. '(' → logprob: -1.9151182174682617
    3. '('' → logprob: -5.665118217468262
    4. '("' → logprob: -7.790118217468262
    5. '.' → logprob: -8.165118217468262
    6. '(
' → logprob: -8.915118217468262
    7. '().' → logprob: -9.040118217468262
    8. '(l' → logprob: -10.040118217468262
    9. ' ()' → logprob: -10.165118217468262
    10. '()

' → logprob: -10.290118217468262

Token 43: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.18491876125335693
    2. 'ie' → logprob: -2.3099188804626465
    3. 'e' → logprob: -3.3099188804626465
    4. '().' → logprob: -4.9349188804626465
    5. '()' → logprob: -5.1849188804626465
    6. 'enue' → logprob: -5.3099188804626465
    7. 'ite' → logprob: -5.6849188804626465
    8. 'ir' → logprob: -5.8099188804626465
    9. 'u' → logprob: -5.9349188804626465
    10. '.' → logprob: -6.5599188804626465

Token 44: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3025825619697571
    2. '()' → logprob: -1.5525825023651123
    3. '.' → logprob: -3.5525825023651123
    4. '('' → logprob: -4.052582740783691
    5. '(
' → logprob: -6.802582740783691
    6. '('.')' → logprob: -7.177582740783691
    7. '("' → logprob: -8.052582740783691
    8. '().' → logprob: -8.177582740783691
    9. ''' → logprob: -8.927582740783691
    10. ' (' → logprob: -9.052582740783691

Token 45: ' div' (ID: 4223)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.46461722254753113
    2. ' la' → logprob: -1.5896172523498535
    3. ' décou' → logprob: -2.0896172523498535
    4. 'sé' → logprob: -4.0896172523498535
    5. ' créer' → logprob: -4.8396172523498535
    6. 'la' → logprob: -4.9646172523498535
    7. ' obtenir' → logprob: -5.5896172523498535
    8. ' couper' → logprob: -6.0896172523498535
    9. ' récupérer' → logprob: -7.0896172523498535
    10. ' sépar' → logprob: -7.2146172523498535

Token 46: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.043396495282649994
    2. 'iser' → logprob: -3.918396472930908
    3. 'der' → logprob: -4.293396472930908
    4. 's' → logprob: -5.168396472930908
    5. 'd' → logprob: -7.668396472930908
    6. '#' → logprob: -7.918396472930908
    7. '	' → logprob: -8.168396949768066
    8. 'er' → logprob: -8.168396949768066
    9. 'se' → logprob: -8.543396949768066
    10. '   ' → logprob: -8.793396949768066

Token 47: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6779956221580505
    2. '('' → logprob: -1.1779956817626953
    3. '(' → logprob: -1.8029956817626953
    4. ''' → logprob: -4.802995681762695
    5. 'l' → logprob: -6.052995681762695
    6. 's' → logprob: -6.177995681762695
    7. '("' → logprob: -6.677995681762695
    8. 'la' → logprob: -7.052995681762695
    9. ' la' → logprob: -7.427995681762695
    10. ')' → logprob: -7.552995681762695

Token 48: ' chaîne' (ID: 89288)
  Prédit: ' texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' texte' → logprob: -0.7861879467964172
    2. ' chaîne' → logprob: -1.6611878871917725
    3. 'texte' → logprob: -2.4111878871917725
    4. ' ligne' → logprob: -2.7861878871917725
    5. ' string' → logprob: -3.0361878871917725
    6. 's' → logprob: -3.5361878871917725
    7. 'chaine' → logprob: -3.5361878871917725
    8. ' ' → logprob: -3.6611878871917725
    9. 'ligne' → logprob: -3.7861878871917725
    10. ''' → logprob: -4.411188125610352

Token 49: ' là' (ID: 8052)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3131880462169647
    2. ' ' → logprob: -2.313188076019287
    3. '()' → logprob: -3.563188076019287
    4. 'en' → logprob: -3.688188076019287
    5. ' )' → logprob: -4.188188076019287
    6. ' par' → logprob: -4.313188076019287
    7. ' à' → logprob: -4.438188076019287
    8. ' ligne' → logprob: -4.938188076019287
    9. ')' → logprob: -5.063188076019287
    10. '[' → logprob: -5.188188076019287

Token 50: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.3380548059940338
    2. 'où' → logprob: -1.7130547761917114
    3. '-' → logprob: -2.588054895401001
    4. ' ' → logprob: -4.588054656982422
    5. ' where' → logprob: -4.713054656982422
    6. ' -' → logprob: -5.713054656982422
    7. 's' → logprob: -5.713054656982422
    8. '-bas' → logprob: -6.338054656982422
    9. '_' → logprob: -7.463054656982422
    10. '-dessus' → logprob: -7.838054656982422

Token 51: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.14929886162281036
    2. 'il' → logprob: -2.149298906326294
    3. ''il' → logprob: -4.524298667907715
    4. 'l' → logprob: -5.649298667907715
    5. ' ' → logprob: -6.024298667907715
    6. ' l' → logprob: -6.524298667907715
    7. 's' → logprob: -7.274298667907715
    8. ' les' → logprob: -7.399298667907715
    9. ' espace' → logprob: -7.524298667907715
    10. ' la' → logprob: -8.149298667907715

Token 52: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1813119500875473
    2. 'y' → logprob: -1.8063119649887085
    3. ' a' → logprob: -7.181312084197998
    4. ''y' → logprob: -7.806312084197998
    5. 'a' → logprob: -8.30631160736084
    6. 'ya' → logprob: -9.68131160736084
    7. ' ' → logprob: -10.30631160736084
    8. 's' → logprob: -10.80631160736084
    9. '‘y' → logprob: -11.43131160736084
    10. ' il' → logprob: -11.68131160736084

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43267515301704407
    2. ' a' → logprob: -1.0576751232147217
    3. ''a' → logprob: -5.682675361633301
    4. 'y' → logprob: -8.0576753616333
    5. ' ' → logprob: -9.4326753616333
    6. ' y' → logprob: -9.5576753616333
    7. '#a' → logprob: -10.4326753616333
    8. ' ' → logprob: -11.3076753616333
    9. '	a' → logprob: -11.5576753616333
    10. 'ya' → logprob: -12.0576753616333

Token 54: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1985372006893158
    2. ' un' → logprob: -1.9485372304916382
    3. 'des' → logprob: -3.6985371112823486
    4. ' ' → logprob: -5.448537349700928
    5. 'un' → logprob: -5.448537349700928
    6. ' espaces' → logprob: -5.948537349700928
    7. 's' → logprob: -7.823537349700928
    8. 'space' → logprob: -8.32353687286377
    9. ' espace' → logprob: -8.32353687286377
    10. ''un' → logprob: -9.19853687286377

Token 55: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.0044174171052873135
    2. 'esp' → logprob: -5.879417419433594
    3. ' espace' → logprob: -7.504417419433594
    4. ''esp' → logprob: -7.879417419433594
    5. ' ' → logprob: -8.254417419433594
    6. 'es' → logprob: -8.504417419433594
    7. ''espace' → logprob: -9.879417419433594
    8. 'spaces' → logprob: -10.254417419433594
    9. ' espacios' → logprob: -10.629417419433594
    10. ' espac' → logprob: -10.879417419433594

Token 56: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5059112906455994
    2. ')' → logprob: -2.130911350250244
    3. ',' → logprob: -2.255911350250244
    4. 'ligne' → logprob: -2.630911350250244
    5. 's' → logprob: -3.630911350250244
    6. '()' → logprob: -4.255911350250244
    7. '.l' → logprob: -4.255911350250244
    8. '.split' → logprob: -5.130911350250244
    9. '<|end|>' → logprob: -5.130911350250244
    10. ' .' → logprob: -5.380911350250244

Token 57: '#' (ID: 2)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4080076217651367
    2. 'ligne' → logprob: -1.5330076217651367
    3. 's' → logprob: -1.6580076217651367
    4. 'mot' → logprob: -2.0330076217651367
    5. 'l' → logprob: -3.0330076217651367
    6. 'tokens' → logprob: -3.4080076217651367
    7. '.' → logprob: -4.283007621765137
    8. ' ' → logprob: -4.533007621765137
    9. ')' → logprob: -4.658007621765137
    10. 'split' → logprob: -5.033007621765137

Token 58: ' Cela' (ID: 44403)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.30717307329177856
    2. ' mots' → logprob: -1.6821730136871338
    3. 'mot' → logprob: -3.057173013687134
    4. 'tokens' → logprob: -4.057173252105713
    5. 's' → logprob: -5.932173252105713
    6. 'part' → logprob: -6.307173252105713
    7. 'parts' → logprob: -6.807173252105713
    8. 'words' → logprob: -6.932173252105713
    9. ' mot' → logprob: -7.182173252105713
    10. 'result' → logprob: -7.307173252105713

Token 59: ' produit' (ID: 29429)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.3492808938026428
    2. ' permet' → logprob: -1.349280834197998
    3. ' permettra' → logprob: -4.599280834197998
    4. ' sé' → logprob: -5.349280834197998
    5. ' transforme' → logprob: -5.474280834197998
    6. ' va' → logprob: -5.849280834197998
    7. ' créé' → logprob: -6.224280834197998
    8. ' décou' → logprob: -6.224280834197998
    9. ' créer' → logprob: -6.474280834197998
    10. 'per' → logprob: -7.349280834197998

Token 60: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5262160897254944
    2. 'une' → logprob: -0.9012160897254944
    3. ' un' → logprob: -6.15121603012085
    4. 'un' → logprob: -7.52621603012085
    5. ' ' → logprob: -9.026216506958008
    6. 'a' → logprob: -9.276216506958008
    7. ' a' → logprob: -10.401216506958008
    8. ''une' → logprob: -10.401216506958008
    9. ' ' → logprob: -10.526216506958008
    10. 's' → logprob: -10.776216506958008

Token 61: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.05010366812348366
    2. 'liste' → logprob: -3.0501036643981934
    3. 'list' → logprob: -6.675103664398193
    4. ' list' → logprob: -8.550104141235352
    5. ' listes' → logprob: -11.050104141235352
    6. 's' → logprob: -11.425104141235352
    7. ' Liste' → logprob: -11.675104141235352
    8. 'l' → logprob: -11.800104141235352
    9. 'Liste' → logprob: -11.800104141235352
    10. ' ' → logprob: -13.175104141235352

Token 62: ' de' (ID: 334)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3925036191940308
    2. ' de' → logprob: -1.3925036191940308
    3. 'de' → logprob: -1.8925036191940308
    4. ' des' → logprob: -2.7675037384033203
    5. 'des' → logprob: -3.0175037384033203
    6. '[' → logprob: -3.1425037384033203
    7. ' mots' → logprob: -3.2675037384033203
    8. 's' → logprob: -3.8925037384033203
    9. 'mot' → logprob: -3.8925037384033203
    10. 'tokens' → logprob: -4.01750373840332

Token 63: ' sous' (ID: 14487)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.10299872606992722
    2. 'm' → logprob: -2.727998733520508
    3. ' chaînes' → logprob: -3.477998733520508
    4. 'mot' → logprob: -6.977998733520508
    5. ' mot' → logprob: -8.352998733520508
    6. ' tokens' → logprob: -9.102998733520508
    7. ' strings' → logprob: -9.227998733520508
    8. 'tokens' → logprob: -9.602998733520508
    9. 'strings' → logprob: -10.477998733520508
    10. ' chain' → logprob: -10.477998733520508

Token 64: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.25329843163490295
    2. '-cha' → logprob: -1.7532984018325806
    3. '-' → logprob: -4.003298282623291
    4. '-chain' → logprob: -4.003298282623291
    5. 'cha' → logprob: -4.628298282623291
    6. 'chain' → logprob: -6.378298282623291
    7. '   ' → logprob: -7.753298282623291
    8. '_' → logprob: -7.878298282623291
    9. ' chaîne' → logprob: -8.37829875946045
    10. '```' → logprob: -8.62829875946045

Token 65: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.03905121609568596
    2. 'nes' → logprob: -3.5390512943267822
    3. 'î' → logprob: -5.164051055908203
    4. 'ines' → logprob: -6.289051055908203
    5. 'r' → logprob: -7.289051055908203
    6. ' nes' → logprob: -8.664051055908203
    7. '```' → logprob: -8.789051055908203
    8. 'Î' → logprob: -9.289051055908203
    9. '' → logprob: -9.664051055908203
    10. 'mes' → logprob: -9.789051055908203

Token 66: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3090706169605255
    2. ',' → logprob: -2.184070587158203
    3. '[' → logprob: -2.809070587158203
    4. 's' → logprob: -3.684070587158203
    5. 'ligne' → logprob: -4.184070587158203
    6. ')' → logprob: -4.309070587158203
    7. ' =' → logprob: -5.309070587158203
    8. ' .' → logprob: -5.684070587158203
    9. '[:]' → logprob: -5.809070587158203
    10. 'm' → logprob: -5.809070587158203

Token 67: ' chacune' (ID: 127465)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8293486833572388
    2. 'tokens' → logprob: -2.079348564147949
    3. ' sépar' → logprob: -2.204348564147949
    4. ' chaque' → logprob: -2.329348564147949
    5. ' mots' → logprob: -2.329348564147949
    6. 's' → logprob: -2.579348564147949
    7. ' appelée' → logprob: -2.704348564147949
    8. ' chacune' → logprob: -3.579348564147949
    9. ' tokens' → logprob: -3.704348564147949
    10. ' qui' → logprob: -4.079348564147949

Token 68: ' représentant' (ID: 136122)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.6406461596488953
    2. ' correspondant' → logprob: -1.26564621925354
    3. ' étant' → logprob: -2.39064621925354
    4. ' représentant' → logprob: -2.51564621925354
    5. ' correspond' → logprob: -5.265645980834961
    6. 're' → logprob: -5.390645980834961
    7. 'represent' → logprob: -5.765645980834961
    8. ' ' → logprob: -6.515645980834961
    9. ' cor' → logprob: -6.890645980834961
    10. ' representing' → logprob: -7.640645980834961

Token 69: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03441699221730232
    2. 'un' → logprob: -3.409416913986206
    3. ' une' → logprob: -8.159417152404785
    4. ' des' → logprob: -8.909417152404785
    5. 'une' → logprob: -9.909417152404785
    6. 'm' → logprob: -10.034417152404785
    7. ' mots' → logprob: -10.159417152404785
    8. ''un' → logprob: -10.409417152404785
    9. ' mot' → logprob: -10.409417152404785
    10. 'mot' → logprob: -10.534417152404785

Token 70: ' nombre' (ID: 9733)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.29838427901268005
    2. ' mot' → logprob: -1.4233843088150024
    3. 'm' → logprob: -4.173384189605713
    4. ' ' → logprob: -7.548384189605713
    5. 'élé' → logprob: -8.423384666442871
    6. '```' → logprob: -8.548384666442871
    7. ' morceau' → logprob: -8.673384666442871
    8. ' ' → logprob: -9.173384666442871
    9. ' espace' → logprob: -9.548384666442871
    10. ' mots' → logprob: -10.110884666442871

Token 71: ' entr' (ID: 7072)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2620815932750702
    2. '.' → logprob: -1.6370816230773926
    3. ' ' → logprob: -4.887081623077393
    4. ' =' → logprob: -4.887081623077393
    5. '[' → logprob: -5.637081623077393
    6. ',' → logprob: -5.762081623077393
    7. '.split' → logprob: -6.137081623077393
    8. ')' → logprob: -6.512081623077393
    9. '_' → logprob: -6.512081623077393
    10. 'es' → logprob: -6.637081623077393

Token 72: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0009643423254601657
    2. 'er' → logprob: -7.875964164733887
    3. 'ée' → logprob: -8.000964164733887
    4. 'ées' → logprob: -8.500964164733887
    5. 'és' → logprob: -10.750964164733887
    6. 'e' → logprob: -12.000964164733887
    7. 'ié' → logprob: -12.375964164733887
    8. 'ier' → logprob: -12.625964164733887
    9. '```' → logprob: -13.500964164733887
    10. 'éré' → logprob: -13.500964164733887

Token 73: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04112951457500458
    2. ' s' → logprob: -4.4161295890808105
    3. '.' → logprob: -4.6661295890808105
    4. ' ' → logprob: -5.0411295890808105
    5. ' .' → logprob: -5.2911295890808105
    6. ' ,' → logprob: -6.1661295890808105
    7. 'es' → logprob: -7.1661295890808105
    8. ',' → logprob: -7.2911295890808105
    9. ' '' → logprob: -7.2911295890808105
    10. '(s' → logprob: -7.5411295890808105

Token 74: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16677342355251312
    2. 'l' → logprob: -2.9167733192443848
    3. ' un' → logprob: -2.9167733192443848
    4. 'un' → logprob: -3.9167733192443848
    5. ' espace' → logprob: -4.791773319244385
    6. 'une' → logprob: -5.666773319244385
    7. 'a' → logprob: -6.166773319244385
    8. ' une' → logprob: -6.666773319244385
    9. ' espaces' → logprob: -6.666773319244385
    10. ' ' → logprob: -6.791773319244385

Token 75: ''utilisateur' (ID: 140803)
  Prédit: ''espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -0.8773760199546814
    2. 'a' → logprob: -1.8773760795593262
    3. ''' → logprob: -2.127376079559326
    4. 'e' → logprob: -2.252376079559326
    5. ''utilisateur' → logprob: -2.252376079559326
    6. 'es' → logprob: -2.502376079559326
    7. 'u' → logprob: -5.127376079559326
    8. ''esp' → logprob: -5.252376079559326
    9. ''e' → logprob: -6.252376079559326
    10. ''a' → logprob: -6.377376079559326

Token 76: ' en' (ID: 469)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.12105131149292
    2. 'n' → logprob: -1.12105131149292
    3. 's' → logprob: -1.49605131149292
    4. 'numbers' → logprob: -3.37105131149292
    5. 'tokens' → logprob: -3.87105131149292
    6. 'nombre' → logprob: -3.87105131149292
    7. 'mot' → logprob: -4.37105131149292
    8. ' nombres' → logprob: -4.87105131149292
    9. 'num' → logprob: -5.37105131149292
    10. ' mots' → logprob: -5.62105131149292

Token 77: ' tant' (ID: 16235)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.9922550916671753
    2. ' espaces' → logprob: -0.9922550916671753
    3. 'es' → logprob: -2.367255210876465
    4. 's' → logprob: -3.492255210876465
    5. ' chaîne' → logprob: -3.867255210876465
    6. ' chaînes' → logprob: -3.992255210876465
    7. ' string' → logprob: -4.117255210876465
    8. ''espace' → logprob: -4.242255210876465
    9. 'chaine' → logprob: -4.367255210876465
    10. ' ' → logprob: -5.242255210876465

Token 78: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.29945969581604004
    2. ' qu' → logprob: -2.04945969581604
    3. 'que' → logprob: -2.17445969581604
    4. 'qu' → logprob: -4.424459457397461
    5. ' ' → logprob: -6.174459457397461
    6. 's' → logprob: -6.424459457397461
    7. 'q' → logprob: -8.674459457397461
    8. '  ' → logprob: -8.924459457397461
    9. '#' → logprob: -9.549459457397461
    10. '```' → logprob: -10.049459457397461

Token 79: ' chaîne' (ID: 89288)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.5829792022705078
    2. 'es' → logprob: -1.7079792022705078
    3. ' "' → logprob: -2.832979202270508
    4. ' chaîne' → logprob: -3.332979202270508
    5. ''espace' → logprob: -3.582979202270508
    6. ' '' → logprob: -3.582979202270508
    7. '"' → logprob: -3.832979202270508
    8. 's' → logprob: -3.957979202270508
    9. ' string' → logprob: -4.207979202270508
    10. 'mot' → logprob: -4.457979202270508

Token 80: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09814713150262833
    2. '.' → logprob: -2.97314715385437
    3. '[' → logprob: -3.84814715385437
    4. 'es' → logprob: -4.723146915435791
    5. 'tokens' → logprob: -5.473146915435791
    6. ')' → logprob: -6.348146915435791
    7. '[]' → logprob: -6.473146915435791
    8. '_' → logprob: -7.348146915435791
    9. 'ligne' → logprob: -8.09814739227295
    10. 'n' → logprob: -8.09814739227295

Token 81: ' caractères' (ID: 183106)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.972122073173523
    2. 'es' → logprob: -1.722122073173523
    3. 'car' → logprob: -1.847122073173523
    4. ' caractères' → logprob: -2.7221221923828125
    5. ' espaces' → logprob: -2.8471221923828125
    6. 'esp' → logprob: -3.4721221923828125
    7. ''' → logprob: -3.8471221923828125
    8. 'texte' → logprob: -3.9721221923828125
    9. '"' → logprob: -3.9721221923828125
    10. ''espace' → logprob: -4.2221221923828125

Token 82: '.
' (ID: 558)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08975467085838318
    2. 'n' → logprob: -2.714754581451416
    3. 'mot' → logprob: -4.839754581451416
    4. 's' → logprob: -5.339754581451416
    5. 'tokens' → logprob: -5.464754581451416
    6. 'nombre' → logprob: -7.339754581451416
    7. ' mots' → logprob: -7.964754581451416
    8. 'numbers' → logprob: -7.964754581451416
    9. 'num' → logprob: -8.214755058288574
    10. 'l' → logprob: -9.339755058288574

Token 83: 'val' (ID: 1105)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3546566963195801
    2. 'n' → logprob: -1.22965669631958
    3. 'nombre' → logprob: -6.10465669631958
    4. 'numbers' → logprob: -6.60465669631958
    5. 'mot' → logprob: -7.22965669631958
    6. 'tokens' → logprob: -7.60465669631958
    7. 'liste' → logprob: -8.104656219482422
    8. 'num' → logprob: -8.354656219482422
    9. 'nums' → logprob: -8.604656219482422
    10. 'ch' → logprob: -9.479656219482422

Token 84: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.001264163525775075
    2. 'eur' → logprob: -7.0012640953063965
    3. 's' → logprob: -8.626264572143555
    4. 'ues' → logprob: -9.001264572143555
    5. ' =' → logprob: -10.626264572143555
    6. 'e' → logprob: -11.376264572143555
    7. 'es' → logprob: -12.251264572143555
    8. '=' → logprob: -13.126264572143555
    9. 'eu' → logprob: -13.376264572143555
    10. '_' → logprob: -14.001264572143555

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01255286019295454
    2. '=' → logprob: -4.762552738189697
    3. 's' → logprob: -6.012552738189697
    4. '_' → logprob: -6.762552738189697
    5. ' ' → logprob: -8.637553215026855
    6. '.' → logprob: -9.262553215026855
    7. 'es' → logprob: -11.387553215026855
    8. '[:]' → logprob: -12.637553215026855
    9. '_str' → logprob: -13.012553215026855
    10. '_space' → logprob: -13.012553215026855

Token 86: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.34850844740867615
    2. ' ligne' → logprob: -1.2235084772109985
    3. 'line' → logprob: -10.723508834838867
    4. 'l' → logprob: -10.973508834838867
    5. 'lig' → logprob: -11.973508834838867
    6. 'input' → logprob: -12.348508834838867
    7. ' input' → logprob: -12.723508834838867
    8. ' ' → logprob: -12.973508834838867
    9. ' Ligne' → logprob: -12.973508834838867
    10. ' lignes' → logprob: -13.098508834838867

Token 87: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03933984786272049
    2. '.' → logprob: -3.289339780807495
    3. '.strip' → logprob: -7.039340019226074
    4. ' .' → logprob: -7.789340019226074
    5. '.s' → logprob: -12.164340019226074
    6. '.Split' → logprob: -14.914340019226074
    7. '.trim' → logprob: -15.414340019226074
    8. '.sp' → logprob: -15.914340019226074
    9. '.rstrip' → logprob: -15.914340019226074
    10. '.replace' → logprob: -16.039339065551758

Token 88: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0886799767613411
    2. '('' → logprob: -2.7136800289154053
    3. '()' → logprob: -4.213679790496826
    4. '("("' → logprob: -5.838679790496826
    5. ''' → logprob: -7.588679790496826
    6. '(
' → logprob: -9.088680267333984
    7. '"' → logprob: -9.588680267333984
    8. '(`' → logprob: -9.713680267333984
    9. ' (' → logprob: -10.838680267333984
    10. '("' → logprob: -11.213680267333984

Token 89: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34276270866394043
    2. 'val' → logprob: -2.4677627086639404
    3. 'n' → logprob: -2.5927627086639404
    4. 's' → logprob: -2.9677627086639404
    5. '[' → logprob: -3.2177627086639404
    6. 'for' → logprob: -4.2177629470825195
    7. ' 
' → logprob: -4.9677629470825195
    8. '
' → logprob: -5.7177629470825195
    9. 'result' → logprob: -5.8427629470825195
    10. '\' → logprob: -6.9677629470825195

Token 90: ' Util' (ID: 13564)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1211186647415161
    2. 'n' → logprob: -1.2461186647415161
    3. '#' → logprob: -1.7461186647415161
    4. 'result' → logprob: -2.4961185455322266
    5. 'val' → logprob: -3.1211185455322266
    6. 'total' → logprob: -3.2461185455322266
    7. 'som' → logprob: -4.621118545532227
    8. 'for' → logprob: -4.871118545532227
    9. 'numbers' → logprob: -4.871118545532227
    10. 'ent' → logprob: -4.996118545532227

Token 91: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0049966671504080296
    2. '#' → logprob: -5.7549967765808105
    3. 'is' → logprob: -6.7549967765808105
    4. 'se' → logprob: -8.254996299743652
    5. 'iser' → logprob: -9.254996299743652
    6. 'e' → logprob: -9.504996299743652
    7. 'i' → logprob: -9.504996299743652
    8. '```' → logprob: -10.254996299743652
    9. 'isez' → logprob: -10.254996299743652
    10. 'isé' → logprob: -10.504996299743652

Token 92: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7315119504928589
    2. ' la' → logprob: -2.1065120697021484
    3. ' ' → logprob: -2.2315120697021484
    4. ' list' → logprob: -2.3565120697021484
    5. 'list' → logprob: -3.4815120697021484
    6. ' [' → logprob: -3.8565120697021484
    7. '(' → logprob: -4.231512069702148
    8. 'val' → logprob: -4.356512069702148
    9. 'une' → logprob: -4.356512069702148
    10. ' une' → logprob: -4.356512069702148

Token 93: ' compréhension' (ID: 142333)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7788794040679932
    2. ' liste' → logprob: -2.153879404067993
    3. 'liste' → logprob: -2.278879404067993
    4. ' compréhension' → logprob: -2.278879404067993
    5. ' for' → logprob: -2.653879404067993
    6. 'compr' → logprob: -3.403879404067993
    7. ' boucle' → logprob: -3.528879404067993
    8. 'list' → logprob: -3.653879404067993
    9. '[' → logprob: -3.903879404067993
    10. ' comprehension' → logprob: -5.153879165649414

Token 94: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05984378978610039
    2. '[val' → logprob: -3.0598437786102295
    3. 'val' → logprob: -5.059844017028809
    4. ' [' → logprob: -6.184844017028809
    5. '[int' → logprob: -6.309844017028809
    6. '[
' → logprob: -8.434844017028809
    7. 'n' → logprob: -8.809844017028809
    8. '[n' → logprob: -9.059844017028809
    9. '[i' → logprob: -9.559844017028809
    10. '[]' → logprob: -9.684844017028809

Token 95: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.45499497652053833
    2. ' liste' → logprob: -1.0799949169158936
    3. '[' → logprob: -4.829995155334473
    4. '[val' → logprob: -4.829995155334473
    5. 'list' → logprob: -5.079995155334473
    6. '[int' → logprob: -6.454995155334473
    7. 'val' → logprob: -6.954995155334473
    8. ' list' → logprob: -8.204995155334473
    9. 'la' → logprob: -8.204995155334473
    10. ' la' → logprob: -9.079995155334473

Token 96: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.303282231092453
    2. '[val' → logprob: -1.4282822608947754
    3. '[int' → logprob: -4.053282260894775
    4. ' [' → logprob: -6.178282260894775
    5. 'val' → logprob: -6.928282260894775
    6. '[:]' → logprob: -7.303282260894775
    7. '[
' → logprob: -8.428281784057617
    8. '[num' → logprob: -9.053281784057617
    9. '[i' → logprob: -9.428281784057617
    10. '[n' → logprob: -9.678281784057617

Token 97: ' parcour' (ID: 130642)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.02704443596303463
    2. 'convert' → logprob: -3.9020445346832275
    3. 'transform' → logprob: -6.027044296264648
    4. 'val' → logprob: -6.277044296264648
    5. 'con' → logprob: -6.777044296264648
    6. ' transformer' → logprob: -7.277044296264648
    7. ' convert' → logprob: -8.277044296264648
    8. 'converter' → logprob: -9.902044296264648
    9. ' créer' → logprob: -10.902044296264648
    10. ' val' → logprob: -11.152044296264648

Token 98: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.718048095703125
    2. 'ir' → logprob: -1.468048095703125
    3. 'val' → logprob: -1.718048095703125
    4. 'u' → logprob: -2.718048095703125
    5. 're' → logprob: -5.093048095703125
    6. 'enir' → logprob: -5.593048095703125
    7. 'endre' → logprob: -5.718048095703125
    8. 'ur' → logprob: -6.093048095703125
    9. 'iner' → logprob: -6.343048095703125
    10. 'urer' → logprob: -6.343048095703125

Token 99: ' chaque' (ID: 21194)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.4308648407459259
    2. 'val' → logprob: -1.0558648109436035
    3. ' val' → logprob: -6.6808648109436035
    4. ' ' → logprob: -8.555865287780762
    5. ' ' → logprob: -8.930865287780762
    6. ' les' → logprob: -9.180865287780762
    7. '[val' → logprob: -9.430865287780762
    8. ' la' → logprob: -9.430865287780762
    9. 'values' → logprob: -9.680865287780762
    10. ' values' → logprob: -9.680865287780762

Token 100: ' élément' (ID: 99627)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.44119197130203247
    2. ' valeur' → logprob: -1.0661919116973877
    3. 'v' → logprob: -5.191192150115967
    4. ' val' → logprob: -5.316192150115967
    5. ' v' → logprob: -6.566192150115967
    6. 'élé' → logprob: -8.441191673278809
    7. ' élément' → logprob: -9.066191673278809
    8. ' ' → logprob: -9.191191673278809
    9. ' element' → logprob: -11.066191673278809
    10. ' vale' → logprob: -11.316191673278809

Token 101: ',' (ID: 11)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02345184236764908
    2. ' val' → logprob: -4.023451805114746
    3. ' de' → logprob: -6.023451805114746
    4. ' valeurs' → logprob: -6.773451805114746
    5. '[val' → logprob: -6.773451805114746
    6. '(val' → logprob: -8.398451805114746
    7. 'de' → logprob: -9.773451805114746
    8. ' valeur' → logprob: -9.898451805114746
    9. ' des' → logprob: -10.023451805114746
    10. ',val' → logprob: -10.273451805114746

Token 102: ' c' (ID: 274)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5260269045829773
    2. ' convert' → logprob: -2.401026964187622
    3. 'transform' → logprob: -2.651026964187622
    4. 'convert' → logprob: -2.776026964187622
    5. ' convertir' → logprob: -2.776026964187622
    6. ' et' → logprob: -3.401026964187622
    7. ' en' → logprob: -4.276026725769043
    8. ' transform' → logprob: -4.276026725769043
    9. ' valeurs' → logprob: -4.276026725769043
    10. 'et' → logprob: -4.526026725769043

Token 103: ''est' (ID: 6616)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omme' → logprob: -1.4572455883026123
    2. 'on' → logprob: -1.5822455883026123
    3. 'har' → logprob: -1.9572455883026123
    4. '#' → logprob: -2.3322455883026123
    5. 'for' → logprob: -3.0822455883026123
    6. 'om' → logprob: -3.4572455883026123
    7. 'omm' → logprob: -3.4572455883026123
    8. 'e' → logprob: -3.4572455883026123
    9. 'ont' → logprob: -3.7072455883026123
    10. 'range' → logprob: -4.082245826721191

Token 104: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3065023124217987
    2. ' val' → logprob: -2.181502342224121
    3. 'val' → logprob: -2.431502342224121
    4. ' une' → logprob: -4.056502342224121
    5. ' en' → logprob: -5.306502342224121
    6. 's' → logprob: -5.306502342224121
    7. '  ' → logprob: -5.556502342224121
    8. '   ' → logprob: -5.681502342224121
    9. ' la' → logprob: -5.681502342224121
    10. ' un' → logprob: -5.806502342224121

Token 105: '-dire' (ID: 76064)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7549694180488586
    2. '#' → logprob: -1.3799693584442139
    3. 'ce' → logprob: -3.004969358444214
    4. 'une' → logprob: -3.129969358444214
    5. 'char' → logprob: -3.629969358444214
    6. 'que' → logprob: -4.379969596862793
    7. 'jour' → logprob: -4.629969596862793
    8. 'crire' → logprob: -4.629969596862793
    9. 'chant' → logprob: -5.004969596862793
    10. 'c' → logprob: -5.379969596862793

Token 106: ' chaque' (ID: 21194)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.14051425457000732
    2. ' val' → logprob: -2.765514373779297
    3. ' valeurs' → logprob: -2.765514373779297
    4. 'int' → logprob: -6.390514373779297
    5. ' int' → logprob: -6.390514373779297
    6. ' valeur' → logprob: -6.640514373779297
    7. ' values' → logprob: -8.640514373779297
    8. 'values' → logprob: -9.140514373779297
    9. ' ' → logprob: -9.765514373779297
    10. ' ' → logprob: -9.765514373779297

Token 107: ' chaîne' (ID: 89288)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10804646462202072
    2. ' valeur' → logprob: -2.358046531677246
    3. ' val' → logprob: -5.608046531677246
    4. 'v' → logprob: -5.983046531677246
    5. 'élé' → logprob: -7.233046531677246
    6. ' v' → logprob: -7.858046531677246
    7. ' élément' → logprob: -8.983046531677246
    8. ' ' → logprob: -9.358046531677246
    9. 'chaine' → logprob: -9.608046531677246
    10. ' chaine' → logprob: -10.358046531677246

Token 108: ' de' (ID: 334)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.2120108604431152
    2. ' de' → logprob: -1.8370108604431152
    3. '[val' → logprob: -1.8370108604431152
    4. ' val' → logprob: -1.8370108604431152
    5. '[' → logprob: -2.0870108604431152
    6. ' ' → logprob: -3.9620108604431152
    7. '   ' → logprob: -4.087010860443115
    8. ',' → logprob: -4.462010860443115
    9. ' en' → logprob: -4.587010860443115
    10. '[int' → logprob: -5.087010860443115

Token 109: ' caractères' (ID: 183106)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004571580793708563
    2. 'car' → logprob: -5.754571437835693
    3. ' valeur' → logprob: -7.379571437835693
    4. ' caractères' → logprob: -8.629571914672852
    5. 'chaine' → logprob: -8.879571914672852
    6. ' valeurs' → logprob: -8.879571914672852
    7. 'nombre' → logprob: -9.379571914672852
    8. ' val' → logprob: -10.004571914672852
    9. ' caractère' → logprob: -10.129571914672852
    10. ' caract' → logprob: -10.254571914672852

Token 110: ' dans' (ID: 2671)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.25359219312667847
    2. ' val' → logprob: -2.0035922527313232
    3. ' et' → logprob: -3.8785922527313232
    4. ' dans' → logprob: -4.003592014312744
    5. ' en' → logprob: -4.628592014312744
    6. ',' → logprob: -4.753592014312744
    7. ' de' → logprob: -5.253592014312744
    8. 'dans' → logprob: -5.503592014312744
    9. '[val' → logprob: -5.628592014312744
    10. 'et' → logprob: -5.753592014312744

Token 111: ' la' (ID: 557)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3133186995983124
    2. 'val' → logprob: -1.3133187294006348
    3. ' ' → logprob: -10.938318252563477
    4. 'values' → logprob: -11.188318252563477
    5. ' val' → logprob: -11.938318252563477
    6. ' ' → logprob: -12.438318252563477
    7. 'la' → logprob: -12.688318252563477
    8. ' valeur' → logprob: -12.813318252563477
    9. ' valores' → logprob: -12.938318252563477
    10. '```' → logprob: -13.063318252563477

Token 112: ' liste' (ID: 31719)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0008603655151091516
    2. ' valeurs' → logprob: -7.500860214233398
    3. 'liste' → logprob: -9.000860214233398
    4. ' liste' → logprob: -9.750860214233398
    5. ' val' → logprob: -10.125860214233398
    6. 'list' → logprob: -10.250860214233398
    7. ' listes' → logprob: -10.625860214233398
    8. '```' → logprob: -11.375860214233398
    9. ' valeur' → logprob: -13.125860214233398
    10. '[val' → logprob: -13.250860214233398

Token 113: ' '' (ID: 461)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.14222697913646698
    2. '[val' → logprob: -2.3922269344329834
    3. '[int' → logprob: -4.0172271728515625
    4. '[' → logprob: -4.1422271728515625
    5. 'int' → logprob: -5.7672271728515625
    6. ' val' → logprob: -6.7672271728515625
    7. ',' → logprob: -7.0172271728515625
    8. ' [' → logprob: -7.8922271728515625
    9. 'values' → logprob: -8.142227172851562
    10. ' valeurs' → logprob: -8.642227172851562

Token 114: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0015056940028443933
    2. ' valeurs' → logprob: -6.5015058517456055
    3. ' val' → logprob: -13.251505851745605
    4. 'values' → logprob: -14.376505851745605
    5. 'vale' → logprob: -15.501505851745605
    6. 'valu' → logprob: -15.751505851745605
    7. ' ' → logprob: -16.00150489807129
    8. ' valeur' → logprob: -16.12650489807129
    9. ' ' → logprob: -16.25150489807129
    10. '```' → logprob: -16.50150489807129

Token 115: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -5.7530574849806726e-05
    2. 'eur' → logprob: -9.875057220458984
    3. 'e' → logprob: -12.250057220458984
    4. 'ues' → logprob: -14.375057220458984
    5. 'ue' → logprob: -15.500057220458984
    6. '_e' → logprob: -16.375057220458984
    7. 'uers' → logprob: -16.500057220458984
    8. 'reurs' → logprob: -16.500057220458984
    9. 'leurs' → logprob: -16.875057220458984
    10. '_' → logprob: -17.000057220458984

Token 116: ''.
' (ID: 49980)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3081091344356537
    2. '[' → logprob: -2.3081090450286865
    3. 'val' → logprob: -2.5581090450286865
    4. '[val' → logprob: -3.0581090450286865
    5. ']' → logprob: -3.5581090450286865
    6. ')' → logprob: -5.433109283447266
    7. ',val' → logprob: -6.433109283447266
    8. '],' → logprob: -7.183109283447266
    9. ' ,' → logprob: -7.308109283447266
    10. '[int' → logprob: -7.433109283447266

Token 117: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11225325614213943
    2. 'ent' → logprob: -2.862253189086914
    3. 'val' → logprob: -3.237253189086914
    4. 'result' → logprob: -5.487253189086914
    5. 'nombre' → logprob: -6.612253189086914
    6. '[' → logprob: -6.737253189086914
    7. 'nums' → logprob: -7.737253189086914
    8. '[n' → logprob: -7.737253189086914
    9. 'numbers' → logprob: -7.737253189086914
    10. 'nbr' → logprob: -8.362253189086914

Token 118: ' Transform' (ID: 27287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10127932578325272
    2. 'ent' → logprob: -3.3512792587280273
    3. 'val' → logprob: -3.8512792587280273
    4. ' nombres' → logprob: -4.351279258728027
    5. 'numbers' → logprob: -5.101279258728027
    6. ' ent' → logprob: -5.476279258728027
    7. 'nums' → logprob: -5.601279258728027
    8. 'nombre' → logprob: -6.101279258728027
    9. 'result' → logprob: -6.351279258728027
    10. ' valeurs' → logprob: -6.601279258728027

Token 119: 'e' (ID: 68)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.26401546597480774
    2. 'ant' → logprob: -2.5140154361724854
    3. 'er' → logprob: -2.6390154361724854
    4. '[val' → logprob: -3.8890154361724854
    5. ' val' → logprob: -4.0140156745910645
    6. 'e' → logprob: -4.8890156745910645
    7. '[' → logprob: -5.0140156745910645
    8. '#' → logprob: -5.2640156745910645
    9. 'ent' → logprob: -5.8890156745910645
    10. 'ation' → logprob: -6.1390156745910645

Token 120: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.33282244205474854
    2. ' int' → logprob: -2.082822322845459
    3. ' ' → logprob: -2.207822322845459
    4. 'int' → logprob: -4.207822322845459
    5. ' valeurs' → logprob: -5.082822322845459
    6. ' chacune' → logprob: -5.207822322845459
    7. ' val' → logprob: -5.457822322845459
    8. ' each' → logprob: -5.582822322845459
    9. ' en' → logprob: -5.582822322845459
    10. 'val' → logprob: -6.082822322845459

Token 121: ' chaîne' (ID: 89288)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.45968902111053467
    2. 'int' → logprob: -1.3346890211105347
    3. ' valeur' → logprob: -3.334689140319824
    4. 'élé' → logprob: -3.959689140319824
    5. ' int' → logprob: -4.334689140319824
    6. ' val' → logprob: -4.584689140319824
    7. ' élément' → logprob: -4.584689140319824
    8. ' chaîne' → logprob: -5.209689140319824
    9. ' chaine' → logprob: -5.459689140319824
    10. 'chaine' → logprob: -5.959689140319824

Token 122: ' de' (ID: 334)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0828957557678223
    2. ' en' → logprob: -1.2078957557678223
    3. 'en' → logprob: -1.5828957557678223
    4. '[val' → logprob: -2.5828957557678223
    5. '[' → logprob: -3.4578957557678223
    6. '_en' → logprob: -3.8328957557678223
    7. 'val' → logprob: -4.832895755767822
    8. 'int' → logprob: -5.582895755767822
    9. '_val' → logprob: -6.082895755767822
    10. '[:]' → logprob: -6.082895755767822

Token 123: ' caractères' (ID: 183106)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.024873249232769012
    2. 'int' → logprob: -3.7748732566833496
    3. 'chaine' → logprob: -7.52487325668335
    4. 'str' → logprob: -7.77487325668335
    5. ' val' → logprob: -8.399872779846191
    6. ' int' → logprob: -8.774872779846191
    7. 'string' → logprob: -9.649872779846191
    8. ' chaîne' → logprob: -9.774872779846191
    9. ' chaine' → logprob: -10.024872779846191
    10. ' valeurs' → logprob: -10.524872779846191

Token 124: ' représentant' (ID: 136122)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3640761375427246
    2. 'en' → logprob: -1.4890761375427246
    3. 'int' → logprob: -2.6140761375427246
    4. '[int' → logprob: -5.614076137542725
    5. ' int' → logprob: -7.739076137542725
    6. '[' → logprob: -7.864076137542725
    7. ',' → logprob: -7.989076137542725
    8. '=int' → logprob: -8.239076614379883
    9. 'in' → logprob: -8.364076614379883
    10. ' in' → logprob: -8.364076614379883

Token 125: ' un' (ID: 537)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.10299813747406
    2. ' un' → logprob: -1.10299813747406
    3. ' une' → logprob: -1.47799813747406
    4. ' chaque' → logprob: -3.3529982566833496
    5. ' ' → logprob: -3.4779982566833496
    6. 'une' → logprob: -4.85299825668335
    7. 'un' → logprob: -4.85299825668335
    8. 'val' → logprob: -4.85299825668335
    9. 'en' → logprob: -4.97799825668335
    10. ' val' → logprob: -6.22799825668335

Token 126: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.39459070563316345
    2. ' entier' → logprob: -1.7695907354354858
    3. 'nombre' → logprob: -2.0195906162261963
    4. 'ent' → logprob: -3.8945906162261963
    5. 'int' → logprob: -6.894590854644775
    6. ' ' → logprob: -6.894590854644775
    7. ' ent' → logprob: -8.394590377807617
    8. ' int' → logprob: -10.019590377807617
    9. 'n' → logprob: -10.019590377807617
    10. ' nombres' → logprob: -10.144590377807617

Token 127: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.003663968062028289
    2. 'en' → logprob: -5.878664016723633
    3. ' ' → logprob: -8.378664016723633
    4. ' in' → logprob: -8.378664016723633
    5. ' val' → logprob: -8.878664016723633
    6. ' int' → logprob: -10.003664016723633
    7. 'int' → logprob: -10.128664016723633
    8. 'val' → logprob: -10.253664016723633
    9. '_en' → logprob: -10.378664016723633
    10. ' par' → logprob: -10.378664016723633

Token 128: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6438417434692383
    2. 'int' → logprob: -1.2688417434692383
    3. ' int' → logprob: -2.0188417434692383
    4. ' entier' → logprob: -3.1438417434692383
    5. 'ent' → logprob: -4.768841743469238
    6. 'un' → logprob: -5.143841743469238
    7. ' des' → logprob: -6.768841743469238
    8. ' ' → logprob: -7.143841743469238
    9. ' nombre' → logprob: -7.393841743469238
    10. ' ent' → logprob: -8.393841743469238

Token 129: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.2679251730442047
    2. 'ent' → logprob: -1.6429251432418823
    3. 'int' → logprob: -3.642925262451172
    4. ' int' → logprob: -5.267925262451172
    5. ' nombre' → logprob: -5.767925262451172
    6. ' ' → logprob: -6.017925262451172
    7. 'e' → logprob: -6.142925262451172
    8. 'nombre' → logprob: -6.892925262451172
    9. ' ent' → logprob: -7.142925262451172
    10. '_ent' → logprob: -8.517925262451172

Token 130: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8026555776596069
    2. '[val' → logprob: -1.427655577659607
    3. 'val' → logprob: -2.0526556968688965
    4. 's' → logprob: -2.3026556968688965
    5. '[int' → logprob: -2.9276556968688965
    6. ' [' → logprob: -4.4276556968688965
    7. ',' → logprob: -5.0526556968688965
    8. '[:]' → logprob: -6.5526556968688965
    9. '[
' → logprob: -6.6776556968688965
    10. ' val' → logprob: -6.6776556968688965

Token 131: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20150084793567657
    2. ' int' → logprob: -1.7015008926391602
    3. '[int' → logprob: -9.57650089263916
    4. '```' → logprob: -11.82650089263916
    5. '=int' → logprob: -12.45150089263916
    6. '`' → logprob: -13.20150089263916
    7. ' ' → logprob: -13.95150089263916
    8. '(int' → logprob: -13.95150089263916
    9. ' la' → logprob: -14.32650089263916
    10. ':int' → logprob: -14.45150089263916

Token 132: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00193458900321275
    2. '[int' → logprob: -6.62693452835083
    3. ' int' → logprob: -7.50193452835083
    4. '=int' → logprob: -10.876935005187988
    5. '[' → logprob: -12.001935005187988
    6. 'list' → logprob: -12.251935005187988
    7. 'liste' → logprob: -12.376935005187988
    8. '```' → logprob: -12.501935005187988
    9. 'for' → logprob: -12.751935005187988
    10. 'ent' → logprob: -13.126935005187988

Token 133: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28122037649154663
    2. ' int' → logprob: -1.4062204360961914
    3. '[int' → logprob: -10.031220436096191
    4. '=int' → logprob: -11.406220436096191
    5. '(int' → logprob: -12.531220436096191
    6. '```' → logprob: -12.656220436096191
    7. '`' → logprob: -13.281220436096191
    8. '	int' → logprob: -13.406220436096191
    9. ' ' → logprob: -13.781220436096191
    10. ' ' → logprob: -14.406220436096191

Token 134: '().
' (ID: 58434)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3336286246776581
    2. '(' → logprob: -1.3336286544799805
    3. '[' → logprob: -4.2086286544799805
    4. '(val' → logprob: -6.2086286544799805
    5. '(
' → logprob: -7.0836286544799805
    6. '[val' → logprob: -7.0836286544799805
    7. 'val' → logprob: -7.4586286544799805
    8. '(s' → logprob: -8.95862865447998
    9. ',' → logprob: -9.08362865447998
    10. '[:]' → logprob: -9.33362865447998

Token 135: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6297866702079773
    2. 'ent' → logprob: -0.8797866702079773
    3. 'val' → logprob: -3.129786729812622
    4. 'result' → logprob: -5.379786491394043
    5. ' ent' → logprob: -7.254786491394043
    6. 'nombre' → logprob: -7.254786491394043
    7. 'numbers' → logprob: -8.004786491394043
    8. '[' → logprob: -8.129786491394043
    9. 'nums' → logprob: -8.254786491394043
    10. 'nbr' → logprob: -8.379786491394043

Token 136: ' Con' (ID: 1532)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4337244927883148
    2. 'ent' → logprob: -1.0587245225906372
    3. 'val' → logprob: -6.808724403381348
    4. 'result' → logprob: -6.808724403381348
    5. ' ent' → logprob: -6.933724403381348
    6. 'nombre' → logprob: -7.933724403381348
    7. 'nums' → logprob: -8.058724403381348
    8. ' nombres' → logprob: -8.433724403381348
    9. 'numbers' → logprob: -8.433724403381348
    10. 'liste' → logprob: -9.183724403381348

Token 137: 'str' (ID: 689)
  Prédit: 'vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.0206479262560606
    2. 'v' → logprob: -4.145648002624512
    3. 'verts' → logprob: -6.270648002624512
    4. 't' → logprob: -7.770648002624512
    5. 'ver' → logprob: -7.895648002624512
    6. 'version' → logprob: -7.895648002624512
    7. 'verted' → logprob: -8.020648002624512
    8. 'val' → logprob: -8.020648002624512
    9. 'n' → logprob: -8.145648002624512
    10. 's' → logprob: -8.520648002624512

Token 138: 'uit' (ID: 2136)
  Prédit: 'uit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uit' → logprob: -0.2258073091506958
    2. 'ruit' → logprob: -1.6008073091506958
    3. 'ru' → logprob: -8.975807189941406
    4. '=' → logprob: -9.100807189941406
    5. 'oit' → logprob: -9.975807189941406
    6. 'u' → logprob: -10.475807189941406
    7. '#' → logprob: -11.350807189941406
    8. 'it' → logprob: -11.475807189941406
    9. 'e' → logprob: -11.725807189941406
    10. 'ui' → logprob: -11.975807189941406

Token 139: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13643282651901245
    2. ' la' → logprob: -2.3864328861236572
    3. '[' → logprob: -4.261432647705078
    4. ' [' → logprob: -4.761432647705078
    5. 'une' → logprob: -4.886432647705078
    6. ' ' → logprob: -6.136432647705078
    7. ' un' → logprob: -6.386432647705078
    8. '[val' → logprob: -7.886432647705078
    9. ' liste' → logprob: -8.261432647705078
    10. ' a' → logprob: -9.136432647705078

Token 140: ' nouvelle' (ID: 24562)
  Prédit: ' nouvelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouvelle' → logprob: -0.23459134995937347
    2. 'nou' → logprob: -2.359591245651245
    3. 'liste' → logprob: -2.609591245651245
    4. ' liste' → logprob: -3.234591245651245
    5. 'n' → logprob: -6.984591484069824
    6. 'new' → logprob: -8.359591484069824
    7. ' new' → logprob: -8.609591484069824
    8. ' nouv' → logprob: -9.609591484069824
    9. '```' → logprob: -9.734591484069824
    10. ' nouvelles' → logprob: -9.734591484069824

Token 141: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.09094429761171341
    2. 'liste' → logprob: -2.465944290161133
    3. '[' → logprob: -6.590944290161133
    4. ' [' → logprob: -8.965944290161133
    5. 'list' → logprob: -8.965944290161133
    6. ' list' → logprob: -9.215944290161133
    7. 'Liste' → logprob: -9.340944290161133
    8. '[]' → logprob: -10.215944290161133
    9. ' ' → logprob: -10.215944290161133
    10. ' Liste' → logprob: -10.715944290161133

Token 142: ' '' (ID: 461)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4617464244365692
    2. 'val' → logprob: -1.9617464542388916
    3. 'n' → logprob: -2.5867464542388916
    4. '[' → logprob: -2.7117464542388916
    5. '[n' → logprob: -3.5867464542388916
    6. '[val' → logprob: -3.5867464542388916
    7. ' ent' → logprob: -4.0867462158203125
    8. ' valeurs' → logprob: -5.8367462158203125
    9. 'd' → logprob: -5.9617462158203125
    10. ' nombres' → logprob: -6.7117462158203125

Token 143: 'a' (ID: 64)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22795610129833221
    2. 'ent' → logprob: -1.7279560565948486
    3. 'val' → logprob: -3.8529560565948486
    4. ' nombres' → logprob: -6.602956295013428
    5. ' ent' → logprob: -6.852956295013428
    6. 'nombre' → logprob: -7.102956295013428
    7. ' valeurs' → logprob: -7.977956295013428
    8. ' n' → logprob: -8.35295581817627
    9. 'liste' → logprob: -8.35295581817627
    10. 'nums' → logprob: -9.10295581817627

Token 144: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02071589045226574
    2. '_ent' → logprob: -5.770715713500977
    3. 's' → logprob: -5.895715713500977
    4. 'a' → logprob: -5.895715713500977
    5. '_val' → logprob: -6.020715713500977
    6. 'n' → logprob: -6.395715713500977
    7. '_int' → logprob: -6.520715713500977
    8. '_' → logprob: -7.270715713500977
    9. '_a' → logprob: -7.520715713500977
    10. '=' → logprob: -7.645715713500977

Token 145: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775071978569031
    2. 'a' → logprob: -0.9525071978569031
    3. '=' → logprob: -3.327507257461548
    4. '[' → logprob: -4.327507019042969
    5. '[a' → logprob: -6.077507019042969
    6. ' a' → logprob: -7.077507019042969
    7. '_a' → logprob: -7.702507019042969
    8. '=[' → logprob: -9.577507019042969
    9. '=a' → logprob: -9.827507019042969
    10. '[:]' → logprob: -9.827507019042969

Token 146: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.0924937054514885
    2. 'cont' → logprob: -2.467493772506714
    3. ' cont' → logprob: -6.092493534088135
    4. 'a' → logprob: -7.717493534088135
    5. 'conten' → logprob: -8.842494010925293
    6. 'compr' → logprob: -8.842494010925293
    7. '```' → logprob: -9.467494010925293
    8. '_cont' → logprob: -9.592494010925293
    9. 's' → logprob: -9.717494010925293
    10. ' =' → logprob: -9.967494010925293

Token 147: ' tous' (ID: 10688)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9685421586036682
    2. '[' → logprob: -1.0935420989990234
    3. ' ces' → logprob: -1.9685420989990234
    4. '[int' → logprob: -3.3435420989990234
    5. ' [' → logprob: -3.7185420989990234
    6. ' des' → logprob: -3.9685420989990234
    7. ' chaque' → logprob: -4.093542098999023
    8. 'les' → logprob: -4.218542098999023
    9. 'a' → logprob: -4.218542098999023
    10. '[a' → logprob: -4.468542098999023

Token 148: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12098800390958786
    2. 'int' → logprob: -3.620987892150879
    3. 'les' → logprob: -3.870987892150879
    4. '[int' → logprob: -3.870987892150879
    5. ' int' → logprob: -3.995987892150879
    6. ' ces' → logprob: -4.620987892150879
    7. '[' → logprob: -4.995987892150879
    8. 'a' → logprob: -5.870987892150879
    9. ' [' → logprob: -6.245987892150879
    10. ' des' → logprob: -6.495987892150879

Token 149: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.542972981929779
    2. 'ent' → logprob: -1.0429730415344238
    3. ' nombres' → logprob: -2.792973041534424
    4. 'int' → logprob: -6.042973041534424
    5. ' entier' → logprob: -6.917973041534424
    6. ' éléments' → logprob: -7.542973041534424
    7. ' integers' → logprob: -7.667973041534424
    8. ' int' → logprob: -8.042972564697266
    9. 'inte' → logprob: -8.917972564697266
    10. 'val' → logprob: -9.292972564697266

Token 150: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0004909569397568703
    2. 'ier' → logprob: -8.25049114227295
    3. 'i' → logprob: -8.50049114227295
    4. 'ières' → logprob: -11.75049114227295
    5. '```' → logprob: -12.50049114227295
    6. '[i' → logprob: -12.75049114227295
    7. 'ers' → logprob: -12.87549114227295
    8. '[' → logprob: -13.50049114227295
    9. 'a' → logprob: -13.50049114227295
    10. '#' → logprob: -13.75049114227295

Token 151: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009391359984874725
    2. '[' → logprob: -5.2593913078308105
    3. ' a' → logprob: -5.7593913078308105
    4. '[a' → logprob: -7.8843913078308105
    5. '=' → logprob: -8.384391784667969
    6. ' =' → logprob: -8.759391784667969
    7. ']' → logprob: -9.009391784667969
    8. '_a' → logprob: -10.134391784667969
    9. '[:]' → logprob: -11.384391784667969
    10. '=a' → logprob: -11.384391784667969

Token 152: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9146995327901095e-05
    2. ' a' → logprob: -10.875019073486328
    3. '[' → logprob: -16.625019073486328
    4. ' 
' → logprob: -17.250019073486328
    5. '```' → logprob: -17.500019073486328
    6. '
' → logprob: -17.750019073486328
    7. '[
' → logprob: -18.125019073486328
    8. '[a' → logprob: -18.250019073486328
    9. '  
' → logprob: -18.875019073486328
    10. '	a' → logprob: -19.500019073486328

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759470462799072
    2. ' =' → logprob: -0.8259470462799072
    3. '[' → logprob: -13.325946807861328
    4. '=[' → logprob: -13.325946807861328
    5. ' =[' → logprob: -13.575946807861328
    6. '[:]' → logprob: -13.825946807861328
    7. '=[]' → logprob: -14.575946807861328
    8. 's' → logprob: -14.575946807861328
    9. '_' → logprob: -15.575946807861328
    10. 'a' → logprob: -15.825946807861328

Token 154: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2015247344970703
    2. ' [' → logprob: -1.7015247344970703
    3. '[' → logprob: -9.20152473449707
    4. '[list' → logprob: -11.95152473449707
    5. '[Int' → logprob: -12.82652473449707
    6. '[i' → logprob: -14.45152473449707
    7. '[len' → logprob: -15.45152473449707
    8. '[str' → logprob: -15.82652473449707
    9. '[input' → logprob: -15.82652473449707
    10. '[val' → logprob: -16.57652473449707

Token 155: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.088346359931165e-07
    2. ' int' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.75
    4. '(int' → logprob: -22.5
    5. '	int' → logprob: -23.375
    6. '```' → logprob: -23.75
    7. '<int' → logprob: -23.875
    8. ':int' → logprob: -23.875
    9. '[int' → logprob: -24.25
    10. '  ' → logprob: -24.25

Token 156: '(i' (ID: 3649)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.1391931027173996
    2. '(x' → logprob: -2.639193058013916
    3. '(v' → logprob: -2.889193058013916
    4. '(i' → logprob: -6.764193058013916
    5. '(' → logprob: -6.889193058013916
    6. ' (' → logprob: -7.889193058013916
    7. '(s' → logprob: -8.514193534851074
    8. '(value' → logprob: -9.139193534851074
    9. 'val' → logprob: -10.639193534851074
    10. 'x' → logprob: -13.139193534851074

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017994173686020076
    2. ' )' → logprob: -8.6251802444458
    3. ')]' → logprob: -15.7501802444458
    4. 'for' → logprob: -17.000179290771484
    5. '.strip' → logprob: -17.250179290771484
    6. ']' → logprob: -18.125179290771484
    7. '))' → logprob: -18.250179290771484
    8. ')`' → logprob: -18.500179290771484
    9. '')' → logprob: -18.625179290771484
    10. ')
' → logprob: -18.750179290771484

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4743395149707794
    2. ' for' → logprob: -0.974339485168457
    3. ')' → logprob: -8.349339485168457
    4. 'pour' → logprob: -11.099339485168457
    5. ' ' → logprob: -12.474339485168457
    6. ']' → logprob: -13.099339485168457
    7. ' pour' → logprob: -13.224339485168457
    8. '	for' → logprob: -13.474339485168457
    9. ' )' → logprob: -14.849339485168457
    10. ' in' → logprob: -15.349339485168457

Token 159: ' i' (ID: 575)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3903748691082001
    2. ' i' → logprob: -1.1403748989105225
    3. ' val' → logprob: -6.640374660491943
    4. 'val' → logprob: -7.265374660491943
    5. 'i' → logprob: -7.390374660491943
    6. ' valeur' → logprob: -8.015375137329102
    7. ' values' → logprob: -8.140375137329102
    8. ' ' → logprob: -9.140375137329102
    9. ' valores' → logprob: -9.765375137329102
    10. ' valori' → logprob: -10.140375137329102

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.523158848285675
    2. 'in' → logprob: -0.898158848285675
    3. 'val' → logprob: -11.39815902709961
    4. 'a' → logprob: -11.89815902709961
    5. ' ' → logprob: -12.14815902709961
    6. 'i' → logprob: -12.52315902709961
    7. ' i' → logprob: -12.89815902709961
    8. ')' → logprob: -13.64815902709961
    9. '	in' → logprob: -14.02315902709961
    10. ' ' → logprob: -14.52315902709961

Token 161: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.008627697825431824
    2. ' valeurs' → logprob: -4.758627891540527
    3. 'values' → logprob: -11.758627891540527
    4. ' val' → logprob: -12.508627891540527
    5. 'valu' → logprob: -14.883627891540527
    6. ' valeur' → logprob: -15.008627891540527
    7. 'vale' → logprob: -15.383627891540527
    8. 'Vale' → logprob: -15.508627891540527
    9. 'vals' → logprob: -15.633627891540527
    10. ' valores' → logprob: -15.883627891540527

Token 162: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019287518225610256
    2. ' ]' → logprob: -6.251928806304932
    3. ']
' → logprob: -16.626928329467773
    4. ')]' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.376928329467773
    6. ')' → logprob: -18.376928329467773
    7. ']

' → logprob: -18.751928329467773
    8. '];' → logprob: -18.876928329467773
    9. '()]' → logprob: -18.876928329467773
    10. '}' → logprob: -19.001928329467773

Token 163: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.974249005317688
    2. '
' → logprob: -1.599249005317688
    3. '<|end|>' → logprob: -1.724249005317688
    4. '#' → logprob: -1.849249005317688
    5. 'a' → logprob: -3.8492488861083984
    6. ' ' → logprob: -4.099248886108398
    7. '.' → logprob: -4.599248886108398
    8. ' 
' → logprob: -4.724248886108398
    9. '+' → logprob: -4.724248886108398
    10. '  
' → logprob: -5.724248886108398

Token 164: ' Trie' (ID: 131955)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8001977205276489
    2. 'a' → logprob: -1.800197720527649
    3. 's' → logprob: -2.0501976013183594
    4. '#' → logprob: -2.3001976013183594
    5. 'n' → logprob: -2.9251976013183594
    6. 'total' → logprob: -3.3001976013183594
    7. 'max' → logprob: -4.050197601318359
    8. 'm' → logprob: -4.800197601318359
    9. 'result' → logprob: -4.800197601318359
    10. 'sum' → logprob: -5.175197601318359

Token 165: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1298442780971527
    2. ' a' → logprob: -2.1298441886901855
    3. '()' → logprob: -6.1298441886901855
    4. '_' → logprob: -8.254844665527344
    5. '_a' → logprob: -8.379844665527344
    6. '(a' → logprob: -9.629844665527344
    7. 'la' → logprob: -9.879844665527344
    8. '(' → logprob: -10.129844665527344
    9. ' la' → logprob: -10.254844665527344
    10. 's' → logprob: -10.879844665527344

Token 166: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0907556414604187
    2. ' a' → logprob: -3.2157557010650635
    3. ' liste' → logprob: -3.5907557010650635
    4. 'liste' → logprob: -3.9657557010650635
    5. 'list' → logprob: -9.715755462646484
    6. ' list' → logprob: -11.715755462646484
    7. 'Liste' → logprob: -12.090755462646484
    8. ' ' → logprob: -12.340755462646484
    9. 'lista' → logprob: -12.465755462646484
    10. 'l' → logprob: -12.715755462646484

Token 167: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34848782420158386
    2. ' a' → logprob: -1.2234878540039062
    3. '()' → logprob: -10.473487854003906
    4. '.' → logprob: -13.098487854003906
    5. ' ' → logprob: -13.098487854003906
    6. ' ' → logprob: -13.473487854003906
    7. '(a' → logprob: -13.723487854003906
    8. ' 
' → logprob: -13.848487854003906
    9. '().' → logprob: -13.848487854003906
    10. 's' → logprob: -13.973487854003906

Token 168: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004307884373702109
    2. ' a' → logprob: -7.750430583953857
    3. ')' → logprob: -17.125431060791016
    4. ' ' → logprob: -17.250431060791016
    5. '
' → logprob: -17.875431060791016
    6. '```' → logprob: -18.500431060791016
    7. '	a' → logprob: -18.750431060791016
    8. '(a' → logprob: -18.750431060791016
    9. 'а' → logprob: -18.875431060791016
    10. '_a' → logprob: -19.000431060791016

Token 169: ''' (ID: 6)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.046574294567108154
    2. ']' → logprob: -4.046574115753174
    3. 'a' → logprob: -4.421574115753174
    4. '.' → logprob: -4.421574115753174
    5. ' ]' → logprob: -6.921574115753174
    6. '()]' → logprob: -7.296574115753174
    7. ')' → logprob: -7.546574115753174
    8. '()' → logprob: -7.796574115753174
    9. ' .' → logprob: -8.046574592590332
    10. '(a' → logprob: -8.421574592590332

Token 170: ' en' (ID: 469)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.08027627319097519
    2. '.' → logprob: -2.5802762508392334
    3. 'a' → logprob: -7.0802764892578125
    4. '.a' → logprob: -7.5802764892578125
    5. '=' → logprob: -12.205276489257812
    6. 'sort' → logprob: -12.205276489257812
    7. '.sorted' → logprob: -12.580276489257812
    8. ' .' → logprob: -12.705276489257812
    9. '.
' → logprob: -12.705276489257812
    10. '.s' → logprob: -13.330276489257812

Token 171: ' ordre' (ID: 103061)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.2327408641576767
    2. ' place' → logprob: -1.732740879058838
    3. 'a' → logprob: -3.857740879058838
    4. '-place' → logprob: -5.357740879058838
    5. ' a' → logprob: -5.732740879058838
    6. '_place' → logprob: -7.982740879058838
    7. 'l' → logprob: -8.48274040222168
    8. 'ordre' → logprob: -8.73274040222168
    9. 'lie' → logprob: -8.85774040222168
    10. 'plac' → logprob: -8.98274040222168

Token 172: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.4509958326816559
    2. ' cro' → logprob: -1.0759958028793335
    3. 'asc' → logprob: -4.325995922088623
    4. ' a' → logprob: -5.825995922088623
    5. 'a' → logprob: -5.950995922088623
    6. 'c' → logprob: -7.325995922088623
    7. ' ' → logprob: -7.700995922088623
    8. ' décro' → logprob: -7.700995922088623
    9. ' asc' → logprob: -8.075995445251465
    10. 'd' → logprob: -8.950995445251465

Token 173: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0023549527395516634
    2. 'issent' → logprob: -6.627355098724365
    3. 'issante' → logprob: -7.877355098724365
    4. 'issance' → logprob: -8.502354621887207
    5. 'iss' → logprob: -9.127354621887207
    6. 'issement' → logprob: -9.252354621887207
    7. 'ss' → logprob: -9.252354621887207
    8. 'issa' → logprob: -10.502354621887207
    9. '```' → logprob: -10.627354621887207
    10. '#' → logprob: -10.752354621887207

Token 174: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001220105797983706
    2. '.' → logprob: -7.001220226287842
    3. '.
' → logprob: -8.126219749450684
    4. ',' → logprob: -12.876219749450684
    5. '.a' → logprob: -13.001219749450684
    6. '
' → logprob: -13.126219749450684
    7. ' a' → logprob: -13.376219749450684
    8. '.sort' → logprob: -13.376219749450684
    9. ':
' → logprob: -14.626219749450684
    10. '(a' → logprob: -15.001219749450684

Token 175: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.849109119386412e-06
    2. ' a' → logprob: -11.625009536743164
    3. '
' → logprob: -14.000009536743164
    4. ' 
' → logprob: -18.250009536743164
    5. 'sorted' → logprob: -18.375009536743164
    6. '```' → logprob: -19.250009536743164
    7. '
' → logprob: -21.125009536743164
    8. '  
' → logprob: -21.250009536743164
    9. '

' → logprob: -21.750009536743164
    10. '	a' → logprob: -21.750009536743164

Token 176: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.36574100604048e-06
    2. ' a' → logprob: -12.375004768371582
    3. '
' → logprob: -17.500003814697266
    4. '```' → logprob: -19.125003814697266
    5. '	a' → logprob: -20.000003814697266
    6. 'sorted' → logprob: -20.000003814697266
    7. ' 
' → logprob: -21.125003814697266
    8. 'а' → logprob: -21.625003814697266
    9. '#' → logprob: -22.000003814697266
    10. '  
' → logprob: -22.125003814697266

Token 177: ''appel' (ID: 172839)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00017028623551595956
    2. 'iste' → logprob: -8.875170707702637
    3. '#' → logprob: -11.875170707702637
    4. 'ist' → logprob: -12.125170707702637
    5. 'e' → logprob: -12.250170707702637
    6. ''a' → logprob: -12.250170707702637
    7. 'st' → logprob: -13.750170707702637
    8. 'is' → logprob: -13.750170707702637
    9. '#a' → logprob: -13.875170707702637
    10. ' a' → logprob: -14.000170707702637

Token 178: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12285085767507553
    2. ' a' → logprob: -2.2478508949279785
    3. ' de' → logprob: -5.9978508949279785
    4. '=' → logprob: -6.1228508949279785
    5. ' =' → logprob: -6.6228508949279785
    6. '=a' → logprob: -6.6228508949279785
    7. 'de' → logprob: -7.2478508949279785
    8. ' à' → logprob: -7.2478508949279785
    9. 'à' → logprob: -8.12285041809082
    10. 'sort' → logprob: -8.24785041809082

Token 179: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03372419625520706
    2. ' a' → logprob: -3.408724308013916
    3. 'sorted' → logprob: -9.908723831176758
    4. ' sorted' → logprob: -11.158723831176758
    5. 'sort' → logprob: -11.533723831176758
    6. ' ' → logprob: -13.158723831176758
    7. '```' → logprob: -14.033723831176758
    8. ' sort' → logprob: -14.658723831176758
    9. 'print' → logprob: -14.908723831176758
    10. '`' → logprob: -15.408723831176758

Token 180: ' méthode' (ID: 71490)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10307303816080093
    2. 'sort' → logprob: -2.3530731201171875
    3. 'sorted' → logprob: -6.9780731201171875
    4. ' a' → logprob: -7.2280731201171875
    5. '.sort' → logprob: -7.6030731201171875
    6. 'list' → logprob: -7.9780731201171875
    7. ' sort' → logprob: -8.603073120117188
    8. 'liste' → logprob: -9.978073120117188
    9. '```' → logprob: -10.228073120117188
    10. 'fonction' → logprob: -10.603073120117188

Token 181: ' sort' (ID: 4506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027096183970570564
    2. 'sort' → logprob: -4.152096271514893
    3. ' a' → logprob: -4.652096271514893
    4. ' sort' → logprob: -7.152096271514893
    5. '.sort' → logprob: -7.402096271514893
    6. '.' → logprob: -10.277095794677734
    7. ' .' → logprob: -10.902095794677734
    8. 'sorted' → logprob: -12.027095794677734
    9. ' ' → logprob: -13.652095794677734
    10. '`' → logprob: -13.777095794677734

Token 182: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -11.125020980834961
    3. '()`' → logprob: -13.250020980834961
    4. ' ()' → logprob: -13.500020980834961
    5. '()
' → logprob: -13.625020980834961
    6. '()

' → logprob: -14.250020980834961
    7. '()]' → logprob: -14.750020980834961
    8. '().' → logprob: -16.37502098083496
    9. '（）' → logprob: -17.00002098083496
    10. '()"' → logprob: -17.25002098083496

Token 183: ' ré' (ID: 3146)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002238013403257355
    2. '()
' → logprob: -8.500224113464355
    3. 'a' → logprob: -11.875224113464355
    4. '(' → logprob: -12.000224113464355
    5. ' ()' → logprob: -13.250224113464355
    6. '()

' → logprob: -13.250224113464355
    7. '()`' → logprob: -13.750224113464355
    8. '(a' → logprob: -14.500224113464355
    9. '().' → logprob: -14.500224113464355
    10. '();' → logprob: -14.750224113464355

Token 184: 'organ' (ID: 9993)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6280211806297302
    2. 'ord' → logprob: -1.128021240234375
    3. 'organ' → logprob: -2.128021240234375
    4. 'arr' → logprob: -4.003021240234375
    5. 'a' → logprob: -6.628021240234375
    6. 'or' → logprob: -6.628021240234375
    7. 'orde' → logprob: -8.128021240234375
    8. 'unit' → logprob: -8.253021240234375
    9. 'ad' → logprob: -8.753021240234375
    10. 'é' → logprob: -9.003021240234375

Token 185: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0015669959830120206
    2. '()' → logprob: -7.3765668869018555
    3. 'ange' → logprob: -7.8765668869018555
    4. 'e' → logprob: -8.376566886901855
    5. 'ue' → logprob: -8.876566886901855
    6. 'aise' → logprob: -9.876566886901855
    7. 'a' → logprob: -10.001566886901855
    8. 'ize' → logprob: -10.126566886901855
    9. 'ie' → logprob: -11.501566886901855
    10. 'ase' → logprob: -11.626566886901855

Token 186: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.032847754657268524
    2. '()' → logprob: -3.7828476428985596
    3. 'la' → logprob: -5.032847881317139
    4. ' a' → logprob: -6.032847881317139
    5. ' la' → logprob: -7.657847881317139
    6. '(a' → logprob: -8.90784740447998
    7. 'l' → logprob: -11.78284740447998
    8. '(' → logprob: -12.28284740447998
    9. ' the' → logprob: -12.78284740447998
    10. ' ' → logprob: -13.28284740447998

Token 187: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0505855418741703
    2. ' a' → logprob: -3.1755855083465576
    3. 'liste' → logprob: -5.675585746765137
    4. ' éléments' → logprob: -6.550585746765137
    5. ' liste' → logprob: -6.550585746765137
    6. 'élé' → logprob: -7.050585746765137
    7. ' elements' → logprob: -8.800585746765137
    8. 'elements' → logprob: -9.425585746765137
    9. 'list' → logprob: -9.550585746765137
    10. '```' → logprob: -10.675585746765137

Token 188: ' dans' (ID: 2671)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05876452848315239
    2. 'a' → logprob: -3.1837644577026367
    3. ' de' → logprob: -4.683764457702637
    4. 'de' → logprob: -5.558764457702637
    5. ' a' → logprob: -6.183764457702637
    6. '(a' → logprob: -8.183764457702637
    7. '_a' → logprob: -10.058764457702637
    8. '(' → logprob: -10.183764457702637
    9. ' ()' → logprob: -10.558764457702637
    10. '()
' → logprob: -11.308764457702637

Token 189: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48550722002983093
    2. 'a' → logprob: -1.1105072498321533
    3. ' place' → logprob: -3.4855072498321533
    4. '-place' → logprob: -3.9855072498321533
    5. 'place' → logprob: -5.610507011413574
    6. 'la' → logprob: -6.735507011413574
    7. ' la' → logprob: -7.235507011413574
    8. 'l' → logprob: -8.485507011413574
    9. '_place' → logprob: -8.860507011413574
    10. 'liste' → logprob: -10.610507011413574

Token 190: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7071287035942078
    2. 'liste' → logprob: -0.7071287035942078
    3. 'place' → logprob: -4.582128524780273
    4. 'm' → logprob: -6.332128524780273
    5. 'list' → logprob: -6.957128524780273
    6. ' liste' → logprob: -8.082128524780273
    7. '```' → logprob: -8.832128524780273
    8. 'lie' → logprob: -8.957128524780273
    9. '-place' → logprob: -9.582128524780273
    10. ' a' → logprob: -9.707128524780273

Token 191: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09037095308303833
    2. '()' → logprob: -2.4653708934783936
    3. '()
' → logprob: -6.590371131896973
    4. '(a' → logprob: -11.715371131896973
    5. ' a' → logprob: -11.840371131896973
    6. '().' → logprob: -11.965371131896973
    7. '.' → logprob: -12.090371131896973
    8. '()

' → logprob: -12.590371131896973
    9. '(
' → logprob: -12.590371131896973
    10. '.a' → logprob: -12.965371131896973

Token 192: ' façon' (ID: 33381)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.18875376880168915
    2. ' place' → logprob: -2.188753843307495
    3. 'a' → logprob: -2.938753843307495
    4. ' a' → logprob: -5.563753604888916
    5. '-place' → logprob: -5.938753604888916
    6. 'la' → logprob: -8.688754081726074
    7. 'plac' → logprob: -8.938754081726074
    8. 'l' → logprob: -9.313754081726074
    9. '_place' → logprob: -9.813754081726074
    10. ' la' → logprob: -10.563754081726074

Token 193: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.392980933189392
    2. ' a' → logprob: -1.517980933189392
    3. 'cro' → logprob: -1.642980933189392
    4. ' in' → logprob: -2.0179810523986816
    5. 'in' → logprob: -2.5179810523986816
    6. ' cro' → logprob: -3.2679810523986816
    7. ' inplace' → logprob: -3.5179810523986816
    8. ' ascend' → logprob: -4.392981052398682
    9. ' permanente' → logprob: -4.642981052398682
    10. 'asc' → logprob: -4.767981052398682

Token 194: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.44027718901634216
    2. ' être' → logprob: -1.9402772188186646
    3. 'a' → logprob: -2.315277099609375
    4. 'être' → logprob: -3.190277099609375
    5. 'ce' → logprob: -3.440277099609375
    6. ' a' → logprob: -3.440277099609375
    7. ' etre' → logprob: -7.065277099609375
    8. ' pouvoir' → logprob: -7.315277099609375
    9. 'cro' → logprob: -7.690277099609375
    10. ' les' → logprob: -7.690277099609375

Token 195: ' qu' (ID: 474)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36343443393707275
    2. '#' → logprob: -1.2384344339370728
    3. ' a' → logprob: -4.488434314727783
    4. 'plus' → logprob: -6.863434314727783
    5. 'cro' → logprob: -7.488434314727783
    6. ' #' → logprob: -7.613434314727783
    7. '```' → logprob: -7.738434314727783
    8. '#a' → logprob: -7.863434314727783
    9. ' plus' → logprob: -8.613434791564941
    10. 'val' → logprob: -9.863434791564941

Token 196: ''ils' (ID: 41108)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10437090694904327
    2. ' a' → logprob: -2.7293708324432373
    3. ' qu' → logprob: -3.8543708324432373
    4. ' que' → logprob: -5.729371070861816
    5. '#' → logprob: -6.354371070861816
    6. 'e' → logprob: -6.729371070861816
    7. ''ils' → logprob: -6.854371070861816
    8. 'ue' → logprob: -7.104371070861816
    9. 'que' → logprob: -7.604371070861816
    10. 's' → logprob: -7.604371070861816

Token 197: ' soient' (ID: 59497)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.19210216403007507
    2. ' soient' → logprob: -1.8171021938323975
    3. 's' → logprob: -5.192101955413818
    4. ' so' → logprob: -5.692101955413818
    5. 'a' → logprob: -6.192101955413818
    6. ' soit' → logprob: -7.942101955413818
    7. '#' → logprob: -8.067102432250977
    8. ' puissent' → logprob: -9.067102432250977
    9. '_so' → logprob: -9.192102432250977
    10. ' a' → logprob: -9.442102432250977

Token 198: ' du' (ID: 1462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5216227769851685
    2. ' a' → logprob: -1.6466227769851685
    3. ' tri' → logprob: -1.8966227769851685
    4. 'tri' → logprob: -3.896622657775879
    5. ' en' → logprob: -4.271622657775879
    6. 'dans' → logprob: -5.271622657775879
    7. 'à' → logprob: -5.396622657775879
    8. ' dans' → logprob: -5.771622657775879
    9. ' à' → logprob: -6.021622657775879
    10. ' sorted' → logprob: -6.396622657775879

Token 199: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2538856863975525
    2. ' plus' → logprob: -1.5038857460021973
    3. 'moins' → logprob: -7.128885746002197
    4. 'a' → logprob: -7.878885746002197
    5. 'prem' → logprob: -7.878885746002197
    6. 'pet' → logprob: -9.503885269165039
    7. '```' → logprob: -9.753885269165039
    8. '#' → logprob: -10.128885269165039
    9. ' moindre' → logprob: -10.628885269165039
    10. '_plus' → logprob: -10.628885269165039

Token 200: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.1074351891875267
    2. ' petit' → logprob: -2.3574352264404297
    3. 'a' → logprob: -5.48243522644043
    4. ' a' → logprob: -6.10743522644043
    5. '```' → logprob: -7.98243522644043
    6. 'plus' → logprob: -9.23243522644043
    7. 'prem' → logprob: -9.85743522644043
    8. ' pet' → logprob: -9.85743522644043
    9. 'grand' → logprob: -9.85743522644043
    10. ' plus' → logprob: -10.73243522644043

Token 201: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.16511963307857513
    2. 'au' → logprob: -1.9151196479797363
    3. ' a' → logprob: -5.665119647979736
    4. 'a' → logprob: -7.040119647979736
    5. ' ' → logprob: -8.415119171142578
    6. ' à' → logprob: -8.415119171142578
    7. 'à' → logprob: -9.915119171142578
    8. '```' → logprob: -11.165119171142578
    9. ''au' → logprob: -12.165119171142578
    10. '  ' → logprob: -12.165119171142578

Token 202: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5875638127326965
    2. 'grand' → logprob: -0.9625638127326965
    3. ' plus' → logprob: -3.4625637531280518
    4. 'pet' → logprob: -4.087563991546631
    5. ' grand' → logprob: -4.837563991546631
    6. 'prem' → logprob: -6.087563991546631
    7. ' petit' → logprob: -6.587563991546631
    8. '```' → logprob: -6.837563991546631
    9. ' ' → logprob: -7.962563991546631
    10. ' ' → logprob: -8.337563514709473

Token 203: ' grand' (ID: 6363)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.056543879210948944
    2. 'grand' → logprob: -2.9315438270568848
    3. '```' → logprob: -7.681543827056885
    4. ' petit' → logprob: -8.056544303894043
    5. 'bas' → logprob: -8.181544303894043
    6. 'prem' → logprob: -8.181544303894043
    7. 'a' → logprob: -9.306544303894043
    8. '#' → logprob: -9.931544303894043
    9. 'pe' → logprob: -10.306544303894043
    10. 'plus' → logprob: -10.431544303894043

Token 204: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027458693832159042
    2. '.' → logprob: -3.777458667755127
    3. '.
' → logprob: -6.277458667755127
    4. '()' → logprob: -6.527458667755127
    5. '()
' → logprob: -8.277459144592285
    6. ')' → logprob: -8.527459144592285
    7. ' a' → logprob: -9.402459144592285
    8. '(a' → logprob: -9.527459144592285
    9. '(
' → logprob: -10.277459144592285
    10. '
' → logprob: -10.277459144592285

Token 205: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. '
' → logprob: -17.625
    3. ' a' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. ' 
' → logprob: -23.5
    6. '#' → logprob: -23.5
    7. '  
' → logprob: -24.25
    8. '#a' → logprob: -24.375
    9. 'а' → logprob: -25.125
    10. '_a' → logprob: -25.5

Token 206: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.009758212603628635
    2. '.' → logprob: -4.634757995605469
    3. ' .' → logprob: -14.634757995605469
    4. '.sorted' → logprob: -14.884757995605469
    5. '<|end|>' → logprob: -15.259757995605469
    6. 'sort' → logprob: -15.509757995605469
    7. '.setdefault' → logprob: -16.25975799560547
    8. '.reverse' → logprob: -16.25975799560547
    9. '.tolist' → logprob: -16.50975799560547
    10. '	sort' → logprob: -16.50975799560547

Token 207: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.625011444091797
    3. '()
' → logprob: -13.250011444091797
    4. '()`' → logprob: -14.625011444091797
    5. '()

' → logprob: -15.750011444091797
    6. ' ()' → logprob: -16.000011444091797
    7. '()]' → logprob: -17.250011444091797
    8. '();' → logprob: -17.375011444091797
    9. '().' → logprob: -17.625011444091797
    10. '())' → logprob: -17.750011444091797

Token 208: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2706795632839203
    2. '#' → logprob: -1.8956795930862427
    3. 'n' → logprob: -3.645679473876953
    4. 'a' → logprob: -3.645679473876953
    5. 'for' → logprob: -4.520679473876953
    6. 'b' → logprob: -4.645679473876953
    7. 'sum' → logprob: -5.645679473876953
    8. '[' → logprob: -6.020679473876953
    9. 'max' → logprob: -6.520679473876953
    10. 'if' → logprob: -7.020679473876953

Token 209: ' Vér' (ID: 159169)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12162111699581146
    2. 'for' → logprob: -3.1216211318969727
    3. 'm' → logprob: -3.4966211318969727
    4. 's' → logprob: -4.246621131896973
    5. 'n' → logprob: -4.371621131896973
    6. '#' → logprob: -5.246621131896973
    7. 'result' → logprob: -6.246621131896973
    8. 'total' → logprob: -7.121621131896973
    9. 'min' → logprob: -7.246621131896973
    10. 'if' → logprob: -7.246621131896973

Token 210: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0046399300917983055
    2. 'if' → logprob: -5.504640102386475
    3. '#' → logprob: -8.129639625549316
    4. 'ifier' → logprob: -9.129639625549316
    5. 'ifiez' → logprob: -10.004639625549316
    6. 'ifié' → logprob: -10.629639625549316
    7. 'rif' → logprob: -10.629639625549316
    8. 'ification' → logprob: -11.254639625549316
    9. 'ify' → logprob: -12.129639625549316
    10. 'ifi' → logprob: -12.129639625549316

Token 211: ' une' (ID: 2463)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.257974237203598
    2. 'if' → logprob: -1.8829742670059204
    3. ' si' → logprob: -2.632974147796631
    4. 'si' → logprob: -6.757974147796631
    5. ' len' → logprob: -7.007974147796631
    6. ' la' → logprob: -7.882974147796631
    7. 's' → logprob: -8.632974624633789
    8. ' que' → logprob: -9.007974624633789
    9. ' ' → logprob: -9.007974624633789
    10. 'len' → logprob: -9.257974624633789

Token 212: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7031011581420898
    2. '#' → logprob: -1.9531011581420898
    3. 's' → logprob: -2.20310115814209
    4. 'fois' → logprob: -2.32810115814209
    5. 'for' → logprob: -2.45310115814209
    6. ':' → logprob: -3.07810115814209
    7. 'condition' → logprob: -3.45310115814209
    8. 'possible' → logprob: -3.57810115814209
    9. 'long' → logprob: -3.70310115814209
    10. '=' → logprob: -3.95310115814209

Token 213: ' complexe' (ID: 78615)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42174842953681946
    2. 'if' → logprob: -1.171748399734497
    3. ' if' → logprob: -3.546748399734497
    4. ' :' → logprob: -5.546748638153076
    5. ':
' → logprob: -6.921748638153076
    6. 'for' → logprob: -8.921748161315918
    7. 'a' → logprob: -9.171748161315918
    8. '[' → logprob: -9.421748161315918
    9. 'si' → logprob: -9.671748161315918
    10. ' si' → logprob: -10.296748161315918

Token 214: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21034759283065796
    2. ':' → logprob: -1.7103476524353027
    3. ':
' → logprob: -5.710347652435303
    4. ' if' → logprob: -5.835347652435303
    5. 'for' → logprob: -6.085347652435303
    6. 'a' → logprob: -8.835347175598145
    7. ' :' → logprob: -10.210347175598145
    8. 'et' → logprob: -10.710347175598145
    9. ' =' → logprob: -10.710347175598145
    10. '=' → logprob: -10.835347175598145

Token 215: ' savoir' (ID: 22835)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1798015832901001
    2. ' len' → logprob: -2.8048014640808105
    3. 'a' → logprob: -3.3048014640808105
    4. '(len' → logprob: -3.4298014640808105
    5. 'all' → logprob: -4.4298014640808105
    6. ' all' → logprob: -5.3048014640808105
    7. ' i' → logprob: -5.5548014640808105
    8. 'i' → logprob: -5.5548014640808105
    9. ' a' → logprob: -6.1798014640808105
    10. '(a' → logprob: -6.4298014640808105

Token 216: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13443860411643982
    2. ' if' → logprob: -2.1344385147094727
    3. 'si' → logprob: -5.634438514709473
    4. ' si' → logprob: -6.134438514709473
    5. 'len' → logprob: -7.259438514709473
    6. 's' → logprob: -7.509438514709473
    7. '#' → logprob: -8.759438514709473
    8. 'for' → logprob: -9.009438514709473
    9. 'i' → logprob: -9.884438514709473
    10. ' s' → logprob: -10.009438514709473

Token 217: ' exactement' (ID: 108701)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.606957733631134
    2. 'a' → logprob: -0.981957733631134
    3. ' len' → logprob: -3.2319576740264893
    4. ' a' → logprob: -3.9819576740264893
    5. '(len' → logprob: -4.106957912445068
    6. '(a' → logprob: -5.606957912445068
    7. ' (' → logprob: -6.606957912445068
    8. 'all' → logprob: -8.10695743560791
    9. ' all' → logprob: -8.85695743560791
    10. '(' → logprob: -9.10695743560791

Token 218: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7929581999778748
    2. 'len' → logprob: -0.7929581999778748
    3. ' len' → logprob: -3.1679582595825195
    4. '(len' → logprob: -3.9179582595825195
    5. '3' → logprob: -4.5429582595825195
    6. ' a' → logprob: -4.6679582595825195
    7. '(a' → logprob: -5.2929582595825195
    8. ' ' → logprob: -6.4179582595825195
    9. '2' → logprob: -6.9179582595825195
    10. '4' → logprob: -7.0429582595825195

Token 219: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15972158312797546
    2. 'val' → logprob: -3.784721612930298
    3. '#' → logprob: -4.034721374511719
    4. ' éléments' → logprob: -4.284721374511719
    5. 'adj' → logprob: -4.409721374511719
    6. '0' → logprob: -4.409721374511719
    7. 'indices' → logprob: -4.534721374511719
    8. ' a' → logprob: -4.784721374511719
    9. 'diff' → logprob: -5.034721374511719
    10. 'elements' → logprob: -5.159721374511719

Token 220: ' trois' (ID: 25564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025479020550847054
    2. ' a' → logprob: -4.650478839874268
    3. 'val' → logprob: -4.775478839874268
    4. ' valeurs' → logprob: -6.025478839874268
    5. ' éléments' → logprob: -6.400478839874268
    6. ' nombres' → logprob: -7.525478839874268
    7. 'élé' → logprob: -7.650478839874268
    8. 'elements' → logprob: -7.900478839874268
    9. 'nombre' → logprob: -8.275479316711426
    10. '#' → logprob: -8.400479316711426

Token 221: ' ent' (ID: 1121)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4554014503955841
    2. 'prem' → logprob: -2.3304014205932617
    3. 'élé' → logprob: -2.9554014205932617
    4. 'val' → logprob: -2.9554014205932617
    5. 'ent' → logprob: -3.0804014205932617
    6. 'elements' → logprob: -3.4554014205932617
    7. '#' → logprob: -3.5804014205932617
    8. ' éléments' → logprob: -4.080401420593262
    9. ' nombres' → logprob: -4.455401420593262
    10. ' a' → logprob: -5.080401420593262

Token 222: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0005570820067077875
    2. 'a' → logprob: -8.375556945800781
    3. 'ières' → logprob: -8.875556945800781
    4. 'ier' → logprob: -9.000556945800781
    5. 'i' → logprob: -10.625556945800781
    6. 'ités' → logprob: -11.250556945800781
    7. 'ière' → logprob: -11.625556945800781
    8. 'e' → logprob: -12.125556945800781
    9. 'ié' → logprob: -12.875556945800781
    10. 's' → logprob: -13.125556945800781

Token 223: ' sont' (ID: 5242)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3336465358734131
    2. 's' → logprob: -1.833646535873413
    3. ' a' → logprob: -2.833646535873413
    4. ' sont' → logprob: -3.958646535873413
    5. 'for' → logprob: -4.208646774291992
    6. 'dans' → logprob: -4.833646774291992
    7. ' dans' → logprob: -5.458646774291992
    8. ' for' → logprob: -5.708646774291992
    9. ' de' → logprob: -5.958646774291992
    10. 'de' → logprob: -6.083646774291992

Token 224: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.443941205739975
    2. 'ég' → logprob: -1.3189412355422974
    3. 'a' → logprob: -3.068941116333008
    4. 'ident' → logprob: -3.943941116333008
    5. ' cons' → logprob: -4.818941116333008
    6. 'égal' → logprob: -5.943941116333008
    7. 'cons' → logprob: -6.068941116333008
    8. 'distinct' → logprob: -6.068941116333008
    9. ' ident' → logprob: -6.443941116333008
    10. 'les' → logprob: -6.443941116333008

Token 225: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.015042828395962715
    2. 'ales' → logprob: -5.015042781829834
    3. 'al' → logprob: -5.390042781829834
    4. 'als' → logprob: -6.390042781829834
    5. 'a' → logprob: -6.890042781829834
    6. 'ale' → logprob: -7.765042781829834
    7. '```' → logprob: -8.515043258666992
    8. 'au' → logprob: -10.140043258666992
    9. '``' → logprob: -10.265043258666992
    10. '#' → logprob: -10.515043258666992

Token 226: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007925291545689106
    2. ' if' → logprob: -5.382925510406494
    3. ':' → logprob: -5.757925510406494
    4. ':
' → logprob: -9.632925033569336
    5. 'a' → logprob: -9.757925033569336
    6. 'and' → logprob: -12.132925033569336
    7. ' and' → logprob: -12.382925033569336
    8. ' :' → logprob: -13.007925033569336
    9. 'i' → logprob: -14.132925033569336
    10. 'et' → logprob: -14.132925033569336

Token 227: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5829147100448608
    2. ' a' → logprob: -0.9579147100448608
    3. '(a' → logprob: -3.4579148292541504
    4. ' not' → logprob: -3.9579148292541504
    5. ' (' → logprob: -5.45791482925415
    6. 'not' → logprob: -6.83291482925415
    7. ' len' → logprob: -6.83291482925415
    8. 'len' → logprob: -7.70791482925415
    9. '(' → logprob: -8.082914352416992
    10. '(len' → logprob: -9.582914352416992

Token 228: ' troisième' (ID: 75373)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3214403986930847
    2. ' troisième' → logprob: -2.6964404582977295
    3. '#' → logprob: -3.1964404582977295
    4. 'len' → logprob: -3.4464404582977295
    5. ' third' → logprob: -3.4464404582977295
    6. ' a' → logprob: -3.5714404582977295
    7. 'third' → logprob: -4.19644021987915
    8. ' len' → logprob: -4.19644021987915
    9. 'tro' → logprob: -4.69644021987915
    10. ' reste' → logprob: -5.19644021987915

Token 229: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6151459217071533
    2. 'est' → logprob: -1.4901459217071533
    3. '!=' → logprob: -2.1151459217071533
    4. 'diff' → logprob: -2.8651459217071533
    5. ' !=' → logprob: -3.9901459217071533
    6. 's' → logprob: -3.9901459217071533
    7. 'a' → logprob: -5.365145683288574
    8. 'n' → logprob: -5.740145683288574
    9. ' différent' → logprob: -5.990145683288574
    10. ' n' → logprob: -6.365145683288574

Token 230: ' différent' (ID: 114823)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.014461871236562729
    2. ' différent' → logprob: -5.139461994171143
    3. 'different' → logprob: -5.389461994171143
    4. 'strict' → logprob: -6.264461994171143
    5. 'distinct' → logprob: -6.764461994171143
    6. 'égal' → logprob: -7.889461994171143
    7. 'd' → logprob: -8.514461517333984
    8. 'plus' → logprob: -9.389461517333984
    9. 'dif' → logprob: -9.514461517333984
    10. ' different' → logprob: -10.264461517333984

Token 231: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05327702313661575
    2. ':' → logprob: -3.053277015686035
    3. ' if' → logprob: -5.678277015686035
    4. ':
' → logprob: -6.803277015686035
    5. 'a' → logprob: -9.053277015686035
    6. 's' → logprob: -12.053277015686035
    7. 'elif' → logprob: -12.303277015686035
    8. ' :' → logprob: -12.553277015686035
    9. '.' → logprob: -13.053277015686035
    10. 'i' → logprob: -13.428277015686035

Token 232: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.723352049040841e-06
    2. 'a' → logprob: -13.250004768371582
    3. ' if' → logprob: -13.375004768371582
    4. 'i' → logprob: -13.875004768371582
    5. '```' → logprob: -15.250004768371582
    6. 'b' → logprob: -17.250003814697266
    7. 'x' → logprob: -17.625003814697266
    8. 'print' → logprob: -18.375003814697266
    9. 'If' → logprob: -19.000003814697266
    10. 'for' → logprob: -19.125003814697266

Token 233: ' '' (ID: 461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00031496648443862796
    2. ' if' → logprob: -8.250314712524414
    3. 'a' → logprob: -9.875314712524414
    4. 'b' → logprob: -14.875314712524414
    5. 'x' → logprob: -14.875314712524414
    6. 'result' → logprob: -14.875314712524414
    7. '```' → logprob: -15.500314712524414
    8. 'i' → logprob: -15.625314712524414
    9. 'elif' → logprob: -15.875314712524414
    10. 'for' → logprob: -16.125314712524414

Token 234: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.14759565889835358
    2. 'a' → logprob: -2.1475956439971924
    3. 'if' → logprob: -4.5225958824157715
    4. '(len' → logprob: -5.5225958824157715
    5. 'len' → logprob: -5.8975958824157715
    6. '((' → logprob: -6.2725958824157715
    7. ' (' → logprob: -7.3975958824157715
    8. ' a' → logprob: -8.772595405578613
    9. '(' → logprob: -9.647595405578613
    10. '(
' → logprob: -10.147595405578613

Token 235: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '.count' → logprob: -13.250004768371582
    3. 'count' → logprob: -13.250004768371582
    4. '#' → logprob: -15.000004768371582
    5. 'a' → logprob: -15.125004768371582
    6. '```' → logprob: -15.625004768371582
    7. '[
' → logprob: -15.875004768371582
    8. '[-' → logprob: -16.2500057220459
    9. '0' → logprob: -16.3750057220459
    10. ' [' → logprob: -16.5000057220459

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004452083958312869
    2. '1' → logprob: -7.750445365905762
    3. ' ' → logprob: -11.875445365905762
    4. '2' → logprob: -12.500445365905762
    5. '[' → logprob: -14.000445365905762
    6. '-' → logprob: -14.000445365905762
    7. '
' → logprob: -14.125445365905762
    8. '```' → logprob: -15.125445365905762
    9. ']' → logprob: -15.437945365905762
    10. ':' → logprob: -15.500445365905762

Token 237: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04501601308584213
    2. ']==' → logprob: -3.295016050338745
    3. '==' → logprob: -5.170015811920166
    4. 'a' → logprob: -8.045016288757324
    5. ' ==' → logprob: -8.295016288757324
    6. '[' → logprob: -8.545016288757324
    7. ' ]' → logprob: -8.920016288757324
    8. '```' → logprob: -9.545016288757324
    9. '']' → logprob: -9.795016288757324
    10. '=' → logprob: -9.920016288757324

Token 238: ' correspond' (ID: 11095)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0020885197445750237
    2. ' ==' → logprob: -6.25208854675293
    3. '=' → logprob: -8.87708854675293
    4. 'a' → logprob: -11.50208854675293
    5. '!=' → logprob: -12.50208854675293
    6. '==
' → logprob: -12.50208854675293
    7. '===' → logprob: -14.00208854675293
    8. ']==' → logprob: -14.75208854675293
    9. '[' → logprob: -14.87708854675293
    10. '```' → logprob: -15.00208854675293

Token 239: ' au' (ID: 2791)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9512561559677124
    2. ' ==' → logprob: -1.2012561559677124
    3. ' à' → logprob: -1.7012561559677124
    4. ' a' → logprob: -2.701256275177002
    5. 'a' → logprob: -2.951256275177002
    6. 'à' → logprob: -4.701256275177002
    7. '=' → logprob: -7.451256275177002
    8. ' au' → logprob: -7.951256275177002
    9. ' to' → logprob: -8.576255798339844
    10. ' ' → logprob: -8.576255798339844

Token 240: ' premier' (ID: 15506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1810755431652069
    2. 'prem' → logprob: -2.0560755729675293
    3. ' premier' → logprob: -4.056075572967529
    4. ' a' → logprob: -4.306075572967529
    5. 'nombre' → logprob: -6.681075572967529
    6. 'élé' → logprob: -6.931075572967529
    7. '1' → logprob: -7.056075572967529
    8. 'val' → logprob: -7.431075572967529
    9. 'first' → logprob: -7.806075572967529
    10. 'mil' → logprob: -8.306075096130371

Token 241: ' élément' (ID: 99627)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0623518228530884
    2. '==' → logprob: -1.3123518228530884
    3. 'a' → logprob: -2.187351703643799
    4. ' a' → logprob: -2.437351703643799
    5. ' élément' → logprob: -2.937351703643799
    6. ',' → logprob: -3.312351703643799
    7. ' ' → logprob: -4.062351703643799
    8. 'élé' → logprob: -4.062351703643799
    9. '=' → logprob: -4.687351703643799
    10. ' ,' → logprob: -4.812351703643799

Token 242: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5408738851547241
    2. '==' → logprob: -0.9158738851547241
    3. 'a' → logprob: -4.540874004364014
    4. ',' → logprob: -5.915874004364014
    5. ' a' → logprob: -6.540874004364014
    6. ' and' → logprob: -7.165874004364014
    7. 's' → logprob: -7.665874004364014
    8. 'if' → logprob: -8.040873527526855
    9. 'and' → logprob: -8.040873527526855
    10. ' ,' → logprob: -8.665873527526855

Token 243: 'le' (ID: 282)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09011204540729523
    2. ' a' → logprob: -2.5901119709014893
    3. ')' → logprob: -4.840112209320068
    4. '0' → logprob: -6.590112209320068
    5. ' ' → logprob: -7.715112209320068
    6. ' )' → logprob: -7.840112209320068
    7. ' égal' → logprob: -8.59011173248291
    8. '=' → logprob: -9.21511173248291
    9. ')a' → logprob: -9.21511173248291
    10. ' la' → logprob: -9.21511173248291

Token 244: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4402555525302887
    2. 'prem' → logprob: -1.5652555227279663
    3. ' plus' → logprob: -2.440255641937256
    4. 'a' → logprob: -3.315255641937256
    5. 'pet' → logprob: -4.565255641937256
    6. '1' → logprob: -6.065255641937256
    7. ' premier' → logprob: -6.190255641937256
    8. 'moins' → logprob: -6.440255641937256
    9. '==' → logprob: -6.815255641937256
    10. 'minimum' → logprob: -6.940255641937256

Token 245: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.11610236018896103
    2. ' petit' → logprob: -2.241102457046509
    3. 'bas' → logprob: -6.74110221862793
    4. 'à' → logprob: -7.36610221862793
    5. 'a' → logprob: -7.49110221862793
    6. 'grand' → logprob: -8.24110221862793
    7. '```' → logprob: -8.86610221862793
    8. 'small' → logprob: -9.24110221862793
    9. 'Petit' → logprob: -9.24110221862793
    10. '#' → logprob: -9.99110221862793

Token 246: ' après' (ID: 16460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2716016471385956
    2. ' )' → logprob: -2.271601676940918
    3. ' de' → logprob: -2.771601676940918
    4. '),' → logprob: -3.146601676940918
    5. 'de' → logprob: -4.771601676940918
    6. ' ),' → logprob: -5.021601676940918
    7. ',' → logprob: -5.271601676940918
    8. 'a' → logprob: -6.271601676940918
    9. ' et' → logprob: -6.521601676940918
    10. ' ' → logprob: -7.021601676940918

Token 247: ' tri' (ID: 12665)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.5031954050064087
    2. 'le' → logprob: -1.6281954050064087
    3. ' tri' → logprob: -1.7531954050064087
    4. 'tri' → logprob: -1.7531954050064087
    5. 'a' → logprob: -2.128195285797119
    6. 'sort' → logprob: -2.378195285797119
    7. ' a' → logprob: -4.503195285797119
    8. ' sort' → logprob: -5.128195285797119
    9. 'tr' → logprob: -6.628195285797119
    10. '#' → logprob: -7.003195285797119

Token 248: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.457197368144989
    2. '])' → logprob: -2.082197427749634
    3. ')' → logprob: -2.457197427749634
    4. '),' → logprob: -3.082197427749634
    5. '],' → logprob: -3.082197427749634
    6. ']),' → logprob: -3.707197427749634
    7. ']'' → logprob: -4.957197189331055
    8. ' ]' → logprob: -5.332197189331055
    9. 'a' → logprob: -5.332197189331055
    10. '']' → logprob: -5.457197189331055

Token 249: ' '' (ID: 461)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7968236804008484
    2. ' (' → logprob: -1.5468237400054932
    3. 'a' → logprob: -1.9218237400054932
    4. '(' → logprob: -1.9218237400054932
    5. ' a' → logprob: -3.671823740005493
    6. '((' → logprob: -4.296823501586914
    7. 'if' → logprob: -6.046823501586914
    8. ' ((' → logprob: -6.796823501586914
    9. '(
' → logprob: -8.171823501586914
    10. '#' → logprob: -8.171823501586914

Token 250: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08914077281951904
    2. ' a' → logprob: -2.4641408920288086
    3. ''' → logprob: -9.339140892028809
    4. ' '' → logprob: -10.089140892028809
    5. ''a' → logprob: -10.464140892028809
    6. ' ' → logprob: -10.589140892028809
    7. ' ' → logprob: -12.214140892028809
    8. '  ' → logprob: -13.276640892028809
    9. '   ' → logprob: -13.901640892028809
    10. ')' → logprob: -14.026640892028809

Token 251: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5027299822540954e-05
    2. '1' → logprob: -10.250055313110352
    3. 'a' → logprob: -12.625055313110352
    4. ']' → logprob: -12.750055313110352
    5. '#' → logprob: -12.875055313110352
    6. ''[' → logprob: -12.875055313110352
    7. ' [' → logprob: -13.500055313110352
    8. '[
' → logprob: -13.500055313110352
    9. '][' → logprob: -13.625055313110352
    10. ''' → logprob: -14.125055313110352

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1093578804284334e-05
    2. '2' → logprob: -10.500051498413086
    3. '0' → logprob: -11.000051498413086
    4. ' ' → logprob: -12.750051498413086
    5. '```' → logprob: -13.625051498413086
    6. ']' → logprob: -14.000051498413086
    7. '[' → logprob: -14.625051498413086
    8. '-' → logprob: -14.625051498413086
    9. '
' → logprob: -14.875051498413086
    10. '#' → logprob: -15.750051498413086

Token 253: ']'' (ID: 75642)
  Prédit: ']''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.07137764990329742
    2. ']' → logprob: -2.696377754211426
    3. ']=='' → logprob: -7.071377754211426
    4. ']==' → logprob: -8.571377754211426
    5. ''' → logprob: -8.821377754211426
    6. ' ]' → logprob: -9.196377754211426
    7. ']'
' → logprob: -9.946377754211426
    8. '']' → logprob: -10.321377754211426
    9. ']
' → logprob: -11.321377754211426
    10. '=='' → logprob: -11.571377754211426

Token 254: ' au' (ID: 2791)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25224852561950684
    2. '==' → logprob: -1.5022485256195068
    3. 'a' → logprob: -9.252248764038086
    4. ' !=' → logprob: -9.752248764038086
    5. ' ' → logprob: -9.877248764038086
    6. ' a' → logprob: -10.252248764038086
    7. '=' → logprob: -10.752248764038086
    8. '!=' → logprob: -11.002248764038086
    9. ' ' → logprob: -11.752248764038086
    10. ' #' → logprob: -11.877248764038086

Token 255: ' deuxième' (ID: 51664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1393022537231445
    2. ' second' → logprob: -1.6393022537231445
    3. ' milieu' → logprob: -2.0143022537231445
    4. ' deuxième' → logprob: -2.1393022537231445
    5. 'de' → logprob: -2.2643022537231445
    6. ' a' → logprob: -3.1393022537231445
    7. 'second' → logprob: -3.1393022537231445
    8. 'mil' → logprob: -3.6393022537231445
    9. '1' → logprob: -5.7643022537231445
    10. ' premier' → logprob: -5.7643022537231445

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.786492645740509
    2. ']' → logprob: -1.9114925861358643
    3. ' et' → logprob: -2.0364925861358643
    4. ' ==' → logprob: -2.6614925861358643
    5. ')' → logprob: -3.2864925861358643
    6. 'et' → logprob: -3.4114925861358643
    7. ' and' → logprob: -3.6614925861358643
    8. ' ,' → logprob: -4.286492824554443
    9. 'a' → logprob: -4.536492824554443
    10. 'élé' → logprob: -4.536492824554443

Token 257: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28264856338500977
    2. ' a' → logprob: -1.4076485633850098
    3. '#' → logprob: -8.282648086547852
    4. ' and' → logprob: -8.532648086547852
    5. ' #' → logprob: -8.657648086547852
    6. '#a' → logprob: -8.657648086547852
    7. ' et' → logprob: -8.907648086547852
    8. ' '' → logprob: -8.907648086547852
    9. 'et' → logprob: -8.907648086547852
    10. ''a' → logprob: -9.157648086547852

Token 258: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018164927139878273
    2. ' a' → logprob: -4.018165111541748
    3. ' ' → logprob: -12.89316463470459
    4. ' ' → logprob: -13.39316463470459
    5. '```' → logprob: -13.39316463470459
    6. '#' → logprob: -13.51816463470459
    7. '#a' → logprob: -13.64316463470459
    8. ' #' → logprob: -13.76816463470459
    9. '3' → logprob: -13.76816463470459
    10. ''a' → logprob: -14.14316463470459

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4358028471469879
    2. '2' → logprob: -1.0608028173446655
    3. ']' → logprob: -5.310802936553955
    4. '0' → logprob: -6.560802936553955
    5. ' ' → logprob: -7.935802936553955
    6. ']==' → logprob: -8.685802459716797
    7. '#' → logprob: -9.435802459716797
    8. '```' → logprob: -10.935802459716797
    9. ' [' → logprob: -11.060802459716797
    10. '[
' → logprob: -11.185802459716797

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.618001053633634e-05
    2. '1' → logprob: -11.250025749206543
    3. ' ' → logprob: -11.875025749206543
    4. '0' → logprob: -12.750025749206543
    5. ']' → logprob: -13.937525749206543
    6. '
' → logprob: -14.250025749206543
    7. '```' → logprob: -14.500025749206543
    8. '3' → logprob: -14.562525749206543
    9. '#' → logprob: -16.00002670288086
    10. '２' → logprob: -16.06252670288086

Token 261: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12806355953216553
    2. ']'' → logprob: -2.128063678741455
    3. ']==' → logprob: -7.628063678741455
    4. '']' → logprob: -8.128063201904297
    5. ']=='' → logprob: -8.753063201904297
    6. ' ]' → logprob: -9.503063201904297
    7. ']
' → logprob: -10.503063201904297
    8. ']'
' → logprob: -10.503063201904297
    9. 'a' → logprob: -11.253063201904297
    10. ''' → logprob: -11.378063201904297

Token 262: ' au' (ID: 2791)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.1105326414108276
    2. '!=' → logprob: -1.3605326414108276
    3. '==' → logprob: -1.4855326414108276
    4. ' ==' → logprob: -1.8605326414108276
    5. ']' → logprob: -4.485532760620117
    6. 'a' → logprob: -5.110532760620117
    7. ']==' → logprob: -5.610532760620117
    8. '#' → logprob: -5.860532760620117
    9. ' a' → logprob: -6.485532760620117
    10. ']!=' → logprob: -6.735532760620117

Token 263: ' troisième' (ID: 75373)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1638811826705933
    2. 'de' → logprob: -1.1638811826705933
    3. 'plus' → logprob: -2.413881301879883
    4. '1' → logprob: -3.038881301879883
    5. '0' → logprob: -3.038881301879883
    6. 'dern' → logprob: -3.163881301879883
    7. '#' → logprob: -3.413881301879883
    8. ' troisième' → logprob: -3.913881301879883
    9. 'third' → logprob: -4.038881301879883
    10. '3' → logprob: -4.163881301879883

Token 264: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015495175495743752
    2. ' if' → logprob: -5.265495300292969
    3. ':' → logprob: -5.390495300292969
    4. '=' → logprob: -6.015495300292969
    5. 'a' → logprob: -7.140495300292969
    6. ' =' → logprob: -7.265495300292969
    7. ')' → logprob: -7.390495300292969
    8. '==' → logprob: -8.140495300292969
    9. '#' → logprob: -8.765495300292969
    10. ' ==' → logprob: -9.015495300292969

Token 265: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8318843841552734
    2. ' le' → logprob: -1.4568843841552734
    3. 'le' → logprob: -2.0818843841552734
    4. ' )' → logprob: -2.4568843841552734
    5. '#' → logprob: -3.3318843841552734
    6. 'a' → logprob: -3.7068843841552734
    7. ' the' → logprob: -4.081884384155273
    8. ' a' → logprob: -4.206884384155273
    9. ')#' → logprob: -5.581884384155273
    10. ' #' → logprob: -5.706884384155273

Token 266: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.6899998784065247
    2. '#' → logprob: -1.3149998188018799
    3. ' plus' → logprob: -2.18999981880188
    4. 'dern' → logprob: -2.93999981880188
    5. ']' → logprob: -3.18999981880188
    6. ')' → logprob: -4.940000057220459
    7. ' dernier' → logprob: -5.565000057220459
    8. 'largest' → logprob: -6.315000057220459
    9. '])' → logprob: -6.690000057220459
    10. 'der' → logprob: -6.690000057220459

Token 267: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.3220416009426117
    2. ']' → logprob: -2.0720415115356445
    3. ')' → logprob: -2.5720415115356445
    4. '#' → logprob: -3.5720415115356445
    5. '```' → logprob: -4.0720415115356445
    6. 'pet' → logprob: -4.6970415115356445
    7. '3' → logprob: -5.9470415115356445
    8. '1' → logprob: -5.9470415115356445
    9. 'haut' → logprob: -6.1970415115356445
    10. 'd' → logprob: -6.3220415115356445

Token 268: ' après' (ID: 16460)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46639296412467957
    2. ')' → logprob: -1.091392993927002
    3. ')]' → logprob: -4.341392993927002
    4. ']
' → logprob: -4.841392993927002
    5. '])' → logprob: -5.841392993927002
    6. 'a' → logprob: -5.966392993927002
    7. ')
' → logprob: -6.341392993927002
    8. ' )' → logprob: -6.341392993927002
    9. ' ]' → logprob: -6.591392993927002
    10. 'et' → logprob: -7.091392993927002

Token 269: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.1710185557603836
    2. 'sort' → logprob: -2.671018600463867
    3. 'a' → logprob: -2.796018600463867
    4. ' tri' → logprob: -3.796018600463867
    5. ']' → logprob: -6.046018600463867
    6. ' sort' → logprob: -6.921018600463867
    7. ' a' → logprob: -7.296018600463867
    8. 'tr' → logprob: -8.796018600463867
    9. 'trim' → logprob: -9.546018600463867
    10. ' ' → logprob: -9.796018600463867

Token 270: ').

' (ID: 3991)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07922155410051346
    2. ')' → logprob: -3.079221487045288
    3. ']:' → logprob: -4.579221725463867
    4. ')]' → logprob: -4.829221725463867
    5. ']:
' → logprob: -5.579221725463867
    6. '):' → logprob: -5.954221725463867
    7. '):
' → logprob: -6.579221725463867
    8. ']
' → logprob: -6.579221725463867
    9. 'if' → logprob: -7.329221725463867
    10. ' ]' → logprob: -7.829221725463867

Token 271: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.896309739408025e-07
    2. ' if' → logprob: -14.375000953674316
    3. '```' → logprob: -16.125
    4. 'i' → logprob: -18.0
    5. 'ifs' → logprob: -20.75
    6. '#' → logprob: -20.875
    7. 'If' → logprob: -21.0
    8. 'elif' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. '	if' → logprob: -21.875

Token 272: ' Première' (ID: 179764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.511406809295295e-06
    2. ' if' → logprob: -12.000006675720215
    3. '```' → logprob: -15.375006675720215
    4. 'i' → logprob: -17.5000057220459
    5. 'a' → logprob: -18.3750057220459
    6. 'If' → logprob: -18.5000057220459
    7. 'si' → logprob: -18.8750057220459
    8. '#' → logprob: -19.3750057220459
    9. 'elif' → logprob: -19.3750057220459
    10. 's' → logprob: -19.3750057220459

Token 273: ' partie' (ID: 22139)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012839584611356258
    2. 'condition' → logprob: -4.7628397941589355
    3. ' if' → logprob: -5.6378397941589355
    4. ' condition' → logprob: -8.012839317321777
    5. 'elif' → logprob: -9.262839317321777
    6. 'cond' → logprob: -9.387839317321777
    7. ':' → logprob: -10.262839317321777
    8. ' =' → logprob: -10.387839317321777
    9. '_condition' → logprob: -10.887839317321777
    10. '(' → logprob: -11.262839317321777

Token 274: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018681157380342484
    2. '(a' → logprob: -4.268681049346924
    3. 'a' → logprob: -6.643681049346924
    4. '(' → logprob: -6.893681049346924
    5. ' if' → logprob: -7.268681049346924
    6. 'condition' → logprob: -7.393681049346924
    7. '((' → logprob: -8.018681526184082
    8. 'result' → logprob: -9.143681526184082
    9. 'equal' → logprob: -9.143681526184082
    10. 'is' → logprob: -9.268681526184082

Token 275: ' la' (ID: 557)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.17709128558635712
    2. 'a' → logprob: -2.052091360092163
    3. '((' → logprob: -4.177091121673584
    4. 'if' → logprob: -4.427091121673584
    5. '(' → logprob: -6.052091121673584
    6. 'la' → logprob: -6.802091121673584
    7. 'l' → logprob: -7.177091121673584
    8. ' (' → logprob: -7.302091121673584
    9. '#' → logprob: -7.802091121673584
    10. 'condition' → logprob: -8.427091598510742

Token 276: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027282387018203735
    2. 'condition' → logprob: -3.652282476425171
    3. '(a' → logprob: -7.777282238006592
    4. ' if' → logprob: -8.27728271484375
    5. 'a' → logprob: -9.40228271484375
    6. '(condition' → logprob: -9.40228271484375
    7. 'cond' → logprob: -10.02728271484375
    8. ' condition' → logprob: -10.52728271484375
    9. '((' → logprob: -10.52728271484375
    10. '(' → logprob: -10.90228271484375

Token 277: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2722935676574707
    2. '(a' → logprob: -1.6472935676574707
    3. 'a' → logprob: -3.1472935676574707
    4. '((' → logprob: -6.397293567657471
    5. '(' → logprob: -7.022293567657471
    6. ' if' → logprob: -8.522293090820312
    7. ' (' → logprob: -10.897293090820312
    8. '2' → logprob: -11.772293090820312
    9. ' a' → logprob: -12.022293090820312
    10. 'condition' → logprob: -12.022293090820312

Token 278: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.23661106824874878
    2. 'if' → logprob: -1.7366111278533936
    3. 'a' → logprob: -3.4866111278533936
    4. '((' → logprob: -5.6116108894348145
    5. '(' → logprob: -9.236611366271973
    6. ' if' → logprob: -9.236611366271973
    7. ' (' → logprob: -9.361611366271973
    8. '```' → logprob: -11.236611366271973
    9. ' a' → logprob: -11.611611366271973
    10. '(A' → logprob: -12.361611366271973

Token 279: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5765889286994934
    2. 'a' → logprob: -0.8265889286994934
    3. '(' → logprob: -8.07658863067627
    4. ' (' → logprob: -8.57658863067627
    5. '((' → logprob: -9.57658863067627
    6. ' a' → logprob: -9.70158863067627
    7. '(
' → logprob: -12.32658863067627
    8. '   ' → logprob: -12.45158863067627
    9. ' ' → logprob: -13.45158863067627
    10. '(len' → logprob: -13.57658863067627

Token 280: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016063073417171836
    2. '==' → logprob: -9.625160217285156
    3. '0' → logprob: -10.000160217285156
    4. 'a' → logprob: -11.375160217285156
    5. ' ==' → logprob: -11.500160217285156
    6. '```' → logprob: -12.125160217285156
    7. '#' → logprob: -12.375160217285156
    8. ' [' → logprob: -12.375160217285156
    9. '[
' → logprob: -13.000160217285156
    10. '1' → logprob: -13.125160217285156

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014931005716789514
    2. '1' → logprob: -9.000149726867676
    3. '[' → logprob: -11.250149726867676
    4. ' ' → logprob: -11.500149726867676
    5. '   ' → logprob: -13.750149726867676
    6. '```' → logprob: -14.500149726867676
    7. '2' → logprob: -14.625149726867676
    8. '#' → logprob: -15.625149726867676
    9. '(' → logprob: -16.62514877319336
    10. ']' → logprob: -16.87514877319336

Token 282: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7589418292045593
    2. ']' → logprob: -1.008941888809204
    3. ']==' → logprob: -1.883941888809204
    4. 'a' → logprob: -4.633941650390625
    5. ' ==' → logprob: -5.883941650390625
    6. '```' → logprob: -6.633941650390625
    7. '=' → logprob: -8.133941650390625
    8. '==
' → logprob: -8.258941650390625
    9. '``' → logprob: -8.633941650390625
    10. '[' → logprob: -9.008941650390625

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0866788998246193
    2. ' ==' → logprob: -2.586678981781006
    3. '=' → logprob: -5.711678981781006
    4. 'a' → logprob: -5.711678981781006
    5. '==
' → logprob: -7.461678981781006
    6. '```' → logprob: -9.086678504943848
    7. '#' → logprob: -9.336678504943848
    8. ')' → logprob: -9.461678504943848
    9. ' ' → logprob: -9.961678504943848
    10. ' a' → logprob: -9.961678504943848

Token 284: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00026217024424113333
    2. ' a' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.125262260437012
    4. ')' → logprob: -15.625262260437012
    5. ')a' → logprob: -17.125261306762695
    6. '	a' → logprob: -17.500261306762695
    7. '   ' → logprob: -17.750261306762695
    8. ' ' → logprob: -18.875261306762695
    9. '  
' → logprob: -19.000261306762695
    10. '[' → logprob: -19.187761306762695

Token 285: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014170442707836628
    2. '1' → logprob: -4.2641706466674805
    3. ']' → logprob: -13.26417064666748
    4. 'a' → logprob: -13.51417064666748
    5. '][' → logprob: -14.26417064666748
    6. ' ' → logprob: -14.38917064666748
    7. ' [' → logprob: -14.51417064666748
    8. '[
' → logprob: -14.51417064666748
    9. '   ' → logprob: -14.76417064666748
    10. '```' → logprob: -15.01417064666748

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. '2' → logprob: -12.250006675720215
    3. '0' → logprob: -14.500006675720215
    4. '
' → logprob: -15.000006675720215
    5. ' ' → logprob: -15.062506675720215
    6. '[' → logprob: -15.375006675720215
    7. ']' → logprob: -16.5000057220459
    8. '```' → logprob: -17.0000057220459
    9. '۱' → logprob: -17.2500057220459
    10. '`' → logprob: -17.3750057220459

Token 287: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.30319973826408386
    2. ')' → logprob: -1.9281997680664062
    3. 'and' → logprob: -2.1781997680664062
    4. ' or' → logprob: -5.928199768066406
    5. 'or' → logprob: -9.178199768066406
    6. ' )' → logprob: -9.178199768066406
    7. ' ' → logprob: -11.678199768066406
    8. '   ' → logprob: -12.553199768066406
    9. '==' → logprob: -12.553199768066406
    10. 'a' → logprob: -13.053199768066406

Token 288: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22361153364181519
    2. 'and' → logprob: -2.09861159324646
    3. ')' → logprob: -2.72361159324646
    4. ' or' → logprob: -4.473611354827881
    5. 'or' → logprob: -7.348611354827881
    6. ' )' → logprob: -10.098611831665039
    7. ' ' → logprob: -11.723611831665039
    8. '   ' → logprob: -13.098611831665039
    9. '```' → logprob: -13.223611831665039
    10. 'a' → logprob: -13.223611831665039

Token 289: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889308780431747
    2. ' a' → logprob: -2.5788931846618652
    3. ' ' → logprob: -13.703892707824707
    4. '(a' → logprob: -13.953892707824707
    5. ' ' → logprob: -15.203892707824707
    6. ' not' → logprob: -15.453892707824707
    7. '	a' → logprob: -15.453892707824707
    8. 'not' → logprob: -15.828892707824707
    9. ')' → logprob: -15.828892707824707
    10. ')a' → logprob: -16.203893661499023

Token 290: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -14.000001907348633
    3. '```' → logprob: -15.250001907348633
    4. ' [' → logprob: -15.625001907348633
    5. '][' → logprob: -15.750001907348633
    6. '0' → logprob: -16.000001907348633
    7. '[
' → logprob: -16.000001907348633
    8. '
' → logprob: -16.000001907348633
    9. 'a' → logprob: -17.750001907348633
    10. ']' → logprob: -17.875001907348633

Token 291: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002124806633219123
    2. '1' → logprob: -8.500212669372559
    3. '0' → logprob: -12.750212669372559
    4. '[' → logprob: -12.875212669372559
    5. ' ' → logprob: -13.250212669372559
    6. '```' → logprob: -14.000212669372559
    7. '
' → logprob: -14.500212669372559
    8. '``' → logprob: -16.125211715698242
    9. '   ' → logprob: -16.875211715698242
    10. ']' → logprob: -17.562711715698242

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.831976592540741
    2. '!=' → logprob: -0.956976592540741
    3. ')' → logprob: -1.9569766521453857
    4. ' !=' → logprob: -3.7069766521453857
    5. '==' → logprob: -4.456976413726807
    6. ']!=' → logprob: -6.331976413726807
    7. ' ' → logprob: -7.706976413726807
    8. '=' → logprob: -8.331976890563965
    9. ')!=' → logprob: -8.581976890563965
    10. ']==' → logprob: -8.831976890563965

Token 293: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5498360991477966
    2. '==' → logprob: -0.9248360991477966
    3. ' !=' → logprob: -3.7998361587524414
    4. ' ==' → logprob: -5.799836158752441
    5. ')' → logprob: -7.799836158752441
    6. '=' → logprob: -8.049836158752441
    7. ' ' → logprob: -9.549836158752441
    8. '<' → logprob: -9.924836158752441
    9. '```' → logprob: -10.049836158752441
    10. ']' → logprob: -11.549836158752441

Token 294: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019287518225610256
    2. ' a' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.626928329467773
    4. '	a' → logprob: -17.501928329467773
    5. ' ' → logprob: -18.501928329467773
    6. '   ' → logprob: -18.751928329467773
    7. ')a' → logprob: -19.126928329467773
    8. ')' → logprob: -19.251928329467773
    9. 'а' → logprob: -20.376928329467773
    10. '  ' → logprob: -20.501928329467773

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10025767236948013
    2. '2' → logprob: -2.350257635116577
    3. ']' → logprob: -11.100257873535156
    4. '[
' → logprob: -11.350257873535156
    5. '][' → logprob: -11.850257873535156
    6. ' [' → logprob: -12.725257873535156
    7. ' ' → logprob: -12.975257873535156
    8. '```' → logprob: -13.100257873535156
    9. '(' → logprob: -13.225257873535156
    10. '
' → logprob: -13.350257873535156

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8921695047756657e-05
    2. '0' → logprob: -10.750028610229492
    3. '[' → logprob: -11.875028610229492
    4. '1' → logprob: -15.750028610229492
    5. ' ' → logprob: -15.750028610229492
    6. '```' → logprob: -15.875028610229492
    7. '
' → logprob: -17.500028610229492
    8. '``' → logprob: -17.687528610229492
    9. ']' → logprob: -18.187528610229492
    10. '２' → logprob: -18.437528610229492

Token 297: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022129806166049093
    2. '):' → logprob: -8.625221252441406
    3. ' )' → logprob: -10.750221252441406
    4. '))' → logprob: -11.125221252441406
    5. ' and' → logprob: -13.500221252441406
    6. ')#' → logprob: -14.000221252441406
    7. ':' → logprob: -14.125221252441406
    8. '#' → logprob: -14.875221252441406
    9. 'and' → logprob: -15.250221252441406
    10. '),' → logprob: -15.250221252441406

Token 298: '#' (ID: 2)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.47930073738098145
    2. 'or' → logprob: -1.1043007373809814
    3. ')' → logprob: -3.2293007373809814
    4. 'if' → logprob: -4.979300498962402
    5. ' and' → logprob: -6.479300498962402
    6. 'and' → logprob: -6.729300498962402
    7. ' if' → logprob: -10.104300498962402
    8. ' )' → logprob: -10.354300498962402
    9. '()' → logprob: -11.354300498962402
    10. 'elif' → logprob: -11.729300498962402

Token 299: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07834365963935852
    2. 'or' → logprob: -2.953343629837036
    3. ' or' → logprob: -4.203343868255615
    4. ' if' → logprob: -5.703343868255615
    5. 'and' → logprob: -5.953343868255615
    6. ')' → logprob: -6.828343868255615
    7. ' and' → logprob: -7.453343868255615
    8. '(' → logprob: -7.953343868255615
    9. 'elif' → logprob: -9.578343391418457
    10. 'ou' → logprob: -9.953343391418457

Token 300: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.006398565601557493
    2. 'if' → logprob: -5.381398677825928
    3. '#' → logprob: -6.756398677825928
    4. 'ifiez' → logprob: -8.13139820098877
    5. 'f' → logprob: -8.38139820098877
    6. 'ifié' → logprob: -9.88139820098877
    7. 'ifier' → logprob: -11.88139820098877
    8. 'ifi' → logprob: -11.88139820098877
    9. 'ifiant' → logprob: -12.38139820098877
    10. 's' → logprob: -12.88139820098877

Token 301: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35592177510261536
    2. 'if' → logprob: -1.230921745300293
    3. 'a' → logprob: -6.230921745300293
    4. ' si' → logprob: -6.355921745300293
    5. 'si' → logprob: -6.605921745300293
    6. ' (' → logprob: -7.105921745300293
    7. ' a' → logprob: -7.730921745300293
    8. '(a' → logprob: -7.730921745300293
    9. '<|end|>' → logprob: -9.105921745300293
    10. '(' → logprob: -9.105921745300293

Token 302: ' les' (ID: 1341)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.30534908175468445
    2. 'a' → logprob: -1.4303491115570068
    3. ' (' → logprob: -4.430348873138428
    4. ' a' → logprob: -4.430348873138428
    5. '(' → logprob: -9.680349349975586
    6. '#a' → logprob: -11.305349349975586
    7. ' ' → logprob: -12.805349349975586
    8. '(
' → logprob: -13.555349349975586
    9. '((' → logprob: -13.930349349975586
    10. '_a' → logprob: -13.930349349975586

Token 303: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.45180273056030273
    2. 'a' → logprob: -1.0768027305603027
    3. '(a' → logprob: -4.951802730560303
    4. 'prem' → logprob: -4.951802730560303
    5. ' deux' → logprob: -5.326802730560303
    6. ' a' → logprob: -6.576802730560303
    7. 'two' → logprob: -6.826802730560303
    8. ' two' → logprob: -8.076803207397461
    9. '#' → logprob: -8.576803207397461
    10. ' premier' → logprob: -8.701803207397461

Token 304: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.08274973928928375
    2. ' premiers' → logprob: -3.082749843597412
    3. 'a' → logprob: -3.457749843597412
    4. ' a' → logprob: -7.582749843597412
    5. ' premières' → logprob: -7.707749843597412
    6. ' premier' → logprob: -7.957749843597412
    7. 'first' → logprob: -8.207749366760254
    8. '#' → logprob: -9.207749366760254
    9. 'élé' → logprob: -9.582749366760254
    10. 'pr' → logprob: -9.957749366760254

Token 305: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1000498533248901
    2. 'élé' → logprob: -1.1000498533248901
    3. ' éléments' → logprob: -1.8500498533248901
    4. '<|end|>' → logprob: -2.6000499725341797
    5. 'elements' → logprob: -2.7250499725341797
    6. ' elements' → logprob: -4.22504997253418
    7. ' a' → logprob: -4.35004997253418
    8. 'tokens' → logprob: -6.35004997253418
    9. 'elem' → logprob: -6.85004997253418
    10. 'val' → logprob: -7.10004997253418

Token 306: ' sont' (ID: 5242)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3970453441143036
    2. 'and' → logprob: -1.147045373916626
    3. 'a' → logprob: -6.147045135498047
    4. '==' → logprob: -6.272045135498047
    5. ' or' → logprob: -6.647045135498047
    6. ' a' → logprob: -6.772045135498047
    7. 'et' → logprob: -6.897045135498047
    8. ' ==' → logprob: -7.022045135498047
    9. 'or' → logprob: -7.522045135498047
    10. ' et' → logprob: -7.647045135498047

Token 307: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.006751255132257938
    2. ' ég' → logprob: -5.50675106048584
    3. 'égal' → logprob: -6.13175106048584
    4. 'ident' → logprob: -8.00675106048584
    5. 'eg' → logprob: -9.38175106048584
    6. 'égalité' → logprob: -9.75675106048584
    7. 'equal' → logprob: -12.13175106048584
    8. 'Ég' → logprob: -12.88175106048584
    9. 'équ' → logprob: -13.38175106048584
    10. '==' → logprob: -13.50675106048584

Token 308: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -4.203409844194539e-05
    2. 'a' → logprob: -11.000041961669922
    3. 'au' → logprob: -11.875041961669922
    4. 'als' → logprob: -12.000041961669922
    5. '```' → logprob: -12.375041961669922
    6. 'al' → logprob: -12.625041961669922
    7. 'Aux' → logprob: -14.125041961669922
    8. '#' → logprob: -14.500041961669922
    9. '``' → logprob: -14.750041961669922
    10. 'ux' → logprob: -14.750041961669922

Token 309: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026650788262486458
    2. 'and' → logprob: -4.651650905609131
    3. 'or' → logprob: -4.776650905609131
    4. ' or' → logprob: -5.276650905609131
    5. ' and' → logprob: -6.401650905609131
    6. ' if' → logprob: -6.526650905609131
    7. ')' → logprob: -10.151650428771973
    8. 'et' → logprob: -10.901650428771973
    9. 'ou' → logprob: -11.151650428771973
    10. 'a' → logprob: -11.901650428771973

Token 310: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08942814916372299
    2. ' a' → logprob: -2.839428186416626
    3. ' and' → logprob: -4.339427947998047
    4. ')' → logprob: -4.589427947998047
    5. 'and' → logprob: -5.964427947998047
    6. ' )' → logprob: -7.464427947998047
    7. 'et' → logprob: -8.089427947998047
    8. ' et' → logprob: -8.214427947998047
    9. ')a' → logprob: -10.214427947998047
    10. ' but' → logprob: -10.714427947998047

Token 311: ''est' (ID: 6616)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.9170549511909485
    2. 'and' → logprob: -1.0420548915863037
    3. 'a' → logprob: -2.1670548915863037
    4. ')' → logprob: -3.0420548915863037
    5. ' and' → logprob: -4.042055130004883
    6. '')' → logprob: -4.292055130004883
    7. '#' → logprob: -4.292055130004883
    8. ''et' → logprob: -5.167055130004883
    9. 'es' → logprob: -5.292055130004883
    10. ''a' → logprob: -5.417055130004883

Token 312: '-à' (ID: 56297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7855358719825745
    2. ' True' → logprob: -1.2855358123779297
    3. 'True' → logprob: -1.5355358123779297
    4. ' vrai' → logprob: -4.91053581237793
    5. 'true' → logprob: -5.28553581237793
    6. ' a' → logprob: -5.28553581237793
    7. 'que' → logprob: -5.41053581237793
    8. 'v' → logprob: -5.53553581237793
    9. 'equal' → logprob: -5.53553581237793
    10. 'égal' → logprob: -5.53553581237793

Token 313: '-dire' (ID: 76064)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2676399052143097
    2. 'True' → logprob: -1.7676398754119873
    3. 'à' → logprob: -3.7676398754119873
    4. ' True' → logprob: -4.142640113830566
    5. '1' → logprob: -5.267640113830566
    6. 'true' → logprob: -5.392640113830566
    7. '#' → logprob: -6.267640113830566
    8. 'False' → logprob: -6.392640113830566
    9. 'la' → logprob: -6.767640113830566
    10. '0' → logprob: -6.892640113830566

Token 314: ' au' (ID: 2791)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16590198874473572
    2. ' a' → logprob: -2.9159018993377686
    3. 'que' → logprob: -3.1659018993377686
    4. 'les' → logprob: -4.165902137756348
    5. 'de' → logprob: -4.290902137756348
    6. ' que' → logprob: -5.165902137756348
    7. 'equal' → logprob: -5.790902137756348
    8. ' les' → logprob: -6.415902137756348
    9. ' deux' → logprob: -6.540902137756348
    10. ' ég' → logprob: -6.540902137756348

Token 315: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.08129844069480896
    2. 'mil' → logprob: -3.206298351287842
    3. 'prem' → logprob: -3.956298351287842
    4. 'mo' → logprob: -4.706298351287842
    5. 'm' → logprob: -5.831298351287842
    6. 'minimum' → logprob: -5.956298351287842
    7. 'plus' → logprob: -7.081298351287842
    8. ' moins' → logprob: -7.456298351287842
    9. 'a' → logprob: -7.581298351287842
    10. 'de' → logprob: -7.706298351287842

Token 316: ' un' (ID: 537)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.022594191133975983
    2. 'une' → logprob: -4.397593975067139
    3. 'un' → logprob: -5.772593975067139
    4. 'les' → logprob: -6.147593975067139
    5. ' deux' → logprob: -6.147593975067139
    6. '```' → logprob: -7.397593975067139
    7. 'l' → logprob: -8.272594451904297
    8. 'a' → logprob: -8.897594451904297
    9. '#' → logprob: -9.022594451904297
    10. 'quel' → logprob: -9.147594451904297

Token 317: ' doubl' (ID: 127992)
  Prédit: 'égalité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -1.1297783851623535
    2. 'a' → logprob: -1.5047783851623535
    3. '=' → logprob: -2.6297783851623535
    4. 'égal' → logprob: -3.1297783851623535
    5. 'e' → logprob: -3.3797783851623535
    6. 'prem' → logprob: -3.5047783851623535
    7. ' égal' → logprob: -3.5047783851623535
    8. 'pair' → logprob: -3.5047783851623535
    9. ')' → logprob: -3.7547783851623535
    10. ' couple' → logprob: -4.0047783851623535

Token 318: 'on' (ID: 263)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5334314107894897
    2. 'le' → logprob: -1.2834314107894897
    3. 'e' → logprob: -2.4084315299987793
    4. 'on' → logprob: -3.4084315299987793
    5. 'lé' → logprob: -4.658431529998779
    6. 'ée' → logprob: -7.033431529998779
    7. 'a' → logprob: -7.408431529998779
    8. 'o' → logprob: -7.533431529998779
    9. 'onné' → logprob: -7.783431529998779
    10. 'l' → logprob: -7.908431529998779

Token 319: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46308889985084534
    2. ' and' → logprob: -1.338088870048523
    3. 'and' → logprob: -2.5880889892578125
    4. 'et' → logprob: -4.0880889892578125
    5. ' et' → logprob: -4.3380889892578125
    6. ' )' → logprob: -6.8380889892578125
    7. 'a' → logprob: -7.5880889892578125
    8. '   ' → logprob: -7.9630889892578125
    9. 'if' → logprob: -8.088088989257812
    10. ' or' → logprob: -8.088088989257812

Token 320: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.04959988594055176
    2. 'de' → logprob: -4.049599647521973
    3. 'mil' → logprob: -4.424599647521973
    4. 'd' → logprob: -5.174599647521973
    5. 'deb' → logprob: -6.299599647521973
    6. 'prem' → logprob: -6.299599647521973
    7. 'som' → logprob: -6.549599647521973
    8. 'moins' → logprob: -6.799599647521973
    9. 'tout' → logprob: -6.799599647521973
    10. 'start' → logprob: -6.924599647521973

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09098325669765472
    2. ' and' → logprob: -3.3409831523895264
    3. 'and' → logprob: -4.0909833908081055
    4. ' )' → logprob: -4.3409833908081055
    5. 'et' → logprob: -4.4659833908081055
    6. ' et' → logprob: -5.2159833908081055
    7. 'a' → logprob: -5.7159833908081055
    8. ' a' → logprob: -7.5909833908081055
    9. '),' → logprob: -8.215983390808105
    10. ' de' → logprob: -8.590983390808105

Token 322: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002721183467656374
    2. 'or' → logprob: -6.002721309661865
    3. 'and' → logprob: -8.752720832824707
    4. ' or' → logprob: -10.127720832824707
    5. ' if' → logprob: -10.502720832824707
    6. 'elif' → logprob: -11.502720832824707
    7. ')' → logprob: -12.377720832824707
    8. ' and' → logprob: -13.502720832824707
    9. '#' → logprob: -14.127720832824707
    10. 'print' → logprob: -14.127720832824707

Token 323: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21446046233177185
    2. 'or' → logprob: -1.8394604921340942
    3. ' or' → logprob: -4.214460372924805
    4. 'and' → logprob: -4.214460372924805
    5. ' and' → logprob: -6.589460372924805
    6. ' if' → logprob: -6.714460372924805
    7. ')' → logprob: -6.714460372924805
    8. '(' → logprob: -8.089460372924805
    9. 'a' → logprob: -9.339460372924805
    10. 'ou' → logprob: -9.464460372924805

Token 324: ' si' (ID: 1784)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1847035437822342
    2. 'a' → logprob: -1.8097035884857178
    3. ' not' → logprob: -5.809703350067139
    4. ' (' → logprob: -7.559703350067139
    5. ' ' → logprob: -7.684703350067139
    6. ' ' → logprob: -7.809703350067139
    7. 'not' → logprob: -8.059703826904297
    8. '(a' → logprob: -9.059703826904297
    9. '  ' → logprob: -10.559703826904297
    10. '    ' → logprob: -11.309703826904297

Token 325: ' ces' (ID: 10532)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5760205984115601
    2. 'a' → logprob: -0.8260205984115601
    3. ' ' → logprob: -9.701020240783691
    4. '(a' → logprob: -11.451020240783691
    5. ' (' → logprob: -13.201020240783691
    6. ' the' → logprob: -13.326020240783691
    7. ' ' → logprob: -13.576020240783691
    8. '	a' → logprob: -13.826020240783691
    9. ' not' → logprob: -14.326020240783691
    10. '#a' → logprob: -14.451020240783691

Token 326: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.036489635705947876
    2. ' deux' → logprob: -4.411489486694336
    3. 'a' → logprob: -4.786489486694336
    4. 'tro' → logprob: -4.911489486694336
    5. 'dern' → logprob: -6.161489486694336
    6. '[' → logprob: -6.786489486694336
    7. '#' → logprob: -7.036489486694336
    8. ' a' → logprob: -7.161489486694336
    9. ' troisième' → logprob: -7.661489486694336
    10. ' ' → logprob: -7.786489486694336

Token 327: '-là' (ID: 71108)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7394765019416809
    2. ' éléments' → logprob: -1.9894764423370361
    3. ' elements' → logprob: -2.239476442337036
    4. 'a' → logprob: -2.239476442337036
    5. 'elements' → logprob: -2.739476442337036
    6. ' !=' → logprob: -2.864476442337036
    7. 'élé' → logprob: -4.739476680755615
    8. '!=' → logprob: -4.864476680755615
    9. 'tokens' → logprob: -4.864476680755615
    10. ' tokens' → logprob: -4.989476680755615

Token 328: ' sont' (ID: 5242)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3250731825828552
    2. ' sont' → logprob: -1.8250732421875
    3. ' are' → logprob: -2.8250732421875
    4. '!=' → logprob: -3.5750732421875
    5. ' a' → logprob: -4.8250732421875
    6. 's' → logprob: -5.0750732421875
    7. '<|end|>' → logprob: -5.3250732421875
    8. ' ' → logprob: -5.9500732421875
    9. ' is' → logprob: -6.5750732421875
    10. ' ne' → logprob: -6.8250732421875

Token 329: ' différents' (ID: 36009)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9244827628135681
    2. 'different' → logprob: -1.549482822418213
    3. ' différents' → logprob: -1.674482822418213
    4. ' different' → logprob: -1.674482822418213
    5. ' différent' → logprob: -4.799482822418213
    6. 'distinct' → logprob: -5.549482822418213
    7. ' distinct' → logprob: -6.049482822418213
    8. ' diff' → logprob: -7.299482822418213
    9. ' différentes' → logprob: -8.299482345581055
    10. ' différente' → logprob: -8.799482345581055

Token 330: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6504405736923218
    2. ' du' → logprob: -1.4004405736923218
    3. 'de' → logprob: -2.0254406929016113
    4. 'from' → logprob: -2.6504406929016113
    5. ' from' → logprob: -4.150440692901611
    6. ' des' → logprob: -5.025440692901611
    7. 'des' → logprob: -5.525440692901611
    8. 'du' → logprob: -6.900440692901611
    9. '<|end|>' → logprob: -7.025440692901611
    10. ' a' → logprob: -8.150440216064453

Token 331: ' troisième' (ID: 75373)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015831172466278076
    2. ' a' → logprob: -4.890830993652344
    3. ' troisième' → logprob: -5.140830993652344
    4. 'tro' → logprob: -6.640830993652344
    5. 'dern' → logprob: -7.015830993652344
    6. ' dernier' → logprob: -9.265830993652344
    7. '3' → logprob: -11.140830993652344
    8. ' third' → logprob: -11.515830993652344
    9. 'third' → logprob: -12.765830993652344
    10. '#' → logprob: -12.890830993652344

Token 332: '.

' (ID: 364)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16575835645198822
    2. 'or' → logprob: -2.7907583713531494
    3. ' or' → logprob: -3.0407583713531494
    4. ')' → logprob: -3.7907583713531494
    5. 'and' → logprob: -4.54075813293457
    6. ' if' → logprob: -5.29075813293457
    7. ' and' → logprob: -5.41575813293457
    8. '(' → logprob: -7.79075813293457
    9. ' )' → logprob: -8.79075813293457
    10. 'a' → logprob: -10.16575813293457

Token 333: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00967865064740181
    2. '(a' → logprob: -5.384678840637207
    3. '(' → logprob: -5.509678840637207
    4. 'a' → logprob: -8.009678840637207
    5. 'or' → logprob: -8.259678840637207
    6. ' if' → logprob: -8.884678840637207
    7. '((' → logprob: -9.009678840637207
    8. '(
' → logprob: -9.759678840637207
    9. 'and' → logprob: -10.259678840637207
    10. 'elif' → logprob: -11.509678840637207

Token 334: ' Se' (ID: 1550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16872954368591309
    2. 'or' → logprob: -2.043729543685913
    3. 'elif' → logprob: -3.793729543685913
    4. ' or' → logprob: -6.293729782104492
    5. '(' → logprob: -7.418729782104492
    6. ' if' → logprob: -8.543729782104492
    7. 'ou' → logprob: -9.293729782104492
    8. 'print' → logprob: -9.293729782104492
    9. '((' → logprob: -9.418729782104492
    10. 'not' → logprob: -9.418729782104492

Token 335: 'conde' (ID: 50435)
  Prédit: 'conde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conde' → logprob: -0.31548675894737244
    2. 'cond' → logprob: -1.5654867887496948
    3. 'elif' → logprob: -3.1904866695404053
    4. 'ou' → logprob: -4.315486907958984
    5. '#' → logprob: -5.690486907958984
    6. 'condition' → logprob: -6.440486907958984
    7. '
' → logprob: -7.565486907958984
    8. 'l' → logprob: -8.565486907958984
    9. 'nd' → logprob: -8.565486907958984
    10. 'or' → logprob: -9.065486907958984

Token 336: ' partie' (ID: 22139)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.9596629738807678
    2. ' partie' → logprob: -0.9596629738807678
    3. 'part' → logprob: -1.459662914276123
    4. ' or' → logprob: -7.084662914276123
    5. '_part' → logprob: -8.084663391113281
    6. ' parte' → logprob: -8.709663391113281
    7. 'or' → logprob: -8.959663391113281
    8. 'elif' → logprob: -9.834663391113281
    9. ' Partie' → logprob: -10.584663391113281
    10. ' ou' → logprob: -10.959663391113281

Token 337: ' de' (ID: 334)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03388438746333122
    2. ':' → logprob: -3.783884286880493
    3. ' :' → logprob: -4.783884525299072
    4. 'or' → logprob: -6.408884525299072
    5. ' (' → logprob: -8.658884048461914
    6. ' ' → logprob: -9.158884048461914
    7. ' ou' → logprob: -9.533884048461914
    8. ' of' → logprob: -9.533884048461914
    9. ' and' → logprob: -10.283884048461914
    10. ' a' → logprob: -10.658884048461914

Token 338: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.712723433971405
    2. '(' → logprob: -0.837723433971405
    3. '(a' → logprob: -2.58772349357605
    4. ' a' → logprob: -7.212723255157471
    5. 'a' → logprob: -7.712723255157471
    6. ' or' → logprob: -8.587723731994629
    7. ' ' → logprob: -9.462723731994629
    8. ' the' → logprob: -9.712723731994629
    9. ' ' → logprob: -9.712723731994629
    10. '((' → logprob: -9.712723731994629

Token 339: ' condition' (ID: 7060)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.17122671008110046
    2. 'condition' → logprob: -2.046226739883423
    3. ' or' → logprob: -4.171226501464844
    4. 'ou' → logprob: -4.796226501464844
    5. ' condition' → logprob: -6.171226501464844
    6. 'elif' → logprob: -6.296226501464844
    7. ' ou' → logprob: -9.046226501464844
    8. '(' → logprob: -9.296226501464844
    9. '(condition' → logprob: -9.546226501464844
    10. 'orm' → logprob: -10.296226501464844

Token 340: ' :' (ID: 712)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008763471618294716
    2. 'or' → logprob: -4.758763313293457
    3. ':' → logprob: -9.883763313293457
    4. ' (' → logprob: -10.508763313293457
    5. ' and' → logprob: -11.258763313293457
    6. '(' → logprob: -11.383763313293457
    7. ' ' → logprob: -11.383763313293457
    8. ' :' → logprob: -11.883763313293457
    9. ' ou' → logprob: -12.258763313293457
    10. ' if' → logprob: -12.633763313293457

Token 341: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1326068639755249
    2. ' (' → logprob: -2.1326069831848145
    3. '(' → logprob: -5.2576069831848145
    4. 'a' → logprob: -8.257606506347656
    5. ' a' → logprob: -8.632606506347656
    6. '((' → logprob: -11.632606506347656
    7. ' ' → logprob: -13.007606506347656
    8. ' ' → logprob: -13.382606506347656
    9. ' ((' → logprob: -14.132606506347656
    10. '```' → logprob: -14.132606506347656

Token 342: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014710607938468456
    2. ' a' → logprob: -6.751471042633057
    3. '(a' → logprob: -8.126471519470215
    4. ' (' → logprob: -12.626471519470215
    5. '   ' → logprob: -14.251471519470215
    6. ' ' → logprob: -14.626471519470215
    7. '	a' → logprob: -15.626471519470215
    8. '(' → logprob: -16.1264705657959
    9. ''a' → logprob: -16.3764705657959
    10. '  ' → logprob: -16.3764705657959

Token 343: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.75000286102295
    3. 'a' → logprob: -14.62500286102295
    4. '[
' → logprob: -14.62500286102295
    5. '2' → logprob: -14.75000286102295
    6. '```' → logprob: -15.25000286102295
    7. '#' → logprob: -16.000003814697266
    8. ' [' → logprob: -16.125003814697266
    9. ' ' → logprob: -16.250003814697266
    10. '==' → logprob: -16.937503814697266

Token 344: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000659419281873852
    2. '2' → logprob: -7.875659465789795
    3. '0' → logprob: -8.250658988952637
    4. '[' → logprob: -11.000658988952637
    5. ' ' → logprob: -14.375658988952637
    6. '```' → logprob: -14.750658988952637
    7. '(' → logprob: -16.125659942626953
    8. '   ' → logprob: -16.250659942626953
    9. '``' → logprob: -16.750659942626953
    10. '１' → logprob: -17.313159942626953

Token 345: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32208728790283203
    2. ' ==' → logprob: -1.322087287902832
    3. ']' → logprob: -5.072087287902832
    4. ']==' → logprob: -6.572087287902832
    5. ' ' → logprob: -7.822087287902832
    6. 'a' → logprob: -8.447087287902832
    7. '[' → logprob: -8.947087287902832
    8. ')' → logprob: -9.072087287902832
    9. '!=' → logprob: -10.072087287902832
    10. ' !=' → logprob: -10.072087287902832

Token 346: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17986363172531128
    2. ' ==' → logprob: -1.804863691329956
    3. 'a' → logprob: -9.804863929748535
    4. '=' → logprob: -11.429863929748535
    5. '!=' → logprob: -11.429863929748535
    6. '[' → logprob: -11.554863929748535
    7. '==
' → logprob: -11.554863929748535
    8. ' ' → logprob: -11.804863929748535
    9. ' !=' → logprob: -12.054863929748535
    10. ']==' → logprob: -13.054863929748535

Token 347: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006267757853493094
    2. ' a' → logprob: -7.375626564025879
    3. ' ' → logprob: -16.000627517700195
    4. '	a' → logprob: -18.375627517700195
    5. '   ' → logprob: -18.500627517700195
    6. ')' → logprob: -18.500627517700195
    7. ' ' → logprob: -19.125627517700195
    8. '  ' → logprob: -19.250627517700195
    9. '```' → logprob: -19.625627517700195
    10. ')a' → logprob: -19.938127517700195

Token 348: '[' (ID: 58)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08952277153730392
    2. '[' → logprob: -2.4645228385925293
    3. ' a' → logprob: -7.464522838592529
    4. ' [' → logprob: -11.964522361755371
    5. '[a' → logprob: -13.714522361755371
    6. ' ' → logprob: -14.089522361755371
    7. '	a' → logprob: -14.839522361755371
    8. '[
' → logprob: -14.964522361755371
    9. ']' → logprob: -15.464522361755371
    10. '```' → logprob: -15.964522361755371

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014487087726593
    2. 'a' → logprob: -1.701448678970337
    3. '2' → logprob: -10.951448440551758
    4. ' a' → logprob: -11.576448440551758
    5. ' ' → logprob: -11.951448440551758
    6. '[' → logprob: -13.576448440551758
    7. '```' → logprob: -15.826448440551758
    8. '   ' → logprob: -15.951448440551758
    9. ']' → logprob: -16.201448440551758
    10. '  ' → logprob: -16.451448440551758

Token 350: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06875969469547272
    2. 'and' → logprob: -2.8187596797943115
    3. ')' → logprob: -5.443759918212891
    4. ']' → logprob: -6.068759918212891
    5. 'a' → logprob: -9.81875991821289
    6. ' a' → logprob: -10.69375991821289
    7. ' ' → logprob: -11.19375991821289
    8. ' et' → logprob: -11.31875991821289
    9. 'et' → logprob: -11.31875991821289
    10. ' ' → logprob: -12.94375991821289

Token 351: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08895572274923325
    2. 'and' → logprob: -2.4639556407928467
    3. ')' → logprob: -11.713955879211426
    4. 'a' → logprob: -12.588955879211426
    5. ' a' → logprob: -13.588955879211426
    6. ' ' → logprob: -13.838955879211426
    7. ' et' → logprob: -13.963955879211426
    8. 'et' → logprob: -14.588955879211426
    9. ' ' → logprob: -15.088955879211426
    10. '```' → logprob: -15.088955879211426

Token 352: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20150698721408844
    2. ' a' → logprob: -1.7015069723129272
    3. '(a' → logprob: -9.701506614685059
    4. ' (' → logprob: -11.201506614685059
    5. ' ' → logprob: -11.826506614685059
    6. '   ' → logprob: -12.701506614685059
    7. '    ' → logprob: -12.951506614685059
    8. ' ' → logprob: -13.326506614685059
    9. '(' → logprob: -13.826506614685059
    10. '  ' → logprob: -13.951506614685059

Token 353: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.93579563125968e-05
    2. '1' → logprob: -9.375089645385742
    3. '2' → logprob: -13.500089645385742
    4. '[
' → logprob: -13.500089645385742
    5. '```' → logprob: -14.125089645385742
    6. 'user' → logprob: -15.250089645385742
    7. ' [' → logprob: -15.625089645385742
    8. ' ' → logprob: -15.875089645385742
    9. '][' → logprob: -16.000089645385742
    10. '
' → logprob: -16.125089645385742

Token 354: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0051126801408827305
    2. '1' → logprob: -5.380112648010254
    3. '[' → logprob: -7.630112648010254
    4. ' ' → logprob: -12.380112648010254
    5. '```' → logprob: -13.880112648010254
    6. '
' → logprob: -14.880112648010254
    7. '<|end|>' → logprob: -15.005112648010254
    8. '   ' → logprob: -15.942612648010254
    9. '3' → logprob: -16.00511360168457
    10. '0' → logprob: -16.06761360168457

Token 355: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09070883691310883
    2. ' ==' → logprob: -2.4657087326049805
    3. ']' → logprob: -6.7157087326049805
    4. ']==' → logprob: -7.5907087326049805
    5. ')' → logprob: -10.59070873260498
    6. '=' → logprob: -11.46570873260498
    7. '<|end|>' → logprob: -12.46570873260498
    8. ')==' → logprob: -13.09070873260498
    9. ' ' → logprob: -13.09070873260498
    10. ' ' → logprob: -13.34070873260498

Token 356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01252883579581976
    2. ' ==' → logprob: -4.387528896331787
    3. '==
' → logprob: -11.637528419494629
    4. '=' → logprob: -12.012528419494629
    5. ']==' → logprob: -13.012528419494629
    6. ')==' → logprob: -14.012528419494629
    7. ')' → logprob: -15.012528419494629
    8. '!=' → logprob: -15.262528419494629
    9. ' ' → logprob: -15.637528419494629
    10. 'a' → logprob: -16.012529373168945

Token 357: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163628220558167
    2. ' a' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.514163970947266
    4. '	a' → logprob: -16.764163970947266
    5. ' ' → logprob: -17.514163970947266
    6. '
' → logprob: -18.389163970947266
    7. '   ' → logprob: -18.764163970947266
    8. '_a' → logprob: -19.264163970947266
    9. ')a' → logprob: -19.514163970947266
    10. ''a' → logprob: -19.639163970947266

Token 358: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4741518795490265
    2. '2' → logprob: -0.9741518497467041
    3. 'a' → logprob: -10.349151611328125
    4. ' ' → logprob: -10.349151611328125
    5. ']' → logprob: -12.599151611328125
    6. ' [' → logprob: -12.849151611328125
    7. '[
' → logprob: -13.599151611328125
    8. '][' → logprob: -13.849151611328125
    9. '```' → logprob: -14.349151611328125
    10. '   ' → logprob: -14.849151611328125

Token 359: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.87500286102295
    3. ' ' → logprob: -14.87500286102295
    4. 'a' → logprob: -15.62500286102295
    5. '۲' → logprob: -18.000003814697266
    6. '```' → logprob: -18.375003814697266
    7. '２' → logprob: -18.500003814697266
    8. '0' → logprob: -18.625003814697266
    9. '   ' → logprob: -19.375003814697266
    10. '₂' → logprob: -19.500003814697266

Token 360: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03424512967467308
    2. '])' → logprob: -3.409245014190674
    3. '))' → logprob: -8.409245491027832
    4. ' )' → logprob: -9.159245491027832
    5. ')])' → logprob: -9.409245491027832
    6. ')
' → logprob: -9.534245491027832
    7. ')]' → logprob: -10.034245491027832
    8. ']' → logprob: -10.409245491027832
    9. '）' → logprob: -11.784245491027832
    10. '):' → logprob: -11.909245491027832

Token 361: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007791397627443075
    2. ' if' → logprob: -4.882791519165039
    3. ')' → logprob: -9.507791519165039
    4. ' and' → logprob: -10.507791519165039
    5. 'and' → logprob: -10.507791519165039
    6. 'print' → logprob: -10.757791519165039
    7. ' or' → logprob: -12.007791519165039
    8. ':' → logprob: -12.257791519165039
    9. '):' → logprob: -12.257791519165039
    10. '):
' → logprob: -12.382791519165039

Token 362: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014243659563362598
    2. ' if' → logprob: -4.2642436027526855
    3. 'print' → logprob: -9.514244079589844
    4. ':' → logprob: -13.389244079589844
    5. '```' → logprob: -13.764244079589844
    6. 'and' → logprob: -14.389244079589844
    7. ' and' → logprob: -14.389244079589844
    8. ')' → logprob: -14.639244079589844
    9. 'elif' → logprob: -14.889244079589844
    10. 'or' → logprob: -14.889244079589844

Token 363: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0003384422743692994
    2. 'ifié' → logprob: -8.750338554382324
    3. 'if' → logprob: -9.250338554382324
    4. 'f' → logprob: -10.250338554382324
    5. '#' → logprob: -11.125338554382324
    6. 'ifiez' → logprob: -11.750338554382324
    7. 'éf' → logprob: -11.875338554382324
    8. 'ifi' → logprob: -12.625338554382324
    9. 'é' → logprob: -12.625338554382324
    10. '```' → logprob: -13.375338554382324

Token 364: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22621527314186096
    2. 'if' → logprob: -1.7262152433395386
    3. ' (' → logprob: -4.226215362548828
    4. '(a' → logprob: -4.726215362548828
    5. ' si' → logprob: -7.726215362548828
    6. ' a' → logprob: -7.976215362548828
    7. 'a' → logprob: -8.726215362548828
    8. ' ' → logprob: -10.601215362548828
    9. '   ' → logprob: -10.976215362548828
    10. 'si' → logprob: -11.726215362548828

Token 365: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6779282689094543
    2. '(a' → logprob: -0.8029282689094543
    3. ' a' → logprob: -3.4279282093048096
    4. ' (' → logprob: -4.802928447723389
    5. 'les' → logprob: -6.052928447723389
    6. ' les' → logprob: -7.177928447723389
    7. ' ' → logprob: -8.55292797088623
    8. '(' → logprob: -9.80292797088623
    9. '#a' → logprob: -9.80292797088623
    10. 'le' → logprob: -10.05292797088623

Token 366: ' premier' (ID: 15506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6994301676750183
    2. 'de' → logprob: -0.6994301676750183
    3. 'second' → logprob: -5.824429988861084
    4. '```' → logprob: -7.324429988861084
    5. '(a' → logprob: -7.449429988861084
    6. ' a' → logprob: -7.574429988861084
    7. ' deuxième' → logprob: -7.824429988861084
    8. 'prem' → logprob: -8.574430465698242
    9. ' second' → logprob: -8.699430465698242
    10. 'dern' → logprob: -8.824430465698242

Token 367: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6585686802864075
    2. ' a' → logprob: -1.6585686206817627
    3. '[' → logprob: -1.7835686206817627
    4. ')' → logprob: -3.1585686206817627
    5. ']' → logprob: -3.7835686206817627
    6. ' !=' → logprob: -3.9085686206817627
    7. '!=' → logprob: -3.9085686206817627
    8. ' part' → logprob: -5.783568859100342
    9. '==' → logprob: -6.158568859100342
    10. ' [' → logprob: -6.158568859100342

Token 368: ' différent' (ID: 114823)
  Prédit: ' différent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.6604475378990173
    2. 'different' → logprob: -1.285447597503662
    3. 'diff' → logprob: -2.035447597503662
    4. ' different' → logprob: -3.035447597503662
    5. '!=' → logprob: -4.285447597503662
    6. 'a' → logprob: -4.660447597503662
    7. 'not' → logprob: -6.410447597503662
    8. 'distinct' → logprob: -7.035447597503662
    9. 'd' → logprob: -7.910447597503662
    10. ' distinct' → logprob: -8.035447120666504

Token 369: ' du' (ID: 1462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.449965238571167
    2. ' and' → logprob: -1.824965238571167
    3. 'from' → logprob: -1.824965238571167
    4. ' a' → logprob: -2.074965238571167
    5. 'and' → logprob: -2.199965238571167
    6. ' from' → logprob: -3.199965238571167
    7. ' des' → logprob: -3.324965238571167
    8. ' du' → logprob: -3.699965238571167
    9. ' de' → logprob: -3.699965238571167
    10. 'des' → logprob: -3.949965238571167

Token 370: ' deuxième' (ID: 51664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025847921147942543
    2. 'second' → logprob: -4.025847911834717
    3. ' a' → logprob: -6.275847911834717
    4. ' second' → logprob: -6.275847911834717
    5. 'prem' → logprob: -6.650847911834717
    6. ' deuxième' → logprob: -6.775847911834717
    7. 'de' → logprob: -7.025847911834717
    8. ' premier' → logprob: -8.025848388671875
    9. ' suivant' → logprob: -9.025848388671875
    10. 'su' → logprob: -10.025848388671875

Token 371: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22466254234313965
    2. ' or' → logprob: -1.9746625423431396
    3. 'and' → logprob: -3.2246625423431396
    4. ')' → logprob: -3.8496625423431396
    5. 'or' → logprob: -7.224662780761719
    6. ' )' → logprob: -8.224662780761719
    7. 'et' → logprob: -9.349662780761719
    8. ' et' → logprob: -9.599662780761719
    9. ' ou' → logprob: -9.849662780761719
    10. ' ' → logprob: -10.224662780761719

Token 372: ' mais' (ID: 2899)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5616167187690735
    2. ' et' → logprob: -1.9366166591644287
    3. 'and' → logprob: -1.9366166591644287
    4. 'et' → logprob: -2.3116166591644287
    5. '#' → logprob: -4.311616897583008
    6. ' or' → logprob: -4.811616897583008
    7. ' ou' → logprob: -5.311616897583008
    8. ' a' → logprob: -5.561616897583008
    9. 'a' → logprob: -5.561616897583008
    10. ' #' → logprob: -6.561616897583008

Token 373: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30597302317619324
    2. ' a' → logprob: -1.6809730529785156
    3. 'le' → logprob: -2.8059730529785156
    4. ' le' → logprob: -4.930973052978516
    5. '#' → logprob: -6.305973052978516
    6. ' si' → logprob: -6.430973052978516
    7. '#a' → logprob: -6.555973052978516
    8. ' que' → logprob: -6.805973052978516
    9. 'if' → logprob: -7.180973052978516
    10. ' ' → logprob: -7.305973052978516

Token 374: ' deuxième' (ID: 51664)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1762416958808899
    2. 'second' → logprob: -1.9262416362762451
    3. ' deuxième' → logprob: -4.551241874694824
    4. ' second' → logprob: -5.551241874694824
    5. '```' → logprob: -7.301241874694824
    6. 'a' → logprob: -8.176241874694824
    7. 'dern' → logprob: -8.176241874694824
    8. 'prem' → logprob: -10.426241874694824
    9. '[' → logprob: -10.551241874694824
    10. '
' → logprob: -10.801241874694824

Token 375: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06927861273288727
    2. 'et' → logprob: -3.4442787170410156
    3. ' ==' → logprob: -3.6942787170410156
    4. 'and' → logprob: -5.569278717041016
    5. ' and' → logprob: -6.319278717041016
    6. 'est' → logprob: -6.444278717041016
    7. 'a' → logprob: -7.069278717041016
    8. ' et' → logprob: -7.569278717041016
    9. '```' → logprob: -7.944278717041016
    10. ' est' → logprob: -8.444278717041016

Token 376: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.04195619747042656
    2. ' égal' → logprob: -4.291956424713135
    3. '==' → logprob: -4.791956424713135
    4. 'ég' → logprob: -4.791956424713135
    5. 'equal' → logprob: -5.416956424713135
    6. ' ég' → logprob: -6.166956424713135
    7. 'é' → logprob: -6.916956424713135
    8. '=' → logprob: -6.916956424713135
    9. 'egal' → logprob: -7.291956424713135
    10. 'a' → logprob: -7.416956424713135

Token 377: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8167983293533325
    2. 'a' → logprob: -1.4417983293533325
    3. ' au' → logprob: -1.5667983293533325
    4. 'à' → logprob: -2.316798210144043
    5. ' à' → logprob: -4.691798210144043
    6. ' a' → logprob: -5.566798210144043
    7. 'to' → logprob: -8.066798210144043
    8. '==' → logprob: -8.566798210144043
    9. '=' → logprob: -9.066798210144043
    10. '(a' → logprob: -9.191798210144043

Token 378: ' troisième' (ID: 75373)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.04922625422477722
    2. 'a' → logprob: -3.0492262840270996
    3. 'dern' → logprob: -8.174225807189941
    4. ' troisième' → logprob: -8.549225807189941
    5. 'third' → logprob: -9.049225807189941
    6. '```' → logprob: -10.424225807189941
    7. '3' → logprob: -12.049225807189941
    8. '
' → logprob: -12.424225807189941
    9. '[a' → logprob: -13.924225807189941
    10. '[' → logprob: -14.299225807189941

Token 379: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002028251619776711
    2. ' if' → logprob: -8.750203132629395
    3. 'print' → logprob: -10.375203132629395
    4. ')' → logprob: -12.250203132629395
    5. 'and' → logprob: -12.250203132629395
    6. ':' → logprob: -14.125203132629395
    7. '```' → logprob: -14.250203132629395
    8. '#' → logprob: -14.625203132629395
    9. '):' → logprob: -14.625203132629395
    10. ' and' → logprob: -15.250203132629395

Token 380: 'dou' (ID: 122443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010236571542918682
    2. ' a' → logprob: -5.010236740112305
    3. ' (' → logprob: -6.260236740112305
    4. '(a' → logprob: -6.760236740112305
    5. ')' → logprob: -8.135236740112305
    6. '(' → logprob: -10.135236740112305
    7. ')a' → logprob: -10.135236740112305
    8. '   ' → logprob: -10.885236740112305
    9. ' True' → logprob: -11.385236740112305
    10. 'True' → logprob: -11.385236740112305

Token 381: 'bl' (ID: 1751)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.4599876403808594
    2. 'x' → logprob: -1.8349876403808594
    3. 'a' → logprob: -2.0849876403808594
    4. 'bl' → logprob: -3.0849876403808594
    5. 'bles' → logprob: -4.709987640380859
    6. '```' → logprob: -4.959987640380859
    7. 'uble' → logprob: -5.209987640380859
    8. 'ai' → logprob: -5.334987640380859
    9. 'u' → logprob: -6.084987640380859
    10. 'al' → logprob: -6.459987640380859

Token 382: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.41322121024131775
    2. 'é' → logprob: -1.2882212400436401
    3. 'le' → logprob: -3.0382211208343506
    4. ')' → logprob: -5.53822135925293
    5. 'a' → logprob: -6.53822135925293
    6. 'e' → logprob: -6.78822135925293
    7. 'ons' → logprob: -6.91322135925293
    8. 'l' → logprob: -6.91322135925293
    9. 'let' → logprob: -7.16322135925293
    10. 'ont' → logprob: -7.53822135925293

Token 383: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008744694292545319
    2. ' and' → logprob: -6.133744716644287
    3. 'and' → logprob: -6.258744716644287
    4. ' )' → logprob: -6.383744716644287
    5. ' et' → logprob: -6.883744716644287
    6. 'et' → logprob: -7.133744716644287
    7. ' au' → logprob: -8.508744239807129
    8. ').' → logprob: -8.633744239807129
    9. ' at' → logprob: -9.133744239807129
    10. 'au' → logprob: -9.133744239807129

Token 384: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.08451087027788162
    2. ' fin' → logprob: -2.9595108032226562
    3. 'queue' → logprob: -4.959510803222656
    4. 'a' → logprob: -5.084510803222656
    5. 'dern' → logprob: -5.334510803222656
    6. 'de' → logprob: -5.834510803222656
    7. 'la' → logprob: -6.334510803222656
    8. ' ' → logprob: -6.334510803222656
    9. ' queue' → logprob: -6.709510803222656
    10. 'bout' → logprob: -7.209510803222656

Token 385: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002215680666267872
    2. 'a' → logprob: -7.00221586227417
    3. '):' → logprob: -8.002215385437012
    4. ' )' → logprob: -8.252215385437012
    5. ')a' → logprob: -8.627215385437012
    6. 'e' → logprob: -9.127215385437012
    7. '))' → logprob: -9.377215385437012
    8. '])' → logprob: -10.002215385437012
    9. ')
' → logprob: -10.127215385437012
    10. ' de' → logprob: -10.377215385437012

Token 386: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.02714085578918457
    2. ' liste' → logprob: -4.2771406173706055
    3. 'a' → logprob: -4.6521406173706055
    4. 'la' → logprob: -6.2771406173706055
    5. 'list' → logprob: -6.6521406173706055
    6. 'lista' → logprob: -10.402140617370605
    7. '```' → logprob: -10.527140617370605
    8. ' a' → logprob: -10.652140617370605
    9. 'ligne' → logprob: -10.652140617370605
    10. ' ' → logprob: -10.652140617370605

Token 387: ' tri' (ID: 12665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027511809021234512
    2. 'if' → logprob: -3.9025118350982666
    3. '):' → logprob: -5.1525115966796875
    4. '):
' → logprob: -7.7775115966796875
    5. ')
' → logprob: -8.527511596679688
    6. '))' → logprob: -9.027511596679688
    7. ' )' → logprob: -9.152511596679688
    8. 'print' → logprob: -9.277511596679688
    9. '#' → logprob: -9.902511596679688
    10. 'and' → logprob: -10.402511596679688

Token 388: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0037703895941376686
    2. 'é' → logprob: -6.253770351409912
    3. ']' → logprob: -7.128770351409912
    4. 'née' → logprob: -8.50377082824707
    5. 'ang' → logprob: -8.75377082824707
    6. 'e' → logprob: -8.75377082824707
    7. ')' → logprob: -9.87877082824707
    8. 'ee' → logprob: -10.12877082824707
    9. 'rée' → logprob: -10.12877082824707
    10. '#' → logprob: -10.25377082824707

Token 389: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10959357768297195
    2. 'if' → logprob: -2.359593629837036
    3. '):' → logprob: -4.734593391418457
    4. '):
' → logprob: -8.859593391418457
    5. ')
' → logprob: -9.234593391418457
    6. ' if' → logprob: -9.609593391418457
    7. ' )' → logprob: -9.734593391418457
    8. 'print' → logprob: -10.109593391418457
    9. '))' → logprob: -10.109593391418457
    10. ')#' → logprob: -11.234593391418457

Token 390: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.125210297293961e-05
    2. ' if' → logprob: -9.625081062316895
    3. ')' → logprob: -12.000081062316895
    4. 'print' → logprob: -12.875081062316895
    5. '```' → logprob: -13.125081062316895
    6. '):
' → logprob: -13.750081062316895
    7. ')
' → logprob: -13.875081062316895
    8. 'result' → logprob: -14.125081062316895
    9. '):' → logprob: -15.000081062316895
    10. 'a' → logprob: -15.250081062316895

Token 391: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.60414821645827e-06
    2. ' if' → logprob: -13.000004768371582
    3. 'print' → logprob: -13.750004768371582
    4. 'result' → logprob: -14.250004768371582
    5. '```' → logprob: -14.875004768371582
    6. 'elif' → logprob: -15.250004768371582
    7. 'condition' → logprob: -17.250003814697266
    8. 'is' → logprob: -17.375003814697266
    9. 'est' → logprob: -17.625003814697266
    10. 'return' → logprob: -17.875003814697266

Token 392: ''op' (ID: 70747)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22377155721187592
    2. 'e' → logprob: -2.348771572113037
    3. 'a' → logprob: -2.848771572113037
    4. 'elif' → logprob: -3.723771572113037
    5. '#' → logprob: -4.598771572113037
    6. 'ine' → logprob: -4.723771572113037
    7. 'og' → logprob: -7.223771572113037
    8. '```' → logprob: -7.348771572113037
    9. 'et' → logprob: -7.723771572113037
    10. 'ors' → logprob: -7.848771572113037

Token 393: 'érateur' (ID: 108528)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05110468715429306
    2. 'a' → logprob: -3.176104784011841
    3. 'og' → logprob: -6.176104545593262
    4. 'f' → logprob: -6.551104545593262
    5. 'n' → logprob: -6.801104545593262
    6. ' if' → logprob: -7.301104545593262
    7. 'elif' → logprob: -7.926104545593262
    8. 'e' → logprob: -8.551104545593262
    9. '#' → logprob: -8.551104545593262
    10. 'igne' → logprob: -8.676104545593262

Token 394: ' '' (ID: 461)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1602804809808731
    2. 'or' → logprob: -1.910280466079712
    3. 'ou' → logprob: -11.035280227661133
    4. ' ou' → logprob: -11.660280227661133
    5. '	or' → logprob: -12.160280227661133
    6. ' ' → logprob: -12.285280227661133
    7. 'and' → logprob: -12.410280227661133
    8. ' and' → logprob: -13.035280227661133
    9. ' logical' → logprob: -13.035280227661133
    10. ''or' → logprob: -13.410280227661133

Token 395: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0015415230300277472
    2. ' or' → logprob: -7.001541614532471
    3. 'xor' → logprob: -7.626541614532471
    4. '^' → logprob: -10.001541137695312
    5. 'and' → logprob: -10.501541137695312
    6. '(' → logprob: -11.001541137695312
    7. ''or' → logprob: -11.251541137695312
    8. '(or' → logprob: -11.376541137695312
    9. 'orel' → logprob: -12.501541137695312
    10. 'ou' → logprob: -12.751541137695312

Token 396: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4264310300350189
    2. ' '' → logprob: -1.5514310598373413
    3. ')' → logprob: -2.8014309406280518
    4. ' a' → logprob: -3.4264309406280518
    5. ' (' → logprob: -4.551431179046631
    6. ' )' → logprob: -4.801431179046631
    7. ')'' → logprob: -5.051431179046631
    8. ''a' → logprob: -5.176431179046631
    9. '(a' → logprob: -5.551431179046631
    10. '')' → logprob: -5.926431179046631

Token 397: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10891322791576385
    2. '):' → logprob: -2.6089131832122803
    3. ')' → logprob: -3.7339131832122803
    4. 'if' → logprob: -5.608913421630859
    5. ' and' → logprob: -7.858913421630859
    6. ':
' → logprob: -8.35891342163086
    7. ' :' → logprob: -8.48391342163086
    8. 'and' → logprob: -8.48391342163086
    9. ' a' → logprob: -8.85891342163086
    10. '(a' → logprob: -8.85891342163086

Token 398: ' que' (ID: 661)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8309869766235352
    2. ' (' → logprob: -1.3309869766235352
    3. ' que' → logprob: -1.4559869766235352
    4. ' that' → logprob: -3.330986976623535
    5. 'a' → logprob: -4.455986976623535
    6. ' ' → logprob: -4.830986976623535
    7. '(' → logprob: -4.830986976623535
    8. ' or' → logprob: -6.955986976623535
    9. ' True' → logprob: -7.705986976623535
    10. 'that' → logprob: -7.830986976623535

Token 399: ' si' (ID: 1784)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09853975474834442
    2. ' (' → logprob: -2.5985398292541504
    3. '(' → logprob: -3.9735398292541504
    4. '((' → logprob: -7.84853982925415
    5. ' a' → logprob: -8.598539352416992
    6. 'a' → logprob: -9.848539352416992
    7. ' ((' → logprob: -11.223539352416992
    8. '(A' → logprob: -11.973539352416992
    9. '(
' → logprob: -13.348539352416992
    10. 'if' → logprob: -13.723539352416992

Token 400: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08685847371816635
    2. '(a' → logprob: -2.9618585109710693
    3. '(' → logprob: -3.4618585109710693
    4. '((' → logprob: -9.961858749389648
    5. '(
' → logprob: -11.336858749389648
    6. '(A' → logprob: -11.711858749389648
    7. 'a' → logprob: -11.836858749389648
    8. ' ((' → logprob: -12.211858749389648
    9. ' a' → logprob: -12.586858749389648
    10. '(b' → logprob: -12.961858749389648

Token 401: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03392978757619858
    2. 'des' → logprob: -4.283929824829102
    3. ' (' → logprob: -4.908929824829102
    4. '(' → logprob: -5.033929824829102
    5. ' partie' → logprob: -6.408929824829102
    6. 'part' → logprob: -7.283929824829102
    7. ' de' → logprob: -7.408929824829102
    8. '(des' → logprob: -7.533929824829102
    9. ' of' → logprob: -7.658929824829102
    10. 'de' → logprob: -7.783929824829102

Token 402: ' deux' (ID: 10301)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.37056827545166016
    2. 'de' → logprob: -1.3705682754516602
    3. '(' → logprob: -3.24556827545166
    4. 'conditions' → logprob: -4.99556827545166
    5. ' (' → logprob: -5.87056827545166
    6. 'a' → logprob: -6.37056827545166
    7. 'condition' → logprob: -6.49556827545166
    8. ' deux' → logprob: -6.99556827545166
    9. '(de' → logprob: -7.24556827545166
    10. '(
' → logprob: -7.37056827545166

Token 403: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.49851545691490173
    2. ' conditions' → logprob: -1.3735154867172241
    3. '(' → logprob: -2.9985153675079346
    4. 'part' → logprob: -3.1235153675079346
    5. 'condition' → logprob: -3.9985153675079346
    6. ')' → logprob: -4.373515605926514
    7. '(
' → logprob: -5.498515605926514
    8. ' (' → logprob: -5.498515605926514
    9. '(condition' → logprob: -6.623515605926514
    10. '(part' → logprob: -7.373515605926514

Token 404: ' est' (ID: 893)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47919031977653503
    2. ' est' → logprob: -1.2291903495788574
    3. '(a' → logprob: -4.229190349578857
    4. 'est' → logprob: -4.229190349578857
    5. ')' → logprob: -4.354190349578857
    6. ' True' → logprob: -4.854190349578857
    7. ' (' → logprob: -4.854190349578857
    8. ' a' → logprob: -5.354190349578857
    9. 'a' → logprob: -5.479190349578857
    10. 'True' → logprob: -5.729190349578857

Token 405: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03647411987185478
    2. ' True' → logprob: -3.5364742279052734
    3. 'v' → logprob: -5.036474227905273
    4. 'true' → logprob: -9.536474227905273
    5. 'V' → logprob: -10.411474227905273
    6. '```' → logprob: -10.661474227905273
    7. '(True' → logprob: -10.911474227905273
    8. 's' → logprob: -10.911474227905273
    9. ' vraie' → logprob: -11.036474227905273
    10. '_true' → logprob: -11.411474227905273

Token 406: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012051822617650032
    2. 'if' → logprob: -5.137052059173584
    3. '):' → logprob: -5.637052059173584
    4. ':
' → logprob: -6.012052059173584
    5. ')' → logprob: -10.137051582336426
    6. ' if' → logprob: -10.887051582336426
    7. '):
' → logprob: -11.262051582336426
    8. ' :' → logprob: -11.762051582336426
    9. 'print' → logprob: -12.137051582336426
    10. '():' → logprob: -12.762051582336426

Token 407: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08349406719207764
    2. ' if' → logprob: -2.833494186401367
    3. 'a' → logprob: -4.583494186401367
    4. ' a' → logprob: -5.083494186401367
    5. ' (' → logprob: -6.458494186401367
    6. '(a' → logprob: -6.458494186401367
    7. ' True' → logprob: -6.833494186401367
    8. 'True' → logprob: -7.833494186401367
    9. 'print' → logprob: -8.583494186401367
    10. '```' → logprob: -11.083494186401367

Token 408: ' réponse' (ID: 50332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09462608397006989
    2. 'if' → logprob: -2.5946261882781982
    3. ' print' → logprob: -4.719625949859619
    4. 'condition' → logprob: -5.844625949859619
    5. ' if' → logprob: -6.094625949859619
    6. '#' → logprob: -7.719625949859619
    7. ' condition' → logprob: -8.094626426696777
    8. 'result' → logprob: -8.469626426696777
    9. ':' → logprob: -8.844626426696777
    10. ' ' → logprob: -9.344626426696777

Token 409: ' globale' (ID: 87991)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0053779492154717445
    2. ':
' → logprob: -5.880377769470215
    3. ' :' → logprob: -6.755377769470215
    4. ' ==' → logprob: -7.255377769470215
    5. 'print' → logprob: -7.880377769470215
    6. '==' → logprob: -8.755377769470215
    7. ' print' → logprob: -9.630377769470215
    8. ' est' → logprob: -10.505377769470215
    9. ' =' → logprob: -11.380377769470215
    10. ' :
' → logprob: -11.505377769470215

Token 410: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009017866104841232
    2. ':
' → logprob: -4.8840179443359375
    3. ' est' → logprob: -7.7590179443359375
    4. ' ==' → logprob: -7.8840179443359375
    5. '==' → logprob: -8.134017944335938
    6. ' :' → logprob: -9.134017944335938
    7. 'est' → logprob: -9.634017944335938
    8. 'print' → logprob: -10.009017944335938
    9. 'if' → logprob: -10.884017944335938
    10. ' is' → logprob: -11.259017944335938

Token 411: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03489980846643448
    2. ' True' → logprob: -3.5348997116088867
    3. 'v' → logprob: -5.284899711608887
    4. 'true' → logprob: -10.159899711608887
    5. 'V' → logprob: -11.284899711608887
    6. ' vraie' → logprob: -11.409899711608887
    7. ' true' → logprob: -13.409899711608887
    8. '"' → logprob: -13.659899711608887
    9. ' vrai' → logprob: -13.784899711608887
    10. '(True' → logprob: -14.409899711608887

Token 412: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002993035828694701
    2. ':' → logprob: -6.127993106842041
    3. ':
' → logprob: -7.252993106842041
    4. ' if' → logprob: -9.377992630004883
    5. '```' → logprob: -12.252992630004883
    6. 'print' → logprob: -12.627992630004883
    7. '
' → logprob: -13.002992630004883
    8. ')' → logprob: -13.377992630004883
    9. '):
' → logprob: -14.002992630004883
    10. ')
' → logprob: -14.877992630004883

Token 413: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.117345684382599e-05
    2. ' if' → logprob: -11.375020980834961
    3. 'print' → logprob: -12.250020980834961
    4. '```' → logprob: -12.250020980834961
    5. 'result' → logprob: -16.87502098083496
    6. 'b' → logprob: -17.50002098083496
    7. '``' → logprob: -17.62502098083496
    8. 'elif' → logprob: -17.75002098083496
    9. 'is' → logprob: -18.25002098083496
    10. '#' → logprob: -18.87502098083496

Token 414: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20151469111442566
    2. '(a' → logprob: -1.701514720916748
    3. '(' → logprob: -9.32651424407959
    4. ' ' → logprob: -12.07651424407959
    5. '((' → logprob: -12.70151424407959
    6. ' ((' → logprob: -13.57651424407959
    7. '(A' → logprob: -14.32651424407959
    8. '  ' → logprob: -14.70151424407959
    9. 'a' → logprob: -14.95151424407959
    10. ' a' → logprob: -15.32651424407959

Token 415: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016058536246418953
    2. '(a' → logprob: -4.141058444976807
    3. ' a' → logprob: -11.141058921813965
    4. ' (' → logprob: -11.641058921813965
    5. '(' → logprob: -14.891058921813965
    6. '   ' → logprob: -15.766058921813965
    7. ' ' → logprob: -16.14105796813965
    8. '	a' → logprob: -16.64105796813965
    9. '  ' → logprob: -17.26605796813965
    10. '_a' → logprob: -17.26605796813965

Token 416: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. '0' → logprob: -11.875007629394531
    3. ' [' → logprob: -15.125007629394531
    4. '[
' → logprob: -16.00000762939453
    5. '```' → logprob: -16.50000762939453
    6. ' ' → logprob: -16.87500762939453
    7. 'a' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.50000762939453
    9. '==' → logprob: -18.00000762939453
    10. '#' → logprob: -18.25000762939453

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '[' → logprob: -15.875000953674316
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -19.375
    6. '۰' → logprob: -20.125
    7. '00' → logprob: -20.25
    8. '﻿' → logprob: -20.75
    9. '
' → logprob: -20.75
    10. '  ' → logprob: -21.0625

Token 418: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9655117392539978
    2. '==' → logprob: -1.0905117988586426
    3. ']==' → logprob: -1.8405117988586426
    4. ' ==' → logprob: -2.0905117988586426
    5. '[' → logprob: -8.340511322021484
    6. ' ]' → logprob: -8.465511322021484
    7. ')==' → logprob: -8.965511322021484
    8. ')' → logprob: -9.590511322021484
    9. ' ' → logprob: -9.965511322021484
    10. 'a' → logprob: -10.340511322021484

Token 419: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002493729814887047
    2. ' ==' → logprob: -6.002493858337402
    3. '==
' → logprob: -12.127493858337402
    4. '=' → logprob: -12.502493858337402
    5. '[' → logprob: -12.502493858337402
    6. ')==' → logprob: -13.002493858337402
    7. ']==' → logprob: -13.627493858337402
    8. 'a' → logprob: -13.877493858337402
    9. ' ' → logprob: -15.002493858337402
    10. '```' → logprob: -15.127493858337402

Token 420: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233763717114925
    2. ' a' → logprob: -5.2552337646484375
    3. '	a' → logprob: -18.130233764648438
    4. ')a' → logprob: -19.505233764648438
    5. ' ' → logprob: -19.630233764648438
    6. ' ' → logprob: -20.255233764648438
    7. '_a' → logprob: -20.630233764648438
    8. ')' → logprob: -20.755233764648438
    9. '(a' → logprob: -21.005233764648438
    10. '#a' → logprob: -21.255233764648438

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015347852604463696
    2. 'a' → logprob: -9.000153541564941
    3. ' [' → logprob: -11.000153541564941
    4. '][' → logprob: -11.875153541564941
    5. '1' → logprob: -12.875153541564941
    6. ' ' → logprob: -13.625153541564941
    7. ']' → logprob: -13.625153541564941
    8. '[a' → logprob: -14.375153541564941
    9. '   ' → logprob: -14.625153541564941
    10. ' a' → logprob: -15.250153541564941

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -15.000001907348633
    4. '   ' → logprob: -18.625001907348633
    5. 'a' → logprob: -18.875001907348633
    6. '```' → logprob: -18.875001907348633
    7. ']' → logprob: -19.125001907348633
    8. '۱' → logprob: -19.625001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '１' → logprob: -20.437501907348633

Token 423: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01816539652645588
    2. 'and' → logprob: -4.018165588378906
    3. ')' → logprob: -11.268165588378906
    4. ' or' → logprob: -13.643165588378906
    5. ' ' → logprob: -13.768165588378906
    6. ']' → logprob: -15.518165588378906
    7. '   ' → logprob: -15.768165588378906
    8. '    ' → logprob: -16.893165588378906
    9. 'or' → logprob: -17.143165588378906
    10. '```' → logprob: -17.268165588378906

Token 424: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05003086477518082
    2. 'and' → logprob: -3.0500309467315674
    3. ' or' → logprob: -6.550030708312988
    4. 'or' → logprob: -11.425030708312988
    5. ' ' → logprob: -14.175030708312988
    6. '   ' → logprob: -14.675030708312988
    7. ')' → logprob: -14.925030708312988
    8. '	and' → logprob: -17.175031661987305
    9. '    ' → logprob: -18.050031661987305
    10. ' ' → logprob: -18.300031661987305

Token 425: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868715465068817
    2. ' a' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.261871337890625
    4. ' ' → logprob: -16.011871337890625
    5. ' not' → logprob: -16.761871337890625
    6. '(a' → logprob: -16.886871337890625
    7. '	a' → logprob: -17.511871337890625
    8. '_a' → logprob: -17.511871337890625
    9. ')' → logprob: -17.761871337890625
    10. ')a' → logprob: -17.761871337890625

Token 426: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.911954500945285e-05
    2. '!=' → logprob: -10.000088691711426
    3. ' !=' → logprob: -10.625088691711426
    4. '1' → logprob: -11.375088691711426
    5. ' [' → logprob: -12.375088691711426
    6. '```' → logprob: -13.125088691711426
    7. ']' → logprob: -14.375088691711426
    8. ' ' → logprob: -15.000088691711426
    9. '   ' → logprob: -15.750088691711426
    10. '][' → logprob: -16.000089645385742

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001266613689949736
    2. '2' → logprob: -9.000126838684082
    3. '[' → logprob: -12.750126838684082
    4. ' ' → logprob: -16.625125885009766
    5. '```' → logprob: -16.875125885009766
    6. '   ' → logprob: -17.000125885009766
    7. '
' → logprob: -18.375125885009766
    8. '0' → logprob: -18.500125885009766
    9. '۱' → logprob: -18.625125885009766
    10. '	' → logprob: -19.000125885009766

Token 428: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3110223114490509
    2. ' !=' → logprob: -1.4360222816467285
    3. ']' → logprob: -3.8110222816467285
    4. ')' → logprob: -5.3110222816467285
    5. ']!=' → logprob: -6.1860222816467285
    6. ')!=' → logprob: -8.311022758483887
    7. ' ]' → logprob: -10.686022758483887
    8. '()!=' → logprob: -10.811022758483887
    9. ' ' → logprob: -11.936022758483887
    10. '<|end|>' → logprob: -12.811022758483887

Token 429: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5759613513946533
    2. '!=' → logprob: -0.8259613513946533
    3. ')!=' → logprob: -11.200961112976074
    4. ')' → logprob: -12.075961112976074
    5. '()!=' → logprob: -13.700961112976074
    6. ' ' → logprob: -14.450961112976074
    7. '!='' → logprob: -14.950961112976074
    8. ']!=' → logprob: -15.075961112976074
    9. '```' → logprob: -16.45096206665039
    10. ' ' → logprob: -16.82596206665039

Token 430: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ' a' → logprob: -6.7511701583862305
    3. '	a' → logprob: -18.876171112060547
    4. ' ' → logprob: -19.501171112060547
    5. ' ' → logprob: -20.626171112060547
    6. '   ' → logprob: -20.751171112060547
    7. ')a' → logprob: -21.876171112060547
    8. '```' → logprob: -22.001171112060547
    9. 'а' → logprob: -22.376171112060547
    10. '#a' → logprob: -22.501171112060547

Token 431: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '2' → logprob: -13.750001907348633
    3. 'a' → logprob: -14.000001907348633
    4. '[
' → logprob: -18.250001907348633
    5. ' [' → logprob: -18.500001907348633
    6. '_' → logprob: -19.500001907348633
    7. '3' → logprob: -19.625001907348633
    8. 't' → logprob: -19.875001907348633
    9. 'c' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.375001907348633

Token 432: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '0' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '```' → logprob: -18.625001907348633
    7. 'a' → logprob: -18.750001907348633
    8. '  ' → logprob: -19.375001907348633
    9. '
' → logprob: -19.500001907348633
    10. '۲' → logprob: -19.625001907348633

Token 433: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5954712075181305e-05
    2. ' )' → logprob: -10.250036239624023
    3. ')
' → logprob: -15.250036239624023
    4. 'or' → logprob: -16.500036239624023
    5. ' or' → logprob: -16.625036239624023
    6. '')' → logprob: -17.625036239624023
    7. '）' → logprob: -18.125036239624023
    8. '))' → logprob: -18.250036239624023
    9. '   ' → logprob: -18.500036239624023
    10. ')

' → logprob: -18.875036239624023

Token 434: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001505578518845141
    2. 'or' → logprob: -6.501505374908447
    3. '	or' → logprob: -13.626505851745605
    4. ' ' → logprob: -13.751505851745605
    5. ')' → logprob: -14.751505851745605
    6. '   ' → logprob: -14.876505851745605
    7. ' ' → logprob: -15.376505851745605
    8. '  ' → logprob: -17.37650489807129
    9. '    ' → logprob: -18.00150489807129
    10. ''or' → logprob: -18.12650489807129

Token 435: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10020969063043594
    2. '(a' → logprob: -2.3502097129821777
    3. '(' → logprob: -12.72520923614502
    4. ' ' → logprob: -16.975210189819336
    5. ' ' → logprob: -17.975210189819336
    6. ' a' → logprob: -18.600210189819336
    7. '(A' → logprob: -18.725210189819336
    8. ' (
' → logprob: -19.100210189819336
    9. '   ' → logprob: -19.725210189819336
    10. 'a' → logprob: -20.225210189819336

Token 436: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011424804106354713
    2. '(a' → logprob: -7.251142501831055
    3. ' a' → logprob: -7.751142501831055
    4. ' (' → logprob: -13.126142501831055
    5. '	a' → logprob: -16.751142501831055
    6. '(' → logprob: -16.876142501831055
    7. '_a' → logprob: -17.376142501831055
    8. ''a' → logprob: -17.751142501831055
    9. ' ' → logprob: -18.001142501831055
    10. '   ' → logprob: -18.251142501831055

Token 437: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.250001907348633
    3. ' [' → logprob: -14.375001907348633
    4. ' ' → logprob: -16.500001907348633
    5. '```' → logprob: -16.750001907348633
    6. '[
' → logprob: -18.500001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '﻿' → logprob: -20.500001907348633
    9. 'a' → logprob: -20.500001907348633
    10. '  ' → logprob: -21.000001907348633

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -11.625009536743164
    3. ' ' → logprob: -13.875009536743164
    4. '۰' → logprob: -17.750009536743164
    5. '1' → logprob: -18.250009536743164
    6. '2' → logprob: -18.250009536743164
    7. '```' → logprob: -18.875009536743164
    8. '   ' → logprob: -19.375009536743164
    9. '  ' → logprob: -19.937509536743164
    10. '０' → logprob: -20.312509536743164

Token 439: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3539838492870331
    2. '!=' → logprob: -1.2289838790893555
    3. '[' → logprob: -5.7289838790893555
    4. ' ' → logprob: -6.9789838790893555
    5. ']' → logprob: -7.4789838790893555
    6. ')' → logprob: -8.353983879089355
    7. ']!=' → logprob: -8.478983879089355
    8. ' ' → logprob: -8.603983879089355
    9. ')!=' → logprob: -9.853983879089355
    10. '!' → logprob: -10.478983879089355

Token 440: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5759750008583069
    2. ' !=' → logprob: -0.8259750008583069
    3. ')!=' → logprob: -11.82597541809082
    4. ' ' → logprob: -11.82597541809082
    5. '<|end|>' → logprob: -12.20097541809082
    6. ' ' → logprob: -12.32597541809082
    7. '!' → logprob: -12.82597541809082
    8. '()!=' → logprob: -13.07597541809082
    9. '!='' → logprob: -13.45097541809082
    10. ']!=' → logprob: -13.70097541809082

Token 441: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015023599844425917
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -19.251502990722656
    4. ' ' → logprob: -21.376502990722656
    5. ')a' → logprob: -22.001502990722656
    6. '_a' → logprob: -22.126502990722656
    7. '>a' → logprob: -22.501502990722656
    8. '#a' → logprob: -22.876502990722656
    9. ''a' → logprob: -23.251502990722656
    10. '(a' → logprob: -23.376502990722656

Token 442: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030197695014066994
    2. '1' → logprob: -8.1253023147583
    3. 'a' → logprob: -12.3753023147583
    4. ' [' → logprob: -13.8753023147583
    5. '_' → logprob: -15.5003023147583
    6. ' ' → logprob: -16.000301361083984
    7. '```' → logprob: -16.375301361083984
    8. '[
' → logprob: -16.500301361083984
    9. '[a' → logprob: -16.875301361083984
    10. '   ' → logprob: -16.875301361083984

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.125006675720215
    3. '[' → logprob: -13.875006675720215
    4. 'a' → logprob: -15.375006675720215
    5. '   ' → logprob: -17.87500762939453
    6. '
' → logprob: -18.00000762939453
    7. '۱' → logprob: -18.75000762939453
    8. '2' → logprob: -19.00000762939453
    9. '```' → logprob: -19.00000762939453
    10. 'user' → logprob: -19.25000762939453

Token 444: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023266561329364777
    2. 'and' → logprob: -3.773266553878784
    3. ')' → logprob: -11.523266792297363
    4. ' ' → logprob: -11.898266792297363
    5. ']' → logprob: -12.773266792297363
    6. ' a' → logprob: -14.398266792297363
    7. 'a' → logprob: -15.023266792297363
    8. ' ' → logprob: -15.523266792297363
    9. ' и' → logprob: -16.023265838623047
    10. '```' → logprob: -16.648265838623047

Token 445: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519291639328003
    2. 'and' → logprob: -1.5019291639328003
    3. ')' → logprob: -17.126928329467773
    4. ' ' → logprob: -17.126928329467773
    5. 'et' → logprob: -17.251928329467773
    6. ' et' → logprob: -17.251928329467773
    7. ' ' → logprob: -18.251928329467773
    8. ' a' → logprob: -18.251928329467773
    9. 'a' → logprob: -18.376928329467773
    10. ' и' → logprob: -18.626928329467773

Token 446: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06196802109479904
    2. ' a' → logprob: -2.8119680881500244
    3. '(a' → logprob: -14.811967849731445
    4. ' ' → logprob: -16.811967849731445
    5. '	a' → logprob: -17.186967849731445
    6. ' ' → logprob: -17.436967849731445
    7. ')a' → logprob: -18.561967849731445
    8. ''a' → logprob: -18.686967849731445
    9. '[a' → logprob: -19.186967849731445
    10. '_a' → logprob: -19.186967849731445

Token 447: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.3358446166384965e-05
    2. '1' → logprob: -9.875053405761719
    3. '[
' → logprob: -14.125053405761719
    4. '```' → logprob: -14.500053405761719
    5. '2' → logprob: -15.750053405761719
    6. ' [' → logprob: -15.750053405761719
    7. '==' → logprob: -16.62505340576172
    8. ' ' → logprob: -16.75005340576172
    9. '
' → logprob: -16.75005340576172
    10. '   ' → logprob: -17.75005340576172

Token 448: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. '2' → logprob: -10.625030517578125
    3. '[' → logprob: -12.125030517578125
    4. ' ' → logprob: -14.875030517578125
    5. '   ' → logprob: -16.625030517578125
    6. '```' → logprob: -16.625030517578125
    7. '
' → logprob: -17.000030517578125
    8. '0' → logprob: -18.750030517578125
    9. '  ' → logprob: -18.812530517578125
    10. '۱' → logprob: -18.875030517578125

Token 449: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04001651704311371
    2. ' ==' → logprob: -3.2900164127349854
    3. ']==' → logprob: -6.9150166511535645
    4. ']' → logprob: -7.0400166511535645
    5. '=' → logprob: -10.165016174316406
    6. ')' → logprob: -10.290016174316406
    7. '==
' → logprob: -11.040016174316406
    8. ')==' → logprob: -11.290016174316406
    9. '[' → logprob: -14.040016174316406
    10. ' ' → logprob: -14.290016174316406

Token 450: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001932205050252378
    2. ' ==' → logprob: -6.251932144165039
    3. '==
' → logprob: -13.376932144165039
    4. ']==' → logprob: -13.876932144165039
    5. '=' → logprob: -14.376932144165039
    6. ')==' → logprob: -14.751932144165039
    7. '===' → logprob: -17.00193214416504
    8. ')' → logprob: -17.25193214416504
    9. '==(' → logprob: -18.25193214416504
    10. '```' → logprob: -18.25193214416504

Token 451: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001584850688232109
    2. ' a' → logprob: -8.750158309936523
    3. '	a' → logprob: -19.375158309936523
    4. ' ' → logprob: -20.250158309936523
    5. ' ' → logprob: -22.000158309936523
    6. '   ' → logprob: -23.000158309936523
    7. ')a' → logprob: -23.000158309936523
    8. '
' → logprob: -23.375158309936523
    9. 'а' → logprob: -23.625158309936523
    10. '_a' → logprob: -23.750158309936523

Token 452: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003025729674845934
    2. '2' → logprob: -8.2503023147583
    3. 'a' → logprob: -10.1253023147583
    4. ' ' → logprob: -14.5003023147583
    5. '[a' → logprob: -15.6253023147583
    6. '[
' → logprob: -15.7503023147583
    7. ' [' → logprob: -16.500303268432617
    8. '```' → logprob: -16.625303268432617
    9. '(' → logprob: -16.750303268432617
    10. '   ' → logprob: -17.000303268432617

Token 453: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '0' → logprob: -17.500001907348633
    5. '
' → logprob: -17.625001907348633
    6. '۲' → logprob: -17.625001907348633
    7. '```' → logprob: -18.250001907348633
    8. 'a' → logprob: -18.687501907348633
    9. '２' → logprob: -19.250001907348633
    10. '  
' → logprob: -19.250001907348633

Token 454: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012566161341965199
    2. ')' → logprob: -4.387566089630127
    3. '):
' → logprob: -10.387566566467285
    4. ']):' → logprob: -11.887566566467285
    5. ' ):' → logprob: -11.887566566467285
    6. ')):' → logprob: -12.262566566467285
    7. ':' → logprob: -12.637566566467285
    8. '>):' → logprob: -13.887566566467285
    9. '):

' → logprob: -14.262566566467285
    10. ''):' → logprob: -14.387566566467285

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3009428083896637
    2. 'print' → logprob: -1.5509427785873413
    3. ' print' → logprob: -3.050942897796631
    4. '	print' → logprob: -7.925942897796631
    5. '   ' → logprob: -9.175942420959473
    6. ' ' → logprob: -10.300942420959473
    7. '   ' → logprob: -12.050942420959473
    8. ' ' → logprob: -12.550942420959473
    9. '```' → logprob: -12.675942420959473
    10. '  ' → logprob: -12.925942420959473

Token 456: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3380236029624939
    2. ' print' → logprob: -1.3380236625671387
    3. '   ' → logprob: -3.7130236625671387
    4. '	print' → logprob: -10.46302318572998
    5. ' ' → logprob: -11.08802318572998
    6. ' ' → logprob: -12.96302318572998
    7. '   ' → logprob: -13.08802318572998
    8. '```' → logprob: -13.46302318572998
    9. '  ' → logprob: -14.21302318572998
    10. '    ' → logprob: -14.33802318572998

Token 457: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022129806166049093
    2. ' print' → logprob: -9.000221252441406
    3. '   ' → logprob: -9.250221252441406
    4. 'pass' → logprob: -14.000221252441406
    5. ' ' → logprob: -14.500221252441406
    6. '#' → logprob: -16.000221252441406
    7. '	print' → logprob: -16.000221252441406
    8. '  ' → logprob: -17.625221252441406
    9. '```' → logprob: -17.875221252441406
    10. 'result' → logprob: -18.000221252441406

Token 458: ' la' (ID: 557)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.25199782848358154
    2. 'True' → logprob: -2.126997947692871
    3. ' a' → logprob: -3.001997947692871
    4. 'a' → logprob: -3.501997947692871
    5. 'print' → logprob: -4.501997947692871
    6. ' len' → logprob: -5.251997947692871
    7. 'len' → logprob: -6.126997947692871
    8. ' print' → logprob: -6.751997947692871
    9. ' (' → logprob: -6.751997947692871
    10. ' ' → logprob: -7.001997947692871

Token 459: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024322038516402245
    2. 'True' → logprob: -4.399322032928467
    3. 'a' → logprob: -5.024322032928467
    4. ' True' → logprob: -6.524322032928467
    5. ' print' → logprob: -6.899322032928467
    6. 'len' → logprob: -7.024322032928467
    7. '#' → logprob: -7.774322032928467
    8. 'pr' → logprob: -8.024322509765625
    9. 'true' → logprob: -9.274322509765625
    10. ' a' → logprob: -9.274322509765625

Token 460: ' ci' (ID: 7405)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022162634879350662
    2. ' True' → logprob: -5.272162437438965
    3. 'print' → logprob: -5.272162437438965
    4. '   ' → logprob: -6.022162437438965
    5. ':
' → logprob: -6.022162437438965
    6. 'True' → logprob: -6.022162437438965
    7. ' print' → logprob: -6.772162437438965
    8. '==' → logprob: -6.897162437438965
    9. ' ==' → logprob: -6.897162437438965
    10. 'est' → logprob: -7.897162437438965

Token 461: '-dessus' (ID: 74812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4994972348213196
    2. 'n' → logprob: -1.6244971752166748
    3. 'print' → logprob: -2.249497175216675
    4. 'est' → logprob: -3.124497175216675
    5. '   ' → logprob: -4.249497413635254
    6. '```' → logprob: -4.374497413635254
    7. 'f' → logprob: -6.499497413635254
    8. ''est' → logprob: -6.624497413635254
    9. '``' → logprob: -6.749497413635254
    10. 'v' → logprob: -6.999497413635254

Token 462: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09945105761289597
    2. '   ' → logprob: -3.2244510650634766
    3. ':
' → logprob: -3.5994510650634766
    4. 'print' → logprob: -3.8494510650634766
    5. ' print' → logprob: -5.099451065063477
    6. ' :' → logprob: -9.724451065063477
    7. '	print' → logprob: -10.099451065063477
    8. '==' → logprob: -11.099451065063477
    9. ' ==' → logprob: -12.099451065063477
    10. '#' → logprob: -12.349451065063477

Token 463: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011147566139698029
    2. 'v' → logprob: -4.636147499084473
    3. ' True' → logprob: -7.011147499084473
    4. 'V' → logprob: -7.761147499084473
    5. 'true' → logprob: -10.011147499084473
    6. '   ' → logprob: -11.511147499084473
    7. '```' → logprob: -12.761147499084473
    8. ' vraie' → logprob: -13.011147499084473
    9. '_true' → logprob: -14.386147499084473
    10. 'rem' → logprob: -15.136147499084473

Token 464: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4422639012336731
    2. 'print' → logprob: -1.9422638416290283
    3. ':' → logprob: -2.0672638416290283
    4. ':
' → logprob: -2.5672638416290283
    5. ' print' → logprob: -4.567264080047607
    6. '	print' → logprob: -8.94226360321045
    7. '
' → logprob: -9.06726360321045
    8. ' :
' → logprob: -10.31726360321045
    9. ' :' → logprob: -10.56726360321045
    10. '    
' → logprob: -10.94226360321045

Token 465: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1298215538263321
    2. ' print' → logprob: -2.629821538925171
    3. '   ' → logprob: -3.004821538925171
    4. '	print' → logprob: -9.75482177734375
    5. ' ' → logprob: -10.37982177734375
    6. '  ' → logprob: -12.12982177734375
    7. '   ' → logprob: -12.75482177734375
    8. '    ' → logprob: -13.25482177734375
    9. '
' → logprob: -13.37982177734375
    10. 'prin' → logprob: -13.62982177734375

Token 466: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004874488338828087
    2. '"' → logprob: -5.7548747062683105
    3. '(' → logprob: -6.7548747062683105
    4. '(True' → logprob: -8.254874229431152
    5. '('' → logprob: -9.254874229431152
    6. '"O' → logprob: -9.254874229431152
    7. 'True' → logprob: -10.254874229431152
    8. '"La' → logprob: -11.379874229431152
    9. '"T' → logprob: -11.754874229431152
    10. '"B' → logprob: -12.379874229431152

Token 467: ' chaîne' (ID: 89288)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03434004634618759
    2. 'chaine' → logprob: -4.409339904785156
    3. 'string' → logprob: -4.784339904785156
    4. 'phrase' → logprob: -5.034339904785156
    5. ' phrase' → logprob: -6.784339904785156
    6. '"' → logprob: -7.159339904785156
    7. 'ligne' → logprob: -7.284339904785156
    8. 'True' → logprob: -7.409339904785156
    9. ' print' → logprob: -7.784339904785156
    10. 'cha' → logprob: -7.784339904785156

Token 468: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10376797616481781
    2. '"' → logprob: -2.3537678718566895
    3. 'print' → logprob: -6.2287678718566895
    4. '('' → logprob: -7.4787678718566895
    5. '   ' → logprob: -8.353768348693848
    6. '"O' → logprob: -8.603768348693848
    7. '"D' → logprob: -8.603768348693848
    8. '"d' → logprob: -9.728768348693848
    9. '(' → logprob: -9.853768348693848
    10. '"T' → logprob: -10.103768348693848

Token 469: 'Yes' (ID: 13022)
  Prédit: 'Oui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oui' → logprob: -0.6139622926712036
    2. 'O' → logprob: -2.238962173461914
    3. 'Pair' → logprob: -2.363962173461914
    4. 'oui' → logprob: -2.363962173461914
    5. 'DE' → logprob: -3.238962173461914
    6. 'Deux' → logprob: -3.488962173461914
    7. 'Yes' → logprob: -3.863962173461914
    8. 'True' → logprob: -3.863962173461914
    9. '"' → logprob: -3.988962173461914
    10. 'V' → logprob: -4.863962173461914

Token 470: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1481451392173767
    2. '")' → logprob: -2.0231451988220215
    3. 'print' → logprob: -5.2731451988220215
    4. 'Yes' → logprob: -9.023144721984863
    5. '")
' → logprob: -9.898144721984863
    6. ')' → logprob: -9.898144721984863
    7. ' print' → logprob: -10.398144721984863
    8. ' Yes' → logprob: -10.773144721984863
    9. ')"' → logprob: -11.898144721984863
    10. '```' → logprob: -11.898144721984863

Token 471: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20345036685466766
    2. 'print' → logprob: -1.703450322151184
    3. ':
' → logprob: -7.0784502029418945
    4. ' print' → logprob: -7.3284502029418945
    5. ':' → logprob: -7.7034502029418945
    6. '
' → logprob: -9.953450202941895
    7. '	print' → logprob: -10.953450202941895
    8. '```' → logprob: -12.078450202941895
    9. '    
' → logprob: -12.578450202941895
    10. '       ' → logprob: -12.953450202941895

Token 472: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24875885248184204
    2. 'print' → logprob: -2.2487587928771973
    3. 'la' → logprob: -2.9987587928771973
    4. ' l' → logprob: -3.2487587928771973
    5. 'ff' → logprob: -5.623758792877197
    6. 'f' → logprob: -5.873758792877197
    7. ' la' → logprob: -6.123758792877197
    8. 'lac' → logprob: -6.248758792877197
    9. 'laf' → logprob: -6.748758792877197
    10. ''écran' → logprob: -6.998758792877197

Token 473: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46757248044013977
    2. ''écran' → logprob: -1.0925724506378174
    3. 'é' → logprob: -4.5925726890563965
    4. 'e' → logprob: -4.5925726890563965
    5. ''aide' → logprob: -5.3425726890563965
    6. ''utilisateur' → logprob: -5.4675726890563965
    7. 'print' → logprob: -5.8425726890563965
    8. '’écran' → logprob: -6.8425726890563965
    9. 'console' → logprob: -7.2175726890563965
    10. 'i' → logprob: -7.2175726890563965

Token 474: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20197436213493347
    2. 'print' → logprob: -1.7019743919372559
    3. ' print' → logprob: -7.576974391937256
    4. '
' → logprob: -10.951973915100098
    5. ':' → logprob: -11.701973915100098
    6. '	print' → logprob: -11.701973915100098
    7. '```' → logprob: -11.826973915100098
    8. ':
' → logprob: -12.451973915100098
    9. '    
' → logprob: -13.576973915100098
    10. '       ' → logprob: -14.076973915100098

Token 475: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.09765022993087769
    2. ' ind' → logprob: -2.9726502895355225
    3. 'print' → logprob: -4.222650051116943
    4. 'indi' → logprob: -4.347650051116943
    5. 'l' → logprob: -5.222650051116943
    6. ' confirmer' → logprob: -5.847650051116943
    7. 'conf' → logprob: -6.347650051116943
    8. 'val' → logprob: -6.597650051116943
    9. 'la' → logprob: -6.972650051116943
    10. 'sign' → logprob: -7.847650051116943

Token 476: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.004895365796983242
    2. 'ique' → logprob: -6.129895210266113
    3. 'ent' → logprob: -6.629895210266113
    4. 'iqué' → logprob: -7.379895210266113
    5. 'quer' → logprob: -8.004895210266113
    6. 'iqu' → logprob: -9.254895210266113
    7. 'f' → logprob: -9.379895210266113
    8. 'iquant' → logprob: -9.754895210266113
    9. 'enter' → logprob: -10.004895210266113
    10. 'que' → logprob: -10.504895210266113

Token 477: ' que' (ID: 661)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1392349004745483
    2. '   ' → logprob: -1.1392349004745483
    3. '("' → logprob: -1.2642349004745483
    4. ' "' → logprob: -3.014235019683838
    5. ' que' → logprob: -4.639235019683838
    6. 'Yes' → logprob: -4.764235019683838
    7. ' ' → logprob: -5.389235019683838
    8. ' Yes' → logprob: -6.139235019683838
    9. '(' → logprob: -6.889235019683838
    10. '    ' → logprob: -7.764235019683838

Token 478: ' deux' (ID: 10301)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.0486652851104736
    2. ' Yes' → logprob: -1.1736652851104736
    3. 'print' → logprob: -1.6736652851104736
    4. 'Yes' → logprob: -2.4236652851104736
    5. '   ' → logprob: -3.1736652851104736
    6. ' la' → logprob: -4.7986650466918945
    7. ' True' → logprob: -5.0486650466918945
    8. ' ' → logprob: -5.7986650466918945
    9. ' Oui' → logprob: -6.0486650466918945
    10. ' ' → logprob: -7.5486650466918945

Token 479: ' éléments' (ID: 57375)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.8322131633758545
    2. ' nombres' → logprob: -1.0822131633758545
    3. ' integers' → logprob: -2.5822131633758545
    4. ' des' → logprob: -2.5822131633758545
    5. ' valeurs' → logprob: -4.082213401794434
    6. ' ' → logprob: -4.582213401794434
    7. ' val' → logprob: -4.832213401794434
    8. ' ent' → logprob: -4.957213401794434
    9. ' print' → logprob: -5.457213401794434
    10. ' pairs' → logprob: -5.707213401794434

Token 480: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.11618164926767349
    2. ' are' → logprob: -2.9911816120147705
    3. 's' → logprob: -3.1161816120147705
    4. ' ==' → logprob: -4.99118185043335
    5. '==' → logprob: -6.36618185043335
    6. 'print' → logprob: -6.61618185043335
    7. 'ont' → logprob: -6.74118185043335
    8. ' equal' → logprob: -6.74118185043335
    9. ' print' → logprob: -6.99118185043335
    10. '   ' → logprob: -7.36618185043335

Token 481: ' ident' (ID: 3951)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.00941569171845913
    2. 'ég' → logprob: -5.384415626525879
    3. ' égal' → logprob: -6.384415626525879
    4. 'égal' → logprob: -7.134415626525879
    5. ' iguales' → logprob: -7.509415626525879
    6. ' equal' → logprob: -7.884415626525879
    7. ' ident' → logprob: -8.009415626525879
    8. ' iguais' → logprob: -8.134415626525879
    9. 'ident' → logprob: -8.384415626525879
    10. 'equal' → logprob: -9.384415626525879

Token 482: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.005926663056015968
    2. 'ique' → logprob: -6.005926609039307
    3. 'aux' → logprob: -6.380926609039307
    4. 'ques' → logprob: -8.005927085876465
    5. 'ic' → logprob: -8.380927085876465
    6. 'ical' → logprob: -8.505927085876465
    7. 'iqu' → logprob: -8.630927085876465
    8. '#' → logprob: -8.755927085876465
    9. '```' → logprob: -8.755927085876465
    10. 'iq' → logprob: -9.505927085876465

Token 483: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012865711003541946
    2. 'print' → logprob: -4.3878655433654785
    3. ':' → logprob: -8.887866020202637
    4. ':
' → logprob: -9.012866020202637
    5. ' print' → logprob: -9.387866020202637
    6. '	print' → logprob: -12.262866020202637
    7. '
' → logprob: -13.512866020202637
    8. '```' → logprob: -13.637866020202637
    9. '       ' → logprob: -13.887866020202637
    10. ' ' → logprob: -14.137866020202637

Token 484: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5763277411460876
    2. '   ' → logprob: -0.8263277411460876
    3. ' print' → logprob: -7.951327800750732
    4. '```' → logprob: -10.326327323913574
    5. '	print' → logprob: -12.951327323913574
    6. '   ' → logprob: -14.576327323913574
    7. '       ' → logprob: -15.826327323913574
    8. '``' → logprob: -16.32632827758789
    9. ' ' → logprob: -16.57632827758789
    10. '    
' → logprob: -16.82632827758789

Token 485: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0668930932879448
    2. '   ' → logprob: -2.8168931007385254
    3. ' print' → logprob: -5.316893100738525
    4. '	print' → logprob: -12.566892623901367
    5. '```' → logprob: -13.441892623901367
    6. '   ' → logprob: -15.691892623901367
    7. ' ' → logprob: -16.816892623901367
    8. '
' → logprob: -17.066892623901367
    9. '       ' → logprob: -17.066892623901367
    10. '  ' → logprob: -17.441892623901367

Token 486: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004080301150679588
    2. '(' → logprob: -5.504080295562744
    3. '('' → logprob: -13.504080772399902
    4. '(
' → logprob: -16.129079818725586
    5. ' ("' → logprob: -16.129079818725586
    6. '()' → logprob: -17.004079818725586
    7. '("")' → logprob: -17.129079818725586
    8. '("("' → logprob: -17.129079818725586
    9. '"' → logprob: -18.254079818725586
    10. '(

' → logprob: -18.379079818725586

Token 487: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.128163257315464e-07
    2. ' Yes' → logprob: -15.5
    3. 'Oui' → logprob: -17.375
    4. 'Ye' → logprob: -17.625
    5. 'YES' → logprob: -18.5
    6. 'Y' → logprob: -18.5
    7. 'Two' → logprob: -20.125
    8. 'True' → logprob: -20.5
    9. 'Hello' → logprob: -20.75
    10. '```' → logprob: -21.375

Token 488: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.2664456789934775e-06
    2. '")
' → logprob: -13.750000953674316
    3. ')")' → logprob: -17.250001907348633
    4. ')' → logprob: -17.875001907348633
    5. '"' → logprob: -18.875001907348633
    6. ' ")' → logprob: -19.125001907348633
    7. '");' → logprob: -19.375001907348633
    8. '”)' → logprob: -20.375001907348633
    9. '!")' → logprob: -20.375001907348633
    10. '")

' → logprob: -20.625001907348633

Token 489: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.8889261304575484e-06
    2. ' else' → logprob: -12.500003814697266
    3. 'elif' → logprob: -17.125003814697266
    4. '```' → logprob: -17.750003814697266
    5. '}else' → logprob: -20.750003814697266
    6. '   ' → logprob: -20.875003814697266
    7. 'Else' → logprob: -21.625003814697266
    8. 'elser' → logprob: -21.625003814697266
    9. '_else' → logprob: -21.875003814697266
    10. '#else' → logprob: -22.000003814697266

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013361937599256635
    2. ':
' → logprob: -6.626336097717285
    3. ' :' → logprob: -11.751336097717285
    4. '   ' → logprob: -13.126336097717285
    5. ' :
' → logprob: -15.501336097717285
    6. '():' → logprob: -16.3763370513916
    7. ':

' → logprob: -17.6263370513916
    8. '):' → logprob: -17.8763370513916
    9. 'print' → logprob: -18.1263370513916
    10. ':
' → logprob: -18.6263370513916

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028485057409852743
    2. ' print' → logprob: -6.2528486251831055
    3. 'print' → logprob: -7.0028486251831055
    4. '   ' → logprob: -12.252848625183105
    5. '	print' → logprob: -12.752848625183105
    6. '    ' → logprob: -14.252848625183105
    7. '   ' → logprob: -14.502848625183105
    8. '  ' → logprob: -15.002848625183105
    9. '    
' → logprob: -15.127848625183105
    10. '       ' → logprob: -15.252848625183105

Token 492: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11303132772445679
    2. ' print' → logprob: -2.3630313873291016
    3. '   ' → logprob: -4.363031387329102
    4. '	print' → logprob: -12.863031387329102
    5. '    ' → logprob: -16.4880313873291
    6. ' ' → logprob: -16.4880313873291
    7. ' ' → logprob: -16.7380313873291
    8. '   ' → logprob: -16.7380313873291
    9. '```' → logprob: -16.8630313873291
    10. '.print' → logprob: -17.1130313873291

Token 493: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4927085041999817
    2. 'print' → logprob: -0.9927085041999817
    3. ' print' → logprob: -3.992708444595337
    4. '	print' → logprob: -12.242708206176758
    5. '   ' → logprob: -12.742708206176758
    6. ' ' → logprob: -14.492708206176758
    7. '    ' → logprob: -14.867708206176758
    8. '  ' → logprob: -15.617708206176758
    9. '   ' → logprob: -15.867708206176758
    10. '       ' → logprob: -16.117708206176758

Token 494: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012522017583251
    2. 'print' → logprob: -4.637522220611572
    3. ' print' → logprob: -6.137522220611572
    4. ':' → logprob: -7.512522220611572
    5. ':
' → logprob: -10.137521743774414
    6. '    ' → logprob: -11.887521743774414
    7. '       ' → logprob: -12.387521743774414
    8. '  ' → logprob: -13.262521743774414
    9. '	print' → logprob: -13.637521743774414
    10. '   ' → logprob: -14.262521743774414

Token 495: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38750332593917847
    2. 'print' → logprob: -1.3875033855438232
    3. ' print' → logprob: -2.6375033855438232
    4. '	print' → logprob: -12.012503623962402
    5. '   ' → logprob: -12.387503623962402
    6. ' ' → logprob: -14.137503623962402
    7. '    ' → logprob: -14.637503623962402
    8. ' ' → logprob: -14.762503623962402
    9. '       ' → logprob: -14.762503623962402
    10. '  ' → logprob: -15.262503623962402

Token 496: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000563042180147022
    2. '(' → logprob: -7.500563144683838
    3. '"' → logprob: -11.75056266784668
    4. '('' → logprob: -14.12556266784668
    5. 'print' → logprob: -14.50056266784668
    6. '(
' → logprob: -14.75056266784668
    7. '"No' → logprob: -15.37556266784668
    8. '(print' → logprob: -15.75056266784668
    9. ' ("' → logprob: -16.00056266784668
    10. ' ' → logprob: -17.12556266784668

Token 497: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.4849443838757e-06
    2. '"No' → logprob: -12.375004768371582
    3. 'NO' → logprob: -16.250003814697266
    4. ' No' → logprob: -16.500003814697266
    5. '"' → logprob: -18.375003814697266
    6. 'Not' → logprob: -18.625003814697266
    7. 'Yes' → logprob: -19.375003814697266
    8. 'no' → logprob: -19.500003814697266
    9. '“No' → logprob: -19.625003814697266
    10. 'N' → logprob: -20.500003814697266

Token 498: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10083550214767456
    2. '")
' → logprob: -2.3508355617523193
    3. '"' → logprob: -7.85083532333374
    4. '("' → logprob: -8.975835800170898
    5. '(No' → logprob: -10.100835800170898
    6. '"No' → logprob: -10.975835800170898
    7. 'print' → logprob: -11.225835800170898
    8. '")
' → logprob: -11.225835800170898
    9. '()' → logprob: -11.225835800170898
    10. 'No' → logprob: -11.975835800170898

Token 499: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763210654258728
    2. 'print' → logprob: -0.8263210654258728
    3. ' print' → logprob: -7.951321125030518
    4. '```' → logprob: -11.45132064819336
    5. '
' → logprob: -11.95132064819336
    6. '("' → logprob: -12.32632064819336
    7. '(print' → logprob: -13.32632064819336
    8. '	print' → logprob: -13.45132064819336
    9. '.print' → logprob: -13.45132064819336
    10. ' ' → logprob: -13.95132064819336

Token 500: ' sign' (ID: 2232)
  Prédit: ' ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.2555156946182251
    2. 'ind' → logprob: -1.505515694618225
    3. 'print' → logprob: -6.6305155754089355
    4. ' print' → logprob: -6.6305155754089355
    5. ' indique' → logprob: -8.130516052246094
    6. ' indiqu' → logprob: -8.505516052246094
    7. ' indicar' → logprob: -9.005516052246094
    8. 'indi' → logprob: -9.005516052246094
    9. ' indicate' → logprob: -10.130516052246094
    10. '   ' → logprob: -10.255516052246094

Token 501: 'ifier' (ID: 4550)
  Prédit: 'aler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aler' → logprob: -0.577494204044342
    2. 'ifier' → logprob: -0.827494204044342
    3. 'al' → logprob: -7.202494144439697
    4. 'ifer' → logprob: -7.327494144439697
    5. 'if' → logprob: -10.327494621276855
    6. 'er' → logprob: -10.327494621276855
    7. 'ifie' → logprob: -10.577494621276855
    8. 'ale' → logprob: -10.702494621276855
    9. '#' → logprob: -11.577494621276855
    10. '"' → logprob: -11.702494621276855

Token 502: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.05243508145213127
    2. 'que' → logprob: -3.0524351596832275
    3. ' that' → logprob: -6.552434921264648
    4. '"' → logprob: -6.927434921264648
    5. ' qu' → logprob: -7.927434921264648
    6. '("' → logprob: -8.177434921264648
    7. 'that' → logprob: -8.302434921264648
    8. '"No' → logprob: -8.427434921264648
    9. ' la' → logprob: -8.802434921264648
    10. '   ' → logprob: -9.552434921264648

Token 503: ' la' (ID: 557)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.8047241568565369
    2. ' les' → logprob: -1.8047242164611816
    3. ' aucun' → logprob: -1.9297242164611816
    4. 'les' → logprob: -2.5547242164611816
    5. ' il' → logprob: -3.3047242164611816
    6. ' trois' → logprob: -3.4297242164611816
    7. ' deux' → logprob: -3.6797242164611816
    8. 't' → logprob: -4.179724216461182
    9. 'il' → logprob: -4.679724216461182
    10. ' tous' → logprob: -4.804724216461182

Token 504: ' condition' (ID: 7060)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.07286133617162704
    2. ' condition' → logprob: -3.822861433029175
    3. ' troisième' → logprob: -3.822861433029175
    4. ' trois' → logprob: -4.447861194610596
    5. 'condition' → logprob: -5.072861194610596
    6. ' tro' → logprob: -6.572861194610596
    7. ' trip' → logprob: -6.822861194610596
    8. 'trip' → logprob: -7.447861194610596
    9. 's' → logprob: -7.572861194610596
    10. 'de' → logprob: -7.697861194610596

Token 505: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5783725380897522
    2. ' n' → logprob: -0.8283725380897522
    3. '   ' → logprob: -7.578372478485107
    4. 'ne' → logprob: -7.578372478485107
    5. ' ne' → logprob: -8.453372955322266
    6. ' not' → logprob: -8.703372955322266
    7. ' de' → logprob: -8.828372955322266
    8. 'de' → logprob: -8.953372955322266
    9. 'n't' → logprob: -9.078372955322266
    10. 'not' → logprob: -9.328372955322266

Token 506: ''était' (ID: 40609)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.18168507516384125
    2. 'o' → logprob: -2.806684970855713
    3. 'est' → logprob: -3.306684970855713
    4. 'e' → logprob: -3.431684970855713
    5. 'print' → logprob: -4.431684970855713
    6. 'pas' → logprob: -5.306684970855713
    7. 'a' → logprob: -6.056684970855713
    8. 'es' → logprob: -6.181684970855713
    9. ''ex' → logprob: -6.181684970855713
    10. ''' → logprob: -6.306684970855713

Token 507: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.005955107044428587
    2. ' pas' → logprob: -5.130955219268799
    3. '#' → logprob: -11.88095474243164
    4. 's' → logprob: -12.38095474243164
    5. 'p' → logprob: -12.63095474243164
    6. '_pas' → logprob: -12.75595474243164
    7. 'respect' → logprob: -12.75595474243164
    8. '```' → logprob: -13.75595474243164
    9. 'Pas' → logprob: -13.88095474243164
    10. 'not' → logprob: -14.25595474243164

Token 508: ' satis' (ID: 56317)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.13658685982227325
    2. 'respect' → logprob: -2.261586904525757
    3. 's' → logprob: -4.136586666107178
    4. ' rempl' → logprob: -5.261586666107178
    5. 'ré' → logprob: -6.886586666107178
    6. 'v' → logprob: -7.261586666107178
    7. 're' → logprob: -8.636587142944336
    8. 'fulfilled' → logprob: -9.511587142944336
    9. 'faite' → logprob: -10.136587142944336
    10. '```' → logprob: -10.261587142944336

Token 509: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.046563711017370224
    2. 'fi' → logprob: -4.296563625335693
    3. 'f' → logprob: -4.421563625335693
    4. 'ite' → logprob: -4.546563625335693
    5. 'e' → logprob: -6.046563625335693
    6. 'ait' → logprob: -6.171563625335693
    7. '"' → logprob: -6.546563625335693
    8. 'fait' → logprob: -7.546563625335693
    9. 'fa' → logprob: -7.546563625335693
    10. 'ifie' → logprob: -7.671563625335693

Token 510: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004189994651824236
    2. 'print' → logprob: -5.504189968109131
    3. ' print' → logprob: -9.129190444946289
    4. '(print' → logprob: -13.879190444946289
    5. '	print' → logprob: -13.879190444946289
    6. ',' → logprob: -15.754190444946289
    7. '.print' → logprob: -15.754190444946289
    8. '       ' → logprob: -15.879190444946289
    9. '```' → logprob: -15.879190444946289
    10. ' ' → logprob: -16.12919044494629

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018406983464956284
    2. 'print' → logprob: -4.018406867980957
    3. ' print' → logprob: -8.268406867980957
    4. '	print' → logprob: -14.643406867980957
    5. '```' → logprob: -17.143407821655273
    6. '       ' → logprob: -17.518407821655273
    7. '   ' → logprob: -17.768407821655273
    8. 'Print' → logprob: -18.143407821655273
    9. ' ' → logprob: -18.518407821655273
    10. '  ' → logprob: -19.018407821655273

Token 512: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017227731877937913
    2. '   ' → logprob: -6.751722812652588
    3. ' print' → logprob: -7.501722812652588
    4. '	print' → logprob: -15.75172233581543
    5. '```' → logprob: -18.12672233581543
    6. 'Print' → logprob: -18.25172233581543
    7. ' ' → logprob: -18.50172233581543
    8. '  ' → logprob: -19.12672233581543
    9. '       ' → logprob: -19.25172233581543
    10. '.print' → logprob: -19.62672233581543

Token 513: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.375003814697266
    3. '('' → logprob: -18.000003814697266
    4. '()' → logprob: -18.625003814697266
    5. ' ("' → logprob: -19.125003814697266
    6. '("")' → logprob: -19.250003814697266
    7. 'No' → logprob: -20.250003814697266
    8. '"No' → logprob: -20.500003814697266
    9. '(("' → logprob: -21.000003814697266
    10. '"' → logprob: -21.250003814697266

Token 514: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. '"No' → logprob: -17.5
    3. ' No' → logprob: -19.25
    4. 'Yes' → logprob: -24.125
    5. '_No' → logprob: -25.5
    6. '"' → logprob: -25.875
    7. '.No' → logprob: -26.375
    8. '(No' → logprob: -26.5
    9. 'N' → logprob: -26.625
    10. '>No' → logprob: -26.625

Token 515: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.869639476761222e-05
    2. ')")' → logprob: -10.250039100646973
    3. ')' → logprob: -12.625039100646973
    4. '}")' → logprob: -17.750038146972656
    5. '")
' → logprob: -18.125038146972656
    6. '"' → logprob: -18.875038146972656
    7. '()' → logprob: -19.125038146972656
    8. '”)' → logprob: -19.500038146972656
    9. '!")' → logprob: -19.875038146972656
    10. '"))' → logprob: -19.875038146972656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 513
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 310
Précision stricte (1ère position): 25.54%
Précision adaptée (1ère position): 25.93%
Précision (top 10): 60.43%
================================================================================
