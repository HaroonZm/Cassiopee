================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = input()
allblack = 0
i = 0
while i < N:
    if S[i] != '#':
        allblack += 1
    i += 1
answer = allblack
whitecount = allblack
blackcount = 0
i = 0
while i < N:
    if S[i] == '.':
        whitecount -= 1
    else:
        blackcount += 1
    tmp = blackcount + whitecount
    if tmp < answer:
        answer = tmp
    i += 1
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021831797494087368
    2. '('' → logprob: -9.125218391418457
    3. '(N' → logprob: -10.125218391418457
    4. '(
' → logprob: -10.500218391418457
    5. ''' → logprob: -10.750218391418457
    6. '```' → logprob: -12.000218391418457
    7. '("("' → logprob: -12.375218391418457
    8. '`' → logprob: -12.750218391418457
    9. '(`' → logprob: -13.625218391418457
    10. ')' → logprob: -13.875218391418457

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2070285826921463
    2. 'if' → logprob: -2.95702862739563
    3. 's' → logprob: -3.33202862739563
    4. 'a' → logprob: -3.58202862739563
    5. ' for' → logprob: -4.582028388977051
    6. 'x' → logprob: -4.582028388977051
    7. '`' → logprob: -4.957028388977051
    8. 'result' → logprob: -5.207028388977051
    9. 'sum' → logprob: -5.457028388977051
    10. 'data' → logprob: -5.707028388977051

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29350852966308594
    2. '.' → logprob: -1.418508529663086
    3. '=' → logprob: -4.918508529663086
    4. ' =' → logprob: -6.918508529663086
    5. '+' → logprob: -7.043508529663086
    6. '_' → logprob: -7.543508529663086
    7. '\[' → logprob: -7.543508529663086
    8. ')' → logprob: -7.918508529663086
    9. '[:]' → logprob: -7.918508529663086
    10. '[]' → logprob: -8.168508529663086

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20176763832569122
    2. ' input' → logprob: -1.7017676830291748
    3. '""' → logprob: -8.951767921447754
    4. '"' → logprob: -10.576767921447754
    5. '(input' → logprob: -10.576767921447754
    6. ' ' → logprob: -10.576767921447754
    7. '[input' → logprob: -10.576767921447754
    8. '=input' → logprob: -10.701767921447754
    9. ''' → logprob: -10.826767921447754
    10. '''' → logprob: -10.826767921447754

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00340228620916605
    2. '()' → logprob: -6.378402233123779
    3. '('' → logprob: -7.753402233123779
    4. ''' → logprob: -7.878402233123779
    5. ')' → logprob: -8.253402709960938
    6. '"' → logprob: -8.878402709960938
    7. '```' → logprob: -9.378402709960938
    8. '(
' → logprob: -9.628402709960938
    9. '("("' → logprob: -9.628402709960938
    10. '`' → logprob: -9.878402709960938

Token 9: 'all' (ID: 586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5799543261528015
    2. 'if' → logprob: -1.3299543857574463
    3. 'count' → logprob: -2.7049543857574463
    4. 'i' → logprob: -3.2049543857574463
    5. 'f' → logprob: -3.8299543857574463
    6. 'result' → logprob: -4.204954147338867
    7. 'c' → logprob: -4.954954147338867
    8. 'sum' → logprob: -5.329954147338867
    9. 'd' → logprob: -5.829954147338867
    10. 's' → logprob: -5.954954147338867

Token 10: 'black' (ID: 18474)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09520567208528519
    2. '(' → logprob: -2.470205783843994
    3. '_chars' → logprob: -6.470205783843994
    4. '[' → logprob: -6.970205783843994
    5. '_counts' → logprob: -7.595205783843994
    6. ')' → logprob: -7.845205783843994
    7. '()' → logprob: -8.095205307006836
    8. '_words' → logprob: -8.345205307006836
    9. 's' → logprob: -8.470205307006836
    10. '=' → logprob: -8.470205307006836

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14439912140369415
    2. '=' → logprob: -3.1443991661071777
    3. 's' → logprob: -3.1443991661071777
    4. ' =' → logprob: -3.7693991661071777
    5. '[' → logprob: -4.644399166107178
    6. '.' → logprob: -5.269399166107178
    7. ' ' → logprob: -5.394399166107178
    8. ')' → logprob: -6.894399166107178
    9. 'space' → logprob: -7.269399166107178
    10. '[]' → logprob: -7.394399166107178

Token 12: ' ' (ID: 220)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4530356228351593
    2. 'True' → logprob: -1.203035593032837
    3. ' ' → logprob: -4.203035831451416
    4. ' all' → logprob: -4.828035831451416
    5. '"' → logprob: -5.078035831451416
    6. '0' → logprob: -5.203035831451416
    7. 'False' → logprob: -5.703035831451416
    8. ''' → logprob: -5.703035831451416
    9. ' S' → logprob: -5.828035831451416
    10. 'S' → logprob: -5.953035831451416

Token 13: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0628071054816246
    2. 'S' → logprob: -4.062807083129883
    3. 'all' → logprob: -4.062807083129883
    4. 'False' → logprob: -4.312807083129883
    5. ''all' → logprob: -5.687807083129883
    6. 'len' → logprob: -6.437807083129883
    7. ''S' → logprob: -6.562807083129883
    8. '"' → logprob: -6.687807083129883
    9. ' True' → logprob: -6.812807083129883
    10. '(True' → logprob: -7.062807083129883

Token 14: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2657693922519684
    2. ' for' → logprob: -2.0157694816589355
    3. '
' → logprob: -2.7657694816589355
    4. ' ' → logprob: -4.5157694816589355
    5. '\n' → logprob: -4.6407694816589355
    6. '' → logprob: -5.7657694816589355
    7. '<|end|>' → logprob: -5.8907694816589355
    8. '\' → logprob: -6.1407694816589355
    9. 'i' → logprob: -6.3907694816589355
    10. '```' → logprob: -7.0157694816589355

Token 15: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0986553356051445
    2. ' for' → logprob: -2.4736552238464355
    3. '
' → logprob: -5.0986552238464355
    4. '\n' → logprob: -7.0986552238464355
    5. '```' → logprob: -7.2236552238464355
    6. 'i' → logprob: -7.8486552238464355
    7. '' → logprob: -7.9736552238464355
    8. '<|end|>' → logprob: -8.473655700683594
    9. ' ' → logprob: -8.973655700683594
    10. '\' → logprob: -8.973655700683594

Token 16: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04311520606279373
    2. '=' → logprob: -3.9181151390075684
    3. 'n' → logprob: -4.668115139007568
    4. ' =' → logprob: -5.043115139007568
    5. 's' → logprob: -5.293115139007568
    6. 'nd' → logprob: -8.043115615844727
    7. '+' → logprob: -8.043115615844727
    8. ' f' → logprob: -8.793115615844727
    9. ' ' → logprob: -9.168115615844727
    10. '_' → logprob: -9.293115615844727

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1810191422700882
    2. ' ' → logprob: -1.8060191869735718
    3. '1' → logprob: -6.681019306182861
    4. '2' → logprob: -11.306018829345703
    5. '3' → logprob: -13.743518829345703
    6. '4' → logprob: -13.743518829345703
    7. 'i' → logprob: -14.868518829345703
    8. 'N' → logprob: -14.868518829345703
    9. ' i' → logprob: -14.931018829345703
    10. ' ' → logprob: -14.993518829345703

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030063462909311056
    2. ' ' → logprob: -6.253006458282471
    3. '1' → logprob: -6.878006458282471
    4. '2' → logprob: -10.253005981445312
    5. '-' → logprob: -12.253005981445312
    6. '3' → logprob: -13.378005981445312
    7. 'N' → logprob: -13.503005981445312
    8. '4' → logprob: -14.128005981445312
    9. 'i' → logprob: -14.253005981445312
    10. ')' → logprob: -14.503005981445312

Token 19: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007120614871382713
    2. ' while' → logprob: -5.007120609283447
    3. '```' → logprob: -9.007121086120605
    4. 'w' → logprob: -9.132121086120605
    5. '\n' → logprob: -10.257121086120605
    6. 's' → logprob: -10.507121086120605
    7. '<|end|>' → logprob: -11.007121086120605
    8. '
' → logprob: -11.257121086120605
    9. '\' → logprob: -11.382121086120605
    10. 'While' → logprob: -11.507121086120605

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16771619021892548
    2. ' ' → logprob: -1.917716145515442
    3. 'i' → logprob: -4.917716026306152
    4. ' ' → logprob: -9.542716026306152
    5. '<|end|>' → logprob: -11.042716026306152
    6. ' )' → logprob: -11.292716026306152
    7. ' not' → logprob: -11.417716026306152
    8. '  ' → logprob: -11.542716026306152
    9. ' (' → logprob: -11.917716026306152
    10. ' S' → logprob: -12.042716026306152

Token 22: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2024027705192566
    2. '<' → logprob: -1.7024028301239014
    3. ' ' → logprob: -7.327402591705322
    4. ' <=' → logprob: -8.45240306854248
    5. '<len' → logprob: -9.70240306854248
    6. '<=' → logprob: -10.20240306854248
    7. ' <
' → logprob: -12.45240306854248
    8. '<N' → logprob: -12.70240306854248
    9. '<n' → logprob: -13.07740306854248
    10. '<size' → logprob: -13.32740306854248

Token 23: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.2838048040866852
    2. 'N' → logprob: -1.4088047742843628
    3. ' ' → logprob: -6.283804893493652
    4. ' len' → logprob: -7.658804893493652
    5. 'len' → logprob: -8.158804893493652
    6. 'n' → logprob: -11.658804893493652
    7. ' n' → logprob: -12.533804893493652
    8. '  ' → logprob: -12.658804893493652
    9. '1' → logprob: -13.658804893493652
    10. ' ' → logprob: -13.658804893493652

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004909719806164503
    2. ' :' → logprob: -5.879909515380859
    3. ' and' → logprob: -6.629909515380859
    4. ':
' → logprob: -7.879909515380859
    5. ' ' → logprob: -9.37990951538086
    6. '   ' → logprob: -9.37990951538086
    7. '+:' → logprob: -9.62990951538086
    8. 'and' → logprob: -9.87990951538086
    9. ':**' → logprob: -10.37990951538086
    10. '):' → logprob: -11.00490951538086

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13220380246639252
    2. '   ' → logprob: -2.6322038173675537
    3. ' if' → logprob: -3.7572038173675537
    4. '    ' → logprob: -4.507203578948975
    5. 'if' → logprob: -5.382203578948975
    6. '<|end|>' → logprob: -5.507203578948975
    7. 's' → logprob: -5.757203578948975
    8. '  ' → logprob: -7.382203578948975
    9. 'i' → logprob: -7.632203578948975
    10. '```' → logprob: -7.757203578948975

Token 26: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4559275209903717
    2. 'if' (adapté à ' if') → logprob: -1.3309274911880493
    3. '   ' → logprob: -3.455927610397339
    4. 's' → logprob: -3.830927610397339
    5. ' ' → logprob: -4.58092737197876
    6. 'i' → logprob: -4.70592737197876
    7. ' i' → logprob: -5.08092737197876
    8. 'all' → logprob: -5.20592737197876
    9. 'S' → logprob: -5.33092737197876
    10. ' all' → logprob: -5.58092737197876

Token 27: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.007877510972321033
    2. 'S' → logprob: -4.882877349853516
    3. ' ' → logprob: -8.382877349853516
    4. '<|end|>' → logprob: -12.007877349853516
    5. ' ' → logprob: -12.132877349853516
    6. '(S' → logprob: -12.507877349853516
    7. 's' → logprob: -12.507877349853516
    8. ' not' → logprob: -12.757877349853516
    9. ' all' → logprob: -13.007877349853516
    10. ' i' → logprob: -13.007877349853516

Token 28: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -10.875020980834961
    3. '[I' → logprob: -14.000020980834961
    4. 'i' → logprob: -14.375020980834961
    5. '```' → logprob: -16.00002098083496
    6. ' [' → logprob: -16.12502098083496
    7. '\[' → logprob: -16.62502098083496
    8. '==' → logprob: -16.87502098083496
    9. '[...]' → logprob: -17.25002098083496
    10. '   ' → logprob: -18.12502098083496

Token 29: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033770982176065445
    2. ']==' → logprob: -3.90877103805542
    3. '==' → logprob: -4.65877103805542
    4. ' ]' → logprob: -6.40877103805542
    5. ' ==' → logprob: -6.65877103805542
    6. ']=='' → logprob: -8.158770561218262
    7. '[' → logprob: -9.283770561218262
    8. '=' → logprob: -9.408770561218262
    9. ' ' → logprob: -9.533770561218262
    10. ':' → logprob: -10.908770561218262

Token 30: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39011022448539734
    2. ' ==' → logprob: -1.1401102542877197
    3. '=' → logprob: -6.515110015869141
    4. ' ' → logprob: -7.390110015869141
    5. '=='' → logprob: -7.640110015869141
    6. '!=' → logprob: -8.14011001586914
    7. ' !=' → logprob: -9.89011001586914
    8. ''' → logprob: -10.01511001586914
    9. ' =='' → logprob: -10.14011001586914
    10. '[' → logprob: -10.51511001586914

Token 31: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04157879203557968
    2. ''S' → logprob: -4.291578769683838
    3. ' '' → logprob: -4.916578769683838
    4. ''#' → logprob: -5.166578769683838
    5. '"B' → logprob: -6.166578769683838
    6. ''.' → logprob: -6.166578769683838
    7. ''b' → logprob: -6.291578769683838
    8. '"' → logprob: -6.291578769683838
    9. ''w' → logprob: -6.666578769683838
    10. ''C' → logprob: -7.541578769683838

Token 32: '':
' (ID: 7669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8413336873054504
    2. ''' → logprob: -1.0913336277008057
    3. ' ':' → logprob: -2.0913336277008057
    4. '':' → logprob: -2.5913336277008057
    5. ' '' → logprob: -3.9663336277008057
    6. ':' → logprob: -4.591333866119385
    7. ''#' → logprob: -6.716333866119385
    8. '.' → logprob: -6.841333866119385
    9. ''s' → logprob: -6.966333866119385
    10. '#:' → logprob: -7.716333866119385

Token 33: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7465639114379883
    2. '       ' → logprob: -1.4965639114379883
    3. '    ' → logprob: -1.9965639114379883
    4. 'i' → logprob: -2.6215639114379883
    5. ' i' → logprob: -2.9965639114379883
    6. '   ' → logprob: -4.121563911437988
    7. 'all' → logprob: -4.746563911437988
    8. '<|end|>' → logprob: -5.496563911437988
    9. ' all' → logprob: -5.746563911437988
    10. '        ' → logprob: -6.246563911437988

Token 34: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.6714546084403992
    2. ' all' → logprob: -1.046454668045044
    3. ' break' → logprob: -2.671454668045044
    4. ' i' → logprob: -3.171454668045044
    5. ' ' → logprob: -4.421454429626465
    6. 'i' → logprob: -4.671454429626465
    7. 'break' → logprob: -5.796454429626465
    8. '    ' → logprob: -6.921454429626465
    9. '<|end|>' → logprob: -7.796454429626465
    10. '   ' → logprob: -9.358954429626465

Token 35: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.0068435994908213615
    2. '_black' → logprob: -6.131843566894531
    3. ' +=' → logprob: -6.381843566894531
    4. '+=' → logprob: -6.506843566894531
    5. 'b' → logprob: -8.256843566894531
    6. '=' → logprob: -8.506843566894531
    7. ' black' → logprob: -8.756843566894531
    8. '+' → logprob: -9.131843566894531
    9. 'bl' → logprob: -9.131843566894531
    10. 'blank' → logprob: -9.381843566894531

Token 36: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3059852123260498
    2. '+=' → logprob: -1.5559852123260498
    3. ' =' → logprob: -3.68098521232605
    4. '=' → logprob: -3.80598521232605
    5. '+' → logprob: -5.305985450744629
    6. ' +' → logprob: -8.930985450744629
    7. ' ' → logprob: -9.805985450744629
    8. '++' → logprob: -12.055985450744629
    9. '   ' → logprob: -12.055985450744629
    10. ' -=' → logprob: -12.305985450744629

Token 37: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059449137188494205
    2. ' ' → logprob: -5.130944728851318
    3. '0' → logprob: -11.505945205688477
    4. 'i' → logprob: -12.880945205688477
    5. ' i' → logprob: -13.380945205688477
    6. 'S' → logprob: -14.380945205688477
    7. '2' → logprob: -14.630945205688477
    8. '-' → logprob: -14.630945205688477
    9. ' S' → logprob: -15.880945205688477
    10. ' -' → logprob: -16.693445205688477

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003688245196826756
    2. ' ' → logprob: -8.12536907196045
    3. 'i' → logprob: -10.12536907196045
    4. 'S' → logprob: -11.25036907196045
    5. '0' → logprob: -11.50036907196045
    6. '-' → logprob: -12.25036907196045
    7. ' i' → logprob: -13.62536907196045
    8. '2' → logprob: -13.75036907196045
    9. ')' → logprob: -15.00036907196045
    10. 'N' → logprob: -15.43786907196045

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40990275144577026
    2. '   ' → logprob: -1.409902811050415
    3. '<|end|>' → logprob: -3.784902811050415
    4. ' 
' → logprob: -4.159902572631836
    5. '\n' → logprob: -4.409902572631836
    6. '    
' → logprob: -4.659902572631836
    7. 'i' → logprob: -4.784902572631836
    8. ' ' → logprob: -4.784902572631836
    9. '    ' → logprob: -5.409902572631836
    10. ' i' → logprob: -5.784902572631836

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06581387668848038
    2. 'i' → logprob: -3.0658137798309326
    3. ' i' → logprob: -4.690814018249512
    4. '    
' → logprob: -5.565814018249512
    5. '<|end|>' → logprob: -6.940814018249512
    6. '    ' → logprob: -7.190814018249512
    7. '
' → logprob: -7.815814018249512
    8. ' 
' → logprob: -7.815814018249512
    9. ' ' → logprob: -7.940814018249512
    10. '       ' → logprob: -8.065814018249512

Token 41: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7305930852890015
    2. 'i' (adapté à ' i') → logprob: -0.9805930852890015
    3. ' i' → logprob: -1.9805930852890015
    4. '    
' → logprob: -7.105593204498291
    5. '<|end|>' → logprob: -7.230593204498291
    6. '[i' → logprob: -7.480593204498291
    7. ' ' → logprob: -7.480593204498291
    8. '
' → logprob: -7.605593204498291
    9. '	i' → logprob: -7.730593204498291
    10. ' 
' → logprob: -7.730593204498291

Token 42: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02678508125245571
    2. '+=' → logprob: -3.776785135269165
    3. ' +=' → logprob: -5.776784896850586
    4. ' +' → logprob: -8.151784896850586
    5. '++' → logprob: -9.026784896850586
    6. '+++' → logprob: -11.151784896850586
    7. '=' → logprob: -12.276784896850586
    8. '<|end|>' → logprob: -12.776784896850586
    9. '+='' → logprob: -13.526784896850586
    10. '+="' → logprob: -14.026784896850586

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.125205039978027
    4. '```' → logprob: -14.625205039978027
    5. '１' → logprob: -17.62520408630371
    6. '+' → logprob: -17.75020408630371
    7. '  ' → logprob: -18.00020408630371
    8. '2' → logprob: -18.37520408630371
    9. '    ' → logprob: -18.43770408630371
    10. '۱' → logprob: -18.62520408630371

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -15.750024795532227
    4. '   ' → logprob: -17.000024795532227
    5. '１' → logprob: -18.062524795532227
    6. '2' → logprob: -18.375024795532227
    7. '+' → logprob: -18.750024795532227
    8. '0' → logprob: -18.750024795532227
    9. '१' → logprob: -18.937524795532227
    10. '  ' → logprob: -19.000024795532227

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30349716544151306
    2. '<|end|>' → logprob: -2.053497076034546
    3. 'print' → logprob: -3.178497076034546
    4. ' ' → logprob: -3.678497076034546
    5. '#' → logprob: -3.678497076034546
    6. ' 
' → logprob: -4.303497314453125
    7. '```' → logprob: -4.803497314453125
    8. '\n' → logprob: -6.053497314453125
    9. '+' → logprob: -6.553497314453125
    10. '   ' → logprob: -6.553497314453125

Token 46: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0651813745498657
    2. '
' → logprob: -1.1901813745498657
    3. '#' → logprob: -1.6901813745498657
    4. '<|end|>' → logprob: -3.065181255340576
    5. ' 
' → logprob: -3.940181255340576
    6. 'if' → logprob: -4.065181255340576
    7. '```' → logprob: -4.440181255340576
    8. ' ' → logprob: -4.440181255340576
    9. '  
' → logprob: -4.815181255340576
    10. ')' → logprob: -4.940181255340576

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076367976143956184
    2. '=' → logprob: -5.007637023925781
    3. ' ' → logprob: -7.757637023925781
    4. 's' → logprob: -8.132637023925781
    5. '_' → logprob: -9.757637023925781
    6. ')' → logprob: -10.507637023925781
    7. ' +=' → logprob: -10.507637023925781
    8. ',' → logprob: -10.882637023925781
    9. '<|end|>' → logprob: -11.257637023925781
    10. ':' → logprob: -11.507637023925781

Token 48: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.26171910762786865
    2. 'all' → logprob: -1.6367191076278687
    3. ' max' → logprob: -4.136719226837158
    4. ' min' → logprob: -4.886719226837158
    5. 'max' → logprob: -5.761719226837158
    6. ' N' → logprob: -6.011719226837158
    7. '0' → logprob: -6.261719226837158
    8. 'min' → logprob: -6.636719226837158
    9. ''' → logprob: -7.261719226837158
    10. '"' → logprob: -7.386719226837158

Token 49: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.0014192804228514433
    2. 'b' → logprob: -6.7514190673828125
    3. '_black' → logprob: -9.626419067382812
    4. 'blank' → logprob: -10.001419067382812
    5. 'bl' → logprob: -10.751419067382812
    6. 'block' → logprob: -10.751419067382812
    7. 'answer' → logprob: -10.876419067382812
    8. 'bla' → logprob: -11.251419067382812
    9. ' black' → logprob: -11.501419067382812
    10. '   ' → logprob: -11.751419067382812

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08723676949739456
    2. '<|end|>' → logprob: -3.3372368812561035
    3. '%' → logprob: -3.5872368812561035
    4. '+' → logprob: -5.3372368812561035
    5. ' ' → logprob: -5.5872368812561035
    6. '-' → logprob: -5.5872368812561035
    7. '\n' → logprob: -5.9622368812561035
    8. ' 
' → logprob: -6.8372368812561035
    9. '```' → logprob: -7.3372368812561035
    10. '*' → logprob: -7.4622368812561035

Token 51: 'white' (ID: 9988)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6838288307189941
    2. ' for' → logprob: -1.4338288307189941
    3. 'for' → logprob: -1.9338288307189941
    4. ' i' → logprob: -2.933828830718994
    5. '<|end|>' → logprob: -4.183828830718994
    6. '
' → logprob: -4.683828830718994
    7. 'max' → logprob: -4.933828830718994
    8. 'count' → logprob: -5.183828830718994
    9. 'while' → logprob: -5.558828830718994
    10. ' 
' → logprob: -5.558828830718994

Token 52: 'count' (ID: 5420)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13454937934875488
    2. 'count' → logprob: -2.759549379348755
    3. '_count' → logprob: -4.134549140930176
    4. '=' → logprob: -4.259549140930176
    5. '_' → logprob: -4.384549140930176
    6. 's' → logprob: -5.634549140930176
    7. '_spaces' → logprob: -5.759549140930176
    8. '_st' → logprob: -6.134549140930176
    9. '_before' → logprob: -7.259549140930176
    10. '_run' → logprob: -7.384549140930176

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009547238238155842
    2. '=' → logprob: -4.759547233581543
    3. ' ' → logprob: -7.009547233581543
    4. '  ' → logprob: -10.759547233581543
    5. ',' → logprob: -12.384547233581543
    6. 's' → logprob: -14.384547233581543
    7. '<|end|>' → logprob: -14.384547233581543
    8. '_' → logprob: -14.509547233581543
    9. '   ' → logprob: -14.634547233581543
    10. ' ,' → logprob: -15.134547233581543

Token 54: ' all' (ID: 722)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3140217065811157
    2. ' ' → logprob: -1.3140217065811157
    3. ' S' → logprob: -8.064022064208984
    4. 'S' → logprob: -8.564022064208984
    5. ' all' → logprob: -9.064022064208984
    6. 'all' → logprob: -9.814022064208984
    7. ' N' → logprob: -10.439022064208984
    8. '1' → logprob: -10.564022064208984
    9. 'N' → logprob: -11.564022064208984
    10. ' ' → logprob: -12.314022064208984

Token 55: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.007584624923765659
    2. 'white' → logprob: -5.632584571838379
    3. '_black' → logprob: -6.132584571838379
    4. ' ' → logprob: -7.382584571838379
    5. ' black' → logprob: -8.007584571838379
    6. 'count' → logprob: -8.132584571838379
    7. 'b' → logprob: -8.757584571838379
    8. 'block' → logprob: -10.007584571838379
    9. '  ' → logprob: -10.257584571838379
    10. '_white' → logprob: -10.257584571838379

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3286280333995819
    2. '<|end|>' → logprob: -1.3286280632019043
    3. 'i' → logprob: -5.578628063201904
    4. '<|end|>' → logprob: -5.953628063201904
    5. ' 
' → logprob: -6.203628063201904
    6. '```' → logprob: -6.578628063201904
    7. '  
' → logprob: -6.578628063201904
    8. '+' → logprob: -6.578628063201904
    9. 'for' → logprob: -7.453628063201904
    10. 'while' → logprob: -7.578628063201904

Token 57: 'black' (ID: 18474)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1788182258605957
    2. 'for' → logprob: -2.3038182258605957
    3. '<|end|>' → logprob: -3.5538182258605957
    4. ' for' → logprob: -3.8038182258605957
    5. '
' → logprob: -4.928818225860596
    6. ' i' → logprob: -5.928818225860596
    7. '```' → logprob: -7.178818225860596
    8. 'white' → logprob: -7.303818225860596
    9. 'while' → logprob: -7.928818225860596
    10. ' 
' → logprob: -8.553817749023438

Token 58: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0018292918102815747
    2. '_count' → logprob: -7.376829147338867
    3. ' =' → logprob: -7.376829147338867
    4. ' ' → logprob: -8.626829147338867
    5. '=' → logprob: -9.126829147338867
    6. '  ' → logprob: -9.626829147338867
    7. 'index' → logprob: -9.876829147338867
    8. ' count' → logprob: -10.251829147338867
    9. '<|end|>' → logprob: -10.751829147338867
    10. '    ' → logprob: -10.876829147338867

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06248799338936806
    2. '=' → logprob: -3.062488079071045
    3. ' ' → logprob: -4.312488079071045
    4. '<|end|>' → logprob: -8.687487602233887
    5. ' +' → logprob: -8.937487602233887
    6. '+' → logprob: -10.187487602233887
    7. ' +=' → logprob: -10.937487602233887
    8. '0' → logprob: -11.312487602233887
    9. '  ' → logprob: -11.812487602233887
    10. '<|end|>' → logprob: -11.937487602233887

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08147867023944855
    2. ' ' → logprob: -2.5814785957336426
    3. 'S' → logprob: -6.956478595733643
    4. 'N' → logprob: -7.206478595733643
    5. ' S' → logprob: -7.831478595733643
    6. ' N' → logprob: -7.956478595733643
    7. ' all' → logprob: -9.7064790725708
    8. '1' → logprob: -10.4564790725708
    9. 'all' → logprob: -10.7064790725708
    10. 'i' → logprob: -11.7064790725708

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010189731605350971
    2. 'S' → logprob: -5.010189533233643
    3. 'N' → logprob: -5.885189533233643
    4. ' ' → logprob: -7.385189533233643
    5. '1' → logprob: -11.0101900100708
    6. 'sum' → logprob: -11.1351900100708
    7. 'i' → logprob: -11.3851900100708
    8. ' S' → logprob: -11.7601900100708
    9. ' N' → logprob: -12.2601900100708
    10. 'all' → logprob: -12.5101900100708

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4518166184425354
    2. 'for' → logprob: -1.8268165588378906
    3. '
' → logprob: -2.2018165588378906
    4. '\n' → logprob: -3.2018165588378906
    5. '<|end|>' → logprob: -3.9518165588378906
    6. 'while' → logprob: -4.076816558837891
    7. ' for' → logprob: -5.201816558837891
    8. '```' → logprob: -5.326816558837891
    9. ' while' → logprob: -6.826816558837891
    10. '<|end|>' → logprob: -6.951816558837891

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12017742544412613
    2. '=' → logprob: -2.6201775074005127
    3. ' +=' → logprob: -3.2451775074005127
    4. ' ' → logprob: -7.495177268981934
    5. '+=' → logprob: -7.995177268981934
    6. '+' → logprob: -7.995177268981934
    7. ' +' → logprob: -8.745177268981934
    8. '0' → logprob: -10.245177268981934
    9. ' <' → logprob: -10.870177268981934
    10. '  ' → logprob: -11.245177268981934

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00702024158090353
    2. ' ' → logprob: -5.007020473480225
    3. '1' → logprob: -8.132019996643066
    4. 'N' → logprob: -11.882019996643066
    5. ' N' → logprob: -12.882019996643066
    6. '-' → logprob: -14.882019996643066
    7. '2' → logprob: -15.819519996643066
    8. '<|end|>' → logprob: -16.694520950317383
    9. ' -' → logprob: -16.819520950317383
    10. '=' → logprob: -16.819520950317383

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003222342347726226
    2. '1' → logprob: -8.250322341918945
    3. ' ' → logprob: -10.250322341918945
    4. 'N' → logprob: -10.625322341918945
    5. '-' → logprob: -14.250322341918945
    6. '   ' → logprob: -15.875322341918945
    7. ' N' → logprob: -16.562822341918945
    8. '2' → logprob: -16.812822341918945
    9. '  ' → logprob: -16.937822341918945
    10. '```' → logprob: -17.000322341918945

Token 67: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15234874188899994
    2. ' while' → logprob: -2.402348756790161
    3. '<|end|>' → logprob: -3.027348756790161
    4. '```' → logprob: -6.777348518371582
    5. '
' → logprob: -7.652348518371582
    6. '<|end|>' → logprob: -8.527348518371582
    7. 'While' → logprob: -8.527348518371582
    8. ' While' → logprob: -9.902348518371582
    9. '	while' → logprob: -9.902348518371582
    10. ' ' → logprob: -10.152348518371582

Token 68: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5217817425727844
    2. 'while' → logprob: -1.1467816829681396
    3. ' ' → logprob: -2.6467816829681396
    4. '<|end|>' → logprob: -4.396781921386719
    5. '```' → logprob: -6.521781921386719
    6. 'i' → logprob: -7.396781921386719
    7. ' ,' → logprob: -7.771781921386719
    8. ' )' → logprob: -7.896781921386719
    9. ':' → logprob: -8.021781921386719
    10. ',' → logprob: -8.146781921386719

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0889458954334259
    2. 'i' → logprob: -2.4639458656311035
    3. '(i' → logprob: -13.463946342468262
    4. '   ' → logprob: -13.463946342468262
    5. ' ' → logprob: -13.838946342468262
    6. '	i' → logprob: -13.838946342468262
    7. ' ' → logprob: -14.713946342468262
    8. '```' → logprob: -15.213946342468262
    9. 'N' → logprob: -15.588946342468262
    10. 'I' → logprob: -15.713946342468262

Token 70: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016050323843955994
    2. '<' → logprob: -4.141050338745117
    3. '<N' → logprob: -11.266050338745117
    4. ' ' → logprob: -13.016050338745117
    5. ' <=' → logprob: -14.516050338745117
    6. '<n' → logprob: -15.016050338745117
    7. '<|end|>' → logprob: -16.766050338745117
    8. ' <
' → logprob: -17.266050338745117
    9. 'N' → logprob: -17.766050338745117
    10. ' N' → logprob: -18.016050338745117

Token 71: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007620945107191801
    2. ' N' → logprob: -4.882620811462402
    3. ' ' → logprob: -11.757620811462402
    4. '   ' → logprob: -12.132620811462402
    5. '  ' → logprob: -14.632620811462402
    6. '	N' → logprob: -14.632620811462402
    7. 'len' → logprob: -15.507620811462402
    8. '<|end|>' → logprob: -16.13262176513672
    9. '```' → logprob: -16.38262176513672
    10. '>N' → logprob: -16.38262176513672

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00122070184443146
    2. ':
' → logprob: -6.876220703125
    3. '   ' → logprob: -9.126220703125
    4. ' :' → logprob: -9.751220703125
    5. '```' → logprob: -12.251220703125
    6. ' and' → logprob: -12.501220703125
    7. '<|end|>' → logprob: -13.001220703125
    8. ' :
' → logprob: -13.501220703125
    9. ':

' → logprob: -13.751220703125
    10. '):' → logprob: -14.251220703125

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001449398696422577
    2. ' if' → logprob: -7.1264495849609375
    3. '```' → logprob: -7.6264495849609375
    4. '    ' → logprob: -9.876449584960938
    5. 'if' → logprob: -10.626449584960938
    6. ' i' → logprob: -10.876449584960938
    7. '<|end|>' → logprob: -11.376449584960938
    8. 'i' → logprob: -11.626449584960938
    9. ' ' → logprob: -11.626449584960938
    10. '    
' → logprob: -12.001449584960938

Token 74: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0842369794845581
    2. ' if' → logprob: -2.5842370986938477
    3. 'if' (adapté à ' if') → logprob: -6.084237098693848
    4. '```' → logprob: -6.584237098693848
    5. '    ' → logprob: -7.459237098693848
    6. ' ' → logprob: -7.584237098693848
    7. ' i' → logprob: -8.959237098693848
    8. 'i' → logprob: -9.459237098693848
    9. '<|end|>' → logprob: -9.459237098693848
    10. '  ' → logprob: -10.084237098693848

Token 75: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4744099974632263
    2. ' S' → logprob: -0.9744099974632263
    3. '   ' → logprob: -8.599410057067871
    4. ' ' → logprob: -9.224410057067871
    5. '  ' → logprob: -11.849410057067871
    6. ' ' → logprob: -11.974410057067871
    7. '    ' → logprob: -12.099410057067871
    8. '	S' → logprob: -12.224410057067871
    9. 'i' → logprob: -12.474410057067871
    10. ' white' → logprob: -12.724410057067871

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003184233792126179
    2. '[' → logprob: -9.50031852722168
    3. '   ' → logprob: -9.62531852722168
    4. '`' → logprob: -10.12531852722168
    5. '==' → logprob: -10.37531852722168
    6. ' ==' → logprob: -10.50031852722168
    7. '```' → logprob: -10.50031852722168
    8. 'i' → logprob: -10.75031852722168
    9. ' [' → logprob: -12.50031852722168
    10. '[
' → logprob: -12.62531852722168

Token 77: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1523205041885376
    2. '==' → logprob: -2.152320384979248
    3. ' !=' → logprob: -4.777320384979248
    4. ']' → logprob: -5.652320384979248
    5. '    ' → logprob: -5.777320384979248
    6. ')' → logprob: -5.902320384979248
    7. ']==' → logprob: -6.527320384979248
    8. ' ' → logprob: -6.652320384979248
    9. '=' → logprob: -6.652320384979248
    10. '   ' → logprob: -7.152320384979248

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3552745580673218
    2. '==' → logprob: -1.2302745580673218
    3. ' !=' → logprob: -6.605274677276611
    4. '   ' → logprob: -6.730274677276611
    5. '    ' → logprob: -6.855274677276611
    6. '=='' → logprob: -7.105274677276611
    7. '!=' → logprob: -7.355274677276611
    8. '=' → logprob: -7.355274677276611
    9. ' ' → logprob: -7.730274677276611
    10. ' =='' → logprob: -9.417774200439453

Token 79: ' '.' (ID: 12662)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.08866328746080399
    2. ''.' → logprob: -2.713663339614868
    3. ' '#' → logprob: -4.838663101196289
    4. ''' → logprob: -5.213663101196289
    5. ' '#'' → logprob: -5.463663101196289
    6. '"#' → logprob: -8.088663101196289
    7. '#' → logprob: -9.088663101196289
    8. '('#' → logprob: -9.838663101196289
    9. ''*' → logprob: -9.963663101196289
    10. ' '.'' → logprob: -10.088663101196289

Token 80: '':
' (ID: 7669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1204776018857956
    2. ' white' → logprob: -3.1204776763916016
    3. ' black' → logprob: -3.1204776763916016
    4. '<|end|>' → logprob: -4.495477676391602
    5. 'white' → logprob: -5.120477676391602
    6. 'black' → logprob: -5.745477676391602
    7. '        ' → logprob: -6.745477676391602
    8. '        
' → logprob: -6.870477676391602
    9. '   ' → logprob: -7.745477676391602
    10. '<|end|>' → logprob: -8.120477676391602

Token 82: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' (adapté à ' white') → logprob: -0.048362959176301956
    2. 'black' → logprob: -3.673362970352173
    3. '       ' → logprob: -4.673362731933594
    4. ' white' → logprob: -4.673362731933594
    5. ' black' → logprob: -7.173362731933594
    6. '
' → logprob: -7.548362731933594
    7. 'all' → logprob: -7.923362731933594
    8. '   ' → logprob: -8.048362731933594
    9. '```' → logprob: -8.298362731933594
    10. '        
' → logprob: -8.673362731933594

Token 83: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. 'c' → logprob: -15.875
    3. '_count' → logprob: -16.0
    4. 'counter' → logprob: -17.25
    5. 'cout' → logprob: -18.0
    6. ' count' → logprob: -18.25
    7. 'ount' → logprob: -18.5
    8. ' ' → logprob: -18.625
    9. 'co' → logprob: -18.875
    10. '-' → logprob: -18.875

Token 84: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.026653114706277847
    2. '-=' → logprob: -3.9016530513763428
    3. '-' → logprob: -5.151653289794922
    4. ' -' → logprob: -9.276653289794922
    5. ' +=' → logprob: -9.526653289794922
    6. ' =' → logprob: -10.526653289794922
    7. '=' → logprob: -10.651653289794922
    8. ' ' → logprob: -10.651653289794922
    9. '    ' → logprob: -11.026653289794922
    10. '   ' → logprob: -11.151653289794922

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011009939044015482
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.875109672546387
    4. '<|end|>' → logprob: -15.125109672546387
    5. '0' → logprob: -15.375109672546387
    6. '       ' → logprob: -15.625109672546387
    7. '  ' → logprob: -18.375110626220703
    8. '<|end|>' → logprob: -19.000110626220703
    9. '    ' → logprob: -19.125110626220703
    10. '```' → logprob: -19.125110626220703

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -15.875001907348633
    4. '0' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '       ' → logprob: -18.875001907348633
    7. '１' → logprob: -19.125001907348633
    8. '2' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. '```' → logprob: -20.125001907348633

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04297487810254097
    2. '<|end|>' → logprob: -3.4179749488830566
    3. 'elif' → logprob: -6.292974948883057
    4. '    
' → logprob: -6.417974948883057
    5. 'else' → logprob: -6.417974948883057
    6. '```' → logprob: -6.667974948883057
    7. '#' → logprob: -7.167974948883057
    8. '<|end|>' → logprob: -7.542974948883057
    9. '
' → logprob: -8.042974472045898
    10. ' else' → logprob: -8.417974472045898

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13549268245697021
    2. '<|end|>' → logprob: -2.2604928016662598
    3. 'else' → logprob: -5.13549280166626
    4. 'elif' → logprob: -5.76049280166626
    5. '
' → logprob: -5.76049280166626
    6. '<|end|>' → logprob: -6.01049280166626
    7. '```' → logprob: -6.13549280166626
    8. '    
' → logprob: -6.26049280166626
    9. '#' → logprob: -6.88549280166626
    10. ' else' → logprob: -7.13549280166626

Token 89: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42585960030555725
    2. 'elif' → logprob: -1.3008595705032349
    3. ' elif' → logprob: -3.5508596897125244
    4. '<|end|>' → logprob: -3.5508596897125244
    5. 'else' (adapté à ' else') → logprob: -5.300859451293945
    6. ' ' → logprob: -5.300859451293945
    7. '    ' → logprob: -6.050859451293945
    8. ' else' → logprob: -6.550859451293945
    9. 'if' → logprob: -7.050859451293945
    10. '<|end|>' → logprob: -7.550859451293945

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34257614612579346
    2. '       ' → logprob: -2.217576026916504
    3. '<|end|>' → logprob: -2.842576026916504
    4. '   ' → logprob: -3.217576026916504
    5. '+' → logprob: -3.842576026916504
    6. ':
' → logprob: -3.967576026916504
    7. '    ' → logprob: -4.092576026916504
    8. '    
' → logprob: -5.217576026916504
    9. '        
' → logprob: -5.342576026916504
    10. '        ' → logprob: -5.967576026916504

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09275113046169281
    2. '   ' → logprob: -2.7177510261535645
    3. 'black' → logprob: -4.2177510261535645
    4. ' black' → logprob: -5.0927510261535645
    5. '```' → logprob: -6.9677510261535645
    6. '<|end|>' → logprob: -8.467751502990723
    7. '        
' → logprob: -8.967751502990723
    8. ':black' → logprob: -9.592751502990723
    9. '
' → logprob: -9.717751502990723
    10. '    
' → logprob: -9.717751502990723

Token 92: ' black' (ID: 5960)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' (adapté à ' black') → logprob: -0.8885483741760254
    2. '       ' → logprob: -1.2635483741760254
    3. ' black' → logprob: -1.2635483741760254
    4. '   ' → logprob: -4.138548374176025
    5. '+' → logprob: -6.263548374176025
    6. ' ' → logprob: -6.263548374176025
    7. '```' → logprob: -6.388548374176025
    8. '           ' → logprob: -7.763548374176025
    9. ':black' → logprob: -7.888548374176025
    10. '        ' → logprob: -8.513547897338867

Token 93: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00020783171930816025
    2. '+' → logprob: -8.875207901000977
    3. '+=' → logprob: -10.750207901000977
    4. ' +=' → logprob: -10.875207901000977
    5. '_count' → logprob: -11.125207901000977
    6. '++' → logprob: -12.250207901000977
    7. ' count' → logprob: -12.875207901000977
    8. '<|end|>' → logprob: -13.125207901000977
    9. '	count' → logprob: -14.250207901000977
    10. ' +' → logprob: -14.500207901000977

Token 94: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006750543136149645
    2. '+=' → logprob: -5.006750583648682
    3. '+' → logprob: -11.381750106811523
    4. ' +' → logprob: -11.631750106811523
    5. ' ' → logprob: -11.881750106811523
    6. '    ' → logprob: -12.256750106811523
    7. '   ' → logprob: -13.381750106811523
    8. '  ' → logprob: -14.631750106811523
    9. ' =' → logprob: -14.756750106811523
    10. '<|end|>' → logprob: -14.881750106811523

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0336492694914341
    2. ' ' → logprob: -3.408649206161499
    3. '0' → logprob: -13.158649444580078
    4. '<|end|>' → logprob: -14.158649444580078
    5. '   ' → logprob: -14.533649444580078
    6. '```' → logprob: -15.783649444580078
    7. '2' → logprob: -17.096149444580078
    8. ' ' → logprob: -17.283649444580078
    9. ')' → logprob: -17.346149444580078
    10. '<|end|>' → logprob: -17.533649444580078

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006375004886649549
    2. ' ' → logprob: -7.375637531280518
    3. '0' → logprob: -11.50063705444336
    4. '<|end|>' → logprob: -14.87563705444336
    5. '   ' → logprob: -15.25063705444336
    6. '```' → logprob: -16.75063705444336
    7. '-' → logprob: -17.00063705444336
    8. '2' → logprob: -17.12563705444336
    9. '  ' → logprob: -17.75063705444336
    10. ')' → logprob: -17.93813705444336

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38315507769584656
    2. '   ' → logprob: -1.258155107498169
    3. ' 
' → logprob: -4.38315486907959
    4. ' i' → logprob: -4.50815486907959
    5. '    
' → logprob: -5.13315486907959
    6. ' if' → logprob: -6.50815486907959
    7. '  
' → logprob: -7.13315486907959
    8. 'i' → logprob: -7.50815486907959
    9. '```' → logprob: -7.50815486907959
    10. '   
' → logprob: -8.00815486907959

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11622623354196548
    2. ' i' → logprob: -2.6162261962890625
    3. 'i' → logprob: -3.8662261962890625
    4. ' if' → logprob: -5.2412261962890625
    5. '    
' → logprob: -5.4912261962890625
    6. ' 
' → logprob: -5.8662261962890625
    7. ' answer' → logprob: -6.7412261962890625
    8. '
' → logprob: -6.7412261962890625
    9. '```' → logprob: -8.241226196289062
    10. 'answer' → logprob: -8.866226196289062

Token 99: ' tmp' (ID: 8919)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7598636150360107
    2. 'answer' → logprob: -1.8848636150360107
    3. ' i' → logprob: -2.1348636150360107
    4. '   ' → logprob: -2.3848636150360107
    5. ' answer' → logprob: -2.7598636150360107
    6. ' if' → logprob: -2.8848636150360107
    7. 'if' → logprob: -3.0098636150360107
    8. ' ' → logprob: -6.75986385345459
    9. 'ans' → logprob: -9.50986385345459
    10. '
' → logprob: -9.50986385345459

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12444861978292465
    2. '=' → logprob: -2.499448537826538
    3. '_answer' → logprob: -3.499448537826538
    4. 'answer' → logprob: -5.624448776245117
    5. ' ' → logprob: -7.874448776245117
    6. '_max' → logprob: -8.249448776245117
    7. '_ans' → logprob: -8.999448776245117
    8. 'max' → logprob: -9.124448776245117
    9. '_' → logprob: -9.499448776245117
    10. ' answer' → logprob: -10.624448776245117

Token 101: ' black' (ID: 5960)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8193812966346741
    2. ' white' → logprob: -0.9443812966346741
    3. 'min' → logprob: -2.4443812370300293
    4. 'white' → logprob: -2.9443812370300293
    5. ' max' → logprob: -4.194381237030029
    6. ' black' → logprob: -4.694381237030029
    7. 'max' → logprob: -5.444381237030029
    8. 'black' → logprob: -6.819381237030029
    9. ' answer' → logprob: -7.319381237030029
    10. 'answer' → logprob: -7.819381237030029

Token 102: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. 'answer' → logprob: -16.375
    3. ' ' → logprob: -16.75
    4. ' count' → logprob: -17.375
    5. '_count' → logprob: -18.0
    6. '+' → logprob: -18.25
    7. 'c' → logprob: -18.375
    8. '<|end|>' → logprob: -18.625
    9. 'ount' → logprob: -18.75
    10. '<count' → logprob: -18.875

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014218121767044
    2. ' +' → logprob: -1.701421856880188
    3. ' ' → logprob: -12.576421737670898
    4. ' if' → logprob: -13.701421737670898
    5. 'if' → logprob: -14.201421737670898
    6. '+
' → logprob: -14.201421737670898
    7. ' ' → logprob: -14.576421737670898
    8. '-' → logprob: -14.951421737670898
    9. '+i' → logprob: -14.951421737670898
    10. ' plus' → logprob: -15.451421737670898

Token 104: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.07889342308044434
    2. ' white' → logprob: -2.5788934230804443
    3. ' ' → logprob: -13.578893661499023
    4. 'wh' → logprob: -13.953893661499023
    5. '   ' → logprob: -14.453893661499023
    6. ' whitespace' → logprob: -15.078893661499023
    7. '白' → logprob: -15.453893661499023
    8. ':white' → logprob: -16.453893661499023
    9. ' whites' → logprob: -16.578893661499023
    10. '_white' → logprob: -16.578893661499023

Token 105: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.981667537620524e-06
    2. '_count' → logprob: -13.625001907348633
    3. ' count' → logprob: -14.375001907348633
    4. ' ' → logprob: -16.500001907348633
    5. 'c' → logprob: -17.875001907348633
    6. 'counter' → logprob: -18.875001907348633
    7. 'ount' → logprob: -19.125001907348633
    8. '	count' → logprob: -19.125001907348633
    9. 'cout' → logprob: -19.250001907348633
    10. 'Count' → logprob: -19.625001907348633

Token 106: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0037959229666739702
    2. ' if' → logprob: -6.128796100616455
    3. '
' → logprob: -7.628796100616455
    4. '   ' → logprob: -7.753796100616455
    5. '\n' → logprob: -8.128795623779297
    6. ' 
' → logprob: -8.753795623779297
    7. '  
' → logprob: -9.503795623779297
    8. '<|end|>' → logprob: -9.878795623779297
    9. '    
' → logprob: -10.003795623779297
    10. 'if' → logprob: -10.503795623779297

Token 107: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12126142531633377
    2. ' if' → logprob: -2.3712613582611084
    3. ' 
' → logprob: -4.7462615966796875
    4. '\n' → logprob: -5.4962615966796875
    5. '   ' → logprob: -5.7462615966796875
    6. ' answer' → logprob: -6.4962615966796875
    7. '  
' → logprob: -7.2462615966796875
    8. '<|end|>' → logprob: -7.2462615966796875
    9. ' ' → logprob: -7.7462615966796875
    10. 'if' → logprob: -7.8712615966796875

Token 108: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7264953851699829
    2. ' if' → logprob: -0.7264953851699829
    3. 'if' (adapté à ' if') → logprob: -3.4764952659606934
    4. ' answer' → logprob: -6.601495265960693
    5. 'answer' → logprob: -7.601495265960693
    6. '
' → logprob: -11.726495742797852
    7. ' ' → logprob: -11.726495742797852
    8. ' i' → logprob: -12.601495742797852
    9. '	if' → logprob: -12.601495742797852
    10. 'i' → logprob: -14.601495742797852

Token 109: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.014824625104665756
    2. 'tmp' → logprob: -4.389824390411377
    3. ' answer' → logprob: -6.139824390411377
    4. 'answer' → logprob: -9.139824867248535
    5. ' ' → logprob: -10.139824867248535
    6. '	tmp' → logprob: -12.264824867248535
    7. '(tmp' → logprob: -13.014824867248535
    8. ' ans' → logprob: -13.639824867248535
    9. ' ' → logprob: -14.389824867248535
    10. '  ' → logprob: -14.764824867248535

Token 110: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.24885627627372742
    2. ' >' → logprob: -1.8738563060760498
    3. '<' → logprob: -2.99885630607605
    4. '>' → logprob: -4.123856067657471
    5. ' ' → logprob: -7.248856067657471
    6. ')' → logprob: -11.123856544494629
    7. ' <=' → logprob: -11.873856544494629
    8. '  ' → logprob: -12.373856544494629
    9. '```' → logprob: -12.748856544494629
    10. '   ' → logprob: -12.873856544494629

Token 111: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.3868713080883026
    2. 'answer' → logprob: -1.136871337890625
    3. '	answer' → logprob: -15.886871337890625
    4. '(answer' → logprob: -17.511871337890625
    5. 'Answer' → logprob: -17.636871337890625
    6. ' ' → logprob: -17.761871337890625
    7. 'ans' → logprob: -18.886871337890625
    8. '_answer' → logprob: -19.011871337890625
    9. '.answer' → logprob: -19.636871337890625
    10. 'ANSWER' → logprob: -20.136871337890625

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007625677157193422
    2. ':
' → logprob: -4.882625579833984
    3. '   ' → logprob: -11.632625579833984
    4. '<|end|>' → logprob: -12.882625579833984
    5. '):' → logprob: -13.007625579833984
    6. '       ' → logprob: -13.757625579833984
    7. '):
' → logprob: -13.882625579833984
    8. ':

' → logprob: -14.257625579833984
    9. ':return' → logprob: -14.382625579833984
    10. ' :' → logprob: -14.382625579833984

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02083650231361389
    2. '   ' → logprob: -4.395836353302002
    3. '
' → logprob: -5.395836353302002
    4. ' answer' → logprob: -5.895836353302002
    5. 'answer' → logprob: -8.02083683013916
    6. '    
' → logprob: -8.89583683013916
    7. '        
' → logprob: -9.02083683013916
    8. '<|end|>' → logprob: -9.14583683013916
    9. '	answer' → logprob: -9.14583683013916
    10. ' 
' → logprob: -9.77083683013916

Token 114: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.02641257271170616
    2. 'answer' (adapté à ' answer') → logprob: -3.6514124870300293
    3. '       ' → logprob: -9.776412963867188
    4. '	answer' → logprob: -10.026412963867188
    5. '_answer' → logprob: -13.026412963867188
    6. '(answer' → logprob: -13.151412963867188
    7. '   ' → logprob: -13.151412963867188
    8. ' 
' → logprob: -14.151412963867188
    9. 'Answer' → logprob: -14.151412963867188
    10. '<|end|>' → logprob: -14.276412963867188

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00010950337309623137
    2. '=' → logprob: -9.125109672546387
    3. ' +=' → logprob: -15.375109672546387
    4. ' ' → logprob: -15.750109672546387
    5. ' =)' → logprob: -16.37510871887207
    6. ' =
' → logprob: -18.00010871887207
    7. '<|end|>' → logprob: -18.37510871887207
    8. ' .=' → logprob: -18.37510871887207
    9. ' =
' → logprob: -18.50010871887207
    10. ' =",' → logprob: -18.50010871887207

Token 116: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.3868723213672638
    2. 'tmp' → logprob: -1.1368722915649414
    3. '(tmp' → logprob: -14.511872291564941
    4. '	tmp' → logprob: -14.761872291564941
    5. '/tmp' → logprob: -16.011873245239258
    6. '$tmp' → logprob: -16.011873245239258
    7. '[tmp' → logprob: -16.511873245239258
    8. 'temp' → logprob: -17.636873245239258
    9. ',tmp' → logprob: -17.761873245239258
    10. '_tmp' → logprob: -17.886873245239258

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00614848081022501
    2. '
' → logprob: -5.381148338317871
    3. '    
' → logprob: -6.881148338317871
    4. '<|end|>' → logprob: -8.256148338317871
    5. 'i' → logprob: -9.631148338317871
    6. ' i' → logprob: -9.881148338317871
    7. '  
' → logprob: -10.131148338317871
    8. '```' → logprob: -10.381148338317871
    9. ' 
' → logprob: -11.256148338317871
    10. '\n' → logprob: -11.256148338317871

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007640030235052109
    2. 'i' → logprob: -7.250763893127441
    3. ' i' → logprob: -10.000763893127441
    4. '	i' → logprob: -12.125763893127441
    5. '    
' → logprob: -13.250763893127441
    6. '<|end|>' → logprob: -14.625763893127441
    7. '  ' → logprob: -15.375763893127441
    8. '
' → logprob: -15.500763893127441
    9. '```' → logprob: -16.125764846801758
    10. '       ' → logprob: -16.125764846801758

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6366961598396301
    2. ' i' → logprob: -1.2616961002349854
    3. '\n' → logprob: -2.6366961002349854
    4. '   ' → logprob: -3.2616961002349854
    5. ' 
' → logprob: -3.2616961002349854
    6. '
' → logprob: -3.6366961002349854
    7. ' ' → logprob: -5.1366963386535645
    8. '    
' → logprob: -6.5116963386535645
    9. '  
' → logprob: -6.7616963386535645
    10. '<|end|>' → logprob: -6.7616963386535645

Token 120: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.33034494519233704
    2. ' +=' → logprob: -1.3303449153900146
    3. '+' → logprob: -4.080345153808594
    4. '=' → logprob: -11.330345153808594
    5. ' ' → logprob: -11.705345153808594
    6. '++' → logprob: -12.455345153808594
    7. '<|end|>' → logprob: -12.955345153808594
    8. '+='' → logprob: -13.080345153808594
    9. '+="' → logprob: -13.205345153808594
    10. '```' → logprob: -13.330345153808594

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929982289671898
    2. ' ' → logprob: -5.130929946899414
    3. '```' → logprob: -13.630929946899414
    4. '   ' → logprob: -15.880929946899414
    5. ' ' → logprob: -17.880929946899414
    6. '<|end|>' → logprob: -18.755929946899414
    7. '１' → logprob: -18.880929946899414
    8. '`' → logprob: -18.880929946899414
    9. '``' → logprob: -19.130929946899414
    10. '+' → logprob: -19.318429946899414

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.125
    4. '   ' → logprob: -18.125
    5. '１' → logprob: -19.0
    6. '2' → logprob: -19.375
    7. '`' → logprob: -20.0
    8. '``' → logprob: -20.625
    9. '  ' → logprob: -20.8125
    10. '۱' → logprob: -20.8125

Token 123: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006618033512495458
    2. '
' → logprob: -7.375661849975586
    3. '```' → logprob: -11.000661849975586
    4. ' print' → logprob: -11.250661849975586
    5. '\n' → logprob: -13.500661849975586
    6. ')' → logprob: -13.750661849975586
    7. '<|end|>' → logprob: -14.125661849975586
    8. ' 
' → logprob: -14.375661849975586
    9. '  
' → logprob: -15.250661849975586
    10. '\' → logprob: -15.375661849975586

Token 124: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.790129555156454e-05
    2. '
' → logprob: -10.125067710876465
    3. ' print' → logprob: -11.500067710876465
    4. '```' → logprob: -11.625067710876465
    5. ')' → logprob: -13.375067710876465
    6. '#' → logprob: -13.500067710876465
    7. 'answer' → logprob: -13.750067710876465
    8. '#print' → logprob: -14.000067710876465
    9. '<|end|>' → logprob: -14.125067710876465
    10. 'pr' → logprob: -14.125067710876465

Token 125: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.20176911354064941
    2. '(' → logprob: -1.7017691135406494
    3. '()' → logprob: -8.20176887512207
    4. '(ans' → logprob: -9.70176887512207
    5. 'answer' → logprob: -11.70176887512207
    6. '('' → logprob: -12.07676887512207
    7. ' (' → logprob: -13.07676887512207
    8. '("' → logprob: -13.32676887512207
    9. '(
' → logprob: -14.20176887512207
    10. '(end' → logprob: -14.82676887512207

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '()' → logprob: -16.125
    5. ')`' → logprob: -16.25
    6. '`)' → logprob: -16.75
    7. '')' → logprob: -16.875
    8. '))' → logprob: -17.125
    9. '#' → logprob: -17.875
    10. '```' → logprob: -18.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 124
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 49.19%
Précision adaptée (1ère position): 52.42%
Précision (top 10): 86.29%
================================================================================
