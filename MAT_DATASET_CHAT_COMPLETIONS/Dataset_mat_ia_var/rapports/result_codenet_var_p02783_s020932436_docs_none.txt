================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h, a = map(int, input().split())
if h % a == 0:
    print(h // a)
else:
    print(h // a + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' a' (ID: 261)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26884424686431885
    2. ',' → logprob: -1.5188442468643188
    3. ' =' → logprob: -4.518844127655029
    4. ')' → logprob: -6.268844127655029
    5. '+' → logprob: -6.518844127655029
    6. ' ' → logprob: -7.018844127655029
    7. '(' → logprob: -7.768844127655029
    8. '[' → logprob: -8.518844604492188
    9. '.' → logprob: -8.643844604492188
    10. ';' → logprob: -9.018844604492188

Token 4: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6578575968742371
    2. ' ' → logprob: -2.157857656478882
    3. '1' → logprob: -2.407857656478882
    4. '5' → logprob: -2.782857656478882
    5. '10' → logprob: -2.782857656478882
    6. 'map' → logprob: -3.782857656478882
    7. '[' → logprob: -4.032857418060303
    8. 'b' → logprob: -4.282857418060303
    9. 'np' → logprob: -4.657857418060303
    10. '[]' → logprob: -4.657857418060303

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007416493725031614
    2. '(lambda' → logprob: -5.757416725158691
    3. '```' → logprob: -6.382416725158691
    4. '(int' → logprob: -6.632416725158691
    5. '<|end|>' → logprob: -7.882416725158691
    6. '(str' → logprob: -8.632416725158691
    7. ')' → logprob: -9.007416725158691
    8. '[int' → logprob: -9.882416725158691
    9. '(user' → logprob: -10.132416725158691
    10. '(func' → logprob: -10.507416725158691

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.44965043663978577
    2. ')' → logprob: -1.0746504068374634
    3. '(' → logprob: -3.949650526046753
    4. 'input' → logprob: -7.074650287628174
    5. '(user' → logprob: -9.449650764465332
    6. ',input' → logprob: -9.949650764465332
    7. ')(' → logprob: -9.949650764465332
    8. ',' → logprob: -10.199650764465332
    9. '(raw' → logprob: -10.199650764465332
    10. '<|end|>' → logprob: -10.199650764465332

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048772215843200684
    2. ' input' → logprob: -3.0487723350524902
    3. '(input' → logprob: -8.923771858215332
    4. ')' → logprob: -9.923771858215332
    5. ',input' → logprob: -13.673771858215332
    6. '=input' → logprob: -14.798771858215332
    7. 'range' → logprob: -15.423771858215332
    8. ' )' → logprob: -15.423771858215332
    9. 'str' → logprob: -15.548771858215332
    10. '[input' → logprob: -15.923771858215332

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8482429385185242
    2. '()' → logprob: -1.098242998123169
    3. '(' → logprob: -2.098242998123169
    4. ')' → logprob: -2.848242998123169
    5. '('' → logprob: -3.973242998123169
    6. '(()' → logprob: -4.34824275970459
    7. '());' → logprob: -5.22324275970459
    8. '`()' → logprob: -5.59824275970459
    9. '(""))' → logprob: -5.84824275970459
    10. '().' → logprob: -5.84824275970459

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0013984529068693519
    2. 'strip' → logprob: -6.62639856338501
    3. 'rstrip' → logprob: -9.751398086547852
    4. 'read' → logprob: -11.876398086547852
    5. ')' → logprob: -12.501398086547852
    6. '(split' → logprob: -13.376398086547852
    7. ' split' → logprob: -13.376398086547852
    8. 'startswith' → logprob: -15.751398086547852
    9. 'replace' → logprob: -16.12639808654785
    10. 'spl' → logprob: -16.25139808654785

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046396661549806595
    2. '())' → logprob: -3.5463967323303223
    3. '))' → logprob: -4.171396732330322
    4. '()' → logprob: -7.796396732330322
    5. '`)' → logprob: -7.921396732330322
    6. '(' → logprob: -8.796396255493164
    7. '()))' → logprob: -9.546396255493164
    8. '')' → logprob: -10.421396255493164
    9. '('' → logprob: -11.171396255493164
    10. ')`' → logprob: -11.671396255493164

Token 11: 'if' (ID: 366)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4501805901527405
    2. 'r' → logprob: -2.3251805305480957
    3. 'd' → logprob: -2.7001805305480957
    4. 'x' → logprob: -2.7001805305480957
    5. ',' → logprob: -3.4501805305480957
    6. 'for' → logprob: -3.8251805305480957
    7. 'h' → logprob: -3.9501805305480957
    8. 'b' → logprob: -4.200180530548096
    9. 's' → logprob: -4.450180530548096
    10. 'c' → logprob: -4.700180530548096

Token 12: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.08226621150970459
    2. ' a' → logprob: -3.207266330718994
    3. 'h' → logprob: -3.582266330718994
    4. 'a' → logprob: -5.082266330718994
    5. ' ' → logprob: -5.457266330718994
    6. ' not' → logprob: -9.207265853881836
    7. '  ' → logprob: -10.332265853881836
    8. ' ' → logprob: -10.457265853881836
    9. ' (' → logprob: -11.332265853881836
    10. '(' → logprob: -11.832265853881836

Token 13: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14935347437858582
    2. '>' → logprob: -2.774353504180908
    3. ' >=' → logprob: -3.274353504180908
    4. ' <' → logprob: -3.899353504180908
    5. ' <=' → logprob: -5.149353504180908
    6. ' ==' → logprob: -5.649353504180908
    7. '<' → logprob: -5.774353504180908
    8. ' ' → logprob: -5.899353504180908
    9. '>=' → logprob: -6.649353504180908
    10. '==' → logprob: -7.774353504180908

Token 14: ' a' (ID: 261)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3176497519016266
    2. '12' → logprob: -1.5676497220993042
    3. ' ' → logprob: -3.1926498413085938
    4. '24' → logprob: -4.067649841308594
    5. 'a' → logprob: -6.192649841308594
    6. '60' → logprob: -6.317649841308594
    7. '6' → logprob: -7.567649841308594
    8. '3' → logprob: -7.567649841308594
    9. '4' → logprob: -8.317649841308594
    10. '360' → logprob: -9.442649841308594

Token 15: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5608935952186584
    2. ' !=' → logprob: -1.6858935356140137
    3. '==' → logprob: -1.8108935356140137
    4. '!=' → logprob: -3.1858935356140137
    5. ':' → logprob: -3.5608935356140137
    6. '=' → logprob: -5.435893535614014
    7. ' :' → logprob: -5.560893535614014
    8. '>' → logprob: -6.810893535614014
    9. ' =' → logprob: -6.935893535614014
    10. ' ' → logprob: -8.685894012451172

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '1' → logprob: -16.625911712646484
    4. 'h' → logprob: -19.000911712646484
    5. '   ' → logprob: -19.250911712646484
    6. '=' → logprob: -19.500911712646484
    7. '>' → logprob: -19.500911712646484
    8. '  ' → logprob: -19.625911712646484
    9. ':' → logprob: -20.000911712646484
    10. '==' → logprob: -20.313411712646484

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013284528395161033
    2. ' ' → logprob: -6.626328468322754
    3. '1' → logprob: -13.126328468322754
    4. 'h' → logprob: -15.251328468322754
    5. '  ' → logprob: -16.501327514648438
    6. ':' → logprob: -16.688827514648438
    7. '=' → logprob: -16.688827514648438
    8. '    ' → logprob: -17.438827514648438
    9. '   ' → logprob: -17.563827514648438
    10. '>' → logprob: -18.063827514648438

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.255023956531659e-05
    2. ':
' → logprob: -9.750072479248047
    3. ' :' → logprob: -11.375072479248047
    4. ':h' → logprob: -14.250072479248047
    5. ':return' → logprob: -14.500072479248047
    6. '):' → logprob: -14.875072479248047
    7. ':

' → logprob: -15.250072479248047
    8. ',' → logprob: -15.750072479248047
    9. ':
' → logprob: -15.750072479248047
    10. 'h' → logprob: -16.750072479248047

Token 19: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4891684055328369
    2. ' print' → logprob: -0.9891684055328369
    3. '   ' → logprob: -4.739168167114258
    4. ' h' → logprob: -5.364168167114258
    5. 'result' → logprob: -7.489168167114258
    6. ' result' → logprob: -8.364168167114258
    7. 'h' → logprob: -8.364168167114258
    8. ' ' → logprob: -9.739168167114258
    9. '\n' → logprob: -9.739168167114258
    10. 'answer' → logprob: -9.739168167114258

Token 20: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004255169536918402
    2. ' print' → logprob: -5.879255294799805
    3. 'h' → logprob: -7.254255294799805
    4. '   ' → logprob: -7.379255294799805
    5. ' h' → logprob: -9.629255294799805
    6. 'result' → logprob: -11.254255294799805
    7. '(h' → logprob: -11.629255294799805
    8. '```' → logprob: -12.629255294799805
    9. ' ' → logprob: -12.754255294799805
    10. '\' → logprob: -12.879255294799805

Token 21: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.4755796492099762
    2. '(' → logprob: -0.9755796194076538
    3. '((' → logprob: -7.100579738616943
    4. 'h' → logprob: -7.475579738616943
    5. '(int' → logprob: -10.475579261779785
    6. '(
' → logprob: -10.600579261779785
    7. ' (' → logprob: -11.100579261779785
    8. ' h' → logprob: -11.850579261779785
    9. 'int' → logprob: -12.225579261779785
    10. '(a' → logprob: -12.600579261779785

Token 22: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.044905807822942734
    2. ' //' → logprob: -3.1699059009552
    3. ')' → logprob: -6.294905662536621
    4. '/' → logprob: -10.919905662536621
    5. '#' → logprob: -11.669905662536621
    6. '   ' → logprob: -12.294905662536621
    7. ' )' → logprob: -12.419905662536621
    8. '/a' → logprob: -12.419905662536621
    9. ' ' → logprob: -12.544905662536621
    10. '`' → logprob: -12.794905662536621

Token 23: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0564331205387134e-05
    2. ' a' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.75001049041748
    4. ' ' → logprob: -16.500011444091797
    5. '  ' → logprob: -17.000011444091797
    6. 'а' → logprob: -19.750011444091797
    7. '    ' → logprob: -21.125011444091797
    8. '	a' → logprob: -21.125011444091797
    9. '_a' → logprob: -22.125011444091797
    10. ''a' → logprob: -23.250011444091797

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01648661121726036
    2. 'else' → logprob: -4.516486644744873
    3. ')
' → logprob: -5.266486644744873
    4. ' else' → logprob: -8.516486167907715
    5. '+' → logprob: -10.516486167907715
    6. '*' → logprob: -11.641486167907715
    7. ' )' → logprob: -11.766486167907715
    8. '+)' → logprob: -12.016486167907715
    9. 'elif' → logprob: -12.641486167907715
    10. '   ' → logprob: -13.641486167907715

Token 25: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0004362718027550727
    2. ' else' → logprob: -7.750436305999756
    3. '```' → logprob: -12.250435829162598
    4. 'elif' → logprob: -14.125435829162598
    5. '_else' → logprob: -17.500436782836914
    6. 'Else' → logprob: -17.625436782836914
    7. '``' → logprob: -18.375436782836914
    8. '	else' → logprob: -19.375436782836914
    9. '   ' → logprob: -19.875436782836914
    10. '}else' → logprob: -20.500436782836914

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017374205635860562
    2. ':
' → logprob: -6.376737594604492
    3. ' :' → logprob: -10.376737594604492
    4. '   ' → logprob: -13.376737594604492
    5. ' :
' → logprob: -13.626737594604492
    6. ':
' → logprob: -13.876737594604492
    7. ':

' → logprob: -16.001737594604492
    8. '：' → logprob: -16.501737594604492
    9. '```' → logprob: -16.876737594604492
    10. '    ' → logprob: -17.001737594604492

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06302214413881302
    2. 'print' → logprob: -3.6880221366882324
    3. ' print' → logprob: -3.8130221366882324
    4. ' h' → logprob: -5.313022136688232
    5. '1' → logprob: -5.688022136688232
    6. '    ' → logprob: -6.063022136688232
    7. '```' → logprob: -7.063022136688232
    8. ' ' → logprob: -7.688022136688232
    9. ' (' → logprob: -7.688022136688232
    10. '    
' → logprob: -7.688022136688232

Token 28: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25213858485221863
    2. ' print' → logprob: -1.502138614654541
    3. '   ' → logprob: -8.502138137817383
    4. '    ' → logprob: -12.502138137817383
    5. '(print' → logprob: -14.002138137817383
    6. ' ' → logprob: -14.502138137817383
    7. '  ' → logprob: -14.502138137817383
    8. '	print' → logprob: -15.377138137817383
    9. '(h' → logprob: -15.627138137817383
    10. ' h' → logprob: -15.627138137817383

Token 29: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.013323754072189331
    2. '(' → logprob: -4.638323783874512
    3. '((' → logprob: -5.638323783874512
    4. 'h' → logprob: -13.263323783874512
    5. ' (' → logprob: -14.263323783874512
    6. '(
' → logprob: -16.388322830200195
    7. '(((' → logprob: -17.138322830200195
    8. '()' → logprob: -17.638322830200195
    9. '(H' → logprob: -17.638322830200195
    10. '(s' → logprob: -17.888322830200195

Token 30: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16176410019397736
    2. ' //' → logprob: -1.911764144897461
    3. ')' → logprob: -6.661764144897461
    4. '   ' → logprob: -8.911764144897461
    5. ' ' → logprob: -9.536764144897461
    6. '/' → logprob: -11.661764144897461
    7. '`' → logprob: -11.911764144897461
    8. 'a' → logprob: -12.036764144897461
    9. '+' → logprob: -12.411764144897461
    10. ' ' → logprob: -12.536764144897461

Token 31: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015078396536409855
    2. ' a' → logprob: -6.501507759094238
    3. '   ' → logprob: -12.251507759094238
    4. ' ' → logprob: -14.751507759094238
    5. '  ' → logprob: -15.751507759094238
    6. '	a' → logprob: -16.626508712768555
    7. '    ' → logprob: -16.751508712768555
    8. 'а' → logprob: -17.126508712768555
    9. '_a' → logprob: -18.376508712768555
    10. ' ' → logprob: -19.376508712768555

Token 32: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16026301681995392
    2. ' +' → logprob: -1.9102630615234375
    3. ')' → logprob: -10.535263061523438
    4. ')+' → logprob: -11.660263061523438
    5. '   ' → logprob: -13.035263061523438
    6. '+)' → logprob: -15.160263061523438
    7. '1' → logprob: -15.410263061523438
    8. '+
' → logprob: -15.410263061523438
    9. ' plus' → logprob: -15.535263061523438
    10. '＋' → logprob: -16.160263061523438

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. ')' → logprob: -18.750019073486328
    5. '１' → logprob: -20.500019073486328
    6. '  ' → logprob: -20.875019073486328
    7. '۱' → logprob: -22.000019073486328
    8. '```' → logprob: -22.000019073486328
    9. ' ' → logprob: -22.500019073486328
    10. '+' → logprob: -22.625019073486328

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.125003814697266
    4. '  ' → logprob: -20.375003814697266
    5. '```' → logprob: -20.625003814697266
    6. '１' → logprob: -20.875003814697266
    7. ')' → logprob: -21.000003814697266
    8. '+' → logprob: -21.625003814697266
    9. '۱' → logprob: -21.625003814697266
    10. '১' → logprob: -22.125003814697266

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.375
    3. '))' → logprob: -17.0
    4. ' )' → logprob: -17.25
    5. '')' → logprob: -18.125
    6. '`)' → logprob: -18.625
    7. '()' → logprob: -18.875
    8. ')`' → logprob: -19.5
    9. '```' → logprob: -20.0
    10. '）' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 33
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 30.30%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 84.85%
================================================================================
