================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# ok, je fais quelques bizarretés de style ici...
m1, d1 = input().split()
m2, d2 = input().split()
m1 = int(m1) ; d1 = int(d1)
m2 = int(m2); d2 = int(d2) # conversion, un peu tard
# vérif si ce sont des mois différents (logique non?)
if m1==m2 :
    print(0) # même mois, donc zéro
else:
    print(1)  # ouais, mois diff donc 1
# j'ai pas vraiment utilisé d1 et d2, mais peut-être utiles plus tard?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' ok' (ID: 4763)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3228058815002441
    2. ' ' → logprob: -1.4478058815002441
    3. '```' → logprob: -1.4478058815002441
    4. '#' → logprob: -2.947805881500244
    5. '<|end|>' → logprob: -3.072805881500244
    6. ' #' → logprob: -3.447805881500244
    7. '`' → logprob: -3.822805881500244
    8. ' let's' → logprob: -3.947805881500244
    9. ',' → logprob: -4.322805881500244
    10. ' ```' → logprob: -4.697805881500244

Token 4: ' fais' (ID: 24376)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.552048921585083
    2. ' ' → logprob: -2.552048921585083
    3. ' vais' → logprob: -2.552048921585083
    4. '_' → logprob: -2.677048921585083
    5. ' veux' → logprob: -3.427048921585083
    6. 'n' → logprob: -3.552048921585083
    7. 'v' → logprob: -3.552048921585083
    8. 'st' → logprob: -4.302048683166504
    9. ' n' → logprob: -4.427048683166504
    10. 't' → logprob: -4.427048683166504

Token 5: ' quelques' (ID: 17687)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05418556183576584
    2. '_' → logprob: -3.179185628890991
    3. '=' → logprob: -5.804185390472412
    4. ' =' → logprob: -6.054185390472412
    5. ':' → logprob: -6.554185390472412
    6. 'r' → logprob: -6.804185390472412
    7. '```' → logprob: -7.179185390472412
    8. ' ' → logprob: -7.804185390472412
    9. '.' → logprob: -8.17918586730957
    10. ',' → logprob: -8.30418586730957

Token 6: ' b' (ID: 287)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.8659194707870483
    2. ' tests' → logprob: -1.3659194707870483
    3. 'mod' → logprob: -2.490919589996338
    4. ' essais' → logprob: -2.615919589996338
    5. ' ' → logprob: -3.490919589996338
    6. 'v' → logprob: -3.865919589996338
    7. '   ' → logprob: -4.115919589996338
    8. 'ess' → logprob: -4.365919589996338
    9. '```' → logprob: -4.365919589996338
    10. ' recherches' → logprob: -4.865919589996338

Token 7: 'izar' (ID: 6552)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4120984673500061
    2. 'ou' → logprob: -2.6620984077453613
    3. 'l' → logprob: -3.0370984077453613
    4. '```' → logprob: -3.2870984077453613
    5. 'o' → logprob: -3.6620984077453613
    6. 'ases' → logprob: -4.162098407745361
    7. 'i' → logprob: -4.162098407745361
    8. 'a' → logprob: -4.287098407745361
    9. 'ack' → logprob: -4.537098407745361
    10. 'li' → logprob: -4.912098407745361

Token 8: 'ret' (ID: 3431)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.07647392153739929
    2. 'e' → logprob: -2.8264739513397217
    3. 'et' → logprob: -5.701473712921143
    4. 'etés' → logprob: -5.951473712921143
    5. '```' → logprob: -6.826473712921143
    6. 'esses' → logprob: -7.201473712921143
    7. '\' → logprob: -7.201473712921143
    8. 't' → logprob: -7.326473712921143
    9. 'ez' → logprob: -7.451473712921143
    10. 'ess' → logprob: -7.451473712921143

Token 9: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10168386250734329
    2. 'es' → logprob: -2.3516838550567627
    3. 'é' → logprob: -6.851684093475342
    4. '```' → logprob: -7.851684093475342
    5. 'e' → logprob: -11.976683616638184
    6. '﻿' → logprob: -12.101683616638184
    7. 'ès' → logprob: -12.601683616638184
    8. 'ées' → logprob: -12.851683616638184
    9. 'ies' → logprob: -13.226683616638184
    10. '#' → logprob: -13.601683616638184

Token 10: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1057181358337402
    2. '.' → logprob: -1.4807181358337402
    3. '#' → logprob: -1.6057181358337402
    4. '\n' → logprob: -2.4807181358337402
    5. '\' → logprob: -3.2307181358337402
    6. '```' → logprob: -3.3557181358337402
    7. '`' → logprob: -3.8557181358337402
    8. '!' → logprob: -4.60571813583374
    9. ' ' → logprob: -4.73071813583374
    10. '_' → logprob: -5.23071813583374

Token 11: ' style' (ID: 2713)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.1559174060821533
    2. '#' → logprob: -1.4059174060821533
    3. 's' → logprob: -3.1559174060821533
    4. '```' → logprob: -3.1559174060821533
    5. ' #' → logprob: -3.4059174060821533
    6. 'f' → logprob: -3.5309174060821533
    7. 'variable' → logprob: -3.5309174060821533
    8. ' code' → logprob: -3.9059174060821533
    9. 'indent' → logprob: -4.280917167663574
    10. 'd' → logprob: -4.280917167663574

Token 12: ' ici' (ID: 27994)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3487883806228638
    2. '\n' → logprob: -1.3487883806228638
    3. '\' → logprob: -1.5987883806228638
    4. ' ' → logprob: -2.098788261413574
    5. '```' → logprob: -2.598788261413574
    6. '`' → logprob: -3.723788261413574
    7. '.' → logprob: -4.473788261413574
    8. ',' → logprob: -4.848788261413574
    9. ''' → logprob: -5.098788261413574
    10. '  
' → logprob: -5.223788261413574

Token 13: '...
' (ID: 4908)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7903432250022888
    2. '\n' → logprob: -1.4153432846069336
    3. '#' → logprob: -2.4153432846069336
    4. '.' → logprob: -2.9153432846069336
    5. '\' → logprob: -2.9153432846069336
    6. '```' → logprob: -3.4153432846069336
    7. ',' → logprob: -3.9153432846069336
    8. ' ' → logprob: -4.415343284606934
    9. '`' → logprob: -5.290343284606934
    10. '...' → logprob: -5.290343284606934

Token 14: 'm' (ID: 76)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.120888352394104
    2. ' ' → logprob: -1.495888352394104
    3. '\' → logprob: -2.1208882331848145
    4. '#' → logprob: -2.1208882331848145
    5. '\n' → logprob: -2.2458882331848145
    6. '`' → logprob: -2.9958882331848145
    7. ''' → logprob: -3.8708882331848145
    8. ',' → logprob: -5.2458882331848145
    9. '.' → logprob: -5.3708882331848145
    10. '``' → logprob: -5.6208882331848145

Token 15: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4113876223564148
    2. 'e' → logprob: -1.4113876819610596
    3. 'o' → logprob: -3.1613876819610596
    4. '#' → logprob: -4.0363874435424805
    5. 'i' → logprob: -4.5363874435424805
    6. 'y' → logprob: -4.6613874435424805
    7. 'on' → logprob: -6.0363874435424805
    8. ' ' → logprob: -6.2863874435424805
    9. 'é' → logprob: -6.2863874435424805
    10. '_' → logprob: -6.9113874435424805

Token 16: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4023846387863159
    2. ' =' → logprob: -1.902384638786316
    3. '=' → logprob: -2.4023847579956055
    4. ',' → logprob: -3.0273847579956055
    5. '_' → logprob: -4.7773847579956055
    6. '[' → logprob: -5.1523847579956055
    7. 'a' → logprob: -5.5273847579956055
    8. 'e' → logprob: -5.6523847579956055
    9. 'o' → logprob: -5.6523847579956055
    10. ')' → logprob: -6.4023847579956055

Token 17: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.18001678586006165
    2. 'm' → logprob: -1.8050167560577393
    3. ' ' → logprob: -8.55501651763916
    4. '=' → logprob: -11.05501651763916
    5. '_' → logprob: -11.18001651763916
    6. ' =' → logprob: -11.55501651763916
    7. '_m' → logprob: -11.68001651763916
    8. '=m' → logprob: -12.99251651763916
    9. ' _' → logprob: -13.05501651763916
    10. ' n' → logprob: -13.30501651763916

Token 18: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42187923192977905
    2. '=' → logprob: -2.046879291534424
    3. '1' → logprob: -2.921879291534424
    4. ' =' → logprob: -2.921879291534424
    5. 'e' → logprob: -3.171879291534424
    6. 'm' → logprob: -4.046879291534424
    7. 'f' → logprob: -5.171879291534424
    8. 'i' → logprob: -5.296879291534424
    9. 'a' → logprob: -5.296879291534424
    10. ' ' → logprob: -5.671879291534424

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1802227646112442
    2. '=' → logprob: -1.805222749710083
    3. ',' → logprob: -8.055222511291504
    4. ')' → logprob: -9.305222511291504
    5. ' ' → logprob: -11.430222511291504
    6. '_' → logprob: -11.555222511291504
    7. '.' → logprob: -11.805222511291504
    8. ' ,' → logprob: -12.305222511291504
    9. 's' → logprob: -12.805222511291504
    10. '=np' → logprob: -13.242722511291504

Token 20: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5248174667358398
    2. '0' → logprob: -1.8998174667358398
    3. ' ' → logprob: -1.8998174667358398
    4. '10' → logprob: -2.52481746673584
    5. '5' → logprob: -2.89981746673584
    6. 'input' → logprob: -2.89981746673584
    7. '[' → logprob: -3.64981746673584
    8. 'map' → logprob: -3.89981746673584
    9. ' input' → logprob: -3.89981746673584
    10. '2' → logprob: -4.02481746673584

Token 21: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009728021104820073
    2. '()' → logprob: -7.375972747802734
    3. '('' → logprob: -8.500972747802734
    4. '().' → logprob: -9.875972747802734
    5. '("("' → logprob: -10.500972747802734
    6. '("' → logprob: -10.625972747802734
    7. '(
' → logprob: -11.250972747802734
    8. '(

' → logprob: -11.625972747802734
    9. '("""' → logprob: -12.750972747802734
    10. '("")' → logprob: -13.000972747802734

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004095143172889948
    2. 'strip' → logprob: -5.504095077514648
    3. 'replace' → logprob: -11.504095077514648
    4. 'rstrip' → logprob: -12.129095077514648
    5. 'spl' → logprob: -14.379095077514648
    6. 'rs' → logprob: -14.754095077514648
    7. ' split' → logprob: -15.254095077514648
    8. 'sp' → logprob: -16.87909507751465
    9. 's' → logprob: -17.37909507751465
    10. 'lower' → logprob: -18.37909507751465

Token 23: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.28269752860069275
    2. '(' → logprob: -1.6576975584030151
    3. '("("' → logprob: -2.9076974391937256
    4. '()' → logprob: -7.157697677612305
    5. '("' → logprob: -9.032697677612305
    6. ''' → logprob: -9.532697677612305
    7. '('.')' → logprob: -10.157697677612305
    8. '(
' → logprob: -11.532697677612305
    9. '(

' → logprob: -11.657697677612305
    10. '(',' → logprob: -12.157697677612305

Token 24: 'm' (ID: 76)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1340135335922241
    2. '.' → logprob: -2.0090136528015137
    3. ' ' → logprob: -2.1340136528015137
    4. 'm' → logprob: -2.6340136528015137
    5. ')' → logprob: -3.0090136528015137
    6. '=' → logprob: -3.0090136528015137
    7. '#' → logprob: -3.6340136528015137
    8. '.strip' → logprob: -3.8840136528015137
    9. '```' → logprob: -3.8840136528015137
    10. ' =' → logprob: -4.009013652801514

Token 25: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017529279284644872
    2. '2' → logprob: -8.750175476074219
    3. '0' → logprob: -12.125175476074219
    4. ',' → logprob: -13.000175476074219
    5. '.' → logprob: -13.750175476074219
    6. 'int' → logprob: -13.875175476074219
    7. ')' → logprob: -14.125175476074219
    8. '<int' → logprob: -14.562675476074219
    9. ' ' → logprob: -14.625175476074219
    10. '```' → logprob: -14.687675476074219

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019454145804047585
    2. ' ,' → logprob: -6.251945495605469
    3. ',d' → logprob: -11.376945495605469
    4. ' ' → logprob: -13.626945495605469
    5. ',m' → logprob: -13.626945495605469
    6. ',
' → logprob: -13.876945495605469
    7. '‌,' → logprob: -15.376945495605469
    8. '<|end|>' → logprob: -15.751945495605469
    9. ')' → logprob: -15.939445495605469
    10. ',

' → logprob: -16.00194549560547

Token 27: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.260292649269104
    2. 'd' → logprob: -1.510292649269104
    3. ' ' → logprob: -4.8852925300598145
    4. ' input' → logprob: -8.010293006896973
    5. 'input' → logprob: -8.510293006896973
    6. ' ' → logprob: -9.385293006896973
    7. '_d' → logprob: -9.635293006896973
    8. '<|end|>' → logprob: -10.135293006896973
    9. 'space' → logprob: -11.760293006896973
    10. 's' → logprob: -12.010293006896973

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02061067335307598
    2. '1' → logprob: -4.145610809326172
    3. ',' → logprob: -5.895610809326172
    4. '=' → logprob: -7.520610809326172
    5. ' =' → logprob: -7.770610809326172
    6. '_' → logprob: -8.020610809326172
    7. '.' → logprob: -8.145610809326172
    8. ' ' → logprob: -9.520610809326172
    9. ')' → logprob: -10.270610809326172
    10. '```' → logprob: -10.645610809326172

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22550013661384583
    2. '=' → logprob: -1.6005001068115234
    3. ',' → logprob: -9.475500106811523
    4. ' ' → logprob: -12.225500106811523
    5. ')' → logprob: -13.225500106811523
    6. ' ,' → logprob: -13.850500106811523
    7. '=input' → logprob: -14.100500106811523
    8. '<|end|>' → logprob: -14.100500106811523
    9. ' =
' → logprob: -15.225500106811523
    10. '.' → logprob: -15.475500106811523

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16022585332393646
    2. 'input' → logprob: -1.9102258682250977
    3. '=input' → logprob: -14.910225868225098
    4. '(input' → logprob: -15.035225868225098
    5. '<input' → logprob: -15.285225868225098
    6. ' ' → logprob: -15.410225868225098
    7. '	input' → logprob: -15.660225868225098
    8. 'int' → logprob: -16.28522491455078
    9. '_input' → logprob: -16.41022491455078
    10. '[input' → logprob: -16.41022491455078

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0297942366451025
    2. '()' → logprob: -3.529794216156006
    3. '(' → logprob: -10.279794692993164
    4. '().'' → logprob: -12.654794692993164
    5. '().__' → logprob: -13.779794692993164
    6. '.' → logprob: -13.779794692993164
    7. ' ().' → logprob: -13.904794692993164
    8. '()

' → logprob: -14.904794692993164
    9. '()
' → logprob: -14.904794692993164
    10. '()].' → logprob: -15.154794692993164

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.253090865968261e-06
    2. 'strip' → logprob: -12.250009536743164
    3. ' split' → logprob: -12.375009536743164
    4. 'spl' → logprob: -15.500009536743164
    5. 'rstrip' → logprob: -16.750009536743164
    6. 'plit' → logprob: -17.750009536743164
    7. '_split' → logprob: -17.750009536743164
    8. '(split' → logprob: -18.000009536743164
    9. '.split' → logprob: -18.500009536743164
    10. 's' → logprob: -19.000009536743164

Token 33: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03386560082435608
    2. '(' → logprob: -3.4088656902313232
    3. '()
' → logprob: -9.283865928649902
    4. '()

' → logprob: -9.908865928649902
    5. '(
' → logprob: -10.533865928649902
    6. '(

' → logprob: -11.283865928649902
    7. '`()' → logprob: -11.783865928649902
    8. '()`' → logprob: -11.908865928649902
    9. '()>' → logprob: -12.658865928649902
    10. '```' → logprob: -12.783865928649902

Token 34: 'm' (ID: 76)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6086689829826355
    2. 'm' → logprob: -1.2336690425872803
    3. 'y' → logprob: -3.1086690425872803
    4. '#' → logprob: -3.2336690425872803
    5. 'n' → logprob: -4.108668804168701
    6. '
' → logprob: -4.358668804168701
    7. ' if' → logprob: -4.358668804168701
    8. 'a' → logprob: -4.733668804168701
    9. ' 
' → logprob: -5.608668804168701
    10. 'd' → logprob: -5.733668804168701

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024423585273325443
    2. '2' → logprob: -6.752442359924316
    3. '3' → logprob: -7.002442359924316
    4. ',' → logprob: -8.502442359924316
    5. 's' → logprob: -10.502442359924316
    6. 'd' → logprob: -10.627442359924316
    7. '.' → logprob: -11.127442359924316
    8. ' ' → logprob: -11.127442359924316
    9. ' =' → logprob: -11.752442359924316
    10. '<|end|>' → logprob: -11.877442359924316

Token 36: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7005777955055237
    2. '<|end|>' → logprob: -1.200577735900879
    3. ' ' → logprob: -1.950577735900879
    4. ')' → logprob: -4.075577735900879
    5. '+' → logprob: -4.700577735900879
    6. ' ,' → logprob: -5.075577735900879
    7. '=' → logprob: -5.200577735900879
    8. '.' → logprob: -5.325577735900879
    9. '==' → logprob: -5.700577735900879
    10. '>' → logprob: -5.825577735900879

Token 37: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008622966706752777
    2. ' int' → logprob: -4.758623123168945
    3. '	int' → logprob: -13.258623123168945
    4. 'float' → logprob: -13.758623123168945
    5. 'str' → logprob: -13.758623123168945
    6. ' ' → logprob: -13.883623123168945
    7. '(int' → logprob: -13.883623123168945
    8. '[int' → logprob: -14.133623123168945
    9. 'in' → logprob: -14.633623123168945
    10. '1' → logprob: -15.383623123168945

Token 38: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02074730396270752
    2. '(m' → logprob: -3.895747184753418
    3. '('' → logprob: -9.895747184753418
    4. '(
' → logprob: -10.145747184753418
    5. '()' → logprob: -10.395747184753418
    6. '<|end|>' → logprob: -10.520747184753418
    7. '(

' → logprob: -10.770747184753418
    8. '("("' → logprob: -11.520747184753418
    9. ' ' → logprob: -12.770747184753418
    10. '("""' → logprob: -12.770747184753418

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -17.25
    3. '2' → logprob: -18.75
    4. ' ' → logprob: -18.75
    5. '১' → logprob: -19.5
    6. '１' → logprob: -20.1875
    7. '۱' → logprob: -20.5625
    8. '```' → logprob: -20.5625
    9. '१' → logprob: -20.625
    10. ',' → logprob: -21.0625

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006612073048017919
    2. ' )' → logprob: -7.625661373138428
    3. '<|end|>' → logprob: -9.37566089630127
    4. ')
' → logprob: -9.75066089630127
    5. ',' → logprob: -11.50066089630127
    6. '#' → logprob: -12.12566089630127
    7. ')#' → logprob: -12.50066089630127
    8. ' ' → logprob: -13.12566089630127
    9. '<|end|>' → logprob: -13.25066089630127
    10. ')

' → logprob: -13.62566089630127

Token 41: ' ;' (ID: 4605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4748854637145996
    2. ' d' → logprob: -0.9748854637145996
    3. 'int' → logprob: -7.7248854637146
    4. ' int' → logprob: -8.599885940551758
    5. 'm' → logprob: -9.474885940551758
    6. ' m' → logprob: -9.974885940551758
    7. ' ' → logprob: -10.224885940551758
    8. '<|end|>' → logprob: -11.474885940551758
    9. ' 
' → logprob: -11.974885940551758
    10. ' ' → logprob: -13.724885940551758

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '2' → logprob: -13.750001907348633
    3. ' ' → logprob: -16.250001907348633
    4. '=' → logprob: -16.375001907348633
    5. '_' → logprob: -16.625001907348633
    6. 'd' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '' → logprob: -17.250001907348633
    9. '১' → logprob: -17.812501907348633
    10. ' =' → logprob: -18.000001907348633

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16208802163600922
    2. ' =' → logprob: -1.9120880365371704
    3. '=int' → logprob: -6.287087917327881
    4. 'int' → logprob: -13.662088394165039
    5. '<int' → logprob: -15.787088394165039
    6. ' ' → logprob: -15.912088394165039
    7. '<|end|>' → logprob: -16.41208839416504
    8. ',' → logprob: -16.66208839416504
    9. ')' → logprob: -16.66208839416504
    10. '+=' → logprob: -16.78708839416504

Token 45: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061970602720975876
    2. ' int' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.936970710754395
    4. '=int' → logprob: -14.186970710754395
    5. '<int' → logprob: -14.811970710754395
    6. ' ' → logprob: -14.936970710754395
    7. '	int' → logprob: -15.436970710754395
    8. '(int' → logprob: -15.436970710754395
    9. '[int' → logprob: -15.436970710754395
    10. ':int' → logprob: -16.186969757080078

Token 46: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07890895009040833
    2. '(' → logprob: -2.578908920288086
    3. ' (' → logprob: -10.953908920288086
    4. ')(' → logprob: -14.453908920288086
    5. ')' → logprob: -15.203908920288086
    6. '(
' → logprob: -15.328908920288086
    7. '((' → logprob: -15.703908920288086
    8. '(

' → logprob: -16.203908920288086
    9. '()' → logprob: -16.328908920288086
    10. ' ' → logprob: -16.828908920288086

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.782141569303349e-05
    2. ')' → logprob: -9.25009822845459
    3. ' ' → logprob: -14.50009822845459
    4. '_' → logprob: -15.25009822845459
    5. ' )' → logprob: -15.50009822845459
    6. ')d' → logprob: -15.50009822845459
    7. '１' → logprob: -16.750097274780273
    8. '۱' → logprob: -16.750097274780273
    9. 'd' → logprob: -17.375097274780273
    10. '2' → logprob: -17.437597274780273

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.25000286102295
    4. '#' → logprob: -17.250001907348633
    5. ')

' → logprob: -17.750001907348633
    6. '))' → logprob: -18.125001907348633
    7. '')' → logprob: -18.375001907348633
    8. '}' → logprob: -18.625001907348633
    9. '),' → logprob: -18.625001907348633
    10. ')`' → logprob: -18.750001907348633

Token 49: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007441143970936537
    2. ' m' → logprob: -8.250743865966797
    3. '<|end|>' → logprob: -8.375743865966797
    4. '
' → logprob: -9.125743865966797
    5. ';' → logprob: -10.125743865966797
    6. ';m' → logprob: -10.750743865966797
    7. '<|end|>' → logprob: -11.125743865966797
    8. '#' → logprob: -11.125743865966797
    9. '  
' → logprob: -11.500743865966797
    10. ' 
' → logprob: -11.750743865966797

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. '1' → logprob: -11.125015258789062
    3. '۲' → logprob: -18.500015258789062
    4. '_' → logprob: -18.625015258789062
    5. '₂' → logprob: -18.750015258789062
    6. '２' → logprob: -18.875015258789062
    7. ' ' → logprob: -19.000015258789062
    8. '२' → logprob: -19.187515258789062
    9. '3' → logprob: -19.312515258789062
    10. '```' → logprob: -19.312515258789062

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01968991942703724
    2. '=' → logprob: -4.019690036773682
    3. '<|end|>' → logprob: -6.769690036773682
    4. ' ' → logprob: -7.894690036773682
    5. ' =)' → logprob: -12.394689559936523
    6. '<|end|>' → logprob: -12.894689559936523
    7. ')' → logprob: -12.894689559936523
    8. 'space' → logprob: -13.519689559936523
    9. '_' → logprob: -13.769689559936523
    10. '=int' → logprob: -13.894689559936523

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011054190807044506
    2. 'int' → logprob: -4.511054039001465
    3. '=int' → logprob: -12.636054039001465
    4. ' ' → logprob: -13.136054039001465
    5. '<int' → logprob: -14.761054039001465
    6. ' ' → logprob: -14.886054039001465
    7. '(int' → logprob: -15.761054039001465
    8. '[int' → logprob: -16.01105499267578
    9. ':int' → logprob: -17.63605499267578
    10. '	int' → logprob: -17.88605499267578

Token 53: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931562423706055
    2. '(m' → logprob: -0.6931562423706055
    3. '("("' → logprob: -12.818156242370605
    4. '('' → logprob: -13.693156242370605
    5. '(
' → logprob: -13.693156242370605
    6. ' (' → logprob: -14.068156242370605
    7. '(

' → logprob: -14.068156242370605
    8. '(mc' → logprob: -14.943156242370605
    9. 'm' → logprob: -15.318156242370605
    10. '()' → logprob: -15.318156242370605

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'm' → logprob: -16.875001907348633
    4. ')' → logprob: -17.000001907348633
    5. '２' → logprob: -18.875001907348633
    6. '۲' → logprob: -19.250001907348633
    7. '₂' → logprob: -19.250001907348633
    8. '```' → logprob: -19.750001907348633
    9. ' m' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.375001907348633

Token 55: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ' )' → logprob: -11.125015258789062
    3. ')
' → logprob: -14.000015258789062
    4. ')

' → logprob: -16.875015258789062
    5. ' ' → logprob: -17.750015258789062
    6. '),' → logprob: -18.125015258789062
    7. '')' → logprob: -18.125015258789062
    8. '`)' → logprob: -18.750015258789062
    9. ')`' → logprob: -19.000015258789062
    10. ')#' → logprob: -19.375015258789062

Token 56: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5137236714363098
    2. ' d' → logprob: -1.263723611831665
    3. 'd' → logprob: -2.263723611831665
    4. '<|end|>' → logprob: -4.388723850250244
    5. ' ' → logprob: -7.013723850250244
    6. ''' → logprob: -7.013723850250244
    7. '`' → logprob: -8.888723373413086
    8. ' ,' → logprob: -9.388723373413086
    9. ' 
' → logprob: -9.388723373413086
    10. 's' → logprob: -9.513723373413086

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.491498531133402e-06
    2. '1' → logprob: -11.750009536743164
    3. '<|end|>' → logprob: -14.625009536743164
    4. ' ' → logprob: -14.750009536743164
    5. '  ' → logprob: -15.750009536743164
    6. '₂' → logprob: -15.875009536743164
    7. '۲' → logprob: -16.500009536743164
    8. '```' → logprob: -16.625009536743164
    9. '<|end|>' → logprob: -16.625009536743164
    10. '(' → logprob: -17.125009536743164

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285286396741867
    2. '=' → logprob: -2.2378528118133545
    3. '=int' → logprob: -10.612853050231934
    4. '<|end|>' → logprob: -12.987853050231934
    5. ')' → logprob: -13.612853050231934
    6. 'int' → logprob: -14.612853050231934
    7. ' ' → logprob: -14.737853050231934
    8. ' =
' → logprob: -15.112853050231934
    9. ' ==' → logprob: -15.362853050231934
    10. ' +=' → logprob: -15.487853050231934

Token 59: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12695194780826569
    2. ' int' → logprob: -2.1269519329071045
    3. '<int' → logprob: -11.376952171325684
    4. '(int' → logprob: -12.376952171325684
    5. '=int' → logprob: -12.751952171325684
    6. '[int' → logprob: -13.001952171325684
    7. '<|end|>' → logprob: -13.876952171325684
    8. ' ' → logprob: -14.001952171325684
    9. ':int' → logprob: -14.751952171325684
    10. 'd' → logprob: -15.751952171325684

Token 60: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2521490454673767
    2. '(' → logprob: -1.5021491050720215
    3. '_' → logprob: -8.752148628234863
    4. '_d' → logprob: -10.377148628234863
    5. '(
' → logprob: -11.627148628234863
    6. ' (' → logprob: -12.127148628234863
    7. '(

' → logprob: -12.877148628234863
    8. '_(' → logprob: -13.002148628234863
    9. 'd' → logprob: -13.127148628234863
    10. ')' → logprob: -13.127148628234863

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.060365608893335e-05
    2. ')' → logprob: -10.375041007995605
    3. ' ' → logprob: -12.375041007995605
    4. '1' → logprob: -12.500041007995605
    5. ' )' → logprob: -14.125041007995605
    6. '```' → logprob: -15.875041007995605
    7. '۲' → logprob: -16.62504005432129
    8. '₂' → logprob: -16.75004005432129
    9. '(' → logprob: -17.12504005432129
    10. '())' → logprob: -17.37504005432129

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '<|end|>' → logprob: -16.250001907348633
    5. '')' → logprob: -16.875001907348633
    6. '))' → logprob: -17.250001907348633
    7. ')

' → logprob: -17.625001907348633
    8. '#' → logprob: -17.875001907348633
    9. '),' → logprob: -18.000001907348633
    10. ')#' → logprob: -18.125001907348633

Token 63: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5333966612815857
    2. 'if' → logprob: -1.2833967208862305
    3. '#' → logprob: -2.4083967208862305
    4. 'i' → logprob: -4.6583967208862305
    5. '' → logprob: -4.7833967208862305
    6. ' if' → logprob: -4.7833967208862305
    7. ' 
' → logprob: -5.5333967208862305
    8. '\n' → logprob: -5.9083967208862305
    9. '\' → logprob: -6.1583967208862305
    10. ',' → logprob: -6.4083967208862305

Token 64: ' conversion' (ID: 22165)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.667820155620575
    2. '#' → logprob: -1.2928202152252197
    3. '
' → logprob: -2.9178202152252197
    4. ' if' → logprob: -3.2928202152252197
    5. ' ' → logprob: -3.4178202152252197
    6. ' 
' → logprob: -3.6678202152252197
    7. ',' → logprob: -4.542819976806641
    8. 'i' → logprob: -4.667819976806641
    9. 'def' → logprob: -4.667819976806641
    10. '' → logprob: -5.167819976806641

Token 65: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2964324951171875
    2. 'if' → logprob: -1.4214324951171875
    3. '
' → logprob: -1.5464324951171875
    4. ' ' → logprob: -2.7964324951171875
    5. ' 
' → logprob: -2.9214324951171875
    6. 'i' → logprob: -3.4214324951171875
    7. ',' → logprob: -4.0464324951171875
    8. ' if' → logprob: -4.0464324951171875
    9. '' → logprob: -4.1714324951171875
    10. 'n' → logprob: -4.5464324951171875

Token 66: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47405102849006653
    2. ' if' → logprob: -1.8490509986877441
    3. ' #' → logprob: -2.849050998687744
    4. '#' → logprob: -3.599050998687744
    5. 'def' → logprob: -3.599050998687744
    6. 'if' → logprob: -3.974050998687744
    7. ' def' → logprob: -4.474050998687744
    8. ' while' → logprob: -4.974050998687744
    9. ' ' → logprob: -5.099050998687744
    10. ' but' → logprob: -5.349050998687744

Token 67: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.743865966796875
    2. ' peu' → logprob: -1.993865966796875
    3. ' jour' → logprob: -2.368865966796875
    4. ' =' → logprob: -2.743865966796875
    5. '=' → logprob: -3.118865966796875
    6. 'pe' → logprob: -3.618865966796875
    7. 's' → logprob: -3.868865966796875
    8. ')' → logprob: -3.868865966796875
    9. '#' → logprob: -3.993865966796875
    10. 'jour' → logprob: -3.993865966796875

Token 68: ' tard' (ID: 30225)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13773195445537567
    2. 'def' → logprob: -2.8877320289611816
    3. ''' → logprob: -4.137732028961182
    4. '#' → logprob: -4.887732028961182
    5. 's' → logprob: -4.887732028961182
    6. ',' → logprob: -5.137732028961182
    7. ' def' → logprob: -5.387732028961182
    8. ' if' → logprob: -5.637732028961182
    9. ')' → logprob: -5.762732028961182
    10. '<|end|>' → logprob: -5.887732028961182

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19759111106395721
    2. 'if' → logprob: -2.3225910663604736
    3. '#' → logprob: -3.8225910663604736
    4. 'def' → logprob: -4.072591304779053
    5. ' if' → logprob: -4.947591304779053
    6. ' 
' → logprob: -5.197591304779053
    7. '<|end|>' → logprob: -5.197591304779053
    8. 'n' → logprob: -5.697591304779053
    9. '\n' → logprob: -5.697591304779053
    10. '' → logprob: -5.822591304779053

Token 70: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4448380172252655
    2. '
' → logprob: -1.319838047027588
    3. '#' → logprob: -3.069838047027588
    4. ' if' → logprob: -4.819838047027588
    5. 'i' → logprob: -5.194838047027588
    6. '' → logprob: -5.194838047027588
    7. 'def' → logprob: -5.194838047027588
    8. '\n' → logprob: -5.319838047027588
    9. 'n' → logprob: -5.694838047027588
    10. '\' → logprob: -6.069838047027588

Token 71: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29695338010787964
    2. ' if' → logprob: -1.9219534397125244
    3. '#' → logprob: -3.0469534397125244
    4. 'def' → logprob: -3.9219534397125244
    5. ' 
' → logprob: -4.421953201293945
    6. ' 

' → logprob: -4.921953201293945
    7. ' ' → logprob: -4.921953201293945
    8. ' #' → logprob: -6.171953201293945
    9. 'from' → logprob: -6.171953201293945
    10. '
' → logprob: -6.421953201293945

Token 72: 'if' (ID: 366)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.641797661781311
    2. 'if' → logprob: -1.141797661781311
    3. 'ifi' → logprob: -2.5167975425720215
    4. 'ification' → logprob: -2.8917975425720215
    5. 'i' → logprob: -4.3917975425720215
    6. 'ifié' → logprob: -5.8917975425720215
    7. 'ifier' → logprob: -7.1417975425720215
    8. 'ifiez' → logprob: -8.01679801940918
    9. 'ifications' → logprob: -8.14179801940918
    10. 'ifica' → logprob: -8.39179801940918

Token 73: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.484874963760376
    2. '(' → logprob: -1.609874963760376
    3. ' if' → logprob: -1.609874963760376
    4. ' ' → logprob: -1.984874963760376
    5. 'e' → logprob: -2.359874963760376
    6. ' (' → logprob: -3.234874963760376
    7. 'er' → logprob: -3.859874963760376
    8. '<|end|>' → logprob: -4.109874725341797
    9. ':' → logprob: -4.484874725341797
    10. 'm' → logprob: -4.609874725341797

Token 74: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31641751527786255
    2. ' m' → logprob: -1.6914174556732178
    3. '(' → logprob: -3.0664174556732178
    4. '(m' → logprob: -4.316417694091797
    5. ' d' → logprob: -4.691417694091797
    6. 'm' → logprob: -5.066417694091797
    7. ' ((' → logprob: -5.691417694091797
    8. ' ' → logprob: -6.066417694091797
    9. 'd' → logprob: -6.441417694091797
    10. '((' → logprob: -6.816417694091797

Token 75: ' sont' (ID: 5242)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8929042220115662
    2. 's' → logprob: -1.142904281616211
    3. 'n' → logprob: -2.142904281616211
    4. ' jour' → logprob: -3.517904281616211
    5. ' sont' → logprob: -4.142904281616211
    6. ' ' → logprob: -4.267904281616211
    7. ' premier' → logprob: -4.767904281616211
    8. ' m' → logprob: -5.017904281616211
    9. '(' → logprob: -5.017904281616211
    10. '1' → logprob: -5.142904281616211

Token 76: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9749579429626465
    2. 'dans' → logprob: -1.4749579429626465
    3. 'des' → logprob: -1.9749579429626465
    4. ' les' → logprob: -2.4749579429626465
    5. ' des' → logprob: -2.4749579429626465
    6. ' dans' → logprob: -3.3499579429626465
    7. 'de' → logprob: -4.4749579429626465
    8. ' bien' → logprob: -5.5999579429626465
    9. 'bien' → logprob: -5.5999579429626465
    10. 'le' → logprob: -5.7249579429626465

Token 77: ' mois' (ID: 19924)
  Prédit: ' dates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dates' → logprob: -0.6332705020904541
    2. 'dates' → logprob: -1.008270502090454
    3. ' jours' → logprob: -3.008270502090454
    4. 'jours' → logprob: -4.383270263671875
    5. ' années' → logprob: -4.883270263671875
    6. ' date' → logprob: -5.383270263671875
    7. 'jour' → logprob: -5.758270263671875
    8. 'date' → logprob: -6.133270263671875
    9. ' journées' → logprob: -6.133270263671875
    10. ' annivers' → logprob: -6.445770263671875

Token 78: ' différents' (ID: 36009)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039007768034935
    2. 'if' → logprob: -4.039007663726807
    3. 'i' → logprob: -4.914007663726807
    4. ' i' → logprob: -5.789007663726807
    5. ' if' → logprob: -6.539007663726807
    6. ' ,' → logprob: -6.664007663726807
    7. '<|end|>' → logprob: -6.664007663726807
    8. ',' → logprob: -7.164007663726807
    9. '  ' → logprob: -7.289007663726807
    10. 's' → logprob: -7.664007663726807

Token 79: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47357743978500366
    2. 'if' → logprob: -1.0985774993896484
    3. ' 
' → logprob: -4.473577499389648
    4. '
' → logprob: -4.598577499389648
    5. '\n' → logprob: -4.848577499389648
    6. '\' → logprob: -5.348577499389648
    7. ' if' → logprob: -6.098577499389648
    8. '  
' → logprob: -6.473577499389648
    9. ' ' → logprob: -6.598577499389648
    10. '#' → logprob: -7.223577499389648

Token 80: 'log' (ID: 2133)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3234425187110901
    2. ' )' → logprob: -1.3234424591064453
    3. 'if' → logprob: -5.448442459106445
    4. ' ' → logprob: -5.698442459106445
    5. ' if' → logprob: -7.198442459106445
    6. 'm' → logprob: -7.448442459106445
    7. 'i' → logprob: -7.823442459106445
    8. ',' → logprob: -7.948442459106445
    9. ' m' → logprob: -10.073442459106445
    10. ' ' → logprob: -10.073442459106445

Token 81: 'ique' (ID: 2222)
  Prédit: 'iques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.5154582262039185
    2. 'ique' → logprob: -1.1404582262039185
    3. 'iquement' → logprob: -2.515458106994629
    4. 'iqu' → logprob: -7.015458106994629
    5. 'i' → logprob: -7.390458106994629
    6. 'ic' → logprob: -8.390458106994629
    7. ')' → logprob: -8.765458106994629
    8. 'ical' → logprob: -8.765458106994629
    9. 'iq' → logprob: -10.015458106994629
    10. 'iqué' → logprob: -10.140458106994629

Token 82: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16339011490345
    2. ' or' → logprob: -2.9133901596069336
    3. ' )' → logprob: -3.2883901596069336
    4. ',' → logprob: -3.6633901596069336
    5. ':' → logprob: -4.288390159606934
    6. ' ' → logprob: -4.913390159606934
    7. ' :' → logprob: -5.538390159606934
    8. 'if' → logprob: -6.413390159606934
    9. ' ou' → logprob: -6.788390159606934
    10. ';' → logprob: -6.913390159606934

Token 83: '?)
' (ID: 90794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5547859072685242
    2. ' )' → logprob: -0.9297859072685242
    3. ' or' → logprob: -3.929785966873169
    4. '):' → logprob: -5.30478572845459
    5. ' ):' → logprob: -6.05478572845459
    6. ' ' → logprob: -6.30478572845459
    7. ' ' → logprob: -6.92978572845459
    8. ',' → logprob: -8.05478572845459
    9. ' ou' → logprob: -8.67978572845459
    10. 'or' → logprob: -9.17978572845459

Token 84: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29639118909835815
    2. 'i' → logprob: -1.546391248703003
    3. ' if' → logprob: -4.046391010284424
    4. '
' → logprob: -4.796391010284424
    5. ' 
' → logprob: -4.921391010284424
    6. ' ' → logprob: -6.421391010284424
    7. '#' → logprob: -6.421391010284424
    8. '\n' → logprob: -6.546391010284424
    9. '```' → logprob: -6.671391010284424
    10. ':' → logprob: -7.046391010284424

Token 85: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.006760248448699713
    2. 'm' → logprob: -5.006760120391846
    3. ' ' → logprob: -10.381760597229004
    4. ' ' → logprob: -11.881760597229004
    5. ' (' → logprob: -12.631760597229004
    6. '(m' → logprob: -13.256760597229004
    7. '	m' → logprob: -13.506760597229004
    8. '(' → logprob: -15.506760597229004
    9. '  ' → logprob: -15.631760597229004
    10. ' м' → logprob: -16.381759643554688

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. '_' → logprob: -12.000012397766113
    3. ' ' → logprob: -12.750012397766113
    4. '2' → logprob: -13.375012397766113
    5. '１' → logprob: -14.875012397766113
    6. '۱' → logprob: -15.250012397766113
    7. '' → logprob: -15.375012397766113
    8. ')' → logprob: -16.250011444091797
    9. ' !=' → logprob: -16.250011444091797
    10. '```' → logprob: -16.437511444091797

Token 87: '==' (ID: 560)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.351170152425766
    2. '!=' → logprob: -1.2261701822280884
    3. '<' → logprob: -6.851170063018799
    4. '=' → logprob: -7.726170063018799
    5. '==' → logprob: -7.976170063018799
    6. '>' → logprob: -8.226170539855957
    7. ' <' → logprob: -8.476170539855957
    8. ' ==' → logprob: -8.601170539855957
    9. ' ' → logprob: -9.601170539855957
    10. ' >' → logprob: -9.976170539855957

Token 88: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002840418368577957
    2. ' m' → logprob: -5.877840518951416
    3. '1' → logprob: -10.502840042114258
    4. ' ' → logprob: -12.002840042114258
    5. '2' → logprob: -13.752840042114258
    6. '	m' → logprob: -15.127840042114258
    7. '<|end|>' → logprob: -15.252840042114258
    8. '  ' → logprob: -16.252840042114258
    9. '6' → logprob: -17.252840042114258
    10. ')m' → logprob: -17.502840042114258

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00042804674012586474
    2. '1' → logprob: -7.875428199768066
    3. ' ' → logprob: -10.000428199768066
    4. '_' → logprob: -14.375428199768066
    5. ':' → logprob: -15.125428199768066
    6. '```' → logprob: -15.312928199768066
    7. ')' → logprob: -15.375428199768066
    8. '₂' → logprob: -15.750428199768066
    9. '<|end|>' → logprob: -15.937928199768066
    10. '۲' → logprob: -15.937928199768066

Token 90: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3688090443611145
    2. ' :' → logprob: -1.2438089847564697
    3. ' and' → logprob: -3.9938089847564697
    4. 'and' → logprob: -6.743809223175049
    5. ':
' → logprob: -8.74380874633789
    6. ' ' → logprob: -8.99380874633789
    7. ' :
' → logprob: -9.24380874633789
    8. ' ==' → logprob: -10.36880874633789
    9. '>' → logprob: -10.61880874633789
    10. '==' → logprob: -10.99380874633789

Token 91: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6865530014038086
    2. 'if' → logprob: -2.0615530014038086
    3. ' if' → logprob: -2.1865530014038086
    4. ':' → logprob: -2.3115530014038086
    5. '   ' → logprob: -2.9365530014038086
    6. ' ' → logprob: -3.0615530014038086
    7. ' print' → logprob: -3.4365530014038086
    8. ' :' → logprob: -4.311553001403809
    9. ' ' → logprob: -6.311553001403809
    10. ':
' → logprob: -6.311553001403809

Token 92: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.30341699719429016
    2. 'if' → logprob: -2.0534169673919678
    3. ' if' → logprob: -2.5534169673919678
    4. ' print' → logprob: -3.0534169673919678
    5. '#' → logprob: -6.178417205810547
    6. '   ' → logprob: -6.553417205810547
    7. ' ' → logprob: -6.678417205810547
    8. ' #' → logprob: -6.928417205810547
    9. 'pass' → logprob: -7.428417205810547
    10. 'd' → logprob: -8.303417205810547

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012208930216729641
    2. '("' → logprob: -4.637208938598633
    3. '()' → logprob: -6.387208938598633
    4. '('' → logprob: -7.887208938598633
    5. '("("' → logprob: -8.512208938598633
    6. '("")' → logprob: -9.387208938598633
    7. '(True' → logprob: -10.012208938598633
    8. '((' → logprob: -11.137208938598633
    9. '(False' → logprob: -11.637208938598633
    10. '(
' → logprob: -12.012208938598633

Token 94: '0' (ID: 15)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.026602864265442
    2. '"' → logprob: -1.526602864265442
    3. 'd' → logprob: -1.526602864265442
    4. '"d' → logprob: -2.0266027450561523
    5. '(abs' → logprob: -4.151602745056152
    6. 'max' → logprob: -4.276602745056152
    7. '0' → logprob: -4.526602745056152
    8. '1' → logprob: -5.026602745056152
    9. '(' → logprob: -5.526602745056152
    10. '31' → logprob: -5.651602745056152

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012186899548396468
    2. ' )' → logprob: -6.876218795776367
    3. ')
' → logprob: -8.876218795776367
    4. '*' → logprob: -11.376218795776367
    5. '')' → logprob: -12.126218795776367
    6. 'else' → logprob: -12.376218795776367
    7. ',' → logprob: -12.501218795776367
    8. ' ' → logprob: -13.001218795776367
    9. '")' → logprob: -13.126218795776367
    10. '*)' → logprob: -13.501218795776367

Token 96: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11694540083408356
    2. 'elif' → logprob: -2.241945505142212
    3. ' else' → logprob: -6.366945266723633
    4. '
' → logprob: -6.491945266723633
    5. '    
' → logprob: -8.741945266723633
    6. '\n' → logprob: -9.491945266723633
    7. 'el' → logprob: -9.616945266723633
    8. '  
' → logprob: -9.616945266723633
    9. '<|end|>' → logprob: -9.616945266723633
    10. ' elif' → logprob: -9.991945266723633

Token 97: ' même' (ID: 9679)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.37315884232521057
    2. 'elif' → logprob: -1.9981588125228882
    3. ' else' → logprob: -2.3731589317321777
    4. 'exit' → logprob: -3.7481589317321777
    5. '
' → logprob: -4.248158931732178
    6. '\n' → logprob: -4.623158931732178
    7. ' ' → logprob: -5.373158931732178
    8. ' exit' → logprob: -5.498158931732178
    9. ' elif' → logprob: -5.623158931732178
    10. '<|end|>' → logprob: -5.998158931732178

Token 98: ' mois' (ID: 19924)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03901384770870209
    2. 'elif' → logprob: -3.2890138626098633
    3. ' else' → logprob: -7.164013862609863
    4. '<|end|>' → logprob: -10.289013862609863
    5. 'el' → logprob: -10.789013862609863
    6. ';' → logprob: -10.789013862609863
    7. 'exit' → logprob: -11.414013862609863
    8. ')' → logprob: -11.539013862609863
    9. '```' → logprob: -11.539013862609863
    10. '
' → logprob: -11.664013862609863

Token 100: ' donc' (ID: 14206)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.47796496748924255
    2. ' exit' → logprob: -1.477964997291565
    3. 'else' → logprob: -2.6029648780822754
    4. ' else' → logprob: -3.4779648780822754
    5. ' ' → logprob: -3.7279648780822754
    6. 'elif' → logprob: -4.727964878082275
    7. ' ' → logprob: -5.602964878082275
    8. 'quit' → logprob: -6.102964878082275
    9. '  ' → logprob: -6.727964878082275
    10. ' )' → logprob: -7.227964878082275

Token 101: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26111340522766113
    2. 'print' → logprob: -1.8861134052276611
    3. 'return' → logprob: -3.761113405227661
    4. 'exit' → logprob: -3.761113405227661
    5. ' ' → logprob: -4.386113166809082
    6. '   ' → logprob: -5.636113166809082
    7. ' print' → logprob: -5.886113166809082
    8. 'pass' → logprob: -6.011113166809082
    9. '100' → logprob: -6.261113166809082
    10. '1' → logprob: -6.386113166809082

Token 102: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04785136878490448
    2. 'elif' → logprob: -3.172851324081421
    3. ' else' → logprob: -5.4228515625
    4. '<|end|>' → logprob: -9.1728515625
    5. '
' → logprob: -10.0478515625
    6. ' elif' → logprob: -10.1728515625
    7. 'es' → logprob: -10.2978515625
    8. 'except' → logprob: -10.2978515625
    9. '```' → logprob: -10.4228515625
    10. ';' → logprob: -10.9228515625

Token 103: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03823702409863472
    2. 'elif' → logprob: -3.2882370948791504
    3. ' else' → logprob: -8.663236618041992
    4. '
' → logprob: -11.788236618041992
    5. 'el' → logprob: -13.163236618041992
    6. '```' → logprob: -13.163236618041992
    7. ' elif' → logprob: -13.413236618041992
    8. 'elseif' → logprob: -13.538236618041992
    9. 'e' → logprob: -13.663236618041992
    10. 'elser' → logprob: -14.038236618041992

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04059039428830147
    2. ':
' → logprob: -3.540590286254883
    3. ' :' → logprob: -5.040590286254883
    4. '   ' → logprob: -5.665590286254883
    5. ' :
' → logprob: -7.290590286254883
    6. ' print' → logprob: -9.790590286254883
    7. 'print' → logprob: -10.415590286254883
    8. ':
' → logprob: -10.915590286254883
    9. ' if' → logprob: -11.415590286254883
    10. ':

' → logprob: -11.915590286254883

Token 105: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29910460114479065
    2. '   ' → logprob: -1.6741045713424683
    3. ' print' → logprob: -2.799104690551758
    4. '1' → logprob: -5.549104690551758
    5. 'if' → logprob: -6.174104690551758
    6. 'diff' → logprob: -7.424104690551758
    7. ' if' → logprob: -7.549104690551758
    8. '    ' → logprob: -8.174104690551758
    9. 'days' → logprob: -8.299104690551758
    10. 'day' → logprob: -8.424104690551758

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05381082370877266
    2. 'if' → logprob: -3.8038108348846436
    3. '   ' → logprob: -5.3038105964660645
    4. '31' → logprob: -5.6788105964660645
    5. 'days' → logprob: -5.8038105964660645
    6. 'diff' → logprob: -5.8038105964660645
    7. ' print' → logprob: -6.3038105964660645
    8. 'result' → logprob: -6.3038105964660645
    9. 'jours' → logprob: -6.5538105964660645
    10. 'total' → logprob: -6.8038105964660645

Token 107: '(' (ID: 7)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.7930669188499451
    2. '(' → logprob: -1.2930669784545898
    3. 'abs' → logprob: -1.6680669784545898
    4. '(m' → logprob: -3.41806697845459
    5. '((' → logprob: -4.04306697845459
    6. '1' → logprob: -4.29306697845459
    7. '(d' → logprob: -4.54306697845459
    8. 'm' → logprob: -6.04306697845459
    9. '(max' → logprob: -6.29306697845459
    10. '(min' → logprob: -6.29306697845459

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6425186395645142
    2. 'abs' → logprob: -1.6425186395645142
    3. 'd' → logprob: -1.7675186395645142
    4. '(' → logprob: -2.1425185203552246
    5. '(m' → logprob: -2.5175185203552246
    6. '(d' → logprob: -2.5175185203552246
    7. 'm' → logprob: -3.1425185203552246
    8. '(abs' → logprob: -3.2675185203552246
    9. '30' → logprob: -3.6425185203552246
    10. '((' → logprob: -3.8925185203552246

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -15.12500286102295
    4. '))' → logprob: -17.000001907348633
    5. ')`' → logprob: -18.375001907348633
    6. '0' → logprob: -18.625001907348633
    7. ')#' → logprob: -19.250001907348633
    8. '`)' → logprob: -19.375001907348633
    9. '')' → logprob: -19.625001907348633
    10. ')

' → logprob: -19.750001907348633

Token 110: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' ou' (ID: 2031)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2975737452507019
    2. ' #' → logprob: -2.0475738048553467
    3. ' ' → logprob: -3.1725738048553467
    4. '<|end|>' → logprob: -3.6725738048553467
    5. '...' → logprob: -4.422573566436768
    6. 'm' → logprob: -4.422573566436768
    7. 'diff' → logprob: -4.922573566436768
    8. '1' → logprob: -5.422573566436768
    9. ' ' → logprob: -5.797573566436768
    10. 'different' → logprob: -6.297573566436768

Token 113: 'ais' (ID: 1873)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1154392957687378
    2. '#' → logprob: -1.6154392957687378
    3. ' #' → logprob: -2.1154394149780273
    4. '  ' → logprob: -3.3654394149780273
    5. ' juste' → logprob: -3.3654394149780273
    6. ' ' → logprob: -4.240439414978027
    7. ' pas' → logprob: -4.490439414978027
    8. ' si' → logprob: -4.490439414978027
    9. '...' → logprob: -4.490439414978027
    10. '   ' → logprob: -4.490439414978027

Token 114: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' mois' (ID: 19924)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' diff' (ID: 8868)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' donc' (ID: 14206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.712395191192627
    2. 'un' → logprob: -1.212395191192627
    3. 'une' → logprob: -2.587395191192627
    4. 'on' → logprob: -3.087395191192627
    5. 'diff' → logprob: -3.587395191192627
    6. 'au' → logprob: -4.462395191192627
    7. 'à' → logprob: -5.212395191192627
    8. 'prem' → logprob: -5.337395191192627
    9. 'one' → logprob: -5.462395191192627
    10. 'il' → logprob: -5.837395191192627

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2998921275138855
    2. 'un' → logprob: -2.2998921871185303
    3. 'diff' → logprob: -3.0498921871185303
    4. 'une' → logprob: -3.5498921871185303
    5. 'on' → logprob: -3.6748921871185303
    6. 'au' → logprob: -3.9248921871185303
    7. 'possible' → logprob: -5.674891948699951
    8. 'plus' → logprob: -5.924891948699951
    9. 'poss' → logprob: -6.049891948699951
    10. 'prem' → logprob: -6.049891948699951

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ''ai' (ID: 12480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' pas' (ID: 2173)
  Prédit: ' fini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fini' → logprob: -1.4001771211624146
    2. ' ' → logprob: -1.9001771211624146
    3. 'f' → logprob: -2.150177001953125
    4. ' oublié' → logprob: -2.900177001953125
    5. ' un' → logprob: -3.025177001953125
    6. ' une' → logprob: -3.400177001953125
    7. ' terminé' → logprob: -3.775177001953125
    8. '#' → logprob: -3.775177001953125
    9. ' juste' → logprob: -3.900177001953125
    10. ' compris' → logprob: -4.150177001953125

Token 125: ' vraiment' (ID: 26637)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8553362488746643
    2. 'd' → logprob: -2.1053361892700195
    3. ' fini' → logprob: -2.2303361892700195
    4. 'termin' → logprob: -2.6053361892700195
    5. 'fin' → logprob: -2.7303361892700195
    6. 'oub' → logprob: -3.6053361892700195
    7. 'pu' → logprob: -3.8553361892700195
    8. 'fait' → logprob: -3.8553361892700195
    9. 'tout' → logprob: -3.8553361892700195
    10. ' compris' → logprob: -4.2303361892700195

Token 126: ' utilisé' (ID: 53138)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12528467178344727
    2. 'f' → logprob: -3.3752846717834473
    3. 'env' → logprob: -3.8752846717834473
    4. 'fin' → logprob: -4.000284671783447
    5. 'de' → logprob: -4.875284671783447
    6. ' envie' → logprob: -5.000284671783447
    7. 'le' → logprob: -5.375284671783447
    8. 'com' → logprob: -5.625284671783447
    9. 'l' → logprob: -6.000284671783447
    10. '#' → logprob: -6.125284671783447

Token 127: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.19527080655097961
    2. ''autres' → logprob: -2.6952707767486572
    3. 'elif' → logprob: -3.6952707767486572
    4. 'ate' → logprob: -3.8202707767486572
    5. 'if' → logprob: -4.445271015167236
    6. 'input' → logprob: -4.820271015167236
    7. 'es' → logprob: -5.070271015167236
    8. 'ef' → logprob: -5.195271015167236
    9. 'f' → logprob: -5.695271015167236
    10. ''autre' → logprob: -5.820271015167236

Token 129: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008645887486636639
    2. ' d' → logprob: -4.758646011352539
    3. 'm' → logprob: -11.508646011352539
    4. ' ' → logprob: -11.883646011352539
    5. ' ' → logprob: -12.633646011352539
    6. '<|end|>' → logprob: -13.258646011352539
    7. 'j' → logprob: -13.446146011352539
    8. '```' → logprob: -14.008646011352539
    9. '`' → logprob: -14.196146011352539
    10. ''d' → logprob: -14.321146011352539

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5784298777580261
    2. '1' → logprob: -1.078429937362671
    3. '<|end|>' → logprob: -3.203429937362671
    4. '_' → logprob: -3.828429937362671
    5. ''' → logprob: -5.078429698944092
    6. '```' → logprob: -5.328429698944092
    7. ')' → logprob: -5.578429698944092
    8. 'None' → logprob: -5.578429698944092
    9. '(None' → logprob: -6.578429698944092
    10. '#' → logprob: -6.578429698944092

Token 132: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.3678833842277527
    2. 'mais' → logprob: -2.1178834438323975
    3. ' parce' → logprob: -3.6178834438323975
    4. ' but' → logprob: -3.9928834438323975
    5. ' donc' → logprob: -3.9928834438323975
    6. 'don' → logprob: -4.117883205413818
    7. 'je' → logprob: -4.242883205413818
    8. 'c' → logprob: -4.242883205413818
    9. '#' → logprob: -4.617883205413818
    10. ' je' → logprob: -4.617883205413818

Token 134: ' peut' (ID: 9216)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16566786170005798
    2. ' c' → logprob: -2.915667772293091
    3. 'je' → logprob: -3.540667772293091
    4. 'on' → logprob: -4.29066801071167
    5. 'ça' → logprob: -4.41566801071167
    6. 'ils' → logprob: -4.66566801071167
    7. 'cela' → logprob: -5.04066801071167
    8. 'pe' → logprob: -5.54066801071167
    9. ' on' → logprob: -5.54066801071167
    10. 'vo' → logprob: -5.91566801071167

Token 135: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.032002877444028854
    2. '-être' → logprob: -4.157002925872803
    3. 'etre' → logprob: -4.282002925872803
    4. 'êt' → logprob: -7.032002925872803
    5. '-' → logprob: -7.907002925872803
    6. 'importe' → logprob: -8.532002449035645
    7. 'ètre' → logprob: -8.782002449035645
    8. 'êtres' → logprob: -8.782002449035645
    9. 'ê' → logprob: -9.157002449035645
    10. '^' → logprob: -10.032002449035645

Token 136: ' utiles' (ID: 121161)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16997624933719635
    2. ' ' → logprob: -3.919976234436035
    3. ' ok' → logprob: -4.419976234436035
    4. ' rien' → logprob: -4.544976234436035
    5. ' for' → logprob: -4.669976234436035
    6. ':' → logprob: -4.794976234436035
    7. ' un' → logprob: -4.919976234436035
    8. '<|end|>' → logprob: -4.919976234436035
    9. ' parce' → logprob: -5.294976234436035
    10. ' on' → logprob: -5.669976234436035

Token 137: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' tard' (ID: 30225)
  Prédit: ' tard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -0.04995976760983467
    2. 't' → logprob: -3.549959659576416
    3. ' adelante' → logprob: -5.549959659576416
    4. ':' → logprob: -6.049959659576416
    5. ' tôt' → logprob: -6.049959659576416
    6. '<|end|>' → logprob: -6.299959659576416
    7. '?' → logprob: -6.549959659576416
    8. 'late' → logprob: -6.924959659576416
    9. '+' → logprob: -7.424959659576416
    10. '#' → logprob: -7.424959659576416

Token 139: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 137
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 29.93%
Précision adaptée (1ère position): 31.39%
Précision (top 10): 56.20%
================================================================================
