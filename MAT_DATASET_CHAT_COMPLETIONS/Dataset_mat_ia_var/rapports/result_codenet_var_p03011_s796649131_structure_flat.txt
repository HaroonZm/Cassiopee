================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
inp = input().split()
a = int(inp[0])
b = int(inp[1])
c = int(inp[2])
if a > b:
    a, b = b, a
if a > c:
    a, c = c, a
if b > c:
    b, c = c, b
print(a + b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'inp' (ID: 74055)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014394002500921488
    2. '('' → logprob: -7.126439571380615
    3. ''' → logprob: -7.876439571380615
    4. '("("' → logprob: -9.001439094543457
    5. '"' → logprob: -10.001439094543457
    6. '()' → logprob: -10.876439094543457
    7. '(
' → logprob: -11.001439094543457
    8. '`' → logprob: -11.501439094543457
    9. ' (' → logprob: -11.626439094543457
    10. '```' → logprob: -11.876439094543457

Token 4: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13957762718200684
    2. '(' → logprob: -2.889577627182007
    3. ')' → logprob: -3.764577627182007
    4. '+' → logprob: -4.764577865600586
    5. '()' → logprob: -4.889577865600586
    6. '\' → logprob: -5.264577865600586
    7. ''' → logprob: -5.514577865600586
    8. '\n' → logprob: -5.514577865600586
    9. '.strip' → logprob: -6.014577865600586
    10. '#' → logprob: -6.014577865600586

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018079837318509817
    2. '()' → logprob: -6.626808166503906
    3. '('' → logprob: -8.251808166503906
    4. '"' → logprob: -9.626808166503906
    5. ''' → logprob: -9.626808166503906
    6. '(
' → logprob: -10.876808166503906
    7. '`' → logprob: -11.001808166503906
    8. '("("' → logprob: -11.126808166503906
    9. '```' → logprob: -12.001808166503906
    10. ' (' → logprob: -12.126808166503906

Token 6: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.060647040605545044
    2. '.' → logprob: -4.060647010803223
    3. 'x' → logprob: -4.310647010803223
    4. '#' → logprob: -5.310647010803223
    5. 'if' → logprob: -5.310647010803223
    6. 'for' → logprob: -5.435647010803223
    7. '=' → logprob: -5.560647010803223
    8. '(' → logprob: -6.685647010803223
    9. 'i' → logprob: -6.685647010803223
    10. 'a' → logprob: -6.810647010803223

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00820673443377018
    2. ' =' → logprob: -6.008206844329834
    3. '=' → logprob: -6.133206844329834
    4. '.' → logprob: -7.383206844329834
    5. 'pp' → logprob: -7.633206844329834
    6. 'p' → logprob: -7.633206844329834
    7. '_' → logprob: -7.633206844329834
    8. 's' → logprob: -8.258206367492676
    9. 'a' → logprob: -8.883206367492676
    10. '[p' → logprob: -9.133206367492676

Token 8: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2029189020395279
    2. ' int' → logprob: -1.8279188871383667
    3. 'inp' → logprob: -4.327919006347656
    4. ' inp' → logprob: -5.827919006347656
    5. 'list' → logprob: -5.952919006347656
    6. '[int' → logprob: -6.327919006347656
    7. ' list' → logprob: -6.577919006347656
    8. 'float' → logprob: -8.702919006347656
    9. 'len' → logprob: -8.702919006347656
    10. ' []' → logprob: -9.202919006347656

Token 9: '(inp' (ID: 141645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519882917404175
    2. '(inp' → logprob: -1.5019882917404175
    3. '(a' → logprob: -10.751988410949707
    4. 'inp' → logprob: -12.001988410949707
    5. '(
' → logprob: -12.126988410949707
    6. '(`' → logprob: -12.376988410949707
    7. '(

' → logprob: -12.501988410949707
    8. '('' → logprob: -12.501988410949707
    9. '(instr' → logprob: -12.501988410949707
    10. 'a' → logprob: -13.126988410949707

Token 10: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. ' [' → logprob: -13.12500286102295
    3. '\[' → logprob: -14.62500286102295
    4. '0' → logprob: -15.25000286102295
    5. '(' → logprob: -16.375003814697266
    6. ')' → logprob: -16.500003814697266
    7. ' ' → logprob: -16.625003814697266
    8. '[
' → logprob: -16.750003814697266
    9. '1' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.375003814697266

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -13.875000953674316
    3. ' ' → logprob: -14.750000953674316
    4. ')' → logprob: -18.750001907348633
    5. '2' → logprob: -19.750001907348633
    6. '۰' → logprob: -20.250001907348633
    7. ''' → logprob: -20.375001907348633
    8. '[' → logprob: -20.562501907348633
    9. ']' → logprob: -20.875001907348633
    10. '０' → logprob: -21.312501907348633

Token 12: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005240394733846188
    2. ']' → logprob: -5.380240440368652
    3. ')' → logprob: -7.505240440368652
    4. ' ])' → logprob: -10.005240440368652
    5. '+' → logprob: -11.880240440368652
    6. '[' → logprob: -12.505240440368652
    7. '],' → logprob: -13.130240440368652
    8. ']+' → logprob: -13.255240440368652
    9. ']))' → logprob: -13.380240440368652
    10. ''])' → logprob: -13.505240440368652

Token 13: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005700415465980768
    2. 'b' → logprob: -6.380700588226318
    3. '+b' → logprob: -6.630700588226318
    4. '*' → logprob: -7.880700588226318
    5. ' +' → logprob: -7.880700588226318
    6. ' ' → logprob: -7.880700588226318
    7. '=' → logprob: -8.13070011138916
    8. 'a' → logprob: -8.25570011138916
    9. '```' → logprob: -8.25570011138916
    10. ')' → logprob: -8.88070011138916

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6567246317863464
    2. '=' → logprob: -1.6567246913909912
    3. ' ' → logprob: -1.9067246913909912
    4. '[' → logprob: -2.656724691390991
    5. ')' → logprob: -3.156724691390991
    6. '+' → logprob: -4.656724452972412
    7. '_' → logprob: -5.156724452972412
    8. '  ' → logprob: -5.281724452972412
    9. '<|end|>' → logprob: -5.906724452972412
    10. '[]' → logprob: -6.406724452972412

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868809938430786
    2. 'int' → logprob: -1.1368809938430786
    3. ' ' → logprob: -12.761880874633789
    4. ' a' → logprob: -12.886880874633789
    5. 'a' → logprob: -13.386880874633789
    6. '=int' → logprob: -13.761880874633789
    7. '(int' → logprob: -14.386880874633789
    8. ' inp' → logprob: -14.511880874633789
    9. '	int' → logprob: -15.261880874633789
    10. '<int' → logprob: -16.01188087463379

Token 16: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -0.0025219188537448645
    2. '(' → logprob: -6.002521991729736
    3. '(instr' → logprob: -10.502521514892578
    4. ' (' → logprob: -12.002521514892578
    5. '(in' → logprob: -12.627521514892578
    6. '(b' → logprob: -13.002521514892578
    7. '(a' → logprob: -13.377521514892578
    8. 'inp' → logprob: -14.127521514892578
    9. '(input' → logprob: -14.252521514892578
    10. ')(' → logprob: -14.502521514892578

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '])' → logprob: -16.375
    3. ' [' → logprob: -16.375
    4. '1' → logprob: -16.625
    5. '[
' → logprob: -17.25
    6. ']' → logprob: -17.625
    7. '```' → logprob: -17.625
    8. ')' → logprob: -17.875
    9. '   ' → logprob: -18.0
    10. '\[' → logprob: -18.0

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000523842521943152
    2. '0' → logprob: -7.625524044036865
    3. '])' → logprob: -10.875523567199707
    4. ' ' → logprob: -11.000523567199707
    5. '   ' → logprob: -15.750523567199707
    6. '  ' → logprob: -17.250524520874023
    7. ']' → logprob: -17.250524520874023
    8. '2' → logprob: -17.500524520874023
    9. ' ])' → logprob: -17.625524520874023
    10. ')' → logprob: -18.000524520874023

Token 19: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008270815014839172
    2. '])' → logprob: -4.883270740509033
    3. ']' → logprob: -7.383270740509033
    4. ')])' → logprob: -11.258271217346191
    5. ''])' → logprob: -12.133271217346191
    6. ')]' → logprob: -12.258271217346191
    7. '）' → logprob: -12.258271217346191
    8. '`)' → logprob: -12.383271217346191
    9. '')' → logprob: -12.508271217346191
    10. '))' → logprob: -12.758271217346191

Token 20: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009043501690030098
    2. 'c' → logprob: -5.7590436935424805
    3. '*' → logprob: -6.6340436935424805
    4. '+
' → logprob: -6.8840436935424805
    5. '+c' → logprob: -7.1340436935424805
    6. '#' → logprob: -7.2590436935424805
    7. 'if' → logprob: -7.5090436935424805
    8. '\' → logprob: -8.25904369354248
    9. '\n' → logprob: -8.25904369354248
    10. 'print' → logprob: -8.63404369354248

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1857096403837204
    2. '=' → logprob: -1.8107095956802368
    3. '_' → logprob: -5.935709476470947
    4. '+' → logprob: -7.185709476470947
    5. ')' → logprob: -7.310709476470947
    6. ' ' → logprob: -7.810709476470947
    7. '>' → logprob: -8.435709953308105
    8. ' ==' → logprob: -8.560709953308105
    9. 's' → logprob: -8.560709953308105
    10. '[' → logprob: -9.060709953308105

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05541950836777687
    2. ' a' → logprob: -3.555419445037842
    3. 'int' → logprob: -3.805419445037842
    4. 'a' → logprob: -5.805419445037842
    5. ' b' → logprob: -10.305419921875
    6. ' ' → logprob: -10.430419921875
    7. '(int' → logprob: -12.680419921875
    8. ' max' → logprob: -12.680419921875
    9. ' inp' → logprob: -12.930419921875
    10. 'b' → logprob: -13.430419921875

Token 23: '(inp' (ID: 141645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001755383680574596
    2. '(inp' → logprob: -6.501755237579346
    3. '(a' → logprob: -9.001755714416504
    4. '('' → logprob: -10.376755714416504
    5. '(c' → logprob: -10.876755714416504
    6. ' (' → logprob: -11.376755714416504
    7. '(
' → logprob: -11.751755714416504
    8. '("("' → logprob: -12.001755714416504
    9. ''' → logprob: -12.251755714416504
    10. '(

' → logprob: -12.251755714416504

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027099132421426475
    2. ')' → logprob: -9.00027084350586
    3. '3' → logprob: -10.00027084350586
    4. '0' → logprob: -10.62527084350586
    5. '2' → logprob: -10.62527084350586
    6. ']' → logprob: -10.87527084350586
    7. ' [' → logprob: -11.50027084350586
    8. '])' → logprob: -11.75027084350586
    9. ' ' → logprob: -12.75027084350586
    10. '[
' → logprob: -13.00027084350586

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000808082812000066
    2. '0' → logprob: -7.125808238983154
    3. ' ' → logprob: -13.375807762145996
    4. '1' → logprob: -13.750807762145996
    5. '```' → logprob: -15.125807762145996
    6. '3' → logprob: -15.625807762145996
    7. '])' → logprob: -15.750807762145996
    8. ']' → logprob: -16.063308715820312
    9. ')' → logprob: -16.375808715820312
    10. '   ' → logprob: -17.188308715820312

Token 26: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ']' → logprob: -12.500007629394531
    3. '])' → logprob: -13.750007629394531
    4. '')' → logprob: -13.875007629394531
    5. '`)' → logprob: -14.750007629394531
    6. ' )' → logprob: -14.875007629394531
    7. '）' → logprob: -15.250007629394531
    8. '}' → logprob: -15.625007629394531
    9. ')])' → logprob: -15.625007629394531
    10. '))' → logprob: -15.750007629394531

Token 27: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5611376762390137
    2. 'd' → logprob: -1.6861376762390137
    3. '\n' → logprob: -2.4361376762390137
    4. '+' → logprob: -2.5611376762390137
    5. 'i' → logprob: -3.4361376762390137
    6. ' if' → logprob: -4.436137676239014
    7. '#' → logprob: -5.436137676239014
    8. '
' → logprob: -5.561137676239014
    9. '*' → logprob: -5.686137676239014
    10. 'print' → logprob: -5.936137676239014

Token 28: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05061058700084686
    2. 'a' → logprob: -3.5506105422973633
    3. ' ' → logprob: -3.9256105422973633
    4. ' c' → logprob: -8.300610542297363
    5. ' (' → logprob: -8.550610542297363
    6. ''' → logprob: -8.925610542297363
    7. ' ' → logprob: -9.175610542297363
    8. '  ' → logprob: -10.050610542297363
    9. ' b' → logprob: -10.425610542297363
    10. 'c' → logprob: -10.425610542297363

Token 29: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1284148246049881
    2. ' <' → logprob: -2.6284148693084717
    3. ' ==' → logprob: -3.8784148693084717
    4. ' ' → logprob: -4.378414630889893
    5. '>' → logprob: -5.128414630889893
    6. '_' → logprob: -6.003414630889893
    7. '<' → logprob: -6.503414630889893
    8. ' <=' → logprob: -6.628414630889893
    9. ' >=' → logprob: -6.753414630889893
    10. '  ' → logprob: -7.253414630889893

Token 30: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07894828915596008
    2. ' b' → logprob: -2.5789482593536377
    3. '0' → logprob: -10.078948020935059
    4. ' ' → logprob: -11.453948020935059
    5. '=' → logprob: -12.453948020935059
    6. 'c' → logprob: -13.578948020935059
    7. '>b' → logprob: -15.328948020935059
    8. 'max' → logprob: -15.703948020935059
    9. '=b' → logprob: -16.328948974609375
    10. '	b' → logprob: -16.578948974609375

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1994844675064087
    2. ' :' → logprob: -1.9494844675064087
    3. ' and' → logprob: -3.449484348297119
    4. ' ' → logprob: -5.699484348297119
    5. ' >' → logprob: -6.574484348297119
    6. '>' → logprob: -6.699484348297119
    7. 'and' → logprob: -7.824484348297119
    8. ''' → logprob: -10.074484825134277
    9. '>:' → logprob: -10.449484825134277
    10. ' a' → logprob: -10.574484825134277

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14005403220653534
    2. ' :' → logprob: -2.8900539875030518
    3. ' a' → logprob: -3.6400539875030518
    4. ''' → logprob: -4.140054225921631
    5. ':' → logprob: -4.265054225921631
    6. ' 
' → logprob: -5.390054225921631
    7. ' (' → logprob: -6.015054225921631
    8. '"' → logprob: -6.265054225921631
    9. ' and' → logprob: -6.515054225921631
    10. ' ,' → logprob: -6.640054225921631

Token 33: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2102845013141632
    2. ' 
' → logprob: -1.9602844715118408
    3. ' a' → logprob: -4.21028470993042
    4. '\n' → logprob: -4.33528470993042
    5. '    ' → logprob: -4.83528470993042
    6. ' \' → logprob: -6.08528470993042
    7. '     
' → logprob: -6.08528470993042
    8. 'a' (adapté à ' a') → logprob: -6.58528470993042
    9. 'print' → logprob: -6.96028470993042
    10. ''' → logprob: -6.96028470993042

Token 34: ',' (ID: 11)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10920878499746323
    2. '>' → logprob: -3.359208822250366
    3. ' =' → logprob: -3.609208822250366
    4. ' +=' → logprob: -3.859208822250366
    5. '=' → logprob: -5.109208583831787
    6. ' ' → logprob: -5.359208583831787
    7. ' -=' → logprob: -5.859208583831787
    8. ',' → logprob: -6.234208583831787
    9. ' <' → logprob: -6.234208583831787
    10. '+' → logprob: -7.359208583831787

Token 35: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.240481914370321e-05
    2. ' b' → logprob: -9.875052452087402
    3. 'c' → logprob: -14.625052452087402
    4. '<|end|>' → logprob: -14.625052452087402
    5. '>b' → logprob: -17.875051498413086
    6. ' ' → logprob: -20.000051498413086
    7. '	b' → logprob: -20.500051498413086
    8. ')b' → logprob: -21.125051498413086
    9. '  ' → logprob: -21.375051498413086
    10. '   ' → logprob: -21.625051498413086

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.259581595659256
    2. '=' → logprob: -1.7595815658569336
    3. ',' → logprob: -2.8845815658569336
    4. '<|end|>' → logprob: -8.134581565856934
    5. ' ' → logprob: -8.634581565856934
    6. ' ,' → logprob: -9.134581565856934
    7. ' =
' → logprob: -11.009581565856934
    8. ')' → logprob: -11.384581565856934
    9. '>' → logprob: -12.634581565856934
    10. '<|end|>' → logprob: -13.009581565856934

Token 37: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868718445301056
    2. 'b' → logprob: -1.1368718147277832
    3. ' ' → logprob: -15.386872291564941
    4. '    ' → logprob: -15.636872291564941
    5. '	b' → logprob: -15.636872291564941
    6. '   ' → logprob: -16.511871337890625
    7. '>b' → logprob: -17.011871337890625
    8. '`' → logprob: -17.386871337890625
    9. '(b' → logprob: -17.386871337890625
    10. ' ' → logprob: -17.636871337890625

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.150362166110426e-05
    2. ' ,' → logprob: -9.500091552734375
    3. '<|end|>' → logprob: -11.750091552734375
    4. ',a' → logprob: -13.000091552734375
    5. ',
' → logprob: -13.000091552734375
    6. ' ' → logprob: -13.000091552734375
    7. 'a' → logprob: -14.500091552734375
    8. '`,' → logprob: -15.125091552734375
    9. '‌,' → logprob: -15.250091552734375
    10. '<|end|>' → logprob: -15.625091552734375

Token 39: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001502598519437015
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -15.751502990722656
    4. ' ' → logprob: -16.376502990722656
    5. '   ' → logprob: -17.876502990722656
    6. '  ' → logprob: -19.626502990722656
    7. ''a' → logprob: -20.501502990722656
    8. '>a' → logprob: -20.751502990722656
    9. ' ' → logprob: -20.876502990722656
    10. 'а' → logprob: -20.876502990722656

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10797187685966492
    2. '  
' → logprob: -2.8579719066619873
    3. ' 
' → logprob: -3.7329719066619873
    4. '\n' → logprob: -4.357971668243408
    5. '    
' → logprob: -5.607971668243408
    6. '```' → logprob: -7.107971668243408
    7. 'newline' → logprob: -7.232971668243408
    8. '
' → logprob: -7.232971668243408
    9. '' → logprob: -7.607971668243408
    10. '<|end|>' → logprob: -7.607971668243408

Token 41: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4288266599178314
    2. '  
' → logprob: -1.9288266897201538
    3. '
' → logprob: -2.5538265705108643
    4. '```' → logprob: -3.0538265705108643
    5. ' 
' → logprob: -3.5538265705108643
    6. 'if' → logprob: -4.303826808929443
    7. 'newline' → logprob: -5.053826808929443
    8. '\' → logprob: -5.178826808929443
    9. '    
' → logprob: -5.303826808929443
    10. '``' → logprob: -5.553826808929443

Token 42: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.30479195713996887
    2. ' a' → logprob: -1.8047919273376465
    3. 'a' → logprob: -2.8047919273376465
    4. 'c' → logprob: -3.4297919273376465
    5. ' ' → logprob: -5.5547919273376465
    6. ' b' → logprob: -6.9297919273376465
    7. ' ' → logprob: -8.679792404174805
    8. 'b' → logprob: -8.679792404174805
    9. '	c' → logprob: -10.554792404174805
    10. '  ' → logprob: -10.804792404174805

Token 43: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.009358171373605728
    2. ' <' → logprob: -4.7593584060668945
    3. '>' → logprob: -7.2593584060668945
    4. '<' → logprob: -11.134358406066895
    5. ' ' → logprob: -11.509358406066895
    6. ' <=' → logprob: -11.634358406066895
    7. ' >=' → logprob: -12.384358406066895
    8. ' ==' → logprob: -13.759358406066895
    9. ' >
' → logprob: -15.134358406066895
    10. ' >
' → logprob: -16.009357452392578

Token 44: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005234121344983578
    2. ' c' → logprob: -5.255234241485596
    3. '	c' → logprob: -15.505233764648438
    4. ' ' → logprob: -18.255233764648438
    5. '_c' → logprob: -18.505233764648438
    6. '  ' → logprob: -19.130233764648438
    7. '   ' → logprob: -19.255233764648438
    8. '<|end|>' → logprob: -19.755233764648438
    9. 'с' → logprob: -19.880233764648438
    10. ')c' → logprob: -20.255233764648438

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.315936429426074e-05
    2. ':
' → logprob: -10.125082969665527
    3. ' :' → logprob: -10.750082969665527
    4. '>' → logprob: -12.000082969665527
    5. ',' → logprob: -12.500082969665527
    6. '   ' → logprob: -12.625082969665527
    7. ':**' → logprob: -13.375082969665527
    8. '<|end|>' → logprob: -13.625082969665527
    9. '):' → logprob: -13.875082969665527
    10. '>:' → logprob: -13.875082969665527

Token 46: '   ' (ID: 271)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.05139937624335289
    2. 'c' → logprob: -3.0513994693756104
    3. ' ' → logprob: -6.176399230957031
    4. ' b' → logprob: -8.051399230957031
    5. '<|end|>' → logprob: -9.301399230957031
    6. '   ' → logprob: -9.426399230957031
    7. 'b' → logprob: -10.176399230957031
    8. '  ' → logprob: -10.301399230957031
    9. ' ' → logprob: -10.426399230957031
    10. ',' → logprob: -10.551399230957031

Token 47: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0790022611618042
    2. 'c' → logprob: -2.5790023803710938
    3. '   ' → logprob: -9.954002380371094
    4. ' ' → logprob: -10.454002380371094
    5. '    ' → logprob: -11.579002380371094
    6. ' b' → logprob: -12.329002380371094
    7. '<|end|>' → logprob: -12.329002380371094
    8. 'b' → logprob: -12.454002380371094
    9. '	c' → logprob: -12.579002380371094
    10. '  ' → logprob: -12.704002380371094

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010828252416104078
    2. ' ,' → logprob: -6.876082897186279
    3. '=' → logprob: -10.251082420349121
    4. ' ' → logprob: -12.501082420349121
    5. ' =' → logprob: -13.126082420349121
    6. '>' → logprob: -13.251082420349121
    7. '`,' → logprob: -13.501082420349121
    8. ',b' → logprob: -13.876082420349121
    9. ',
' → logprob: -14.126082420349121
    10. ',c' → logprob: -14.501082420349121

Token 49: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.033898212015628815
    2. 'c' → logprob: -3.408898115158081
    3. ' ' → logprob: -8.53389835357666
    4. '<|end|>' → logprob: -10.15889835357666
    5. ' ' → logprob: -11.53389835357666
    6. 'b' → logprob: -13.15889835357666
    7. '	c' → logprob: -13.53389835357666
    8. '  ' → logprob: -14.03389835357666
    9. ' b' → logprob: -14.78389835357666
    10. '_c' → logprob: -14.78389835357666

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687971234321594
    2. ' =' → logprob: -1.1368796825408936
    3. ',' → logprob: -12.511879920959473
    4. ' ' → logprob: -13.136879920959473
    5. '   ' → logprob: -14.136879920959473
    6. '<|end|>' → logprob: -14.261879920959473
    7. '=

' → logprob: -15.136879920959473
    8. '=
' → logprob: -15.261879920959473
    9. '```' → logprob: -15.386879920959473
    10. '＝' → logprob: -15.386879920959473

Token 51: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.020542705431580544
    2. 'c' → logprob: -3.895542621612549
    3. ' ' → logprob: -15.145543098449707
    4. '	c' → logprob: -16.02054214477539
    5. '<|end|>' → logprob: -16.02054214477539
    6. ' ' → logprob: -16.27054214477539
    7. '(c' → logprob: -16.89554214477539
    8. ' (' → logprob: -16.89554214477539
    9. ')c' → logprob: -17.52054214477539
    10. '  ' → logprob: -17.83304214477539

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2166411478538066e-05
    2. ' ,' → logprob: -10.250052452087402
    3. ',
' → logprob: -11.875052452087402
    4. '`,' → logprob: -12.750052452087402
    5. ',a' → logprob: -12.875052452087402
    6. 'a' → logprob: -13.750052452087402
    7. ' ' → logprob: -13.750052452087402
    8. '```' → logprob: -14.750052452087402
    9. ',b' → logprob: -15.000052452087402
    10. '‌,' → logprob: -15.375052452087402

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326404213905334
    2. ' a' → logprob: -1.313264012336731
    3. '	a' → logprob: -13.188263893127441
    4. ' ' → logprob: -15.313263893127441
    5. ' а' → logprob: -17.063264846801758
    6. ',a' → logprob: -17.688264846801758
    7. '>a' → logprob: -17.813264846801758
    8. ' ' → logprob: -18.188264846801758
    9. ''a' → logprob: -18.188264846801758
    10. '_a' → logprob: -18.188264846801758

Token 54: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49321064352989197
    2. '
' → logprob: -1.4932106733322144
    3. '\n' → logprob: -1.9932106733322144
    4. '```' → logprob: -4.618210792541504
    5. ' 
' → logprob: -4.993210792541504
    6. '  
' → logprob: -5.743210792541504
    7. '\' → logprob: -5.743210792541504
    8. ' if' → logprob: -5.868210792541504
    9. '    
' → logprob: -7.368210792541504
    10. '``' → logprob: -7.368210792541504

Token 55: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4012649953365326
    2. '\n' → logprob: -1.401265025138855
    3. '```' → logprob: -2.7762649059295654
    4. '``' → logprob: -4.7762651443481445
    5. '\' → logprob: -5.1512651443481445
    6. '  
' → logprob: -5.7762651443481445
    7. ' if' → logprob: -6.9012651443481445
    8. ''\' → logprob: -7.2762651443481445
    9. '\
' → logprob: -7.4012651443481445
    10. ' 
' → logprob: -7.6512651443481445

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868822753429413
    2. ' b' → logprob: -1.1368823051452637
    3. 'c' → logprob: -12.261881828308105
    4. ' c' → logprob: -13.011881828308105
    5. ' ' → logprob: -13.136881828308105
    6. '   ' → logprob: -13.261881828308105
    7. '	b' → logprob: -15.761881828308105
    8. 'a' → logprob: -15.761881828308105
    9. '  ' → logprob: -16.886882781982422
    10. ' ' → logprob: -17.011882781982422

Token 57: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.009764472022652626
    2. '>' → logprob: -4.634764671325684
    3. ' ' → logprob: -12.134764671325684
    4. ' <' → logprob: -13.134764671325684
    5. ' ' → logprob: -15.259764671325684
    6. ' >
' → logprob: -16.009763717651367
    7. '<|end|>' → logprob: -16.009763717651367
    8. ',' → logprob: -16.134763717651367
    9. '<' → logprob: -16.134763717651367
    10. '  ' → logprob: -16.259763717651367

Token 58: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.02975071594119072
    2. 'c' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.52975082397461
    4. '	c' → logprob: -16.27975082397461
    5. '  ' → logprob: -17.77975082397461
    6. ' ' → logprob: -18.15475082397461
    7. '<|end|>' → logprob: -19.15475082397461
    8. '   ' → logprob: -19.40475082397461
    9. '>' → logprob: -20.02975082397461
    10. ')c' → logprob: -20.52975082397461

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.5649528298527e-05
    2. ' :' → logprob: -9.625075340270996
    3. ':
' → logprob: -12.500075340270996
    4. ':**' → logprob: -12.500075340270996
    5. '>' → logprob: -14.875075340270996
    6. ',' → logprob: -15.000075340270996
    7. '>:' → logprob: -15.125075340270996
    8. '<|end|>' → logprob: -15.375075340270996
    9. '):' → logprob: -15.625075340270996
    10. ':

' → logprob: -15.875075340270996

Token 60: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6032482981681824
    2. ' c' → logprob: -1.2282483577728271
    3. 'b' → logprob: -2.853248357772827
    4. '   ' → logprob: -3.228248357772827
    5. ',' → logprob: -3.353248357772827
    6. ' ' → logprob: -5.103248119354248
    7. ' =' → logprob: -5.603248119354248
    8. ':' → logprob: -5.603248119354248
    9. 'c' → logprob: -5.728248119354248
    10. '<|end|>' → logprob: -5.853248119354248

Token 61: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.026380889117717743
    2. 'b' (adapté à ' b') → logprob: -3.651380777359009
    3. ' c' → logprob: -9.77638053894043
    4. '   ' → logprob: -11.52638053894043
    5. 'c' → logprob: -12.15138053894043
    6. ' ' → logprob: -12.40138053894043
    7. '    ' → logprob: -13.27638053894043
    8. '  ' → logprob: -14.90138053894043
    9. ' ' → logprob: -14.90138053894043
    10. ' б' → logprob: -15.15138053894043

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004291195946279913
    2. ' ,' → logprob: -7.875429153442383
    3. '=' → logprob: -10.375429153442383
    4. ',b' → logprob: -12.000429153442383
    5. '`,' → logprob: -12.750429153442383
    6. ',
' → logprob: -13.750429153442383
    7. '<|end|>' → logprob: -13.875429153442383
    8. '>,' → logprob: -14.000429153442383
    9. '>' → logprob: -14.250429153442383
    10. ' ' → logprob: -14.500429153442383

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.112887904047966
    2. 'c' → logprob: -2.2378878593444824
    3. ' ' → logprob: -9.86288833618164
    4. '	c' → logprob: -12.11288833618164
    5. 'space' → logprob: -13.36288833618164
    6. ' ' → logprob: -13.73788833618164
    7. '    ' → logprob: -14.11288833618164
    8. '<|end|>' → logprob: -14.11288833618164
    9. '"' → logprob: -14.61288833618164
    10. 's' → logprob: -15.11288833618164

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22572343051433563
    2. ' =' → logprob: -1.600723385810852
    3. ',' → logprob: -8.100723266601562
    4. '   ' → logprob: -12.725723266601562
    5. ' ' → logprob: -14.100723266601562
    6. '    ' → logprob: -14.350723266601562
    7. '=
' → logprob: -14.475723266601562
    8. '=

' → logprob: -14.600723266601562
    9. ' ,' → logprob: -15.225723266601562
    10. ' =
' → logprob: -15.475723266601562

Token 65: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.04677214100956917
    2. 'c' → logprob: -3.5467722415924072
    3. ' b' → logprob: -4.171772003173828
    4. 'b' → logprob: -6.546772003173828
    5. ' ' → logprob: -11.046772003173828
    6. ' (' → logprob: -14.671772003173828
    7. ' ' → logprob: -14.796772003173828
    8. '(' → logprob: -15.046772003173828
    9. ''' → logprob: -15.421772003173828
    10. '	c' → logprob: -15.796772003173828

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013675002846866846
    2. 'b' → logprob: -7.376367568969727
    3. ',b' → logprob: -7.626367568969727
    4. ' ,' → logprob: -8.876367568969727
    5. ' b' → logprob: -10.126367568969727
    6. ',
' → logprob: -10.626367568969727
    7. '`,' → logprob: -11.251367568969727
    8. '[' → logprob: -11.876367568969727
    9. '```' → logprob: -11.876367568969727
    10. ' ' → logprob: -12.001367568969727

Token 67: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1269284337759018
    2. ' b' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.626928329467773
    4. '	b' → logprob: -16.751928329467773
    5. ' ' → logprob: -17.876928329467773
    6. ' б' → logprob: -18.251928329467773
    7. 'a' → logprob: -18.376928329467773
    8. 'c' → logprob: -18.876928329467773
    9. '>b' → logprob: -18.876928329467773
    10. ')b' → logprob: -18.876928329467773

Token 68: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02114514447748661
    2. '\' → logprob: -4.896145343780518
    3. 'print' → logprob: -5.021145343780518
    4. '
' → logprob: -5.521145343780518
    5. '<|end|>' → logprob: -7.271145343780518
    6. '\r' → logprob: -7.521145343780518
    7. '```' → logprob: -7.771145343780518
    8. '#' → logprob: -8.27114486694336
    9. ':' → logprob: -8.39614486694336
    10. 'newline' → logprob: -9.27114486694336

Token 69: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2869328558444977
    2. 'print' → logprob: -1.4119328260421753
    3. '\' → logprob: -6.161932945251465
    4. '#' → logprob: -6.286932945251465
    5. '```' → logprob: -7.661932945251465
    6. '
' → logprob: -7.911932945251465
    7. 'p' → logprob: -8.911932945251465
    8. 'n' → logprob: -9.161932945251465
    9. '\r' → logprob: -9.286932945251465
    10. ' 
' → logprob: -9.661932945251465

Token 70: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10078378021717072
    2. '(a' → logprob: -2.3507838249206543
    3. '('' → logprob: -8.350783348083496
    4. '((' → logprob: -9.225783348083496
    5. '("("' → logprob: -9.225783348083496
    6. '(f' → logprob: -9.600783348083496
    7. '("' → logprob: -10.100783348083496
    8. '()' → logprob: -11.100783348083496
    9. '(sorted' → logprob: -11.975783348083496
    10. '(b' → logprob: -12.975783348083496

Token 71: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015401264652609825
    2. ')' → logprob: -4.265401363372803
    3. ' ,' → logprob: -7.265401363372803
    4. ',b' → logprob: -7.640401363372803
    5. ',
' → logprob: -10.015400886535645
    6. ' )' → logprob: -13.015400886535645
    7. ',c' → logprob: -13.515400886535645
    8. '),' → logprob: -13.640400886535645
    9. ',)' → logprob: -13.640400886535645
    10. ',a' → logprob: -13.765400886535645

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38695019483566284
    2. 'b' → logprob: -1.1369502544403076
    3. ' ' → logprob: -9.636950492858887
    4. ')' → logprob: -11.886950492858887
    5. ''' → logprob: -13.011950492858887
    6. '"' → logprob: -13.636950492858887
    7. ' c' → logprob: -13.636950492858887
    8. 'c' → logprob: -13.886950492858887
    9. ')b' → logprob: -14.636950492858887
    10. '<|end|>' → logprob: -15.636950492858887

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17229461669921875
    2. '+' → logprob: -2.4222946166992188
    3. ' +' → logprob: -2.6722946166992188
    4. ' )' → logprob: -8.172294616699219
    5. '+c' → logprob: -8.922294616699219
    6. ' ' → logprob: -12.047294616699219
    7. '+b' → logprob: -12.172294616699219
    8. '+)' → logprob: -12.172294616699219
    9. '+C' → logprob: -12.422294616699219
    10. ')c' → logprob: -12.547294616699219


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 46.48%
Précision adaptée (1ère position): 46.48%
Précision (top 10): 85.92%
================================================================================
