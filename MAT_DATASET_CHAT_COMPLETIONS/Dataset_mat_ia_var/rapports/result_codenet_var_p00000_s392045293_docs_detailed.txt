================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:18:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def afficher_tables_multiplication():
    """
    Affiche les tables de multiplication de 1 à 9 au format 'AxB=C' pour chaque combinaison possible.
    Cette fonction parcourt tous les couples de nombres entiers compris entre 1 et 9 inclus et
    affiche leur produit, sous la forme 'AxB=C'.
    """
    # La boucle parcourt les entiers de 0 à 80 inclus, soit 81 combinaisons (9x9)
    for i in range(81):  # Utilise 'range' au lieu de 'xrange' pour la compatibilité Python 3
        a = i // 9 + 1   # Calcule la première valeur du couple (de 1 à 9)
        b = i % 9 + 1    # Calcule la seconde valeur du couple (de 1 à 9)
        produit = a * b  # Calcule le produit de a et b
        # Affiche le résultat de la multiplication sous la forme 'AxB=C'
        print("{}x{}={}".format(a, b, produit))


# Appel de la fonction pour afficher les tables de multiplication
afficher_tables_multiplication()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' afficher' (ID: 146524)
  → Token d'amorce (pas de prédiction)

Token 2: '_tables' (ID: 88363)
  → Token d'amorce (pas de prédiction)

Token 3: '_m' (ID: 1285)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04890776798129082
    2. '(:' → logprob: -3.04890775680542
    3. '()' → logprob: -8.548908233642578
    4. '(' → logprob: -10.548908233642578
    5. '(_:' → logprob: -10.548908233642578
    6. '():
' → logprob: -10.673908233642578
    7. ' ():' → logprob: -11.048908233642578
    8. ':' → logprob: -11.548908233642578
    9. '(':' → logprob: -12.048908233642578
    10. '(":' → logprob: -12.173908233642578

Token 4: 'ultip' (ID: 22975)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01066327653825283
    2. '(' → logprob: -5.7606635093688965
    3. ':' → logprob: -5.7606635093688965
    4. '()' → logprob: -6.6356635093688965
    5. '():
' → logprob: -7.5106635093688965
    6. 'aison' → logprob: -8.260663032531738
    7. '(a' → logprob: -8.885663032531738
    8. 'ain' → logprob: -8.885663032531738
    9. '_' → logprob: -9.135663032531738
    10. ':def' → logprob: -9.135663032531738

Token 5: 'lication' (ID: 2389)
  Prédit: 'lication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.09809060394763947
    2. 'lic' → logprob: -2.848090648651123
    3. 'lications' → logprob: -3.723090648651123
    4. 'ication' → logprob: -5.598090648651123
    5. 'les' → logprob: -6.473090648651123
    6. 'icates' → logprob: -7.098090648651123
    7. 'li' → logprob: -7.223090648651123
    8. 'ications' → logprob: -7.348090648651123
    9. 'lation' → logprob: -7.473090648651123
    10. 'licate' → logprob: -7.723090648651123

Token 6: '():
' (ID: 8595)
  Prédit: '(:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(:' → logprob: -0.027936533093452454
    2. '():' → logprob: -3.6529364585876465
    3. '(_:' → logprob: -7.1529364585876465
    4. '(' → logprob: -7.6529364585876465
    5. '(::' → logprob: -9.527936935424805
    6. '(`' → logprob: -10.277936935424805
    7. '(*' → logprob: -10.277936935424805
    8. '(...' → logprob: -10.402936935424805
    9. '(':' → logprob: -10.527936935424805
    10. '(:,' → logprob: -10.902936935424805

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016567282378673553
    2. 'pass' → logprob: -4.141567230224609
    3. '```' → logprob: -7.891567230224609
    4. '  ' → logprob: -10.14156723022461
    5. ' pass' → logprob: -10.64156723022461
    6. ':' → logprob: -11.01656723022461
    7. '   ' → logprob: -11.14156723022461
    8. '    ' → logprob: -11.26656723022461
    9. 'Pass' → logprob: -11.39156723022461
    10. '	pass' → logprob: -11.64156723022461

Token 8: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3496335446834564
    2. 'pass' → logprob: -1.2246335744857788
    3. '```' → logprob: -7.099633693695068
    4. 'print' → logprob: -9.22463321685791
    5. '	pass' → logprob: -9.97463321685791
    6. ' pass' → logprob: -10.09963321685791
    7. '  ' → logprob: -10.59963321685791
    8. '   ' → logprob: -10.59963321685791
    9. '    ' → logprob: -10.72463321685791
    10. 'Pass' → logprob: -10.84963321685791

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005710135214030743
    2. '       ' → logprob: -5.880710124969482
    3. 'Aff' → logprob: -6.255710124969482
    4. '"""' → logprob: -7.505710124969482
    5. 'Returns' → logprob: -9.88071060180664
    6. 'Afficher' → logprob: -9.88071060180664
    7. '    ' → logprob: -10.00571060180664
    8. '  ' → logprob: -10.00571060180664
    9. 'Displays' → logprob: -10.25571060180664
    10. 'Retour' → logprob: -10.25571060180664

Token 10: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01967203989624977
    2. '"""' → logprob: -4.64467191696167
    3. 'Aff' (adapté à ' Aff') → logprob: -5.14467191696167
    4. 'aff' → logprob: -5.89467191696167
    5. 'Afficher' → logprob: -8.269672393798828
    6. 'Displays' → logprob: -8.644672393798828
    7. '  ' → logprob: -9.394672393798828
    8. 'Retour' → logprob: -9.519672393798828
    9. 'Calcul' → logprob: -9.644672393798828
    10. 'Cette' → logprob: -9.894672393798828

Token 11: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0038048301357775927
    2. 'ich' → logprob: -6.503804683685303
    3. 'ichage' → logprob: -6.753804683685303
    4. 'ichier' → logprob: -7.128804683685303
    5. 'iche' → logprob: -8.378805160522461
    6. 'ichert' → logprob: -10.128805160522461
    7. ' ich' → logprob: -11.128805160522461
    8. '   ' → logprob: -11.253805160522461
    9. 'ichern' → logprob: -11.378805160522461
    10. 'i' → logprob: -12.378805160522461

Token 12: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6180475354194641
    2. 'les' → logprob: -1.4930474758148193
    3. ' les' → logprob: -1.6180474758148193
    4. 's' → logprob: -4.243047714233398
    5. '  ' → logprob: -5.243047714233398
    6. 'des' → logprob: -5.368047714233398
    7. '_tables' → logprob: -5.743047714233398
    8. 'r' → logprob: -5.993047714233398
    9. '    ' → logprob: -6.118047714233398
    10. ' des' → logprob: -7.118047714233398

Token 13: ' tables' (ID: 16584)
  Prédit: 'tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tables' → logprob: -0.00978867057710886
    2. 'table' → logprob: -5.134788513183594
    3. 'multip' → logprob: -5.759788513183594
    4. ' tables' → logprob: -7.634788513183594
    5. 'n' → logprob: -9.884788513183594
    6. '_tables' → logprob: -10.384788513183594
    7. 'tabl' → logprob: -10.759788513183594
    8. 'Tables' → logprob: -10.759788513183594
    9. 'ta' → logprob: -10.884788513183594
    10. '.tables' → logprob: -11.634788513183594

Token 14: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.03094859980046749
    2. '_de' → logprob: -4.280948638916016
    3. '   ' → logprob: -4.530948638916016
    4. ' de' → logprob: -5.155948638916016
    5. 'multip' → logprob: -10.405948638916016
    6. '  ' → logprob: -10.905948638916016
    7. '       ' → logprob: -11.280948638916016
    8. '    ' → logprob: -11.280948638916016
    9. '_m' → logprob: -11.405948638916016
    10. '_' → logprob: -11.655948638916016

Token 15: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -5.538490950129926e-05
    2. ' multiplication' → logprob: -10.000055313110352
    3. 'mult' → logprob: -12.250055313110352
    4. 'mont' → logprob: -13.625055313110352
    5. 'multi' → logprob: -13.875055313110352
    6. 'Multip' → logprob: -13.875055313110352
    7. '   ' → logprob: -14.000055313110352
    8. 'mutation' → logprob: -14.875055313110352
    9. '  ' → logprob: -15.625055313110352
    10. 'multiple' → logprob: -16.00005531311035

Token 16: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10278449952602386
    2. '"""' → logprob: -2.6027843952178955
    3. ':' → logprob: -4.227784633636475
    4. '"""
' → logprob: -6.227784633636475
    5. '       ' → logprob: -6.477784633636475
    6. 'pour' → logprob: -6.477784633636475
    7. '""' → logprob: -6.727784633636475
    8. 'de' → logprob: -6.977784633636475
    9. '."""' → logprob: -8.352784156799316
    10. 'def' → logprob: -8.352784156799316

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008636081591248512
    2. '0' → logprob: -4.758635997772217
    3. ' ' → logprob: -11.258636474609375
    4. 'de' → logprob: -11.883636474609375
    5. '2' → logprob: -13.758636474609375
    6. '01' → logprob: -16.008636474609375
    7. 'à' → logprob: -16.133636474609375
    8. 'un' → logprob: -16.383636474609375
    9. '-' → logprob: -16.508636474609375
    10. '   ' → logprob: -17.008636474609375

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014174672774970531
    2. '0' → logprob: -4.264174461364746
    3. 'de' → logprob: -11.514174461364746
    4. '2' → logprob: -14.514174461364746
    5. 'un' → logprob: -15.389174461364746
    6. 'à' → logprob: -15.514174461364746
    7. ' ' → logprob: -15.764174461364746
    8. 'l' → logprob: -16.764175415039062
    9. '01' → logprob: -17.139175415039062
    10. ' zéro' → logprob: -17.639175415039062

Token 19: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.014365989714860916
    2. ' à' → logprob: -4.264366149902344
    3. '   ' → logprob: -9.514366149902344
    4. 'jus' → logprob: -9.889366149902344
    5. 'À' → logprob: -10.264366149902344
    6. ''à' → logprob: -11.014366149902344
    7. 'au' → logprob: -11.764366149902344
    8. ' jusqu' → logprob: -11.764366149902344
    9. 'aux' → logprob: -12.514366149902344
    10. '’à' → logprob: -13.389366149902344

Token 20: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08903925120830536
    2. '9' → logprob: -2.4640393257141113
    3. ' ' → logprob: -9.964038848876953
    4. '   ' → logprob: -10.589038848876953
    5. 'n' → logprob: -10.964038848876953
    6. '  ' → logprob: -11.964038848876953
    7. '12' → logprob: -13.964038848876953
    8. '20' → logprob: -13.964038848876953
    9. '100' → logprob: -14.839038848876953
    10. '    ' → logprob: -15.214038848876953

Token 21: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02632351778447628
    2. '9' → logprob: -3.6513235569000244
    3. 'n' → logprob: -10.901323318481445
    4. '100' → logprob: -13.401323318481445
    5. '20' → logprob: -14.276323318481445
    6. ' ten' → logprob: -14.526323318481445
    7. '12' → logprob: -14.526323318481445
    8. 'ten' → logprob: -14.901323318481445
    9. '１０' → logprob: -15.401323318481445
    10. '999' → logprob: -15.651323318481445

Token 22: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036051854491233826
    2. ':' → logprob: -3.4110517501831055
    3. '"""' → logprob: -6.5360517501831055
    4. '":' → logprob: -8.036051750183105
    5. '```' → logprob: -8.286051750183105
    6. '       ' → logprob: -9.286051750183105
    7. '  ' → logprob: -10.161051750183105
    8. '    ' → logprob: -10.286051750183105
    9. '):' → logprob: -10.286051750183105
    10. '""' → logprob: -10.286051750183105

Token 23: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.19445794820785522
    2. 'x' → logprob: -2.9444580078125
    3. 'com' → logprob: -4.4444580078125
    4. 'cours' → logprob: -4.9444580078125
    5. 'jus' → logprob: -5.0694580078125
    6. 'fur' → logprob: -5.0694580078125
    7. 'total' → logprob: -5.1944580078125
    8. 'long' → logprob: -5.1944580078125
    9. 'l' → logprob: -5.1944580078125
    10. '``' → logprob: -5.4444580078125

Token 24: ' '' (ID: 461)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.5138687491416931
    2. '"""' → logprob: -2.138868808746338
    3. '   ' → logprob: -2.888868808746338
    4. 'correct' → logprob: -3.388868808746338
    5. '"""
' → logprob: -3.763868808746338
    6. 'text' → logprob: -4.013868808746338
    7. 'standard' → logprob: -4.263868808746338
    8. 'markdown' → logprob: -4.513868808746338
    9. '""' → logprob: -4.763868808746338
    10. '```' → logprob: -4.763868808746338

Token 25: 'Ax' (ID: 44017)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0486290454864502
    2. '{' → logprob: -1.4236290454864502
    3. 'x' → logprob: -2.04862904548645
    4. 'table' → logprob: -2.42362904548645
    5. '1' → logprob: -2.67362904548645
    6. 'i' → logprob: -4.048628807067871
    7. ''{' → logprob: -4.048628807067871
    8. 'a' → logprob: -4.173628807067871
    9. '<' → logprob: -4.298628807067871
    10. '{i' → logprob: -4.423628807067871

Token 26: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002266828203573823
    2. 'x' → logprob: -6.752266883850098
    3. '=' → logprob: -8.127266883850098
    4. ''' → logprob: -8.377266883850098
    5. '*' → logprob: -9.127266883850098
    6. 'Bx' → logprob: -9.127266883850098
    7. '=B' → logprob: -9.252266883850098
    8. ' =' → logprob: -9.502266883850098
    9. 'A' → logprob: -10.002266883850098
    10. ' B' → logprob: -10.127266883850098

Token 27: '=C' (ID: 93363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2768470048904419
    2. ' =' → logprob: -2.1518468856811523
    3. '=C' → logprob: -2.7768468856811523
    4. '=A' → logprob: -2.7768468856811523
    5. ''' → logprob: -8.151846885681152
    6. '==' → logprob: -8.151846885681152
    7. '='' → logprob: -8.401846885681152
    8. '=B' → logprob: -9.276846885681152
    9. '=D' → logprob: -10.151846885681152
    10. '=>' → logprob: -10.401846885681152

Token 28: ''' (ID: 6)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.9163910150527954
    2. ''' → logprob: -1.4163910150527954
    3. '   ' → logprob: -1.7913910150527954
    4. ''
' → logprob: -2.416390895843506
    5. ''''
' → logprob: -3.041390895843506
    6. '""' → logprob: -4.291390895843506
    7. '"""' → logprob: -4.291390895843506
    8. '\n' → logprob: -4.666390895843506
    9. '"' → logprob: -6.041390895843506
    10. '''' → logprob: -6.166390895843506

Token 29: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01237320713698864
    2. ':' → logprob: -5.262372970581055
    3. '"""' → logprob: -5.887372970581055
    4. '```' → logprob: -6.012372970581055
    5. '       ' → logprob: -6.512372970581055
    6. '  ' → logprob: -9.262372970581055
    7. '    ' → logprob: -9.637372970581055
    8. '""' → logprob: -9.887372970581055
    9. '     ' → logprob: -10.387372970581055
    10. 'for' → logprob: -10.512372970581055

Token 30: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.009245261549949646
    2. 'ch' → logprob: -5.3842453956604
    3. 't' → logprob: -6.1342453956604
    4. '   ' → logprob: -6.5092453956604
    5. ' chaque' → logprob: -7.2592453956604
    6. 'les' → logprob: -9.509244918823242
    7. 'Chaque' → logprob: -9.634244918823242
    8. 'cada' → logprob: -10.134244918823242
    9. 'each' → logprob: -10.884244918823242
    10. 'tout' → logprob: -11.509244918823242

Token 31: ' combinaison' (ID: 165933)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8174244165420532
    2. 'ligne' → logprob: -1.6924244165420532
    3. 'nombre' → logprob: -1.9424244165420532
    4. 'comb' → logprob: -2.1924242973327637
    5. 'val' → logprob: -2.6924242973327637
    6. 'A' → logprob: -3.6924242973327637
    7. 'i' → logprob: -5.192424297332764
    8. 'pair' → logprob: -5.192424297332764
    9. 'case' → logprob: -6.317424297332764
    10. 'a' → logprob: -6.442424297332764

Token 32: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030375944450497627
    2. '       ' → logprob: -4.905375957489014
    3. '"""
' → logprob: -4.905375957489014
    4. '"""' → logprob: -4.905375957489014
    5. ':' → logprob: -5.280375957489014
    6. '""' → logprob: -7.280375957489014
    7. 'de' → logprob: -7.655375957489014
    8. '```' → logprob: -8.030375480651855
    9. '":' → logprob: -8.155375480651855
    10. '``' → logprob: -9.280375480651855

Token 33: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018794644623994827
    2. ':' → logprob: -4.768794536590576
    3. '       ' → logprob: -5.143794536590576
    4. '"""' → logprob: -6.518794536590576
    5. '```' → logprob: -6.768794536590576
    6. '":' → logprob: -7.268794536590576
    7. '"""
' → logprob: -8.018795013427734
    8. '  ' → logprob: -9.143795013427734
    9. ':
' → logprob: -9.393795013427734
    10. '""' → logprob: -9.518795013427734

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010682513006031513
    2. '```' → logprob: -4.635682582855225
    3. 'for' → logprob: -7.385682582855225
    4. '       ' → logprob: -8.885682106018066
    5. '  ' → logprob: -9.760682106018066
    6. 'pass' → logprob: -10.010682106018066
    7. '    ' → logprob: -10.760682106018066
    8. ' ' → logprob: -11.510682106018066
    9. '``' → logprob: -11.760682106018066
    10. '"""' → logprob: -12.135682106018066

Token 35: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039747473783791065
    2. '```' → logprob: -5.753974914550781
    3. '       ' → logprob: -7.878974914550781
    4. 'for' → logprob: -8.503974914550781
    5. '  ' → logprob: -9.628974914550781
    6. 'pass' → logprob: -10.253974914550781
    7. '    ' → logprob: -10.253974914550781
    8. '"""' → logprob: -10.628974914550781
    9. ':' → logprob: -10.878974914550781
    10. ' ' → logprob: -11.628974914550781

Token 36: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3699292838573456
    2. 'cha' → logprob: -1.869929313659668
    3. 'chaine' → logprob: -2.244929313659668
    4. 'description' → logprob: -3.369929313659668
    5. 'doc' → logprob: -5.244929313659668
    6. 'documentation' → logprob: -5.494929313659668
    7. 'function' → logprob: -6.619929313659668
    8. 'string' → logprob: -6.869929313659668
    9. ' chaîne' → logprob: -7.244929313659668
    10. 'ligne' → logprob: -7.619929313659668

Token 37: ' parc' (ID: 22138)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -1.3474009037017822
    2. 'impl' → logprob: -1.3474009037017822
    3. ':' → logprob: -2.0974009037017822
    4. 'dev' → logprob: -2.7224009037017822
    5. 'n' → logprob: -2.9724009037017822
    6. 'pr' → logprob: -3.3474009037017822
    7. 'est' → logprob: -3.8474009037017822
    8. 'per' → logprob: -4.222400665283203
    9. 'ren' → logprob: -4.222400665283203
    10. 'fait' → logprob: -4.472400665283203

Token 38: 'ourt' (ID: 38600)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0412481389939785
    2. 'ourt' → logprob: -3.416248083114624
    3. 'a' → logprob: -6.416248321533203
    4. 'tout' → logprob: -6.416248321533203
    5. 'court' → logprob: -7.166248321533203
    6. 'out' → logprob: -7.916248321533203
    7. 'e' → logprob: -8.041248321533203
    8. 'oura' → logprob: -8.166248321533203
    9. 'tit' → logprob: -8.291248321533203
    10. 'ou' → logprob: -8.541248321533203

Token 39: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.038684628903865814
    2. ' les' → logprob: -3.788684606552124
    3. '   ' → logprob: -4.913684844970703
    4. 'l' → logprob: -6.163684844970703
    5. 'le' → logprob: -6.163684844970703
    6. 'la' → logprob: -6.913684844970703
    7. ' chaque' → logprob: -6.913684844970703
    8. 'des' → logprob: -7.788684844970703
    9. '    ' → logprob: -8.038684844970703
    10. ' le' → logprob: -8.413684844970703

Token 40: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.010222175158560276
    2. '   ' → logprob: -5.1352219581604
    3. ' les' → logprob: -6.1352219581604
    4. 'des' → logprob: -6.2602219581604
    5. '  ' → logprob: -9.385222434997559
    6. '    ' → logprob: -10.385222434997559
    7. 'de' → logprob: -10.635222434997559
    8. 'le' → logprob: -11.510222434997559
    9. '       ' → logprob: -11.635222434997559
    10. 'd' → logprob: -11.635222434997559

Token 41: ' couples' (ID: 29972)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028624780476093292
    2. 'nombre' → logprob: -4.903625011444092
    3. 'ent' → logprob: -5.028625011444092
    4. 'val' → logprob: -5.653625011444092
    5. 'comb' → logprob: -5.903625011444092
    6. 'cou' → logprob: -6.778625011444092
    7. 'ch' → logprob: -7.028625011444092
    8. 'élé' → logprob: -7.028625011444092
    9. 'num' → logprob: -7.278625011444092
    10. 'produ' → logprob: -7.278625011444092

Token 42: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.15300755202770233
    2. '   ' → logprob: -2.0280075073242188
    3. 'for' → logprob: -5.528007507324219
    4. 'd' → logprob: -6.028007507324219
    5. 'pour' → logprob: -6.528007507324219
    6. 'possible' → logprob: -7.528007507324219
    7. '       ' → logprob: -8.028007507324219
    8. ' de' → logprob: -8.278007507324219
    9. 'et' → logprob: -8.403007507324219
    10. 'dans' → logprob: -8.403007507324219

Token 43: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6312514543533325
    2. '(n' → logprob: -2.381251335144043
    3. 'nombre' → logprob: -2.506251335144043
    4. '(' → logprob: -2.756251335144043
    5. 'multip' → logprob: -2.881251335144043
    6. '(a' → logprob: -2.881251335144043
    7. 'val' → logprob: -3.131251335144043
    8. 'a' → logprob: -3.381251335144043
    9. '(i' → logprob: -4.506251335144043
    10. '(A' → logprob: -4.756251335144043

Token 44: ' ent' (ID: 1121)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9485586881637573
    2. '   ' → logprob: -1.4485586881637573
    3. 'pour' → logprob: -1.8235586881637573
    4. 'et' → logprob: -2.448558807373047
    5. 'dans' → logprob: -3.073558807373047
    6. '"""' → logprob: -3.823558807373047
    7. '"""
' → logprob: -4.198558807373047
    8. 'n' → logprob: -5.073558807373047
    9. 'possible' → logprob: -5.698558807373047
    10. 'à' → logprob: -5.698558807373047

Token 45: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.56233171664644e-05
    2. 'ier' → logprob: -10.250055313110352
    3. 'ière' → logprob: -10.875055313110352
    4. 'ières' → logprob: -14.375055313110352
    5. 'i' → logprob: -15.250055313110352
    6. 'ers' → logprob: -16.25005531311035
    7. '``' → logprob: -17.00005531311035
    8. 'itiers' → logprob: -17.12505531311035
    9. '```' → logprob: -17.12505531311035
    10. 'riers' → logprob: -17.25005531311035

Token 46: ' compris' (ID: 49173)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.775786280632019
    2. '   ' → logprob: -1.275786280632019
    3. 'pour' → logprob: -2.5257863998413086
    4. 'dans' → logprob: -3.1507863998413086
    5. ':' → logprob: -3.2757863998413086
    6. 'et' → logprob: -3.7757863998413086
    7. '"""
' → logprob: -4.275786399841309
    8. 'entre' → logprob: -4.275786399841309
    9. '"""' → logprob: -4.775786399841309
    10. 'n' → logprob: -5.025786399841309

Token 47: ' entre' (ID: 3853)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.5467429161071777
    2. 'entre' → logprob: -0.9217429161071777
    3. ' entre' → logprob: -4.546742916107178
    4. 'de' → logprob: -4.671742916107178
    5. '   ' → logprob: -6.046742916107178
    6. 'between' → logprob: -8.046743392944336
    7. ' dans' → logprob: -8.421743392944336
    8. ''entre' → logprob: -8.671743392944336
    9. 'en' → logprob: -8.796743392944336
    10. 'jus' → logprob: -10.296743392944336

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020139472326263785
    2. ' ' → logprob: -8.625201225280762
    3. '(' → logprob: -11.000201225280762
    4. '0' → logprob: -13.375201225280762
    5. '```' → logprob: -14.000201225280762
    6. '   ' → logprob: -14.125201225280762
    7. 'les' → logprob: -14.375201225280762
    8. '2' → logprob: -14.500201225280762
    9. '`' → logprob: -15.375201225280762
    10. 'de' → logprob: -15.375201225280762

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. ' ' → logprob: -17.000001907348633
    4. '0' → logprob: -17.125001907348633
    5. '2' → logprob: -17.625001907348633
    6. '```' → logprob: -18.125001907348633
    7. 'les' → logprob: -18.750001907348633
    8. 'de' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.375001907348633
    10. 'une' → logprob: -19.750001907348633

Token 50: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.03400964289903641
    2. 'à' → logprob: -3.4090096950531006
    3. ' et' → logprob: -8.03400993347168
    4. ' à' → logprob: -11.28400993347168
    5. 'au' → logprob: -12.15900993347168
    6. ':' → logprob: -12.53400993347168
    7. ',' → logprob: -12.65900993347168
    8. 'jus' → logprob: -12.65900993347168
    9. '   ' → logprob: -12.78400993347168
    10. '```' → logprob: -13.78400993347168

Token 51: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.610702363715973e-06
    2. '10' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.625009536743164
    4. ' ' → logprob: -15.875009536743164
    5. '  ' → logprob: -16.000009536743164
    6. '99' → logprob: -16.750009536743164
    7. '999' → logprob: -17.000009536743164
    8. 'nine' → logprob: -17.375009536743164
    9. '```' → logprob: -17.500009536743164
    10. '    ' → logprob: -18.250009536743164

Token 52: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '10' → logprob: -14.000000953674316
    3. 'nine' → logprob: -17.25
    4. '   ' → logprob: -20.125
    5. '  ' → logprob: -20.375
    6. ' ' → logprob: -20.5
    7. '```' → logprob: -20.625
    8. ' neuf' → logprob: -20.75
    9. 'n' → logprob: -21.0
    10. '九' → logprob: -21.75

Token 53: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09174082428216934
    2. ':' → logprob: -2.966740846633911
    3. 'et' → logprob: -3.966740846633911
    4. '.' → logprob: -5.216740608215332
    5. '       ' → logprob: -5.841740608215332
    6. '."""
' → logprob: -6.216740608215332
    7. '"""' → logprob: -6.466740608215332
    8. 'pour' → logprob: -6.591740608215332
    9. 'dans' → logprob: -7.341740608215332
    10. ',' → logprob: -7.341740608215332

Token 54: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12059151381254196
    2. ':' → logprob: -2.620591402053833
    3. '       ' → logprob: -3.870591402053833
    4. '.' → logprob: -4.495591640472412
    5. '"""' → logprob: -5.870591640472412
    6. '."""
' → logprob: -5.995591640472412
    7. '."""' → logprob: -7.245591640472412
    8. 'et' → logprob: -7.370591640472412
    9. '"""
' → logprob: -7.620591640472412
    10. 'pour' → logprob: -8.245591163635254

Token 55: '
' (ID: 198)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.11624957621097565
    2. 'g' → logprob: -3.4912495613098145
    3. 'les' → logprob: -3.4912495613098145
    4. 'ren' → logprob: -3.7412495613098145
    5. ' affiche' → logprob: -5.4912495613098145
    6. 'ret' → logprob: -5.6162495613098145
    7. 'im' → logprob: -5.8662495613098145
    8. '   ' → logprob: -6.1162495613098145
    9. 'impl' → logprob: -6.2412495613098145
    10. 'return' → logprob: -6.9912495613098145

Token 56: '   ' (ID: 271)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.24400848150253296
    2. '   ' → logprob: -1.8690085411071777
    3. 'g' → logprob: -3.6190085411071777
    4. 'ren' → logprob: -4.494008541107178
    5. 'de' → logprob: -4.869008541107178
    6. 'd' → logprob: -6.369008541107178
    7. '       ' → logprob: -6.494008541107178
    8. 'ret' → logprob: -6.494008541107178
    9. 'impl' → logprob: -6.869008541107178
    10. 'im' → logprob: -6.869008541107178

Token 57: ' affiche' (ID: 127479)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.05329205468297005
    2. 'ren' → logprob: -3.8032920360565186
    3. 'g' → logprob: -4.928292274475098
    4. 'les' → logprob: -5.303292274475098
    5. 'ret' → logprob: -5.303292274475098
    6. 'return' → logprob: -5.428292274475098
    7. 'util' → logprob: -6.553292274475098
    8. 'impl' → logprob: -6.803292274475098
    9. 'im' → logprob: -7.053292274475098
    10. ' affiche' → logprob: -7.053292274475098

Token 58: ' leur' (ID: 9853)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.17074593901634216
    2. 'cha' → logprob: -1.9207459688186646
    3. ' chaque' → logprob: -5.420745849609375
    4. '   ' → logprob: -6.295745849609375
    5. 'le' → logprob: -6.795745849609375
    6. ' les' → logprob: -7.045745849609375
    7. 'ch' → logprob: -7.670745849609375
    8. 'la' → logprob: -7.795745849609375
    9. '  ' → logprob: -8.170745849609375
    10. 'Chaque' → logprob: -8.420745849609375

Token 59: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.013853056356310844
    2. 'multip' → logprob: -4.513853073120117
    3. ' produit' → logprob: -6.638853073120117
    4. 'rés' → logprob: -7.138853073120117
    5. 'result' → logprob: -8.138853073120117
    6. 'table' → logprob: -8.263853073120117
    7. 'Produit' → logprob: -10.513853073120117
    8. 'product' → logprob: -10.763853073120117
    9. 'production' → logprob: -10.888853073120117
    10. ' multiplication' → logprob: -11.138853073120117

Token 60: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025076141580939293
    2. ':' → logprob: -4.150075912475586
    3. '"""' → logprob: -5.525075912475586
    4. '.' → logprob: -6.275075912475586
    5. '       ' → logprob: -6.775075912475586
    6. '""' → logprob: -7.775075912475586
    7. '```' → logprob: -8.150075912475586
    8. '."""' → logprob: -8.650075912475586
    9. '"""
' → logprob: -8.775075912475586
    10. '."""
' → logprob: -9.025075912475586

Token 61: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35102930665016174
    2. 'et' → logprob: -1.9760292768478394
    3. 'en' → logprob: -2.601029396057129
    4. 'dans' → logprob: -3.976029396057129
    5. 'avec' → logprob: -4.351029396057129
    6. 'pour' → logprob: -4.851029396057129
    7. '"""' → logprob: -4.851029396057129
    8. 'mais' → logprob: -5.226029396057129
    9. '       ' → logprob: -5.851029396057129
    10. 'y' → logprob: -5.851029396057129

Token 62: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7551031112670898
    2. 'forme' → logprob: -0.7551031112670898
    3. 'le' → logprob: -3.50510311126709
    4. 'format' → logprob: -4.00510311126709
    5. 'form' → logprob: -5.63010311126709
    6. ' forme' → logprob: -6.00510311126709
    7. 'forma' → logprob: -6.50510311126709
    8. 'une' → logprob: -6.88010311126709
    9. 'un' → logprob: -7.13010311126709
    10. 'au' → logprob: -7.38010311126709

Token 63: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.016885098069906235
    2. 'form' → logprob: -5.016885280609131
    3. ' forme' → logprob: -5.016885280609131
    4. 'format' → logprob: -6.516885280609131
    5. 'chaine' → logprob: -7.016885280609131
    6. 'forma' → logprob: -7.391885280609131
    7. 'cha' → logprob: -8.516884803771973
    8. 'string' → logprob: -9.641884803771973
    9. 'ligne' → logprob: -9.766884803771973
    10. 'formes' → logprob: -10.141884803771973

Token 64: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.579054594039917
    2. 'd' → logprob: -1.579054594039917
    3. ''' → logprob: -1.954054594039917
    4. 'de' → logprob: -2.579054594039917
    5. '```' → logprob: -6.204054832458496
    6. '       ' → logprob: -6.329054832458496
    7. 'du' → logprob: -6.329054832458496
    8. '':' → logprob: -6.579054832458496
    9. '"""' → logprob: -6.579054832458496
    10. ':' → logprob: -6.954054832458496

Token 65: 'Ax' (ID: 44017)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16177839040756226
    2. 'Ax' → logprob: -1.911778450012207
    3. ''A' → logprob: -6.536778450012207
    4. ''' → logprob: -9.411778450012207
    5. '1' → logprob: -11.911778450012207
    6. '"A' → logprob: -12.661778450012207
    7. 'Ay' → logprob: -13.161778450012207
    8. 'Ai' → logprob: -13.161778450012207
    9. '`' → logprob: -13.536778450012207
    10. '(A' → logprob: -13.786778450012207

Token 66: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. '=B' → logprob: -16.0
    3. ' B' → logprob: -16.5
    4. ''' → logprob: -17.375
    5. 'Б' → logprob: -19.125
    6. 'x' → logprob: -19.375
    7. 'C' → logprob: -19.5
    8. 'Bx' → logprob: -19.625
    9. '×' → logprob: -20.0
    10. '"B' → logprob: -20.0

Token 67: '=C' (ID: 93363)
  Prédit: '=C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=C' → logprob: -1.4617256056226324e-05
    2. '=' → logprob: -11.500014305114746
    3. '=B' → logprob: -13.250014305114746
    4. '='' → logprob: -13.875014305114746
    5. '=A' → logprob: -14.375014305114746
    6. ' =' → logprob: -14.750014305114746
    7. '=D' → logprob: -15.875014305114746
    8. '=`' → logprob: -16.375015258789062
    9. '=N' → logprob: -16.750015258789062
    10. '=P' → logprob: -17.000015258789062

Token 68: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005427750293165445
    2. '"'' → logprob: -6.755427837371826
    3. '"""' → logprob: -7.005427837371826
    4. '   ' → logprob: -7.380427837371826
    5. ''"' → logprob: -7.630427837371826
    6. '""' → logprob: -7.630427837371826
    7. '''' → logprob: -8.005427360534668
    8. ''''' → logprob: -8.005427360534668
    9. ''.' → logprob: -8.005427360534668
    10. '"' → logprob: -8.130427360534668

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01665627211332321
    2. 'for' → logprob: -4.141656398773193
    3. '```' → logprob: -7.641656398773193
    4. '  ' → logprob: -10.016655921936035
    5. '	for' → logprob: -10.266655921936035
    6. '       ' → logprob: -11.266655921936035
    7. ' for' → logprob: -11.516655921936035
    8. ' ' → logprob: -11.641655921936035
    9. '    
' → logprob: -11.891655921936035
    10. ':' → logprob: -12.391655921936035

Token 70: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034996923059225082
    2. '```' → logprob: -6.253499507904053
    3. 'for' → logprob: -7.378499507904053
    4. 'pass' → logprob: -7.378499507904053
    5. '       ' → logprob: -9.128499984741211
    6. '  ' → logprob: -9.628499984741211
    7. ':' → logprob: -10.253499984741211
    8. '"""' → logprob: -10.503499984741211
    9. 'print' → logprob: -11.128499984741211
    10. '    ' → logprob: -11.253499984741211

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006105354521423578
    2. 'for' → logprob: -5.131105422973633
    3. 'pass' → logprob: -9.381105422973633
    4. '```' → logprob: -9.631105422973633
    5. '  ' → logprob: -11.006105422973633
    6. ' ' → logprob: -13.131105422973633
    7. '	for' → logprob: -13.381105422973633
    8. 'pour' → logprob: -13.756105422973633
    9. '    ' → logprob: -13.881105422973633
    10. ' for' → logprob: -13.881105422973633

Token 72: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020678170025348663
    2. '   ' → logprob: -3.8956782817840576
    3. 'pour' → logprob: -9.270678520202637
    4. 'pass' → logprob: -10.270678520202637
    5. ' for' → logprob: -13.145678520202637
    6. '#' (adapté à ' #') → logprob: -13.520678520202637
    7. 'n' → logprob: -13.520678520202637
    8. '  ' → logprob: -14.645678520202637
    9. 'For' → logprob: -14.895678520202637
    10. 'a' → logprob: -15.270678520202637

Token 73: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18075114488601685
    2. '   ' → logprob: -1.805751085281372
    3. 'pour' → logprob: -7.055751323699951
    4. 'pass' → logprob: -9.680750846862793
    5. 'table' → logprob: -10.805750846862793
    6. '```' → logprob: -10.805750846862793
    7. '#' → logprob: -11.430750846862793
    8. ' for' → logprob: -12.180750846862793
    9. '  ' → logprob: -12.430750846862793
    10. 'print' → logprob: -12.805750846862793

Token 74: ' boucle' (ID: 174211)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3973894715309143
    2. 'ction' → logprob: -2.5223894119262695
    3. 'nge' → logprob: -2.7723894119262695
    4. 'fonction' → logprob: -2.8973894119262695
    5. 'on' → logprob: -3.6473894119262695
    6. 'ng' → logprob: -3.6473894119262695
    7. 'nc' → logprob: -4.2723894119262695
    8. ' fonction' → logprob: -4.3973894119262695
    9. 'mb' → logprob: -4.8973894119262695
    10. '#' → logprob: -5.2723894119262695

Token 75: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015873430529609323
    2. 'pour' → logprob: -6.501587390899658
    3. 'while' → logprob: -10.2515869140625
    4. '   ' → logprob: -10.7515869140625
    5. 'continue' → logprob: -11.8765869140625
    6. ' for' → logprob: -12.2515869140625
    7. 'foreach' → logprob: -12.3765869140625
    8. '_for' → logprob: -12.7515869140625
    9. 'de' → logprob: -13.0015869140625
    10. '`' → logprob: -13.8765869140625

Token 76: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.023815447464585304
    2. 'out' → logprob: -4.148815631866455
    3. 'ou' → logprob: -5.648815631866455
    4. 'oit' → logprob: -6.773815631866455
    5. 'our' → logprob: -7.398815631866455
    6. 'tout' → logprob: -7.523815631866455
    7. 'court' → logprob: -7.648815631866455
    8. 'oura' → logprob: -7.898815631866455
    9. 'oure' → logprob: -8.523815155029297
    10. 't' → logprob: -8.648815155029297

Token 77: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20927152037620544
    2. '   ' → logprob: -2.0842714309692383
    3. 'les' → logprob: -3.2092714309692383
    4. 'pour' → logprob: -4.084271430969238
    5. 'range' → logprob: -5.709271430969238
    6. 't' → logprob: -6.709271430969238
    7. 'de' → logprob: -7.334271430969238
    8. 'from' → logprob: -7.959271430969238
    9. ' les' → logprob: -8.459271430969238
    10. '       ' → logprob: -8.584271430969238

Token 78: ' ent' (ID: 1121)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06158127635717392
    2. 'cou' → logprob: -3.5615813732147217
    3. 'nombre' → logprob: -3.8115813732147217
    4. 'for' → logprob: -4.936581134796143
    5. 'pour' → logprob: -7.811581134796143
    6. 'val' → logprob: -8.1865816116333
    7. 'de' → logprob: -8.5615816116333
    8. 'num' → logprob: -8.6865816116333
    9. 'comb' → logprob: -8.8115816116333
    10. 'ranges' → logprob: -9.3115816116333

Token 79: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001834037946537137
    2. 'ières' → logprob: -6.501833915710449
    3. 'ier' → logprob: -8.37683391571045
    4. 'ière' → logprob: -9.62683391571045
    5. 'ités' → logprob: -11.00183391571045
    6. 'i' → logprob: -12.50183391571045
    7. 'ers' → logprob: -12.87683391571045
    8. 'riers' → logprob: -12.87683391571045
    9. 'ires' → logprob: -13.25183391571045
    10. 'ieres' → logprob: -13.37683391571045

Token 80: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1293998658657074
    2. 'de' → logprob: -3.1293997764587402
    3. 'pour' → logprob: -3.5043997764587402
    4. '   ' → logprob: -3.7543997764587402
    5. 'from' → logprob: -3.7543997764587402
    6. '1' → logprob: -7.62939977645874
    7. 'entre' → logprob: -9.129400253295898
    8. '#' → logprob: -10.379400253295898
    9. 'dans' → logprob: -11.129400253295898
    10. 'range' → logprob: -11.254400253295898

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007873523863963783
    2. 'range' → logprob: -7.250787258148193
    3. '   ' → logprob: -9.625787734985352
    4. ' ' → logprob: -11.625787734985352
    5. 'for' → logprob: -13.500787734985352
    6. '  ' → logprob: -14.250787734985352
    7. ' range' → logprob: -15.000787734985352
    8. '    ' → logprob: -17.00078773498535
    9. '0' → logprob: -17.87578773498535
    10. '2' → logprob: -17.87578773498535

Token 82: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01894134096801281
    2. 'range' → logprob: -4.018941402435303
    3. 'for' → logprob: -7.143941402435303
    4. ' range' → logprob: -14.268940925598145
    5. '   ' → logprob: -14.393940925598145
    6. 'ranges' → logprob: -16.51894187927246
    7. '１' → logprob: -16.76894187927246
    8. ' ' → logprob: -16.89394187927246
    9. '_range' → logprob: -17.14394187927246
    10. 'from' → logprob: -17.14394187927246

Token 83: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.010216157883405685
    2. '   ' → logprob: -5.510216236114502
    3. ' à' → logprob: -5.760216236114502
    4. '1' → logprob: -5.885216236114502
    5. 'a' → logprob: -9.885215759277344
    6. ''à' → logprob: -10.385215759277344
    7. 'au' → logprob: -10.635215759277344
    8. 'À' → logprob: -11.260215759277344
    9. 'de' → logprob: -11.885215759277344
    10. 'to' → logprob: -12.010215759277344

Token 84: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.47416582703590393
    2. '9' → logprob: -0.9741657972335815
    3. '1' → logprob: -9.849165916442871
    4. '10' → logprob: -10.599165916442871
    5. '   ' → logprob: -11.849165916442871
    6. ' ' → logprob: -13.599165916442871
    7. '7' → logprob: -13.849165916442871
    8. '  ' → logprob: -14.474165916442871
    9. '2' → logprob: -15.349165916442871
    10. 'def' → logprob: -15.349165916442871

Token 85: '80' (ID: 2241)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04861779510974884
    2. '8' → logprob: -3.0486178398132324
    3. '10' → logprob: -10.423617362976074
    4. '1' → logprob: -14.923617362976074
    5. 'nine' → logprob: -15.298617362976074
    6. '7' → logprob: -16.04861831665039
    7. 'n' → logprob: -17.67361831665039
    8. 'def' → logprob: -18.79861831665039
    9. '11' → logprob: -18.79861831665039
    10. '   ' → logprob: -18.79861831665039

Token 86: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005266245920211077
    2. 'for' → logprob: -5.380266189575195
    3. '```' → logprob: -8.005266189575195
    4. '#' → logprob: -8.630266189575195
    5. '       ' → logprob: -10.130266189575195
    6. 'pour' → logprob: -10.630266189575195
    7. '  ' → logprob: -10.880266189575195
    8. '    ' → logprob: -11.255266189575195
    9. '    
' → logprob: -12.005266189575195
    10. '0' → logprob: -12.380266189575195

Token 87: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002043913584202528
    2. '```' → logprob: -6.752043724060059
    3. 'for' → logprob: -7.377043724060059
    4. '#' → logprob: -9.502043724060059
    5. '       ' → logprob: -9.627043724060059
    6. '  ' → logprob: -10.752043724060059
    7. '    ' → logprob: -11.002043724060059
    8. '``' → logprob: -11.502043724060059
    9. 'pour' → logprob: -11.502043724060059
    10. '    
' → logprob: -11.752043724060059

Token 88: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17870347201824188
    2. 'pour' → logprob: -2.428703546524048
    3. 'for' → logprob: -3.428703546524048
    4. '       ' → logprob: -4.428703308105469
    5. 'la' → logprob: -4.928703308105469
    6. 'en' → logprob: -5.303703308105469
    7. '#' → logprob: -5.803703308105469
    8. '1' → logprob: -6.053703308105469
    9. 'par' → logprob: -6.303703308105469
    10. '    ' → logprob: -6.303703308105469

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3124072849750519
    2. '9' → logprob: -1.4374072551727295
    3. 'les' → logprob: -4.312407493591309
    4. 'de' → logprob: -4.562407493591309
    5. '0' → logprob: -5.812407493591309
    6. '   ' → logprob: -6.687407493591309
    7. '8' → logprob: -7.812407493591309
    8. '99' → logprob: -8.437407493591309
    9. ' ' → logprob: -8.562407493591309
    10. '10' → logprob: -8.562407493591309

Token 90: '81' (ID: 9989)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3094916343688965
    2. '9' → logprob: -1.4344916343688965
    3. '0' → logprob: -4.1844916343688965
    4. 'les' → logprob: -4.8094916343688965
    5. '8' → logprob: -6.3094916343688965
    6. 'pour' → logprob: -7.8094916343688965
    7. '81' → logprob: -7.8094916343688965
    8. '10' → logprob: -8.059492111206055
    9. 'de' → logprob: -8.059492111206055
    10. '80' → logprob: -8.434492111206055

Token 91: ' comb' (ID: 4134)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7469733953475952
    2. '   ' → logprob: -1.6219733953475952
    3. 'pour' → logprob: -2.2469735145568848
    4. ':' → logprob: -3.3719735145568848
    5. 'de' → logprob: -3.7469735145568848
    6. '#' → logprob: -3.7469735145568848
    7. 'def' → logprob: -4.121973514556885
    8. 'n' → logprob: -4.246973514556885
    9. 'range' → logprob: -4.371973514556885
    10. 'int' → logprob: -4.746973514556885

Token 92: 'inais' (ID: 42744)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.06293012946844101
    2. 'lets' → logprob: -3.062930107116699
    3. 'let' → logprob: -4.437930107116699
    4. 'le' → logprob: -7.187930107116699
    5. 'l' → logprob: -7.437930107116699
    6. 'lements' → logprob: -7.937930107116699
    7. 'inais' → logprob: -8.5629301071167
    8. 'lés' → logprob: -8.9379301071167
    9. 'inations' → logprob: -9.6879301071167
    10. 'letes' → logprob: -9.9379301071167

Token 93: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.014605440199375153
    2. 'on' → logprob: -4.764605522155762
    3. 'es' → logprob: -5.389605522155762
    4. 'sons' → logprob: -7.264605522155762
    5. 'onnes' → logprob: -8.264605522155762
    6. 'son' → logprob: -9.139605522155762
    7. 'les' → logprob: -9.514605522155762
    8. 'ns' → logprob: -9.639605522155762
    9. '   ' → logprob: -10.639605522155762
    10. 'onn' → logprob: -10.639605522155762

Token 94: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007823926396667957
    2. 'for' → logprob: -4.882823944091797
    3. 'pour' → logprob: -9.132823944091797
    4. 'def' → logprob: -10.757823944091797
    5. 'de' → logprob: -10.882823944091797
    6. '       ' → logprob: -11.132823944091797
    7. '```' → logprob: -11.507823944091797
    8. '    
' → logprob: -11.507823944091797
    9. '    ' → logprob: -11.632823944091797
    10. '  ' → logprob: -11.757823944091797

Token 95: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26683229207992554
    2. '9' → logprob: -2.3918323516845703
    3. 'pour' → logprob: -2.7668323516845703
    4. '0' → logprob: -3.0168323516845703
    5. 'de' → logprob: -4.64183235168457
    6. '(' → logprob: -5.26683235168457
    7. '81' → logprob: -5.51683235168457
    8. 'les' → logprob: -5.89183235168457
    9. 'for' → logprob: -7.01683235168457
    10. '91' → logprob: -7.26683235168457

Token 96: 'x' (ID: 87)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3713037967681885
    2. 'x' → logprob: -1.3713037967681885
    3. ' *' → logprob: -4.246303558349609
    4. '×' → logprob: -4.371303558349609
    5. ')' → logprob: -4.871303558349609
    6. '   ' → logprob: -4.996303558349609
    7. 'de' → logprob: -5.746303558349609
    8. 'n' → logprob: -6.746303558349609
    9. '+' → logprob: -6.871303558349609
    10. '\' → logprob: -6.996303558349609

Token 97: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.123899558791891e-05
    2. '*' → logprob: -11.00007152557373
    3. 'x' → logprob: -11.12507152557373
    4. '81' → logprob: -11.37507152557373
    5. 'A' → logprob: -11.62507152557373
    6. '8' → logprob: -11.87507152557373
    7. '1' → logprob: -12.50007152557373
    8. '×' → logprob: -13.12507152557373
    9. '\' → logprob: -14.00007152557373
    10. '10' → logprob: -14.50007152557373

Token 98: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.18669740855693817
    2. ')' → logprob: -2.311697483062744
    3. '   ' → logprob: -2.936697483062744
    4. ').
' → logprob: -4.686697483062744
    5. ')).' → logprob: -6.436697483062744
    6. '+' → logprob: -6.811697483062744
    7. '    ' → logprob: -7.186697483062744
    8. ')
' → logprob: -7.686697483062744
    9. '       ' → logprob: -7.686697483062744
    10. ').

' → logprob: -7.811697483062744

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006728514563292265
    2. 'for' → logprob: -5.006728649139404
    3. '```' → logprob: -12.256728172302246
    4. '       ' → logprob: -13.131728172302246
    5. '  ' → logprob: -13.256728172302246
    6. '	for' → logprob: -13.381728172302246
    7. '    
' → logprob: -13.631728172302246
    8. '    ' → logprob: -14.131728172302246
    9. ' for' → logprob: -14.381728172302246
    10. ' ' → logprob: -15.256728172302246

Token 100: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.043269671499729156
    2. '   ' → logprob: -3.168269634246826
    3. 'pour' → logprob: -8.293270111083984
    4. '#' → logprob: -11.668270111083984
    5. '```' → logprob: -12.293270111083984
    6. ' for' → logprob: -13.668270111083984
    7. 'while' → logprob: -14.043270111083984
    8. 'range' → logprob: -14.543270111083984
    9. '``' → logprob: -14.918270111083984
    10. '	for' → logprob: -14.918270111083984

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2211884707212448
    2. ' range' → logprob: -2.221188545227051
    3. 'range' → logprob: -2.971188545227051
    4. ' ' → logprob: -3.721188545227051
    5. ' in' → logprob: -5.346188545227051
    6. 'i' → logprob: -5.471188545227051
    7. '   ' → logprob: -6.346188545227051
    8. ' x' → logprob: -6.971188545227051
    9. 'in' → logprob: -7.096188545227051
    10. '    ' → logprob: -7.846188545227051

Token 102: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.013713023625314236
    2. ' in' → logprob: -4.3887128829956055
    3. 'range' → logprob: -6.7637128829956055
    4. ':' → logprob: -11.263712882995605
    5. '   ' → logprob: -11.388712882995605
    6. ' range' → logprob: -12.013712882995605
    7. 'for' → logprob: -12.388712882995605
    8. 'def' → logprob: -13.138712882995605
    9. 'from' → logprob: -13.263712882995605
    10. '_in' → logprob: -13.513712882995605

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004309076175559312
    2. ' range' → logprob: -7.750431060791016
    3. '	range' → logprob: -16.250431060791016
    4. '(range' → logprob: -16.875431060791016
    5. 'rang' → logprob: -17.500431060791016
    6. '.range' → logprob: -18.125431060791016
    7. '_range' → logprob: -18.750431060791016
    8. 'Range' → logprob: -19.500431060791016
    9. '范围' → logprob: -19.500431060791016
    10. 'ranges' → logprob: -21.000431060791016

Token 104: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.672236824873835e-05
    2. '(len' → logprob: -9.750076293945312
    3. '(range' → logprob: -12.500076293945312
    4. '((' → logprob: -13.000076293945312
    5. '(:' → logprob: -13.250076293945312
    6. '（' → logprob: -13.750076293945312
    7. '(`' → logprob: -13.750076293945312
    8. '(int' → logprob: -13.875076293945312
    9. '(n' → logprob: -14.250076293945312
    10. ' (' → logprob: -14.250076293945312

Token 105: '81' (ID: 9989)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023805787786841393
    2. '9' → logprob: -3.773805856704712
    3. '10' → logprob: -7.648805618286133
    4. '0' → logprob: -9.523805618286133
    5. '(' → logprob: -11.523805618286133
    6. '81' → logprob: -15.148805618286133
    7. '11' → logprob: -15.398805618286133
    8. '91' → logprob: -16.273805618286133
    9. ' ' → logprob: -17.523805618286133
    10. '   ' → logprob: -17.523805618286133

Token 106: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004146661143749952
    2. '):
' → logprob: -5.504146575927734
    3. ')):' → logprob: -10.504146575927734
    4. '):

' → logprob: -10.754146575927734
    5. ')' → logprob: -11.379146575927734
    6. '):
' → logprob: -12.504146575927734
    7. '   ' → logprob: -12.879146575927734
    8. ')):
' → logprob: -14.629146575927734
    9. ')：' → logprob: -15.129146575927734
    10. ':' → logprob: -15.879146575927734

Token 107: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1275067925453186
    2. '   ' → logprob: -2.127506732940674
    3. 'for' → logprob: -7.502506732940674
    4. 'print' → logprob: -12.127507209777832
    5. '     ' → logprob: -12.127507209777832
    6. '      ' → logprob: -13.002507209777832
    7. '```' → logprob: -13.002507209777832
    8. '    ' → logprob: -13.002507209777832
    9. '  ' → logprob: -13.252507209777832
    10. '0' → logprob: -13.377507209777832

Token 108: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01758904755115509
    2. '       ' → logprob: -4.642589092254639
    3. 'for' → logprob: -4.892589092254639
    4. 'if' → logprob: -8.76758861541748
    5. 'print' → logprob: -9.39258861541748
    6. '  ' → logprob: -11.51758861541748
    7. '0' → logprob: -11.64258861541748
    8. 'pass' → logprob: -11.89258861541748
    9. 'i' → logprob: -12.14258861541748
    10. '    ' → logprob: -12.26758861541748

Token 109: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01797046884894371
    2. '   ' → logprob: -4.142970561981201
    3. 'range' → logprob: -6.517970561981201
    4. '       ' → logprob: -8.767970085144043
    5. '0' → logprob: -9.267970085144043
    6. 'if' → logprob: -9.517970085144043
    7. '#' → logprob: -10.767970085144043
    8. 'print' → logprob: -10.892970085144043
    9. 'from' → logprob: -10.892970085144043
    10. 'i' → logprob: -11.017970085144043

Token 110: 'ise' (ID: 1096)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.09474266320466995
    2. 'ise' → logprob: -2.594742774963379
    3. 'isez' → logprob: -4.344742774963379
    4. 'isant' → logprob: -7.094742774963379
    5. 'isation' → logprob: -7.469742774963379
    6. 'isé' → logprob: -7.469742774963379
    7. 'isateur' → logprob: -8.094742774963379
    8. 'e' → logprob: -8.094742774963379
    9. 'is' → logprob: -9.094742774963379
    10. 'iseur' → logprob: -11.344742774963379

Token 111: ' '' (ID: 461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.303866446018219
    2. 'i' → logprob: -2.928866386413574
    3. '   ' → logprob: -2.928866386413574
    4. '`' → logprob: -3.053866386413574
    5. 'un' → logprob: -3.303866386413574
    6. 'la' → logprob: -3.928866386413574
    7. 'les' → logprob: -3.928866386413574
    8. 'le' → logprob: -5.178866386413574
    9. '  ' → logprob: -5.678866386413574
    10. 'une' → logprob: -5.803866386413574

Token 112: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01026866864413023
    2. 'for' → logprob: -4.885268688201904
    3. 'i' → logprob: -6.635268688201904
    4. '1' → logprob: -7.885268688201904
    5. '0' → logprob: -8.135268211364746
    6. '   ' → logprob: -8.510268211364746
    7. 'enumer' → logprob: -9.385268211364746
    8. '(' → logprob: -9.760268211364746
    9. '(range' → logprob: -9.760268211364746
    10. 'div' → logprob: -10.260268211364746

Token 113: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.153795766294934e-06
    2. '(len' → logprob: -12.250005722045898
    3. '(range' → logprob: -13.625005722045898
    4. '(i' → logprob: -17.8750057220459
    5. '(min' → logprob: -18.3750057220459
    6. '(max' → logprob: -18.7500057220459
    7. '(num' → logprob: -19.1250057220459
    8. '(int' → logprob: -19.6250057220459
    9. '```' → logprob: -19.6250057220459
    10. '(re' → logprob: -19.7500057220459

Token 114: ' au' (ID: 2791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8280329704284668
    2. '   ' → logprob: -1.4530329704284668
    3. '       ' → logprob: -2.453032970428467
    4. 'for' → logprob: -2.953032970428467
    5. '               ' → logprob: -3.203032970428467
    6. 'range' → logprob: -3.203032970428467
    7. '(range' → logprob: -3.328032970428467
    8. ':' → logprob: -3.453032970428467
    9. 'pour' → logprob: -4.328032970428467
    10. '           ' → logprob: -4.703032970428467

Token 115: ' lieu' (ID: 23979)
  Prédit: 'lie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lie' → logprob: -0.07670646160840988
    2. '#' → logprob: -3.9517064094543457
    3. 'place' → logprob: -3.9517064094543457
    4. ' lieu' → logprob: -4.201706409454346
    5. 'dé' → logprob: -5.326706409454346
    6. 'de' → logprob: -5.701706409454346
    7. 'in' → logprob: -6.326706409454346
    8. 'pour' → logprob: -6.701706409454346
    9. 'def' → logprob: -6.951706409454346
    10. 'format' → logprob: -6.951706409454346

Token 116: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.10770870745182037
    2. '   ' → logprob: -2.357708692550659
    3. 'of' → logprob: -5.107708930969238
    4. ' de' → logprob: -7.232708930969238
    5. 'd' → logprob: -8.107708930969238
    6. '       ' → logprob: -8.482708930969238
    7. 'du' → logprob: -9.732708930969238
    8. 'def' → logprob: -10.607708930969238
    9. '    ' → logprob: -10.732708930969238
    10. ' of' → logprob: -10.982708930969238

Token 117: ' '' (ID: 461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011808603449026123
    2. '`' → logprob: -9.500118255615234
    3. '(range' → logprob: -10.500118255615234
    4. ' range' → logprob: -11.875118255615234
    5. '   ' → logprob: -12.000118255615234
    6. '```' → logprob: -14.250118255615234
    7. '	range' → logprob: -14.625118255615234
    8. ' ' → logprob: -15.125118255615234
    9. '``' → logprob: -15.250118255615234
    10. '  ' → logprob: -15.625118255615234

Token 118: 'x' (ID: 87)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005579621996730566
    2. 'for' → logprob: -5.255579471588135
    3. '(' → logprob: -8.880579948425293
    4. '(range' → logprob: -9.255579948425293
    5. '9' → logprob: -10.755579948425293
    6. 'product' → logprob: -11.380579948425293
    7. '90' → logprob: -11.630579948425293
    8. 'len' → logprob: -11.880579948425293
    9. '81' → logprob: -12.005579948425293
    10. 'enumer' → logprob: -12.005579948425293

Token 119: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0708593875169754
    2. 'for' → logprob: -4.195859432220459
    3. '9' → logprob: -4.320859432220459
    4. '*' → logprob: -4.445859432220459
    5. 'in' → logprob: -4.445859432220459
    6. 'ange' → logprob: -5.070859432220459
    7. '   ' → logprob: -5.320859432220459
    8. ' in' → logprob: -7.070859432220459
    9. 'x' → logprob: -7.320859432220459
    10. '  ' → logprob: -7.445859432220459

Token 120: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.830590009689331
    2. ''):' → logprob: -1.205590009689331
    3. ''' → logprob: -2.205590009689331
    4. '(' → logprob: -3.205590009689331
    5. '):' → logprob: -3.455590009689331
    6. '       ' → logprob: -4.08059024810791
    7. '(':' → logprob: -4.33059024810791
    8. '               ' → logprob: -4.33059024810791
    9. '':' → logprob: -4.45559024810791
    10. '()' → logprob: -4.83059024810791

Token 121: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47676339745521545
    2. '       ' → logprob: -0.9767633676528931
    3. 'for' → logprob: -5.9767632484436035
    4. '     ' → logprob: -10.101763725280762
    5. ':' → logprob: -10.601763725280762
    6. '    ' → logprob: -10.726763725280762
    7. '      ' → logprob: -11.226763725280762
    8. '  ' → logprob: -11.476763725280762
    9. '           ' → logprob: -11.726763725280762
    10. '        ' → logprob: -11.851763725280762

Token 122: ' la' (ID: 557)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.3037661612033844
    2. 'python' → logprob: -2.0537662506103516
    3. 'les' → logprob: -2.9287662506103516
    4. 'la' → logprob: -3.0537662506103516
    5. ' Python' → logprob: -4.553766250610352
    6. 'le' → logprob: -4.553766250610352
    7. 'compat' → logprob: -6.053766250610352
    8. 'l' → logprob: -6.553766250610352
    9. 'compatible' → logprob: -7.178766250610352
    10. '   ' → logprob: -7.303766250610352

Token 123: ' compat' (ID: 15407)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -1.1195424795150757
    2. 'Python' → logprob: -1.2445424795150757
    3. 'bou' → logprob: -1.7445424795150757
    4. 'compat' → logprob: -2.3695425987243652
    5. 'loop' → logprob: -3.6195425987243652
    6. 'version' → logprob: -4.244542598724365
    7. 'fonction' → logprob: -4.244542598724365
    8. 'compatible' → logprob: -4.494542598724365
    9. ' boucle' → logprob: -4.744542598724365
    10. 'ligne' → logprob: -5.619542598724365

Token 124: 'ibilité' (ID: 44186)
  Prédit: 'ibilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilité' → logprob: -0.0005370667786337435
    2. 'abilité' → logprob: -8.000536918640137
    3. 'ibil' → logprob: -9.250536918640137
    4. 'bil' → logprob: -10.500536918640137
    5. 'ib' → logprob: -10.875536918640137
    6. 'ilité' → logprob: -10.875536918640137
    7. 'é' → logprob: -11.625536918640137
    8. 'ibilità' → logprob: -11.875536918640137
    9. 'ibl' → logprob: -12.500536918640137
    10. 'ion' → logprob: -12.875536918640137

Token 125: ' Python' (ID: 26534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06688963621854782
    2. 'avec' → logprob: -3.316889524459839
    3. '       ' → logprob: -3.941889524459839
    4. '(' → logprob: -6.441889762878418
    5. 'de' → logprob: -6.691889762878418
    6. 'range' → logprob: -7.066889762878418
    7. '    ' → logprob: -7.191889762878418
    8. ':' → logprob: -7.441889762878418
    9. 'def' → logprob: -7.566889762878418
    10. '     ' → logprob: -7.941889762878418

Token 126: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07903861254453659
    2. '2' → logprob: -2.829038619995117
    3. '   ' → logprob: -4.454038619995117
    4. 'def' → logprob: -5.329038619995117
    5. '```' → logprob: -8.704038619995117
    6. 'print' → logprob: -8.954038619995117
    7. '       ' → logprob: -10.454038619995117
    8. 'import' → logprob: -11.079038619995117
    9. '  ' → logprob: -11.079038619995117
    10. '     ' → logprob: -11.204038619995117

Token 127: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013301216531544924
    2. '2' → logprob: -6.6263298988342285
    3. 'print' → logprob: -13.251330375671387
    4. 'def' → logprob: -13.501330375671387
    5. 'version' → logprob: -14.751330375671387
    6. '```' → logprob: -14.751330375671387
    7. 'range' → logprob: -15.751330375671387
    8. '   ' → logprob: -16.50132942199707
    9. 'for' → logprob: -17.00132942199707
    10. 'import' → logprob: -17.75132942199707

Token 128: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026363354176282883
    2. '   ' → logprob: -3.6513633728027344
    3. 'for' → logprob: -10.276363372802734
    4. '     ' → logprob: -11.651363372802734
    5. '      ' → logprob: -11.776363372802734
    6. '        ' → logprob: -12.401363372802734
    7. '    ' → logprob: -12.776363372802734
    8. '           ' → logprob: -12.776363372802734
    9. '  ' → logprob: -14.401363372802734
    10. '        
' → logprob: -14.901363372802734

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043472214019857347
    2. '   ' → logprob: -7.750434875488281
    3. '```' → logprob: -13.750434875488281
    4. '      ' → logprob: -14.000434875488281
    5. '     ' → logprob: -14.125434875488281
    6. '           ' → logprob: -14.625434875488281
    7. '        ' → logprob: -15.000434875488281
    8. 'for' → logprob: -15.000434875488281
    9. '    ' → logprob: -16.25043487548828
    10. '``' → logprob: -16.62543487548828

Token 130: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015118570998311043
    2. 'i' → logprob: -4.765118598937988
    3. '           ' → logprob: -5.390118598937988
    4. '   ' → logprob: -7.015118598937988
    5. 'for' → logprob: -7.765118598937988
    6. 'a' (adapté à ' a') → logprob: -8.265118598937988
    7. 'if' → logprob: -8.640118598937988
    8. 'A' → logprob: -10.140118598937988
    9. 'x' → logprob: -10.265118598937988
    10. 'j' → logprob: -10.890118598937988

Token 131: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1437486708164215
    2. '=' → logprob: -2.7687487602233887
    3. '        ' → logprob: -4.018748760223389
    4. '   ' → logprob: -4.643748760223389
    5. ' =' → logprob: -4.768748760223389
    6. 'l' → logprob: -4.768748760223389
    7. '           ' → logprob: -5.518748760223389
    8. 'a' → logprob: -5.768748760223389
    9. '         ' → logprob: -5.893748760223389
    10. ',' → logprob: -5.893748760223389

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012130453251302242
    2. '(i' → logprob: -9.375121116638184
    3. ' i' → logprob: -10.375121116638184
    4. '   ' → logprob: -12.250121116638184
    5. '       ' → logprob: -14.750121116638184
    6. '	i' → logprob: -17.1251220703125
    7. '0' → logprob: -17.3751220703125
    8. ' ' → logprob: -17.3751220703125
    9. '  ' → logprob: -17.6251220703125
    10. '1' → logprob: -18.0001220703125

Token 133: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2519932985305786
    2. ' //' → logprob: -1.5019932985305786
    3. ' %' → logprob: -10.126993179321289
    4. '%' → logprob: -10.876993179321289
    5. 'div' → logprob: -12.251993179321289
    6. '   ' → logprob: -15.626993179321289
    7. ' ' → logprob: -16.12699317932129
    8. '  ' → logprob: -16.75199317932129
    9. '//=' → logprob: -17.00199317932129
    10. '#' → logprob: -17.62699317932129

Token 134: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '   ' → logprob: -17.5
    4. 'nine' → logprob: -17.625
    5. '  ' → logprob: -18.125
    6. '8' → logprob: -18.5
    7. ' nine' → logprob: -18.625
    8. 'Nine' → logprob: -19.25
    9. '九' → logprob: -19.375
    10. ' Nine' → logprob: -19.625

Token 135: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '10' → logprob: -17.0
    3. 'nine' → logprob: -18.125
    4. ' ' → logprob: -19.75
    5. '3' → logprob: -20.0
    6. '1' → logprob: -20.5
    7. '8' → logprob: -20.625
    8. 'Nine' → logprob: -21.0
    9. ' nine' → logprob: -21.25
    10. '(' → logprob: -21.5

Token 136: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.822646693966817e-06
    2. '        ' → logprob: -13.125007629394531
    3. '           ' → logprob: -13.250007629394531
    4. '   ' → logprob: -13.250007629394531
    5. '      ' → logprob: -13.500007629394531
    6. '     ' → logprob: -14.250007629394531
    7. '         ' → logprob: -15.750007629394531
    8. '        
' → logprob: -16.75000762939453
    9. '    ' → logprob: -17.00000762939453
    10. '               ' → logprob: -18.12500762939453

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '0' → logprob: -20.0
    4. '   ' → logprob: -21.75
    5. '2' → logprob: -23.125
    6. '１' → logprob: -24.125
    7. '  ' → logprob: -26.125
    8. '۱' → logprob: -26.125
    9. '       ' → logprob: -26.5
    10. '१' → logprob: -26.875

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -22.125
    3. '0' → logprob: -22.75
    4. '2' → logprob: -23.75
    5. '１' → logprob: -25.75
    6. '3' → logprob: -27.875
    7. '   ' → logprob: -27.875
    8. '۱' → logprob: -28.125
    9. '१' → logprob: -28.625
    10. '01' → logprob: -28.75

Token 139: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -12.750003814697266
    3. '      ' → logprob: -14.625003814697266
    4. '           ' → logprob: -14.875003814697266
    5. '     ' → logprob: -15.500003814697266
    6. '        ' → logprob: -15.625003814697266
    7. '        
' → logprob: -16.875003814697266
    8. 'a' → logprob: -16.875003814697266
    9. '```' → logprob: -17.000003814697266
    10. '    ' → logprob: -17.875003814697266

Token 140: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00497223949059844
    2. 'a' → logprob: -6.004972457885742
    3. 'b' → logprob: -6.004972457885742
    4. '   ' → logprob: -11.129972457885742
    5. '           ' → logprob: -12.504972457885742
    6. '      ' → logprob: -12.879972457885742
    7. '     ' → logprob: -13.129972457885742
    8. '        ' → logprob: -13.379972457885742
    9. '```' → logprob: -13.879972457885742
    10. 'c' → logprob: -14.629972457885742

Token 141: ' Cal' (ID: 4453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010234798304736614
    2. 'b' → logprob: -4.760234832763672
    3. '       ' → logprob: -7.135234832763672
    4. '   ' → logprob: -7.760234832763672
    5. 'i' → logprob: -8.635234832763672
    6. '1' → logprob: -9.635234832763672
    7. '(a' → logprob: -9.760234832763672
    8. '```' → logprob: -10.260234832763672
    9. '  ' → logprob: -11.760234832763672
    10. '        ' → logprob: -11.760234832763672

Token 142: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.008695880882441998
    2. 'cule' → logprob: -5.25869607925415
    3. 'c' → logprob: -5.88369607925415
    4. 'cu' → logprob: -8.633695602416992
    5. 'cula' → logprob: -9.008695602416992
    6. 'culate' → logprob: -9.508695602416992
    7. 'culo' → logprob: -9.508695602416992
    8. 'culator' → logprob: -9.633695602416992
    9. 'culation' → logprob: -9.758695602416992
    10. 'culated' → logprob: -10.008695602416992

Token 143: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8695732355117798
    2. '       ' → logprob: -0.8695732355117798
    3. '   ' → logprob: -1.8695732355117798
    4. 'le' → logprob: -6.24457311630249
    5. 'l' → logprob: -6.49457311630249
    6. 'la' → logprob: -6.61957311630249
    7. 'de' → logprob: -6.86957311630249
    8. '           ' → logprob: -7.74457311630249
    9. 'les' → logprob: -7.86957311630249
    10. 'd' → logprob: -8.619573593139648

Token 144: ' première' (ID: 23423)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.14002490043640137
    2. 'multip' → logprob: -2.5150249004364014
    3. 'val' → logprob: -3.7650249004364014
    4. 'ligne' → logprob: -4.1400251388549805
    5. 'a' → logprob: -6.0150251388549805
    6. 'mult' → logprob: -6.0150251388549805
    7. ' valeur' → logprob: -6.8900251388549805
    8. 'prem' → logprob: -6.8900251388549805
    9. 'part' → logprob: -7.5150251388549805
    10. 'variable' → logprob: -7.6400251388549805

Token 145: ' valeur' (ID: 41664)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5958228707313538
    2. 'variable' → logprob: -1.845822811126709
    3. 'val' → logprob: -1.970822811126709
    4. 'part' → logprob: -2.970822811126709
    5. 'num' → logprob: -3.095822811126709
    6. 'multip' → logprob: -4.470822811126709
    7. 'com' → logprob: -4.720822811126709
    8. 'table' → logprob: -5.095822811126709
    9. ' valeur' → logprob: -5.095822811126709
    10. 'op' → logprob: -5.845822811126709

Token 146: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023616172838956118
    2. 'a' → logprob: -6.25236177444458
    3. '   ' → logprob: -7.87736177444458
    4. '        ' → logprob: -11.377361297607422
    5. 'de' → logprob: -11.502361297607422
    6. '           ' → logprob: -11.752361297607422
    7. 'b' → logprob: -12.002361297607422
    8. '      ' → logprob: -12.127361297607422
    9. '     ' → logprob: -12.377361297607422
    10. 'pour' → logprob: -13.377361297607422

Token 147: ' couple' (ID: 7167)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.4295457899570465
    2. 'multip' → logprob: -1.4295457601547241
    3. 'produ' → logprob: -3.0545458793640137
    4. 'nombre' → logprob: -3.6795458793640137
    5. 'cou' → logprob: -3.8045458793640137
    6. 'multiple' → logprob: -5.929545879364014
    7. 'mult' → logprob: -6.054545879364014
    8. 'a' → logprob: -6.179545879364014
    9. 'num' → logprob: -6.804545879364014
    10. 'range' → logprob: -7.179545879364014

Token 148: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9862216504407115e-05
    2. 'a' → logprob: -11.375020027160645
    3. '   ' → logprob: -12.125020027160645
    4. '      ' → logprob: -13.750020027160645
    5. '        ' → logprob: -14.375020027160645
    6. '           ' → logprob: -14.625020027160645
    7. '     ' → logprob: -14.750020027160645
    8. 'b' → logprob: -15.250020027160645
    9. '         ' → logprob: -16.875019073486328
    10. '    ' → logprob: -17.125019073486328

Token 149: 'de' (ID: 613)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003623235272243619
    2. 'i' → logprob: -5.628623008728027
    3. '   ' → logprob: -11.503623008728027
    4. 'A' → logprob: -12.878623008728027
    5. '       ' → logprob: -12.878623008728027
    6. '(a' → logprob: -13.128623008728027
    7. '```' → logprob: -14.003623008728027
    8. '`' → logprob: -14.253623008728027
    9. '1' → logprob: -14.378623008728027
    10. ')a' → logprob: -14.378623008728027

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0045562731102108955
    2. 'multip' → logprob: -5.879556179046631
    3. '0' → logprob: -7.129556179046631
    4. 'a' → logprob: -7.254556179046631
    5. ' multiplication' → logprob: -9.379556655883789
    6. ' ' → logprob: -10.129556655883789
    7. 'la' → logprob: -10.254556655883789
    8. 'i' → logprob: -10.629556655883789
    9. 'A' → logprob: -11.004556655883789
    10. 'mult' → logprob: -12.129556655883789

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009785723872482777
    2. '0' → logprob: -4.6347856521606445
    3. 'a' → logprob: -11.009785652160645
    4. 'multip' → logprob: -12.134785652160645
    5. 'i' → logprob: -13.009785652160645
    6. 'A' → logprob: -13.134785652160645
    7. '9' → logprob: -13.384785652160645
    8. '(' → logprob: -14.384785652160645
    9. 'à' → logprob: -14.509785652160645
    10. ' ' → logprob: -16.00978660583496

Token 152: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27309349179267883
    2. '   ' → logprob: -1.8980934619903564
    3. 'to' → logprob: -2.6480934619903564
    4. ')' → logprob: -5.5230937004089355
    5. 'à' → logprob: -6.2730937004089355
    6. '           ' → logprob: -6.2730937004089355
    7. 'a' → logprob: -6.3980937004089355
    8. '+' → logprob: -6.3980937004089355
    9. '        ' → logprob: -6.7730937004089355
    10. '      ' → logprob: -6.8980937004089355

Token 153: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00011939727846765891
    2. '10' → logprob: -9.12511920928955
    3. '   ' → logprob: -11.50011920928955
    4. ' ' → logprob: -15.75011920928955
    5. '  ' → logprob: -16.250120162963867
    6. '    ' → logprob: -17.625120162963867
    7. '               ' → logprob: -18.125120162963867
    8. '8' → logprob: -18.375120162963867
    9. '       ' → logprob: -18.375120162963867
    10. 'nine' → logprob: -18.375120162963867

Token 154: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.306760805164231e-05
    2. '10' → logprob: -11.25001335144043
    3. '8' → logprob: -18.12501335144043
    4. 'nine' → logprob: -18.50001335144043
    5. 'n' → logprob: -20.87501335144043
    6. ' ' → logprob: -21.12501335144043
    7. '   ' → logprob: -21.62501335144043
    8. '  ' → logprob: -22.12501335144043
    9. '1' → logprob: -22.37501335144043
    10. ' nine' → logprob: -22.50001335144043

Token 155: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28549307584762573
    2. ')' → logprob: -2.0354931354522705
    3. ')
' → logprob: -2.1604931354522705
    4. '   ' → logprob: -6.785492897033691
    5. '           ' → logprob: -7.410492897033691
    6. '        ' → logprob: -7.910492897033691
    7. '      ' → logprob: -8.535492897033691
    8. '         ' → logprob: -10.285492897033691
    9. '     ' → logprob: -10.410492897033691
    10. '    ' → logprob: -11.160492897033691

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7432603272027336e-06
    2. '           ' → logprob: -14.500001907348633
    3. '```' → logprob: -14.625001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '      ' → logprob: -16.125001907348633
    6. 'b' → logprob: -16.375001907348633
    7. '        ' → logprob: -16.375001907348633
    8. '     ' → logprob: -16.750001907348633
    9. '         ' → logprob: -18.125001907348633
    10. '``' → logprob: -18.125001907348633

Token 157: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3869015872478485
    2. 'b' (adapté à ' b') → logprob: -1.136901617050171
    3. '   ' → logprob: -10.76190185546875
    4. ' b' → logprob: -12.76190185546875
    5. '     ' → logprob: -13.13690185546875
    6. '      ' → logprob: -13.26190185546875
    7. '           ' → logprob: -13.76190185546875
    8. '        ' → logprob: -13.76190185546875
    9. '    ' → logprob: -15.88690185546875
    10. '  ' → logprob: -16.01190185546875

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33530107140541077
    2. ' =' → logprob: -1.3353010416030884
    3. '       ' → logprob: -3.960301160812378
    4. '   ' → logprob: -5.960300922393799
    5. '     ' → logprob: -10.085301399230957
    6. '    ' → logprob: -10.710301399230957
    7. '  ' → logprob: -10.960301399230957
    8. '      ' → logprob: -10.960301399230957
    9. '=a' → logprob: -10.960301399230957
    10. ' ' → logprob: -11.085301399230957

Token 159: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.88418151892256e-05
    2. ' i' → logprob: -9.750059127807617
    3. '(i' → logprob: -14.625059127807617
    4. ' ' → logprob: -18.500059127807617
    5. '   ' → logprob: -18.500059127807617
    6. '	i' → logprob: -19.125059127807617
    7. '  ' → logprob: -19.625059127807617
    8. '_i' → logprob: -21.125059127807617
    9. '       ' → logprob: -22.000059127807617
    10. '    ' → logprob: -22.000059127807617

Token 160: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10021431744098663
    2. '%' → logprob: -2.3502142429351807
    3. ' ' → logprob: -11.975214004516602
    4. '  ' → logprob: -15.100214004516602
    5. 'mod' → logprob: -15.225214004516602
    6. '   ' → logprob: -15.350214004516602
    7. ' `%' → logprob: -15.600214004516602
    8. '```' → logprob: -16.1002140045166
    9. ' ' → logprob: -16.3502140045166
    10. '％' → logprob: -16.3502140045166

Token 161: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.047134305234067e-05
    2. '       ' → logprob: -10.625030517578125
    3. '   ' → logprob: -12.500030517578125
    4. '10' → logprob: -13.750030517578125
    5. ' ' → logprob: -14.125030517578125
    6. '        ' → logprob: -15.875030517578125
    7. '11' → logprob: -16.125030517578125
    8. '    ' → logprob: -16.250030517578125
    9. '8' → logprob: -17.000030517578125
    10. '  ' → logprob: -17.000030517578125

Token 162: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -20.375
    3. 'nine' → logprob: -21.625
    4. '10' → logprob: -22.625
    5. ' nine' → logprob: -23.0
    6. ' ' → logprob: -23.125
    7. '   ' → logprob: -23.75
    8. '九' → logprob: -23.75
    9. '９' → logprob: -24.125
    10. ' дев' → logprob: -24.25

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.006715728435665369
    2. '+' → logprob: -5.006715774536133
    3. '       ' → logprob: -15.756715774536133
    4. '   ' → logprob: -15.881715774536133
    5. ' ' → logprob: -18.006715774536133
    6. '  ' → logprob: -18.381715774536133
    7. '    ' → logprob: -18.631715774536133
    8. '        ' → logprob: -19.131715774536133
    9. '     ' → logprob: -19.131715774536133
    10. '      ' → logprob: -19.256715774536133

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.500045776367188
    4. '  ' → logprob: -22.000045776367188
    5. '2' → logprob: -22.500045776367188
    6. '       ' → logprob: -23.250045776367188
    7. '１' → logprob: -24.000045776367188
    8. ' ' → logprob: -24.125045776367188
    9. '    ' → logprob: -24.375045776367188
    10. '     ' → logprob: -24.750045776367188

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -21.875
    3. '2' → logprob: -25.375
    4. '１' → logprob: -26.125
    5. '   ' → logprob: -26.25
    6. '0' → logprob: -27.0
    7. '۱' → logprob: -27.375
    8. '১' → logprob: -27.875
    9. '  ' → logprob: -28.125
    10. '१' → logprob: -28.25

Token 166: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006136633921414614
    2. '#' → logprob: -5.631136417388916
    3. '   ' → logprob: -6.006136417388916
    4. '     ' → logprob: -10.506136894226074
    5. ' #' → logprob: -11.256136894226074
    6. '      ' → logprob: -11.381136894226074
    7. '  ' → logprob: -11.631136894226074
    8. '        ' → logprob: -12.756136894226074
    9. '    ' → logprob: -12.881136894226074
    10. ' ' → logprob: -13.006136894226074

Token 167: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.00036025288864038885
    2. '       ' → logprob: -8.125360488891602
    3. ' #' → logprob: -9.875360488891602
    4. '   ' → logprob: -11.375360488891602
    5. '  ' → logprob: -14.375360488891602
    6. '     ' → logprob: -14.875360488891602
    7. '      ' → logprob: -15.500360488891602
    8. ' ' → logprob: -16.2503604888916
    9. '```' → logprob: -17.0003604888916
    10. '    ' → logprob: -17.3753604888916

Token 168: ' Cal' (ID: 4453)
  Prédit: 'Cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cal' → logprob: -0.0018967483192682266
    2. '#' → logprob: -6.376896858215332
    3. ' Cal' → logprob: -9.376896858215332
    4. 'Calcul' → logprob: -9.876896858215332
    5. 'Calc' → logprob: -10.001896858215332
    6. 'cal' → logprob: -11.876896858215332
    7. '   ' → logprob: -13.001896858215332
    8. '_cal' → logprob: -13.376896858215332
    9. ' calc' → logprob: -14.626896858215332
    10. '  ' → logprob: -14.626896858215332

Token 169: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.005556744057685137
    2. 'cul' → logprob: -5.255556583404541
    3. 'cula' → logprob: -8.8805570602417
    4. 'culate' → logprob: -9.0055570602417
    5. 'culo' → logprob: -10.5055570602417
    6. 'cu' → logprob: -11.3805570602417
    7. 'cules' → logprob: -12.1305570602417
    8. 'cupe' → logprob: -12.3805570602417
    9. 'c' → logprob: -12.6305570602417
    10. 'cular' → logprob: -13.3805570602417

Token 170: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0386408194899559
    2. '   ' → logprob: -3.2886407375335693
    3. ' la' → logprob: -7.663640975952148
    4. '       ' → logprob: -9.788640975952148
    5. 'le' → logprob: -10.288640975952148
    6. 'the' → logprob: -10.663640975952148
    7. 'les' → logprob: -12.913640975952148
    8. '#' → logprob: -12.913640975952148
    9. '_la' → logprob: -12.913640975952148
    10. '  ' → logprob: -13.163640975952148

Token 171: ' seconde' (ID: 66204)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.012248033657670021
    2. 'se' → logprob: -4.8872480392456055
    3. 'val' → logprob: -5.5122480392456055
    4. 'second' → logprob: -9.012248039245605
    5. 'b' → logprob: -9.137248039245605
    6. ' deuxième' → logprob: -9.512248039245605
    7. 'Deux' → logprob: -9.637248039245605
    8. ' deux' → logprob: -9.762248039245605
    9. ' seconde' → logprob: -10.137248039245605
    10. '2' → logprob: -10.762248039245605

Token 172: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0021777390502393246
    2. 'value' → logprob: -6.627177715301514
    3. ' valeur' → logprob: -7.377177715301514
    4. 'vale' → logprob: -8.502178192138672
    5. '#' → logprob: -11.877178192138672
    6. 'valo' → logprob: -12.252178192138672
    7. 'Vale' → logprob: -12.252178192138672
    8. 'valor' → logprob: -13.127178192138672
    9. '(val' → logprob: -13.627178192138672
    10. 'v' → logprob: -14.627178192138672

Token 173: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.10226311534643173
    2. '       ' → logprob: -2.3522632122039795
    3. ' du' → logprob: -7.1022629737854
    4. 'de' → logprob: -7.1022629737854
    5. '   ' → logprob: -8.477263450622559
    6. '_du' → logprob: -9.352263450622559
    7. '        ' → logprob: -10.352263450622559
    8. '(' → logprob: -10.977263450622559
    9. '     ' → logprob: -11.852263450622559
    10. '#' → logprob: -11.852263450622559

Token 174: ' couple' (ID: 7167)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -5.407366916188039e-05
    2. ' couple' → logprob: -10.250054359436035
    3. 'c' → logprob: -11.875054359436035
    4. 'pair' → logprob: -12.000054359436035
    5. 'nombre' → logprob: -13.500054359436035
    6. 'tuple' → logprob: -14.250054359436035
    7. 'pare' → logprob: -14.875054359436035
    8. 'cop' → logprob: -15.000054359436035
    9. 'quipe' → logprob: -15.250054359436035
    10. '#' → logprob: -15.375054359436035

Token 175: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12780772149562836
    2. '#' → logprob: -2.1278076171875
    3. '   ' → logprob: -7.3778076171875
    4. '(b' → logprob: -8.6278076171875
    5. '(' → logprob: -10.8778076171875
    6. ' #' → logprob: -11.0028076171875
    7. '        ' → logprob: -11.2528076171875
    8. '      ' → logprob: -11.6278076171875
    9. '     ' → logprob: -12.2528076171875
    10. '  ' → logprob: -12.8778076171875

Token 176: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -2.5776860184123507e-06
    2. ' de' → logprob: -13.12500286102295
    3. '1' → logprob: -15.12500286102295
    4. '0' → logprob: -16.125001907348633
    5. '9' → logprob: -16.375001907348633
    6. '_de' → logprob: -17.750001907348633
    7. '(de' → logprob: -17.750001907348633
    8. 'mod' → logprob: -18.500001907348633
    9. 'dé' → logprob: -18.625001907348633
    10. '   ' → logprob: -19.375001907348633

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3676733690081164e-05
    2. '9' → logprob: -10.87502384185791
    3. '0' → logprob: -12.37502384185791
    4. ' ' → logprob: -15.00002384185791
    5. '   ' → logprob: -16.875022888183594
    6. '  ' → logprob: -17.250022888183594
    7. '10' → logprob: -19.000022888183594
    8. '2' → logprob: -19.125022888183594
    9. '```' → logprob: -19.500022888183594
    10. '    ' → logprob: -20.500022888183594

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931522488594055
    2. '9' → logprob: -0.6931522488594055
    3. '0' → logprob: -12.81815242767334
    4. '8' → logprob: -14.56815242767334
    5. '   ' → logprob: -15.06815242767334
    6. '2' → logprob: -15.19315242767334
    7. '  ' → logprob: -15.19315242767334
    8. '#' → logprob: -15.31815242767334
    9. '10' → logprob: -15.44315242767334
    10. '```' → logprob: -15.44315242767334

Token 179: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.21841184794902802
    2. ' à' → logprob: -2.093411922454834
    3. 'to' → logprob: -3.343411922454834
    4. '   ' → logprob: -3.718411922454834
    5. '+' → logprob: -4.593411922454834
    6. '9' → logprob: -7.718411922454834
    7. '```' → logprob: -8.218411445617676
    8. 'import' → logprob: -8.343411445617676
    9. ''à' → logprob: -8.593411445617676
    10. '到' → logprob: -8.593411445617676

Token 180: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.404745439183898e-05
    2. '   ' → logprob: -10.75003433227539
    3. '10' → logprob: -11.37503433227539
    4. '```' → logprob: -14.87503433227539
    5. '8' → logprob: -15.25003433227539
    6. '  ' → logprob: -16.00003433227539
    7. '0' → logprob: -16.12503433227539
    8. ' ' → logprob: -16.37503433227539
    9. '99' → logprob: -17.25003433227539
    10. '1' → logprob: -17.87503433227539

Token 181: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.941850526549388e-06
    2. '10' → logprob: -11.750007629394531
    3. '8' → logprob: -18.00000762939453
    4. '   ' → logprob: -19.00000762939453
    5. '90' → logprob: -20.75000762939453
    6. '99' → logprob: -20.87500762939453
    7. ' ' → logprob: -20.87500762939453
    8. 'nine' → logprob: -22.00000762939453
    9. '0' → logprob: -22.12500762939453
    10. '  ' → logprob: -22.37500762939453

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011582943610846996
    2. '       ' → logprob: -4.761582851409912
    3. '   ' → logprob: -5.886582851409912
    4. ')
' → logprob: -8.76158332824707
    5. ' )' → logprob: -11.51158332824707
    6. '#' → logprob: -12.63658332824707
    7. ')#' → logprob: -12.63658332824707
    8. '           ' → logprob: -13.01158332824707
    9. ')

' → logprob: -13.13658332824707
    10. '```' → logprob: -13.13658332824707

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002593130338937044
    2. '   ' → logprob: -8.875259399414062
    3. 'print' → logprob: -10.000259399414062
    4. '```' → logprob: -10.375259399414062
    5. '        ' → logprob: -11.000259399414062
    6. '      ' → logprob: -11.250259399414062
    7. '     ' → logprob: -12.000259399414062
    8. '           ' → logprob: -13.375259399414062
    9. '<|end|>' → logprob: -13.625259399414062
    10. '         ' → logprob: -13.625259399414062

Token 184: ' produit' (ID: 29429)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019312551012262702
    2. '       ' → logprob: -6.251931190490723
    3. ' print' → logprob: -13.626931190490723
    4. 'c' → logprob: -14.251931190490723
    5. '#' → logprob: -15.501931190490723
    6. 'result' → logprob: -16.00193214416504
    7. '.print' → logprob: -16.12693214416504
    8. 'C' → logprob: -16.25193214416504
    9. 'printf' → logprob: -16.50193214416504
    10. '           ' → logprob: -16.62693214416504

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10035558044910431
    2. '=' → logprob: -2.350355625152588
    3. '   ' → logprob: -9.47535514831543
    4. '```' → logprob: -10.72535514831543
    5. '       ' → logprob: -10.85035514831543
    6. ' ' → logprob: -11.22535514831543
    7. '  ' → logprob: -11.72535514831543
    8. '=`' → logprob: -13.22535514831543
    9. '``' → logprob: -13.97535514831543
    10. '    ' → logprob: -13.97535514831543

Token 186: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011284107313258573
    2. ' a' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.000112533569336
    4. '       ' → logprob: -13.375112533569336
    5. '	a' → logprob: -17.250112533569336
    6. '           ' → logprob: -17.500112533569336
    7. '_a' → logprob: -18.000112533569336
    8. '  ' → logprob: -18.500112533569336
    9. '(a' → logprob: -19.000112533569336
    10. '.a' → logprob: -19.125112533569336

Token 187: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.34918463230133057
    2. ' *' → logprob: -1.2241846323013306
    3. '*b' → logprob: -7.224184513092041
    4. '   ' → logprob: -12.7241849899292
    5. '*a' → logprob: -13.4741849899292
    6. '       ' → logprob: -13.7241849899292
    7. '*num' → logprob: -13.7241849899292
    8. ' ' → logprob: -14.7241849899292
    9. '*l' → logprob: -14.8491849899292
    10. '\' → logprob: -14.9741849899292

Token 188: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1008713702030946e-06
    2. '       ' → logprob: -13.375001907348633
    3. ' b' → logprob: -14.625001907348633
    4. '           ' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '	b' → logprob: -21.500001907348633
    7. '        ' → logprob: -22.375001907348633
    8. '(b' → logprob: -22.625001907348633
    9. ' б' → logprob: -22.875001907348633
    10. '_b' → logprob: -22.875001907348633

Token 189: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.935296834039036e-06
    2. '   ' → logprob: -14.00000286102295
    3. 'print' → logprob: -14.37500286102295
    4. '        ' → logprob: -14.50000286102295
    5. '      ' → logprob: -14.50000286102295
    6. '           ' → logprob: -15.50000286102295
    7. '     ' → logprob: -15.62500286102295
    8. '        
' → logprob: -16.125003814697266
    9. '         ' → logprob: -16.875003814697266
    10. '               ' → logprob: -18.000003814697266

Token 190: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.037835580878891e-05
    2. 'print' → logprob: -10.12505054473877
    3. '      ' → logprob: -12.87505054473877
    4. '        ' → logprob: -12.87505054473877
    5. '   ' → logprob: -13.12505054473877
    6. '        
' → logprob: -13.12505054473877
    7. '     ' → logprob: -14.25005054473877
    8. '           ' → logprob: -15.25005054473877
    9. '         ' → logprob: -15.62505054473877
    10. '
' → logprob: -16.625049591064453

Token 191: ' Cal' (ID: 4453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033125728368759155
    2. '#' → logprob: -3.533125638961792
    3. 'produ' → logprob: -6.783125877380371
    4. 'C' → logprob: -7.283125877380371
    5. '        ' → logprob: -8.408125877380371
    6. '   ' → logprob: -8.658125877380371
    7. '      ' → logprob: -8.658125877380371
    8. 'a' → logprob: -8.658125877380371
    9. 'calcul' → logprob: -8.658125877380371
    10. 'aff' → logprob: -8.908125877380371

Token 192: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.07048306614160538
    2. 'cul' → logprob: -2.6954829692840576
    3. 'culate' → logprob: -8.445483207702637
    4. 'c' → logprob: -9.320483207702637
    5. 'culo' → logprob: -9.320483207702637
    6. 'cula' → logprob: -9.570483207702637
    7. 'cu' → logprob: -10.195483207702637
    8. 'culation' → logprob: -11.320483207702637
    9. 'cules' → logprob: -11.695483207702637
    10. 'culated' → logprob: -12.320483207702637

Token 193: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018652725964784622
    2. 'le' → logprob: -4.26865291595459
    3. 'la' → logprob: -5.76865291595459
    4. '   ' → logprob: -7.26865291595459
    5. '        ' → logprob: -8.01865291595459
    6. 'l' → logprob: -9.14365291595459
    7. '           ' → logprob: -9.89365291595459
    8. 'les' → logprob: -10.39365291595459
    9. '      ' → logprob: -10.39365291595459
    10. ' le' → logprob: -10.76865291595459

Token 194: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.00013810492237098515
    2. ' produit' → logprob: -9.375138282775879
    3. 'pro' → logprob: -10.625138282775879
    4. 'print' → logprob: -12.000138282775879
    5. 'prod' → logprob: -12.125138282775879
    6. '       ' → logprob: -12.250138282775879
    7. 'Produit' → logprob: -13.125138282775879
    8. '#' → logprob: -13.500138282775879
    9. 'prix' → logprob: -13.500138282775879
    10. 'produce' → logprob: -13.625138282775879

Token 195: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011880126112373546
    2. '   ' → logprob: -9.87511920928955
    3. '#' → logprob: -10.00011920928955
    4. '        ' → logprob: -11.87511920928955
    5. '      ' → logprob: -12.12511920928955
    6. 'print' → logprob: -12.75011920928955
    7. '        
' → logprob: -12.75011920928955
    8. '     ' → logprob: -13.37511920928955
    9. '           ' → logprob: -14.25011920928955
    10. '         ' → logprob: -14.50011920928955

Token 196: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00038074489566497505
    2. '       ' → logprob: -8.500380516052246
    3. '   ' → logprob: -8.875380516052246
    4. ' a' → logprob: -10.500380516052246
    5. 'produ' → logprob: -13.500380516052246
    6. '  ' → logprob: -13.875380516052246
    7. '(a' → logprob: -14.000380516052246
    8. 'de' → logprob: -14.125380516052246
    9. 'la' → logprob: -14.375380516052246
    10. '        ' → logprob: -14.500380516052246

Token 197: ' et' (ID: 859)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5887966752052307
    2. '       ' → logprob: -0.9637966752052307
    3. ' *' → logprob: -3.213796615600586
    4. '*b' → logprob: -3.838796615600586
    5. '   ' → logprob: -7.213796615600586
    6. '#' → logprob: -8.213796615600586
    7. 'b' → logprob: -8.338796615600586
    8. 'et' → logprob: -8.588796615600586
    9. 'print' → logprob: -9.463796615600586
    10. '*a' → logprob: -10.088796615600586

Token 198: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.5577775128767826e-06
    2. ' b' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.250005722045898
    4. '       ' → logprob: -14.375005722045898
    5. '           ' → logprob: -17.8750057220459
    6. ' б' → logprob: -18.2500057220459
    7. ' الب' → logprob: -18.5000057220459
    8. '```' → logprob: -18.7500057220459
    9. '  ' → logprob: -19.0000057220459
    10. '	b' → logprob: -19.2500057220459

Token 199: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.869017852295656e-06
    2. '   ' → logprob: -12.500006675720215
    3. '      ' → logprob: -13.750006675720215
    4. '        ' → logprob: -14.000006675720215
    5. 'print' → logprob: -14.750006675720215
    6. '        
' → logprob: -15.000006675720215
    7. '     ' → logprob: -15.125006675720215
    8. '           ' → logprob: -16.37500762939453
    9. '         ' → logprob: -16.87500762939453
    10. '    ' → logprob: -18.00000762939453

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012833021173719317
    2. '   ' → logprob: -9.000128746032715
    3. 'print' → logprob: -13.500128746032715
    4. '      ' → logprob: -13.500128746032715
    5. '        ' → logprob: -13.875128746032715
    6. '     ' → logprob: -14.125128746032715
    7. '           ' → logprob: -15.250128746032715
    8. '         ' → logprob: -16.2501277923584
    9. '    ' → logprob: -17.0001277923584
    10. '               ' → logprob: -17.1251277923584

Token 201: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06196948140859604
    2. 'print' → logprob: -2.811969518661499
    3. '           ' → logprob: -14.811969757080078
    4. '   ' → logprob: -14.936969757080078
    5. ' print' → logprob: -15.061969757080078
    6. '        ' → logprob: -15.311969757080078
    7. '      ' → logprob: -15.436969757080078
    8. 'printf' → logprob: -16.186969757080078
    9. '     ' → logprob: -16.561969757080078
    10. '         ' → logprob: -17.061969757080078

Token 202: ' Aff' (ID: 13741)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038058701902627945
    2. 'print' → logprob: -3.2880587577819824
    3. '   ' → logprob: -12.288058280944824
    4. '```' → logprob: -12.788058280944824
    5. '           ' → logprob: -13.163058280944824
    6. '        ' → logprob: -13.288058280944824
    7. '      ' → logprob: -13.413058280944824
    8. '     ' → logprob: -13.788058280944824
    9. ' print' → logprob: -13.788058280944824
    10. 'printf' → logprob: -14.288058280944824

Token 203: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.10940028727054596
    2. 'ichage' → logprob: -2.6094002723693848
    3. 'icher' → logprob: -3.8594002723693848
    4. 'ich' → logprob: -5.234400272369385
    5. '   ' → logprob: -5.859400272369385
    6. 'ichier' → logprob: -8.859400749206543
    7. 'iché' → logprob: -9.109400749206543
    8. '       ' → logprob: -9.234400749206543
    9. 'iches' → logprob: -9.359400749206543
    10. '#' → logprob: -9.609400749206543

Token 204: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032771718688309193
    2. 'print' → logprob: -6.37827730178833
    3. 'f' → logprob: -6.62827730178833
    4. '        ' → logprob: -9.128276824951172
    5. '   ' → logprob: -9.628276824951172
    6. ' f' → logprob: -11.128276824951172
    7. '      ' → logprob: -11.253276824951172
    8. '           ' → logprob: -11.628276824951172
    9. 'l' → logprob: -11.878276824951172
    10. '     ' → logprob: -12.253276824951172

Token 205: ' résultat' (ID: 62556)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2964262068271637
    2. 'print' → logprob: -1.7964261770248413
    3. '       ' → logprob: -2.671426296234131
    4. 'produ' → logprob: -4.921426296234131
    5. 'format' → logprob: -5.046426296234131
    6. 'result' → logprob: -5.546426296234131
    7. ''' → logprob: -7.046426296234131
    8. '        ' → logprob: -7.546426296234131
    9. '         ' → logprob: -8.296425819396973
    10. ''f' → logprob: -8.296425819396973

Token 206: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.392202976712724e-06
    2. 'print' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.875006675720215
    4. '      ' → logprob: -15.250006675720215
    5. '        ' → logprob: -15.875006675720215
    6. '           ' → logprob: -16.3750057220459
    7. '     ' → logprob: -16.7500057220459
    8. '         ' → logprob: -17.8750057220459
    9. '```' → logprob: -18.6250057220459
    10. '               ' → logprob: -18.8750057220459

Token 207: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3823545575141907
    2. 'f' → logprob: -1.632354497909546
    3. 'print' → logprob: -2.257354497909546
    4. '   ' → logprob: -4.882354736328125
    5. ' f' → logprob: -5.132354736328125
    6. 'l' → logprob: -7.132354736328125
    7. '        ' → logprob: -7.257354736328125
    8. '           ' → logprob: -7.382354736328125
    9. ' print' → logprob: -7.757354736328125
    10. 'aff' → logprob: -8.007354736328125

Token 208: ' multiplication' (ID: 86340)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02641153894364834
    2. 'f' → logprob: -3.651411533355713
    3. 'fonction' → logprob: -10.651412010192871
    4. 'produ' → logprob: -10.776412010192871
    5. 'table' → logprob: -11.526412010192871
    6. 'format' → logprob: -11.526412010192871
    7. 'ligne' → logprob: -11.776412010192871
    8. 'chaine' → logprob: -11.901412010192871
    9. '```' → logprob: -12.401412010192871
    10. 'multip' → logprob: -12.901412010192871

Token 209: ' sous' (ID: 14487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.644463479053229e-05
    2. 'print' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.750046730041504
    4. '      ' → logprob: -15.000046730041504
    5. '        ' → logprob: -15.875046730041504
    6. '           ' → logprob: -16.250045776367188
    7. '     ' → logprob: -16.500045776367188
    8. '         ' → logprob: -17.875045776367188
    9. '```' → logprob: -18.125045776367188
    10. '               ' → logprob: -18.875045776367188

Token 210: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14366525411605835
    2. 'forme' → logprob: -3.018665313720703
    3. '   ' → logprob: -3.393665313720703
    4. '       ' → logprob: -3.518665313720703
    5. 'form' → logprob: -5.143665313720703
    6. 'forma' → logprob: -5.393665313720703
    7. ' la' → logprob: -5.518665313720703
    8. ' forme' → logprob: -5.768665313720703
    9. 'le' → logprob: -5.893665313720703
    10. 'format' → logprob: -7.893665313720703

Token 211: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.17183604836463928
    2. 'form' → logprob: -2.4218361377716064
    3. 'ligne' → logprob: -3.4218361377716064
    4. 'string' → logprob: -4.421835899353027
    5. 'chaine' → logprob: -4.671835899353027
    6. 'format' → logprob: -5.171835899353027
    7. ' forme' → logprob: -5.546835899353027
    8. 'cha' → logprob: -6.296835899353027
    9. 'forma' → logprob: -7.296835899353027
    10. '```' → logprob: -7.671835899353027

Token 212: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021608876064419746
    2. ''' → logprob: -3.896608829498291
    3. '`' → logprob: -7.521608829498291
    4. '```' → logprob: -8.02160930633545
    5. '   ' → logprob: -9.77160930633545
    6. '        ' → logprob: -10.64660930633545
    7. '‘' → logprob: -10.64660930633545
    8. '``' → logprob: -11.02160930633545
    9. '      ' → logprob: -11.39660930633545
    10. '"' → logprob: -11.77160930633545

Token 213: 'Ax' (ID: 44017)
  Prédit: 'Ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ax' → logprob: -0.387539267539978
    2. 'A' → logprob: -1.137539267539978
    3. ''A' → logprob: -7.387539386749268
    4. ''' → logprob: -10.88753890991211
    5. 'Ay' → logprob: -12.01253890991211
    6. 'Aa' → logprob: -12.01253890991211
    7. 'Ae' → logprob: -12.26253890991211
    8. '"A' → logprob: -12.26253890991211
    9. 'Ao' → logprob: -13.01253890991211
    10. '{' → logprob: -13.26253890991211

Token 214: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.512236498361744e-07
    2. 'b' → logprob: -15.125000953674316
    3. '=B' → logprob: -15.375000953674316
    4. ' B' → logprob: -16.625
    5. 'Б' → logprob: -18.75
    6. '"B' → logprob: -19.0
    7. 'Bx' → logprob: -19.875
    8. 'A' → logprob: -19.875
    9. 'C' → logprob: -21.0
    10. '=b' → logprob: -21.0

Token 215: '=C' (ID: 93363)
  Prédit: '=C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=C' → logprob: -0.00038419815246015787
    2. '=' → logprob: -7.875384330749512
    3. '=A' → logprob: -13.625384330749512
    4. '=B' → logprob: -14.125384330749512
    5. '=c' → logprob: -14.500384330749512
    6. ' =' → logprob: -14.750384330749512
    7. '=`' → logprob: -15.125384330749512
    8. '=<' → logprob: -15.250384330749512
    9. '=D' → logprob: -16.000383377075195
    10. '＝' → logprob: -16.125383377075195

Token 216: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003504803404211998
    2. 'print' → logprob: -5.753504753112793
    3. '   ' → logprob: -8.128504753112793
    4. '      ' → logprob: -11.378504753112793
    5. '```' → logprob: -12.003504753112793
    6. '        ' → logprob: -12.253504753112793
    7. '     ' → logprob: -12.753504753112793
    8. ''' → logprob: -13.628504753112793
    9. '           ' → logprob: -13.753504753112793
    10. '    ' → logprob: -14.128504753112793

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -12.875004768371582
    3. 'print' → logprob: -13.250004768371582
    4. '      ' → logprob: -15.625004768371582
    5. '        ' → logprob: -16.6250057220459
    6. '     ' → logprob: -16.7500057220459
    7. '           ' → logprob: -17.0000057220459
    8. '         ' → logprob: -18.8750057220459
    9. '```' → logprob: -18.8750057220459
    10. '               ' → logprob: -19.7500057220459

Token 218: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07889209687709808
    2. 'print' (adapté à ' print') → logprob: -2.5788919925689697
    3. '   ' → logprob: -13.82889175415039
    4. ' print' → logprob: -14.82889175415039
    5. '           ' → logprob: -15.20389175415039
    6. '      ' → logprob: -15.70389175415039
    7. '        ' → logprob: -15.70389175415039
    8. 'printf' → logprob: -15.82889175415039
    9. '```' → logprob: -15.95389175415039
    10. '     ' → logprob: -16.32889175415039

Token 219: '("{}' (ID: 122485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6457251310348511
    2. '('' → logprob: -1.520725131034851
    3. '("' → logprob: -2.2707252502441406
    4. '("("' → logprob: -2.5207252502441406
    5. '()' → logprob: -3.1457252502441406
    6. '(f' → logprob: -4.020725250244141
    7. '(`' → logprob: -5.520725250244141
    8. '(...)' → logprob: -6.020725250244141
    9. '   ' → logprob: -6.895725250244141
    10. '("(' → logprob: -7.395725250244141

Token 220: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05958866328001022
    2. '×' → logprob: -3.559588670730591
    3. '{}' → logprob: -3.684588670730591
    4. '{}".' → logprob: -6.559588432312012
    5. 'Ax' → logprob: -6.684588432312012
    6. '={}' → logprob: -7.559588432312012
    7. '*' → logprob: -8.309588432312012
    8. '"' → logprob: -8.434588432312012
    9. ' x' → logprob: -8.684588432312012
    10. '"x' → logprob: -9.184588432312012

Token 221: '{}' (ID: 12083)
  Prédit: '{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2507658898830414
    2. '{}".' → logprob: -1.6257659196853638
    3. '{' → logprob: -3.750765800476074
    4. '{}.' → logprob: -7.500765800476074
    5. '{}\' → logprob: -7.750765800476074
    6. '{}",' → logprob: -8.625765800476074
    7. '{})' → logprob: -9.125765800476074
    8. '{}'.' → logprob: -9.125765800476074
    9. '{}_' → logprob: -9.375765800476074
    10. 'B' → logprob: -10.500765800476074

Token 222: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.0275550726801157
    2. '={}' → logprob: -3.777554988861084
    3. '=' → logprob: -5.527554988861084
    4. '=C' → logprob: -8.527555465698242
    5. '={},' → logprob: -10.027555465698242
    6. '={}
' → logprob: -10.277555465698242
    7. '{}".' → logprob: -11.152555465698242
    8. '="' → logprob: -11.902555465698242
    9. '=c' → logprob: -11.902555465698242
    10. '=".' → logprob: -13.152555465698242

Token 223: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.005708951037377119
    2. '}' → logprob: -5.380709171295166
    3. '}"' → logprob: -6.880709171295166
    4. '}'.' → logprob: -11.130708694458008
    5. '}.' → logprob: -11.505708694458008
    6. '}\' → logprob: -11.505708694458008
    7. '}")' → logprob: -12.005708694458008
    8. '}",' → logprob: -12.505708694458008
    9. '}{' → logprob: -12.630708694458008
    10. '}\"' → logprob: -12.630708694458008

Token 224: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -2.2200749754119897e-06
    2. '.format' → logprob: -13.125001907348633
    3. 'form' → logprob: -16.750001907348633
    4. ' format' → logprob: -16.875001907348633
    5. 'f' → logprob: -17.250001907348633
    6. '	format' → logprob: -17.250001907348633
    7. '_format' → logprob: -17.750001907348633
    8. 'formatted' → logprob: -17.875001907348633
    9. 'forma' → logprob: -18.375001907348633
    10. '格式' → logprob: -18.500001907348633

Token 225: '(a' (ID: 6271)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.14163553714752197
    2. '(' → logprob: -2.2666354179382324
    3. '(prod' → logprob: -4.141635417938232
    4. '(a' → logprob: -6.141635417938232
    5. '       ' → logprob: -6.141635417938232
    6. '("' → logprob: -6.516635417938232
    7. '(pr' → logprob: -6.641635417938232
    8. '("(' → logprob: -6.891635417938232
    9. '("("' → logprob: -7.016635417938232
    10. '(p' → logprob: -8.01663589477539

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20744562149047852
    2. ',x' → logprob: -2.0824456214904785
    3. 'x' → logprob: -2.9574456214904785
    4. ',b' → logprob: -5.4574456214904785
    5. '*x' → logprob: -6.5824456214904785
    6. '       ' → logprob: -7.0824456214904785
    7. '，' → logprob: -7.3949456214904785
    8. ' ,' → logprob: -7.6449456214904785
    9. '   ' → logprob: -7.8324456214904785
    10. ',a' → logprob: -8.51994514465332

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -18.75
    3. '   ' → logprob: -23.5
    4. '	b' → logprob: -23.75
    5. ' б' → logprob: -24.25
    6. 'б' → logprob: -24.5
    7. '(b' → logprob: -25.625
    8. ' الب' → logprob: -25.625
    9. '       ' → logprob: -25.75
    10. ')b' → logprob: -26.0

Token 228: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004342648666352034
    2. ',' → logprob: -6.504342555999756
    3. '           ' → logprob: -6.754342555999756
    4. '))' → logprob: -7.254342555999756
    5. '         ' → logprob: -8.629343032836914
    6. '   ' → logprob: -8.629343032836914
    7. '      ' → logprob: -9.129343032836914
    8. '        ' → logprob: -9.254343032836914
    9. '     ' → logprob: -9.504343032836914
    10. '               ' → logprob: -9.754343032836914

Token 229: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -3.070975071750581e-05
    2. 'prod' → logprob: -10.625030517578125
    3. ' produit' → logprob: -12.250030517578125
    4. 'pro' → logprob: -15.000030517578125
    5. 'product' → logprob: -15.000030517578125
    6. 'produto' → logprob: -15.000030517578125
    7. 'produkt' → logprob: -15.375030517578125
    8. 'produk' → logprob: -15.625030517578125
    9. 'produce' → logprob: -16.125030517578125
    10. 'producto' → logprob: -16.625030517578125

Token 230: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09021346271038055
    2. ')' → logprob: -2.4652135372161865
    3. '       ' → logprob: -7.090213298797607
    4. '   ' → logprob: -8.465213775634766
    5. ')`' → logprob: -9.840213775634766
    6. '```' → logprob: -10.090213775634766
    7. ').' → logprob: -11.215213775634766
    8. '"))' → logprob: -11.215213775634766
    9. '           ' → logprob: -11.465213775634766
    10. ')))' → logprob: -11.590213775634766

Token 231: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9111296534538269
    2. '```' → logprob: -1.2861297130584717
    3. 'print' → logprob: -1.4111297130584717
    4. 'def' → logprob: -3.5361297130584717
    5. 'return' → logprob: -4.161129474639893
    6. 'aff' → logprob: -4.786129474639893
    7. '}' → logprob: -4.911129474639893
    8. 'pass' → logprob: -5.161129474639893
    9. '"""' → logprob: -6.536129474639893
    10. 'if' → logprob: -6.536129474639893

Token 232: ' App' (ID: 2583)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.0010908045805990696
    2. 'af' → logprob: -7.501091003417969
    3. '#' → logprob: -8.001091003417969
    4. ' afficher' → logprob: -9.001091003417969
    5. 'if' → logprob: -10.251091003417969
    6. 'print' → logprob: -11.626091003417969
    7. 'Afficher' → logprob: -11.626091003417969
    8. '```' → logprob: -12.126091003417969
    9. 'def' → logprob: -12.376091003417969
    10. '.aff' → logprob: -12.501091003417969

Token 233: 'el' (ID: 296)
  Prédit: 'eler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eler' → logprob: -0.08104266971349716
    2. 'ler' → logprob: -3.206042766571045
    3. 'el' → logprob: -4.331042766571045
    4. 'eller' → logprob: -4.331042766571045
    5. '#' → logprob: -5.706042766571045
    6. 'elle' → logprob: -5.706042766571045
    7. 'elf' → logprob: -7.331042766571045
    8. 'pler' → logprob: -7.331042766571045
    9. 'elier' → logprob: -7.456042766571045
    10. 'els' → logprob: -8.206042289733887

Token 234: ' de' (ID: 334)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.0005443345289677382
    2. 'af' → logprob: -8.250544548034668
    3. ' afficher' → logprob: -8.500544548034668
    4. 'de' → logprob: -10.625544548034668
    5. 'd' → logprob: -11.375544548034668
    6. '.aff' → logprob: -11.375544548034668
    7. ''aff' → logprob: -11.875544548034668
    8. '_aff' → logprob: -12.375544548034668
    9. 'à' → logprob: -12.500544548034668
    10. 'affer' → logprob: -12.625544548034668

Token 235: ' la' (ID: 557)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.021206190809607506
    2. 'la' → logprob: -3.8962061405181885
    3. ' afficher' → logprob: -7.646206378936768
    4. 'af' → logprob: -9.39620590209961
    5. 'l' → logprob: -10.14620590209961
    6. 'fonction' → logprob: -10.39620590209961
    7. 'Afficher' → logprob: -11.14620590209961
    8. ''aff' → logprob: -12.27120590209961
    9. 'affe' → logprob: -12.52120590209961
    10. ' la' → logprob: -12.77120590209961

Token 236: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.0369156152009964
    2. 'aff' → logprob: -3.4119155406951904
    3. 'function' → logprob: -6.1619157791137695
    4. ' fonction' → logprob: -7.2869157791137695
    5. 'fon' → logprob: -8.16191577911377
    6. 'func' → logprob: -8.78691577911377
    7. 'funktion' → logprob: -11.41191577911377
    8. ' afficher' → logprob: -12.41191577911377
    9. 'Afficher' → logprob: -12.66191577911377
    10. 'af' → logprob: -13.16191577911377

Token 237: ' pour' (ID: 1930)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.00015800826076883823
    2. ' afficher' → logprob: -9.000158309936523
    3. 'af' → logprob: -10.875158309936523
    4. ' Aff' → logprob: -11.750158309936523
    5. '.aff' → logprob: -13.000158309936523
    6. 'affer' → logprob: -13.125158309936523
    7. '_aff' → logprob: -14.125158309936523
    8. ''aff' → logprob: -14.375158309936523
    9. 'Afficher' → logprob: -14.375158309936523
    10. 'affe' → logprob: -14.875158309936523

Token 238: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.000980766722932458
    2. ' afficher' → logprob: -7.000980854034424
    3. 'af' → logprob: -11.000980377197266
    4. 'Afficher' → logprob: -11.125980377197266
    5. 'ex' → logprob: -11.375980377197266
    6. ''aff' → logprob: -11.875980377197266
    7. 'affe' → logprob: -12.375980377197266
    8. '.aff' → logprob: -12.375980377197266
    9. 'affer' → logprob: -12.875980377197266
    10. 'affa' → logprob: -13.000980377197266

Token 239: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0004178025701548904
    2. ' les' → logprob: -8.000417709350586
    3. '_tables' → logprob: -9.750417709350586
    4. 'des' → logprob: -11.625417709350586
    5. 'tables' → logprob: -11.875417709350586
    6. '_l' → logprob: -13.250417709350586
    7. '_des' → logprob: -13.500417709350586
    8. 't' → logprob: -13.750417709350586
    9. '_' → logprob: -14.125417709350586
    10. 'l' → logprob: -14.250417709350586

Token 240: ' tables' (ID: 16584)
  Prédit: 'tables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tables' → logprob: -0.00011844364780699834
    2. 'table' → logprob: -9.125118255615234
    3. ' tables' → logprob: -12.500118255615234
    4. 'tabl' → logprob: -13.750118255615234
    5. '_tables' → logprob: -13.875118255615234
    6. '.tables' → logprob: -13.875118255615234
    7. 'Tables' → logprob: -14.125118255615234
    8. 'multip' → logprob: -14.125118255615234
    9. 'tab' → logprob: -14.375118255615234
    10. 'ta' → logprob: -14.750118255615234

Token 241: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.024035314098000526
    2. '_de' → logprob: -3.7740352153778076
    3. ' de' → logprob: -7.274035453796387
    4. '   ' → logprob: -9.649035453796387
    5. 'des' → logprob: -11.399035453796387
    6. '_' → logprob: -11.774035453796387
    7. 'def' → logprob: -12.774035453796387
    8. '#' → logprob: -12.899035453796387
    9. '.de' → logprob: -13.399035453796387
    10. 'd' → logprob: -13.899035453796387

Token 242: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.2113979209971149e-05
    2. ' multiplication' → logprob: -11.625012397766113
    3. 'mult' → logprob: -13.500012397766113
    4. 'mont' → logprob: -14.000012397766113
    5. 'Multip' → logprob: -15.125012397766113
    6. 'multi' → logprob: -15.250012397766113
    7. 'mutation' → logprob: -16.000011444091797
    8. 'multiple' → logprob: -17.375011444091797
    9. ' Multip' → logprob: -17.625011444091797
    10. 'multipart' → logprob: -18.000011444091797

Token 243: '
' (ID: 198)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.00014644917973782867
    2. ' afficher' → logprob: -9.125146865844727
    3. 'af' → logprob: -10.625146865844727
    4. '.aff' → logprob: -12.500146865844727
    5. ' Aff' → logprob: -12.875146865844727
    6. 'affer' → logprob: -13.250146865844727
    7. '_aff' → logprob: -13.750146865844727
    8. 'Afficher' → logprob: -13.875146865844727
    9. 'if' → logprob: -14.375146865844727
    10. 'affe' → logprob: -14.375146865844727

Token 244: 'aff' (ID: 2857)
  Prédit: 'aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.0002233245177194476
    2. ' afficher' → logprob: -8.500223159790039
    3. ' Aff' → logprob: -11.750223159790039
    4. 'af' → logprob: -12.250223159790039
    5. '.aff' → logprob: -12.750223159790039
    6. 'affer' → logprob: -14.000223159790039
    7. ''aff' → logprob: -14.375223159790039
    8. 'Afficher' → logprob: -14.625223159790039
    9. '_aff' → logprob: -14.750223159790039
    10. 'affe' → logprob: -14.750223159790039

Token 245: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.00043043080950155854
    2. 'ich' → logprob: -8.0004301071167
    3. 'ichier' → logprob: -10.0004301071167
    4. 'ichage' → logprob: -10.6254301071167
    5. 'iche' → logprob: -11.5004301071167
    6. ' afficher' → logprob: -12.0004301071167
    7. 'ichert' → logprob: -12.3754301071167
    8. 'ichter' → logprob: -13.1254301071167
    9. 'ichern' → logprob: -13.6254301071167
    10. 'ic' → logprob: -14.6254301071167

Token 246: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -7.016616291366518e-05
    2. '_t' → logprob: -10.875070571899414
    3. '_' → logprob: -12.375070571899414
    4. '_tabs' → logprob: -12.500070571899414
    5. '_table' → logprob: -12.625070571899414
    6. '_tiles' → logprob: -13.000070571899414
    7. 'Tables' → logprob: -13.125070571899414
    8. '_templates' → logprob: -13.500070571899414
    9. '"_' → logprob: -13.750070571899414
    10. '_aff' → logprob: -13.875070571899414

Token 247: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.031084615737199783
    2. '_' → logprob: -3.7810845375061035
    3. '_de' → logprob: -5.5310845375061035
    4. '_mult' → logprob: -7.7810845375061035
    5. '_du' → logprob: -8.281085014343262
    6. '_d' → logprob: -8.406085014343262
    7. '_multiplier' → logprob: -8.406085014343262
    8. '_mul' → logprob: -8.531085014343262
    9. '_M' → logprob: -8.656085014343262
    10. '_b' → logprob: -8.781085014343262

Token 248: 'ultip' (ID: 22975)
  Prédit: 'ultip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultip' → logprob: -3.953082341467962e-05
    2. 'ult' → logprob: -10.625039100646973
    3. 'ulti' → logprob: -11.375039100646973
    4. 'utip' → logprob: -13.750039100646973
    5. 'multip' → logprob: -13.875039100646973
    6. 'ul' → logprob: -14.000039100646973
    7. 'ultiple' → logprob: -14.625039100646973
    8. 'Multip' → logprob: -15.625039100646973
    9. ' Multip' → logprob: -16.25004005432129
    10. ' multiplication' → logprob: -16.75004005432129

Token 249: 'lication' (ID: 2389)
  Prédit: 'lication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.00021390743495430797
    2. 'liction' → logprob: -9.375213623046875
    3. 'ilation' → logprob: -9.625213623046875
    4. 'lic' → logprob: -10.250213623046875
    5. 'ication' → logprob: -11.875213623046875
    6. 'li' → logprob: -12.125213623046875
    7. 'lation' → logprob: -12.500213623046875
    8. 'lications' → logprob: -12.875213623046875
    9. 'l' → logprob: -13.375213623046875
    10. 'letion' → logprob: -13.500213623046875

Token 250: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018804390856530517
    2. '```' → logprob: -9.125187873840332
    3. '())' → logprob: -10.250187873840332
    4. ')' → logprob: -10.750187873840332
    5. '()`' → logprob: -11.500187873840332
    6. ']()' → logprob: -13.125187873840332
    7. '`()' → logprob: -13.250187873840332
    8. '(' → logprob: -13.250187873840332
    9. '<|end|>' → logprob: -14.000187873840332
    10. '>()' → logprob: -14.250187873840332


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 248
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 155
Précision stricte (1ère position): 24.60%
Précision adaptée (1ère position): 25.40%
Précision (top 10): 62.50%
================================================================================
