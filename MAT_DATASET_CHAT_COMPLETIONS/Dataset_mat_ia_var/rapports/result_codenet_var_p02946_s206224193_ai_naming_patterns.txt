================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    input_range_size, input_center = map(int, input().split())
    range_start = input_center - input_range_size + 1
    range_end = input_center + input_range_size
    lower_bound = -1000000
    upper_bound = 1000000
    for current_value in range(range_start, range_end):
        if lower_bound <= current_value <= upper_bound:
            print(current_value, end=' ')

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.14868979156017303
    2. '\n' → logprob: -2.7736897468566895
    3. '(' → logprob: -3.6486897468566895
    4. ' ' → logprob: -4.6486897468566895
    5. '   ' → logprob: -4.6486897468566895
    6. ' 
' → logprob: -4.6486897468566895
    7. '    ' → logprob: -5.3986897468566895
    8. '    
' → logprob: -5.5236897468566895
    9. ''' → logprob: -5.8986897468566895
    10. '```' → logprob: -6.2736897468566895

Token 4: ' input' (ID: 3422)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: '_range' (ID: 22022)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02088763937354088
    2. '_' → logprob: -4.020887851715088
    3. '('' → logprob: -7.770887851715088
    4. ''' → logprob: -8.14588737487793
    5. '()' → logprob: -8.27088737487793
    6. '_text' → logprob: -8.52088737487793
    7. '"' → logprob: -8.52088737487793
    8. 's' → logprob: -9.14588737487793
    9. '("("' → logprob: -9.14588737487793
    10. ')' → logprob: -9.27088737487793

Token 6: '_size' (ID: 5044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19651544094085693
    2. '_' → logprob: -2.5715155601501465
    3. '=' → logprob: -2.8215155601501465
    4. ' =' → logprob: -3.8215155601501465
    5. '[' → logprob: -4.8215155601501465
    6. 's' → logprob: -5.4465155601501465
    7. '[:]' → logprob: -5.9465155601501465
    8. ')' → logprob: -6.6965155601501465
    9. '```' → logprob: -7.1965155601501465
    10. '()' → logprob: -7.3215155601501465

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1864248812198639
    2. '_' → logprob: -2.061424970626831
    3. ' =' → logprob: -3.436424970626831
    4. ')' → logprob: -5.311424732208252
    5. '_space' → logprob: -5.811424732208252
    6. '(' → logprob: -7.186424732208252
    7. ' ' → logprob: -7.811424732208252
    8. 's' → logprob: -8.06142520904541
    9. '[' → logprob: -8.56142520904541
    10. '.' → logprob: -8.56142520904541

Token 8: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9934520721435547
    2. ' ' → logprob: -1.1184520721435547
    3. 'input' → logprob: -2.2434520721435547
    4. ' output' → logprob: -2.7434520721435547
    5. ' =' → logprob: -2.9934520721435547
    6. 'output' → logprob: -3.7434520721435547
    7. '  ' → logprob: -4.243452072143555
    8. 'space' → logprob: -5.118452072143555
    9. ' space' → logprob: -5.243452072143555
    10. '    ' → logprob: -5.368452072143555

Token 9: '_center' (ID: 48737)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.525693416595459
    2. '_' → logprob: -1.400693416595459
    3. '_value' → logprob: -2.275693416595459
    4. '_size' → logprob: -3.650693416595459
    5. '_data' → logprob: -4.275693416595459
    6. '_val' → logprob: -5.025693416595459
    7. '_length' → logprob: -6.150693416595459
    8. '_ranges' → logprob: -6.400693416595459
    9. '_values' → logprob: -7.025693416595459
    10. '_type' → logprob: -7.025693416595459

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39747369289398193
    2. ' =' → logprob: -1.147473692893982
    3. '_' → logprob: -4.6474738121032715
    4. ',' → logprob: -7.5224738121032715
    5. ')' → logprob: -8.272473335266113
    6. '_=' → logprob: -10.022473335266113
    7. ' _' → logprob: -10.647473335266113
    8. '_space' → logprob: -11.147473335266113
    9. 's' → logprob: -11.272473335266113
    10. '```' → logprob: -11.397473335266113

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.13235355913639069
    2. ' input' → logprob: -2.6323535442352295
    3. 'map' → logprob: -3.3823535442352295
    4. 'input' → logprob: -4.507353782653809
    5. ' int' → logprob: -5.382353782653809
    6. ' ' → logprob: -7.132353782653809
    7. 'int' → logprob: -7.132353782653809
    8. ' tuple' → logprob: -8.382353782653809
    9. ' list' → logprob: -8.757353782653809
    10. ' [' → logprob: -9.382353782653809

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8116200566291809
    2. '(' → logprob: -1.0616199970245361
    3. '(lambda' → logprob: -1.6866199970245361
    4. '(str' → logprob: -3.936619997024536
    5. '<|end|>' → logprob: -5.561620235443115
    6. '(
' → logprob: -8.061619758605957
    7. 'lambda' → logprob: -8.436619758605957
    8. '()' → logprob: -8.686619758605957
    9. 'int' → logprob: -8.811619758605957
    10. '(input' → logprob: -9.436619758605957

Token 13: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3355706036090851
    2. '(input' → logprob: -1.5855705738067627
    3. '(' → logprob: -2.8355705738067627
    4. 'input' → logprob: -4.960570812225342
    5. '<|end|>' → logprob: -5.460570812225342
    6. '```' → logprob: -5.585570812225342
    7. '(token' → logprob: -6.960570812225342
    8. '('' → logprob: -7.585570812225342
    9. '<|end|>' → logprob: -7.585570812225342
    10. ' input' → logprob: -7.960570812225342

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2038126438856125
    2. 'input' → logprob: -1.703812599182129
    3. ')' → logprob: -6.203812599182129
    4. ' )' → logprob: -7.953812599182129
    5. '(input' → logprob: -11.078812599182129
    6. '=input' → logprob: -13.453812599182129
    7. ' raw' → logprob: -13.828812599182129
    8. ' ' → logprob: -13.953812599182129
    9. '	input' → logprob: -14.078812599182129
    10. ',input' → logprob: -14.453812599182129

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.23107390105724335
    2. '()' → logprob: -2.1060738563537598
    3. '())' → logprob: -2.4810738563537598
    4. ')' → logprob: -7.48107385635376
    5. '(' → logprob: -8.731074333190918
    6. '()
' → logprob: -9.356074333190918
    7. '());' → logprob: -10.856074333190918
    8. '()[' → logprob: -10.981074333190918
    9. '('' → logprob: -11.231074333190918
    10. '()))' → logprob: -11.856074333190918

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011069540778407827
    2. 'strip' → logprob: -9.125110626220703
    3. ' split' → logprob: -13.875110626220703
    4. 'rstrip' → logprob: -14.375110626220703
    5. '(split' → logprob: -15.875110626220703
    6. 'spl' → logprob: -17.500110626220703
    7. 'replace' → logprob: -18.250110626220703
    8. ')' → logprob: -18.375110626220703
    9. 's' → logprob: -18.750110626220703
    10. 'sp' → logprob: -18.875110626220703

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16814681887626648
    2. '())' → logprob: -1.9181468486785889
    3. '))' → logprob: -5.66814661026001
    4. '()' → logprob: -6.29314661026001
    5. '('' → logprob: -6.79314661026001
    6. '(' → logprob: -7.04314661026001
    7. '()))' → logprob: -8.668147087097168
    8. '(','' → logprob: -9.793147087097168
    9. ')(' → logprob: -10.168147087097168
    10. '),' → logprob: -10.168147087097168

Token 18: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4149677753448486
    2. ',' → logprob: -1.5399677753448486
    3. '
' → logprob: -2.0399677753448486
    4. '   ' → logprob: -2.2899677753448486
    5. ')' → logprob: -2.7899677753448486
    6. '```' → logprob: -3.0399677753448486
    7. '    
' → logprob: -3.6649677753448486
    8. ',
' → logprob: -3.6649677753448486
    9. '`' → logprob: -3.7899677753448486
    10. ':' → logprob: -3.9149677753448486

Token 19: ' range' (ID: 3352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.177754282951355
    2. '\n' → logprob: -1.927754282951355
    3. ',' → logprob: -2.1777544021606445
    4. '   ' → logprob: -2.5527544021606445
    5. ')' → logprob: -2.6777544021606445
    6. '\' → logprob: -3.1777544021606445
    7. '_' → logprob: -3.3027544021606445
    8. ' 
' → logprob: -3.5527544021606445
    9. '    
' → logprob: -4.1777544021606445
    10. '
' → logprob: -4.3027544021606445

Token 20: '_start' (ID: 10949)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3893085718154907
    2. '_size' → logprob: -1.1393085718154907
    3. '_s' → logprob: -7.639308452606201
    4. '_range' → logprob: -7.639308452606201
    5. '_start' → logprob: -7.889308452606201
    6. '_space' → logprob: -8.01430892944336
    7. ' _' → logprob: -8.88930892944336
    8. '_length' → logprob: -8.88930892944336
    9. 's' → logprob: -9.76430892944336
    10. '_max' → logprob: -10.26430892944336

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4104081392288208
    2. '_' → logprob: -1.4104081392288208
    3. '=' → logprob: -2.4104080200195312
    4. ' _' → logprob: -7.160408020019531
    5. ',' → logprob: -7.535408020019531
    6. ' ' → logprob: -8.285408020019531
    7. ' +=' → logprob: -8.785408020019531
    8. '+' → logprob: -8.910408020019531
    9. '_space' → logprob: -8.910408020019531
    10. '<|end|>' → logprob: -8.910408020019531

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.015138769522309303
    2. 'input' → logprob: -4.265138626098633
    3. ' ' → logprob: -7.390138626098633
    4. ' max' → logprob: -9.140138626098633
    5. ' int' → logprob: -9.265138626098633
    6. '(input' → logprob: -10.015138626098633
    7. ' (' → logprob: -10.015138626098633
    8. '0' → logprob: -10.640138626098633
    9. 'int' → logprob: -11.640138626098633
    10. 'max' → logprob: -11.765138626098633

Token 23: '_center' (ID: 48737)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.026684686541557312
    2. '_' → logprob: -3.6516847610473633
    3. '_ranges' → logprob: -8.526684761047363
    4. ' _' → logprob: -10.776684761047363
    5. '_-' → logprob: -10.901684761047363
    6. '_size' → logprob: -10.901684761047363
    7. '[' → logprob: -11.026684761047363
    8. '_r' → logprob: -11.151684761047363
    9. '_token' → logprob: -11.526684761047363
    10. '_start' → logprob: -11.901684761047363

Token 24: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006882557645440102
    2. '-' → logprob: -5.006882667541504
    3. ' ' → logprob: -8.881882667541504
    4. '-input' → logprob: -11.881882667541504
    5. ' ' → logprob: -12.131882667541504
    6. '<|end|>' → logprob: -12.131882667541504
    7. '-space' → logprob: -12.506882667541504
    8. '-int' → logprob: -13.881882667541504
    9. '-range' → logprob: -14.131882667541504
    10. ' -
' → logprob: -14.506882667541504

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.26390340924263
    2. 'input' → logprob: -1.5139033794403076
    3. ' (' → logprob: -4.638903617858887
    4. '(input' → logprob: -6.263903617858887
    5. '(' → logprob: -8.638903617858887
    6. 'int' → logprob: -9.388903617858887
    7. ' int' → logprob: -10.388903617858887
    8. ' ' → logprob: -10.763903617858887
    9. ' range' → logprob: -12.513903617858887
    10. '=input' → logprob: -13.138903617858887

Token 26: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -4.024604277219623e-05
    2. '_' → logprob: -10.250040054321289
    3. '_ranges' → logprob: -12.875040054321289
    4. ' _' → logprob: -14.250040054321289
    5. '_token' → logprob: -14.625040054321289
    6. 'range' → logprob: -14.750040054321289
    7. '_RANGE' → logprob: -16.12504005432129
    8. '_space' → logprob: -16.25004005432129
    9. 'Range' → logprob: -16.50004005432129
    10. '_r' → logprob: -16.50004005432129

Token 27: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00015205175441224128
    2. '_range' → logprob: -9.625151634216309
    3. '_s' → logprob: -9.750151634216309
    4. '_' → logprob: -11.125151634216309
    5. ' _' → logprob: -11.375151634216309
    6. '_sizes' → logprob: -14.875151634216309
    7. 'size' → logprob: -15.250151634216309
    8. '```' → logprob: -15.875151634216309
    9. '_space' → logprob: -16.000152587890625
    10. 's' → logprob: -16.250152587890625

Token 28: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6012287735939026
    2. ' //' → logprob: -1.8512287139892578
    3. '<|end|>' → logprob: -1.9762287139892578
    4. ' +' → logprob: -3.101228713989258
    5. ' ' → logprob: -3.601228713989258
    6. '+' → logprob: -4.101228713989258
    7. '1' → logprob: -4.726228713989258
    8. '2' → logprob: -4.726228713989258
    9. '<|end|>' → logprob: -4.726228713989258
    10. '```' → logprob: -4.976228713989258

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17979153990745544
    2. ' ' → logprob: -1.8047915697097778
    3. ' input' → logprob: -11.554791450500488
    4. '0' → logprob: -11.679791450500488
    5. 'input' → logprob: -12.304791450500488
    6. ' (' → logprob: -12.304791450500488
    7. '10' → logprob: -12.554791450500488
    8. '2' → logprob: -12.554791450500488
    9. 'int' → logprob: -13.492291450500488
    10. '(' → logprob: -13.554791450500488

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004666980355978012
    2. ' ' → logprob: -5.379666805267334
    3. 'input' → logprob: -11.504667282104492
    4. '0' → logprob: -11.754667282104492
    5. ' input' → logprob: -11.879667282104492
    6. '2' → logprob: -12.004667282104492
    7. '10' → logprob: -13.129667282104492
    8. 'int' → logprob: -13.379667282104492
    9. ' (' → logprob: -13.629667282104492
    10. '100' → logprob: -13.629667282104492

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7423303723335266
    2. '<|end|>' → logprob: -0.8673303723335266
    3. '
' → logprob: -2.867330312728882
    4. '   ' → logprob: -4.242330551147461
    5. '<|end|>' → logprob: -4.742330551147461
    6. 'range' → logprob: -4.992330551147461
    7. '```' → logprob: -5.367330551147461
    8. ' ' → logprob: -6.117330551147461
    9. '\n' → logprob: -6.367330551147461
    10. 'newline' → logprob: -7.117330551147461

Token 33: ' range' (ID: 3352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6041029095649719
    2. 'range' (adapté à ' range') → logprob: -1.6041028499603271
    3. ' range' → logprob: -1.7291028499603271
    4. '
' → logprob: -4.229103088378906
    5. ')' → logprob: -4.729103088378906
    6. '```' → logprob: -4.854103088378906
    7. ' ' → logprob: -4.979103088378906
    8. '    
' → logprob: -5.104103088378906
    9. ' 
' → logprob: -5.229103088378906
    10. '_range' → logprob: -5.729103088378906

Token 34: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.8641014099121094
    2. '_' → logprob: -0.9891014099121094
    3. '_start' → logprob: -2.1141014099121094
    4. '_size' → logprob: -2.4891014099121094
    5. ' _' → logprob: -6.739101409912109
    6. '_s' → logprob: -7.739101409912109
    7. '_length' → logprob: -7.739101409912109
    8. '_stop' → logprob: -8.48910140991211
    9. '_finish' → logprob: -8.98910140991211
    10. '_len' → logprob: -10.11410140991211

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004730464890599251
    2. '=' → logprob: -5.379730701446533
    3. ' ' → logprob: -9.254730224609375
    4. ',' → logprob: -12.379730224609375
    5. ' +=' → logprob: -13.004730224609375
    6. ' +' → logprob: -13.129730224609375
    7. ' =
' → logprob: -13.504730224609375
    8. ' =)' → logprob: -13.754730224609375
    9. '+' → logprob: -14.004730224609375
    10. ')' → logprob: -14.254730224609375

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.018170077353715897
    2. 'input' → logprob: -4.01816987991333
    3. '(input' → logprob: -12.018170356750488
    4. ' ' → logprob: -12.518170356750488
    5. ' range' → logprob: -13.518170356750488
    6. '=input' → logprob: -13.518170356750488
    7. '   ' → logprob: -13.768170356750488
    8. '<input' → logprob: -13.893170356750488
    9. 'range' → logprob: -14.018170356750488
    10. ' (' → logprob: -14.018170356750488

Token 37: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.0012541614705696702
    2. '_' → logprob: -7.001254081726074
    3. '_c' → logprob: -8.626254081726074
    4. '_cent' → logprob: -9.376254081726074
    5. '_range' → logprob: -9.626254081726074
    6. ' _' → logprob: -12.626254081726074
    7. '_start' → logprob: -12.876254081726074
    8. '_ce' → logprob: -13.751254081726074
    9. 'center' → logprob: -14.126254081726074
    10. '_cut' → logprob: -14.376254081726074

Token 38: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16056255996227264
    2. '+' → logprob: -1.910562515258789
    3. ' +
' → logprob: -8.285562515258789
    4. '+
' → logprob: -10.410562515258789
    5. '<|end|>' → logprob: -10.660562515258789
    6. '   ' → logprob: -11.285562515258789
    7. ' +

' → logprob: -12.285562515258789
    8. ' ' → logprob: -12.535562515258789
    9. '```' → logprob: -12.910562515258789
    10. ')' → logprob: -13.285562515258789

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.008769853040575981
    2. 'input' → logprob: -4.758769989013672
    3. '1' → logprob: -8.883769989013672
    4. ' ' → logprob: -11.133769989013672
    5. '<input' → logprob: -14.508769989013672
    6. '    ' → logprob: -15.258769989013672
    7. 'int' → logprob: -15.758769989013672
    8. '0' → logprob: -15.883769989013672
    9. '(input' → logprob: -16.008769989013672
    10. 'space' → logprob: -16.258769989013672

Token 40: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -9.281485836254433e-05
    2. '_' → logprob: -9.625092506408691
    3. '_size' → logprob: -11.250092506408691
    4. 'range' → logprob: -12.000092506408691
    5. '_ranges' → logprob: -12.750092506408691
    6. '_r' → logprob: -14.000092506408691
    7. '_space' → logprob: -14.000092506408691
    8. '_center' → logprob: -14.125092506408691
    9. 'Range' → logprob: -14.875092506408691
    10. '_RANGE' → logprob: -15.375092506408691

Token 41: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00027456742827780545
    2. '_' → logprob: -9.000274658203125
    3. '_s' → logprob: -9.000274658203125
    4. ' _' → logprob: -11.250274658203125
    5. '_range' → logprob: -12.125274658203125
    6. '```' → logprob: -13.375274658203125
    7. '_start' → logprob: -13.500274658203125
    8. '_SIZE' → logprob: -13.750274658203125
    9. '   ' → logprob: -14.125274658203125
    10. '__' → logprob: -14.500274658203125

Token 42: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020562442019581795
    2. ' +' → logprob: -4.020562648773193
    3. '+
' → logprob: -7.145562648773193
    4. '   ' → logprob: -7.395562648773193
    5. '```' → logprob: -7.395562648773193
    6. ')' → logprob: -9.270562171936035
    7. ' ' → logprob: -9.770562171936035
    8. ' +
' → logprob: -9.770562171936035
    9. '\' → logprob: -10.270562171936035
    10. '\n' → logprob: -10.395562171936035

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24920697510242462
    2. ':' → logprob: -3.249207019805908
    3. '\' → logprob: -3.499207019805908
    4. '<|end|>' → logprob: -3.499207019805908
    5. '```' → logprob: -3.624207019805908
    6. '
' → logprob: -3.624207019805908
    7. '\n' → logprob: -3.999207019805908
    8. ')' → logprob: -3.999207019805908
    9. '    
' → logprob: -4.374207019805908
    10. ' ' → logprob: -4.749207019805908

Token 44: ' lower' (ID: 6931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9351603984832764
    2. ' ' → logprob: -1.6851603984832764
    3. ' for' → logprob: -1.6851603984832764
    4. '```' → logprob: -2.8101603984832764
    5. ':' → logprob: -3.3101603984832764
    6. 'for' → logprob: -3.5601603984832764
    7. '\n' → logprob: -3.6851603984832764
    8. '\' → logprob: -4.1851606369018555
    9. '    
' → logprob: -4.4351606369018555
    10. ')' → logprob: -4.6851606369018555

Token 45: '_bound' (ID: 47558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.436086505651474
    2. '_bound' → logprob: -1.0610865354537964
    3. '_limit' → logprob: -5.811086654663086
    4. '_range' → logprob: -6.186086654663086
    5. ' _' → logprob: -7.311086654663086
    6. '_case' → logprob: -7.686086654663086
    7. '_bounds' → logprob: -8.186086654663086
    8. '_space' → logprob: -8.936086654663086
    9. 'case' → logprob: -9.061086654663086
    10. '_boundary' → logprob: -9.186086654663086

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062067169696092606
    2. '_' → logprob: -3.6870672702789307
    3. '=' → logprob: -4.312067031860352
    4. ' <=' → logprob: -5.062067031860352
    5. ',' → logprob: -5.312067031860352
    6. ' ' → logprob: -5.812067031860352
    7. ' >=' → logprob: -6.562067031860352
    8. ' <' → logprob: -6.812067031860352
    9. ' _' → logprob: -7.062067031860352
    10. '<|end|>' → logprob: -7.312067031860352

Token 47: ' -' (ID: 533)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12544357776641846
    2. 'range' → logprob: -2.375443458557129
    3. ' input' → logprob: -4.250443458557129
    4. '0' → logprob: -5.625443458557129
    5. ' max' → logprob: -6.000443458557129
    6. ' ' → logprob: -6.250443458557129
    7. ' min' → logprob: -7.500443458557129
    8. 'input' → logprob: -7.500443458557129
    9. ' int' → logprob: -7.875443458557129
    10. 'int' → logprob: -8.375443458557129

Token 48: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5970860123634338
    2. '10' → logprob: -1.472085952758789
    3. 'input' → logprob: -3.097085952758789
    4. 'range' → logprob: -3.472085952758789
    5. '1' → logprob: -3.722085952758789
    6. '(' → logprob: -4.222085952758789
    7. '50' → logprob: -4.222085952758789
    8. '999' → logprob: -4.347085952758789
    9. '2' → logprob: -4.847085952758789
    10. '200' → logprob: -4.972085952758789

Token 49: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3099666833877563
    2. '<|end|>' → logprob: -1.6849666833877563
    3. '1' → logprob: -1.8099666833877563
    4. '
' → logprob: -2.059966564178467
    5. '100' → logprob: -2.184966564178467
    6. '   ' → logprob: -2.559966564178467
    7. ' ' → logprob: -4.684966564178467
    8. '2' → logprob: -4.684966564178467
    9. '```' → logprob: -4.809966564178467
    10. '    ' → logprob: -5.434966564178467

Token 50: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.701556384563446
    2. '<|end|>' → logprob: -1.5765564441680908
    3. '
' → logprob: -1.9515564441680908
    4. '```' → logprob: -2.951556444168091
    5. ' 
' → logprob: -3.576556444168091
    6. ' ' → logprob: -3.576556444168091
    7. '    
' → logprob: -4.201556205749512
    8. '  
' → logprob: -5.201556205749512
    9. '<|end|>' → logprob: -5.201556205749512
    10. ')' → logprob: -5.951556205749512

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42958423495292664
    2. '<|end|>' → logprob: -1.929584264755249
    3. '```' → logprob: -2.304584264755249
    4. ' ' → logprob: -3.304584264755249
    5. '
' → logprob: -3.929584264755249
    6. '    
' → logprob: -4.55458402633667
    7. ')' → logprob: -4.67958402633667
    8. ' 
' → logprob: -4.92958402633667
    9. '  
' → logprob: -5.55458402633667
    10. '<|end|>' → logprob: -5.92958402633667

Token 53: ' upper' (ID: 13057)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2853924632072449
    2. ' ' → logprob: -1.7853925228118896
    3. ')' → logprob: -3.6603925228118896
    4. '```' → logprob: -4.6603922843933105
    5. '    
' → logprob: -5.0353922843933105
    6. ' 
' → logprob: -5.2853922843933105
    7. '<|end|>' → logprob: -5.6603922843933105
    8. 'n' → logprob: -5.6603922843933105
    9. '
' → logprob: -6.0353922843933105
    10. '-' → logprob: -6.0353922843933105

Token 54: '_bound' (ID: 47558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6471933722496033
    2. '_bound' → logprob: -0.7721933722496033
    3. '_range' → logprob: -4.772193431854248
    4. ' =' → logprob: -6.272193431854248
    5. '_limit' → logprob: -6.272193431854248
    6. ' _' → logprob: -7.272193431854248
    7. '_bounds' → logprob: -7.647193431854248
    8. '=' → logprob: -7.897193431854248
    9. '_value' → logprob: -8.77219295501709
    10. '=_' → logprob: -9.14719295501709

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021882106084376574
    2. '=' → logprob: -6.127188205718994
    3. ',' → logprob: -13.752188682556152
    4. ' ' → logprob: -14.002188682556152
    5. ' =
' → logprob: -15.252188682556152
    6. '   ' → logprob: -15.252188682556152
    7. ' ,' → logprob: -15.627188682556152
    8. '<|end|>' → logprob: -15.627188682556152
    9. ')' → logprob: -16.127187728881836
    10. '    ' → logprob: -16.502187728881836

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326603293418884
    2. '100' → logprob: -0.7576603293418884
    3. '10' → logprob: -11.257659912109375
    4. '1' → logprob: -11.257659912109375
    5. '+' → logprob: -11.507659912109375
    6. '0' → logprob: -12.195159912109375
    7. ' -' → logprob: -12.632659912109375
    8. ' +' → logprob: -12.695159912109375
    9. '999' → logprob: -13.070159912109375
    10. 'range' → logprob: -13.070159912109375

Token 57: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0182963777333498
    2. ' ' → logprob: -4.018296241760254
    3. '+' → logprob: -10.268296241760254
    4. '0' → logprob: -10.518296241760254
    5. 'range' → logprob: -10.518296241760254
    6. '999' → logprob: -11.518296241760254
    7. '1' → logprob: -11.768296241760254
    8. '-' → logprob: -11.830796241760254
    9. '10' → logprob: -12.018296241760254
    10. ' range' → logprob: -12.143296241760254

Token 58: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.30012863874435425
    2. '6' → logprob: -1.425128698348999
    3. '7' → logprob: -5.17512845993042
    4. '4' → logprob: -5.30012845993042
    5. '5' → logprob: -5.30012845993042
    6. '```' → logprob: -6.92512845993042
    7. '   ' → logprob: -7.73762845993042
    8. '0' → logprob: -8.550128936767578
    9. '       ' → logprob: -8.550128936767578
    10. '006' → logprob: -8.800128936767578

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '00' → logprob: -12.750003814697266
    3. ' ' → logprob: -15.500003814697266
    4. ')' → logprob: -15.875003814697266
    5. '1' → logprob: -16.000003814697266
    6. '6' → logprob: -16.875003814697266
    7. '+' → logprob: -17.000003814697266
    8. '```' → logprob: -17.500003814697266
    9. '۰' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.312503814697266

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12017309665679932
    2. '<|end|>' → logprob: -2.8701729774475098
    3. '   ' → logprob: -3.1201729774475098
    4. '    
' → logprob: -5.49517297744751
    5. '```' → logprob: -5.99517297744751
    6. ' 
' → logprob: -6.74517297744751
    7. ')' → logprob: -6.99517297744751
    8. '  
' → logprob: -7.12017297744751
    9. '\n' → logprob: -7.37017297744751
    10. '' → logprob: -7.49517297744751

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6832281351089478
    2. ' ' → logprob: -1.4332281351089478
    3. '<|end|>' → logprob: -2.558228015899658
    4. '\n' → logprob: -2.933228015899658
    5. '```' → logprob: -3.683228015899658
    6. '\' → logprob: -3.683228015899658
    7. '
' → logprob: -3.933228015899658
    8. ')' → logprob: -4.183228015899658
    9. ' 
' → logprob: -4.808228015899658
    10. '    
' → logprob: -4.933228015899658

Token 62: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1395588517189026
    2. '<|end|>' → logprob: -3.889558792114258
    3. '\n' → logprob: -4.139558792114258
    4. ' ' → logprob: -4.139558792114258
    5. '```' → logprob: -4.264558792114258
    6. '
' → logprob: -4.264558792114258
    7. 'n' → logprob: -4.389558792114258
    8. ')' → logprob: -4.639558792114258
    9. '    
' → logprob: -4.764558792114258
    10. '\' → logprob: -5.514558792114258

Token 63: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.49689555168151855
    2. ' ' → logprob: -1.1218955516815186
    3. ' _' → logprob: -2.7468955516815186
    4. ' value' → logprob: -7.871895790100098
    5. ' range' → logprob: -8.121895790100098
    6. '_' → logprob: -8.246895790100098
    7. ' space' → logprob: -8.621895790100098
    8. ' x' → logprob: -8.746895790100098
    9. ' num' → logprob: -8.871895790100098
    10. ' number' → logprob: -9.246895790100098

Token 64: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15371716022491455
    2. '_number' → logprob: -3.153717041015625
    3. ' in' → logprob: -3.653717041015625
    4. '_value' → logprob: -3.778717041015625
    5. '_num' → logprob: -3.778717041015625
    6. ' _' → logprob: -4.528717041015625
    7. '_range' → logprob: -4.903717041015625
    8. '_i' → logprob: -6.278717041015625
    9. '_index' → logprob: -6.278717041015625
    10. '_val' → logprob: -6.403717041015625

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021022235974669456
    2. 'in' → logprob: -3.896022319793701
    3. ' ' → logprob: -7.771022319793701
    4. '	in' → logprob: -11.521021842956543
    5. ',' → logprob: -11.896021842956543
    6. '<|end|>' → logprob: -11.896021842956543
    7. 's' → logprob: -12.271021842956543
    8. '  ' → logprob: -12.271021842956543
    9. 'range' → logprob: -12.521021842956543
    10. 'space' → logprob: -12.958521842956543

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002069371985271573
    2. 'range' → logprob: -6.252069473266602
    3. ' ' → logprob: -9.002069473266602
    4. '	range' → logprob: -11.627069473266602
    5. '(range' → logprob: -12.002069473266602
    6. ' xrange' → logprob: -14.127069473266602
    7. '  ' → logprob: -14.752069473266602
    8. '   ' → logprob: -15.002069473266602
    9. '```' → logprob: -15.127069473266602
    10. ' ' → logprob: -15.377069473266602

Token 67: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.03830815851688385
    2. '(' → logprob: -3.2883081436157227
    3. '(lower' → logprob: -8.538308143615723
    4. ' (' → logprob: -9.663308143615723
    5. '(r' → logprob: -12.413308143615723
    6. '(space' → logprob: -14.038308143615723
    7. '(
' → logprob: -15.163308143615723
    8. '(max' → logprob: -15.413308143615723
    9. '(low' → logprob: -15.663308143615723
    10. '(start' → logprob: -15.663308143615723

Token 68: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.2200749754119897e-06
    2. '_end' → logprob: -13.875001907348633
    3. '_star' → logprob: -14.750001907348633
    4. '_st' → logprob: -15.000001907348633
    5. '(start' → logprob: -16.250001907348633
    6. '(_' → logprob: -16.500001907348633
    7. '_Start' → logprob: -16.625001907348633
    8. '_' → logprob: -16.625001907348633
    9. '_START' → logprob: -16.875001907348633
    10. '(' → logprob: -17.000001907348633

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004890497075393796
    2. ' ,' → logprob: -7.625489234924316
    3. ',
' → logprob: -15.250489234924316
    4. ',

' → logprob: -15.375489234924316
    5. '<|end|>' → logprob: -16.12548828125
    6. ')' → logprob: -16.50048828125
    7. ' ' → logprob: -16.62548828125
    8. ',int' → logprob: -17.12548828125
    9. ',current' → logprob: -17.12548828125
    10. ',end' → logprob: -17.25048828125

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038062259554862976
    2. 'range' → logprob: -3.288062334060669
    3. ' ' → logprob: -11.41306209564209
    4. '	range' → logprob: -12.66306209564209
    5. '(range' → logprob: -13.03806209564209
    6. '    ' → logprob: -13.28806209564209
    7. ')' → logprob: -14.16306209564209
    8. ' ' → logprob: -14.78806209564209
    9. ' upper' → logprob: -14.78806209564209
    10. '```' → logprob: -15.03806209564209

Token 71: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0021664367523044348
    2. '_start' → logprob: -6.377166271209717
    3. '_' → logprob: -7.752166271209717
    4. ' _' → logprob: -11.252166748046875
    5. '   ' → logprob: -12.877166748046875
    6. 'End' → logprob: -13.127166748046875
    7. '_,' → logprob: -13.377166748046875
    8. '_)' → logprob: -13.502166748046875
    9. '_END' → logprob: -13.502166748046875
    10. ')' → logprob: -13.627166748046875

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02577938698232174
    2. ':' → logprob: -3.7757794857025146
    3. ')' → logprob: -6.6507792472839355
    4. '+' → logprob: -7.0257792472839355
    5. ' ):' → logprob: -9.025779724121094
    6. '+:' → logprob: -9.400779724121094
    7. ',' → logprob: -9.650779724121094
    8. '):
' → logprob: -9.775779724121094
    9. '():' → logprob: -11.775779724121094
    10. ' +' → logprob: -12.900779724121094

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8560876846313477
    2. '    ' → logprob: -1.2310876846313477
    3. ':' → logprob: -1.8560876846313477
    4. ' ' → logprob: -2.7310876846313477
    5. '<|end|>' → logprob: -3.6060876846313477
    6. '   ' → logprob: -3.8560876846313477
    7. '     
' → logprob: -5.981087684631348
    8. '        ' → logprob: -6.356087684631348
    9. ' :' → logprob: -6.731087684631348
    10. '     ' → logprob: -7.231087684631348

Token 74: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05803880840539932
    2. '    ' → logprob: -3.5580387115478516
    3. '<|end|>' → logprob: -4.183038711547852
    4. '       ' → logprob: -5.683038711547852
    5. ' if' → logprob: -5.933038711547852
    6. '   ' → logprob: -6.433038711547852
    7. 'if' (adapté à ' if') → logprob: -6.808038711547852
    8. ' 
' → logprob: -6.808038711547852
    9. '        ' → logprob: -7.308038711547852
    10. '     
' → logprob: -8.058038711547852

Token 75: ' lower' (ID: 6931)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.23843072354793549
    2. ' abs' → logprob: -1.9884307384490967
    3. ' ' → logprob: -2.8634307384490967
    4. 'current' → logprob: -4.738430500030518
    5. 'abs' → logprob: -5.113430500030518
    6. ' not' → logprob: -6.863430500030518
    7. ' range' → logprob: -7.238430500030518
    8. ' (' → logprob: -7.613430500030518
    9. ' input' → logprob: -7.988430500030518
    10. '<|end|>' → logprob: -8.363430976867676

Token 76: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.4996282458305359
    2. ' _' → logprob: -1.3746283054351807
    3. '_' → logprob: -1.9996283054351807
    4. '_value' → logprob: -6.749628067016602
    5. '_bounds' → logprob: -6.749628067016602
    6. '_limit' → logprob: -7.749628067016602
    7. '<|end|>' → logprob: -7.874628067016602
    8. '_lower' → logprob: -8.624628067016602
    9. '   ' → logprob: -8.624628067016602
    10. ' <=' → logprob: -8.874628067016602

Token 77: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0030339211225509644
    2. ' <' → logprob: -6.5030341148376465
    3. '<=' → logprob: -7.0030341148376465
    4. ' ' → logprob: -7.6280341148376465
    5. ' >' → logprob: -9.128033638000488
    6. ' >=' → logprob: -12.003033638000488
    7. '<' → logprob: -12.628033638000488
    8. '>' → logprob: -12.878033638000488
    9. '...' → logprob: -13.128033638000488
    10. ' ≤' → logprob: -13.253033638000488

Token 78: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.008633003570139408
    2. 'current' → logprob: -4.758633136749268
    3. ' ' → logprob: -11.75863265991211
    4. ' input' → logprob: -11.88363265991211
    5. '    ' → logprob: -13.25863265991211
    6. 'input' → logprob: -14.88363265991211
    7. '(current' → logprob: -15.38363265991211
    8. '	current' → logprob: -15.38363265991211
    9. 'Current' → logprob: -15.50863265991211
    10. '   ' → logprob: -15.63363265991211

Token 79: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.3596853831550106e-05
    2. '_' → logprob: -10.250053405761719
    3. ' _' → logprob: -11.250053405761719
    4. '_val' → logprob: -12.375053405761719
    5. '_Value' → logprob: -15.625053405761719
    6. '_current' → logprob: -15.750053405761719
    7. '_values' → logprob: -15.875053405761719
    8. 'value' → logprob: -16.00005340576172
    9. '_va' → logprob: -16.00005340576172
    10. '_token' → logprob: -17.12505340576172

Token 80: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04416998103260994
    2. ' and' → logprob: -3.4191699028015137
    3. '<=' → logprob: -5.419169902801514
    4. '<|end|>' → logprob: -5.794169902801514
    5. 'and' → logprob: -6.669169902801514
    6. ' ' → logprob: -6.794169902801514
    7. ' <' → logprob: -7.919169902801514
    8. '<|end|>' → logprob: -9.044170379638672
    9. ':' → logprob: -10.169170379638672
    10. '   ' → logprob: -11.419170379638672

Token 81: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.1269451230764389
    2. 'upper' → logprob: -2.1269450187683105
    3. '   ' → logprob: -12.376945495605469
    4. ' ' → logprob: -12.626945495605469
    5. '.upper' → logprob: -13.126945495605469
    6. '       ' → logprob: -13.251945495605469
    7. '    ' → logprob: -13.376945495605469
    8. ' ' → logprob: -13.751945495605469
    9. '```' → logprob: -14.626945495605469
    10. '_upper' → logprob: -15.064445495605469

Token 82: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.15790285170078278
    2. '_' → logprob: -2.032902956008911
    3. '_b' → logprob: -4.532902717590332
    4. 'er' → logprob: -6.032902717590332
    5. '_range' → logprob: -7.907902717590332
    6. '_bo' → logprob: -8.407902717590332
    7. '```' → logprob: -8.532902717590332
    8. 'b' → logprob: -8.907902717590332
    9. 'bound' → logprob: -9.282902717590332
    10. '_bounds' → logprob: -9.282902717590332

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002879145904444158
    2. ' :' → logprob: -8.750288009643555
    3. ':
' → logprob: -9.250288009643555
    4. '       ' → logprob: -10.875288009643555
    5. ' and' → logprob: -12.125288009643555
    6. ':**' → logprob: -13.000288009643555
    7. '):' → logprob: -13.125288009643555
    8. '   ' → logprob: -13.875288009643555
    9. ',' → logprob: -14.000288009643555
    10. ':return' → logprob: -14.375288009643555

Token 84: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022676710039377213
    2. '       ' → logprob: -4.022676944732666
    3. '           ' → logprob: -6.147676944732666
    4. ':
' → logprob: -6.272676944732666
    5. ' :' → logprob: -8.522676467895508
    6. '<|end|>' → logprob: -9.772676467895508
    7. ',' → logprob: -9.897676467895508
    8. '   ' → logprob: -10.647676467895508
    9. '.' → logprob: -10.772676467895508
    10. ' and' → logprob: -11.272676467895508

Token 85: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7672196626663208
    2. '       ' → logprob: -1.5172196626663208
    3. '           ' → logprob: -1.8922196626663208
    4. '        ' → logprob: -3.1422195434570312
    5. 'print' (adapté à ' print') → logprob: -3.1422195434570312
    6. ' print' → logprob: -3.8922195434570312
    7. ' 
' → logprob: -4.517219543457031
    8. '            ' → logprob: -4.517219543457031
    9. ' ' → logprob: -5.267219543457031
    10. '        
' → logprob: -5.267219543457031

Token 86: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1451301872730255
    2. '(current' → logprob: -2.020130157470703
    3. '(f' → logprob: -6.895130157470703
    4. '('' → logprob: -7.020130157470703
    5. '()' → logprob: -8.395130157470703
    6. '("' → logprob: -9.395130157470703
    7. '("("' → logprob: -9.520130157470703
    8. ' (' → logprob: -10.270130157470703
    9. 'current' → logprob: -10.770130157470703
    10. '((' → logprob: -10.770130157470703

Token 87: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00031055594445206225
    2. '_' → logprob: -8.625310897827148
    3. '_val' → logprob: -9.000310897827148
    4. '_va' → logprob: -13.500310897827148
    5. ' _' → logprob: -13.875310897827148
    6. '_)' → logprob: -14.000310897827148
    7. '_Value' → logprob: -14.000310897827148
    8. '_values' → logprob: -14.250310897827148
    9. ')' → logprob: -14.250310897827148
    10. ')_' → logprob: -14.625310897827148

Token 88: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017958412354346365
    2. ' )' → logprob: -9.000179290771484
    3. ',' → logprob: -10.375179290771484
    4. ')
' → logprob: -11.250179290771484
    5. '))' → logprob: -12.625179290771484
    6. '   ' → logprob: -13.000179290771484
    7. '       ' → logprob: -13.375179290771484
    8. '```' → logprob: -14.250179290771484
    9. ' ' → logprob: -14.625179290771484
    10. '')' → logprob: -14.875179290771484

Token 89: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.30831795930862427
    2. ')' → logprob: -1.5583178997039795
    3. '"' → logprob: -3.9333178997039795
    4. ' end' → logprob: -4.558318138122559
    5. ' )' → logprob: -4.933318138122559
    6. ' ' → logprob: -5.058318138122559
    7. ''' → logprob: -6.058318138122559
    8. '   ' → logprob: -6.433318138122559
    9. ''end' → logprob: -6.433318138122559
    10. 'input' → logprob: -7.183318138122559

Token 90: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.20183895528316498
    2. '=' → logprob: -1.7018389701843262
    3. '="' → logprob: -8.576838493347168
    4. '=',' → logprob: -8.576838493347168
    5. ''' → logprob: -10.826838493347168
    6. '=''' → logprob: -11.076838493347168
    7. '=

' → logprob: -11.826838493347168
    8. '=",' → logprob: -13.576838493347168
    9. ' ='' → logprob: -13.951838493347168
    10. '"' → logprob: -14.076838493347168

Token 91: ' '' (ID: 461)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.4011286497116089
    2. ' ' → logprob: -1.1511286497116089
    3. ' '' → logprob: -4.401128768920898
    4. ' )' → logprob: -6.776128768920898
    5. ''' → logprob: -8.276128768920898
    6. ')' → logprob: -8.526128768920898
    7. ' ')
' → logprob: -9.151128768920898
    8. ' ,' → logprob: -9.651128768920898
    9. '')' → logprob: -10.276128768920898
    10. ' ")' → logprob: -10.526128768920898

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008066523587331176
    2. ')
' → logprob: -7.12580680847168
    3. ' )' → logprob: -13.62580680847168
    4. ')

' → logprob: -15.50080680847168
    5. '')' → logprob: -15.50080680847168
    6. '       ' → logprob: -15.87580680847168
    7. '   ' → logprob: -16.25080680847168
    8. ')
' → logprob: -16.50080680847168
    9. '))' → logprob: -17.37580680847168
    10. ')`' → logprob: -17.62580680847168

Token 93: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5551317930221558
    2. '\n' → logprob: -1.5551317930221558
    3. '<|end|>' → logprob: -1.8051317930221558
    4. '#' → logprob: -4.180131912231445
    5. ')' → logprob: -4.930131912231445
    6. '```' → logprob: -4.930131912231445
    7. '' → logprob: -5.430131912231445
    8. '\' → logprob: -5.555131912231445
    9. ' ' → logprob: -5.680131912231445
    10. 'if' → logprob: -6.430131912231445

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09951344132423401
    2. '_' → logprob: -3.474513530731201
    3. ' ' → logprob: -3.474513530731201
    4. '__' → logprob: -4.349513530731201
    5. ' _' → logprob: -4.599513530731201
    6. ' ' → logprob: -4.974513530731201
    7. '  ' → logprob: -6.849513530731201
    8. '<|end|>' → logprob: -7.099513530731201
    9. ' ▁' → logprob: -7.974513530731201
    10. ' main' → logprob: -8.224513053894043

Token 95: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010899970307946205
    2. '<|end|>' → logprob: -5.260900020599365
    3. '.' → logprob: -6.260900020599365
    4. '.__' → logprob: -7.010900020599365
    5. '_' → logprob: -7.260900020599365
    6. '==' → logprob: -7.260900020599365
    7. '__.__' → logprob: -7.885900020599365
    8. '```' → logprob: -7.885900020599365
    9. ' ==' → logprob: -8.760899543762207
    10. ' __' → logprob: -9.260899543762207

Token 96: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08133580535650253
    2. '_' → logprob: -2.5813357830047607
    3. '__.__' → logprob: -6.95633602142334
    4. '___' → logprob: -8.08133602142334
    5. '__.' → logprob: -8.20633602142334
    6. '.' → logprob: -8.58133602142334
    7. '>' → logprob: -8.83133602142334
    8. '.__' → logprob: -9.20633602142334
    9. '=' → logprob: -9.20633602142334
    10. '==' → logprob: -9.33133602142334

Token 97: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.27153512835502625
    2. ' ==' → logprob: -2.0215351581573486
    3. '==' → logprob: -2.2715351581573486
    4. '<|end|>' → logprob: -7.6465349197387695
    5. '=="' → logprob: -7.8965349197387695
    6. '__.__' → logprob: -8.02153491973877
    7. '.__' → logprob: -8.77153491973877
    8. '.' → logprob: -8.77153491973877
    9. '_' → logprob: -8.89653491973877
    10. '=='' → logprob: -9.02153491973877

Token 98: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741807281970978
    2. ''' → logprob: -0.9741806983947754
    3. ' "__' → logprob: -9.349181175231934
    4. ' "' → logprob: -12.474181175231934
    5. ' '__' → logprob: -12.474181175231934
    6. '"user' → logprob: -12.474181175231934
    7. '__' → logprob: -13.349181175231934
    8. '"name' → logprob: -13.849181175231934
    9. ''"' → logprob: -14.349181175231934
    10. ''s' → logprob: -14.474181175231934

Token 99: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00041851779678836465
    2. '__' → logprob: -8.250418663024902
    3. '_main' → logprob: -9.500418663024902
    4. 'm' → logprob: -10.375418663024902
    5. '_' → logprob: -10.750418663024902
    6. 'name' → logprob: -11.250418663024902
    7. ' main' → logprob: -12.500418663024902
    8. '_MAIN' → logprob: -12.500418663024902
    9. 'ma' → logprob: -12.750418663024902
    10. 'python' → logprob: -13.375418663024902

Token 100: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.031817566603422165
    2. '__":
' → logprob: -3.531817674636841
    3. '_' → logprob: -6.656817436218262
    4. '"' → logprob: -7.281817436218262
    5. '_"' → logprob: -9.406817436218262
    6. '```' → logprob: -13.156817436218262
    7. '__:' → logprob: -13.281817436218262
    8. '__["' → logprob: -13.531817436218262
    9. '__
' → logprob: -13.656817436218262
    10. '__':
' → logprob: -13.906817436218262

Token 101: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.012217172421514988
    2. ' ' → logprob: -4.512217044830322
    3. ' ' → logprob: -7.762217044830322
    4. ' 
' → logprob: -8.26221752166748
    5. 'main' → logprob: -8.26221752166748
    6. '	main' → logprob: -9.51221752166748
    7. '(main' → logprob: -10.26221752166748
    8. '<|end|>' → logprob: -10.88721752166748
    9. '    
' → logprob: -11.26221752166748
    10. '  
' → logprob: -11.38721752166748

Token 102: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.38688185811042786
    2. ' main' → logprob: -1.1368818283081055
    3. '	main' → logprob: -11.511881828308105
    4. '   ' → logprob: -14.886881828308105
    5. 'm' → logprob: -16.011882781982422
    6. ' ' → logprob: -16.261882781982422
    7. ' ' → logprob: -16.261882781982422
    8. '(main' → logprob: -16.511882781982422
    9. '_main' → logprob: -17.261882781982422
    10. '.main' → logprob: -17.636882781982422

Token 103: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17999497056007385
    2. '()' → logprob: -1.8049949407577515
    3. '(
' → logprob: -8.679994583129883
    4. '(

' → logprob: -10.679994583129883
    5. ')' → logprob: -11.554994583129883
    6. '```' → logprob: -11.554994583129883
    7. '()
' → logprob: -12.054994583129883
    8. ' (' → logprob: -12.429994583129883
    9. '`()' → logprob: -12.554994583129883
    10. '(`' → logprob: -13.054994583129883


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 51.49%
Précision adaptée (1ère position): 52.48%
Précision (top 10): 79.21%
================================================================================
