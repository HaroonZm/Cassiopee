================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache
from itertools import product, chain

N = int(input())
A = list(map(int, input().split()))

@lru_cache(None)
def D(*x):
    i,j,L,R = x
    if i==j: return sum([L,R])*A[i] if i>=0 and i<len(A) else 0
    if i>j: return 0
    return min(
        sum(D(*y) for y in [(i,k-1,L,L+R),(k+1,j,L+R,R)]) + A[k]*(L+R)
        for k in range(i,j+1)
    )

def fancy_res():
    pairs = [(1,N-2,1,1)]
    return sum(chain.from_iterable(map(lambda t: [D(*t)], pairs)))

print(fancy_res() + A[0] + A[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0008348815608769655
    2. 'z' → logprob: -7.500834941864014
    3. 'r' → logprob: -9.000834465026855
    4. 'partial' → logprob: -9.875834465026855
    5. 'ruz' → logprob: -10.250834465026855
    6. 'ambda' → logprob: -10.875834465026855
    7. 'wrap' → logprob: -11.375834465026855
    8. 'a' → logprob: -11.500834465026855
    9. 'azy' → logprob: -12.125834465026855
    10. 'az' → logprob: -12.375834465026855

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0006982576451264322
    2. 'cache' → logprob: -7.750698089599609
    3. '_c' → logprob: -8.50069808959961
    4. '_' → logprob: -10.75069808959961
    5. 'c' → logprob: -11.37569808959961
    6. '_cached' → logprob: -11.87569808959961
    7. '_ca' → logprob: -12.25069808959961
    8. '\' → logprob: -12.50069808959961
    9. '```' → logprob: -12.62569808959961
    10. '__' → logprob: -13.37569808959961

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1735379695892334
    2. '@' → logprob: -2.0485379695892334
    3. 'def' → logprob: -3.7985379695892334
    4. '```' → logprob: -5.9235382080078125
    5. '\(' → logprob: -6.1735382080078125
    6. '\' → logprob: -6.2985382080078125
    7. '(
' → logprob: -7.1735382080078125
    8. 'd' → logprob: -9.048538208007812
    9. 'de' → logprob: -9.548538208007812
    10. '`' → logprob: -9.798538208007812

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6645477414131165
    2. '@' → logprob: -0.7895477414131165
    3. '```' → logprob: -4.164547920227051
    4. 'def' → logprob: -4.664547920227051
    5. '(
' → logprob: -5.914547920227051
    6. '\' → logprob: -6.539547920227051
    7. '\(' → logprob: -7.039547920227051
    8. '@
' → logprob: -8.16454792022705
    9. '\n' → logprob: -8.78954792022705
    10. '`' → logprob: -9.16454792022705

Token 8: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6460741758346558
    2. ' collections' → logprob: -1.0210741758346558
    3. ' typing' → logprob: -2.5210742950439453
    4. ' time' → logprob: -4.771074295043945
    5. ' sys' → logprob: -4.771074295043945
    6. ' os' → logprob: -5.146074295043945
    7. ' ' → logprob: -5.521074295043945
    8. 'collections' → logprob: -6.396074295043945
    9. ' fast' → logprob: -6.521074295043945
    10. ' itertools' → logprob: -6.646074295043945

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5269809365272522
    2. 'import' → logprob: -0.9019809365272522
    3. '.' → logprob: -5.651980876922607
    4. '.import' → logprob: -8.776981353759766
    5. '_import' → logprob: -9.401981353759766
    6. '	import' → logprob: -10.151981353759766
    7. ' .' → logprob: -11.026981353759766
    8. '.im' → logprob: -11.776981353759766
    9. '```' → logprob: -11.901981353759766
    10. '<|end|>' → logprob: -11.901981353759766

Token 10: ' product' (ID: 1888)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2422163486480713
    2. ' cycle' → logprob: -1.8672163486480713
    3. ' count' → logprob: -2.1172163486480713
    4. ' product' → logprob: -2.3672163486480713
    5. 'com' → logprob: -2.6172163486480713
    6. 'cycle' → logprob: -2.7422163486480713
    7. ' combinations' → logprob: -3.1172163486480713
    8. ' group' → logprob: -3.1172163486480713
    9. ' permutations' → logprob: -3.2422163486480713
    10. 'product' → logprob: -3.7422163486480713

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03959666192531586
    2. '(
' → logprob: -3.5395965576171875
    3. '```' → logprob: -5.6645965576171875
    4. '\' → logprob: -6.5395965576171875
    5. '\n' → logprob: -6.5395965576171875
    6. '\(' → logprob: -6.7895965576171875
    7. '@' → logprob: -7.4145965576171875
    8. 'def' → logprob: -7.5395965576171875
    9. '`' → logprob: -8.164596557617188
    10. '[' → logprob: -9.164596557617188

Token 12: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3696216642856598
    2. ' permutations' → logprob: -2.619621753692627
    3. ' combinations' → logprob: -2.994621753692627
    4. 'count' → logprob: -3.244621753692627
    5. 'cycle' → logprob: -3.369621753692627
    6. 'chain' → logprob: -3.869621753692627
    7. 'repeat' → logprob: -3.994621753692627
    8. ' cycle' → logprob: -4.369621753692627
    9. '```' → logprob: -4.494621753692627
    10. 'per' → logprob: -4.494621753692627

Token 13: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47426360845565796
    2. '\n' → logprob: -1.8492636680603027
    3. '(
' → logprob: -2.5992636680603027
    4. '\' → logprob: -2.5992636680603027
    5. '```' → logprob: -2.9742636680603027
    6. '
' → logprob: -5.599263668060303
    7. ',' → logprob: -5.599263668060303
    8. 'def' → logprob: -6.474263668060303
    9. '()' → logprob: -6.724263668060303
    10. '[' → logprob: -6.974263668060303

Token 14: 'N' (ID: 45)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0022350670769810677
    2. '```' → logprob: -7.002234935760498
    3. '(' → logprob: -7.252234935760498
    4. '\' → logprob: -8.502235412597656
    5. '`' → logprob: -9.002235412597656
    6. 'def' → logprob: -9.502235412597656
    7. '@
' → logprob: -9.752235412597656
    8. '[' → logprob: -10.252235412597656
    9. '\n' → logprob: -10.877235412597656
    10. '#' → logprob: -11.252235412597656

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19117572903633118
    2. '=' → logprob: -2.066175699234009
    3. ',' → logprob: -3.691175699234009
    4. ' =' → logprob: -4.316175937652588
    5. ')' → logprob: -5.816175937652588
    6. ' ' → logprob: -6.691175937652588
    7. 'umber' → logprob: -6.691175937652588
    8. '.' → logprob: -7.316175937652588
    9. 'u' → logprob: -8.31617546081543
    10. '  ' → logprob: -8.44117546081543

Token 16: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01578834094107151
    2. '10' → logprob: -4.515788555145264
    3. '5' → logprob: -6.390788555145264
    4. '100' → logprob: -7.015788555145264
    5. '3' → logprob: -7.140788555145264
    6. '20' → logprob: -7.640788555145264
    7. '50' → logprob: -8.890788078308105
    8. '32' → logprob: -9.140788078308105
    9. '9' → logprob: -9.390788078308105
    10. '4' → logprob: -9.390788078308105

Token 17: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007883060025051236
    2. '(input' → logprob: -8.000788688659668
    3. '('' → logprob: -8.250788688659668
    4. '()' → logprob: -9.250788688659668
    5. ' (' → logprob: -10.125788688659668
    6. '(N' → logprob: -11.750788688659668
    7. ''' → logprob: -11.750788688659668
    8. '("' → logprob: -11.875788688659668
    9. '(`' → logprob: -11.875788688659668
    10. '```' → logprob: -12.625788688659668

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035834383219480515
    2. '())' → logprob: -3.910834312438965
    3. '()' → logprob: -4.910834312438965
    4. '(' → logprob: -4.910834312438965
    5. '))' → logprob: -7.910834312438965
    6. '`)' → logprob: -10.660834312438965
    7. '(
' → logprob: -11.785834312438965
    8. '')' → logprob: -11.910834312438965
    9. '```' → logprob: -11.910834312438965
    10. '")' → logprob: -12.660834312438965

Token 19: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.023890256881714
    2. '```' → logprob: -2.023890256881714
    3. '\n' → logprob: -2.148890256881714
    4. 'for' → logprob: -2.523890256881714
    5. 'result' → logprob: -2.898890256881714
    6. '[' → logprob: -2.898890256881714
    7. 'matrix' → logprob: -3.273890256881714
    8. '(' → logprob: -3.273890256881714
    9. 'data' → logprob: -3.523890256881714
    10. 'a' → logprob: -3.648890256881714

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09282631427049637
    2. '[' → logprob: -2.9678263664245605
    3. '=' → logprob: -3.9678263664245605
    4. 's' → logprob: -5.4678263664245605
    5. '_' → logprob: -5.7178263664245605
    6. ',' → logprob: -5.9678263664245605
    7. ')' → logprob: -6.0928263664245605
    8. '.' → logprob: -6.2178263664245605
    9. '[]' → logprob: -6.8428263664245605
    10. '[:]' → logprob: -7.2178263664245605

Token 21: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7021270990371704
    2. 'list' → logprob: -0.7021270990371704
    3. ' [' → logprob: -5.327126979827881
    4. '[list' → logprob: -6.202126979827881
    5. '[' → logprob: -6.577126979827881
    6. '[]' → logprob: -8.577127456665039
    7. '[input' → logprob: -9.327127456665039
    8. ' tuple' → logprob: -9.702127456665039
    9. ' []' → logprob: -9.702127456665039
    10. '[int' → logprob: -9.827127456665039

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3270079493522644
    2. '(chain' → logprob: -1.8270080089569092
    3. '(range' → logprob: -2.327008008956909
    4. '(map' → logprob: -4.07700777053833
    5. '(product' → logprob: -6.70200777053833
    6. '(int' → logprob: -6.70200777053833
    7. '(input' → logprob: -7.45200777053833
    8. '(filter' → logprob: -9.327008247375488
    9. '[int' → logprob: -9.577008247375488
    10. '(np' → logprob: -10.827008247375488

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005864443723112345
    2. 'int' → logprob: -5.75586462020874
    3. '[int' → logprob: -6.88086462020874
    4. '(' → logprob: -7.00586462020874
    5. '=int' → logprob: -8.380864143371582
    6. '<int' → logprob: -8.755864143371582
    7. '(lambda' → logprob: -8.880864143371582
    8. '(str' → logprob: -9.630864143371582
    9. ',int' → logprob: -10.255864143371582
    10. ')' → logprob: -10.880864143371582

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1673930585384369
    2. ',input' → logprob: -1.9173930883407593
    3. '(' → logprob: -5.667393207550049
    4. ',' → logprob: -5.917393207550049
    5. 'input' → logprob: -7.042393207550049
    6. '=input' → logprob: -10.16739273071289
    7. ' ,' → logprob: -10.79239273071289
    8. ' input' → logprob: -10.79239273071289
    9. ')' → logprob: -11.66739273071289
    10. '(eval' → logprob: -12.29239273071289

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197250634431839
    2. ' input' → logprob: -2.8119726181030273
    3. '(input' → logprob: -12.436972618103027
    4. ' ' → logprob: -14.561972618103027
    5. ',input' → logprob: -15.311972618103027
    6. '	input' → logprob: -16.06197166442871
    7. '=input' → logprob: -16.06197166442871
    8. ')' → logprob: -18.06197166442871
    9. 'str' → logprob: -18.18697166442871
    10. '_input' → logprob: -18.56197166442871

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.016566112637519836
    2. '()))' → logprob: -4.641566276550293
    3. '(' → logprob: -5.641566276550293
    4. '))' → logprob: -6.391566276550293
    5. '())' → logprob: -7.516566276550293
    6. '()' → logprob: -8.016566276550293
    7. ')' → logprob: -8.391566276550293
    8. '(),' → logprob: -9.141566276550293
    9. ',' → logprob: -9.266566276550293
    10. '()));' → logprob: -9.516566276550293

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020544764993246645
    2. 'strip' → logprob: -8.500205039978027
    3. '(split' → logprob: -13.750205039978027
    4. ' split' → logprob: -14.625205039978027
    5. 'rstrip' → logprob: -15.000205039978027
    6. ')' → logprob: -16.750205993652344
    7. 'read' → logprob: -17.875205993652344
    8. 's' → logprob: -18.625205993652344
    9. 'spl' → logprob: -19.000205993652344
    10. '_split' → logprob: -19.375205993652344

Token 28: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11324870586395264
    2. ')' → logprob: -2.738248825073242
    3. '()))' → logprob: -3.238248825073242
    4. '())' → logprob: -6.363248825073242
    5. '(' → logprob: -6.863248825073242
    6. '()' → logprob: -8.238248825073242
    7. ')))' → logprob: -9.363248825073242
    8. '),' → logprob: -11.488248825073242
    9. ''))' → logprob: -12.113248825073242
    10. '()))
' → logprob: -12.613248825073242

Token 29: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.054723046720027924
    2. 'dp' → logprob: -3.179723024368286
    3. 'max' → logprob: -5.929723262786865
    4. '```' → logprob: -7.179723262786865
    5. 'memo' → logprob: -7.429723262786865
    6. 'result' → logprob: -7.429723262786865
    7. 'def' → logprob: -7.804723262786865
    8. 'l' → logprob: -7.804723262786865
    9. '@
' → logprob: -7.804723262786865
    10. 'res' → logprob: -8.054722785949707

Token 30: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. ' l' → logprob: -18.625
    4. '@' → logprob: -18.625
    5. 'lr' → logprob: -19.0
    6. 'staticmethod' → logprob: -19.25
    7. 'cache' → logprob: -19.625
    8. '`' → logprob: -19.875
    9. '	l' → logprob: -20.25
    10. '1' → logprob: -20.25

Token 31: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07036563009023666
    2. 'ru' → logprob: -2.6953656673431396
    3. '_r' → logprob: -7.9453654289245605
    4. '@' → logprob: -11.195365905761719
    5. '_' → logprob: -11.195365905761719
    6. '_ru' → logprob: -11.320365905761719
    7. '```' → logprob: -12.070365905761719
    8. '_cache' → logprob: -12.195365905761719
    9. 'cache' → logprob: -12.570365905761719
    10. 'rule' → logprob: -13.195365905761719

Token 32: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -7.994086627149954e-05
    2. '_cached' → logprob: -9.500080108642578
    3. '_' → logprob: -13.000080108642578
    4. ' _' → logprob: -14.375080108642578
    5. '```' → logprob: -14.750080108642578
    6. 'cache' → logprob: -14.875080108642578
    7. '_c' → logprob: -15.000080108642578
    8. '(_' → logprob: -15.000080108642578
    9. '_ca' → logprob: -16.875080108642578
    10. '_max' → logprob: -17.125080108642578

Token 33: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07850291579961777
    2. '(None' → logprob: -2.828502893447876
    3. '()' → logprob: -4.453503131866455
    4. '(max' → logprob: -6.078503131866455
    5. '(' → logprob: -6.953503131866455
    6. '()
' → logprob: -7.203503131866455
    7. '(def' → logprob: -7.953503131866455
    8. '(False' → logprob: -9.078502655029297
    9. ' def' → logprob: -9.328502655029297
    10. '
' → logprob: -9.828502655029297

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062015634030103683
    2. ')
' → logprob: -2.8120155334472656
    3. ')
' → logprob: -10.187015533447266
    4. ')`' → logprob: -12.812015533447266
    5. 'def' → logprob: -13.187015533447266
    6. ')`
' → logprob: -13.562015533447266
    7. ' )' → logprob: -13.687015533447266
    8. ')

' → logprob: -13.937015533447266
    9. ' )
' → logprob: -14.562015533447266
    10. '))' → logprob: -14.687015533447266

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.771655115589965e-05
    2. ' def' → logprob: -11.625018119812012
    3. '
' → logprob: -11.750018119812012
    4. '(def' → logprob: -14.875018119812012
    5. '(' → logprob: -15.625018119812012
    6. '\' → logprob: -16.375017166137695
    7. '('' → logprob: -16.375017166137695
    8. '0' → logprob: -17.250017166137695
    9. '()
' → logprob: -17.500017166137695
    10. ':def' → logprob: -18.125017166137695

Token 36: ' D' (ID: 415)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.2206637859344482
    2. 'dfs' → logprob: -1.4706637859344482
    3. 'f' → logprob: -2.2206637859344482
    4. 'count' → logprob: -2.3456637859344482
    5. ' count' → logprob: -2.4706637859344482
    6. 'dp' → logprob: -2.4706637859344482
    7. ' f' → logprob: -3.5956637859344482
    8. 'solve' → logprob: -3.5956637859344482
    9. ' dp' → logprob: -3.9706637859344482
    10. ' solve' → logprob: -4.845664024353027

Token 37: '(*' (ID: 9000)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.434864342212677
    2. '(i' → logprob: -1.1848642826080322
    3. '(' → logprob: -3.6848642826080322
    4. 'p' → logprob: -4.434864521026611
    5. '(n' → logprob: -5.559864521026611
    6. '(P' → logprob: -5.809864521026611
    7. '(p' → logprob: -7.059864521026611
    8. '(N' → logprob: -7.309864521026611
    9. '(x' → logprob: -7.684864521026611
    10. ' P' → logprob: -8.059864044189453

Token 38: 'x' (ID: 87)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.16154900193214417
    2. 'indices' → logprob: -3.0365490913391113
    3. 'x' → logprob: -3.6615490913391113
    4. 's' → logprob: -4.286549091339111
    5. 'a' → logprob: -4.411549091339111
    6. 'S' → logprob: -4.661549091339111
    7. 'xs' → logprob: -4.786549091339111
    8. 'seq' → logprob: -5.161549091339111
    9. 'idx' → logprob: -5.536549091339111
    10. 'arr' → logprob: -5.786549091339111

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007303050952032208
    2. 's' → logprob: -7.625730514526367
    3. ')' → logprob: -9.125730514526367
    4. '):
' → logprob: -9.375730514526367
    5. ':' → logprob: -10.375730514526367
    6. ' ):' → logprob: -11.625730514526367
    7. '):
' → logprob: -12.500730514526367
    8. '_' → logprob: -14.125730514526367
    9. ',' → logprob: -14.625730514526367
    10. 'x' → logprob: -14.750730514526367

Token 40: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47096148133277893
    2. ' if' → logprob: -1.0959614515304565
    3. '   ' → logprob: -3.595961570739746
    4. 'return' → logprob: -5.470961570739746
    5. ' return' → logprob: -6.095961570739746
    6. ' ' → logprob: -6.345961570739746
    7. ')' → logprob: -6.595961570739746
    8. ':' → logprob: -6.720961570739746
    9. ',' → logprob: -7.095961570739746
    10. '0' → logprob: -7.345961570739746

Token 41: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2963768541812897
    2. ' if' → logprob: -1.6713768243789673
    3. 'r' → logprob: -4.296376705169678
    4. 'return' → logprob: -4.421376705169678
    5. ' res' → logprob: -4.546376705169678
    6. 'res' → logprob: -4.546376705169678
    7. '   ' → logprob: -5.171376705169678
    8. 's' → logprob: -5.421376705169678
    9. 'i' (adapté à ' i') → logprob: -5.546376705169678
    10. ' return' → logprob: -6.046376705169678

Token 42: ',j' (ID: 22712)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0012145215878263116
    2. ' =' → logprob: -7.001214504241943
    3. '=' → logprob: -8.251214981079102
    4. ',' → logprob: -10.626214981079102
    5. 'n' → logprob: -12.001214981079102
    6. 'nd' → logprob: -12.751214981079102
    7. 'dx' → logprob: -12.876214981079102
    8. 'if' → logprob: -13.501214981079102
    9. 'x' → logprob: -13.876214981079102
    10. 'F' → logprob: -14.501214981079102

Token 43: ',L' (ID: 68006)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5254703760147095
    2. ' =' → logprob: -0.9004703760147095
    3. ',' → logprob: -6.15047025680542
    4. ',k' → logprob: -9.900470733642578
    5. ',x' → logprob: -10.525470733642578
    6. ')' → logprob: -10.525470733642578
    7. ',i' → logprob: -10.775470733642578
    8. '=i' → logprob: -11.025470733642578
    9. '   ' → logprob: -11.275470733642578
    10. '=x' → logprob: -11.400470733642578

Token 44: ',R' (ID: 48317)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03011341206729412
    2. ' =' → logprob: -3.530113458633423
    3. ',' → logprob: -8.030113220214844
    4. '   ' → logprob: -11.155113220214844
    5. ' ' → logprob: -11.530113220214844
    6. ')' → logprob: -12.905113220214844
    7. 'if' → logprob: -13.280113220214844
    8. '=None' → logprob: -13.405113220214844
    9. '=i' → logprob: -13.905113220214844
    10. '=len' → logprob: -14.030113220214844

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062372758984565735
    2. ' =' → logprob: -2.8123726844787598
    3. ',' → logprob: -8.312373161315918
    4. ':' → logprob: -9.062373161315918
    5. '   ' → logprob: -10.687373161315918
    6. ' ' → logprob: -11.812373161315918
    7. '):' → logprob: -12.437373161315918
    8. ')' → logprob: -13.312373161315918
    9. ' :' → logprob: -13.687373161315918
    10. ')=' → logprob: -13.812373161315918

Token 46: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014376794919371605
    2. ' x' → logprob: -4.264376640319824
    3. '0' → logprob: -8.514376640319824
    4. ' ' → logprob: -12.389376640319824
    5. 'len' → logprob: -12.389376640319824
    6. '*x' → logprob: -14.139376640319824
    7. ' len' → logprob: -14.264376640319824
    8. '   ' → logprob: -14.389376640319824
    9. '1' → logprob: -14.764376640319824
    10. '(x' → logprob: -14.889376640319824

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4933560788631439
    2. '<|end|>' → logprob: -1.4933561086654663
    3. '
' → logprob: -1.9933561086654663
    4. ':' → logprob: -4.493356227874756
    5. ' if' → logprob: -5.243356227874756
    6. ':
' → logprob: -5.743356227874756
    7. '<|end|>' → logprob: -5.993356227874756
    8. ')' → logprob: -6.618356227874756
    9. ' ' → logprob: -6.743356227874756
    10. ',' → logprob: -6.868356227874756

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48743873834609985
    2. ':' → logprob: -0.9874387383460999
    3. ' if' → logprob: -5.362438678741455
    4. '<|end|>' → logprob: -5.862438678741455
    5. 'if' → logprob: -6.362438678741455
    6. ':
' → logprob: -6.612438678741455
    7. ' ' → logprob: -7.362438678741455
    8. ')' → logprob: -7.487438678741455
    9. ',' → logprob: -7.737438678741455
    10. '  ' → logprob: -8.487439155578613

Token 49: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05677400156855583
    2. ' if' → logprob: -2.9317739009857178
    3. '   ' → logprob: -6.306774139404297
    4. ' ' → logprob: -10.431774139404297
    5. 'i' → logprob: -11.806774139404297
    6. '#' → logprob: -11.806774139404297
    7. '    ' → logprob: -11.931774139404297
    8. ')' → logprob: -12.681774139404297
    9. '	if' → logprob: -13.056774139404297
    10. '  ' → logprob: -13.306774139404297

Token 50: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7259568572044373
    2. ' i' → logprob: -1.100956916809082
    3. 'L' → logprob: -2.475956916809082
    4. ' L' → logprob: -2.725956916809082
    5. 'j' → logprob: -3.975956916809082
    6. ' j' → logprob: -4.725956916809082
    7. ' R' → logprob: -6.100956916809082
    8. 'R' → logprob: -6.475956916809082
    9. ' (' → logprob: -6.725956916809082
    10. '(i' → logprob: -7.350956916809082

Token 51: '==' (ID: 560)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.577216625213623
    2. '>' → logprob: -1.577216625213623
    3. '==' → logprob: -1.702216625213623
    4. ' >=' → logprob: -3.827216625213623
    5. ' >' → logprob: -4.452216625213623
    6. ' ==' → logprob: -4.577216625213623
    7. '+' → logprob: -5.202216625213623
    8. '<' → logprob: -9.077217102050781
    9. '<=' → logprob: -9.202217102050781
    10. '0' → logprob: -9.952217102050781

Token 52: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005177667480893433
    2. 'N' → logprob: -8.375517845153809
    3. '0' → logprob: -8.500517845153809
    4. ' j' → logprob: -10.375517845153809
    5. 'L' → logprob: -10.875517845153809
    6. ' ' → logprob: -11.500517845153809
    7. 'R' → logprob: -11.625517845153809
    8. '   ' → logprob: -11.875517845153809
    9. '1' → logprob: -13.500517845153809
    10. '	j' → logprob: -14.000517845153809

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018310658633708954
    2. ':return' → logprob: -4.143310546875
    3. ':
' → logprob: -6.143310546875
    4. ' :' → logprob: -10.143310546875
    5. '   ' → logprob: -10.518310546875
    6. ' or' → logprob: -10.893310546875
    7. ' and' → logprob: -11.018310546875
    8. ' ' → logprob: -11.268310546875
    9. 'return' → logprob: -12.643310546875
    10. ':
' → logprob: -13.018310546875

Token 54: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8587672114372253
    2. ' return' → logprob: -1.2337672710418701
    3. '   ' → logprob: -1.4837672710418701
    4. 'return' → logprob: -2.98376727104187
    5. '
' → logprob: -5.858767032623291
    6. ':return' → logprob: -5.858767032623291
    7. '	return' → logprob: -7.233767032623291
    8. ' ' → logprob: -7.983767032623291
    9. '    
' → logprob: -8.98376750946045
    10. '    ' → logprob: -8.98376750946045

Token 55: ' sum' (ID: 4215)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2035430669784546
    2. '0' → logprob: -1.3285430669784546
    3. '1' → logprob: -1.4535430669784546
    4. ' ' → logprob: -2.578543186187744
    5. ' A' → logprob: -2.828543186187744
    6. 'int' → logprob: -3.578543186187744
    7. ' int' → logprob: -4.828543186187744
    8. '(A' → logprob: -5.328543186187744
    9. 'max' → logprob: -5.453543186187744
    10. 'R' → logprob: -5.578543186187744

Token 56: '([' (ID: 5194)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.37554869055747986
    2. '(' → logprob: -1.2505487203598022
    3. '([' → logprob: -4.125548839569092
    4. '((' → logprob: -5.500548839569092
    5. '(x' → logprob: -6.250548839569092
    6. '(range' → logprob: -6.375548839569092
    7. '(a' → logprob: -7.625548839569092
    8. '(abs' → logprob: -7.750548839569092
    9. 'A' → logprob: -7.875548839569092
    10. '(
' → logprob: -8.125548362731934

Token 57: 'L' (ID: 43)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3782672882080078
    2. '1' → logprob: -1.3782672882080078
    3. '(A' → logprob: -3.628267288208008
    4. '(' → logprob: -4.003267288208008
    5. 'a' → logprob: -5.503267288208008
    6. 'abs' → logprob: -5.878267288208008
    7. 'k' → logprob: -6.378267288208008
    8. 'x' → logprob: -6.628267288208008
    9. '(a' → logprob: -7.003267288208008
    10. 'L' → logprob: -7.378267288208008

Token 58: ',R' (ID: 48317)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11930166929960251
    2. ' <=' → logprob: -2.3693015575408936
    3. '==' → logprob: -5.244301795959473
    4. '>=' → logprob: -5.994301795959473
    5. ',' → logprob: -6.994301795959473
    6. '!=' → logprob: -7.119301795959473
    7. '>' → logprob: -7.119301795959473
    8. '+A' → logprob: -7.119301795959473
    9. '+' → logprob: -7.244301795959473
    10. '%' → logprob: -7.244301795959473

Token 59: '])*' (ID: 114661)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0029941012617200613
    2. '[i' → logprob: -6.377994060516357
    3. '])-' → logprob: -8.127994537353516
    4. '[' → logprob: -8.627994537353516
    5. '[:' → logprob: -8.627994537353516
    6. ')' → logprob: -9.252994537353516
    7. ']==' → logprob: -9.502994537353516
    8. '])/' → logprob: -9.627994537353516
    9. '])+' → logprob: -9.752994537353516
    10. '])*' → logprob: -9.752994537353516

Token 60: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018802253529429436
    2. ' A' → logprob: -4.393802165985107
    3. '1' → logprob: -6.018802165985107
    4. '(A' → logprob: -6.893802165985107
    5. '0' → logprob: -7.018802165985107
    6. '[A' → logprob: -7.393802165985107
    7. '[' → logprob: -7.893802165985107
    8. '(' → logprob: -8.268802642822266
    9. ' (' → logprob: -8.393802642822266
    10. '2' → logprob: -8.893802642822266

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0020535506773740053
    2. '[j' → logprob: -6.877053737640381
    3. '[' → logprob: -7.002053737640381
    4. 'i' → logprob: -9.627053260803223
    5. '[I' → logprob: -11.002053260803223
    6. ' [' → logprob: -12.502053260803223
    7. '[L' → logprob: -12.627053260803223
    8. '[x' → logprob: -12.627053260803223
    9. 'j' → logprob: -12.877053260803223
    10. '[R' → logprob: -12.877053260803223

Token 62: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08910229057073593
    2. ')' → logprob: -3.464102268218994
    3. '])' → logprob: -3.464102268218994
    4. ']' → logprob: -3.964102268218994
    5. '[' → logprob: -5.839102268218994
    6. '[j' → logprob: -8.089102745056152
    7. '   ' → logprob: -8.589102745056152
    8. ' )' → logprob: -9.964102745056152
    9. '[
' → logprob: -10.464102745056152
    10. ')
' → logprob: -10.589102745056152

Token 63: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16140994429588318
    2. '
' → logprob: -2.286409854888916
    3. '+' → logprob: -3.911409854888916
    4. '' → logprob: -5.036409854888916
    5. '+
' → logprob: -5.161409854888916
    6. '(' → logprob: -5.661409854888916
    7. '
' → logprob: -6.161409854888916
    8. '\' → logprob: -6.786409854888916
    9. '(
' → logprob: -6.911409854888916
    10. ' ' → logprob: -6.911409854888916

Token 64: ' i' (ID: 575)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.7391459941864014
    2. 'L' → logprob: -0.8641459941864014
    3. ' (' → logprob: -3.6141459941864014
    4. ' i' → logprob: -3.7391459941864014
    5. 'i' → logprob: -4.3641462326049805
    6. '(L' → logprob: -4.8641462326049805
    7. ' ' → logprob: -5.1141462326049805
    8. ' not' → logprob: -5.3641462326049805
    9. ' A' → logprob: -5.4891462326049805
    10. 'A' → logprob: -5.6141462326049805

Token 65: '>=' (ID: 20974)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49385565519332886
    2. '<=' → logprob: -1.2438557147979736
    3. ' ==' → logprob: -3.1188557147979736
    4. ' <=' → logprob: -3.3688557147979736
    5. '+' → logprob: -4.6188554763793945
    6. '>=' → logprob: -4.9938554763793945
    7. '>' → logprob: -6.2438554763793945
    8. ' >=' → logprob: -7.2438554763793945
    9. '=' → logprob: -7.4938554763793945
    10. '<' → logprob: -7.8688554763793945

Token 66: '0' (ID: 15)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.026973554864525795
    2. '0' → logprob: -3.9019734859466553
    3. ' L' → logprob: -5.401973724365234
    4. 'N' → logprob: -7.276973724365234
    5. 'j' → logprob: -7.401973724365234
    6. 'i' → logprob: -8.276973724365234
    7. ' ' → logprob: -8.401973724365234
    8. '1' → logprob: -10.276973724365234
    9. 'R' → logprob: -10.526973724365234
    10. 'len' → logprob: -11.401973724365234

Token 67: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15838363766670227
    2. 'and' → logprob: -2.28338360786438
    3. ' else' → logprob: -3.15838360786438
    4. 'else' → logprob: -6.408383846282959
    5. ' ' → logprob: -7.908383846282959
    6. '    ' → logprob: -11.6583833694458
    7. '<|end|>' → logprob: -12.2833833694458
    8. '0' → logprob: -12.5333833694458
    9. '```' → logprob: -13.0333833694458
    10. ' ' → logprob: -13.2833833694458

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04645618051290512
    2. ' i' → logprob: -3.7964560985565186
    3. 'j' → logprob: -3.7964560985565186
    4. ' j' → logprob: -7.796456336975098
    5. ' ' → logprob: -10.671456336975098
    6. '0' → logprob: -11.421456336975098
    7. 'L' → logprob: -12.046456336975098
    8. 'A' → logprob: -12.046456336975098
    9. '  ' → logprob: -12.483956336975098
    10. 'R' → logprob: -12.671456336975098

Token 69: '<len' (ID: 141365)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7702727913856506
    2. ' and' → logprob: -0.8952727913856506
    3. '<=' → logprob: -2.270272731781006
    4. '0' → logprob: -4.145272731781006
    5. '<' → logprob: -5.645272731781006
    6. ' ' → logprob: -6.270272731781006
    7. '>=' → logprob: -6.520272731781006
    8. '+' → logprob: -7.020272731781006
    9. ' <=' → logprob: -7.770272731781006
    10. '-' → logprob: -8.395273208618164

Token 70: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0001931696751853451
    2. 'A' → logprob: -9.00019359588623
    3. '(' → logprob: -9.62519359588623
    4. '(N' → logprob: -13.00019359588623
    5. ' A' → logprob: -15.25019359588623
    6. '(
' → logprob: -15.50019359588623
    7. ' (' → logprob: -15.62519359588623
    8. '(L' → logprob: -15.75019359588623
    9. '```' → logprob: -16.375192642211914
    10. '(B' → logprob: -16.500192642211914

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002089592395350337
    2. ' )' → logprob: -6.877089500427246
    3. ' else' → logprob: -7.252089500427246
    4. 'else' → logprob: -9.377089500427246
    5. '])' → logprob: -9.502089500427246
    6. ' and' → logprob: -9.877089500427246
    7. ' ' → logprob: -9.877089500427246
    8. ']' → logprob: -10.877089500427246
    9. 'and' → logprob: -11.127089500427246
    10. '）' → logprob: -11.502089500427246

Token 72: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01614510267972946
    2. 'else' → logprob: -4.1411452293396
    3. ' ' → logprob: -9.516144752502441
    4. ' and' → logprob: -10.891144752502441
    5. 'and' → logprob: -12.391144752502441
    6. '-' → logprob: -12.766144752502441
    7. '   ' → logprob: -13.016144752502441
    8. '	else' → logprob: -13.266144752502441
    9. ')' → logprob: -13.641144752502441
    10. '[]' → logprob: -13.891144752502441

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011140725575387478
    2. ' ' → logprob: -4.511140823364258
    3. 'float' → logprob: -10.761140823364258
    4. '-' → logprob: -10.886140823364258
    5. '1' → logprob: -11.136140823364258
    6. ' float' → logprob: -11.886140823364258
    7. 'int' → logprob: -12.136140823364258
    8. 'None' → logprob: -12.698640823364258
    9. ' ' → logprob: -12.886140823364258
    10. '   ' → logprob: -12.948640823364258

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013248840114101768
    2. ' ' → logprob: -7.001324653625488
    3. '-' → logprob: -8.501324653625488
    4. 'float' → logprob: -9.251324653625488
    5. '1' → logprob: -9.876324653625488
    6. 'int' → logprob: -11.126324653625488
    7. 'None' → logprob: -12.313824653625488
    8. 'False' → logprob: -12.626324653625488
    9. '100' → logprob: -12.751324653625488
    10. ' float' → logprob: -12.751324653625488

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6864612698554993
    2. '\n' → logprob: -1.3114612102508545
    3. '+' → logprob: -2.5614612102508545
    4. ')' → logprob: -3.4364612102508545
    5. ' ' → logprob: -4.061461448669434
    6. '(' → logprob: -4.186461448669434
    7. '   ' → logprob: -4.186461448669434
    8. '\' → logprob: -4.686461448669434
    9. '*' → logprob: -4.811461448669434
    10. ',' → logprob: -4.936461448669434

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01952766813337803
    2. '    
' → logprob: -4.894527435302734
    3. ' if' → logprob: -5.269527435302734
    4. 'if' → logprob: -6.394527435302734
    5. '\n' → logprob: -7.019527435302734
    6. ' ' → logprob: -7.269527435302734
    7. '   
' → logprob: -7.894527435302734
    8. '
' → logprob: -7.894527435302734
    9. 'else' → logprob: -8.394527435302734
    10. '.' → logprob: -8.644527435302734

Token 77: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7294217944145203
    2. 'm' → logprob: -1.104421854019165
    3. 'mid' → logprob: -3.354421854019165
    4. ' res' → logprob: -3.479421854019165
    5. 'if' (adapté à ' if') → logprob: -3.604421854019165
    6. 'ans' → logprob: -3.854421854019165
    7. 'r' → logprob: -4.479421615600586
    8. 'ret' → logprob: -4.729421615600586
    9. 'l' → logprob: -5.229421615600586
    10. 'k' → logprob: -5.229421615600586

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8666483163833618
    2. 'i' → logprob: -1.3666483163833618
    3. ' j' → logprob: -2.2416481971740723
    4. 'j' → logprob: -2.2416481971740723
    5. ' L' → logprob: -3.2416481971740723
    6. 'L' → logprob: -3.7416481971740723
    7. ' R' → logprob: -3.9916481971740723
    8. 'R' → logprob: -4.991648197174072
    9. ' (' → logprob: -4.991648197174072
    10. ' A' → logprob: -5.866648197174072

Token 79: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6463911533355713
    2. '==' → logprob: -0.8963911533355713
    3. '+' → logprob: -3.5213911533355713
    4. ' >' → logprob: -4.021390914916992
    5. ' ==' → logprob: -4.771390914916992
    6. '>=' → logprob: -5.146390914916992
    7. '=' → logprob: -6.021390914916992
    8. '<' → logprob: -6.771390914916992
    9. '<=' → logprob: -7.146390914916992
    10. ',j' → logprob: -8.021390914916992

Token 80: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029637437546625733
    2. ' j' → logprob: -8.125296592712402
    3. ' ' → logprob: -16.000295639038086
    4. '	j' → logprob: -16.000295639038086
    5. '<|end|>' → logprob: -17.000295639038086
    6. '=j' → logprob: -17.375295639038086
    7. '   ' → logprob: -17.375295639038086
    8. '  ' → logprob: -18.250295639038086
    9. 'N' → logprob: -18.500295639038086
    10. ',j' → logprob: -18.937795639038086

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00451236218214035
    2. ':return' → logprob: -5.879512310028076
    3. ' :' → logprob: -6.504512310028076
    4. ':
' → logprob: -9.004512786865234
    5. ' return' → logprob: -9.629512786865234
    6. ' or' → logprob: -11.379512786865234
    7. '   ' → logprob: -12.504512786865234
    8. 'return' → logprob: -12.754512786865234
    9. ' ' → logprob: -14.254512786865234
    10. ' :
' → logprob: -14.504512786865234

Token 82: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26361340284347534
    2. '0' → logprob: -2.01361346244812
    3. 'return' → logprob: -2.63861346244812
    4. ' ' → logprob: -3.88861346244812
    5. '   ' → logprob: -5.263613224029541
    6. '       ' → logprob: -7.013613224029541
    7. '	return' → logprob: -9.1386137008667
    8. ' ' → logprob: -10.3886137008667
    9. '    ' → logprob: -11.0136137008667
    10. '  ' → logprob: -11.0136137008667

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028057026211172342
    2. ' ' → logprob: -5.877805709838867
    3. '   ' → logprob: -14.627805709838867
    4. ' ' → logprob: -16.440305709838867
    5. '  ' → logprob: -16.502805709838867
    6. '۰' → logprob: -16.877805709838867
    7. '1' → logprob: -17.502805709838867
    8. '    ' → logprob: -17.877805709838867
    9. '000' → logprob: -17.940305709838867
    10. '<|end|>' → logprob: -18.377805709838867

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.375036239624023
    3. '-' → logprob: -12.250036239624023
    4. 'float' → logprob: -15.750036239624023
    5. '1' → logprob: -16.125036239624023
    6. 'int' → logprob: -16.250036239624023
    7. ' -' → logprob: -16.812536239624023
    8. '   ' → logprob: -17.000036239624023
    9. '000' → logprob: -17.375036239624023
    10. '  ' → logprob: -17.625036239624023

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5201404690742493
    2. '
' → logprob: -1.2701404094696045
    3. '<|end|>' → logprob: -3.1451404094696045
    4. '\n' → logprob: -3.5201404094696045
    5. ' ' → logprob: -3.6451404094696045
    6. '    
' → logprob: -4.770140647888184
    7. 'n' → logprob: -5.645140647888184
    8. ' 
' → logprob: -5.770140647888184
    9. '<|end|>' → logprob: -6.395140647888184
    10. '    ' → logprob: -6.395140647888184

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42826855182647705
    2. ' res' → logprob: -1.678268551826477
    3. 'res' → logprob: -2.3032684326171875
    4. ' if' → logprob: -4.3032684326171875
    5. ' max' → logprob: -4.5532684326171875
    6. 'max' → logprob: -4.6782684326171875
    7. ' ans' → logprob: -5.5532684326171875
    8. 'ans' → logprob: -6.1782684326171875
    9. 'if' → logprob: -6.1782684326171875
    10. 'm' → logprob: -6.3032684326171875

Token 87: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2051572948694229
    2. 'ans' → logprob: -3.4551572799682617
    3. 'if' → logprob: -3.7051572799682617
    4. 'max' → logprob: -3.9551572799682617
    5. 'ret' → logprob: -3.9551572799682617
    6. ' res' → logprob: -4.080157279968262
    7. '   ' → logprob: -4.455157279968262
    8. 'm' → logprob: -4.455157279968262
    9. 'best' → logprob: -4.955157279968262
    10. 'r' → logprob: -4.955157279968262

Token 88: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11415362358093262
    2. ' max' → logprob: -2.2391536235809326
    3. 'sum' → logprob: -7.739153861999512
    4. 'min' → logprob: -7.989153861999512
    5. 'D' → logprob: -8.239153861999512
    6. ' D' → logprob: -8.864153861999512
    7. ' sum' → logprob: -9.489153861999512
    8. ' min' → logprob: -9.739153861999512
    9. ' ' → logprob: -12.614153861999512
    10. '(max' → logprob: -12.864153861999512

Token 89: '(
' (ID: 1607)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.39072397351264954
    2. '(' → logprob: -1.1407239437103271
    3. '(
' → logprob: -6.265724182128906
    4. '((' → logprob: -6.765724182128906
    5. '([' → logprob: -7.515724182128906
    6. 'D' → logprob: -10.390724182128906
    7. '(

' → logprob: -10.390724182128906
    8. '(A' → logprob: -10.515724182128906
    9. '(lambda' → logprob: -10.640724182128906
    10. '(min' → logprob: -10.765724182128906

Token 90: '       ' (ID: 309)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.06540650874376297
    2. '[' → logprob: -3.565406560897827
    3. '(' → logprob: -4.440406322479248
    4. '(D' → logprob: -4.940406322479248
    5. '(
' → logprob: -5.440406322479248
    6. '[D' → logprob: -5.565406322479248
    7. '[
' → logprob: -5.565406322479248
    8. ' D' → logprob: -5.815406322479248
    9. '   ' → logprob: -7.440406322479248
    10. '([' → logprob: -8.315406799316406

Token 91: ' sum' (ID: 4215)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.021110953763127327
    2. '[' → logprob: -5.146111011505127
    3. '[D' → logprob: -5.146111011505127
    4. ' D' → logprob: -5.896111011505127
    5. '(D' → logprob: -5.896111011505127
    6. '[
' → logprob: -6.271111011505127
    7. '(' → logprob: -7.396111011505127
    8. '   ' → logprob: -7.896111011505127
    9. '(
' → logprob: -7.896111011505127
    10. 'min' → logprob: -9.021110534667969

Token 92: '(D' (ID: 9908)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.023037562146782875
    2. '(' → logprob: -4.773037433624268
    3. '(D' → logprob: -5.398037433624268
    4. '(L' → logprob: -5.523037433624268
    5. '(A' → logprob: -6.523037433624268
    6. '(x' → logprob: -6.773037433624268
    7. '((' → logprob: -6.773037433624268
    8. '([
' → logprob: -7.273037433624268
    9. '(
' → logprob: -8.148037910461426
    10. '(sum' → logprob: -8.273037910461426

Token 93: '(*' (ID: 9000)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008326265960931778
    2. '((' → logprob: -5.008326053619385
    3. '(' → logprob: -6.633326053619385
    4. '(*' → logprob: -9.133326530456543
    5. '(*(' → logprob: -9.258326530456543
    6. ' (' → logprob: -10.508326530456543
    7. '(x' → logprob: -10.508326530456543
    8. 'i' → logprob: -11.633326530456543
    9. '(a' → logprob: -12.258326530456543
    10. '(
' → logprob: -12.508326530456543

Token 94: 'y' (ID: 88)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05898177623748779
    2. '(x' → logprob: -2.9339818954467773
    3. '((' → logprob: -6.308981895446777
    4. '(' → logprob: -6.933981895446777
    5. '(*' → logprob: -7.683981895446777
    6. ' (' → logprob: -8.058981895446777
    7. 'x' → logprob: -8.808981895446777
    8. '[i' → logprob: -9.183981895446777
    9. '([' → logprob: -9.683981895446777
    10. '(j' → logprob: -9.933981895446777

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006248238030821085
    2. '(x' → logprob: -5.756248474121094
    3. ')+' → logprob: -6.756248474121094
    4. '(*' → logprob: -6.881248474121094
    5. ')*' → logprob: -8.881248474121094
    6. '(i' → logprob: -8.881248474121094
    7. '(' → logprob: -9.131248474121094
    8. 'for' → logprob: -9.506248474121094
    9. '())' → logprob: -9.631248474121094
    10. '(y' → logprob: -9.756248474121094

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5447244644165039
    2. ' for' → logprob: -1.044724464416504
    3. '(x' → logprob: -3.544724464416504
    4. '(y' → logprob: -3.919724464416504
    5. '(*' → logprob: -4.669724464416504
    6. '()' → logprob: -5.919724464416504
    7. '(' → logprob: -6.044724464416504
    8. ')' → logprob: -6.794724464416504
    9. '((' → logprob: -6.794724464416504
    10. 'x' → logprob: -7.669724464416504

Token 97: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22558102011680603
    2. ' y' → logprob: -1.6005810499191284
    3. '(y' → logprob: -9.975581169128418
    4. '	y' → logprob: -10.725581169128418
    5. '   ' → logprob: -10.850581169128418
    6. ' ' → logprob: -10.850581169128418
    7. ' in' → logprob: -11.350581169128418
    8. ')' → logprob: -12.038081169128418
    9. ' (' → logprob: -12.163081169128418
    10. 'x' → logprob: -12.225581169128418

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03809496387839317
    2. 'in' → logprob: -3.288094997406006
    3. ')' → logprob: -10.538094520568848
    4. ' y' → logprob: -12.288094520568848
    5. ' ' → logprob: -12.788094520568848
    6. ' )' → logprob: -12.850594520568848
    7. '   ' → logprob: -13.225594520568848
    8. '```' → logprob: -13.225594520568848
    9. 'x' → logprob: -13.600594520568848
    10. 's' → logprob: -13.725594520568848

Token 99: ' [(' (ID: 43900)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.09809686988592148
    2. '[(' → logprob: -2.8480968475341797
    3. ' product' → logprob: -3.4730968475341797
    4. 'chain' → logprob: -6.47309684753418
    5. '(product' → logprob: -6.59809684753418
    6. 'list' → logprob: -8.09809684753418
    7. '((' → logprob: -8.34809684753418
    8. '[
' → logprob: -8.47309684753418
    9. '[((' → logprob: -8.59809684753418
    10. '[' → logprob: -8.97309684753418

Token 100: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006558817345649004
    2. '(i' → logprob: -5.131558895111084
    3. ' i' → logprob: -7.881558895111084
    4. '   ' → logprob: -9.131558418273926
    5. ')' → logprob: -10.506558418273926
    6. ' (' → logprob: -10.631558418273926
    7. ')i' → logprob: -11.381558418273926
    8. ' ' → logprob: -11.506558418273926
    9. 'x' → logprob: -11.631558418273926
    10. '*i' → logprob: -12.006558418273926

Token 101: ',k' (ID: 35155)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.062422145158052444
    2. ',' → logprob: -3.187422037124634
    3. ',i' → logprob: -4.062422275543213
    4. '+' → logprob: -7.312422275543213
    5. ' ,' → logprob: -7.687422275543213
    6. ',y' → logprob: -7.937422275543213
    7. '   ' → logprob: -8.437421798706055
    8. ' ' → logprob: -8.812421798706055
    9. ',k' → logprob: -10.062421798706055
    10. ',x' → logprob: -10.062421798706055

Token 102: '-' (ID: 12)
  Prédit: ',L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.07171723991632462
    2. ',' → logprob: -3.4467172622680664
    3. '+' → logprob: -4.196717262268066
    4. ',k' → logprob: -5.196717262268066
    5. '),' → logprob: -5.321717262268066
    6. '),(' → logprob: -6.196717262268066
    7. ' ,' → logprob: -6.321717262268066
    8. ',j' → logprob: -6.446717262268066
    9. '-' → logprob: -6.946717262268066
    10. ',(' → logprob: -7.196717262268066

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014422152191400528
    2. 'L' → logprob: -5.6394219398498535
    3. 'j' → logprob: -6.1394219398498535
    4. '(L' → logprob: -6.2644219398498535
    5. ',L' → logprob: -6.2644219398498535
    6. ',' → logprob: -6.3894219398498535
    7. ' ' → logprob: -7.6394219398498535
    8. '+' → logprob: -8.014422416687012
    9. ')' → logprob: -8.014422416687012
    10. 'R' → logprob: -8.139422416687012

Token 104: ',L' (ID: 68006)
  Prédit: ',L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.20589254796504974
    2. ',' → logprob: -2.080892562866211
    3. ' ,' → logprob: -3.830892562866211
    4. '),' → logprob: -4.580892562866211
    5. ',(' → logprob: -4.705892562866211
    6. '),(' → logprob: -4.955892562866211
    7. '(L' → logprob: -5.205892562866211
    8. 'L' → logprob: -6.080892562866211
    9. '   ' → logprob: -6.955892562866211
    10. ')' → logprob: -7.080892562866211

Token 105: ',L' (ID: 68006)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.5403631329536438
    2. '),' → logprob: -1.415363073348999
    3. '),(' → logprob: -2.165363073348999
    4. ',i' → logprob: -3.790363073348999
    5. ',' → logprob: -4.165363311767578
    6. ',j' → logprob: -5.165363311767578
    7. ',L' → logprob: -5.165363311767578
    8. ',R' → logprob: -5.290363311767578
    9. ' ),' → logprob: -5.915363311767578
    10. ' ,' → logprob: -7.040363311767578

Token 106: '+' (ID: 10)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.17054212093353271
    2. '),(' → logprob: -1.9205421209335327
    3. ',k' → logprob: -4.795542240142822
    4. '),
' → logprob: -7.295542240142822
    5. ' ),' → logprob: -7.670542240142822
    6. ',i' → logprob: -8.420541763305664
    7. 'k' → logprob: -8.795541763305664
    8. '   ' → logprob: -9.170541763305664
    9. ')' → logprob: -9.420541763305664
    10. ',' → logprob: -9.795541763305664

Token 107: 'R' (ID: 49)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6892805099487305
    2. '1' → logprob: -1.5642805099487305
    3. 'k' → logprob: -1.5642805099487305
    4. 'R' → logprob: -3.0642805099487305
    5. '(A' → logprob: -4.9392805099487305
    6. '0' → logprob: -5.0642805099487305
    7. 'y' → logprob: -5.3142805099487305
    8. '(R' → logprob: -5.6892805099487305
    9. 'D' → logprob: -6.0642805099487305
    10. 'j' → logprob: -6.3142805099487305

Token 108: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010025215335190296
    2. '),(' → logprob: -5.2600250244140625
    3. ' ),' → logprob: -6.0100250244140625
    4. ')' → logprob: -6.8850250244140625
    5. '-' → logprob: -7.1350250244140625
    6. '),
' → logprob: -8.385025024414062
    7. '   ' → logprob: -9.885025024414062
    8. ',' → logprob: -10.385025024414062
    9. ' ' → logprob: -10.510025024414062
    10. ',k' → logprob: -10.885025024414062

Token 109: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00013452880375552922
    2. ' k' → logprob: -9.000134468078613
    3. '   ' → logprob: -12.125134468078613
    4. ' ' → logprob: -13.250134468078613
    5. 'j' → logprob: -13.375134468078613
    6. '    ' → logprob: -14.250134468078613
    7. '(k' → logprob: -14.500134468078613
    8. '  ' → logprob: -15.125134468078613
    9. 'i' → logprob: -15.750134468078613
    10. '
' → logprob: -15.875134468078613

Token 110: '+' (ID: 10)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.04970072954893112
    2. ',j' → logprob: -3.0497007369995117
    3. ',' → logprob: -7.174700736999512
    4. 'k' → logprob: -8.299700736999512
    5. ' ,' → logprob: -9.924700736999512
    6. 'j' → logprob: -10.174700736999512
    7. ',R' → logprob: -12.549700736999512
    8. '   ' → logprob: -12.674700736999512
    9. ',i' → logprob: -13.424700736999512
    10. ' ' → logprob: -13.924700736999512

Token 111: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.390217661857605
    2. '1' → logprob: -1.140217661857605
    3. 'k' → logprob: -5.7652177810668945
    4. 'R' → logprob: -9.890217781066895
    5. ',j' → logprob: -10.265217781066895
    6. ',' → logprob: -10.390217781066895
    7. ' j' → logprob: -10.765217781066895
    8. '```' → logprob: -11.140217781066895
    9. ')' → logprob: -11.890217781066895
    10. ' ' → logprob: -11.890217781066895

Token 112: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.005378898698836565
    2. ',' → logprob: -5.630378723144531
    3. ',i' → logprob: -7.255378723144531
    4. 'j' → logprob: -7.630378723144531
    5. ',k' → logprob: -7.630378723144531
    6. ' ,' → logprob: -9.880378723144531
    7. '   ' → logprob: -11.255378723144531
    8. ',R' → logprob: -11.255378723144531
    9. ',J' → logprob: -11.880378723144531
    10. ' ' → logprob: -13.130378723144531

Token 113: ',L' (ID: 68006)
  Prédit: ',L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.17389759421348572
    2. ',i' → logprob: -2.0488975048065186
    3. ',' → logprob: -4.673897743225098
    4. ',j' → logprob: -4.923897743225098
    5. ',k' → logprob: -5.173897743225098
    6. ',R' → logprob: -5.548897743225098
    7. ' ,' → logprob: -6.173897743225098
    8. 'L' → logprob: -6.298897743225098
    9. 'i' → logprob: -8.798897743225098
    10. ',I' → logprob: -9.423897743225098

Token 114: '+' (ID: 10)
  Prédit: ',R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',R' → logprob: -0.307263046503067
    2. ',L' → logprob: -1.9322630167007446
    3. ',k' → logprob: -2.557263135910034
    4. ',j' → logprob: -4.057262897491455
    5. ',i' → logprob: -4.307262897491455
    6. ',' → logprob: -4.682262897491455
    7. ' ,' → logprob: -7.182262897491455
    8. 'L' → logprob: -8.057263374328613
    9. '   ' → logprob: -8.682263374328613
    10. ',K' → logprob: -8.682263374328613

Token 115: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.011323550716042519
    2. 'L' → logprob: -4.88632345199585
    3. ' R' → logprob: -6.26132345199585
    4. '(R' → logprob: -6.76132345199585
    5. 'k' → logprob: -8.386323928833008
    6. '(L' → logprob: -9.011323928833008
    7. ',R' → logprob: -9.261323928833008
    8. '   ' → logprob: -10.261323928833008
    9. 'j' → logprob: -10.261323928833008
    10. ' ' → logprob: -10.386323928833008

Token 116: ',R' (ID: 48317)
  Prédit: ',R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',R' → logprob: -0.0053679910488426685
    2. ',L' → logprob: -6.380367755889893
    3. ',j' → logprob: -6.505367755889893
    4. ',' → logprob: -6.630367755889893
    5. ',k' → logprob: -7.880367755889893
    6. ' ,' → logprob: -8.25536823272705
    7. ',i' → logprob: -8.88036823272705
    8. 'R' → logprob: -11.13036823272705
    9. ',J' → logprob: -11.63036823272705
    10. ',D' → logprob: -12.13036823272705

Token 117: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.15492799878120422
    2. ')]' → logprob: -2.404927968978882
    3. '])' → logprob: -3.029927968978882
    4. ')])
' → logprob: -6.029928207397461
    5. ')' → logprob: -6.779928207397461
    6. ']))' → logprob: -8.029928207397461
    7. '   ' → logprob: -8.529928207397461
    8. ' ])' → logprob: -8.654928207397461
    9. '])]' → logprob: -8.904928207397461
    10. '       ' → logprob: -9.154928207397461

Token 118: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5045728087425232
    2. ')' → logprob: -1.254572868347168
    3. '   ' → logprob: -3.004572868347168
    4. ' for' → logprob: -4.004572868347168
    5. ',
' → logprob: -4.504572868347168
    6. 'for' → logprob: -4.629572868347168
    7. '       ' → logprob: -4.879572868347168
    8. ',k' → logprob: -5.004572868347168
    9. '),' → logprob: -5.504572868347168
    10. ')
' → logprob: -6.879572868347168

Token 119: ' A' (ID: 355)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.7511934041976929
    2. 'A' → logprob: -1.6261934041976929
    3. '(A' → logprob: -2.2511935234069824
    4. 'abs' → logprob: -2.3761935234069824
    5. ' abs' → logprob: -3.5011935234069824
    6. ' (' → logprob: -3.5011935234069824
    7. 'sum' → logprob: -4.001193523406982
    8. ' A' → logprob: -4.376193523406982
    9. 'L' → logprob: -4.501193523406982
    10. '(abs' → logprob: -4.751193523406982

Token 120: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029847217723727226
    2. '[k' → logprob: -3.5298471450805664
    3. '[' → logprob: -9.779847145080566
    4. 'i' → logprob: -11.029847145080566
    5. '[j' → logprob: -11.654847145080566
    6. 'k' → logprob: -12.529847145080566
    7. '[
' → logprob: -12.654847145080566
    8. ' [' → logprob: -13.029847145080566
    9. '[x' → logprob: -13.279847145080566
    10. '[q' → logprob: -14.279847145080566

Token 121: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4218778610229492
    2. 'for' → logprob: -1.5468778610229492
    3. '[k' → logprob: -2.421877861022949
    4. ')' → logprob: -3.296877861022949
    5. '*k' → logprob: -6.421877861022949
    6. ')
' → logprob: -6.671877861022949
    7. ']' → logprob: -7.046877861022949
    8. '*' → logprob: -7.796877861022949
    9. '[i' → logprob: -8.04687786102295
    10. '
' → logprob: -8.92187786102295

Token 122: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.033655840903520584
    2. '(L' → logprob: -3.908655881881714
    3. 'R' → logprob: -5.158655643463135
    4. ' L' → logprob: -6.408655643463135
    5. 'sum' → logprob: -6.908655643463135
    6. 'i' → logprob: -7.033655643463135
    7. 'A' → logprob: -7.033655643463135
    8. 'k' → logprob: -7.158655643463135
    9. '(R' → logprob: -7.658655643463135
    10. ' (' → logprob: -8.283656120300293

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02419218420982361
    2. ' +' → logprob: -3.7741920948028564
    3. '+k' → logprob: -7.7741923332214355
    4. '+
' → logprob: -8.149191856384277
    5. '+j' → logprob: -9.774191856384277
    6. ')' → logprob: -9.899191856384277
    7. '
' → logprob: -11.149191856384277
    8. ' +
' → logprob: -11.274191856384277
    9. ' ' → logprob: -11.274191856384277
    10. '*' → logprob: -11.399191856384277

Token 124: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00024858469259925187
    2. ' R' → logprob: -8.375248908996582
    3. ' ' → logprob: -12.000248908996582
    4. '   ' → logprob: -13.000248908996582
    5. 'k' → logprob: -13.500248908996582
    6. 'A' → logprob: -13.625248908996582
    7. '(R' → logprob: -13.750248908996582
    8. '
' → logprob: -13.875248908996582
    9. ')' → logprob: -13.875248908996582
    10. '1' → logprob: -14.125248908996582

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22746102511882782
    2. ')
' → logprob: -1.6024609804153442
    3. 'for' → logprob: -7.477460861206055
    4. ')
' → logprob: -7.852460861206055
    5. ' )' → logprob: -7.977460861206055
    6. ' for' → logprob: -8.352460861206055
    7. ' )
' → logprob: -8.852460861206055
    8. '   ' → logprob: -9.602460861206055
    9. ' ' → logprob: -9.727460861206055
    10. '-' → logprob: -9.727460861206055

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6587925553321838
    2. ' for' → logprob: -0.9087925553321838
    3. 'for' → logprob: -2.783792495727539
    4. ')' → logprob: -4.533792495727539
    5. '   ' → logprob: -5.158792495727539
    6. ')
' → logprob: -7.408792495727539
    7. ' ' → logprob: -8.783792495727539
    8. ',' → logprob: -9.158792495727539
    9. '      ' → logprob: -9.658792495727539
    10. '           ' → logprob: -9.783792495727539

Token 127: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47631314396858215
    2. 'for' (adapté à ' for') → logprob: -0.9763131141662598
    3. '       ' → logprob: -6.35131311416626
    4. '   ' → logprob: -7.97631311416626
    5. ' ' → logprob: -9.851313591003418
    6. ')' → logprob: -9.851313591003418
    7. '
' → logprob: -11.476313591003418
    8. '  ' → logprob: -11.726313591003418
    9. '    ' → logprob: -11.851313591003418
    10. '           ' → logprob: -12.351313591003418

Token 128: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03841071575880051
    2. ' k' → logprob: -3.2884106636047363
    3. 'range' → logprob: -8.538411140441895
    4. ' range' → logprob: -8.663411140441895
    5. '   ' → logprob: -15.288411140441895
    6. '	k' → logprob: -15.788411140441895
    7. ' ' → logprob: -16.038410186767578
    8. '_k' → logprob: -16.913410186767578
    9. '
' → logprob: -17.663410186767578
    10. '[k' → logprob: -17.663410186767578

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891149073839188
    2. 'in' → logprob: -2.578911542892456
    3. ')' → logprob: -12.203911781311035
    4. 'range' → logprob: -12.453911781311035
    5. ' ' → logprob: -12.578911781311035
    6. '
' → logprob: -12.578911781311035
    7. '   ' → logprob: -13.453911781311035
    8. 'i' → logprob: -13.953911781311035
    9. 'k' → logprob: -14.203911781311035
    10. ' i' → logprob: -14.578911781311035

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170460251159966
    2. ' range' → logprob: -6.751170635223389
    3. '(range' → logprob: -15.12617015838623
    4. '	range' → logprob: -18.001171112060547
    5. ' ' → logprob: -18.876171112060547
    6. '
' → logprob: -18.876171112060547
    7. '   ' → logprob: -19.001171112060547
    8. 'product' → logprob: -19.001171112060547
    9. ')' → logprob: -19.126171112060547
    10. 'rang' → logprob: -20.001171112060547

Token 131: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. 'i' → logprob: -17.75
    4. ' (' → logprob: -19.25
    5. '   ' → logprob: -20.25
    6. '(I' → logprob: -20.375
    7. '[i' → logprob: -20.625
    8. ' i' → logprob: -22.25
    9. ')' → logprob: -22.375
    10. ',i' → logprob: -22.5

Token 132: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.026911001652479172
    2. ',' → logprob: -3.7769110202789307
    3. ' ,' → logprob: -5.651910781860352
    4. 'j' → logprob: -9.401910781860352
    5. ',k' → logprob: -9.901910781860352
    6. ',i' → logprob: -11.276910781860352
    7. ' j' → logprob: -13.776910781860352
    8. ',
' → logprob: -14.776910781860352
    9. ',n' → logprob: -15.276910781860352
    10. '[j' → logprob: -15.776910781860352

Token 133: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007141007808968425
    2. ' +' → logprob: -7.250714302062988
    3. '+k' → logprob: -13.250714302062988
    4. ')' → logprob: -13.625714302062988
    5. '+
' → logprob: -15.000714302062988
    6. ')+' → logprob: -15.375714302062988
    7. '+j' → logprob: -15.750714302062988
    8. '+i' → logprob: -16.500713348388672
    9. '()+' → logprob: -16.500713348388672
    10. '   ' → logprob: -16.625713348388672

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ')' → logprob: -19.625
    4. '```' → logprob: -21.5
    5. '2' → logprob: -21.875
    6. '۱' → logprob: -23.375
    7. '１' → logprob: -23.625
    8. '))' → logprob: -23.75
    9. '7' → logprob: -24.0
    10. 'k' → logprob: -24.125

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026424072682857513
    2. '))' → logprob: -3.6514241695404053
    3. ')))' → logprob: -9.151424407958984
    4. ')
' → logprob: -11.776424407958984
    5. ' )' → logprob: -13.526424407958984
    6. ')])' → logprob: -13.651424407958984
    7. '   ' → logprob: -13.901424407958984
    8. ')}}' → logprob: -13.901424407958984
    9. ')),' → logprob: -14.026424407958984
    10. '+' → logprob: -14.151424407958984

Token 136: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076742954552173615
    2. '   ' → logprob: -4.882674217224121
    3. ')
' → logprob: -10.382674217224121
    4. '))' → logprob: -10.882674217224121
    5. ' )' → logprob: -11.632674217224121
    6. '       ' → logprob: -12.507674217224121
    7. '),' → logprob: -13.007674217224121
    8. ')))' → logprob: -14.132674217224121
    9. ')return' → logprob: -14.632674217224121
    10. '  ' → logprob: -14.632674217224121

Token 137: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.204720582696609e-05
    2. ')
' → logprob: -10.500052452087402
    3. '   ' → logprob: -10.875052452087402
    4. '))' → logprob: -13.375052452087402
    5. ')return' → logprob: -13.375052452087402
    6. ' )' → logprob: -13.500052452087402
    7. ')`' → logprob: -15.375052452087402
    8. ')#' → logprob: -15.625052452087402
    9. ')))' → logprob: -16.125051498413086
    10. ')...' → logprob: -16.125051498413086

Token 138: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002028251619776711
    2. '<|end|>' → logprob: -9.250203132629395
    3. ')
' → logprob: -10.875203132629395
    4. '```' → logprob: -11.000203132629395
    5. '(' → logprob: -11.125203132629395
    6. '#' → logprob: -11.500203132629395
    7. 'D' → logprob: -12.000203132629395
    8. '()' → logprob: -12.625203132629395
    9. ')return' → logprob: -12.625203132629395
    10. '\' → logprob: -12.750203132629395

Token 139: ' fancy' (ID: 39357)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20361901819705963
    2. 'main' → logprob: -1.7036190032958984
    3. 'solve' → logprob: -6.453619003295898
    4. ' solve' → logprob: -7.703619003295898
    5. 'max' → logprob: -10.578619003295898
    6. ' max' → logprob: -10.703619003295898
    7. 'd' → logprob: -10.828619003295898
    8. '_main' → logprob: -11.078619003295898
    9. 'D' → logprob: -11.328619003295898
    10. 'dfs' → logprob: -11.703619003295898

Token 140: '_res' (ID: 10626)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.5242350101470947
    2. '_factor' → logprob: -1.6492350101470947
    3. '_f' → logprob: -1.7742350101470947
    4. '_function' → logprob: -2.1492350101470947
    5. '_print' → logprob: -2.3992350101470947
    6. '_div' → logprob: -2.6492350101470947
    7. '_d' → logprob: -4.399234771728516
    8. '_sum' → logprob: -4.524234771728516
    9. '_split' → logprob: -4.524234771728516
    10. '_merge' → logprob: -4.649234771728516

Token 141: '():
' (ID: 8595)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.27103254199028015
    2. 'olve' → logprob: -1.8960325717926025
    3. '():
' → logprob: -2.8960325717926025
    4. '():' → logprob: -4.271032333374023
    5. 'ults' → logprob: -5.146032333374023
    6. 'ume' → logprob: -5.896032333374023
    7. 'erve' → logprob: -6.146032333374023
    8. 'olution' → logprob: -6.271032333374023
    9. 'ize' → logprob: -6.896032333374023
    10. 'def' → logprob: -7.271032333374023

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04624722898006439
    2. 'def' → logprob: -3.4212472438812256
    3. ' return' → logprob: -5.5462470054626465
    4. ' def' → logprob: -5.7962470054626465
    5. 'return' → logprob: -6.1712470054626465
    6. ' res' → logprob: -6.6712470054626465
    7. ' for' → logprob: -7.4212470054626465
    8. 'result' → logprob: -8.421247482299805
    9. 'res' → logprob: -8.546247482299805
    10. 'n' → logprob: -8.671247482299805

Token 143: ' pairs' (ID: 24702)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.46087467670440674
    2. 'return' → logprob: -1.9608746767044067
    3. ' res' → logprob: -1.9608746767044067
    4. 'result' → logprob: -3.210874557495117
    5. ' return' → logprob: -4.085874557495117
    6. '   ' → logprob: -5.210874557495117
    7. 's' → logprob: -5.335874557495117
    8. 'ans' → logprob: -5.710874557495117
    9. ' result' → logprob: -5.960874557495117
    10. 'total' → logprob: -5.960874557495117

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11583433300256729
    2. ' =' → logprob: -2.2408342361450195
    3. '()' → logprob: -5.9908342361450195
    4. '   ' → logprob: -8.11583423614502
    5. '(' → logprob: -9.61583423614502
    6. '=[]' → logprob: -9.99083423614502
    7. '  ' → logprob: -11.11583423614502
    8. ' ' → logprob: -11.11583423614502
    9. ',' → logprob: -11.11583423614502
    10. ')' → logprob: -11.49083423614502

Token 145: ' [(' (ID: 43900)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7006815075874329
    2. '[(' → logprob: -0.9506815075874329
    3. 'product' → logprob: -2.950681447982788
    4. ' list' → logprob: -3.825681447982788
    5. 'chain' → logprob: -4.325681686401367
    6. '[]
' → logprob: -4.825681686401367
    7. '[]' → logprob: -5.200681686401367
    8. '(list' → logprob: -5.700681686401367
    9. ' product' → logprob: -5.825681686401367
    10. '(product' → logprob: -6.575681686401367

Token 146: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13904695212841034
    2. '(i' → logprob: -2.6390469074249268
    3. '0' → logprob: -3.3890469074249268
    4. 'x' → logprob: -4.639047145843506
    5. 'a' → logprob: -6.014047145843506
    6. '(' → logprob: -6.014047145843506
    7. 'k' → logprob: -6.514047145843506
    8. 'l' → logprob: -6.514047145843506
    9. 'N' → logprob: -6.764047145843506
    10. ')' → logprob: -6.889047145843506

Token 147: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1038702204823494
    2. ',i' → logprob: -3.103870153427124
    3. ' ,' → logprob: -3.853870153427124
    4. ',len' → logprob: -4.228870391845703
    5. ',n' → logprob: -5.353870391845703
    6. ',k' → logprob: -5.853870391845703
    7. ',N' → logprob: -5.853870391845703
    8. '+i' → logprob: -5.853870391845703
    9. ',j' → logprob: -6.853870391845703
    10. '+' → logprob: -7.478870391845703

Token 148: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.695381224155426
    2. ')]' → logprob: -1.3203811645507812
    3. '-' → logprob: -2.1953811645507812
    4. ',i' → logprob: -3.4453811645507812
    5. '//' → logprob: -4.070381164550781
    6. '+' → logprob: -4.195381164550781
    7. '),(' → logprob: -4.445381164550781
    8. ')' → logprob: -4.570381164550781
    9. '*' → logprob: -4.820381164550781
    10. ',k' → logprob: -5.320381164550781

Token 149: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.220573363360018e-05
    2. '2' → logprob: -10.000082015991211
    3. '(' → logprob: -11.500082015991211
    4. ' ' → logprob: -11.625082015991211
    5. 'i' → logprob: -11.875082015991211
    6. ')' → logprob: -12.000082015991211
    7. '0' → logprob: -14.250082015991211
    8. '(i' → logprob: -14.625082015991211
    9. 'N' → logprob: -14.937582015991211
    10. '
' → logprob: -15.000082015991211

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050967734307050705
    2. ')]' → logprob: -4.300967693328857
    3. ',p' → logprob: -4.300967693328857
    4. ',(' → logprob: -5.050967693328857
    5. ' ,' → logprob: -5.300967693328857
    6. ',k' → logprob: -5.925967693328857
    7. ')' → logprob: -6.175967693328857
    8. '),(' → logprob: -6.175967693328857
    9. ',L' → logprob: -6.675967693328857
    10. ',i' → logprob: -7.300967693328857

Token 151: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0740048810839653
    2. '1' → logprob: -2.699004888534546
    3. '(' → logprob: -7.074004650115967
    4. '2' → logprob: -7.074004650115967
    5. 'i' → logprob: -7.449004650115967
    6. '-' → logprob: -7.949004650115967
    7. ' ' → logprob: -8.199005126953125
    8. ')' → logprob: -8.199005126953125
    9. 'lambda' → logprob: -8.449005126953125
    10. 'x' → logprob: -9.074005126953125

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011711491271853447
    2. ')]' → logprob: -5.011711597442627
    3. ' ,' → logprob: -6.761711597442627
    4. '1' → logprob: -6.886711597442627
    5. ',N' → logprob: -7.136711597442627
    6. ')' → logprob: -7.261711597442627
    7. ',len' → logprob: -8.011711120605469
    8. '),(' → logprob: -8.636711120605469
    9. '0' → logprob: -9.136711120605469
    10. ',None' → logprob: -9.511711120605469

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44507771730422974
    2. 'N' → logprob: -1.070077657699585
    3. '2' → logprob: -4.445077896118164
    4. '0' → logprob: -6.070077896118164
    5. '10' → logprob: -6.945077896118164
    6. '100' → logprob: -8.195077896118164
    7. '-' → logprob: -8.695077896118164
    8. ' ' → logprob: -8.945077896118164
    9. ' N' → logprob: -9.445077896118164
    10. '(N' → logprob: -9.820077896118164

Token 154: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2944920063018799
    2. ')' → logprob: -1.6694920063018799
    3. '),' → logprob: -2.79449200630188
    4. '),(' → logprob: -5.544491767883301
    5. '),
' → logprob: -7.169491767883301
    6. ',' → logprob: -7.669491767883301
    7. ')]
' → logprob: -9.4194917678833
    8. ')
' → logprob: -9.4194917678833
    9. '))' → logprob: -9.5444917678833
    10. ')],' → logprob: -10.0444917678833

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4166809618473053
    2. '<|end|>' → logprob: -2.0416810512542725
    3. ')' → logprob: -2.9166810512542725
    4. ':' → logprob: -3.1666810512542725
    5. '
' → logprob: -3.7916810512542725
    6. ' for' → logprob: -4.166680812835693
    7. ':
' → logprob: -4.291680812835693
    8. '[' → logprob: -4.291680812835693
    9. 'for' → logprob: -4.416680812835693
    10. ',' → logprob: -5.291680812835693

Token 156: ' return' (ID: 622)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28001490235328674
    2. '   ' → logprob: -2.780014991760254
    3. ' while' → logprob: -3.030014991760254
    4. '
' → logprob: -3.030014991760254
    5. 'res' → logprob: -3.530014991760254
    6. 'result' → logprob: -4.155014991760254
    7. 'for' → logprob: -4.530014991760254
    8. '```' → logprob: -5.405014991760254
    9. 'results' → logprob: -5.530014991760254
    10. 'pairs' → logprob: -5.780014991760254

Token 157: ' sum' (ID: 4215)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.21644961833953857
    2. 'sum' → logprob: -2.966449737548828
    3. '[D' → logprob: -2.966449737548828
    4. ' D' → logprob: -3.466449737548828
    5. 'max' → logprob: -3.841449737548828
    6. 'pairs' → logprob: -4.091449737548828
    7. 'next' → logprob: -5.091449737548828
    8. 'list' → logprob: -5.091449737548828
    9. ' sum' → logprob: -6.091449737548828
    10. '[' → logprob: -6.591449737548828

Token 158: '(chain' (ID: 124348)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.07434211671352386
    2. '(f' → logprob: -3.3243420124053955
    3. '(p' → logprob: -3.5743420124053955
    4. '(' → logprob: -5.574342250823975
    5. '(pair' → logprob: -6.449342250823975
    6. '([' → logprob: -7.074342250823975
    7. '(map' → logprob: -7.324342250823975
    8. '((' → logprob: -8.074341773986816
    9. '(
' → logprob: -9.074341773986816
    10. '(sum' → logprob: -9.074341773986816

Token 159: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.40989819169044495
    2. '(p' → logprob: -1.4098981618881226
    3. '(f' → logprob: -3.409898281097412
    4. '(*' → logprob: -3.784898281097412
    5. '(
' → logprob: -4.284898281097412
    6. '(' → logprob: -4.284898281097412
    7. 'from' → logprob: -5.284898281097412
    8. '((' → logprob: -6.659898281097412
    9. '(from' → logprob: -7.034898281097412
    10. '(map' → logprob: -7.784898281097412

Token 160: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.5898327827453613
    2. 'iter' → logprob: -0.8398327827453613
    3. 'pairs' → logprob: -5.339832782745361
    4. '(iter' → logprob: -6.089832782745361
    5. '(p' → logprob: -6.089832782745361
    6. 'pair' → logprob: -7.214832782745361
    7. '_pairs' → logprob: -7.339832782745361
    8. '([(' → logprob: -7.589832782745361
    9. ' iterable' → logprob: -7.714832782745361
    10. 'iterator' → logprob: -7.839832782745361

Token 161: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.02007872238755226
    2. '(p' → logprob: -4.270078659057617
    3. 'ble' → logprob: -6.145078659057617
    4. 'p' → logprob: -7.270078659057617
    5. 'ables' → logprob: -7.645078659057617
    6. 'ate' → logprob: -8.145078659057617
    7. 'st' → logprob: -8.145078659057617
    8. 'chain' → logprob: -8.395078659057617
    9. 'ist' → logprob: -8.520078659057617
    10. 'pairs' → logprob: -8.770078659057617

Token 162: '(map' (ID: 16946)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.28522658348083496
    2. '(p' → logprob: -2.410226583480835
    3. '([' → logprob: -2.410226583480835
    4. '(map' → logprob: -3.535226583480835
    5. '(' → logprob: -4.285226821899414
    6. '((' → logprob: -4.660226821899414
    7. '(pair' → logprob: -5.535226821899414
    8. '([[' → logprob: -5.785226821899414
    9. '(f' → logprob: -6.035226821899414
    10. '(
' → logprob: -6.410226821899414

Token 163: '(lambda' (ID: 43341)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.25518926978111267
    2. '(lambda' → logprob: -1.880189299583435
    3. '(f' → logprob: -2.8801891803741455
    4. '(' → logprob: -4.505189418792725
    5. '(list' → logprob: -6.130189418792725
    6. '(
' → logprob: -6.880189418792725
    7. '(str' → logprob: -7.755189418792725
    8. '(p' → logprob: -7.880189418792725
    9. '(range' → logprob: -8.380188941955566
    10. 'D' → logprob: -8.505188941955566

Token 164: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5350263118743896
    2. 'pairs' → logprob: -1.4100263118743896
    3. '(lambda' → logprob: -2.1600263118743896
    4. ' pairs' → logprob: -4.160026550292969
    5. 'list' → logprob: -4.160026550292969
    6. ' lambda' → logprob: -4.660026550292969
    7. 'pair' → logprob: -5.160026550292969
    8. 'f' → logprob: -6.160026550292969
    9. 'str' → logprob: -6.160026550292969
    10. 'D' → logprob: -6.535026550292969

Token 165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18665842711925507
    2. '(lambda' → logprob: -2.6866583824157715
    3. 'lambda' → logprob: -3.0616583824157715
    4. ' :' → logprob: -3.6866583824157715
    5. ' lambda' → logprob: -4.0616583824157715
    6. '=lambda' → logprob: -5.1866583824157715
    7. ' t' → logprob: -5.4366583824157715
    8. ':t' → logprob: -7.0616583824157715
    9. 't' → logprob: -7.1866583824157715
    10. ',' → logprob: -7.6866583824157715

Token 166: ' [' (ID: 723)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.06907303631305695
    2. ' D' → logprob: -3.694072961807251
    3. 't' → logprob: -4.69407320022583
    4. '[' → logprob: -5.44407320022583
    5. '(lambda' → logprob: -5.56907320022583
    6. 'list' → logprob: -5.69407320022583
    7. '[D' → logprob: -5.69407320022583
    8. 'f' → logprob: -5.81907320022583
    9. 'lambda' → logprob: -5.94407320022583
    10. ' t' → logprob: -6.19407320022583

Token 167: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.09446698427200317
    2. 't' → logprob: -2.5944669246673584
    3. ' D' → logprob: -5.2194671630859375
    4. '*' → logprob: -5.4694671630859375
    5. ' t' → logprob: -6.3444671630859375
    6. 'f' → logprob: -6.8444671630859375
    7. '(t' → logprob: -7.4694671630859375
    8. 'sum' → logprob: -7.7194671630859375
    9. '   ' → logprob: -8.219467163085938
    10. 'd' → logprob: -8.344467163085938

Token 168: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.022561440244317055
    2. '(t' → logprob: -4.397561550140381
    3. '(*(' → logprob: -4.897561550140381
    4. '(' → logprob: -6.147561550140381
    5. '(i' → logprob: -9.272561073303223
    6. '((*' → logprob: -9.397561073303223
    7. '(
' → logprob: -9.897561073303223
    8. '*t' → logprob: -10.272561073303223
    9. '*' → logprob: -10.397561073303223
    10. 't' → logprob: -10.522561073303223

Token 169: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.024200910702347755
    2. '(' → logprob: -4.274200916290283
    3. '(t' → logprob: -5.024200916290283
    4. '(*' → logprob: -5.774200916290283
    5. ' t' → logprob: -9.274200439453125
    6. '(i' → logprob: -9.649200439453125
    7. ')' → logprob: -10.399200439453125
    8. '*' → logprob: -11.024200439453125
    9. '((' → logprob: -11.024200439453125
    10. 'tuple' → logprob: -11.149200439453125

Token 170: ')],' (ID: 60559)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.13853581249713898
    2. ')]' → logprob: -2.388535737991333
    3. ')],' → logprob: -4.388535976409912
    4. ')])' → logprob: -4.638535976409912
    5. ')' → logprob: -5.388535976409912
    6. ')+' → logprob: -5.638535976409912
    7. ',' → logprob: -6.638535976409912
    8. '()),' → logprob: -6.638535976409912
    9. '   ' → logprob: -7.013535976409912
    10. '+' → logprob: -7.388535976409912

Token 171: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.16165609657764435
    2. ' pairs' → logprob: -1.911656141281128
    3. '[(' → logprob: -7.411655902862549
    4. '[' → logprob: -8.661656379699707
    5. '[p' → logprob: -8.911656379699707
    6. '   ' → logprob: -8.911656379699707
    7. 'range' → logprob: -9.786656379699707
    8. 'f' → logprob: -10.036656379699707
    9. ' [(' → logprob: -10.036656379699707
    10. ' [' → logprob: -10.286656379699707

Token 172: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.014520387165248394
    2. '))' → logprob: -4.264520168304443
    3. '))))' → logprob: -8.139520645141602
    4. ')' → logprob: -10.389520645141602
    5. '   ' → logprob: -11.139520645141602
    6. ')))
' → logprob: -11.139520645141602
    7. ' ' → logprob: -13.514520645141602
    8. ')));' → logprob: -14.389520645141602
    9. '())))' → logprob: -14.514520645141602
    10. '))
' → logprob: -14.639520645141602

Token 173: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058008771389722824
    2. '<|end|>' → logprob: -3.1830086708068848
    3. '(' → logprob: -5.058008670806885
    4. '[' → logprob: -5.683008670806885
    5. '\' → logprob: -6.933008670806885
    6. '#' → logprob: -6.933008670806885
    7. '\n' → logprob: -7.183008670806885
    8. '```' → logprob: -7.433008670806885
    9. '(
' → logprob: -7.558008670806885
    10. '
' → logprob: -7.558008670806885

Token 174: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4362095296382904
    2. '(D' → logprob: -1.6862095594406128
    3. '(f' → logprob: -1.8112095594406128
    4. '()' → logprob: -5.811209678649902
    5. '(print' → logprob: -7.061209678649902
    6. '('' → logprob: -7.936209678649902
    7. '(F' → logprob: -8.186209678649902
    8. '(
' → logprob: -8.936209678649902
    9. '("' → logprob: -9.436209678649902
    10. '(()' → logprob: -11.061209678649902

Token 175: 'ancy' (ID: 8830)
  Prédit: 'ancy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancy' → logprob: -6.704273118884885e-07
    2. 'anc' → logprob: -15.375000953674316
    3. '**' → logprob: -16.125
    4. 'irst' → logprob: -16.75
    5. 'ans' → logprob: -16.875
    6. 'ant' → logprob: -17.0
    7. 'ancies' → logprob: -17.625
    8. ' fancy' → logprob: -17.75
    9. 'ancybox' → logprob: -17.75
    10. '```' → logprob: -17.75

Token 176: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -3.292907877039397e-06
    2. 'res' → logprob: -12.75000286102295
    3. '_result' → logprob: -15.12500286102295
    4. '_results' → logprob: -16.875003814697266
    5. '(_' → logprob: -17.250003814697266
    6. '_' → logprob: -17.500003814697266
    7. '_RES' → logprob: -18.000003814697266
    8. ' _' → logprob: -18.125003814697266
    9. '(res' → logprob: -18.375003814697266
    10. 'Res' → logprob: -18.750003814697266

Token 177: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001522718113847077
    2. '()' → logprob: -6.501522541046143
    3. '();)' → logprob: -11.5015230178833
    4. ')' → logprob: -12.2515230178833
    5. ' ())' → logprob: -12.8765230178833
    6. '())
' → logprob: -13.7515230178833
    7. '()))' → logprob: -14.3765230178833
    8. '()]' → logprob: -14.3765230178833
    9. '()`' → logprob: -15.7515230178833
    10. '());' → logprob: -16.501522064208984

Token 178: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022320532298181206
    2. '))' → logprob: -8.750223159790039
    3. '())' → logprob: -10.375223159790039
    4. '`)' → logprob: -11.000223159790039
    5. ')
' → logprob: -12.125223159790039
    6. '()' → logprob: -12.125223159790039
    7. '')' → logprob: -13.625223159790039
    8. ')`' → logprob: -13.625223159790039
    9. '])' → logprob: -14.500223159790039
    10. ' )' → logprob: -14.500223159790039

Token 179: ' A' (ID: 355)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0168007612228394
    2. ' D' → logprob: -1.3918007612228394
    3. '1' → logprob: -1.5168007612228394
    4. ' ' → logprob: -2.641800880432129
    5. '0' → logprob: -4.016800880432129
    6. 'sum' → logprob: -4.016800880432129
    7. ' A' → logprob: -4.141800880432129
    8. 'A' → logprob: -4.391800880432129
    9. ' sum' → logprob: -4.641800880432129
    10. '10' → logprob: -5.391800880432129

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11291739344596863
    2. '[-' → logprob: -2.237917423248291
    3. ')' → logprob: -9.987916946411133
    4. '[N' → logprob: -10.862916946411133
    5. '0' → logprob: -11.487916946411133
    6. '[len' → logprob: -12.112916946411133
    7. '[:' → logprob: -12.862916946411133
    8. '))' → logprob: -12.862916946411133
    9. '[
' → logprob: -13.987916946411133
    10. ' [' → logprob: -14.112916946411133

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013893934374209493
    2. '-' → logprob: -10.000139236450195
    3. ' ' → logprob: -10.000139236450195
    4. 'N' → logprob: -10.125139236450195
    5. '1' → logprob: -12.000139236450195
    6. '[' → logprob: -14.750139236450195
    7. '
' → logprob: -14.875139236450195
    8. '(' → logprob: -15.875139236450195
    9. '   ' → logprob: -16.125139236450195
    10. ' -' → logprob: -16.125139236450195

Token 182: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01404186524450779
    2. ']' → logprob: -4.514041900634766
    3. ' ])' → logprob: -6.264041900634766
    4. '[' → logprob: -8.264041900634766
    5. ']))' → logprob: -8.389041900634766
    6. ']+' → logprob: -8.764041900634766
    7. ')' → logprob: -8.889041900634766
    8. '-' → logprob: -9.389041900634766
    9. ']*' → logprob: -9.764041900634766
    10. '0' → logprob: -10.764041900634766

Token 183: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10062316805124283
    2. '+' → logprob: -2.72562313079834
    3. '[' → logprob: -4.10062313079834
    4. ' +' → logprob: -4.60062313079834
    5. ' )' → logprob: -5.85062313079834
    6. '))' → logprob: -8.22562313079834
    7. '+)' → logprob: -9.10062313079834
    8. '*' → logprob: -9.47562313079834
    9. '[-' → logprob: -10.22562313079834
    10. '])' → logprob: -10.22562313079834

Token 184: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.57595294713974
    2. ' A' → logprob: -0.82595294713974
    3. ' ' → logprob: -11.325952529907227
    4. '(A' → logprob: -15.075952529907227
    5. '  ' → logprob: -15.325952529907227
    6. '0' → logprob: -16.075952529907227
    7. 'sum' → logprob: -16.450952529907227
    8. ' ' → logprob: -16.700952529907227
    9. '   ' → logprob: -16.825952529907227
    10. '+A' → logprob: -16.825952529907227

Token 185: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03369941562414169
    2. '[-' → logprob: -3.4086995124816895
    3. ')' → logprob: -11.408699035644531
    4. '1' → logprob: -11.533699035644531
    5. '[len' → logprob: -11.533699035644531
    6. '```' → logprob: -11.783699035644531
    7. '0' → logprob: -12.408699035644531
    8. '[N' → logprob: -12.908699035644531
    9. '-' → logprob: -13.533699035644531
    10. ' [' → logprob: -13.783699035644531

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002297039842233062
    2. '])' → logprob: -6.1272969245910645
    3. '-' → logprob: -9.127297401428223
    4. ']' → logprob: -13.252297401428223
    5. ']))' → logprob: -15.502297401428223
    6. '(' → logprob: -15.502297401428223
    7. '(-' → logprob: -15.627297401428223
    8. 'index' → logprob: -15.752297401428223
    9. '])
' → logprob: -16.002296447753906
    10. ')' → logprob: -16.127296447753906

Token 187: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006731592118740082
    2. '))' → logprob: -5.0067315101623535
    3. '])' → logprob: -12.006731986999512
    4. '`)' → logprob: -12.756731986999512
    5. ')))' → logprob: -13.131731986999512
    6. '})' → logprob: -13.381731986999512
    7. ')
' → logprob: -14.256731986999512
    8. ')")' → logprob: -14.381731986999512
    9. ')`' → logprob: -14.381731986999512
    10. '())' → logprob: -14.756731986999512


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 37.30%
Précision adaptée (1ère position): 37.84%
Précision (top 10): 76.22%
================================================================================
