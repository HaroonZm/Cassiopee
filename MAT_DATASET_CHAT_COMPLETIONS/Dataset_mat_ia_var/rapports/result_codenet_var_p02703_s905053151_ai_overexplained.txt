================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import heappop, heappush, heapify  # Importation des fonctions utiles pour manipuler une file de priorité (heap)

MAX_MONEY = 2500  # Limite maximale d'argent qu'un état peut avoir, pour restreindre la taille des structures de données
INF = float("inf")  # Représente une valeur infiniment grande, utilisée pour initialiser les distances
n, m, s = map(int, input().split())  # Lecture des entiers n = nombre de sommets, m = nombre d'arêtes, s = argent initial

# Si l'argent de départ dépasse la limite, on le réduit à la limite autorisée
s = min(s, MAX_MONEY)

# Initialisation du graphe : une liste de n sous-listes vides
graph = [[] for _ in range(n)]
for _ in range(m):  # On boucle sur chaque arête du graphe
    u, v, a, b = map(int, input().split())  # u et v sont les extrémités, a le coût en argent, b le coût en temps
    u -= 1  # Conversion de l'indice vers 0-based (Python)
    v -= 1  # Idem pour v
    graph[u].append((v, a, b))  # Ajoute l'arête (voisin, coût en argent, coût en temps) dans la liste d'adjacence de u
    graph[v].append((u, a, b))  # Comme le graphe est non-orienté, ajoute aussi dans celle de v

# Lecture de la liste des options de change pour chaque sommet
# Pour chaque sommet i, cd[i] = (nombre de pièces qu'on peut ajouter, coût en temps associé)
cd = [tuple(map(int, input().split())) for _ in range(n)]

# Création et initialisation de la table dp :
# dp[v][money] contiendra le coût minimal pour atteindre le sommet v avec 'money' pièces
dp = [[INF] * (MAX_MONEY+10) for _ in range(n)]  # On ajoute un offset pour éviter tout débordement d'indice
dp[0][s] = 0  # Coût nul pour être au sommet 0 avec s pièces

# Initialisation de la file de priorité avec le point de départ :
# (coût accumulé, indice du sommet courant, nombre de pièces courantes)
q = [(0, 0, s)]

# Boucle principale : variante de Dijkstra prenant en compte l'argent comme seconde dimension d'état
while q:  # On continue tant qu'il existe des états à explorer
    dist, v, money = heappop(q)  # On récupère l'état avec le coût accumulé minimal (priorité la plus haute)
    
    # Si l'on trouve cet état avec un meilleur coût déjà enregistré, on saute
    if dp[v][money] < dist:
        continue
    
    # Parcours de tous les voisins du sommet courant
    for nv, fare, cost in graph[v]:  # nv = voisin, fare = pièces nécessaires, cost = coût en temps
        nm = money - fare  # On calcule le nouveau nombre de pièces après avoir payé
        if nm < 0:
            continue  # Si l'on n'a pas assez de pièces, on ignore cette transition
        # Si on améliore le coût pour atteindre (nv, nm), on met à jour et on empile ce nouvel état
        if dp[nv][nm] > dp[v][money] + cost:
            dp[nv][nm] = dp[v][money] + cost
            heappush(q, (dp[nv][nm], nv, nm))
    
    # On considère l'opération de change sur place
    # nm = min(number of pièces augmenté à cd[v][0], mais pas plus que MAX_MONEY)
    nm = min(money + cd[v][0], MAX_MONEY)
    # Si cette opération permet d'améliorer le coût pour rester sur place avec ce nouveau nombre de pièces
    if dp[v][nm] > dp[v][money] + cd[v][1]:
        dp[v][nm] = dp[v][money] + cd[v][1]
        heappush(q, (dp[v][nm], v, nm))  # On ajoute cet état à la file pour exploration future

# Après la terminaison de la boucle, pour chaque sommet excepté le sommet de départ
for i in range(1, n):  # On commence à 1 car 0 est le sommet de départ
    # On affiche la valeur minimale de dp pour ce sommet sur tous les montants d'argent possibles
    print(min(dp[i]))  # Cela donne le coût minimal (en temps) pour atteindre ce sommet, quelle que soit la quantité d'argent restante
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06490714102983475
    2. 'import' → logprob: -2.8149070739746094
    3. ' import' → logprob: -5.939907073974609
    4. '.import' → logprob: -8.68990707397461
    5. '(' → logprob: -10.68990707397461
    6. '.he' → logprob: -11.06490707397461
    7. 'i' → logprob: -11.43990707397461
    8. ' .' → logprob: -11.56490707397461
    9. '.im' → logprob: -11.81490707397461
    10. ' ' → logprob: -11.81490707397461

Token 4: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.28018274903297424
    2. ' he' → logprob: -1.5301827192306519
    3. 'heap' → logprob: -3.6551828384399414
    4. 'nl' → logprob: -6.655182838439941
    5. ' n' → logprob: -7.905182838439941
    6. ' heap' → logprob: -9.155182838439941
    7. 'n' → logprob: -9.530182838439941
    8. 'merge' → logprob: -9.655182838439941
    9. '`' → logprob: -10.280182838439941
    10. '```' → logprob: -10.280182838439941

Token 5: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.038168299943208694
    2. 'ap' → logprob: -3.28816819190979
    3. 'a' → logprob: -9.163167953491211
    4. 'apl' → logprob: -11.663167953491211
    5. 'aps' → logprob: -12.038167953491211
    6. 'q' → logprob: -12.913167953491211
    7. 'appen' → logprob: -13.788167953491211
    8. 'n' → logprob: -13.913167953491211
    9. 'aq' → logprob: -14.288167953491211
    10. 'ап' → logprob: -14.413167953491211

Token 6: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.006827143952250481
    2. 'op' → logprob: -5.381827354431152
    3. 'us' → logprob: -6.631827354431152
    4. 'u' → logprob: -7.381827354431152
    5. 'o' → logprob: -8.256827354431152
    6. 'opleft' → logprob: -13.131827354431152
    7. '```' → logprob: -13.881827354431152
    8. 'a' → logprob: -15.756827354431152
    9. 'opl' → logprob: -15.756827354431152
    10. 'ope' → logprob: -15.756827354431152

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022076819092035294
    2. 'import' → logprob: -4.772076606750488
    3. '```' → logprob: -4.897076606750488
    4. 'he' → logprob: -6.022076606750488
    5. 'heap' → logprob: -7.272076606750488
    6. 'from' → logprob: -7.647076606750488
    7. ',
' → logprob: -7.772076606750488
    8. '`' → logprob: -8.022076606750488
    9. '<|end|>' → logprob: -8.272076606750488
    10. '\n' → logprob: -8.522076606750488

Token 8: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.057020287960767746
    2. ' he' → logprob: -3.0570201873779297
    3. 'heap' → logprob: -4.80702018737793
    4. ' heap' → logprob: -8.43202018737793
    5. ' heaps' → logprob: -13.68202018737793
    6. 'hep' → logprob: -13.68202018737793
    7. '```' → logprob: -13.80702018737793
    8. '.he' → logprob: -13.93202018737793
    9. '_he' → logprob: -14.30702018737793
    10. 'hev' → logprob: -14.30702018737793

Token 9: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023268306627869606
    2. 'ap' → logprob: -3.773268222808838
    3. 'a' → logprob: -10.773268699645996
    4. 'ап' → logprob: -14.148268699645996
    5. 'appen' → logprob: -14.898268699645996
    6. 'apl' → logprob: -15.273268699645996
    7. 'apput' → logprob: -16.39826774597168
    8. 'append' → logprob: -16.52326774597168
    9. 'APP' → logprob: -16.89826774597168
    10. 'apply' → logprob: -17.27326774597168

Token 10: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.703443770878948e-06
    2. 'us' → logprob: -11.875007629394531
    3. 'u' → logprob: -14.500007629394531
    4. 'ushed' → logprob: -17.00000762939453
    5. 'push' → logprob: -17.12500762939453
    6. 'USH' → logprob: -17.50000762939453
    7. 'ushing' → logprob: -19.00000762939453
    8. '```' → logprob: -20.12500762939453
    9. 'uh' → logprob: -20.37500762939453
    10. 'ushi' → logprob: -20.50000762939453

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00196110550314188
    2. '(
' → logprob: -7.1269612312316895
    3. '\(' → logprob: -7.5019612312316895
    4. 'd' → logprob: -8.001960754394531
    5. '\' → logprob: -9.251960754394531
    6. 'def' → logprob: -10.001960754394531
    7. '[' → logprob: -11.001960754394531
    8. 'a' → logprob: -11.501960754394531
    9. '```' → logprob: -11.501960754394531
    10. '\n' → logprob: -11.501960754394531

Token 12: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.047897741198539734
    2. 'he' → logprob: -3.2978978157043457
    3. ' heap' → logprob: -4.672897815704346
    4. ' he' → logprob: -7.922897815704346
    5. '.heap' → logprob: -9.422897338867188
    6. 'merge' → logprob: -11.547897338867188
    7. '_heap' → logprob: -12.797897338867188
    8. 'hea' → logprob: -13.172897338867188
    9. '(heap' → logprob: -13.297897338867188
    10. ' heaps' → logprob: -13.547897338867188

Token 13: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.003883796278387308
    2. 'replace' → logprob: -6.1288838386535645
    3. 'push' → logprob: -7.0038838386535645
    4. 'q' → logprob: -7.5038838386535645
    5. 'lify' → logprob: -9.253883361816406
    6. 'p' → logprob: -9.878883361816406
    7. 'if' → logprob: -11.003883361816406
    8. 's' → logprob: -11.128883361816406
    9. '```' → logprob: -11.628883361816406
    10. 'queue' → logprob: -11.753883361816406

Token 14: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019658474251627922
    2. '\' → logprob: -5.01965856552124
    3. '(
' → logprob: -5.01965856552124
    4. '\(' → logprob: -6.01965856552124
    5. '\n' → logprob: -6.01965856552124
    6. '
' → logprob: -7.51965856552124
    7. '' → logprob: -8.144658088684082
    8. '```' → logprob: -8.894658088684082
    9. '[' → logprob: -9.394658088684082
    10. '\[' → logprob: -9.519658088684082

Token 15: ' #' (ID: 1069)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1908338069915771
    2. '
' → logprob: -1.5658338069915771
    3. '\n' → logprob: -1.6908338069915771
    4. '(' → logprob: -1.6908338069915771
    5. '' → logprob: -2.815833806991577
    6. 'def' → logprob: -4.065834045410156
    7. 'd' → logprob: -4.065834045410156
    8. 'n' → logprob: -5.315834045410156
    9. '

' → logprob: -5.440834045410156
    10. '(
' → logprob: -5.940834045410156

Token 16: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00045474470243789256
    2. '  
' → logprob: -9.125454902648926
    3. '  ' → logprob: -9.375454902648926
    4. ' 
' → logprob: -9.625454902648926
    5. ' #' → logprob: -9.875454902648926
    6. '#' → logprob: -10.625454902648926
    7. ' 

' → logprob: -11.000454902648926
    8. '\' → logprob: -11.125454902648926
    9. ' \' → logprob: -11.125454902648926
    10. '_' → logprob: -11.375454902648926

Token 17: 'ation' (ID: 387)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015333185903728008
    2. '(' → logprob: -4.51533317565918
    3. ' 

' → logprob: -7.01533317565918
    4. ',' → logprob: -7.39033317565918
    5. ' (' → logprob: -7.89033317565918
    6. '
' → logprob: -8.14033317565918
    7. '<|end|>' → logprob: -8.14033317565918
    8. '  ' → logprob: -8.39033317565918
    9. '  

' → logprob: -8.51533317565918
    10. '' → logprob: -8.51533317565918

Token 18: ' des' (ID: 731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7508619427680969
    2. '' → logprob: -1.7508618831634521
    3. ' ' → logprob: -2.000861883163452
    4. '

' → logprob: -2.875861883163452
    5. '\' → logprob: -3.625861883163452
    6. '#' → logprob: -3.750861883163452
    7. '\n' → logprob: -3.750861883163452
    8. '<|end|>' → logprob: -3.750861883163452
    9. ',' → logprob: -4.000862121582031
    10. ' 

' → logprob: -4.625862121582031

Token 19: ' fonctions' (ID: 87283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2888091802597046
    2. '  ' → logprob: -1.5388091802597046
    3. ' espaces' → logprob: -4.663809299468994
    4. '  ' → logprob: -5.663809299468994
    5. 'heap' → logprob: -5.788809299468994
    6. '_' → logprob: -5.913809299468994
    7. ' ,' → logprob: -5.913809299468994
    8. ' ' → logprob: -6.038809299468994
    9. 'space' → logprob: -6.413809299468994
    10. ' heap' → logprob: -6.538809299468994

Token 20: ' utiles' (ID: 121161)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003075871616601944
    2. ',' → logprob: -7.253076076507568
    3. ' 

' → logprob: -7.753076076507568
    4. '(' → logprob: -8.00307559967041
    5. '_' → logprob: -8.12807559967041
    6. '<|end|>' → logprob: -8.50307559967041
    7. ' (' → logprob: -8.75307559967041
    8. '  ' → logprob: -9.12807559967041
    9. '#' → logprob: -9.12807559967041
    10. '\' → logprob: -9.25307559967041

Token 21: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32420292496681213
    2. '' → logprob: -2.0742030143737793
    3. '

' → logprob: -2.3242030143737793
    4. '\' → logprob: -3.9492030143737793
    5. '\n' → logprob: -4.574203014373779
    6. ' 

' → logprob: -5.199203014373779
    7. ' ' → logprob: -5.449203014373779
    8. '
' → logprob: -6.074203014373779
    9. 'def' → logprob: -6.324203014373779
    10. 'n' → logprob: -6.449203014373779

Token 22: ' manip' (ID: 20526)
  Prédit: ' manip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -1.7280644178390503
    2. ' la' → logprob: -1.8530644178390503
    3. ' gérer' → logprob: -2.22806453704834
    4. 'g' → logprob: -2.35306453704834
    5. 'la' → logprob: -2.35306453704834
    6. 'l' → logprob: -2.47806453704834
    7. ' l' → logprob: -2.72806453704834
    8. 'le' → logprob: -2.85306453704834
    9. ' le' → logprob: -3.10306453704834
    10. ' les' → logprob: -3.85306453704834

Token 23: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0564972348511219
    2. 'u' → logprob: -3.05649733543396
    3. 'ulation' → logprob: -6.181497097015381
    4. '\' → logprob: -6.181497097015381
    5. '#' → logprob: -6.306497097015381
    6. '```' → logprob: -7.306497097015381
    7. '|' → logprob: -8.806497573852539
    8. ' u' → logprob: -8.806497573852539
    9. 'ul' → logprob: -9.306497573852539
    10. '

' → logprob: -9.306497573852539

Token 24: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03852084279060364
    2. ' des' → logprob: -4.163520812988281
    3. ' les' → logprob: -4.663520812988281
    4. '  ' → logprob: -4.913520812988281
    5. 'les' → logprob: -5.913520812988281
    6. ' le' → logprob: -7.163520812988281
    7. 'des' → logprob: -7.788520812988281
    8. 'le' → logprob: -8.413520812988281
    9. 'l' → logprob: -8.663520812988281
    10. ' l' → logprob: -8.788520812988281

Token 25: ' file' (ID: 1974)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0002270198310725391
    2. ' ' → logprob: -9.750226974487305
    3. '  ' → logprob: -10.000226974487305
    4. '  ' → logprob: -10.000226974487305
    5. '_' → logprob: -11.000226974487305
    6. 'heap' → logprob: -11.000226974487305
    7. 'p' → logprob: -12.125226974487305
    8. ' heap' → logprob: -12.250226974487305
    9. ' ‌' → logprob: -12.375226974487305
    10. '_heap' → logprob: -12.500226974487305

Token 26: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10891515016555786
    2. ' d' → logprob: -3.108915090560913
    3. ' ' → logprob: -3.733915090560913
    4. '_priority' → logprob: -4.358915328979492
    5. 'd' → logprob: -4.983915328979492
    6. ' de' → logprob: -5.983915328979492
    7. '_prior' → logprob: -6.233915328979492
    8. '  ' → logprob: -6.358915328979492
    9. '.' → logprob: -6.733915328979492
    10. 's' → logprob: -6.858915328979492

Token 27: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.024882322177290916
    2. ' priorité' → logprob: -4.5248823165893555
    3. 'priority' → logprob: -4.7748823165893555
    4. ' prior' → logprob: -5.8998823165893555
    5. 'prio' → logprob: -7.0248823165893555
    6. 'pri' → logprob: -7.6498823165893555
    7. 'p' → logprob: -7.8998823165893555
    8. '```' → logprob: -8.399882316589355
    9. '_prior' → logprob: -9.274882316589355
    10. 'Prior' → logprob: -9.524882316589355

Token 28: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21927452087402344
    2. '' → logprob: -2.0942745208740234
    3. '

' → logprob: -3.4692745208740234
    4. ' 

' → logprob: -4.594274520874023
    5. '\' → logprob: -4.969274520874023
    6. ' 
' → logprob: -4.969274520874023
    7. '\n' → logprob: -5.219274520874023
    8. ' ' → logprob: -5.844274520874023
    9. '
' → logprob: -5.969274520874023
    10. 'n' → logprob: -6.344274520874023

Token 29: 'heap' (ID: 38535)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10657143592834473
    2. ' )' → logprob: -2.3565714359283447
    3. 'priority' → logprob: -6.231571197509766
    4. 's' → logprob: -6.981571197509766
    5. ' priority' → logprob: -7.106571197509766
    6. ',' → logprob: -7.481571197509766
    7. ' ' → logprob: -7.481571197509766
    8. 'p' → logprob: -8.481571197509766
    9. ' des' → logprob: -8.981571197509766
    10. '.' → logprob: -8.981571197509766

Token 30: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007672215579077601
    2. 's' → logprob: -7.375767230987549
    3. ')
' → logprob: -9.50076675415039
    4. '#' → logprob: -11.12576675415039
    5. ')

' → logprob: -12.12576675415039
    6. ',' → logprob: -12.12576675415039
    7. ')
' → logprob: -12.25076675415039
    8. '`)' → logprob: -12.25076675415039
    9. '```' → logprob: -12.62576675415039
    10. ' )' → logprob: -12.87576675415039

Token 31: 'MAX' (ID: 21911)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20691247284412384
    2. '' → logprob: -2.4569125175476074
    3. 'd' → logprob: -3.2069125175476074
    4. '

' → logprob: -4.081912517547607
    5. 'n' → logprob: -4.581912517547607
    6. '\' → logprob: -4.956912517547607
    7. '#' → logprob: -4.956912517547607
    8. '
' → logprob: -5.456912517547607
    9. 'def' → logprob: -5.831912517547607
    10. ' 
' → logprob: -6.206912517547607

Token 32: '_M' (ID: 2372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003619670169427991
    2. '_SIZE' → logprob: -6.12861967086792
    3. ' _' → logprob: -7.37861967086792
    4. '_SPACE' → logprob: -8.003619194030762
    5. '_DEPTH' → logprob: -8.753619194030762
    6. '_CAP' → logprob: -10.003619194030762
    7. '(' → logprob: -10.128619194030762
    8. ' ' → logprob: -10.628619194030762
    9. '_QUEUE' → logprob: -10.628619194030762
    10. '_VALUE' → logprob: -11.378619194030762

Token 33: 'ONEY' (ID: 88207)
  Prédit: 'AX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AX' → logprob: -0.8572269678115845
    2. 'A' → logprob: -2.232226848602295
    3. '_' → logprob: -2.232226848602295
    4. '_SIZE' → logprob: -2.357226848602295
    5. 'EM' → logprob: -2.857226848602295
    6. 'OVE' → logprob: -3.607226848602295
    7. '_A' → logprob: -3.732226848602295
    8. 'ESSAGE' → logprob: -4.107226848602295
    9. 'OV' → logprob: -4.357226848602295
    10. '_VALUE' → logprob: -4.482226848602295

Token 34: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16628213226795197
    2. ' =' → logprob: -2.0412821769714355
    3. '=' → logprob: -4.7912821769714355
    4. ' _' → logprob: -5.1662821769714355
    5. '_SPACE' → logprob: -5.2912821769714355
    6. ' ' → logprob: -6.0412821769714355
    7. ',' → logprob: -7.7912821769714355
    8. ')' → logprob: -8.041281700134277
    9. '_SIZE' → logprob: -9.291281700134277
    10. '_CAP' → logprob: -9.291281700134277

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006773038301616907
    2. '100' → logprob: -5.131772994995117
    3. '10' → logprob: -7.506772994995117
    4. ' float' → logprob: -8.506772994995117
    5. 'float' → logprob: -9.881772994995117
    6. ' int' → logprob: -11.256772994995117
    7. '1' → logprob: -11.381772994995117
    8. 'int' → logprob: -11.881772994995117
    9. '999' → logprob: -12.506772994995117
    10. '500' → logprob: -13.756772994995117

Token 36: '250' (ID: 6911)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25836560130119324
    2. '10' → logprob: -1.5083656311035156
    3. '1' → logprob: -6.633365631103516
    4. '999' → logprob: -6.758365631103516
    5. 'float' → logprob: -7.133365631103516
    6. 'int' → logprob: -7.258365631103516
    7. '500' → logprob: -7.258365631103516
    8. '200' → logprob: -7.508365631103516
    9. '300' → logprob: -8.633365631103516
    10. '50' → logprob: -8.883365631103516

Token 37: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37658023834228516
    2. ' 
' → logprob: -1.8765802383422852
    3. ' ' → logprob: -2.751580238342285
    4. '\' → logprob: -3.751580238342285
    5. '0' → logprob: -4.001580238342285
    6. ' 

' → logprob: -4.251580238342285
    7. '

' → logprob: -4.501580238342285
    8. '
' → logprob: -5.001580238342285
    9. '' → logprob: -5.251580238342285
    10. '_' → logprob: -5.501580238342285

Token 38: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0181106124073267
    2. '' → logprob: -5.018110752105713
    3. ' 
' → logprob: -5.018110752105713
    4. '

' → logprob: -6.143110752105713
    5. '
' → logprob: -6.643110752105713
    6. '\' → logprob: -7.643110752105713
    7. '\n' → logprob: -8.393110275268555
    8. ' 

' → logprob: -9.143110275268555
    9. ' ' → logprob: -9.393110275268555
    10. '  
' → logprob: -9.643110275268555

Token 39: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01844794675707817
    2. '

' → logprob: -5.0184478759765625
    3. '' → logprob: -5.7684478759765625
    4. '#' → logprob: -6.2684478759765625
    5. '
' → logprob: -6.5184478759765625
    6. '\n' → logprob: -6.5184478759765625
    7. ' 
' → logprob: -6.6434478759765625
    8. '\' → logprob: -7.0184478759765625
    9. ' ' → logprob: -7.3934478759765625
    10. '=' → logprob: -8.643447875976562

Token 40: ' Lim' (ID: 16603)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.513288974761963
    2. ' montant' → logprob: -1.513288974761963
    3. ' #' → logprob: -1.763288974761963
    4. ' maximum' → logprob: -2.513288974761963
    5. ' Mont' → logprob: -2.513288974761963
    6. '#' → logprob: -3.388288974761963
    7. ' max' → logprob: -3.638288974761963
    8. '  ' → logprob: -3.888288974761963
    9. '_' → logprob: -4.013288974761963
    10. 'max' → logprob: -4.388288974761963

Token 41: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.015583918429911137
    2. 'it' → logprob: -4.6405839920043945
    3. 'i' → logprob: -5.2655839920043945
    4. 'ites' → logprob: -8.890583992004395
    5. '_' → logprob: -9.265583992004395
    6. '```' → logprob: -9.390583992004395
    7. 'ité' → logprob: -9.515583992004395
    8. 'te' → logprob: -9.640583992004395
    9. 'e' → logprob: -10.390583992004395
    10. '#' → logprob: -10.515583992004395

Token 42: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42586204409599304
    2. ' ' → logprob: -1.3008620738983154
    3. ' de' → logprob: -3.1758620738983154
    4. 's' → logprob: -5.175861835479736
    5. ' des' → logprob: -5.175861835479736
    6. '_des' → logprob: -5.425861835479736
    7. ' d' → logprob: -5.800861835479736
    8. '  ' → logprob: -5.800861835479736
    9. ' _' → logprob: -6.300861835479736
    10. ' maximale' → logprob: -6.425861835479736

Token 43: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5569063425064087
    2. '_' → logprob: -0.9319063425064087
    3. '_money' → logprob: -4.806906223297119
    4. ' de' → logprob: -4.931906223297119
    5. ' _' → logprob: -5.431906223297119
    6. ' 
' → logprob: -6.306906223297119
    7. '  ' → logprob: -6.556906223297119
    8. ',' → logprob: -6.931906223297119
    9. ' of' → logprob: -7.306906223297119
    10. ' d' → logprob: -7.431906223297119

Token 44: ''argent' (ID: 93204)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08333318680524826
    2. ''argent' → logprob: -3.0833332538604736
    3. '_' → logprob: -3.8333332538604736
    4. ''espace' → logprob: -5.3333330154418945
    5. ''achat' → logprob: -5.8333330154418945
    6. ' '' → logprob: -6.4583330154418945
    7. 'e' → logprob: -6.9583330154418945
    8. ''esp' → logprob: -7.0833330154418945
    9. ' ' → logprob: -7.9583330154418945
    10. ''un' → logprob: -8.458333015441895

Token 45: ' qu' (ID: 474)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1624428778886795
    2. ' ' → logprob: -2.787442922592163
    3. '

' → logprob: -3.162442922592163
    4. ' 
' → logprob: -4.537442684173584
    5. ' 

' → logprob: -4.662442684173584
    6. '' → logprob: -4.912442684173584
    7. '#' → logprob: -5.662442684173584
    8. '\' → logprob: -5.662442684173584
    9. '
' → logprob: -5.787442684173584
    10. ',' → logprob: -6.287442684173584

Token 46: ''un' (ID: 9788)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0700535848736763
    2. 'e' → logprob: -3.1950535774230957
    3. '_' → logprob: -4.070053577423096
    4. 'u' → logprob: -5.570053577423096
    5. ' '' → logprob: -6.320053577423096
    6. ''on' → logprob: -6.320053577423096
    7. 'a' → logprob: -6.445053577423096
    8. ' ' → logprob: -8.445054054260254
    9. '’' → logprob: -9.570054054260254
    10. ''a' → logprob: -9.820054054260254

Token 47: ' état' (ID: 59181)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39305680990219116
    2. ' joueur' → logprob: -1.268056869506836
    3. '_' → logprob: -4.018056869506836
    4. ' player' → logprob: -5.018056869506836
    5. '  ' → logprob: -5.143056869506836
    6. ' space' → logprob: -5.518056869506836
    7. ' us' → logprob: -6.518056869506836
    8. ' ' → logprob: -7.268056869506836
    9. ' entrepreneur' → logprob: -7.268056869506836
    10. ' espace' → logprob: -7.518056869506836

Token 48: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06996544450521469
    2. '_' → logprob: -3.569965362548828
    3. ' peut' → logprob: -4.319965362548828
    4. '  ' → logprob: -4.694965362548828
    5. ' a' → logprob: -5.694965362548828
    6. ')' → logprob: -5.694965362548828
    7. ' can' → logprob: -6.319965362548828
    8. ',' → logprob: -6.569965362548828
    9. ' ,' → logprob: -6.819965362548828
    10. '_possible' → logprob: -7.194965362548828

Token 49: ' avoir' (ID: 16595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41759777069091797
    2. ' poss' → logprob: -1.917597770690918
    3. ' avoir' → logprob: -2.292597770690918
    4. 'poss' → logprob: -3.292597770690918
    5. '_cont' → logprob: -4.417597770690918
    6. ' conten' → logprob: -4.667597770690918
    7. ' ' → logprob: -5.667597770690918
    8. ' possède' → logprob: -5.667597770690918
    9. 'avoir' → logprob: -6.042597770690918
    10. ' _' → logprob: -6.167597770690918

Token 50: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18654724955558777
    2. '

' → logprob: -1.8115472793579102
    3. '
' → logprob: -6.31154727935791
    4. '' → logprob: -6.43654727935791
    5. '#' → logprob: -7.18654727935791
    6. ' 

' → logprob: -7.18654727935791
    7. '\' → logprob: -7.18654727935791
    8. '\n' → logprob: -8.31154727935791
    9. ' 
' → logprob: -8.43654727935791
    10. '


' → logprob: -9.06154727935791

Token 51: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5203390121459961
    2. ' 
' → logprob: -1.270339012145996
    3. '_' → logprob: -2.645339012145996
    4. '  
' → logprob: -4.770339012145996
    5. '\' → logprob: -5.270339012145996
    6. ' _' → logprob: -5.395339012145996
    7. ',' → logprob: -5.520339012145996
    8. ' 

' → logprob: -5.645339012145996
    9. '#' → logprob: -5.895339012145996
    10. '\n' → logprob: -6.020339012145996

Token 52: ' rest' (ID: 2867)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.07295885682106018
    2. ' faciliter' → logprob: -4.072958946228027
    3. ' l' → logprob: -4.197958946228027
    4. ' garantir' → logprob: -4.197958946228027
    5. ' le' → logprob: -6.072958946228027
    6. ' assurer' → logprob: -6.447958946228027
    7. ' la' → logprob: -6.447958946228027
    8. ' gérer' → logprob: -6.447958946228027
    9. ' limiter' → logprob: -6.947958946228027
    10. ' ev' → logprob: -7.072958946228027

Token 53: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1283101886510849
    2. 're' → logprob: -2.878310203552246
    3. 'er' → logprob: -2.878310203552246
    4. 'e' → logprob: -5.753310203552246
    5. 'ric' → logprob: -7.003310203552246
    6. 'ringer' → logprob: -7.253310203552246
    7. 'riction' → logprob: -7.503310203552246
    8. '_r' → logprob: -7.753310203552246
    9. '```' → logprob: -7.878310203552246
    10. 'é' → logprob: -8.628310203552246

Token 54: 'indre' (ID: 28945)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009037189302034676
    2. 're' → logprob: -7.750903606414795
    3. 'i' → logprob: -9.125904083251953
    4. 'riction' → logprob: -9.500904083251953
    5. '	r' → logprob: -9.750904083251953
    6. 'ri' → logprob: -10.250904083251953
    7. 'ringer' → logprob: -10.250904083251953
    8. 'ring' → logprob: -10.625904083251953
    9. 'e' → logprob: -10.625904083251953
    10. 'er' → logprob: -11.125904083251953

Token 55: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41195148229599
    2. '_' → logprob: -1.2869515419006348
    3. ' l' → logprob: -4.286951541900635
    4. ' la' → logprob: -4.411951541900635
    5. '<|end|>' → logprob: -4.786951541900635
    6. ' the' → logprob: -5.036951541900635
    7. ' le' → logprob: -5.411951541900635
    8. ' ' → logprob: -5.786951541900635
    9. 's' → logprob: -6.036951541900635
    10. ')' → logprob: -6.161951541900635

Token 56: ' taille' (ID: 41644)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0131571292877197
    2. ' ' → logprob: -1.0131571292877197
    3. 's' → logprob: -1.6381571292877197
    4. ' space' → logprob: -3.8881571292877197
    5. ' espace' → logprob: -4.263156890869141
    6. ' nombre' → logprob: -4.388156890869141
    7. ' montant' → logprob: -4.888156890869141
    8. '  ' → logprob: -5.638156890869141
    9. ' state' → logprob: -6.013156890869141
    10. ' ' → logprob: -7.013156890869141

Token 57: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10856656730175018
    2. ' ' → logprob: -3.6085665225982666
    3. ' de' → logprob: -3.6085665225982666
    4. ' des' → logprob: -3.8585665225982666
    5. ' d' → logprob: -4.233566761016846
    6. ' of' → logprob: -5.108566761016846
    7. ')' → logprob: -6.233566761016846
    8. '_des' → logprob: -6.358566761016846
    9. ' _' → logprob: -7.858566761016846
    10. '_d' → logprob: -8.108566284179688

Token 58: ' structures' (ID: 21207)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3533460795879364
    2. ' ' → logprob: -1.7283461093902588
    3. ' _' → logprob: -2.228346109390259
    4. '_states' → logprob: -5.47834587097168
    5. ' states' → logprob: -6.10334587097168
    6. '  ' → logprob: -6.72834587097168
    7. ' state' → logprob: -7.35334587097168
    8. ' l' → logprob: -7.35334587097168
    9. ' états' → logprob: -7.85334587097168
    10. ')' → logprob: -7.97834587097168

Token 59: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5664770007133484
    2. ' ' → logprob: -1.5664770603179932
    3. 's' → logprob: -2.941477060317993
    4. ' 

' → logprob: -3.316477060317993
    5. '

' → logprob: -3.441477060317993
    6. ',' → logprob: -4.066476821899414
    7. '#' → logprob: -4.691476821899414
    8. '\' → logprob: -5.191476821899414
    9. '_MAX' → logprob: -5.191476821899414
    10. 'MAX' → logprob: -5.191476821899414

Token 60: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44465845823287964
    2. ' données' → logprob: -1.0696585178375244
    3. 'data' → logprob: -5.194658279418945
    4. ' data' → logprob: -5.319658279418945
    5. ' donnée' → logprob: -6.819658279418945
    6. 'mé' → logprob: -7.319658279418945
    7. ' mémoire' → logprob: -7.569658279418945
    8. 'l' → logprob: -7.569658279418945
    9. ' d' → logprob: -8.069658279418945
    10. ' l' → logprob: -8.319658279418945

Token 61: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.14659751951694489
    2. '
' → logprob: -2.0215976238250732
    3. '


' → logprob: -6.396597385406494
    4. '
' → logprob: -6.521597385406494
    5. ' 

' → logprob: -8.271597862243652
    6. '

' → logprob: -8.771597862243652
    7. '' → logprob: -8.896597862243652
    8. '

' → logprob: -9.646597862243652
    9. '#' → logprob: -10.271597862243652
    10. '



' → logprob: -10.396597862243652

Token 62: 'INF' (ID: 64358)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.07115452736616135
    2. '
' → logprob: -2.6961545944213867
    3. '
' → logprob: -7.446154594421387
    4. '


' → logprob: -8.071154594421387
    5. ' 

' → logprob: -9.196154594421387
    6. '' → logprob: -9.696154594421387
    7. '

' → logprob: -9.946154594421387
    8. 'class' → logprob: -10.196154594421387
    9. '

' → logprob: -11.196154594421387
    10. '



' → logprob: -11.446154594421387

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019330393988639116
    2. '=' → logprob: -6.2519330978393555
    3. '_' → logprob: -13.501933097839355
    4. ' =
' → logprob: -14.001933097839355
    5. ' =)' → logprob: -14.126933097839355
    6. ' ' → logprob: -14.876933097839355
    7. '=int' → logprob: -15.001933097839355
    8. ' ' → logprob: -15.251933097839355
    9. ')' → logprob: -15.626933097839355
    10. ' =
' → logprob: -16.37693214416504

Token 64: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.13934120535850525
    2. ' ' → logprob: -2.139341115951538
    3. 'float' → logprob: -4.639341354370117
    4. '10' → logprob: -6.014341354370117
    5. ' int' → logprob: -8.514341354370117
    6. '	float' → logprob: -11.889341354370117
    7. '1' → logprob: -12.139341354370117
    8. '100' → logprob: -12.389341354370117
    9. 'int' → logprob: -12.514341354370117
    10. '(float' → logprob: -12.764341354370117

Token 65: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.56364209135063e-05
    2. '(' → logprob: -9.875065803527832
    3. ''' → logprob: -12.250065803527832
    4. ''in' → logprob: -12.750065803527832
    5. '('+' → logprob: -12.750065803527832
    6. '("' → logprob: -12.875065803527832
    7. '32' → logprob: -15.375065803527832
    8. '(in' → logprob: -15.500065803527832
    9. ' ('' → logprob: -16.625064849853516
    10. 'inf' → logprob: -16.625064849853516

Token 66: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00022964231902733445
    2. ''in' → logprob: -8.500229835510254
    3. ''' → logprob: -11.750229835510254
    4. 'in' → logprob: -11.875229835510254
    5. 'i' → logprob: -12.375229835510254
    6. ''i' → logprob: -12.875229835510254
    7. '+' → logprob: -13.500229835510254
    8. 'info' → logprob: -13.750229835510254
    9. '"' → logprob: -14.625229835510254
    10. '_inf' → logprob: -15.125229835510254

Token 67: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007896083407104015
    2. ')' → logprob: -4.8828959465026855
    3. '"' → logprob: -8.257896423339844
    4. ')")' → logprob: -10.757896423339844
    5. ' )' → logprob: -12.632896423339844
    6. ' ")' → logprob: -12.757896423339844
    7. ')"' → logprob: -14.132896423339844
    8. '')' → logprob: -14.382896423339844
    9. '}")' → logprob: -14.757896423339844
    10. '`)' → logprob: -15.257896423339844

Token 68: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.02124015800654888
    2. '
' → logprob: -3.896240234375
    3. ' 

' → logprob: -8.896240234375
    4. '


' → logprob: -8.896240234375
    5. 'def' → logprob: -9.021240234375
    6. '<|end|>' → logprob: -9.146240234375
    7. '
' → logprob: -9.771240234375
    8. '' → logprob: -9.896240234375
    9. '<|end|>' → logprob: -10.521240234375
    10. '



' → logprob: -11.396240234375

Token 69: ' #' (ID: 1069)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5337117314338684
    2. '
' → logprob: -0.9087117314338684
    3. '
' → logprob: -4.783711910247803
    4. 'def' → logprob: -7.158711910247803
    5. '' → logprob: -7.783711910247803
    6. 'class' → logprob: -7.908711910247803
    7. '


' → logprob: -8.283711433410645
    8. ' 

' → logprob: -9.533711433410645
    9. '

' → logprob: -9.783711433410645
    10. '#' → logprob: -10.033711433410645

Token 70: ' Re' (ID: 907)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: 'prés' (ID: 61592)
  Prédit: 'prés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.6876690983772278
    2. 'st' → logprob: -2.062669038772583
    3. 'v' → logprob: -2.187669038772583
    4. 'p' → logprob: -2.937669038772583
    5. 'turn' → logprob: -3.562669038772583
    6. 'present' → logprob: -3.937669038772583
    7. 's' → logprob: -4.187669277191162
    8. 'pr' → logprob: -4.562669277191162
    9. 'c' → logprob: -4.687669277191162
    10. 'servation' → logprob: -4.687669277191162

Token 72: 'ente' (ID: 1576)
  Prédit: 'entation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entation' → logprob: -0.5495857000350952
    2. 'ent' → logprob: -1.1745857000350952
    3. 'é' → logprob: -2.2995858192443848
    4. 'enter' → logprob: -5.549585819244385
    5. 'e' → logprob: -5.799585819244385
    6. 'esent' → logprob: -6.174585819244385
    7. 'és' → logprob: -6.299585819244385
    8. 'ented' → logprob: -6.424585819244385
    9. 'ente' → logprob: -8.799585342407227
    10. 'ént' → logprob: -8.799585342407227

Token 73: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6361343264579773
    2. ' l' → logprob: -1.011134386062622
    3. ' ' → logprob: -3.136134386062622
    4. ' un' → logprob: -3.386134386062622
    5. 'l' → logprob: -4.136134147644043
    6. 'une' → logprob: -5.636134147644043
    7. ' la' → logprob: -6.136134147644043
    8. '<|end|>' → logprob: -7.011134147644043
    9. '	l' → logprob: -7.011134147644043
    10. '  ' → logprob: -7.511134147644043

Token 74: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.49992790818214417
    2. ' ' → logprob: -1.7499278783798218
    3. ' distance' → logprob: -2.8749279975891113
    4. ' grande' → logprob: -3.6249279975891113
    5. 'distance' → logprob: -3.7499279975891113
    6. ' large' → logprob: -3.8749279975891113
    7. ' notion' → logprob: -3.9999279975891113
    8. 'n' → logprob: -4.249927997589111
    9. 'd' → logprob: -5.624927997589111
    10. 'val' → logprob: -5.749927997589111

Token 75: ' infin' (ID: 93237)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.036533888429403305
    2. ' ' → logprob: -4.536533832550049
    3. 'd' → logprob: -4.786533832550049
    4. ' infin' → logprob: -5.036533832550049
    5. ' positive' → logprob: -5.661533832550049
    6. ' très' → logprob: -6.161533832550049
    7. ' de' → logprob: -7.536533832550049
    8. ' infinity' → logprob: -7.786533832550049
    9. '  ' → logprob: -7.911533832550049
    10. '<|end|>' → logprob: -7.911533832550049

Token 76: 'iment' (ID: 2581)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.3129638731479645
    2. 'inie' → logprob: -2.1879639625549316
    3. 'inity' → logprob: -3.1879639625549316
    4. 'ini' → logprob: -3.4379639625549316
    5. 'inite' → logprob: -3.6879639625549316
    6. 'i' → logprob: -3.8129639625549316
    7. 'ité' → logprob: -4.562963962554932
    8. 'nie' → logprob: -5.562963962554932
    9. 'ie' → logprob: -5.687963962554932
    10. 'init' → logprob: -5.812963962554932

Token 77: ' grande' (ID: 10094)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.08971598744392395
    2. '
' → logprob: -2.4647159576416016
    3. '


' → logprob: -7.839715957641602
    4. '
' → logprob: -8.589715957641602
    5. '' → logprob: -9.839715957641602
    6. 'def' → logprob: -10.339715957641602
    7. ' 

' → logprob: -10.464715957641602
    8. '



' → logprob: -10.839715957641602
    9. '

' → logprob: -11.089715957641602
    10. 'class' → logprob: -11.714715957641602

Token 79: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026231329888105392
    2. ' used' → logprob: -4.401231288909912
    3. ' 
' → logprob: -5.901231288909912
    4. ' utilisée' → logprob: -6.026231288909912
    5. ' )' → logprob: -6.901231288909912
    6. ' #' → logprob: -6.901231288909912
    7. ')' → logprob: -7.026231288909912
    8. '#' → logprob: -7.026231288909912
    9. ' permettant' → logprob: -7.276231288909912
    10. ' 

' → logprob: -7.401231288909912

Token 80: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.1572529673576355
    2. 'initial' → logprob: -2.6572530269622803
    3. ' représ' → logprob: -2.9072530269622803
    4. ' initialize' → logprob: -5.157252788543701
    5. ' init' → logprob: -5.407252788543701
    6. ' l' → logprob: -5.532252788543701
    7. ' initialization' → logprob: -6.407252788543701
    8. 'initialize' → logprob: -7.032252788543701
    9. ' initializing' → logprob: -7.157252788543701
    10. ' la' → logprob: -8.03225326538086

Token 82: 'iser' (ID: 7466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.585411548614502
    2. 'ser' → logprob: -0.835411548614502
    3. 'iser' → logprob: -5.210411548614502
    4. 'se' → logprob: -6.585411548614502
    5. '```' → logprob: -7.585411548614502
    6. 'al' → logprob: -8.210411071777344
    7. 'a' → logprob: -9.085411071777344
    8. 'user' → logprob: -9.335411071777344
    9. 'ze' → logprob: -9.335411071777344
    10. '#' → logprob: -9.460411071777344

Token 83: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3091445565223694
    2. ' distances' → logprob: -2.6841444969177246
    3. 'les' → logprob: -2.8091444969177246
    4. ' ' → logprob: -2.9341444969177246
    5. ' la' → logprob: -4.184144496917725
    6. 's' → logprob: -4.184144496917725
    7. ' des' → logprob: -4.309144496917725
    8. 'le' → logprob: -5.309144496917725
    9. 'es' → logprob: -5.434144496917725
    10. '  ' → logprob: -5.434144496917725

Token 84: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.5985618233680725
    2. '_' → logprob: -1.4735617637634277
    3. ' ' → logprob: -1.5985617637634277
    4. ' dist' → logprob: -4.973561763763428
    5. ' coûts' → logprob: -5.723561763763428
    6. '_dist' → logprob: -5.848561763763428
    7. ' ' → logprob: -7.098561763763428
    8. ' _' → logprob: -7.098561763763428
    9. ' distance' → logprob: -7.348561763763428
    10. ' d' → logprob: -7.598561763763428

Token 85: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.20378346741199493
    2. '
' → logprob: -1.7037835121154785
    3. '


' → logprob: -6.5787835121154785
    4. '
' → logprob: -8.20378303527832
    5. ' 

' → logprob: -8.20378303527832
    6. '' → logprob: -8.45378303527832
    7. '



' → logprob: -9.70378303527832
    8. '

' → logprob: -10.32878303527832
    9. '#' → logprob: -10.70378303527832
    10. 'n' → logprob: -11.07878303527832

Token 86: 'n' (ID: 77)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.22612923383712769
    2. '
' → logprob: -1.6011292934417725
    3. '
' → logprob: -7.851129055023193
    4. '


' → logprob: -8.726129531860352
    5. '' → logprob: -10.226129531860352
    6. 'def' → logprob: -10.726129531860352
    7. '#' → logprob: -11.101129531860352
    8. 'n' → logprob: -11.101129531860352
    9. '



' → logprob: -11.226129531860352
    10. 'class' → logprob: -11.351129531860352

Token 87: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07946964353322983
    2. ' =' → logprob: -3.329469680786133
    3. ' ' → logprob: -3.829469680786133
    4. '=' → logprob: -5.454469680786133
    5. ' _' → logprob: -5.954469680786133
    6. '_items' → logprob: -6.204469680786133
    7. ',' → logprob: -6.329469680786133
    8. 'u' → logprob: -6.454469680786133
    9. '  ' → logprob: -6.954469680786133
    10. 'um' → logprob: -7.079469680786133

Token 88: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47147390246391296
    2. ' m' → logprob: -1.4714739322662354
    3. ' ' → logprob: -2.0964739322662354
    4. 'k' → logprob: -4.721473693847656
    5. 's' → logprob: -5.596473693847656
    6. ' k' → logprob: -5.721473693847656
    7. ' s' → logprob: -6.846473693847656
    8. ' t' → logprob: -6.971473693847656
    9. 'a' → logprob: -6.971473693847656
    10. 't' → logprob: -7.096473693847656

Token 89: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0322742722928524
    2. ',' → logprob: -4.15727424621582
    3. ' ' → logprob: -4.53227424621582
    4. '=' → logprob: -5.40727424621582
    5. ' ,' → logprob: -7.28227424621582
    6. ' =
' → logprob: -9.40727424621582
    7. '<|end|>' → logprob: -9.53227424621582
    8. '  ' → logprob: -11.78227424621582
    9. ')' → logprob: -12.40727424621582
    10. '.' → logprob: -13.15727424621582

Token 90: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0409272164106369
    2. ' =' → logprob: -3.6659271717071533
    3. ' p' → logprob: -5.540927410125732
    4. ' ,' → logprob: -6.040927410125732
    5. ' t' → logprob: -6.915927410125732
    6. ' k' → logprob: -7.040927410125732
    7. ' q' → logprob: -7.040927410125732
    8. ' s' → logprob: -7.165927410125732
    9. ' c' → logprob: -7.290927410125732
    10. 'p' → logprob: -7.540927410125732

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08936504274606705
    2. ',' → logprob: -2.714365005493164
    3. ' ' → logprob: -4.714365005493164
    4. '=' → logprob: -4.964365005493164
    5. ' ,' → logprob: -5.839365005493164
    6. ' =
' → logprob: -7.964365005493164
    7. '<|end|>' → logprob: -11.089365005493164
    8. '  ' → logprob: -12.589365005493164
    9. ',
' → logprob: -12.714365005493164
    10. ' ,
' → logprob: -13.214365005493164

Token 92: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4329671561717987
    2. ' ' → logprob: -1.182967185974121
    3. 'map' → logprob: -3.307967185974121
    4. '0' → logprob: -5.182967185974121
    5. ' input' → logprob: -6.307967185974121
    6. 'input' → logprob: -7.307967185974121
    7. '10' → logprob: -9.432967185974121
    8. '<|end|>' → logprob: -9.932967185974121
    9. '5' → logprob: -10.307967185974121
    10. '1' → logprob: -10.432967185974121

Token 93: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026748521253466606
    2. '(int' → logprob: -3.7767484188079834
    3. '(lambda' → logprob: -6.0267486572265625
    4. '(str' → logprob: -7.7767486572265625
    5. '(
' → logprob: -8.276748657226562
    6. '()' → logprob: -8.526748657226562
    7. '<|end|>' → logprob: -9.276748657226562
    8. '(input' → logprob: -10.276748657226562
    9. '(

' → logprob: -11.026748657226562
    10. '(`' → logprob: -12.026748657226562

Token 94: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5453805923461914
    2. '(input' → logprob: -1.0453805923461914
    3. ')' → logprob: -2.9203805923461914
    4. '()' → logprob: -4.670380592346191
    5. '<|end|>' → logprob: -6.170380592346191
    6. '())' → logprob: -7.420380592346191
    7. 'input' → logprob: -7.795380592346191
    8. ',' → logprob: -7.920380592346191
    9. ')(' → logprob: -8.170380592346191
    10. '(),' → logprob: -8.170380592346191

Token 95: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10022544115781784
    2. 'input' → logprob: -2.3502254486083984
    3. '(input' → logprob: -11.100225448608398
    4. ' )' → logprob: -13.350225448608398
    5. ')' → logprob: -13.975225448608398
    6. '=input' → logprob: -14.225225448608398
    7. ' ' → logprob: -15.100225448608398
    8. ',input' → logprob: -15.350225448608398
    9. '	input' → logprob: -16.8502254486084
    10. '[input' → logprob: -18.8502254486084

Token 96: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.37929725646972656
    2. '()' → logprob: -1.6292972564697266
    3. '().' → logprob: -2.1292972564697266
    4. '());' → logprob: -8.504297256469727
    5. ')' → logprob: -8.879297256469727
    6. '(),' → logprob: -9.379297256469727
    7. '()),' → logprob: -10.004297256469727
    8. '(' → logprob: -10.254297256469727
    9. '();' → logprob: -10.754297256469727
    10. '()>' → logprob: -10.754297256469727

Token 97: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012630375567823648
    2. 'strip' → logprob: -9.000125885009766
    3. ' split' → logprob: -13.750125885009766
    4. 'spl' → logprob: -14.375125885009766
    5. '(split' → logprob: -14.375125885009766
    6. 'rstrip' → logprob: -14.625125885009766
    7. '().' → logprob: -17.125125885009766
    8. 'read' → logprob: -17.500125885009766
    9. 's' → logprob: -17.500125885009766
    10. '()' → logprob: -18.500125885009766

Token 98: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2666235864162445
    2. ')' → logprob: -1.516623616218567
    3. '()' → logprob: -4.266623497009277
    4. '(' → logprob: -8.016623497009277
    5. '))' → logprob: -9.016623497009277
    6. '()))' → logprob: -9.641623497009277
    7. '('' → logprob: -11.391623497009277
    8. '(),' → logprob: -11.891623497009277
    9. '())
' → logprob: -12.641623497009277
    10. '(
' → logprob: -12.641623497009277

Token 99: ' ' (ID: 220)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0894466638565063
    2. '<|end|>' → logprob: -1.0894466638565063
    3. '
' → logprob: -2.089446544647217
    4. ' ' → logprob: -2.464446544647217
    5. '\n' → logprob: -3.589446544647217
    6. '' → logprob: -3.964446544647217
    7. '  
' → logprob: -4.089446544647217
    8. ',' → logprob: -4.214446544647217
    9. ')' → logprob: -4.839446544647217
    10. '\' → logprob: -5.089446544647217

Token 100: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03196524456143379
    2. 'n' → logprob: -4.906965255737305
    3. ' n' → logprob: -5.156965255737305
    4. 's' → logprob: -5.406965255737305
    5. 'input' → logprob: -6.406965255737305
    6. '"' → logprob: -6.656965255737305
    7. ' s' → logprob: -6.781965255737305
    8. ' "' → logprob: -6.906965255737305
    9. ' input' → logprob: -7.156965255737305
    10. '<|end|>' → logprob: -7.281965255737305

Token 102: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0333087258040905
    2. '(' → logprob: -3.783308744430542
    3. '<|end|>' → logprob: -4.783308506011963
    4. ')' → logprob: -7.658308506011963
    5. ' ' → logprob: -7.908308506011963
    6. '<|end|>' → logprob: -8.408308982849121
    7. ' )' → logprob: -9.408308982849121
    8. ' ()' → logprob: -9.408308982849121
    9. ' (' → logprob: -9.658308982849121
    10. '('' → logprob: -10.033308982849121

Token 103: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1030551940202713
    2. ' n' → logprob: -3.353055238723755
    3. 'n' → logprob: -3.978055238723755
    4. 'd' → logprob: -5.103055000305176
    5. ' trip' → logprob: -5.353055000305176
    6. ' nombres' → logprob: -5.478055000305176
    7. 's' → logprob: -6.103055000305176
    8. ' data' → logprob: -6.603055000305176
    9. '<|end|>' → logprob: -6.603055000305176
    10. ' espaces' → logprob: -6.728055000305176

Token 104: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13217997550964355
    2. 'rée' → logprob: -2.5071799755096436
    3. 'ées' → logprob: -4.257180213928223
    4. 'ré' → logprob: -4.632180213928223
    5. 'ri' → logprob: -5.132180213928223
    6. 'rees' → logprob: -5.382180213928223
    7. 'ières' → logprob: -6.132180213928223
    8. 'iers' → logprob: -6.257180213928223
    9. 'rés' → logprob: -7.257180213928223
    10. 'rès' → logprob: -7.382180213928223

Token 105: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3187493681907654
    2. '<|end|>' → logprob: -2.19374942779541
    3. ' ' → logprob: -2.81874942779541
    4. '(' → logprob: -3.06874942779541
    5. ' )' → logprob: -4.19374942779541
    6. ' ()' → logprob: -4.56874942779541
    7. ' (' → logprob: -4.56874942779541
    8. '<|end|>' → logprob: -5.31874942779541
    9. ' n' → logprob: -5.81874942779541
    10. ')' → logprob: -6.31874942779541

Token 106: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16605284810066223
    2. ' ,' → logprob: -2.16605281829834
    3. ',m' → logprob: -3.29105281829834
    4. ' ' → logprob: -7.29105281829834
    5. ' m' → logprob: -9.29105281829834
    6. ',n' → logprob: -9.29105281829834
    7. 'm' → logprob: -9.29105281829834
    8. '<|end|>' → logprob: -9.66605281829834
    9. ',s' → logprob: -10.29105281829834
    10. '  ' → logprob: -11.04105281829834

Token 107: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5515841245651245
    2. 'nombre' → logprob: -0.9265841245651245
    3. ' nombres' → logprob: -4.426584243774414
    4. ' n' → logprob: -4.801584243774414
    5. 'n' → logprob: -5.676584243774414
    6. 'm' → logprob: -6.551584243774414
    7. 's' → logprob: -6.801584243774414
    8. ' number' → logprob: -8.051584243774414
    9. ' m' → logprob: -8.176584243774414
    10. ' ' → logprob: -8.301584243774414

Token 108: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9027513265609741
    2. ' d' → logprob: -1.0277513265609741
    3. ' de' → logprob: -2.4027514457702637
    4. 'de' → logprob: -2.9027514457702637
    5. '<|end|>' → logprob: -2.9027514457702637
    6. ',' → logprob: -4.527751445770264
    7. 'd' → logprob: -4.652751445770264
    8. 's' → logprob: -5.402751445770264
    9. ' des' → logprob: -6.527751445770264
    10. ' joueurs' → logprob: -6.777751445770264

Token 109: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9701155424118042
    2. ' villes' → logprob: -1.4701155424118042
    3. ' ' → logprob: -2.2201156616210938
    4. 'v' → logprob: -2.5951156616210938
    5. 'stations' → logprob: -2.7201156616210938
    6. '<|end|>' → logprob: -3.3451156616210938
    7. 'n' → logprob: -4.470115661621094
    8. ' stations' → logprob: -5.095115661621094
    9. ' commerces' → logprob: -5.345115661621094
    10. ' ville' → logprob: -5.345115661621094

Token 110: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.6437561511993408
    2. 'è' → logprob: -1.1437561511993408
    3. 'ètres' → logprob: -3.268756151199341
    4. 'ètes' → logprob: -3.268756151199341
    5. 'ères' → logprob: -4.518755912780762
    6. 'ices' → logprob: -4.518755912780762
    7. 'èves' → logprob: -4.768755912780762
    8. 'iers' → logprob: -4.893755912780762
    9. 'èces' → logprob: -5.143755912780762
    10. 'aires' → logprob: -5.393755912780762

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009327789884991944
    2. ' ,' → logprob: -7.625932693481445
    3. ',m' → logprob: -7.875932693481445
    4. '<|end|>' → logprob: -10.625932693481445
    5. 'm' → logprob: -11.125932693481445
    6. ',n' → logprob: -12.500932693481445
    7. ' ' → logprob: -12.625932693481445
    8. ')' → logprob: -12.625932693481445
    9. ',s' → logprob: -13.000932693481445
    10. ' m' → logprob: -13.000932693481445

Token 112: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7542901039123535
    2. ' t' → logprob: -1.6292901039123535
    3. 't' → logprob: -2.3792901039123535
    4. 'q' → logprob: -2.8792901039123535
    5. 'm' → logprob: -3.3792901039123535
    6. ' p' → logprob: -3.3792901039123535
    7. 'p' → logprob: -3.7542901039123535
    8. '  ' → logprob: -3.8792901039123535
    9. 'k' → logprob: -4.1292901039123535
    10. ' q' → logprob: -4.3792901039123535

Token 113: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14864562451839447
    2. '<|end|>' → logprob: -2.0236456394195557
    3. ' ,' → logprob: -6.273645401000977
    4. ' ' → logprob: -6.398645401000977
    5. '=' → logprob: -6.773645401000977
    6. ')' → logprob: -7.898645401000977
    7. '<|end|>' → logprob: -8.148645401000977
    8. ' =' → logprob: -8.773645401000977
    9. ',n' → logprob: -9.898645401000977
    10. 's' → logprob: -10.148645401000977

Token 114: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.15679815411567688
    2. ' nombre' → logprob: -2.4067981243133545
    3. 'k' → logprob: -4.156798362731934
    4. 's' → logprob: -4.656798362731934
    5. 'q' → logprob: -4.781798362731934
    6. 'number' → logprob: -6.031798362731934
    7. ' nombres' → logprob: -6.156798362731934
    8. 't' → logprob: -6.281798362731934
    9. 'p' → logprob: -6.406798362731934
    10. ' number' → logprob: -6.406798362731934

Token 115: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6901059746742249
    2. ' des' → logprob: -1.19010591506958
    3. ' de' → logprob: -2.56510591506958
    4. '<|end|>' → logprob: -3.19010591506958
    5. 'des' → logprob: -3.44010591506958
    6. 'de' → logprob: -3.81510591506958
    7. ' ' → logprob: -4.69010591506958
    8. ',' → logprob: -5.69010591506958
    9. 'd' → logprob: -5.94010591506958
    10. ' of' → logprob: -6.31510591506958

Token 116: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.0230134725570679
    2. ''ar' → logprob: -1.3980134725570679
    3. 'e' → logprob: -1.7730134725570679
    4. 'es' → logprob: -3.1480135917663574
    5. ' ar' → logprob: -3.8980135917663574
    6. 'are' → logprob: -4.148013591766357
    7. 'edges' → logprob: -4.148013591766357
    8. '_ar' → logprob: -4.398013591766357
    9. 'arb' → logprob: -4.523013591766357
    10. '_edges' → logprob: -4.898013591766357

Token 117: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.7425853610038757
    2. 'cs' → logprob: -1.1175854206085205
    3. 'tes' → logprob: -1.7425854206085205
    4. 'etes' → logprob: -4.992585182189941
    5. 'c' → logprob: -5.117585182189941
    6. 're' → logprob: -5.867585182189941
    7. '�' → logprob: -6.242585182189941
    8. 'r' → logprob: -7.242585182189941
    9. 'es' → logprob: -7.492585182189941
    10. 'ct' → logprob: -7.742585182189941

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021396710071712732
    2. ' ' → logprob: -6.877139568328857
    3. ' ,' → logprob: -7.127139568328857
    4. ',s' → logprob: -9.127140045166016
    5. '<|end|>' → logprob: -10.002140045166016
    6. ')' → logprob: -10.252140045166016
    7. ',n' → logprob: -10.252140045166016
    8. 'n' → logprob: -11.252140045166016
    9. 's' → logprob: -11.377140045166016
    10. ' s' → logprob: -12.002140045166016

Token 119: ' s' (ID: 265)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8183423280715942
    2. ' q' → logprob: -1.4433423280715942
    3. 'c' → logprob: -3.1933422088623047
    4. ' ' → logprob: -3.3183422088623047
    5. ' t' → logprob: -3.3183422088623047
    6. ' c' → logprob: -3.3183422088623047
    7. ' a' → logprob: -3.4433422088623047
    8. 'a' → logprob: -3.5683422088623047
    9. ' p' → logprob: -3.9433422088623047
    10. 't' → logprob: -4.068342208862305

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18244799971580505
    2. '=' → logprob: -1.8074480295181274
    3. ' ' → logprob: -6.182447910308838
    4. ',' → logprob: -8.182448387145996
    5. ')' → logprob: -9.682448387145996
    6. '_' → logprob: -9.932448387145996
    7. '<|end|>' → logprob: -9.932448387145996
    8. '=int' → logprob: -10.307448387145996
    9. '_max' → logprob: -10.432448387145996
    10. 'max' → logprob: -10.807448387145996

Token 121: ' argent' (ID: 73800)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.049207523465156555
    2. ' starting' → logprob: -4.17420768737793
    3. 'money' → logprob: -4.79920768737793
    4. 'starting' → logprob: -4.92420768737793
    5. ' money' → logprob: -5.29920768737793
    6. ' s' → logprob: -5.79920768737793
    7. 'start' → logprob: -6.17420768737793
    8. 'argent' → logprob: -7.17420768737793
    9. ' start' → logprob: -7.54920768737793
    10. ' starter' → logprob: -7.79920768737793

Token 122: ' initial' (ID: 4871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004979116842150688
    2. '
' → logprob: -5.504979133605957
    3. '

' → logprob: -7.754979133605957
    4. ' 
' → logprob: -8.004979133605957
    5. '' → logprob: -10.004979133605957
    6. 's' → logprob: -10.629979133605957
    7. '  
' → logprob: -11.254979133605957
    8. 'n' → logprob: -11.504979133605957
    9. ' ' → logprob: -11.629979133605957
    10. '\n' → logprob: -12.129979133605957

Token 123: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0029840022325515747
    2. '
' → logprob: -6.377984046936035
    3. ' 
' → logprob: -7.377984046936035
    4. '' → logprob: -8.002984046936035
    5. '\n' → logprob: -9.502984046936035
    6. '  
' → logprob: -9.627984046936035
    7. '

' → logprob: -9.627984046936035
    8. ' ' → logprob: -10.377984046936035
    9. 'n' → logprob: -11.252984046936035
    10. ',' → logprob: -11.252984046936035

Token 124: '#' (ID: 2)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7728041410446167
    2. '
' → logprob: -1.1478041410446167
    3. ' graph' → logprob: -2.5228042602539062
    4. 'adj' → logprob: -2.5228042602539062
    5. ' adjacency' → logprob: -4.522804260253906
    6. 'edges' → logprob: -4.897804260253906
    7. ' edges' → logprob: -4.897804260253906
    8. ' 
' → logprob: -4.897804260253906
    9. '
' → logprob: -4.897804260253906
    10. ' adj' → logprob: -5.147804260253906

Token 125: ' Si' (ID: 7832)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4422808885574341
    2. 'graph' → logprob: -1.692280888557434
    3. ' edges' → logprob: -2.9422807693481445
    4. ' adj' → logprob: -3.3172807693481445
    5. 'adj' → logprob: -3.3172807693481445
    6. ' adjacency' → logprob: -3.4422807693481445
    7. 'edges' → logprob: -5.3172807693481445
    8. '#' → logprob: -5.5672807693481445
    9. ' money' → logprob: -5.9422807693481445
    10. 's' → logprob: -7.4422807693481445

Token 126: ' l' (ID: 305)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0548679493367672
    2. ' n' → logprob: -3.55486798286438
    3. ' ' → logprob: -4.429867744445801
    4. 's' → logprob: -4.679867744445801
    5. 'n' → logprob: -7.304867744445801
    6. ' l' → logprob: -7.429867744445801
    7. ' not' → logprob: -7.554867744445801
    8. ' ' → logprob: -8.3048677444458
    9. ' m' → logprob: -8.4298677444458
    10. '  ' → logprob: -8.4298677444458

Token 127: ''argent' (ID: 93204)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.537900447845459
    2. ' n' → logprob: -1.162900447845459
    3. ''argent' → logprob: -2.912900447845459
    4. ' '' → logprob: -3.912900447845459
    5. 's' → logprob: -4.912900447845459
    6. ''' → logprob: -5.037900447845459
    7. 'e' → logprob: -5.787900447845459
    8. 'a' → logprob: -5.912900447845459
    9. ' ' → logprob: -6.287900447845459
    10. ''s' → logprob: -6.662900447845459

Token 128: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.6338709592819214
    2. ' initial' → logprob: -2.008871078491211
    3. ' disponible' → logprob: -2.133871078491211
    4. ' <' → logprob: -2.258871078491211
    5. ' >' → logprob: -2.633871078491211
    6. '>' → logprob: -2.758871078491211
    7. ' >=' → logprob: -2.883871078491211
    8. 'initial' → logprob: -3.508871078491211
    9. ' est' → logprob: -3.633871078491211
    10. '==' → logprob: -3.633871078491211

Token 129: ' départ' (ID: 32693)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0030053853988647
    2. ' ' → logprob: -1.6280053853988647
    3. ' s' → logprob: -1.7530053853988647
    4. 's' → logprob: -2.2530055046081543
    5. 'l' → logprob: -2.5030055046081543
    6. ' un' → logprob: -3.5030055046081543
    7. ' la' → logprob: -4.878005504608154
    8. ' quelqu' → logprob: -5.253005504608154
    9. ' chaque' → logprob: -5.378005504608154
    10. ' départ' → logprob: -5.378005504608154

Token 130: ' dépasse' (ID: 165701)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7086442112922668
    2. ' <' → logprob: -1.583644151687622
    3. '==' → logprob: -2.333644151687622
    4. ' >=' → logprob: -3.083644151687622
    5. ' >' → logprob: -3.583644151687622
    6. ' <=' → logprob: -3.708644151687622
    7. '<' → logprob: -3.958644151687622
    8. '>' → logprob: -3.958644151687622
    9. 's' → logprob: -4.458644390106201
    10. '=' → logprob: -4.583644390106201

Token 131: ' la' (ID: 557)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.4330979585647583
    2. ' MAX' → logprob: -1.0580979585647583
    3. ' la' → logprob: -6.808097839355469
    4. ' le' → logprob: -7.058097839355469
    5. '_MAX' → logprob: -7.183097839355469
    6. ' ' → logprob: -7.308097839355469
    7. '(MAX' → logprob: -7.933097839355469
    8. 'l' → logprob: -8.683097839355469
    9. ' ' → logprob: -9.183097839355469
    10. 'le' → logprob: -9.808097839355469

Token 132: ' limite' (ID: 48939)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.20509116351604462
    2. ' MAX' → logprob: -1.705091118812561
    3. 'max' → logprob: -7.2050909996032715
    4. ' max' → logprob: -7.5800909996032715
    5. '250' → logprob: -7.5800909996032715
    6. ' maximum' → logprob: -7.7050909996032715
    7. ' ' → logprob: -7.8300909996032715
    8. '_MAX' → logprob: -7.9550909996032715
    9. 'M' → logprob: -9.33009147644043
    10. ' limite' → logprob: -9.76759147644043

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16783875226974487
    2. ':' → logprob: -1.9178388118743896
    3. ' :' → logprob: -5.0428385734558105
    4. ' ,' → logprob: -7.6678385734558105
    5. ' or' → logprob: -8.417839050292969
    6. ' ' → logprob: -8.792839050292969
    7. 's' → logprob: -9.542839050292969
    8. ':
' → logprob: -9.667839050292969
    9. ',
' → logprob: -10.167839050292969
    10. '.' → logprob: -10.917839050292969

Token 134: ' on' (ID: 402)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2255009114742279
    2. 's' → logprob: -1.6005009412765503
    3. ' money' → logprob: -10.35050106048584
    4. ' on' → logprob: -10.97550106048584
    5. '	s' → logprob: -11.22550106048584
    6. 'money' → logprob: -12.85050106048584
    7. ' ' → logprob: -12.97550106048584
    8. ' ' → logprob: -13.10050106048584
    9. '20' → logprob: -13.72550106048584
    10. '_s' → logprob: -13.85050106048584

Token 135: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.07122835516929626
    2. ' s' → logprob: -3.446228265762329
    3. 'le' → logprob: -3.571228265762329
    4. 's' → logprob: -5.571228504180908
    5. ' n' → logprob: -6.946228504180908
    6. ' l' → logprob: -7.446228504180908
    7. 'l' → logprob: -7.571228504180908
    8. ' met' → logprob: -7.696228504180908
    9. ' plaf' → logprob: -7.946228504180908
    10. 'n' → logprob: -8.44622802734375

Token 136: ' réduit' (ID: 120775)
  Prédit: 'ram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ram' → logprob: -0.6131060123443604
    2. ' met' → logprob: -2.7381060123443604
    3. ' ram' → logprob: -2.8631060123443604
    4. 'le' → logprob: -2.8631060123443604
    5. ' limite' → logprob: -3.1131060123443604
    6. 'ré' → logprob: -3.3631060123443604
    7. ' remet' → logprob: -3.4881060123443604
    8. ' le' → logprob: -3.7381060123443604
    9. 'lim' → logprob: -3.7381060123443604
    10. 'met' → logprob: -3.8631060123443604

Token 137: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07024773955345154
    2. '=' → logprob: -2.8202476501464844
    3. ' ' → logprob: -4.945247650146484
    4. ' =
' → logprob: -7.695247650146484
    5. 'if' → logprob: -8.695247650146484
    6. 's' → logprob: -8.695247650146484
    7. ' if' → logprob: -8.945247650146484
    8. ',' → logprob: -10.070247650146484
    9. ' to' → logprob: -10.320247650146484
    10. '  ' → logprob: -10.695247650146484

Token 138: ' la' (ID: 557)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.07908090949058533
    2. ' MAX' → logprob: -2.579080820083618
    3. '250' → logprob: -8.954080581665039
    4. ' ' → logprob: -10.704080581665039
    5. '_MAX' → logprob: -11.204080581665039
    6. ' ' → logprob: -11.829080581665039
    7. '(MAX' → logprob: -11.954080581665039
    8. ' la' → logprob: -12.704080581665039
    9. '/MAX' → logprob: -13.079080581665039
    10. 'max' → logprob: -13.454080581665039

Token 139: ' limite' (ID: 48939)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.008529352955520153
    2. ' MAX' → logprob: -5.008529186248779
    3. ' maximum' → logprob: -7.383529186248779
    4. 'maximum' → logprob: -7.508529186248779
    5. '250' → logprob: -7.758529186248779
    6. 'max' → logprob: -8.883529663085938
    7. 'M' → logprob: -10.758529663085938
    8. '_MAX' → logprob: -10.883529663085938
    9. 'limit' → logprob: -11.133529663085938
    10. ' ' → logprob: -12.383529663085938

Token 140: ' autor' (ID: 13432)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3278673589229584
    2. ' if' → logprob: -2.327867269515991
    3. 'if' → logprob: -2.577867269515991
    4. 's' → logprob: -2.952867269515991
    5. '=' → logprob: -3.077867269515991
    6. '
' → logprob: -6.20286750793457
    7. ' ' → logprob: -6.20286750793457
    8. ' s' → logprob: -6.95286750793457
    9. ':' → logprob: -7.32786750793457
    10. ',' → logprob: -7.45286750793457

Token 141: 'isée' (ID: 59331)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.5837925672531128
    2. 'isée' → logprob: -0.8337925672531128
    3. 'ise' → logprob: -5.083792686462402
    4. 'MAX' → logprob: -7.458792686462402
    5. 'is' → logprob: -7.583792686462402
    6. 'e' → logprob: -7.833792686462402
    7. 'ité' → logprob: -10.083792686462402
    8. 'isee' → logprob: -10.333792686462402
    9. 'é' → logprob: -11.208792686462402
    10. 'isés' → logprob: -11.708792686462402

Token 142: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35148006677627563
    2. 'if' → logprob: -1.4764800071716309
    3. '
' → logprob: -3.351480007171631
    4. 's' → logprob: -4.476480007171631
    5. ' =' → logprob: -5.101480007171631
    6. '=' → logprob: -5.351480007171631
    7. ' ' → logprob: -5.476480007171631
    8. ',' → logprob: -6.726480007171631
    9. '' → logprob: -6.726480007171631
    10. ' 
' → logprob: -6.726480007171631

Token 143: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8305518627166748
    2. 'money' → logprob: -1.4555518627166748
    3. ' money' → logprob: -1.9555518627166748
    4. ' if' → logprob: -2.455551862716675
    5. 's' → logprob: -2.455551862716675
    6. ' s' → logprob: -4.580552101135254
    7. '
' → logprob: -6.580552101135254
    8. ' 
' → logprob: -7.205552101135254
    9. '_money' → logprob: -7.330552101135254
    10. 'i' → logprob: -7.580552101135254

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003179975086823106
    2. '=' → logprob: -5.753180027008057
    3. '=min' → logprob: -13.253179550170898
    4. ' ' → logprob: -15.503179550170898
    5. ' ' → logprob: -16.2531795501709
    6. 's' → logprob: -16.6281795501709
    7. 'min' → logprob: -16.8781795501709
    8. 'if' → logprob: -17.1281795501709
    9. '	' → logprob: -17.3781795501709
    10. ' if' → logprob: -18.1281795501709

Token 145: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.006729110609740019
    2. 'min' → logprob: -5.0067291259765625
    3. '	min' → logprob: -12.006729125976562
    4. ' max' → logprob: -12.506729125976562
    5. ' MIN' → logprob: -13.506729125976562
    6. ' ' → logprob: -13.756729125976562
    7. 'MIN' → logprob: -14.756729125976562
    8. 'max' → logprob: -15.006729125976562
    9. ' ' → logprob: -15.131729125976562
    10. ' MAX' → logprob: -15.381729125976562

Token 146: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009132515988312662
    2. '(' → logprob: -7.000913143157959
    3. '(
' → logprob: -14.500913619995117
    4. 's' → logprob: -14.625913619995117
    5. '(max' → logprob: -15.375913619995117
    6. '(n' → logprob: -15.625913619995117
    7. '(MAX' → logprob: -15.750913619995117
    8. '(S' → logprob: -16.000913619995117
    9. ' (' → logprob: -17.250913619995117
    10. '((' → logprob: -19.000913619995117

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009134899592027068
    2. ' ,' → logprob: -7.000913619995117
    3. ',max' → logprob: -13.625913619995117
    4. 'MAX' → logprob: -15.000913619995117
    5. ',
' → logprob: -15.375913619995117
    6. ',M' → logprob: -16.000913619995117
    7. ' ' → logprob: -17.250913619995117
    8. ',

' → logprob: -17.375913619995117
    9. ')' → logprob: -18.000913619995117
    10. '，' → logprob: -18.000913619995117

Token 148: ' MAX' (ID: 16960)
  Prédit: ' MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MAX' → logprob: -0.2519315779209137
    2. 'MAX' → logprob: -1.5019315481185913
    3. ' ' → logprob: -13.501931190490723
    4. ' ' → logprob: -15.001931190490723
    5. '(MAX' → logprob: -15.001931190490723
    6. '_MAX' → logprob: -15.626931190490723
    7. '/MAX' → logprob: -16.37693214416504
    8. '250' → logprob: -16.50193214416504
    9. ' max' → logprob: -16.87693214416504
    10. ')' → logprob: -16.87693214416504

Token 149: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -3.128163257315464e-07
    2. '_money' → logprob: -15.625
    3. '_' → logprob: -16.5
    4. '_MON' → logprob: -17.875
    5. ' _' → logprob: -18.875
    6. '_AMOUNT' → logprob: -20.125
    7. '_S' → logprob: -20.125
    8. ')' → logprob: -20.125
    9. ' MONEY' → logprob: -20.625
    10. ')_' → logprob: -20.875

Token 150: 'ONEY' (ID: 88207)
  Prédit: 'ONEY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONEY' → logprob: -0.0037981770001351833
    2. 'NEY' → logprob: -6.378798007965088
    3. '```' → logprob: -6.878798007965088
    4. 'ONE' → logprob: -7.878798007965088
    5. 'oney' → logprob: -8.378798484802246
    6. 'O' → logprob: -8.503798484802246
    7. 'EY' → logprob: -9.253798484802246
    8. 'M' → logprob: -10.253798484802246
    9. 'ONY' → logprob: -10.378798484802246
    10. '_M' → logprob: -10.503798484802246

Token 151: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ' )' → logprob: -12.000007629394531
    3. ')
' → logprob: -13.875007629394531
    4. ')

' → logprob: -17.37500762939453
    5. '))' → logprob: -17.87500762939453
    6. ')`' → logprob: -18.00000762939453
    7. ')#' → logprob: -18.25000762939453
    8. ')
' → logprob: -18.25000762939453
    9. '),' → logprob: -18.50000762939453
    10. '}' → logprob: -19.25000762939453

Token 152: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5620786547660828
    2. 'graph' → logprob: -0.9370786547660828
    3. ' graph' → logprob: -4.187078475952148
    4. ' 
' → logprob: -4.562078475952148
    5. 'edges' → logprob: -5.687078475952148
    6. '
' → logprob: -6.312078475952148
    7. '#' → logprob: -6.937078475952148
    8. ' edges' → logprob: -6.937078475952148
    9. 'n' → logprob: -6.937078475952148
    10. 'g' → logprob: -7.187078475952148

Token 153: ' Initial' (ID: 9209)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.18312141299247742
    2. 'adj' → logprob: -1.9331214427947998
    3. 'edges' → logprob: -4.558121204376221
    4. ' graph' → logprob: -5.808121204376221
    5. 'money' → logprob: -6.058121204376221
    6. 'dist' → logprob: -6.433121204376221
    7. '#' → logprob: -6.808121204376221
    8. ' adj' → logprob: -7.183121204376221
    9. 'prices' → logprob: -7.558121204376221
    10. 'g' → logprob: -8.058121681213379

Token 154: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0635061115026474
    2. 'iser' → logprob: -4.438506126403809
    3. 'izer' → logprob: -4.563506126403809
    4. 'ization' → logprob: -4.938506126403809
    5. 'es' → logprob: -5.313506126403809
    6. 'isation' → logprob: -5.563506126403809
    7. 'e' → logprob: -5.563506126403809
    8. 'izations' → logprob: -6.063506126403809
    9. 'is' → logprob: -6.188506126403809
    10. 'ialize' → logprob: -6.313506126403809

Token 155: ' du' (ID: 1462)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.9243108630180359
    2. ' dist' → logprob: -1.5493109226226807
    3. ' distances' → logprob: -1.6743109226226807
    4. ' d' → logprob: -2.9243109226226807
    5. 'graph' → logprob: -3.1743109226226807
    6. 'dist' → logprob: -3.1743109226226807
    7. ' ' → logprob: -3.9243109226226807
    8. ' distance' → logprob: -3.9243109226226807
    9. ' des' → logprob: -5.174310684204102
    10. ' dp' → logprob: -5.424310684204102

Token 156: ' grap' (ID: 60955)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5500521063804626
    2. 'graph' → logprob: -0.9250521063804626
    3. ' grap' → logprob: -4.175052165985107
    4. 'gr' → logprob: -5.550052165985107
    5. 'adj' → logprob: -6.050052165985107
    6. 'dist' → logprob: -6.550052165985107
    7. ' adjacency' → logprob: -7.300052165985107
    8. ' dist' → logprob: -7.300052165985107
    9. ' adj' → logprob: -7.550052165985107
    10. 'g' → logprob: -7.675052165985107

Token 157: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.16283801198005676
    2. 'ah' → logprob: -2.7878379821777344
    3. 'aph' → logprob: -2.9128379821777344
    4. 'h' → logprob: -3.6628379821777344
    5. 'ph' → logprob: -5.162837982177734
    6. 'a' → logprob: -6.787837982177734
    7. 'he' → logprob: -7.787837982177734
    8. 'raph' → logprob: -7.787837982177734
    9. '#' → logprob: -8.287837982177734
    10. 'ap' → logprob: -8.412837982177734

Token 158: ' :' (ID: 712)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2531295418739319
    2. ' graph' → logprob: -1.628129482269287
    3. ' =' → logprob: -3.878129482269287
    4. '=' → logprob: -6.503129482269287
    5. '_graph' → logprob: -6.753129482269287
    6. 'adj' → logprob: -6.878129482269287
    7. 'g' → logprob: -7.128129482269287
    8. ' adjacency' → logprob: -8.003129959106445
    9. '(graph' → logprob: -8.378129959106445
    10. ',' → logprob: -8.753129959106445

Token 159: ' une' (ID: 2463)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09917645901441574
    2. ' graph' → logprob: -2.8491764068603516
    3. ' [[]' → logprob: -4.099176406860352
    4. '[' → logprob: -4.349176406860352
    5. 'adj' → logprob: -5.349176406860352
    6. ' adjacency' → logprob: -6.974176406860352
    7. 'default' → logprob: -7.724176406860352
    8. '[]' → logprob: -8.224176406860352
    9. ' defaultdict' → logprob: -8.474176406860352
    10. '{' → logprob: -8.849176406860352

Token 160: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6403549909591675
    2. ' [[]' → logprob: -1.6403549909591675
    3. '[]' → logprob: -2.015355110168457
    4. ' [' → logprob: -3.515355110168457
    5. 'list' → logprob: -3.640355110168457
    6. 'liste' → logprob: -3.765355110168457
    7. '[
' → logprob: -4.390355110168457
    8. ' liste' → logprob: -4.390355110168457
    9. ' defaultdict' → logprob: -4.515355110168457
    10. ' list' → logprob: -4.765355110168457

Token 161: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4205091893672943
    2. '=' → logprob: -1.4205092191696167
    3. '[' → logprob: -3.170509099960327
    4. '[]' → logprob: -3.545509099960327
    5. ' de' → logprob: -4.795509338378906
    6. '=[]' → logprob: -4.920509338378906
    7. ' of' → logprob: -5.545509338378906
    8. '=[' → logprob: -6.045509338378906
    9. 'de' → logprob: -6.295509338378906
    10. 'd' → logprob: -6.920509338378906

Token 162: ' n' (ID: 297)
  Prédit: ' listes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.660021960735321
    2. '[]' → logprob: -1.9100220203399658
    3. ' lists' → logprob: -1.9100220203399658
    4. 'n' → logprob: -2.160022020339966
    5. 'list' → logprob: -3.910022020339966
    6. ' n' → logprob: -4.410021781921387
    7. ' [[]' → logprob: -4.660021781921387
    8. 'm' → logprob: -4.660021781921387
    9. 'lists' → logprob: -5.535021781921387
    10. ' liste' → logprob: -5.785021781921387

Token 163: ' sous' (ID: 14487)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014624591916799545
    2. ' []' → logprob: -4.76462459564209
    3. '[' → logprob: -5.38962459564209
    4. 'lists' → logprob: -7.38962459564209
    5. 'list' → logprob: -8.51462459564209
    6. ' lists' → logprob: -8.63962459564209
    7. '[]}' → logprob: -9.63962459564209
    8. '+' → logprob: -9.88962459564209
    9. '[
' → logprob: -10.01462459564209
    10. '=[]' → logprob: -10.38962459564209

Token 164: '-list' (ID: 18463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06605863571166992
    2. '-list' → logprob: -3.19105863571167
    3. '[]' → logprob: -5.06605863571167
    4. 'lists' → logprob: -5.19105863571167
    5. 'listas' → logprob: -5.56605863571167
    6. 'liste' → logprob: -5.94105863571167
    7. '-l' → logprob: -5.94105863571167
    8. '_list' → logprob: -7.44105863571167
    9. ' listes' → logprob: -8.066059112548828
    10. 'graph' → logprob: -8.066059112548828

Token 165: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.029079820960760117
    2. 'stes' → logprob: -4.779079914093018
    3. 'es' → logprob: -5.029079914093018
    4. 'ists' → logprob: -5.654079914093018
    5. 'tes' → logprob: -5.779079914093018
    6. 'iste' → logprob: -5.904079914093018
    7. 'ist' → logprob: -6.029079914093018
    8. 'is' → logprob: -7.029079914093018
    9. 's' → logprob: -8.27907943725586
    10. '```' → logprob: -8.65407943725586

Token 166: ' v' (ID: 323)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6877840161323547
    2. ' =' → logprob: -1.18778395652771
    3. '[' → logprob: -2.18778395652771
    4. 'graph' → logprob: -3.06278395652771
    5. ',' → logprob: -5.062784194946289
    6. '=' → logprob: -5.437784194946289
    7. '[:]' → logprob: -5.562784194946289
    8. ' [' → logprob: -5.812784194946289
    9. ' []' → logprob: -5.937784194946289
    10. '=[]' → logprob: -6.062784194946289

Token 167: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.35371431708335876
    2. 'ides' → logprob: -1.3537143468856812
    3. 'al' → logprob: -3.7287142276763916
    4. 'id' → logprob: -4.853714466094971
    5. 'idé' → logprob: -5.853714466094971
    6. '[]' → logprob: -6.728714466094971
    7. 'i' → logprob: -6.978714466094971
    8. '[' → logprob: -6.978714466094971
    9. 'ideo' → logprob: -7.728714466094971
    10. 'de' → logprob: -8.103713989257812

Token 168: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2465366125106812
    2. '[]' → logprob: -1.2465366125106812
    3. ' =' → logprob: -1.6215366125106812
    4. 'graph' → logprob: -1.8715366125106812
    5. ',' → logprob: -3.6215367317199707
    6. '[:]' → logprob: -4.621536731719971
    7. ' []' → logprob: -4.871536731719971
    8. '=' → logprob: -4.996536731719971
    9. ' [' → logprob: -5.496536731719971
    10. ' graph' → logprob: -5.496536731719971

Token 169: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06221001222729683
    2. ' graph' → logprob: -2.8122100830078125
    3. '[' → logprob: -8.812210083007812
    4. 'g' → logprob: -10.687210083007812
    5. '	graph' → logprob: -11.187210083007812
    6. 'adj' → logprob: -11.312210083007812
    7. ' ' → logprob: -11.437210083007812
    8. 'G' → logprob: -11.687210083007812
    9. '_graph' → logprob: -12.187210083007812
    10. 'gr' → logprob: -12.187210083007812

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152287229895592
    2. '=' → logprob: -4.018152236938477
    3. ' =[' → logprob: -14.018152236938477
    4. 's' → logprob: -14.643152236938477
    5. '=[]' → logprob: -15.143152236938477
    6. '=[' → logprob: -15.393152236938477
    7. ' ' → logprob: -15.518152236938477
    8. '[' → logprob: -15.768152236938477
    9. '＝' → logprob: -16.518152236938477
    10. ']' → logprob: -16.768152236938477

Token 171: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.061991218477487564
    2. '[' → logprob: -2.8119912147521973
    3. ' [' → logprob: -10.686991691589355
    4. '[]' → logprob: -14.311991691589355
    5. ' []' → logprob: -16.81199073791504
    6. '[n' → logprob: -16.93699073791504
    7. '[[' → logprob: -17.68699073791504
    8. ' ' → logprob: -17.93699073791504
    9. '[
' → logprob: -18.81199073791504
    10. '[s' → logprob: -19.18699073791504

Token 172: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07039518654346466
    2. 'for' → logprob: -2.6953952312469482
    3. ')' → logprob: -8.070395469665527
    4. ' ' → logprob: -9.820395469665527
    5. ']' → logprob: -10.195395469665527
    6. ',' → logprob: -10.195395469665527
    7. '	for' → logprob: -12.070395469665527
    8. 'n' → logprob: -12.195395469665527
    9. ',n' → logprob: -13.070395469665527
    10. ' n' → logprob: -13.695395469665527

Token 173: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0033516634721308947
    2. ' ' → logprob: -6.00335168838501
    3. '_' → logprob: -7.87835168838501
    4. ' range' → logprob: -8.253351211547852
    5. ' i' → logprob: -8.378351211547852
    6. 'range' → logprob: -12.128351211547852
    7. '_range' → logprob: -15.378351211547852
    8. ' ' → logprob: -15.753351211547852
    9. '  ' → logprob: -16.00335121154785
    10. ' (' → logprob: -16.62835121154785

Token 174: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20707665383815765
    2. 'in' → logprob: -1.9570766687393188
    3. ' in' → logprob: -3.3320765495300293
    4. ' range' → logprob: -4.832076549530029
    5. 'ange' → logprob: -6.832076549530029
    6. 'n' → logprob: -7.082076549530029
    7. 'ran' → logprob: -10.207077026367188
    8. '_' → logprob: -10.207077026367188
    9. ' ' → logprob: -10.707077026367188
    10. '(range' → logprob: -10.957077026367188

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759472250938416
    2. ' range' → logprob: -0.8259472250938416
    3. 'ange' → logprob: -12.450946807861328
    4. '(range' → logprob: -13.825946807861328
    5. '	range' → logprob: -14.200946807861328
    6. 'rang' → logprob: -14.325946807861328
    7. ' ' → logprob: -14.325946807861328
    8. ')' → logprob: -15.700946807861328
    9. 'n' → logprob: -15.950946807861328
    10. ' xrange' → logprob: -16.075946807861328

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.000045776367188
    3. 'n' → logprob: -15.875045776367188
    4. ' (' → logprob: -16.125045776367188
    5. '(
' → logprob: -16.875045776367188
    6. ' n' → logprob: -19.500045776367188
    7. ')n' → logprob: -19.750045776367188
    8. '((' → logprob: -20.500045776367188
    9. '	n' → logprob: -20.875045776367188
    10. '(num' → logprob: -21.625045776367188

Token 177: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -12.000008583068848
    3. ')' → logprob: -13.375008583068848
    4. ']' → logprob: -15.750008583068848
    5. ')]
' → logprob: -15.875008583068848
    6. ')]
' → logprob: -16.87500762939453
    7. ')],' → logprob: -17.00000762939453
    8. ' ]' → logprob: -17.12500762939453
    9. ')].' → logprob: -17.62500762939453
    10. ')]

' → logprob: -17.75000762939453

Token 178: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1581685096025467
    2. ' for' → logprob: -2.7831685543060303
    3. '
' → logprob: -2.9081685543060303
    4. '<|end|>' → logprob: -3.7831685543060303
    5. 'n' → logprob: -5.658168315887451
    6. '<|end|>' → logprob: -7.033168315887451
    7. ' 
' → logprob: -7.158168315887451
    8. '\n' → logprob: -7.533168315887451
    9. ' ' → logprob: -7.908168315887451
    10. '  
' → logprob: -7.908168315887451

Token 179: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.020649798214435577
    2. '_' → logprob: -3.8956499099731445
    3. ' ' → logprob: -9.145649909973145
    4. ' range' → logprob: -14.645649909973145
    5. ' ' → logprob: -14.895649909973145
    6. ' ‌' → logprob: -16.270648956298828
    7. ' i' → logprob: -16.645648956298828
    8. ' ​' → logprob: -16.770648956298828
    9. ' _
' → logprob: -17.020648956298828
    10. '	' → logprob: -17.395648956298828

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4744952619075775
    2. 'in' → logprob: -0.9744952917098999
    3. '_' → logprob: -9.099494934082031
    4. ' ' → logprob: -9.099494934082031
    5. 'range' → logprob: -9.474494934082031
    6. 'n' → logprob: -9.849494934082031
    7. 'm' → logprob: -10.349494934082031
    8. ' _' → logprob: -11.349494934082031
    9. 'raph' → logprob: -11.724494934082031
    10. ' range' → logprob: -12.224494934082031

Token 181: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018153101205825806
    2. ' range' → logprob: -4.018153190612793
    3. '(range' → logprob: -13.893153190612793
    4. 'ange' → logprob: -14.268153190612793
    5. 'rang' → logprob: -15.143153190612793
    6. '	range' → logprob: -15.268153190612793
    7. 'ran' → logprob: -15.393153190612793
    8. 'r' → logprob: -15.643153190612793
    9. ' ' → logprob: -15.643153190612793
    10. '```' → logprob: -16.393152236938477

Token 182: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.3080716346157715e-05
    2. ' (' → logprob: -11.000022888183594
    3. '(' → logprob: -12.125022888183594
    4. 'm' → logprob: -14.250022888183594
    5. ' m' → logprob: -15.125022888183594
    6. '	m' → logprob: -19.125022888183594
    7. ')m' → logprob: -20.625022888183594
    8. ' ' → logprob: -21.000022888183594
    9. '(M' → logprob: -21.000022888183594
    10. ',m' → logprob: -21.125022888183594

Token 183: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004097993019968271
    2. '):
' → logprob: -6.004097938537598
    3. ' ):' → logprob: -6.504097938537598
    4. ')' → logprob: -9.129097938537598
    5. '):
' → logprob: -11.879097938537598
    6. ' ):
' → logprob: -12.754097938537598
    7. ':' → logprob: -13.004097938537598
    8. '():' → logprob: -14.504097938537598
    9. '）：' → logprob: -14.504097938537598
    10. ' )' → logprob: -14.629097938537598

Token 184: ' ' (ID: 220)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.005035694222897291
    2. 'u' → logprob: -5.630035877227783
    3. ' 
' → logprob: -7.505035877227783
    4. ' a' → logprob: -8.380035400390625
    5. ' ' → logprob: -8.630035400390625
    6. '	u' → logprob: -8.630035400390625
    7. ' x' → logprob: -8.880035400390625
    8. '    
' → logprob: -10.505035400390625
    9. '   ' → logprob: -10.755035400390625
    10. 'a' → logprob: -11.130035400390625

Token 185: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.030430184677243233
    2. ' u' → logprob: -3.9054300785064697
    3. 'a' → logprob: -4.655430316925049
    4. 'x' → logprob: -8.40542984008789
    5. ' a' → logprob: -9.90542984008789
    6. ' ' → logprob: -10.78042984008789
    7. '   ' → logprob: -11.65542984008789
    8. '	u' → logprob: -11.65542984008789
    9. 'c' → logprob: -12.65542984008789
    10. 'v' → logprob: -12.78042984008789

Token 186: ' On' (ID: 2160)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11347466707229614
    2. 'u' → logprob: -2.2384746074676514
    3. '	u' → logprob: -8.86347484588623
    4. 'x' → logprob: -9.48847484588623
    5. ' x' → logprob: -9.61347484588623
    6. ' 
' → logprob: -9.61347484588623
    7. 'a' → logprob: -9.61347484588623
    8. ' a' → logprob: -10.11347484588623
    9. '
' → logprob: -10.36347484588623
    10. '   ' → logprob: -10.48847484588623

Token 187: ' boucle' (ID: 174211)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9931917786598206
    2. 'for' → logprob: -1.4931917190551758
    3. ' for' → logprob: -1.9931917190551758
    4. '_' → logprob: -2.243191719055176
    5. 'n' → logprob: -3.618191719055176
    6. 'range' → logprob: -3.868191719055176
    7. ' range' → logprob: -4.243191719055176
    8. ' ' → logprob: -4.243191719055176
    9. ':' → logprob: -4.368191719055176
    10. '<|end|>' → logprob: -4.493191719055176

Token 188: ' sur' (ID: 1512)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9171187281608582
    2. ' m' → logprob: -1.042118787765503
    3. ' ' → logprob: -2.042118787765503
    4. ' n' → logprob: -3.292118787765503
    5. 'n' → logprob: -3.792118787765503
    6. '<|end|>' → logprob: -4.292118549346924
    7. ' for' → logprob: -4.542118549346924
    8. '(m' → logprob: -4.667118549346924
    9. '(' → logprob: -5.042118549346924
    10. '(n' → logprob: -5.792118549346924

Token 189: ' chaque' (ID: 21194)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5064926743507385
    2. 'm' → logprob: -1.0064926147460938
    3. ' range' → logprob: -3.8814926147460938
    4. 'range' → logprob: -4.506492614746094
    5. '(m' → logprob: -8.881492614746094
    6. '_' → logprob: -10.256492614746094
    7. '	m' → logprob: -10.881492614746094
    8. '_m' → logprob: -11.381492614746094
    9. ' _' → logprob: -11.506492614746094
    10. ' ' → logprob: -11.756492614746094

Token 190: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.15196244418621063
    2. ' ' → logprob: -3.0269625186920166
    3. ' range' → logprob: -3.2769625186920166
    4. 'ar' → logprob: -3.6519625186920166
    5. 'range' → logprob: -4.4019622802734375
    6. ' ligne' → logprob: -5.6519622802734375
    7. ' m' → logprob: -5.6519622802734375
    8. '_' → logprob: -6.0269622802734375
    9. 'ligne' → logprob: -6.2769622802734375
    10. 'm' → logprob: -7.2769622802734375

Token 191: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0582275390625
    2. 'êt' → logprob: -3.4332275390625
    3. 'e' → logprob: -4.4332275390625
    4. 'te' → logprob: -5.6832275390625
    5. 'ê' → logprob: -6.3082275390625
    6. 't' → logprob: -6.3082275390625
    7. 'c' → logprob: -6.6832275390625
    8. 'r' → logprob: -6.8082275390625
    9. 'ete' → logprob: -7.1832275390625
    10. 'ète' → logprob: -7.1832275390625

Token 192: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.0192601680755615
    2. '<|end|>' → logprob: -2.1442601680755615
    3. ' input' → logprob: -2.1442601680755615
    4. ' n' → logprob: -2.2692601680755615
    5. ' ' → logprob: -2.5192601680755615
    6. ',' → logprob: -2.5192601680755615
    7. 's' → logprob: -3.0192601680755615
    8. ' 
' → logprob: -3.2692601680755615
    9. ' graph' → logprob: -3.6442601680755615
    10. 'u' → logprob: -3.8942601680755615

Token 193: ' grap' (ID: 60955)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7463292479515076
    2. ' input' → logprob: -1.4963293075561523
    3. 'range' → logprob: -1.8713293075561523
    4. ' graph' → logprob: -2.7463293075561523
    5. 'graph' → logprob: -3.2463293075561523
    6. 'input' → logprob: -3.7463293075561523
    7. 'm' → logprob: -4.496329307556152
    8. ' code' → logprob: -5.996329307556152
    9. ' m' → logprob: -6.121329307556152
    10. 'n' → logprob: -6.621329307556152

Token 194: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.49557968974113464
    2. 'aph' → logprob: -1.870579719543457
    3. 'ph' → logprob: -2.245579719543457
    4. 'he' → logprob: -2.495579719543457
    5. 'ap' → logprob: -3.870579719543457
    6. 'h' → logprob: -4.495579719543457
    7. 'e' → logprob: -5.120579719543457
    8. 'phe' → logprob: -5.495579719543457
    9. '   ' → logprob: -6.870579719543457
    10. '```' → logprob: -7.370579719543457

Token 195: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.138993740081787
    2. '   ' → logprob: -1.263993740081787
    3. ' :' → logprob: -2.388993740081787
    4. ',' → logprob: -2.638993740081787
    5. ' ' → logprob: -2.888993740081787
    6. ' n' → logprob: -3.638993740081787
    7. 'n' → logprob: -3.638993740081787
    8. 'u' → logprob: -3.763993740081787
    9. '<|end|>' → logprob: -4.388993740081787
    10. ' ,' → logprob: -4.513993740081787

Token 196: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.35853710770606995
    2. '   ' → logprob: -1.8585370779037476
    3. 'u' → logprob: -1.9835370779037476
    4. ' 
' → logprob: -6.108537197113037
    5. '	u' → logprob: -6.358537197113037
    6. 'a' → logprob: -6.608537197113037
    7. '    
' → logprob: -7.483537197113037
    8. ' ' → logprob: -7.858537197113037
    9. ' a' → logprob: -7.858537197113037
    10. ' x' → logprob: -7.983537197113037

Token 197: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.018409086391329765
    2. ' u' → logprob: -4.018409252166748
    3. 'a' → logprob: -8.39340877532959
    4. 'x' → logprob: -11.26840877532959
    5. '	u' → logprob: -12.26840877532959
    6. 'v' → logprob: -12.64340877532959
    7. '   ' → logprob: -12.89340877532959
    8. 'b' → logprob: -13.51840877532959
    9. ' a' → logprob: -13.51840877532959
    10. ' ' → logprob: -13.76840877532959

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -10.625032424926758
    3. ',v' → logprob: -11.750032424926758
    4. ',u' → logprob: -16.250032424926758
    5. ',int' → logprob: -17.000032424926758
    6. '‌,' → logprob: -17.250032424926758
    7. ',n' → logprob: -17.375032424926758
    8. ',
' → logprob: -17.625032424926758
    9. ',s' → logprob: -17.750032424926758
    10. ',b' → logprob: -18.375032424926758

Token 199: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07379817962646484
    2. 'v' → logprob: -2.823798179626465
    3. ' ' → logprob: -4.448798179626465
    4. ',v' → logprob: -10.823798179626465
    5. '	v' → logprob: -11.448798179626465
    6. ',' → logprob: -11.948798179626465
    7. '<|end|>' → logprob: -11.948798179626465
    8. ' ' → logprob: -12.573798179626465
    9. '_v' → logprob: -12.823798179626465
    10. ' ,' → logprob: -12.948798179626465

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001698094274615869
    2. '=' → logprob: -9.50016975402832
    3. ' ,' → logprob: -9.50016975402832
    4. '<|end|>' → logprob: -12.37516975402832
    5. ' =' → logprob: -12.62516975402832
    6. ',v' → logprob: -12.62516975402832
    7. ',w' → logprob: -13.12516975402832
    8. ',u' → logprob: -13.12516975402832
    9. 'u' → logprob: -14.25016975402832
    10. ' ' → logprob: -14.50016975402832

Token 201: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9113448858261108
    2. ' w' → logprob: -0.9113448858261108
    3. 'w' → logprob: -2.1613450050354004
    4. 'c' → logprob: -2.6613450050354004
    5. 'cost' → logprob: -6.1613450050354
    6. ' p' → logprob: -6.2863450050354
    7. ' cost' → logprob: -6.5363450050354
    8. ' ' → logprob: -6.6613450050354
    9. ' d' → logprob: -7.0363450050354
    10. ' t' → logprob: -7.5363450050354

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028441029135137796
    2. ' ,' → logprob: -5.877844333648682
    3. 'm' → logprob: -11.627843856811523
    4. 'b' → logprob: -12.377843856811523
    5. ' ' → logprob: -12.752843856811523
    6. 'mount' → logprob: -12.752843856811523
    7. ',b' → logprob: -13.002843856811523
    8. 'nd' → logprob: -13.127843856811523
    9. 'r' → logprob: -13.377843856811523
    10. 't' → logprob: -13.377843856811523

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09432423114776611
    2. 'c' → logprob: -2.4693241119384766
    3. 't' → logprob: -6.969324111938477
    4. 'cost' → logprob: -7.094324111938477
    5. 'f' → logprob: -7.219324111938477
    6. 'l' → logprob: -7.344324111938477
    7. 'd' → logprob: -7.469324111938477
    8. 'w' → logprob: -7.594324111938477
    9. ' b' → logprob: -7.844324111938477
    10. 'p' → logprob: -7.844324111938477

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693755328655243
    2. ' =' → logprob: -2.1269376277923584
    3. ',' → logprob: -11.751937866210938
    4. ' ' → logprob: -14.751937866210938
    5. '=input' → logprob: -14.751937866210938
    6. ')' → logprob: -15.001937866210938
    7. ')=' → logprob: -15.876937866210938
    8. '=

' → logprob: -16.126937866210938
    9. '＝' → logprob: -16.751937866210938
    10. ' =
' → logprob: -17.251937866210938

Token 205: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0005536287208087742
    2. 'map' → logprob: -7.500553607940674
    3. ' ' → logprob: -14.875554084777832
    4. '	map' → logprob: -15.125554084777832
    5. ' input' → logprob: -17.875553131103516
    6. '(map' → logprob: -18.000553131103516
    7. ' list' → logprob: -18.500553131103516
    8. ' mapa' → logprob: -18.875553131103516
    9. '_map' → logprob: -19.375553131103516
    10. '.map' → logprob: -19.500553131103516

Token 206: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022690063633490354
    2. '(' → logprob: -8.500226974487305
    3. 'int' → logprob: -11.750226974487305
    4. '(input' → logprob: -12.125226974487305
    5. '<int' → logprob: -12.125226974487305
    6. '[int' → logprob: -13.750226974487305
    7. ' (' → logprob: -14.125226974487305
    8. '(
' → logprob: -14.250226974487305
    9. '(str' → logprob: -14.375226974487305
    10. '=int' → logprob: -14.625226974487305

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03380372002720833
    2. ',input' → logprob: -3.408803701400757
    3. '(input' → logprob: -9.283803939819336
    4. 'input' → logprob: -9.783803939819336
    5. ' ,' → logprob: -11.908803939819336
    6. ' input' → logprob: -14.283803939819336
    7. '=input' → logprob: -14.908803939819336
    8. ')' → logprob: -15.283803939819336
    9. '(' → logprob: -15.283803939819336
    10. '```' → logprob: -15.908803939819336

Token 208: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -17.380233764648438
    4. '=input' → logprob: -18.880233764648438
    5. '	input' → logprob: -19.255233764648438
    6. ',input' → logprob: -19.505233764648438
    7. '_input' → logprob: -19.630233764648438
    8. ' ' → logprob: -19.755233764648438
    9. ')' → logprob: -20.255233764648438
    10. '<input' → logprob: -21.005233764648438

Token 209: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.75000286102295
    3. ')' → logprob: -14.37500286102295
    4. ' ().' → logprob: -14.87500286102295
    5. '(' → logprob: -15.00000286102295
    6. '.' → logprob: -16.750001907348633
    7. '.split' → logprob: -17.250001907348633
    8. '())' → logprob: -17.500001907348633
    9. ' .' → logprob: -17.875001907348633
    10. 'split' → logprob: -18.000001907348633

Token 210: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. '(split' → logprob: -14.375000953674316
    3. ' split' → logprob: -14.875000953674316
    4. 'spl' → logprob: -15.625000953674316
    5. 's' → logprob: -16.500001907348633
    6. 'strip' → logprob: -17.000001907348633
    7. ')' → logprob: -17.375001907348633
    8. 'plit' → logprob: -18.000001907348633
    9. 'rstrip' → logprob: -18.875001907348633
    10. ' ' → logprob: -19.125001907348633

Token 211: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16308432817459106
    2. ')' → logprob: -1.9130842685699463
    3. '()' → logprob: -5.913084506988525
    4. '())
' → logprob: -9.163084030151367
    5. '(' → logprob: -10.788084030151367
    6. '());' → logprob: -11.663084030151367
    7. ' )' → logprob: -12.163084030151367
    8. ' ())' → logprob: -12.413084030151367
    9. ')
' → logprob: -12.663084030151367
    10. '();)' → logprob: -14.038084030151367

Token 212: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08417297154664993
    2. '
' → logprob: -3.9591729640960693
    3. ')' → logprob: -4.334173202514648
    4. 'u' → logprob: -4.584173202514648
    5. '    
' → logprob: -4.709173202514648
    6. '<|end|>' → logprob: -4.709173202514648
    7. '   
' → logprob: -5.709173202514648
    8. '  
' → logprob: -5.959173202514648
    9. 'graph' → logprob: -5.959173202514648
    10. '	graph' → logprob: -5.959173202514648

Token 213: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10413020104169846
    2. '
' → logprob: -2.729130268096924
    3. ')' → logprob: -4.104130268096924
    4. '    
' → logprob: -5.104130268096924
    5. 'u' → logprob: -5.979130268096924
    6. '   
' → logprob: -5.979130268096924
    7. '  
' → logprob: -6.354130268096924
    8. ' 
' → logprob: -6.854130268096924
    9. '  ' → logprob: -7.229130268096924
    10. ')
' → logprob: -7.479130268096924

Token 214: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12427607923746109
    2. 'graph' → logprob: -3.1242761611938477
    3. ' u' → logprob: -3.2492761611938477
    4. ' graph' → logprob: -3.7492761611938477
    5. '<|end|>' → logprob: -5.124276161193848
    6. '	graph' → logprob: -5.999276161193848
    7. '	u' → logprob: -7.124276161193848
    8. '   ' → logprob: -8.124276161193848
    9. ' ' → logprob: -8.124276161193848
    10. '[u' → logprob: -8.624276161193848

Token 215: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023452891036868095
    2. '-' → logprob: -4.0234527587890625
    3. ',v' → logprob: -5.5234527587890625
    4. ' -=' → logprob: -8.148452758789062
    5. ' ,' → logprob: -8.398452758789062
    6. '-=' → logprob: -8.648452758789062
    7. ',u' → logprob: -9.023452758789062
    8. ' ' → logprob: -9.148452758789062
    9. '<|end|>' → logprob: -9.523452758789062
    10. '.' → logprob: -9.898452758789062

Token 216: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04307751730084419
    2. ' v' → logprob: -3.1680774688720703
    3. 'u' → logprob: -10.66807746887207
    4. ',v' → logprob: -11.04307746887207
    5. ',' → logprob: -11.16807746887207
    6. ' ' → logprob: -11.91807746887207
    7. '	v' → logprob: -12.16807746887207
    8. '=' → logprob: -12.91807746887207
    9. 'a' → logprob: -13.16807746887207
    10. '
' → logprob: -13.16807746887207

Token 217: ' sont' (ID: 5242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02396746724843979
    2. '<|end|>' → logprob: -4.148967266082764
    3. ')' → logprob: -5.898967266082764
    4. '=' → logprob: -6.398967266082764
    5. ' =' → logprob: -6.523967266082764
    6. ',u' → logprob: -7.523967266082764
    7. ' ,' → logprob: -7.773967266082764
    8. '<|end|>' → logprob: -8.148967742919922
    9. '.' → logprob: -8.773967742919922
    10. 'u' → logprob: -8.898967742919922

Token 218: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6496884822845459
    2. ' u' → logprob: -1.524688482284546
    3. ' des' → logprob: -2.524688482284546
    4. '<|end|>' → logprob: -2.774688482284546
    5. ',' → logprob: -2.899688482284546
    6. ' the' → logprob: -4.274688720703125
    7. 'u' → logprob: -4.274688720703125
    8. 'les' → logprob: -5.274688720703125
    9. ' ' → logprob: -5.399688720703125
    10. ' ,' → logprob: -5.774688720703125

Token 219: ' extr' (ID: 15674)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.7373298406600952
    2. '-' → logprob: -1.8623298406600952
    3. '0' → logprob: -1.8623298406600952
    4. ' somm' → logprob: -1.9873298406600952
    5. ' indices' → logprob: -2.3623299598693848
    6. ' nodes' → logprob: -2.4873299598693848
    7. ' endpoints' → logprob: -2.9873299598693848
    8. 's' → logprob: -3.1123299598693848
    9. 'nodes' → logprob: -3.1123299598693848
    10. 'vertices' → logprob: -4.362329959869385

Token 220: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.25445038080215454
    2. 'êmes' → logprob: -1.6294503211975098
    3. 'èmes' → logprob: -4.37945032119751
    4. 'ém' → logprob: -5.25445032119751
    5. 'emes' → logprob: -5.37945032119751
    6. 'éments' → logprob: -7.00445032119751
    7. 'ê' → logprob: -7.12945032119751
    8. 'ems' → logprob: -7.25445032119751
    9. 'és' → logprob: -7.50445032119751
    10. 'em' → logprob: -7.50445032119751

Token 221: 'mit' (ID: 2765)
  Prédit: 'mits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mits' → logprob: -0.04713849723339081
    2. 'mit' → logprob: -3.5471384525299072
    3. 'ms' → logprob: -5.047138690948486
    4. 'mites' → logprob: -5.297138690948486
    5. 'm' → logprob: -5.672138690948486
    6. 'mes' → logprob: -6.547138690948486
    7. 'mite' → logprob: -8.797138214111328
    8. 's' → logprob: -8.922138214111328
    9. 'mis' → logprob: -9.672138214111328
    10. 'its' → logprob: -9.672138214111328

Token 222: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.11613845825195312
    2. 's' → logprob: -2.241138458251953
    3. 't' → logprob: -6.741138458251953
    4. 'é' → logprob: -6.866138458251953
    5. 'es' → logprob: -7.991138458251953
    6. 'nés' → logprob: -8.491138458251953
    7. 'ties' → logprob: -9.116138458251953
    8. 'tes' → logprob: -9.866138458251953
    9. 'ts' → logprob: -9.991138458251953
    10. ',' → logprob: -9.991138458251953

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0044157556258141994
    2. '<|end|>' → logprob: -6.504415988922119
    3. ' ,' → logprob: -6.879415988922119
    4. ')' → logprob: -7.504415988922119
    5. ',
' → logprob: -7.754415988922119
    6. ',u' → logprob: -8.129415512084961
    7. ' ' → logprob: -9.254415512084961
    8. 'u' → logprob: -9.504415512084961
    9. '[' → logprob: -9.629415512084961
    10. '  ' → logprob: -9.629415512084961

Token 224: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11313565820455551
    2. ' c' → logprob: -2.863135576248169
    3. 'cost' → logprob: -3.863135576248169
    4. 'p' → logprob: -4.988135814666748
    5. 'w' → logprob: -5.488135814666748
    6. 'u' → logprob: -5.738135814666748
    7. 't' → logprob: -5.738135814666748
    8. ' cost' → logprob: -6.363135814666748
    9. ' p' → logprob: -6.863135814666748
    10. '  ' → logprob: -7.113135814666748

Token 225: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024704246316105127
    2. ' ,' → logprob: -6.50247049331665
    3. ',b' → logprob: -7.75247049331665
    4. ' =' → logprob: -8.252470016479492
    5. ',v' → logprob: -9.127470016479492
    6. '=' → logprob: -9.877470016479492
    7. ',u' → logprob: -10.627470016479492
    8. 'b' → logprob: -10.752470016479492
    9. '<|end|>' → logprob: -11.877470016479492
    10. ',a' → logprob: -12.002470016479492

Token 226: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.198224425315857
    2. ' cost' → logprob: -1.698224425315857
    3. ' coût' → logprob: -2.3232245445251465
    4. '_' → logprob: -2.3232245445251465
    5. 'co' → logprob: -2.5732245445251465
    6. '_cost' → logprob: -2.6982245445251465
    7. '_co' → logprob: -3.6982245445251465
    8. ' cout' → logprob: -3.8232245445251465
    9. ' ' → logprob: -4.1982245445251465
    10. 'cout' → logprob: -4.3232245445251465

Token 227: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05298888683319092
    2. ' ,' → logprob: -3.1779890060424805
    3. ' en' → logprob: -5.1779890060424805
    4. 'en' → logprob: -7.0529890060424805
    5. ')' → logprob: -7.1779890060424805
    6. '_money' → logprob: -7.4279890060424805
    7. 'money' → logprob: -8.30298900604248
    8. '<|end|>' → logprob: -8.42798900604248
    9. ' de' → logprob: -8.55298900604248
    10. ' )' → logprob: -8.67798900604248

Token 228: ' argent' (ID: 73800)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.01845051907002926
    2. 'temps' → logprob: -4.893450736999512
    3. ' argent' → logprob: -5.393450736999512
    4. 'money' → logprob: -5.893450736999512
    5. 'arg' → logprob: -6.268450736999512
    6. ''argent' → logprob: -6.768450736999512
    7. ' temps' → logprob: -9.518450736999512
    8. '’argent' → logprob: -9.893450736999512
    9. 'time' → logprob: -10.018450736999512
    10. '```' → logprob: -10.018450736999512

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03185554966330528
    2. ' ,' → logprob: -4.156855583190918
    3. ' ' → logprob: -4.656855583190918
    4. '<|end|>' → logprob: -5.406855583190918
    5. ')' → logprob: -7.156855583190918
    6. '  ' → logprob: -8.406855583190918
    7. 'b' → logprob: -8.531855583190918
    8. ',
' → logprob: -8.781855583190918
    9. ',b' → logprob: -9.281855583190918
    10. ' and' → logprob: -9.656855583190918

Token 230: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0775332823395729
    2. 't' → logprob: -2.82753324508667
    3. 'time' → logprob: -5.57753324508667
    4. 'd' → logprob: -5.57753324508667
    5. 'cost' → logprob: -5.95253324508667
    6. 'l' → logprob: -6.57753324508667
    7. 'b' → logprob: -6.95253324508667
    8. 'w' → logprob: -7.32753324508667
    9. 'p' → logprob: -7.70253324508667
    10. ' c' → logprob: -8.077533721923828

Token 231: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.626767635345459
    2. ' =' → logprob: -1.751767635345459
    3. '=' → logprob: -2.001767635345459
    4. 'le' → logprob: -3.251767635345459
    5. ' le' → logprob: -3.376767635345459
    6. ')' → logprob: -3.376767635345459
    7. '<|end|>' → logprob: -3.751767635345459
    8. 'l' → logprob: -5.251767635345459
    9. ' l' → logprob: -5.501767635345459
    10. '_' → logprob: -5.876767635345459

Token 232: ' coût' (ID: 73109)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.19209814071655273
    2. 'co' → logprob: -1.8170981407165527
    3. 'cost' → logprob: -5.692098140716553
    4. ' temps' → logprob: -6.067098140716553
    5. 'time' → logprob: -6.317098140716553
    6. 't' → logprob: -6.567098140716553
    7. 'cout' → logprob: -6.692098140716553
    8. 'd' → logprob: -7.442098140716553
    9. 'temp' → logprob: -7.692098140716553
    10. 'c' → logprob: -7.692098140716553

Token 233: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.47505295276641846
    2. 'en' → logprob: -0.9750529527664185
    3. '_en' → logprob: -7.100052833557129
    4. ' de' → logprob: -10.600052833557129
    5. '_' → logprob: -10.850052833557129
    6. 'de' → logprob: -11.100052833557129
    7. '	en' → logprob: -11.475052833557129
    8. 'es' → logprob: -11.600052833557129
    9. ''en' → logprob: -11.850052833557129
    10. ' ' → logprob: -11.975052833557129

Token 234: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.007506771944463253
    2. 'time' → logprob: -5.007506847381592
    3. 't' → logprob: -7.507506847381592
    4. 'pi' → logprob: -9.632506370544434
    5. ' temps' → logprob: -10.257506370544434
    6. 'temp' → logprob: -10.382506370544434
    7. 'ti' → logprob: -10.507506370544434
    8. 'argent' → logprob: -11.007506370544434
    9. 'Temps' → logprob: -11.757506370544434
    10. 'tempo' → logprob: -11.882506370544434

Token 235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028556305915117264
    2. 'graph' → logprob: -4.5285563468933105
    3. '
' → logprob: -4.6535563468933105
    4. '	graph' → logprob: -5.4035563468933105
    5. '    
' → logprob: -6.4035563468933105
    6. ')' → logprob: -7.9035563468933105
    7. '  
' → logprob: -8.028555870056152
    8. '   
' → logprob: -8.653555870056152
    9. ' graph' → logprob: -8.778555870056152
    10. '	
' → logprob: -9.153555870056152

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00833596009761095
    2. 'graph' → logprob: -5.258336067199707
    3. '	graph' → logprob: -6.633336067199707
    4. '    
' → logprob: -7.383336067199707
    5. '
' → logprob: -7.758336067199707
    6. ' graph' → logprob: -8.383336067199707
    7. '  
' → logprob: -9.008336067199707
    8. ')' → logprob: -9.133336067199707
    9. '  ' → logprob: -9.883336067199707
    10. '   
' → logprob: -10.008336067199707

Token 237: ' u' (ID: 337)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0041927252896130085
    2. ' graph' → logprob: -5.50419282913208
    3. 'u' (adapté à ' u') → logprob: -9.254192352294922
    4. '   ' → logprob: -11.379192352294922
    5. ' u' → logprob: -12.379192352294922
    6. '	graph' → logprob: -13.004192352294922
    7. '(graph' → logprob: -15.379192352294922
    8. '
' → logprob: -16.379192352294922
    9. '#' → logprob: -17.129192352294922
    10. 'raph' → logprob: -17.129192352294922

Token 238: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.500506579875946
    2. '-=' → logprob: -1.6255066394805908
    3. ' -=' → logprob: -1.6255066394805908
    4. ' -' → logprob: -9.375506401062012
    5. ',' → logprob: -10.000506401062012
    6. ' ' → logprob: -12.000506401062012
    7. '.' → logprob: -12.125506401062012
    8. '-,' → logprob: -13.250506401062012
    9. ',v' → logprob: -14.125506401062012
    10. '--;' → logprob: -14.125506401062012

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519291639328003
    2. ' ' → logprob: -1.5019291639328003
    3. '<|end|>' → logprob: -16.126928329467773
    4. ' ' → logprob: -18.501928329467773
    5. '```' → logprob: -19.251928329467773
    6. '=' → logprob: -19.376928329467773
    7. '
' → logprob: -19.689428329467773
    8. '>' → logprob: -19.939428329467773
    9. '   ' → logprob: -20.001928329467773
    10. '2' → logprob: -20.064428329467773

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -20.125
    4. '   ' → logprob: -21.25
    5. '１' → logprob: -21.5
    6. '```' → logprob: -21.6875
    7. '۱' → logprob: -22.125
    8. '১' → logprob: -22.3125
    9. '१' → logprob: -22.5625
    10. '-' → logprob: -23.4375

Token 241: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10476698726415634
    2. ' v' → logprob: -3.104767084121704
    3. '<|end|>' → logprob: -3.354767084121704
    4. ',v' → logprob: -4.854766845703125
    5. '
' → logprob: -5.354766845703125
    6. ',' → logprob: -6.229766845703125
    7. '   ' → logprob: -6.604766845703125
    8. '	v' → logprob: -6.854766845703125
    9. 'u' → logprob: -7.479766845703125
    10. ';' → logprob: -8.104766845703125

Token 242: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21907572448253632
    2. '<|end|>' → logprob: -2.0940756797790527
    3. '
' → logprob: -2.8440756797790527
    4. 'u' → logprob: -5.594075679779053
    5. '#' → logprob: -5.719075679779053
    6. ' v' → logprob: -5.969075679779053
    7. ',' → logprob: -6.344075679779053
    8. ',v' → logprob: -6.469075679779053
    9. ';' → logprob: -6.969075679779053
    10. ' ' → logprob: -8.094076156616211

Token 243: ' Conversion' (ID: 74433)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018961457535624504
    2. ' v' → logprob: -4.018961429595947
    3. 'u' → logprob: -7.143961429595947
    4. ' u' → logprob: -10.768961906433105
    5. '#' → logprob: -15.268961906433105
    6. '	v' → logprob: -15.518961906433105
    7. ',v' → logprob: -17.89396095275879
    8. '_v' → logprob: -18.51896095275879
    9. ' ' → logprob: -18.89396095275879
    10. 'n' → logprob: -18.89396095275879

Token 244: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' l' (ID: 305)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10021767020225525
    2. ' u' → logprob: -2.350217580795288
    3. ' ' → logprob: -12.350217819213867
    4. '1' → logprob: -13.350217819213867
    5. '(u' → logprob: -13.600217819213867
    6. '<|end|>' → logprob: -13.600217819213867
    7. '	u' → logprob: -13.975217819213867
    8. '_u' → logprob: -14.475217819213867
    9. '0' → logprob: -14.600217819213867
    10. '*u' → logprob: -14.975217819213867

Token 246: ''ind' (ID: 82245)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0015153385465964675
    2. ' u' → logprob: -7.5015153884887695
    3. ''entrée' → logprob: -7.8765153884887695
    4. ''' → logprob: -9.12651538848877
    5. ''utilisateur' → logprob: -9.62651538848877
    6. ''u' → logprob: -9.62651538848877
    7. 'index' → logprob: -10.00151538848877
    8. 'e' → logprob: -10.12651538848877
    9. '_u' → logprob: -10.12651538848877
    10. 'input' → logprob: -10.50151538848877

Token 247: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.001592822722159326
    2. 'ice' → logprob: -6.501592636108398
    3. 'exe' → logprob: -10.126592636108398
    4. 'e' → logprob: -11.001592636108398
    5. 'exp' → logprob: -11.626592636108398
    6. 'é' → logprob: -11.876592636108398
    7. 'ices' → logprob: -12.376592636108398
    8. 'exc' → logprob: -13.251592636108398
    9. 'index' → logprob: -13.501592636108398
    10. '1' → logprob: -14.001592636108398

Token 248: ' vers' (ID: 3640)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5139991641044617
    2. 'u' → logprob: -1.6389992237091064
    3. '<|end|>' → logprob: -2.1389992237091064
    4. ' en' → logprob: -3.2639992237091064
    5. ' ' → logprob: -3.8889992237091064
    6. ' to' → logprob: -5.013998985290527
    7. ' à' → logprob: -5.138998985290527
    8. ' des' → logprob: -5.513998985290527
    9. ' au' → logprob: -5.888998985290527
    10. ' et' → logprob: -5.888998985290527

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30497050285339355
    2. ' ' → logprob: -1.9299705028533936
    3. ' zéro' → logprob: -2.3049705028533936
    4. 'z' → logprob: -4.804970741271973
    5. 'base' → logprob: -5.929970741271973
    6. ' base' → logprob: -6.054970741271973
    7. 'u' → logprob: -6.804970741271973
    8. ' zero' → logprob: -7.179970741271973
    9. ' z' → logprob: -7.804970741271973
    10. 'zero' → logprob: -8.054970741271973

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01850213296711445
    2. 'z' → logprob: -4.393502235412598
    3. 'base' → logprob: -5.268502235412598
    4. 'zero' → logprob: -7.893502235412598
    5. ' zéro' → logprob: -8.143502235412598
    6. ' ' → logprob: -9.393502235412598
    7. 'python' → logprob: -10.518502235412598
    8. 'indice' → logprob: -12.018502235412598
    9. '_' → logprob: -12.143502235412598
    10. 'l' → logprob: -12.268502235412598

Token 251: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.05212021619081497
    2. '-' → logprob: -3.3021202087402344
    3. 'based' → logprob: -4.552120208740234
    4. '<|end|>' → logprob: -5.927120208740234
    5. '_based' → logprob: -8.802120208740234
    6. '#' → logprob: -9.177120208740234
    7. '-base' → logprob: -9.177120208740234
    8. '-index' → logprob: -9.552120208740234
    9. ' -' → logprob: -9.677120208740234
    10. '-Based' → logprob: -9.677120208740234

Token 252: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016770686954259872
    2. '<|end|>' → logprob: -4.766770839691162
    3. ' v' → logprob: -5.891770839691162
    4. 'u' → logprob: -6.016770839691162
    5. ',v' → logprob: -7.016770839691162
    6. '	v' → logprob: -7.516770839691162
    7. '
' → logprob: -7.891770839691162
    8. ',' → logprob: -8.391770362854004
    9. '   ' → logprob: -8.766770362854004
    10. ' 
' → logprob: -9.141770362854004

Token 253: 'Python' (ID: 60502)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08145734667778015
    2. ' u' → logprob: -2.9564573764801025
    3. 'u' → logprob: -3.7064573764801025
    4. '<|end|>' → logprob: -7.456457138061523
    5. ' )' → logprob: -8.206457138061523
    6. ')
' → logprob: -8.456457138061523
    7. ' ' → logprob: -9.456457138061523
    8. '*u' → logprob: -9.706457138061523
    9. '	u' → logprob: -10.081457138061523
    10. 'user' → logprob: -10.331457138061523

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04652592912316322
    2. ' indexing' → logprob: -3.2965259552001953
    3. 'index' → logprob: -5.421525955200195
    4. ' index' → logprob: -6.796525955200195
    5. ' )' → logprob: -6.796525955200195
    6. 'indices' → logprob: -7.296525955200195
    7. ' indices' → logprob: -8.046525955200195
    8. 'indice' → logprob: -8.046525955200195
    9. ')
' → logprob: -9.171525955200195
    10. '-index' → logprob: -9.421525955200195

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12270493060350418
    2. 'v' → logprob: -2.2477049827575684
    3. ' v' → logprob: -4.872704982757568
    4. '	v' → logprob: -6.622704982757568
    5. '<|end|>' → logprob: -7.747704982757568
    6. ',v' → logprob: -8.37270450592041
    7. ',' → logprob: -10.12270450592041
    8. ' ' → logprob: -10.62270450592041
    9. '    
' → logprob: -10.74770450592041
    10. 'u' → logprob: -10.99770450592041

Token 256: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00023083435371518135
    2. ' v' → logprob: -8.37523078918457
    3. '	v' → logprob: -15.75023078918457
    4. 'b' → logprob: -17.50023078918457
    5. '   ' → logprob: -17.75023078918457
    6. '_v' → logprob: -18.37523078918457
    7. '
' → logprob: -19.62523078918457
    8. ' 
' → logprob: -19.62523078918457
    9. ' ' → logprob: -19.62523078918457
    10. ',v' → logprob: -20.50023078918457

Token 257: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.043136436492204666
    2. '-=' → logprob: -3.1681363582611084
    3. '-' → logprob: -9.043136596679688
    4. ' ' → logprob: -11.168136596679688
    5. '=' → logprob: -12.793136596679688
    6. ' -' → logprob: -13.793136596679688
    7. ' =' → logprob: -14.918136596679688
    8. ',' → logprob: -15.168136596679688
    9. '   ' → logprob: -15.668136596679688
    10. ')' → logprob: -16.668136596679688

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163863845169544
    2. ' ' → logprob: -4.264163970947266
    3. '<|end|>' → logprob: -15.264163970947266
    4. '   ' → logprob: -16.389163970947266
    5. '-' → logprob: -17.639163970947266
    6. '0' → logprob: -17.889163970947266
    7. ' ' → logprob: -18.264163970947266
    8. ')' → logprob: -18.326663970947266
    9. '=' → logprob: -18.389163970947266
    10. '```' → logprob: -18.639163970947266

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -17.875001907348633
    4. '0' → logprob: -20.250001907348633
    5. '```' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '-' → logprob: -21.187501907348633
    8. '2' → logprob: -21.312501907348633
    9. '۱' → logprob: -21.375001907348633
    10. 'v' → logprob: -21.437501907348633

Token 260: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.655896008014679
    2. '   ' → logprob: -1.0308959484100342
    3. 'u' → logprob: -4.030896186828613
    4. ' ' → logprob: -4.030896186828613
    5. ' u' → logprob: -4.030896186828613
    6. ',' → logprob: -4.155896186828613
    7. ' graph' → logprob: -5.155896186828613
    8. ' 
' → logprob: -5.155896186828613
    9. '  
' → logprob: -5.155896186828613
    10. '<|end|>' → logprob: -5.155896186828613

Token 261: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18173308670520782
    2. 'u' → logprob: -3.1817331314086914
    3. 'graph' → logprob: -3.1817331314086914
    4. '#' → logprob: -3.5567331314086914
    5. '   ' → logprob: -3.8067331314086914
    6. ',' → logprob: -4.431733131408691
    7. '
' → logprob: -5.306733131408691
    8. ' graph' → logprob: -5.681733131408691
    9. ' u' → logprob: -6.181733131408691
    10. 'for' → logprob: -6.431733131408691

Token 262: ' Id' (ID: 8210)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2250628471374512
    2. ' graph' → logprob: -1.4750628471374512
    3. 'u' → logprob: -1.8500628471374512
    4. 'v' → logprob: -1.9750628471374512
    5. ' v' → logprob: -2.725062847137451
    6. ' u' → logprob: -2.850062847137451
    7. ' ' → logprob: -4.100062847137451
    8. 'graph' → logprob: -4.225062847137451
    9. '
' → logprob: -4.725062847137451
    10. ' 
' → logprob: -5.725062847137451

Token 263: 'em' (ID: 347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9532614946365356
    2. ' -=' → logprob: -1.4532614946365356
    3. 'e' → logprob: -2.078261375427246
    4. 'x' → logprob: -2.703261375427246
    5. 'ex' → logprob: -2.828261375427246
    6. 'f' → logprob: -3.078261375427246
    7. 'u' → logprob: -3.453261375427246
    8. '-=' → logprob: -3.828261375427246
    9. '-' → logprob: -4.078261375427246
    10. 'é' → logprob: -5.828261375427246

Token 264: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2615402638912201
    2. '
' → logprob: -1.5115402936935425
    3. 'graph' → logprob: -5.136540412902832
    4. '    
' → logprob: -6.886540412902832
    5. ' graph' → logprob: -6.886540412902832
    6. '
' → logprob: -7.386540412902832
    7. '	graph' → logprob: -8.261540412902832
    8. 'u' → logprob: -8.386540412902832
    9. ',' → logprob: -9.136540412902832
    10. '  
' → logprob: -9.386540412902832

Token 265: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31337568163871765
    2. ' v' → logprob: -1.31337571144104
    3. ' u' → logprob: -9.688375473022461
    4. 'u' → logprob: -9.938375473022461
    5. '	v' → logprob: -13.313375473022461
    6. ' ' → logprob: -14.563375473022461
    7. 'l' → logprob: -15.188375473022461
    8. ' the' → logprob: -15.438375473022461
    9. ')v' → logprob: -15.938375473022461
    10. '
' → logprob: -15.938375473022461

Token 266: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23548927903175354
    2. '   ' → logprob: -1.7354892492294312
    3. 'graph' → logprob: -3.7354893684387207
    4. ' graph' → logprob: -5.860489368438721
    5. '
' → logprob: -5.985489368438721
    6. '    
' → logprob: -6.860489368438721
    7. 'u' → logprob: -7.235489368438721
    8. '	graph' → logprob: -7.235489368438721
    9. ' 
' → logprob: -7.735489368438721
    10. '  
' → logprob: -8.110488891601562

Token 267: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.11061399430036545
    2. '   ' → logprob: -2.360614061355591
    3. ' graph' → logprob: -4.735613822937012
    4. '	graph' → logprob: -6.860613822937012
    5. '
' → logprob: -7.860613822937012
    6. 'u' → logprob: -9.735613822937012
    7. '(graph' → logprob: -11.110613822937012
    8. '```' → logprob: -11.110613822937012
    9. '    
' → logprob: -11.485613822937012
    10. ' 
' → logprob: -12.235613822937012

Token 268: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0017190889921039343
    2. ' graph' → logprob: -6.376718997955322
    3. '
' → logprob: -11.12671947479248
    4. '   ' → logprob: -14.25171947479248
    5. '#' → logprob: -14.50171947479248
    6. '	graph' → logprob: -15.12671947479248
    7. '
' → logprob: -15.37671947479248
    8. '    
' → logprob: -16.126718521118164
    9. ' 
' → logprob: -16.251718521118164
    10. '(graph' → logprob: -16.626718521118164

Token 269: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. '[v' → logprob: -15.125001907348633
    4. ' [' → logprob: -16.250001907348633
    5. 'u' → logprob: -18.125001907348633
    6. ')[' → logprob: -18.875001907348633
    7. '   ' → logprob: -18.875001907348633
    8. '][' → logprob: -19.625001907348633
    9. '
' → logprob: -20.125001907348633
    10. '[user' → logprob: -20.250001907348633

Token 270: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00029518234077841043
    2. '.' → logprob: -8.500295639038086
    3. '.append' → logprob: -9.750295639038086
    4. ').' → logprob: -10.500295639038086
    5. ']' → logprob: -12.375295639038086
    6. ' ].' → logprob: -13.500295639038086
    7. '}.' → logprob: -16.625295639038086
    8. '[' → logprob: -16.750295639038086
    9. ''].' → logprob: -17.625295639038086
    10. '   ' → logprob: -17.625295639038086

Token 271: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.0
    3. ' append' → logprob: -17.5
    4. 'app' → logprob: -17.75
    5. 'appen' → logprob: -19.75
    6. '_append' → logprob: -20.25
    7. 'Append' → logprob: -22.125
    8. '	append' → logprob: -23.0
    9. 'add' → logprob: -23.25
    10. 'push' → logprob: -24.0

Token 272: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001589618914294988
    2. '(' → logprob: -9.00015926361084
    3. '(v' → logprob: -10.25015926361084
    4. '([' → logprob: -15.87515926361084
    5. ' (' → logprob: -18.250158309936523
    6. '(u' → logprob: -18.375158309936523
    7. ' ((' → logprob: -18.750158309936523
    8. '(
' → logprob: -19.125158309936523
    9. '   ' → logprob: -20.375158309936523
    10. '[(' → logprob: -20.625158309936523

Token 273: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.004696090007201e-05
    2. ' v' → logprob: -9.625069618225098
    3. 'b' → logprob: -13.375069618225098
    4. '   ' → logprob: -13.875069618225098
    5. ')v' → logprob: -14.750069618225098
    6. '(v' → logprob: -15.125069618225098
    7. '
' → logprob: -15.500069618225098
    8. '	v' → logprob: -16.000070571899414
    9. ',v' → logprob: -16.375070571899414
    10. ' ' → logprob: -17.000070571899414

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005052778869867325
    2. ' ,' → logprob: -5.38005256652832
    3. ',a' → logprob: -7.75505256652832
    4. ',b' → logprob: -13.00505256652832
    5. 'a' → logprob: -14.25505256652832
    6. ',
' → logprob: -14.75505256652832
    7. ' a' → logprob: -14.88005256652832
    8. ' ' → logprob: -16.50505256652832
    9. '   ' → logprob: -17.25505256652832
    10. ',s' → logprob: -17.38005256652832

Token 275: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011706985533237457
    2. ' a' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.376171112060547
    4. '	a' → logprob: -15.876171112060547
    5. '    ' → logprob: -16.626171112060547
    6. ',a' → logprob: -16.751171112060547
    7. ')a' → logprob: -16.876171112060547
    8. ' ' → logprob: -17.501171112060547
    9. 'b' → logprob: -18.251171112060547
    10. '
' → logprob: -18.876171112060547

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002508478006348014
    2. ' ,' → logprob: -6.002508640289307
    3. ',b' → logprob: -10.377508163452148
    4. 'b' → logprob: -14.252508163452148
    5. ',
' → logprob: -14.502508163452148
    6. ' ' → logprob: -15.002508163452148
    7. ')' → logprob: -17.12750816345215
    8. '‌,' → logprob: -17.12750816345215
    9. ' ,
' → logprob: -17.37750816345215
    10. '),' → logprob: -18.00250816345215

Token 277: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003604344092309475
    2. ' b' → logprob: -5.628604412078857
    3. ' ' → logprob: -12.8786039352417
    4. '   ' → logprob: -14.2536039352417
    5. '	b' → logprob: -15.0036039352417
    6. '    ' → logprob: -15.6286039352417
    7. ')b' → logprob: -15.8161039352417
    8. '  ' → logprob: -16.128604888916016
    9. '
' → logprob: -16.566104888916016
    10. ' 
' → logprob: -17.316104888916016

Token 278: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0021129087544977665
    2. '))
' → logprob: -6.502112865447998
    3. ')' → logprob: -7.752112865447998
    4. ' ))' → logprob: -9.252113342285156
    5. ',' → logprob: -9.502113342285156
    6. '),' → logprob: -13.002113342285156
    7. '))
' → logprob: -13.252113342285156
    8. '   ' → logprob: -13.627113342285156
    9. '));' → logprob: -13.627113342285156
    10. ' ))
' → logprob: -14.002113342285156

Token 279: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012721184641122818
    2. 'graph' → logprob: -4.887721061706543
    3. ' graph' → logprob: -5.387721061706543
    4. '	graph' → logprob: -7.637721061706543
    5. '(graph' → logprob: -10.137721061706543
    6. ',' → logprob: -12.387721061706543
    7. '.graph' → logprob: -13.762721061706543
    8. '
' → logprob: -14.387721061706543
    9. '   ' → logprob: -14.512721061706543
    10. '  ' → logprob: -14.887721061706543

Token 280: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.047414571046829224
    2. '   ' → logprob: -3.422414541244507
    3. ' graph' → logprob: -4.422414779663086
    4. ')' → logprob: -6.922414779663086
    5. '	graph' → logprob: -8.297414779663086
    6. ')
' → logprob: -8.547414779663086
    7. '(graph' → logprob: -8.922414779663086
    8. ',' → logprob: -9.547414779663086
    9. '
' → logprob: -10.797414779663086
    10. '_graph' → logprob: -12.797414779663086

Token 281: ' Aj' (ID: 28294)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14279989898204803
    2. ' graph' → logprob: -2.0177998542785645
    3. '
' → logprob: -9.767800331115723
    4. '	graph' → logprob: -10.267800331115723
    5. '   ' → logprob: -11.017800331115723
    6. '(graph' → logprob: -12.017800331115723
    7. ' 
' → logprob: -12.517800331115723
    8. '<|end|>' → logprob: -13.517800331115723
    9. 'Graph' → logprob: -14.142800331115723
    10. '.graph' → logprob: -14.142800331115723

Token 282: 'oute' (ID: 3509)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.44312918186187744
    2. 'outer' → logprob: -1.8181291818618774
    3. 'oute' → logprob: -1.8181291818618774
    4. 'outez' → logprob: -3.443129062652588
    5. 'ou' → logprob: -7.943129062652588
    6. 'outes' → logprob: -8.568129539489746
    7. '```' → logprob: -8.568129539489746
    8. 'o' → logprob: -8.693129539489746
    9. '#' → logprob: -9.943129539489746
    10. ')' → logprob: -10.193129539489746

Token 283: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5145977735519409
    2. '(v' → logprob: -1.264597773551941
    3. ')' → logprob: -3.1395978927612305
    4. '(u' → logprob: -3.2645978927612305
    5. ' v' → logprob: -5.0145978927612305
    6. ',' → logprob: -5.0145978927612305
    7. ' ' → logprob: -5.1395978927612305
    8. '<|end|>' → logprob: -5.1395978927612305
    9. 'v' → logprob: -6.2645978927612305
    10. '(' → logprob: -6.5145978927612305

Token 284: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4072180390357971
    2. ' (' → logprob: -2.0322179794311523
    3. '(v' → logprob: -2.7822179794311523
    4. 'es' → logprob: -2.9072179794311523
    5. ')' → logprob: -3.7822179794311523
    6. '(' → logprob: -4.407217979431152
    7. '(e' → logprob: -4.407217979431152
    8. 'a' → logprob: -5.157217979431152
    9. 'u' → logprob: -5.282217979431152
    10. ' a' → logprob: -5.407217979431152

Token 285: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.01003407221287489
    2. 'c' → logprob: -6.260034084320068
    3. 'êt' → logprob: -6.260034084320068
    4. 'ète' → logprob: -6.385034084320068
    5. 'te' → logprob: -6.510034084320068
    6. 'ê' → logprob: -6.760034084320068
    7. 'ete' → logprob: -7.885034084320068
    8. 'ôte' → logprob: -8.26003360748291
    9. 'âte' → logprob: -8.51003360748291
    10. 'ç' → logprob: -8.51003360748291

Token 286: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48956382274627686
    2. ',' → logprob: -0.9895638227462769
    3. '<|end|>' → logprob: -5.739563941955566
    4. '),' → logprob: -6.239563941955566
    5. ' ,' → logprob: -6.364563941955566
    6. ',
' → logprob: -6.614563941955566
    7. ' (' → logprob: -7.114563941955566
    8. 's' → logprob: -7.114563941955566
    9. '   ' → logprob: -7.239563941955566
    10. ',v' → logprob: -7.364563941955566

Token 287: 'vo' (ID: 1190)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08360712230205536
    2. 'u' → logprob: -2.7086071968078613
    3. ' v' → logprob: -4.833607196807861
    4. ')' → logprob: -6.333607196807861
    5. ',' → logprob: -6.708607196807861
    6. '(v' → logprob: -6.958607196807861
    7. ' u' → logprob: -7.583607196807861
    8. '(u' → logprob: -8.083606719970703
    9. ' (' → logprob: -8.208606719970703
    10. ')v' → logprob: -9.583606719970703

Token 288: 'isin' (ID: 23933)
  Prédit: 'isin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isin' → logprob: -0.08755320310592651
    2. 'y' → logprob: -3.7125532627105713
    3. 'yage' → logprob: -3.8375532627105713
    4. 'isins' → logprob: -4.587553024291992
    5. 'isine' → logprob: -4.837553024291992
    6. 'is' → logprob: -5.212553024291992
    7. 'ix' → logprob: -6.087553024291992
    8. 'i' → logprob: -6.337553024291992
    9. 'ie' → logprob: -6.337553024291992
    10. 'ya' → logprob: -6.462553024291992

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005509077105671167
    2. ')' → logprob: -5.255508899688721
    3. ' ,' → logprob: -9.380509376525879
    4. 's' → logprob: -10.005509376525879
    5. ',v' → logprob: -10.005509376525879
    6. ',)' → logprob: -10.880509376525879
    7. 'u' → logprob: -11.130509376525879
    8. '<|end|>' → logprob: -11.380509376525879
    9. ',u' → logprob: -11.630509376525879
    10. '),' → logprob: -11.755509376525879

Token 290: ' coût' (ID: 73109)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003195535857230425
    2. ' a' → logprob: -5.753195762634277
    3. ')' → logprob: -11.753195762634277
    4. ' ' → logprob: -12.503195762634277
    5. ')a' → logprob: -13.378195762634277
    6. 'cost' → logprob: -14.253195762634277
    7. ',' → logprob: -14.503195762634277
    8. '   ' → logprob: -14.628195762634277
    9. '  ' → logprob: -15.003195762634277
    10. 'b' → logprob: -15.003195762634277

Token 291: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7725606560707092
    2. ' en' → logprob: -1.3975605964660645
    3. 'argent' → logprob: -1.3975605964660645
    4. ',' → logprob: -4.0225605964660645
    5. ' argent' → logprob: -4.2725605964660645
    6. '_' → logprob: -5.6475605964660645
    7. '_en' → logprob: -6.1475605964660645
    8. 'temps' → logprob: -6.3975605964660645
    9. ' temps' → logprob: -6.3975605964660645
    10. '_arg' → logprob: -7.7725605964660645

Token 292: ' argent' (ID: 73800)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.026447178795933723
    2. ' argent' → logprob: -3.776447296142578
    3. 'arg' → logprob: -6.776447296142578
    4. 'money' → logprob: -6.776447296142578
    5. ' money' → logprob: -7.651447296142578
    6. ''argent' → logprob: -8.401447296142578
    7. ' arg' → logprob: -8.776447296142578
    8. '’argent' → logprob: -10.776447296142578
    9. 'a' → logprob: -11.026447296142578
    10. ' ' → logprob: -12.276447296142578

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005157403065823019
    2. ' ,' → logprob: -7.625515937805176
    3. ')' → logprob: -10.625515937805176
    4. ',b' → logprob: -13.250515937805176
    5. ' ' → logprob: -14.750515937805176
    6. '),' → logprob: -14.875515937805176
    7. ',)' → logprob: -15.500515937805176
    8. ',
' → logprob: -15.750515937805176
    9. ' )' → logprob: -16.25051498413086
    10. 'a' → logprob: -16.25051498413086

Token 294: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.1409285068511963
    2. 'temps' → logprob: -2.5159285068511963
    3. ' coût' → logprob: -3.5159285068511963
    4. ' temps' → logprob: -4.015928268432617
    5. 'c' → logprob: -7.140928268432617
    6. 'cout' → logprob: -7.265928268432617
    7. ' cout' → logprob: -8.265928268432617
    8. ' ' → logprob: -8.390928268432617
    9. ' délai' → logprob: -8.640928268432617
    10. 'cost' → logprob: -8.765928268432617

Token 295: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.009826806373894215
    2. 'en' → logprob: -4.63482666015625
    3. ',' → logprob: -11.13482666015625
    4. ')' → logprob: -11.38482666015625
    5. '_en' → logprob: -11.50982666015625
    6. ' ' → logprob: -12.25982666015625
    7. ' ' → logprob: -12.50982666015625
    8. 's' → logprob: -12.50982666015625
    9. 'temps' → logprob: -12.50982666015625
    10. ' temps' → logprob: -12.75982666015625

Token 296: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.049933914095163345
    2. ' temps' → logprob: -3.049933910369873
    3. ' ' → logprob: -7.174933910369873
    4. 'time' → logprob: -8.549934387207031
    5. 'tem' → logprob: -8.924934387207031
    6. 't' → logprob: -9.299934387207031
    7. 'temp' → logprob: -9.549934387207031
    8. '
' → logprob: -10.549934387207031
    9. ' time' → logprob: -10.799934387207031
    10. 'tempo' → logprob: -11.799934387207031

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016301481809932739
    2. ' )' → logprob: -8.750163078308105
    3. ',' → logprob: -13.250163078308105
    4. ')
' → logprob: -13.875163078308105
    5. '))' → logprob: -14.250163078308105
    6. '),' → logprob: -14.375163078308105
    7. ',)' → logprob: -16.00016212463379
    8. ' ' → logprob: -16.12516212463379
    9. ')#' → logprob: -16.87516212463379
    10. '   ' → logprob: -17.12516212463379

Token 298: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.4034345187828876e-05
    2. '
' → logprob: -11.75002384185791
    3. ')' → logprob: -11.87502384185791
    4. 'graph' → logprob: -12.50002384185791
    5. ',' → logprob: -13.00002384185791
    6. ' graph' → logprob: -14.25002384185791
    7. '<|end|>' → logprob: -14.87502384185791
    8. ')
' → logprob: -15.00002384185791
    9. '	graph' → logprob: -15.12502384185791
    10. '(graph' → logprob: -15.12502384185791

Token 299: ' la' (ID: 557)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3134930729866028
    2. ' graph' → logprob: -1.313493013381958
    3. 'u' → logprob: -9.688492774963379
    4. '	graph' → logprob: -10.063492774963379
    5. '(graph' → logprob: -10.188492774963379
    6. ')' → logprob: -10.313492774963379
    7. ' u' → logprob: -10.313492774963379
    8. ' the' → logprob: -12.063492774963379
    9. ' ' → logprob: -12.813492774963379
    10. ' v' → logprob: -12.938492774963379

Token 300: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.22964589297771454
    2. 'liste' → logprob: -1.854645848274231
    3. ' liste' → logprob: -4.229645729064941
    4. ' graph' → logprob: -4.604645729064941
    5. 'gr' → logprob: -4.854645729064941
    6. 'list' → logprob: -5.104645729064941
    7. 'sens' → logprob: -6.104645729064941
    8. ' grap' → logprob: -6.354645729064941
    9. 'adj' → logprob: -6.854645729064941
    10. 'file' → logprob: -7.229645729064941

Token 301: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ''ad' (ID: 36162)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.46737271547317505
    2. 'adj' → logprob: -1.8423726558685303
    3. 'u' → logprob: -2.2173726558685303
    4. 'e' → logprob: -3.2173726558685303
    5. 's' → logprob: -4.217372894287109
    6. ' graph' → logprob: -4.592372894287109
    7. '(graph' → logprob: -4.717372894287109
    8. 'l' → logprob: -5.592372894287109
    9. '[u' → logprob: -5.842372894287109
    10. 'es' → logprob: -5.967372894287109

Token 303: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.14297732710838318
    2. 'j' → logprob: -2.017977237701416
    3. 'ja' → logprob: -9.017977714538574
    4. 'jec' → logprob: -9.392977714538574
    5. ' j' → logprob: -10.267977714538574
    6. 'd' → logprob: -11.267977714538574
    7. ' jac' → logprob: -11.392977714538574
    8. 'js' → logprob: -11.892977714538574
    9. 'Jac' → logprob: -12.017977714538574
    10. '_j' → logprob: -12.017977714538574

Token 304: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.42510345578193665
    2. 'acency' → logprob: -1.6751034259796143
    3. 'es' → logprob: -2.5501034259796143
    4. 'ence' → logprob: -3.9251034259796143
    5. 'escence' → logprob: -4.050103664398193
    6. 'ences' → logprob: -5.175103664398193
    7. 'acité' → logprob: -5.300103664398193
    8. 'acent' → logprob: -5.800103664398193
    9. 't' → logprob: -6.050103664398193
    10. '```' → logprob: -6.175103664398193

Token 305: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.145118848304264e-05
    2. 'graph' → logprob: -10.000051498413086
    3. ' graph' → logprob: -12.250051498413086
    4. ',' → logprob: -15.250051498413086
    5. '	graph' → logprob: -15.375051498413086
    6. '<|end|>' → logprob: -15.625051498413086
    7. '
' → logprob: -15.750051498413086
    8. '  ' → logprob: -16.750051498413086
    9. '(graph' → logprob: -16.875051498413086
    10. '       ' → logprob: -16.875051498413086

Token 306: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06022895127534866
    2. ' u' → logprob: -3.0602290630340576
    3. 'graph' → logprob: -4.5602288246154785
    4. ' graph' → logprob: -6.8102288246154785
    5. '[u' → logprob: -11.810229301452637
    6. '	u' → logprob: -13.435229301452637
    7. '
' → logprob: -13.810229301452637
    8. '	graph' → logprob: -14.185229301452637
    9. ' ' → logprob: -14.560229301452637
    10. '   ' → logprob: -15.310229301452637

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007647183374501765
    2. 'graph' → logprob: -7.375764846801758
    3. ' graph' → logprob: -9.000764846801758
    4. ',' → logprob: -12.375764846801758
    5. '	graph' → logprob: -12.375764846801758
    6. '
' → logprob: -12.625764846801758
    7. '(graph' → logprob: -13.375764846801758
    8. ')' → logprob: -15.000764846801758
    9. '    
' → logprob: -15.375764846801758
    10. ',
' → logprob: -15.875764846801758

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007791309617459774
    2. 'graph' → logprob: -7.250779151916504
    3. ' graph' → logprob: -10.000779151916504
    4. '	graph' → logprob: -11.000779151916504
    5. '<|end|>' → logprob: -13.125779151916504
    6. '
' → logprob: -13.375779151916504
    7. '(graph' → logprob: -13.625779151916504
    8. 'raph' → logprob: -14.750779151916504
    9. 'v' → logprob: -15.000779151916504
    10. ',' → logprob: -15.125779151916504

Token 309: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.07069723308086395
    2. '   ' → logprob: -3.32069730758667
    3. ' graph' → logprob: -3.44569730758667
    4. '	graph' → logprob: -8.445696830749512
    5. '(graph' → logprob: -11.070696830749512
    6. '  ' → logprob: -12.570696830749512
    7. ' ' → logprob: -12.570696830749512
    8. '
' → logprob: -12.820696830749512
    9. '_graph' → logprob: -14.195696830749512
    10. '.graph' → logprob: -14.445696830749512

Token 310: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.8802491215174086e-05
    2. '[u' → logprob: -11.000028610229492
    3. 'v' → logprob: -12.125028610229492
    4. '[' → logprob: -12.250028610229492
    5. '
' → logprob: -15.250028610229492
    6. ' [' → logprob: -15.250028610229492
    7. '[b' → logprob: -15.500028610229492
    8. '```' → logprob: -15.750028610229492
    9. '[val' → logprob: -15.750028610229492
    10. '[s' → logprob: -15.875028610229492

Token 311: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.008242916315793991
    2. '.' → logprob: -5.258243083953857
    3. ').' → logprob: -6.008243083953857
    4. '.append' → logprob: -7.883243083953857
    5. '   ' → logprob: -9.7582426071167
    6. ' ].' → logprob: -9.7582426071167
    7. ' .' → logprob: -10.6332426071167
    8. ']' → logprob: -11.2582426071167
    9. '[' → logprob: -12.0082426071167
    10. '[u' → logprob: -13.2582426071167

Token 312: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.125000953674316
    3. 'appen' → logprob: -15.500000953674316
    4. ' append' → logprob: -15.750000953674316
    5. 'app' → logprob: -18.0
    6. '	append' → logprob: -19.0
    7. '_append' → logprob: -20.75
    8. 'add' → logprob: -20.75
    9. 'prepend' → logprob: -21.125
    10. '```' → logprob: -21.25

Token 313: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00028731857310049236
    2. '(u' → logprob: -8.250287055969238
    3. '(' → logprob: -10.750287055969238
    4. '(v' → logprob: -12.625287055969238
    5. ' (' → logprob: -14.500287055969238
    6. '(
' → logprob: -14.875287055969238
    7. ' ((' → logprob: -14.875287055969238
    8. ' ' → logprob: -17.875288009643555
    9. ')((' → logprob: -18.375288009643555
    10. '[(' → logprob: -18.875288009643555

Token 314: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004725837614387274
    2. '(u' → logprob: -5.379725933074951
    3. ' u' → logprob: -9.254725456237793
    4. ' (' → logprob: -12.004725456237793
    5. '	u' → logprob: -14.004725456237793
    6. '
' → logprob: -14.004725456237793
    7. '   ' → logprob: -14.129725456237793
    8. ',u' → logprob: -14.379725456237793
    9. '[u' → logprob: -14.504725456237793
    10. ',' → logprob: -16.00472640991211

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015538577281404287
    2. ' ,' → logprob: -9.250155448913574
    3. ',v' → logprob: -9.750155448913574
    4. ',
' → logprob: -14.125155448913574
    5. 'v' → logprob: -16.875154495239258
    6. ' v' → logprob: -17.750154495239258
    7. '),' → logprob: -17.875154495239258
    8. '‌,' → logprob: -18.000154495239258
    9. ')' → logprob: -18.375154495239258
    10. ',b' → logprob: -18.500154495239258

Token 316: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1602463573217392
    2. ' a' → logprob: -1.9102463722229004
    3. ' ' → logprob: -11.910245895385742
    4. ',' → logprob: -12.285245895385742
    5. 'v' → logprob: -12.410245895385742
    6. ' v' → logprob: -12.660245895385742
    7. ',a' → logprob: -13.160245895385742
    8. '	a' → logprob: -14.035245895385742
    9. 'u' → logprob: -15.160245895385742
    10. ' ,' → logprob: -15.660245895385742

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001328095211647451
    2. ' ,' → logprob: -6.626327991485596
    3. ',a' → logprob: -13.751328468322754
    4. ',b' → logprob: -14.626328468322754
    5. ',
' → logprob: -14.626328468322754
    6. ' ' → logprob: -16.251327514648438
    7. 'a' → logprob: -16.876327514648438
    8. '‌,' → logprob: -17.751327514648438
    9. ' a' → logprob: -18.251327514648438
    10. 'b' → logprob: -18.376327514648438

Token 318: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.313263863325119
    2. ' b' → logprob: -1.3132638931274414
    3. ' ' → logprob: -13.563263893127441
    4. ',' → logprob: -16.188262939453125
    5. ' ' → logprob: -16.188262939453125
    6. ')b' → logprob: -16.188262939453125
    7. ',b' → logprob: -16.313262939453125
    8. 'a' → logprob: -16.313262939453125
    9. ' 
' → logprob: -16.438262939453125
    10. '<|end|>' → logprob: -16.563262939453125

Token 319: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007028053980320692
    2. ',' → logprob: -5.632028102874756
    3. ')' → logprob: -5.757028102874756
    4. ' ))' → logprob: -8.382027626037598
    5. '),' → logprob: -11.257027626037598
    6. '));' → logprob: -12.382027626037598
    7. ' )' → logprob: -12.757027626037598
    8. '))
' → logprob: -12.882027626037598
    9. ' ,' → logprob: -13.007027626037598
    10. ')),' → logprob: -13.007027626037598

Token 320: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14903709292411804
    2. '

' → logprob: -2.6490371227264404
    3. '
' → logprob: -3.6490371227264404
    4. ')' → logprob: -4.149036884307861
    5. '<|end|>' → logprob: -4.649036884307861
    6. 'n' → logprob: -5.149036884307861
    7. '#' → logprob: -6.899036884307861
    8. '  
' → logprob: -7.024036884307861
    9. 'def' → logprob: -7.024036884307861
    10. ' 
' → logprob: -7.024036884307861

Token 321: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31591370701789856
    2. '#' → logprob: -1.5659136772155762
    3. ' ' → logprob: -3.440913677215576
    4. '
' → logprob: -4.190913677215576
    5. '<|end|>' → logprob: -4.940913677215576
    6. ' )' → logprob: -6.065913677215576
    7. ' #' → logprob: -7.065913677215576
    8. '

' → logprob: -7.440913677215576
    9. '   ' → logprob: -7.565913677215576
    10. '  ' → logprob: -7.690913677215576

Token 322: ' Comme' (ID: 53252)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.14319325983524323
    2. 'graph' → logprob: -2.018193244934082
    3. '(graph' → logprob: -8.393193244934082
    4. 'append' → logprob: -9.643193244934082
    5. '	graph' → logprob: -9.768193244934082
    6. 'Append' → logprob: -10.518193244934082
    7. ' append' → logprob: -10.643193244934082
    8. ' v' → logprob: -10.893193244934082
    9. 'v' → logprob: -11.018193244934082
    10. '   ' → logprob: -11.143193244934082

Token 323: ' le' (ID: 505)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8322985172271729
    2. ' u' → logprob: -1.3322985172271729
    3. 'u' → logprob: -2.207298517227173
    4. ' v' → logprob: -3.332298517227173
    5. ' bien' → logprob: -3.332298517227173
    6. ' (' → logprob: -3.957298517227173
    7. 'graph' → logprob: -4.082298278808594
    8. 'v' → logprob: -4.207298278808594
    9. '(graph' → logprob: -4.332298278808594
    10. '(u' → logprob: -4.582298278808594

Token 324: ' grap' (ID: 60955)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.7745069861412048
    2. 'graph' → logprob: -0.7745069861412048
    3. ' grap' → logprob: -2.7745070457458496
    4. 'u' → logprob: -5.64950704574585
    5. 's' → logprob: -5.77450704574585
    6. ' code' → logprob: -5.89950704574585
    7. 'gr' → logprob: -6.27450704574585
    8. 'g' → logprob: -6.52450704574585
    9. 'code' → logprob: -8.024506568908691
    10. ' ' → logprob: -8.024506568908691

Token 325: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.004720376338809729
    2. 'h' → logprob: -5.754720211029053
    3. 'phe' → logprob: -7.254720211029053
    4. 'aphe' → logprob: -8.129720687866211
    5. '#' → logprob: -8.254720687866211
    6. 'ph' → logprob: -9.254720687866211
    7. 'e' → logprob: -10.379720687866211
    8. 'che' → logprob: -11.129720687866211
    9. '[' → logprob: -11.129720687866211
    10. 'hte' → logprob: -11.379720687866211

Token 326: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.04287506639957428
    2. 'est' → logprob: -3.792875051498413
    3. ' is' → logprob: -4.042875289916992
    4. ' ' → logprob: -7.417875289916992
    5. 's' → logprob: -7.667875289916992
    6. '#' → logprob: -8.167875289916992
    7. ''est' → logprob: -8.667875289916992
    8. 'is' → logprob: -9.542875289916992
    9. ' n' → logprob: -10.042875289916992
    10. 'u' → logprob: -10.292875289916992

Token 327: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.27108034491539
    2. 'non' → logprob: -1.5210803747177124
    3. 'und' → logprob: -4.396080493927002
    4. ' und' → logprob: -5.896080493927002
    5. 'b' → logprob: -7.021080493927002
    6. ' bid' → logprob: -7.271080493927002
    7. ' nond' → logprob: -7.271080493927002
    8. ' ' → logprob: -7.646080493927002
    9. '   ' → logprob: -7.896080493927002
    10. 'bid' → logprob: -8.396080017089844

Token 328: '-or' (ID: 24277)
  Prédit: ' orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' orient' → logprob: -0.9124060273170471
    2. 'orient' → logprob: -1.2874059677124023
    3. 'or' → logprob: -1.5374059677124023
    4. ' dirig' → logprob: -2.2874059677124023
    5. ' oriented' → logprob: -5.412405967712402
    6. ' directed' → logprob: -7.662405967712402
    7. 'direct' → logprob: -8.162405967712402
    8. ' dirigido' → logprob: -8.287405967712402
    9. '   ' → logprob: -8.912405967712402
    10. ' or' → logprob: -9.287405967712402

Token 329: 'ient' (ID: 773)
  Prédit: 'iented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iented' → logprob: -0.03595411032438278
    2. 'ient' → logprob: -3.410953998565674
    3. 'iente' → logprob: -6.535953998565674
    4. 'ent' → logprob: -8.035954475402832
    5. 'e' → logprob: -8.660954475402832
    6. 'IENT' → logprob: -9.285954475402832
    7. 'ented' → logprob: -9.660954475402832
    8. 'i' → logprob: -10.410954475402832
    9. '{' → logprob: -10.660954475402832
    10. '</' → logprob: -11.285954475402832

Token 330: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.000229046301683411
    2. 'ed' → logprob: -8.500228881835938
    3. 'e' → logprob: -10.750228881835938
    4. 'éd' → logprob: -13.875228881835938
    5. 'ée' → logprob: -13.875228881835938
    6. 'è' → logprob: -14.000228881835938
    7. 'É' → logprob: -14.625228881835938
    8. 'd' → logprob: -15.375228881835938
    9. '```' → logprob: -15.375228881835938
    10. 'ted' → logprob: -16.000228881835938

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3926832675933838
    2. '   ' → logprob: -1.5176832675933838
    3. ')' → logprob: -2.517683267593384
    4. '<|end|>' → logprob: -4.642683029174805
    5. '.' → logprob: -4.892683029174805
    6. ' ,' → logprob: -5.892683029174805
    7. ' ' → logprob: -6.642683029174805
    8. ' graph' → logprob: -7.517683029174805
    9. '),' → logprob: -7.642683029174805
    10. '(graph' → logprob: -7.767683029174805

Token 332: ' ajoute' (ID: 91611)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.07046406716108322
    2. 'graph' → logprob: -2.6954641342163086
    3. '	graph' → logprob: -7.695464134216309
    4. '   ' → logprob: -10.195464134216309
    5. '(graph' → logprob: -11.070464134216309
    6. '.graph' → logprob: -12.945464134216309
    7. '<|end|>' → logprob: -12.945464134216309
    8. ' 
' → logprob: -13.320464134216309
    9. ')' → logprob: -13.445464134216309
    10. ' ' → logprob: -13.695464134216309

Token 333: ' aussi' (ID: 9894)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12750385701656342
    2. '(v' → logprob: -2.3775038719177246
    3. '(u' → logprob: -3.6275038719177246
    4. '(' → logprob: -8.377503395080566
    5. 'u' → logprob: -11.127503395080566
    6. ' ' → logprob: -11.252503395080566
    7. ' u' → logprob: -11.502503395080566
    8. ' aussi' → logprob: -11.627503395080566
    9. ' également' → logprob: -12.127503395080566
    10. 'v' → logprob: -12.127503395080566

Token 334: ' dans' (ID: 2671)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6158937215805054
    2. '(v' → logprob: -0.8658937215805054
    3. '(u' → logprob: -3.240893840789795
    4. '(' → logprob: -10.740893363952637
    5. 'u' → logprob: -12.490893363952637
    6. ' ' → logprob: -12.615893363952637
    7. '((' → logprob: -12.865893363952637
    8. '
' → logprob: -13.490893363952637
    9. '   ' → logprob: -13.615893363952637
    10. ')' → logprob: -13.740893363952637

Token 335: ' celle' (ID: 31790)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.16187645494937897
    2. ' graph' → logprob: -1.9118764400482178
    3. '(graph' → logprob: -6.411876678466797
    4. '	graph' → logprob: -12.536876678466797
    5. ' la' → logprob: -13.036876678466797
    6. ' le' → logprob: -14.161876678466797
    7. '(' → logprob: -14.911876678466797
    8. 'la' → logprob: -15.036876678466797
    9. '_graph' → logprob: -15.286876678466797
    10. ' (' → logprob: -15.286876678466797

Token 336: ' de' (ID: 334)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.55032879114151
    2. '(u' → logprob: -1.6753287315368652
    3. '[u' → logprob: -1.9253287315368652
    4. '[v' → logprob: -2.6753287315368652
    5. ' (' → logprob: -4.550328731536865
    6. ' de' → logprob: -4.925328731536865
    7. ' du' → logprob: -6.925328731536865
    8. ' des' → logprob: -7.675328731536865
    9. '(graph' → logprob: -7.925328731536865
    10. 'graph' → logprob: -8.175329208374023

Token 337: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06697704643011093
    2. 'u' → logprob: -2.816977024078369
    3. ' v' → logprob: -5.441977024078369
    4. ' u' → logprob: -7.316977024078369
    5. '[u' → logprob: -14.191977500915527
    6. '[v' → logprob: -14.566977500915527
    7. '	v' → logprob: -15.566977500915527
    8. '(v' → logprob: -15.941977500915527
    9. '(u' → logprob: -16.19197654724121
    10. '   ' → logprob: -17.44197654724121

Token 338: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007343469187617302
    2. '
' → logprob: -5.507343292236328
    3. '#' → logprob: -7.382343292236328
    4. ')
' → logprob: -7.382343292236328
    5. '<|end|>' → logprob: -7.757343292236328
    6. ' )' → logprob: -7.882343292236328
    7. '

' → logprob: -8.757343292236328
    8. 'n' → logprob: -8.757343292236328
    9. ')#' → logprob: -9.007343292236328
    10. ' ' → logprob: -9.007343292236328

Token 339: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05957653000950813
    2. '#' → logprob: -2.9345765113830566
    3. 'distance' → logprob: -5.809576511383057
    4. 'dp' → logprob: -6.684576511383057
    5. 'import' → logprob: -9.059576988220215
    6. 'times' → logprob: -9.184576988220215
    7. 'def' → logprob: -9.684576988220215
    8. 'cost' → logprob: -10.309576988220215
    9. 'time' → logprob: -10.559576988220215
    10. 'd' → logprob: -10.684576988220215

Token 340: ' Lecture' (ID: 106534)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04485704004764557
    2. '#' → logprob: -3.5448570251464844
    3. 'dp' → logprob: -4.794857025146484
    4. 'distance' → logprob: -5.544857025146484
    5. 'def' → logprob: -6.044857025146484
    6. 'times' → logprob: -9.294857025146484
    7. 'max' → logprob: -9.544857025146484
    8. 'd' → logprob: -9.669857025146484
    9. 'time' → logprob: -9.919857025146484
    10. 'cost' → logprob: -10.044857025146484

Token 341: ' de' (ID: 334)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7527962923049927
    2. 'time' → logprob: -1.7527962923049927
    3. '()' → logprob: -2.377796173095703
    4. 'times' → logprob: -2.502796173095703
    5. 'for' → logprob: -3.627796173095703
    6. 'd' → logprob: -3.877796173095703
    7. 'des' → logprob: -4.002796173095703
    8. 'temps' → logprob: -4.127796173095703
    9. '#' → logprob: -4.252796173095703
    10. 's' → logprob: -4.752796173095703

Token 342: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2284151315689087
    2. 'l' → logprob: -1.7284151315689087
    3. 'def' → logprob: -2.353415012359619
    4. ' la' → logprob: -2.728415012359619
    5. ' distances' → logprob: -2.728415012359619
    6. 'la' → logprob: -2.728415012359619
    7. '#' → logprob: -3.353415012359619
    8. 'le' → logprob: -3.603415012359619
    9. 'distance' → logprob: -3.603415012359619
    10. 'q' → logprob: -4.228415012359619

Token 343: ' liste' (ID: 31719)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1222305297851562
    2. 'start' → logprob: -1.7472305297851562
    3. 'dest' → logprob: -1.9972305297851562
    4. 'destination' → logprob: -2.9972305297851562
    5. 'q' → logprob: -3.1222305297851562
    6. 'd' → logprob: -3.2472305297851562
    7. 'queries' → logprob: -3.4972305297851562
    8. 'target' → logprob: -3.8722305297851562
    9. 'x' → logprob: -3.9972305297851562
    10. 'def' → logprob: -4.247230529785156

Token 344: ' des' (ID: 731)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8454514145851135
    2. 'des' → logprob: -1.7204513549804688
    3. 'd' → logprob: -2.3454513549804688
    4. 's' → logprob: -2.5954513549804688
    5. 'temps' → logprob: -3.4704513549804688
    6. 'de' → logprob: -3.8454513549804688
    7. ' of' → logprob: -3.9704513549804688
    8. 'of' → logprob: -4.095451354980469
    9. 'initial' → logprob: -4.220451354980469
    10. ' =' → logprob: -4.345451354980469

Token 345: ' options' (ID: 3880)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mon' → logprob: -2.7648818492889404
    2. 'dist' → logprob: -2.7648818492889404
    3. 'p' → logprob: -3.1398818492889404
    4. 're' → logprob: -3.2648818492889404
    5. 'temps' → logprob: -3.2648818492889404
    6. 'dest' → logprob: -3.3898818492889404
    7. 'cap' → logprob: -3.5148818492889404
    8. 'prix' → logprob: -3.5148818492889404
    9. 'march' → logprob: -3.6398818492889404
    10. 'bud' → logprob: -3.7648818492889404

Token 346: ' de' (ID: 334)
  Prédit: 'options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'options' → logprob: -0.5871319770812988
    2. ' =' → logprob: -1.3371319770812988
    3. 'times' → logprob: -3.962131977081299
    4. 'coins' → logprob: -3.962131977081299
    5. 'opt' → logprob: -4.087131977081299
    6. 'cost' → logprob: -4.212131977081299
    7. ' options' → logprob: -4.587131977081299
    8. '=' → logprob: -4.712131977081299
    9. 'c' → logprob: -4.712131977081299
    10. 'prices' → logprob: -4.837131977081299

Token 347: ' change' (ID: 3343)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8352312445640564
    2. 'trans' → logprob: -2.335231304168701
    3. 't' → logprob: -3.085231304168701
    4. 'transport' → logprob: -3.460231304168701
    5. 'change' → logprob: -3.710231304168701
    6. 'voy' → logprob: -3.835231304168701
    7. 'conversion' → logprob: -3.960231304168701
    8. 'p' → logprob: -4.335231304168701
    9. 'ban' → logprob: -4.335231304168701
    10. 'temps' → logprob: -4.335231304168701

Token 348: ' pour' (ID: 1930)
  Prédit: 'exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exchange' → logprob: -0.9687613248825073
    2. 'c' → logprob: -1.7187613248825073
    3. 'ex' → logprob: -2.093761444091797
    4. 'change' → logprob: -2.593761444091797
    5. 'curr' → logprob: -2.843761444091797
    6. 'currency' → logprob: -3.093761444091797
    7. 'changes' → logprob: -3.093761444091797
    8. 'options' → logprob: -3.468761444091797
    9. 'x' → logprob: -4.343761444091797
    10. 'coins' → logprob: -4.593761444091797

Token 349: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7990819215774536
    2. ' chaque' → logprob: -1.2990819215774536
    3. ' _' → logprob: -2.674081802368164
    4. 'each' → logprob: -2.924081802368164
    5. 'changer' → logprob: -2.924081802368164
    6. 'i' → logprob: -4.049081802368164
    7. 'range' → logprob: -4.674081802368164
    8. ' each' → logprob: -4.674081802368164
    9. '_currency' → logprob: -4.799081802368164
    10. 'currency' → logprob: -5.549081802368164

Token 350: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.26447319984436035
    2. ' sommet' → logprob: -2.0144731998443604
    3. 'ville' → logprob: -2.5144731998443604
    4. 's' → logprob: -4.389472961425781
    5. 'no' → logprob: -6.264472961425781
    6. ' ville' → logprob: -6.639472961425781
    7. 'station' → logprob: -7.514472961425781
    8. 'n' → logprob: -7.889472961425781
    9. ' noe' → logprob: -7.889472961425781
    10. ' som' → logprob: -8.764472961425781

Token 351: '
' (ID: 198)
  Prédit: 'exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exchange' → logprob: -0.5363715291023254
    2. 'ex' → logprob: -1.4113714694976807
    3. 'change' → logprob: -2.2863714694976807
    4. 'changes' → logprob: -3.6613714694976807
    5. 'currency' → logprob: -4.03637170791626
    6. 'options' → logprob: -4.78637170791626
    7. 'curr' → logprob: -4.91137170791626
    8. 'rates' → logprob: -5.41137170791626
    9. 'money' → logprob: -6.28637170791626
    10. 'coins' → logprob: -7.41137170791626

Token 352: '#' (ID: 2)
  Prédit: 'exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exchange' → logprob: -0.19181732833385468
    2. 'ex' → logprob: -2.316817283630371
    3. 'change' → logprob: -2.941817283630371
    4. 'changes' → logprob: -4.691817283630371
    5. 'currency' → logprob: -4.816817283630371
    6. 'curr' → logprob: -6.066817283630371
    7. 'rates' → logprob: -6.691817283630371
    8. 'money' → logprob: -7.191817283630371
    9. 'options' → logprob: -7.941817283630371
    10. 'changer' → logprob: -8.441817283630371

Token 353: ' Pour' (ID: 13931)
  Prédit: 'exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exchange' → logprob: -0.24694964289665222
    2. 'ex' → logprob: -1.7469496726989746
    3. 'change' → logprob: -3.8719496726989746
    4. 'currency' → logprob: -4.246949672698975
    5. 'changes' → logprob: -5.496949672698975
    6. 'curr' → logprob: -5.996949672698975
    7. 'rates' → logprob: -7.121949672698975
    8. 'options' → logprob: -7.621949672698975
    9. 'money' → logprob: -7.746949672698975
    10. 'coins' → logprob: -8.871949195861816

Token 354: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7799459099769592
    2. ' _' → logprob: -1.1549458503723145
    3. ' i' → logprob: -1.5299458503723145
    4. 'i' → logprob: -4.7799458503723145
    5. '_i' → logprob: -6.7799458503723145
    6. ' sommet' → logprob: -9.029946327209473
    7. ' node' → logprob: -9.154946327209473
    8. ' u' → logprob: -9.529946327209473
    9. '_vertices' → logprob: -11.779946327209473
    10. '_vertex' → logprob: -11.904946327209473

Token 355: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5399013757705688
    2. ' i' → logprob: -1.1649013757705688
    3. '_' → logprob: -2.6649012565612793
    4. ' _' → logprob: -4.164901256561279
    5. ' sommet' → logprob: -4.664901256561279
    6. ' node' → logprob: -5.289901256561279
    7. '_i' → logprob: -6.039901256561279
    8. 'node' → logprob: -7.039901256561279
    9. ' city' → logprob: -7.164901256561279
    10. ' vertex' → logprob: -7.539901256561279

Token 356: ' i' (ID: 575)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7758250832557678
    2. ',' → logprob: -1.275825023651123
    3. ' in' → logprob: -3.275825023651123
    4. 'for' → logprob: -3.275825023651123
    5. ':
' → logprob: -3.275825023651123
    6. 'in' → logprob: -3.400825023651123
    7. '
' → logprob: -3.775825023651123
    8. 'range' → logprob: -4.025825023651123
    9. '_change' → logprob: -4.650825023651123
    10. 'change' → logprob: -4.650825023651123

Token 357: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8124317526817322
    2. ',' → logprob: -1.187431812286377
    3. ':
' → logprob: -1.562431812286377
    4. ' in' → logprob: -3.812431812286377
    5. 'in' → logprob: -4.812431812286377
    6. 'for' → logprob: -5.187431812286377
    7. 'range' → logprob: -5.687431812286377
    8. ',
' → logprob: -7.062431812286377
    9. '
' → logprob: -7.812431812286377
    10. ' for' → logprob: -8.437431335449219

Token 358: ' cd' (ID: 24852)
  Prédit: 'exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exchange' → logprob: -0.6946673393249512
    2. 'ex' → logprob: -2.319667339324951
    3. 'change' → logprob: -2.319667339324951
    4. 'currency' → logprob: -2.694667339324951
    5. 'changes' → logprob: -2.819667339324951
    6. ' exchanges' → logprob: -3.069667339324951
    7. 'curr' → logprob: -3.194667339324951
    8. 'options' → logprob: -3.944667339324951
    9. ' exchange' → logprob: -4.069667339324951
    10. ' currency' → logprob: -5.069667339324951

Token 359: '[i' (ID: 1768)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0450602769851685
    2. ' =' → logprob: -1.7950602769851685
    3. 's' → logprob: -2.170060157775879
    4. 'c' → logprob: -2.420060157775879
    5. 'change' → logprob: -3.670060157775879
    6. 'i' → logprob: -3.670060157775879
    7. 'd' → logprob: -3.920060157775879
    8. 'options' → logprob: -4.045060157775879
    9. '=' → logprob: -4.170060157775879
    10. 'm' → logprob: -4.420060157775879

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006667297333478928
    2. '],' → logprob: -5.756667137145996
    3. ']=' → logprob: -5.881667137145996
    4. '=' → logprob: -8.256667137145996
    5. ',' → logprob: -9.006667137145996
    6. ')' → logprob: -9.256667137145996
    7. ' ]' → logprob: -9.631667137145996
    8. '])' → logprob: -9.881667137145996
    9. ' =' → logprob: -10.881667137145996
    10. '][' → logprob: -11.381667137145996

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06341884285211563
    2. ' =' → logprob: -2.8134188652038574
    3. ',' → logprob: -6.563418865203857
    4. '=[]' → logprob: -10.6884183883667
    5. ']' → logprob: -12.9384183883667
    6. ' ' → logprob: -13.3134183883667
    7. ':' → logprob: -13.6884183883667
    8. ' ,' → logprob: -13.6884183883667
    9. 's' → logprob: -13.8134183883667
    10. ' is' → logprob: -13.9384183883667

Token 362: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008183915168046951
    2. 'list' → logprob: -5.50818395614624
    3. '[]
' → logprob: -6.00818395614624
    4. '[int' → logprob: -7.13318395614624
    5. '[' → logprob: -8.633183479309082
    6. ' []' → logprob: -9.258183479309082
    7. '(' → logprob: -9.633183479309082
    8. '(int' → logprob: -9.633183479309082
    9. '[(' → logprob: -9.633183479309082
    10. '(list' → logprob: -10.008183479309082

Token 363: 'nombre' (ID: 28576)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1829080879688263
    2. 'x' → logprob: -2.432908058166504
    3. 'ci' → logprob: -4.557908058166504
    4. 'cost' → logprob: -4.557908058166504
    5. 'a' → logprob: -4.682908058166504
    6. 'money' → logprob: -4.932908058166504
    7. 'cash' → logprob: -5.182908058166504
    8. 'y' → logprob: -5.307908058166504
    9. 'exchange' → logprob: -6.057908058166504
    10. 'int' → logprob: -6.057908058166504

Token 364: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04966771975159645
    2. 'd' → logprob: -4.049667835235596
    3. 'de' → logprob: -4.424667835235596
    4. ' d' → logprob: -5.299667835235596
    5. '_exchange' → logprob: -6.299667835235596
    6. ' ,' → logprob: -6.549667835235596
    7. '_d' → logprob: -6.549667835235596
    8. '_change' → logprob: -6.924667835235596
    9. '_money' → logprob: -7.299667835235596
    10. '_tokens' → logprob: -7.299667835235596

Token 365: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.8930016160011292
    2. 'coins' → logprob: -1.5180015563964844
    3. 'changes' → logprob: -2.5180015563964844
    4. 'd' → logprob: -3.0180015563964844
    5. ' pièces' → logprob: -3.0180015563964844
    6. 'pieces' → logprob: -3.3930015563964844
    7. 'options' → logprob: -3.3930015563964844
    8. 'chang' → logprob: -3.5180015563964844
    9. 'change' → logprob: -3.8930015563964844
    10. 'transactions' → logprob: -4.518001556396484

Token 366: ' qu' (ID: 474)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001969077391549945
    2. ' ,' → logprob: -6.876968860626221
    3. 'de' → logprob: -7.876968860626221
    4. ',
' → logprob: -8.626969337463379
    5. '),' → logprob: -9.376969337463379
    6. ')' → logprob: -9.751969337463379
    7. 's' → logprob: -10.501969337463379
    8. 'coins' → logprob: -10.751969337463379
    9. '_coin' → logprob: -10.876969337463379
    10. ' ' → logprob: -11.001969337463379

Token 367: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.8685988187789917
    2. 'e' → logprob: -1.2435988187789917
    3. 'on' → logprob: -1.9935988187789917
    4. ',' → logprob: -3.2435989379882812
    5. ''il' → logprob: -3.8685989379882812
    6. 'i' → logprob: -3.9935989379882812
    7. ')' → logprob: -3.9935989379882812
    8. ''' → logprob: -4.743598937988281
    9. 'u' → logprob: -4.868598937988281
    10. '),' → logprob: -5.118598937988281

Token 368: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.04579108580946922
    2. 'can' → logprob: -3.7957911491394043
    3. ')' → logprob: -4.920791149139404
    4. ' peux' → logprob: -5.045791149139404
    5. ' can' → logprob: -5.795791149139404
    6. ' peut' → logprob: -5.795791149139404
    7. ' pe' → logprob: -7.170791149139404
    8. 'p' → logprob: -7.420791149139404
    9. ' pouvons' → logprob: -7.795791149139404
    10. ']' → logprob: -9.045790672302246

Token 369: ' ajouter' (ID: 78457)
  Prédit: 'éch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éch' → logprob: -0.5396801829338074
    2. 'changer' → logprob: -1.9146802425384521
    3. ' éch' → logprob: -2.414680242538452
    4. 'acheter' → logprob: -2.664680242538452
    5. 'é' → logprob: -2.789680242538452
    6. ')' → logprob: -4.039680004119873
    7. '
' → logprob: -4.789680004119873
    8. ' acheter' → logprob: -4.914680004119873
    9. 'ech' → logprob: -6.164680004119873
    10. ' changer' → logprob: -6.289680004119873

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010359067237004638
    2. ' ,' → logprob: -7.751035690307617
    3. ')' → logprob: -8.251035690307617
    4. ',
' → logprob: -8.626035690307617
    5. '),' → logprob: -9.001035690307617
    6. 'et' → logprob: -12.626035690307617
    7. ' ' → logprob: -12.876035690307617
    8. ',)' → logprob: -12.876035690307617
    9. '[],' → logprob: -13.126035690307617
    10. 'pour' → logprob: -13.251035690307617

Token 371: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.5732988119125366
    2. 'prix' → logprob: -1.6982988119125366
    3. 'cout' → logprob: -2.073298931121826
    4. ' coût' → logprob: -2.948298931121826
    5. ' prix' → logprob: -3.448298931121826
    6. ' cout' → logprob: -4.323298931121826
    7. 'val' → logprob: -4.823298931121826
    8. 'c' → logprob: -5.073298931121826
    9. 'cost' → logprob: -6.073298931121826
    10. 'mont' → logprob: -6.198298931121826

Token 372: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28643086552619934
    2. ' en' → logprob: -1.661430835723877
    3. ',' → logprob: -3.661430835723877
    4. 'en' → logprob: -4.036430835723877
    5. ' )' → logprob: -4.786430835723877
    6. '),' → logprob: -6.411430835723877
    7. ' de' → logprob: -6.536430835723877
    8. '_en' → logprob: -7.161430835723877
    9. '<|end|>' → logprob: -7.161430835723877
    10. ')d' → logprob: -7.911430835723877

Token 373: ' temps' (ID: 11160)
  Prédit: 'argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argent' → logprob: -0.13233956694602966
    2. 'temps' → logprob: -2.7573394775390625
    3. ' argent' → logprob: -3.1323394775390625
    4. 'time' → logprob: -5.3823394775390625
    5. 'money' → logprob: -5.6323394775390625
    6. 'arg' → logprob: -5.7573394775390625
    7. 'pi' → logprob: -6.2573394775390625
    8. ' temps' → logprob: -7.0073394775390625
    9. '```' → logprob: -7.5073394775390625
    10. ''argent' → logprob: -8.007339477539062

Token 374: ' associé' (ID: 152099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034818740095943213
    2. ',' → logprob: -5.878481864929199
    3. ')
' → logprob: -8.1284818649292
    4. ' )' → logprob: -8.5034818649292
    5. '),' → logprob: -9.5034818649292
    6. '))' → logprob: -10.3784818649292
    7. ')\' → logprob: -11.3784818649292
    8. ' ,' → logprob: -12.0034818649292
    9. ' ' → logprob: -12.5034818649292
    10. '[' → logprob: -12.6284818649292

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003624308155849576
    2. ',' → logprob: -5.753624439239502
    3. ')
' → logprob: -8.128623962402344
    4. ' )' → logprob: -10.003623962402344
    5. '),' → logprob: -10.003623962402344
    6. 's' → logprob: -10.878623962402344
    7. '))' → logprob: -11.753623962402344
    8. ')=' → logprob: -12.753623962402344
    9. ']' → logprob: -13.003623962402344
    10. '#' → logprob: -13.003623962402344

Token 376: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.537868779967539e-06
    2. 'c' → logprob: -13.250008583068848
    3. 'CD' → logprob: -13.250008583068848
    4. '_cd' → logprob: -13.625008583068848
    5. 'Cd' → logprob: -13.625008583068848
    6. 'd' → logprob: -14.250008583068848
    7. ' cd' → logprob: -14.250008583068848
    8. 'cdn' → logprob: -15.000008583068848
    9. '	cd' → logprob: -15.375008583068848
    10. 'change' → logprob: -15.625008583068848

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890289276838303
    2. ' =' → logprob: -2.5789029598236084
    3. '=[]' → logprob: -11.453903198242188
    4. '=[]
' → logprob: -13.953903198242188
    5. '=[' → logprob: -14.703903198242188
    6. '=

' → logprob: -15.078903198242188
    7. '＝' → logprob: -15.453903198242188
    8. ',' → logprob: -16.078903198242188
    9. '=
' → logprob: -16.203903198242188
    10. 's' → logprob: -16.328903198242188

Token 378: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08306267857551575
    2. ' [' → logprob: -3.3330626487731934
    3. '[int' → logprob: -4.583062648773193
    4. '[i' → logprob: -4.833062648773193
    5. '[n' → logprob: -4.833062648773193
    6. '[]' → logprob: -4.833062648773193
    7. '[list' → logprob: -7.083062648773193
    8. '[x' → logprob: -7.208062648773193
    9. '[input' → logprob: -7.208062648773193
    10. '[class' → logprob: -7.333062648773193

Token 379: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0018936526030302048
    2. ' tuple' → logprob: -7.126893520355225
    3. '(tuple' → logprob: -7.626893520355225
    4. '(' → logprob: -7.876893520355225
    5. 'list' → logprob: -9.001893997192383
    6. '
' → logprob: -10.501893997192383
    7. 'None' → logprob: -10.751893997192383
    8. 'map' → logprob: -11.751893997192383
    9. '()' → logprob: -11.751893997192383
    10. ']' → logprob: -11.751893997192383

Token 380: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.226628895296017e-06
    2. 'map' → logprob: -12.250007629394531
    3. '(' → logprob: -13.125007629394531
    4. '(int' → logprob: -15.375007629394531
    5. '()' → logprob: -16.50000762939453
    6. '(m' → logprob: -17.50000762939453
    7. '	map' → logprob: -17.62500762939453
    8. '(
' → logprob: -17.75000762939453
    9. ' map' → logprob: -18.12500762939453
    10. ']' → logprob: -18.12500762939453

Token 381: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006446453626267612
    2. 'int' → logprob: -7.375644683837891
    3. ',int' → logprob: -12.12564468383789
    4. '(' → logprob: -12.62564468383789
    5. '<int' → logprob: -12.62564468383789
    6. '[int' → logprob: -12.87564468383789
    7. ']int' → logprob: -14.12564468383789
    8. ' int' → logprob: -14.12564468383789
    9. '(
' → logprob: -14.50064468383789
    10. ')' → logprob: -14.62564468383789

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029866192489862442
    2. ',input' → logprob: -3.5298662185668945
    3. '(input' → logprob: -9.904866218566895
    4. 'input' → logprob: -10.029866218566895
    5. ' ,' → logprob: -10.904866218566895
    6. '(' → logprob: -13.404866218566895
    7. '   ' → logprob: -14.529866218566895
    8. ' (' → logprob: -14.779866218566895
    9. ' ' → logprob: -15.154866218566895
    10. '
' → logprob: -15.904866218566895

Token 383: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003362966235727072
    2. ' input' → logprob: -8.000336647033691
    3. '(input' → logprob: -14.500336647033691
    4. ')' → logprob: -15.750336647033691
    5. ',input' → logprob: -16.875335693359375
    6. '   ' → logprob: -18.000335693359375
    7. '_input' → logprob: -18.250335693359375
    8. '	input' → logprob: -18.375335693359375
    9. '=input' → logprob: -18.500335693359375
    10. ' ' → logprob: -18.500335693359375

Token 384: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.630610641877865e-06
    2. '()' → logprob: -12.250006675720215
    3. ' ().' → logprob: -13.375006675720215
    4. '(' → logprob: -15.875006675720215
    5. '.' → logprob: -17.1250057220459
    6. '()
' → logprob: -18.1250057220459
    7. '.readline' → logprob: -18.3750057220459
    8. '.split' → logprob: -19.1250057220459
    9. ' ' → logprob: -19.2500057220459
    10. ')' → logprob: -19.3750057220459

Token 385: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -15.000000953674316
    3. 'strip' → logprob: -15.250000953674316
    4. 'rstrip' → logprob: -17.5
    5. 'spl' → logprob: -19.0
    6. '(split' → logprob: -19.125
    7. 'read' → logprob: -19.375
    8. '.split' → logprob: -20.75
    9. 'startswith' → logprob: -22.625
    10. '_split' → logprob: -22.875

Token 386: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00464776111766696
    2. '))' → logprob: -6.004647731781006
    3. '()))
' → logprob: -6.754647731781006
    4. '()' → logprob: -7.004647731781006
    5. '().' → logprob: -10.004648208618164
    6. '(' → logprob: -11.129648208618164
    7. '())' → logprob: -11.254648208618164
    8. '()
' → logprob: -11.629648208618164
    9. '())).' → logprob: -12.504648208618164
    10. '())))' → logprob: -13.004648208618164

Token 387: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025458165910094976
    2. 'for' → logprob: -6.2525458335876465
    3. ')' → logprob: -7.7525458335876465
    4. ' for' → logprob: -8.627545356750488
    5. ' ()' → logprob: -12.752545356750488
    6. '(' → logprob: -13.252545356750488
    7. ' ' → logprob: -13.627545356750488
    8. '())' → logprob: -13.752545356750488
    9. '   ' → logprob: -14.002545356750488
    10. '()
' → logprob: -15.252545356750488

Token 388: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007485234644263983
    2. ' range' → logprob: -5.257485389709473
    3. ' _' → logprob: -6.132485389709473
    4. 'range' → logprob: -10.007485389709473
    5. '_range' → logprob: -10.507485389709473
    6. '(range' → logprob: -12.882485389709473
    7. ' i' → logprob: -14.257485389709473
    8. ' ' → logprob: -14.632485389709473
    9. 'i' → logprob: -14.632485389709473
    10. ' in' → logprob: -14.632485389709473

Token 389: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004951951093971729
    2. ' range' → logprob: -6.0049519538879395
    3. 'in' → logprob: -6.2549519538879395
    4. ' in' → logprob: -7.5049519538879395
    5. ' ' → logprob: -14.004951477050781
    6. '(range' → logprob: -15.004951477050781
    7. 'x' → logprob: -15.629951477050781
    8. '```' → logprob: -16.00495147705078
    9. '  ' → logprob: -16.12995147705078
    10. '
' → logprob: -16.12995147705078

Token 390: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019299437990412116
    2. ' range' → logprob: -6.251929759979248
    3. '(range' → logprob: -13.626930236816406
    4. '	range' → logprob: -16.876930236816406
    5. 'r' → logprob: -17.251930236816406
    6. 'rang' → logprob: -17.501930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '
' → logprob: -18.251930236816406
    9. '  ' → logprob: -18.751930236816406
    10. '   ' → logprob: -18.751930236816406

Token 391: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2842308680992573e-05
    2. '(' → logprob: -11.500022888183594
    3. '(range' → logprob: -11.750022888183594
    4. ' (' → logprob: -12.750022888183594
    5. 'n' → logprob: -14.250022888183594
    6. 'range' → logprob: -14.500022888183594
    7. ' range' → logprob: -14.875022888183594
    8. '(
' → logprob: -15.250022888183594
    9. ' n' → logprob: -16.875022888183594
    10. '(nx' → logprob: -18.750022888183594

Token 392: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011408114805817604
    2. ')' → logprob: -7.251140594482422
    3. ']' → logprob: -7.751140594482422
    4. ')]
' → logprob: -15.126140594482422
    5. '])' → logprob: -16.126140594482422
    6. ' )' → logprob: -16.501140594482422
    7. ')],' → logprob: -16.751140594482422
    8. ')])' → logprob: -17.126140594482422
    9. ')].' → logprob: -17.501140594482422
    10. '))' → logprob: -17.626140594482422

Token 393: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19554172456264496
    2. '#' → logprob: -1.8205417394638062
    3. 'distance' → logprob: -4.445541858673096
    4. 'dp' → logprob: -6.070541858673096
    5. 'import' → logprob: -7.195541858673096
    6. '
' → logprob: -7.945541858673096
    7. 'time' → logprob: -8.695541381835938
    8. 'times' → logprob: -9.070541381835938
    9. 'cost' → logprob: -10.445541381835938
    10. 'd' → logprob: -10.445541381835938

Token 394: ' Cré' (ID: 109203)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1180272325873375
    2. '#' → logprob: -2.2430272102355957
    3. 'distance' → logprob: -6.118027210235596
    4. 'dp' → logprob: -6.118027210235596
    5. 'def' → logprob: -7.868027210235596
    6. 'import' → logprob: -8.743027687072754
    7. 'times' → logprob: -9.743027687072754
    8. 'd' → logprob: -9.993027687072754
    9. 'time' → logprob: -10.243027687072754
    10. 'max' → logprob: -11.118027687072754

Token 395: 'ation' (ID: 387)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3577296733856201
    2. 'ance' → logprob: -1.4827296733856201
    3. 'ation' → logprob: -1.9827296733856201
    4. 'd' → logprob: -2.35772967338562
    5. 'al' → logprob: -2.48272967338562
    6. 'ar' → logprob: -3.10772967338562
    7. 'distance' → logprob: -3.35772967338562
    8. 'u' → logprob: -3.48272967338562
    9. 'paration' → logprob: -4.107729911804199
    10. 'istance' → logprob: -4.232729911804199

Token 396: ' et' (ID: 859)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6119234561920166
    2. '(' → logprob: -1.1119234561920166
    3. '(
' → logprob: -2.9869234561920166
    4. 'd' → logprob: -4.2369232177734375
    5. 'distance' → logprob: -4.4869232177734375
    6. '#' → logprob: -4.6119232177734375
    7. 'des' → logprob: -5.2369232177734375
    8. 'de' → logprob: -5.3619232177734375
    9. '_dist' → logprob: -5.4869232177734375
    10. '(dist' → logprob: -5.4869232177734375

Token 397: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.1717182844877243
    2. 'import' → logprob: -2.6717183589935303
    3. 'init' → logprob: -3.4217183589935303
    4. 'dist' → logprob: -3.7967183589935303
    5. '#' → logprob: -4.421718120574951
    6. 'def' → logprob: -5.046718120574951
    7. ' initialization' → logprob: -5.421718120574951
    8. ' initial' → logprob: -5.796718120574951
    9. 'allocation' → logprob: -6.046718120574951
    10. '
' → logprob: -6.546718120574951

Token 398: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -1.1812913417816162
    2. 'dist' → logprob: -1.4312913417816162
    3. 'ial' → logprob: -1.9312913417816162
    4. 'distance' → logprob: -2.306291341781616
    5. 'isation' → logprob: -2.431291341781616
    6. 'al' → logprob: -3.806291341781616
    7. 'ialize' → logprob: -3.806291341781616
    8. 'max' → logprob: -4.181291580200195
    9. '_distance' → logprob: -4.181291580200195
    10. 'ize' → logprob: -4.431291580200195

Token 399: ' de' (ID: 334)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0022002172190696
    2. 'distance' → logprob: -6.627200126647949
    3. '#' → logprob: -8.25220012664795
    4. 'dp' → logprob: -8.37720012664795
    5. ' dist' → logprob: -9.00220012664795
    6. 'd' → logprob: -9.75220012664795
    7. ' of' → logprob: -9.87720012664795
    8. 'dis' → logprob: -10.00220012664795
    9. 'de' → logprob: -10.25220012664795
    10. 'of' → logprob: -10.37720012664795

Token 400: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0023876605555415154
    2. 'distance' → logprob: -6.627387523651123
    3. ' dist' → logprob: -7.252387523651123
    4. 'dp' → logprob: -8.877388000488281
    5. '#' → logprob: -9.377388000488281
    6. 'la' → logprob: -9.752388000488281
    7. ' distances' → logprob: -10.752388000488281
    8. ' la' → logprob: -11.002388000488281
    9. 'd' → logprob: -11.127388000488281
    10. 'time' → logprob: -12.627388000488281

Token 401: ' table' (ID: 3293)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011986821191385388
    2. 'distance' → logprob: -7.251198768615723
    3. 'dp' → logprob: -8.251198768615723
    4. '#' → logprob: -8.626198768615723
    5. 'times' → logprob: -10.876198768615723
    6. 'd' → logprob: -11.751198768615723
    7. 'time' → logprob: -12.001198768615723
    8. 'cost' → logprob: -12.751198768615723
    9. 'temps' → logprob: -12.751198768615723
    10. ' dist' → logprob: -13.126198768615723

Token 402: ' dp' (ID: 21546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01006346009671688
    2. 'dp' → logprob: -4.760063648223877
    3. 'distance' → logprob: -7.010063648223877
    4. 'd' → logprob: -8.760063171386719
    5. 'dis' → logprob: -9.010063171386719
    6. ' dist' → logprob: -9.260063171386719
    7. '#' → logprob: -9.635063171386719
    8. 'time' → logprob: -10.010063171386719
    9. 'cost' → logprob: -11.135063171386719
    10. 'times' → logprob: -11.635063171386719

Token 403: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025141829624772072
    2. '=' → logprob: -3.775141716003418
    3. 'dp' → logprob: -6.275141716003418
    4. '_dp' → logprob: -12.775141716003418
    5. ' =
' → logprob: -13.025141716003418
    6. ' dp' → logprob: -13.150141716003418
    7. ']' → logprob: -13.900141716003418
    8. '=
' → logprob: -13.900141716003418
    9. 'dist' → logprob: -14.400141716003418
    10. '
' → logprob: -14.650141716003418

Token 404: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00014180023572407663
    2. '[[' → logprob: -9.375142097473145
    3. ' dp' → logprob: -9.875142097473145
    4. 'import' → logprob: -13.125142097473145
    5. 'INF' → logprob: -13.500142097473145
    6. 'dist' → logprob: -13.625142097473145
    7. '[' → logprob: -15.375142097473145
    8. ' [[' → logprob: -15.625142097473145
    9. 'd' → logprob: -15.625142097473145
    10. 'distance' → logprob: -16.000141143798828

Token 405: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006697862991131842
    2. '#' → logprob: -7.500669956207275
    3. 'import' → logprob: -9.750669479370117
    4. ' dp' → logprob: -10.250669479370117
    5. 'dist' → logprob: -11.125669479370117
    6. 'INF' → logprob: -12.625669479370117
    7. 'distance' → logprob: -13.250669479370117
    8. 'd' → logprob: -13.375669479370117
    9. 'from' → logprob: -14.125669479370117
    10. 'time' → logprob: -14.750669479370117

Token 406: '[v' (ID: 36561)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017043406842276454
    2. '=' → logprob: -6.376704216003418
    3. '=[' → logprob: -13.751704216003418
    4. ' =[' → logprob: -15.501704216003418
    5. '=[[' → logprob: -15.501704216003418
    6. ' =
' → logprob: -15.626704216003418
    7. 'dp' → logprob: -15.876704216003418
    8. ' ' → logprob: -16.001705169677734
    9. '[' → logprob: -16.251705169677734
    10. ']' → logprob: -17.251705169677734

Token 407: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38986191153526306
    2. '][' → logprob: -1.1398619413375854
    3. ']=' → logprob: -6.514862060546875
    4. '=' → logprob: -7.889862060546875
    5. ' =' → logprob: -8.389862060546875
    6. ' ]' → logprob: -9.014862060546875
    7. 'money' → logprob: -9.014862060546875
    8. ' ][' → logprob: -9.264862060546875
    9. ',' → logprob: -9.389862060546875
    10. '_money' → logprob: -9.639862060546875

Token 408: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.7128627896308899
    2. 's' → logprob: -0.8378627896308899
    3. 'j' → logprob: -3.962862730026245
    4. 'a' → logprob: -3.962862730026245
    5. 'w' → logprob: -4.837862968444824
    6. 'k' → logprob: -5.212862968444824
    7. 'c' → logprob: -5.337862968444824
    8. ']' → logprob: -5.712862968444824
    9. 'x' → logprob: -5.712862968444824
    10. 'i' → logprob: -6.462862968444824

Token 409: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000859531108289957
    2. ' ]' → logprob: -7.37585973739624
    3. '][' → logprob: -9.000859260559082
    4. ']=' → logprob: -9.500859260559082
    5. ']
' → logprob: -11.375859260559082
    6. 's' → logprob: -11.875859260559082
    7. '],' → logprob: -12.375859260559082
    8. '=' → logprob: -12.500859260559082
    9. ']:' → logprob: -13.375859260559082
    10. ' =' → logprob: -13.875859260559082

Token 410: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021205991506577
    2. '=' → logprob: -2.3502120971679688
    3. ']' → logprob: -13.225212097167969
    4. '=[' → logprob: -13.350212097167969
    5. ' =[' → logprob: -13.850212097167969
    6. ']=' → logprob: -15.600212097167969
    7. '=[]' → logprob: -15.725212097167969
    8. '=[[' → logprob: -15.850212097167969
    9. ',' → logprob: -15.975212097167969
    10. ' =
' → logprob: -16.10021209716797

Token 411: 'i' (ID: 72)
  Prédit: 'ains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.12009190768003464
    2. 'ient' → logprob: -3.1200919151306152
    3. 'in' → logprob: -3.3700919151306152
    4. 'iens' → logprob: -3.7450919151306152
    5. 'inue' → logprob: -5.120091915130615
    6. 'ients' → logprob: -6.370091915130615
    7. ' =' → logprob: -6.995091915130615
    8. 'i' → logprob: -7.245091915130615
    9. '=' → logprob: -7.870091915130615
    10. 'inu' → logprob: -8.120091438293457

Token 412: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6449488997459412
    2. 'n' → logprob: -1.894948959350586
    3. 'nt' → logprob: -2.269948959350586
    4. 't' → logprob: -3.144948959350586
    5. 'nent' → logprob: -3.144948959350586
    6. 'nu' → logprob: -3.269948959350586
    7. 'ues' → logprob: -3.394948959350586
    8. 'nds' → logprob: -4.269948959350586
    9. 'nts' → logprob: -4.394948959350586
    10. 'ns' → logprob: -4.644948959350586

Token 413: ' le' (ID: 505)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.20754221081733704
    2. ' the' → logprob: -2.0825421810150146
    3. 'the' → logprob: -3.7075421810150146
    4. ' INF' → logprob: -4.457542419433594
    5. 'inf' → logprob: -4.832542419433594
    6. 'le' → logprob: -5.082542419433594
    7. ' le' → logprob: -5.582542419433594
    8. ' la' → logprob: -5.707542419433594
    9. 'l' → logprob: -6.082542419433594
    10. ' l' → logprob: -7.332542419433594

Token 414: ' coût' (ID: 73109)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.16241692006587982
    2. 'minimum' → logprob: -2.037416934967041
    3. 'plus' → logprob: -5.037416934967041
    4. 'minimal' → logprob: -5.287416934967041
    5. 'float' → logprob: -6.162416934967041
    6. 'min' → logprob: -6.287416934967041
    7. 'tem' → logprob: -6.412416934967041
    8. ' temps' → logprob: -7.662416934967041
    9. 'moins' → logprob: -8.162416458129883
    10. ' minimum' → logprob: -8.162416458129883

Token 415: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41266563534736633
    2. ' en' → logprob: -2.037665605545044
    3. 'min' → logprob: -2.912665605545044
    4. '_min' → logprob: -3.412665605545044
    5. 'en' → logprob: -3.912665605545044
    6. 'minimum' → logprob: -4.037665843963623
    7. 'temps' → logprob: -4.287665843963623
    8. '_' → logprob: -4.537665843963623
    9. '=' → logprob: -4.912665843963623
    10. '_v' → logprob: -5.162665843963623

Token 416: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5332399606704712
    2. '_time' → logprob: -2.1582398414611816
    3. ')' → logprob: -3.1582398414611816
    4. ' en' → logprob: -3.2832398414611816
    5. 'time' → logprob: -3.4082398414611816
    6. '_' → logprob: -3.4082398414611816
    7. '[v' → logprob: -3.4082398414611816
    8. '=' → logprob: -3.6582398414611816
    9. 'v' → logprob: -4.283239841461182
    10. '[' → logprob: -4.658239841461182

Token 417: ' atteindre' (ID: 95734)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.5104231834411621
    2. 'atte' → logprob: -1.885423183441162
    3. 're' → logprob: -2.510423183441162
    4. 'se' → logprob: -2.510423183441162
    5. ' aller' → logprob: -3.635423183441162
    6. ' se' → logprob: -4.010423183441162
    7. ' atteindre' → logprob: -4.510423183441162
    8. 'arr' → logprob: -4.635423183441162
    9. 'v' → logprob: -4.760423183441162
    10. 'all' → logprob: -5.510423183441162

Token 418: ' le' (ID: 505)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3871403932571411
    2. ' v' → logprob: -1.1371403932571411
    3. '(v' → logprob: -8.637140274047852
    4. ' (' → logprob: -10.012140274047852
    5. '[v' → logprob: -10.262140274047852
    6. 'vertex' → logprob: -12.387140274047852
    7. ' vertex' → logprob: -13.262140274047852
    8. '
' → logprob: -13.762140274047852
    9. ',v' → logprob: -13.762140274047852
    10. ')v' → logprob: -14.262140274047852

Token 419: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.4910602271556854
    2. 'som' → logprob: -1.2410602569580078
    3. 'v' → logprob: -2.491060256958008
    4. 'vertex' → logprob: -4.616060256958008
    5. ' som' → logprob: -6.241060256958008
    6. 'vo' → logprob: -7.491060256958008
    7. ' v' → logprob: -7.491060256958008
    8. 'summ' → logprob: -7.616060256958008
    9. ' somm' → logprob: -7.866060256958008
    10. 'vert' → logprob: -7.991060256958008

Token 420: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06436057388782501
    2. ' v' → logprob: -2.8143606185913086
    3. ',' → logprob: -7.064360618591309
    4. '[v' → logprob: -7.064360618591309
    5. ',v' → logprob: -8.064360618591309
    6. '
' → logprob: -8.439360618591309
    7. ' =' → logprob: -9.814360618591309
    8. '(v' → logprob: -10.564360618591309
    9. ')' → logprob: -11.689360618591309
    10. ',
' → logprob: -11.939360618591309

Token 421: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011296437121927738
    2. '=' → logprob: -4.636296272277832
    3. 'dp' → logprob: -7.011296272277832
    4. ',' → logprob: -8.136296272277832
    5. '=[' → logprob: -9.511296272277832
    6. '][' → logprob: -9.886296272277832
    7. 'money' → logprob: -10.386296272277832
    8. ' with' → logprob: -10.636296272277832
    9. ' dp' → logprob: -10.761296272277832
    10. ' =[' → logprob: -10.761296272277832

Token 422: ' '' (ID: 461)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.18007592856884003
    2. ' money' → logprob: -1.8050758838653564
    3. 'l' → logprob: -9.180075645446777
    4. 'amount' → logprob: -9.555075645446777
    5. ''argent' → logprob: -10.805075645446777
    6. ' l' → logprob: -10.930075645446777
    7. 'argent' → logprob: -11.055075645446777
    8. 'une' → logprob: -11.180075645446777
    9. 'exact' → logprob: -11.180075645446777
    10. 'le' → logprob: -11.180075645446777

Token 423: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.002482315758243203
    2. ' money' → logprob: -6.0024824142456055
    3. ''argent' → logprob: -13.002482414245605
    4. '_money' → logprob: -13.627482414245605
    5. 'amount' → logprob: -13.752482414245605
    6. '```' → logprob: -14.752482414245605
    7. 'argent' → logprob: -14.877482414245605
    8. 'm' → logprob: -15.127482414245605
    9. 'mon' → logprob: -15.377482414245605
    10. 'mo' → logprob: -16.12748146057129

Token 424: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4807881712913513
    2. ']'' → logprob: -1.105788230895996
    3. ']' → logprob: -3.730788230895996
    4. '']' → logprob: -4.730788230895996
    5. ' '' → logprob: -5.480788230895996
    6. ')'' → logprob: -5.855788230895996
    7. ' ]' → logprob: -6.230788230895996
    8. '+' → logprob: -6.355788230895996
    9. '_money' → logprob: -6.730788230895996
    10. ' +' → logprob: -6.855788230895996

Token 425: ' pièces' (ID: 49165)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014607553370296955
    2. '=' → logprob: -4.2646074295043945
    3. ']' → logprob: -7.8896074295043945
    4. 'dp' → logprob: -10.889607429504395
    5. ']=' → logprob: -11.264607429504395
    6. '=[' → logprob: -11.639607429504395
    7. 's' → logprob: -12.389607429504395
    8. ' ' → logprob: -12.514607429504395
    9. ' =
' → logprob: -12.764607429504395
    10. '=[[' → logprob: -13.139607429504395

Token 426: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1431683599948883
    2. ' =' → logprob: -2.1431684494018555
    3. '=' → logprob: -4.1431684494018555
    4. '_dp' → logprob: -9.518168449401855
    5. ' dp' → logprob: -9.643168449401855
    6. ']' → logprob: -10.018168449401855
    7. '=
' → logprob: -10.518168449401855
    8. ' =
' → logprob: -11.268168449401855
    9. '
' → logprob: -12.518168449401855
    10. 'd' → logprob: -13.143168449401855

Token 427: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: 0.0
    2. 'import' → logprob: -17.125
    3. ' dp' → logprob: -18.5
    4. 'dt' → logprob: -20.125
    5. '```' → logprob: -20.75
    6. '
' → logprob: -20.875
    7. 'from' → logprob: -20.875
    8. 'd' → logprob: -21.375
    9. 'DP' → logprob: -22.5
    10. '	dp' → logprob: -22.875

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023249205201864243
    2. '=' → logprob: -3.7732491493225098
    3. ']' → logprob: -13.773249626159668
    4. ')' → logprob: -13.898249626159668
    5. ',' → logprob: -14.773249626159668
    6. '=[' → logprob: -15.023249626159668
    7. '[' → logprob: -15.273249626159668
    8. ' ' → logprob: -15.398249626159668
    9. '=[[' → logprob: -15.523249626159668
    10. ' =[' → logprob: -15.898249626159668

Token 429: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.250008583068848
    3. ' [[' → logprob: -12.500008583068848
    4. '[
' → logprob: -19.75000762939453
    5. '[n' → logprob: -20.37500762939453
    6. '[['' → logprob: -20.75000762939453
    7. '([[' → logprob: -21.87500762939453
    8. '[(' → logprob: -22.12500762939453
    9. ' [' → logprob: -22.12500762939453
    10. '[{' → logprob: -23.00000762939453

Token 430: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.1888679839321412e-05
    2. 'inf' → logprob: -10.750021934509277
    3. 'float' → logprob: -15.125021934509277
    4. ' INF' → logprob: -17.12502098083496
    5. '_INF' → logprob: -18.00002098083496
    6. 'Inf' → logprob: -18.37502098083496
    7. 'IN' → logprob: -20.25002098083496
    8. '0' → logprob: -21.00002098083496
    9. '   ' → logprob: -21.62502098083496
    10. '-INF' → logprob: -22.12502098083496

Token 431: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012705296277999878
    2. ' for' → logprob: -4.512705326080322
    3. 'for' → logprob: -7.512705326080322
    4. ']*(' → logprob: -7.637705326080322
    5. ']*' → logprob: -7.762705326080322
    6. ' ]' → logprob: -8.887704849243164
    7. ')' → logprob: -9.762704849243164
    8. ']+' → logprob: -13.012704849243164
    9. ' ' → logprob: -13.637704849243164
    10. '+' → logprob: -13.887704849243164

Token 432: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40250563621520996
    2. 'for' → logprob: -1.90250563621521
    3. ' for' → logprob: -1.90250563621521
    4. ']*' → logprob: -3.52750563621521
    5. ']*(' → logprob: -5.652505874633789
    6. ']+' → logprob: -10.277505874633789
    7. ' ]' → logprob: -11.027505874633789
    8. '*' → logprob: -11.152505874633789
    9. ')' → logprob: -11.402505874633789
    10. '   ' → logprob: -14.152505874633789

Token 433: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.0006329743773676455
    2. '(M' → logprob: -7.5006327629089355
    3. ' (' → logprob: -10.000633239746094
    4. '(' → logprob: -11.375633239746094
    5. '(max' → logprob: -12.000633239746094
    6. '(Max' → logprob: -12.375633239746094
    7. '(s' → logprob: -12.750633239746094
    8. '((' → logprob: -13.000633239746094
    9. '(S' → logprob: -13.250633239746094
    10. '   ' → logprob: -13.500633239746094

Token 434: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.10028333216905594
    2. '(MAX' → logprob: -2.35028338432312
    3. ' MAX' → logprob: -10.3502836227417
    4. '250' → logprob: -10.7252836227417
    5. '(M' → logprob: -11.9752836227417
    6. '
' → logprob: -12.3502836227417
    7. '[MAX' → logprob: -12.3502836227417
    8. '/MAX' → logprob: -13.3502836227417
    9. '(Max' → logprob: -13.4752836227417
    10. ' (' → logprob: -13.6002836227417

Token 435: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -1.6240566083070007e-06
    2. '_money' → logprob: -14.125001907348633
    3. '_MAX' → logprob: -14.375001907348633
    4. '_' → logprob: -16.250001907348633
    5. ' _' → logprob: -17.500001907348633
    6. '_MON' → logprob: -17.750001907348633
    7. ')_' → logprob: -17.750001907348633
    8. '_m' → logprob: -18.000001907348633
    9. '_AMOUNT' → logprob: -18.125001907348633
    10. 'Money' → logprob: -18.500001907348633

Token 436: 'ONEY' (ID: 88207)
  Prédit: 'ONEY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONEY' → logprob: -0.006434098817408085
    2. 'M' → logprob: -5.381433963775635
    3. 'NEY' → logprob: -6.381433963775635
    4. 'oney' → logprob: -9.881434440612793
    5. '```' → logprob: -10.131434440612793
    6. 'ONE' → logprob: -11.756434440612793
    7. ' MONEY' → logprob: -12.006434440612793
    8. 'ONY' → logprob: -12.631434440612793
    9. 'Money' → logprob: -13.131434440612793
    10. '_M' → logprob: -13.506434440612793

Token 437: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141363143920898
    2. ' +' → logprob: -1.701413631439209
    3. ' ' → logprob: -14.951414108276367
    4. '+
' → logprob: -16.326414108276367
    5. '
' → logprob: -17.326414108276367
    6. ' ' → logprob: -17.451414108276367
    7. ' +
' → logprob: -17.701414108276367
    8. '   ' → logprob: -18.326414108276367
    9. '＋' → logprob: -18.826414108276367
    10. ')' → logprob: -18.951414108276367

Token 438: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. '
' → logprob: -18.375017166137695
    5. '2' → logprob: -18.375017166137695
    6. ')' → logprob: -18.500017166137695
    7. '１' → logprob: -19.000017166137695
    8. '501' → logprob: -19.000017166137695
    9. '250' → logprob: -19.125017166137695
    10. '01' → logprob: -19.375017166137695

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015455135144293308
    2. ' )' → logprob: -8.875154495239258
    3. ')]' → logprob: -11.250154495239258
    4. ')
' → logprob: -14.000154495239258
    5. ']' → logprob: -15.500154495239258
    6. '))' → logprob: -15.500154495239258
    7. '+' → logprob: -15.875154495239258
    8. ')

' → logprob: -16.625154495239258
    9. ')])' → logprob: -16.750154495239258
    10. '),' → logprob: -17.000154495239258

Token 440: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12728525698184967
    2. 'for' → logprob: -2.1272852420806885
    3. ']' → logprob: -8.00228500366211
    4. ')' → logprob: -11.00228500366211
    5. ' ' → logprob: -12.87728500366211
    6. ' ]' → logprob: -13.00228500366211
    7. '	for' → logprob: -14.25228500366211
    8. ')]' → logprob: -15.75228500366211
    9. '   ' → logprob: -16.62728500366211
    10. '
' → logprob: -17.12728500366211

Token 441: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.026451239362359047
    2. '_' → logprob: -3.651451349258423
    3. ' range' → logprob: -9.526451110839844
    4. '_v' → logprob: -10.651451110839844
    5. ' ' → logprob: -10.776451110839844
    6. 'v' → logprob: -10.776451110839844
    7. ' v' → logprob: -12.526451110839844
    8. ' in' → logprob: -12.526451110839844
    9. '_range' → logprob: -12.776451110839844
    10. 'range' → logprob: -13.401451110839844

Token 442: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25262677669525146
    2. 'in' → logprob: -1.5026267766952515
    3. 'range' → logprob: -7.377626895904541
    4. ' ' → logprob: -10.502626419067383
    5. '_' → logprob: -10.877626419067383
    6. ' range' → logprob: -11.127626419067383
    7. 'v' → logprob: -12.002626419067383
    8. 'i' → logprob: -13.002626419067383
    9. ' _' → logprob: -13.877626419067383
    10. 'n' → logprob: -14.877626419067383

Token 443: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '_' → logprob: -18.376502990722656
    4. '_range' → logprob: -19.126502990722656
    5. '	range' → logprob: -19.376502990722656
    6. '
' → logprob: -19.751502990722656
    7. '(range' → logprob: -19.876502990722656
    8. ' ' → logprob: -20.626502990722656
    9. '   ' → logprob: -21.501502990722656
    10. '  ' → logprob: -21.501502990722656

Token 444: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9020732045173645
    2. 'range' → logprob: -1.1520731449127197
    3. '(n' → logprob: -1.4020731449127197
    4. '(range' → logprob: -3.5270731449127197
    5. 'n' → logprob: -5.902073383331299
    6. ' n' → logprob: -10.15207290649414
    7. '(' → logprob: -10.65207290649414
    8. ' (' → logprob: -12.15207290649414
    9. '_range' → logprob: -12.40207290649414
    10. '	range' → logprob: -12.52707290649414

Token 445: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.00000286102295
    3. ']' → logprob: -14.75000286102295
    4. ' )' → logprob: -14.87500286102295
    5. ')]
' → logprob: -15.62500286102295
    6. ')],' → logprob: -16.625003814697266
    7. ')].' → logprob: -17.250003814697266
    8. ')][' → logprob: -17.375003814697266
    9. ')]

' → logprob: -17.625003814697266
    10. ')]
' → logprob: -18.250003814697266

Token 446: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0206720617134124e-05
    2. ' dp' → logprob: -12.00001049041748
    3. '
' → logprob: -13.25001049041748
    4. 'import' → logprob: -14.00001049041748
    5. 'dq' → logprob: -15.25001049041748
    6. 'for' → logprob: -15.37501049041748
    7. '_dp' → logprob: -15.50001049041748
    8. 'heap' → logprob: -16.375009536743164
    9. ')' → logprob: -16.375009536743164
    10. '	dp' → logprob: -16.375009536743164

Token 447: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.204720582696609e-05
    2. ' dp' → logprob: -11.000052452087402
    3. '
' → logprob: -11.750052452087402
    4. 'import' → logprob: -11.750052452087402
    5. 's' → logprob: -11.875052452087402
    6. ']' → logprob: -12.375052452087402
    7. 'dq' → logprob: -13.250052452087402
    8. ')' → logprob: -13.750052452087402
    9. 'heap' → logprob: -13.875052452087402
    10. 'for' → logprob: -13.875052452087402

Token 448: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00043686782009899616
    2. 'for' → logprob: -8.500436782836914
    3. ' dp' → logprob: -8.625436782836914
    4. 's' → logprob: -10.000436782836914
    5. '
' → logprob: -12.125436782836914
    6. ' for' → logprob: -13.000436782836914
    7. '_dp' → logprob: -15.250436782836914
    8. 'd' → logprob: -16.000436782836914
    9. '0' → logprob: -16.125436782836914
    10. ' 
' → logprob: -16.250436782836914

Token 449: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1191583052277565
    2. ']' → logprob: -2.8691582679748535
    3. ' for' → logprob: -3.2441582679748535
    4. '[' → logprob: -5.6191582679748535
    5. ')' → logprob: -5.8691582679748535
    6. '][' → logprob: -5.8691582679748535
    7. ' ]' → logprob: -6.2441582679748535
    8. ' ' → logprob: -6.4941582679748535
    9. 's' → logprob: -7.4941582679748535
    10. 'v' → logprob: -7.4941582679748535

Token 450: ' un' (ID: 537)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.17601288855075836
    2. ' s' → logprob: -2.4260129928588867
    3. ' ' → logprob: -3.5510129928588867
    4. '1' → logprob: -4.176012992858887
    5. '
' → logprob: -4.176012992858887
    6. 's' → logprob: -5.051012992858887
    7. ' a' → logprob: -6.051012992858887
    8. '(s' → logprob: -6.926012992858887
    9. '(' → logprob: -7.051012992858887
    10. '   ' → logprob: -7.676012992858887

Token 451: ' offset' (ID: 8985)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09938737750053406
    2. ' ' → logprob: -2.4743874073028564
    3. ' )' → logprob: -5.974387168884277
    4. ')' → logprob: -5.974387168884277
    5. 's' → logprob: -6.474387168884277
    6. ' space' → logprob: -7.599387168884277
    7. '
' → logprob: -7.724387168884277
    8. 'space' → logprob: -7.724387168884277
    9. ' s' → logprob: -8.099387168884277
    10. '+' → logprob: -8.099387168884277

Token 452: ' pour' (ID: 1930)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2706170976161957
    2. ' for' → logprob: -2.3956170082092285
    3. 'for' → logprob: -2.6456170082092285
    4. 's' → logprob: -3.6456170082092285
    5. ' ]' → logprob: -3.8956170082092285
    6. ')' → logprob: -4.1456170082092285
    7. '+' → logprob: -5.5206170082092285
    8. ' ' → logprob: -6.0206170082092285
    9. ' s' → logprob: -6.6456170082092285
    10. '[' → logprob: -6.7706170082092285

Token 453: ' éviter' (ID: 64013)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3186905086040497
    2. 's' → logprob: -2.443690538406372
    3. 'l' → logprob: -2.693690538406372
    4. ' ' → logprob: -3.693690538406372
    5. ' éviter' → logprob: -4.068690299987793
    6. 'la' → logprob: -4.193690299987793
    7. '5' → logprob: -5.318690299987793
    8. 'le' → logprob: -5.443690299987793
    9. 'margin' → logprob: -5.568690299987793
    10. 'év' → logprob: -5.818690299987793

Token 454: ' tout' (ID: 5501)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.0300757884979248
    2. 'Index' → logprob: -1.2800757884979248
    3. ' index' → logprob: -1.9050757884979248
    4. ' des' → logprob: -2.655075788497925
    5. ' overflow' → logprob: -3.280075788497925
    6. ' Index' → logprob: -3.905075788497925
    7. ' d' → logprob: -4.155076026916504
    8. 'd' → logprob: -4.405076026916504
    9. 'des' → logprob: -4.530076026916504
    10. 'overflow' → logprob: -5.030076026916504

Token 455: ' déb' (ID: 37874)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.1901320368051529
    2. 'Index' → logprob: -1.8151320219039917
    3. ' index' → logprob: -5.065132141113281
    4. 'd' → logprob: -6.440132141113281
    5. 'overflow' → logprob: -6.565132141113281
    6. ' Index' → logprob: -7.815132141113281
    7. '_index' → logprob: -8.815132141113281
    8. ' ' → logprob: -9.565132141113281
    9. 's' → logprob: -9.690132141113281
    10. '#index' → logprob: -9.690132141113281

Token 456: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -2.0100624169572257e-05
    2. 'or' → logprob: -12.125020027160645
    3. 'orde' → logprob: -13.000020027160645
    4. '
' → logprob: -13.125020027160645
    5. 'order' → logprob: -13.125020027160645
    6. 'bord' → logprob: -13.625020027160645
    7. '[' → logprob: -13.875020027160645
    8. 'ordre' → logprob: -14.125020027160645
    9. 'ort' → logprob: -14.250020027160645
    10. 'o' → logprob: -14.375020027160645

Token 457: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.10170894861221313
    2. ')' → logprob: -3.4767088890075684
    3. ']' → logprob: -4.351708889007568
    4. 'er' → logprob: -4.476708889007568
    5. 'ment' → logprob: -4.726708889007568
    6. 'rement' → logprob: -5.351708889007568
    7. '+' → logprob: -5.476708889007568
    8. 'nement' → logprob: -5.851708889007568
    9. 'e' → logprob: -6.101708889007568
    10. 'ament' → logprob: -6.101708889007568

Token 458: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006983299273997545
    2. '
' → logprob: -5.006983280181885
    3. 's' → logprob: -8.756983757019043
    4. ' dp' → logprob: -10.131983757019043
    5. '
' → logprob: -10.881983757019043
    6. 'for' → logprob: -10.881983757019043
    7. ']' → logprob: -11.756983757019043
    8. '#' → logprob: -12.006983757019043
    9. '

' → logprob: -12.381983757019043
    10. '_dp' → logprob: -12.631983757019043

Token 459: ''ind' (ID: 82245)
  Prédit: ''argent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.15333761274814606
    2. ' money' → logprob: -3.1533377170562744
    3. 'money' → logprob: -3.7783377170562744
    4. 'index' → logprob: -4.028337478637695
    5. '’argent' → logprob: -4.528337478637695
    6. ')' → logprob: -4.528337478637695
    7. 'argent' → logprob: -4.653337478637695
    8. 's' → logprob: -4.778337478637695
    9. '_money' → logprob: -5.153337478637695
    10. 'indices' → logprob: -5.778337478637695

Token 460: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0009651767322793603
    2. 'ice' → logprob: -7.125965118408203
    3. 'ices' → logprob: -9.250965118408203
    4. 'exe' → logprob: -11.000965118408203
    5. 'e' → logprob: -11.125965118408203
    6. 'é' → logprob: -11.875965118408203
    7. 'екс' → logprob: -12.250965118408203
    8. 'dex' → logprob: -12.250965118408203
    9. 'exc' → logprob: -12.500965118408203
    10. 'exp' → logprob: -13.375965118408203

Token 461: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.537868779967539e-06
    2. ']' → logprob: -12.375008583068848
    3. ' dp' → logprob: -13.750008583068848
    4. 's' → logprob: -13.875008583068848
    5. ')' → logprob: -14.500008583068848
    6. 'dq' → logprob: -14.750008583068848
    7. '
' → logprob: -14.875008583068848
    8. '_dp' → logprob: -15.125008583068848
    9. 'import' → logprob: -15.875008583068848
    10. '```' → logprob: -16.00000762939453

Token 462: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001617035741219297
    2. 'import' → logprob: -8.750162124633789
    3. 'from' → logprob: -12.750162124633789
    4. ' dp' → logprob: -16.37516212463379
    5. '#' → logprob: -17.00016212463379
    6. 'heap' → logprob: -17.12516212463379
    7. 'pq' → logprob: -17.12516212463379
    8. 'dq' → logprob: -18.00016212463379
    9. '```' → logprob: -19.00016212463379
    10. '	dp' → logprob: -19.12516212463379

Token 463: '[' (ID: 58)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00046332005877047777
    2. '[' → logprob: -7.750463485717773
    3. 's' → logprob: -10.500463485717773
    4. '[n' → logprob: -12.875463485717773
    5. '[v' → logprob: -13.625463485717773
    6. '[start' → logprob: -14.875463485717773
    7. '[S' → logprob: -15.000463485717773
    8. '[i' → logprob: -16.000463485717773
    9. ' [' → logprob: -16.000463485717773
    10. '[src' → logprob: -16.750463485717773

Token 464: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7284245491027832
    2. '[s' → logprob: -1.2284245491027832
    3. '0' → logprob: -1.7284245491027832
    4. '[' → logprob: -3.228424549102783
    5. '][' → logprob: -5.353424549102783
    6. ']' → logprob: -7.478424549102783
    7. '
' → logprob: -8.103424072265625
    8. ' s' → logprob: -8.228424072265625
    9. ')' → logprob: -8.603424072265625
    10. ' [' → logprob: -8.853424072265625

Token 465: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017684244085103273
    2. '[s' → logprob: -9.125176429748535
    3. ' ][' → logprob: -10.125176429748535
    4. ']' → logprob: -10.875176429748535
    5. 's' → logprob: -12.375176429748535
    6. '
' → logprob: -13.000176429748535
    7. '   ' → logprob: -14.250176429748535
    8. '[' → logprob: -15.125176429748535
    9. ' ' → logprob: -15.375176429748535
    10. '(s' → logprob: -15.625176429748535

Token 466: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. ' s' → logprob: -16.125
    3. 'min' → logprob: -16.625
    4. '
' → logprob: -17.625
    5. '   ' → logprob: -18.75
    6. '_s' → logprob: -20.0
    7. '    
' → logprob: -21.0
    8. '	s' → logprob: -21.125
    9. ']' → logprob: -21.375
    10. ' ' → logprob: -21.5

Token 467: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030924470047466457
    2. ' ]' → logprob: -8.125308990478516
    3. ']=' → logprob: -11.250308990478516
    4. '=' → logprob: -16.500308990478516
    5. ']
' → logprob: -18.375308990478516
    6. ')' → logprob: -18.875308990478516
    7. ' ' → logprob: -19.125308990478516
    8. '']' → logprob: -19.125308990478516
    9. '`]' → logprob: -19.125308990478516
    10. '[' → logprob: -19.250308990478516

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023255497217178345
    2. ' =' → logprob: -3.7732555866241455
    3. ']' → logprob: -12.023255348205566
    4. ']=' → logprob: -12.523255348205566
    5. ')' → logprob: -16.273256301879883
    6. ')=' → logprob: -16.898256301879883
    7. '＝' → logprob: -17.023256301879883
    8. '0' → logprob: -17.148256301879883
    9. '=

' → logprob: -17.523256301879883
    10. '=int' → logprob: -18.148256301879883

Token 469: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -16.750001907348633
    4. '০' → logprob: -18.625001907348633
    5. '０' → logprob: -19.000001907348633
    6. '00' → logprob: -19.312501907348633
    7. 's' → logprob: -19.687501907348633
    8. '०' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.250001907348633
    10. ' ' → logprob: -20.312501907348633

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -18.875
    4. '00' → logprob: -19.375
    5. 's' → logprob: -20.25
    6. '000' → logprob: -20.25
    7. '０' → logprob: -20.5
    8. '   ' → logprob: -21.1875
    9. '০' → logprob: -21.5625
    10. '٠' → logprob: -21.9375

Token 471: ' ' (ID: 220)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.28054091334342957
    2. '
' → logprob: -2.405540943145752
    3. 'pq' → logprob: -2.405540943145752
    4. 'queue' → logprob: -2.905540943145752
    5. '#' → logprob: -5.030540943145752
    6. 'q' → logprob: -6.530540943145752
    7. 'import' → logprob: -7.280540943145752
    8. '
' → logprob: -8.155540466308594
    9. 'hq' → logprob: -8.780540466308594
    10. '' → logprob: -9.030540466308594

Token 472: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0802958533167839
    2. 'pq' → logprob: -2.8302958011627197
    3. 'queue' → logprob: -4.080296039581299
    4. '
' → logprob: -7.330296039581299
    5. '#' → logprob: -8.70529556274414
    6. 'q' → logprob: -8.95529556274414
    7. 'import' → logprob: -8.95529556274414
    8. 'priority' → logprob: -9.33029556274414
    9. 'hq' → logprob: -9.58029556274414
    10. ' heap' → logprob: -12.20529556274414

Token 473: ' Co' (ID: 4642)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.06602716445922852
    2. 'queue' → logprob: -3.1910271644592285
    3. '#' → logprob: -4.1910271644592285
    4. 'pq' → logprob: -4.9410271644592285
    5. 'priority' → logprob: -8.06602668762207
    6. '```' → logprob: -9.94102668762207
    7. 'start' → logprob: -10.44102668762207
    8. 'q' → logprob: -10.44102668762207
    9. ' heap' → logprob: -10.56602668762207
    10. 'import' → logprob: -11.94102668762207

Token 474: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.022756988182663918
    2. 'mp' → logprob: -5.022757053375244
    3. 'nst' → logprob: -5.647757053375244
    4. 'ût' → logprob: -6.147757053375244
    5. 'dp' → logprob: -6.272757053375244
    6. '#' → logprob: -6.397757053375244
    7. 'n' → logprob: -6.397757053375244
    8. 'ut' → logprob: -6.522757053375244
    9. 'd' → logprob: -7.147757053375244
    10. 'nt' → logprob: -7.272757053375244

Token 475: ' nul' (ID: 64435)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.32336270809173584
    2. 'optimal' → logprob: -2.3233628273010254
    3. ' initial' → logprob: -2.9483628273010254
    4. 'de' → logprob: -3.1983628273010254
    5. '#' → logprob: -4.573362827301025
    6. ' de' → logprob: -4.948362827301025
    7. ' optimal' → logprob: -4.948362827301025
    8. '<|end|>' → logprob: -5.073362827301025
    9. 'd' → logprob: -5.198362827301025
    10. 'for' → logprob: -5.323362827301025

Token 476: ' pour' (ID: 1930)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3918471336364746
    2. 'queue' → logprob: -1.3918471336364746
    3. 'pq' → logprob: -3.5168471336364746
    4. '#' → logprob: -3.7668471336364746
    5. 'priority' → logprob: -4.891847133636475
    6. 'q' → logprob: -5.016847133636475
    7. 'import' → logprob: -5.391847133636475
    8. 'que' → logprob: -6.641847133636475
    9. ' heap' → logprob: -6.891847133636475
    10. ' queue' → logprob: -7.891847133636475

Token 477: ' être' (ID: 9104)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4166110157966614
    2. 'arr' → logprob: -1.5416109561920166
    3. 'l' → logprob: -2.5416109561920166
    4. 'atte' → logprob: -4.166611194610596
    5. 'dé' → logprob: -5.041611194610596
    6. 're' → logprob: -5.166611194610596
    7. '0' → logprob: -5.291611194610596
    8. ' le' → logprob: -5.541611194610596
    9. 'la' → logprob: -6.291611194610596
    10. ' ' → logprob: -6.791611194610596

Token 478: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.004286265466362238
    2. 'à' → logprob: -6.004286289215088
    3. ' au' → logprob: -6.629286289215088
    4. 'dans' → logprob: -8.62928581237793
    5. 'initial' → logprob: -9.12928581237793
    6. 'en' → logprob: -9.37928581237793
    7. '0' → logprob: -10.00428581237793
    8. 'sur' → logprob: -11.00428581237793
    9. 'ici' → logprob: -11.37928581237793
    10. ' ' → logprob: -11.50428581237793

Token 479: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.12821854650974274
    2. '0' → logprob: -2.128218650817871
    3. 'dé' → logprob: -7.628218650817871
    4. 'prem' → logprob: -8.128218650817871
    5. 's' → logprob: -8.378218650817871
    6. ' sommet' → logprob: -8.878218650817871
    7. 'point' → logprob: -9.378218650817871
    8. ' ' → logprob: -11.753218650817871
    9. 'no' → logprob: -11.753218650817871
    10. 'node' → logprob: -12.003218650817871

Token 480: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '[' → logprob: -16.000627517700195
    4. 'initial' → logprob: -18.375627517700195
    5. '(' → logprob: -18.500627517700195
    6. '
' → logprob: -18.625627517700195
    7. '<|end|>' → logprob: -19.500627517700195
    8. '1' → logprob: -19.750627517700195
    9. '```' → logprob: -20.250627517700195
    10. '۰' → logprob: -20.625627517700195

Token 481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014215784904081374
    2. ' ' → logprob: -8.875142097473145
    3. '[' → logprob: -14.125142097473145
    4. 'initial' → logprob: -14.125142097473145
    5. 'de' → logprob: -14.250142097473145
    6. '(' → logprob: -17.50014305114746
    7. '```' → logprob: -17.50014305114746
    8. ' initial' → logprob: -17.62514305114746
    9. ' de' → logprob: -17.62514305114746
    10. 's' → logprob: -18.50014305114746

Token 482: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.584095299243927
    2. 'avec' → logprob: -1.2090952396392822
    3. 'with' → logprob: -2.7090952396392822
    4. 'au' → logprob: -3.5840952396392822
    5. 'dans' → logprob: -4.834095478057861
    6. 'en' → logprob: -4.834095478057861
    7. ' with' → logprob: -5.584095478057861
    8. 'à' → logprob: -5.709095478057861
    9. ',' → logprob: -5.834095478057861
    10. 's' → logprob: -5.959095478057861

Token 483: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01141029316931963
    2. ' s' → logprob: -4.886410236358643
    3. 'l' → logprob: -5.636410236358643
    4. ' l' → logprob: -8.6364107131958
    5. 'le' → logprob: -10.3864107131958
    6. 'initial' → logprob: -11.8864107131958
    7. ' ' → logprob: -12.2614107131958
    8. '```' → logprob: -13.3864107131958
    9. 'argent' → logprob: -13.5114107131958
    10. ' le' → logprob: -13.5114107131958

Token 484: ' pièces' (ID: 49165)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.9813302755355835
    2. 'argent' → logprob: -1.1063302755355835
    3. ''argent' → logprob: -1.9813302755355835
    4. '<|end|>' → logprob: -2.731330394744873
    5. 'pieces' → logprob: -3.606330394744873
    6. 's' → logprob: -4.481330394744873
    7. '_money' → logprob: -4.606330394744873
    8. ' pieces' → logprob: -4.606330394744873
    9. ' money' → logprob: -4.856330394744873
    10. '’argent' → logprob: -4.856330394744873

Token 485: '

' (ID: 279)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.037429627031087875
    2. 'queue' → logprob: -4.0374298095703125
    3. 'pq' → logprob: -4.0374298095703125
    4. '#' → logprob: -7.4124298095703125
    5. '
' → logprob: -8.162429809570312
    6. 'import' → logprob: -8.287429809570312
    7. 'priority' → logprob: -8.537429809570312
    8. 'hq' → logprob: -9.537429809570312
    9. 'q' → logprob: -10.912429809570312
    10. '```' → logprob: -12.037429809570312

Token 486: '#' (ID: 2)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.02998478151857853
    2. 'pq' → logprob: -3.779984712600708
    3. 'queue' → logprob: -5.029984951019287
    4. 'import' → logprob: -9.529984474182129
    5. 'hq' → logprob: -9.529984474182129
    6. '#' → logprob: -11.404984474182129
    7. 'priority' → logprob: -11.779984474182129
    8. 'q' → logprob: -12.029984474182129
    9. 'from' → logprob: -12.279984474182129
    10. ' heap' → logprob: -13.279984474182129

Token 487: ' Initial' (ID: 9209)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.06272582709789276
    2. 'pq' → logprob: -3.062725782394409
    3. 'queue' → logprob: -4.312726020812988
    4. 'hq' → logprob: -7.562726020812988
    5. 'q' → logprob: -10.187726020812988
    6. 'priority' → logprob: -10.312726020812988
    7. 'import' → logprob: -10.937726020812988
    8. '#' → logprob: -11.062726020812988
    9. 'h' → logprob: -12.312726020812988
    10. 'from' → logprob: -12.562726020812988

Token 488: 'isation' (ID: 6993)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.12254264950752258
    2. 'queue' → logprob: -3.6225426197052
    3. 'ize' → logprob: -3.9975426197052
    4. 'ization' → logprob: -3.9975426197052
    5. 'heap' → logprob: -4.247542858123779
    6. 'e' → logprob: -4.372542858123779
    7. '_state' → logprob: -4.997542858123779
    8. 'izer' → logprob: -5.247542858123779
    9. '#' → logprob: -5.872542858123779
    10. 'ze' → logprob: -6.247542858123779

Token 489: ' de' (ID: 334)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.44157323241233826
    2. 'heap' → logprob: -1.1915732622146606
    3. 'queue' → logprob: -2.941573143005371
    4. 'priority' → logprob: -8.816573143005371
    5. 'hq' → logprob: -9.066573143005371
    6. 'q' → logprob: -9.441573143005371
    7. ' heap' → logprob: -10.191573143005371
    8. ' pq' → logprob: -10.566573143005371
    9. 'import' → logprob: -10.941573143005371
    10. '#' → logprob: -11.441573143005371

Token 490: ' la' (ID: 557)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0062604425475001335
    2. 'queue' → logprob: -5.506260395050049
    3. 'pq' → logprob: -6.256260395050049
    4. 'hq' → logprob: -8.506260871887207
    5. 'priority' → logprob: -10.506260871887207
    6. ' heap' → logprob: -11.131260871887207
    7. 'import' → logprob: -11.381260871887207
    8. 'q' → logprob: -12.631260871887207
    9. 'h' → logprob: -14.006260871887207
    10. '```' → logprob: -14.756260871887207

Token 491: ' file' (ID: 1974)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.015273778699338436
    2. 'pq' → logprob: -4.515273571014404
    3. 'queue' → logprob: -5.515273571014404
    4. 'priority' → logprob: -8.890274047851562
    5. 'hq' → logprob: -10.015274047851562
    6. 'import' → logprob: -12.015274047851562
    7. ' heap' → logprob: -13.515274047851562
    8. 'q' → logprob: -14.015274047851562
    9. 'h' → logprob: -14.265274047851562
    10. 'que' → logprob: -15.640274047851562

Token 492: ' de' (ID: 334)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8402195572853088
    2. 'queue' → logprob: -1.215219497680664
    3. 'pq' → logprob: -1.590219497680664
    4. 'q' → logprob: -2.965219497680664
    5. 'priority' → logprob: -4.465219497680664
    6. ' queue' → logprob: -6.840219497680664
    7. ' heap' → logprob: -7.090219497680664
    8. 'import' → logprob: -7.465219497680664
    9. ' pq' → logprob: -7.590219497680664
    10. 'd' → logprob: -7.965219497680664

Token 493: ' priorité' (ID: 150252)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.044955041259527206
    2. 'prior' → logprob: -3.794955015182495
    3. 'import' → logprob: -4.794955253601074
    4. '[]' → logprob: -5.544955253601074
    5. 'heap' → logprob: -5.919955253601074
    6. 'pri' → logprob: -6.044955253601074
    7. 'q' → logprob: -6.794955253601074
    8. '(priority' → logprob: -7.419955253601074
    9. 'prio' → logprob: -7.544955253601074
    10. 'pr' → logprob: -7.544955253601074

Token 494: ' avec' (ID: 3937)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.27578699588775635
    2. 'pq' → logprob: -1.5257869958877563
    3. 'queue' → logprob: -3.775786876678467
    4. 'priority' → logprob: -7.775786876678467
    5. 'hq' → logprob: -9.525787353515625
    6. ' heap' → logprob: -9.650787353515625
    7. 'q' → logprob: -9.900787353515625
    8. 'import' → logprob: -10.525787353515625
    9. ' pq' → logprob: -11.400787353515625
    10. 'pile' → logprob: -12.525787353515625

Token 495: ' le' (ID: 505)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.7252845029579476e-05
    2. '[]' → logprob: -11.000027656555176
    3. ' [(' → logprob: -11.625027656555176
    4. 'heap' → logprob: -14.125027656555176
    5. 'he' → logprob: -14.375027656555176
    6. '[' → logprob: -16.25002670288086
    7. '[]
' → logprob: -16.37502670288086
    8. '([(' → logprob: -17.12502670288086
    9. '(' → logprob: -18.75002670288086
    10. '[((' → logprob: -19.25002670288086

Token 496: ' point' (ID: 2438)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00023607931507285684
    2. '[]' → logprob: -9.250236511230469
    3. 'heap' → logprob: -9.375236511230469
    4. ' [(' → logprob: -10.500236511230469
    5. 'he' → logprob: -10.750236511230469
    6. '[]
' → logprob: -13.000236511230469
    7. '[' → logprob: -13.250236511230469
    8. '(' → logprob: -13.500236511230469
    9. '([(' → logprob: -14.875236511230469
    10. '[
' → logprob: -15.125236511230469

Token 497: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011462507769465446
    2. 'heap' → logprob: -5.136462688446045
    3. ' (' → logprob: -5.511462688446045
    4. 'd' → logprob: -7.761462688446045
    5. ' heap' → logprob: -8.011462211608887
    6. '(heap' → logprob: -8.761462211608887
    7. 'import' → logprob: -9.511462211608887
    8. 'initial' → logprob: -9.636462211608887
    9. '0' → logprob: -9.761462211608887
    10. '(
' → logprob: -9.761462211608887

Token 498: ' départ' (ID: 32693)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14663787186145782
    2. 'dé' → logprob: -3.0216379165649414
    3. 'depart' → logprob: -3.0216379165649414
    4. 'vue' → logprob: -4.021637916564941
    5. 'd' → logprob: -5.396637916564941
    6. 'departure' → logprob: -5.396637916564941
    7. 'prior' → logprob: -5.396637916564941
    8. 's' → logprob: -6.146637916564941
    9. '0' → logprob: -6.521637916564941
    10. ' (' → logprob: -7.271637916564941

Token 499: ' :
' (ID: 10039)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0983029454946518
    2. 'pq' → logprob: -2.8483028411865234
    3. 'queue' → logprob: -3.3483028411865234
    4. 'q' → logprob: -7.848302841186523
    5. 'hq' → logprob: -9.598302841186523
    6. 'priority' → logprob: -9.848302841186523
    7. ' heap' → logprob: -11.973302841186523
    8. 'import' → logprob: -12.473302841186523
    9. 'que' → logprob: -12.598302841186523
    10. '
' → logprob: -12.598302841186523

Token 500: '#' (ID: 2)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.05191843956708908
    2. 'pq' → logprob: -3.3019185066223145
    3. 'queue' → logprob: -4.3019185066223145
    4. 'hq' → logprob: -9.176918029785156
    5. 'priority' → logprob: -9.301918029785156
    6. 'q' → logprob: -10.426918029785156
    7. ' heap' → logprob: -11.926918029785156
    8. 'pile' → logprob: -13.051918029785156
    9. 'que' → logprob: -13.676918029785156
    10. 'Q' → logprob: -13.801918029785156

Token 501: ' (' (ID: 350)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04257305711507797
    2. 'pq' → logprob: -3.5425729751586914
    3. 'queue' → logprob: -4.417572975158691
    4. 'hq' → logprob: -7.792572975158691
    5. 'priority' → logprob: -8.917572975158691
    6. 'q' → logprob: -9.292572975158691
    7. ' heap' → logprob: -11.167572975158691
    8. 'que' → logprob: -12.292572975158691
    9. 'h' → logprob: -12.417572975158691
    10. 'pile' → logprob: -12.542572975158691

Token 502: 'co' (ID: 1191)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035357745946384966
    2. 'he' → logprob: -8.875353813171387
    3. 'dp' → logprob: -9.000353813171387
    4. '(' → logprob: -9.750353813171387
    5. 'heap' → logprob: -11.875353813171387
    6. '(dp' → logprob: -11.875353813171387
    7. ' ' → logprob: -12.375353813171387
    8. 'time' → logprob: -12.875353813171387
    9. 'cost' → logprob: -13.125353813171387
    10. ')' → logprob: -13.250353813171387

Token 503: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.1611006110906601
    2. 's' → logprob: -1.9111006259918213
    3. 't' → logprob: -7.661100387573242
    4. 'sts' → logprob: -8.286100387573242
    5. '
' → logprob: -10.286100387573242
    6. ')' → logprob: -10.286100387573242
    7. 'ts' → logprob: -11.036100387573242
    8. ',' → logprob: -11.911100387573242
    9. ']' → logprob: -11.911100387573242
    10. '   ' → logprob: -12.161100387573242

Token 504: ' accum' (ID: 23148)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006263523828238249
    2. 'time' → logprob: -6.506263732910156
    3. 'temps' → logprob: -6.506263732910156
    4. ' ,' → logprob: -6.756263732910156
    5. '_time' → logprob: -7.131263732910156
    6. ' time' → logprob: -7.756263732910156
    7. ',v' → logprob: -8.881263732910156
    8. ' temps' → logprob: -9.006263732910156
    9. ',time' → logprob: -9.381263732910156
    10. ')' → logprob: -9.506263732910156

Token 505: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.4652685523033142
    2. ',' → logprob: -1.340268611907959
    3. 'ul' → logprob: -2.590268611907959
    4. 'ulated' → logprob: -4.090268611907959
    5. 'um' → logprob: -4.715268611907959
    6. 'umul' → logprob: -6.215268611907959
    7. 'u' → logprob: -6.340268611907959
    8. '=' → logprob: -6.465268611907959
    9. ' ,' → logprob: -6.840268611907959
    10. 'mul' → logprob: -6.840268611907959

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.466968650580384e-05
    2. ' ,' → logprob: -10.500054359436035
    3. ',
' → logprob: -11.500054359436035
    4. 'time' → logprob: -12.250054359436035
    5. ')' → logprob: -13.000054359436035
    6. '0' → logprob: -13.125054359436035
    7. ',v' → logprob: -13.500054359436035
    8. 'v' → logprob: -13.875054359436035
    9. ',)' → logprob: -14.125054359436035
    10. '),' → logprob: -14.500054359436035

Token 507: ' indice' (ID: 90848)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011570196511456743
    2. ' ' → logprob: -9.250115394592285
    3. 's' → logprob: -11.750115394592285
    4. 'v' → logprob: -12.375115394592285
    5. ',' → logprob: -13.750115394592285
    6. 'start' → logprob: -14.125115394592285
    7. 'vertex' → logprob: -14.250115394592285
    8. 'node' → logprob: -14.375115394592285
    9. ')' → logprob: -14.500115394592285
    10. '(' → logprob: -14.500115394592285

Token 508: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003241762751713395
    2. 'v' → logprob: -6.628241539001465
    3. 'de' → logprob: -8.128241539001465
    4. '_vertex' → logprob: -8.128241539001465
    5. ' ,' → logprob: -8.128241539001465
    6. ' de' → logprob: -8.378241539001465
    7. 'vertex' → logprob: -8.753241539001465
    8. '_v' → logprob: -9.003241539001465
    9. ' sommet' → logprob: -9.003241539001465
    10. ',v' → logprob: -9.378241539001465

Token 509: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.032983288168907166
    2. 's' → logprob: -3.7829833030700684
    3. 'no' → logprob: -5.282983303070068
    4. 'node' → logprob: -6.032983303070068
    5. 'vertex' → logprob: -6.657983303070068
    6. ' sommet' → logprob: -7.282983303070068
    7. '```' → logprob: -9.40798282623291
    8. 'n' → logprob: -10.65798282623291
    9. 'ville' → logprob: -10.65798282623291
    10. 'vo' → logprob: -11.15798282623291

Token 510: ' courant' (ID: 74694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ')' → logprob: -11.500031471252441
    3. ',v' → logprob: -11.875031471252441
    4. ' ,' → logprob: -12.000031471252441
    5. 'v' → logprob: -12.250031471252441
    6. '),' → logprob: -14.000031471252441
    7. 'current' → logprob: -14.875031471252441
    8. ',
' → logprob: -15.125031471252441
    9. 'money' → logprob: -15.125031471252441
    10. ',current' → logprob: -15.125031471252441

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.519893501419574e-05
    2. ' ,' → logprob: -9.62509536743164
    3. 'money' → logprob: -11.12509536743164
    4. ')' → logprob: -12.12509536743164
    5. ',m' → logprob: -12.75009536743164
    6. ',
' → logprob: -12.75009536743164
    7. ',v' → logprob: -14.00009536743164
    8. '),' → logprob: -14.87509536743164
    9. ' money' → logprob: -14.87509536743164
    10. 's' → logprob: -15.12509536743164

Token 512: ' nombre' (ID: 9733)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.22554782032966614
    2. 's' → logprob: -2.6005477905273438
    3. ' money' → logprob: -2.6005477905273438
    4. 'argent' → logprob: -3.7255477905273438
    5. 'current' → logprob: -4.475547790527344
    6. ' s' → logprob: -5.225547790527344
    7. ' current' → logprob: -5.350547790527344
    8. ' argent' → logprob: -5.975547790527344
    9. 'amount' → logprob: -6.600547790527344
    10. ' arg' → logprob: -7.850547790527344

Token 513: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8001791834831238
    2. ',' → logprob: -1.5501792430877686
    3. '_' → logprob: -1.8001792430877686
    4. '_de' → logprob: -3.3001792430877686
    5. '_d' → logprob: -3.4251792430877686
    6. ' de' → logprob: -3.4251792430877686
    7. '_money' → logprob: -3.6751792430877686
    8. '_of' → logprob: -4.3001790046691895
    9. ' d' → logprob: -4.5501790046691895
    10. ')_' → logprob: -5.1751790046691895

Token 514: ' pièces' (ID: 49165)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.6184888482093811
    2. 'pieces' → logprob: -1.2434887886047363
    3. 'coins' → logprob: -2.8684887886047363
    4. ' pieces' → logprob: -3.1184887886047363
    5. ' money' → logprob: -3.6184887886047363
    6. 'pi' → logprob: -3.7434887886047363
    7. ' pièces' → logprob: -4.243488788604736
    8. ''argent' → logprob: -6.243488788604736
    9. ' coins' → logprob: -6.493488788604736
    10. 'argent' → logprob: -6.993488788604736

Token 515: ' cour' (ID: 2871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031890018726699054
    2. ')
' → logprob: -8.75031852722168
    3. ',' → logprob: -9.50031852722168
    4. ' )' → logprob: -9.62531852722168
    5. ')=' → logprob: -12.62531852722168
    6. 'current' → logprob: -12.87531852722168
    7. '),' → logprob: -13.25031852722168
    8. 's' → logprob: -13.37531852722168
    9. 'money' → logprob: -13.37531852722168
    10. ')
' → logprob: -13.62531852722168

Token 516: 'antes' (ID: 5193)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5848122239112854
    2. 'antes' → logprob: -0.8348122239112854
    3. 'r' → logprob: -5.584812164306641
    4. 'ante' → logprob: -5.834812164306641
    5. 'a' → logprob: -7.709812164306641
    6. 'tes' → logprob: -8.08481216430664
    7. 'ent' → logprob: -8.08481216430664
    8. 'rent' → logprob: -8.20981216430664
    9. 'rant' → logprob: -9.20981216430664
    10. 'an' → logprob: -9.70981216430664

Token 517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011310477275401354
    2. ')
' → logprob: -6.876131057739258
    3. ')=' → logprob: -9.626131057739258
    4. ')
' → logprob: -10.626131057739258
    5. ',' → logprob: -12.751131057739258
    6. ' )' → logprob: -13.501131057739258
    7. '=' → logprob: -14.501131057739258
    8. 'cost' → logprob: -14.751131057739258
    9. 'heap' → logprob: -15.001131057739258
    10. '(' → logprob: -15.376131057739258

Token 518: 'q' (ID: 80)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07222375273704529
    2. 'pq' → logprob: -3.072223663330078
    3. 'he' → logprob: -4.072223663330078
    4. 'queue' → logprob: -5.572223663330078
    5. 'import' → logprob: -6.447223663330078
    6. '[(' → logprob: -7.197223663330078
    7. '[' → logprob: -9.697223663330078
    8. 'hq' → logprob: -10.322223663330078
    9. 'priority' → logprob: -10.822223663330078
    10. 'q' → logprob: -10.822223663330078

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408443689346313
    2. ' =' → logprob: -0.9740844368934631
    3. '=[]' → logprob: -12.224084854125977
    4. '=[' → logprob: -13.474084854125977
    5. ',' → logprob: -14.474084854125977
    6. ' ' → logprob: -15.349084854125977
    7. '=[]
' → logprob: -16.099084854125977
    8. '＝' → logprob: -16.474084854125977
    9. ' =[' → logprob: -16.474084854125977
    10. ')' → logprob: -17.349084854125977

Token 520: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.7697225252486533e-06
    2. '[]' → logprob: -12.750003814697266
    3. '[]
' → logprob: -14.750003814697266
    4. ' [(' → logprob: -14.750003814697266
    5. '[' → logprob: -18.750003814697266
    6. '[
' → logprob: -20.125003814697266
    7. '[]

' → logprob: -20.500003814697266
    8. '[((' → logprob: -21.000003814697266
    9. '([(' → logprob: -22.125003814697266
    10. '[],' → logprob: -22.500003814697266

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -18.0
    4. 'dp' → logprob: -18.0
    5. '   ' → logprob: -19.125
    6. '(' → logprob: -19.25
    7. '00' → logprob: -19.75
    8. ')' → logprob: -19.875
    9. '000' → logprob: -20.3125
    10. ',' → logprob: -20.3125

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -10.625027656555176
    3. '0' → logprob: -13.250027656555176
    4. ',
' → logprob: -13.625027656555176
    5. ' ' → logprob: -15.500027656555176
    6. 's' → logprob: -17.375028610229492
    7. ',s' → logprob: -17.375028610229492
    8. ',n' → logprob: -17.375028610229492
    9. '```' → logprob: -17.375028610229492
    10. ')' → logprob: -17.500028610229492

Token 523: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '00' → logprob: -20.875001907348633
    4. '   ' → logprob: -21.250001907348633
    5. ',' → logprob: -21.500001907348633
    6. '۰' → logprob: -22.125001907348633
    7. '(' → logprob: -22.250001907348633
    8. '[' → logprob: -22.687501907348633
    9. ')' → logprob: -22.875001907348633
    10. '000' → logprob: -23.187501907348633

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.75
    4. '00' → logprob: -21.25
    5. '۰' → logprob: -21.3125
    6. '０' → logprob: -21.875
    7. '  ' → logprob: -22.25
    8. ',' → logprob: -22.4375
    9. '(' → logprob: -22.5
    10. '    ' → logprob: -22.8125

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016276907408609986
    2. ',s' → logprob: -6.5016279220581055
    3. ' ,' → logprob: -9.626627922058105
    4. 's' → logprob: -9.751627922058105
    5. ',
' → logprob: -13.751627922058105
    6. ' s' → logprob: -16.62662696838379
    7. ',

' → logprob: -19.00162696838379
    8. ' ' → logprob: -19.00162696838379
    9. ',m' → logprob: -19.50162696838379
    10. ',S' → logprob: -19.50162696838379

Token 526: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.842555426876061e-06
    2. ' s' → logprob: -12.250004768371582
    3. ' ' → logprob: -21.1250057220459
    4. '   ' → logprob: -21.5000057220459
    5. '_s' → logprob: -21.8750057220459
    6. '	s' → logprob: -22.5000057220459
    7. '{s' → logprob: -22.5000057220459
    8. '```' → logprob: -22.8750057220459
    9. '  ' → logprob: -23.5000057220459
    10. ')' → logprob: -23.5000057220459

Token 527: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.304016228066757e-05
    2. ')' → logprob: -9.500082969665527
    3. ')]
' → logprob: -12.125082969665527
    4. ' )' → logprob: -13.125082969665527
    5. ')]
' → logprob: -15.250082969665527
    6. ')]

' → logprob: -15.625082969665527
    7. ')])' → logprob: -16.125083923339844
    8. '))' → logprob: -16.375083923339844
    9. ']' → logprob: -16.625083923339844
    10. ')].' → logprob: -16.750083923339844

Token 528: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.60414821645827e-06
    2. ' while' → logprob: -12.500004768371582
    3. '
' → logprob: -14.250004768371582
    4. '```' → logprob: -16.500003814697266
    5. 'While' → logprob: -16.750003814697266
    6. '	while' → logprob: -16.875003814697266
    7. ')' → logprob: -18.375003814697266
    8. 'wh' → logprob: -19.375003814697266
    9. 'def' → logprob: -19.625003814697266
    10. 'w' → logprob: -19.750003814697266

Token 529: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.320199877838604e-07
    2. 'def' → logprob: -15.875
    3. ' while' → logprob: -16.0
    4. '
' → logprob: -16.75
    5. 'import' → logprob: -18.375
    6. 'While' → logprob: -18.75
    7. 'wh' → logprob: -18.875
    8. '	while' → logprob: -20.0
    9. 'visited' → logprob: -20.375
    10. 'heap' → logprob: -20.625

Token 530: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.6462074518203735
    2. 'while' → logprob: -1.1462074518203735
    3. 't' → logprob: -2.396207332611084
    4. 'tle' → logprob: -4.021207332611084
    5. 'c' → logprob: -4.646207332611084
    6. 'e' → logprob: -4.771207332611084
    7. 'i' → logprob: -4.896207332611084
    8. ' while' → logprob: -5.521207332611084
    9. 'ile' → logprob: -5.771207332611084
    10. 'ck' → logprob: -6.271207332611084

Token 531: ' principale' (ID: 68926)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0002764710516203195
    2. ' while' → logprob: -8.625276565551758
    3. '
' → logprob: -9.375276565551758
    4. ':' → logprob: -11.875276565551758
    5. 'for' → logprob: -12.875276565551758
    6. ':
' → logprob: -13.625276565551758
    7. 'import' → logprob: -14.250276565551758
    8. 'While' → logprob: -15.500276565551758
    9. 'w' → logprob: -16.375276565551758
    10. 'wh' → logprob: -16.750276565551758

Token 532: ' :' (ID: 712)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00029995047952979803
    2. '
' → logprob: -8.375300407409668
    3. ' while' → logprob: -9.625300407409668
    4. ':' → logprob: -13.375300407409668
    5. '```' → logprob: -14.250300407409668
    6. 'wh' → logprob: -14.875300407409668
    7. '	while' → logprob: -15.500300407409668
    8. ':
' → logprob: -15.625300407409668
    9. 'While' → logprob: -16.12529945373535
    10. 'w' → logprob: -16.37529945373535

Token 533: ' variante' (ID: 137790)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.320199877838604e-07
    2. ' while' → logprob: -15.0
    3. '
' → logprob: -16.875
    4. '	while' → logprob: -20.375
    5. '```' → logprob: -20.5
    6. 'While' → logprob: -21.25
    7. 'wh' → logprob: -21.375
    8. 'import' → logprob: -21.5
    9. 'for' → logprob: -23.875
    10. 'from' → logprob: -24.0

Token 534: ' de' (ID: 334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18574675917625427
    2. 'd' → logprob: -2.685746669769287
    3. ' while' → logprob: -3.310746669769287
    4. ' de' → logprob: -3.935746669769287
    5. 'for' → logprob: -3.935746669769287
    6. 'de' → logprob: -4.435746669769287
    7. ' d' → logprob: -4.810746669769287
    8. ' of' → logprob: -5.810746669769287
    9. ' for' → logprob: -6.935746669769287
    10. 'import' → logprob: -7.685746669769287

Token 535: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08965844660997391
    2. 'D' → logprob: -2.589658498764038
    3. 'heap' → logprob: -5.339658260345459
    4. 'he' → logprob: -5.839658260345459
    5. 'import' → logprob: -6.714658260345459
    6. 'while' → logprob: -6.839658260345459
    7. '```' → logprob: -7.839658260345459
    8. 'l' → logprob: -8.964658737182617
    9. 'def' → logprob: -10.214658737182617
    10. 'dj' → logprob: -10.214658737182617

Token 536: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.028872085735201836
    2. 'ijk' → logprob: -3.778872013092041
    3. 'ij' → logprob: -5.403872013092041
    4. 'jik' → logprob: -7.653872013092041
    5. 'i' → logprob: -8.0288724899292
    6. 'ijks' → logprob: -8.6538724899292
    7. 'jk' → logprob: -10.4038724899292
    8. '```' → logprob: -10.5288724899292
    9. '#' → logprob: -11.0288724899292
    10. 'ik' → logprob: -11.1538724899292

Token 537: ' prenant' (ID: 140375)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.011436345055699348
    2. '
' → logprob: -4.511436462402344
    3. ' while' → logprob: -7.886436462402344
    4. ':' → logprob: -12.511436462402344
    5. '	while' → logprob: -12.761436462402344
    6. '```' → logprob: -13.136436462402344
    7. 'While' → logprob: -13.261436462402344
    8. '' → logprob: -14.761436462402344
    9. ':
' → logprob: -14.886436462402344
    10. 'wh' → logprob: -15.011436462402344

Token 538: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0002790935104712844
    2. ' en' → logprob: -8.500279426574707
    3. 'into' → logprob: -10.250279426574707
    4. 'import' → logprob: -11.000279426574707
    5. 'account' → logprob: -12.000279426574707
    6. '```' → logprob: -12.000279426574707
    7. ''en' → logprob: -13.125279426574707
    8. '#' → logprob: -13.500279426574707
    9. '(en' → logprob: -13.500279426574707
    10. 'comp' → logprob: -13.750279426574707

Token 539: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0001450187264708802
    2. ' compte' → logprob: -9.500144958496094
    3. '
' → logprob: -10.625144958496094
    4. 'account' → logprob: -10.875144958496094
    5. 'charge' → logprob: -11.000144958496094
    6. 'cons' → logprob: -12.250144958496094
    7. '```' → logprob: -13.875144958496094
    8. 'com' → logprob: -14.375144958496094
    9. 'compagn' → logprob: -14.500144958496094
    10. 'count' → logprob: -14.500144958496094

Token 540: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.36410292983055115
    2. 'l' → logprob: -1.4891029596328735
    3. ' le' → logprob: -3.364102840423584
    4. ' l' → logprob: -4.239102840423584
    5. 'la' → logprob: -4.239102840423584
    6. 'les' → logprob: -4.364102840423584
    7. ' la' → logprob: -6.739102840423584
    8. 'à' → logprob: -7.364102840423584
    9. ' les' → logprob: -8.114103317260742
    10. 'money' → logprob: -8.114103317260742

Token 541: ''argent' (ID: 93204)
  Prédit: ''argent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.09314209222793579
    2. 'e' → logprob: -3.843142032623291
    3. 'es' → logprob: -3.843142032623291
    4. 'argent' → logprob: -3.968142032623291
    5. ''état' → logprob: -3.968142032623291
    6. 'temps' → logprob: -5.468142032623291
    7. '’argent' → logprob: -6.218142032623291
    8. 'a' → logprob: -7.843142032623291
    9. ' argent' → logprob: -8.46814250946045
    10. 'arg' → logprob: -8.96814250946045

Token 542: ' comme' (ID: 7971)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08091645687818527
    2. '
' → logprob: -2.705916404724121
    3. ' while' → logprob: -5.080916404724121
    4. ':' → logprob: -5.455916404724121
    5. ':
' → logprob: -8.205916404724121
    6. ')' → logprob: -10.205916404724121
    7. '   ' → logprob: -10.830916404724121
    8. 'While' → logprob: -11.205916404724121
    9. '	while' → logprob: -11.330916404724121
    10. '' → logprob: -11.455916404724121

Token 543: ' seconde' (ID: 66204)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.06641888618469238
    2. 'une' → logprob: -2.9414188861846924
    3. 'l' → logprob: -5.191418647766113
    4. 'le' → logprob: -5.816418647766113
    5. ' un' → logprob: -6.316418647766113
    6. ' une' → logprob: -8.941418647766113
    7. '#' → logprob: -9.066418647766113
    8. '```' → logprob: -9.066418647766113
    9. 'ét' → logprob: -9.191418647766113
    10. 'part' → logprob: -9.566418647766113

Token 544: ' dimension' (ID: 21959)
  Prédit: 'dimension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimension' → logprob: -0.00987803190946579
    2. ' dimension' → logprob: -5.384878158569336
    3. 'ress' → logprob: -6.384878158569336
    4. 'dim' → logprob: -6.509878158569336
    5. 'clé' → logprob: -6.634878158569336
    6. 'variable' → logprob: -8.009878158569336
    7. 'condition' → logprob: -8.759878158569336
    8. 'param' → logprob: -10.259878158569336
    9. 'crit' → logprob: -10.634878158569336
    10. '-' → logprob: -10.884878158569336

Token 545: ' d' (ID: 272)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.656383680412546e-05
    2. '
' → logprob: -10.000046730041504
    3. ' while' → logprob: -13.750046730041504
    4. '```' → logprob: -17.125045776367188
    5. '	while' → logprob: -17.375045776367188
    6. 'wh' → logprob: -17.625045776367188
    7. 'While' → logprob: -17.875045776367188
    8. '    
' → logprob: -19.750045776367188
    9. '\
' → logprob: -19.875045776367188
    10. '
' → logprob: -19.875045776367188

Token 546: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.2572188377380371
    2. 'ét' → logprob: -2.757218837738037
    3. 'ijkstra' → logprob: -3.257218837738037
    4. 'istance' → logprob: -3.507218837738037
    5. 'e' → logprob: -4.132218837738037
    6. 'l' → logprob: -4.257218837738037
    7. '’état' → logprob: -4.507218837738037
    8. 'é' → logprob: -4.757218837738037
    9. 'ép' → logprob: -4.882218837738037
    10. ''espace' → logprob: -5.507218837738037

Token 547: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0002153378736693412
    2. '
' → logprob: -8.500215530395508
    3. ' while' → logprob: -11.375215530395508
    4. '```' → logprob: -15.250215530395508
    5. '	while' → logprob: -16.375215530395508
    6. 'While' → logprob: -16.750215530395508
    7. 'wh' → logprob: -17.000215530395508
    8. 'for' → logprob: -18.625215530395508
    9. 'w' → logprob: -18.750215530395508
    10. 'import' → logprob: -18.875215530395508

Token 548: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -13.25000286102295
    3. ' while' → logprob: -14.00000286102295
    4. '```' → logprob: -18.375001907348633
    5. 'wh' → logprob: -19.125001907348633
    6. '	while' → logprob: -19.625001907348633
    7. 'While' → logprob: -19.750001907348633
    8. '   ' → logprob: -21.250001907348633
    9. '    
' → logprob: -21.625001907348633
    10. 'for' → logprob: -21.750001907348633

Token 549: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007101670489646494
    2. ' q' → logprob: -7.2507100105285645
    3. '	q' → logprob: -15.500710487365723
    4. '   ' → logprob: -19.625709533691406
    5. '(q' → logprob: -19.875709533691406
    6. ' ' → logprob: -19.875709533691406
    7. 'len' → logprob: -20.250709533691406
    8. '  ' → logprob: -21.000709533691406
    9. ' len' → logprob: -21.125709533691406
    10. ' ' → logprob: -21.750709533691406

Token 550: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.909333023941144e-05
    2. ':
' → logprob: -10.000068664550781
    3. '):' → logprob: -11.125068664550781
    4. '>:' → logprob: -12.250068664550781
    5. 'and' → logprob: -13.750068664550781
    6. ':**' → logprob: -13.750068664550781
    7. '!=' → logprob: -15.375068664550781
    8. ']:' → logprob: -15.500068664550781
    9. ' and' → logprob: -15.500068664550781
    10. ':not' → logprob: -15.625068664550781

Token 551: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4088899791240692
    2. 'cost' → logprob: -1.2838900089263916
    3. 'co' → logprob: -3.6588900089263916
    4. 'c' → logprob: -3.6588900089263916
    5. ' ' → logprob: -6.4088897705078125
    6. ' cost' → logprob: -6.6588897705078125
    7. 'd' → logprob: -6.9088897705078125
    8. '(cost' → logprob: -7.2838897705078125
    9. 't' → logprob: -7.4088897705078125
    10. '	c' → logprob: -7.5338897705078125

Token 552: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3059937357902527
    2. 'co' → logprob: -1.9309937953948975
    3. 'c' → logprob: -2.4309937953948975
    4. '   ' → logprob: -3.6809937953948975
    5. '(cost' → logprob: -6.305993556976318
    6. ' cost' → logprob: -6.430993556976318
    7. ' ' → logprob: -8.055994033813477
    8. 'd' → logprob: -8.430994033813477
    9. 'time' → logprob: -8.430994033813477
    10. '
' → logprob: -8.680994033813477

Token 553: ' On' (ID: 2160)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1393655687570572
    2. 'co' → logprob: -2.3893656730651855
    3. 'c' → logprob: -3.7643656730651855
    4. '   ' → logprob: -4.7643656730651855
    5. 'dist' → logprob: -5.8893656730651855
    6. 'cout' → logprob: -7.2643656730651855
    7. 'cur' → logprob: -7.2643656730651855
    8. 'time' → logprob: -7.6393656730651855
    9. 'current' → logprob: -7.8893656730651855
    10. ' cost' → logprob: -7.8893656730651855

Token 554: ' continue' (ID: 4901)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.6451363563537598
    2. 'cost' → logprob: -1.0201363563537598
    3. 'import' → logprob: -3.3951363563537598
    4. 't' → logprob: -4.64513635635376
    5. ' continue' → logprob: -4.64513635635376
    6. 'continue' → logprob: -4.64513635635376
    7. ' cost' → logprob: -5.02013635635376
    8. 'pop' → logprob: -5.14513635635376
    9. 'acc' → logprob: -5.39513635635376
    10. 'importe' → logprob: -5.52013635635376

Token 555: ' tant' (ID: 16235)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7713366746902466
    2. ',' → logprob: -0.8963366746902466
    3. 'co' → logprob: -3.021336555480957
    4. '   ' → logprob: -3.896336555480957
    5. ')' → logprob: -4.271336555480957
    6. '):' → logprob: -4.646336555480957
    7. ' :' → logprob: -4.896336555480957
    8. 'cost' → logprob: -5.021336555480957
    9. ' ' → logprob: -6.271336555480957
    10. '  ' → logprob: -6.646336555480957

Token 556: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.28029361367225647
    2. ' q' → logprob: -2.0302937030792236
    3. 'q' → logprob: -2.2802937030792236
    4. 'que' → logprob: -4.9052934646606445
    5. '(' → logprob: -6.9052934646606445
    6. ' len' → logprob: -7.1552934646606445
    7. 'len' → logprob: -7.9052934646606445
    8. ' (' → logprob: -8.030293464660645
    9. '   ' → logprob: -8.155293464660645
    10. ' ' → logprob: -8.405293464660645

Token 557: ''il' (ID: 14683)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.18648424744606018
    2. ' q' → logprob: -2.1864843368530273
    3. ' len' → logprob: -3.6864843368530273
    4. 'q' → logprob: -3.8114843368530273
    5. 'u' → logprob: -5.311484336853027
    6. 'len' → logprob: -6.061484336853027
    7. 'que' → logprob: -6.186484336853027
    8. '(len' → logprob: -8.311484336853027
    9. 'ue' → logprob: -8.686484336853027
    10. 'e' → logprob: -8.936484336853027

Token 558: ' existe' (ID: 19498)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6510165333747864
    2. ' q' → logprob: -1.2760164737701416
    3. ' a' → logprob: -2.9010164737701416
    4. '[' → logprob: -3.5260164737701416
    5. 's' → logprob: -3.9010164737701416
    6. 'a' → logprob: -3.9010164737701416
    7. ' y' → logprob: -4.151016712188721
    8. 'est' → logprob: -4.526016712188721
    9. ')' → logprob: -4.651016712188721
    10. 'y' → logprob: -4.901016712188721

Token 559: ' des' (ID: 731)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004694156814366579
    2. ' q' → logprob: -5.629693984985352
    3. '   ' → logprob: -8.379693984985352
    4. ' ' → logprob: -8.379693984985352
    5. 'len' → logprob: -8.879693984985352
    6. '(q' → logprob: -9.129693984985352
    7. '
' → logprob: -9.629693984985352
    8. ' (' → logprob: -10.129693984985352
    9. ')' → logprob: -10.129693984985352
    10. '(' → logprob: -10.504693984985352

Token 560: ' états' (ID: 184259)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04227222129702568
    2. 'co' → logprob: -3.7922723293304443
    3. 'élé' → logprob: -5.292272090911865
    4. 'cost' → logprob: -5.292272090911865
    5. 'elements' → logprob: -5.667272090911865
    6. 'len' → logprob: -6.667272090911865
    7. ' éléments' → logprob: -7.417272090911865
    8. ' q' → logprob: -7.417272090911865
    9. 'c' → logprob: -7.542272090911865
    10. '(' → logprob: -7.792272090911865

Token 561: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06049726530909538
    2. '   ' → logprob: -3.310497283935547
    3. ':
' → logprob: -4.560497283935547
    4. '):' → logprob: -5.560497283935547
    5. 'cost' → logprob: -6.060497283935547
    6. ',' → logprob: -6.435497283935547
    7. 'co' → logprob: -6.685497283935547
    8. ' :' → logprob: -6.935497283935547
    9. '[' → logprob: -7.810497283935547
    10. '):
' → logprob: -8.185497283935547

Token 562: ' explorer' (ID: 73961)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5575129985809326
    2. 'trait' → logprob: -1.6825129985809326
    3. 'pop' → logprob: -2.0575129985809326
    4. 'expl' → logprob: -2.9325129985809326
    5. 'tra' → logprob: -3.1825129985809326
    6. ' traiter' → logprob: -4.932513236999512
    7. 'proces' → logprob: -5.557513236999512
    8. 'tr' → logprob: -5.682513236999512
    9. 'he' → logprob: -5.682513236999512
    10. 'p' → logprob: -8.307513236999512

Token 563: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.20255301892757416
    2. 'co' → logprob: -2.0775530338287354
    3. 'c' → logprob: -3.8275530338287354
    4. '(cost' → logprob: -3.8275530338287354
    5. ' cost' → logprob: -5.452552795410156
    6. ',' → logprob: -6.077552795410156
    7. '   ' → logprob: -6.327552795410156
    8. 't' → logprob: -6.952552795410156
    9. 'd' → logprob: -7.077552795410156
    10. '_cost' → logprob: -7.452552795410156

Token 564: '   ' (ID: 271)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.9617582559585571
    2. 'cost' → logprob: -0.9617582559585571
    3. 'c' → logprob: -1.4617582559585571
    4. '   ' → logprob: -6.461758136749268
    5. ' cost' → logprob: -7.211758136749268
    6. '(cost' → logprob: -8.211758613586426
    7. ' ' → logprob: -8.461758613586426
    8. 'd' → logprob: -8.586758613586426
    9. 't' → logprob: -8.961758613586426
    10. ',' → logprob: -9.211758613586426

Token 565: ' dist' (ID: 3601)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006982121616601944
    2. 'co' → logprob: -5.381982326507568
    3. 'c' → logprob: -7.006982326507568
    4. 'cur' → logprob: -7.881982326507568
    5. 'time' → logprob: -7.881982326507568
    6. 'curr' → logprob: -8.25698184967041
    7. 'dist' (adapté à ' dist') → logprob: -8.38198184967041
    8. 'current' → logprob: -9.00698184967041
    9. 'd' → logprob: -10.25698184967041
    10. ' cost' → logprob: -10.75698184967041

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.85366350505501e-05
    2. '_,' → logprob: -10.50009822845459
    3. ' ,' → logprob: -10.62509822845459
    4. ',u' → logprob: -11.00009822845459
    5. 'u' → logprob: -11.37509822845459
    6. '_' → logprob: -12.00009822845459
    7. ',current' → logprob: -12.50009822845459
    8. ',_' → logprob: -13.62509822845459
    9. ',
' → logprob: -14.12509822845459
    10. ',c' → logprob: -14.50009822845459

Token 567: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6944217681884766
    2. 'v' → logprob: -0.6944217681884766
    3. 'node' → logprob: -7.319421768188477
    4. ' u' → logprob: -8.569421768188477
    5. 'cur' → logprob: -8.944421768188477
    6. 'pos' → logprob: -9.069421768188477
    7. ' v' → logprob: -9.694421768188477
    8. 'vertex' → logprob: -9.819421768188477
    9. 'current' → logprob: -10.444421768188477
    10. '```' → logprob: -11.819421768188477

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.375004768371582
    3. '_,' → logprob: -15.125004768371582
    4. '=' → logprob: -16.6250057220459
    5. 'u' → logprob: -16.6250057220459
    6. ',u' → logprob: -16.7500057220459
    7. ',current' → logprob: -16.8750057220459
    8. '   ' → logprob: -17.0000057220459
    9. ',v' → logprob: -17.1250057220459
    10. ',
' → logprob: -17.3750057220459

Token 569: ' money' (ID: 3905)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.0005133562372066081
    2. 'cur' → logprob: -9.000513076782227
    3. ' money' → logprob: -9.125513076782227
    4. 'mon' → logprob: -9.375513076782227
    5. 'm' → logprob: -9.875513076782227
    6. 'coins' → logprob: -10.000513076782227
    7. 'curr' → logprob: -10.250513076782227
    8. 'cash' → logprob: -10.750513076782227
    9. 'current' → logprob: -11.750513076782227
    10. 'c' → logprob: -12.000513076782227

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197945028543472
    2. ' =' → logprob: -2.8119795322418213
    3. '   ' → logprob: -12.061979293823242
    4. ')' → logprob: -12.186979293823242
    5. ')=' → logprob: -15.061979293823242
    6. ',' → logprob: -15.186979293823242
    7. ']' → logprob: -15.436979293823242
    8. ' ' → logprob: -16.436979293823242
    9. '	' → logprob: -17.186979293823242
    10. '  ' → logprob: -17.436979293823242

Token 571: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0004306692280806601
    2. ' he' → logprob: -7.750430583953857
    3. 'heap' → logprob: -18.500431060791016
    4. '   ' → logprob: -20.375431060791016
    5. 'He' → logprob: -20.500431060791016
    6. ' ' → logprob: -21.125431060791016
    7. 'h' → logprob: -22.375431060791016
    8. 'heme' → logprob: -22.750431060791016
    9. '_he' → logprob: -22.750431060791016
    10. '.he' → logprob: -22.875431060791016

Token 572: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.661626634420827e-05
    2. 'ap' → logprob: -9.375086784362793
    3. 'a' → logprob: -13.750086784362793
    4. ' app' → logprob: -14.750086784362793
    5. '```' → logprob: -17.125085830688477
    6. '
' → logprob: -17.375085830688477
    7. '`' → logprob: -17.500085830688477
    8. '	app' → logprob: -17.625085830688477
    9. '   ' → logprob: -17.750085830688477
    10. '[' → logprob: -18.250085830688477

Token 573: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -5.908022285439074e-05
    2. 'ush' → logprob: -10.750059127807617
    3. 'o' → logprob: -11.875059127807617
    4. 'pop' → logprob: -11.875059127807617
    5. 'p' → logprob: -12.250059127807617
    6. '   ' → logprob: -12.375059127807617
    7. 'оп' → logprob: -13.375059127807617
    8. '```' → logprob: -13.500059127807617
    9. '[' → logprob: -13.625059127807617
    10. '

' → logprob: -14.125059127807617

Token 574: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. 'q' → logprob: -15.375004768371582
    4. ' (' → logprob: -17.1250057220459
    5. '(queue' → logprob: -18.0000057220459
    6. ',q' → logprob: -18.1250057220459
    7. '(
' → logprob: -18.5000057220459
    8. ')' → logprob: -19.7500057220459
    9. '[q' → logprob: -19.7500057220459
    10. '	q' → logprob: -20.0000057220459

Token 575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -16.0
    4. '   ' → logprob: -17.625
    5. ')`' → logprob: -18.5
    6. '),' → logprob: -18.625
    7. ')
' → logprob: -19.625
    8. ').' → logprob: -19.875
    9. ')

' → logprob: -20.625
    10. ')}' → logprob: -21.375

Token 576: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03430008143186569
    2. '
' → logprob: -3.5343000888824463
    3. '    
' → logprob: -5.909299850463867
    4. '<|end|>' → logprob: -7.284299850463867
    5. '   
' → logprob: -8.409299850463867
    6. ')' → logprob: -8.659299850463867
    7. ' 
' → logprob: -8.659299850463867
    8. '  
' → logprob: -8.784299850463867
    9. 'if' → logprob: -8.784299850463867
    10. ' if' → logprob: -9.034299850463867

Token 577: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030449027195572853
    2. 'if' → logprob: -3.5304489135742188
    3. '    
' → logprob: -7.780448913574219
    4. ' if' → logprob: -8.405448913574219
    5. '
' → logprob: -10.155448913574219
    6. '  
' → logprob: -12.405448913574219
    7. '  ' → logprob: -12.530448913574219
    8. '   
' → logprob: -12.530448913574219
    9. '	if' → logprob: -13.030448913574219
    10. '    ' → logprob: -13.530448913574219

Token 578: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.6312321753939614e-05
    2. ' if' → logprob: -10.500036239624023
    3. '   ' → logprob: -11.875036239624023
    4. '#' → logprob: -14.375036239624023
    5. '
' → logprob: -14.500036239624023
    6. ';if' → logprob: -15.250036239624023
    7. '    
' → logprob: -15.500036239624023
    8. 'If' → logprob: -16.750036239624023
    9. '```' → logprob: -16.875036239624023
    10. 'i' → logprob: -17.000036239624023

Token 579: ' récup' (ID: 62856)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16444599628448486
    2. 'continue' → logprob: -2.0394458770751953
    3. ' if' → logprob: -4.914445877075195
    4. ' continue' → logprob: -4.914445877075195
    5. '   ' → logprob: -5.914445877075195
    6. '#' → logprob: -6.914445877075195
    7. 'contin' → logprob: -7.164445877075195
    8. ')' → logprob: -7.289445877075195
    9. 'v' → logprob: -8.289445877075195
    10. '=' → logprob: -8.414445877075195

Token 580: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.5101001858711243
    2. 'ire' → logprob: -1.0101001262664795
    3. 'er' → logprob: -4.385100364685059
    4. 'ere' → logprob: -4.385100364685059
    5. 're' → logprob: -4.635100364685059
    6. 'are' → logprob: -8.760100364685059
    7. 'e' → logprob: -8.885100364685059
    8. 'r' → logprob: -9.635100364685059
    9. 'érer' → logprob: -9.635100364685059
    10. '```' → logprob: -9.760100364685059

Token 581: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21268565952777863
    2. '(' → logprob: -1.9626857042312622
    3. '(dist' → logprob: -3.2126855850219727
    4. ')' → logprob: -4.837685585021973
    5. ' dist' → logprob: -6.462685585021973
    6. '<|end|>' → logprob: -7.337685585021973
    7. 'the' → logprob: -8.837685585021973
    8. '_dist' → logprob: -9.212685585021973
    9. '(
' → logprob: -9.462685585021973
    10. ' (' → logprob: -9.587685585021973

Token 582: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.09298329055309296
    2. ' état' → logprob: -3.4679832458496094
    3. '’état' → logprob: -3.4679832458496094
    4. 'a' → logprob: -4.592983245849609
    5. ')' → logprob: -4.842983245849609
    6. 'e' → logprob: -6.592983245849609
    7. '   ' → logprob: -6.842983245849609
    8. ']' → logprob: -7.592983245849609
    9. 'state' → logprob: -7.717983245849609
    10. '')' → logprob: -7.842983245849609

Token 583: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01620926894247532
    2. '    ' → logprob: -5.141209125518799
    3. '    
' → logprob: -5.766209125518799
    4. '  ' → logprob: -6.016209125518799
    5. '
' → logprob: -6.766209125518799
    6. ' if' → logprob: -7.016209125518799
    7. 'if' → logprob: -7.391209125518799
    8. ')' → logprob: -7.516209125518799
    9. '<|end|>' → logprob: -7.891209125518799
    10. '#' → logprob: -8.266209602355957

Token 584: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04565408453345299
    2. 'la' → logprob: -3.670654058456421
    3. 'the' → logprob: -4.420654296875
    4. 'l' → logprob: -5.545654296875
    5. ' la' → logprob: -6.545654296875
    6. ' le' → logprob: -7.545654296875
    7. 'least' → logprob: -7.670654296875
    8. 'les' → logprob: -8.795654296875
    9. ' the' → logprob: -8.795654296875
    10. '<|end|>' → logprob: -9.295654296875

Token 585: ' coût' (ID: 73109)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.07683761417865753
    2. 'co' → logprob: -3.0768375396728516
    3. 'moins' → logprob: -3.8268375396728516
    4. 'me' → logprob: -5.951837539672852
    5. ' plus' → logprob: -6.701837539672852
    6. ' coût' → logprob: -7.576837539672852
    7. 'mo' → logprob: -7.951837539672852
    8. 'cout' → logprob: -8.076837539672852
    9. 'minimum' → logprob: -8.826837539672852
    10. ' moindre' → logprob: -9.076837539672852

Token 586: ' accum' (ID: 23148)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.6367071866989136
    2. 'le' → logprob: -1.8867071866989136
    3. 'min' → logprob: -1.8867071866989136
    4. 'minimal' → logprob: -2.386707305908203
    5. ' minimum' → logprob: -3.261707305908203
    6. ' minimal' → logprob: -3.636707305908203
    7. ' le' → logprob: -5.511707305908203
    8. '_min' → logprob: -5.886707305908203
    9. 'acc' → logprob: -6.636707305908203
    10. 'act' → logprob: -7.011707305908203

Token 587: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.0005705483490601182
    2. 'ul' → logprob: -7.500570774078369
    3. 'ule' → logprob: -11.125570297241211
    4. 'u' → logprob: -13.125570297241211
    5. 'ulated' → logprob: -14.625570297241211
    6. 'mul' → logprob: -15.625570297241211
    7. '   ' → logprob: -16.50057029724121
    8. '<ul' → logprob: -17.87557029724121
    9. 'ulat' → logprob: -18.12557029724121
    10. 'uls' → logprob: -18.25057029724121

Token 588: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005293765105307102
    2. '    
' → logprob: -6.255293846130371
    3. ' if' → logprob: -6.505293846130371
    4. 'if' → logprob: -7.005293846130371
    5. '
' → logprob: -8.255293846130371
    6. '   
' → logprob: -8.255293846130371
    7. '  ' → logprob: -8.755293846130371
    8. ')' → logprob: -9.255293846130371
    9. '    ' → logprob: -9.880293846130371
    10. ' 
' → logprob: -11.005293846130371

Token 589: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027482921723276377
    2. 'if' → logprob: -6.752748489379883
    3. '    
' → logprob: -7.127748489379883
    4. '
' → logprob: -7.377748489379883
    5. ' if' → logprob: -8.877748489379883
    6. '   
' → logprob: -13.002748489379883
    7. '	if' → logprob: -13.127748489379883
    8. ' 
' → logprob: -13.377748489379883
    9. '  
' → logprob: -14.627748489379883
    10. '   ' → logprob: -14.752748489379883

Token 590: 'prior' (ID: 114913)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007526297587901354
    2. ')' → logprob: -5.007526397705078
    3. ' dist' → logprob: -7.257526397705078
    4. '
' → logprob: -11.007526397705078
    5. ',' → logprob: -11.507526397705078
    6. '  ' → logprob: -11.632526397705078
    7. ')
' → logprob: -11.757526397705078
    8. '),' → logprob: -11.757526397705078
    9. '    ' → logprob: -11.882526397705078
    10. 'v' → logprob: -12.007526397705078

Token 591: 'ité' (ID: 3761)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.4297839403152466
    2. 'ité' → logprob: -1.0547839403152466
    3. 'itaire' → logprob: -7.179783821105957
    4. ')' → logprob: -8.929783821105957
    5. 'i' → logprob: -10.554783821105957
    6. 'isé' → logprob: -10.679783821105957
    7. 'it' → logprob: -10.679783821105957
    8. 'itié' → logprob: -11.054783821105957
    9. 'itary' → logprob: -11.179783821105957
    10. 'ités' → logprob: -11.179783821105957

Token 592: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004269765689969063
    2. ',' → logprob: -5.754269599914551
    3. ' )' → logprob: -7.129269599914551
    4. ')
' → logprob: -9.25426959991455
    5. ',)' → logprob: -9.25426959991455
    6. '),' → logprob: -10.12926959991455
    7. '   ' → logprob: -11.25426959991455
    8. '=' → logprob: -11.25426959991455
    9. ' ,' → logprob: -11.62926959991455
    10. ' ' → logprob: -12.75426959991455

Token 593: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8517837524414062
    2. 'st' → logprob: -1.3517837524414062
    3. 'ast' → logprob: -1.8517837524414062
    4. 'ss' → logprob: -3.3517837524414062
    5. ' plus' → logprob: -3.6017837524414062
    6. 'test' → logprob: -3.7267837524414062
    7. 's' → logprob: -4.351783752441406
    8. 'space' → logprob: -4.851783752441406
    9. 'ving' → logprob: -5.351783752441406
    10. 'aste' → logprob: -5.601783752441406

Token 594: ' haute' (ID: 49646)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7625647783279419
    2. 'fa' → logprob: -0.8875647783279419
    3. 'é' → logprob: -3.0125646591186523
    4. 'fort' → logprob: -3.3875646591186523
    5. 'bas' → logprob: -4.137564659118652
    6. 'import' → logprob: -4.887564659118652
    7. 'pet' → logprob: -5.387564659118652
    8. 'gr' → logprob: -5.887564659118652
    9. ' faible' → logprob: -5.887564659118652
    10. 'ha' → logprob: -6.387564659118652

Token 595: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7530574849806726e-05
    2. ')
' → logprob: -10.375057220458984
    3. ' )' → logprob: -10.750057220458984
    4. '   ' → logprob: -12.375057220458984
    5. ')
' → logprob: -14.750057220458984
    6. ')

' → logprob: -16.875057220458984
    7. '  ' → logprob: -17.000057220458984
    8. ' ' → logprob: -17.125057220458984
    9. ' ' → logprob: -18.125057220458984
    10. ').' → logprob: -18.250057220458984

Token 596: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08624298870563507
    2. 'if' → logprob: -2.586242914199829
    3. ' if' → logprob: -5.086243152618408
    4. '    
' → logprob: -7.336243152618408
    5. '
' → logprob: -8.71124267578125
    6. ' 
' → logprob: -9.21124267578125
    7. 'i' → logprob: -9.58624267578125
    8. '	if' → logprob: -9.58624267578125
    9. '    ' → logprob: -11.08624267578125
    10. ' ' → logprob: -11.21124267578125

Token 597: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006755155511200428
    2. '   ' → logprob: -5.006755352020264
    3. ' if' → logprob: -10.256754875183105
    4. '    
' → logprob: -12.756754875183105
    5. '#' → logprob: -13.881754875183105
    6. '	if' → logprob: -14.631754875183105
    7. '
' → logprob: -16.006755828857422
    8. '```' → logprob: -16.006755828857422
    9. '       ' → logprob: -16.881755828857422
    10. 'If' → logprob: -17.631755828857422

Token 598: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.584239938296378e-06
    2. '   ' → logprob: -12.500007629394531
    3. ' if' → logprob: -12.500007629394531
    4. '    
' → logprob: -16.75000762939453
    5. '#' (adapté à ' #') → logprob: -17.50000762939453
    6. '
' → logprob: -19.75000762939453
    7. '       ' → logprob: -20.25000762939453
    8. '	if' → logprob: -20.62500762939453
    9. 'If' → logprob: -20.75000762939453
    10. '        
' → logprob: -20.87500762939453

Token 599: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1279553291387856e-05
    2. ' if' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. '
' → logprob: -17.625011444091797
    5. 'i' → logprob: -18.000011444091797
    6. '#' → logprob: -18.000011444091797
    7. '    
' → logprob: -18.500011444091797
    8. ' ' → logprob: -19.250011444091797
    9. 'If' → logprob: -19.500011444091797
    10. '```' → logprob: -19.625011444091797

Token 600: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06332642585039139
    2. 'dp' → logprob: -2.938326358795166
    3. ' dist' → logprob: -4.813326358795166
    4. ' dp' → logprob: -8.188326835632324
    5. '	dist' → logprob: -12.063326835632324
    6. '(dist' → logprob: -13.938326835632324
    7. '   ' → logprob: -14.063326835632324
    8. 'd' → logprob: -14.188326835632324
    9. '	dp' → logprob: -14.563326835632324
    10. ' ' → logprob: -15.188326835632324

Token 601: ''on' (ID: 25812)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.25506705045700073
    2. 'dist' → logprob: -1.7550671100616455
    3. 'ist' → logprob: -3.0050671100616455
    4. 'p' → logprob: -6.630066871643066
    5. 'dp' → logprob: -7.380066871643066
    6. ' dp' → logprob: -8.130066871643066
    7. '(dist' → logprob: -8.630066871643066
    8. '	dist' → logprob: -9.255066871643066
    9. 'istance' → logprob: -9.380066871643066
    10. '_dist' → logprob: -10.255066871643066

Token 602: ' trouve' (ID: 30913)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.1609182357788086
    2. 'dist' → logprob: -2.5359182357788086
    3. ' dist' → logprob: -3.1609182357788086
    4. 'dp' → logprob: -4.535918235778809
    5. 'p' → logprob: -4.535918235778809
    6. ' dp' → logprob: -6.035918235778809
    7. '>' → logprob: -6.535918235778809
    8. 'istance' → logprob: -6.785918235778809
    9. 'v' → logprob: -8.910918235778809
    10. '_dist' → logprob: -9.535918235778809

Token 603: ' cet' (ID: 19505)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.465310662984848
    2. ' dist' → logprob: -1.3403106927871704
    3. 'dp' → logprob: -2.340310573577881
    4. ' dp' → logprob: -4.340310573577881
    5. '   ' → logprob: -7.465310573577881
    6. ' ' → logprob: -8.715311050415039
    7. '(dist' → logprob: -9.215311050415039
    8. '	dist' → logprob: -9.715311050415039
    9. '  ' → logprob: -10.965311050415039
    10. 'd' → logprob: -11.215311050415039

Token 604: ' état' (ID: 59181)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.9480454921722412
    2. 'dist' → logprob: -1.3230454921722412
    3. 'istance' → logprob: -1.9480454921722412
    4. 'ist' → logprob: -2.823045492172241
    5. 'dp' → logprob: -2.823045492172241
    6. '_dist' → logprob: -3.198045492172241
    7. 'e' → logprob: -4.57304573059082
    8. 'istant' → logprob: -5.32304573059082
    9. ' dp' → logprob: -5.44804573059082
    10. 'u' → logprob: -5.57304573059082

Token 605: ' avec' (ID: 3937)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.29604822397232056
    2. '>' → logprob: -1.4210481643676758
    3. ' !=' → logprob: -5.296048164367676
    4. '[' → logprob: -5.671048164367676
    5. 'dist' → logprob: -6.421048164367676
    6. '!=' → logprob: -6.671048164367676
    7. 'd' → logprob: -7.421048164367676
    8. ' ' → logprob: -8.171048164367676
    9. '>d' → logprob: -8.421048164367676
    10. ' ==' → logprob: -8.421048164367676

Token 606: ' un' (ID: 537)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25222018361091614
    2. 'dp' → logprob: -1.5022201538085938
    3. ' dist' → logprob: -8.377220153808594
    4. ' dp' → logprob: -10.002220153808594
    5. '   ' → logprob: -12.502220153808594
    6. '(dist' → logprob: -12.877220153808594
    7. 'd' → logprob: -13.127220153808594
    8. '	dist' → logprob: -13.127220153808594
    9. '_dist' → logprob: -14.252220153808594
    10. '	dp' → logprob: -14.502220153808594

Token 607: ' meilleur' (ID: 37552)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.08528190851211548
    2. ' coût' → logprob: -2.8352818489074707
    3. 'dist' → logprob: -4.710281848907471
    4. 'c' → logprob: -5.585281848907471
    5. 'cout' → logprob: -5.835281848907471
    6. ' dist' → logprob: -6.460281848907471
    7. 'cost' → logprob: -6.835281848907471
    8. ' meilleur' → logprob: -7.085281848907471
    9. 'distance' → logprob: -7.585281848907471
    10. ' co' → logprob: -7.710281848907471

Token 608: ' coût' (ID: 73109)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.5872255563735962
    2. 'dist' → logprob: -1.8372255563735962
    3. ')' → logprob: -1.9622255563735962
    4. ' coût' → logprob: -2.2122254371643066
    5. '_' → logprob: -2.3372254371643066
    6. '   ' → logprob: -2.9622254371643066
    7. '_dist' → logprob: -2.9622254371643066
    8. 'co' → logprob: -3.2122254371643066
    9. 'cost' → logprob: -3.8372254371643066
    10. '_c' → logprob: -3.8372254371643066

Token 609: ' déjà' (ID: 21229)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1122269555926323
    2. ' >' → logprob: -2.612226963043213
    3. ':' → logprob: -3.987226963043213
    4. '!=' → logprob: -5.237226963043213
    5. ' and' → logprob: -6.112226963043213
    6. ',' → logprob: -6.237226963043213
    7. 'and' → logprob: -6.487226963043213
    8. ' !=' → logprob: -6.612226963043213
    9. '   ' → logprob: -8.112226486206055
    10. ' ' → logprob: -8.112226486206055

Token 610: ' enregistré' (ID: 176215)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.9340312480926514
    2. '<' → logprob: -1.4340312480926514
    3. ' inférieur' → logprob: -1.4340312480926514
    4. 'moins' → logprob: -3.4340312480926514
    5. 'dp' → logprob: -3.6840312480926514
    6. ' strict' → logprob: -4.5590314865112305
    7. 'inf' → logprob: -4.6840314865112305
    8. 'diff' → logprob: -5.1840314865112305
    9. ',' → logprob: -5.3090314865112305
    10. '   ' → logprob: -5.4340314865112305

Token 611: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05202459916472435
    2. '>' → logprob: -4.1770243644714355
    3. '!=' → logprob: -4.3020243644714355
    4. 'and' → logprob: -5.0520243644714355
    5. ' and' → logprob: -5.1770243644714355
    6. ',' → logprob: -5.5520243644714355
    7. ' !=' → logprob: -6.0520243644714355
    8. '   ' → logprob: -6.6770243644714355
    9. 'continue' → logprob: -7.9270243644714355
    10. 'if' → logprob: -8.052024841308594

Token 612: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21459464728832245
    2. 'continue' → logprob: -2.214594602584839
    3. '   ' → logprob: -2.714594602584839
    4. '       ' → logprob: -4.214594841003418
    5. ' if' → logprob: -5.964594841003418
    6. ' continue' → logprob: -7.964594841003418
    7. '	continue' → logprob: -12.839594841003418
    8. '           ' → logprob: -13.214594841003418
    9. '
' → logprob: -14.339594841003418
    10. '    ' → logprob: -14.464594841003418

Token 613: ' saute' (ID: 146395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.011621121317148209
    2. ' continue' → logprob: -4.511620998382568
    3. '   ' → logprob: -7.511620998382568
    4. 'contin' → logprob: -10.761621475219727
    5. '_continue' → logprob: -12.886621475219727
    6. '	continue' → logprob: -13.511621475219727
    7. ' ' → logprob: -14.261621475219727
    8. '       ' → logprob: -15.011621475219727
    9. ' continuer' → logprob: -16.386621475219727
    10. ' continues' → logprob: -16.761621475219727

Token 614: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0632149800658226
    2. '       ' → logprob: -2.9382150173187256
    3. '    ' → logprob: -5.1882147789001465
    4. '     ' → logprob: -7.1882147789001465
    5. '
' → logprob: -7.5632147789001465
    6. '  ' → logprob: -7.9382147789001465
    7. '    
' → logprob: -7.9382147789001465
    8. 'continue' → logprob: -7.9382147789001465
    9. '      ' → logprob: -8.688215255737305
    10. 't' → logprob: -10.438215255737305

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016279984265565872
    2. ' if' → logprob: -4.891280174255371
    3. 'if' → logprob: -5.016280174255371
    4. '       ' → logprob: -7.016280174255371
    5. ' continue' → logprob: -7.391280174255371
    6. 'continue' → logprob: -8.766280174255371
    7. '    ' → logprob: -9.391280174255371
    8. '    
' → logprob: -9.766280174255371
    9. '
' → logprob: -9.891280174255371
    10. '  ' → logprob: -10.266280174255371

Token 616: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06378206610679626
    2. '   ' → logprob: -2.813781976699829
    3. ' if' → logprob: -6.313782215118408
    4. '    
' → logprob: -14.68878173828125
    5. '	if' → logprob: -14.68878173828125
    6. 'continue' → logprob: -15.56378173828125
    7. '       ' → logprob: -15.81378173828125
    8. '
' → logprob: -15.81378173828125
    9. '    ' → logprob: -16.06378173828125
    10. 'i' → logprob: -16.56378173828125

Token 617: ' dp' (ID: 21546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.42514485120773315
    2. 'dp' → logprob: -1.175144910812378
    3. ' dist' → logprob: -3.425144910812378
    4. ' dp' → logprob: -5.300144672393799
    5. '   ' → logprob: -12.175145149230957
    6. '	dist' → logprob: -12.425145149230957
    7. '	dp' → logprob: -13.175145149230957
    8. 'd' → logprob: -13.300145149230957
    9. '(dist' → logprob: -14.675145149230957
    10. ' ' → logprob: -14.925145149230957

Token 618: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6240566083070007e-06
    2. 'v' → logprob: -13.375001907348633
    3. '[' → logprob: -18.875001907348633
    4. ' v' → logprob: -19.000001907348633
    5. '<v' → logprob: -19.000001907348633
    6. ')v' → logprob: -20.000001907348633
    7. '	v' → logprob: -20.750001907348633
    8. '```' → logprob: -20.875001907348633
    9. '(v' → logprob: -21.375001907348633
    10. '][' → logprob: -21.500001907348633

Token 619: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05704281106591225
    2. '[v' → logprob: -3.1820428371429443
    3. '[m' → logprob: -4.557042598724365
    4. '[' → logprob: -5.932042598724365
    5. ']' → logprob: -7.182042598724365
    6. 'v' → logprob: -11.557043075561523
    7. ' ][' → logprob: -12.432043075561523
    8. ']][' → logprob: -12.557043075561523
    9. '   ' → logprob: -12.682043075561523
    10. '
' → logprob: -13.307043075561523

Token 620: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -1.0280383548888494e-06
    2. ' money' → logprob: -13.875000953674316
    3. 'm' → logprob: -18.125001907348633
    4. '_money' → logprob: -20.125001907348633
    5. 'memory' → logprob: -21.000001907348633
    6. '.money' → logprob: -21.125001907348633
    7. 'mon' → logprob: -21.625001907348633
    8. 'music' → logprob: -21.750001907348633
    9. ' ' → logprob: -22.125001907348633
    10. 'mind' → logprob: -22.250001907348633

Token 621: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1301526427268982
    2. ']<' → logprob: -2.630152702331543
    3. ']' → logprob: -3.005152702331543
    4. ' <' → logprob: -8.005152702331543
    5. '<v' → logprob: -10.005152702331543
    6. '<m' → logprob: -10.505152702331543
    7. ')<' → logprob: -12.130152702331543
    8. '<len' → logprob: -13.130152702331543
    9. '<ll' → logprob: -13.255152702331543
    10. '<th' → logprob: -13.380152702331543

Token 622: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00011367550177965313
    2. ' <' → logprob: -9.125113487243652
    3. '<v' → logprob: -12.875113487243652
    4. '<m' → logprob: -14.875113487243652
    5. ' ' → logprob: -15.000113487243652
    6. '<c' → logprob: -15.375113487243652
    7. '<n' → logprob: -15.875113487243652
    8. '<w' → logprob: -15.875113487243652
    9. '<u' → logprob: -15.875113487243652
    10. '<len' → logprob: -16.12511444091797

Token 623: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001584850688232109
    2. ' dist' → logprob: -8.750158309936523
    3. '	dist' → logprob: -17.750158309936523
    4. '   ' → logprob: -19.750158309936523
    5. ' ' → logprob: -19.875158309936523
    6. '(dist' → logprob: -20.250158309936523
    7. 'd' → logprob: -20.500158309936523
    8. '_dist' → logprob: -20.875158309936523
    9. 'Dist' → logprob: -21.125158309936523
    10. '.dist' → logprob: -21.250158309936523

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005446921568363905
    2. ':
' → logprob: -8.000544548034668
    3. 'continue' → logprob: -9.375544548034668
    4. '   ' → logprob: -9.500544548034668
    5. ' continue' → logprob: -10.125544548034668
    6. '	continue' → logprob: -12.000544548034668
    7. '       ' → logprob: -13.750544548034668
    8. ' :' → logprob: -14.125544548034668
    9. '_continue' → logprob: -14.250544548034668
    10. ' continues' → logprob: -14.625544548034668

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00848278310149908
    2. '   ' → logprob: -5.633482933044434
    3. 'continue' → logprob: -5.758482933044434
    4. '	continue' → logprob: -7.008482933044434
    5. ' continue' → logprob: -7.133482933044434
    6. '	' → logprob: -11.633482933044434
    7. '	   ' → logprob: -13.008482933044434
    8. '_continue' → logprob: -13.883482933044434
    9. 'contin' → logprob: -15.383482933044434
    10. '```' → logprob: -15.633482933044434

Token 626: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.00013214473437983543
    2. '   ' → logprob: -9.25013256072998
    3. ' continue' → logprob: -10.25013256072998
    4. '       ' → logprob: -15.00013256072998
    5. '	continue' → logprob: -16.000131607055664
    6. 'contin' → logprob: -16.625131607055664
    7. 'continu' → logprob: -17.375131607055664
    8. '_continue' → logprob: -20.125131607055664
    9. '           ' → logprob: -20.375131607055664
    10. 'continued' → logprob: -20.625131607055664

Token 627: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08789924532175064
    2. '    
' → logprob: -2.7128992080688477
    3. '
' → logprob: -4.087899208068848
    4. '   
' → logprob: -7.962899208068848
    5. ' 
' → logprob: -9.087899208068848
    6. '  
' → logprob: -9.337899208068848
    7. ' for' → logprob: -9.462899208068848
    8. 'for' → logprob: -9.587899208068848
    9. ')' → logprob: -9.712899208068848
    10. '<|end|>' → logprob: -9.962899208068848

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2058809995651245
    2. 'for' → logprob: -1.7058809995651245
    3. '#' → logprob: -6.080881118774414
    4. '    
' → logprob: -6.705881118774414
    5. ' for' → logprob: -7.080881118774414
    6. '
' → logprob: -9.205881118774414
    7. '	for' → logprob: -12.955881118774414
    8. '        
' → logprob: -13.830881118774414
    9. ' #' → logprob: -14.580881118774414
    10. '```' → logprob: -14.830881118774414

Token 629: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004120904020965099
    2. '#' (adapté à ' #') → logprob: -5.504120826721191
    3. '   ' → logprob: -10.254120826721191
    4. ' for' → logprob: -12.504120826721191
    5. '    
' → logprob: -12.754120826721191
    6. '
' → logprob: -14.254120826721191
    7. 'if' → logprob: -17.004121780395508
    8. '	for' → logprob: -17.629121780395508
    9. ' #' → logprob: -17.754121780395508
    10. '```' → logprob: -18.504121780395508

Token 630: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00318163656629622
    2. '#' → logprob: -5.753181457519531
    3. ' for' → logprob: -13.253181457519531
    4. '   ' → logprob: -13.253181457519531
    5. 'if' → logprob: -15.503181457519531
    6. '	for' → logprob: -16.62818145751953
    7. '
' → logprob: -16.87818145751953
    8. '    
' → logprob: -16.87818145751953
    9. '```' → logprob: -17.75318145751953
    10. ' #' → logprob: -18.25318145751953

Token 631: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.16538579761981964
    2. 'ours' → logprob: -1.9153858423233032
    3. 'ourt' → logprob: -5.790385723114014
    4. 'ur' → logprob: -7.540385723114014
    5. '#' → logprob: -8.040386199951172
    6. '   ' → logprob: -8.540386199951172
    7. 'hor' → logprob: -8.540386199951172
    8. 'er' → logprob: -8.665386199951172
    9. 'or' → logprob: -9.040386199951172
    10. 'ol' → logprob: -9.290386199951172

Token 632: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15090660750865936
    2. 'for' → logprob: -2.275906562805176
    3. ' des' → logprob: -3.400906562805176
    4. '   ' → logprob: -5.650906562805176
    5. ' of' → logprob: -8.025906562805176
    6. ' in' → logprob: -9.525906562805176
    7. ' pour' → logprob: -10.650906562805176
    8. 'des' → logprob: -10.900906562805176
    9. ' de' → logprob: -11.650906562805176
    10. ',' → logprob: -11.775906562805176

Token 633: ' tous' (ID: 10688)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0008064138819463551
    2. ' graph' → logprob: -7.1258063316345215
    3. 'for' → logprob: -14.50080680847168
    4. '	graph' → logprob: -14.50080680847168
    5. '   ' → logprob: -15.00080680847168
    6. ' ' → logprob: -15.12580680847168
    7. '(graph' → logprob: -15.87580680847168
    8. 'range' → logprob: -16.00080680847168
    9. '  ' → logprob: -16.62580680847168
    10. ')' → logprob: -18.50080680847168

Token 634: ' les' (ID: 1341)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.74627685546875
    2. 'neighbor' → logprob: -1.74627685546875
    3. ' voisin' → logprob: -2.24627685546875
    4. ' voisins' → logprob: -2.37127685546875
    5. 'vo' → logprob: -3.12127685546875
    6. '(u' → logprob: -3.87127685546875
    7. 'for' → logprob: -3.99627685546875
    8. '(vo' → logprob: -4.49627685546875
    9. '(ne' → logprob: -4.74627685546875
    10. 'graph' → logprob: -4.99627685546875

Token 635: ' voisins' (ID: 166720)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.7980925440788269
    2. 'graph' → logprob: -1.1730926036834717
    3. 'for' → logprob: -2.4230926036834717
    4. 'vo' → logprob: -2.4230926036834717
    5. ' voisins' → logprob: -3.0480926036834717
    6. 'edges' → logprob: -5.423092365264893
    7. 'neighbor' → logprob: -5.673092365264893
    8. 'adj' → logprob: -6.173092365264893
    9. 'nbr' → logprob: -6.673092365264893
    10. '(graph' → logprob: -6.923092365264893

Token 636: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.101789116859436
    2. 'for' → logprob: -1.101789116859436
    3. ' for' → logprob: -1.101789116859436
    4. ',' → logprob: -5.8517889976501465
    5. ' of' → logprob: -9.976789474487305
    6. '  ' → logprob: -10.351789474487305
    7. '	for' → logprob: -10.476789474487305
    8. '(v' → logprob: -10.476789474487305
    9. ' (' → logprob: -10.851789474487305
    10. ' in' → logprob: -10.851789474487305

Token 637: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06417088210582733
    2. 'graph' → logprob: -2.8141708374023438
    3. ' v' → logprob: -6.439170837402344
    4. ' graph' → logprob: -7.564170837402344
    5. 'gr' → logprob: -9.939170837402344
    6. '   ' → logprob: -11.814170837402344
    7. ' grap' → logprob: -12.564170837402344
    8. 'vertex' → logprob: -12.689170837402344
    9. '```' → logprob: -12.939170837402344
    10. '
' → logprob: -13.314170837402344

Token 638: ' courant' (ID: 74694)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5110120177268982
    2. 'for' → logprob: -1.761012077331543
    3. 'v' → logprob: -1.886012077331543
    4. ' in' → logprob: -3.511012077331543
    5. ' v' → logprob: -4.136012077331543
    6. '   ' → logprob: -4.386012077331543
    7. 'graph' → logprob: -4.886012077331543
    8. ',' → logprob: -5.511012077331543
    9. ' graph' → logprob: -5.761012077331543
    10. '(v' → logprob: -6.386012077331543

Token 639: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3531154990196228
    2. ' for' → logprob: -1.6031155586242676
    3. 'for' → logprob: -2.3531155586242676
    4. '    
' → logprob: -7.603115558624268
    5. ':' → logprob: -7.978115558624268
    6. '	for' → logprob: -9.22811508178711
    7. '
' → logprob: -9.47811508178711
    8. ',' → logprob: -9.60311508178711
    9. '  ' → logprob: -10.72811508178711
    10. '   
' → logprob: -11.22811508178711

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35670140385627747
    2. ' for' → logprob: -1.231701374053955
    3. 'for' → logprob: -4.856701374053955
    4. '    
' → logprob: -7.981701374053955
    5. '	for' → logprob: -9.731701850891113
    6. ',' → logprob: -11.106701850891113
    7. ':' → logprob: -11.606701850891113
    8. '
' → logprob: -11.856701850891113
    9. ' 
' → logprob: -12.481701850891113
    10. '   
' → logprob: -12.981701850891113

Token 641: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00011284107313258573
    2. ' for' → logprob: -9.250112533569336
    3. '   ' → logprob: -11.000112533569336
    4. '	for' → logprob: -17.000112533569336
    5. '    
' → logprob: -18.250112533569336
    6. '
' → logprob: -19.500112533569336
    7. '```' → logprob: -21.625112533569336
    8. ' 
' → logprob: -24.000112533569336
    9. ')' → logprob: -24.375112533569336
    10. '        
' → logprob: -24.500112533569336

Token 642: ' nv' (ID: 68641)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22243472933769226
    2. 'w' → logprob: -2.0974347591400146
    3. '(to' → logprob: -3.2224347591400146
    4. '(u' → logprob: -4.4724345207214355
    5. 'u' → logprob: -4.5974345207214355
    6. '(w' → logprob: -4.8474345207214355
    7. 'nv' → logprob: -5.8474345207214355
    8. '(v' → logprob: -6.2224345207214355
    9. '(n' → logprob: -6.4724345207214355
    10. 'nei' → logprob: -7.9724345207214355

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.157039049663581e-05
    2. ',v' → logprob: -10.500051498413086
    3. ' ,' → logprob: -11.250051498413086
    4. ',n' → logprob: -11.500051498413086
    5. ',
' → logprob: -16.250051498413086
    6. '‌,' → logprob: -16.375051498413086
    7. 'n' → logprob: -16.625051498413086
    8. 'v' → logprob: -16.750051498413086
    9. ',w' → logprob: -16.750051498413086
    10. ',num' → logprob: -17.000051498413086

Token 644: ' fare' (ID: 25285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07851691544055939
    2. 'cost' → logprob: -2.953516960144043
    3. ' a' → logprob: -4.078516960144043
    4. ' cost' → logprob: -5.203516960144043
    5. 'na' → logprob: -7.328516960144043
    6. 'ca' → logprob: -9.703516960144043
    7. ' na' → logprob: -9.828516960144043
    8. 'price' → logprob: -11.078516960144043
    9. 'ac' → logprob: -11.328516960144043
    10. 'va' → logprob: -11.578516960144043

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.925185440806672e-05
    2. ' ,' → logprob: -9.500099182128906
    3. 'a' → logprob: -10.875099182128906
    4. ',a' → logprob: -12.500099182128906
    5. 's' → logprob: -14.875099182128906
    6. 'cost' → logprob: -15.000099182128906
    7. 'money' → logprob: -15.250099182128906
    8. '_,' → logprob: -15.375099182128906
    9. 't' → logprob: -16.625099182128906
    10. ',m' → logprob: -16.875099182128906

Token 646: ' cost' (ID: 3097)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2831968069076538
    2. 'ntime' → logprob: -1.5331968069076538
    3. ' time' → logprob: -4.158196926116943
    4. 'cost' → logprob: -4.658196926116943
    5. 'nt' → logprob: -6.283196926116943
    6. 'n' → logprob: -6.658196926116943
    7. 't' → logprob: -6.908196926116943
    8. ' cost' → logprob: -8.533196449279785
    9. 'nd' → logprob: -8.783196449279785
    10. ' n' → logprob: -8.783196449279785

Token 647: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0637407973408699
    2. 'time' → logprob: -3.3137407302856445
    3. '_time' → logprob: -3.8137407302856445
    4. 't' → logprob: -6.9387407302856445
    5. 'temps' → logprob: -7.0637407302856445
    6. 'ime' → logprob: -7.8137407302856445
    7. 'temp' → logprob: -8.063740730285645
    8. 'in' → logprob: -8.563740730285645
    9. 'en' → logprob: -9.063740730285645
    10. 'e' → logprob: -9.313740730285645

Token 648: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0001584850688232109
    2. ' graph' → logprob: -8.750158309936523
    3. '	graph' → logprob: -17.625158309936523
    4. '(graph' → logprob: -21.500158309936523
    5. '   ' → logprob: -21.500158309936523
    6. '_graph' → logprob: -22.000158309936523
    7. '
' → logprob: -23.000158309936523
    8. 'Graph' → logprob: -23.250158309936523
    9. ' ' → logprob: -23.250158309936523
    10. 'raph' → logprob: -24.000158309936523

Token 649: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. 'v' → logprob: -14.125000953674316
    3. '[' → logprob: -17.125
    4. '(v' → logprob: -17.5
    5. ' [' → logprob: -19.375
    6. '[u' → logprob: -20.375
    7. ',v' → logprob: -20.375
    8. '
' → logprob: -20.625
    9. ' v' → logprob: -20.75
    10. '[V' → logprob: -21.0

Token 650: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3487809896469116
    2. '):' → logprob: -1.2237809896469116
    3. '):
' → logprob: -9.473780632019043
    4. ']:
' → logprob: -9.723780632019043
    5. ']' → logprob: -10.098780632019043
    6. ' ):' → logprob: -10.223780632019043
    7. '}:' → logprob: -10.223780632019043
    8. ':' → logprob: -10.348780632019043
    9. ']):' → logprob: -10.848780632019043
    10. '   ' → logprob: -11.348780632019043

Token 651: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07422536611557007
    2. '   ' → logprob: -4.074225425720215
    3. ' 
' → logprob: -4.074225425720215
    4. '    ' → logprob: -4.199225425720215
    5. ' ' → logprob: -4.699225425720215
    6. '<|end|>' → logprob: -5.199225425720215
    7. '        
' → logprob: -6.324225425720215
    8. '	' → logprob: -7.074225425720215
    9. '
' → logprob: -7.199225425720215
    10. '	   ' → logprob: -7.449225425720215

Token 652: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2282300740480423
    2. 'if' → logprob: -1.9782301187515259
    3. '   ' → logprob: -3.4782299995422363
    4. 'new' → logprob: -3.8532299995422363
    5. ' if' → logprob: -4.728229999542236
    6. 'money' → logprob: -6.228229999542236
    7. 'next' → logprob: -7.103229999542236
    8. ' new' → logprob: -7.228229999542236
    9. '        
' → logprob: -7.603229999542236
    10. '    ' → logprob: -8.353230476379395

Token 653: ' nv' (ID: 68641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.578639566898346
    2. 'if' → logprob: -1.2036395072937012
    3. 'new' → logprob: -2.703639507293701
    4. 'money' → logprob: -3.328639507293701
    5. ' if' → logprob: -3.828639507293701
    6. 'next' → logprob: -5.328639507293701
    7. ' new' → logprob: -5.828639507293701
    8. '    ' → logprob: -6.328639507293701
    9. '       ' → logprob: -6.578639507293701
    10. '  ' → logprob: -6.953639507293701

Token 654: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03614096716046333
    2. ' in' → logprob: -4.1611409187316895
    3. 'in' → logprob: -4.6611409187316895
    4. '<|end|>' → logprob: -5.5361409187316895
    5. '   ' → logprob: -6.1611409187316895
    6. ' ,' → logprob: -6.5361409187316895
    7. ':' → logprob: -7.0361409187316895
    8. ')' → logprob: -7.0361409187316895
    9. '):' → logprob: -7.9111409187316895
    10. '  ' → logprob: -7.9111409187316895

Token 655: ' voisin' (ID: 145411)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.7166215777397156
    2. ' nv' → logprob: -0.7166215777397156
    3. 'v' → logprob: -4.466621398925781
    4. 'neighbor' → logprob: -5.216621398925781
    5. ' v' → logprob: -6.466621398925781
    6. '_nv' → logprob: -6.716621398925781
    7. 'next' → logprob: -7.716621398925781
    8. ' neighbor' → logprob: -7.716621398925781
    9. '0' → logprob: -7.841621398925781
    10. 'new' → logprob: -7.841621398925781

Token 656: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41620442271232605
    2. '<|end|>' → logprob: -1.5412044525146484
    3. ':' → logprob: -2.9162044525146484
    4. '       ' → logprob: -3.7912044525146484
    5. '    
' → logprob: -4.041204452514648
    6. ',' → logprob: -4.791204452514648
    7. '
' → logprob: -5.291204452514648
    8. '  ' → logprob: -5.541204452514648
    9. '<|end|>' → logprob: -5.666204452514648
    10. '        
' → logprob: -6.041204452514648

Token 657: ' fare' (ID: 25285)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.263955682516098
    2. '   ' → logprob: -2.263955593109131
    3. 'new' → logprob: -3.263955593109131
    4. ' money' → logprob: -3.763955593109131
    5. ' if' → logprob: -4.263955593109131
    6. 'if' → logprob: -4.263955593109131
    7. ' new' → logprob: -4.763955593109131
    8. '    ' → logprob: -5.263955593109131
    9. '    
' → logprob: -5.263955593109131
    10. 'next' → logprob: -5.513955593109131

Token 658: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019972622394561768
    2. '=' → logprob: -5.144972801208496
    3. ' ,' → logprob: -5.269972801208496
    4. '<|end|>' → logprob: -5.394972801208496
    5. ' =' → logprob: -6.144972801208496
    6. '   ' → logprob: -6.769972801208496
    7. '  ' → logprob: -7.894972801208496
    8. ')' → logprob: -8.644972801208496
    9. ':' → logprob: -8.644972801208496
    10. ',
' → logprob: -10.644972801208496

Token 659: ' pièces' (ID: 49165)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18008875846862793
    2. ' a' → logprob: -1.805088758468628
    3. 'fare' → logprob: -8.180088996887207
    4. ' fare' → logprob: -10.430088996887207
    5. ' ' → logprob: -11.555088996887207
    6. ' cost' → logprob: -12.180088996887207
    7. 'cost' → logprob: -12.305088996887207
    8. ' ' → logprob: -12.305088996887207
    9. ',' → logprob: -13.430088996887207
    10. 'amount' → logprob: -14.180088996887207

Token 660: ' nécessaires' (ID: 74402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009633547626435757
    2. ' ,' → logprob: -4.759633541107178
    3. '   ' → logprob: -7.634633541107178
    4. '  ' → logprob: -9.384634017944336
    5. '<|end|>' → logprob: -9.384634017944336
    6. ' in' → logprob: -10.134634017944336
    7. 'cost' → logprob: -10.134634017944336
    8. ' =' → logprob: -10.259634017944336
    9. 'en' → logprob: -10.259634017944336
    10. ')' → logprob: -10.634634017944336

Token 661: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40787971019744873
    2. '   ' → logprob: -1.1578797101974487
    3. '<|end|>' → logprob: -5.407879829406738
    4. '    ' → logprob: -5.657879829406738
    5. '        
' → logprob: -5.782879829406738
    6. ',' → logprob: -6.032879829406738
    7. ':' → logprob: -6.157879829406738
    8. '    
' → logprob: -6.407879829406738
    9. '  ' → logprob: -7.407879829406738
    10. ' if' → logprob: -7.657879829406738

Token 662: ' cost' (ID: 3097)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.02334575727581978
    2. ' time' → logprob: -4.398345947265625
    3. 'new' → logprob: -5.398345947265625
    4. 'cost' → logprob: -6.773345947265625
    5. 'temps' → logprob: -6.773345947265625
    6. 'temp' → logprob: -7.023345947265625
    7. 't' → logprob: -7.023345947265625
    8. 'duration' → logprob: -7.898345947265625
    9. '   ' → logprob: -8.023345947265625
    10. 'ntime' → logprob: -8.023345947265625

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3179260492324829
    2. '=' → logprob: -1.317926049232483
    3. ')' → logprob: -5.817925930023193
    4. '<|end|>' → logprob: -7.692925930023193
    5. '   ' → logprob: -7.942925930023193
    6. ':' → logprob: -8.192926406860352
    7. '):' → logprob: -8.567926406860352
    8. ',' → logprob: -8.692926406860352
    9. ' +=' → logprob: -9.817926406860352
    10. ' in' → logprob: -10.192926406860352

Token 664: ' coût' (ID: 73109)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.002701208693906665
    2. ' temps' → logprob: -6.002701282501221
    3. 'time' → logprob: -9.752700805664062
    4. 't' → logprob: -10.127700805664062
    5. 'temp' → logprob: -10.377700805664062
    6. 'tem' → logprob: -10.377700805664062
    7. 'dur' → logprob: -11.127700805664062
    8. '   ' → logprob: -11.252700805664062
    9. 'co' → logprob: -11.502700805664062
    10. ' ' → logprob: -11.752700805664062

Token 665: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.33874133229255676
    2. 'en' → logprob: -1.5887413024902344
    3. '   ' → logprob: -3.3387413024902344
    4. ' de' → logprob: -3.9637413024902344
    5. 'de' → logprob: -4.838741302490234
    6. 'temps' → logprob: -4.838741302490234
    7. '    
' → logprob: -5.338741302490234
    8. ' temps' → logprob: -5.963741302490234
    9. '    ' → logprob: -6.463741302490234
    10. ')' → logprob: -7.338741302490234

Token 666: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.005291392095386982
    2. ' temps' → logprob: -5.38029146194458
    3. 'time' → logprob: -7.38029146194458
    4. ' time' → logprob: -11.255290985107422
    5. 'temp' → logprob: -11.255290985107422
    6. 't' → logprob: -11.630290985107422
    7. ' ' → logprob: -12.255290985107422
    8. 'tem' → logprob: -12.380290985107422
    9. 'tempo' → logprob: -13.130290985107422
    10. '   ' → logprob: -14.630290985107422

Token 667: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08102694898843765
    2. ':' → logprob: -3.081027030944824
    3. '       ' → logprob: -3.831027030944824
    4. '<|end|>' → logprob: -5.081027030944824
    5. '    
' → logprob: -6.706027030944824
    6. '        
' → logprob: -7.456027030944824
    7. '  ' → logprob: -7.456027030944824
    8. '    ' → logprob: -8.081027030944824
    9. '  
' → logprob: -8.456027030944824
    10. ' if' → logprob: -8.831027030944824

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39369791746139526
    2. '   ' → logprob: -1.14369797706604
    3. '    ' → logprob: -5.518697738647461
    4. '        
' → logprob: -6.893697738647461
    5. '    
' → logprob: -7.893697738647461
    6. '     ' → logprob: -8.143697738647461
    7. '  ' → logprob: -8.768697738647461
    8. ' ' → logprob: -9.018697738647461
    9. '      ' → logprob: -9.268697738647461
    10. '	' → logprob: -9.268697738647461

Token 669: ' nm' (ID: 43183)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02397829480469227
    2. 'new' → logprob: -3.8989782333374023
    3. ' if' → logprob: -5.898978233337402
    4. '   ' → logprob: -8.398978233337402
    5. 'next' → logprob: -8.398978233337402
    6. 'nm' (adapté à ' nm') → logprob: -9.398978233337402
    7. ' new' → logprob: -9.773978233337402
    8. '#' → logprob: -10.023978233337402
    9. 'money' → logprob: -10.773978233337402
    10. 'n' → logprob: -11.773978233337402

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25792166590690613
    2. '=' → logprob: -1.5079216957092285
    3. 'oney' → logprob: -5.2579216957092285
    4. 'o' → logprob: -7.8829216957092285
    5. 'ney' → logprob: -9.38292121887207
    6. ',' → logprob: -9.63292121887207
    7. 'ey' → logprob: -9.75792121887207
    8. 'money' → logprob: -9.75792121887207
    9. ' =
' → logprob: -11.13292121887207
    10. '    ' → logprob: -11.13292121887207

Token 671: ' money' (ID: 3905)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.02055099606513977
    2. ' money' → logprob: -3.8955509662628174
    3. 'max' → logprob: -12.520550727844238
    4. ' ' → logprob: -13.145550727844238
    5. '   ' → logprob: -13.395550727844238
    6. 'm' → logprob: -14.520550727844238
    7. 'min' → logprob: -15.020550727844238
    8. '  ' → logprob: -15.145550727844238
    9. '_money' → logprob: -15.770550727844238
    10. 'Money' → logprob: -15.895550727844238

Token 672: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20149590075016022
    2. ' -' → logprob: -1.701495885848999
    3. '-f' → logprob: -9.451496124267578
    4. '-
' → logprob: -14.201496124267578
    5. '-=' → logprob: -14.451496124267578
    6. '   ' → logprob: -15.076496124267578
    7. ' ' → logprob: -15.201496124267578
    8. '>=' → logprob: -15.326496124267578
    9. '-cost' → logprob: -15.576496124267578
    10. '-fe' → logprob: -15.576496124267578

Token 673: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.0010386446956545115
    2. ' fare' → logprob: -6.876038551330566
    3. 'far' → logprob: -12.376038551330566
    4. 'fair' → logprob: -13.876038551330566
    5. 'faire' → logprob: -15.126038551330566
    6. 'fa' → logprob: -16.126039505004883
    7. 'fee' → logprob: -16.126039505004883
    8. 'Fare' → logprob: -16.626039505004883
    9. 'f' → logprob: -17.626039505004883
    10. 'fore' → logprob: -18.126039505004883

Token 674: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 676: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16116918623447418
    2. ' if' → logprob: -1.911169171333313
    3. '<|end|>' → logprob: -7.786169052124023
    4. '       ' → logprob: -8.661169052124023
    5. '
' → logprob: -8.911169052124023
    6. ';if' → logprob: -9.661169052124023
    7. ')' → logprob: -10.411169052124023
    8. ' 
' → logprob: -10.786169052124023
    9. ' ' → logprob: -10.911169052124023
    10. '0' → logprob: -10.911169052124023

Token 677: ' calc' (ID: 25691)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 678: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.32146045565605164
    2. 'ulate' → logprob: -1.321460485458374
    3. 'ul' → logprob: -5.071460247039795
    4. 'cule' → logprob: -7.196460247039795
    5. 'ulte' → logprob: -7.446460247039795
    6. 'ulé' → logprob: -8.696460723876953
    7. 'uler' → logprob: -9.321460723876953
    8. 'ula' → logprob: -9.571460723876953
    9. 'm' → logprob: -10.321460723876953
    10. 'ulated' → logprob: -10.696460723876953

Token 679: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 680: ' nouveau' (ID: 23184)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.31499183177948
    2. 'new' → logprob: -1.68999183177948
    3. ' ' → logprob: -2.1899919509887695
    4. 'n' → logprob: -2.4399919509887695
    5. ')' → logprob: -2.8149919509887695
    6. ' next' → logprob: -2.8149919509887695
    7. ' nouveau' → logprob: -3.1899919509887695
    8. '>' → logprob: -3.3149919509887695
    9. 'nm' → logprob: -3.5649919509887695
    10. 'next' → logprob: -3.5649919509887695

Token 681: ' nombre' (ID: 9733)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 683: ' pièces' (ID: 49165)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.07800961285829544
    2. 'pi' → logprob: -3.578009605407715
    3. 'nm' → logprob: -3.703009605407715
    4. ' pieces' → logprob: -4.578009605407715
    5. 'money' → logprob: -5.578009605407715
    6. ' pièces' → logprob: -5.703009605407715
    7. 'coins' → logprob: -6.078009605407715
    8. 'm' → logprob: -7.453009605407715
    9. '```' → logprob: -7.828009605407715
    10. ' nm' → logprob: -7.953009605407715

Token 684: ' après' (ID: 16460)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: ' avoir' (ID: 16595)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.012181139551103115
    2. 'nm' → logprob: -5.262181282043457
    3. ' fare' → logprob: -5.512181282043457
    4. 'faire' → logprob: -6.387181282043457
    5. 'nv' → logprob: -7.387181282043457
    6. '   ' → logprob: -8.762181282043457
    7. 'n' → logprob: -9.887181282043457
    8. 'fa' → logprob: -9.887181282043457
    9. ' nm' → logprob: -10.137181282043457
    10. 'fair' → logprob: -10.512181282043457

Token 686: ' payé' (ID: 196567)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.46962007880210876
    2. 'paid' → logprob: -2.0946199893951416
    3. ' payé' → logprob: -2.3446199893951416
    4. 'spent' → logprob: -3.0946199893951416
    5. 'used' → logprob: -3.2196199893951416
    6. ' paid' → logprob: -4.219620227813721
    7. ' used' → logprob: -4.469620227813721
    8. 'n' → logprob: -4.969620227813721
    9. 'p' → logprob: -5.094620227813721
    10. ' pay' → logprob: -5.594620227813721

Token 687: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038661349564790726
    2. '<|end|>' → logprob: -3.538661241531372
    3. ' if' → logprob: -5.538661479949951
    4. 'if' → logprob: -6.413661479949951
    5. '.' → logprob: -7.663661479949951
    6. '               ' → logprob: -7.663661479949951
    7. ')' → logprob: -8.038661003112793
    8. '        
' → logprob: -8.163661003112793
    9. '   ' → logprob: -8.288661003112793
    10. ' ' → logprob: -8.413661003112793

Token 688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01727135106921196
    2. ' if' → logprob: -4.392271518707275
    3. '        
' → logprob: -6.267271518707275
    4. 'if' → logprob: -7.517271518707275
    5. ' 
' → logprob: -7.642271518707275
    6. '<|end|>' → logprob: -7.642271518707275
    7. '
' → logprob: -7.767271518707275
    8. ' ' → logprob: -8.642271041870117
    9. '               ' → logprob: -9.017271041870117
    10. '  
' → logprob: -9.142271041870117

Token 689: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0014704647473990917
    2. ' if' → logprob: -7.001470565795898
    3. '       ' → logprob: -7.501470565795898
    4. '   ' → logprob: -13.251470565795898
    5. '        
' → logprob: -13.251470565795898
    6. '           ' → logprob: -13.501470565795898
    7. '	if' → logprob: -14.126470565795898
    8. '
' → logprob: -15.626470565795898
    9. '        ' → logprob: -16.1264705657959
    10. 'If' → logprob: -16.5014705657959

Token 690: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.10177042335271835
    2. ' nm' → logprob: -2.3517704010009766
    3. '0' → logprob: -6.476770401000977
    4. '   ' → logprob: -11.351770401000977
    5. ' ' → logprob: -11.851770401000977
    6. '_nm' → logprob: -13.226770401000977
    7. 'n' → logprob: -13.976770401000977
    8. '       ' → logprob: -14.476770401000977
    9. '    ' → logprob: -14.851770401000977
    10. '     ' → logprob: -15.226770401000977

Token 691: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2641201913356781
    2. ' >=' → logprob: -1.7641202211380005
    3. '<' → logprob: -3.389120101928711
    4. ' <' → logprob: -3.639120101928711
    5. ']>=' → logprob: -8.139120101928711
    6. ')>=' → logprob: -8.389120101928711
    7. '0' → logprob: -9.639120101928711
    8. ' ' → logprob: -9.764120101928711
    9. '<|end|>' → logprob: -10.514120101928711
    10. '>' → logprob: -11.014120101928711

Token 692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '=' → logprob: -18.50000762939453
    4. '۰' → logprob: -19.87500762939453
    5. '   ' → logprob: -20.75000762939453
    6. '00' → logprob: -21.50000762939453
    7. '000' → logprob: -22.25000762939453
    8. '```' → logprob: -22.25000762939453
    9. '٠' → logprob: -22.50000762939453
    10. '    ' → logprob: -22.50000762939453

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '=' → logprob: -16.875017166137695
    4. '۰' → logprob: -18.375017166137695
    5. '   ' → logprob: -19.000017166137695
    6. '00' → logprob: -19.000017166137695
    7. '０' → logprob: -20.062517166137695
    8. '```' → logprob: -20.187517166137695
    9. '1' → logprob: -20.312517166137695
    10. '000' → logprob: -20.500017166137695

Token 694: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03357735276222229
    2. ':
' → logprob: -3.6585774421691895
    3. '       ' → logprob: -5.4085774421691895
    4. ' or' → logprob: -6.1585774421691895
    5. '           ' → logprob: -7.6585774421691895
    6. ' continue' → logprob: -9.533576965332031
    7. '   ' → logprob: -9.783576965332031
    8. 'continue' → logprob: -10.658576965332031
    9. '	continue' → logprob: -11.658576965332031
    10. ' :' → logprob: -11.783576965332031

Token 695: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05353943631052971
    2. 'continue' → logprob: -3.303539514541626
    3. ' continue' → logprob: -4.178539276123047
    4. '	continue' → logprob: -10.303539276123047
    5. '               ' → logprob: -11.678539276123047
    6. '       ' → logprob: -12.178539276123047
    7. '		' → logprob: -12.178539276123047
    8. '   ' → logprob: -12.678539276123047
    9. '_continue' → logprob: -13.928539276123047
    10. 'contin' → logprob: -14.928539276123047

Token 696: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.011769580654799938
    2. '           ' → logprob: -4.511769771575928
    3. ' continue' → logprob: -7.261769771575928
    4. '       ' → logprob: -11.76176929473877
    5. '   ' → logprob: -12.01176929473877
    6. '	continue' → logprob: -12.76176929473877
    7. '               ' → logprob: -12.76176929473877
    8. '```' → logprob: -16.636770248413086
    9. 'contin' → logprob: -17.636770248413086
    10. '_continue' → logprob: -17.761770248413086

Token 697: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001342850853689015
    2. '        
' → logprob: -6.8763427734375
    3. '
' → logprob: -9.0013427734375
    4. '    
' → logprob: -10.0013427734375
    5. '   ' → logprob: -10.2513427734375
    6. 'if' → logprob: -10.7513427734375
    7. '<|end|>' → logprob: -11.1263427734375
    8. '```' → logprob: -11.2513427734375
    9. ')' → logprob: -11.7513427734375
    10. '           ' → logprob: -12.0013427734375

Token 698: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5511793494224548
    2. 'if' → logprob: -1.0511794090270996
    3. '    
' → logprob: -3.3011794090270996
    4. ' if' → logprob: -3.8011794090270996
    5. '       ' → logprob: -4.5511794090271
    6. '        
' → logprob: -5.8011794090271
    7. 'dp' → logprob: -7.9261794090271
    8. '    ' → logprob: -8.301178932189941
    9. '   
' → logprob: -8.926178932189941
    10. '    
' → logprob: -8.926178932189941

Token 699: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37144935131073
    2. '   ' → logprob: -1.24644935131073
    3. '       ' → logprob: -4.1214494705200195
    4. ' if' → logprob: -5.6214494705200195
    5. 'continue' → logprob: -5.9964494705200195
    6. '           ' → logprob: -8.74644947052002
    7. 'dp' → logprob: -9.12144947052002
    8. ' continue' → logprob: -9.74644947052002
    9. '        
' → logprob: -10.37144947052002
    10. '    
' → logprob: -10.62144947052002

Token 700: ' l' (ID: 305)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.40491440892219543
    2. ' nm' → logprob: -2.404914379119873
    3. 'not' → logprob: -2.529914379119873
    4. 'nm' → logprob: -2.654914379119873
    5. '   ' → logprob: -3.404914379119873
    6. ' True' → logprob: -4.029914379119873
    7. '    ' → logprob: -4.404914379119873
    8. '       ' → logprob: -5.154914379119873
    9. ' continue' → logprob: -5.154914379119873
    10. 'True' → logprob: -5.654914379119873

Token 701: ''on' (ID: 25812)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.9961557388305664
    2. ' nm' → logprob: -1.1211557388305664
    3. ''argent' → logprob: -1.7461557388305664
    4. 'money' → logprob: -2.2461557388305664
    5. 'not' → logprob: -4.871155738830566
    6. ' not' → logprob: -5.121155738830566
    7. 'n' → logprob: -5.121155738830566
    8. ' money' → logprob: -5.746155738830566
    9. ' n' → logprob: -8.371155738830566
    10. ''on' → logprob: -8.496155738830566

Token 702: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17850245535373688
    2. ' n' → logprob: -2.1785025596618652
    3. 'continue' → logprob: -4.303502559661865
    4. ' continue' → logprob: -4.428502559661865
    5. '#' → logprob: -4.803502559661865
    6. ' ne' → logprob: -5.303502559661865
    7. 'ne' → logprob: -5.803502559661865
    8. 'cannot' → logprob: -5.803502559661865
    9. ' cannot' → logprob: -7.303502559661865
    10. 'n't' → logprob: -7.428502559661865

Token 703: ''a' (ID: 10443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9678691625595093
    2. ''est' → logprob: -2.092869281768799
    3. 'a' → logprob: -2.842869281768799
    4. 'm' → logprob: -2.842869281768799
    5. ''ai' → logprob: -2.842869281768799
    6. ''m' → logprob: -3.092869281768799
    7. 'n' → logprob: -3.467869281768799
    8. 'e' → logprob: -3.967869281768799
    9. ''a' → logprob: -3.967869281768799
    10. ''as' → logprob: -3.967869281768799

Token 704: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.04140906780958176
    2. ' pas' → logprob: -3.4164090156555176
    3. 'n' → logprob: -6.041409015655518
    4. 'n't' → logprob: -6.041409015655518
    5. '```' → logprob: -7.166409015655518
    6. 'not' → logprob: -7.416409015655518
    7. 's' → logprob: -7.791409015655518
    8. '_pas' → logprob: -8.291409492492676
    9. ' not' → logprob: -8.666409492492676
    10. ' n' → logprob: -9.666409492492676

Token 705: ' assez' (ID: 33376)
  Prédit: 'asse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asse' → logprob: -0.4836493730545044
    2. 's' → logprob: -1.1086493730545044
    3. 'pas' → logprob: -3.858649253845215
    4. 'en' → logprob: -3.983649253845215
    5. 'as' → logprob: -4.858649253845215
    6. ' assez' → logprob: -5.233649253845215
    7. '```' → logprob: -7.858649253845215
    8. ' suffisamment' → logprob: -9.733649253845215
    9. 'les' → logprob: -10.233649253845215
    10. 'plus' → logprob: -10.733649253845215

Token 706: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20708440244197845
    2. 'de' → logprob: -2.2070844173431396
    3. ' d' → logprob: -2.7070844173431396
    4. ' de' → logprob: -4.8320841789245605
    5. 'money' → logprob: -6.5820841789245605
    6. '   ' → logprob: -9.082084655761719
    7. 'pour' → logprob: -9.082084655761719
    8. 'dep' → logprob: -9.457084655761719
    9. ' money' → logprob: -9.582084655761719
    10. 'dp' → logprob: -9.582084655761719

Token 707: ' pièces' (ID: 49165)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.1886085569858551
    2. 'nm' → logprob: -1.9386085271835327
    3. 'pieces' → logprob: -4.438608646392822
    4. ' money' → logprob: -5.188608646392822
    5. 'coins' → logprob: -5.938608646392822
    6. ' nm' → logprob: -6.438608646392822
    7. 'mon' → logprob: -6.438608646392822
    8. 'pi' → logprob: -6.563608646392822
    9. 'argent' → logprob: -7.438608646392822
    10. ' pieces' → logprob: -7.438608646392822

Token 708: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6822159290313721
    2. ',' → logprob: -1.057215929031372
    3. '       ' → logprob: -1.932215929031372
    4. '               ' → logprob: -7.182215690612793
    5. 'continue' → logprob: -7.807215690612793
    6. ':' → logprob: -8.057215690612793
    7. ' continue' → logprob: -8.557215690612793
    8. ':
' → logprob: -8.682215690612793
    9. '   ' → logprob: -9.307215690612793
    10. ' ,' → logprob: -9.557215690612793

Token 709: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15645945072174072
    2. '       ' → logprob: -2.156459331512451
    3. 'continue' → logprob: -3.906459331512451
    4. '               ' → logprob: -4.906459331512451
    5. ' continue' → logprob: -7.031459331512451
    6. '   ' → logprob: -7.406459331512451
    7. '```' → logprob: -10.90645980834961
    8. '          ' → logprob: -11.53145980834961
    9. '                   ' → logprob: -11.65645980834961
    10. '	continue' → logprob: -11.78145980834961

Token 710: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.010373675264418125
    2. ' continue' → logprob: -5.010373592376709
    3. '   ' → logprob: -6.260373592376709
    4. '       ' → logprob: -6.885373592376709
    5. 'pass' → logprob: -8.260374069213867
    6. '           ' → logprob: -9.260374069213867
    7. 'contin' → logprob: -9.260374069213867
    8. 'skip' → logprob: -9.385374069213867
    9. 'pas' → logprob: -10.010374069213867
    10. 'stop' → logprob: -10.260374069213867

Token 711: ' cette' (ID: 7696)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016053255647420883
    2. '        
' → logprob: -4.891053199768066
    3. '
' → logprob: -5.016053199768066
    4. 'if' → logprob: -6.641053199768066
    5. '    
' → logprob: -8.266053199768066
    6. '            
' → logprob: -10.141053199768066
    7. ' if' → logprob: -10.266053199768066
    8. '   ' → logprob: -10.391053199768066
    9. 'n' → logprob: -10.516053199768066
    10. '           ' → logprob: -10.891053199768066

Token 712: ' transition' (ID: 14463)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.34597116708755493
    2. 'ar' → logprob: -1.5959711074829102
    3. 'route' → logprob: -2.97097110748291
    4. 'continue' → logprob: -4.47097110748291
    5. 'voie' → logprob: -4.97097110748291
    6. 'are' → logprob: -5.09597110748291
    7. '       ' → logprob: -5.84597110748291
    8. '   ' → logprob: -5.97097110748291
    9. 'neighbor' → logprob: -6.59597110748291
    10. ' ar' → logprob: -6.97097110748291

Token 713: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1579221934080124
    2. '        
' → logprob: -2.1579222679138184
    3. '    
' → logprob: -4.532922267913818
    4. '
' → logprob: -4.907922267913818
    5. 'if' → logprob: -5.032922267913818
    6. '   ' → logprob: -5.907922267913818
    7. ' if' → logprob: -6.657922267913818
    8. '            
' → logprob: -7.782922267913818
    9. 'dp' → logprob: -8.15792179107666
    10. '        
' → logprob: -8.28292179107666

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5111517906188965
    2. '    
' → logprob: -1.6361517906188965
    3. '        
' → logprob: -2.0111517906188965
    4. '   ' → logprob: -3.3861517906188965
    5. 'if' → logprob: -4.6361517906188965
    6. ' if' → logprob: -4.8861517906188965
    7. ' 
' → logprob: -5.0111517906188965
    8. '     
' → logprob: -6.0111517906188965
    9. '  
' → logprob: -6.1361517906188965
    10. '
' → logprob: -6.2611517906188965

Token 715: ' #' (ID: 1069)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.42557036876678467
    2. 'new' → logprob: -1.3005703687667847
    3. 'if' → logprob: -3.050570487976074
    4. ' nd' → logprob: -4.175570487976074
    5. '       ' → logprob: -5.050570487976074
    6. '   ' → logprob: -6.550570487976074
    7. ' new' → logprob: -6.925570487976074
    8. 'n' → logprob: -7.300570487976074
    9. 'next' → logprob: -7.300570487976074
    10. ' if' → logprob: -8.175570487976074

Token 716: ' Si' (ID: 7832)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.30522093176841736
    2. 'new' → logprob: -1.5552209615707397
    3. ' nd' → logprob: -3.18022084236145
    4. 'n' → logprob: -5.805221080780029
    5. 'if' → logprob: -5.805221080780029
    6. ' new' → logprob: -6.305221080780029
    7. 'nt' → logprob: -6.805221080780029
    8. 'ntime' → logprob: -7.805221080780029
    9. 'nc' → logprob: -9.055220603942871
    10. '   ' → logprob: -9.055220603942871

Token 717: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.356170654296875
    2. ' dp' → logprob: -1.231170654296875
    3. 'dist' → logprob: -5.106170654296875
    4. ' dist' → logprob: -6.481170654296875
    5. '   ' → logprob: -10.231170654296875
    6. '(dp' → logprob: -10.731170654296875
    7. '	dp' → logprob: -10.856170654296875
    8. ' ' → logprob: -11.731170654296875
    9. 'd' → logprob: -12.481170654296875
    10. ' ' → logprob: -12.856170654296875

Token 718: ' améli' (ID: 51042)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3143436014652252
    2. ' dp' → logprob: -1.3143435716629028
    3. '(dp' → logprob: -7.189343452453613
    4. 'dist' → logprob: -9.564343452453613
    5. '	dp' → logprob: -9.564343452453613
    6. '   ' → logprob: -10.189343452453613
    7. 'a' → logprob: -10.564343452453613
    8. '_dp' → logprob: -10.689343452453613
    9. ' a' → logprob: -10.939343452453613
    10. ' <' → logprob: -11.314343452453613

Token 719: 'ore' (ID: 510)
  Prédit: 'ore'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.0002681304467841983
    2. 'n' → logprob: -9.37526798248291
    3. 're' → logprob: -10.62526798248291
    4. 'rore' → logprob: -10.75026798248291
    5. 'or' → logprob: -11.00026798248291
    6. 'orer' → logprob: -11.25026798248291
    7. 'p' → logprob: -11.25026798248291
    8. '<' → logprob: -11.25026798248291
    9. '[' → logprob: -11.37526798248291
    10. 'ote' → logprob: -11.62526798248291

Token 720: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5769048929214478
    2. 'dp' → logprob: -0.8269048929214478
    3. '(dp' → logprob: -7.201904773712158
    4. '   ' → logprob: -8.826905250549316
    5. '       ' → logprob: -11.201905250549316
    6. '	dp' → logprob: -11.326905250549316
    7. 'dist' → logprob: -11.576905250549316
    8. '_dp' → logprob: -12.201905250549316
    9. '    ' → logprob: -12.326905250549316
    10. ' the' → logprob: -12.576905250549316

Token 721: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004334575962275267
    2. ' dp' → logprob: -5.504334449768066
    3. 'dist' → logprob: -8.504334449768066
    4. '(dp' → logprob: -11.379334449768066
    5. 'd' → logprob: -11.629334449768066
    6. 'cost' → logprob: -12.004334449768066
    7. 'co' → logprob: -12.004334449768066
    8. 'temps' → logprob: -12.254334449768066
    9. 'c' → logprob: -12.379334449768066
    10. '   ' → logprob: -13.004334449768066

Token 722: ' pour' (ID: 1930)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6006776690483093
    2. 'if' → logprob: -1.850677728652954
    3. '   ' → logprob: -2.475677728652954
    4. ' if' → logprob: -2.850677728652954
    5. '       ' → logprob: -2.975677728652954
    6. '<' → logprob: -3.350677728652954
    7. 'dp' → logprob: -4.100677490234375
    8. '           ' → logprob: -4.975677490234375
    9. 's' → logprob: -5.600677490234375
    10. '[' → logprob: -5.725677490234375

Token 723: ' atteindre' (ID: 95734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013899141922593117
    2. 'nv' → logprob: -4.513899326324463
    3. ' dp' → logprob: -6.013899326324463
    4. ' nv' → logprob: -8.388898849487305
    5. 'nm' → logprob: -10.013898849487305
    6. '[n' → logprob: -10.388898849487305
    7. '   ' → logprob: -10.513898849487305
    8. '       ' → logprob: -11.513898849487305
    9. '           ' → logprob: -11.638898849487305
    10. 'n' → logprob: -12.263898849487305

Token 724: ' (' (ID: 350)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.22334212064743042
    2. ' nv' → logprob: -1.8483421802520752
    3. '[n' → logprob: -3.223342180252075
    4. 'nm' → logprob: -6.598341941833496
    5. '   ' → logprob: -7.598341941833496
    6. 'n' → logprob: -7.973341941833496
    7. '(n' → logprob: -8.848341941833496
    8. 'dp' → logprob: -9.223341941833496
    9. '```' → logprob: -9.473341941833496
    10. '_nv' → logprob: -9.848341941833496

Token 725: 'nv' (ID: 40002)
  Prédit: 'nv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.0053356243297457695
    2. ' nv' → logprob: -5.255335807800293
    3. 'n' → logprob: -9.880335807800293
    4. 'nm' → logprob: -11.255335807800293
    5. '_nv' → logprob: -11.380335807800293
    6. '   ' → logprob: -11.880335807800293
    7. '[n' → logprob: -11.880335807800293
    8. '
' → logprob: -12.380335807800293
    9. '       ' → logprob: -13.505335807800293
    10. ')' → logprob: -13.630335807800293

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050066327676177025
    2. ',n' → logprob: -5.505006790161133
    3. '[n' → logprob: -7.755006790161133
    4. '][' → logprob: -8.005006790161133
    5. ')[' → logprob: -9.005006790161133
    6. ')' → logprob: -11.005006790161133
    7. ' ,' → logprob: -11.755006790161133
    8. 'n' → logprob: -12.505006790161133
    9. ',m' → logprob: -12.505006790161133
    10. '[' → logprob: -13.255006790161133

Token 727: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.0028061794582754374
    2. ' nm' → logprob: -5.877806186676025
    3. 'n' → logprob: -14.002805709838867
    4. ')' → logprob: -15.627805709838867
    5. '_nm' → logprob: -15.752805709838867
    6. '
' → logprob: -16.627805709838867
    7. '   ' → logprob: -17.127805709838867
    8. ',' → logprob: -17.877805709838867
    9. '
' → logprob: -18.127805709838867
    10. ',n' → logprob: -18.127805709838867

Token 728: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6361328959465027
    2. ')' → logprob: -1.0111329555511475
    3. '):
' → logprob: -2.2611329555511475
    4. '),' → logprob: -6.761132717132568
    5. '):
' → logprob: -7.511132717132568
    6. ' ):' → logprob: -8.261133193969727
    7. ' ):
' → logprob: -8.636133193969727
    8. ' )' → logprob: -9.011133193969727
    9. '   ' → logprob: -9.261133193969727
    10. '):

' → logprob: -9.261133193969727

Token 729: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2996922433376312
    2. ' if' → logprob: -1.4246922731399536
    3. '       ' → logprob: -4.924692153930664
    4. ' and' → logprob: -5.424692153930664
    5. 'and' → logprob: -5.924692153930664
    6. '           ' → logprob: -6.549692153930664
    7. ' or' → logprob: -7.049692153930664
    8. 's' → logprob: -8.049692153930664
    9. 'or' → logprob: -8.424692153930664
    10. ',' → logprob: -8.924692153930664

Token 730: ' met' (ID: 1421)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.08021795749664307
    2. 'continue' → logprob: -2.9552178382873535
    3. ' update' → logprob: -5.3302178382873535
    4. ' met' → logprob: -5.4552178382873535
    5. ' peut' → logprob: -6.0802178382873535
    6. '           ' → logprob: -6.2052178382873535
    7. '#' → logprob: -6.3302178382873535
    8. 'contin' → logprob: -6.8302178382873535
    9. 'dp' → logprob: -7.2052178382873535
    10. '   ' → logprob: -7.2052178382873535

Token 731: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.09236209094524384
    2. ' à' → logprob: -2.46736216545105
    3. '-à' → logprob: -7.217361927032471
    4. '```' → logprob: -7.342361927032471
    5. 'aj' → logprob: -7.717361927032471
    6. 'dp' → logprob: -7.967361927032471
    7. '   ' → logprob: -8.092362403869629
    8. 'À' → logprob: -8.217362403869629
    9. 'a' → logprob: -8.342362403869629
    10. ''à' → logprob: -8.967362403869629

Token 732: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -4.644463479053229e-05
    2. 'jou' → logprob: -10.375046730041504
    3. ' jour' → logprob: -12.000046730041504
    4. 'jours' → logprob: -12.375046730041504
    5. 'journ' → logprob: -12.875046730041504
    6. 'j' → logprob: -14.375046730041504
    7. '```' → logprob: -14.625046730041504
    8. ' ' → logprob: -14.750046730041504
    9. 'Jour' → logprob: -15.500046730041504
    10. 'journal' → logprob: -16.500045776367188

Token 733: ' et' (ID: 859)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6515659689903259
    2. 'if' → logprob: -1.0265660285949707
    3. '       ' → logprob: -2.1515660285949707
    4. '           ' → logprob: -5.901566028594971
    5. '   ' → logprob: -6.776566028594971
    6. 'dp' → logprob: -9.276565551757812
    7. '```' → logprob: -10.026565551757812
    8. ',' → logprob: -10.151565551757812
    9. ' and' → logprob: -10.401565551757812
    10. 'and' → logprob: -10.776565551757812

Token 734: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7447521686553955
    2. '   ' → logprob: -1.3697521686553955
    3. '           ' → logprob: -1.9947521686553955
    4. ' he' → logprob: -2.2447521686553955
    5. 'he' → logprob: -3.7447521686553955
    6. '               ' → logprob: -6.619751930236816
    7. '                   ' → logprob: -7.494751930236816
    8. '    ' → logprob: -7.619751930236816
    9. '```' → logprob: -7.619751930236816
    10. '{' → logprob: -8.494751930236816

Token 735: ' emp' (ID: 4927)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2926430106163025
    2. ' he' → logprob: -1.5426430702209473
    3. '   ' → logprob: -3.5426430702209473
    4. '           ' → logprob: -5.042643070220947
    5. '       ' → logprob: -5.917643070220947
    6. 'heap' → logprob: -8.042642593383789
    7. 'push' → logprob: -8.417642593383789
    8. '{
' → logprob: -8.542642593383789
    9. '```' → logprob: -8.917642593383789
    10. '               ' → logprob: -8.917642593383789

Token 736: 'ile' (ID: 554)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.23982548713684082
    2. 'ush' → logprob: -1.6148254871368408
    3. 'push' → logprob: -4.989825248718262
    4. 'p' → logprob: -6.489825248718262
    5. ' he' → logprob: -6.614825248718262
    6. '```' → logprob: -7.239825248718262
    7. 'heap' → logprob: -7.364825248718262
    8. 'app' → logprob: -7.739825248718262
    9. 'dp' → logprob: -7.864825248718262
    10. '   ' → logprob: -8.114825248718262

Token 737: ' ce' (ID: 2357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0830817222595215
    2. ' if' → logprob: -1.0830817222595215
    3. '       ' → logprob: -1.4580817222595215
    4. '   ' → logprob: -2.4580817222595215
    5. '           ' → logprob: -6.0830817222595215
    6. 'dp' → logprob: -6.8330817222595215
    7. '
' → logprob: -7.5830817222595215
    8. '{
' → logprob: -8.58308219909668
    9. '               ' → logprob: -9.70808219909668
    10. ' dp' → logprob: -9.70808219909668

Token 738: ' nouvel' (ID: 76298)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5589874982833862
    2. ' nouvel' → logprob: -2.183987617492676
    3. ' state' → logprob: -2.308987617492676
    4. ' new' → logprob: -3.308987617492676
    5. 'new' → logprob: -3.308987617492676
    6. ' nouveau' → logprob: -3.808987617492676
    7. 'nou' → logprob: -4.183987617492676
    8. '(' → logprob: -4.183987617492676
    9. 'token' → logprob: -4.683987617492676
    10. '   ' → logprob: -4.683987617492676

Token 739: ' état' (ID: 59181)
  Prédit: ' état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' état' → logprob: -0.7351904511451721
    2. 'ét' → logprob: -1.7351903915405273
    3. 'etat' → logprob: -2.1101903915405273
    4. 'state' → logprob: -2.2351903915405273
    5. 'É' → logprob: -3.6101903915405273
    6. '(' → logprob: -3.8601903915405273
    7. '```' → logprob: -4.485190391540527
    8. '   ' → logprob: -4.485190391540527
    9. '(et' → logprob: -5.485190391540527
    10. ''état' → logprob: -5.735190391540527

Token 740: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008846784010529518
    2. 'if' → logprob: -5.258846759796143
    3. ' if' → logprob: -5.758846759796143
    4. '   ' → logprob: -8.7588472366333
    5. '        
' → logprob: -9.0088472366333
    6. '
' → logprob: -9.3838472366333
    7. '<|end|>' → logprob: -10.6338472366333
    8. '           ' → logprob: -10.7588472366333
    9. '      ' → logprob: -12.5088472366333
    10. '    
' → logprob: -12.5088472366333

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02380078099668026
    2. '   ' → logprob: -4.273800849914551
    3. 'if' → logprob: -4.773800849914551
    4. '        
' → logprob: -7.398800849914551
    5. ' if' → logprob: -8.27380084991455
    6. '           ' → logprob: -9.27380084991455
    7. '    
' → logprob: -9.64880084991455
    8. '
' → logprob: -9.89880084991455
    9. '    ' → logprob: -11.39880084991455
    10. '     ' → logprob: -11.52380084991455

Token 742: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5132308006286621
    2. '       ' → logprob: -1.013230800628662
    3. ' if' → logprob: -3.263230800628662
    4. '   ' → logprob: -9.01323127746582
    5. '           ' → logprob: -12.13823127746582
    6. '```' → logprob: -13.51323127746582
    7. '	if' → logprob: -13.88823127746582
    8. '        
' → logprob: -14.01323127746582
    9. 'new' → logprob: -14.26323127746582
    10. '      ' → logprob: -15.13823127746582

Token 743: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10960757732391357
    2. ' dp' → logprob: -2.484607696533203
    3. 'dist' → logprob: -3.984607696533203
    4. ' dist' → logprob: -6.359607696533203
    5. '   ' → logprob: -9.234607696533203
    6. '	dp' → logprob: -11.109607696533203
    7. ' ' → logprob: -12.234607696533203
    8. '(dp' → logprob: -13.359607696533203
    9. 'd' → logprob: -13.734607696533203
    10. '    ' → logprob: -13.859607696533203

Token 744: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.006033672951161861
    2. '[v' → logprob: -5.131033897399902
    3. 'nv' → logprob: -9.256033897399902
    4. 'v' → logprob: -12.381033897399902
    5. ' nv' → logprob: -13.631033897399902
    6. '   ' → logprob: -13.756033897399902
    7. '[' → logprob: -14.131033897399902
    8. 'n' → logprob: -14.256033897399902
    9. '<n' → logprob: -14.881033897399902
    10. ')' → logprob: -15.631033897399902

Token 745: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029951343312859535
    2. '[v' → logprob: -3.529951333999634
    3. '][' → logprob: -9.404951095581055
    4. '[n' → logprob: -9.654951095581055
    5. 'nv' → logprob: -10.404951095581055
    6. '[' → logprob: -10.779951095581055
    7. ' nv' → logprob: -13.029951095581055
    8. ' v' → logprob: -15.279951095581055
    9. ']' → logprob: -15.654951095581055
    10. 'n' → logprob: -15.904951095581055

Token 746: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06929173320531845
    2. '[n' → logprob: -2.819291830062866
    3. '[m' → logprob: -4.944291591644287
    4. ']' → logprob: -9.569292068481445
    5. '[' → logprob: -9.944292068481445
    6. ')[' → logprob: -10.944292068481445
    7. ' ][' → logprob: -11.819292068481445
    8. '   ' → logprob: -12.069292068481445
    9. '[v' → logprob: -12.444292068481445
    10. '       ' → logprob: -12.694292068481445

Token 747: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -3.4121114822482923e-06
    2. ' nm' → logprob: -12.625003814697266
    3. '_nm' → logprob: -18.250003814697266
    4. 'n' → logprob: -18.375003814697266
    5. '   ' → logprob: -20.000003814697266
    6. '
' → logprob: -20.500003814697266
    7. '[n' → logprob: -20.500003814697266
    8. '
' → logprob: -21.625003814697266
    9. 'money' → logprob: -22.125003814697266
    10. '][' → logprob: -22.625003814697266

Token 748: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004720257129520178
    2. ']>' → logprob: -5.504720211029053
    3. '>' → logprob: -7.379720211029053
    4. ' ]' → logprob: -11.504720687866211
    5. ' >' → logprob: -12.504720687866211
    6. '[' → logprob: -12.754720687866211
    7. ']==' → logprob: -14.379720687866211
    8. ')' → logprob: -16.00472068786621
    9. '>]' → logprob: -16.12972068786621
    10. '   ' → logprob: -16.25472068786621

Token 749: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0036006635054945946
    2. ' >' → logprob: -5.628600597381592
    3. '>`' → logprob: -15.87860107421875
    4. '">' → logprob: -16.25360107421875
    5. '>

' → logprob: -16.50360107421875
    6. ' ' → logprob: -16.50360107421875
    7. '>
' → logprob: -17.37860107421875
    8. '>d' → logprob: -17.37860107421875
    9. ')>' → logprob: -17.50360107421875
    10. '＞' → logprob: -17.75360107421875

Token 750: ' dp' (ID: 21546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0017839411739259958
    2. 'dp' → logprob: -6.376783847808838
    3. ' dist' → logprob: -9.501784324645996
    4. '   ' → logprob: -12.001784324645996
    5. '	dist' → logprob: -14.751784324645996
    6. ' dp' → logprob: -15.626784324645996
    7. '(dist' → logprob: -16.37678337097168
    8. 'Dist' → logprob: -16.50178337097168
    9. 'd' → logprob: -16.50178337097168
    10. '_dist' → logprob: -17.50178337097168

Token 751: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0031855558045208454
    2. 'v' → logprob: -5.753185749053955
    3. ' v' → logprob: -12.628185272216797
    4. '<v' → logprob: -14.003185272216797
    5. ',v' → logprob: -14.253185272216797
    6. '
' → logprob: -14.628185272216797
    7. '(v' → logprob: -14.753185272216797
    8. '	v' → logprob: -15.003185272216797
    9. ')v' → logprob: -15.003185272216797
    10. '][' → logprob: -15.128185272216797

Token 752: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5238289833068848
    2. '[v' → logprob: -0.8988289833068848
    3. '[m' → logprob: -8.023828506469727
    4. '[' → logprob: -8.273828506469727
    5. 'v' → logprob: -10.148828506469727
    6. ' ][' → logprob: -10.398828506469727
    7. ']' → logprob: -10.523828506469727
    8. ' [' → logprob: -12.398828506469727
    9. '```' → logprob: -13.148828506469727
    10. ')[' → logprob: -13.148828506469727

Token 753: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -1.5094070477061905e-05
    2. ' money' → logprob: -11.125015258789062
    3. 'm' → logprob: -17.375015258789062
    4. '   ' → logprob: -17.500015258789062
    5. ' ' → logprob: -17.750015258789062
    6. 'mon' → logprob: -17.875015258789062
    7. '_money' → logprob: -18.000015258789062
    8. 'memory' → logprob: -18.375015258789062
    9. '.money' → logprob: -18.750015258789062
    10. ''m' → logprob: -19.250015258789062

Token 754: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10390406847000122
    2. '+' → logprob: -2.4789040088653564
    3. ']' → logprob: -4.2289042472839355
    4. ']+' → logprob: -8.228903770446777
    5. ' ]' → logprob: -11.978903770446777
    6. 'dist' → logprob: -12.478903770446777
    7. '   ' → logprob: -12.853903770446777
    8. ' plus' → logprob: -13.603903770446777
    9. ' ' → logprob: -13.853903770446777
    10. '[' → logprob: -14.103903770446777

Token 755: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407814860343933
    2. ' +' → logprob: -0.9740781784057617
    3. '+
' → logprob: -14.224078178405762
    4. ' ' → logprob: -16.099077224731445
    5. ' +
' → logprob: -16.099077224731445
    6. ' ' → logprob: -16.724077224731445
    7. '   ' → logprob: -17.099077224731445
    8. '＋' → logprob: -17.474077224731445
    9. ' plus' → logprob: -17.849077224731445
    10. '
' → logprob: -18.099077224731445

Token 756: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.014164102263748646
    2. ' cost' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.264163970947266
    4. 'co' → logprob: -16.389163970947266
    5. ' ' → logprob: -16.389163970947266
    6. '(cost' → logprob: -16.889163970947266
    7. '_cost' → logprob: -17.264163970947266
    8. 'Cost' → logprob: -17.514163970947266
    9. 'cos' → logprob: -18.764163970947266
    10. '    ' → logprob: -19.014163970947266

Token 757: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005149673670530319
    2. ':
' → logprob: -5.380149841308594
    3. ']:' → logprob: -8.005149841308594
    4. '):' → logprob: -9.130149841308594
    5. '+:' → logprob: -10.005149841308594
    6. '+' → logprob: -11.255149841308594
    7. ']' → logprob: -12.130149841308594
    8. ':
' → logprob: -12.130149841308594
    9. ']:
' → logprob: -12.380149841308594
    10. ' :' → logprob: -12.630149841308594

Token 758: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22256441414356232
    2. '):' → logprob: -2.472564458847046
    3. '       ' → logprob: -2.972564458847046
    4. '   ' → logprob: -3.472564458847046
    5. ')' → logprob: -4.222564220428467
    6. '):
' → logprob: -4.972564220428467
    7. ':
' → logprob: -5.097564220428467
    8. '```' → logprob: -6.722564220428467
    9. ' :' → logprob: -7.097564220428467
    10. '[' → logprob: -7.597564220428467

Token 759: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.038047224283218384
    2. ' dp' → logprob: -3.2880473136901855
    3. '           ' → logprob: -12.913046836853027
    4. '               ' → logprob: -13.538046836853027
    5. '	dp' → logprob: -13.788046836853027
    6. '_dp' → logprob: -14.413046836853027
    7. '(dp' → logprob: -15.163046836853027
    8. '.dp' → logprob: -17.038047790527344
    9. '```' → logprob: -17.038047790527344
    10. '=' → logprob: -17.413047790527344

Token 760: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.7432603272027336e-06
    2. 'nv' → logprob: -14.000001907348633
    3. '[v' → logprob: -14.500001907348633
    4. '[' → logprob: -16.375001907348633
    5. ' nv' → logprob: -16.375001907348633
    6. '_nv' → logprob: -17.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '][' → logprob: -18.375001907348633
    9. ' [' → logprob: -18.625001907348633
    10. 'n' → logprob: -18.625001907348633

Token 761: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08837819844484329
    2. '[v' → logprob: -2.8383781909942627
    3. '[n' → logprob: -3.7133781909942627
    4. 'nv' → logprob: -6.463378429412842
    5. ' nv' → logprob: -9.713377952575684
    6. '[' → logprob: -10.463377952575684
    7. '][' → logprob: -11.713377952575684
    8. '_nv' → logprob: -12.338377952575684
    9. 'n' → logprob: -12.463377952575684
    10. '```' → logprob: -14.088377952575684

Token 762: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006886226590722799
    2. '[n' → logprob: -5.506886005401611
    3. '[v' → logprob: -5.881886005401611
    4. ']' → logprob: -11.88188648223877
    5. '[' → logprob: -13.63188648223877
    6. 'v' → logprob: -14.13188648223877
    7. ' ][' → logprob: -14.13188648223877
    8. '           ' → logprob: -14.38188648223877
    9. '```' → logprob: -14.50688648223877
    10. ']][' → logprob: -14.63188648223877

Token 763: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.5234406590461731
    2. 'money' → logprob: -0.8984406590461731
    3. 'nv' → logprob: -8.89844036102295
    4. 'm' → logprob: -9.27344036102295
    5. ' nm' → logprob: -10.39844036102295
    6. 'mn' → logprob: -11.14844036102295
    7. 'mm' → logprob: -11.52344036102295
    8. '[m' → logprob: -12.52344036102295
    9. 'n' → logprob: -12.64844036102295
    10. ' money' → logprob: -12.64844036102295

Token 764: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.257955938577652
    2. ' =' → logprob: -1.5079559087753296
    3. ']' → logprob: -5.132956027984619
    4. ']=' → logprob: -9.132955551147461
    5. ' ]' → logprob: -13.882955551147461
    6. ')' → logprob: -14.757955551147461
    7. '[' → logprob: -16.50795555114746
    8. '＝' → logprob: -16.88295555114746
    9. ',' → logprob: -17.00795555114746
    10. ' ' → logprob: -17.13295555114746

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=

' → logprob: -17.273244857788086
    4. '.=' → logprob: -17.398244857788086
    5. '＝' → logprob: -18.523244857788086
    6. '=
' → logprob: -18.523244857788086
    7. ',' → logprob: -20.523244857788086
    8. '=int' → logprob: -21.273244857788086
    9. ':' → logprob: -21.398244857788086
    10. ' ' → logprob: -21.523244857788086

Token 766: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012103531043976545
    2. ' dp' → logprob: -6.7512102127075195
    3. 'dist' → logprob: -10.12621021270752
    4. '	dp' → logprob: -16.251211166381836
    5. ' dist' → logprob: -17.001211166381836
    6. '   ' → logprob: -17.376211166381836
    7. 'd' → logprob: -17.626211166381836
    8. '(dp' → logprob: -19.751211166381836
    9. ' ' → logprob: -20.126211166381836
    10. 'df' → logprob: -20.376211166381836

Token 767: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.816093228830141e-06
    2. 'v' → logprob: -12.87500286102295
    3. '(v' → logprob: -16.125001907348633
    4. '```' → logprob: -18.125001907348633
    5. '<v' → logprob: -18.250001907348633
    6. '[n' → logprob: -18.375001907348633
    7. ' v' → logprob: -18.750001907348633
    8. '	v' → logprob: -19.375001907348633
    9. '[' → logprob: -19.750001907348633
    10. '[u' → logprob: -20.250001907348633

Token 768: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5760324597358704
    2. '[m' → logprob: -0.8260324597358704
    3. '[' → logprob: -9.451032638549805
    4. '][' → logprob: -11.826032638549805
    5. '[var' → logprob: -12.826032638549805
    6. '[mem' → logprob: -13.951032638549805
    7. '```' → logprob: -13.951032638549805
    8. '[value' → logprob: -14.701032638549805
    9. '[val' → logprob: -14.826032638549805
    10. '[current' → logprob: -15.076032638549805

Token 769: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.0003464289184194058
    2. 'cost' → logprob: -8.000346183776855
    3. ' money' → logprob: -12.000346183776855
    4. '[m' → logprob: -12.625346183776855
    5. 'dist' → logprob: -14.375346183776855
    6. 'm' → logprob: -15.125346183776855
    7. 'memory' → logprob: -15.750346183776855
    8. 'mon' → logprob: -15.875346183776855
    9. '[v' → logprob: -16.500347137451172
    10. '_money' → logprob: -17.000347137451172

Token 770: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05490259826183319
    2. '+' → logprob: -2.9299025535583496
    3. ']' → logprob: -11.304903030395508
    4. ']+' → logprob: -12.679903030395508
    5. '[' → logprob: -13.054903030395508
    6. ')' → logprob: -13.929903030395508
    7. ' ' → logprob: -13.929903030395508
    8. ' ' → logprob: -14.429903030395508
    9. ' plus' → logprob: -16.179903030395508
    10. ')+' → logprob: -16.179903030395508

Token 771: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759420990943909
    2. '+' → logprob: -0.8259420990943909
    3. '[' → logprob: -13.950942039489746
    4. ' ' → logprob: -14.700942039489746
    5. ' ' → logprob: -14.700942039489746
    6. '+c' → logprob: -14.950942039489746
    7. '＋' → logprob: -16.325942993164062
    8. '+[' → logprob: -16.450942993164062
    9. ' plus' → logprob: -16.575942993164062
    10. '+m' → logprob: -16.700942993164062

Token 772: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4740770161151886
    2. ' cost' → logprob: -0.9740769863128662
    3. 'co' → logprob: -17.224077224731445
    4. 'Cost' → logprob: -18.224077224731445
    5. '_cost' → logprob: -18.474077224731445
    6. '(cost' → logprob: -19.099077224731445
    7. ' kost' → logprob: -19.224077224731445
    8. ' ' → logprob: -20.474077224731445
    9. 'cos' → logprob: -20.474077224731445
    10. 'count' → logprob: -21.474077224731445

Token 773: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009531530551612377
    2. 'he' → logprob: -5.259531497955322
    3. ' he' → logprob: -5.509531497955322
    4. '               ' → logprob: -9.63453197479248
    5. '   ' → logprob: -9.75953197479248
    6. '            
' → logprob: -9.88453197479248
    7. '       ' → logprob: -10.88453197479248
    8. '          ' → logprob: -11.25953197479248
    9. '                   ' → logprob: -11.50953197479248
    10. '            ' → logprob: -11.75953197479248

Token 774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016140293329954147
    2. ' he' → logprob: -4.391140460968018
    3. 'he' → logprob: -5.766140460968018
    4. '               ' → logprob: -8.89113998413086
    5. '   ' → logprob: -9.01613998413086
    6. '                   ' → logprob: -10.14113998413086
    7. '          ' → logprob: -10.39113998413086
    8. '            
' → logprob: -10.39113998413086
    9. '            ' → logprob: -10.51613998413086
    10. '```' → logprob: -10.51613998413086

Token 775: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -2.7610454708337784e-05
    2. ' he' → logprob: -10.500027656555176
    3. '           ' → logprob: -19.00002670288086
    4. '   ' → logprob: -19.00002670288086
    5. 'heap' → logprob: -20.12502670288086
    6. '```' → logprob: -22.25002670288086
    7. '_he' → logprob: -22.75002670288086
    8. 'He' → logprob: -23.12502670288086
    9. '               ' → logprob: -23.50002670288086
    10. '                   ' → logprob: -23.50002670288086

Token 776: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.700132997939363e-05
    2. 'ap' → logprob: -11.000017166137695
    3. ' app' → logprob: -16.500017166137695
    4. 'he' → logprob: -16.750017166137695
    5. 'a' → logprob: -16.875017166137695
    6. '```' → logprob: -17.000017166137695
    7. 'ап' → logprob: -18.125017166137695
    8. '	app' → logprob: -18.875017166137695
    9. 'e' → logprob: -19.250017166137695
    10. '   ' → logprob: -19.750017166137695

Token 777: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.729906196298543e-06
    2. 'push' → logprob: -11.625009536743164
    3. 'app' → logprob: -14.750009536743164
    4. 'e' → logprob: -16.000009536743164
    5. 'sh' → logprob: -16.750009536743164
    6. 'u' → logprob: -17.750009536743164
    7. 'ap' → logprob: -18.125009536743164
    8. 'op' → logprob: -18.625009536743164
    9. 'ushed' → logprob: -18.875009536743164
    10. 'he' → logprob: -19.000009536743164

Token 778: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. 'q' → logprob: -16.875003814697266
    4. '(
' → logprob: -17.000003814697266
    5. ' (' → logprob: -19.125003814697266
    6. ',q' → logprob: -20.375003814697266
    7. '((' → logprob: -20.500003814697266
    8. '```' → logprob: -20.625003814697266
    9. '	q' → logprob: -21.000003814697266
    10. '[q' → logprob: -21.125003814697266

Token 779: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.01936258003115654
    2. '(' → logprob: -4.019362449645996
    3. '((' → logprob: -7.019362449645996
    4. ' (' → logprob: -8.894362449645996
    5. ')' → logprob: -9.394362449645996
    6. ',' → logprob: -9.519362449645996
    7. '(
' → logprob: -11.019362449645996
    8. ',q' → logprob: -12.769362449645996
    9. ' ' → logprob: -13.269362449645996
    10. ',(' → logprob: -14.144362449645996

Token 780: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006733550690114498
    2. '(' → logprob: -8.000673294067383
    3. ' (' → logprob: -8.000673294067383
    4. '((' → logprob: -13.125673294067383
    5. '(
' → logprob: -15.375673294067383
    6. '(dist' → logprob: -15.875673294067383
    7. '(df' → logprob: -17.000673294067383
    8. '(D' → logprob: -17.250673294067383
    9. ' ' → logprob: -17.375673294067383
    10. '(dc' → logprob: -17.500673294067383

Token 781: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.306760805164231e-05
    2. '(dp' → logprob: -11.75001335144043
    3. ' dp' → logprob: -12.25001335144043
    4. 'dist' → logprob: -15.87501335144043
    5. '	dp' → logprob: -16.75001335144043
    6. '   ' → logprob: -16.87501335144043
    7. 'd' → logprob: -17.62501335144043
    8. 'DP' → logprob: -18.75001335144043
    9. '_dp' → logprob: -19.00001335144043
    10. '(' → logprob: -19.00001335144043

Token 782: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.002949412912130356
    2. 'nv' → logprob: -5.877949237823486
    3. ',n' → logprob: -9.752949714660645
    4. '[v' → logprob: -9.877949714660645
    5. ' nv' → logprob: -11.002949714660645
    6. 'n' → logprob: -12.377949714660645
    7. '_nv' → logprob: -12.502949714660645
    8. '[' → logprob: -12.752949714660645
    9. ',' → logprob: -13.002949714660645
    10. '[
' → logprob: -13.377949714660645

Token 783: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013711919309571385
    2. 'nv' → logprob: -6.626371383666992
    3. '[v' → logprob: -10.876371383666992
    4. ' nv' → logprob: -11.501371383666992
    5. '[n' → logprob: -11.626371383666992
    6. '_nv' → logprob: -12.251371383666992
    7. '[' → logprob: -14.626371383666992
    8. 'n' → logprob: -14.876371383666992
    9. 'vn' → logprob: -15.501371383666992
    10. 'w' → logprob: -15.501371383666992

Token 784: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3170357644557953
    2. '][' → logprob: -1.6920357942581177
    3. '[n' → logprob: -2.442035675048828
    4. 'nv' → logprob: -8.317035675048828
    5. 'v' → logprob: -8.817035675048828
    6. ']' → logprob: -10.567035675048828
    7. '   ' → logprob: -10.692035675048828
    8. ',v' → logprob: -10.692035675048828
    9. '[' → logprob: -11.067035675048828
    10. ',' → logprob: -11.067035675048828

Token 785: 'nm' (ID: 36370)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.29775118827819824
    2. 'nm' → logprob: -1.7977511882781982
    3. 'nv' → logprob: -2.4227511882781982
    4. 'v' → logprob: -6.797751426696777
    5. 'cost' → logprob: -7.547751426696777
    6. ' nv' → logprob: -8.297751426696777
    7. '[n' → logprob: -8.422751426696777
    8. 'm' → logprob: -8.422751426696777
    9. '[m' → logprob: -9.297751426696777
    10. ' money' → logprob: -9.422751426696777

Token 786: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08015810698270798
    2. ',n' → logprob: -2.580157995223999
    3. '[n' → logprob: -7.080158233642578
    4. '],' → logprob: -8.830158233642578
    5. ',v' → logprob: -8.955158233642578
    6. ' ,' → logprob: -9.205158233642578
    7. '(n' → logprob: -10.330158233642578
    8. ']' → logprob: -13.080158233642578
    9. ',
' → logprob: -13.205158233642578
    10. '/n' → logprob: -13.330158233642578

Token 787: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.014164329506456852
    2. ' nv' → logprob: -4.264164447784424
    3. '_nv' → logprob: -14.139163970947266
    4. 'n' → logprob: -16.514163970947266
    5. ' ' → logprob: -17.764163970947266
    6. 'nvarchar' → logprob: -19.014163970947266
    7. '   ' → logprob: -19.264163970947266
    8. 'nav' → logprob: -19.389163970947266
    9. 'nm' → logprob: -20.014163970947266
    10. 'nx' → logprob: -20.014163970947266

Token 788: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ',n' → logprob: -12.12501049041748
    3. ' ,' → logprob: -13.00001049041748
    4. ',m' → logprob: -13.12501049041748
    5. ',
' → logprob: -14.12501049041748
    6. ',

' → logprob: -17.500011444091797
    7. ',
' → logprob: -18.000011444091797
    8. '‌,' → logprob: -18.750011444091797
    9. '),' → logprob: -19.125011444091797
    10. ')' → logprob: -19.250011444091797

Token 789: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.0007100477814674377
    2. ' nm' → logprob: -7.2507100105285645
    3. '_nm' → logprob: -16.375709533691406
    4. '   ' → logprob: -18.000709533691406
    5. 'n' → logprob: -19.000709533691406
    6. ' ' → logprob: -20.125709533691406
    7. '	n' → logprob: -21.625709533691406
    8. 'nk' → logprob: -21.625709533691406
    9. '    ' → logprob: -21.750709533691406
    10. ' ' → logprob: -21.750709533691406

Token 790: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010676169040380046
    2. ')' → logprob: -9.250106811523438
    3. '))
' → logprob: -11.500106811523438
    4. ' ))' → logprob: -14.750106811523438
    5. ')))' → logprob: -16.000106811523438
    6. '   ' → logprob: -17.875106811523438
    7. '))

' → logprob: -18.000106811523438
    8. ')
' → logprob: -18.250106811523438
    9. '),' → logprob: -18.500106811523438
    10. '));' → logprob: -18.500106811523438

Token 791: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04508484527468681
    2. '#' → logprob: -3.5450849533081055
    3. '    
' → logprob: -4.6700849533081055
    4. '```' → logprob: -5.9200849533081055
    5. 'for' → logprob: -6.1700849533081055
    6. 'v' → logprob: -7.2950849533081055
    7. 'cd' → logprob: -9.295084953308105
    8. '        
' → logprob: -10.420084953308105
    9. '  
' → logprob: -10.420084953308105
    10. 'n' → logprob: -10.420084953308105

Token 792: '   ' (ID: 271)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.7468834519386292
    2. '#' → logprob: -1.3718833923339844
    3. 'cd' → logprob: -2.2468833923339844
    4. 'if' → logprob: -2.9968833923339844
    5. 'change' → logprob: -4.871883392333984
    6. 'coins' → logprob: -4.996883392333984
    7. '   ' → logprob: -5.246883392333984
    8. 'a' → logprob: -5.246883392333984
    9. 'nm' → logprob: -5.246883392333984
    10. 'aj' → logprob: -5.496883392333984

Token 793: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7715255618095398
    2. 'add' → logprob: -0.8965255618095398
    3. 'cd' → logprob: -3.0215256214141846
    4. 'if' → logprob: -4.0215253829956055
    5. 'coins' → logprob: -4.1465253829956055
    6. 'aj' → logprob: -4.7715253829956055
    7. 'pieces' → logprob: -5.3965253829956055
    8. 'coin' → logprob: -5.3965253829956055
    9. 'change' → logprob: -5.6465253829956055
    10. 'a' → logprob: -6.0215253829956055

Token 794: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7338873744010925
    2. 'add' → logprob: -1.1088874340057373
    3. 'nm' → logprob: -2.8588874340057373
    4. 'coins' → logprob: -3.2338874340057373
    5. 'if' → logprob: -3.6088874340057373
    6. 'added' → logprob: -3.9838874340057373
    7. 'nv' → logprob: -5.233887195587158
    8. 'cd' → logprob: -5.483887195587158
    9. 'pieces' → logprob: -5.483887195587158
    10. 'n' → logprob: -5.483887195587158

Token 795: ' considère' (ID: 176437)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.08560311794281
    2. 'for' → logprob: -1.58560311794281
    3. 'cd' → logprob: -1.83560311794281
    4. '   ' → logprob: -2.0856032371520996
    5. '+=' → logprob: -3.3356032371520996
    6. 'v' → logprob: -3.7106032371520996
    7. ',' → logprob: -3.7106032371520996
    8. 'a' → logprob: -3.9606032371520996
    9. 'n' → logprob: -4.3356032371521
    10. 'nm' → logprob: -4.8356032371521

Token 796: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.6340240240097046
    2. 'v' → logprob: -1.6340240240097046
    3. 'cd' → logprob: -1.7590240240097046
    4. 'the' → logprob: -2.259024143218994
    5. '   ' → logprob: -2.884024143218994
    6. '#' → logprob: -2.884024143218994
    7. 'la' → logprob: -3.259024143218994
    8. ' la' → logprob: -3.384024143218994
    9. 'money' → logprob: -3.384024143218994
    10. 'le' → logprob: -3.634024143218994

Token 797: ''op' (ID: 70747)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9088719487190247
    2. 'money' → logprob: -1.1588718891143799
    3. 'cd' → logprob: -1.6588718891143799
    4. 'if' → logprob: -3.78387188911438
    5. ' money' → logprob: -4.533872127532959
    6. '   ' → logprob: -4.658872127532959
    7. ' v' → logprob: -4.658872127532959
    8. ' cd' → logprob: -4.783872127532959
    9. 'cash' → logprob: -5.533872127532959
    10. 'a' → logprob: -5.658872127532959

Token 798: 'ération' (ID: 24977)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8587452173233032
    2. 'tion' → logprob: -0.8587452173233032
    3. 'portun' → logprob: -2.7337450981140137
    4. 'urt' → logprob: -3.9837450981140137
    5. 'port' → logprob: -4.108745098114014
    6. 'ur' → logprob: -4.858745098114014
    7. 'ort' → logprob: -4.858745098114014
    8. 'portunity' → logprob: -5.358745098114014
    9. 'ti' → logprob: -5.733745098114014
    10. '```' → logprob: -5.733745098114014

Token 799: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06604456901550293
    2. 'add' → logprob: -5.066044807434082
    3. 'v' → logprob: -5.191044807434082
    4. 'coins' → logprob: -5.441044807434082
    5. 'cd' → logprob: -5.566044807434082
    6. ' d' → logprob: -5.566044807434082
    7. 'n' → logprob: -5.566044807434082
    8. 'd' → logprob: -5.816044807434082
    9. '_add' → logprob: -5.941044807434082
    10. 'nb' → logprob: -6.066044807434082

Token 800: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.37231212854385376
    2. 'exchange' → logprob: -1.872312068939209
    3. 'changer' → logprob: -3.372312068939209
    4. 'achat' → logprob: -3.622312068939209
    5. 'aj' → logprob: -3.622312068939209
    6. 'money' → logprob: -4.247312068939209
    7. 'acheter' → logprob: -4.372312068939209
    8. 'v' → logprob: -5.372312068939209
    9. 'éch' → logprob: -5.372312068939209
    10. 'mon' → logprob: -5.497312068939209

Token 801: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18969112634658813
    2. ',' → logprob: -2.4396910667419434
    3. 'coins' → logprob: -2.9396910667419434
    4. 'nb' → logprob: -5.439691066741943
    5. 'cd' → logprob: -5.439691066741943
    6. '    
' → logprob: -5.564691066741943
    7. ' coins' → logprob: -5.564691066741943
    8. ' nb' → logprob: -5.939691066741943
    9. 'pieces' → logprob: -6.439691066741943
    10. 'if' → logprob: -6.689691066741943

Token 802: ' place' (ID: 2475)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002979240380227566
    2. ' v' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.500297546386719
    4. 'money' → logprob: -14.625297546386719
    5. '	v' → logprob: -15.000297546386719
    6. 'graph' → logprob: -15.375297546386719
    7. 'cd' → logprob: -16.00029754638672
    8. '[v' → logprob: -16.37529754638672
    9. ' ' → logprob: -16.50029754638672
    10. 'the' → logprob: -17.75029754638672

Token 803: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5632250308990479
    2. 'coins' → logprob: -1.5632250308990479
    3. 'add' → logprob: -2.313225030899048
    4. 'pieces' → logprob: -2.938225030899048
    5. 'nb' → logprob: -3.813225030899048
    6. 'coin' → logprob: -4.813224792480469
    7. 'plus' → logprob: -5.063224792480469
    8. 'nbr' → logprob: -5.313224792480469
    9. ' coins' → logprob: -5.813224792480469
    10. 'aj' → logprob: -6.063224792480469

Token 804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2709180116653442
    2. 'add' → logprob: -1.5209180116653442
    3. ' add' → logprob: -2.0209178924560547
    4. 'coins' → logprob: -2.3959178924560547
    5. 'cd' → logprob: -3.0209178924560547
    6. 'nb' → logprob: -3.2709178924560547
    7. ' coins' → logprob: -3.5209178924560547
    8. 'coin' → logprob: -3.5209178924560547
    9. ' nb' → logprob: -3.7709178924560547
    10. ' if' → logprob: -4.270917892456055

Token 805: ' #' (ID: 1069)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.8341066241264343
    2. 'coins' → logprob: -1.459106683731079
    3. 'cd' → logprob: -2.584106683731079
    4. 'pieces' → logprob: -3.084106683731079
    5. 'if' → logprob: -3.459106683731079
    6. 'nb' → logprob: -3.709106683731079
    7. 'coin' → logprob: -3.709106683731079
    8. 'nm' → logprob: -3.959106683731079
    9. 'change' → logprob: -4.0841064453125
    10. 'new' → logprob: -4.2091064453125

Token 806: ' nm' (ID: 43183)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.3690451383590698
    2. 'nm' → logprob: -1.8690451383590698
    3. 'if' → logprob: -1.9940451383590698
    4. 'coins' → logprob: -2.1190452575683594
    5. 'cd' → logprob: -2.6190452575683594
    6. 'nb' → logprob: -2.9940452575683594
    7. 'pieces' → logprob: -3.2440452575683594
    8. 'nv' → logprob: -3.3690452575683594
    9. 'n' → logprob: -3.9940452575683594
    10. 'coin' → logprob: -4.244045257568359

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6406078934669495
    2. ' =' → logprob: -0.7656078934669495
    3. ',' → logprob: -4.890607833862305
    4. 'money' → logprob: -7.890607833862305
    5. '_money' → logprob: -10.640607833862305
    6. ',m' → logprob: -10.890607833862305
    7. '=m' → logprob: -11.390607833862305
    8. ' money' → logprob: -12.140607833862305
    9. '   ' → logprob: -12.265607833862305
    10. ' ,' → logprob: -12.265607833862305

Token 808: ' min' (ID: 1349)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.006211274303495884
    2. ' money' → logprob: -5.381211280822754
    3. 'min' → logprob: -6.506211280822754
    4. '   ' → logprob: -9.756211280822754
    5. ' min' → logprob: -11.381211280822754
    6. 'v' → logprob: -12.256211280822754
    7. '  ' → logprob: -12.381211280822754
    8. ' ' → logprob: -12.756211280822754
    9. 'new' → logprob: -12.881211280822754
    10. '    ' → logprob: -13.256211280822754

Token 809: '(number' (ID: 32955)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0009469495271332562
    2. 'money' → logprob: -7.750946998596191
    3. '(MAX' → logprob: -8.375946998596191
    4. '(max' → logprob: -9.375946998596191
    5. '(M' → logprob: -9.625946998596191
    6. '(' → logprob: -9.750946998596191
    7. '(n' → logprob: -10.375946998596191
    8. 'MAX' → logprob: -11.375946998596191
    9. '(dp' → logprob: -11.750946998596191
    10. '(s' → logprob: -12.000946998596191

Token 810: ' of' (ID: 328)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.686258852481842
    2. 'money' → logprob: -1.6862587928771973
    3. 'ey' → logprob: -2.3112587928771973
    4. 'y' → logprob: -2.5612587928771973
    5. 'ney' → logprob: -3.0612587928771973
    6. ')' → logprob: -3.8112587928771973
    7. '_money' → logprob: -4.061258792877197
    8. '(' → logprob: -4.811258792877197
    9. ' (' → logprob: -4.936258792877197
    10. 'oney' → logprob: -5.311258792877197

Token 811: ' pièces' (ID: 49165)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.7231370806694031
    2. '(m' → logprob: -0.8481370806694031
    3. '(dp' → logprob: -3.473137140274048
    4. 'coins' → logprob: -4.348136901855469
    5. 'dp' → logprob: -4.723136901855469
    6. ' money' → logprob: -5.223136901855469
    7. '_money' → logprob: -5.348136901855469
    8. 'cd' → logprob: -5.473136901855469
    9. 's' → logprob: -5.973136901855469
    10. '(' → logprob: -6.098136901855469

Token 812: ' augmenté' (ID: 199653)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8394006490707397
    2. '=' → logprob: -1.5894006490707397
    3. ' +' → logprob: -1.5894006490707397
    4. ' =' → logprob: -2.8394007682800293
    5. '+' → logprob: -2.9644007682800293
    6. '(m' → logprob: -4.589400768280029
    7. 's' → logprob: -4.839400768280029
    8. ')' → logprob: -4.839400768280029
    9. '[m' → logprob: -5.214400768280029
    10. 'money' → logprob: -5.464400768280029

Token 813: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8335193991661072
    2. '=' → logprob: -1.083519458770752
    3. '(m' → logprob: -2.708519458770752
    4. ' =' → logprob: -2.958519458770752
    5. '+' → logprob: -3.708519458770752
    6. ' +' → logprob: -4.333519458770752
    7. '),' → logprob: -4.833519458770752
    8. '(v' → logprob: -4.833519458770752
    9. ')' → logprob: -4.958519458770752
    10. '(' → logprob: -5.083519458770752

Token 814: ' cd' (ID: 24852)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.1586630791425705
    2. ' money' → logprob: -2.533663034439087
    3. 'MAX' → logprob: -2.908663034439087
    4. 'dp' → logprob: -5.158663272857666
    5. ' MAX' → logprob: -6.658663272857666
    6. ' ' → logprob: -6.783663272857666
    7. 'max' → logprob: -7.033663272857666
    8. ' dp' → logprob: -7.283663272857666
    9. '(MAX' → logprob: -7.408663272857666
    10. '   ' → logprob: -8.033662796020508

Token 815: '[v' (ID: 36561)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.7291935682296753
    2. 'money' → logprob: -1.3541935682296753
    3. '[v' → logprob: -1.4791935682296753
    4. ')' → logprob: -4.604193687438965
    5. 'v' → logprob: -6.104193687438965
    6. ']' → logprob: -6.104193687438965
    7. ' ' → logprob: -6.229193687438965
    8. '][' → logprob: -6.479193687438965
    9. '),' → logprob: -6.729193687438965
    10. ' money' → logprob: -6.729193687438965

Token 816: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11128838360309601
    2. '[' → logprob: -2.73628830909729
    3. 'money' → logprob: -3.73628830909729
    4. ']' → logprob: -4.736288547515869
    5. '],' → logprob: -5.486288547515869
    6. '0' → logprob: -7.361288547515869
    7. 'm' → logprob: -7.486288547515869
    8. ' ][' → logprob: -8.361288070678711
    9. '
' → logprob: -8.486288070678711
    10. ' ' → logprob: -8.736288070678711

Token 817: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003738564206287265
    2. '1' → logprob: -5.6287384033203125
    3. 'money' → logprob: -10.691238403320312
    4. '[' → logprob: -10.878738403320312
    5. '   ' → logprob: -10.941238403320312
    6. '
' → logprob: -11.253738403320312
    7. ' ' → logprob: -11.441238403320312
    8. 'cd' → logprob: -11.691238403320312
    9. ']' → logprob: -11.753738403320312
    10. 'v' → logprob: -12.191238403320312

Token 818: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.533527672290802
    2. '],' → logprob: -0.908527672290802
    3. ']+' → logprob: -4.658527851104736
    4. '0' → logprob: -8.158527374267578
    5. '][' → logprob: -8.783527374267578
    6. '[' → logprob: -8.908527374267578
    7. '])' → logprob: -10.158527374267578
    8. ' ],' → logprob: -10.283527374267578
    9. '),' → logprob: -10.533527374267578
    10. ' ]' → logprob: -10.658527374267578

Token 819: ' mais' (ID: 2899)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.1912502646446228
    2. ' money' → logprob: -1.9412503242492676
    3. 'MAX' → logprob: -3.5662503242492676
    4. ' MAX' → logprob: -6.941250324249268
    5. 'max' → logprob: -7.691250324249268
    6. 'dp' → logprob: -8.69124984741211
    7. 'm' → logprob: -9.56624984741211
    8. '   ' → logprob: -9.56624984741211
    9. 'MIN' → logprob: -9.81624984741211
    10. ' dp' → logprob: -9.87874984741211

Token 820: ' pas' (ID: 2173)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.5805926322937012
    2. 'money' → logprob: -1.2055926322937012
    3. ' money' → logprob: -2.080592632293701
    4. ' MAX' → logprob: -4.330592632293701
    5. 'max' → logprob: -7.080592632293701
    6. 'dp' → logprob: -7.705592632293701
    7. 's' → logprob: -8.14309310913086
    8. '(MAX' → logprob: -8.26809310913086
    9. 'MIN' → logprob: -8.89309310913086
    10. ' dp' → logprob: -9.14309310913086

Token 821: ' plus' (ID: 2932)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.04114861413836479
    2. ' MAX' → logprob: -3.6661486625671387
    3. '(MAX' → logprob: -4.416148662567139
    4. ')' → logprob: -7.541148662567139
    5. '[MAX' → logprob: -7.541148662567139
    6. 'MIN' → logprob: -7.916148662567139
    7. 'max' → logprob: -8.41614818572998
    8. '_MAX' → logprob: -8.41614818572998
    9. ' money' → logprob: -8.41614818572998
    10. ',' → logprob: -8.54114818572998

Token 822: ' que' (ID: 661)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.6074388027191162
    2. '(n' → logprob: -1.1074388027191162
    3. '(m' → logprob: -2.732438802719116
    4. '(M' → logprob: -3.357438802719116
    5. '=' → logprob: -4.607439041137695
    6. '(s' → logprob: -5.482439041137695
    7. '(dp' → logprob: -6.107439041137695
    8. ',' → logprob: -6.232439041137695
    9. '(' → logprob: -6.232439041137695
    10. 'MAX' → logprob: -7.232439041137695

Token 823: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0024861192796379328
    2. ' MAX' → logprob: -6.002486228942871
    3. '250' → logprob: -12.752486228942871
    4. 'MIN' → logprob: -12.752486228942871
    5. '(MAX' → logprob: -13.127486228942871
    6. ' ' → logprob: -14.002486228942871
    7. '[MAX' → logprob: -14.252486228942871
    8. '   ' → logprob: -14.627486228942871
    9. 'max' → logprob: -15.252486228942871
    10. '_MAX' → logprob: -15.502486228942871

Token 824: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -3.190178904333152e-05
    2. '_money' → logprob: -11.375031471252441
    3. '_' → logprob: -11.750031471252441
    4. 'M' → logprob: -12.750031471252441
    5. '_MAX' → logprob: -12.875031471252441
    6. '_m' → logprob: -13.125031471252441
    7. '_MON' → logprob: -13.625031471252441
    8. ')' → logprob: -13.750031471252441
    9. 'money' → logprob: -14.125031471252441
    10. 'Money' → logprob: -14.375031471252441

Token 825: 'ONEY' (ID: 88207)
  Prédit: '_M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.23900505900382996
    2. 'ONEY' → logprob: -1.7390050888061523
    3. 'M' → logprob: -3.3640050888061523
    4. 'oney' → logprob: -6.864005088806152
    5. 'NEY' → logprob: -8.114005088806152
    6. '```' → logprob: -8.114005088806152
    7. 'ONE' → logprob: -9.239005088806152
    8. '   ' → logprob: -9.614005088806152
    9. 'EY' → logprob: -9.864005088806152
    10. '_money' → logprob: -9.864005088806152

Token 826: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7682912945747375
    2. ' =' → logprob: -1.5182912349700928
    3. '=' → logprob: -1.7682912349700928
    4. ')' → logprob: -2.3932912349700928
    5. ')
' → logprob: -3.8932912349700928
    6. ',
' → logprob: -4.143291473388672
    7. '   ' → logprob: -5.643291473388672
    8. '),' → logprob: -5.768291473388672
    9. '
' → logprob: -5.893291473388672
    10. 'money' → logprob: -5.893291473388672

Token 827: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5941391587257385
    2. '=' → logprob: -0.8441391587257385
    3. ',' → logprob: -4.969139099121094
    4. ')' → logprob: -5.969139099121094
    5. 'money' → logprob: -6.469139099121094
    6. '   ' → logprob: -6.719139099121094
    7. ' =
' → logprob: -6.719139099121094
    8. '_' → logprob: -7.219139099121094
    9. '=
' → logprob: -7.219139099121094
    10. ',
' → logprob: -7.969139099121094

Token 828: ' nm' (ID: 43183)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7202780842781067
    2. ' =' → logprob: -0.8452780842781067
    3. 'nm' (adapté à ' nm') → logprob: -2.970278024673462
    4. ' nm' → logprob: -4.220278263092041
    5. 'min' → logprob: -5.095278263092041
    6. '=min' → logprob: -5.220278263092041
    7. 'n' → logprob: -6.845278263092041
    8. '   ' → logprob: -7.095278263092041
    9. '_nm' → logprob: -7.095278263092041
    10. ' min' → logprob: -7.220278263092041

Token 829: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693703174591064
    2. ' =' → logprob: -2.126936912536621
    3. '=min' → logprob: -11.751936912536621
    4. '=max' → logprob: -14.376936912536621
    5. '＝' → logprob: -15.751936912536621
    6. '=m' → logprob: -15.876936912536621
    7. '=
' → logprob: -16.626937866210938
    8. ')' → logprob: -17.001937866210938
    9. ',' → logprob: -17.126937866210938
    10. '=

' → logprob: -17.251937866210938

Token 830: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.56102097814437e-05
    2. ' min' → logprob: -10.000045776367188
    3. '	min' → logprob: -16.625045776367188
    4. 'max' → logprob: -17.250045776367188
    5. '   ' → logprob: -18.750045776367188
    6. '(min' → logprob: -19.375045776367188
    7. '[min' → logprob: -19.625045776367188
    8. '=min' → logprob: -20.625045776367188
    9. ',min' → logprob: -20.875045776367188
    10. '
' → logprob: -21.000045776367188

Token 831: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -9.805981972021982e-05
    2. '(MAX' → logprob: -9.87509822845459
    3. '(M' → logprob: -10.75009822845459
    4. 'money' → logprob: -10.75009822845459
    5. '(' → logprob: -13.75009822845459
    6. '(s' → logprob: -14.12509822845459
    7. '(max' → logprob: -14.12509822845459
    8. 'MAX' → logprob: -14.75009822845459
    9. '(dp' → logprob: -15.12509822845459
    10. 'Money' → logprob: -16.250097274780273

Token 832: 'oney' (ID: 3021)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.35310953855514526
    2. '(m' → logprob: -1.60310959815979
    3. 'oney' → logprob: -2.47810959815979
    4. ' money' → logprob: -5.228109359741211
    5. 'ney' → logprob: -5.853109359741211
    6. 'y' → logprob: -6.728109359741211
    7. 'm' → logprob: -7.103109359741211
    8. 'ny' → logprob: -7.478109359741211
    9. '[m' → logprob: -7.978109359741211
    10. 'n' → logprob: -7.978109359741211

Token 833: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11285776644945145
    2. '+' → logprob: -2.2378578186035156
    3. ' ' → logprob: -11.362857818603516
    4. ' +
' → logprob: -11.987857818603516
    5. ',' → logprob: -12.112857818603516
    6. ' ,' → logprob: -12.862857818603516
    7. '+
' → logprob: -12.987857818603516
    8. '+m' → logprob: -13.362857818603516
    9. ' ' → logprob: -13.612857818603516
    10. '[' → logprob: -13.862857818603516

Token 834: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.848420551046729e-05
    2. ' cd' → logprob: -9.7500581741333
    3. '	cd' → logprob: -16.625059127807617
    4. '(cd' → logprob: -17.625059127807617
    5. '_cd' → logprob: -18.250059127807617
    6. 'cdn' → logprob: -20.125059127807617
    7. '   ' → logprob: -21.000059127807617
    8. '.cd' → logprob: -21.375059127807617
    9. ' ' → logprob: -22.250059127807617
    10. 'cdr' → logprob: -22.875059127807617

Token 835: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.704273118884885e-07
    2. 'v' → logprob: -14.375000953674316
    3. '[' → logprob: -19.25
    4. '(v' → logprob: -21.0
    5. '```' → logprob: -21.0
    6. '	v' → logprob: -21.75
    7. '[
' → logprob: -21.75
    8. '[u' → logprob: -21.875
    9. ')v' → logprob: -22.0
    10. '[val' → logprob: -22.25

Token 836: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.053694117814302444
    2. '[v' → logprob: -3.178694009780884
    3. '[' → logprob: -4.553694248199463
    4. '0' → logprob: -10.178693771362305
    5. ']' → logprob: -10.303693771362305
    6. ' ][' → logprob: -10.928693771362305
    7. 'v' → logprob: -11.303693771362305
    8. '(v' → logprob: -13.553693771362305
    9. ' ' → logprob: -13.678693771362305
    10. ')[' → logprob: -14.303693771362305

Token 837: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. ' ' → logprob: -16.75
    4. '#' → logprob: -19.625
    5. '۰' → logprob: -19.625
    6. '00' → logprob: -19.625
    7. '```' → logprob: -19.75
    8. '
' → logprob: -19.875
    9. '1' → logprob: -20.125
    10. '(' → logprob: -20.1875

Token 838: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011522514978423715
    2. ' ,' → logprob: -9.125115394592285
    3. '),' → logprob: -12.750115394592285
    4. '],' → logprob: -13.125115394592285
    5. '   ' → logprob: -14.000115394592285
    6. ',max' → logprob: -15.375115394592285
    7. ')' → logprob: -16.12511444091797
    8. ' ' → logprob: -17.00011444091797
    9. ',
' → logprob: -17.25011444091797
    10. '	' → logprob: -17.50011444091797

Token 839: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0019287518225610256
    2. ' MAX' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.876928329467773
    4. '_MAX' → logprob: -17.626928329467773
    5. '(MAX' → logprob: -17.751928329467773
    6. '250' → logprob: -18.126928329467773
    7. ' ' → logprob: -18.876928329467773
    8. '/MAX' → logprob: -19.376928329467773
    9. 'MIN' → logprob: -19.501928329467773
    10. 'Max' → logprob: -19.501928329467773

Token 840: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -1.981667537620524e-06
    2. 'M' → logprob: -13.250001907348633
    3. '```' → logprob: -16.875001907348633
    4. '_MON' → logprob: -17.375001907348633
    5. '	M' → logprob: -17.500001907348633
    6. '_money' → logprob: -17.750001907348633
    7. ' MONEY' → logprob: -17.750001907348633
    8. '_' → logprob: -17.875001907348633
    9. ')' → logprob: -18.000001907348633
    10. 'Money' → logprob: -18.375001907348633

Token 841: 'ONEY' (ID: 88207)
  Prédit: 'ONEY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONEY' → logprob: -0.1326369345188141
    2. 'M' → logprob: -2.1326370239257812
    3. '_M' → logprob: -5.507637023925781
    4. 'NEY' → logprob: -7.632637023925781
    5. 'ONY' → logprob: -8.132637023925781
    6. 'O' → logprob: -8.257637023925781
    7. 'oney' → logprob: -8.632637023925781
    8. '```' → logprob: -8.882637023925781
    9. 'ONE' → logprob: -9.507637023925781
    10. ' MONEY' → logprob: -9.757637023925781

Token 842: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003146088565699756
    2. ')
' → logprob: -8.125314712524414
    3. '   ' → logprob: -11.000314712524414
    4. ' )' → logprob: -13.375314712524414
    5. ')
' → logprob: -15.625314712524414
    6. ')

' → logprob: -16.375314712524414
    7. '),' → logprob: -17.875314712524414
    8. ',' → logprob: -18.125314712524414
    9. ').' → logprob: -18.125314712524414
    10. ' ' → logprob: -18.375314712524414

Token 843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0917506217956543
    2. ' if' → logprob: -2.8417506217956543
    3. 'if' → logprob: -4.341750621795654
    4. '<|end|>' → logprob: -4.716750621795654
    5. '    
' → logprob: -5.841750621795654
    6. '	if' → logprob: -6.966750621795654
    7. '  ' → logprob: -7.216750621795654
    8. ' ' → logprob: -7.341750621795654
    9. ')' → logprob: -7.466750621795654
    10. ' 
' → logprob: -7.716750621795654

Token 844: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2501232326030731
    2. '   ' → logprob: -1.7501232624053955
    3. 'cost' → logprob: -3.7501232624053955
    4. 'nd' → logprob: -4.750123023986816
    5. 'dist' → logprob: -5.375123023986816
    6. ' if' → logprob: -5.500123023986816
    7. 'new' → logprob: -6.000123023986816
    8. 'nt' → logprob: -6.375123023986816
    9. 'time' → logprob: -7.500123023986816
    10. 'tc' → logprob: -7.875123023986816

Token 845: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17242024838924408
    2. 'nt' → logprob: -2.5474202632904053
    3. 'new' → logprob: -3.4224202632904053
    4. 'ntime' → logprob: -3.6724202632904053
    5. 'nc' → logprob: -4.422420024871826
    6. 'n' → logprob: -5.547420024871826
    7. 'nd' → logprob: -6.172420024871826
    8. 'time' → logprob: -6.422420024871826
    9. 'cost' → logprob: -7.047420024871826
    10. '   ' → logprob: -7.797420024871826

Token 846: ' cette' (ID: 7696)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020623989403247833
    2. ' dp' → logprob: -3.8956239223480225
    3. '   ' → logprob: -9.895624160766602
    4. 'nm' → logprob: -11.270624160766602
    5. 'cd' → logprob: -11.895624160766602
    6. '	dp' → logprob: -12.270624160766602
    7. '(dp' → logprob: -12.895624160766602
    8. 'dm' → logprob: -13.895624160766602
    9. ' nm' → logprob: -14.270624160766602
    10. ' ' → logprob: -14.395624160766602

Token 847: ' opération' (ID: 86023)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1420593559741974
    2. 'nm' → logprob: -2.142059326171875
    3. ' dp' → logprob: -4.517059326171875
    4. ' nm' → logprob: -6.017059326171875
    5. 'dm' → logprob: -7.267059326171875
    6. 'n' → logprob: -8.142059326171875
    7. 'dist' → logprob: -8.767059326171875
    8. 'cd' → logprob: -9.267059326171875
    9. 'min' → logprob: -9.642059326171875
    10. '   ' → logprob: -9.892059326171875

Token 848: ' permet' (ID: 11798)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6523250937461853
    2. '!=' → logprob: -1.40232515335083
    3. '<|end|>' → logprob: -2.52732515335083
    4. '>=' → logprob: -2.90232515335083
    5. ' >=' → logprob: -3.40232515335083
    6. '<=' → logprob: -4.15232515335083
    7. ' ==' → logprob: -4.40232515335083
    8. ' <=' → logprob: -4.65232515335083
    9. '==' → logprob: -5.15232515335083
    10. ':' → logprob: -5.65232515335083

Token 849: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15783534944057465
    2. ' dp' → logprob: -2.2828352451324463
    3. '   ' → logprob: -3.9078352451324463
    4. '(dp' → logprob: -4.407835483551025
    5. 'd' → logprob: -5.157835483551025
    6. 'if' → logprob: -5.407835483551025
    7. ' d' → logprob: -7.782835483551025
    8. '	dp' → logprob: -8.157835006713867
    9. ' de' → logprob: -8.282835006713867
    10. 'de' → logprob: -8.907835006713867

Token 850: ''améli' (ID: 164097)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004894415847957134
    2. ''améli' → logprob: -5.379894256591797
    3. 'dp' → logprob: -9.254894256591797
    4. '(dp' → logprob: -10.004894256591797
    5. ' améliorer' → logprob: -10.254894256591797
    6. 'am' → logprob: -11.254894256591797
    7. 'e' → logprob: -11.254894256591797
    8. '’améli' → logprob: -11.379894256591797
    9. 'im' → logprob: -11.629894256591797
    10. ''obtenir' → logprob: -11.629894256591797

Token 851: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.0002980432182084769
    2. 'or' → logprob: -8.625298500061035
    3. 'rer' → logprob: -10.125298500061035
    4. 'urer' → logprob: -10.625298500061035
    5. 'orrer' → logprob: -10.875298500061035
    6. 'ior' → logprob: -11.750298500061035
    7. 'o' → logprob: -12.625298500061035
    8. 'oration' → logprob: -12.875298500061035
    9. 'oler' → logprob: -13.375298500061035
    10. 'vor' → logprob: -13.500298500061035

Token 852: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004934512544423342
    2. ' dp' → logprob: -5.629934310913086
    3. '(dp' → logprob: -6.754934310913086
    4. '   ' → logprob: -9.129934310913086
    5. 'le' → logprob: -11.004934310913086
    6. 'if' → logprob: -11.129934310913086
    7. '	dp' → logprob: -11.504934310913086
    8. 'the' → logprob: -11.879934310913086
    9. 'dist' → logprob: -12.754934310913086
    10. '_dp' → logprob: -13.504934310913086

Token 853: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004950098809786141
    2. 'cost' → logprob: -8.625494956970215
    3. 'co' → logprob: -8.750494956970215
    4. ' dp' → logprob: -9.250494956970215
    5. 'dist' → logprob: -10.625494956970215
    6. 'temps' → logprob: -10.875494956970215
    7. 'cout' → logprob: -11.750494956970215
    8. '(dp' → logprob: -13.000494956970215
    9. 'if' → logprob: -13.500494956970215
    10. 'd' → logprob: -13.500494956970215

Token 854: ' pour' (ID: 1930)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4586138427257538
    2. 'and' → logprob: -1.0836138725280762
    3. '   ' → logprob: -3.833613872528076
    4. ':' → logprob: -6.083613872528076
    5. ' if' → logprob: -6.458613872528076
    6. '=' → logprob: -6.833613872528076
    7. 'if' → logprob: -6.958613872528076
    8. ',' → logprob: -6.958613872528076
    9. ' =' → logprob: -7.833613872528076
    10. ' et' → logprob: -8.458613395690918

Token 855: ' rester' (ID: 54655)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1776796132326126
    2. 'atte' → logprob: -1.9276796579360962
    3. 'nm' → logprob: -4.927679538726807
    4. 're' → logprob: -5.802679538726807
    5. 'arr' → logprob: -6.552679538726807
    6. 'v' → logprob: -7.177679538726807
    7. '(dp' → logprob: -7.177679538726807
    8. 'reach' → logprob: -7.177679538726807
    9. 'at' → logprob: -7.552679538726807
    10. 'att' → logprob: -8.177680015563965

Token 856: ' sur' (ID: 1512)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29104354977607727
    2. '[v' → logprob: -1.9160435199737549
    3. 'à' → logprob: -3.041043519973755
    4. 'au' → logprob: -3.916043519973755
    5. 'dans' → logprob: -4.041043758392334
    6. ' à' → logprob: -4.791043758392334
    7. 'v' → logprob: -5.291043758392334
    8. 'at' → logprob: -6.791043758392334
    9. ' dp' → logprob: -6.791043758392334
    10. '(dp' → logprob: -7.291043758392334

Token 857: ' place' (ID: 2475)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.033949725329875946
    2. '[v' → logprob: -3.783949613571167
    3. 'le' → logprob: -4.658949851989746
    4. ' v' → logprob: -8.158949851989746
    5. 'vq' → logprob: -8.283949851989746
    6. '(v' → logprob: -8.408949851989746
    7. 'la' → logprob: -9.158949851989746
    8. ' le' → logprob: -9.408949851989746
    9. 'l' → logprob: -9.533949851989746
    10. 'the' → logprob: -10.158949851989746

Token 858: ' avec' (ID: 3937)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4859126806259155
    2. 'and' → logprob: -1.4859126806259155
    3. '   ' → logprob: -2.110912799835205
    4. ':' → logprob: -3.735912799835205
    5. ',' → logprob: -4.860912799835205
    6. ' if' → logprob: -5.985912799835205
    7. 'if' → logprob: -6.110912799835205
    8. ' at' → logprob: -7.485912799835205
    9. ':
' → logprob: -9.485912322998047
    10. 'at' → logprob: -9.735912322998047

Token 859: ' ce' (ID: 2357)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.015326609835028648
    2. 'dp' → logprob: -4.890326499938965
    3. ' nm' → logprob: -5.015326499938965
    4. '   ' → logprob: -8.515326499938965
    5. '[n' → logprob: -8.640326499938965
    6. 'le' → logprob: -9.265326499938965
    7. 'n' → logprob: -10.015326499938965
    8. '```' → logprob: -10.140326499938965
    9. '
' → logprob: -10.390326499938965
    10. 'l' → logprob: -10.390326499938965

Token 860: ' nouveau' (ID: 23184)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.002008933573961258
    2. ' nm' → logprob: -6.75200891494751
    3. 'nou' → logprob: -7.75200891494751
    4. 'new' → logprob: -8.502009391784668
    5. 'money' → logprob: -9.877009391784668
    6. '```' → logprob: -10.002009391784668
    7. 'n' → logprob: -11.127009391784668
    8. 'nv' → logprob: -11.252009391784668
    9. 'state' → logprob: -11.627009391784668
    10. 'niveau' → logprob: -11.752009391784668

Token 861: ' nombre' (ID: 9733)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.021553922444581985
    2. 'money' → logprob: -3.8965539932250977
    3. ' nm' → logprob: -8.021553993225098
    4. 'argent' → logprob: -8.646553993225098
    5. 'state' → logprob: -8.771553993225098
    6. 'amount' → logprob: -9.396553993225098
    7. '```' → logprob: -9.646553993225098
    8. 'niveau' → logprob: -9.896553993225098
    9. '_nm' → logprob: -10.396553993225098
    10. 'cost' → logprob: -10.896553993225098

Token 862: ' de' (ID: 334)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.35294395685195923
    2. 'dp' → logprob: -2.2279438972473145
    3. ' of' → logprob: -2.8529438972473145
    4. 'd' → logprob: -2.9779438972473145
    5. '_' → logprob: -3.8529438972473145
    6. '(dp' → logprob: -4.4779438972473145
    7. '   ' → logprob: -5.1029438972473145
    8. '=' → logprob: -5.1029438972473145
    9. '_of' → logprob: -5.3529438972473145
    10. 'de' → logprob: -5.3529438972473145

Token 863: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.19638682901859283
    2. 'pieces' → logprob: -2.3213868141174316
    3. 'nm' → logprob: -2.9463868141174316
    4. 'money' → logprob: -4.071386814117432
    5. '```' → logprob: -5.696386814117432
    6. ' pièces' → logprob: -5.696386814117432
    7. 'coins' → logprob: -6.821386814117432
    8. 'mon' → logprob: -7.321386814117432
    9. 'pm' → logprob: -7.571386814117432
    10. 'tokens' → logprob: -8.57138729095459

Token 864: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0796266794204712
    2. ':' → logprob: -1.2046266794204712
    3. ' and' → logprob: -1.5796266794204712
    4. 'and' → logprob: -2.0796265602111816
    5. ',' → logprob: -4.454626560211182
    6. ':
' → logprob: -4.829626560211182
    7. 'if' → logprob: -5.204626560211182
    8. ' if' → logprob: -6.204626560211182
    9. '):' → logprob: -7.579626560211182
    10. '=' → logprob: -7.579626560211182

Token 865: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5578132271766663
    2. ':' → logprob: -1.9328131675720215
    3. ' if' → logprob: -2.0578131675720215
    4. ' and' → logprob: -2.4328131675720215
    5. 'if' → logprob: -3.3078131675720215
    6. 'and' → logprob: -4.3078131675720215
    7. ',' → logprob: -4.9328131675720215
    8. '<|end|>' → logprob: -5.9328131675720215
    9. '):' → logprob: -6.1828131675720215
    10. '       ' → logprob: -6.8078131675720215

Token 866: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17839674651622772
    2. 'if' (adapté à ' if') → logprob: -2.053396701812744
    3. ' if' → logprob: -3.428396701812744
    4. '       ' → logprob: -7.053396701812744
    5. '	if' → logprob: -7.428396701812744
    6. '    
' → logprob: -7.803396701812744
    7. '    ' → logprob: -8.303397178649902
    8. ':' → logprob: -9.178397178649902
    9. ' ' → logprob: -9.428397178649902
    10. '  ' → logprob: -9.803397178649902

Token 867: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007632300723344088
    2. ' dp' → logprob: -4.882632255554199
    3. '   ' → logprob: -11.5076322555542
    4. '	dp' → logprob: -11.6326322555542
    5. '(dp' → logprob: -12.0076322555542
    6. '_dp' → logprob: -14.5076322555542
    7. 'cd' → logprob: -14.8826322555542
    8. ' ' → logprob: -16.632633209228516
    9. 'd' → logprob: -17.132633209228516
    10. '.dp' → logprob: -17.257633209228516

Token 868: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.4121114822482923e-06
    2. 'v' → logprob: -12.625003814697266
    3. '<v' → logprob: -18.750003814697266
    4. '(v' → logprob: -19.750003814697266
    5. '```' → logprob: -20.625003814697266
    6. '   ' → logprob: -20.750003814697266
    7. '	v' → logprob: -20.750003814697266
    8. '[' → logprob: -21.000003814697266
    9. '
' → logprob: -21.125003814697266
    10. '[u' → logprob: -21.375003814697266

Token 869: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06206325441598892
    2. '[n' → logprob: -2.812063217163086
    3. ']' → logprob: -9.687063217163086
    4. '   ' → logprob: -11.437063217163086
    5. ' ][' → logprob: -11.812063217163086
    6. '
' → logprob: -13.062063217163086
    7. '[' → logprob: -13.062063217163086
    8. 'nm' → logprob: -13.062063217163086
    9. '"][' → logprob: -13.187063217163086
    10. '<n' → logprob: -13.562063217163086

Token 870: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -7.32654589228332e-05
    2. 'n' → logprob: -10.125073432922363
    3. ' nm' → logprob: -11.000073432922363
    4. '[n' → logprob: -11.125073432922363
    5. 'm' → logprob: -14.250073432922363
    6. 'money' → logprob: -14.875073432922363
    7. ']' → logprob: -15.125073432922363
    8. '_nm' → logprob: -16.125072479248047
    9. '][' → logprob: -16.375072479248047
    10. '[m' → logprob: -16.750072479248047

Token 871: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04148947820067406
    2. '>' → logprob: -3.291489362716675
    3. ']>' → logprob: -5.791489601135254
    4. ' >' → logprob: -7.916489601135254
    5. ' ]' → logprob: -11.041489601135254
    6. '>]' → logprob: -11.916489601135254
    7. '']' → logprob: -15.166489601135254
    8. '[' → logprob: -15.291489601135254
    9. '">' → logprob: -15.416489601135254
    10. '"]' → logprob: -15.916489601135254

Token 872: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01603648066520691
    2. ' >' → logprob: -4.141036510467529
    3. ')>' → logprob: -15.016036033630371
    4. ')' → logprob: -15.141036033630371
    5. ']>' → logprob: -15.641036033630371
    6. '">' → logprob: -15.641036033630371
    7. '[' → logprob: -15.891036033630371
    8. '>d' → logprob: -16.141036987304688
    9. '()>' → logprob: -16.266036987304688
    10. '>
' → logprob: -16.266036987304688

Token 873: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01575888879597187
    2. 'dist' → logprob: -4.390758991241455
    3. ' dp' → logprob: -5.765758991241455
    4. ' dist' → logprob: -9.390758514404297
    5. '   ' → logprob: -10.765758514404297
    6. '	dp' → logprob: -12.765758514404297
    7. 'd' → logprob: -13.265758514404297
    8. '(dp' → logprob: -14.390758514404297
    9. ' ' → logprob: -15.640758514404297
    10. '    ' → logprob: -15.765758514404297

Token 874: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.0
    3. '[' → logprob: -18.25
    4. '<v' → logprob: -18.5
    5. '(v' → logprob: -19.25
    6. '```' → logprob: -19.5
    7. '	v' → logprob: -19.625
    8. '][' → logprob: -20.5
    9. ' v' → logprob: -20.75
    10. '[val' → logprob: -20.875

Token 875: '][' (ID: 2696)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.39012885093688965
    2. '][' → logprob: -1.1401288509368896
    3. '[' → logprob: -6.015129089355469
    4. '[v' → logprob: -7.265129089355469
    5. 'money' → logprob: -10.515129089355469
    6. '[mem' → logprob: -10.640129089355469
    7. '[n' → logprob: -11.390129089355469
    8. '}[' → logprob: -11.390129089355469
    9. 'm' → logprob: -12.140129089355469
    10. ']' → logprob: -12.140129089355469

Token 876: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -1.5048530030981055e-06
    2. ' money' → logprob: -13.500001907348633
    3. '[m' → logprob: -18.125001907348633
    4. 'm' → logprob: -18.250001907348633
    5. '_money' → logprob: -19.250001907348633
    6. 'nm' → logprob: -19.375001907348633
    7. '.money' → logprob: -19.875001907348633
    8. ' ' → logprob: -20.625001907348633
    9. '   ' → logprob: -20.750001907348633
    10. 'mon' → logprob: -20.750001907348633

Token 877: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03211936727166176
    2. ' +' → logprob: -3.9071192741394043
    3. '+' → logprob: -4.782119274139404
    4. ']+' → logprob: -5.907119274139404
    5. ' ]' → logprob: -7.907119274139404
    6. '   ' → logprob: -10.907119750976562
    7. ')' → logprob: -11.782119750976562
    8. '[' → logprob: -12.157119750976562
    9. '+]' → logprob: -12.782119750976562
    10. ' plus' → logprob: -13.157119750976562

Token 878: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0336492694914341
    2. '+' → logprob: -3.408649206161499
    3. ' ' → logprob: -13.158649444580078
    4. ' +
' → logprob: -14.533649444580078
    5. ' ' → logprob: -15.158649444580078
    6. '[' → logprob: -15.408649444580078
    7. '   ' → logprob: -15.783649444580078
    8. '+
' → logprob: -15.783649444580078
    9. ' plus' → logprob: -16.533649444580078
    10. ']' → logprob: -16.533649444580078

Token 879: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0002036595979006961
    2. ' cd' → logprob: -8.500204086303711
    3. '	cd' → logprob: -16.62520408630371
    4. '(cd' → logprob: -19.12520408630371
    5. '_cd' → logprob: -19.12520408630371
    6. 'cdn' → logprob: -20.12520408630371
    7. '.cd' → logprob: -21.12520408630371
    8. '   ' → logprob: -21.12520408630371
    9. ' ' → logprob: -21.50020408630371
    10. 'Cd' → logprob: -22.75020408630371

Token 880: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.375
    3. '[' → logprob: -18.25
    4. '```' → logprob: -20.125
    5. '	v' → logprob: -20.625
    6. '][' → logprob: -20.75
    7. ' [' → logprob: -20.875
    8. '(v' → logprob: -20.875
    9. '[val' → logprob: -20.875
    10. '[
' → logprob: -21.375

Token 881: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019853383128065616
    2. '[v' → logprob: -8.750198364257812
    3. ']' → logprob: -10.625198364257812
    4. ' ][' → logprob: -12.000198364257812
    5. '[' → logprob: -12.500198364257812
    6. 'v' → logprob: -12.875198364257812
    7. '1' → logprob: -13.250198364257812
    8. ']
' → logprob: -14.875198364257812
    9. '   ' → logprob: -14.875198364257812
    10. '
' → logprob: -15.750198364257812

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. '```' → logprob: -17.25
    4. ' ' → logprob: -18.375
    5. '   ' → logprob: -19.5
    6. '' → logprob: -19.625
    7. '][' → logprob: -20.375
    8. '
' → logprob: -20.75
    9. ']' → logprob: -21.25
    10. '#' → logprob: -21.375

Token 883: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2592986822128296
    2. ']:' → logprob: -2.134298801422119
    3. '):
' → logprob: -2.384298801422119
    4. ':' → logprob: -4.759298801422119
    5. ']:
' → logprob: -5.009298801422119
    6. ']' → logprob: -6.384298801422119
    7. ')' → logprob: -8.009298324584961
    8. '   ' → logprob: -8.509298324584961
    9. ':
' → logprob: -8.634298324584961
    10. '):
' → logprob: -9.384298324584961

Token 884: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6512961387634277
    2. '       ' → logprob: -1.0262961387634277
    3. '   ' → logprob: -2.6512961387634277
    4. '):' → logprob: -3.1512961387634277
    5. 'dp' → logprob: -6.026296138763428
    6. ':
' → logprob: -6.901296138763428
    7. ')' → logprob: -7.026296138763428
    8. '):
' → logprob: -7.151296138763428
    9. '```' → logprob: -7.401296138763428
    10. ']:' → logprob: -8.026296615600586

Token 885: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0195763036608696
    2. ' dp' → logprob: -4.519576072692871
    3. '       ' → logprob: -4.769576072692871
    4. '	dp' → logprob: -12.769576072692871
    5. '```' → logprob: -13.269576072692871
    6. '(dp' → logprob: -13.644576072692871
    7. '           ' → logprob: -13.769576072692871
    8. '_dp' → logprob: -13.894576072692871
    9. '   ' → logprob: -14.894576072692871
    10. '.dp' → logprob: -16.019577026367188

Token 886: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -15.75
    3. '[' → logprob: -19.625
    4. '[val' → logprob: -19.625
    5. '```' → logprob: -19.75
    6. '][' → logprob: -20.0
    7. '[u' → logprob: -21.0
    8. '[var' → logprob: -21.375
    9. ' [' → logprob: -21.625
    10. '<v' → logprob: -21.875

Token 887: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004224515287205577
    2. '[n' → logprob: -8.375422477722168
    3. '[v' → logprob: -8.750422477722168
    4. ']' → logprob: -10.625422477722168
    5. '[' → logprob: -12.375422477722168
    6. ' ][' → logprob: -12.875422477722168
    7. '   ' → logprob: -13.625422477722168
    8. '```' → logprob: -15.250422477722168
    9. '"][' → logprob: -15.750422477722168
    10. '}[' → logprob: -15.875422477722168

Token 888: 'nm' (ID: 36370)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.0017753805732354522
    2. 'nm' → logprob: -6.37677526473999
    3. 'dp' → logprob: -9.876775741577148
    4. ' money' → logprob: -11.626775741577148
    5. 'mn' → logprob: -12.251775741577148
    6. 'cd' → logprob: -13.251775741577148
    7. 'cost' → logprob: -13.376775741577148
    8. 'min' → logprob: -14.126775741577148
    9. 'v' → logprob: -14.626775741577148
    10. '[m' → logprob: -14.626775741577148

Token 889: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3013089895248413
    2. '=' → logprob: -1.9263089895248413
    3. ']' → logprob: -2.176309108734131
    4. ']=' → logprob: -7.301309108734131
    5. ' ]' → logprob: -8.051308631896973
    6. ')' → logprob: -11.926308631896973
    7. '[' → logprob: -13.051308631896973
    8. '    ' → logprob: -14.051308631896973
    9. '   ' → logprob: -14.551308631896973
    10. ' ' → logprob: -14.801308631896973

Token 890: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '.=' → logprob: -16.313261032104492
    4. '＝' → logprob: -17.813261032104492
    5. '+=' → logprob: -19.063261032104492
    6. ')' → logprob: -19.188261032104492
    7. '=
' → logprob: -19.188261032104492
    8. ',' → logprob: -19.813261032104492
    9. ']' → logprob: -20.063261032104492
    10. '    ' → logprob: -20.188261032104492

Token 891: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003410647332202643
    2. ' dp' → logprob: -8.000341415405273
    3. 'dist' → logprob: -12.125341415405273
    4. '	dp' → logprob: -16.750341415405273
    5. 'd' → logprob: -17.625341415405273
    6. '_dp' → logprob: -18.125341415405273
    7. '(dp' → logprob: -18.375341415405273
    8. '   ' → logprob: -18.375341415405273
    9. 'dt' → logprob: -19.125341415405273
    10. 'dc' → logprob: -19.375341415405273

Token 892: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5048530030981055e-06
    2. 'v' → logprob: -13.500001907348633
    3. '[' → logprob: -18.125001907348633
    4. '<v' → logprob: -18.125001907348633
    5. '```' → logprob: -18.500001907348633
    6. '][' → logprob: -19.000001907348633
    7. '(v' → logprob: -19.875001907348633
    8. '[u' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '	v' → logprob: -20.625001907348633

Token 893: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.029794123023748398
    2. '][' → logprob: -3.529794216156006
    3. '[m' → logprob: -11.029793739318848
    4. 'v' → logprob: -11.154793739318848
    5. '[' → logprob: -11.404793739318848
    6. '}[' → logprob: -14.654793739318848
    7. ' ][' → logprob: -14.904793739318848
    8. ' [' → logprob: -15.654793739318848
    9. '[var' → logprob: -15.654793739318848
    10. ']' → logprob: -15.779793739318848

Token 894: 'money' (ID: 52994)
  Prédit: 'money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'money' → logprob: -3.128163257315464e-07
    2. ' money' → logprob: -16.375
    3. 'cost' → logprob: -16.875
    4. 'memory' → logprob: -17.0
    5. 'm' → logprob: -18.625
    6. '_money' → logprob: -18.75
    7. '[m' → logprob: -18.75
    8. 'mon' → logprob: -19.0
    9. 'dist' → logprob: -19.5
    10. '[' → logprob: -19.75

Token 895: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11568812280893326
    2. '+' → logprob: -2.7406880855560303
    3. ']' → logprob: -3.1156880855560303
    4. ']+' → logprob: -7.990688323974609
    5. '[' → logprob: -11.36568832397461
    6. ' ]' → logprob: -11.74068832397461
    7. ')' → logprob: -12.24068832397461
    8. ' ' → logprob: -12.49068832397461
    9. ' ' → logprob: -12.99068832397461
    10. '   ' → logprob: -13.24068832397461

Token 896: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.033646389842033386
    2. '+' → logprob: -3.40864634513855
    3. ' ' → logprob: -15.033646583557129
    4. '   ' → logprob: -16.033645629882812
    5. ' ' → logprob: -16.283645629882812
    6. '[' → logprob: -17.283645629882812
    7. ' +
' → logprob: -17.408645629882812
    8. '+
' → logprob: -18.283645629882812
    9. '    ' → logprob: -18.533645629882812
    10. '+c' → logprob: -18.658645629882812

Token 897: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.011048408225178719
    2. ' cd' → logprob: -4.511048316955566
    3. '	cd' → logprob: -14.761048316955566
    4. '(cd' → logprob: -16.011049270629883
    5. '_cd' → logprob: -16.511049270629883
    6. 'cdn' → logprob: -18.011049270629883
    7. ' ' → logprob: -18.386049270629883
    8. '.cd' → logprob: -18.886049270629883
    9. '   ' → logprob: -19.761049270629883
    10. ' ' → logprob: -19.886049270629883

Token 898: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.180879816180095e-05
    2. 'v' → logprob: -9.875051498413086
    3. '```' → logprob: -16.875051498413086
    4. '
' → logprob: -17.000051498413086
    5. '(v' → logprob: -17.500051498413086
    6. '	v' → logprob: -17.500051498413086
    7. '   ' → logprob: -17.500051498413086
    8. '_v' → logprob: -17.750051498413086
    9. '[' → logprob: -17.750051498413086
    10. '1' → logprob: -17.875051498413086

Token 899: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5763220191001892
    2. '][' → logprob: -0.8263220191001892
    3. '[' → logprob: -8.326321601867676
    4. 'v' → logprob: -8.951321601867676
    5. '   ' → logprob: -12.451321601867676
    6. ']' → logprob: -13.701321601867676
    7. '	v' → logprob: -13.826321601867676
    8. ',v' → logprob: -14.326321601867676
    9. ' [' → logprob: -14.701321601867676
    10. ''][' → logprob: -14.826321601867676

Token 900: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'v' → logprob: -17.75
    3. ' ' → logprob: -17.875
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.125
    6. '[' → logprob: -20.25
    7. '[v' → logprob: -20.25
    8. '0' → logprob: -20.375
    9. '１' → logprob: -21.0
    10. '۱' → logprob: -21.375

Token 901: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002659847668837756
    2. '           ' → logprob: -8.500266075134277
    3. ')' → logprob: -11.000266075134277
    4. ' he' → logprob: -11.125266075134277
    5. 'he' → logprob: -11.625266075134277
    6. ')
' → logprob: -11.875266075134277
    7. '   ' → logprob: -12.000266075134277
    8. ',' → logprob: -12.875266075134277
    9. '               ' → logprob: -13.250266075134277
    10. '
' → logprob: -13.375266075134277

Token 902: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5804479718208313
    2. 'he' → logprob: -1.3304479122161865
    3. '       ' → logprob: -1.9554479122161865
    4. ' he' → logprob: -3.4554479122161865
    5. '           ' → logprob: -6.205448150634766
    6. '```' → logprob: -7.330448150634766
    7. '    ' → logprob: -9.580448150634766
    8. '               ' → logprob: -10.455448150634766
    9. '     ' → logprob: -10.580448150634766
    10. '	' → logprob: -10.830448150634766

Token 903: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -1.9361264946837764e-07
    2. ' he' → logprob: -16.375
    3. '   ' → logprob: -18.5
    4. 'heap' → logprob: -20.625
    5. '```' → logprob: -21.75
    6. '       ' → logprob: -22.875
    7. 'He' → logprob: -23.625
    8. '_he' → logprob: -24.125
    9. '           ' → logprob: -24.625
    10. '.he' → logprob: -25.125

Token 904: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009587471140548587
    2. 'pp' → logprob: -7.2509589195251465
    3. 'e' → logprob: -9.125958442687988
    4. 'he' → logprob: -9.500958442687988
    5. 'ap' → logprob: -10.375958442687988
    6. 'p' → logprob: -11.500958442687988
    7. 'ep' → logprob: -11.750958442687988
    8. ' he' → logprob: -12.375958442687988
    9. ' app' → logprob: -12.500958442687988
    10. '```' → logprob: -13.250958442687988

Token 905: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -6.988221684878226e-06
    2. 'push' → logprob: -12.375006675720215
    3. 'sh' → logprob: -13.500006675720215
    4. 'app' → logprob: -14.750006675720215
    5. 'p' → logprob: -14.875006675720215
    6. 'op' → logprob: -15.000006675720215
    7. 'pp' → logprob: -16.75000762939453
    8. 'q' → logprob: -16.87500762939453
    9. 'u' → logprob: -17.37500762939453
    10. 'up' → logprob: -17.37500762939453

Token 906: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -5.157039049663581e-05
    2. '(' → logprob: -9.875051498413086
    3. ' (' → logprob: -17.250051498413086
    4. 'q' → logprob: -18.750051498413086
    5. '(
' → logprob: -19.375051498413086
    6. '[q' → logprob: -21.125051498413086
    7. ',q' → logprob: -21.250051498413086
    8. '(queue' → logprob: -21.625051498413086
    9. '```' → logprob: -21.625051498413086
    10. '(n' → logprob: -21.875051498413086

Token 907: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.001898767426609993
    2. ',' → logprob: -6.501898765563965
    3. ',q' → logprob: -7.876898765563965
    4. '(' → logprob: -11.876898765563965
    5. ')' → logprob: -12.126898765563965
    6. ',(' → logprob: -13.001898765563965
    7. 'q' → logprob: -13.751898765563965
    8. ' (' → logprob: -14.876898765563965
    9. '),' → logprob: -15.251898765563965
    10. '),(' → logprob: -16.12689971923828

Token 908: ' (' (ID: 350)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.018359001725912094
    2. '(dp' → logprob: -4.018359184265137
    3. '(' → logprob: -9.018359184265137
    4. ' (' → logprob: -9.393359184265137
    5. 'q' → logprob: -12.393359184265137
    6. '(dc' → logprob: -16.26835823059082
    7. '(p' → logprob: -16.51835823059082
    8. '[q' → logprob: -16.76835823059082
    9. ' q' → logprob: -16.89335823059082
    10. ' ' → logprob: -17.01835823059082

Token 909: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.1008713702030946e-06
    2. '(dp' → logprob: -13.625001907348633
    3. ' dp' → logprob: -14.125001907348633
    4. '   ' → logprob: -17.000001907348633
    5. 'cd' → logprob: -17.875001907348633
    6. '	dp' → logprob: -18.750001907348633
    7. '(' → logprob: -19.625001907348633
    8. 'd' → logprob: -19.875001907348633
    9. ' ' → logprob: -20.500001907348633
    10. 'dc' → logprob: -21.375001907348633

Token 910: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.7968066206085496e-05
    2. 'v' → logprob: -10.500027656555176
    3. ',v' → logprob: -15.625027656555176
    4. '(v' → logprob: -16.000028610229492
    5. '<v' → logprob: -16.875028610229492
    6. '```' → logprob: -18.125028610229492
    7. '
' → logprob: -18.500028610229492
    8. '	v' → logprob: -18.500028610229492
    9. '[
' → logprob: -18.625028610229492
    10. ')v' → logprob: -19.375028610229492

Token 911: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00034809779026545584
    2. '][' → logprob: -8.875348091125488
    3. 'v' → logprob: -9.000348091125488
    4. ',v' → logprob: -10.125348091125488
    5. '[' → logprob: -10.625348091125488
    6. ',' → logprob: -12.125348091125488
    7. '```' → logprob: -12.625348091125488
    8. '[
' → logprob: -13.250348091125488
    9. '[val' → logprob: -13.375348091125488
    10. ']' → logprob: -13.500348091125488

Token 912: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.3434421122074127
    2. 'v' → logprob: -1.3434420824050903
    3. '[n' → logprob: -3.96844220161438
    4. '[v' → logprob: -4.718441963195801
    5. 'vn' → logprob: -6.843441963195801
    6. '[m' → logprob: -8.2184419631958
    7. 'nv' → logprob: -8.8434419631958
    8. ' nm' → logprob: -8.8434419631958
    9. 'dp' → logprob: -9.9684419631958
    10. '[' → logprob: -10.3434419631958

Token 913: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6895233531831764e-05
    2. ',v' → logprob: -10.75002670288086
    3. ' ,' → logprob: -12.25002670288086
    4. 'v' → logprob: -14.75002670288086
    5. ',
' → logprob: -15.25002670288086
    6. '],' → logprob: -17.87502670288086
    7. '‌,' → logprob: -18.37502670288086
    8. '   ' → logprob: -19.37502670288086
    9. '`,' → logprob: -19.62502670288086
    10. '```' → logprob: -20.37502670288086

Token 914: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00015860427811276168
    2. ' v' → logprob: -8.750158309936523
    3. ')v' → logprob: -17.000158309936523
    4. '	v' → logprob: -17.125158309936523
    5. 'vq' → logprob: -19.125158309936523
    6. '<|end|>' → logprob: -19.375158309936523
    7. '?v' → logprob: -20.500158309936523
    8. '[v' → logprob: -20.875158309936523
    9. 'vj' → logprob: -21.250158309936523
    10. '(v' → logprob: -21.250158309936523

Token 915: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043698702938854694
    2. ',n' → logprob: -7.750436782836914
    3. ' ,' → logprob: -12.625436782836914
    4. ',
' → logprob: -12.750436782836914
    5. ',m' → logprob: -17.000436782836914
    6. '‌,' → logprob: -17.500436782836914
    7. '<|end|>' → logprob: -17.625436782836914
    8. '   ' → logprob: -17.750436782836914
    9. '```' → logprob: -18.000436782836914
    10. ',
' → logprob: -18.375436782836914

Token 916: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.0007100477814674377
    2. ' nm' → logprob: -7.2507100105285645
    3. '_nm' → logprob: -17.750709533691406
    4. 'n' → logprob: -20.750709533691406
    5. '   ' → logprob: -21.750709533691406
    6. ' ' → logprob: -23.000709533691406
    7. 'nn' → logprob: -23.375709533691406
    8. 'Nm' → logprob: -23.875709533691406
    9. '    ' → logprob: -24.625709533691406
    10. 'mn' → logprob: -24.875709533691406

Token 917: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.3464544432936236e-05
    2. '))
' → logprob: -10.125043869018555
    3. ')' → logprob: -13.000043869018555
    4. '   ' → logprob: -14.250043869018555
    5. ' ))' → logprob: -15.125043869018555
    6. ')))' → logprob: -16.500043869018555
    7. '       ' → logprob: -17.500043869018555
    8. '))

' → logprob: -17.750043869018555
    9. '));' → logprob: -18.500043869018555
    10. ' ' → logprob: -19.000043869018555

Token 918: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3137044906616211
    2. '<|end|>' → logprob: -2.313704490661621
    3. ')' → logprob: -2.563704490661621
    4. '
' → logprob: -2.813704490661621
    5. 'for' → logprob: -4.563704490661621
    6. 'result' → logprob: -4.938704490661621
    7. 'print' → logprob: -5.688704490661621
    8. 'continue' → logprob: -6.313704490661621
    9. 'n' → logprob: -6.438704490661621
    10. '```' → logprob: -6.563704490661621

Token 919: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09196474403142929
    2. 'result' → logprob: -3.2169647216796875
    3. ')' → logprob: -4.0919647216796875
    4. 'for' → logprob: -4.3419647216796875
    5. '
' → logprob: -4.7169647216796875
    6. 'answer' → logprob: -5.8419647216796875
    7. '

' → logprob: -6.9669647216796875
    8. 'results' → logprob: -7.3419647216796875
    9. 'min' → logprob: -7.3419647216796875
    10. '```' → logprob: -7.4669647216796875

Token 920: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' ajoute' (ID: 91611)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06656467914581299
    2. ' continue' → logprob: -3.3165645599365234
    3. 'he' → logprob: -4.316564559936523
    4. 'append' → logprob: -4.816564559936523
    5. 'push' → logprob: -5.316564559936523
    6. 'contin' → logprob: -7.691564559936523
    7. '.append' → logprob: -8.191564559936523
    8. ' he' → logprob: -8.441564559936523
    9. '   ' → logprob: -9.191564559936523
    10. ')' → logprob: -9.316564559936523

Token 922: ' cet' (ID: 19505)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.06172787770628929
    2. '((' → logprob: -3.56172776222229
    3. '(' → logprob: -3.93672776222229
    4. ')' → logprob: -4.561728000640869
    5. 'q' → logprob: -7.561728000640869
    6. '<|end|>' → logprob: -8.061727523803711
    7. ' (' → logprob: -8.186727523803711
    8. '(
' → logprob: -8.311727523803711
    9. '(n' → logprob: -10.811727523803711
    10. '```' → logprob: -10.936727523803711

Token 923: ' état' (ID: 59181)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.9510096311569214
    2. '<|end|>' → logprob: -1.0760096311569214
    3. ' état' → logprob: -2.326009750366211
    4. '(' → logprob: -2.951009750366211
    5. ')' → logprob: -2.951009750366211
    6. '(state' → logprob: -4.576009750366211
    7. ' state' → logprob: -4.701009750366211
    8. 'token' → logprob: -4.826009750366211
    9. ''état' → logprob: -5.076009750366211
    10. 'estado' → logprob: -5.076009750366211

Token 924: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 925: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2471589798224159e-05
    2. ' q' → logprob: -11.875012397766113
    3. '(q' → logprob: -12.125012397766113
    4. ')' → logprob: -17.37501335144043
    5. '	q' → logprob: -18.00001335144043
    6. 'the' → logprob: -18.12501335144043
    7. '[q' → logprob: -18.62501335144043
    8. '   ' → logprob: -19.12501335144043
    9. '(' → logprob: -19.87501335144043
    10. '```' → logprob: -20.12501335144043

Token 926: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008083211723715067
    2. 'queue' → logprob: -7.125808238983154
    3. 'que' → logprob: -13.875808715820312
    4. 'file' → logprob: -14.000808715820312
    5. 'heap' → logprob: -14.250808715820312
    6. ' q' → logprob: -14.875808715820312
    7. 'qu' → logprob: -15.500808715820312
    8. 'Q' → logprob: -15.625808715820312
    9. ')' → logprob: -15.750808715820312
    10. ' queue' → logprob: -15.875808715820312

Token 927: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 928: ' exploration' (ID: 38070)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.12295597046613693
    2. 'contin' → logprob: -2.4979560375213623
    3. 'la' → logprob: -4.622955799102783
    4. 'trait' → logprob: -4.747955799102783
    5. ' continuer' → logprob: -5.372955799102783
    6. ' explorer' → logprob: -5.622955799102783
    7. ' poursuivre' → logprob: -6.747955799102783
    8. 'l' → logprob: -7.372955799102783
    9. 'continue' → logprob: -7.372955799102783
    10. 'q' → logprob: -7.372955799102783

Token 929: ' future' (ID: 5277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7542908191680908
    2. '(' → logprob: -1.6292908191680908
    3. '()' → logprob: -2.129290819168091
    4. '(n' → logprob: -2.629290819168091
    5. '#' → logprob: -3.004290819168091
    6. 'for' → logprob: -3.254290819168091
    7. '
' → logprob: -4.504290580749512
    8. '(v' → logprob: -4.629290580749512
    9. '()

' → logprob: -5.504290580749512
    10. 'n' → logprob: -5.504290580749512

Token 930: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1644451916217804
    2. ')' → logprob: -3.039445161819458
    3. 'for' → logprob: -3.164445161819458
    4. '#' → logprob: -3.664445161819458
    5. '\n' → logprob: -4.289445400238037
    6. '

' → logprob: -5.164445400238037
    7. '<|end|>' → logprob: -5.164445400238037
    8. 'print' → logprob: -5.539445400238037
    9. '  
' → logprob: -6.289445400238037
    10. 'n' → logprob: -6.789445400238037

Token 931: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05128273367881775
    2. 'result' → logprob: -4.05128288269043
    3. 'for' → logprob: -4.55128288269043
    4. 'answer' → logprob: -4.80128288269043
    5. 'min' → logprob: -5.30128288269043
    6. 'pass' → logprob: -6.05128288269043
    7. 'final' → logprob: -6.55128288269043
    8. 'best' → logprob: -7.17628288269043
    9. 'ans' → logprob: -7.30128288269043
    10. ')' → logprob: -7.42628288269043

Token 932: ' Après' (ID: 47562)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8684822916984558
    2. 'res' → logprob: -1.3684823513031006
    3. 'answer' → logprob: -1.4934823513031006
    4. 'result' → logprob: -2.3684823513031006
    5. '#' → logprob: -5.3684821128845215
    6. 'min' → logprob: -6.4934821128845215
    7. 'best' → logprob: -7.3684821128845215
    8. 'answers' → logprob: -8.36848258972168
    9. 'for' → logprob: -8.74348258972168
    10. 'print' → logprob: -9.11848258972168

Token 933: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2847541570663452
    2. 'result' → logprob: -1.2847541570663452
    3. 'min' → logprob: -1.7847541570663452
    4. 'for' → logprob: -1.9097541570663452
    5. 'dist' → logprob: -3.6597542762756348
    6. '_min' → logprob: -4.159754276275635
    7. 'ans' → logprob: -4.159754276275635
    8. 'results' → logprob: -4.284754276275635
    9. '_result' → logprob: -4.784754276275635
    10. '#' → logprob: -4.784754276275635

Token 934: ' termina' (ID: 86892)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.906711546937004e-05
    2. '#' → logprob: -10.500048637390137
    3. 'print' → logprob: -11.375048637390137
    4. ' for' → logprob: -12.875048637390137
    5. '
' → logprob: -13.000048637390137
    6. 'pour' → logprob: -13.250048637390137
    7. 'range' → logprob: -13.750048637390137
    8. '0' → logprob: -15.000048637390137
    9. 'bou' → logprob: -15.375048637390137
    10. 'prem' → logprob: -15.375048637390137

Token 935: 'ison' (ID: 5072)
  Prédit: 'ison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ison' → logprob: -0.0009692259482108057
    2. 'tion' → logprob: -7.000969409942627
    3. 'ion' → logprob: -11.375968933105469
    4. 'i' → logprob: -11.500968933105469
    5. 'is' → logprob: -11.625968933105469
    6. 'ision' → logprob: -11.750968933105469
    7. '#' → logprob: -11.875968933105469
    8. 'son' → logprob: -12.750968933105469
    9. 'ition' → logprob: -13.125968933105469
    10. 't' → logprob: -13.375968933105469

Token 936: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005090495105832815
    2. ' for' → logprob: -5.880090713500977
    3. ':' → logprob: -6.505090713500977
    4. '#' → logprob: -8.005090713500977
    5. '
' → logprob: -8.630090713500977
    6. 'print' → logprob: -9.005090713500977
    7. ':
' → logprob: -9.255090713500977
    8. '[' → logprob: -10.255090713500977
    9. '[:-' → logprob: -12.880090713500977
    10. '#print' → logprob: -13.255090713500977

Token 937: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6936522722244263
    2. 'range' → logprob: -0.6936522722244263
    3. ' range' → logprob: -7.693652153015137
    4. ' for' → logprob: -10.068652153015137
    5. '(range' → logprob: -12.943652153015137
    6. '```' → logprob: -14.068652153015137
    7. 'import' → logprob: -14.193652153015137
    8. '
' → logprob: -14.318652153015137
    9. '#' → logprob: -14.693652153015137
    10. 're' → logprob: -15.068652153015137

Token 938: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5120287066092715e-05
    2. 'bou' → logprob: -10.750035285949707
    3. 'range' → logprob: -11.375035285949707
    4. ' for' → logprob: -13.625035285949707
    5. '```' → logprob: -14.875035285949707
    6. 'loop' → logprob: -15.125035285949707
    7. 'pour' → logprob: -16.37503433227539
    8. '``' → logprob: -16.75003433227539
    9. '
' → logprob: -16.87503433227539
    10. '#' → logprob: -17.37503433227539

Token 939: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024672134313732386
    2. ':' → logprob: -6.627467155456543
    3. ' for' → logprob: -6.877467155456543
    4. ':
' → logprob: -10.002467155456543
    5. '[' → logprob: -10.877467155456543
    6. '#' → logprob: -11.127467155456543
    7. '
' → logprob: -11.127467155456543
    8. ',' → logprob: -12.127467155456543
    9. 's' → logprob: -12.877467155456543
    10. 'print' → logprob: -13.377467155456543

Token 940: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.833878508885391e-05
    2. '#' → logprob: -11.125038146972656
    3. 'result' → logprob: -11.250038146972656
    4. 'results' → logprob: -11.750038146972656
    5. 'print' → logprob: -13.250038146972656
    6. 'res' → logprob: -14.375038146972656
    7. ' for' → logprob: -15.250038146972656
    8. 'min' → logprob: -17.625038146972656
    9. 'ans' → logprob: -17.625038146972656
    10. 'answers' → logprob: -17.875038146972656

Token 941: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005965200834907591
    2. 'v' → logprob: -7.500596523284912
    3. 'vertex' → logprob: -10.750596046447754
    4. ' i' → logprob: -12.625596046447754
    5. 'u' → logprob: -12.625596046447754
    6. '_i' → logprob: -12.750596046447754
    7. 'for' → logprob: -13.125596046447754
    8. 'dest' → logprob: -13.375596046447754
    9. 'ans' → logprob: -13.625596046447754
    10. 'vi' → logprob: -14.000596046447754

Token 942: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.593999981880188
    2. 'i' → logprob: -0.843999981880188
    3. 'som' → logprob: -4.468999862670898
    4. 'vertex' → logprob: -5.218999862670898
    5. 'node' → logprob: -8.343999862670898
    6. ' sommet' → logprob: -8.343999862670898
    7. 'u' → logprob: -9.218999862670898
    8. 'vert' → logprob: -9.343999862670898
    9. 'ville' → logprob: -9.593999862670898
    10. '1' → logprob: -9.718999862670898

Token 943: ' except' (ID: 6384)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017960984259843826
    2. 'in' → logprob: -4.892961025238037
    3. 'range' → logprob: -5.142961025238037
    4. ' for' → logprob: -6.142961025238037
    5. 'print' → logprob: -6.892961025238037
    6. ' in' → logprob: -7.267961025238037
    7. '_' → logprob: -8.892960548400879
    8. 'v' → logprob: -9.142960548400879
    9. 'from' → logprob: -9.392960548400879
    10. 'import' → logprob: -9.642960548400879

Token 944: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0003612065047491342
    2. 'u' → logprob: -8.625361442565918
    3. 'ant' → logprob: -9.375361442565918
    4. '0' → logprob: -10.500361442565918
    5. 'e' → logprob: -10.750361442565918
    6. '#' → logprob: -11.375361442565918
    7. '[' → logprob: -11.875361442565918
    8. 'és' → logprob: -12.000361442565918
    9. '(' → logprob: -12.875361442565918
    10. 'for' → logprob: -13.000361442565918

Token 945: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6011402010917664
    2. '1' → logprob: -0.8511402010917664
    3. 'le' → logprob: -3.976140260696411
    4. 'v' → logprob: -5.601140022277832
    5. '0' → logprob: -6.976140022277832
    6. ' i' → logprob: -7.851140022277832
    7. 'l' → logprob: -8.226140022277832
    8. '_' → logprob: -8.726140022277832
    9. 'range' → logprob: -9.101140022277832
    10. 'la' → logprob: -9.351140022277832

Token 946: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006476254784502089
    2. 'prem' → logprob: -7.37564754486084
    3. ' premier' → logprob: -11.37564754486084
    4. '1' → logprob: -12.62564754486084
    5. ' ' → logprob: -13.25064754486084
    6. 'n' → logprob: -13.50064754486084
    7. '[' → logprob: -13.75064754486084
    8. 'first' → logprob: -15.50064754486084
    9. 'dé' → logprob: -15.50064754486084
    10. 'u' → logprob: -15.75064754486084

Token 947: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. 'n' → logprob: -11.625015258789062
    3. ' ' → logprob: -12.500015258789062
    4. '1' → logprob: -13.625015258789062
    5. '```' → logprob: -15.250015258789062
    6. 'range' → logprob: -15.375015258789062
    7. '(' → logprob: -15.500015258789062
    8. 'i' → logprob: -16.125015258789062
    9. 's' → logprob: -16.125015258789062
    10. ',' → logprob: -16.625015258789062

Token 948: ' départ' (ID: 32693)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13305120170116425
    2. 'dé' → logprob: -2.1330511569976807
    3. 'depart' → logprob: -6.38305139541626
    4. 'd' → logprob: -6.63305139541626
    5. 'part' → logprob: -6.63305139541626
    6. '1' → logprob: -7.50805139541626
    7. 'destination' → logprob: -7.88305139541626
    8. ' départ' → logprob: -8.258050918579102
    9. 'origine' → logprob: -8.258050918579102
    10. 'range' → logprob: -9.133050918579102

Token 949: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18684546649456024
    2. ':' → logprob: -1.9368454217910767
    3. ':
' → logprob: -4.061845302581787
    4. ' for' → logprob: -5.186845302581787
    5. '
' → logprob: -6.186845302581787
    6. ',' → logprob: -7.061845302581787
    7. 'print' → logprob: -8.436845779418945
    8. 'range' → logprob: -8.561845779418945
    9. '```' → logprob: -10.561845779418945
    10. '[' → logprob: -10.936845779418945

Token 950: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.007317567011341e-05
    2. ' for' → logprob: -9.375089645385742
    3. '
' → logprob: -12.750089645385742
    4. 'range' → logprob: -14.125089645385742
    5. 'print' → logprob: -14.500089645385742
    6. '```' → logprob: -14.625089645385742
    7. 'import' → logprob: -16.500089645385742
    8. '[' → logprob: -16.500089645385742
    9. '	for' → logprob: -16.625089645385742
    10. '<|end|>' → logprob: -17.000089645385742

Token 951: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05051539093255997
    2. 'v' → logprob: -3.0505154132843018
    3. 'u' → logprob: -6.550515174865723
    4. 'dest' → logprob: -8.425515174865723
    5. ' i' → logprob: -9.300515174865723
    6. 'vertex' → logprob: -9.425515174865723
    7. 'target' → logprob: -10.175515174865723
    8. ' v' → logprob: -10.800515174865723
    9. 'destination' → logprob: -11.300515174865723
    10. 'x' → logprob: -11.550515174865723

Token 952: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16044600307941437
    2. 'in' → logprob: -1.910446047782898
    3. ' ' → logprob: -9.160446166992188
    4. 'range' → logprob: -10.285446166992188
    5. '	in' → logprob: -10.535446166992188
    6. ' i' → logprob: -11.285446166992188
    7. '1' → logprob: -11.785446166992188
    8. '_' → logprob: -12.160446166992188
    9. ',' → logprob: -12.410446166992188
    10. 'i' → logprob: -12.535446166992188

Token 953: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -20.62507438659668
    4. '	range' → logprob: -21.50007438659668
    5. 'rang' → logprob: -21.87507438659668
    6. 'r' → logprob: -22.37507438659668
    7. ' ' → logprob: -22.50007438659668
    8. '```' → logprob: -23.37507438659668
    9. 'ange' → logprob: -23.50007438659668
    10. 'Range' → logprob: -23.87507438659668

Token 954: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002613358374219388
    2. '1' → logprob: -8.250261306762695
    3. ' (' → logprob: -19.875261306762695
    4. '(
' → logprob: -20.250261306762695
    5. '[' → logprob: -20.625261306762695
    6. '
' → logprob: -21.375261306762695
    7. 'n' → logprob: -21.375261306762695
    8. '   ' → logprob: -22.250261306762695
    9. '```' → logprob: -22.500261306762695
    10. '(n' → logprob: -22.875261306762695

Token 955: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '   ' → logprob: -22.75
    4. 'n' → logprob: -23.0
    5. '
' → logprob: -23.625
    6. '１' → logprob: -23.875
    7. '(' → logprob: -25.375
    8. '```' → logprob: -25.75
    9. '۱' → logprob: -26.25
    10. '_' → logprob: -27.625

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01835338957607746
    2. ',n' → logprob: -4.018353462219238
    3. ' ,' → logprob: -8.893353462219238
    4. 'n' → logprob: -9.893353462219238
    5. ',
' → logprob: -11.393353462219238
    6. '(n' → logprob: -12.518353462219238
    7. ' n' → logprob: -15.268353462219238
    8. '
' → logprob: -16.018352508544922
    9. '<n' → logprob: -16.018352508544922
    10. ',len' → logprob: -17.018352508544922

Token 957: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. ' n' → logprob: -16.875
    3. '	n' → logprob: -22.5
    4. ')n' → logprob: -22.625
    5. '_n' → logprob: -24.0
    6. '
' → logprob: -24.25
    7. '```' → logprob: -24.5
    8. '(n' → logprob: -24.75
    9. '$n' → logprob: -25.125
    10. '   ' → logprob: -25.75

Token 958: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7028581500053406
    2. '):
' → logprob: -0.8278581500053406
    3. 'n' → logprob: -2.8278582096099854
    4. ',n' → logprob: -5.577857971191406
    5. ',' → logprob: -6.452857971191406
    6. '(n' → logprob: -6.577857971191406
    7. ':' → logprob: -7.202857971191406
    8. ')' → logprob: -8.077857971191406
    9. ' n' → logprob: -8.077857971191406
    10. ')n' → logprob: -8.077857971191406

Token 959: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013802743516862392
    2. ' print' → logprob: -4.388802528381348
    3. '
' → logprob: -7.638802528381348
    4. 'min' → logprob: -7.888802528381348
    5. '```' → logprob: -7.888802528381348
    6. 'best' → logprob: -10.138802528381348
    7. 'result' → logprob: -12.013802528381348
    8. '    
' → logprob: -13.138802528381348
    9. ' min' → logprob: -13.263802528381348
    10. '   ' → logprob: -13.388802528381348

Token 960: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014235681155696511
    2. ' print' → logprob: -7.001423358917236
    3. 'min' → logprob: -8.001423835754395
    4. 'result' → logprob: -9.501423835754395
    5. '```' → logprob: -10.126423835754395
    6. 'best' → logprob: -10.876423835754395
    7. 'answer' → logprob: -11.251423835754395
    8. 'res' → logprob: -11.751423835754395
    9. '
' → logprob: -12.126423835754395
    10. '_print' → logprob: -13.126423835754395

Token 961: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00024631983251310885
    2. 'min' → logprob: -8.875246047973633
    3. 'result' → logprob: -10.000246047973633
    4. 'best' → logprob: -10.500246047973633
    5. ' print' → logprob: -11.500246047973633
    6. 'res' → logprob: -11.625246047973633
    7. 'answer' → logprob: -11.875246047973633
    8. 'ans' → logprob: -13.000246047973633
    9. 'minimum' → logprob: -13.125246047973633
    10. 'prin' → logprob: -13.625246047973633

Token 962: ' commence' (ID: 44755)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022231759503483772
    2. ' print' → logprob: -6.877223014831543
    3. 'min' → logprob: -7.377223014831543
    4. 'prin' → logprob: -9.127223014831543
    5. 'in' → logprob: -9.252223014831543
    6. ':' → logprob: -9.627223014831543
    7. 'pr' → logprob: -9.877223014831543
    8. ')' → logprob: -10.377223014831543
    9. '_print' → logprob: -10.502223014831543
    10. '=' → logprob: -10.627223014831543

Token 963: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4915488958358765
    2. 'range' → logprob: -1.4915488958358765
    3. 'in' → logprob: -1.6165488958358765
    4. ' i' → logprob: -2.866549015045166
    5. 'from' → logprob: -3.241549015045166
    6. '(i' → logprob: -3.241549015045166
    7. 'print' → logprob: -3.241549015045166
    8. ':' → logprob: -3.366549015045166
    9. 'n' → logprob: -3.366549015045166
    10. ' in' → logprob: -4.116549015045166

Token 964: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7389934659004211
    2. 'print' → logprob: -0.8639934659004211
    3. 'i' → logprob: -2.4889934062957764
    4. '1' → logprob: -4.2389936447143555
    5. 'n' → logprob: -5.7389936447143555
    6. '   ' → logprob: -9.488993644714355
    7. ' range' → logprob: -9.488993644714355
    8. '
' → logprob: -10.613993644714355
    9. '0' → logprob: -10.738993644714355
    10. '```' → logprob: -10.863993644714355

Token 965: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.259597510099411
    2. '1' → logprob: -2.0095975399017334
    3. 'i' → logprob: -2.8845975399017334
    4. 'n' → logprob: -3.2595975399017334
    5. ' range' → logprob: -8.759597778320312
    6. '0' → logprob: -8.884597778320312
    7. 'print' → logprob: -11.634597778320312
    8. ' i' → logprob: -13.134597778320312
    9. 'len' → logprob: -13.759597778320312
    10. 'rang' → logprob: -13.884597778320312

Token 966: ' car' (ID: 1669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0434155464172363
    2. 'print' → logprob: -1.0434155464172363
    3. ':' → logprob: -1.2934155464172363
    4. ' print' → logprob: -4.793415546417236
    5. '   ' → logprob: -4.918415546417236
    6. '):
' → logprob: -5.793415546417236
    7. '```' → logprob: -7.418415546417236
    8. '
' → logprob: -7.793415546417236
    9. ',' → logprob: -8.043415069580078
    10. '):' → logprob: -8.543415069580078

Token 967: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3711862862110138
    2. 'dp' → logprob: -1.6211862564086914
    3. 'print' → logprob: -3.1211862564086914
    4. 'n' → logprob: -3.8711862564086914
    5. ' i' → logprob: -4.121186256408691
    6. 'range' → logprob: -4.746186256408691
    7. '
' → logprob: -5.496186256408691
    8. 'INF' → logprob: -5.496186256408691
    9. '0' → logprob: -5.621186256408691
    10. 'True' → logprob: -5.996186256408691

Token 968: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.546183705329895
    2. 'dp' → logprob: -1.546183705329895
    3. 'i' → logprob: -1.671183705329895
    4. 'range' → logprob: -4.6711835861206055
    5. 'n' → logprob: -6.0461835861206055
    6. 'max' → logprob: -6.4211835861206055
    7. '0' → logprob: -6.4211835861206055
    8. ' i' → logprob: -6.5461835861206055
    9. ' print' → logprob: -6.7961835861206055
    10. 'len' → logprob: -7.4211835861206055

Token 969: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1431734263896942
    2. '):' → logprob: -2.2681734561920166
    3. ',' → logprob: -4.0181732177734375
    4. 'print' → logprob: -5.6431732177734375
    5. '   ' → logprob: -6.2681732177734375
    6. ')' → logprob: -6.5181732177734375
    7. ':
' → logprob: -6.5181732177734375
    8. '
' → logprob: -7.3931732177734375
    9. '<n' → logprob: -7.7681732177734375
    10. '):
' → logprob: -7.8931732177734375

Token 970: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5862618684768677
    2. '0' → logprob: -0.8362618684768677
    3. ' le' → logprob: -6.211261749267578
    4. 'len' → logprob: -6.211261749267578
    5. 'la' → logprob: -6.211261749267578
    6. 'dé' → logprob: -6.461261749267578
    7. 'range' → logprob: -6.711261749267578
    8. 'l' → logprob: -7.211261749267578
    9. 'de' → logprob: -9.086261749267578
    10. '#' → logprob: -9.211261749267578

Token 971: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.10588185489177704
    2. 'point' → logprob: -2.980881929397583
    3. 'dé' → logprob: -3.355881929397583
    4. '0' → logprob: -5.480881690979004
    5. 'start' → logprob: -5.730881690979004
    6. 's' → logprob: -5.855881690979004
    7. 'source' → logprob: -6.230881690979004
    8. ' sommet' → logprob: -6.605881690979004
    9. 'summ' → logprob: -7.605881690979004
    10. 'd' → logprob: -8.480881690979004

Token 972: ' de' (ID: 334)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.6872543692588806
    2. 'range' → logprob: -1.4372544288635254
    3. ';i' → logprob: -2.3122544288635254
    4. ' range' → logprob: -2.8122544288635254
    5. 'for' → logprob: -3.4372544288635254
    6. ';n' → logprob: -3.6872544288635254
    7. ' for' → logprob: -4.437254428863525
    8. ',' → logprob: -4.812254428863525
    9. 'import' → logprob: -5.562254428863525
    10. '   ' → logprob: -6.187254428863525

Token 973: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.011912238784134388
    2. 'l' → logprob: -5.8869123458862305
    3. 'd' → logprob: -6.0119123458862305
    4. '0' → logprob: -6.0119123458862305
    5. 'la' → logprob: -6.5119123458862305
    6. ' départ' → logprob: -6.6369123458862305
    7. 'depart' → logprob: -7.2619123458862305
    8. 'origine' → logprob: -8.38691234588623
    9. 'le' → logprob: -8.76191234588623
    10. 'i' → logprob: -9.51191234588623

Token 974: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005538671393878758
    2. 'min' → logprob: -8.000554084777832
    3. ' print' → logprob: -8.625554084777832
    4. 'best' → logprob: -11.250554084777832
    5. '```' → logprob: -11.500554084777832
    6. 'minimum' → logprob: -11.750554084777832
    7. '   ' → logprob: -12.750554084777832
    8. 'result' → logprob: -12.875554084777832
    9. 'answer' → logprob: -14.375554084777832
    10. 'minimal' → logprob: -14.375554084777832

Token 975: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005941832438111305
    2. ' print' → logprob: -5.755941867828369
    3. 'min' → logprob: -6.380941867828369
    4. '   ' → logprob: -7.630941867828369
    5. 'best' → logprob: -8.380941390991211
    6. '```' → logprob: -8.380941390991211
    7. 'result' → logprob: -9.255941390991211
    8. 'minimum' → logprob: -11.755941390991211
    9. 'minimal' → logprob: -12.505941390991211
    10. 'answer' → logprob: -12.755941390991211

Token 976: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002353640884393826
    2. 'ans' → logprob: -9.250235557556152
    3. 'answer' → logprob: -9.875235557556152
    4. 'res' → logprob: -9.875235557556152
    5. 'result' → logprob: -10.750235557556152
    6. 'min' → logprob: -11.500235557556152
    7. 'best' → logprob: -12.750235557556152
    8. ' print' → logprob: -14.625235557556152
    9. 'minimum' → logprob: -14.875235557556152
    10. '#' (adapté à ' #') → logprob: -15.250235557556152

Token 977: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006138649303466082
    2. 'ans' → logprob: -5.881138801574707
    3. 'answer' → logprob: -6.381138801574707
    4. 'res' → logprob: -6.631138801574707
    5. 'result' → logprob: -8.381138801574707
    6. 'min' → logprob: -9.881138801574707
    7. 'best' → logprob: -10.756138801574707
    8. '#' → logprob: -12.256138801574707
    9. 'val' → logprob: -13.131138801574707
    10. '#print' → logprob: -13.381138801574707

Token 978: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017958412354346365
    2. 'ans' → logprob: -9.750179290771484
    3. 'best' → logprob: -10.500179290771484
    4. ' print' → logprob: -10.750179290771484
    5. 'answer' → logprob: -10.750179290771484
    6. 'result' → logprob: -10.875179290771484
    7. 'min' → logprob: -11.250179290771484
    8. 'prin' → logprob: -11.500179290771484
    9. 'res' → logprob: -12.375179290771484
    10. '#' → logprob: -13.750179290771484

Token 979: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3870391845703125
    2. 'min' → logprob: -1.1370391845703125
    3. ' min' → logprob: -9.012039184570312
    4. ' print' → logprob: -10.637039184570312
    5. '(min' → logprob: -10.762039184570312
    6. '   ' → logprob: -15.512039184570312
    7. 'minimum' → logprob: -15.512039184570312
    8. '=min' → logprob: -15.637039184570312
    9. '[min' → logprob: -16.262039184570312
    10. '(print' → logprob: -16.762039184570312

Token 980: ' valeur' (ID: 41664)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009326597792096436
    2. 'print' → logprob: -7.625932693481445
    3. ' min' → logprob: -7.750932693481445
    4. 'minimum' → logprob: -11.375932693481445
    5. '(min' → logprob: -13.875932693481445
    6. '=min' → logprob: -14.250932693481445
    7. '
' → logprob: -15.250932693481445
    8. '[min' → logprob: -15.500932693481445
    9. 'int' → logprob: -15.750932693481445
    10. 'max' → logprob: -16.375932693481445

Token 981: ' minimale' (ID: 143217)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16982688009738922
    2. 'min' → logprob: -1.919826865196228
    3. '(min' → logprob: -4.669826984405518
    4. ' print' → logprob: -10.16982650756836
    5. '=min' → logprob: -10.54482650756836
    6. '=' → logprob: -10.79482650756836
    7. ' min' → logprob: -11.04482650756836
    8. '   ' → logprob: -11.29482650756836
    9. '```' → logprob: -11.29482650756836
    10. '(print' → logprob: -11.29482650756836

Token 982: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04457831755280495
    2. 'min' → logprob: -3.2945783138275146
    3. '(min' → logprob: -5.044578552246094
    4. ' print' → logprob: -10.294578552246094
    5. ' min' → logprob: -11.419578552246094
    6. '(print' → logprob: -11.544578552246094
    7. 'for' → logprob: -12.294578552246094
    8. '[min' → logprob: -12.669578552246094
    9. '=min' → logprob: -13.044578552246094
    10. '
' → logprob: -13.044578552246094

Token 983: ' dp' (ID: 21546)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002476135268807411
    2. 'dp' → logprob: -6.377476215362549
    3. ' min' → logprob: -7.377476215362549
    4. 'print' → logprob: -8.87747573852539
    5. '(min' → logprob: -12.75247573852539
    6. '[min' → logprob: -12.87747573852539
    7. 'dist' → logprob: -13.12747573852539
    8. ' dp' → logprob: -14.25247573852539
    9. 'str' → logprob: -15.62747573852539
    10. '=min' → logprob: -15.62747573852539

Token 984: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.059503525495529175
    2. 'print' → logprob: -3.6845035552978516
    3. 'min' → logprob: -4.059503555297852
    4. '[min' → logprob: -4.809503555297852
    5. 'i' → logprob: -5.434503555297852
    6. '[v' → logprob: -6.184503555297852
    7. '   ' → logprob: -7.934503555297852
    8. '(i' → logprob: -8.434503555297852
    9. '(min' → logprob: -9.309503555297852
    10. 'v' → logprob: -9.434503555297852

Token 985: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47350460290908813
    2. 'min' → logprob: -1.3485045433044434
    3. 'dp' → logprob: -2.7235045433044434
    4. 'money' → logprob: -3.8485045433044434
    5. 'print' → logprob: -3.9735045433044434
    6. 'j' → logprob: -5.098504543304443
    7. 'cost' → logprob: -6.598504543304443
    8. 'dist' → logprob: -7.223504543304443
    9. ' i' → logprob: -7.473504543304443
    10. 'inf' → logprob: -7.848504543304443

Token 986: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028820877894759178
    2. 'som' → logprob: -3.6538209915161133
    3. '[i' → logprob: -6.528820991516113
    4. ' sommet' → logprob: -7.028820991516113
    5. 'range' → logprob: -10.153820991516113
    6. 's' → logprob: -10.403820991516113
    7. ' i' → logprob: -10.528820991516113
    8. '
' → logprob: -11.028820991516113
    9. 'for' → logprob: -11.528820991516113
    10. '#' → logprob: -11.653820991516113

Token 987: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04657304286956787
    2. ' print' → logprob: -3.6715731620788574
    3. '   ' → logprob: -3.9215731620788574
    4. '
' → logprob: -9.0465726852417
    5. '```' → logprob: -9.2965726852417
    6. ',' → logprob: -10.2965726852417
    7. '    
' → logprob: -12.4215726852417
    8. 'min' → logprob: -12.6715726852417
    9. ')' → logprob: -13.2965726852417
    10. '`' → logprob: -13.9215726852417

Token 988: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.055033039301633835
    2. ' range' → logprob: -2.930032968521118
    3. 'min' → logprob: -9.805032730102539
    4. 'print' → logprob: -10.430032730102539
    5. 'money' → logprob: -10.930032730102539
    6. '(range' → logprob: -11.180032730102539
    7. 'dp' → logprob: -11.430032730102539
    8. '
' → logprob: -12.180032730102539
    9. 'all' → logprob: -12.305032730102539
    10. '```' → logprob: -13.055032730102539

Token 989: ' les' (ID: 1341)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.1994325965642929
    2. 'argent' → logprob: -2.824432611465454
    3. '_money' → logprob: -3.074432611465454
    4. 'l' → logprob: -3.449432611465454
    5. ' money' → logprob: -4.074432373046875
    6. 'j' → logprob: -5.449432373046875
    7. ' argent' → logprob: -5.574432373046875
    8. 'la' → logprob: -5.824432373046875
    9. 'amount' → logprob: -5.949432373046875
    10. 'range' → logprob: -6.074432373046875

Token 990: ' mont' (ID: 11554)
  Prédit: 'money'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'money' → logprob: -0.0789375975728035
    2. 'range' → logprob: -2.578937530517578
    3. 'm' → logprob: -10.703937530517578
    4. ' range' → logprob: -11.453937530517578
    5. ' money' → logprob: -11.453937530517578
    6. 'Money' → logprob: -13.578937530517578
    7. 'dp' → logprob: -13.828937530517578
    8. '```' → logprob: -14.203937530517578
    9. '_money' → logprob: -14.453937530517578
    10. 'mon' → logprob: -15.578937530517578

Token 991: 'ants' (ID: 2027)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.00021402664424385875
    2. 'e' → logprob: -9.250213623046875
    3. 'eys' → logprob: -9.750213623046875
    4. '```' → logprob: -11.375213623046875
    5. 'ay' → logprob: -11.750213623046875
    6. 'ney' → logprob: -11.750213623046875
    7. '#' → logprob: -12.000213623046875
    8. '
' → logprob: -12.500213623046875
    9. '[' → logprob: -12.500213623046875
    10. '{' → logprob: -12.500213623046875

Token 992: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007952257059514523
    2. ' print' → logprob: -5.1329522132873535
    3. '   ' → logprob: -7.0079522132873535
    4. 'money' → logprob: -7.6329522132873535
    5. 'min' → logprob: -7.8829522132873535
    6. 'range' → logprob: -9.632952690124512
    7. 'dp' → logprob: -10.007952690124512
    8. 'for' → logprob: -10.757952690124512
    9. '(min' → logprob: -10.757952690124512
    10. '(' → logprob: -11.007952690124512

Token 993: ''argent' (ID: 93204)
  Prédit: ''argent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.20826497673988342
    2. 'argent' → logprob: -1.708264946937561
    3. 'range' → logprob: -5.8332648277282715
    4. '’argent' → logprob: -6.3332648277282715
    5. 'money' → logprob: -6.8332648277282715
    6. 'arg' → logprob: -8.58326530456543
    7. ' argent' → logprob: -8.58326530456543
    8. ' range' → logprob: -8.58326530456543
    9. 'e' → logprob: -8.95826530456543
    10. 'p' → logprob: -9.70826530456543

Token 994: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016386473551392555
    2. 'print' → logprob: -4.14138650894165
    3. ' print' → logprob: -8.016386032104492
    4. ',' → logprob: -11.891386032104492
    5. '```' → logprob: -11.891386032104492
    6. '(' → logprob: -13.141386032104492
    7. '	print' → logprob: -14.016386032104492
    8. '
' → logprob: -14.141386032104492
    9. '       ' → logprob: -14.266386032104492
    10. '    
' → logprob: -14.266386032104492

Token 995: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08136548101902008
    2. 'print' → logprob: -2.5813655853271484
    3. ' print' → logprob: -6.081365585327148
    4. '```' → logprob: -8.706365585327148
    5. '
' → logprob: -11.831365585327148
    6. ',' → logprob: -12.456365585327148
    7. '    
' → logprob: -12.956365585327148
    8. '``' → logprob: -13.456365585327148
    9. '  ' → logprob: -13.706365585327148
    10. ':' → logprob: -13.831365585327148

Token 996: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02385432831943035
    2. '   ' → logprob: -4.0238542556762695
    3. ' print' → logprob: -5.3988542556762695
    4. '```' → logprob: -6.7738542556762695
    5. '
' → logprob: -10.77385425567627
    6. '``' → logprob: -13.89885425567627
    7. '    
' → logprob: -14.27385425567627
    8. '`' → logprob: -16.023855209350586
    9. '	print' → logprob: -16.148855209350586
    10. ',' → logprob: -16.398855209350586

Token 997: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1279553291387856e-05
    2. ' print' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.750011444091797
    4. '
' → logprob: -13.875011444091797
    5. '```' → logprob: -15.500011444091797
    6. '    
' → logprob: -16.625011444091797
    7. 'prin' → logprob: -17.000011444091797
    8. 'min' → logprob: -18.750011444091797
    9. 'result' → logprob: -19.250011444091797
    10. '#print' → logprob: -20.250011444091797

Token 998: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0007117166533134878
    2. 'min' → logprob: -7.250711917877197
    3. '(' → logprob: -13.625711441040039
    4. ' min' → logprob: -14.375711441040039
    5. '=min' → logprob: -16.75071144104004
    6. '[min' → logprob: -17.62571144104004
    7. ',min' → logprob: -19.00071144104004
    8. '(int' → logprob: -19.25071144104004
    9. '(
' → logprob: -19.25071144104004
    10. '	min' → logprob: -19.37571144104004

Token 999: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.596781946020201e-05
    2. 'dp' → logprob: -10.000045776367188
    3. '(' → logprob: -14.875045776367188
    4. ')' → logprob: -15.625045776367188
    5. ' dp' → logprob: -17.375045776367188
    6. '	dp' → logprob: -18.500045776367188
    7. '(
' → logprob: -19.125045776367188
    8. ' (' → logprob: -19.375045776367188
    9. ')(' → logprob: -19.625045776367188
    10. '(d' → logprob: -20.125045776367188

Token 1000: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -14.125001907348633
    3. ')[' → logprob: -14.500001907348633
    4. '(i' → logprob: -15.125001907348633
    5. ' [' → logprob: -15.875001907348633
    6. '[
' → logprob: -16.000001907348633
    7. '[' → logprob: -16.375001907348633
    8. '
' → logprob: -16.500001907348633
    9. '[v' → logprob: -16.875001907348633
    10. ')' → logprob: -17.125001907348633

Token 1001: ']))' (ID: 20259)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.030805274844169617
    2. ']))' → logprob: -3.6558053493499756
    3. '[' → logprob: -5.5308051109313965
    4. '][' → logprob: -8.155805587768555
    5. ']' → logprob: -9.030805587768555
    6. 'i' → logprob: -9.905805587768555
    7. '[:' → logprob: -10.030805587768555
    8. '][:' → logprob: -11.780805587768555
    9. '])))' → logprob: -12.030805587768555
    10. '])' → logprob: -12.780805587768555

Token 1002: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1003: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1004: ' Cela' (ID: 44403)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1005: ' donne' (ID: 30004)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.007101912517100573
    2. 'la' → logprob: -5.132102012634277
    3. '-' → logprob: -7.632102012634277
    4. ' le' → logprob: -7.757102012634277
    5. 'l' → logprob: -9.007102012634277
    6. 'leur' → logprob: -10.757102012634277
    7. 'les' → logprob: -10.882102012634277
    8. '#' → logprob: -11.132102012634277
    9. 'the' → logprob: -11.132102012634277
    10. '"' → logprob: -11.507102012634277

Token 1007: ' coût' (ID: 73109)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.2495945543050766
    2. 'co' → logprob: -1.6245945692062378
    3. 'plus' → logprob: -4.499594688415527
    4. 'minimum' → logprob: -4.999594688415527
    5. 'me' → logprob: -5.999594688415527
    6. 'moins' → logprob: -7.124594688415527
    7. 'cout' → logprob: -7.499594688415527
    8. 'nombre' → logprob: -7.499594688415527
    9. 'min' → logprob: -7.999594688415527
    10. ' coût' → logprob: -8.624594688415527

Token 1008: ' minimal' (ID: 19957)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1009: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1010: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6955850124359131
    2. ')' → logprob: -1.445585012435913
    3. 'temps' → logprob: -1.570585012435913
    4. '#' → logprob: -4.195585250854492
    5. 'de' → logprob: -4.320585250854492
    6. 'le' → logprob: -5.070585250854492
    7. 'pour' → logprob: -5.320585250854492
    8. ' en' → logprob: -6.320585250854492
    9. 'd' → logprob: -6.445585250854492
    10. 'optimal' → logprob: -6.445585250854492

Token 1011: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.0002599053841549903
    2. 'ter' → logprob: -9.250260353088379
    3. ' temps' → logprob: -9.625260353088379
    4. '```' → logprob: -9.750260353088379
    5. 'term' → logprob: -11.625260353088379
    6. '#' → logprob: -11.750260353088379
    7. 'time' → logprob: -12.125260353088379
    8. 'temp' → logprob: -12.625260353088379
    9. 'tem' → logprob: -12.750260353088379
    10. 't' → logprob: -13.125260353088379

Token 1012: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011269801296293736
    2. 'pour' → logprob: -4.511269569396973
    3. ')#' → logprob: -9.886269569396973
    4. '))' → logprob: -9.886269569396973
    5. 'à' → logprob: -10.886269569396973
    6. ')
' → logprob: -11.011269569396973
    7. ' )' → logprob: -11.136269569396973
    8. 'necess' → logprob: -11.261269569396973
    9. 'en' → logprob: -11.886269569396973
    10. ' pour' → logprob: -12.011269569396973

Token 1013: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1014: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.0014424959663301706
    2. 're' → logprob: -6.7514424324035645
    3. 'arr' → logprob: -9.251442909240723
    4. 'at' → logprob: -9.501442909240723
    5. ' atteindre' → logprob: -10.626442909240723
    6. 'att' → logprob: -10.876442909240723
    7. 'atter' → logprob: -11.001442909240723
    8. '#' → logprob: -11.501442909240723
    9. 'y' → logprob: -12.126442909240723
    10. 'At' → logprob: -12.251442909240723

Token 1015: ' ce' (ID: 2357)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5779213309288025
    2. 'i' → logprob: -0.8279213309288025
    3. ' le' → logprob: -6.702921390533447
    4. ' i' → logprob: -7.577921390533447
    5. ' ce' → logprob: -8.577920913696289
    6. 'ce' → logprob: -10.202920913696289
    7. '(i' → logprob: -11.702920913696289
    8. '[i' → logprob: -12.952920913696289
    9. 'la' → logprob: -13.327920913696289
    10. 'som' → logprob: -13.702920913696289

Token 1016: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.00022999993234407157
    2. ' sommet' → logprob: -9.000229835510254
    3. 's' → logprob: -9.500229835510254
    4. 'i' → logprob: -10.875229835510254
    5. '```' → logprob: -12.250229835510254
    6. '[i' → logprob: -12.625229835510254
    7. '#' → logprob: -13.125229835510254
    8. 'summ' → logprob: -13.625229835510254
    9. '
' → logprob: -15.000229835510254
    10. 'point' → logprob: -15.250229835510254

Token 1017: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1018: ' quelle' (ID: 47442)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2665652334690094
    2. 'end' → logprob: -1.641565203666687
    3. 'sep' → logprob: -4.641565322875977
    4. 'key' → logprob: -4.766565322875977
    5. 'sans' → logprob: -5.641565322875977
    6. '<|end|>' → logprob: -5.766565322875977
    7. 'flush' → logprob: -6.391565322875977
    8. 'except' → logprob: -6.516565322875977
    9. 'en' → logprob: -6.766565322875977
    10. 'que' → logprob: -6.891565322875977

Token 1019: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.004647995810955763
    2. ' que' → logprob: -5.629648208618164
    3. 'qu' → logprob: -7.254648208618164
    4. 'quelle' → logprob: -8.879648208618164
    5. 'ques' → logprob: -9.754648208618164
    6. 'qui' → logprob: -9.879648208618164
    7. '#' → logprob: -10.254648208618164
    8. '   ' → logprob: -10.754648208618164
    9. 'quel' → logprob: -11.879648208618164
    10. 'quoi' → logprob: -12.379648208618164

Token 1020: ' soit' (ID: 17293)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.3149871528148651
    2. ' soit' → logprob: -1.9399871826171875
    3. 'que' → logprob: -2.3149871826171875
    4. ' que' → logprob: -4.3149871826171875
    5. '_so' → logprob: -5.1899871826171875
    6. 'ce' → logprob: -6.4399871826171875
    7. '```' → logprob: -6.6899871826171875
    8. '.so' → logprob: -7.0649871826171875
    9. '-so' → logprob: -7.3149871826171875
    10. '#' → logprob: -7.6899871826171875

Token 1021: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.00355124706402421
    2. 'l' → logprob: -6.003551483154297
    3. ' la' → logprob: -7.128551483154297
    4. 'le' → logprob: -8.378551483154297
    5. 'leur' → logprob: -11.128551483154297
    6. '#' → logprob: -11.378551483154297
    7. 'les' → logprob: -12.003551483154297
    8. 'sa' → logprob: -13.003551483154297
    9. 'que' → logprob: -13.878551483154297
    10. 'quant' → logprob: -14.003551483154297

Token 1022: ' quantité' (ID: 89219)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.07290998846292496
    2. 's' → logprob: -2.8229100704193115
    3. 'mont' → logprob: -5.072909832000732
    4. 'val' → logprob: -5.822909832000732
    5. ' quantité' → logprob: -7.447909832000732
    6. 'som' → logprob: -7.572909832000732
    7. 'comb' → logprob: -8.94791030883789
    8. 'pi' → logprob: -9.57291030883789
    9. 'money' → logprob: -9.94791030883789
    10. 'nombre' → logprob: -9.94791030883789

Token 1023: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.834099531173706
    2. 'de' → logprob: -1.209099531173706
    3. ' de' → logprob: -1.959099531173706
    4. ' d' → logprob: -2.584099531173706
    5. '<|end|>' → logprob: -3.459099531173706
    6. ')' → logprob: -5.084099769592285
    7. '#' → logprob: -6.084099769592285
    8. ' of' → logprob: -6.334099769592285
    9. '.' → logprob: -7.084099769592285
    10. 'final' → logprob: -7.209099769592285

Token 1024: ''argent' (ID: 93204)
  Prédit: ''argent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''argent' → logprob: -0.18057790398597717
    2. 'pi' → logprob: -2.6805779933929443
    3. 'argent' → logprob: -2.6805779933929443
    4. 'money' → logprob: -4.430577754974365
    5. 'l' → logprob: -4.680577754974365
    6. ' pièces' → logprob: -5.805577754974365
    7. 'pieces' → logprob: -6.680577754974365
    8. '’argent' → logprob: -7.055577754974365
    9. 'd' → logprob: -7.430577754974365
    10. ' monnaie' → logprob: -8.555578231811523

Token 1025: ' restante' (ID: 130202)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1023
Tokens correctement prédits (1ère position, stricte): 272
Tokens correctement prédits (1ère position, avec adaptation): 288
Tokens correctement prédits (top 10): 629
Précision stricte (1ère position): 26.59%
Précision adaptée (1ère position): 28.15%
Précision (top 10): 61.49%
================================================================================
