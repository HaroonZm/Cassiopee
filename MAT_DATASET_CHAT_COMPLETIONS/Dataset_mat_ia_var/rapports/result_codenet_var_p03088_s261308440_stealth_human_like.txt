================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())  # taille ?
# Je crée une liste avec deux dicos, je sais pas si c'est une super idée mais bon
l = [{} for _ in range(2)]
mod = 10 ** 9 + 7  # c'est souvent ça la constante modulo...

# Bon je cherche AGC n'importe où dans les 4 lettres, même après des swaps
def judge(s):
    t = list(s)
    # Si "AGC" est déjà là ça saute
    if ''.join(t).find('AGC') >= 0:
        return 0
    # swap 0 et 1 pour voir si "AGC" pop
    t[0], t[1] = t[1], t[0]
    if ''.join(t).find('AGC') >= 0:
        return 0
    # revenir à la normale
    t[0], t[1] = t[1], t[0]
    # swap 1 et 2
    t[1], t[2] = t[2], t[1]
    if ''.join(t).find('AGC') >= 0:
        return 0
    t[1], t[2] = t[2], t[1]
    # swap 2 et 3
    t[2], t[3] = t[3], t[2]
    if ''.join(t).find('AGC') >= 0:
        return 0
    return 1

# initialisation chelou... bon...
l[1]["XXX"] = 1

for loopIdx in range(n):
    l[loopIdx%2].clear()
    # On boucle sur tous les strings de la génération précédente (je crois)
    for seq in l[(loopIdx+1)%2]:
        for letter in "ACGT":
            l[loopIdx%2][seq[1:]+letter] = 0  # ??? Pourquoi 0 ici ?
    s = 0
    for seq in l[(loopIdx+1)%2]:  # Reboucle sur la même
        for letter in "ACGT":
            if judge(seq+letter):
                l[loopIdx%2][seq[1:] + letter] = (l[loopIdx%2][seq[1:] + letter] + l[(loopIdx+1)%2][seq]) % mod
                # Je compte total de manières valides... peut-être inutile de le faire là
                s = (s + l[(loopIdx+1)%2][seq]) % mod
print(s)  # Le résultat final, même si je sais pas trop si c'est la variable la plus naturelle...
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4308362603187561
    2. '\' → logprob: -2.3058362007141113
    3. 'for' → logprob: -2.8058362007141113
    4. '*' → logprob: -3.3058362007141113
    5. '```' → logprob: -3.5558362007141113
    6. '#' → logprob: -4.055836200714111
    7. 'if' → logprob: -4.055836200714111
    8. '`' → logprob: -4.305836200714111
    9. '\r' → logprob: -4.555836200714111
    10. '+' → logprob: -4.930836200714111

Token 6: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6850652694702148
    2. 's' → logprob: -1.9350652694702148
    3. 'if' → logprob: -2.435065269470215
    4. '#' → logprob: -3.060065269470215
    5. ' ' → logprob: -3.185065269470215
    6. 'for' → logprob: -3.560065269470215
    7. '\n' → logprob: -3.685065269470215
    8. ')' → logprob: -3.810065269470215
    9. '*' → logprob: -4.310065269470215
    10. 'x' → logprob: -4.310065269470215

Token 7: ' taille' (ID: 41644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01401799637824297
    2. '  ' → logprob: -5.7640180587768555
    3. ' \' → logprob: -5.7640180587768555
    4. '<|end|>' → logprob: -6.6390180587768555
    5. ''' → logprob: -6.7640180587768555
    6. ')' → logprob: -7.0140180587768555
    7. ' )' → logprob: -7.2640180587768555
    8. '"' → logprob: -7.2640180587768555
    9. ' n' → logprob: -7.7640180587768555
    10. '\' → logprob: -7.7640180587768555

Token 8: ' ?
' (ID: 19740)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8404920697212219
    2. '\' → logprob: -1.5904920101165771
    3. 'i' → logprob: -2.840492010116577
    4. 'if' → logprob: -2.840492010116577
    5. '*' → logprob: -3.340492010116577
    6. ' ' → logprob: -3.840492010116577
    7. '#' → logprob: -3.965492010116577
    8. '
' → logprob: -4.090492248535156
    9. ')' → logprob: -4.090492248535156
    10. 's' → logprob: -4.215492248535156

Token 9: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6968526840209961
    2. 'for' → logprob: -2.321852684020996
    3. '\' → logprob: -2.946852684020996
    4. '\n' → logprob: -3.071852684020996
    5. 's' → logprob: -3.196852684020996
    6. '*' → logprob: -3.321852684020996
    7. '#' → logprob: -3.446852684020996
    8. ')' → logprob: -3.696852684020996
    9. 'i' → logprob: -3.946852684020996
    10. 'print' → logprob: -4.071852684020996

Token 10: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07279450446367264
    2. 's' → logprob: -4.197794437408447
    3. '_' → logprob: -4.447794437408447
    4. 'for' → logprob: -4.447794437408447
    5. 'n' → logprob: -4.697794437408447
    6. '#' → logprob: -5.072794437408447
    7. ' for' → logprob: -5.572794437408447
    8. ' #' → logprob: -6.072794437408447
    9. 'i' → logprob: -6.447794437408447
    10. ' ```' → logprob: -7.072794437408447

Token 11: ' crée' (ID: 102256)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5560309290885925
    2. ' ' → logprob: -2.1810309886932373
    3. ' veux' → logprob: -2.3060309886932373
    4. 'u' → logprob: -2.9310309886932373
    5. 'n' → logprob: -3.3060309886932373
    6. ' n' → logprob: -4.431030750274658
    7. ' continue' → logprob: -4.431030750274658
    8. ' suis' → logprob: -4.431030750274658
    9. ' vais' → logprob: -4.556030750274658
    10. 'a' → logprob: -4.681030750274658

Token 12: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07441239804029465
    2. ' un' → logprob: -2.8244123458862305
    3. '_' → logprob: -5.4494123458862305
    4. ' une' → logprob: -5.5744123458862305
    5. ' la' → logprob: -6.6994123458862305
    6. 's' → logprob: -7.3244123458862305
    7. 'un' → logprob: -7.9494123458862305
    8. ' ma' → logprob: -7.9494123458862305
    9. '  ' → logprob: -8.69941234588623
    10. ' my' → logprob: -8.82441234588623

Token 13: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5112787485122681
    2. 'liste' → logprob: -1.136278748512268
    3. 'list' → logprob: -3.8862786293029785
    4. ' matr' → logprob: -4.0112786293029785
    5. ' ' → logprob: -5.0112786293029785
    6. 's' → logprob: -5.7612786293029785
    7. '#' → logprob: -5.7612786293029785
    8. 'matrix' → logprob: -6.0112786293029785
    9. 'mat' → logprob: -6.2612786293029785
    10. 'table' → logprob: -6.3237786293029785

Token 14: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1550264358520508
    2. '[' → logprob: -1.9050264358520508
    3. 'l' → logprob: -2.155026435852051
    4. '_' → logprob: -2.405026435852051
    5. ' ' → logprob: -2.780026435852051
    6. '[]' → logprob: -3.030026435852051
    7. 'lst' → logprob: -3.155026435852051
    8. 'n' → logprob: -3.905026435852051
    9. 'a' → logprob: -4.155026435852051
    10. ' l' → logprob: -4.280026435852051

Token 15: ' deux' (ID: 10301)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.534713864326477
    2. '[' → logprob: -1.909713864326477
    3. '[]' → logprob: -2.5347137451171875
    4. 'n' → logprob: -2.6597137451171875
    5. ' [' → logprob: -3.1597137451171875
    6. ' n' → logprob: -3.5347137451171875
    7. '["' → logprob: -4.2847137451171875
    8. 'range' → logprob: -4.9097137451171875
    9. '[i' → logprob: -5.2847137451171875
    10. ' des' → logprob: -5.4097137451171875

Token 16: ' d' (ID: 272)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2646567225456238
    2. 'n' → logprob: -2.8896567821502686
    3. ' espaces' → logprob: -2.8896567821502686
    4. ' éléments' → logprob: -3.1396567821502686
    5. 'esp' → logprob: -4.5146565437316895
    6. '_' → logprob: -5.1396565437316895
    7. 'spaces' → logprob: -5.2646565437316895
    8. 'elements' → logprob: -5.2646565437316895
    9. '#' → logprob: -5.5146565437316895
    10. ' elements' → logprob: -5.8896565437316895

Token 17: 'icos' (ID: 6302)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.2813999652862549
    2. 'i' → logprob: -1.9063999652862549
    3. 'igits' → logprob: -3.656399965286255
    4. 'imension' → logprob: -3.906399965286255
    5. 'é' → logprob: -4.531399726867676
    6. 'igit' → logprob: -5.281399726867676
    7. 'éc' → logprob: -5.406399726867676
    8. 'onnées' → logprob: -5.656399726867676
    9. 'éf' → logprob: -6.031399726867676
    10. ' ' → logprob: -6.406399726867676

Token 18: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17702078819274902
    2. '[' → logprob: -2.552020788192749
    3. 'es' → logprob: -3.802020788192749
    4. ' ' → logprob: -4.677021026611328
    5. '[]' → logprob: -4.927021026611328
    6. ' s' → logprob: -5.177021026611328
    7. 'd' → logprob: -5.177021026611328
    8. 'n' → logprob: -5.302021026611328
    9. ' =' → logprob: -5.427021026611328
    10. 'l' → logprob: -5.802021026611328

Token 19: ' je' (ID: 1264)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20250657200813293
    2. ' [{' → logprob: -3.2025065422058105
    3. ' [{"' → logprob: -3.2025065422058105
    4. ' [' → logprob: -4.0775065422058105
    5. ' [{'' → logprob: -4.0775065422058105
    6. '[{' → logprob: -4.4525065422058105
    7. ' [{}' → logprob: -4.4525065422058105
    8. '[
' → logprob: -4.4525065422058105
    9. 'n' → logprob: -4.9525065422058105
    10. ' [
' → logprob: -5.2025065422058105

Token 20: ' sais' (ID: 30010)
  Prédit: ' vais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vais' → logprob: -0.9366790652275085
    2. 'append' → logprob: -2.5616791248321533
    3. ' rempl' → logprob: -3.1866791248321533
    4. 's' → logprob: -3.4366791248321533
    5. ' continue' → logprob: -3.4366791248321533
    6. ' peux' → logprob: -3.4366791248321533
    7. ' veux' → logprob: -3.6866791248321533
    8. 'n' → logprob: -3.9366791248321533
    9. 'for' → logprob: -3.9366791248321533
    10. ' ' → logprob: -4.186678886413574

Token 21: ' pas' (ID: 2173)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4224441945552826
    2. ' ' → logprob: -2.1724441051483154
    3. ' pas' → logprob: -2.5474441051483154
    4. '```' → logprob: -3.0474441051483154
    5. 'que' → logprob: -3.1724441051483154
    6. '  ' → logprob: -4.2974443435668945
    7. ' qu' → logprob: -4.7974443435668945
    8. ' comment' → logprob: -5.0474443435668945
    9. ')' → logprob: -5.2974443435668945
    10. ' exactement' → logprob: -6.1724443435668945

Token 22: ' si' (ID: 1784)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.842552900314331
    2. ' ' → logprob: -1.842552900314331
    3. ' {' → logprob: -2.342552900314331
    4. '[]' → logprob: -2.342552900314331
    5. ')' → logprob: -3.342552900314331
    6. '{' → logprob: -3.342552900314331
    7. ' de' → logprob: -3.592552900314331
    8. '  ' → logprob: -3.967552900314331
    9. ',' → logprob: -4.71755313873291
    10. '[{' → logprob: -4.96755313873291

Token 23: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9713018536567688
    2. 'c' → logprob: -1.096301794052124
    3. 'cela' → logprob: -1.971301794052124
    4. ' ' → logprob: -3.596301794052124
    5. ' ça' → logprob: -3.971301794052124
    6. ' ce' → logprob: -3.971301794052124
    7. 'je' → logprob: -4.221302032470703
    8. 'ce' → logprob: -4.471302032470703
    9. ' je' → logprob: -4.721302032470703
    10. 'le' → logprob: -5.471302032470703

Token 24: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6676304936408997
    2. 'e' → logprob: -1.6676304340362549
    3. 'a' → logprob: -1.9176304340362549
    4. ''a' → logprob: -2.292630434036255
    5. ''est' → logprob: -3.667630434036255
    6. ''e' → logprob: -4.417630672454834
    7. ' '' → logprob: -5.042630672454834
    8. ''''' → logprob: -6.792630672454834
    9. 'ela' → logprob: -6.917630672454834
    10. 'est' → logprob: -7.292630672454834

Token 25: ' une' (ID: 2463)
  Prédit: ' suff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suff' → logprob: -1.3597280979156494
    2. 'utile' → logprob: -1.4847280979156494
    3. ' utile' → logprob: -1.6097280979156494
    4. ' ' → logprob: -3.2347280979156494
    5. ' la' → logprob: -3.3597280979156494
    6. ' une' → logprob: -3.3597280979156494
    7. 'bien' → logprob: -3.6097280979156494
    8. ' ce' → logprob: -3.7347280979156494
    9. 'une' → logprob: -4.35972785949707
    10. ' mieux' → logprob: -4.60972785949707

Token 26: ' super' (ID: 2539)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8118030428886414
    2. ' bonne' → logprob: -1.0618031024932861
    3. ' ' → logprob: -2.686803102493286
    4. 'liste' → logprob: -3.061803102493286
    5. 'list' → logprob: -3.811803102493286
    6. ' piste' → logprob: -4.686802864074707
    7. 's' → logprob: -4.811802864074707
    8. ' list' → logprob: -5.061802864074707
    9. '[' → logprob: -5.186802864074707
    10. 'bonne' → logprob: -5.186802864074707

Token 27: ' idée' (ID: 64187)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2694981098175049
    2. '[' → logprob: -2.019498109817505
    3. ' liste' → logprob: -4.394497871398926
    4. 'position' → logprob: -4.644497871398926
    5. ' [' → logprob: -4.644497871398926
    6. ' bonne' → logprob: -4.644497871398926
    7. ' []' → logprob: -5.019497871398926
    8. '_' → logprob: -5.144497871398926
    9. '[]' → logprob: -5.269497871398926
    10. 'b' → logprob: -5.769497871398926

Token 28: ' mais' (ID: 2899)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6379548907279968
    2. '[' → logprob: -1.7629549503326416
    3. 'l' → logprob: -2.0129549503326416
    4. 's' → logprob: -2.5129549503326416
    5. '[
' → logprob: -3.8879549503326416
    6. ' d' → logprob: -4.1379547119140625
    7. 'lst' → logprob: -5.1379547119140625
    8. ' ' → logprob: -5.2629547119140625
    9. ' l' → logprob: -5.6379547119140625
    10. ',' → logprob: -5.6379547119140625

Token 29: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14497768878936768
    2. '[' → logprob: -3.644977569580078
    3. ' n' → logprob: -3.894977569580078
    4. 'n' → logprob: -4.394977569580078
    5. ' [
' → logprob: -4.644977569580078
    6. ' ['' → logprob: -4.769977569580078
    7. '[
' → logprob: -5.019977569580078
    8. '  ' → logprob: -5.394977569580078
    9. ' [' → logprob: -5.519977569580078
    10. '['' → logprob: -5.519977569580078

Token 30: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0509464368224144
    2. 's' → logprob: -4.425946235656738
    3. ' d' → logprob: -4.925946235656738
    4. 'lst' → logprob: -4.925946235656738
    5. 'l' → logprob: -5.300946235656738
    6. '[' → logprob: -5.925946235656738
    7. 'liste' → logprob: -5.925946235656738
    8. 'dp' → logprob: -6.425946235656738
    9. 'data' → logprob: -6.550946235656738
    10. 'list' → logprob: -6.550946235656738

Token 31: 'l' (ID: 75)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.41403576731681824
    2. 'lst' → logprob: -2.7890357971191406
    3. 'liste' → logprob: -2.9140357971191406
    4. 's' → logprob: -3.2890357971191406
    5. 'tab' → logprob: -3.6640357971191406
    6. 'data' → logprob: -3.7890357971191406
    7. 'l' → logprob: -4.289035797119141
    8. 'graph' → logprob: -4.789035797119141
    9. 'list' → logprob: -4.914035797119141
    10. 'dp' → logprob: -4.914035797119141

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3205944299697876
    2. 'ist' → logprob: -2.445594310760498
    3. 's' → logprob: -3.070594310760498
    4. 'iste' → logprob: -3.570594310760498
    5. 'is' → logprob: -3.820594310760498
    6. '_' → logprob: -3.945594310760498
    7. '=' → logprob: -4.070594310760498
    8. 'istes' → logprob: -4.320594310760498
    9. 'e' → logprob: -4.445594310760498
    10. 'es' → logprob: -4.695594310760498

Token 33: ' [{}' (ID: 170238)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07921494543552399
    2. ' [{' → logprob: -3.2042150497436523
    3. '[{' → logprob: -3.7042150497436523
    4. ' [{}' → logprob: -5.329215049743652
    5. ' [' → logprob: -5.579215049743652
    6. ' [{"' → logprob: -6.704215049743652
    7. ' [{'' → logprob: -6.829215049743652
    8. '[]' → logprob: -12.204215049743652
    9. '[
' → logprob: -12.329215049743652
    10. ' ' → logprob: -12.954215049743652

Token 34: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010224303230643272
    2. ' for' → logprob: -5.135224342346191
    3. ' ,' → logprob: -6.010224342346191
    4. 'for' → logprob: -6.635224342346191
    5. ',{' → logprob: -8.510224342346191
    6. ')' → logprob: -8.760224342346191
    7. ',
' → logprob: -9.635224342346191
    8. ',{
' → logprob: -10.510224342346191
    9. ']' → logprob: -10.635224342346191
    10. ' ' → logprob: -10.885224342346191

Token 35: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1429121196269989
    2. ' i' → logprob: -2.6429121494293213
    3. ' _' → logprob: -3.2679121494293213
    4. '_' → logprob: -4.017911911010742
    5. ' range' → logprob: -5.142911911010742
    6. 'range' → logprob: -10.142911911010742
    7. 'i' → logprob: -11.142911911010742
    8. ' ▁' → logprob: -11.892911911010742
    9. '  ' → logprob: -12.017911911010742
    10. '(' → logprob: -12.142911911010742

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016321975737810135
    2. 'in' → logprob: -4.141322135925293
    3. ' ' → logprob: -8.266322135925293
    4. '_' → logprob: -11.391322135925293
    5. 'range' → logprob: -12.016322135925293
    6. ' _' → logprob: -12.391322135925293
    7. 'n' → logprob: -13.391322135925293
    8. ' i' → logprob: -13.516322135925293
    9. 'import' → logprob: -13.891322135925293
    10. ')' → logprob: -13.891322135925293

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602257490158081
    2. 'range' → logprob: -1.910225749015808
    3. '	range' → logprob: -14.160225868225098
    4. '(range' → logprob: -14.660225868225098
    5. ' ' → logprob: -15.660225868225098
    6. 'rang' → logprob: -16.16022491455078
    7. ' xrange' → logprob: -16.28522491455078
    8. '_range' → logprob: -17.66022491455078
    9. 'Range' → logprob: -17.78522491455078
    10. 'ran' → logprob: -17.91022491455078

Token 38: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008617408573627472
    2. '(' → logprob: -4.758617401123047
    3. ' (' → logprob: -13.508617401123047
    4. 'n' → logprob: -14.133617401123047
    5. '(
' → logprob: -14.633617401123047
    6. ' n' → logprob: -15.758617401123047
    7. '(

' → logprob: -16.258617401123047
    8. ')n' → logprob: -17.383617401123047
    9. ')' → logprob: -18.508617401123047
    10. '(int' → logprob: -18.883617401123047

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10351907461881638
    2. 'n' → logprob: -2.3535189628601074
    3. ' n' → logprob: -6.103518962860107
    4. ' ' → logprob: -6.853518962860107
    5. '3' → logprob: -12.353519439697266
    6. '(n' → logprob: -12.478519439697266
    7. '1' → logprob: -13.103519439697266
    8. '   ' → logprob: -13.603519439697266
    9. '10' → logprob: -14.228519439697266
    10. '4' → logprob: -14.541019439697266

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00024882311117835343
    2. ')' → logprob: -8.375248908996582
    3. ']' → logprob: -11.750248908996582
    4. ')])' → logprob: -12.375248908996582
    5. ' )' → logprob: -12.625248908996582
    6. '])' → logprob: -13.375248908996582
    7. '))' → logprob: -14.750248908996582
    8. '])]' → logprob: -15.000248908996582
    9. ')],' → logprob: -15.875248908996582
    10. ')}' → logprob: -16.375247955322266

Token 41: 'mod' (ID: 4847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07077087461948395
    2. '
' → logprob: -2.8207709789276123
    3. ' for' → logprob: -4.945770740509033
    4. '\n' → logprob: -7.695770740509033
    5. '' → logprob: -8.070771217346191
    6. 'n' → logprob: -8.570771217346191
    7. '```' → logprob: -8.570771217346191
    8. '\' → logprob: -9.445771217346191
    9. ' 
' → logprob: -9.445771217346191
    10. '#' → logprob: -9.570771217346191

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1017674133181572
    2. '=' → logprob: -2.3517673015594482
    3. 'ulus' → logprob: -8.351767539978027
    4. ' ' → logprob: -8.476767539978027
    5. 'ulo' → logprob: -8.601767539978027
    6. 'ule' → logprob: -8.601767539978027
    7. 'ul' → logprob: -8.851767539978027
    8. 'ules' → logprob: -8.976767539978027
    9. 'uler' → logprob: -9.976767539978027
    10. 'ular' → logprob: -9.976767539978027

Token 43: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06267466396093369
    2. ' ' → logprob: -3.4376747608184814
    3. '100' → logprob: -3.5626747608184814
    4. '998' → logprob: -8.937674522399902
    5. '1' → logprob: -9.062674522399902
    6. '109' → logprob: -15.062674522399902
    7. ' ' → logprob: -15.187674522399902
    8. 'int' → logprob: -15.437674522399902
    9. ' (' → logprob: -15.687674522399902
    10. '2' → logprob: -16.06267547607422

Token 44: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2031579613685608
    2. '100' → logprob: -1.703157901763916
    3. '998' → logprob: -6.453157901763916
    4. '1' → logprob: -9.453158378601074
    5. '(' → logprob: -9.703158378601074
    6. 'int' → logprob: -11.578158378601074
    7. ' ' → logprob: -11.703158378601074
    8. '123' → logprob: -13.078158378601074
    9. '2' → logprob: -13.203158378601074
    10. '999' → logprob: -13.453158378601074

Token 45: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.038098860532045364
    2. '**' → logprob: -3.2880988121032715
    3. '09' → logprob: -9.78809928894043
    4. '```' → logprob: -14.41309928894043
    5. '009' → logprob: -15.66309928894043
    6. ' **' → logprob: -16.03809928894043
    7. '0' → logprob: -16.16309928894043
    8. '^' → logprob: -16.41309928894043
    9. '6' → logprob: -16.53809928894043
    10. '*' → logprob: -17.28809928894043

Token 46: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -18.75
    5. '10' → logprob: -21.0
    6. '8' → logprob: -21.0
    7. '4' → logprob: -21.25
    8. '6' → logprob: -21.75
    9. '18' → logprob: -21.875
    10. '   ' → logprob: -22.0

Token 47: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.375
    3. '```' → logprob: -17.0
    4. ' ' → logprob: -18.0
    5. '8' → logprob: -18.75
    6. '**' → logprob: -18.875
    7. '6' → logprob: -19.25
    8. '+' → logprob: -19.5
    9. '18' → logprob: -19.875
    10. '^' → logprob: -19.9375

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005959733389317989
    2. ' +' → logprob: -5.130959510803223
    3. '7' → logprob: -10.630959510803223
    4. '+
' → logprob: -13.255959510803223
    5. ' ' → logprob: -13.380959510803223
    6. ' plus' → logprob: -14.005959510803223
    7. '9' → logprob: -14.130959510803223
    8. '+

' → logprob: -14.630959510803223
    9. ' +
' → logprob: -14.755959510803223
    10. '```' → logprob: -15.505959510803223

Token 49: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '+' → logprob: -18.75
    4. '9' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. '   ' → logprob: -21.5
    7. '07' → logprob: -21.625
    8. '

' → logprob: -23.125
    9. '۷' → logprob: -23.125
    10. '  ' → logprob: -23.1875

Token 50: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '+' → logprob: -19.375
    4. '```' → logprob: -20.375
    5. '9' → logprob: -20.5
    6. '   ' → logprob: -21.75
    7. '07' → logprob: -21.875
    8. '

' → logprob: -22.625
    9. '' → logprob: -23.5
    10. '17' → logprob: -23.625

Token 51: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19189958274364471
    2. 'for' → logprob: -1.9418995380401611
    3. '<|end|>' → logprob: -4.81689977645874
    4. ' 
' → logprob: -5.06689977645874
    5. ' for' → logprob: -5.19189977645874
    6. 'n' → logprob: -5.56689977645874
    7. '' → logprob: -6.19189977645874
    8. '\n' → logprob: -6.56689977645874
    9. '
' → logprob: -6.56689977645874
    10. ' ' → logprob: -7.31689977645874

Token 52: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47877416014671326
    2. '
' → logprob: -0.9787741899490356
    3. ' for' → logprob: -5.728774070739746
    4. 'n' → logprob: -7.978774070739746
    5. '<|end|>' → logprob: -8.228774070739746
    6. '' → logprob: -8.353774070739746
    7. '\n' → logprob: -9.103774070739746
    8. ' 
' → logprob: -9.103774070739746
    9. '
' → logprob: -9.353774070739746
    10. '#' → logprob: -9.603774070739746

Token 53: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01839563250541687
    2. ' n' → logprob: -5.39339542388916
    3. '<|end|>' → logprob: -5.89339542388916
    4. '1' → logprob: -6.01839542388916
    5. 'n' → logprob: -6.14339542388916
    6. 'def' → logprob: -7.14339542388916
    7. ' 
' → logprob: -7.39339542388916
    8. ')' → logprob: -7.51839542388916
    9. ' \' → logprob: -7.89339542388916
    10. '\' → logprob: -8.01839542388916

Token 54: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6058682203292847
    2. 'u' → logprob: -2.355868339538574
    3. 'ode' → logprob: -2.605868339538574
    4. 'ur' → logprob: -2.980868339538574
    5. 'on' → logprob: -3.230868339538574
    6. 'o' → logprob: -3.480868339538574
    7. 'ount' → logprob: -4.230868339538574
    8. 'h' → logprob: -4.355868339538574
    9. '=' → logprob: -4.480868339538574
    10. 'urrent' → logprob: -4.480868339538574

Token 55: ' souvent' (ID: 28137)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44825032353401184
    2. '<|end|>' → logprob: -1.0732502937316895
    3. '<|end|>' → logprob: -4.9482502937316895
    4. ' un' → logprob: -6.1982502937316895
    5. 'a' → logprob: -6.3232502937316895
    6. 'n' → logprob: -6.8232502937316895
    7. ' a' → logprob: -7.1982502937316895
    8. 'mod' → logprob: -7.3232502937316895
    9. 's' → logprob: -7.3232502937316895
    10. '_' → logprob: -7.3232502937316895

Token 56: ' ça' (ID: 13590)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16740211844444275
    2. ' 
' → logprob: -2.9174020290374756
    3. '' → logprob: -3.4174020290374756
    4. 'for' → logprob: -3.9174020290374756
    5. '<|end|>' → logprob: -4.167402267456055
    6. ' for' → logprob: -4.792402267456055
    7. ' ' → logprob: -4.917402267456055
    8. '
' → logprob: -4.917402267456055
    9. '  
' → logprob: -6.542402267456055
    10. 'n' → logprob: -6.667402267456055

Token 57: ' la' (ID: 557)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09006226062774658
    2. 'for' → logprob: -2.715062141418457
    3. ' for' → logprob: -5.340062141418457
    4. 'n' → logprob: -5.340062141418457
    5. ' 
' → logprob: -5.590062141418457
    6. '' → logprob: -5.965062141418457
    7. '<|end|>' → logprob: -6.715062141418457
    8. '
' → logprob: -7.090062141418457
    9. '

' → logprob: -7.340062141418457
    10. '```' → logprob: -8.340062141418457

Token 58: ' constante' (ID: 49652)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6961580514907837
    2. ' ' → logprob: -1.4461580514907837
    3. 'n' → logprob: -2.571157932281494
    4. ')' → logprob: -3.446157932281494
    5. '#' → logprob: -3.571157932281494
    6. ' 
' → logprob: -3.696157932281494
    7. '\' → logprob: -4.196157932281494
    8. '' → logprob: -4.446157932281494
    9. '

' → logprob: -4.571157932281494
    10. '\n' → logprob: -4.696157932281494

Token 59: ' modulo' (ID: 112372)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3360123336315155
    2. 'for' → logprob: -1.336012363433838
    3. ' for' → logprob: -5.211012363433838
    4. '' → logprob: -5.211012363433838
    5. '
' → logprob: -5.336012363433838
    6. ' 
' → logprob: -6.961012363433838
    7. '

' → logprob: -6.961012363433838
    8. 'n' → logprob: -7.086012363433838
    9. '<|end|>' → logprob: -7.086012363433838
    10. '\n' → logprob: -7.211012363433838

Token 60: '...

' (ID: 2161)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.307638555765152
    2. 'for' → logprob: -1.4326385259628296
    3. ' 
' → logprob: -4.557638645172119
    4. ' for' → logprob: -5.057638645172119
    5. '
' → logprob: -5.682638645172119
    6. '' → logprob: -6.057638645172119
    7. 'n' → logprob: -7.432638645172119
    8. ' ' → logprob: -7.557638645172119
    9. '<|end|>' → logprob: -7.682638645172119
    10. '

' → logprob: -7.807638645172119

Token 61: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3934635519981384
    2. 'for' → logprob: -1.1434636116027832
    3. ' for' → logprob: -5.518463611602783
    4. '
' → logprob: -7.268463611602783
    5. '\n' → logprob: -7.518463611602783
    6. ' 
' → logprob: -8.143463134765625
    7. '

' → logprob: -8.393463134765625
    8. '' → logprob: -8.643463134765625
    9. '```' → logprob: -9.018463134765625
    10. '<|end|>' → logprob: -9.143463134765625

Token 62: ' Bon' (ID: 12658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014259289018809795
    2. ' for' → logprob: -4.264259338378906
    3. '
' → logprob: -10.139259338378906
    4. 'n' → logprob: -10.889259338378906
    5. 'def' → logprob: -11.014259338378906
    6. 'f' → logprob: -12.514259338378906
    7. '```' → logprob: -12.764259338378906
    8. 'd' → logprob: -12.764259338378906
    9. '#' → logprob: -13.014259338378906
    10. ' ' → logprob: -13.264259338378906

Token 63: ' je' (ID: 1264)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6486903429031372
    2. 'for' → logprob: -1.2736903429031372
    3. ' ' → logprob: -1.6486903429031372
    4. 'n' → logprob: -6.398690223693848
    5. 's' → logprob: -7.398690223693848
    6. ',' → logprob: -7.523690223693848
    7. ' n' → logprob: -7.648690223693848
    8. '
' → logprob: -8.023690223693848
    9. '#' → logprob: -8.398690223693848
    10. 'e' → logprob: -9.148690223693848

Token 64: ' cherche' (ID: 52345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29144734144210815
    2. ' vais' → logprob: -1.791447401046753
    3. ' continue' → logprob: -3.666447401046753
    4. 's' → logprob: -4.541447162628174
    5. ' pense' → logprob: -4.916447162628174
    6. ' veux' → logprob: -5.166447162628174
    7. ' for' → logprob: -5.291447162628174
    8. ' peux' → logprob: -5.416447162628174
    9. '.' → logprob: -5.791447162628174
    10. ' #' → logprob: -6.041447162628174

Token 65: ' AG' (ID: 19215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0014809363055974245
    2. '  ' → logprob: -7.501481056213379
    3. '<|end|>' → logprob: -8.626481056213379
    4. ' a' → logprob: -9.376481056213379
    5. 's' → logprob: -9.501481056213379
    6. ''' → logprob: -9.501481056213379
    7. ' à' → logprob: -9.626481056213379
    8. 'u' → logprob: -10.251481056213379
    9. '_' → logprob: -10.626481056213379
    10. 'e' → logprob: -10.626481056213379

Token 66: 'C' (ID: 34)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1220911741256714
    2. '_' → logprob: -1.4970911741256714
    3. ' =' → logprob: -1.4970911741256714
    4. '=' → logprob: -2.872091293334961
    5. 'AG' → logprob: -3.372091293334961
    6. '[' → logprob: -3.497091293334961
    7. 'for' → logprob: -3.747091293334961
    8. 'a' → logprob: -3.872091293334961
    9. 's' → logprob: -4.372091293334961
    10. ' ' → logprob: -4.497091293334961

Token 67: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9483130574226379
    2. '_' → logprob: -1.3233129978179932
    3. 'for' → logprob: -1.6983129978179932
    4. ':' → logprob: -3.448312997817993
    5. 'AG' → logprob: -3.573312997817993
    6. ' for' → logprob: -3.698312997817993
    7. 'A' → logprob: -4.323313236236572
    8. '
' → logprob: -4.573313236236572
    9. 'n' → logprob: -4.573313236236572
    10. 'a' → logprob: -5.073313236236572

Token 68: ''importe' (ID: 103032)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.813988208770752
    2. '=' → logprob: -1.813988208770752
    3. '[' → logprob: -1.938988208770752
    4. '-' → logprob: -2.688988208770752
    5. '+' → logprob: -2.938988208770752
    6. ' ' → logprob: -3.438988208770752
    7. '_' → logprob: -3.813988208770752
    8. '[i' → logprob: -5.063988208770752
    9. ')' → logprob: -5.313988208770752
    10. '...' → logprob: -5.438988208770752

Token 69: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.8216813802719116
    2. ' où' → logprob: -1.1966813802719116
    3. '```' → logprob: -2.446681499481201
    4. ' comment' → logprob: -2.946681499481201
    5. 'quoi' → logprob: -3.446681499481201
    6. 'quel' → logprob: -4.071681499481201
    7. ' quelle' → logprob: -5.196681499481201
    8. ' ' → logprob: -5.196681499481201
    9. ' quel' → logprob: -5.196681499481201
    10. ' quoi' → logprob: -5.321681499481201

Token 70: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10279472172260284
    2. ' for' → logprob: -2.977794647216797
    3. ' ' → logprob: -3.727794647216797
    4. '
' → logprob: -4.977794647216797
    5. '<|end|>' → logprob: -5.102794647216797
    6. ':' → logprob: -5.977794647216797
    7. 'n' → logprob: -6.227794647216797
    8. 's' → logprob: -6.977794647216797
    9. '#' → logprob: -7.352794647216797
    10. '.' → logprob: -7.477794647216797

Token 71: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8925075531005859
    2. ' l' → logprob: -1.017507553100586
    3. 'input' → logprob: -2.142507553100586
    4. ' input' → logprob: -3.142507553100586
    5. '_' → logprob: -3.392507553100586
    6. 's' → logprob: -5.517507553100586
    7. ' ' → logprob: -5.642507553100586
    8. ' the' → logprob: -5.892507553100586
    9. 'range' → logprob: -5.892507553100586
    10. ' _' → logprob: -6.142507553100586

Token 72: ' ' (ID: 220)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1051909923553467
    2. 's' → logprob: -1.4801909923553467
    3. 'l' → logprob: -1.8551909923553467
    4. 'e' → logprob: -2.9801909923553467
    5. ' string' → logprob: -2.9801909923553467
    6. 'string' → logprob: -3.6051909923553467
    7. ' ' → logprob: -3.8551909923553467
    8. 'a' → logprob: -3.8551909923553467
    9. ' input' → logprob: -4.355191230773926
    10. ' s' → logprob: -4.480191230773926

Token 73: '4' (ID: 19)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8593676686286926
    2. 'string' → logprob: -1.8593676090240479
    3. 'l' → logprob: -2.109367609024048
    4. 'mot' → logprob: -2.609367609024048
    5. 'm' → logprob: -2.734367609024048
    6. 'élé' → logprob: -3.109367609024048
    7. 'chaine' → logprob: -3.234367609024048
    8. 'c' → logprob: -3.984367609024048
    9. 'texte' → logprob: -4.609367847442627
    10. 'e' → logprob: -5.859367847442627

Token 74: ' lettres' (ID: 101234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05844130739569664
    2. 'a' → logprob: -4.433441162109375
    3. '_' → logprob: -5.058441162109375
    4. 'A' → logprob: -5.183441162109375
    5. 's' → logprob: -5.183441162109375
    6. 'n' → logprob: -5.308441162109375
    7. '#' → logprob: -5.558441162109375
    8. 'for' → logprob: -5.933441162109375
    9. ' for' → logprob: -6.058441162109375
    10. '.' → logprob: -6.058441162109375

Token 75: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6842091083526611
    2. 'a' → logprob: -1.6842091083526611
    3. ':' → logprob: -3.059209108352661
    4. 'for' → logprob: -3.309209108352661
    5. '#' → logprob: -3.434209108352661
    6. 's' → logprob: -3.559209108352661
    7. 'n' → logprob: -3.684209108352661
    8. ' for' → logprob: -3.684209108352661
    9. 'A' → logprob: -3.809209108352661
    10. '
' → logprob: -4.059208869934082

Token 76: ' même' (ID: 9679)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3156719505786896
    2. ' for' → logprob: -2.065671920776367
    3. 'for' → logprob: -2.565671920776367
    4. 's' → logprob: -3.815671920776367
    5. 'a' → logprob: -5.190671920776367
    6. '#' → logprob: -5.190671920776367
    7. ' 
' → logprob: -5.565671920776367
    8. ''' → logprob: -5.940671920776367
    9. ' a' → logprob: -5.940671920776367
    10. 'alphabet' → logprob: -6.065671920776367

Token 77: ' après' (ID: 16460)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.865196943283081
    2. ' if' → logprob: -1.990196943283081
    3. ' si' → logprob: -2.240196943283081
    4. ''' → logprob: -2.365196943283081
    5. ' A' → logprob: -2.615196943283081
    6. ' s' → logprob: -2.990196943283081
    7. ' ' → logprob: -3.365196943283081
    8. '#' → logprob: -3.490196943283081
    9. 's' → logprob: -3.490196943283081
    10. 'a' → logprob: -3.615196943283081

Token 78: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9211323857307434
    2. 'a' → logprob: -1.7961323261260986
    3. ' ' → logprob: -2.0461323261260986
    4. 'for' → logprob: -2.5461323261260986
    5. ' for' → logprob: -2.5461323261260986
    6. '#' → logprob: -3.5461323261260986
    7. 'n' → logprob: -3.7961323261260986
    8. 't' → logprob: -3.7961323261260986
    9. '_' → logprob: -4.171132564544678
    10. 'A' → logprob: -4.171132564544678

Token 79: ' swaps' (ID: 150699)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.709518313407898
    2. 'AG' → logprob: -2.0845184326171875
    3. 'A' → logprob: -2.3345184326171875
    4. 'l' → logprob: -2.5845184326171875
    5. 'aj' → logprob: -3.0845184326171875
    6. '#' → logprob: -3.4595184326171875
    7. ''' → logprob: -3.4595184326171875
    8. 'rem' → logprob: -3.7095184326171875
    9. ' permutations' → logprob: -3.7095184326171875
    10. 't' → logprob: -3.9595184326171875

Token 80: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1688963919878006
    2. '
' → logprob: -3.418896436691284
    3. 'for' → logprob: -3.543896436691284
    4. '#' → logprob: -3.918896436691284
    5. '.' → logprob: -4.668896198272705
    6. '' → logprob: -4.918896198272705
    7. '_' → logprob: -5.043896198272705
    8. 'a' → logprob: -5.043896198272705
    9. ' 
' → logprob: -5.043896198272705
    10. ',' → logprob: -5.168896198272705

Token 81: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.644611656665802
    2. ' for' → logprob: -2.1446115970611572
    3. '#' → logprob: -2.2696115970611572
    4. '
' → logprob: -2.5196115970611572
    5. ' ' → logprob: -2.6446115970611572
    6. 'a' → logprob: -3.7696115970611572
    7. 'n' → logprob: -3.8946115970611572
    8. ' 
' → logprob: -4.519611835479736
    9. ',' → logprob: -5.019611835479736
    10. '\' → logprob: -5.269611835479736

Token 82: ' judge' (ID: 23319)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6471865177154541
    2. '_' → logprob: -1.272186517715454
    3. ' _' → logprob: -3.147186517715454
    4. ' count' → logprob: -3.147186517715454
    5. ' dp' → logprob: -3.647186517715454
    6. ' f' → logprob: -4.147186279296875
    7. ' find' → logprob: -4.147186279296875
    8. ' dfs' → logprob: -4.647186279296875
    9. ' a' → logprob: -4.772186279296875
    10. ' check' → logprob: -4.897186279296875

Token 83: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16929200291633606
    2. '_' → logprob: -2.4192919731140137
    3. '(s' → logprob: -3.0442919731140137
    4. '_(' → logprob: -5.544291973114014
    5. '(n' → logprob: -5.794291973114014
    6. '(x' → logprob: -6.169291973114014
    7. '(word' → logprob: -6.169291973114014
    8. 's' → logprob: -7.169291973114014
    9. '(a' → logprob: -7.169291973114014
    10. '(i' → logprob: -7.544291973114014

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017690664390102029
    2. ')' → logprob: -6.501769065856934
    3. '[' → logprob: -9.001769065856934
    4. ' ):' → logprob: -10.251769065856934
    5. ':' → logprob: -10.376769065856934
    6. ',' → logprob: -10.876769065856934
    7. '[i' → logprob: -11.251769065856934
    8. '):
' → logprob: -11.376769065856934
    9. '[]):' → logprob: -11.501769065856934
    10. 's' → logprob: -12.501769065856934

Token 85: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07385354489088058
    2. '   ' → logprob: -2.9488534927368164
    3. '(' → logprob: -4.823853492736816
    4. ' ' → logprob: -5.448853492736816
    5. ' :' → logprob: -5.573853492736816
    6. ')' → logprob: -6.698853492736816
    7. ':return' → logprob: -7.948853492736816
    8. '    ' → logprob: -8.698853492736816
    9. '):' → logprob: -8.823853492736816
    10. '[' → logprob: -9.073853492736816

Token 86: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6395039558410645
    2. ' for' → logprob: -1.5145039558410645
    3. 'for' → logprob: -2.2645039558410645
    4. ' return' → logprob: -2.6395039558410645
    5. 'return' → logprob: -3.6395039558410645
    6. ' if' → logprob: -4.0145039558410645
    7. 'n' → logprob: -4.2645039558410645
    8. ' n' → logprob: -5.6395039558410645
    9. 'if' → logprob: -5.8895039558410645
    10. ' i' → logprob: -6.1395039558410645

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6491716504096985
    2. '=' → logprob: -0.8991716504096985
    3. 'r' → logprob: -3.2741715908050537
    4. 'okens' → logprob: -4.899171829223633
    5. '=len' → logprob: -4.899171829223633
    6. 'oken' → logprob: -5.899171829223633
    7. 'urn' → logprob: -5.899171829223633
    8. 'ok' → logprob: -6.524171829223633
    9. 'rn' → logprob: -6.524171829223633
    10. 'arget' → logprob: -6.774171829223633

Token 88: ' list' (ID: 1562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5601370334625244
    2. ' "' → logprob: -1.3101370334625244
    3. ' s' → logprob: -3.3101370334625244
    4. 's' → logprob: -3.3101370334625244
    5. ''s' → logprob: -3.3101370334625244
    6. '"s' → logprob: -3.9351370334625244
    7. ' '' → logprob: -4.935136795043945
    8. ''' → logprob: -5.185136795043945
    9. '"A' → logprob: -5.185136795043945
    10. 'len' → logprob: -5.435136795043945

Token 89: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03320448473095894
    2. '("' → logprob: -3.5332045555114746
    3. '(' → logprob: -6.158204555511475
    4. '('' → logprob: -6.783204555511475
    5. 's' → logprob: -9.033204078674316
    6. '(range' → logprob: -9.658204078674316
    7. '()' → logprob: -12.908204078674316
    8. '(set' → logprob: -13.283204078674316
    9. '("")' → logprob: -13.408204078674316
    10. '("""' → logprob: -14.158204078674316

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006072894670069218
    2. '())' → logprob: -5.256072998046875
    3. '))' → logprob: -8.381072998046875
    4. ' )' → logprob: -8.881072998046875
    5. ')
' → logprob: -9.256072998046875
    6. '()' → logprob: -9.506072998046875
    7. '")' → logprob: -10.006072998046875
    8. '[:' → logprob: -10.256072998046875
    9. '])' → logprob: -10.256072998046875
    10. ').' → logprob: -10.631072998046875

Token 91: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0853650569915771
    2. '   ' → logprob: -1.2103650569915771
    3. ')' → logprob: -1.7103650569915771
    4. '<|end|>' → logprob: -3.085365056991577
    5. '[' → logprob: -3.585365056991577
    6. '
' → logprob: -3.960365056991577
    7. '.' → logprob: -4.585365295410156
    8. 's' → logprob: -4.835365295410156
    9. '    ' → logprob: -4.960365295410156
    10. '\' → logprob: -5.210365295410156

Token 92: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5221145153045654
    2. ' for' → logprob: -1.5221145153045654
    3. '   ' → logprob: -2.8971145153045654
    4. 's' → logprob: -3.0221145153045654
    5. 'a' → logprob: -3.6471145153045654
    6. 'n' → logprob: -4.3971147537231445
    7. 'if' → logprob: -5.2721147537231445
    8. ' swaps' → logprob: -5.3971147537231445
    9. ' if' → logprob: -5.6471147537231445
    10. 'A' → logprob: -5.6471147537231445

Token 93: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6519869565963745
    2. ' for' → logprob: -0.9019869565963745
    3. ' if' → logprob: -3.776987075805664
    4. 'if' → logprob: -4.276987075805664
    5. '#' → logprob: -4.526987075805664
    6. '   ' → logprob: -5.276987075805664
    7. 'a' → logprob: -5.401987075805664
    8. 's' → logprob: -6.026987075805664
    9. 'n' → logprob: -6.401987075805664
    10. ' return' → logprob: -6.526987075805664

Token 94: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7447164058685303
    2. '"' → logprob: -1.4947164058685303
    3. ' '' → logprob: -1.6197164058685303
    4. ' "' → logprob: -2.6197164058685303
    5. ''A' → logprob: -4.119716644287109
    6. '"A' → logprob: -4.869716644287109
    7. ''s' → logprob: -6.494716644287109
    8. ' ' → logprob: -6.994716644287109
    9. ' len' → logprob: -7.369716644287109
    10. ''t' → logprob: -7.744716644287109

Token 95: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.14690499007701874
    2. 'A' → logprob: -2.021904945373535
    3. '"' → logprob: -6.271904945373535
    4. ''' → logprob: -6.396904945373535
    5. 'AGN' → logprob: -8.521904945373535
    6. '"A' → logprob: -8.771904945373535
    7. ''A' → logprob: -8.896904945373535
    8. ' AG' → logprob: -10.271904945373535
    9. ' A' → logprob: -11.209404945373535
    10. 'Ａ' → logprob: -11.334404945373535

Token 96: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.8206473871250637e-05
    2. 'CT' → logprob: -11.500028610229492
    3. ' C' → logprob: -11.750028610229492
    4. 'С' → logprob: -13.812528610229492
    5. 'CG' → logprob: -13.875028610229492
    6. '>C' → logprob: -13.937528610229492
    7. 'c' → logprob: -14.312528610229492
    8. '"C' → logprob: -14.375028610229492
    9. 'CTest' → logprob: -15.000028610229492
    10. 'CS' → logprob: -15.187528610229492

Token 97: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00020950057660229504
    2. '"in' → logprob: -8.87520980834961
    3. 'in' → logprob: -10.12520980834961
    4. ' in' → logprob: -11.25020980834961
    5. ''' → logprob: -12.50020980834961
    6. 'AG' → logprob: -13.00020980834961
    7. 'n' → logprob: -13.37520980834961
    8. ' ' → logprob: -13.50020980834961
    9. ' "' → logprob: -13.62520980834961
    10. 'A' → logprob: -13.62520980834961

Token 98: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021907484158873558
    2. '"' → logprob: -4.771907329559326
    3. ' not' → logprob: -5.271907329559326
    4. ' ' → logprob: -5.396907329559326
    5. 'in' → logprob: -6.021907329559326
    6. '  ' → logprob: -7.271907329559326
    7. '"in' → logprob: -8.271907806396484
    8. 'not' → logprob: -10.271907806396484
    9. ' i' → logprob: -10.521907806396484
    10. '   ' → logprob: -10.771907806396484

Token 99: ' déjà' (ID: 21229)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08905365318059921
    2. 'in' → logprob: -2.5890536308288574
    3. '"' → logprob: -5.214053630828857
    4. ' any' → logprob: -6.589053630828857
    5. '"in' → logprob: -7.464053630828857
    6. ' not' → logprob: -7.589053630828857
    7. ''' → logprob: -7.714053630828857
    8. 'any' → logprob: -7.714053630828857
    9. ''in' → logprob: -8.089054107666016
    10. ' "' → logprob: -8.839054107666016

Token 100: ' là' (ID: 8052)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15953288972377777
    2. 'in' → logprob: -2.1595327854156494
    3. '"' → logprob: -3.7845327854156494
    4. ''' → logprob: -5.9095330238342285
    5. '  ' → logprob: -6.4095330238342285
    6. ' "' → logprob: -6.7845330238342285
    7. ' ' → logprob: -6.9095330238342285
    8. ' '' → logprob: -7.7845330238342285
    9. ''in' → logprob: -7.7845330238342285
    10. '"in' → logprob: -7.7845330238342285

Token 101: ' ça' (ID: 13590)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5656735301017761
    2. ':' → logprob: -1.190673589706421
    3. '   ' → logprob: -2.940673589706421
    4. ',' → logprob: -4.065673351287842
    5. ' ' → logprob: -4.190673351287842
    6. ' :' → logprob: -4.940673351287842
    7. ':
' → logprob: -5.190673351287842
    8. ':return' → logprob: -5.190673351287842
    9. 'in' → logprob: -5.565673351287842
    10. ' if' → logprob: -5.815673351287842

Token 102: ' saute' (ID: 146395)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23375019431114197
    2. ' in' → logprob: -1.6087502241134644
    3. 'return' → logprob: -5.733750343322754
    4. ' ' → logprob: -6.233750343322754
    5. '   ' → logprob: -6.483750343322754
    6. '  ' → logprob: -8.483750343322754
    7. 'in' → logprob: -8.858750343322754
    8. ' va' → logprob: -8.858750343322754
    9. ':return' → logprob: -8.983750343322754
    10. ' a' → logprob: -8.983750343322754

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04953091964125633
    2. ':' → logprob: -3.2995309829711914
    3. '<|end|>' → logprob: -5.674530982971191
    4. '
' → logprob: -6.174530982971191
    5. '       ' → logprob: -6.549530982971191
    6. ' ' → logprob: -7.174530982971191
    7. '    
' → logprob: -7.549530982971191
    8. '  ' → logprob: -7.799530982971191
    9. ' if' → logprob: -7.924530982971191
    10. ')' → logprob: -8.049530982971191

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021032851189374924
    2. '
' → logprob: -4.646032810211182
    3. '<|end|>' → logprob: -5.021032810211182
    4. ' for' → logprob: -6.021032810211182
    5. '    
' → logprob: -7.646032810211182
    6. 'for' → logprob: -7.896032810211182
    7. '  ' → logprob: -8.14603328704834
    8. ' ' → logprob: -8.64603328704834
    9. '    ' → logprob: -8.89603328704834
    10. ')' → logprob: -8.89603328704834

Token 105: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14137032628059387
    2. 'if' (adapté à ' if') → logprob: -2.7663702964782715
    3. ' if' → logprob: -2.7663702964782715
    4. ' for' → logprob: -5.7663702964782715
    5. 'for' → logprob: -6.1413702964782715
    6. '	if' → logprob: -7.7663702964782715
    7. '  ' → logprob: -8.89137077331543
    8. ' ' → logprob: -9.01637077331543
    9. '	for' → logprob: -10.76637077331543
    10. '
' → logprob: -10.76637077331543

Token 106: ' ''.' (ID: 105941)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.49333974719047546
    2. '"' → logprob: -0.9933397769927979
    3. ' '' → logprob: -4.493339538574219
    4. ''' → logprob: -4.868339538574219
    5. ' ' → logprob: -9.618339538574219
    6. '"A' → logprob: -9.743339538574219
    7. ' AG' → logprob: -10.243339538574219
    8. '   ' → logprob: -10.743339538574219
    9. '"AT' → logprob: -11.368339538574219
    10. '  ' → logprob: -12.493339538574219

Token 107: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.006089119240641594
    2. 'find' → logprob: -5.256089210510254
    3. '"' → logprob: -7.881089210510254
    4. ''' → logprob: -8.631089210510254
    5. 'contains' → logprob: -8.881089210510254
    6. 'startswith' → logprob: -9.006089210510254
    7. 'AG' → logprob: -11.256089210510254
    8. ' join' → logprob: -12.131089210510254
    9. 'count' → logprob: -12.256089210510254
    10. 'joins' → logprob: -12.381089210510254

Token 108: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.03804493322968483
    2. 't' → logprob: -3.2880449295043945
    3. ' t' → logprob: -13.163044929504395
    4. '	t' → logprob: -14.538044929504395
    5. '(s' → logprob: -14.788044929504395
    6. '[t' → logprob: -15.413044929504395
    7. '(['' → logprob: -15.538044929504395
    8. '(' → logprob: -15.663044929504395
    9. ')t' → logprob: -18.03804588317871
    10. '([' → logprob: -18.16304588317871

Token 109: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.02088647335767746
    2. '.find' → logprob: -4.520886421203613
    3. ')' → logprob: -5.145886421203613
    4. '[:' → logprob: -6.645886421203613
    5. '[' → logprob: -6.895886421203613
    6. '"' → logprob: -7.395886421203613
    7. '   ' → logprob: -8.020886421203613
    8. ' ).' → logprob: -9.020886421203613
    9. ')=='' → logprob: -9.270886421203613
    10. '.index' → logprob: -9.270886421203613

Token 110: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0005603004829026759
    2. 'count' → logprob: -7.500560283660889
    3. ' find' → logprob: -12.250560760498047
    4. 'startswith' → logprob: -13.500560760498047
    5. 'contains' → logprob: -14.250560760498047
    6. '__' → logprob: -15.000560760498047
    7. '.find' → logprob: -16.875560760498047
    8. 'index' → logprob: -17.000560760498047
    9. '	find' → logprob: -18.375560760498047
    10. ' ' → logprob: -18.500560760498047

Token 111: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.038326848298311234
    2. '('' → logprob: -3.2883267402648926
    3. '(' → logprob: -8.16332721710205
    4. '"' → logprob: -15.66332721710205
    5. ' ("' → logprob: -16.288326263427734
    6. '(
' → logprob: -16.913326263427734
    7. ''' → logprob: -17.288326263427734
    8. '('"' → logprob: -17.663326263427734
    9. '(

' → logprob: -18.288326263427734
    10. '("'' → logprob: -18.288326263427734

Token 112: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.00047845521476119757
    2. ''' → logprob: -7.875478267669678
    3. '"' → logprob: -9.875478744506836
    4. 'AGN' → logprob: -10.625478744506836
    5. 'A' → logprob: -11.250478744506836
    6. ' AG' → logprob: -12.000478744506836
    7. '   ' → logprob: -14.125478744506836
    8. '')' → logprob: -15.000478744506836
    9. 'АГ' → logprob: -15.250478744506836
    10. '_AG' → logprob: -15.250478744506836

Token 113: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.310693111619912e-05
    2. '')' → logprob: -11.125042915344238
    3. ' C' → logprob: -12.000042915344238
    4. 'CG' → logprob: -12.812542915344238
    5. ''C' → logprob: -13.000042915344238
    6. 'AG' → logprob: -13.187542915344238
    7. 'CS' → logprob: -13.312542915344238
    8. 'c' → logprob: -13.500042915344238
    9. 'С' → logprob: -14.062542915344238
    10. ''' → logprob: -14.250042915344238

Token 114: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0006067678914405406
    2. ')' → logprob: -7.625606536865234
    3. '")' → logprob: -9.125606536865234
    4. ''' → logprob: -11.875606536865234
    5. '"' → logprob: -14.375606536865234
    6. ''))' → logprob: -14.375606536865234
    7. ' ')' → logprob: -14.750606536865234
    8. '''' → logprob: -15.250606536865234
    9. '')"' → logprob: -15.250606536865234
    10. ')!=' → logprob: -15.625606536865234

Token 115: ' >=' (ID: 5064)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9715754985809326
    2. '!=' → logprob: -0.9715754985809326
    3. '!=-' → logprob: -1.5965754985809326
    4. '>=' → logprob: -3.5965754985809326
    5. ')' → logprob: -4.596575736999512
    6. '()!=' → logprob: -6.971575736999512
    7. '>' → logprob: -7.346575736999512
    8. ' >=' → logprob: -7.471575736999512
    9. ' ' → logprob: -8.221575736999512
    10. ')!=' → logprob: -8.471575736999512

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002314303710591048
    2. ' ' → logprob: -8.375231742858887
    3. '1' → logprob: -14.000231742858887
    4. '   ' → logprob: -17.62523078918457
    5. '  ' → logprob: -18.50023078918457
    6. '

' → logprob: -19.18773078918457
    7. '```' → logprob: -19.43773078918457
    8. '۰' → logprob: -19.81273078918457
    9. ')' → logprob: -20.25023078918457
    10. ' ' → logprob: -20.25023078918457

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '1' → logprob: -14.750261306762695
    4. '   ' → logprob: -17.812761306762695
    5. '  ' → logprob: -18.187761306762695
    6. '۰' → logprob: -18.250261306762695
    7. ')' → logprob: -19.000261306762695
    8. ' ' → logprob: -19.125261306762695
    9. '```' → logprob: -19.125261306762695
    10. '０' → logprob: -19.437761306762695

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026140634436160326
    2. ':return' → logprob: -6.2526140213012695
    3. ':
' → logprob: -7.7526140213012695
    4. '   ' → logprob: -9.00261402130127
    5. '       ' → logprob: -9.62761402130127
    6. ' :' → logprob: -9.75261402130127
    7. '):' → logprob: -12.37761402130127
    8. ' or' → logprob: -13.87761402130127
    9. ')' → logprob: -14.00261402130127
    10. ' return' → logprob: -14.62761402130127

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030806250870227814
    2. '   ' → logprob: -6.12808084487915
    3. '	' → logprob: -8.253080368041992
    4. '
' → logprob: -8.628080368041992
    5. ' return' → logprob: -8.753080368041992
    6. ':' → logprob: -9.253080368041992
    7. 'return' → logprob: -9.628080368041992
    8. ':return' → logprob: -10.003080368041992
    9. '	return' → logprob: -10.503080368041992
    10. '<|end|>' → logprob: -11.128080368041992

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.27124059200286865
    2. '       ' → logprob: -1.6462405920028687
    3. ' return' → logprob: -3.146240711212158
    4. '   ' → logprob: -6.771240711212158
    5. '
' → logprob: -8.021240234375
    6. '	return' → logprob: -8.896240234375
    7. ' ' → logprob: -9.521240234375
    8. '	' → logprob: -9.896240234375
    9. '    ' → logprob: -11.646240234375
    10. ':return' → logprob: -12.021240234375

Token 121: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20142406225204468
    2. ' False' → logprob: -1.7014241218566895
    3. 'None' → logprob: -12.576423645019531
    4. '0' → logprob: -12.701423645019531
    5. ' None' → logprob: -12.826423645019531
    6. ' ' → logprob: -13.826423645019531
    7. 'True' → logprob: -15.576423645019531
    8. '(False' → logprob: -16.07642364501953
    9. '   ' → logprob: -16.32642364501953
    10. ' True' → logprob: -16.45142364501953

Token 122: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00021855637896806002
    2. ' False' → logprob: -8.500218391418457
    3. '0' → logprob: -11.125218391418457
    4. 'True' → logprob: -15.625218391418457
    5. 'F' → logprob: -16.875219345092773
    6. ' ' → logprob: -17.625219345092773
    7. '   ' → logprob: -18.250219345092773
    8. '(False' → logprob: -18.375219345092773
    9. 'Fal' → logprob: -18.875219345092773
    10. 'false' → logprob: -19.625219345092773

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005747945047914982
    2. '<|end|>' → logprob: -5.8807477951049805
    3. '
' → logprob: -6.8807477951049805
    4. '    
' → logprob: -7.1307477951049805
    5. '\n' → logprob: -8.75574779510498
    6. '	return' → logprob: -8.88074779510498
    7. '  ' → logprob: -8.88074779510498
    8. 'n' → logprob: -9.38074779510498
    9. '    ' → logprob: -9.38074779510498
    10. ' ' → logprob: -9.50574779510498

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016748415306210518
    2. '
' → logprob: -4.891748428344727
    3. '    
' → logprob: -5.016748428344727
    4. '<|end|>' → logprob: -7.141748428344727
    5. '\n' → logprob: -8.016748428344727
    6. '  
' → logprob: -8.266748428344727
    7. 'n' → logprob: -8.516748428344727
    8. ')' → logprob: -8.891748428344727
    9. '   
' → logprob: -9.016748428344727
    10. ' 
' → logprob: -9.141748428344727

Token 125: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5725822448730469
    2. '#' (adapté à ' #') → logprob: -1.4475822448730469
    3. '   ' → logprob: -1.8225822448730469
    4. 'if' → logprob: -4.447582244873047
    5. ' for' → logprob: -4.572582244873047
    6. 's' → logprob: -5.572582244873047
    7. 'return' → logprob: -5.822582244873047
    8. 'a' → logprob: -6.322582244873047
    9. ' ' → logprob: -6.947582244873047
    10. 'n' → logprob: -7.572582244873047

Token 126: ' swap' (ID: 25489)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13318978250026703
    2. '#' → logprob: -2.2581896781921387
    3. ' for' → logprob: -5.383189678192139
    4. 'if' → logprob: -5.883189678192139
    5. 'sw' → logprob: -5.883189678192139
    6. 'patterns' → logprob: -6.008189678192139
    7. '   ' → logprob: -7.258189678192139
    8. 'c' → logprob: -7.508189678192139
    9. ' #' → logprob: -7.758189678192139
    10. 'possible' → logprob: -7.883189678192139

Token 127: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37234535813331604
    2. 's' → logprob: -1.3723453283309937
    3. ' for' → logprob: -3.372345447540283
    4. 't' → logprob: -5.122345447540283
    5. '(' → logprob: -5.247345447540283
    6. '   ' → logprob: -5.497345447540283
    7. ' t' → logprob: -5.872345447540283
    8. 'i' → logprob: -7.122345447540283
    9. ' =' → logprob: -7.247345447540283
    10. ' ' → logprob: -7.872345447540283

Token 128: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.49714741110801697
    2. 's' → logprob: -1.9971474409103394
    3. '(t' → logprob: -1.9971474409103394
    4. 'for' → logprob: -2.49714732170105
    5. 'i' → logprob: -4.372147560119629
    6. ' t' → logprob: -4.997147560119629
    7. 'def' → logprob: -5.247147560119629
    8. '(' → logprob: -5.497147560119629
    9. '   ' → logprob: -6.747147560119629
    10. ' for' → logprob: -6.747147560119629

Token 129: ' et' (ID: 859)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3909967541694641
    2. 'in' → logprob: -2.2659966945648193
    3. ',' → logprob: -2.3909966945648193
    4. 'for' → logprob: -3.0159966945648193
    5. '   ' → logprob: -3.8909966945648193
    6. ' ' → logprob: -4.140996932983398
    7. '  ' → logprob: -5.015996932983398
    8. ' i' → logprob: -5.015996932983398
    9. '1' → logprob: -5.390996932983398
    10. '(' → logprob: -5.765996932983398

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002422779070911929
    2. ' ' → logprob: -8.375242233276367
    3. '2' → logprob: -11.500242233276367
    4. '3' → logprob: -13.750242233276367
    5. '１' → logprob: -16.125242233276367
    6. '4' → logprob: -16.375242233276367
    7. '   ' → logprob: -16.375242233276367
    8. '```' → logprob: -17.437742233276367
    9. 't' → logprob: -17.625242233276367
    10. '	' → logprob: -17.750242233276367

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030114251421764493
    2. '2' → logprob: -8.375301361083984
    3. ' ' → logprob: -10.000301361083984
    4. '3' → logprob: -10.625301361083984
    5. '   ' → logprob: -15.125301361083984
    6. '```' → logprob: -15.625301361083984
    7. '4' → logprob: -15.937801361083984
    8. '１' → logprob: -16.812801361083984
    9. '
' → logprob: -17.625301361083984
    10. '

' → logprob: -17.812801361083984

Token 132: ' pour' (ID: 1930)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.30683302879333496
    2. '   ' → logprob: -1.431833028793335
    3. ' t' → logprob: -3.931833028793335
    4. ',' → logprob: -5.431833267211914
    5. ' =' → logprob: -7.306833267211914
    6. 's' → logprob: -8.181833267211914
    7. ',t' → logprob: -9.306833267211914
    8. '=' → logprob: -9.681833267211914
    9. '	t' → logprob: -9.931833267211914
    10. ')' → logprob: -10.431833267211914

Token 133: ' voir' (ID: 20611)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6878154873847961
    2. ' t' → logprob: -1.8128154277801514
    3. 'i' → logprob: -2.1878154277801514
    4. 'tmp' → logprob: -2.6878154277801514
    5. 's' → logprob: -3.8128154277801514
    6. 'x' → logprob: -3.9378154277801514
    7. ' s' → logprob: -4.0628156661987305
    8. 'a' → logprob: -4.4378156661987305
    9. ' tmp' → logprob: -4.5628156661987305
    10. ' i' → logprob: -4.5628156661987305

Token 134: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025505772791802883
    2. 't' → logprob: -7.3775506019592285
    3. ' t' → logprob: -7.7525506019592285
    4. '
' → logprob: -8.25255012512207
    5. ' for' → logprob: -8.37755012512207
    6. ',' → logprob: -8.62755012512207
    7. ' if' → logprob: -8.87755012512207
    8. 'def' → logprob: -9.00255012512207
    9. '    
' → logprob: -9.37755012512207
    10. 's' → logprob: -9.62755012512207

Token 135: ' "' (ID: 392)
  Prédit: ' ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.26507705450057983
    2. '''.' → logprob: -1.5150771141052246
    3. ' ' → logprob: -5.890077114105225
    4. ' '' → logprob: -6.140077114105225
    5. ''' → logprob: -6.265077114105225
    6. ' (' → logprob: -6.640077114105225
    7. ' t' → logprob: -7.015077114105225
    8. ' not' → logprob: -7.265077114105225
    9. ''s' → logprob: -7.515077114105225
    10. 't' → logprob: -7.515077114105225

Token 136: 'AG' (ID: 2971)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.5659884810447693
    2. 'AG' → logprob: -1.315988540649414
    3. 'A' → logprob: -2.940988540649414
    4. 't' → logprob: -3.315988540649414
    5. ''' → logprob: -3.315988540649414
    6. '"' → logprob: -4.190988540649414
    7. ''A' → logprob: -5.565988540649414
    8. ' ' → logprob: -5.565988540649414
    9. ' AG' → logprob: -5.690988540649414
    10. ' ''.' → logprob: -5.940988540649414

Token 137: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00020354038861114532
    2. ''C' → logprob: -10.000203132629395
    3. 't' → logprob: -10.250203132629395
    4. 'CT' → logprob: -10.875203132629395
    5. ''.' → logprob: -11.000203132629395
    6. ''' → logprob: -11.000203132629395
    7. 'AC' → logprob: -11.250203132629395
    8. ' C' → logprob: -11.500203132629395
    9. 'CA' → logprob: -11.875203132629395
    10. 'T' → logprob: -11.875203132629395

Token 138: '"' (ID: 1)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23563037812709808
    2. '"' → logprob: -1.6106303930282593
    3. '''' → logprob: -6.235630512237549
    4. ''est' → logprob: -6.360630512237549
    5. ''in' → logprob: -6.610630512237549
    6. ''''' → logprob: -6.610630512237549
    7. '')' → logprob: -7.485630512237549
    8. ''ap' → logprob: -7.610630512237549
    9. ''appar' → logprob: -7.860630512237549
    10. ' est' → logprob: -7.985630512237549

Token 139: ' pop' (ID: 2735)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24341832101345062
    2. '   ' → logprob: -2.4934182167053223
    3. 'in' → logprob: -2.7434182167053223
    4. 't' → logprob: -4.118418216705322
    5. 'def' → logprob: -4.618418216705322
    6. 's' → logprob: -4.743418216705322
    7. ')' → logprob: -4.868418216705322
    8. ' ' → logprob: -5.118418216705322
    9. ' t' → logprob: -5.618418216705322
    10. 'import' → logprob: -5.993418216705322

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10087893903255463
    2. 't' → logprob: -3.350878953933716
    3. '=' → logprob: -4.350878715515137
    4. ' =' → logprob: -4.725878715515137
    5. 'if' → logprob: -4.975878715515137
    6. '(' → logprob: -5.350878715515137
    7. ':' → logprob: -5.350878715515137
    8. ',' → logprob: -5.850878715515137
    9. ' t' → logprob: -5.850878715515137
    10. '(t' → logprob: -5.850878715515137

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01575959101319313
    2. '
' → logprob: -4.265759468078613
    3. '    
' → logprob: -8.390759468078613
    4. ')' → logprob: -8.390759468078613
    5. 's' → logprob: -8.765759468078613
    6. '\n' → logprob: -8.890759468078613
    7. ',' → logprob: -9.140759468078613
    8. ' for' → logprob: -9.390759468078613
    9. '  
' → logprob: -9.390759468078613
    10. '  ' → logprob: -9.390759468078613

Token 142: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.14834383130073547
    2. ' t' → logprob: -2.023343801498413
    3. '   ' → logprob: -5.523344039916992
    4. ' if' → logprob: -7.523344039916992
    5. 'if' → logprob: -7.523344039916992
    6. 's' → logprob: -8.273344039916992
    7. 'l' → logprob: -9.398344039916992
    8. ' s' → logprob: -9.523344039916992
    9. 'for' → logprob: -10.023344039916992
    10. ' for' → logprob: -10.273344039916992

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.8232690460281447e-05
    2. '=' → logprob: -10.375048637390137
    3. ' =' → logprob: -11.625048637390137
    4. '=[' → logprob: -12.500048637390137
    5. 't' → logprob: -12.750048637390137
    6. ',' → logprob: -14.250048637390137
    7. '0' → logprob: -15.125048637390137
    8. '[t' → logprob: -15.500048637390137
    9. ' [' → logprob: -15.625048637390137
    10. '=t' → logprob: -16.00004768371582

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004137291572988033
    2. '1' → logprob: -5.6291375160217285
    3. ' ' → logprob: -7.7541375160217285
    4. ',' → logprob: -9.75413703918457
    5. '[' → logprob: -10.25413703918457
    6. '   ' → logprob: -12.00413703918457
    7. '(' → logprob: -13.37913703918457
    8. ']' → logprob: -13.37913703918457
    9. ' ,' → logprob: -13.62913703918457
    10. '=' → logprob: -13.87913703918457

Token 145: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -5.991464786347933e-05
    2. ']' → logprob: -10.500060081481934
    3. ' ],' → logprob: -10.625060081481934
    4. ',' → logprob: -11.875060081481934
    5. ' ' → logprob: -15.625060081481934
    6. 't' → logprob: -15.750060081481934
    7. ''],' → logprob: -16.000059127807617
    8. '],
' → logprob: -16.375059127807617
    9. ' ,' → logprob: -17.125059127807617
    10. '},' → logprob: -17.125059127807617

Token 146: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012523093027994037
    2. ' t' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.37512493133545
    4. '	t' → logprob: -16.500125885009766
    5. '  ' → logprob: -17.125125885009766
    6. '`t' → logprob: -17.125125885009766
    7. ' ' → logprob: -17.500125885009766
    8. ')t' → logprob: -19.875125885009766
    9. '1' → logprob: -20.375125885009766
    10. '[' → logprob: -20.375125885009766

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021843716967850924
    2. '1' → logprob: -8.500218391418457
    3. 't' → logprob: -11.375218391418457
    4. '=' → logprob: -13.750218391418457
    5. '[
' → logprob: -13.875218391418457
    6. ' [' → logprob: -15.250218391418457
    7. ']' → logprob: -15.250218391418457
    8. '```' → logprob: -15.625218391418457
    9. '][' → logprob: -16.000219345092773
    10. '
' → logprob: -16.125219345092773

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '2' → logprob: -17.125001907348633
    5. '```' → logprob: -17.875001907348633
    6. '１' → logprob: -18.500001907348633
    7. '
' → logprob: -18.937501907348633
    8. '  ' → logprob: -19.687501907348633
    9. ']' → logprob: -20.187501907348633
    10. '۱' → logprob: -20.375001907348633

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023858259373810142
    2. ']=' → logprob: -8.375238418579102
    3. '=' → logprob: -12.500238418579102
    4. ' ]' → logprob: -12.625238418579102
    5. 't' → logprob: -14.500238418579102
    6. ' =' → logprob: -15.500238418579102
    7. '],' → logprob: -16.6252384185791
    8. ')' → logprob: -16.7502384185791
    9. ']
' → logprob: -17.2502384185791
    10. '']' → logprob: -17.6252384185791

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015066476771607995
    2. ' =' → logprob: -6.501506805419922
    3. '=t' → logprob: -12.376506805419922
    4. 't' → logprob: -16.501506805419922
    5. '=
' → logprob: -18.126506805419922
    6. '=s' → logprob: -18.501506805419922
    7. '=

' → logprob: -18.626506805419922
    8. '=}' → logprob: -18.751506805419922
    9. '＝' → logprob: -19.126506805419922
    10. ',' → logprob: -20.376506805419922

Token 151: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.2127087504486553e-05
    2. ' t' → logprob: -10.750021934509277
    3. 's' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.750021934509277
    5. '	t' → logprob: -16.375022888183594
    6. ' ' → logprob: -17.875022888183594
    7. '  ' → logprob: -19.125022888183594
    8. 'т' → logprob: -19.875022888183594
    9. '`t' → logprob: -19.875022888183594
    10. 'a' → logprob: -20.312522888183594

Token 152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020585214719176292
    2. '1' → logprob: -3.895585298538208
    3. 't' → logprob: -10.895585060119629
    4. ' [' → logprob: -11.895585060119629
    5. ' ' → logprob: -12.270585060119629
    6. ',' → logprob: -12.520585060119629
    7. ']' → logprob: -12.645585060119629
    8. '-' → logprob: -13.270585060119629
    9. '(' → logprob: -13.895585060119629
    10. '][' → logprob: -14.020585060119629

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.183501293184236e-05
    2. ' ' → logprob: -10.12507152557373
    3. '0' → logprob: -10.75007152557373
    4. ']' → logprob: -11.87507152557373
    5. 't' → logprob: -13.75007152557373
    6. '```' → logprob: -14.62507152557373
    7. '-' → logprob: -14.75007152557373
    8. '<|end|>' → logprob: -15.12507152557373
    9. 's' → logprob: -15.50007152557373
    10. ')' → logprob: -15.87507152557373

Token 154: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01232622005045414
    2. ',' → logprob: -4.637326240539551
    3. ']' → logprob: -6.012326240539551
    4. 't' → logprob: -9.13732624053955
    5. ' ],' → logprob: -12.63732624053955
    6. ',t' → logprob: -13.38732624053955
    7. ' ,' → logprob: -13.63732624053955
    8. '),' → logprob: -13.76232624053955
    9. '],
' → logprob: -14.26232624053955
    10. ''],' → logprob: -14.51232624053955

Token 155: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002613358374219388
    2. ' t' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.125261306762695
    4. ' ' → logprob: -18.625261306762695
    5. '`t' → logprob: -19.375261306762695
    6. '0' → logprob: -19.375261306762695
    7. '
' → logprob: -19.500261306762695
    8. '  ' → logprob: -19.875261306762695
    9. '	t' → logprob: -19.875261306762695
    10. '#' → logprob: -21.625261306762695

Token 156: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994210183620453
    2. '[' → logprob: -2.694941997528076
    3. ' ' → logprob: -12.569942474365234
    4. 't' → logprob: -14.319942474365234
    5. '```' → logprob: -14.819942474365234
    6. ' [' → logprob: -14.944942474365234
    7. '   ' → logprob: -15.069942474365234
    8. ']' → logprob: -15.444942474365234
    9. '][' → logprob: -16.444942474365234
    10. '2' → logprob: -16.694942474365234

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.687501907348633
    4. '2' → logprob: -17.812501907348633
    5. '۰' → logprob: -18.000001907348633
    6. ']' → logprob: -18.062501907348633
    7. '```' → logprob: -18.062501907348633
    8. '1' → logprob: -18.062501907348633
    9. '[' → logprob: -19.625001907348633
    10. 't' → logprob: -19.750001907348633

Token 158: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001132593723013997
    2. '0' → logprob: -6.876132488250732
    3. 't' → logprob: -9.37613296508789
    4. '[' → logprob: -12.12613296508789
    5. ']
' → logprob: -12.62613296508789
    6. ' ]' → logprob: -13.00113296508789
    7. '1' → logprob: -13.75113296508789
    8. '#' → logprob: -14.25113296508789
    9. 's' → logprob: -14.62613296508789
    10. ']]' → logprob: -15.00113296508789

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08130031079053879
    2. ' if' → logprob: -2.8313002586364746
    3. 'if' → logprob: -3.9563002586364746
    4. 'for' → logprob: -12.956300735473633
    5. ' for' → logprob: -13.206300735473633
    6. ')' → logprob: -13.331300735473633
    7. ',' → logprob: -13.456300735473633
    8. '
' → logprob: -13.581300735473633
    9. 'def' → logprob: -13.581300735473633
    10. '    
' → logprob: -14.081300735473633

Token 160: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22580476105213165
    2. ' if' → logprob: -1.7258048057556152
    3. '   ' → logprob: -3.7258048057556152
    4. '```' → logprob: -13.975804328918457
    5. ' ' → logprob: -14.100804328918457
    6. 'return' → logprob: -15.475804328918457
    7. '	if' → logprob: -15.850804328918457
    8. 's' → logprob: -15.975804328918457
    9. '    
' → logprob: -16.100805282592773
    10. ')' → logprob: -16.100805282592773

Token 161: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.3132822811603546
    2. '''.' → logprob: -1.3132822513580322
    3. ' '' → logprob: -11.438282012939453
    4. ' ' → logprob: -12.063282012939453
    5. ''' → logprob: -13.688282012939453
    6. ' "".' → logprob: -14.438282012939453
    7. ''s' → logprob: -14.438282012939453
    8. '   ' → logprob: -14.563282012939453
    9. '''' → logprob: -15.063282012939453
    10. '  ' → logprob: -15.188282012939453

Token 162: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0003234262694604695
    2. '''.' → logprob: -8.125323295593262
    3. '(join' → logprob: -11.250323295593262
    4. ''.' → logprob: -12.500323295593262
    5. '.' → logprob: -13.000323295593262
    6. '.join' → logprob: -13.250323295593262
    7. 'in' → logprob: -13.750323295593262
    8. ' ''.' → logprob: -14.000323295593262
    9. '('' → logprob: -14.000323295593262
    10. 'j' → logprob: -14.500323295593262

Token 163: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.5954712075181305e-05
    2. 't' → logprob: -10.250036239624023
    3. '(' → logprob: -14.625036239624023
    4. '	t' → logprob: -17.500036239624023
    5. ' (' → logprob: -18.250036239624023
    6. '(
' → logprob: -19.875036239624023
    7. '[t' → logprob: -20.125036239624023
    8. '(s' → logprob: -20.375036239624023
    9. ')' → logprob: -20.375036239624023
    10. 's' → logprob: -20.500036239624023

Token 164: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0002545448951423168
    2. '.find' → logprob: -8.37525463104248
    3. ' ).' → logprob: -11.25025463104248
    4. ')' → logprob: -12.50025463104248
    5. '').' → logprob: -12.87525463104248
    6. '.' → logprob: -13.50025463104248
    7. 'find' → logprob: -14.37525463104248
    8. '   ' → logprob: -14.37525463104248
    9. '[' → logprob: -14.50025463104248
    10. ' .' → logprob: -14.50025463104248

Token 165: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.8624639324116288e-06
    2. ' find' → logprob: -13.250001907348633
    3. 'count' → logprob: -17.250001907348633
    4. '.find' → logprob: -19.125001907348633
    5. '	find' → logprob: -19.375001907348633
    6. '(find' → logprob: -19.500001907348633
    7. 'fin' → logprob: -19.875001907348633
    8. 'fi' → logprob: -20.000001907348633
    9. 'join' → logprob: -20.500001907348633
    10. '```' → logprob: -20.875001907348633

Token 166: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.3080716346157715e-05
    2. '(' → logprob: -11.375022888183594
    3. '("' → logprob: -11.375022888183594
    4. ''' → logprob: -16.500022888183594
    5. ' ('' → logprob: -17.750022888183594
    6. ' ' → logprob: -19.375022888183594
    7. '(
' → logprob: -19.500022888183594
    8. '(('' → logprob: -19.625022888183594
    9. ''s' → logprob: -19.875022888183594
    10. '   ' → logprob: -20.000022888183594

Token 167: 'AG' (ID: 2971)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001577236340381205
    2. 'AG' → logprob: -6.501577377319336
    3. '('' → logprob: -9.876577377319336
    4. '"' → logprob: -10.751577377319336
    5. ''ag' → logprob: -13.501577377319336
    6. ''GC' → logprob: -15.126577377319336
    7. '   ' → logprob: -15.626577377319336
    8. '(' → logprob: -16.751577377319336
    9. ''A' → logprob: -16.751577377319336
    10. '`' → logprob: -17.001577377319336

Token 168: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.4378848391061183e-05
    2. ''C' → logprob: -11.875014305114746
    3. '')' → logprob: -12.500014305114746
    4. ' C' → logprob: -13.625014305114746
    5. ''' → logprob: -14.375014305114746
    6. ')' → logprob: -14.500014305114746
    7. '>C' → logprob: -15.250014305114746
    8. 'С' → logprob: -16.062515258789062
    9. '0' → logprob: -16.125015258789062
    10. 'A' → logprob: -16.187515258789062

Token 169: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0705038383603096
    2. '')' → logprob: -2.6955039501190186
    3. ')>=' → logprob: -7.9455037117004395
    4. ' )' → logprob: -9.320504188537598
    5. '")' → logprob: -10.070504188537598
    6. '>=' → logprob: -10.570504188537598
    7. ''' → logprob: -10.945504188537598
    8. ' >=' → logprob: -11.820504188537598
    9. ' ')' → logprob: -12.445504188537598
    10. '('' → logprob: -12.570504188537598

Token 170: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.25393930077552795
    2. '>=' → logprob: -1.5039392709732056
    3. ')' → logprob: -6.878939151763916
    4. ')>=' → logprob: -7.003939151763916
    5. ' ' → logprob: -10.753939628601074
    6. ']>=' → logprob: -10.878939628601074
    7. '>' → logprob: -11.378939628601074
    8. ' )' → logprob: -11.503939628601074
    9. ' >' → logprob: -12.628939628601074
    10. '   ' → logprob: -13.003939628601074

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805940806865692
    2. ' ' → logprob: -5.877805709838867
    3. '   ' → logprob: -14.502805709838867
    4. '1' → logprob: -15.002805709838867
    5. '=' → logprob: -15.565305709838867
    6. '  ' → logprob: -16.940305709838867
    7. ' ' → logprob: -17.565305709838867
    8. '    ' → logprob: -17.627805709838867
    9. '۰' → logprob: -17.940305709838867
    10. ')' → logprob: -18.127805709838867

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -15.625021934509277
    4. '   ' → logprob: -16.87502098083496
    5. '```' → logprob: -18.31252098083496
    6. '۰' → logprob: -18.37502098083496
    7. '  ' → logprob: -18.62502098083496
    8. ')' → logprob: -18.87502098083496
    9. '2' → logprob: -19.25002098083496
    10. ' ' → logprob: -19.43752098083496

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49650460481643677
    2. '   ' → logprob: -1.996504545211792
    3. '       ' → logprob: -1.996504545211792
    4. '==' → logprob: -3.121504545211792
    5. ')' → logprob: -3.746504545211792
    6. ':
' → logprob: -3.746504545211792
    7. ':return' → logprob: -3.996504545211792
    8. '=' → logprob: -5.496504783630371
    9. ' ==' → logprob: -6.121504783630371
    10. '>' → logprob: -6.996504783630371

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16491040587425232
    2. '   ' → logprob: -1.9149104356765747
    3. ' return' → logprob: -6.289910316467285
    4. '0' → logprob: -6.539910316467285
    5. 'return' → logprob: -7.289910316467285
    6. '	' → logprob: -7.789910316467285
    7. '	return' → logprob: -9.164910316467285
    8. ' ' → logprob: -9.789910316467285
    9. ' ' → logprob: -10.664910316467285
    10. ':return' → logprob: -10.914910316467285

Token 175: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10278858989477158
    2. '   ' → logprob: -3.3527886867523193
    3. ' return' → logprob: -3.3527886867523193
    4. '       ' → logprob: -3.6027886867523193
    5. '	return' → logprob: -8.602788925170898
    6. '0' → logprob: -8.852788925170898
    7. ' ' → logprob: -9.477788925170898
    8. '  ' → logprob: -10.977788925170898
    9. '           ' → logprob: -11.352788925170898
    10. '
' → logprob: -11.477788925170898

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'False' → logprob: -15.125005722045898
    4. '   ' → logprob: -19.1250057220459
    5. '۰' → logprob: -19.3750057220459
    6. ' False' → logprob: -19.3750057220459
    7. '000' → logprob: -20.1250057220459
    8. 'false' → logprob: -20.5000057220459
    9. '  ' → logprob: -20.7500057220459
    10. '00' → logprob: -20.8750057220459

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'False' → logprob: -15.750005722045898
    4. '   ' → logprob: -17.8750057220459
    5. '  ' → logprob: -19.6250057220459
    6. '1' → logprob: -19.6250057220459
    7. '۰' → logprob: -19.7500057220459
    8. '000' → logprob: -20.5000057220459
    9. '０' → logprob: -20.8750057220459
    10. '    ' → logprob: -20.8750057220459

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006245157681405544
    2. '
' → logprob: -5.381245136260986
    3. '    
' → logprob: -7.381245136260986
    4. '\n' → logprob: -7.881245136260986
    5. '	return' → logprob: -8.756245613098145
    6. 'return' → logprob: -8.756245613098145
    7. '  
' → logprob: -9.256245613098145
    8. 'newline' → logprob: -10.131245613098145
    9. '  ' → logprob: -10.506245613098145
    10. '   
' → logprob: -10.756245613098145

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002502535644453019
    2. '  ' → logprob: -9.750249862670898
    3. '    
' → logprob: -10.125249862670898
    4. '\t' → logprob: -10.750249862670898
    5. 'return' → logprob: -10.875249862670898
    6. '\n' → logprob: -11.250249862670898
    7. '\' → logprob: -11.375249862670898
    8. ' ' → logprob: -11.500249862670898
    9. ' ' → logprob: -11.625249862670898
    10. '  
' → logprob: -11.875249862670898

Token 180: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5767430663108826
    2. '   ' → logprob: -0.8267430663108826
    3. '#' (adapté à ' #') → logprob: -7.326743125915527
    4. ' t' → logprob: -8.951743125915527
    5. '	t' → logprob: -12.326743125915527
    6. ' ' → logprob: -12.951743125915527
    7. 's' → logprob: -13.451743125915527
    8. '
' → logprob: -13.576743125915527
    9. 'return' → logprob: -13.701743125915527
    10. '  ' → logprob: -13.826743125915527

Token 181: ' revenir' (ID: 88322)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010654204525053501
    2. '   ' → logprob: -4.635653972625732
    3. ' t' → logprob: -7.135653972625732
    4. '
' → logprob: -9.63565444946289
    5. '#' → logprob: -11.26065444946289
    6. 'return' → logprob: -11.38565444946289
    7. 'def' → logprob: -13.13565444946289
    8. 's' → logprob: -13.51065444946289
    9. '[t' → logprob: -13.51065444946289
    10. ' ' → logprob: -13.63565444946289

Token 182: ' à' (ID: 1221)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09014733880758286
    2. ' t' → logprob: -2.8401472568511963
    3. '   ' → logprob: -3.5901472568511963
    4. ' ' → logprob: -9.840147018432617
    5. '	t' → logprob: -9.965147018432617
    6. '    ' → logprob: -10.215147018432617
    7. '       ' → logprob: -10.840147018432617
    8. '[t' → logprob: -11.215147018432617
    9. '  ' → logprob: -11.590147018432617
    10. '(t' → logprob: -12.215147018432617

Token 183: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07541964948177338
    2. 's' → logprob: -3.2004196643829346
    3. ' t' → logprob: -4.7004194259643555
    4. 'original' → logprob: -4.7004194259643555
    5. 'list' → logprob: -5.3254194259643555
    6. '[' → logprob: -6.7004194259643555
    7. ' original' → logprob: -6.9504194259643555
    8. ' ' → logprob: -7.0754194259643555
    9. '(t' → logprob: -7.2004194259643555
    10. ' s' → logprob: -7.3254194259643555

Token 184: ' normale' (ID: 57494)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.1989118754863739
    2. 's' → logprob: -2.8239119052886963
    3. 'orig' → logprob: -3.0739119052886963
    4. 'origine' → logprob: -3.3239119052886963
    5. 'origin' → logprob: -4.323911666870117
    6. 'list' → logprob: -4.698911666870117
    7. 't' → logprob: -4.823911666870117
    8. '0' → logprob: -6.448911666870117
    9. 'ordre' → logprob: -6.698911666870117
    10. ' original' → logprob: -6.823911666870117

Token 185: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6936653256416321
    2. '   ' → logprob: -0.6936653256416321
    3. ' t' → logprob: -7.568665504455566
    4. '	t' → logprob: -14.443665504455566
    5. '  ' → logprob: -14.568665504455566
    6. ' ' → logprob: -14.943665504455566
    7. '`t' → logprob: -15.193665504455566
    8. '    ' → logprob: -17.06866455078125
    9. '```' → logprob: -18.06866455078125
    10. '[t' → logprob: -18.56866455078125

Token 186: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07901151478290558
    2. '   ' → logprob: -2.5790114402770996
    3. ' t' → logprob: -9.204011917114258
    4. '	t' → logprob: -11.454011917114258
    5. '`t' → logprob: -11.579011917114258
    6. ' ' → logprob: -14.704011917114258
    7. '```' → logprob: -14.829011917114258
    8. '  ' → logprob: -15.329011917114258
    9. '\t' → logprob: -16.454011917114258
    10. '[t' → logprob: -17.079011917114258

Token 187: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0009569590329192579
    2. '   ' → logprob: -7.000957012176514
    3. ' t' → logprob: -10.000956535339355
    4. '`t' → logprob: -16.875957489013672
    5. '	t' → logprob: -17.250957489013672
    6. ' ' → logprob: -18.375957489013672
    7. '  ' → logprob: -18.500957489013672
    8. '[t' → logprob: -18.625957489013672
    9. '(t' → logprob: -20.250957489013672
    10. 's' → logprob: -20.250957489013672

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001600347168277949
    2. '=' → logprob: -8.750160217285156
    3. ' =' → logprob: -14.250160217285156
    4. '0' → logprob: -14.625160217285156
    5. 't' → logprob: -15.125160217285156
    6. '=[' → logprob: -16.125160217285156
    7. '[:]' → logprob: -17.750160217285156
    8. ' ' → logprob: -18.875160217285156
    9. '[::-' → logprob: -19.000160217285156
    10. '[
' → logprob: -19.250160217285156

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028162896633148193
    2. '1' → logprob: -5.877816200256348
    3. '[' → logprob: -12.127816200256348
    4. ' ' → logprob: -12.127816200256348
    5. '   ' → logprob: -15.377816200256348
    6. '=' → logprob: -15.877816200256348
    7. ']' → logprob: -16.002817153930664
    8. ' =' → logprob: -17.377817153930664
    9. ',' → logprob: -18.002817153930664
    10. 't' → logprob: -18.127817153930664

Token 190: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3872836232185364
    2. '],' → logprob: -1.1372835636138916
    3. ']' → logprob: -7.887283802032471
    4. ',t' → logprob: -11.012283325195312
    5. '),' → logprob: -11.512283325195312
    6. '>,' → logprob: -12.512283325195312
    7. '},' → logprob: -12.762283325195312
    8. ' ],' → logprob: -13.512283325195312
    9. ' ,' → logprob: -14.137283325195312
    10. ']=' → logprob: -14.512283325195312

Token 191: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.240481914370321e-05
    2. ' t' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.250052452087402
    4. '<|end|>' → logprob: -15.250052452087402
    5. '`t' → logprob: -15.375052452087402
    6. '0' → logprob: -16.500051498413086
    7. '	t' → logprob: -17.000051498413086
    8. ' ' → logprob: -17.625051498413086
    9. '  ' → logprob: -18.000051498413086
    10. '
' → logprob: -19.625051498413086

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011934977024793625
    2. 't' → logprob: -5.011934757232666
    3. '1' → logprob: -5.261934757232666
    4. '0' → logprob: -11.511935234069824
    5. ' t' → logprob: -12.886935234069824
    6. ' [' → logprob: -13.386935234069824
    7. '(' → logprob: -13.386935234069824
    8. '=' → logprob: -13.761935234069824
    9. '   ' → logprob: -13.761935234069824
    10. '{' → logprob: -14.386935234069824

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '0' → logprob: -11.500011444091797
    3. ' ' → logprob: -15.125011444091797
    4. 't' → logprob: -15.625011444091797
    5. '[' → logprob: -16.000011444091797
    6. '   ' → logprob: -16.000011444091797
    7. '2' → logprob: -16.125011444091797
    8. '```' → logprob: -16.500011444091797
    9. '
' → logprob: -17.062511444091797
    10. '

' → logprob: -17.687511444091797

Token 194: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013828016817569733
    2. '=' → logprob: -4.388827800750732
    3. ']=' → logprob: -6.888827800750732
    4. 't' → logprob: -8.26382827758789
    5. ' =' → logprob: -10.38882827758789
    6. ' ]' → logprob: -12.76382827758789
    7. '0' → logprob: -13.26382827758789
    8. '=t' → logprob: -13.63882827758789
    9. ')' → logprob: -13.88882827758789
    10. 's' → logprob: -14.01382827758789

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.632542913896032e-05
    2. ' =' → logprob: -10.000046730041504
    3. '=t' → logprob: -14.375046730041504
    4. 't' → logprob: -15.500046730041504
    5. '=

' → logprob: -19.250045776367188
    6. '＝' → logprob: -19.750045776367188
    7. '=
' → logprob: -20.000045776367188
    8. '=}' → logprob: -20.375045776367188
    9. ']=' → logprob: -20.750045776367188
    10. ')=' → logprob: -21.125045776367188

Token 196: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.742448022123426e-05
    2. 's' → logprob: -9.750067710876465
    3. ' t' → logprob: -12.000067710876465
    4. '0' → logprob: -13.500067710876465
    5. '   ' → logprob: -14.375067710876465
    6. '1' → logprob: -14.750067710876465
    7. ' ' → logprob: -15.125067710876465
    8. '    ' → logprob: -16.62506675720215
    9. '	t' → logprob: -17.12506675720215
    10. '

' → logprob: -17.50006675720215

Token 197: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008626987226307392
    2. '1' → logprob: -4.758626937866211
    3. 't' → logprob: -11.883626937866211
    4. '(' → logprob: -12.883626937866211
    5. '   ' → logprob: -13.258626937866211
    6. ' ' → logprob: -14.383626937866211
    7. '0' → logprob: -15.258626937866211
    8. ',' → logprob: -17.00862693786621
    9. ' [' → logprob: -17.00862693786621
    10. '{' → logprob: -17.13362693786621

Token 198: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011872532777488232
    2. '1' → logprob: -6.751187324523926
    3. 't' → logprob: -11.876187324523926
    4. '[' → logprob: -12.251187324523926
    5. ' ' → logprob: -12.751187324523926
    6. 's' → logprob: -13.251187324523926
    7. '   ' → logprob: -15.376187324523926
    8. ']' → logprob: -15.751187324523926
    9. '(' → logprob: -16.12618637084961
    10. '۰' → logprob: -17.06368637084961

Token 199: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. 't' → logprob: -12.125007629394531
    3. '],' → logprob: -13.875007629394531
    4. ' ,' → logprob: -14.125007629394531
    5. '0' → logprob: -14.250007629394531
    6. ',t' → logprob: -15.500007629394531
    7. '),' → logprob: -17.00000762939453
    8. ']' → logprob: -17.62500762939453
    9. '   ' → logprob: -17.87500762939453
    10. ' t' → logprob: -18.00000762939453

Token 200: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.7729658540920354e-05
    2. ' t' → logprob: -10.500027656555176
    3. '0' → logprob: -16.000028610229492
    4. '`t' → logprob: -18.875028610229492
    5. '	t' → logprob: -18.875028610229492
    6. '   ' → logprob: -20.500028610229492
    7. 's' → logprob: -21.250028610229492
    8. ' ' → logprob: -22.625028610229492
    9. '  ' → logprob: -22.750028610229492
    10. '[t' → logprob: -23.125028610229492

Token 201: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005259964615106583
    2. '[' → logprob: -5.255259990692139
    3. 't' → logprob: -11.00525951385498
    4. '   ' → logprob: -12.25525951385498
    5. ' ' → logprob: -12.50525951385498
    6. '2' → logprob: -15.25525951385498
    7. '(' → logprob: -15.50525951385498
    8. '```' → logprob: -16.567760467529297
    9. ',' → logprob: -16.755260467529297
    10. '    ' → logprob: -17.005260467529297

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 't' → logprob: -17.75
    4. '2' → logprob: -18.375
    5. '۰' → logprob: -18.375
    6. '1' → logprob: -18.75
    7. '   ' → logprob: -19.25
    8. '０' → logprob: -20.0
    9. '[' → logprob: -20.5625
    10. '০' → logprob: -21.1875

Token 203: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030384622514247894
    2. ')' → logprob: -4.280384540557861
    3. '   ' → logprob: -4.655384540557861
    4. '<|end|>' → logprob: -5.655384540557861
    5. 't' → logprob: -6.780384540557861
    6. ']
' → logprob: -7.280384540557861
    7. '
' → logprob: -7.530384540557861
    8. '}' → logprob: -8.40538501739502
    9. '<|end|>' → logprob: -8.40538501739502
    10. 'def' → logprob: -9.90538501739502

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006316631333902478
    2. 't' → logprob: -8.625631332397461
    3. '
' → logprob: -8.875631332397461
    4. '    
' → logprob: -9.500631332397461
    5. '\' → logprob: -9.875631332397461
    6. 'if' → logprob: -10.625631332397461
    7. '\t' → logprob: -10.750631332397461
    8. ')' → logprob: -10.875631332397461
    9. '    ' → logprob: -11.000631332397461
    10. '\n' → logprob: -11.000631332397461

Token 205: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23878490924835205
    2. '#' (adapté à ' #') → logprob: -1.863784909248352
    3. 't' → logprob: -2.8637847900390625
    4. ' ' → logprob: -9.738784790039062
    5. 'return' → logprob: -10.113784790039062
    6. ' #' → logprob: -10.488784790039062
    7. '	' → logprob: -10.488784790039062
    8. '
' → logprob: -10.738784790039062
    9. 'if' → logprob: -10.738784790039062
    10. '  ' → logprob: -11.113784790039062

Token 206: ' swap' (ID: 25489)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003236536169424653
    2. '   ' → logprob: -6.128236770629883
    3. '#' → logprob: -7.003236770629883
    4. ' t' → logprob: -9.128236770629883
    5. 'return' → logprob: -11.253236770629883
    6. 'for' → logprob: -11.628236770629883
    7. ' ' → logprob: -12.253236770629883
    8. '
' → logprob: -13.503236770629883
    9. 'if' → logprob: -13.628236770629883
    10. 's' → logprob: -14.128236770629883

Token 207: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016143223270773888
    2. '0' → logprob: -4.266143321990967
    3. '   ' → logprob: -7.016143321990967
    4. '1' → logprob: -7.141143321990967
    5. ' t' → logprob: -9.016142845153809
    6. '(' → logprob: -9.516142845153809
    7. ' ' → logprob: -9.891142845153809
    8. '[' → logprob: -10.266142845153809
    9. '2' → logprob: -12.016142845153809
    10. '#' → logprob: -14.266142845153809

Token 208: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1421584188938141
    2. '1' → logprob: -2.2671585083007812
    3. '0' → logprob: -3.6421585083007812
    4. '[' → logprob: -6.142158508300781
    5. '2' → logprob: -8.642158508300781
    6. '(' → logprob: -8.892158508300781
    7. ' t' → logprob: -8.892158508300781
    8. '   ' → logprob: -9.767158508300781
    9. ' ' → logprob: -10.267158508300781
    10. '#' → logprob: -12.017158508300781

Token 209: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02066882885992527
    2. 'et' → logprob: -4.895668983459473
    3. 'and' → logprob: -5.145668983459473
    4. ' et' → logprob: -5.645668983459473
    5. ' ,' → logprob: -6.395668983459473
    6. ' and' → logprob: -6.520668983459473
    7. 't' → logprob: -8.645668983459473
    8. '1' → logprob: -9.395668983459473
    9. ' t' → logprob: -9.645668983459473
    10. ' ' → logprob: -9.770668983459473

Token 210: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.500012397766113
    3. 't' → logprob: -13.250012397766113
    4. '   ' → logprob: -14.500012397766113
    5. '3' → logprob: -17.50001335144043
    6. '２' → logprob: -18.87501335144043
    7. '  ' → logprob: -19.00001335144043
    8. ' t' → logprob: -19.62501335144043
    9. '[' → logprob: -20.00001335144043
    10. '۲' → logprob: -20.12501335144043

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.2500057220459
    4. '２' → logprob: -17.8750057220459
    5. 't' → logprob: -18.2500057220459
    6. '۲' → logprob: -18.7500057220459
    7. '[' → logprob: -19.2500057220459
    8. '3' → logprob: -19.6250057220459
    9. '  ' → logprob: -19.8125057220459
    10. '```' → logprob: -20.3750057220459

Token 212: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10074733942747116
    2. '   ' → logprob: -2.3507473468780518
    3. ' t' → logprob: -7.600747108459473
    4. '	t' → logprob: -10.850747108459473
    5. '
' → logprob: -11.100747108459473
    6. ',' → logprob: -13.225747108459473
    7. '`t' → logprob: -13.475747108459473
    8. ' ' → logprob: -13.975747108459473
    9. '  ' → logprob: -14.350747108459473
    10. '```' → logprob: -14.850747108459473

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20147162675857544
    2. 't' → logprob: -1.7014715671539307
    3. ' t' → logprob: -9.951471328735352
    4. '	t' → logprob: -11.951471328735352
    5. '`t' → logprob: -13.076471328735352
    6. '```' → logprob: -13.826471328735352
    7. '
' → logprob: -14.201471328735352
    8. ' ' → logprob: -15.826471328735352
    9. '``' → logprob: -16.32647132873535
    10. '   ' → logprob: -16.95147132873535

Token 214: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00762531952932477
    2. '   ' → logprob: -5.007625102996826
    3. ' t' → logprob: -7.007625102996826
    4. '	t' → logprob: -12.632625579833984
    5. '`t' → logprob: -13.882625579833984
    6. '
' → logprob: -16.132625579833984
    7. ' ' → logprob: -16.382625579833984
    8. '(t' → logprob: -17.507625579833984
    9. '  ' → logprob: -17.632625579833984
    10. '```' → logprob: -19.007625579833984

Token 215: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004896456957794726
    2. '1' → logprob: -7.625489711761475
    3. 't' → logprob: -13.750489234924316
    4. ',' → logprob: -15.500489234924316
    5. '   ' → logprob: -16.000490188598633
    6. '
' → logprob: -16.625490188598633
    7. '#' → logprob: -17.625490188598633
    8. '=' → logprob: -17.875490188598633
    9. ' ' → logprob: -17.875490188598633
    10. 's' → logprob: -18.500490188598633

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '[' → logprob: -17.375
    5. '2' → logprob: -17.625
    6. '１' → logprob: -19.5
    7. '(' → logprob: -19.625
    8. '  ' → logprob: -19.875
    9. '```' → logprob: -20.125
    10. '0' → logprob: -20.125

Token 217: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041028582490980625
    2. '],' → logprob: -5.50410270690918
    3. ' ,' → logprob: -11.12910270690918
    4. ']' → logprob: -12.00410270690918
    5. ',t' → logprob: -13.75410270690918
    6. '),' → logprob: -14.37910270690918
    7. ' t' → logprob: -14.75410270690918
    8. '   ' → logprob: -15.00410270690918
    9. '‌,' → logprob: -15.00410270690918
    10. ' ' → logprob: -15.25410270690918

Token 218: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004898841143585742
    2. ' t' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.250490188598633
    4. '`t' → logprob: -16.625490188598633
    5. '	t' → logprob: -17.125490188598633
    6. ' ' → logprob: -17.125490188598633
    7. '  ' → logprob: -17.375490188598633
    8. '    ' → logprob: -20.125490188598633
    9. ' т' → logprob: -20.625490188598633
    10. '
' → logprob: -20.875490188598633

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009299254161305726
    2. '2' → logprob: -7.250929832458496
    3. 't' → logprob: -8.625929832458496
    4. ' ' → logprob: -10.625929832458496
    5. ',' → logprob: -12.000929832458496
    6. ' [' → logprob: -13.000929832458496
    7. ']' → logprob: -13.000929832458496
    8. ' t' → logprob: -13.375929832458496
    9. '   ' → logprob: -13.500929832458496
    10. '][' → logprob: -13.625929832458496

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '２' → logprob: -17.00002670288086
    4. '   ' → logprob: -17.25002670288086
    5. 't' → logprob: -18.00002670288086
    6. '۲' → logprob: -18.12502670288086
    7. '  ' → logprob: -18.87502670288086
    8. '1' → logprob: -20.50002670288086
    9. '    ' → logprob: -20.50002670288086
    10. '২' → logprob: -20.62502670288086

Token 221: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02997078001499176
    2. ' =' → logprob: -3.52997088432312
    3. ']' → logprob: -8.9049711227417
    4. 't' → logprob: -10.1549711227417
    5. '=t' → logprob: -10.2799711227417
    6. ']=' → logprob: -11.9049711227417
    7. ')' → logprob: -13.5299711227417
    8. ' t' → logprob: -14.1549711227417
    9. ' ' → logprob: -14.1549711227417
    10. ',' → logprob: -14.4049711227417

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01816597953438759
    2. ' =' → logprob: -4.0181660652160645
    3. '=t' → logprob: -11.143165588378906
    4. ',' → logprob: -13.518165588378906
    5. 't' → logprob: -15.518165588378906
    6. ' t' → logprob: -17.143165588378906
    7. ' ' → logprob: -18.143165588378906
    8. '   ' → logprob: -18.518165588378906
    9. '=
' → logprob: -19.143165588378906
    10. '＝' → logprob: -19.518165588378906

Token 223: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.506661833962426e-05
    2. ' t' → logprob: -9.37508487701416
    3. '	t' → logprob: -16.125085830688477
    4. '   ' → logprob: -16.375085830688477
    5. '`t' → logprob: -17.625085830688477
    6. 's' → logprob: -17.750085830688477
    7. ' ' → logprob: -19.125085830688477
    8. '  ' → logprob: -20.375085830688477
    9. ')t' → logprob: -20.500085830688477
    10. '[t' → logprob: -20.625085830688477

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11305442452430725
    2. 't' → logprob: -2.3630545139312744
    3. '2' → logprob: -4.363054275512695
    4. ' ' → logprob: -11.613054275512695
    5. ',' → logprob: -11.988054275512695
    6. ' t' → logprob: -12.488054275512695
    7. '   ' → logprob: -12.988054275512695
    8. '	t' → logprob: -13.488054275512695
    9. '[t' → logprob: -14.113054275512695
    10. '```' → logprob: -14.738054275512695

Token 225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3133271336555481
    2. 't' → logprob: -1.3133270740509033
    3. ' t' → logprob: -10.438326835632324
    4. ' ' → logprob: -11.063326835632324
    5. '[' → logprob: -11.063326835632324
    6. 's' → logprob: -12.813326835632324
    7. '   ' → logprob: -14.188326835632324
    8. '	t' → logprob: -14.438326835632324
    9. '  ' → logprob: -15.313326835632324
    10. 'т' → logprob: -15.688326835632324

Token 226: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.939851037808694e-05
    2. 't' → logprob: -10.750029563903809
    3. ',t' → logprob: -12.750029563903809
    4. '[' → logprob: -13.375029563903809
    5. ' ,' → logprob: -13.375029563903809
    6. '],' → logprob: -13.625029563903809
    7. ']' → logprob: -15.250029563903809
    8. '   ' → logprob: -15.500029563903809
    9. ' t' → logprob: -15.875029563903809
    10. 's' → logprob: -17.375028610229492

Token 227: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00861468818038702
    2. ' t' → logprob: -4.758614540100098
    3. 's' → logprob: -16.383615493774414
    4. '	t' → logprob: -16.883615493774414
    5. '   ' → logprob: -17.133615493774414
    6. ' ' → logprob: -17.258615493774414
    7. '`t' → logprob: -18.508615493774414
    8. '<|end|>' → logprob: -19.383615493774414
    9. ' s' → logprob: -19.633615493774414
    10. '  ' → logprob: -19.758615493774414

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013269031187519431
    2. '1' → logprob: -6.626327037811279
    3. '(' → logprob: -15.501326560974121
    4. '```' → logprob: -15.751326560974121
    5. ',' → logprob: -16.001327514648438
    6. ' [' → logprob: -16.126327514648438
    7. '[
' → logprob: -16.376327514648438
    8. '   ' → logprob: -16.501327514648438
    9. ' ' → logprob: -16.626327514648438
    10. ']' → logprob: -16.876327514648438

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.625000953674316
    3. '１' → logprob: -16.625
    4. '۱' → logprob: -17.25
    5. 't' → logprob: -17.3125
    6. '```' → logprob: -17.375
    7. '[' → logprob: -18.0
    8. '   ' → logprob: -18.125
    9. '3' → logprob: -18.1875
    10. '१' → logprob: -18.25

Token 230: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09154623746871948
    2. '   ' → logprob: -2.7165462970733643
    3. ']' → logprob: -4.216546058654785
    4. '<|end|>' → logprob: -5.466546058654785
    5. '}' → logprob: -6.591546058654785
    6. ')
' → logprob: -7.466546058654785
    7. '#' → logprob: -8.466546058654785
    8. 't' → logprob: -9.466546058654785
    9. '  ' → logprob: -10.216546058654785
    10. '```' → logprob: -10.341546058654785

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016679130494594574
    2. ' if' → logprob: -5.141679286956787
    3. '<|end|>' → logprob: -5.141679286956787
    4. '
' → logprob: -5.516679286956787
    5. '  
' → logprob: -8.641678810119629
    6. ' ' → logprob: -8.641678810119629
    7. 'if' → logprob: -8.766678810119629
    8. '  ' → logprob: -9.516678810119629
    9. '    
' → logprob: -9.641678810119629
    10. ')' → logprob: -9.766678810119629

Token 232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16243739426136017
    2. ' if' → logprob: -1.9124374389648438
    3. '   ' → logprob: -6.162437438964844
    4. '<|end|>' → logprob: -9.912437438964844
    5. ')' → logprob: -10.662437438964844
    6. '```' → logprob: -11.537437438964844
    7. ' ' → logprob: -11.787437438964844
    8. 'If' → logprob: -13.162437438964844
    9. '
' → logprob: -13.412437438964844
    10. 'for' → logprob: -13.537437438964844

Token 233: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.4740983843803406
    2. '''.' → logprob: -0.9740983843803406
    3. ' ' → logprob: -11.349098205566406
    4. ' '' → logprob: -12.349098205566406
    5. ''' → logprob: -12.849098205566406
    6. '''' → logprob: -13.724098205566406
    7. ''.' → logprob: -15.099098205566406
    8. '   ' → logprob: -15.224098205566406
    9. '','.' → logprob: -15.349098205566406
    10. '('' → logprob: -15.724098205566406

Token 234: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0001170132018160075
    2. '''.' → logprob: -9.125117301940918
    3. ''.' → logprob: -13.000117301940918
    4. 'find' → logprob: -13.125117301940918
    5. '.join' → logprob: -13.500117301940918
    6. '(join' → logprob: -14.125117301940918
    7. ' ''.' → logprob: -14.500117301940918
    8. ''' → logprob: -14.500117301940918
    9. '('' → logprob: -15.375117301940918
    10. ' join' → logprob: -16.0001163482666

Token 235: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00023095356300473213
    2. 't' → logprob: -8.37523078918457
    3. '	t' → logprob: -15.75023078918457
    4. '(' → logprob: -16.00023078918457
    5. '('' → logprob: -16.25023078918457
    6. '(
' → logprob: -18.12523078918457
    7. '```' → logprob: -18.37523078918457
    8. 's' → logprob: -18.50023078918457
    9. '   ' → logprob: -18.87523078918457
    10. ' (' → logprob: -19.00023078918457

Token 236: ').' (ID: 741)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.03013053722679615
    2. ').' → logprob: -4.155130386352539
    3. 't' → logprob: -4.280130386352539
    4. ')' → logprob: -9.280130386352539
    5. '[t' → logprob: -10.905130386352539
    6. 's' → logprob: -11.155130386352539
    7. '(s' → logprob: -11.655130386352539
    8. '	t' → logprob: -11.780130386352539
    9. ')t' → logprob: -12.905130386352539
    10. '   ' → logprob: -12.905130386352539

Token 237: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.9361264946837764e-07
    2. ' find' → logprob: -16.125
    3. '(find' → logprob: -17.25
    4. '.find' → logprob: -18.75
    5. '	find' → logprob: -19.5
    6. ')' → logprob: -20.375
    7. '```' → logprob: -21.5
    8. ')find' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. 'join' → logprob: -22.0

Token 238: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.305326966568828e-05
    2. '(' → logprob: -9.375093460083008
    3. ''' → logprob: -12.000093460083008
    4. '("' → logprob: -13.375093460083008
    5. ' ('' → logprob: -15.250093460083008
    6. ''s' → logprob: -15.875093460083008
    7. '(
' → logprob: -16.625093460083008
    8. ' ' → logprob: -18.250093460083008
    9. ''S' → logprob: -18.250093460083008
    10. '   ' → logprob: -19.125093460083008

Token 239: 'AG' (ID: 2971)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6933338642120361
    2. 'AG' → logprob: -0.6933338642120361
    3. '"' → logprob: -8.818333625793457
    4. '('' → logprob: -11.693333625793457
    5. '   ' → logprob: -11.943333625793457
    6. 'AGN' → logprob: -12.068333625793457
    7. ' AG' → logprob: -12.443333625793457
    8. ''ag' → logprob: -12.693333625793457
    9. ''A' → logprob: -13.318333625793457
    10. 'A' → logprob: -13.568333625793457

Token 240: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.77627644513268e-06
    2. ' C' → logprob: -12.875008583068848
    3. 'A' → logprob: -13.000008583068848
    4. '<|end|>' → logprob: -14.000008583068848
    5. '>C' → logprob: -14.687508583068848
    6. 'AC' → logprob: -14.812508583068848
    7. 'С' → logprob: -14.937508583068848
    8. ' ' → logprob: -15.125008583068848
    9. ')' → logprob: -15.562508583068848
    10. ''C' → logprob: -15.687508583068848

Token 241: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0010547225829213858
    2. ')' → logprob: -7.251054763793945
    3. '")' → logprob: -8.126054763793945
    4. ''' → logprob: -10.001054763793945
    5. ')>=' → logprob: -13.751054763793945
    6. '`)' → logprob: -14.751054763793945
    7. '']' → logprob: -14.876054763793945
    8. ' ')' → logprob: -15.126054763793945
    9. '>=' → logprob: -15.251054763793945
    10. '"' → logprob: -15.251054763793945

Token 242: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.26048964262008667
    2. '>=' → logprob: -1.5104897022247314
    3. ')' → logprob: -4.885489463806152
    4. ')>=' → logprob: -7.385489463806152
    5. ' ' → logprob: -9.010489463806152
    6. ']>=' → logprob: -9.385489463806152
    7. ' )' → logprob: -9.635489463806152
    8. '>' → logprob: -10.760489463806152
    9. '()' → logprob: -11.260489463806152
    10. ']' → logprob: -11.635489463806152

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013267839094623923
    2. ' ' → logprob: -6.626326560974121
    3. '-' → logprob: -14.751326560974121
    4. '1' → logprob: -16.251327514648438
    5. '>=' → logprob: -16.376327514648438
    6. ')' → logprob: -16.626327514648438
    7. '   ' → logprob: -16.876327514648438
    8. '  ' → logprob: -17.001327514648438
    9. '=' → logprob: -17.126327514648438
    10. '>' → logprob: -17.126327514648438

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '>=' → logprob: -19.12500762939453
    4. '1' → logprob: -19.75000762939453
    5. '-' → logprob: -19.87500762939453
    6. ')' → logprob: -21.12500762939453
    7. '۰' → logprob: -21.25000762939453
    8. '   ' → logprob: -21.37500762939453
    9. '>' → logprob: -21.62500762939453
    10. '012' → logprob: -21.68750762939453

Token 245: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05674809589982033
    2. '   ' → logprob: -3.806748151779175
    3. '==' → logprob: -4.056747913360596
    4. ':' → logprob: -5.681747913360596
    5. '=' → logprob: -5.681747913360596
    6. '!=' → logprob: -6.431747913360596
    7. ' ==' → logprob: -6.556747913360596
    8. ')' → logprob: -6.681747913360596
    9. '>' → logprob: -6.806747913360596
    10. ':
' → logprob: -7.181747913360596

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.1557283111615106e-05
    2. '   ' → logprob: -10.500041961669922
    3. '0' → logprob: -11.500041961669922
    4. ' return' → logprob: -13.500041961669922
    5. ' ' → logprob: -13.875041961669922
    6. 'return' → logprob: -14.750041961669922
    7. '      ' → logprob: -15.250041961669922
    8. '     ' → logprob: -15.250041961669922
    9. '	' → logprob: -15.625041961669922
    10. '           ' → logprob: -15.875041961669922

Token 247: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24758388102054596
    2. ' return' → logprob: -1.7475838661193848
    3. '0' → logprob: -3.7475838661193848
    4. '       ' → logprob: -4.122583866119385
    5. '   ' → logprob: -5.247583866119385
    6. ' ' → logprob: -9.872584342956543
    7. '	return' → logprob: -11.622584342956543
    8. '
' → logprob: -11.747584342956543
    9. '           ' → logprob: -12.122584342956543
    10. '```' → logprob: -13.372584342956543

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. ' ' → logprob: -20.12548828125
    4. '۰' → logprob: -20.37548828125
    5. '000' → logprob: -20.62548828125
    6. 'False' → logprob: -21.62548828125
    7. '00' → logprob: -21.62548828125
    8. '1' → logprob: -21.75048828125
    9. '   ' → logprob: -21.81298828125
    10. ' ' → logprob: -21.87548828125

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '۰' → logprob: -20.875
    4. '000' → logprob: -21.0
    5. '   ' → logprob: -22.625
    6. '０' → logprob: -23.125
    7. '00' → logprob: -23.25
    8. 'False' → logprob: -23.25
    9. '০' → logprob: -23.625
    10. ' ' → logprob: -23.625

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00232296041212976
    2. 't' → logprob: -6.877323150634766
    3. '
' → logprob: -7.127323150634766
    4. '    
' → logprob: -8.252323150634766
    5. '\t' → logprob: -9.877323150634766
    6. '\n' → logprob: -10.127323150634766
    7. '  
' → logprob: -10.252323150634766
    8. '  ' → logprob: -11.127323150634766
    9. '   
' → logprob: -11.377323150634766
    10. '	t' → logprob: -11.377323150634766

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016837897419463843
    2. 't' → logprob: -9.750168800354004
    3. '    
' → logprob: -10.125168800354004
    4. '  ' → logprob: -10.875168800354004
    5. '
' → logprob: -11.000168800354004
    6. ' ' → logprob: -11.625168800354004
    7. '  
' → logprob: -12.000168800354004
    8. '\t' → logprob: -12.500168800354004
    9. ' t' → logprob: -12.750168800354004
    10. '\n' → logprob: -12.875168800354004

Token 252: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005823421524837613
    2. '#' → logprob: -7.875582218170166
    3. 't' (adapté à ' t') → logprob: -9.000582695007324
    4. '  ' → logprob: -10.500582695007324
    5. ' ' → logprob: -10.625582695007324
    6. 'return' → logprob: -11.875582695007324
    7. '    
' → logprob: -12.125582695007324
    8. ' t' → logprob: -12.375582695007324
    9. '
' → logprob: -12.625582695007324
    10. '\' → logprob: -13.250582695007324

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014799882774241269
    2. '1' → logprob: -8.875147819519043
    3. ' ' → logprob: -13.375147819519043
    4. '#' → logprob: -13.625147819519043
    5. '=' → logprob: -13.875147819519043
    6. ']' → logprob: -14.000147819519043
    7. '
' → logprob: -14.375147819519043
    8. 't' → logprob: -14.750147819519043
    9. '[
' → logprob: -14.750147819519043
    10. '.' → logprob: -15.000147819519043

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020699729793705046
    2. '2' → logprob: -9.00020694732666
    3. ' ' → logprob: -10.12520694732666
    4. '[' → logprob: -10.25020694732666
    5. '(' → logprob: -12.25020694732666
    6. '   ' → logprob: -13.62520694732666
    7. '
' → logprob: -13.75020694732666
    8. '

' → logprob: -15.37520694732666
    9. ']' → logprob: -15.62520694732666
    10. '0' → logprob: -15.87520694732666

Token 255: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17981652915477753
    2. '],' → logprob: -1.804816484451294
    3. ']' → logprob: -10.429816246032715
    4. '),' → logprob: -10.804816246032715
    5. ' ,' → logprob: -11.554816246032715
    6. '},' → logprob: -12.179816246032715
    7. '>,' → logprob: -12.679816246032715
    8. '‌,' → logprob: -14.304816246032715
    9. '],[' → logprob: -14.554816246032715
    10. ' ],' → logprob: -14.804816246032715

Token 256: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.623244553338736e-05
    2. ' t' → logprob: -9.625065803527832
    3. '`t' → logprob: -16.50006675720215
    4. '<|end|>' → logprob: -18.12506675720215
    5. '	t' → logprob: -19.00006675720215
    6. '   ' → logprob: -19.12506675720215
    7. ' ' → logprob: -19.87506675720215
    8. ' т' → logprob: -20.62506675720215
    9. '_t' → logprob: -21.12506675720215
    10. '0' → logprob: -21.12506675720215

Token 257: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00040958117460832
    2. '2' → logprob: -7.8754096031188965
    3. 't' → logprob: -11.250409126281738
    4. '0' → logprob: -11.500409126281738
    5. ']' → logprob: -12.625409126281738
    6. ' ' → logprob: -13.125409126281738
    7. ' [' → logprob: -14.625409126281738
    8. '[
' → logprob: -15.125409126281738
    9. '1' → logprob: -15.875409126281738
    10. ',' → logprob: -16.875410079956055

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.599403423024341e-05
    2. '0' → logprob: -9.875065803527832
    3. ' ' → logprob: -11.250065803527832
    4. 't' → logprob: -13.500065803527832
    5. '   ' → logprob: -16.12506675720215
    6. 's' → logprob: -17.12506675720215
    7. '```' → logprob: -18.00006675720215
    8. '1' → logprob: -18.75006675720215
    9. '  ' → logprob: -19.00006675720215
    10. ' t' → logprob: -19.37506675720215

Token 259: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036571238189935684
    2. ']' → logprob: -3.4115712642669678
    3. ']=' → logprob: -6.661571025848389
    4. ' =' → logprob: -6.786571025848389
    5. ')' → logprob: -7.661571025848389
    6. ')=' → logprob: -10.786571502685547
    7. 't' → logprob: -11.286571502685547
    8. '>' → logprob: -12.536571502685547
    9. '[' → logprob: -13.286571502685547
    10. '   ' → logprob: -13.661571502685547

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '=t' → logprob: -17.376171112060547
    4. 't' → logprob: -18.626171112060547
    5. '   ' → logprob: -19.126171112060547
    6. '=
' → logprob: -19.626171112060547
    7. '[' → logprob: -19.876171112060547
    8. ')' → logprob: -20.001171112060547
    9. ',' → logprob: -20.126171112060547
    10. '=

' → logprob: -20.251171112060547

Token 261: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005680450703948736
    2. ' t' → logprob: -7.50056791305542
    3. 's' → logprob: -11.125568389892578
    4. ' ' → logprob: -16.375568389892578
    5. '   ' → logprob: -16.500568389892578
    6. '	t' → logprob: -17.625568389892578
    7. ' s' → logprob: -17.625568389892578
    8. '  ' → logprob: -18.250568389892578
    9. '`t' → logprob: -18.750568389892578
    10. '    ' → logprob: -20.000568389892578

Token 262: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005252256989479065
    2. '[' → logprob: -5.255252361297607
    3. ' ' → logprob: -11.63025188446045
    4. 't' → logprob: -12.25525188446045
    5. '   ' → logprob: -12.63025188446045
    6. '0' → logprob: -14.00525188446045
    7. '  ' → logprob: -15.63025188446045
    8. '₂' → logprob: -16.005252838134766
    9. '(' → logprob: -16.130252838134766
    10. '    ' → logprob: -17.130252838134766

Token 263: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. 't' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '[' → logprob: -16.750001907348633
    6. '1' → logprob: -17.375001907348633
    7. '
' → logprob: -17.875001907348633
    8. '２' → logprob: -18.750001907348633
    9. '  ' → logprob: -19.000001907348633
    10. '0' → logprob: -19.000001907348633

Token 264: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. '[' → logprob: -10.375066757202148
    3. ' ,' → logprob: -11.125066757202148
    4. '],' → logprob: -11.125066757202148
    5. ']' → logprob: -12.500066757202148
    6. '1' → logprob: -14.375066757202148
    7. '   ' → logprob: -14.875066757202148
    8. 't' → logprob: -15.250066757202148
    9. '',' → logprob: -15.750066757202148
    10. '][' → logprob: -15.750066757202148

Token 265: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.157039049663581e-05
    2. ' t' → logprob: -9.875051498413086
    3. '`t' → logprob: -16.875051498413086
    4. '1' → logprob: -17.125051498413086
    5. 's' → logprob: -17.250051498413086
    6. '   ' → logprob: -18.125051498413086
    7. '	t' → logprob: -19.250051498413086
    8. '[' → logprob: -19.375051498413086
    9. ' ' → logprob: -19.375051498413086
    10. '  ' → logprob: -19.875051498413086

Token 266: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.674858301877975e-05
    2. '1' → logprob: -9.250096321105957
    3. '[
' → logprob: -15.625096321105957
    4. ' [' → logprob: -15.750096321105957
    5. '   ' → logprob: -16.750097274780273
    6. ' ' → logprob: -17.000097274780273
    7. ']' → logprob: -17.750097274780273
    8. 't' → logprob: -18.125097274780273
    9. 'user' → logprob: -18.375097274780273
    10. '```' → logprob: -18.375097274780273

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '[' → logprob: -17.625001907348633
    5. 'user' → logprob: -18.625001907348633
    6. ']' → logprob: -18.875001907348633
    7. '
' → logprob: -18.937501907348633
    8. '```' → logprob: -19.062501907348633
    9. '１' → logprob: -19.312501907348633
    10. '۱' → logprob: -19.437501907348633

Token 268: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017278953455388546
    2. ']
' → logprob: -6.876728057861328
    3. '   ' → logprob: -7.626728057861328
    4. ')' → logprob: -9.376728057861328
    5. ' ]' → logprob: -9.626728057861328
    6. 't' → logprob: -10.876728057861328
    7. '<|end|>' → logprob: -11.126728057861328
    8. '']' → logprob: -12.126728057861328
    9. '#' → logprob: -12.376728057861328
    10. 's' → logprob: -12.876728057861328

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004080315411556512
    2. 'return' → logprob: -8.500408172607422
    3. '    
' → logprob: -9.625408172607422
    4. '
' → logprob: -10.125408172607422
    5. '	return' → logprob: -10.625408172607422
    6. ' return' → logprob: -11.125408172607422
    7. 't' → logprob: -11.750408172607422
    8. '#' → logprob: -11.875408172607422
    9. '  ' → logprob: -12.000408172607422
    10. '```' → logprob: -12.125408172607422

Token 270: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019239457324147224
    2. '#' (adapté à ' #') → logprob: -4.39423942565918
    3. 't' → logprob: -5.01923942565918
    4. ' #' → logprob: -10.14423942565918
    5. 'return' → logprob: -11.01923942565918
    6. ' t' → logprob: -11.01923942565918
    7. ' ' → logprob: -11.76923942565918
    8. '  ' → logprob: -12.39423942565918
    9. 'for' → logprob: -12.51923942565918
    10. '    ' → logprob: -13.01923942565918

Token 271: ' swap' (ID: 25489)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02137143723666668
    2. 'return' → logprob: -4.146371364593506
    3. '   ' → logprob: -6.146371364593506
    4. ' t' → logprob: -6.771371364593506
    5. 'swap' → logprob: -6.896371364593506
    6. 'for' → logprob: -7.646371364593506
    7. '#' → logprob: -8.396371841430664
    8. ' return' → logprob: -9.146371841430664
    9. '
' → logprob: -9.646371841430664
    10. 's' → logprob: -9.646371841430664

Token 272: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03294165059924126
    2. '[' → logprob: -3.7829415798187256
    3. '   ' → logprob: -5.532941818237305
    4. '(' → logprob: -5.907941818237305
    5. 't' → logprob: -5.907941818237305
    6. '0' → logprob: -8.782941818237305
    7. ' ' → logprob: -9.532941818237305
    8. '1' → logprob: -10.657941818237305
    9. ' t' → logprob: -12.657941818237305
    10. '```' → logprob: -13.532941818237305

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024358915106859058
    2. '0' → logprob: -8.625243186950684
    3. '1' → logprob: -10.375243186950684
    4. ' ' → logprob: -10.625243186950684
    5. '[' → logprob: -12.375243186950684
    6. '   ' → logprob: -13.375243186950684
    7. '```' → logprob: -13.875243186950684
    8. '
' → logprob: -14.000243186950684
    9. '(' → logprob: -15.000243186950684
    10. '``' → logprob: -15.250243186950684

Token 274: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012767910026013851
    2. ' ,' → logprob: -4.637767791748047
    3. ' and' → logprob: -6.262767791748047
    4. 'and' → logprob: -7.012767791748047
    5. '[' → logprob: -9.512767791748047
    6. ' ' → logprob: -9.762767791748047
    7. ',
' → logprob: -11.387767791748047
    8. '```' → logprob: -11.762767791748047
    9. '<|end|>' → logprob: -12.012767791748047
    10. 's' → logprob: -12.137767791748047

Token 275: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010987765854224563
    2. ' ' → logprob: -6.8760986328125
    3. 't' → logprob: -10.1260986328125
    4. 's' → logprob: -11.3760986328125
    5. '[' → logprob: -12.2510986328125
    6. '   ' → logprob: -12.2510986328125
    7. ' t' → logprob: -12.6260986328125
    8. '<|end|>' → logprob: -14.0010986328125
    9. '  ' → logprob: -15.1260986328125
    10. '0' → logprob: -15.2510986328125

Token 276: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '３' → logprob: -19.375003814697266
    4. '۳' → logprob: -19.500003814697266
    5. '0' → logprob: -20.000003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '[' → logprob: -21.000003814697266
    8. '৩' → logprob: -21.875003814697266
    9. '```' → logprob: -22.000003814697266
    10. '  ' → logprob: -22.125003814697266

Token 277: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02341924048960209
    2. 't' → logprob: -3.773419141769409
    3. ' t' → logprob: -9.023419380187988
    4. '	t' → logprob: -9.898419380187988
    5. '`t' → logprob: -13.898419380187988
    6. '```' → logprob: -14.148419380187988
    7. ' ' → logprob: -14.648419380187988
    8. 's' → logprob: -15.273419380187988
    9. '   ' → logprob: -15.398419380187988
    10. '_t' → logprob: -15.773419380187988

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16470012068748474
    2. 't' → logprob: -1.9147001504898071
    3. ' t' → logprob: -5.414700031280518
    4. '	t' → logprob: -11.414700508117676
    5. ' ' → logprob: -13.289700508117676
    6. '`t' → logprob: -13.664700508117676
    7. '  ' → logprob: -14.289700508117676
    8. '```' → logprob: -14.914700508117676
    9. '
' → logprob: -16.03969955444336
    10. 's' → logprob: -16.28969955444336

Token 279: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0003623985394369811
    2. ' t' → logprob: -8.500362396240234
    3. '   ' → logprob: -8.750362396240234
    4. '`t' → logprob: -14.750362396240234
    5. '	t' → logprob: -15.750362396240234
    6. ' ' → logprob: -18.250362396240234
    7. '```' → logprob: -18.750362396240234
    8. 's' → logprob: -19.000362396240234
    9. '_t' → logprob: -19.875362396240234
    10. '  ' → logprob: -19.875362396240234

Token 280: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.375
    3. '[
' → logprob: -17.0
    4. '1' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. ' [' → logprob: -19.5
    7. '
' → logprob: -19.625
    8. '3' → logprob: -22.0
    9. ',' → logprob: -22.125
    10. '   ' → logprob: -22.125

Token 281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '3' → logprob: -17.0
    4. '```' → logprob: -18.25
    5. '[' → logprob: -18.75
    6. '２' → logprob: -18.875
    7. '   ' → logprob: -18.875
    8. '۲' → logprob: -20.25
    9. '
' → logprob: -20.375
    10. '  ' → logprob: -20.625

Token 282: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07906031608581543
    2. '],' → logprob: -2.5790603160858154
    3. ']' → logprob: -9.454060554504395
    4. ' ,' → logprob: -9.829060554504395
    5. '},' → logprob: -11.329060554504395
    6. '),' → logprob: -11.454060554504395
    7. '>,' → logprob: -11.954060554504395
    8. '',' → logprob: -13.329060554504395
    9. '‌,' → logprob: -13.454060554504395
    10. ' ' → logprob: -13.704060554504395

Token 283: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029754776507616043
    2. ' t' → logprob: -3.529754877090454
    3. '	t' → logprob: -12.904754638671875
    4. '   ' → logprob: -14.279754638671875
    5. '`t' → logprob: -14.404754638671875
    6. 's' → logprob: -14.529754638671875
    7. ' ' → logprob: -16.279754638671875
    8. ' т' → logprob: -17.529754638671875
    9. '_t' → logprob: -18.029754638671875
    10. '<|end|>' → logprob: -18.029754638671875

Token 284: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. ',' → logprob: -12.375008583068848
    3. 't' → logprob: -13.250008583068848
    4. ' [' → logprob: -13.750008583068848
    5. '[
' → logprob: -14.625008583068848
    6. '```' → logprob: -14.750008583068848
    7. '[t' → logprob: -16.00000762939453
    8. ' ' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.50000762939453
    10. ']' → logprob: -17.00000762939453

Token 285: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.173704271830502e-06
    2. 't' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.37500286102295
    4. '[' → logprob: -17.625003814697266
    5. 's' → logprob: -18.750003814697266
    6. '۳' → logprob: -18.875003814697266
    7. '   ' → logprob: -19.000003814697266
    8. '３' → logprob: -19.250003814697266
    9. ' t' → logprob: -20.250003814697266
    10. '2' → logprob: -20.750003814697266

Token 286: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15437884628772736
    2. '=' → logprob: -2.279378890991211
    3. 't' → logprob: -4.029378890991211
    4. ']' → logprob: -4.154378890991211
    5. '],' → logprob: -5.154378890991211
    6. ' =' → logprob: -7.654378890991211
    7. '   ' → logprob: -8.404378890991211
    8. ' t' → logprob: -8.404378890991211
    9. ']=' → logprob: -8.404378890991211
    10. ' ,' → logprob: -9.154378890991211

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008681939914822578
    2. ' =' → logprob: -4.758681774139404
    3. ',' → logprob: -9.633682250976562
    4. '=t' → logprob: -13.508682250976562
    5. 't' → logprob: -14.883682250976562
    6. '=
' → logprob: -16.633682250976562
    7. ' t' → logprob: -17.508682250976562
    8. ' ' → logprob: -17.758682250976562
    9. '=

' → logprob: -17.883682250976562
    10. '   ' → logprob: -18.133682250976562

Token 288: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0017027945723384619
    2. ' t' → logprob: -6.376702785491943
    3. '	t' → logprob: -15.001703262329102
    4. ' ' → logprob: -16.1267032623291
    5. '   ' → logprob: -16.6267032623291
    6. '`t' → logprob: -17.6267032623291
    7. 's' → logprob: -17.7517032623291
    8. '  ' → logprob: -19.1267032623291
    9. '[t' → logprob: -19.3767032623291
    10. '(t' → logprob: -19.7517032623291

Token 289: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004083624575287104
    2. 't' → logprob: -5.504083633422852
    3. '3' → logprob: -12.879083633422852
    4. 's' → logprob: -13.879083633422852
    5. '[
' → logprob: -14.629083633422852
    6. ' t' → logprob: -15.004083633422852
    7. '   ' → logprob: -15.629083633422852
    8. ' [' → logprob: -16.12908363342285
    9. '['' → logprob: -16.25408363342285
    10. '{' → logprob: -16.50408363342285

Token 290: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -13.000005722045898
    3. '[' → logprob: -13.125005722045898
    4. 't' → logprob: -13.375005722045898
    5. '   ' → logprob: -18.0000057220459
    6. 's' → logprob: -18.6250057220459
    7. ']' → logprob: -19.0000057220459
    8. '2' → logprob: -19.0000057220459
    9. '```' → logprob: -19.2500057220459
    10. ' t' → logprob: -19.3750057220459

Token 291: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.159660890465602e-05
    2. '],' → logprob: -9.75007152557373
    3. ' ,' → logprob: -11.75007152557373
    4. '2' → logprob: -13.62507152557373
    5. '   ' → logprob: -13.75007152557373
    6. 't' → logprob: -14.12507152557373
    7. '[' → logprob: -14.25007152557373
    8. '},' → logprob: -14.37507152557373
    9. ']' → logprob: -15.25007152557373
    10. '>,' → logprob: -15.37507152557373

Token 292: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00033581978641450405
    2. ' t' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.625335693359375
    4. '	t' → logprob: -16.500335693359375
    5. ' ' → logprob: -16.750335693359375
    6. '`t' → logprob: -16.750335693359375
    7. '  ' → logprob: -18.250335693359375
    8. '
' → logprob: -19.125335693359375
    9. '```' → logprob: -19.500335693359375
    10. '  
' → logprob: -20.250335693359375

Token 293: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. 't' → logprob: -12.625005722045898
    3. '2' → logprob: -12.875005722045898
    4. ' ' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.5000057220459
    6. ' [' → logprob: -17.5000057220459
    7. '```' → logprob: -17.8750057220459
    8. '_' → logprob: -18.1250057220459
    9. ',' → logprob: -18.2500057220459
    10. '[t' → logprob: -18.5000057220459

Token 294: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.875014305114746
    3. 't' → logprob: -11.875014305114746
    4. '２' → logprob: -16.87501335144043
    5. '۲' → logprob: -17.12501335144043
    6. '```' → logprob: -17.12501335144043
    7. '[' → logprob: -18.00001335144043
    8. '   ' → logprob: -18.62501335144043
    9. '₂' → logprob: -19.12501335144043
    10. '২' → logprob: -19.25001335144043

Token 295: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005399646237492561
    2. ']
' → logprob: -5.505399703979492
    3. '   ' → logprob: -6.880399703979492
    4. 't' → logprob: -8.380399703979492
    5. '']' → logprob: -10.380399703979492
    6. ')' → logprob: -10.755399703979492
    7. '}' → logprob: -13.005399703979492
    8. ' ]' → logprob: -13.130399703979492
    9. ' t' → logprob: -13.505399703979492
    10. '4' → logprob: -14.255399703979492

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007600585464388132
    2. ' if' → logprob: -5.382600784301758
    3. '<|end|>' → logprob: -6.507600784301758
    4. '
' → logprob: -8.132600784301758
    5. '```' → logprob: -8.382600784301758
    6. '\n' → logprob: -8.632600784301758
    7. ' 
' → logprob: -8.757600784301758
    8. 'if' → logprob: -8.757600784301758
    9. ' ' → logprob: -9.007600784301758
    10. 't' → logprob: -9.882600784301758

Token 297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.544226884841919
    2. '   ' → logprob: -1.044226884841919
    3. 't' → logprob: -3.169226884841919
    4. ' if' → logprob: -3.669226884841919
    5. ' t' → logprob: -9.04422664642334
    6. 's' → logprob: -10.41922664642334
    7. '```' → logprob: -11.16922664642334
    8. '
' → logprob: -11.41922664642334
    9. ' ' → logprob: -11.66922664642334
    10. '\n' → logprob: -12.54422664642334

Token 298: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.0791434720158577
    2. '''.' → logprob: -2.579143524169922
    3. ' '' → logprob: -8.454143524169922
    4. ''' → logprob: -10.454143524169922
    5. ' ' → logprob: -12.204143524169922
    6. '''' → logprob: -12.829143524169922
    7. ''s' → logprob: -13.954143524169922
    8. ' '.' → logprob: -14.204143524169922
    9. ''.' → logprob: -14.454143524169922
    10. ' ' → logprob: -15.204143524169922

Token 299: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00028064317302778363
    2. '''.' → logprob: -8.250280380249023
    3. '.join' → logprob: -11.000280380249023
    4. '(join' → logprob: -13.750280380249023
    5. ''.' → logprob: -14.500280380249023
    6. ' ''.' → logprob: -15.125280380249023
    7. ' join' → logprob: -15.250280380249023
    8. '''' → logprob: -15.500280380249023
    9. '('' → logprob: -15.750280380249023
    10. 'joined' → logprob: -16.500280380249023

Token 300: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.625016212463379
    3. 't' → logprob: -12.625016212463379
    4. '('' → logprob: -13.125016212463379
    5. '(s' → logprob: -13.875016212463379
    6. ' (' → logprob: -14.500016212463379
    7. '	t' → logprob: -17.125015258789062
    8. '(
' → logprob: -17.250015258789062
    9. 's' → logprob: -18.000015258789062
    10. '```' → logprob: -18.250015258789062

Token 301: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0013070254353806376
    2. '].' → logprob: -7.751307010650635
    3. '[t' → logprob: -7.751307010650635
    4. '[' → logprob: -8.876307487487793
    5. '.find' → logprob: -9.251307487487793
    6. '').' → logprob: -9.376307487487793
    7. '   ' → logprob: -10.251307487487793
    8. '.' → logprob: -10.626307487487793
    9. ')' → logprob: -11.001307487487793
    10. ''.' → logprob: -11.751307487487793

Token 302: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -3.128163257315464e-07
    2. '.find' → logprob: -16.125
    3. ' find' → logprob: -16.375
    4. '(find' → logprob: -17.75
    5. '	find' → logprob: -18.875
    6. '
' → logprob: -19.375
    7. '```' → logprob: -20.75
    8. '0' → logprob: -20.75
    9. '_find' → logprob: -21.0
    10. ')find' → logprob: -21.125

Token 303: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. '("' → logprob: -15.000008583068848
    4. ''' → logprob: -18.00000762939453
    5. ' ('' → logprob: -18.50000762939453
    6. '(
' → logprob: -19.87500762939453
    7. ''s' → logprob: -20.87500762939453
    8. '()' → logprob: -21.37500762939453
    9. '(('' → logprob: -21.50000762939453
    10. ' ' → logprob: -22.25000762939453

Token 304: 'AG' (ID: 2971)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004779784067068249
    2. 'AG' → logprob: -8.00047779083252
    3. '"' → logprob: -8.87547779083252
    4. '('' → logprob: -13.25047779083252
    5. ''ag' → logprob: -15.12547779083252
    6. '   ' → logprob: -15.37547779083252
    7. ''A' → logprob: -15.75047779083252
    8. '`' → logprob: -16.000478744506836
    9. ' '' → logprob: -17.125478744506836
    10. ' AG' → logprob: -17.250478744506836

Token 305: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.703443770878948e-06
    2. ' C' → logprob: -13.000007629394531
    3. 'A' → logprob: -13.125007629394531
    4. ''C' → logprob: -14.125007629394531
    5. 'AC' → logprob: -14.500007629394531
    6. 'С' → logprob: -14.875007629394531
    7. '>C' → logprob: -15.875007629394531
    8. '	C' → logprob: -16.00000762939453
    9. '<C' → logprob: -16.06250762939453
    10. 'AG' → logprob: -16.12500762939453

Token 306: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4288604259490967
    2. '')' → logprob: -1.0538604259490967
    3. '")' → logprob: -9.553860664367676
    4. ']' → logprob: -10.428860664367676
    5. ')>=' → logprob: -10.553860664367676
    6. '   ' → logprob: -11.803860664367676
    7. ''' → logprob: -12.178860664367676
    8. ' )' → logprob: -12.553860664367676
    9. '`)' → logprob: -12.803860664367676
    10. '']' → logprob: -12.803860664367676

Token 307: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1131010577082634
    2. '>=' → logprob: -2.238101005554199
    3. ')' → logprob: -8.8631010055542
    4. ')>=' → logprob: -9.6131010055542
    5. ' <' → logprob: -10.2381010055542
    6. ' ' → logprob: -11.7381010055542
    7. ']>=' → logprob: -11.7381010055542
    8. '<' → logprob: -12.1131010055542
    9. '>' → logprob: -12.3631010055542
    10. '[' → logprob: -12.7381010055542

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036014977376908064
    2. ' ' → logprob: -5.628601551055908
    3. '>=' → logprob: -14.37860107421875
    4. '-' → logprob: -14.50360107421875
    5. '=' → logprob: -15.62860107421875
    6. '   ' → logprob: -16.62860107421875
    7. '  ' → logprob: -16.75360107421875
    8. ')' → logprob: -17.44110107421875
    9. '<' → logprob: -17.62860107421875
    10. '>' → logprob: -17.69110107421875

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '>=' → logprob: -17.625015258789062
    4. '>' → logprob: -18.875015258789062
    5. '
' → logprob: -18.875015258789062
    6. '1' → logprob: -19.500015258789062
    7. '4' → logprob: -19.500015258789062
    8. '-' → logprob: -19.500015258789062
    9. '   ' → logprob: -19.625015258789062
    10. ')' → logprob: -19.750015258789062

Token 310: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8727474808692932
    2. '==' → logprob: -0.9977474808692932
    3. '   ' → logprob: -2.2477474212646484
    4. ')' → logprob: -3.3727474212646484
    5. ' >=' → logprob: -3.9977474212646484
    6. '       ' → logprob: -4.122747421264648
    7. '=' → logprob: -4.247747421264648
    8. '>=' → logprob: -4.372747421264648
    9. ' ' → logprob: -5.497747421264648
    10. '0' → logprob: -6.247747421264648

Token 311: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3309246301651001
    2. '       ' → logprob: -1.3309246301651
    3. ' ' → logprob: -4.3309245109558105
    4. '   ' → logprob: -5.5809245109558105
    5. ' return' → logprob: -7.8309245109558105
    6. 'return' → logprob: -8.705924987792969
    7. '  ' → logprob: -12.205924987792969
    8. '           ' → logprob: -12.205924987792969
    9. '    ' → logprob: -12.455924987792969
    10. '     ' → logprob: -12.955924987792969

Token 312: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007967620622366667
    2. ' ' → logprob: -7.500796794891357
    3. 'return' (adapté à ' return') → logprob: -8.5007963180542
    4. ' return' → logprob: -10.3757963180542
    5. '   ' → logprob: -11.6257963180542
    6. '       ' → logprob: -15.2507963180542
    7. '  ' → logprob: -17.750797271728516
    8. '    ' → logprob: -18.750797271728516
    9. '           ' → logprob: -19.375797271728516
    10. '     ' → logprob: -19.875797271728516

Token 313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -19.75103187561035
    4. ' ' → logprob: -19.75103187561035
    5. '۰' → logprob: -20.00103187561035
    6. '  ' → logprob: -20.06353187561035
    7. 'return' → logprob: -20.87603187561035
    8. '000' → logprob: -20.93853187561035
    9. '０' → logprob: -21.00103187561035
    10. '1' → logprob: -21.12603187561035

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -18.625
    4. '
' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '

' → logprob: -21.3125
    7. '   ' → logprob: -21.4375
    8. '۰' → logprob: -21.5625
    9. ' ' → logprob: -21.625
    10. 'False' → logprob: -21.875

Token 315: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005449305754154921
    2. 'return' → logprob: -7.875545024871826
    3. ' return' → logprob: -8.875544548034668
    4. '	return' → logprob: -11.000544548034668
    5. '  ' → logprob: -13.000544548034668
    6. '    
' → logprob: -13.125544548034668
    7. ' ' → logprob: -13.750544548034668
    8. '\' → logprob: -13.875544548034668
    9. '\t' → logprob: -14.500544548034668
    10. '       ' → logprob: -14.875544548034668

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.6060808522743173e-05
    2. 'return' → logprob: -11.250025749206543
    3. '\t' → logprob: -12.125025749206543
    4. '       ' → logprob: -12.875025749206543
    5. 't' → logprob: -13.625025749206543
    6. ' return' → logprob: -13.625025749206543
    7. '\n' → logprob: -13.750025749206543
    8. '\' → logprob: -14.500025749206543
    9. '	return' → logprob: -15.000025749206543
    10. '```' → logprob: -15.625025749206543

Token 317: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008936699479818344
    2. 't' → logprob: -4.758936882019043
    3. 'return' (adapté à ' return') → logprob: -8.383936882019043
    4. ' t' → logprob: -10.008936882019043
    5. ' return' → logprob: -10.758936882019043
    6. '\t' → logprob: -11.633936882019043
    7. ' ' → logprob: -11.758936882019043
    8. '  ' → logprob: -13.008936882019043
    9. '	t' → logprob: -13.008936882019043
    10. '    
' → logprob: -13.383936882019043

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. 'True' → logprob: -15.751032829284668
    4. '0' → logprob: -16.001033782958984
    5. ' True' → logprob: -18.751033782958984
    6. ' ' → logprob: -20.251033782958984
    7. 'False' → logprob: -20.501033782958984
    8. 'int' → logprob: -20.626033782958984
    9. 'None' → logprob: -20.751033782958984
    10. '   ' → logprob: -21.626033782958984

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'True' → logprob: -15.875
    3. ' ' → logprob: -16.625
    4. 'int' → logprob: -19.75
    5. '１' → logprob: -20.875
    6. 'mod' → logprob: -21.25
    7. '۱' → logprob: -21.375
    8. ' True' → logprob: -21.9375
    9. 'true' → logprob: -22.0
    10. '0' → logprob: -22.25

Token 320: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1601618528366089
    2. 'for' → logprob: -1.4101618528366089
    3. ':' → logprob: -2.0351619720458984
    4. '#' → logprob: -2.2851619720458984
    5. 'def' → logprob: -2.5351619720458984
    6. ')' → logprob: -3.0351619720458984
    7. ' 
' → logprob: -4.035161972045898
    8. ' ' → logprob: -4.660161972045898
    9. ',' → logprob: -4.785161972045898
    10. ' def' → logprob: -4.910161972045898

Token 321: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02220846898853779
    2. ' for' → logprob: -4.1472086906433105
    3. 'a' → logprob: -6.6472086906433105
    4. '#' → logprob: -6.7722086906433105
    5. 'n' → logprob: -6.8972086906433105
    6. 'A' → logprob: -7.1472086906433105
    7. 'from' → logprob: -7.3972086906433105
    8. 'l' → logprob: -8.272208213806152
    9. '
' → logprob: -8.397208213806152
    10. 'def' → logprob: -9.397208213806152

Token 322: ' initial' (ID: 4871)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26548710465431213
    2. 'from' → logprob: -2.1404871940612793
    3. 'letters' → logprob: -3.0154871940612793
    4. 'import' → logprob: -4.015487194061279
    5. 'chars' → logprob: -4.015487194061279
    6. 'alphabet' → logprob: -4.015487194061279
    7. 'alph' → logprob: -6.265487194061279
    8. 'A' → logprob: -6.390487194061279
    9. 'bases' → logprob: -6.390487194061279
    10. '#' → logprob: -6.765487194061279

Token 323: 'isation' (ID: 6993)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07354790717363358
    2. 's' → logprob: -3.698547840118408
    3. 'i' → logprob: -4.198547840118408
    4. ' =' → logprob: -4.323547840118408
    5. '_' → logprob: -5.323547840118408
    6. ' l' → logprob: -5.698547840118408
    7. 'e' → logprob: -5.698547840118408
    8. '=' → logprob: -6.073547840118408
    9. 'a' → logprob: -6.573547840118408
    10. 'ization' → logprob: -7.698547840118408

Token 324: ' che' (ID: 1378)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1664503961801529
    2. 'for' → logprob: -1.9164503812789917
    3. '['' → logprob: -5.416450500488281
    4. ' for' → logprob: -7.541450500488281
    5. 'from' → logprob: -7.916450500488281
    6. 'import' → logprob: -8.166450500488281
    7. ' l' → logprob: -9.166450500488281
    8. ']' → logprob: -9.791450500488281
    9. '["' → logprob: -10.041450500488281
    10. 'a' → logprob: -10.291450500488281

Token 325: 'lou' (ID: 133128)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.13299141824245453
    2. 'for' → logprob: -3.257991313934326
    3. 'c' → logprob: -3.382991313934326
    4. 'k' → logprob: -3.882991313934326
    5. 'f' → logprob: -4.632991313934326
    6. '   ' → logprob: -5.757991313934326
    7. '[' → logprob: -5.882991313934326
    8. ' ' → logprob: -6.132991313934326
    9. 'cker' → logprob: -6.632991313934326
    10. ' for' → logprob: -6.757991313934326

Token 326: '...' (ID: 1008)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18546713888645172
    2. 'for' → logprob: -1.8104671239852905
    3. '['' → logprob: -6.18546724319458
    4. ' for' → logprob: -6.68546724319458
    5. ']' → logprob: -7.43546724319458
    6. 'import' → logprob: -7.93546724319458
    7. ' =' → logprob: -8.185466766357422
    8. ' l' → logprob: -8.185466766357422
    9. 'from' → logprob: -8.935466766357422
    10. '][' → logprob: -9.060466766357422

Token 327: ' bon' (ID: 4846)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.415541410446167
    2. 'for' → logprob: -1.290541410446167
    3. ' for' → logprob: -3.290541410446167
    4. ' l' → logprob: -3.665541410446167
    5. '['' → logprob: -7.290541648864746
    6. 'from' → logprob: -7.915541648864746
    7. '   ' → logprob: -9.165541648864746
    8. ' {'' → logprob: -9.165541648864746
    9. 'import' → logprob: -9.290541648864746
    10. '
' → logprob: -9.665541648864746

Token 328: '...
' (ID: 4908)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4316503405570984
    2. 'for' → logprob: -1.0566504001617432
    3. ' for' → logprob: -6.306650161743164
    4. ' l' → logprob: -7.556650161743164
    5. 'letters' → logprob: -8.931650161743164
    6. 'from' → logprob: -9.306650161743164
    7. 'import' → logprob: -9.931650161743164
    8. 'alphabet' → logprob: -10.056650161743164
    9. '['' → logprob: -10.181650161743164
    10. '"' → logprob: -10.556650161743164

Token 329: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18192490935325623
    2. 'for' → logprob: -1.8069249391555786
    3. 'from' → logprob: -6.806924819946289
    4. 'import' → logprob: -7.306924819946289
    5. ' for' → logprob: -8.681924819946289
    6. ' l' → logprob: -9.931924819946289
    7. 'letters' → logprob: -10.056924819946289
    8. '```' → logprob: -11.056924819946289
    9. '['' → logprob: -11.181924819946289
    10. '
' → logprob: -11.181924819946289

Token 330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010080150241265073
    2. ' [' → logprob: -10.125101089477539
    3. ' =' → logprob: -10.250101089477539
    4. '[-' → logprob: -11.750101089477539
    5. '=' → logprob: -11.875101089477539
    6. '][' → logprob: -13.375101089477539
    7. '0' → logprob: -13.375101089477539
    8. '=[' → logprob: -13.500101089477539
    9. '
' → logprob: -14.125101089477539
    10. '\[' → logprob: -14.125101089477539

Token 331: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04306644946336746
    2. '1' → logprob: -3.1680665016174316
    3. ' ' → logprob: -10.168066024780273
    4. '][' → logprob: -11.543066024780273
    5. '[' → logprob: -11.793066024780273
    6. '-' → logprob: -12.418066024780273
    7. '
' → logprob: -13.168066024780273
    8. ']' → logprob: -13.168066024780273
    9. '01' → logprob: -14.668066024780273
    10. '   ' → logprob: -15.168066024780273

Token 332: ']["' (ID: 22065)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2867538034915924
    2. '][' → logprob: -1.41175377368927
    3. ']={' → logprob: -6.5367536544799805
    4. ']=' → logprob: -6.6617536544799805
    5. ']['' → logprob: -6.6617536544799805
    6. ' ][' → logprob: -7.7867536544799805
    7. ' ]' → logprob: -7.9117536544799805
    8. '][:' → logprob: -8.41175365447998
    9. '][]' → logprob: -8.91175365447998
    10. '].' → logprob: -8.91175365447998

Token 333: 'XXX' (ID: 53296)
  Prédit: 'AAAA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AAAA' → logprob: -1.1897616386413574
    2. 'TT' → logprob: -1.5647616386413574
    3. 'AG' → logprob: -1.5647616386413574
    4. '"' → logprob: -1.8147616386413574
    5. 'AC' → logprob: -3.1897616386413574
    6. 'AT' → logprob: -3.5647616386413574
    7. ''' → logprob: -4.314761638641357
    8. 'AA' → logprob: -4.564761638641357
    9. 'A' → logprob: -5.939761638641357
    10. '""' → logprob: -6.064761638641357

Token 334: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.47695207595825195
    2. 'X' → logprob: -1.226952075958252
    3. 'A' → logprob: -3.226952075958252
    4. 'T' → logprob: -4.851952075958252
    5. '"' → logprob: -5.101952075958252
    6. '"]=' → logprob: -5.101952075958252
    7. 'AC' → logprob: -5.351952075958252
    8. '".' → logprob: -5.726952075958252
    9. 'N' → logprob: -6.226952075958252
    10. ' "]' → logprob: -6.351952075958252

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327121257781982
    2. ' =' → logprob: -0.7577121257781982
    3. ' ' → logprob: -9.757712364196777
    4. '='' → logprob: -11.507712364196777
    5. ']' → logprob: -11.882712364196777
    6. '={}' → logprob: -12.507712364196777
    7. ')' → logprob: -12.632712364196777
    8. ',' → logprob: -12.632712364196777
    9. '=[]' → logprob: -12.632712364196777
    10. '="' → logprob: -12.757712364196777

Token 336: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.469590491382405e-05
    2. '0' → logprob: -10.00007438659668
    3. ' ' → logprob: -11.62507438659668
    4. '4' → logprob: -11.87507438659668
    5. '{' → logprob: -11.87507438659668
    6. '{}' → logprob: -13.75007438659668
    7. '   ' → logprob: -14.00007438659668
    8. '3' → logprob: -14.50007438659668
    9. '```' → logprob: -14.62507438659668
    10. '{
' → logprob: -15.00007438659668

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011713240382960066
    2. '0' → logprob: -9.375117301940918
    3. '{' → logprob: -10.875117301940918
    4. ' ' → logprob: -12.375117301940918
    5. '(' → logprob: -13.250117301940918
    6. '24' → logprob: -13.750117301940918
    7. 'int' → logprob: -14.000117301940918
    8. '4' → logprob: -14.375117301940918
    9. '
' → logprob: -14.375117301940918
    10. 'l' → logprob: -14.625117301940918

Token 338: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10272738337516785
    2. ' for' → logprob: -2.7277274131774902
    3. '<|end|>' → logprob: -5.35272741317749
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.47772741317749
    5. ' ' → logprob: -5.60272741317749
    6. '
' → logprob: -5.97772741317749
    7. 'import' → logprob: -6.10272741317749
    8. '#' → logprob: -6.10272741317749
    9. 'A' → logprob: -6.10272741317749
    10. 'from' → logprob: -6.72772741317749

Token 339: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22725628316402435
    2. ' for' → logprob: -2.3522562980651855
    3. ''' → logprob: -2.9772562980651855
    4. 'A' → logprob: -4.2272562980651855
    5. '"' → logprob: -4.4772562980651855
    6. 'from' → logprob: -4.7272562980651855
    7. ''A' → logprob: -4.7272562980651855
    8. '"A' → logprob: -6.3522562980651855
    9. 'AC' → logprob: -6.6022562980651855
    10. 'AG' → logprob: -6.7272562980651855

Token 340: ' loop' (ID: 11453)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05349140614271164
    2. 'i' → logprob: -3.0534913539886475
    3. ' _' → logprob: -6.053491592407227
    4. '_' → logprob: -6.053491592407227
    5. '_i' → logprob: -8.678491592407227
    6. ' length' → logprob: -11.553491592407227
    7. '	i' → logprob: -11.803491592407227
    8. ' ' → logprob: -12.928491592407227
    9. ')' → logprob: -14.678491592407227
    10. 'length' → logprob: -15.053491592407227

Token 341: 'Idx' (ID: 16248)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5524991750717163
    2. ' i' → logprob: -1.6774991750717163
    3. '_' → logprob: -2.302499294281006
    4. ' _' → logprob: -2.552499294281006
    5. ' ' → logprob: -3.052499294281006
    6. 'in' → logprob: -4.677499294281006
    7. 'i' → logprob: -6.302499294281006
    8. 's' → logprob: -7.927499294281006
    9. ' n' → logprob: -8.427498817443848
    10. '_i' → logprob: -8.802498817443848

Token 342: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07928466796875
    2. 'in' → logprob: -2.57928466796875
    3. ' ' → logprob: -8.07928466796875
    4. '_' → logprob: -10.45428466796875
    5. ',' → logprob: -11.57928466796875
    6. ' i' → logprob: -11.70428466796875
    7. 'n' → logprob: -11.70428466796875
    8. '1' → logprob: -12.07928466796875
    9. 's' → logprob: -12.20428466796875
    10. 'i' → logprob: -12.70428466796875

Token 343: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00317783304490149
    2. ' range' → logprob: -5.753177642822266
    3. '_' → logprob: -16.253177642822266
    4. '(range' → logprob: -17.003177642822266
    5. '	range' → logprob: -17.253177642822266
    6. 'in' → logprob: -17.878177642822266
    7. ' ' → logprob: -18.128177642822266
    8. 'r' → logprob: -19.128177642822266
    9. 'rang' → logprob: -19.128177642822266
    10. '   ' → logprob: -19.253177642822266

Token 344: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038264848990365863
    2. '(n' → logprob: -7.875382423400879
    3. '1' → logprob: -13.000382423400879
    4. ' (' → logprob: -15.875382423400879
    5. '2' → logprob: -16.125383377075195
    6. '(l' → logprob: -17.000383377075195
    7. 'n' → logprob: -18.000383377075195
    8. '(
' → logprob: -18.250383377075195
    9. ' ' → logprob: -19.750383377075195
    10. '3' → logprob: -19.750383377075195

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.178652822971344
    2. '):
' → logprob: -1.9286527633666992
    3. '+' → logprob: -4.428652763366699
    4. ' +' → logprob: -5.803652763366699
    5. ' ):' → logprob: -5.928652763366699
    6. ' ):
' → logprob: -8.3036527633667
    7. '1' → logprob: -9.1786527633667
    8. '-' → logprob: -9.3036527633667
    9. ')' → logprob: -9.8036527633667
    10. '):
' → logprob: -9.8036527633667

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7710571885108948
    2. ' for' → logprob: -1.27105712890625
    3. ' new' → logprob: -2.52105712890625
    4. ' l' → logprob: -2.89605712890625
    5. '	for' → logprob: -3.14605712890625
    6. '	l' → logprob: -4.02105712890625
    7. 'for' → logprob: -4.14605712890625
    8. 'l' → logprob: -4.39605712890625
    9. '	new' → logprob: -4.52105712890625
    10. ' ' → logprob: -4.89605712890625

Token 347: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.21853801608085632
    2. 'new' → logprob: -1.8435380458831787
    3. 'nl' → logprob: -3.9685380458831787
    4. 'n' → logprob: -4.9685378074646
    5. 'for' → logprob: -5.9685378074646
    6. 'tmp' → logprob: -5.9685378074646
    7. 'nd' → logprob: -6.2185378074646
    8. 'next' → logprob: -6.5935378074646
    9. 'd' → logprob: -7.2185378074646
    10. 'temp' → logprob: -7.3435378074646

Token 348: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2849721908569336
    2. '_new' → logprob: -2.1599721908569336
    3. '1' → logprob: -3.4099721908569336
    4. '_next' → logprob: -3.5349721908569336
    5. '2' → logprob: -3.7849721908569336
    6. 'new' → logprob: -3.9099721908569336
    7. '_' → logprob: -5.409972190856934
    8. ' =' → logprob: -5.409972190856934
    9. '=' → logprob: -5.534972190856934
    10. '.append' → logprob: -5.784972190856934

Token 349: 'loop' (ID: 14294)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6015498042106628
    2. '1' → logprob: -1.3515498638153076
    3. '(loop' → logprob: -1.9765498638153076
    4. '(' → logprob: -2.9765498638153076
    5. 'loop' → logprob: -6.6015496253967285
    6. '(len' → logprob: -7.7265496253967285
    7. '((' → logprob: -7.7265496253967285
    8. ' (' → logprob: -7.9765496253967285
    9. ' ' → logprob: -7.9765496253967285
    10. '(n' → logprob: -8.601550102233887

Token 350: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.0002166491176467389
    2. '1' → logprob: -9.375216484069824
    3. '+' → logprob: -9.500216484069824
    4. '[' → logprob: -10.875216484069824
    5. '][' → logprob: -10.875216484069824
    6. ']' → logprob: -12.000216484069824
    7. 'idx' → logprob: -12.125216484069824
    8. '   ' → logprob: -13.250216484069824
    9. ' ' → logprob: -13.375216484069824
    10. 'I' → logprob: -14.125216484069824

Token 351: '%' (ID: 4)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14275121688842773
    2. ' +' → logprob: -2.5177512168884277
    3. '%' → logprob: -3.5177512168884277
    4. ' %' → logprob: -4.017751216888428
    5. '-' → logprob: -5.892751216888428
    6. ']' → logprob: -6.517751216888428
    7. ' -' → logprob: -9.142751693725586
    8. '][' → logprob: -9.142751693725586
    9. '   ' → logprob: -9.392751693725586
    10. ' ' → logprob: -10.142751693725586

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00039063513395376503
    2. ' ' → logprob: -7.875390529632568
    3. '1' → logprob: -12.250391006469727
    4. '   ' → logprob: -12.500391006469727
    5. '  ' → logprob: -14.500391006469727
    6. '```' → logprob: -14.500391006469727
    7. ']' → logprob: -15.937891006469727
    8. '0' → logprob: -16.125391006469727
    9. '     ' → logprob: -16.312891006469727
    10. ')' → logprob: -16.375391006469727

Token 353: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04096108302474022
    2. '].' → logprob: -3.4159610271453857
    3. ']={' → logprob: -5.540961265563965
    4. ']=' → logprob: -6.290961265563965
    5. ' ]' → logprob: -7.290961265563965
    6. '][' → logprob: -8.040961265563965
    7. '=' → logprob: -8.915961265563965
    8. '.clear' → logprob: -9.290961265563965
    9. ' ].' → logprob: -9.415961265563965
    10. ' =' → logprob: -9.415961265563965

Token 354: 'clear' (ID: 14994)
  Prédit: 'clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clear' → logprob: -2.816093228830141e-06
    2. ' clear' → logprob: -13.00000286102295
    3. '.clear' → logprob: -14.62500286102295
    4. '=' → logprob: -17.750001907348633
    5. '	clear' → logprob: -19.250001907348633
    6. ' ' → logprob: -19.625001907348633
    7. '_clear' → logprob: -20.625001907348633
    8. 'copy' → logprob: -21.125001907348633
    9. 'cle' → logprob: -21.625001907348633
    10. 'Clear' → logprob: -22.000001907348633

Token 355: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.259079363080673e-05
    2. '()
' → logprob: -11.500012397766113
    3. '(' → logprob: -13.375012397766113
    4. '()

' → logprob: -14.500012397766113
    5. '()\' → logprob: -16.37501335144043
    6. '()`' → logprob: -16.62501335144043
    7. '()<' → logprob: -17.62501335144043
    8. ' ()' → logprob: -17.62501335144043
    9. '()}' → logprob: -17.75001335144043
    10. '()]' → logprob: -17.75001335144043

Token 356: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6041490435600281
    2. '   ' → logprob: -0.8541490435600281
    3. ' for' → logprob: -3.604149103164673
    4. '	for' → logprob: -8.604148864746094
    5. ' ' → logprob: -8.854148864746094
    6. 'from' → logprob: -9.604148864746094
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.854148864746094
    8. 'import' → logprob: -10.479148864746094
    9. '    
' → logprob: -10.604148864746094
    10. 'abc' → logprob: -10.854148864746094

Token 357: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007369658560492098
    2. ' for' → logprob: -7.375737190246582
    3. '   ' → logprob: -9.125737190246582
    4. ' ' → logprob: -14.250737190246582
    5. 'from' → logprob: -14.500737190246582
    6. '	for' → logprob: -16.000736236572266
    7. '    
' → logprob: -16.125736236572266
    8. 'import' → logprob: -16.375736236572266
    9. 'For' → logprob: -17.500736236572266
    10. '  ' → logprob: -17.875736236572266

Token 358: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009404043667018414
    2. 'from' → logprob: -7.375940322875977
    3. 'import' → logprob: -8.500940322875977
    4. ' for' → logprob: -9.250940322875977
    5. '   ' → logprob: -11.375940322875977
    6. ' ' → logprob: -13.250940322875977
    7. '#' → logprob: -15.250940322875977
    8. 'abc' → logprob: -16.250940322875977
    9. 'For' → logprob: -16.375940322875977
    10. 'letters' → logprob: -16.375940322875977

Token 359: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07859142124652863
    2. ' for' → logprob: -2.7035913467407227
    3. 'from' → logprob: -4.828591346740723
    4. ' from' → logprob: -8.828591346740723
    5. ' ' → logprob: -8.953591346740723
    6. '
' → logprob: -8.953591346740723
    7. 'import' → logprob: -9.078591346740723
    8. '#' → logprob: -10.703591346740723
    9. 'or' → logprob: -11.328591346740723
    10. '   ' → logprob: -11.453591346740723

Token 360: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6675227284431458
    2. ' for' → logprob: -0.9175227284431458
    3. '   ' → logprob: -2.542522668838501
    4. ' over' → logprob: -5.79252290725708
    5. ' ' → logprob: -6.79252290725708
    6. '	for' → logprob: -7.16752290725708
    7. '    
' → logprob: -7.54252290725708
    8. 's' → logprob: -8.042522430419922
    9. '('' → logprob: -8.292522430419922
    10. '()' → logprob: -8.417522430419922

Token 361: ' tous' (ID: 10688)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007831023074686527
    2. ' l' → logprob: -5.50783109664917
    3. 'list' → logprob: -6.50783109664917
    4. 'k' → logprob: -6.75783109664917
    5. '(l' → logprob: -8.632830619812012
    6. '[l' → logprob: -8.632830619812012
    7. 's' → logprob: -8.882830619812012
    8. 'key' → logprob: -8.882830619812012
    9. ' list' → logprob: -10.132830619812012
    10. '(' → logprob: -10.257830619812012

Token 362: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.662123441696167
    2. '(s' → logprob: -1.787123441696167
    3. ' s' → logprob: -2.162123441696167
    4. 's' → logprob: -2.162123441696167
    5. 'prev' → logprob: -2.537123441696167
    6. ' keys' → logprob: -2.662123441696167
    7. ' key' → logprob: -3.162123441696167
    8. 'key' → logprob: -3.287123441696167
    9. ' prev' → logprob: -3.537123441696167
    10. '(' → logprob: -3.787123441696167

Token 363: ' strings' (ID: 18279)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.944602906703949
    2. 'k' → logprob: -1.3196029663085938
    3. 'key' → logprob: -1.6946029663085938
    4. 's' → logprob: -3.1946029663085938
    5. 'keys' → logprob: -3.5696029663085938
    6. '(prev' → logprob: -3.5696029663085938
    7. 'p' → logprob: -4.194602966308594
    8. '(s' → logprob: -5.194602966308594
    9. 'last' → logprob: -5.444602966308594
    10. '4' → logprob: -5.819602966308594

Token 364: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1527974158525467
    2. ' for' → logprob: -2.7777974605560303
    3. ' in' → logprob: -3.6527974605560303
    4. 'for' → logprob: -3.6527974605560303
    5. ',' → logprob: -4.152797222137451
    6. 'in' → logprob: -6.402797222137451
    7. ' of' → logprob: -6.527797222137451
    8. 's' → logprob: -6.652797222137451
    9. ' ,' → logprob: -7.027797222137451
    10. ' s' → logprob: -7.152797222137451

Token 365: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007575750816613436
    2. '4' → logprob: -5.132575988769531
    3. 'length' → logprob: -7.257575988769531
    4. ' l' → logprob: -7.632575988769531
    5. '"' → logprob: -9.132575988769531
    6. 'len' → logprob: -9.507575988769531
    7. '3' → logprob: -9.882575988769531
    8. 'list' → logprob: -9.882575988769531
    9. ' ' → logprob: -10.132575988769531
    10. '['' → logprob: -10.757575988769531

Token 366: ' génération' (ID: 103301)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016286317259073257
    2. ' l' → logprob: -4.266286373138428
    3. '4' → logprob: -7.141286373138428
    4. 'list' → logprob: -7.766286373138428
    5. ' ' → logprob: -8.64128589630127
    6. '3' → logprob: -9.01628589630127
    7. '"' → logprob: -9.51628589630127
    8. ' list' → logprob: -9.51628589630127
    9. 'keys' → logprob: -10.26628589630127
    10. '   ' → logprob: -10.26628589630127

Token 367: ' précédente' (ID: 177319)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7576981782913208
    2. 'for' → logprob: -1.5076981782913208
    3. '   ' → logprob: -1.5076981782913208
    4. 'l' → logprob: -3.3826980590820312
    5. ' l' → logprob: -3.5076980590820312
    6. ' in' → logprob: -4.757698059082031
    7. '"' → logprob: -5.632698059082031
    8. 's' → logprob: -6.132698059082031
    9. ' ' → logprob: -6.382698059082031
    10. ' of' → logprob: -6.507698059082031

Token 368: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0359160415828228
    2. 'for' → logprob: -3.7859160900115967
    3. ' for' → logprob: -4.410915851593018
    4. '	for' → logprob: -7.910915851593018
    5. ',' → logprob: -11.035916328430176
    6. '       ' → logprob: -11.160916328430176
    7. ' ' → logprob: -11.535916328430176
    8. '  ' → logprob: -11.910916328430176
    9. '    
' → logprob: -12.160916328430176
    10. '    ' → logprob: -12.410916328430176

Token 369: 'je' (ID: 1587)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05987601354718208
    2. ' l' → logprob: -3.809875965118408
    3. 'for' → logprob: -3.809875965118408
    4. ' for' → logprob: -4.559875965118408
    5. '   ' → logprob: -6.059875965118408
    6. ')' → logprob: -7.309875965118408
    7. ' ' → logprob: -9.059876441955566
    8. '       ' → logprob: -9.434876441955566
    9. ').' → logprob: -11.059876441955566
    10. '  ' → logprob: -11.184876441955566

Token 370: ' crois' (ID: 65485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.540371835231781
    2. '   ' → logprob: -1.6653718948364258
    3. ' for' → logprob: -1.7903718948364258
    4. 's' → logprob: -3.665371894836426
    5. ' ' → logprob: -4.540371894836426
    6. 'n' → logprob: -4.790371894836426
    7. ' n' → logprob: -5.915371894836426
    8. ' suppose' → logprob: -6.165371894836426
    9. '=' → logprob: -6.665371894836426
    10. ' continue' → logprob: -6.790371894836426

Token 371: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1115482747554779
    2. ')' → logprob: -2.3615481853485107
    3. ',' → logprob: -5.36154842376709
    4. '):' → logprob: -6.48654842376709
    5. '       ' → logprob: -6.73654842376709
    6. 'for' → logprob: -7.23654842376709
    7. ' for' → logprob: -7.48654842376709
    8. '),' → logprob: -7.48654842376709
    9. ' )' → logprob: -8.11154842376709
    10. ' ,' → logprob: -8.61154842376709

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044132448732852936
    2. 'for' → logprob: -3.9191324710845947
    3. ' for' → logprob: -4.044132232666016
    4. '	for' → logprob: -6.044132232666016
    5. '    
' → logprob: -7.419132232666016
    6. '    ' → logprob: -7.794132232666016
    7. 's' → logprob: -8.544132232666016
    8. ',' → logprob: -8.544132232666016
    9. ' ' → logprob: -8.544132232666016
    10. '	' → logprob: -8.669132232666016

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011316602118313313
    2. ' for' → logprob: -5.011316776275635
    3. '   ' → logprob: -5.386316776275635
    4. '	for' → logprob: -12.261316299438477
    5. ' ' → logprob: -12.511316299438477
    6. 'from' → logprob: -14.261316299438477
    7. 'import' → logprob: -14.261316299438477
    8. '  ' → logprob: -14.761316299438477
    9. '       ' → logprob: -14.761316299438477
    10. '    
' → logprob: -15.011316299438477

Token 374: ' seq' (ID: 26775)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1532421112060547
    2. 'key' → logprob: -1.1532421112060547
    3. 'k' → logprob: -1.9032421112060547
    4. ' key' → logprob: -2.9032421112060547
    5. 'prev' → logprob: -3.0282421112060547
    6. ' s' → logprob: -3.4032421112060547
    7. '(s' → logprob: -3.5282421112060547
    8. ' k' → logprob: -4.778242111206055
    9. 'p' → logprob: -5.153242111206055
    10. ' prev' → logprob: -5.528242111206055

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.708835244178772
    2. ',' → logprob: -1.083835244178772
    3. 'in' → logprob: -1.833835244178772
    4. ' ,' → logprob: -5.083835124969482
    5. 's' → logprob: -6.583835124969482
    6. ',in' → logprob: -7.333835124969482
    7. ',s' → logprob: -7.583835124969482
    8. '   ' → logprob: -8.70883560180664
    9. ',se' → logprob: -8.70883560180664
    10. ' ' → logprob: -8.83383560180664

Token 376: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0010438859462738037
    2. ' l' → logprob: -6.876043796539307
    3. '   ' → logprob: -11.751044273376465
    4. 'list' → logprob: -13.126044273376465
    5. ' ' → logprob: -14.001044273376465
    6. '[l' → logprob: -16.12604331970215
    7. '	l' → logprob: -16.62604331970215
    8. '  ' → logprob: -16.62604331970215
    9. ' list' → logprob: -16.87604331970215
    10. '    ' → logprob: -17.37604331970215

Token 377: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.12719550728797913
    2. '[' → logprob: -2.1271955966949463
    3. '(' → logprob: -8.752195358276367
    4. '1' → logprob: -9.377195358276367
    5. '[n' → logprob: -12.002195358276367
    6. '(loop' → logprob: -12.627195358276367
    7. '   ' → logprob: -13.002195358276367
    8. '[next' → logprob: -13.002195358276367
    9. '[now' → logprob: -13.627195358276367
    10. '[line' → logprob: -13.752195358276367

Token 378: 'loop' (ID: 14294)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.5647581219673157
    2. '1' → logprob: -1.189758062362671
    3. '(' → logprob: -2.064758062362671
    4. '(not' → logprob: -8.93975830078125
    5. 'loop' → logprob: -9.56475830078125
    6. ' (' → logprob: -9.68975830078125
    7. '(lo' → logprob: -9.93975830078125
    8. ' ' → logprob: -11.68975830078125
    9. '((' → logprob: -12.18975830078125
    10. '(l' → logprob: -12.18975830078125

Token 379: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.00385387078858912
    2. 'idx' → logprob: -6.253853797912598
    3. '(' → logprob: -6.628853797912598
    4. '1' → logprob: -7.503853797912598
    5. ' ' → logprob: -11.128853797912598
    6. '[' → logprob: -11.378853797912598
    7. 'x' → logprob: -11.378853797912598
    8. '{' → logprob: -12.503853797912598
    9. 'Index' → logprob: -12.753853797912598
    10. '(idx' → logprob: -13.503853797912598

Token 380: '+' (ID: 10)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044444117695093155
    2. '%' → logprob: -3.9194440841674805
    3. '+' → logprob: -3.9194440841674805
    4. '-' → logprob: -5.7944440841674805
    5. '(' → logprob: -8.41944408416748
    6. '[' → logprob: -8.66944408416748
    7. ' ' → logprob: -8.79444408416748
    8. '0' → logprob: -9.66944408416748
    9. '2' → logprob: -10.54444408416748
    10. '   ' → logprob: -11.16944408416748

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.125004768371582
    4. '(' → logprob: -17.750003814697266
    5. '{' → logprob: -18.625003814697266
    6. '
' → logprob: -18.625003814697266
    7. '  ' → logprob: -18.750003814697266
    8. '-' → logprob: -18.875003814697266
    9. '       ' → logprob: -18.875003814697266
    10. '           ' → logprob: -19.312503814697266

Token 382: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.038161635398864746
    2. ')%' → logprob: -3.2881617546081543
    3. ')' → logprob: -9.163161277770996
    4. ' %' → logprob: -11.288161277770996
    5. ']%' → logprob: -14.163161277770996
    6. '2' → logprob: -14.538161277770996
    7. '%)' → logprob: -14.663161277770996
    8. '1' → logprob: -15.038161277770996
    9. '   ' → logprob: -15.538161277770996
    10. '%d' → logprob: -15.788161277770996

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.625019073486328
    4. '```' → logprob: -16.375019073486328
    5. '  ' → logprob: -18.500019073486328
    6. '２' → logprob: -18.750019073486328
    7. '۲' → logprob: -18.937519073486328
    8. ']' → logprob: -19.562519073486328
    9. '-' → logprob: -20.000019073486328
    10. '1' → logprob: -20.000019073486328

Token 384: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0002583594177849591
    2. ']:
' → logprob: -9.125258445739746
    3. ':' → logprob: -9.625258445739746
    4. ']' → logprob: -9.750258445739746
    5. ']:
' → logprob: -12.000258445739746
    6. '}:' → logprob: -12.250258445739746
    7. '].' → logprob: -12.750258445739746
    8. '>:' → logprob: -13.000258445739746
    9. ']:

' → logprob: -13.125258445739746
    10. '):' → logprob: -13.125258445739746

Token 385: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3800544738769531
    2. 'for' → logprob: -1.6300544738769531
    3. '   ' → logprob: -2.130054473876953
    4. '       ' → logprob: -8.130054473876953
    5. '    
' → logprob: -8.255054473876953
    6. '	for' → logprob: -8.255054473876953
    7. ',' → logprob: -9.130054473876953
    8. '   ' → logprob: -9.130054473876953
    9. ' ' → logprob: -9.255054473876953
    10. '
' → logprob: -9.880054473876953

Token 386: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14283141493797302
    2. ' for' → logprob: -2.017831325531006
    3. '       ' → logprob: -9.142831802368164
    4. '   ' → logprob: -10.392831802368164
    5. '	for' → logprob: -11.892831802368164
    6. '           ' → logprob: -13.017831802368164
    7. '        
' → logprob: -13.142831802368164
    8. '
' → logprob: -13.267831802368164
    9. ' ' → logprob: -13.267831802368164
    10. 'count' → logprob: -13.267831802368164

Token 387: ' letter' (ID: 10263)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01933394931256771
    2. 'ch' → logprob: -4.269333839416504
    3. ' c' → logprob: -5.769333839416504
    4. 'nt' → logprob: -7.644333839416504
    5. 'char' → logprob: -7.769333839416504
    6. 'x' → logprob: -8.019333839416504
    7. 'base' → logprob: -8.894333839416504
    8. '"' → logprob: -9.269333839416504
    9. 'letter' → logprob: -9.269333839416504
    10. 'a' → logprob: -9.394333839416504

Token 388: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004716583527624607
    2. 'in' → logprob: -5.379716396331787
    3. ' ' → logprob: -10.504716873168945
    4. '   ' → logprob: -10.629716873168945
    5. '	in' → logprob: -11.254716873168945
    6. 's' → logprob: -11.754716873168945
    7. 'a' → logprob: -12.129716873168945
    8. '```' → logprob: -12.254716873168945
    9. '  ' → logprob: -13.254716873168945
    10. 'In' → logprob: -13.629716873168945

Token 389: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5042970776557922
    2. ''' → logprob: -1.0042970180511475
    3. '['' → logprob: -3.7542970180511475
    4. '["' → logprob: -6.129297256469727
    5. ' "' → logprob: -6.254297256469727
    6. ' '' → logprob: -7.004297256469727
    7. '"AT' → logprob: -7.254297256469727
    8. ' ['' → logprob: -8.504297256469727
    9. ''A' → logprob: -8.504297256469727
    10. '"A' → logprob: -8.629297256469727

Token 390: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.18627527356147766
    2. 'AG' → logprob: -2.1862752437591553
    3. '"' → logprob: -3.3112752437591553
    4. ''' → logprob: -4.811275482177734
    5. '"AT' → logprob: -4.936275482177734
    6. 'AT' → logprob: -5.186275482177734
    7. '"A' → logprob: -9.436275482177734
    8. 'ACT' → logprob: -10.061275482177734
    9. ' AG' → logprob: -10.811275482177734
    10. ' AC' → logprob: -11.061275482177734

Token 391: 'GT' (ID: 30016)
  Prédit: 'GT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GT' → logprob: -0.021086672320961952
    2. 'TG' → logprob: -4.021086692810059
    3. 'G' → logprob: -6.146086692810059
    4. 'T' → logprob: -7.146086692810059
    5. ' GT' → logprob: -14.146086692810059
    6. ' G' → logprob: -14.771086692810059
    7. '
' → logprob: -15.021086692810059
    8. ' TG' → logprob: -15.271086692810059
    9. ' T' → logprob: -15.896086692810059
    10. 'GI' → logprob: -16.146085739135742

Token 392: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.12875331938266754
    2. '":
' → logprob: -2.128753423690796
    3. '"' → logprob: -6.378753185272217
    4. '":
' → logprob: -10.003753662109375
    5. ' "' → logprob: -10.503753662109375
    6. ' ":' → logprob: -11.003753662109375
    7. '"]:
' → logprob: -11.503753662109375
    8. '":

' → logprob: -11.628753662109375
    9. '"):
' → logprob: -12.003753662109375
    10. ':' → logprob: -12.503753662109375

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016068668337538838
    2. '            
' → logprob: -6.7516069412231445
    3. '          ' → logprob: -8.876606941223145
    4. ':' → logprob: -9.626606941223145
    5. '   ' → logprob: -10.001606941223145
    6. '       ' → logprob: -10.126606941223145
    7. ':
' → logprob: -10.876606941223145
    8. '    
' → logprob: -11.501606941223145
    9. '         ' → logprob: -11.501606941223145
    10. '"' → logprob: -11.501606941223145

Token 394: ' l' (ID: 305)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6238608360290527
    2. '           ' → logprob: -1.1238608360290527
    3. 'new' → logprob: -2.2488608360290527
    4. ' s' → logprob: -4.498860836029053
    5. 's' → logprob: -4.873860836029053
    6. 'seq' → logprob: -5.998860836029053
    7. '               ' → logprob: -6.123860836029053
    8. ' next' → logprob: -6.123860836029053
    9. ' seq' → logprob: -6.248860836029053
    10. ' nxt' → logprob: -6.248860836029053

Token 395: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.900034299585968e-05
    2. '[l' → logprob: -9.500088691711426
    3. '[(' → logprob: -11.375088691711426
    4. ' [' → logprob: -14.125088691711426
    5. '           ' → logprob: -14.375088691711426
    6. '[
' → logprob: -14.750088691711426
    7. '   ' → logprob: -15.125088691711426
    8. '```' → logprob: -15.625088691711426
    9. '       ' → logprob: -16.000089645385742
    10. '[int' → logprob: -16.625089645385742

Token 396: 'loop' (ID: 14294)
  Prédit: 'loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0010250702034682035
    2. '(loop' → logprob: -7.001025199890137
    3. ' loop' → logprob: -9.626025199890137
    4. '[' → logprob: -10.001025199890137
    5. '(' → logprob: -14.126025199890137
    6. 'l' → logprob: -14.251025199890137
    7. '   ' → logprob: -15.251025199890137
    8. '.loop' → logprob: -15.626025199890137
    9. '```' → logprob: -16.75102424621582
    10. '           ' → logprob: -16.87602424621582

Token 397: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.042919937521219254
    2. '[' → logprob: -3.292919874191284
    3. '[(' → logprob: -5.542920112609863
    4. 'idx' → logprob: -7.667920112609863
    5. '(loop' → logprob: -7.917920112609863
    6. '   ' → logprob: -10.292920112609863
    7. '_idx' → logprob: -10.417920112609863
    8. '(' → logprob: -11.292920112609863
    9. 'loop' → logprob: -11.417920112609863
    10. 'Index' → logprob: -12.042920112609863

Token 398: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -2.2603901015827432e-05
    2. ' %' → logprob: -10.750022888183594
    3. '[' → logprob: -14.250022888183594
    4. '%n' → logprob: -14.875022888183594
    5. '```' → logprob: -17.250022888183594
    6. ']%' → logprob: -18.250022888183594
    7. '%i' → logprob: -18.375022888183594
    8. '[%' → logprob: -18.750022888183594
    9. '][' → logprob: -18.875022888183594
    10. '   ' → logprob: -18.875022888183594

Token 399: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -10.875020980834961
    3. '```' → logprob: -14.250020980834961
    4. '   ' → logprob: -14.625020980834961
    5. '1' → logprob: -15.000020980834961
    6. '           ' → logprob: -16.00002098083496
    7. '[' → logprob: -16.00002098083496
    8. '0' → logprob: -16.81252098083496
    9. '       ' → logprob: -16.93752098083496
    10. '               ' → logprob: -17.31252098083496

Token 400: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06346561759710312
    2. '[' → logprob: -2.8134655952453613
    3. '"][' → logprob: -7.688465595245361
    4. ' ][' → logprob: -8.43846607208252
    5. ' [' → logprob: -8.68846607208252
    6. ']' → logprob: -9.31346607208252
    7. '[l' → logprob: -9.68846607208252
    8. ')[' → logprob: -9.68846607208252
    9. '}[' → logprob: -10.31346607208252
    10. 'seq' → logprob: -10.31346607208252

Token 401: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.000820230518002063
    2. '(seq' → logprob: -7.500820159912109
    3. ' seq' → logprob: -8.25082015991211
    4. '           ' → logprob: -13.75082015991211
    5. 'sequence' → logprob: -14.00082015991211
    6. '
' → logprob: -14.25082015991211
    7. '   ' → logprob: -14.37582015991211
    8. 'se' → logprob: -14.62582015991211
    9. '```' → logprob: -14.75082015991211
    10. '(' → logprob: -15.25082015991211

Token 402: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16040630638599396
    2. '[-' → logprob: -1.9104063510894775
    3. ' [' → logprob: -9.660406112670898
    4. '[:-' → logprob: -9.910406112670898
    5. ' [-' → logprob: -10.035406112670898
    6. '[:' → logprob: -12.035406112670898
    7. ']' → logprob: -12.660406112670898
    8. '
' → logprob: -12.785406112670898
    9. '[
' → logprob: -13.035406112670898
    10. '   ' → logprob: -13.035406112670898

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. '-' → logprob: -10.5000581741333
    3. '
' → logprob: -11.0000581741333
    4. ' ' → logprob: -11.5000581741333
    5. '   ' → logprob: -13.7500581741333
    6. '+' → logprob: -13.7500581741333
    7. '[' → logprob: -14.6250581741333
    8. '(' → logprob: -15.2500581741333
    9. ' -' → logprob: -15.2500581741333
    10. '```' → logprob: -15.2500581741333

Token 404: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.21129542589187622
    2. '+' → logprob: -1.9612953662872314
    3. ']+' → logprob: -3.5862953662872314
    4. ']' → logprob: -4.5862956047058105
    5. ':' → logprob: -5.0862956047058105
    6. '1' → logprob: -5.3362956047058105
    7. '2' → logprob: -8.086295127868652
    8. '+]' → logprob: -8.211295127868652
    9. ' +' → logprob: -8.461295127868652
    10. ' :]' → logprob: -11.086295127868652

Token 405: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49241262674331665
    2. ']+' → logprob: -1.1174125671386719
    3. ':]' → logprob: -2.992412567138672
    4. '1' → logprob: -5.117412567138672
    5. '+' → logprob: -5.367412567138672
    6. ':' → logprob: -7.617412567138672
    7. '+]' → logprob: -9.117412567138672
    8. ' ]' → logprob: -9.492412567138672
    9. ' :]' → logprob: -9.742412567138672
    10. '3' → logprob: -10.367412567138672

Token 406: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -4.36574100604048e-06
    2. ' letter' → logprob: -12.375004768371582
    3. '(letter' → logprob: -17.875003814697266
    4. 'lette' → logprob: -18.875003814697266
    5. 'lett' → logprob: -19.250003814697266
    6. 'let' → logprob: -19.250003814697266
    7. 'le' → logprob: -20.500003814697266
    8. ' ' → logprob: -20.625003814697266
    9. '```' → logprob: -21.125003814697266
    10. '   ' → logprob: -21.250003814697266

Token 407: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012368128227535635
    2. ' ]' → logprob: -9.375123977661133
    3. ']=' → logprob: -10.375123977661133
    4. ']+=' → logprob: -11.875123977661133
    5. '"]' → logprob: -15.000123977661133
    6. '']' → logprob: -15.875123977661133
    7. '`]' → logprob: -15.875123977661133
    8. ']]' → logprob: -17.000123977661133
    9. ']=(' → logprob: -17.125123977661133
    10. ' ' → logprob: -17.875123977661133

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47456082701683044
    2. ' =' → logprob: -0.9745608568191528
    3. '+=' → logprob: -8.224560737609863
    4. ' +=' → logprob: -9.349560737609863
    5. '=l' → logprob: -9.974560737609863
    6. ']' → logprob: -10.099560737609863
    7. ']=' → logprob: -11.224560737609863
    8. ' ' → logprob: -12.099560737609863
    9. ']+=' → logprob: -12.224560737609863
    10. ' l' → logprob: -12.224560737609863

Token 409: ' ' (ID: 220)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0012964237248525023
    2. '(' → logprob: -6.876296520233154
    3. ' (' → logprob: -8.376296043395996
    4. '(
' → logprob: -11.626296043395996
    5. '           ' → logprob: -11.876296043395996
    6. '(L' → logprob: -12.376296043395996
    7. '   ' → logprob: -13.001296043395996
    8. '(ls' → logprob: -13.251296043395996
    9. '(m' → logprob: -14.126296043395996
    10. '(s' → logprob: -14.126296043395996

Token 410: '0' (ID: 15)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0009431460639461875
    2. '(' → logprob: -7.000943183898926
    3. '(
' → logprob: -11.250943183898926
    4. ' (' → logprob: -11.375943183898926
    5. '(L' → logprob: -12.875943183898926
    6. 'l' → logprob: -13.625943183898926
    7. '   ' → logprob: -14.500943183898926
    8. '(ls' → logprob: -15.000943183898926
    9. '(s' → logprob: -15.500943183898926
    10. '((' → logprob: -15.500943183898926

Token 411: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' ???' (ID: 75946)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' Pourquoi' (ID: 94511)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 418: ' ?
' (ID: 19740)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' =' (ID: 314)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.29273906350135803
    2. '[' → logprob: -1.7927390336990356
    3. 'e' → logprob: -2.792739152908325
    4. '=' → logprob: -4.042738914489746
    5. ' =' → logprob: -5.792738914489746
    6. 'q' → logprob: -6.292738914489746
    7. '[e' → logprob: -7.667738914489746
    8. 'equ' → logprob: -7.917738914489746
    9. 'for' → logprob: -8.167738914489746
    10. '[s' → logprob: -8.292738914489746

Token 422: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06273578852415085
    2. 'loop' → logprob: -3.1877357959747314
    3. '""' → logprob: -5.562735557556152
    4. ' l' → logprob: -5.687735557556152
    5. '"' → logprob: -5.937735557556152
    6. '0' → logprob: -6.437735557556152
    7. 'len' → logprob: -6.562735557556152
    8. 'list' → logprob: -6.812735557556152
    9. 'sum' → logprob: -7.437735557556152
    10. 'n' → logprob: -7.437735557556152

Token 423: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13118381798267365
    2. 'loop' → logprob: -2.3811838626861572
    3. '0' → logprob: -4.881183624267578
    4. '1' → logprob: -5.756183624267578
    5. '(' → logprob: -5.881183624267578
    6. 'len' → logprob: -6.006183624267578
    7. '"' → logprob: -6.131183624267578
    8. '""' → logprob: -6.131183624267578
    9. '(l' → logprob: -6.131183624267578
    10. '{}' → logprob: -6.381183624267578

Token 424: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6211071014404297
    2. ' for' → logprob: -1.6211071014404297
    3. 'for' → logprob: -1.8711071014404297
    4. '<|end|>' → logprob: -2.6211071014404297
    5. ' ' → logprob: -3.9961071014404297
    6. '	for' → logprob: -4.87110710144043
    7. '
' → logprob: -5.24610710144043
    8. ' 
' → logprob: -5.99610710144043
    9. '  
' → logprob: -7.24610710144043
    10. '  ' → logprob: -7.37110710144043

Token 426: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0022657555527985096
    2. '   ' → logprob: -6.252265930175781
    3. ' for' → logprob: -8.002265930175781
    4. '	for' → logprob: -13.377265930175781
    5. ' ' → logprob: -14.627265930175781
    6. '
' → logprob: -15.002265930175781
    7. '       ' → logprob: -16.37726593017578
    8. '  ' → logprob: -17.00226593017578
    9. '    
' → logprob: -17.87726593017578
    10. '```' → logprob: -19.12726593017578

Token 427: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.291278600692749
    2. ' seq' → logprob: -1.541278600692749
    3. 'key' → logprob: -4.291278839111328
    4. 'v' → logprob: -5.041278839111328
    5. 'val' → logprob: -5.041278839111328
    6. ' key' → logprob: -5.666278839111328
    7. ' val' → logprob: -5.666278839111328
    8. ' v' → logprob: -6.291278839111328
    9. 'k' → logprob: -7.541278839111328
    10. 'd' → logprob: -7.791278839111328

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048950910568237305
    2. 'in' → logprob: -3.0489509105682373
    3. ',' → logprob: -8.048951148986816
    4. ' ' → logprob: -11.048951148986816
    5. ' ,' → logprob: -11.923951148986816
    6. ',l' → logprob: -12.548951148986816
    7. '   ' → logprob: -12.673951148986816
    8. '  ' → logprob: -12.798951148986816
    9. '	in' → logprob: -12.798951148986816
    10. ',in' → logprob: -13.048951148986816

Token 429: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14270801842212677
    2. ' l' → logprob: -2.0177080631256104
    3. '   ' → logprob: -10.517707824707031
    4. ' ' → logprob: -12.517707824707031
    5. '[l' → logprob: -14.392707824707031
    6. '	l' → logprob: -14.517707824707031
    7. '    ' → logprob: -15.142707824707031
    8. '       ' → logprob: -15.517707824707031
    9. '  ' → logprob: -15.517707824707031
    10. '           ' → logprob: -16.01770782470703

Token 430: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.619311974034645e-05
    2. '[(' → logprob: -10.250036239624023
    3. '[l' → logprob: -14.250036239624023
    4. ' [' → logprob: -17.125036239624023
    5. '[len' → logprob: -17.250036239624023
    6. '   ' → logprob: -17.375036239624023
    7. '[n' → logprob: -17.625036239624023
    8. '(loop' → logprob: -17.625036239624023
    9. '[next' → logprob: -18.125036239624023
    10. '[
' → logprob: -18.750036239624023

Token 431: 'loop' (ID: 14294)
  Prédit: 'loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.038187455385923386
    2. '(loop' → logprob: -3.2881875038146973
    3. ' loop' → logprob: -9.038187026977539
    4. '(' → logprob: -10.663187026977539
    5. ' (' → logprob: -14.163187026977539
    6. 'lo' → logprob: -14.413187026977539
    7. '   ' → logprob: -14.538187026977539
    8. '(l' → logprob: -14.538187026977539
    9. '(n' → logprob: -14.663187026977539
    10. '1' → logprob: -15.288187026977539

Token 432: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.0011466487776488066
    2. 'idx' → logprob: -6.8761467933654785
    3. '+' → logprob: -9.62614631652832
    4. 'loop' → logprob: -10.87614631652832
    5. 'Index' → logprob: -11.75114631652832
    6. '1' → logprob: -11.87614631652832
    7. '_idx' → logprob: -12.75114631652832
    8. 'x' → logprob: -12.87614631652832
    9. 'Id' → logprob: -13.12614631652832
    10. 'Ix' → logprob: -14.12614631652832

Token 433: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015574338613077998
    2. ' +' → logprob: -9.750155448913574
    3. '1' → logprob: -9.875155448913574
    4. '   ' → logprob: -10.625155448913574
    5. '%' → logprob: -11.375155448913574
    6. '0' → logprob: -12.375155448913574
    7. ' ' → logprob: -12.500155448913574
    8. '       ' → logprob: -14.000155448913574
    9. '2' → logprob: -15.500155448913574
    10. '  ' → logprob: -15.625155448913574

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004223323194310069
    2. '2' → logprob: -8.125422477722168
    3. ' ' → logprob: -9.125422477722168
    4. '   ' → logprob: -11.875422477722168
    5. '```' → logprob: -13.187922477722168
    6. '0' → logprob: -13.687922477722168
    7. '%' → logprob: -14.312922477722168
    8. '       ' → logprob: -14.312922477722168
    9. '(' → logprob: -14.625422477722168
    10. '[' → logprob: -14.687922477722168

Token 435: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0023776658345013857
    2. ']%' → logprob: -6.877377510070801
    3. ')%' → logprob: -7.502377510070801
    4. '):' → logprob: -8.0023775100708
    5. ']:' → logprob: -8.1273775100708
    6. ']:
' → logprob: -10.1273775100708
    7. '):
' → logprob: -10.2523775100708
    8. ')' → logprob: -10.3773775100708
    9. ']' → logprob: -10.8773775100708
    10. '].' → logprob: -11.2523775100708

Token 436: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20167137682437897
    2. '1' → logprob: -1.7016713619232178
    3. ' ' → logprob: -9.201671600341797
    4. 's' → logprob: -9.826671600341797
    5. '%' → logprob: -9.951671600341797
    6. '```' → logprob: -10.451671600341797
    7. '0' → logprob: -11.951671600341797
    8. 'for' → logprob: -12.201671600341797
    9. '{' → logprob: -12.576671600341797
    10. ']' → logprob: -12.951671600341797

Token 437: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008488337509334087
    2. ']:
' → logprob: -5.008488178253174
    3. ':' → logprob: -6.508488178253174
    4. ']' → logprob: -9.383488655090332
    5. ']:
' → logprob: -9.383488655090332
    6. '   ' → logprob: -10.758488655090332
    7. ']:

' → logprob: -11.008488655090332
    8. '}:' → logprob: -11.008488655090332
    9. '       ' → logprob: -11.133488655090332
    10. '):' → logprob: -11.258488655090332

Token 438: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003971897065639496
    2. 's' → logprob: -6.128972053527832
    3. ' s' → logprob: -7.128972053527832
    4. ' for' → logprob: -7.753972053527832
    5. '   ' → logprob: -7.878972053527832
    6. 'for' → logprob: -9.878972053527832
    7. '
' → logprob: -10.628972053527832
    8. '<|end|>' → logprob: -10.878972053527832
    9. ' if' → logprob: -11.003972053527832
    10. ' l' → logprob: -11.128972053527832

Token 439: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8372098803520203
    2. 's' → logprob: -1.712209939956665
    3. 'if' → logprob: -1.712209939956665
    4. '   ' → logprob: -1.712209939956665
    5. ' if' → logprob: -4.462209701538086
    6. 'for' → logprob: -4.837209701538086
    7. ' s' → logprob: -5.837209701538086
    8. ' for' → logprob: -6.587209701538086
    9. 'l' → logprob: -7.212209701538086
    10. '
' → logprob: -7.337209701538086

Token 440: ' Re' (ID: 907)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4854726791381836
    2. 's' → logprob: -1.8604726791381836
    3. 'for' → logprob: -2.4854726791381836
    4. 'if' → logprob: -2.4854726791381836
    5. 'l' → logprob: -3.4854726791381836
    6. '       ' → logprob: -4.735472679138184
    7. ' s' → logprob: -4.860472679138184
    8. ' for' → logprob: -4.860472679138184
    9. ' if' → logprob: -5.235472679138184
    10. ' l' → logprob: -6.610472679138184

Token 441: 'bou' (ID: 79064)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44721317291259766
    2. 's' → logprob: -1.6972131729125977
    3. ' s' → logprob: -2.3222131729125977
    4. ' for' → logprob: -3.0722131729125977
    5. '   ' → logprob: -4.572213172912598
    6. '       ' → logprob: -4.822213172912598
    7. 'seq' → logprob: -5.197213172912598
    8. 'f' → logprob: -6.322213172912598
    9. '  ' → logprob: -6.572213172912598
    10. ' ' → logprob: -6.947213172912598

Token 442: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.39285144209861755
    2. 'cler' → logprob: -2.0178513526916504
    3. 'r' → logprob: -2.5178513526916504
    4. 'cl' → logprob: -3.5178513526916504
    5. 's' → logprob: -3.7678513526916504
    6. 'cles' → logprob: -4.26785135269165
    7. 'c' → logprob: -4.39285135269165
    8. 'for' → logprob: -4.51785135269165
    9. 'n' → logprob: -6.14285135269165
    10. 'f' → logprob: -6.51785135269165

Token 443: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018421730026602745
    2. ':
' → logprob: -4.268421649932861
    3. '   ' → logprob: -6.643421649932861
    4. ':' → logprob: -6.768421649932861
    5. 'for' → logprob: -7.518421649932861
    6. ' for' → logprob: -8.26842212677002
    7. ',' → logprob: -8.39342212677002
    8. '=' → logprob: -8.89342212677002
    9. ' s' → logprob: -9.51842212677002
    10. '      ' → logprob: -9.51842212677002

Token 444: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008740628836676478
    2. 'seq' → logprob: -7.875874042510986
    3. ' l' → logprob: -8.250874519348145
    4. 'for' → logprob: -8.750874519348145
    5. '   ' → logprob: -10.000874519348145
    6. ' ' → logprob: -12.125874519348145
    7. 's' → logprob: -12.250874519348145
    8. '
' → logprob: -12.250874519348145
    9. ' for' → logprob: -12.500874519348145
    10. '    
' → logprob: -12.750874519348145

Token 445: ' même' (ID: 9679)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008893574588000774
    2. ' l' → logprob: -5.2588934898376465
    3. 'for' → logprob: -5.8838934898376465
    4. 'seq' → logprob: -7.8838934898376465
    5. ' for' → logprob: -8.383893966674805
    6. 'loop' → logprob: -9.633893966674805
    7. '   ' → logprob: -9.633893966674805
    8. 's' → logprob: -10.133893966674805
    9. ' loop' → logprob: -10.758893966674805
    10. ' ' → logprob: -11.133893966674805

Token 446: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9463308453559875
    2. '       ' → logprob: -1.4463307857513428
    3. '   ' → logprob: -2.4463307857513428
    4. ':' → logprob: -2.5713307857513428
    5. 's' → logprob: -2.9463307857513428
    6. ' for' → logprob: -3.0713307857513428
    7. ':
' → logprob: -3.4463307857513428
    8. 'seq' → logprob: -3.5713307857513428
    9. 'tokens' → logprob: -4.321331024169922
    10. 'se' → logprob: -4.946331024169922

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029769872780889273
    2. '   ' → logprob: -6.377976894378662
    3. ':' → logprob: -8.62797737121582
    4. ' s' → logprob: -8.75297737121582
    5. ':
' → logprob: -8.75297737121582
    6. ',' → logprob: -8.87797737121582
    7. ' for' → logprob: -9.25297737121582
    8. 'for' → logprob: -9.62797737121582
    9. '           ' → logprob: -9.75297737121582
    10. '      ' → logprob: -9.87797737121582

Token 448: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03896179050207138
    2. ' for' → logprob: -3.538961887359619
    3. 'if' → logprob: -5.163961887359619
    4. '   ' → logprob: -5.788961887359619
    5. ' if' → logprob: -8.413961410522461
    6. 's' → logprob: -9.288961410522461
    7. '	for' → logprob: -11.038961410522461
    8. ' s' → logprob: -11.163961410522461
    9. ' ' → logprob: -11.413961410522461
    10. 'count' → logprob: -11.538961410522461

Token 449: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.5231478810310364
    2. 'letter' → logprob: -0.8981478810310364
    3. ' lettre' → logprob: -11.023147583007812
    4. '(letter' → logprob: -13.398147583007812
    5. 'let' → logprob: -13.648147583007812
    6. ' ' → logprob: -13.773147583007812
    7. '   ' → logprob: -13.898147583007812
    8. '```' → logprob: -15.023147583007812
    9. 'lett' → logprob: -15.398147583007812
    10. 'char' → logprob: -15.398147583007812

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002806894714012742
    2. 'in' → logprob: -5.877806663513184
    3. 's' → logprob: -14.002806663513184
    4. ' ' → logprob: -14.877806663513184
    5. 'In' → logprob: -15.252806663513184
    6. '	in' → logprob: -16.2528076171875
    7. '"' → logprob: -16.7528076171875
    8. 'import' → logprob: -16.7528076171875
    9. '<|end|>' → logprob: -16.7528076171875
    10. '"in' → logprob: -16.7528076171875

Token 451: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019971546716988087
    2. ' "' → logprob: -6.251996994018555
    3. ''' → logprob: -10.251996994018555
    4. '"A' → logprob: -10.501996994018555
    5. '"AT' → logprob: -12.376996994018555
    6. ' ' → logprob: -14.626996994018555
    7. '   ' → logprob: -14.626996994018555
    8. ' '' → logprob: -15.001996994018555
    9. '"C' → logprob: -16.001996994018555
    10. '"А' → logprob: -16.126996994018555

Token 452: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.029790647327899933
    2. '"' → logprob: -3.5297906398773193
    3. 'AG' → logprob: -11.279790878295898
    4. ''' → logprob: -11.779790878295898
    5. '"A' → logprob: -11.779790878295898
    6. ' A' → logprob: -12.279790878295898
    7. 'A' → logprob: -12.529790878295898
    8. ' "' → logprob: -13.654790878295898
    9. ' AC' → logprob: -13.779790878295898
    10. 'ACT' → logprob: -14.529790878295898

Token 453: 'GT' (ID: 30016)
  Prédit: 'GT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GT' → logprob: -0.0013330980436876416
    2. 'G' → logprob: -6.626333236694336
    3. 'gt' → logprob: -12.751333236694336
    4. ' GT' → logprob: -13.251333236694336
    5. '"' → logprob: -14.251333236694336
    6. ' G' → logprob: -15.001333236694336
    7. '
' → logprob: -15.376333236694336
    8. 'T' → logprob: -15.501333236694336
    9. 'TG' → logprob: -15.876333236694336
    10. 'GA' → logprob: -16.001333236694336

Token 454: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37161552906036377
    2. ':' → logprob: -1.4966155290603638
    3. '           ' → logprob: -2.496615409851074
    4. '":' → logprob: -6.371615409851074
    5. '":
' → logprob: -6.371615409851074
    6. '):
' → logprob: -7.996615409851074
    7. '"' → logprob: -9.871615409851074
    8. '               ' → logprob: -9.996615409851074
    9. ':

' → logprob: -10.496615409851074
    10. ':
' → logprob: -10.621615409851074

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004978670622222126
    2. ' if' → logprob: -8.000497817993164
    3. '
' → logprob: -9.500497817993164
    4. 'if' → logprob: -10.750497817993164
    5. '            
' → logprob: -11.375497817993164
    6. '       ' → logprob: -11.750497817993164
    7. '               ' → logprob: -11.875497817993164
    8. '          ' → logprob: -12.000497817993164
    9. '	       ' → logprob: -12.000497817993164
    10. ',' → logprob: -12.125497817993164

Token 456: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10736087709665298
    2. ' if' → logprob: -2.60736083984375
    3. '           ' → logprob: -4.10736083984375
    4. '               ' → logprob: -5.35736083984375
    5. 'new' → logprob: -5.98236083984375
    6. 'val' → logprob: -6.73236083984375
    7. 'key' → logprob: -6.98236083984375
    8. 'v' → logprob: -7.60736083984375
    9. 'next' → logprob: -7.73236083984375
    10. 'l' → logprob: -7.98236083984375

Token 457: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.3184462785720825
    2. 'judge' → logprob: -1.3184462785720825
    3. 'jud' → logprob: -5.818446159362793
    4. '           ' → logprob: -7.193446159362793
    5. '   ' → logprob: -7.818446159362793
    6. 'j' → logprob: -8.318446159362793
    7. ' ' → logprob: -8.818446159362793
    8. 'jug' → logprob: -9.193446159362793
    9. ' juge' → logprob: -9.443446159362793
    10. ' j' → logprob: -9.818446159362793

Token 458: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -1.2948405128554441e-05
    2. '((' → logprob: -11.87501335144043
    3. '(' → logprob: -13.37501335144043
    4. '(s' → logprob: -13.50001335144043
    5. ' (' → logprob: -13.75001335144043
    6. 'seq' → logprob: -13.87501335144043
    7. '(se' → logprob: -14.62501335144043
    8. '(sequence' → logprob: -15.12501335144043
    9. '   ' → logprob: -16.12501335144043
    10. '(
' → logprob: -17.87501335144043

Token 459: '+' (ID: 10)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019672929774969816
    2. ' +' → logprob: -7.001967430114746
    3. '+' → logprob: -7.251967430114746
    4. '(' → logprob: -9.126967430114746
    5. ' [' → logprob: -9.376967430114746
    6. '+[' → logprob: -9.376967430114746
    7. '(seq' → logprob: -10.001967430114746
    8. '([' → logprob: -11.876967430114746
    9. 'seq' → logprob: -12.501967430114746
    10. '()[' → logprob: -13.001967430114746

Token 460: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0011752246646210551
    2. ' letter' → logprob: -6.751175403594971
    3. '(letter' → logprob: -12.376174926757812
    4. ' ' → logprob: -14.876174926757812
    5. '   ' → logprob: -15.126174926757812
    6. '  ' → logprob: -17.501174926757812
    7. 'let' → logprob: -17.501174926757812
    8. 'lette' → logprob: -17.626174926757812
    9. 'lett' → logprob: -18.626174926757812
    10. '    ' → logprob: -18.626174926757812

Token 461: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24156564474105835
    2. '):
' → logprob: -2.491565704345703
    3. '()' → logprob: -2.616565704345703
    4. ')' → logprob: -3.616565704345703
    5. '()):
' → logprob: -3.616565704345703
    6. ')==' → logprob: -6.116565704345703
    7. '())' → logprob: -6.241565704345703
    8. '()==' → logprob: -8.616565704345703
    9. '():' → logprob: -8.991565704345703
    10. ' ):' → logprob: -9.241565704345703

Token 462: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014126161113381386
    2. ' l' → logprob: -6.751412391662598
    3. 'l' → logprob: -9.501412391662598
    4. '              ' → logprob: -9.876412391662598
    5. '                   ' → logprob: -10.751412391662598
    6. '                       ' → logprob: -10.876412391662598
    7. '           ' → logprob: -11.001412391662598
    8. '```' → logprob: -11.751412391662598
    9. ',l' → logprob: -11.751412391662598
    10. '                
' → logprob: -11.876412391662598

Token 463: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0033135272096842527
    2. ' l' → logprob: -6.0033135414123535
    3. '               ' → logprob: -7.2533135414123535
    4. '                   ' → logprob: -9.253313064575195
    5. '           ' → logprob: -12.003313064575195
    6. '	l' → logprob: -12.128313064575195
    7. 'key' → logprob: -12.253313064575195
    8. '                       ' → logprob: -12.878313064575195
    9. 'if' → logprob: -13.003313064575195
    10. '   ' → logprob: -13.503313064575195

Token 464: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '[l' → logprob: -12.875003814697266
    3. '[(' → logprob: -14.375003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '[
' → logprob: -16.375003814697266
    7. '```' → logprob: -16.375003814697266
    8. '           ' → logprob: -17.000003814697266
    9. 'loop' → logprob: -17.750003814697266
    10. '       ' → logprob: -18.500003814697266

Token 465: 'loop' (ID: 14294)
  Prédit: 'loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -8.077528764260933e-05
    2. '(loop' → logprob: -9.750081062316895
    3. ' loop' → logprob: -11.250081062316895
    4. '[' → logprob: -11.625081062316895
    5. '(' → logprob: -15.500081062316895
    6. '   ' → logprob: -16.000080108642578
    7. 'l' → logprob: -17.000080108642578
    8. 'lop' → logprob: -17.500080108642578
    9. '.loop' → logprob: -17.625080108642578
    10. '0' → logprob: -17.750080108642578

Token 466: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.0011266445508226752
    2. '[' → logprob: -7.376126766204834
    3. 'idx' → logprob: -7.626126766204834
    4. 'Id' → logprob: -12.626126289367676
    5. '%' → logprob: -13.626126289367676
    6. '_idx' → logprob: -13.751126289367676
    7. 'IDX' → logprob: -13.876126289367676
    8. '```' → logprob: -14.126126289367676
    9. 'loop' → logprob: -14.251126289367676
    10. '][' → logprob: -14.501126289367676

Token 467: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -3.1186566047836095e-05
    2. ' %' → logprob: -10.750031471252441
    3. '[' → logprob: -11.750031471252441
    4. '][' → logprob: -13.875031471252441
    5. '```' → logprob: -14.625031471252441
    6. '2' → logprob: -16.250030517578125
    7. ']%' → logprob: -16.250030517578125
    8. '1' → logprob: -16.625030517578125
    9. '%n' → logprob: -17.125030517578125
    10. '0' → logprob: -17.625030517578125

Token 468: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.625005722045898
    3. '```' → logprob: -13.875005722045898
    4. '1' → logprob: -14.375005722045898
    5. '%' → logprob: -15.625005722045898
    6. '   ' → logprob: -16.3750057220459
    7. '0' → logprob: -17.3125057220459
    8. '[' → logprob: -17.3750057220459
    9. '(' → logprob: -17.5000057220459
    10. '           ' → logprob: -17.5625057220459

Token 469: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1439669132232666
    2. '][' → logprob: -2.0189669132232666
    3. '[s' → logprob: -7.5189666748046875
    4. '       ' → logprob: -8.393966674804688
    5. '[l' → logprob: -8.893966674804688
    6. '   ' → logprob: -9.268966674804688
    7. ' [' → logprob: -9.393966674804688
    8. '           ' → logprob: -10.768966674804688
    9. '[str' → logprob: -11.018966674804688
    10. '"][' → logprob: -11.018966674804688

Token 470: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.8193366486229934e-05
    2. '(seq' → logprob: -11.000018119812012
    3. ' seq' → logprob: -13.500018119812012
    4. 's' → logprob: -16.500019073486328
    5. '   ' → logprob: -17.500019073486328
    6. '[' → logprob: -17.750019073486328
    7. 'sequence' → logprob: -18.125019073486328
    8. '(' → logprob: -19.500019073486328
    9. '_seq' → logprob: -19.625019073486328
    10. '.seq' → logprob: -20.500019073486328

Token 471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.50000286102295
    3. '   ' → logprob: -15.00000286102295
    4. '```' → logprob: -15.00000286102295
    5. ']' → logprob: -15.87500286102295
    6. '][' → logprob: -16.125003814697266
    7. ' [' → logprob: -16.250003814697266
    8. '[
' → logprob: -16.375003814697266
    9. '[-' → logprob: -16.625003814697266
    10. '(' → logprob: -17.000003814697266

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.750006675720215
    3. '```' → logprob: -14.125006675720215
    4. '
' → logprob: -14.250006675720215
    5. '123' → logprob: -14.375006675720215
    6. '   ' → logprob: -14.875006675720215
    7. '[' → logprob: -15.000006675720215
    8. ':' → logprob: -15.625006675720215
    9. '+' → logprob: -15.750006675720215
    10. '(' → logprob: -15.750006675720215

Token 473: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08620710670948029
    2. '+' → logprob: -3.086207151412964
    3. ':]' → logprob: -3.336207151412964
    4. ']+' → logprob: -7.211206912994385
    5. '+:' → logprob: -7.961206912994385
    6. ':+' → logprob: -9.211207389831543
    7. ':].' → logprob: -9.836207389831543
    8. '[' → logprob: -10.086207389831543
    9. '+]' → logprob: -11.336207389831543
    10. ':],' → logprob: -11.586207389831543

Token 474: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.0629870858974755e-05
    2. ' +' → logprob: -9.75006103515625
    3. ']+' → logprob: -14.37506103515625
    4. '＋' → logprob: -14.87506103515625
    5. '+l' → logprob: -15.00006103515625
    6. '+
' → logprob: -15.12506103515625
    7. '+k' → logprob: -16.00006103515625
    8. '+[' → logprob: -16.12506103515625
    9. '	' → logprob: -16.25006103515625
    10. '+n' → logprob: -17.00006103515625

Token 475: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.5048530030981055e-06
    2. ' letter' → logprob: -13.500001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '(letter' → logprob: -20.375001907348633
    5. ' ' → logprob: -21.000001907348633
    6. '           ' → logprob: -21.625001907348633
    7. '  ' → logprob: -22.625001907348633
    8. '```' → logprob: -22.750001907348633
    9. 'Letter' → logprob: -23.125001907348633
    10. '
' → logprob: -23.500001907348633

Token 476: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20161789655685425
    2. ']+=' → logprob: -1.701617956161499
    3. ']=' → logprob: -8.826618194580078
    4. ']=(' → logprob: -9.951618194580078
    5. '+=' → logprob: -11.576618194580078
    6. ' ]' → logprob: -15.201618194580078
    7. '```' → logprob: -15.576618194580078
    8. '+' → logprob: -16.201618194580078
    9. '=' → logprob: -16.701618194580078
    10. ']+' → logprob: -16.701618194580078

Token 477: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018993154168128967
    2. '=' → logprob: -4.018993377685547
    3. '=(' → logprob: -7.393993377685547
    4. ']+=' → logprob: -9.268993377685547
    5. ' +=' → logprob: -9.268993377685547
    6. ' =' → logprob: -10.518993377685547
    7. '+=(' → logprob: -12.268993377685547
    8. '(' → logprob: -12.518993377685547
    9. '%=' → logprob: -12.893993377685547
    10. '+' → logprob: -14.393993377685547

Token 478: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00022403974435292184
    2. '               ' → logprob: -8.875224113464355
    3. '(' → logprob: -10.125224113464355
    4. '                   ' → logprob: -11.375224113464355
    5. ' (' → logprob: -11.500224113464355
    6. '           ' → logprob: -11.625224113464355
    7. '   ' → logprob: -11.875224113464355
    8. '(ls' → logprob: -13.250224113464355
    9. '(L' → logprob: -13.750224113464355
    10. '              ' → logprob: -13.875224113464355

Token 479: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0025860045570880175
    2. 'l' → logprob: -6.0025858879089355
    3. '           ' → logprob: -9.877586364746094
    4. '               ' → logprob: -10.252586364746094
    5. ' (' → logprob: -11.752586364746094
    6. '(' → logprob: -11.877586364746094
    7. '                   ' → logprob: -12.752586364746094
    8. '(
' → logprob: -13.002586364746094
    9. '              ' → logprob: -13.752586364746094
    10. '   ' → logprob: -14.502586364746094

Token 480: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01815345324575901
    2. '[(' → logprob: -4.018153667449951
    3. '[l' → logprob: -12.893153190612793
    4. '[
' → logprob: -14.268153190612793
    5. '[((' → logprob: -16.01815414428711
    6. 'l' → logprob: -16.26815414428711
    7. '```' → logprob: -18.01815414428711
    8. '[int' → logprob: -18.76815414428711
    9. '

' → logprob: -18.89315414428711
    10. '(' → logprob: -19.14315414428711

Token 481: 'loop' (ID: 14294)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.20409543812274933
    2. '[(' → logprob: -1.954095482826233
    3. '(' → logprob: -3.2040953636169434
    4. '[' → logprob: -6.079095363616943
    5. ' (' → logprob: -10.704095840454102
    6. 'loop' → logprob: -12.204095840454102
    7. '((' → logprob: -12.579095840454102
    8. '(l' → logprob: -13.829095840454102
    9. '   ' → logprob: -14.329095840454102
    10. '```' → logprob: -14.454095840454102

Token 482: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.0029459670186042786
    2. 'x' → logprob: -6.502945899963379
    3. 'idx' → logprob: -7.252945899963379
    4. '[(' → logprob: -7.752945899963379
    5. '(loop' → logprob: -9.752945899963379
    6. '_idx' → logprob: -9.752945899963379
    7. '(' → logprob: -10.002945899963379
    8. '[' → logprob: -10.377945899963379
    9. ']' → logprob: -10.752945899963379
    10. 'Id' → logprob: -11.377945899963379

Token 483: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.009200616739690304
    2. '[(' → logprob: -4.884200572967529
    3. '+' → logprob: -6.634200572967529
    4. '[' → logprob: -8.884201049804688
    5. '(' → logprob: -9.134201049804688
    6. '((' → logprob: -11.509201049804688
    7. '][' → logprob: -12.134201049804688
    8. '...' → logprob: -12.634201049804688
    9. ' %' → logprob: -12.634201049804688
    10. '(loop' → logprob: -12.884201049804688

Token 484: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41352578997612
    2. '2' → logprob: -1.6635258197784424
    3. '[(' → logprob: -2.7885258197784424
    4. 'Idx' → logprob: -3.5385258197784424
    5. '1' → logprob: -4.288525581359863
    6. '(loop' → logprob: -4.413525581359863
    7. 'loop' → logprob: -5.163525581359863
    8. '((' → logprob: -5.538525581359863
    9. '[' → logprob: -5.538525581359863
    10. 'idx' → logprob: -5.913525581359863

Token 485: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1629379838705063
    2. '][' → logprob: -1.9129379987716675
    3. '.get' → logprob: -6.912938117980957
    4. '].' → logprob: -7.287938117980957
    5. '   ' → logprob: -7.787938117980957
    6. '       ' → logprob: -8.537938117980957
    7. '           ' → logprob: -9.662938117980957
    8. ')[' → logprob: -9.912938117980957
    9. 'get' → logprob: -10.287938117980957
    10. '                   ' → logprob: -10.662938117980957

Token 486: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -9.014684110297821e-06
    2. '(seq' → logprob: -11.875008583068848
    3. ' seq' → logprob: -13.625008583068848
    4. '[' → logprob: -14.625008583068848
    5. 's' → logprob: -15.125008583068848
    6. '   ' → logprob: -16.625009536743164
    7. '           ' → logprob: -17.875009536743164
    8. '       ' → logprob: -18.250009536743164
    9. 'sq' → logprob: -18.375009536743164
    10. ' ' → logprob: -18.375009536743164

Token 487: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8789383830153383e-05
    2. '1' → logprob: -11.625019073486328
    3. 's' → logprob: -12.625019073486328
    4. '][' → logprob: -13.625019073486328
    5. '```' → logprob: -13.750019073486328
    6. '(' → logprob: -13.875019073486328
    7. '   ' → logprob: -14.375019073486328
    8. '[(' → logprob: -14.750019073486328
    9. ']' → logprob: -15.375019073486328
    10. 'def' → logprob: -15.500019073486328

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.824579784530215e-05
    2. '[' → logprob: -10.0000581741333
    3. ' ' → logprob: -12.1250581741333
    4. '   ' → logprob: -12.7500581741333
    5. '(' → logprob: -13.0000581741333
    6. '```' → logprob: -13.8750581741333
    7. '
' → logprob: -15.3750581741333
    8. '0' → logprob: -15.6875581741333
    9. '#' → logprob: -15.8750581741333
    10. 's' → logprob: -16.187559127807617

Token 489: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.04564451798796654
    2. ':' → logprob: -3.795644521713257
    3. '1' → logprob: -4.420644283294678
    4. ']' → logprob: -4.920644283294678
    5. ']+' → logprob: -6.670644283294678
    6. '+' → logprob: -6.920644283294678
    7. '2' → logprob: -8.045644760131836
    8. '[' → logprob: -9.795644760131836
    9. ' :]' → logprob: -9.795644760131836
    10. '   ' → logprob: -10.045644760131836

Token 490: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06882835924625397
    2. ']+' → logprob: -3.4438283443450928
    3. ' +' → logprob: -3.5688283443450928
    4. ']' → logprob: -5.068828582763672
    5. '+]' → logprob: -10.318828582763672
    6. ' ]' → logprob: -10.318828582763672
    7. '][' → logprob: -11.568828582763672
    8. '[' → logprob: -12.318828582763672
    9. '+"]' → logprob: -12.693828582763672
    10. '+[' → logprob: -13.318828582763672

Token 491: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.0325924449716695e-05
    2. ' letter' → logprob: -11.50001049041748
    3. '(letter' → logprob: -16.125009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '           ' → logprob: -19.500009536743164
    6. ']' → logprob: -20.250009536743164
    7. '_letter' → logprob: -20.250009536743164
    8. '```' → logprob: -20.500009536743164
    9. 'Letter' → logprob: -21.000009536743164
    10. 'LETTER' → logprob: -21.625009536743164

Token 492: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25206029415130615
    2. ' +' → logprob: -1.5020602941513062
    3. ']+' → logprob: -9.752059936523438
    4. ']' → logprob: -9.752059936523438
    5. '+
' → logprob: -11.627059936523438
    6. '+l' → logprob: -13.502059936523438
    7. ' +
' → logprob: -13.752059936523438
    8. '+s' → logprob: -14.502059936523438
    9. '```' → logprob: -14.627059936523438
    10. ']+=' → logprob: -15.127059936523438

Token 493: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142202079296112
    2. ' +' → logprob: -1.7014219760894775
    3. '+
' → logprob: -12.576421737670898
    4. '+l' → logprob: -12.576421737670898
    5. '+s' → logprob: -14.701421737670898
    6. '+c' → logprob: -15.201421737670898
    7. ' +
' → logprob: -15.576421737670898
    8. '＋' → logprob: -15.826421737670898
    9. '+n' → logprob: -16.2014217376709
    10. '+r' → logprob: -16.3264217376709

Token 494: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009034995920956135
    2. ' l' → logprob: -4.759035110473633
    3. '           ' → logprob: -8.509035110473633
    4. '                   ' → logprob: -9.134035110473633
    5. '               ' → logprob: -9.384035110473633
    6. '   ' → logprob: -11.509035110473633
    7. '       ' → logprob: -11.759035110473633
    8. '                       ' → logprob: -12.759035110473633
    9. '                           ' → logprob: -13.759035110473633
    10. '         ' → logprob: -14.384035110473633

Token 495: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.000000953674316
    3. '[
' → logprob: -15.125000953674316
    4. '((' → logprob: -16.375001907348633
    5. '(' → logprob: -17.625001907348633
    6. '```' → logprob: -18.500001907348633
    7. '[((' → logprob: -18.500001907348633
    8. '[[' → logprob: -18.750001907348633
    9. ' [(' → logprob: -18.875001907348633
    10. '
' → logprob: -18.875001907348633

Token 496: 'loop' (ID: 14294)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.2526662349700928
    2. 'loop' → logprob: -1.5026662349700928
    3. '(' → logprob: -7.252666473388672
    4. ' loop' → logprob: -10.627666473388672
    5. ' (' → logprob: -12.752666473388672
    6. '1' → logprob: -15.002666473388672
    7. '.loop' → logprob: -15.127666473388672
    8. '   ' → logprob: -15.627666473388672
    9. '_loop' → logprob: -16.627666473388672
    10. '```' → logprob: -16.752666473388672

Token 497: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.0006409500492736697
    2. 'idx' → logprob: -7.375640869140625
    3. '+' → logprob: -11.750640869140625
    4. '_idx' → logprob: -13.500640869140625
    5. 'Ix' → logprob: -14.000640869140625
    6. 'Index' → logprob: -14.125640869140625
    7. 'IDX' → logprob: -14.500640869140625
    8. '(' → logprob: -14.500640869140625
    9. 'Id' → logprob: -14.750640869140625
    10. '[' → logprob: -15.000640869140625

Token 498: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001329791557509452
    2. '(' → logprob: -9.25013256072998
    3. '1' → logprob: -10.87513256072998
    4. '((' → logprob: -12.37513256072998
    5. '[(' → logprob: -12.37513256072998
    6. ' +' → logprob: -13.00013256072998
    7. '```' → logprob: -13.00013256072998
    8. '[' → logprob: -13.00013256072998
    9. '%' → logprob: -13.62513256072998
    10. '+(' → logprob: -14.87513256072998

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.625005722045898
    3. '   ' → logprob: -13.875005722045898
    4. '(' → logprob: -14.875005722045898
    5. '```' → logprob: -15.000005722045898
    6. '2' → logprob: -15.750005722045898
    7. '
' → logprob: -16.0000057220459
    8. '%' → logprob: -16.3750057220459
    9. 'idx' → logprob: -16.6250057220459
    10. '       ' → logprob: -17.0000057220459

Token 500: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0005104990559630096
    2. ')%' → logprob: -7.7505106925964355
    3. ']%' → logprob: -9.625510215759277
    4. ' %' → logprob: -11.375510215759277
    5. '"%' → logprob: -15.000510215759277
    6. '()%' → logprob: -15.250510215759277
    7. '```' → logprob: -15.250510215759277
    8. ''%' → logprob: -15.375510215759277
    9. '][' → logprob: -15.375510215759277
    10. '   ' → logprob: -15.375510215759277

Token 501: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.750004768371582
    3. '```' → logprob: -13.500004768371582
    4. '1' → logprob: -14.375004768371582
    5. '``' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.5000057220459
    7. '`' → logprob: -17.8750057220459
    8. '...' → logprob: -18.3750057220459
    9. '  ' → logprob: -18.6875057220459
    10. '[' → logprob: -18.8125057220459

Token 502: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01416798122227192
    2. '][' → logprob: -4.264167785644531
    3. ' [' → logprob: -13.264167785644531
    4. ']' → logprob: -14.014167785644531
    5. '   ' → logprob: -14.139167785644531
    6. ' ][' → logprob: -14.389167785644531
    7. '"][' → logprob: -15.889167785644531
    8. '       ' → logprob: -15.889167785644531
    9. ' ' → logprob: -16.26416778564453
    10. ''][' → logprob: -16.76416778564453

Token 503: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -7.941850526549388e-06
    2. ' seq' → logprob: -11.750007629394531
    3. '(seq' → logprob: -17.87500762939453
    4. 's' → logprob: -20.50000762939453
    5. '   ' → logprob: -21.25000762939453
    6. 'sequence' → logprob: -21.50000762939453
    7. ' ' → logprob: -22.87500762939453
    8. 'se' → logprob: -23.00000762939453
    9. 'sequ' → logprob: -23.12500762939453
    10. '.seq' → logprob: -23.50000762939453

Token 504: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.48670414090156555
    2. ']' → logprob: -0.9867041110992432
    3. ']+' → logprob: -4.486704349517822
    4. 's' → logprob: -8.611703872680664
    5. ']%' → logprob: -8.611703872680664
    6. '[' → logprob: -8.861703872680664
    7. '])*' → logprob: -8.861703872680664
    8. '][' → logprob: -8.986703872680664
    9. 'seq' → logprob: -9.111703872680664
    10. '])+' → logprob: -9.486703872680664

Token 505: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9258430600166321
    2. '%' → logprob: -1.1758430004119873
    3. '*' → logprob: -1.8008430004119873
    4. '           ' → logprob: -2.5508430004119873
    5. ' %' → logprob: -3.1758430004119873
    6. ')' → logprob: -5.175843238830566
    7. '               ' → logprob: -7.175843238830566
    8. '       ' → logprob: -7.300843238830566
    9. '            ' → logprob: -7.675843238830566
    10. '
' → logprob: -7.800843238830566

Token 506: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.4849443838757e-06
    2. ' mod' → logprob: -12.500004768371582
    3. '(mod' → logprob: -14.250004768371582
    4. '	mod' → logprob: -21.375003814697266
    5. 'MOD' → logprob: -23.750003814697266
    6. '_mod' → logprob: -24.250003814697266
    7. ' мод' → logprob: -24.500003814697266
    8. '(' → logprob: -25.000003814697266
    9. ' ' → logprob: -25.000003814697266
    10. '```' → logprob: -25.125003814697266

Token 507: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4399450123310089
    2. '<|end|>' → logprob: -1.3149449825286865
    3. ' s' → logprob: -3.8149449825286865
    4. '           ' → logprob: -4.314945220947266
    5. 's' → logprob: -4.939945220947266
    6. '               ' → logprob: -5.064945220947266
    7. '<|end|>' → logprob: -5.064945220947266
    8. ')' → logprob: -5.189945220947266
    9. '   ' → logprob: -5.439945220947266
    10. '       ' → logprob: -5.689945220947266

Token 508: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05722610279917717
    2. '           ' → logprob: -3.3072261810302734
    3. '               ' → logprob: -4.557226181030273
    4. '       ' → logprob: -5.682226181030273
    5. ' ' → logprob: -6.432226181030273
    6. ' s' → logprob: -6.682226181030273
    7. '<|end|>' → logprob: -7.057226181030273
    8. '  ' → logprob: -7.932226181030273
    9. 's' → logprob: -8.182226181030273
    10. '                   ' → logprob: -8.307226181030273

Token 509: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07077565044164658
    2. ' s' → logprob: -3.0707757472991943
    3. '           ' → logprob: -4.195775508880615
    4. '               ' → logprob: -5.820775508880615
    5. '   ' → logprob: -6.320775508880615
    6. '                   ' → logprob: -6.945775508880615
    7. '       ' → logprob: -7.820775508880615
    8. '
' → logprob: -8.695775985717773
    9. '            ' → logprob: -9.945775985717773
    10. '          ' → logprob: -9.945775985717773

Token 510: ' Je' (ID: 4678)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29260697960853577
    2. ' s' → logprob: -2.417607069015503
    3. '               ' → logprob: -3.167607069015503
    4. '           ' → logprob: -3.292607069015503
    5. '<|end|>' → logprob: -4.042606830596924
    6. '   ' → logprob: -4.292606830596924
    7. ' ' → logprob: -4.542606830596924
    8. '#' → logprob: -4.667606830596924
    9. '                ' → logprob: -5.667606830596924
    10. '                   ' → logprob: -5.667606830596924

Token 511: ' compte' (ID: 19657)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03208323195576668
    2. ' s' → logprob: -3.65708327293396
    3. ' continue' → logprob: -5.907083034515381
    4. 'continue' → logprob: -6.407083034515381
    5. 'm' → logprob: -7.907083034515381
    6. '#' → logprob: -8.657083511352539
    7. '=' → logprob: -8.782083511352539
    8. '	s' → logprob: -9.282083511352539
    9. ' ' → logprob: -9.657083511352539
    10. '<|end|>' → logprob: -9.657083511352539

Token 512: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14681792259216309
    2. ' s' → logprob: -2.521817922592163
    3. '<|end|>' → logprob: -3.146817922592163
    4. '           ' → logprob: -5.771818161010742
    5. '<|end|>' → logprob: -6.271818161010742
    6. '               ' → logprob: -6.521818161010742
    7. '       ' → logprob: -6.771818161010742
    8. '   ' → logprob: -7.146818161010742
    9. '#' → logprob: -7.146818161010742
    10. '    ' → logprob: -7.521818161010742

Token 513: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2690213620662689
    2. '+=' → logprob: -1.5190213918685913
    3. ' =' → logprob: -4.769021511077881
    4. '=' → logprob: -5.394021511077881
    5. 's' → logprob: -5.769021511077881
    6. ' s' → logprob: -7.394021511077881
    7. ' ' → logprob: -9.894021034240723
    8. '   ' → logprob: -10.269021034240723
    9. '  ' → logprob: -10.894021034240723
    10. '           ' → logprob: -11.019021034240723

Token 514: ' man' (ID: 873)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7069217562675476
    2. ' sequences' → logprob: -1.3319218158721924
    3. 'l' → logprob: -2.2069218158721924
    4. ' s' → logprob: -2.8319218158721924
    5. 's' → logprob: -3.2069218158721924
    6. ' façons' → logprob: -4.206921577453613
    7. ' ways' → logprob: -5.581921577453613
    8. 'tokens' → logprob: -6.081921577453613
    9. 'sé' → logprob: -6.456921577453613
    10. ' codes' → logprob: -6.456921577453613

Token 515: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.0024323819670826197
    2. 'que' → logprob: -7.252432346343994
    3. 'ière' → logprob: -7.252432346343994
    4. 'ques' → logprob: -7.252432346343994
    5. 'ieres' → logprob: -8.627432823181152
    6. 's' → logprob: -10.002432823181152
    7. 'iere' → logprob: -10.252432823181152
    8. 'i' → logprob: -11.752432823181152
    9. 'iers' → logprob: -12.002432823181152
    10. 'us' → logprob: -12.127432823181152

Token 516: ' val' (ID: 1459)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09721387177705765
    2. '   ' → logprob: -2.9722139835357666
    3. ' s' → logprob: -3.9722139835357666
    4. '           ' → logprob: -5.0972137451171875
    5. 's' → logprob: -5.2222137451171875
    6. '       ' → logprob: -5.5972137451171875
    7. '                   ' → logprob: -6.7222137451171875
    8. '              ' → logprob: -6.8472137451171875
    9. '                ' → logprob: -6.9722137451171875
    10. '<|end|>' → logprob: -7.0972137451171875

Token 517: 'ides' (ID: 4105)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.005727320909500122
    2. 'ière' → logprob: -5.380727291107178
    3. 'érer' → logprob: -7.755727291107178
    4. 'ieres' → logprob: -9.005727767944336
    5. 'i' → logprob: -9.130727767944336
    6. '#' → logprob: -9.380727767944336
    7. 'er' → logprob: -9.380727767944336
    8. 'ères' → logprob: -9.380727767944336
    9. 'érées' → logprob: -9.630727767944336
    10. 'if' → logprob: -10.880727767944336

Token 518: '...' (ID: 1008)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29753440618515015
    2. '               ' → logprob: -1.422534465789795
    3. '           ' → logprob: -4.922534465789795
    4. ' s' → logprob: -5.922534465789795
    5. '       ' → logprob: -6.047534465789795
    6. 's' → logprob: -6.297534465789795
    7. '
' → logprob: -7.172534465789795
    8. '                   ' → logprob: -7.797534465789795
    9. ' ' → logprob: -8.047533988952637
    10. '  ' → logprob: -9.047533988952637

Token 519: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11776197701692581
    2. ' s' → logprob: -3.2427620887756348
    3. 's' → logprob: -3.3677620887756348
    4. '<|end|>' → logprob: -4.117762088775635
    5. '               ' → logprob: -4.742762088775635
    6. '       ' → logprob: -5.242762088775635
    7. '           ' → logprob: -5.992762088775635
    8. '<|end|>' → logprob: -6.492762088775635
    9. '
' → logprob: -7.117762088775635
    10. ' ' → logprob: -7.367762088775635

Token 520: '-être' (ID: 33599)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0585836172103882
    2. '   ' → logprob: -1.4335836172103882
    3. '           ' → logprob: -2.0585837364196777
    4. 'être' → logprob: -2.5585837364196777
    5. '-être' → logprob: -3.0585837364196777
    6. '                   ' → logprob: -3.8085837364196777
    7. 's' → logprob: -4.433583736419678
    8. 'ains' → logprob: -4.683583736419678
    9. '                ' → logprob: -4.683583736419678
    10. '       ' → logprob: -4.683583736419678

Token 521: ' inutile' (ID: 157748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05543845519423485
    2. 's' → logprob: -3.05543851852417
    3. 'print' → logprob: -5.43043851852417
    4. 'for' → logprob: -6.43043851852417
    5. ' s' → logprob: -7.93043851852417
    6. '           ' → logprob: -8.180438041687012
    7. '       ' → logprob: -9.430438041687012
    8. '               ' → logprob: -10.305438041687012
    9. '
' → logprob: -10.680438041687012
    10. ' ' → logprob: -10.805438041687012

Token 522: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5528752207756042
    2. '   ' → logprob: -0.9278752207756042
    3. ' s' → logprob: -3.927875280380249
    4. 'print' → logprob: -5.05287504196167
    5. '
' → logprob: -6.92787504196167
    6. 'for' → logprob: -7.42787504196167
    7. ' ' → logprob: -7.55287504196167
    8. '           ' → logprob: -7.92787504196167
    9. '       ' → logprob: -8.427875518798828
    10. '  ' → logprob: -8.927875518798828

Token 523: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13558387756347656
    2. ' s' → logprob: -2.2605838775634766
    3. ' continuer' → logprob: -4.635583877563477
    4. 'continue' → logprob: -5.510583877563477
    5. 'contin' → logprob: -6.510583877563477
    6. '#' → logprob: -6.635583877563477
    7. 'n' → logprob: -7.010583877563477
    8. '   ' → logprob: -7.135583877563477
    9. '```' → logprob: -7.385583877563477
    10. ' continue' → logprob: -7.385583877563477

Token 524: ' faire' (ID: 8119)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.654959499835968
    2. 'continue' → logprob: -1.6549594402313232
    3. ' continuer' → logprob: -2.1549594402313232
    4. 'faire' → logprob: -2.5299594402313232
    5. 's' → logprob: -3.1549594402313232
    6. ' compter' → logprob: -4.904959678649902
    7. ' continue' → logprob: -5.029959678649902
    8. 'comp' → logprob: -5.279959678649902
    9. ' faire' → logprob: -5.654959678649902
    10. 'print' → logprob: -6.029959678649902

Token 525: ' là' (ID: 8052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08212874084711075
    2. '               ' → logprob: -2.5821287631988525
    3. '           ' → logprob: -6.207128524780273
    4. '       ' → logprob: -7.832128524780273
    5. 's' → logprob: -8.457128524780273
    6. '<|end|>' → logprob: -8.707128524780273
    7. '
' → logprob: -8.832128524780273
    8. '                   ' → logprob: -9.457128524780273
    9. ' ' → logprob: -9.957128524780273
    10. '<|end|>' → logprob: -10.207128524780273

Token 526: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018856844399124384
    2. 's' → logprob: -7.626885890960693
    3. '               ' → logprob: -7.626885890960693
    4. '       ' → logprob: -8.251885414123535
    5. '           ' → logprob: -8.251885414123535
    6. '
' → logprob: -8.751885414123535
    7. 'print' → logprob: -9.501885414123535
    8. ' s' → logprob: -10.251885414123535
    9. '<|end|>' → logprob: -10.626885414123535
    10. '    
' → logprob: -10.751885414123535

Token 527: '               ' (ID: 506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7638201117515564
    2. '   ' → logprob: -0.7638201117515564
    3. ' s' → logprob: -3.013820171356201
    4. 'print' → logprob: -4.513820171356201
    5. '
' → logprob: -6.388820171356201
    6. 'for' → logprob: -6.638820171356201
    7. '               ' → logprob: -6.763820171356201
    8. ' ' → logprob: -6.888820171356201
    9. '           ' → logprob: -7.013820171356201
    10. '       ' → logprob: -7.388820171356201

Token 528: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.08658019453287125
    2. ' s' → logprob: -2.836580276489258
    3. '               ' → logprob: -4.211580276489258
    4. '           ' → logprob: -5.461580276489258
    5. '                   ' → logprob: -5.836580276489258
    6. '   ' → logprob: -7.711580276489258
    7. '                               ' → logprob: -7.961580276489258
    8. '
' → logprob: -8.086580276489258
    9. '       ' → logprob: -8.086580276489258
    10. '```' → logprob: -8.461580276489258

Token 529: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4129457175731659
    2. ' +=' → logprob: -1.1629457473754883
    3. '=' → logprob: -3.7879457473754883
    4. ' =' → logprob: -5.787945747375488
    5. '+' → logprob: -11.162945747375488
    6. '   ' → logprob: -11.537945747375488
    7. '+=(' → logprob: -12.537945747375488
    8. ']+=' → logprob: -13.412945747375488
    9. ' ' → logprob: -14.037945747375488
    10. '  ' → logprob: -14.287945747375488

Token 530: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00022308611369226128
    2. ' (' → logprob: -8.500223159790039
    3. '(l' → logprob: -11.000223159790039
    4. '(' → logprob: -13.125223159790039
    5. '(ls' → logprob: -15.250223159790039
    6. '   ' → logprob: -15.250223159790039
    7. '(S' → logprob: -15.625223159790039
    8. ' ' → logprob: -17.00022315979004
    9. '(ans' → logprob: -17.12522315979004
    10. '(ss' → logprob: -17.87522315979004

Token 531: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015987720107659698
    2. '(s' → logprob: -6.501598834991455
    3. ' s' → logprob: -9.251598358154297
    4. '               ' → logprob: -15.501598358154297
    5. ' (' → logprob: -15.626598358154297
    6. 'l' → logprob: -17.126598358154297
    7. '_s' → logprob: -17.251598358154297
    8. '           ' → logprob: -17.376598358154297
    9. '   ' → logprob: -17.501598358154297
    10. '	s' → logprob: -17.501598358154297

Token 532: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47415420413017273
    2. '+' → logprob: -0.9741542339324951
    3. '+s' → logprob: -9.474154472351074
    4. '+l' → logprob: -15.349154472351074
    5. ' ' → logprob: -17.474153518676758
    6. 's' → logprob: -17.599153518676758
    7. ' s' → logprob: -18.224153518676758
    8. ' ' → logprob: -18.349153518676758
    9. '+
' → logprob: -18.349153518676758
    10. '＋' → logprob: -18.474153518676758

Token 533: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0031981545034796
    2. ' l' → logprob: -5.753198146820068
    3. '                   ' → logprob: -11.628198623657227
    4. '               ' → logprob: -12.003198623657227
    5. '              ' → logprob: -13.628198623657227
    6. '           ' → logprob: -13.753198623657227
    7. '(l' → logprob: -14.253198623657227
    8. '                  ' → logprob: -14.503198623657227
    9. '   ' → logprob: -14.878198623657227
    10. '             ' → logprob: -15.253198623657227

Token 534: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011715330183506012
    2. '[(' → logprob: -6.751171588897705
    3. '[l' → logprob: -14.001171112060547
    4. '[((' → logprob: -15.001171112060547
    5. '[
' → logprob: -17.001171112060547
    6. '```' → logprob: -17.626171112060547
    7. '[int' → logprob: -18.376171112060547
    8. '[next' → logprob: -18.501171112060547
    9. '[n' → logprob: -18.876171112060547
    10. '(' → logprob: -19.126171112060547

Token 535: 'loop' (ID: 14294)
  Prédit: 'loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0019310165662318468
    2. '(loop' → logprob: -6.251931190490723
    3. '(' → logprob: -13.626931190490723
    4. ' loop' → logprob: -13.751931190490723
    5. 'lop' → logprob: -17.376930236816406
    6. '.loop' → logprob: -17.751930236816406
    7. 'lo' → logprob: -18.126930236816406
    8. '_loop' → logprob: -18.751930236816406
    9. 'loopt' → logprob: -18.876930236816406
    10. 'l' → logprob: -19.001930236816406

Token 536: 'Idx' (ID: 16248)
  Prédit: 'Idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idx' → logprob: -0.001500579179264605
    2. 'idx' → logprob: -7.251500606536865
    3. 'loop' → logprob: -7.751500606536865
    4. '+' → logprob: -8.126500129699707
    5. '(loop' → logprob: -10.626500129699707
    6. '_idx' → logprob: -11.251500129699707
    7. 'IDX' → logprob: -12.251500129699707
    8. '(' → logprob: -12.251500129699707
    9. ']' → logprob: -12.501500129699707
    10. 'Ix' → logprob: -13.751500129699707

Token 537: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00020652047533076257
    2. '%' → logprob: -8.50020694732666
    3. 'Idx' → logprob: -14.12520694732666
    4. '[' → logprob: -14.25020694732666
    5. '```' → logprob: -15.00020694732666
    6. ')%' → logprob: -15.12520694732666
    7. ' +' → logprob: -15.75020694732666
    8. '1' → logprob: -16.000205993652344
    9. '(' → logprob: -16.000205993652344
    10. ']' → logprob: -16.125205993652344

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. '%' → logprob: -11.625016212463379
    3. '2' → logprob: -12.250016212463379
    4. '+' → logprob: -14.125016212463379
    5. ' ' → logprob: -14.125016212463379
    6. '(' → logprob: -15.500016212463379
    7. '```' → logprob: -16.125015258789062
    8. '   ' → logprob: -16.500015258789062
    9. '
' → logprob: -16.500015258789062
    10. '-' → logprob: -16.750015258789062

Token 539: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.07965438812971115
    2. '%' → logprob: -2.5796544551849365
    3. ']%' → logprob: -7.329654216766357
    4. ')' → logprob: -9.329654693603516
    5. '%)' → logprob: -11.204654693603516
    6. '   ' → logprob: -13.079654693603516
    7. '}%' → logprob: -13.829654693603516
    8. '       ' → logprob: -14.079654693603516
    9. ' %' → logprob: -14.829654693603516
    10. '
' → logprob: -15.204654693603516

Token 540: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005268976557999849
    2. '%' → logprob: -5.2552690505981445
    3. '1' → logprob: -10.880269050598145
    4. 's' → logprob: -12.380269050598145
    5. '```' → logprob: -12.630269050598145
    6. ' ' → logprob: -13.255269050598145
    7. '   ' → logprob: -13.380269050598145
    8. '[' → logprob: -13.505269050598145
    9. '%s' → logprob: -14.630269050598145
    10. ')%' → logprob: -15.005269050598145

Token 541: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022408931981772184
    2. '[' → logprob: -6.1272406578063965
    3. ']' → logprob: -10.127241134643555
    4. ' ][' → logprob: -11.252241134643555
    5. '[s' → logprob: -13.752241134643555
    6. 'seq' → logprob: -14.877241134643555
    7. ')[' → logprob: -15.002241134643555
    8. 's' → logprob: -15.252241134643555
    9. ''][' → logprob: -16.002241134643555
    10. '   ' → logprob: -16.127241134643555

Token 542: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -1.3856492842023727e-06
    2. ' seq' → logprob: -13.625000953674316
    3. '(seq' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.750001907348633
    5. 's' → logprob: -18.625001907348633
    6. ' ' → logprob: -18.875001907348633
    7. '[' → logprob: -19.125001907348633
    8. 'sequence' → logprob: -19.625001907348633
    9. 'sq' → logprob: -20.375001907348633
    10. '       ' → logprob: -20.750001907348633

Token 543: '])' (ID: 4636)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006361891864798963
    2. ']' → logprob: -7.625636100769043
    3. '[' → logprob: -9.250636100769043
    4. '])' → logprob: -10.125636100769043
    5. '[s' → logprob: -12.500636100769043
    6. 'seq' → logprob: -13.000636100769043
    7. 's' → logprob: -13.250636100769043
    8. '])[' → logprob: -13.250636100769043
    9. ' ][' → logprob: -14.125636100769043
    10. ')[' → logprob: -15.000636100769043

Token 544: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05338269844651222
    2. ')%' → logprob: -3.678382635116577
    3. '%' → logprob: -4.053382873535156
    4. ' )' → logprob: -5.053382873535156
    5. ' %' → logprob: -7.303382873535156
    6. '           ' → logprob: -7.803382873535156
    7. '[' → logprob: -7.928382873535156
    8. '       ' → logprob: -8.553382873535156
    9. '*' → logprob: -8.553382873535156
    10. '                   ' → logprob: -8.678382873535156

Token 545: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3856492842023727e-06
    2. ' mod' → logprob: -13.750000953674316
    3. '(mod' → logprob: -15.500000953674316
    4. '```' → logprob: -21.250001907348633
    5. '	mod' → logprob: -22.625001907348633
    6. ' мод' → logprob: -23.500001907348633
    7. 'm' → logprob: -25.125001907348633
    8. 'md' → logprob: -25.875001907348633
    9. '.mod' → logprob: -25.875001907348633
    10. 'mo' → logprob: -25.875001907348633

Token 546: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032390307751484215
    2. '   ' → logprob: -8.625324249267578
    3. 'for' → logprob: -9.625324249267578
    4. ' print' → logprob: -10.375324249267578
    5. 'return' → logprob: -10.750324249267578
    6. '
' → logprob: -11.625324249267578
    7. '```' → logprob: -12.125324249267578
    8. 'n' → logprob: -12.375324249267578
    9. ')' → logprob: -13.375324249267578
    10. 's' → logprob: -13.625324249267578

Token 548: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009270645678043365
    2. '(' → logprob: -7.000926971435547
    3. '((' → logprob: -11.750926971435547
    4. 's' → logprob: -12.500926971435547
    5. '(l' → logprob: -13.500926971435547
    6. '(sum' → logprob: -14.000926971435547
    7. ' (' → logprob: -14.250926971435547
    8. '(n' → logprob: -14.500926971435547
    9. '(len' → logprob: -15.250926971435547
    10. '(
' → logprob: -15.250926971435547

Token 549: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.750001907348633
    3. '))' → logprob: -15.375001907348633
    4. '+' → logprob: -16.125001907348633
    5. ')`' → logprob: -16.250001907348633
    6. ')
' → logprob: -17.125001907348633
    7. '%' → logprob: -17.875001907348633
    8. '())' → logprob: -18.375001907348633
    9. '})' → logprob: -18.500001907348633
    10. ')%' → logprob: -18.625001907348633

Token 550: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8549410104751587
    2. '<|end|>' → logprob: -0.9799410104751587
    3. ' ' → logprob: -2.104940891265869
    4. '#' → logprob: -3.354940891265869
    5. 'n' → logprob: -4.229940891265869
    6. 'X' → logprob: -4.479940891265869
    7. '[' → logprob: -5.354940891265869
    8. ' )' → logprob: -6.229940891265869
    9. '```' → logprob: -6.854940891265869
    10. '0' → logprob: -6.854940891265869

Token 552: ' Le' (ID: 2018)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' résultat' (ID: 62556)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5406814813613892
    2. ' nombre' → logprob: -1.1656814813613892
    3. '#' → logprob: -3.5406813621520996
    4. 'n' → logprob: -4.1656813621521
    5. 'total' → logprob: -4.2906813621521
    6. ' #' → logprob: -5.0406813621521
    7. ' number' → logprob: -5.1656813621521
    8. 'number' → logprob: -5.1656813621521
    9. ' code' → logprob: -5.4156813621521
    10. ' total' → logprob: -5.5406813621521

Token 554: ' final' (ID: 1721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ' même' (ID: 9679)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 558: ' je' (ID: 1264)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8392114043235779
    2. '<|end|>' → logprob: -1.8392114639282227
    3. ' ' → logprob: -1.9642114639282227
    4. ')' → logprob: -2.0892114639282227
    5. '
' → logprob: -3.7142114639282227
    6. '```' → logprob: -3.9642114639282227
    7. '(n' → logprob: -4.214211463928223
    8. '#' → logprob: -4.339211463928223
    9. ''' → logprob: -4.464211463928223
    10. '  ' → logprob: -4.714211463928223

Token 559: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5139595866203308
    2. ''' → logprob: -1.5139596462249756
    3. '.' → logprob: -3.2639596462249756
    4. ')' → logprob: -4.0139594078063965
    5. ' continue' → logprob: -4.0139594078063965
    6. '#' → logprob: -4.2639594078063965
    7. '  ' → logprob: -4.2639594078063965
    8. ' n' → logprob: -4.2639594078063965
    9. '```' → logprob: -4.7639594078063965
    10. '...' → logprob: -5.2639594078063965

Token 560: ' pas' (ID: 2173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9584001898765564
    2. 'pas' → logprob: -0.9584001898765564
    3. ' #' → logprob: -1.9584002494812012
    4. ' ' → logprob: -3.958400249481201
    5. 'que' → logprob: -3.958400249481201
    6. ' pas' → logprob: -3.958400249481201
    7. ' que' → logprob: -4.333400249481201
    8. '()' → logprob: -5.333400249481201
    9. '   ' → logprob: -5.458400249481201
    10. '```' → logprob: -5.708400249481201

Token 561: ' trop' (ID: 14765)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5955988168716431
    2. ' ' → logprob: -0.9705988168716431
    3. ''' → logprob: -3.7205986976623535
    4. '\n' → logprob: -4.4705986976623535
    5. ' )' → logprob: -4.4705986976623535
    6. '()' → logprob: -5.8455986976623535
    7. '
' → logprob: -5.9705986976623535
    8. '  ' → logprob: -5.9705986976623535
    9. '   ' → logprob: -6.0955986976623535
    10. '<|end|>' → logprob: -6.0955986976623535

Token 564: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5999789237976074
    2. ''' → logprob: -1.0999789237976074
    3. ''a' → logprob: -3.0999789237976074
    4. 'est' → logprob: -3.0999789237976074
    5. 'a' → logprob: -4.099978923797607
    6. 'e' → logprob: -5.849978923797607
    7. '')' → logprob: -6.849978923797607
    8. ''''' → logprob: -7.224978923797607
    9. ''était' → logprob: -7.224978923797607
    10. ' '' → logprob: -7.349978923797607

Token 565: ' la' (ID: 557)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.39489421248435974
    2. 'just' → logprob: -1.8948942422866821
    3. 'exact' → logprob: -2.1448941230773926
    4. 'tout' → logprob: -3.6448941230773926
    5. ' correct' → logprob: -4.644894123077393
    6. 'bon' → logprob: -4.894894123077393
    7. 'bien' → logprob: -5.769894123077393
    8. ' exact' → logprob: -5.769894123077393
    9. 'f' → logprob: -6.894894123077393
    10. '```' → logprob: -7.144894123077393

Token 566: ' variable' (ID: 11076)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.8863667249679565
    2. 'correct' → logprob: -2.261366844177246
    3. ')' → logprob: -2.386366844177246
    4. ' final' → logprob: -3.136366844177246
    5. 'answer' → logprob: -3.386366844177246
    6. 'complete' → logprob: -3.511366844177246
    7. 'right' → logprob: -3.636366844177246
    8. ' ' → logprob: -3.761366844177246
    9. 'result' → logprob: -3.761366844177246
    10. ' complete' → logprob: -3.886366844177246

Token 567: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 568: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' naturelle' (ID: 98673)
  Prédit: 'pert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pert' → logprob: -0.4643642008304596
    2. 'just' → logprob: -1.2143641710281372
    3. 'correct' → logprob: -2.8393642902374268
    4. 're' → logprob: -5.214364051818848
    5. ' pertinente' → logprob: -5.464364051818848
    6. 'appropr' → logprob: -6.339364051818848
    7. 'appropriate' → logprob: -6.964364051818848
    8. 'exact' → logprob: -7.589364051818848
    9. 'utile' → logprob: -7.714364051818848
    10. 'bien' → logprob: -7.839364051818848

Token 570: '...' (ID: 1008)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.732975959777832
    2. '<|end|>' → logprob: -0.732975959777832
    3. '[' → logprob: -4.482975959777832
    4. '#' → logprob: -4.607975959777832
    5. ' ' → logprob: -5.232975959777832
    6. '```' → logprob: -5.857975959777832
    7. ']' → logprob: -6.107975959777832
    8. '=' → logprob: -6.607975959777832
    9. 'n' → logprob: -6.607975959777832
    10. ':' → logprob: -6.732975959777832


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 568
Tokens correctement prédits (1ère position, stricte): 205
Tokens correctement prédits (1ère position, avec adaptation): 223
Tokens correctement prédits (top 10): 400
Précision stricte (1ère position): 36.09%
Précision adaptée (1ère position): 39.26%
Précision (top 10): 70.42%
================================================================================
