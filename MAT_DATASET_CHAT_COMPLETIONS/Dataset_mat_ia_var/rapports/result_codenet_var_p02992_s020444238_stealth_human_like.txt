================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
MOD = 1000000007
# c'est important d'avoir un nombre pas trop grand ici
sq = int(n ** 0.5) + 1
# en fait ici on range les "indices naturels" puis ceux qui divisent n
f = [i for i in range(sq)]
f += [n // i for i in range(1, sq)]
f = f[::-1] # oups, je renverse ici j'espère que c'est bon...
k = 2 * sq - 1
dp = [0] + [1] * (k - 1)  # Note: la première valeur est 0 (je me suis dit que c'était mieux ainsi)
for _ in range(m):
    new_dp = [0 for _ in range(k)]
    for j in range(1, k):
        # Je fais une somme cumulée, en espérant que ça soit efficace...
        new_dp[j] = (new_dp[j - 1] + dp[k - j] * (f[j] - f[j - 1])) % MOD
    dp = new_dp  # on écrase, tant pis
print(dp[-1])  # on affiche juste la dernière, comme demandé (normalement c'est celle qu'on veut ?)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1113659217953682
    2. ',' → logprob: -2.736366033554077
    3. ' =' → logprob: -3.236366033554077
    4. ')' → logprob: -7.861365795135498
    5. '```' → logprob: -7.861365795135498
    6. ';' → logprob: -9.111366271972656
    7. '#' → logprob: -9.486366271972656
    8. ',
' → logprob: -9.611366271972656
    9. '[' → logprob: -9.986366271972656
    10. '.' → logprob: -10.361366271972656

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7132365703582764
    2. ' map' → logprob: -1.4632365703582764
    3. ' input' → logprob: -2.2132365703582764
    4. 'map' → logprob: -2.8382365703582764
    5. 'input' → logprob: -2.9632365703582764
    6. '0' → logprob: -3.0882365703582764
    7. ' n' → logprob: -4.9632368087768555
    8. '10' → logprob: -5.8382368087768555
    9. ' int' → logprob: -6.4632368087768555
    10. 'int' → logprob: -7.4632368087768555

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13057087361812592
    2. '(lambda' → logprob: -3.255570888519287
    3. '```' → logprob: -3.505570888519287
    4. '<|end|>' → logprob: -3.630570888519287
    5. '(str' → logprob: -4.880570888519287
    6. '(int' → logprob: -4.880570888519287
    7. '[' → logprob: -6.630570888519287
    8. ')' → logprob: -6.755570888519287
    9. '<|end|>' → logprob: -6.880570888519287
    10. '[int' → logprob: -7.255570888519287

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2532321810722351
    2. ')' → logprob: -2.12823224067688
    3. '(input' → logprob: -3.00323224067688
    4. '```' → logprob: -4.003232002258301
    5. '(user' → logprob: -4.503232002258301
    6. '(int' → logprob: -5.003232002258301
    7. '(str' → logprob: -5.628232002258301
    8. '`)' → logprob: -6.378232002258301
    9. '(token' → logprob: -6.753232002258301
    10. '(range' → logprob: -6.753232002258301

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1602884978055954
    2. 'input' → logprob: -1.9102884531021118
    3. '(input' → logprob: -9.66028881072998
    4. ')' → logprob: -15.03528881072998
    5. ',input' → logprob: -15.91028881072998
    6. '=input' → logprob: -16.160287857055664
    7. '<input' → logprob: -17.160287857055664
    8. ' )' → logprob: -17.785287857055664
    9. '[input' → logprob: -17.785287857055664
    10. '```' → logprob: -18.035287857055664

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0473259687423706
    2. '())' → logprob: -1.1723259687423706
    3. '()' → logprob: -1.7973259687423706
    4. ')' → logprob: -2.17232608795166
    5. '```' → logprob: -4.67232608795166
    6. '('' → logprob: -4.79732608795166
    7. '(token' → logprob: -5.04732608795166
    8. '`()' → logprob: -5.29732608795166
    9. '(""))' → logprob: -5.67232608795166
    10. '`)' → logprob: -5.79732608795166

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015267637791112065
    2. 'strip' → logprob: -6.501526832580566
    3. 'rstrip' → logprob: -11.126526832580566
    4. ')' → logprob: -12.126526832580566
    5. ' split' → logprob: -13.001526832580566
    6. 'read' → logprob: -13.376526832580566
    7. '(split' → logprob: -15.501526832580566
    8. 'spl' → logprob: -16.62652587890625
    9. 'replace' → logprob: -17.12652587890625
    10. '```' → logprob: -17.62652587890625

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02890959195792675
    2. '())' → logprob: -4.028909683227539
    3. '))' → logprob: -4.653909683227539
    4. '()' → logprob: -7.528909683227539
    5. '`)' → logprob: -7.903909683227539
    6. '(' → logprob: -8.653909683227539
    7. '()))' → logprob: -10.403909683227539
    8. ' )' → logprob: -11.653909683227539
    9. ')`' → logprob: -11.653909683227539
    10. '')' → logprob: -11.903909683227539

Token 11: 'MOD' (ID: 52135)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10778630524873734
    2. 'for' → logprob: -3.7327864170074463
    3. 'x' → logprob: -4.232786178588867
    4. '`' → logprob: -4.357786178588867
    5. ',' → logprob: -4.732786178588867
    6. 'd' → logprob: -5.107786178588867
    7. '#' → logprob: -5.357786178588867
    8. 'r' → logprob: -5.482786178588867
    9. '[' → logprob: -5.607786178588867
    10. 'n' → logprob: -5.732786178588867

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23251092433929443
    2. '_' → logprob: -2.107511043548584
    3. ' =' → logprob: -2.482511043548584
    4. ')' → logprob: -7.232511043548584
    5. ',' → logprob: -7.357511043548584
    6. ' ' → logprob: -7.732511043548584
    7. '_=' → logprob: -8.232510566711426
    8. ' _' → logprob: -9.732510566711426
    9. '```' → logprob: -9.982510566711426
    10. '<|end|>' → logprob: -10.482510566711426

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6946688890457153
    2. '10' → logprob: -0.6946688890457153
    3. '100' → logprob: -6.569668769836426
    4. '1' → logprob: -9.069668769836426
    5. ' ' → logprob: -13.444668769836426
    6. '998' → logprob: -15.069668769836426
    7. ' (' → logprob: -15.194668769836426
    8. 'int' → logprob: -15.319668769836426
    9. '109' → logprob: -15.444668769836426
    10. '(' → logprob: -15.444668769836426

Token 14: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023287521675229073
    2. '100' → logprob: -3.773287534713745
    3. '1' → logprob: -10.273287773132324
    4. ' ' → logprob: -12.023287773132324
    5. '998' → logprob: -13.523287773132324
    6. '(' → logprob: -16.273286819458008
    7. 'int' → logprob: -16.898286819458008
    8. '2' → logprob: -18.273286819458008
    9. '```' → logprob: -18.648286819458008
    10. '`' → logprob: -18.648286819458008

Token 15: '000' (ID: 1302)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.325809121131897
    2. ')' → logprob: -2.0758090019226074
    3. '\n' → logprob: -2.0758090019226074
    4. '**' → logprob: -2.2008090019226074
    5. '```' → logprob: -2.7008090019226074
    6. '0' → logprob: -2.7008090019226074
    7. ',' → logprob: -3.2008090019226074
    8. '' → logprob: -3.5758090019226074
    9. '000' → logprob: -4.200809001922607
    10. '_' → logprob: -4.575809001922607

Token 16: '000' (ID: 1302)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7473399639129639
    2. '+' → logprob: -1.9973399639129639
    3. '\' → logprob: -1.9973399639129639
    4. '<|end|>' → logprob: -2.247339963912964
    5. ' ' → logprob: -2.872339963912964
    6. '
' → logprob: -3.497339963912964
    7. '0' → logprob: -4.747340202331543
    8. ' 
' → logprob: -4.747340202331543
    9. '```' → logprob: -4.997340202331543
    10. '*' → logprob: -4.997340202331543

Token 17: '7' (ID: 22)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.679874062538147
    2. '+' → logprob: -1.554874062538147
    3. '\n' → logprob: -2.4298739433288574
    4. '0' → logprob: -3.3048739433288574
    5. ' ' → logprob: -3.4298739433288574
    6. ')' → logprob: -3.6798739433288574
    7. '```' → logprob: -4.054873943328857
    8. '1' → logprob: -4.054873943328857
    9. '
' → logprob: -4.179873943328857
    10. '' → logprob: -4.679873943328857

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36080026626586914
    2. '\n' → logprob: -2.485800266265869
    3. 'result' → logprob: -2.735800266265869
    4. '' → logprob: -3.110800266265869
    5. '\' → logprob: -3.235800266265869
    6. 'n' → logprob: -4.360800266265869
    7. 'a' → logprob: -4.485800266265869
    8. '
' → logprob: -4.610800266265869
    9. ' 
' → logprob: -4.735800266265869
    10. ')' → logprob: -5.360800266265869

Token 19: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5503170490264893
    2. 'result' → logprob: -1.5503170490264893
    3. 'a' → logprob: -2.1753170490264893
    4. '
' → logprob: -3.5503170490264893
    5. '\' → logprob: -4.80031681060791
    6. 'factor' → logprob: -4.80031681060791
    7. 'fact' → logprob: -4.92531681060791
    8. 'res' → logprob: -5.05031681060791
    9. '\n' → logprob: -5.42531681060791
    10. '' → logprob: -5.42531681060791

Token 20: ' c' (ID: 274)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7027884125709534
    2. ' dp' → logprob: -0.7027884125709534
    3. 'from' → logprob: -6.702788352966309
    4. 'fact' → logprob: -6.827788352966309
    5. 'for' → logprob: -7.202788352966309
    6. 'def' → logprob: -7.202788352966309
    7. ' for' → logprob: -7.202788352966309
    8. ' ans' → logprob: -7.702788352966309
    9. ' from' → logprob: -7.702788352966309
    10. ' f' → logprob: -7.952788352966309

Token 21: ''est' (ID: 6616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6752684712409973
    2. 'omb' → logprob: -1.8002684116363525
    3. 'ount' → logprob: -2.3002684116363525
    4. '_' → logprob: -2.4252684116363525
    5. 'o' → logprob: -3.4252684116363525
    6. 'ounter' → logprob: -3.8002684116363525
    7. '=' → logprob: -3.9252684116363525
    8. 'om' → logprob: -4.550268650054932
    9. ' ' → logprob: -4.800268650054932
    10. '[' → logprob: -5.050268650054932

Token 22: ' important' (ID: 3378)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8579796552658081
    2. ' une' → logprob: -1.357979655265808
    3. ' un' → logprob: -1.732979655265808
    4. ' ' → logprob: -3.3579797744750977
    5. ' le' → logprob: -3.3579797744750977
    6. 'l' → logprob: -3.8579797744750977
    7. ' l' → logprob: -3.9829797744750977
    8. '   ' → logprob: -4.982979774475098
    9. 'un' → logprob: -5.482979774475098
    10. 'le' → logprob: -5.732979774475098

Token 23: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.638860821723938
    2. ' ' → logprob: -1.763860821723938
    3. 'result' → logprob: -2.1388607025146484
    4. '\' → logprob: -2.3888607025146484
    5. 'a' → logprob: -2.5138607025146484
    6. 's' → logprob: -2.8888607025146484
    7. '#' → logprob: -3.1388607025146484
    8. 'd' → logprob: -3.2638607025146484
    9. 'def' → logprob: -3.6388607025146484
    10. ',' → logprob: -3.7638607025146484

Token 24: ''avoir' (ID: 55863)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03189919888973236
    2. 'é' → logprob: -4.7818989753723145
    3. ''' → logprob: -5.0318989753723145
    4. ''utiliser' → logprob: -5.2818989753723145
    5. 'a' → logprob: -5.5318989753723145
    6. ''avoir' → logprob: -5.6568989753723145
    7. ''év' → logprob: -7.2818989753723145
    8. 'i' → logprob: -7.7818989753723145
    9. 'éc' → logprob: -8.156899452209473
    10. ''é' → logprob: -8.281899452209473

Token 25: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5235997438430786
    2. ' un' → logprob: -2.273599624633789
    3. ' une' → logprob: -2.398599624633789
    4. ' l' → logprob: -3.148599624633789
    5. ' la' → logprob: -3.273599624633789
    6. ' a' → logprob: -3.773599624633789
    7. ''' → logprob: -4.023599624633789
    8. ' '' → logprob: -4.398599624633789
    9. '"' → logprob: -4.773599624633789
    10. 'a' → logprob: -4.773599624633789

Token 26: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6121571063995361
    2. ' espace' → logprob: -1.7371571063995361
    3. 'es' → logprob: -2.487157106399536
    4. 'e' → logprob: -2.737157106399536
    5. 'a' → logprob: -3.237157106399536
    6. '_' → logprob: -4.362156867980957
    7. '  ' → logprob: -4.487156867980957
    8. '```' → logprob: -4.612156867980957
    9. ' ```' → logprob: -4.862156867980957
    10. 'space' → logprob: -5.237156867980957

Token 27: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19793149828910828
    2. '_' → logprob: -1.9479315280914307
    3. ' d' → logprob: -4.322931289672852
    4. ' de' → logprob: -4.322931289672852
    5. ' _' → logprob: -5.322931289672852
    6. ' space' → logprob: -6.572931289672852
    7. 's' → logprob: -7.322931289672852
    8. '  ' → logprob: -7.572931289672852
    9. '_space' → logprob: -7.822931289672852
    10. ' s' → logprob: -8.197931289672852

Token 28: ' trop' (ID: 14765)
  Prédit: ' trop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trop' → logprob: -0.472159206867218
    2. 'prem' → logprob: -2.5971591472625732
    3. 'nul' → logprob: -2.7221591472625732
    4. 's' → logprob: -2.7221591472625732
    5. ' ' → logprob: -3.0971591472625732
    6. 'n' → logprob: -3.5971591472625732
    7. 'u' → logprob: -4.347159385681152
    8. 'grand' → logprob: -4.347159385681152
    9. '```' → logprob: -4.972159385681152
    10. ' nul' → logprob: -4.972159385681152

Token 29: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.0013986913254484534
    2. ' grand' → logprob: -6.87639856338501
    3. 'g' → logprob: -9.001399040222168
    4. 'pet' → logprob: -9.751399040222168
    5. 'gr' → logprob: -9.876399040222168
    6. '```' → logprob: -10.501399040222168
    7. 'é' → logprob: -10.626399040222168
    8. 'Grand' → logprob: -10.876399040222168
    9. 'large' → logprob: -11.251399040222168
    10. 'gran' → logprob: -11.376399040222168

Token 30: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.896641194820404
    2. ',' → logprob: -1.6466412544250488
    3. 'n' → logprob: -1.6466412544250488
    4. ')' → logprob: -2.896641254425049
    5. 's' → logprob: -3.771641254425049
    6. 'def' → logprob: -4.271641254425049
    7. 'x' → logprob: -4.271641254425049
    8. '#' → logprob: -4.521641254425049
    9. ' 
' → logprob: -4.646641254425049
    10. ' ,' → logprob: -4.896641254425049

Token 31: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4567396640777588
    2. 'n' → logprob: -1.5817396640777588
    3. ',' → logprob: -1.8317396640777588
    4. ' 
' → logprob: -2.081739664077759
    5. 'a' → logprob: -3.456739664077759
    6. 'dp' → logprob: -3.456739664077759
    7. ')' → logprob: -3.706739664077759
    8. ' dp' → logprob: -3.956739664077759
    9. 'd' → logprob: -4.08173942565918
    10. '
' → logprob: -4.20673942565918

Token 32: 'sq' (ID: 57619)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8694771528244019
    2. ' ' → logprob: -1.9944771528244019
    3. 'n' → logprob: -2.2444772720336914
    4. 'a' → logprob: -2.4944772720336914
    5. 'd' → logprob: -2.4944772720336914
    6. 's' → logprob: -2.6194772720336914
    7. 'k' → logprob: -2.6194772720336914
    8. 'max' → logprob: -3.6194772720336914
    9. ' dp' → logprob: -3.6194772720336914
    10. 'x' → logprob: -3.7444772720336914

Token 33: ' =' (ID: 314)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.5721081495285034
    2. 'r' → logprob: -1.0721081495285034
    3. 'u' → logprob: -2.572108268737793
    4. '_rt' → logprob: -5.197108268737793
    5. 'root' → logprob: -5.322108268737793
    6. ' =' → logprob: -6.447108268737793
    7. '_size' → logprob: -7.322108268737793
    8. 'ual' → logprob: -7.822108268737793
    9. 'ua' → logprob: -7.947108268737793
    10. '_root' → logprob: -8.072108268737793

Token 34: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.090774416923523
    2. 'min' → logprob: -1.215774416923523
    3. ' min' → logprob: -2.3407745361328125
    4. '(min' → logprob: -2.5907745361328125
    5. ' int' → logprob: -2.9657745361328125
    6. 'n' → logprob: -3.5907745361328125
    7. '(int' → logprob: -3.5907745361328125
    8. '[min' → logprob: -3.5907745361328125
    9. '[int' → logprob: -4.4657745361328125
    10. ' [' → logprob: -4.7157745361328125

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8670428991317749
    2. '(' → logprob: -1.242042899131775
    3. '((' → logprob: -1.367042899131775
    4. '(s' → logprob: -3.3670430183410645
    5. '(len' → logprob: -6.9920430183410645
    6. '(pow' → logprob: -8.117042541503906
    7. '(m' → logprob: -8.742042541503906
    8. 's' → logprob: -9.742042541503906
    9. ' (' → logprob: -10.367042541503906
    10. '(math' → logprob: -10.742042541503906

Token 36: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0025662644766271114
    2. ' **' → logprob: -6.002566337585449
    3. ')**' → logprob: -9.87756633758545
    4. ')' → logprob: -11.00256633758545
    5. '*' → logprob: -11.37756633758545
    6. '**)' → logprob: -13.00256633758545
    7. ''s' → logprob: -13.25256633758545
    8. '(' → logprob: -13.37756633758545
    9. '**
' → logprob: -13.75256633758545
    10. 'import' → logprob: -13.75256633758545

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002415014896541834
    2. '.' → logprob: -6.127415180206299
    3. '(' → logprob: -8.87741470336914
    4. ' ' → logprob: -9.37741470336914
    5. '2' → logprob: -12.37741470336914
    6. ' ' → logprob: -14.75241470336914
    7. '{' → logprob: -15.12741470336914
    8. ' .' → logprob: -15.12741470336914
    9. '1' → logprob: -15.25241470336914
    10. '-' → logprob: -16.25241470336914

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021821423433721066
    2. '.' → logprob: -6.2521820068359375
    3. '(' → logprob: -8.377182006835938
    4. '2' → logprob: -11.252182006835938
    5. ' ' → logprob: -11.752182006835938
    6. '1' → logprob: -13.627182006835938
    7. '-' → logprob: -14.127182006835938
    8. '{' → logprob: -15.877182006835938
    9. '4' → logprob: -16.127182006835938
    10. ')' → logprob: -16.127182006835938

Token 39: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7835754988482222e-05
    2. '2' → logprob: -11.625018119812012
    3. '0' → logprob: -12.875018119812012
    4. '1' → logprob: -13.250018119812012
    5. ' .' → logprob: -13.625018119812012
    6. '5' → logprob: -14.125018119812012
    7. '3' → logprob: -14.375018119812012
    8. '6' → logprob: -14.500018119812012
    9. ' ' → logprob: -15.500018119812012
    10. '4' → logprob: -15.625018119812012

Token 40: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.41866585687967e-06
    2. '25' → logprob: -12.625008583068848
    3. '4' → logprob: -14.000008583068848
    4. '```' → logprob: -14.375008583068848
    5. '75' → logprob: -14.687508583068848
    6. '   ' → logprob: -15.000008583068848
    7. '0' → logprob: -15.187508583068848
    8. '6' → logprob: -15.500008583068848
    9. '

' → logprob: -15.812508583068848
    10. '05' → logprob: -15.875008583068848

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025011058896780014
    2. ')+' → logprob: -6.002501010894775
    3. ' )' → logprob: -10.877501487731934
    4. '+' → logprob: -12.252501487731934
    5. '))' → logprob: -13.627501487731934
    6. '+)' → logprob: -15.252501487731934
    7. ' +' → logprob: -16.502500534057617
    8. ')+(' → logprob: -16.877500534057617
    9. '())' → logprob: -17.502500534057617
    10. '()' → logprob: -17.502500534057617

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010559365153312683
    2. '+
' → logprob: -5.635559558868408
    3. ' +' → logprob: -5.760559558868408
    4. ')' → logprob: -6.760559558868408
    5. '
' → logprob: -7.010559558868408
    6. '*' → logprob: -7.135559558868408
    7. ' ' → logprob: -8.51055908203125
    8. '\n' → logprob: -9.01055908203125
    9. '<|end|>' → logprob: -9.01055908203125
    10. '```' → logprob: -9.76055908203125

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031818498973734677
    2. ' ' → logprob: -8.12531852722168
    3. '2' → logprob: -10.75031852722168
    4. '   ' → logprob: -15.00031852722168
    5. '  ' → logprob: -16.37531852722168
    6. '3' → logprob: -17.12531852722168
    7. '10' → logprob: -17.37531852722168
    8. '```' → logprob: -17.37531852722168
    9. '5' → logprob: -17.93781852722168
    10. '7' → logprob: -18.25031852722168

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. '2' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.125016212463379
    4. '```' → logprob: -16.750015258789062
    5. '   ' → logprob: -17.625015258789062
    6. '3' → logprob: -18.000015258789062
    7. '  ' → logprob: -18.125015258789062
    8. '10' → logprob: -19.062515258789062
    9. '7' → logprob: -19.250015258789062
    10. '5' → logprob: -19.375015258789062

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041142888367176056
    2. '<|end|>' → logprob: -3.9161429405212402
    3. '' → logprob: -4.54114294052124
    4. '\n' → logprob: -5.91614294052124
    5. ' 
' → logprob: -6.66614294052124
    6. 'for' → logprob: -6.79114294052124
    7. '
' → logprob: -6.91614294052124
    8. '  
' → logprob: -7.41614294052124
    9. '```' → logprob: -7.54114294052124
    10. 'n' → logprob: -7.54114294052124

Token 46: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7748233675956726
    2. '<|end|>' → logprob: -1.7748234272003174
    3. 'for' → logprob: -2.0248234272003174
    4. ' 
' → logprob: -2.5248234272003174
    5. '' → logprob: -3.6498234272003174
    6. 'dp' → logprob: -3.8998234272003174
    7. '\n' → logprob: -4.024823188781738
    8. 's' → logprob: -4.524823188781738
    9. 'n' → logprob: -4.774823188781738
    10. '#' → logprob: -4.899823188781738

Token 47: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0542638301849365
    2. 'dp' → logprob: -1.0542638301849365
    3. ' dp' → logprob: -3.0542638301849365
    4. ' for' → logprob: -3.1792638301849365
    5. 'freq' → logprob: -3.5542638301849365
    6. 'ans' → logprob: -3.8042638301849365
    7. 'div' → logprob: -3.9292638301849365
    8. 'd' → logprob: -3.9292638301849365
    9. 'res' → logprob: -4.054264068603516
    10. 'f' → logprob: -4.304264068603516

Token 48: ' fait' (ID: 7473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1324540078639984
    2. 'for' → logprob: -2.7574539184570312
    3. 'f' → logprob: -4.757453918457031
    4. 'd' → logprob: -5.007453918457031
    5. ' for' → logprob: -5.257453918457031
    6. 'ter' → logprob: -5.757453918457031
    7. 'range' → logprob: -5.757453918457031
    8. ' ' → logprob: -5.882453918457031
    9. 'def' → logprob: -6.007453918457031
    10. ' i' → logprob: -6.257453918457031

Token 49: ' ici' (ID: 27994)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004431659355759621
    2. ' ,' → logprob: -6.12943172454834
    3. ' ' → logprob: -6.50443172454834
    4. 'for' → logprob: -8.50443172454834
    5. 's' → logprob: -8.75443172454834
    6. ' for' → logprob: -8.75443172454834
    7. '<|end|>' → logprob: -10.12943172454834
    8. 'n' → logprob: -10.62943172454834
    9. ')' → logprob: -10.87943172454834
    10. ',s' → logprob: -11.12943172454834

Token 50: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022204618901014328
    2. ' ,' → logprob: -3.897204637527466
    3. ' ' → logprob: -7.272204399108887
    4. ':' → logprob: -8.147204399108887
    5. 'for' → logprob: -9.147204399108887
    6. 'm' → logprob: -9.272204399108887
    7. 'n' → logprob: -9.397204399108887
    8. ' on' → logprob: -10.022204399108887
    9. ' for' → logprob: -10.022204399108887
    10. 's' → logprob: -10.397204399108887

Token 51: ' range' (ID: 3352)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.9630395174026489
    2. ' calc' → logprob: -2.0880393981933594
    3. ' utilise' → logprob: -2.8380393981933594
    4. ' fait' → logprob: -3.0880393981933594
    5. 'range' → logprob: -3.5880393981933594
    6. ' a' → logprob: -3.5880393981933594
    7. ' veut' → logprob: -3.5880393981933594
    8. ' n' → logprob: -3.9630393981933594
    9. 'n' → logprob: -4.213039398193359
    10. ' cherche' → logprob: -4.213039398193359

Token 52: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8953153491020203
    2. 's' → logprob: -1.270315408706665
    3. '(' → logprob: -2.020315408706665
    4. 'les' → logprob: -3.145315408706665
    5. '[]' → logprob: -4.020315170288086
    6. '(s' → logprob: -4.145315170288086
    7. ' ' → logprob: -4.395315170288086
    8. '()' → logprob: -4.645315170288086
    9. '[' → logprob: -4.770315170288086
    10. ' des' → logprob: -4.895315170288086

Token 53: ' "' (ID: 392)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.3925738334655762
    2. 'indices' → logprob: -2.142573833465576
    3. 'élé' → logprob: -2.267573833465576
    4. 'val' → logprob: -2.892573833465576
    5. ' indices' → logprob: -3.142573833465576
    6. 'i' → logprob: -3.392573833465576
    7. 's' → logprob: -3.392573833465576
    8. ' valeurs' → logprob: -3.392573833465576
    9. 'd' → logprob: -3.892573833465576
    10. ' éléments' → logprob: -4.017573833465576

Token 54: 'indices' (ID: 30992)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.3211945295333862
    2. 'val' → logprob: -1.4461945295333862
    3. 'i' → logprob: -2.321194648742676
    4. 'indices' → logprob: -3.071194648742676
    5. 'élé' → logprob: -3.071194648742676
    6. 'b' → logprob: -3.571194648742676
    7. 'queries' → logprob: -3.696194648742676
    8. 'pairs' → logprob: -3.946194648742676
    9. 'fact' → logprob: -4.071194648742676
    10. 's' → logprob: -4.196194648742676

Token 55: ' naturels' (ID: 128363)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.47145670652389526
    2. 'des' → logprob: -2.09645676612854
    3. 'de' → logprob: -2.97145676612854
    4. ' par' → logprob: -3.22145676612854
    5. ' de' → logprob: -3.47145676612854
    6. 's' → logprob: -3.84645676612854
    7. 'd' → logprob: -3.97145676612854
    8. 'dans' → logprob: -4.346456527709961
    9. '```' → logprob: -4.471456527709961
    10. ' d' → logprob: -4.721456527709961

Token 56: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4845814108848572
    2. ' des' → logprob: -1.609581470489502
    3. ' dans' → logprob: -2.859581470489502
    4. 'dans' → logprob: -2.859581470489502
    5. 'des' → logprob: -3.359581470489502
    6. ' par' → logprob: -5.109581470489502
    7. ' "' → logprob: -5.109581470489502
    8. 'de' → logprob: -5.359581470489502
    9. 's' → logprob: -5.984581470489502
    10. ' de' → logprob: -5.984581470489502

Token 57: ' puis' (ID: 18766)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.45438814163208
    2. 'indices' → logprob: -1.95438814163208
    3. ',' → logprob: -2.20438814163208
    4. 's' → logprob: -2.32938814163208
    5. ' des' → logprob: -2.32938814163208
    6. 'des' → logprob: -2.82938814163208
    7. ' ' → logprob: -3.20438814163208
    8. ')' → logprob: -3.95438814163208
    9. '```' → logprob: -3.95438814163208
    10. 'de' → logprob: -4.20438814163208

Token 58: ' ceux' (ID: 26863)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8766237497329712
    2. 'les' → logprob: -0.8766237497329712
    3. ' on' → logprob: -2.5016236305236816
    4. ' les' → logprob: -3.5016236305236816
    5. 'leurs' → logprob: -4.376623630523682
    6. ' leurs' → logprob: -4.751623630523682
    7. 'le' → logprob: -5.001623630523682
    8. 'leur' → logprob: -5.001623630523682
    9. 'tr' → logprob: -6.251623630523682
    10. 'tri' → logprob: -6.376623630523682

Token 59: ' qui' (ID: 2780)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18207457661628723
    2. 'des' → logprob: -2.807074546813965
    3. ' qui' → logprob: -2.932074546813965
    4. ' de' → logprob: -4.182074546813965
    5. 'de' → logprob: -4.682074546813965
    6. 'qui' → logprob: -4.932074546813965
    7. ' liés' → logprob: -5.182074546813965
    8. 'import' → logprob: -5.807074546813965
    9. '```' → logprob: -6.432074546813965
    10. 'du' → logprob: -6.932074546813965

Token 60: ' divis' (ID: 37826)
  Prédit: ' dépass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dépass' → logprob: -0.9954590797424316
    2. 's' → logprob: -1.9954590797424316
    3. ' sont' → logprob: -1.9954590797424316
    4. ' suivent' → logprob: -2.2454590797424316
    5. ' vont' → logprob: -3.3704590797424316
    6. ' viennent' → logprob: -3.4954590797424316
    7. ' n' → logprob: -3.8704590797424316
    8. '```' → logprob: -4.120459079742432
    9. 'n' → logprob: -4.245459079742432
    10. ' ont' → logprob: -4.370459079742432

Token 61: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0017873981269076467
    2. 'nent' → logprob: -7.751787185668945
    3. '```' → logprob: -7.876787185668945
    4. 'aient' → logprob: -8.001787185668945
    5. 'dent' → logprob: -8.376787185668945
    6. 'sent' → logprob: -8.501787185668945
    7. 'nt' → logprob: -9.626787185668945
    8. 'ont' → logprob: -10.126787185668945
    9. 'ents' → logprob: -11.001787185668945
    10. '(ent' → logprob: -11.376787185668945

Token 62: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3705596327781677
    2. ' n' → logprob: -1.3705596923828125
    3. 'm' → logprob: -3.8705596923828125
    4. ' ' → logprob: -4.3705596923828125
    5. ' m' → logprob: -5.1205596923828125
    6. 'l' → logprob: -6.2455596923828125
    7. 'sq' → logprob: -6.8705596923828125
    8. ' les' → logprob: -6.9955596923828125
    9. 'range' → logprob: -6.9955596923828125
    10. 's' → logprob: -7.1205596923828125

Token 63: '
' (ID: 198)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.9257771372795105
    2. 'indices' → logprob: -1.0507771968841553
    3. 'd' → logprob: -1.6757771968841553
    4. ',' → logprob: -3.6757771968841553
    5. 's' → logprob: -5.300776958465576
    6. 'v' → logprob: -5.425776958465576
    7. 'f' → logprob: -5.675776958465576
    8. ' divis' → logprob: -5.800776958465576
    9. 'ranges' → logprob: -5.925776958465576
    10. 'lst' → logprob: -6.550776958465576

Token 64: 'f' (ID: 69)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4036080539226532
    2. 'indices' → logprob: -2.0286080837249756
    3. 'd' → logprob: -2.1536080837249756
    4. 'f' → logprob: -4.6536078453063965
    5. 'lst' → logprob: -5.0286078453063965
    6. 'v' → logprob: -5.2786078453063965
    7. 'values' → logprob: -5.4036078453063965
    8. 'u' → logprob: -5.5286078453063965
    9. 'a' → logprob: -5.5286078453063965
    10. 's' → logprob: -5.6536078453063965

Token 65: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.47653642296791077
    2. ' =' → logprob: -1.4765363931655884
    3. 'actors' → logprob: -2.601536512374878
    4. 'req' → logprob: -2.976536512374878
    5. '=' → logprob: -5.101536273956299
    6. 'rom' → logprob: -5.351536273956299
    7. 'requencies' → logprob: -5.726536273956299
    8. 'r' → logprob: -6.226536273956299
    9. 'act' → logprob: -6.226536273956299
    10. 'irst' → logprob: -6.476536273956299

Token 66: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.4682047367095947
    2. '[]' → logprob: -1.5932047367095947
    3. 'list' → logprob: -1.9682047367095947
    4. '[n' → logprob: -2.0932047367095947
    5. '[' → logprob: -2.3432047367095947
    6. ' []' → logprob: -2.4682047367095947
    7. ' list' → logprob: -2.5932047367095947
    8. '[list' → logprob: -3.4682047367095947
    9. '[s' → logprob: -4.968204498291016
    10. 'sorted' → logprob: -6.593204498291016

Token 67: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02559603750705719
    2. 'i' → logprob: -4.2755961418151855
    3. '1' → logprob: -4.9005961418151855
    4. ' ' → logprob: -6.4005961418151855
    5. 'False' → logprob: -7.4005961418151855
    6. ' i' → logprob: -7.6505961418151855
    7. ']' → logprob: -7.7755961418151855
    8. '-' → logprob: -8.525595664978027
    9. 'n' → logprob: -8.775595664978027
    10. 'True' → logprob: -9.025595664978027

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01778767630457878
    2. 'for' → logprob: -4.142787456512451
    3. '+' → logprob: -6.517787456512451
    4. ' ' → logprob: -8.39278793334961
    5. ')' → logprob: -10.76778793334961
    6. ' +' → logprob: -11.14278793334961
    7. ']' → logprob: -12.89278793334961
    8. '	for' → logprob: -13.01778793334961
    9. '
' → logprob: -13.39278793334961
    10. '  ' → logprob: -13.76778793334961

Token 69: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.000990295666269958
    2. 'range' → logprob: -7.250990390777588
    3. ' i' → logprob: -8.37598991394043
    4. ' ' → logprob: -10.37598991394043
    5. ' in' → logprob: -11.75098991394043
    6. '(range' → logprob: -12.37598991394043
    7. '	range' → logprob: -12.87598991394043
    8. '  ' → logprob: -13.25098991394043
    9. ' ' → logprob: -14.12598991394043
    10. 'i' → logprob: -14.25098991394043

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011403941549360752
    2. 'in' → logprob: -4.636404037475586
    3. ' range' → logprob: -7.261404037475586
    4. 'range' → logprob: -7.636404037475586
    5. ' ' → logprob: -7.886404037475586
    6. '  ' → logprob: -10.511404037475586
    7. 'n' → logprob: -11.261404037475586
    8. ',' → logprob: -11.511404037475586
    9. 's' → logprob: -12.136404037475586
    10. 'd' → logprob: -12.511404037475586

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03366817533969879
    2. 'range' → logprob: -3.408668279647827
    3. '(range' → logprob: -11.908668518066406
    4. ' ' → logprob: -12.033668518066406
    5. '	range' → logprob: -12.158668518066406
    6. '  ' → logprob: -14.033668518066406
    7. ' ran' → logprob: -14.408668518066406
    8. '   ' → logprob: -14.658668518066406
    9. ' xrange' → logprob: -14.908668518066406
    10. ' rang' → logprob: -15.096168518066406

Token 72: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048882681876420975
    2. '(s' → logprob: -3.0488827228546143
    3. '(n' → logprob: -8.298882484436035
    4. ' (' → logprob: -11.048882484436035
    5. '1' → logprob: -11.673882484436035
    6. '(m' → logprob: -11.923882484436035
    7. '(max' → logprob: -12.548882484436035
    8. '(min' → logprob: -13.048882484436035
    9. '(
' → logprob: -13.173882484436035
    10. ' ' → logprob: -13.423882484436035

Token 73: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010164948180317879
    2. ' q' → logprob: -8.001016616821289
    3. '	q' → logprob: -8.251016616821289
    4. ' ' → logprob: -9.251016616821289
    5. '1' → logprob: -9.501016616821289
    6. '   ' → logprob: -9.751016616821289
    7. 'qrt' → logprob: -10.626016616821289
    8. ')' → logprob: -11.001016616821289
    9. '    ' → logprob: -11.126016616821289
    10. '_q' → logprob: -11.126016616821289

Token 74: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06366126984357834
    2. '+' → logprob: -3.6886613368988037
    3. ' )' → logprob: -3.8136613368988037
    4. ' +' → logprob: -4.313661098480225
    5. ')' → logprob: -7.063661098480225
    6. ' ' → logprob: -9.563661575317383
    7. '2' → logprob: -10.063661575317383
    8. ',' → logprob: -10.313661575317383
    9. ')]
' → logprob: -10.438661575317383
    10. ')][' → logprob: -10.438661575317383

Token 75: 'f' (ID: 69)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17865324020385742
    2. 'for' → logprob: -2.5536532402038574
    3. 'f' → logprob: -3.5536532402038574
    4. ',' → logprob: -4.178653240203857
    5. '<|end|>' → logprob: -4.553653240203857
    6. '+
' → logprob: -4.803653240203857
    7. ' for' → logprob: -4.928653240203857
    8. ')' → logprob: -5.678653240203857
    9. ' +' → logprob: -5.678653240203857
    10. ']' → logprob: -6.178653240203857

Token 76: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29085126519203186
    2. ' +' → logprob: -1.4158512353897095
    3. '+[' → logprob: -4.91585111618042
    4. '[' → logprob: -6.41585111618042
    5. ' +
' → logprob: -8.165851593017578
    6. '+
' → logprob: -8.915851593017578
    7. '<|end|>' → logprob: -10.165851593017578
    8. ']' → logprob: -10.290851593017578
    9. '[:]' → logprob: -10.290851593017578
    10. ',' → logprob: -10.790851593017578

Token 77: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0472126342356205
    2. ' [' → logprob: -3.297212600708008
    3. '[' → logprob: -5.047212600708008
    4. '[n' → logprob: -6.922212600708008
    5. '[j' → logprob: -7.297212600708008
    6. '[
' → logprob: -7.672212600708008
    7. '[x' → logprob: -8.422212600708008
    8. ' ' → logprob: -9.797212600708008
    9. '[k' → logprob: -10.047212600708008
    10. '   ' → logprob: -10.297212600708008

Token 78: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.059293124824762344
    2. 'i' → logprob: -3.434293031692505
    3. 'j' → logprob: -4.434293270111084
    4. ' n' → logprob: -5.059293270111084
    5. 'x' → logprob: -5.434293270111084
    6. '(n' → logprob: -6.934293270111084
    7. '(i' → logprob: -8.184292793273926
    8. ' i' → logprob: -8.434292793273926
    9. ' ' → logprob: -8.559292793273926
    10. '   ' → logprob: -8.684292793273926

Token 79: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06997900456190109
    2. ' //' → logprob: -2.694978952407837
    3. '//
' → logprob: -11.694978713989258
    4. '#' → logprob: -11.819978713989258
    5. ' //
' → logprob: -12.069978713989258
    6. '/' → logprob: -12.444978713989258
    7. '%' → logprob: -12.569978713989258
    8. ' ' → logprob: -12.569978713989258
    9. ' ' → logprob: -13.069978713989258
    10. '%i' → logprob: -13.319978713989258

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010933926329016685
    2. 'd' → logprob: -5.385933876037598
    3. 'x' → logprob: -5.635933876037598
    4. ' i' → logprob: -6.385933876037598
    5. '(i' → logprob: -7.385933876037598
    6. 'j' → logprob: -8.135933876037598
    7. ' d' → logprob: -10.510933876037598
    8. 'k' → logprob: -10.510933876037598
    9. 'f' → logprob: -11.260933876037598
    10. 'v' → logprob: -11.260933876037598

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04328519478440285
    2. 'for' → logprob: -3.1682851314544678
    3. ' ' → logprob: -8.668285369873047
    4. '	for' → logprob: -9.293285369873047
    5. ')' → logprob: -11.168285369873047
    6. '  ' → logprob: -13.168285369873047
    7. ' ' → logprob: -13.418285369873047
    8. '   ' → logprob: -13.793285369873047
    9. ']' → logprob: -14.293285369873047
    10. '1' → logprob: -14.418285369873047

Token 82: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6038031578063965
    2. ' range' → logprob: -1.2288031578063965
    3. 'range' → logprob: -2.4788031578063965
    4. ' i' → logprob: -2.6038031578063965
    5. 'f' → logprob: -6.4788031578063965
    6. ' f' → logprob: -6.7288031578063965
    7. ' ' → logprob: -10.228803634643555
    8. '   ' → logprob: -11.728803634643555
    9. '  ' → logprob: -12.478803634643555
    10. '	range' → logprob: -12.978803634643555

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014737951569259167
    2. 'in' → logprob: -7.001473903656006
    3. 'range' → logprob: -8.126473426818848
    4. ' range' → logprob: -8.501473426818848
    5. ' ' → logprob: -9.751473426818848
    6. 'f' → logprob: -13.126473426818848
    7. '  ' → logprob: -13.751473426818848
    8. 's' → logprob: -14.126473426818848
    9. '<|end|>' → logprob: -14.876473426818848
    10. '	range' → logprob: -15.126473426818848

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6326557397842407
    2. ' range' → logprob: -0.7576557397842407
    3. ' ' → logprob: -10.88265609741211
    4. 'f' → logprob: -11.00765609741211
    5. ' f' → logprob: -11.63265609741211
    6. '	range' → logprob: -12.38265609741211
    7. 're' → logprob: -13.13265609741211
    8. '(range' → logprob: -13.38265609741211
    9. '   ' → logprob: -13.50765609741211
    10. ' reversed' → logprob: -13.63265609741211

Token 85: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029903098940849304
    2. '(s' → logprob: -3.7799031734466553
    3. '1' → logprob: -5.029902935028076
    4. '2' → logprob: -10.654903411865234
    5. 'sq' → logprob: -10.779903411865234
    6. ' (' → logprob: -11.029903411865234
    7. 's' → logprob: -11.404903411865234
    8. ' ' → logprob: -11.529903411865234
    9. '(
' → logprob: -12.154903411865234
    10. '(

' → logprob: -13.404903411865234

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2314940094947815
    2. 'sq' → logprob: -1.6064939498901367
    3. '(s' → logprob: -6.231493949890137
    4. 's' → logprob: -6.606493949890137
    5. '(' → logprob: -6.606493949890137
    6. ' ' → logprob: -7.606493949890137
    7. '2' → logprob: -7.856493949890137
    8. ' sq' → logprob: -8.606493949890137
    9. '   ' → logprob: -10.231493949890137
    10. '	s' → logprob: -10.543993949890137

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16596359014511108
    2. ',s' → logprob: -1.9159636497497559
    3. ' ,' → logprob: -5.165963649749756
    4. ',n' → logprob: -12.165963172912598
    5. ',int' → logprob: -12.165963172912598
    6. '1' → logprob: -14.040963172912598
    7. 'sq' → logprob: -14.290963172912598
    8. ' ' → logprob: -14.415963172912598
    9. ',q' → logprob: -14.415963172912598
    10. 's' → logprob: -15.040963172912598

Token 88: ' sq' (ID: 24743)
  Prédit: 'sq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -0.0014491601614281535
    2. ' sq' → logprob: -6.626449108123779
    3. 's' → logprob: -10.001449584960938
    4. ' ' → logprob: -10.251449584960938
    5. '   ' → logprob: -11.001449584960938
    6. '	s' → logprob: -11.626449584960938
    7. '    ' → logprob: -12.126449584960938
    8. '  ' → logprob: -12.501449584960938
    9. 'sqrt' → logprob: -14.126449584960938
    10. '     ' → logprob: -14.126449584960938

Token 89: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04106154665350914
    2. ')' → logprob: -3.2910616397857666
    3. ' )' → logprob: -6.0410614013671875
    4. ')])' → logprob: -7.5410614013671875
    5. ')][' → logprob: -9.916061401367188
    6. '):' → logprob: -11.166061401367188
    7. ')],' → logprob: -11.541061401367188
    8. ')]

' → logprob: -12.166061401367188
    9. '+' → logprob: -12.416061401367188
    10. ']' → logprob: -12.666061401367188

Token 90: 'f' (ID: 69)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3525975942611694
    2. ')' → logprob: -1.6025975942611694
    3. ' ' → logprob: -1.7275975942611694
    4. '#' → logprob: -2.227597713470459
    5. '<|end|>' → logprob: -2.352597713470459
    6. 'f' → logprob: -2.602597713470459
    7. ' ]' → logprob: -4.102597713470459
    8. '[' → logprob: -4.227597713470459
    9. 'print' → logprob: -4.352597713470459
    10. 'distinct' → logprob: -5.102597713470459

Token 91: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' f' (ID: 285)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1101941391825676
    2. ' list' → logprob: -2.860194206237793
    3. 'sorted' → logprob: -3.110194206237793
    4. ' sorted' → logprob: -6.110194206237793
    5. '[' → logprob: -8.610194206237793
    6. ' ' → logprob: -10.985194206237793
    7. '[list' → logprob: -10.985194206237793
    8. 'set' → logprob: -11.485194206237793
    9. '   ' → logprob: -11.735194206237793
    10. 'f' → logprob: -11.735194206237793

Token 93: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.20100566744804382
    2. '[:-' → logprob: -2.201005697250366
    3. '[:' → logprob: -3.076005697250366
    4. '[:]' → logprob: -4.451005458831787
    5. '[' → logprob: -4.576005458831787
    6. '<|end|>' → logprob: -6.451005458831787
    7. 'sorted' → logprob: -7.451005458831787
    8. 's' → logprob: -7.826005458831787
    9. '#' → logprob: -9.451005935668945
    10. '[-' → logprob: -9.576005935668945

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09459399431943893
    2. '-' → logprob: -2.5945940017700195
    3. ')' → logprob: -4.3445940017700195
    4. 'sort' → logprob: -7.3445940017700195
    5. ']' → logprob: -7.4695940017700195
    6. '])' → logprob: -7.7195940017700195
    7. 'sorted' → logprob: -8.21959400177002
    8. '()' → logprob: -9.09459400177002
    9. 'f' → logprob: -9.34459400177002
    10. '())' → logprob: -9.59459400177002

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47704190015792847
    2. ')' → logprob: -0.9770419001579285
    3. ')]' → logprob: -6.352041721343994
    4. '])' → logprob: -6.727041721343994
    5. ' ]' → logprob: -11.727042198181152
    6. '）' → logprob: -12.227042198181152
    7. ' )' → logprob: -13.227042198181152
    8. ')])' → logprob: -13.977042198181152
    9. '<|end|>' → logprob: -14.477042198181152
    10. '']' → logprob: -14.602042198181152

Token 96: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'ps' (ID: 947)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0107663869857788
    2. '#' → logprob: -2.2607665061950684
    3. 'r' → logprob: -2.2607665061950684
    4. '```' → logprob: -2.6357665061950684
    5. 'tre' → logprob: -2.8857665061950684
    6. ':' → logprob: -3.7607665061950684
    7. 'l' → logprob: -3.8857665061950684
    8. 'ps' → logprob: -4.135766506195068
    9. 'tout' → logprob: -4.135766506195068
    10. 'vert' → logprob: -4.135766506195068

Token 99: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' je' (ID: 1264)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7063949108123779
    2. ' f' → logprob: -0.8313949108123779
    3. 'list' → logprob: -3.206394910812378
    4. ' list' → logprob: -4.331395149230957
    5. ' ' → logprob: -5.206395149230957
    6. '<|end|>' → logprob: -5.956395149230957
    7. '[]' → logprob: -6.206395149230957
    8. 'import' → logprob: -7.081395149230957
    9. 'sorted' → logprob: -7.081395149230957
    10. 'lambda' → logprob: -7.331395149230957

Token 101: ' ren' (ID: 5427)
  Prédit: 'veux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'veux' → logprob: -1.1286545991897583
    2. 'n' → logprob: -1.3786545991897583
    3. 's' → logprob: -2.3786544799804688
    4. 'vou' → logprob: -2.8786544799804688
    5. 'voud' → logprob: -3.0036544799804688
    6. 'viens' → logprob: -3.2536544799804688
    7. 'cro' → logprob: -3.5036544799804688
    8. 'f' → logprob: -3.6286544799804688
    9. 'vais' → logprob: -3.6286544799804688
    10. 'ne' → logprob: -3.8786544799804688

Token 102: 'verse' (ID: 7093)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omme' → logprob: -1.1229300498962402
    2. 'me' → logprob: -1.4979300498962402
    3. 'm' → logprob: -2.2479300498962402
    4. 'ome' → logprob: -2.9979300498962402
    5. 'mez' → logprob: -2.9979300498962402
    6. 'mé' → logprob: -3.6229300498962402
    7. 'v' → logprob: -3.6229300498962402
    8. 'ommer' → logprob: -4.12293004989624
    9. 'mer' → logprob: -4.37293004989624
    10. 'ame' → logprob: -4.37293004989624

Token 103: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ''espère' (ID: 116557)
  Prédit: 'ust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.642591118812561
    2. 'uste' → logprob: -1.142591118812561
    3. 'e' → logprob: -2.5175909996032715
    4. ''ai' → logprob: -3.8925909996032715
    5. ''' → logprob: -4.2675909996032715
    6. 'us' → logprob: -5.3925909996032715
    7. ''espère' → logprob: -5.6425909996032715
    8. ''aime' → logprob: -5.7675909996032715
    9. ''arrive' → logprob: -5.8925909996032715
    10. ''aj' → logprob: -6.0175909996032715

Token 106: ' que' (ID: 661)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8699192404747009
    2. '<|end|>' → logprob: -0.8699192404747009
    3. 'unique' → logprob: -2.7449193000793457
    4. '
' → logprob: -4.119919300079346
    5. ' 
' → logprob: -4.619919300079346
    6. '#' → logprob: -4.744919300079346
    7. 's' → logprob: -4.994919300079346
    8. ' f' → logprob: -5.369919300079346
    9. ')' → logprob: -5.369919300079346
    10. 'n' → logprob: -5.494919300079346

Token 107: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7879157066345215
    2. 'cela' → logprob: -2.2879157066345215
    3. 'f' → logprob: -2.4129157066345215
    4. ' c' → logprob: -2.5379157066345215
    5. 'len' → logprob: -2.9129157066345215
    6. 'je' → logprob: -3.0379157066345215
    7. ' ça' → logprob: -3.4129157066345215
    8. 'ce' → logprob: -3.4129157066345215
    9. ' ce' → logprob: -3.5379157066345215
    10. 'j' → logprob: -3.9129157066345215

Token 108: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5295563340187073
    2. 'a' → logprob: -1.7795562744140625
    3. 'est' → logprob: -2.2795562744140625
    4. 'e' → logprob: -2.2795562744140625
    5. 'ela' → logprob: -4.4045562744140625
    6. ''' → logprob: -5.0295562744140625
    7. ''a' → logprob: -5.2795562744140625
    8. ''était' → logprob: -5.9045562744140625
    9. '#' → logprob: -6.7795562744140625
    10. ''#' → logprob: -6.9045562744140625

Token 109: ' bon' (ID: 4846)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -1.4670437574386597
    2. ' tri' → logprob: -1.5920437574386597
    3. 'correct' → logprob: -1.5920437574386597
    4. ' correct' → logprob: -1.9670437574386597
    5. 'bien' → logprob: -2.842043876647949
    6. 'cro' → logprob: -2.967043876647949
    7. 'sorted' → logprob: -3.467043876647949
    8. 'tr' → logprob: -3.842043876647949
    9. ' sorted' → logprob: -4.217043876647949
    10. ' bien' → logprob: -4.342043876647949

Token 110: '...
' (ID: 4908)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'k' (ID: 74)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7875638604164124
    2. 'f' → logprob: -1.7875638008117676
    3. 'v' → logprob: -3.1625638008117676
    4. 'g' → logprob: -3.1625638008117676
    5. 'values' → logprob: -3.4125638008117676
    6. '<|end|>' → logprob: -3.9125638008117676
    7. 'cnt' → logprob: -4.037563800811768
    8. 'idx' → logprob: -4.037563800811768
    9. 'count' → logprob: -4.162563800811768
    10. 'unique' → logprob: -4.287563800811768

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01932903379201889
    2. '=' → logprob: -4.019329071044922
    3. '+' → logprob: -7.644329071044922
    4. ' +=' → logprob: -8.019329071044922
    5. ' ' → logprob: -9.269329071044922
    6. 'f' → logprob: -9.394329071044922
    7. '+=' → logprob: -10.269329071044922
    8. '  ' → logprob: -10.769329071044922
    9. 'x' → logprob: -11.019329071044922
    10. '=len' → logprob: -11.519329071044922

Token 113: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9254703521728516
    2. '0' → logprob: -1.1754703521728516
    3. ' len' → logprob: -2.0504703521728516
    4. ' ' → logprob: -2.1754703521728516
    5. 'm' → logprob: -4.050470352172852
    6. 'sq' → logprob: -4.800470352172852
    7. ' m' → logprob: -5.050470352172852
    8. '1' → logprob: -5.425470352172852
    9. '(len' → logprob: -6.050470352172852
    10. ' sq' → logprob: -6.175470352172852

Token 114: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.176986426115036
    2. '0' → logprob: -2.4269864559173584
    3. 'm' → logprob: -3.1769864559173584
    4. 'sq' → logprob: -4.051986217498779
    5. 'n' → logprob: -5.926986217498779
    6. '1' → logprob: -5.926986217498779
    7. 'int' → logprob: -6.176986217498779
    8. '(len' → logprob: -6.551986217498779
    9. '[' → logprob: -6.676986217498779
    10. 'min' → logprob: -6.926986217498779

Token 115: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' sq' (ID: 24743)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011524500325322151
    2. ' m' → logprob: -4.886524677276611
    3. 'n' → logprob: -6.636524677276611
    4. 'sq' → logprob: -6.761524677276611
    5. '(m' → logprob: -7.761524677276611
    6. '10' → logprob: -8.261524200439453
    7. 'k' → logprob: -8.261524200439453
    8. '100' → logprob: -9.636524200439453
    9. '*m' → logprob: -9.636524200439453
    10. ' sq' → logprob: -10.011524200439453

Token 117: ' -' (ID: 533)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.40496826171875
    2. ' ' → logprob: -1.77996826171875
    3. '
' → logprob: -3.15496826171875
    4. 'for' → logprob: -3.52996826171875
    5. ' f' → logprob: -3.90496826171875
    6. '+' → logprob: -4.15496826171875
    7. '<|end|>' → logprob: -4.27996826171875
    8. ')' → logprob: -4.52996826171875
    9. ' for' → logprob: -4.77996826171875
    10. ' 
' → logprob: -4.90496826171875

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030063439160585403
    2. '2' → logprob: -3.5300633907318115
    3. ' ' → logprob: -8.28006362915039
    4. '3' → logprob: -10.40506362915039
    5. 'm' → logprob: -10.65506362915039
    6. 'len' → logprob: -13.65506362915039
    7. '-' → logprob: -13.78006362915039
    8. '   ' → logprob: -14.03006362915039
    9. ' m' → logprob: -14.28006362915039
    10. '  ' → logprob: -14.78006362915039

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01253590453416109
    2. '2' → logprob: -4.38753604888916
    3. '3' → logprob: -11.01253604888916
    4. ' ' → logprob: -11.63753604888916
    5. 'm' → logprob: -15.26253604888916
    6. 'len' → logprob: -15.76253604888916
    7. '-' → logprob: -15.88753604888916
    8. '   ' → logprob: -16.012535095214844
    9. 'n' → logprob: -16.825035095214844
    10. 'int' → logprob: -17.325035095214844

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07783406227827072
    2. 'g' → logprob: -4.202834129333496
    3. 'for' → logprob: -4.577834129333496
    4. 'f' → logprob: -4.577834129333496
    5. 'd' → logprob: -5.327834129333496
    6. 'ans' → logprob: -5.577834129333496
    7. 'phi' → logprob: -5.827834129333496
    8. 's' → logprob: -5.827834129333496
    9. 'cnt' → logprob: -5.827834129333496
    10. 'sum' → logprob: -5.827834129333496

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011254831217229366
    2. '=' → logprob: -4.511254787445068
    3. '[' → logprob: -8.886255264282227
    4. ' ' → logprob: -10.511255264282227
    5. ' =[' → logprob: -10.761255264282227
    6. '=[' → logprob: -11.636255264282227
    7. ',' → logprob: -12.386255264282227
    8. ']' → logprob: -13.261255264282227
    9. '_' → logprob: -14.136255264282227
    10. '.' → logprob: -14.511255264282227

Token 123: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006372266914695501
    2. '[[' → logprob: -5.506372451782227
    3. ' [' → logprob: -6.756372451782227
    4. '[-' → logprob: -7.006372451782227
    5. '[m' → logprob: -8.881372451782227
    6. '[n' → logprob: -10.006372451782227
    7. ' [[' → logprob: -11.506372451782227
    8. '[k' → logprob: -11.756372451782227
    9. '[a' → logprob: -12.131372451782227
    10. '[s' → logprob: -12.256372451782227

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002889990573748946
    2. '1' → logprob: -6.377890110015869
    3. '[' → logprob: -7.252890110015869
    4. '-' → logprob: -7.877890110015869
    5. ' ' → logprob: -9.752889633178711
    6. ' [' → logprob: -11.377889633178711
    7. ']' → logprob: -11.877889633178711
    8. '(' → logprob: -12.377889633178711
    9. 'float' → logprob: -12.502889633178711
    10. '[-' → logprob: -12.877889633178711

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005443345289677382
    2. ']*(' → logprob: -7.750544548034668
    3. ']*' → logprob: -9.250544548034668
    4. ' ]' → logprob: -12.250544548034668
    5. ' for' → logprob: -12.375544548034668
    6. ']+' → logprob: -12.375544548034668
    7. ',' → logprob: -12.625544548034668
    8. 'for' → logprob: -13.750544548034668
    9. '][' → logprob: -17.50054359436035
    10. ' ' → logprob: -17.75054359436035

Token 126: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1871812343597412
    2. '+' → logprob: -1.3121812343597412
    3. ']' → logprob: -2.062181234359741
    4. 'for' → logprob: -2.437181234359741
    5. ' for' → logprob: -2.937181234359741
    6. '[' → logprob: -3.312181234359741
    7. ' +' → logprob: -3.437181234359741
    8. ',' → logprob: -3.562181234359741
    9. ' *' → logprob: -3.562181234359741
    10. ']+' → logprob: -4.93718147277832

Token 127: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027393506839871407
    2. '[f' → logprob: -4.027393341064453
    3. '[s' → logprob: -5.402393341064453
    4. '[n' → logprob: -6.402393341064453
    5. '[k' → logprob: -6.527393341064453
    6. ' [' → logprob: -7.152393341064453
    7. '[m' → logprob: -7.777393341064453
    8. 'f' → logprob: -8.277393341064453
    9. '[-' → logprob: -10.152393341064453
    10. '[i' → logprob: -10.277393341064453

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025436362251639366
    2. '0' → logprob: -4.0254364013671875
    3. '(' → logprob: -5.9004364013671875
    4. 'f' → logprob: -6.4004364013671875
    5. 'pow' → logprob: -7.1504364013671875
    6. 'n' → logprob: -7.7754364013671875
    7. 'i' → logprob: -8.025436401367188
    8. '(n' → logprob: -8.150436401367188
    9. 'm' → logprob: -8.275436401367188
    10. '(i' → logprob: -8.400436401367188

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000909913913346827
    2. ']*(' → logprob: -7.875909805297852
    3. ']*' → logprob: -8.250909805297852
    4. ' for' → logprob: -9.375909805297852
    5. ' *' → logprob: -9.500909805297852
    6. ' ]' → logprob: -9.625909805297852
    7. '*' → logprob: -10.375909805297852
    8. 'for' → logprob: -12.250909805297852
    9. ']+' → logprob: -12.875909805297852
    10. '0' → logprob: -13.375909805297852

Token 130: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32320713996887207
    2. ' *' → logprob: -2.073207139968872
    3. '+' → logprob: -2.323207139968872
    4. ' +' → logprob: -3.698207139968872
    5. '*(' → logprob: -4.448206901550293
    6. '*[' → logprob: -4.698206901550293
    7. '[' → logprob: -5.323206901550293
    8. '+[' → logprob: -6.448206901550293
    9. ' for' → logprob: -8.823206901550293
    10. 'for' → logprob: -9.198206901550293

Token 131: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0014607120538130403
    2. '(m' → logprob: -7.001460552215576
    3. '(' → logprob: -8.126461029052734
    4. 'k' → logprob: -9.126461029052734
    5. ' (' → logprob: -9.376461029052734
    6. '(n' → logprob: -10.001461029052734
    7. 'm' → logprob: -12.251461029052734
    8. '(s' → logprob: -12.501461029052734
    9. '((' → logprob: -13.126461029052734
    10. '(
' → logprob: -14.376461029052734

Token 132: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4140441635390744e-05
    2. ' k' → logprob: -11.625014305114746
    3. '(k' → logprob: -12.250014305114746
    4. 'n' → logprob: -16.00001335144043
    5. 'm' → logprob: -16.12501335144043
    6. '   ' → logprob: -16.50001335144043
    7. ' ' → logprob: -16.87501335144043
    8. '(' → logprob: -16.87501335144043
    9. 'len' → logprob: -17.37501335144043
    10. '2' → logprob: -18.37501335144043

Token 133: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14829078316688538
    2. ')' → logprob: -2.0232908725738525
    3. '-)' → logprob: -5.773290634155273
    4. ' -' → logprob: -6.023290634155273
    5. ' )' → logprob: -11.273290634155273
    6. '−' → logprob: -11.648290634155273
    7. '+' → logprob: -11.773290634155273
    8. ']' → logprob: -12.023290634155273
    9. '[' → logprob: -12.023290634155273
    10. '```' → logprob: -12.273290634155273

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '0' → logprob: -17.000001907348633
    4. '2' → logprob: -18.250001907348633
    5. ')' → logprob: -18.750001907348633
    6. '１' → logprob: -19.250001907348633
    7. '   ' → logprob: -20.312501907348633
    8. '  ' → logprob: -20.312501907348633
    9. '۱' → logprob: -20.500001907348633
    10. '(' → logprob: -20.687501907348633

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.12500286102295
    3. '0' → logprob: -14.00000286102295
    4. '2' → logprob: -16.500003814697266
    5. ')' → logprob: -19.125003814697266
    6. '１' → logprob: -19.875003814697266
    7. '+' → logprob: -20.187503814697266
    8. '  ' → logprob: -20.250003814697266
    9. '3' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.437503814697266

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.274932143744081e-05
    2. ' )' → logprob: -10.250042915344238
    3. ')
' → logprob: -12.250042915344238
    4. ']' → logprob: -13.875042915344238
    5. '])' → logprob: -14.875042915344238
    6. '))' → logprob: -15.000042915344238
    7. ')]' → logprob: -15.375042915344238
    8. '+' → logprob: -15.750042915344238
    9. ')`' → logprob: -16.125041961669922
    10. '),' → logprob: -16.500041961669922

Token 137: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4964091181755066
    2. '
' → logprob: -1.3714091777801514
    3. ' for' → logprob: -2.2464091777801514
    4. '<|end|>' → logprob: -3.6214091777801514
    5. '\n' → logprob: -5.496408939361572
    6. ' 
' → logprob: -8.87140941619873
    7. ')' → logprob: -8.99640941619873
    8. '+' → logprob: -9.24640941619873
    9. '\' → logprob: -9.87140941619873
    10. '  
' → logprob: -9.99640941619873

Token 138: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0556895732879639
    2. 'for' → logprob: -1.3056895732879639
    3. '\n' → logprob: -1.6806895732879639
    4. ' for' → logprob: -1.9306895732879639
    5. '<|end|>' → logprob: -3.180689573287964
    6. ' 
' → logprob: -5.430689811706543
    7. ')' → logprob: -7.055689811706543
    8. '  
' → logprob: -7.180689811706543
    9. '\' → logprob: -7.805689811706543
    10. ' ' → logprob: -8.055689811706543

Token 139: ' Note' (ID: 12225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22557494044303894
    2. ' for' → logprob: -1.8505749702453613
    3. ')' → logprob: -3.9755749702453613
    4. '0' → logprob: -4.475574970245361
    5. ' ' → logprob: -5.100574970245361
    6. '[' → logprob: -5.975574970245361
    7. '
' → logprob: -6.975574970245361
    8. '1' → logprob: -7.225574970245361
    9. ']' → logprob: -7.725574970245361
    10. 'm' → logprob: -7.725574970245361

Token 140: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8870523571968079
    2. ' ' → logprob: -1.637052297592163
    3. '<|end|>' → logprob: -1.887052297592163
    4. ' for' → logprob: -3.012052297592163
    5. ':' → logprob: -3.137052297592163
    6. ' =' → logprob: -3.512052297592163
    7. '=' → logprob: -3.887052297592163
    8. 'for' → logprob: -4.012052536010742
    9. '(s' → logprob: -4.262052536010742
    10. '#' → logprob: -4.387052536010742

Token 141: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0339542627334595
    2. ' ' → logprob: -1.2839542627334595
    3. '0' → logprob: -2.15895414352417
    4. '#' → logprob: -2.53395414352417
    5. '<|end|>' → logprob: -2.65895414352417
    6. 'for' → logprob: -4.15895414352417
    7. 'k' → logprob: -4.28395414352417
    8. 'dp' → logprob: -4.53395414352417
    9. '
' → logprob: -4.65895414352417
    10. 'm' → logprob: -5.15895414352417

Token 142: ' première' (ID: 23423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46553483605384827
    2. 'len' → logprob: -1.4655348062515259
    3. '#' → logprob: -2.7155349254608154
    4. ' #' → logprob: -4.215534687042236
    5. ' ' → logprob: -4.465534687042236
    6. ' len' → logprob: -4.965534687042236
    7. 'n' → logprob: -5.340534687042236
    8. 'k' → logprob: -5.340534687042236
    9. ')' → logprob: -5.465534687042236
    10. 'for' → logprob: -5.715534687042236

Token 143: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6181238889694214
    2. ' ' → logprob: -2.243124008178711
    3. ')' → logprob: -2.743124008178711
    4. 'token' → logprob: -2.868124008178711
    5. '1' → logprob: -2.993124008178711
    6. 'élé' → logprob: -3.618124008178711
    7. '#' → logprob: -3.743124008178711
    8. '[' → logprob: -4.368124008178711
    9. '<|end|>' → logprob: -4.493124008178711
    10. 'element' → logprob: -4.618124008178711

Token 144: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01016400195658207
    2. ' ' → logprob: -5.1351637840271
    3. '1' → logprob: -5.5101637840271
    4. 'à' → logprob: -10.635164260864258
    5. 'dp' → logprob: -10.635164260864258
    6. 'n' → logprob: -10.885164260864258
    7. 'un' → logprob: -10.885164260864258
    8. 'zero' → logprob: -11.135164260864258
    9. 'une' → logprob: -11.510164260864258
    10. 'pour' → logprob: -11.635164260864258

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008040593937039375
    2. '1' → logprob: -4.883040428161621
    3. ' ' → logprob: -8.133040428161621
    4. 'dp' → logprob: -9.883040428161621
    5. 'à' → logprob: -10.758040428161621
    6. 'n' → logprob: -11.008040428161621
    7. 'zero' → logprob: -11.633040428161621
    8. 'pour' → logprob: -11.633040428161621
    9. 'un' → logprob: -12.383040428161621
    10. 'f' → logprob: -12.883040428161621

Token 147: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36279988288879395
    2. ' for' → logprob: -1.862799882888794
    3. '
' → logprob: -2.237799882888794
    4. '<|end|>' → logprob: -3.237799882888794
    5. '\n' → logprob: -6.987799644470215
    6. ' ' → logprob: -7.237799644470215
    7. ')' → logprob: -7.612799644470215
    8. ' 
' → logprob: -8.612799644470215
    9. '#' → logprob: -8.987799644470215
    10. 'i' → logprob: -9.237799644470215

Token 148: 'je' (ID: 1587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056625548750162125
    2. ' )' → logprob: -3.3066256046295166
    3. ']' → logprob: -5.1816253662109375
    4. '0' → logprob: -5.6816253662109375
    5. '#' → logprob: -6.1816253662109375
    6. '])' → logprob: -6.4316253662109375
    7. ' ' → logprob: -6.4316253662109375
    8. ' ' → logprob: -7.3066253662109375
    9. ',' → logprob: -7.4316253662109375
    10. ' ]' → logprob: -7.5566253662109375

Token 149: ' me' (ID: 668)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5009889006614685
    2. ' suppose' → logprob: -2.2509889602661133
    3. 's' → logprob: -2.3759889602661133
    4. 'n' → logprob: -2.7509889602661133
    5. ' )' → logprob: -3.0009889602661133
    6. ' pense' → logprob: -4.125988960266113
    7. ' n' → logprob: -4.125988960266113
    8. 'supp' → logprob: -4.250988960266113
    9. ' ' → logprob: -5.125988960266113
    10. 'ne' → logprob: -5.750988960266113

Token 150: ' suis' (ID: 15058)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054599687457084656
    2. ')' → logprob: -3.5545997619628906
    3. ']' → logprob: -5.679599761962891
    4. ' ' → logprob: -6.554599761962891
    5. 'continue' → logprob: -6.679599761962891
    6. 'c' → logprob: -7.054599761962891
    7. 't' → logprob: -7.179599761962891
    8. 'viens' → logprob: -7.304599761962891
    9. 'pro' → logprob: -7.554599761962891
    10. 'd' → logprob: -7.554599761962891

Token 151: ' dit' (ID: 4758)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6549239754676819
    2. 'per' → logprob: -1.779923915863037
    3. 's' → logprob: -2.779923915863037
    4. 'f' → logprob: -2.779923915863037
    5. ' trom' → logprob: -3.154923915863037
    6. 'plant' → logprob: -3.654923915863037
    7. 'd' → logprob: -3.654923915863037
    8. 'c' → logprob: -3.779923915863037
    9. 'pli' → logprob: -4.279923915863037
    10. 'm' → logprob: -5.654923915863037

Token 152: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.15298351645469666
    2. ')' → logprob: -2.4029834270477295
    3. ' ' → logprob: -3.6529834270477295
    4. '#' → logprob: -4.652983665466309
    5. 'que' → logprob: -5.777983665466309
    6. ' qu' → logprob: -6.152983665466309
    7. ' that' → logprob: -6.277983665466309
    8. ',' → logprob: -6.277983665466309
    9. ' )' → logprob: -6.402983665466309
    10. ' #' → logprob: -6.402983665466309

Token 153: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8155927658081055
    2. 'c' → logprob: -1.4405927658081055
    3. ' #' → logprob: -2.5655927658081055
    4. 'j' → logprob: -3.4405927658081055
    5. 'cela' → logprob: -3.5655927658081055
    6. ' ça' → logprob: -3.6905927658081055
    7. 'je' → logprob: -3.8155927658081055
    8. ' ' → logprob: -4.0655927658081055
    9. ')' → logprob: -4.0655927658081055
    10. ' c' → logprob: -4.3155927658081055

Token 154: ''était' (ID: 40609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.333232045173645
    2. 'e' → logprob: -2.0832319259643555
    3. 'n' → logprob: -2.3332319259643555
    4. ''était' → logprob: -2.3332319259643555
    5. 'a' → logprob: -2.7082319259643555
    6. ' n' → logprob: -2.8332319259643555
    7. '```' → logprob: -3.2082319259643555
    8. ''' → logprob: -3.3332319259643555
    9. 'est' → logprob: -3.7082319259643555
    10. ''est' → logprob: -4.0832319259643555

Token 155: ' mieux' (ID: 26345)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4364526271820068
    2. ' k' → logprob: -1.6864526271820068
    3. '\n' → logprob: -2.186452627182007
    4. ')' → logprob: -2.311452627182007
    5. 'k' → logprob: -2.311452627182007
    6. 'n' → logprob: -2.436452627182007
    7. ' ' → logprob: -2.936452627182007
    8. ' une' → logprob: -3.186452627182007
    9. '1' → logprob: -3.936452627182007
    10. ' n' → logprob: -3.936452627182007

Token 156: ' ainsi' (ID: 16371)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03481253981590271
    2. ' )' → logprob: -3.9098124504089355
    3. 'for' → logprob: -4.5348124504089355
    4. ' for' → logprob: -6.4098124504089355
    5. ')
' → logprob: -6.6598124504089355
    6. ' pour' → logprob: -8.659812927246094
    7. ',' → logprob: -9.034812927246094
    8. ' )
' → logprob: -10.284812927246094
    9. 'pour' → logprob: -10.534812927246094
    10. '),' → logprob: -10.784812927246094

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10713064670562744
    2. ')
' → logprob: -2.357130527496338
    3. 'for' → logprob: -5.232130527496338
    4. '
' → logprob: -6.607130527496338
    5. ' for' → logprob: -9.857131004333496
    6. ')

' → logprob: -10.232131004333496
    7. ' )' → logprob: -10.357131004333496
    8. ')
' → logprob: -10.607131004333496
    9. '\n' → logprob: -10.982131004333496
    10. ')n' → logprob: -11.982131004333496

Token 158: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7482026219367981
    2. 'for' → logprob: -1.1232025623321533
    3. ' for' → logprob: -2.2482025623321533
    4. '\n' → logprob: -2.8732025623321533
    5. '<|end|>' → logprob: -3.6232025623321533
    6. ' 
' → logprob: -4.623202800750732
    7. ' ' → logprob: -7.873202800750732
    8. '+' → logprob: -7.873202800750732
    9. ')' → logprob: -7.998202800750732
    10. '  
' → logprob: -8.123202323913574

Token 159: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009976114146411419
    2. 'i' → logprob: -4.884975910186768
    3. ' _' → logprob: -6.634975910186768
    4. ' j' → logprob: -7.759975910186768
    5. '_' → logprob: -8.759976387023926
    6. ' x' → logprob: -9.009976387023926
    7. ' l' → logprob: -10.134976387023926
    8. '_i' → logprob: -10.259976387023926
    9. '	i' → logprob: -10.384976387023926
    10. ' k' → logprob: -10.509976387023926

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005507899448275566
    2. 'in' → logprob: -5.255507946014404
    3. ' ' → logprob: -8.255507469177246
    4. ' _' → logprob: -12.630507469177246
    5. '  ' → logprob: -12.755507469177246
    6. ' i' → logprob: -13.755507469177246
    7. '_' → logprob: -13.880507469177246
    8. 's' → logprob: -14.005507469177246
    9. ' ' → logprob: -14.380507469177246
    10. ',' → logprob: -14.380507469177246

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4287126958370209
    2. ' range' → logprob: -1.0537127256393433
    3. ' ' → logprob: -12.303712844848633
    4. 'in' → logprob: -13.553712844848633
    5. ' in' → logprob: -13.553712844848633
    6. '_' → logprob: -13.928712844848633
    7. '  ' → logprob: -14.053712844848633
    8. 'r' → logprob: -14.053712844848633
    9. '	range' → logprob: -14.678712844848633
    10. ' ' → logprob: -15.053712844848633

Token 162: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.001346542383544147
    2. '(' → logprob: -6.626346588134766
    3. ' (' → logprob: -11.001346588134766
    4. 'm' → logprob: -13.376346588134766
    5. '(k' → logprob: -13.876346588134766
    6. '(n' → logprob: -14.626346588134766
    7. '(M' → logprob: -14.876346588134766
    8. '(
' → logprob: -15.251346588134766
    9. ' m' → logprob: -16.251346588134766
    10. '(s' → logprob: -16.376346588134766

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010647233575582504
    2. ':' → logprob: -4.760647296905518
    3. ' ):' → logprob: -6.510647296905518
    4. '):
' → logprob: -7.760647296905518
    5. ' :' → logprob: -9.63564682006836
    6. ')' → logprob: -10.01064682006836
    7. '():' → logprob: -13.38564682006836
    8. ']:' → logprob: -13.76064682006836
    9. '}:' → logprob: -14.01064682006836
    10. ',' → logprob: -14.63564682006836

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.536860466003418
    2. ' for' → logprob: -1.286860466003418
    3. ' ' → logprob: -2.411860466003418
    4. 'for' → logprob: -3.411860466003418
    5. '    ' → logprob: -5.536860466003418
    6. ' dp' → logprob: -6.036860466003418
    7. ' 
' → logprob: -6.286860466003418
    8. '  ' → logprob: -6.786860466003418
    9. '	for' → logprob: -6.786860466003418
    10. '    
' → logprob: -7.161860466003418

Token 165: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.0570356845855713
    2. 'for' → logprob: -1.4320356845855713
    3. 'new' (adapté à ' new') → logprob: -1.4320356845855713
    4. ' for' → logprob: -2.8070356845855713
    5. 'dp' → logprob: -3.3070356845855713
    6. ' dp' → logprob: -4.057035446166992
    7. 'next' → logprob: -4.807035446166992
    8. ' next' → logprob: -5.057035446166992
    9. '   ' → logprob: -5.057035446166992
    10. ' nxt' → logprob: -5.307035446166992

Token 166: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.038456834852695465
    2. ' =' → logprob: -3.788456916809082
    3. 'dp' → logprob: -4.538456916809082
    4. '_' → logprob: -5.913456916809082
    5. '=' → logprob: -6.413456916809082
    6. '_=' → logprob: -10.788456916809082
    7. ' dp' → logprob: -11.663456916809082
    8. ' ' → logprob: -11.913456916809082
    9. '	dp' → logprob: -12.663456916809082
    10. 'DP' → logprob: -12.788456916809082

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029761601239442825
    2. '=' → logprob: -3.529761552810669
    3. '[' → logprob: -11.65476131439209
    4. ',' → logprob: -14.02976131439209
    5. ' =[' → logprob: -14.40476131439209
    6. ' [' → logprob: -15.15476131439209
    7. ' ' → logprob: -15.65476131439209
    8. '=[' → logprob: -15.90476131439209
    9. 's' → logprob: -16.654762268066406
    10. ' ' → logprob: -16.904762268066406

Token 168: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008615872822701931
    2. ' [' → logprob: -4.758615970611572
    3. '[]' → logprob: -14.883615493774414
    4. 'dp' → logprob: -15.133615493774414
    5. '[n' → logprob: -16.008615493774414
    6. '[k' → logprob: -16.133615493774414
    7. '[len' → logprob: -16.258615493774414
    8. ' dp' → logprob: -16.508615493774414
    9. ' ' → logprob: -16.633615493774414
    10. '[new' → logprob: -17.133615493774414

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023500648967456073
    2. '1' → logprob: -8.625234603881836
    3. 'dp' → logprob: -10.500234603881836
    4. ' ' → logprob: -11.250234603881836
    5. ']' → logprob: -11.875234603881836
    6. ')' → logprob: -12.750234603881836
    7. '[' → logprob: -14.000234603881836
    8. '   ' → logprob: -14.437734603881836
    9. '
' → logprob: -14.625234603881836
    10. '(' → logprob: -14.625234603881836

Token 170: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005037044174969196
    2. ' ]' → logprob: -8.500503540039062
    3. ']*' → logprob: -8.625503540039062
    4. ']*(' → logprob: -10.000503540039062
    5. ']+' → logprob: -10.125503540039062
    6. 'for' → logprob: -11.125503540039062
    7. ' for' → logprob: -11.125503540039062
    8. ')' → logprob: -12.750503540039062
    9. '0' → logprob: -14.500503540039062
    10. '])' → logprob: -14.500503540039062

Token 171: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17390801012516022
    2. ' _' → logprob: -2.048907995223999
    3. ' range' → logprob: -4.173908233642578
    4. ' in' → logprob: -4.298908233642578
    5. ' ' → logprob: -6.923908233642578
    6. ' i' → logprob: -7.548908233642578
    7. 'range' → logprob: -8.798908233642578
    8. 'i' → logprob: -10.798908233642578
    9. '_range' → logprob: -10.923908233642578
    10. '__' → logprob: -10.923908233642578

Token 172: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02391287311911583
    2. ' range' → logprob: -3.7739129066467285
    3. 'in' → logprob: -7.6489129066467285
    4. ' in' → logprob: -8.64891242980957
    5. '_' → logprob: -11.89891242980957
    6. ' ' → logprob: -12.14891242980957
    7. '_range' → logprob: -13.39891242980957
    8. '  ' → logprob: -14.02391242980957
    9. '(range' → logprob: -14.77391242980957
    10. '	range' → logprob: -16.14891242980957

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015066476771607995
    2. ' range' → logprob: -6.501506805419922
    3. 'dp' → logprob: -12.376506805419922
    4. 'f' → logprob: -17.376506805419922
    5. ' ' → logprob: -17.876506805419922
    6. '   ' → logprob: -18.001506805419922
    7. '  ' → logprob: -18.126506805419922
    8. '(range' → logprob: -18.376506805419922
    9. ' dp' → logprob: -18.876506805419922
    10. 'r' → logprob: -18.876506805419922

Token 174: '(k' (ID: 12125)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10843908041715622
    2. ' range' → logprob: -2.8584389686584473
    3. '(range' → logprob: -3.1084389686584473
    4. 'dp' → logprob: -8.108439445495605
    5. '(dp' → logprob: -8.233439445495605
    6. '(k' → logprob: -8.733439445495605
    7. '   ' → logprob: -12.608439445495605
    8. '(' → logprob: -13.233439445495605
    9. 'k' → logprob: -13.233439445495605
    10. ' dp' → logprob: -13.983439445495605

Token 175: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.85366350505501e-05
    2. ')]
' → logprob: -9.87509822845459
    3. ')' → logprob: -10.87509822845459
    4. ']' → logprob: -10.87509822845459
    5. ' )' → logprob: -12.12509822845459
    6. '+' → logprob: -14.12509822845459
    7. ')])' → logprob: -14.12509822845459
    8. '])]' → logprob: -14.50009822845459
    9. '])' → logprob: -14.87509822845459
    10. ')]
' → logprob: -15.12509822845459

Token 176: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6278336644172668
    2. 'for' → logprob: -1.377833604812622
    3. '   ' → logprob: -2.127833604812622
    4. '	for' → logprob: -2.377833604812622
    5. '<|end|>' → logprob: -6.377833843231201
    6. '
' → logprob: -8.377833366394043
    7. ' ' → logprob: -9.502833366394043
    8. '\t' → logprob: -9.502833366394043
    9. '	
' → logprob: -9.877833366394043
    10. ',' → logprob: -10.502833366394043

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04249034449458122
    2. 'j' → logprob: -3.417490243911743
    3. 'i' → logprob: -5.417490482330322
    4. 'ptr' → logprob: -6.667490482330322
    5. 'p' → logprob: -6.917490482330322
    6. 'idx' → logprob: -7.417490482330322
    7. 'pos' → logprob: -8.167490005493164
    8. 'prefix' → logprob: -8.292490005493164
    9. ' for' → logprob: -8.542490005493164
    10. 'x' → logprob: -8.792490005493164

Token 178: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6630684733390808
    2. ' j' → logprob: -1.1630685329437256
    3. 'i' → logprob: -2.2880685329437256
    4. 'j' → logprob: -2.6630685329437256
    5. ' x' → logprob: -7.9130682945251465
    6. 'x' → logprob: -8.788068771362305
    7. ' v' → logprob: -9.038068771362305
    8. 'v' → logprob: -10.163068771362305
    9. ' ' → logprob: -10.350568771362305
    10. ' l' → logprob: -10.725568771362305

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38691988587379456
    2. 'in' → logprob: -1.1369198560714722
    3. ' ' → logprob: -10.261919975280762
    4. '+' → logprob: -12.761919975280762
    5. 'import' → logprob: -13.136919975280762
    6. '	in' → logprob: -13.261919975280762
    7. '1' → logprob: -13.386919975280762
    8. ')' → logprob: -14.011919975280762
    9. ',' → logprob: -14.261919975280762
    10. '0' → logprob: -14.386919975280762

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150877207517624
    2. ' range' → logprob: -4.018150806427002
    3. '(range' → logprob: -14.64315128326416
    4. ' ' → logprob: -15.64315128326416
    5. 'in' → logprob: -16.268150329589844
    6. '	range' → logprob: -16.643150329589844
    7. ')' → logprob: -17.143150329589844
    8. '   ' → logprob: -17.393150329589844
    9. 'r' → logprob: -18.143150329589844
    10. 'k' → logprob: -18.143150329589844

Token 181: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.31713005900382996
    2. '(' → logprob: -1.3171300888061523
    3. '(s' → logprob: -6.067130088806152
    4. '1' → logprob: -7.067130088806152
    5. 'k' → logprob: -7.317130088806152
    6. '(j' → logprob: -12.317130088806152
    7. '(len' → logprob: -12.317130088806152
    8. '(
' → logprob: -12.692130088806152
    9. '(q' → logprob: -13.067130088806152
    10. ' (' → logprob: -13.192130088806152

Token 182: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002072357019642368
    2. '1' → logprob: -8.50020694732666
    3. ' k' → logprob: -13.62520694732666
    4. '0' → logprob: -14.12520694732666
    5. '   ' → logprob: -14.75020694732666
    6. 'sq' → logprob: -14.75020694732666
    7. '(k' → logprob: -15.25020694732666
    8. '2' → logprob: -15.37520694732666
    9. 'len' → logprob: -16.125207901000977
    10. 'j' → logprob: -16.125207901000977

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039063513395376503
    2. ',k' → logprob: -7.875390529632568
    3. ' ,' → logprob: -11.500391006469727
    4. 'k' → logprob: -15.125391006469727
    5. ',
' → logprob: -16.000391006469727
    6. '   ' → logprob: -17.250391006469727
    7. ',j' → logprob: -18.750391006469727
    8. ' ' → logprob: -19.250391006469727
    9. '‌,' → logprob: -19.375391006469727
    10. '(k' → logprob: -19.375391006469727

Token 184: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.2729995988775045e-06
    2. ' k' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.8750057220459
    4. 'kx' → logprob: -21.8750057220459
    5. '	k' → logprob: -22.0000057220459
    6. ' ' → logprob: -22.7500057220459
    7. '
' → logprob: -23.0000057220459
    8. '    ' → logprob: -23.2500057220459
    9. 'len' → logprob: -23.2500057220459
    10. '  ' → logprob: -24.1250057220459

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20147521793842316
    2. '):
' → logprob: -1.7014752626419067
    3. ':' → logprob: -10.201475143432617
    4. ')' → logprob: -11.451475143432617
    5. '):
' → logprob: -12.076475143432617
    6. '+' → logprob: -12.826475143432617
    7. '   ' → logprob: -13.576475143432617
    8. ' ):' → logprob: -13.701475143432617
    9. ']:' → logprob: -13.951475143432617
    10. '):

' → logprob: -14.201475143432617

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008948990143835545
    2. ' for' → logprob: -5.008948802947998
    3. '	   ' → logprob: -7.383948802947998
    4. ' if' → logprob: -7.633948802947998
    5. '    ' → logprob: -7.758948802947998
    6. '    ' → logprob: -9.133949279785156
    7. 'for' → logprob: -9.258949279785156
    8. ' new' → logprob: -9.633949279785156
    9. '   ' → logprob: -9.633949279785156
    10. '	' → logprob: -9.883949279785156

Token 187: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10407789051532745
    2. ' new' → logprob: -2.9790778160095215
    3. 'for' → logprob: -3.7290778160095215
    4. 'if' → logprob: -4.3540778160095215
    5. '   ' → logprob: -4.7290778160095215
    6. ' for' → logprob: -6.6040778160095215
    7. ' if' → logprob: -7.3540778160095215
    8. '       ' → logprob: -8.72907829284668
    9. 's' → logprob: -10.35407829284668
    10. '    ' → logprob: -10.72907829284668

Token 188: ' Je' (ID: 4678)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0406690277159214
    2. ' new' → logprob: -4.165668964385986
    3. 'if' → logprob: -4.540668964385986
    4. 'val' → logprob: -5.165668964385986
    5. 'for' → logprob: -5.290668964385986
    6. 's' → logprob: -7.415668964385986
    7. '   ' → logprob: -7.790668964385986
    8. 'x' → logprob: -7.915668964385986
    9. 'while' → logprob: -8.040669441223145
    10. ' if' → logprob: -8.790669441223145

Token 189: ' fais' (ID: 24376)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9773455858230591
    2. 'new' → logprob: -0.9773455858230591
    3. 'f' → logprob: -2.2273454666137695
    4. 'if' → logprob: -3.1023454666137695
    5. 'for' → logprob: -3.6023454666137695
    6. '=' → logprob: -3.9773454666137695
    7. ' if' → logprob: -4.8523454666137695
    8. ' for' → logprob: -4.8523454666137695
    9. 'n' → logprob: -4.8523454666137695
    10. 't' → logprob: -5.2273454666137695

Token 190: ' une' (ID: 2463)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07897714525461197
    2. 'new' → logprob: -2.578977108001709
    3. '   ' → logprob: -9.453977584838867
    4. '	new' → logprob: -12.578977584838867
    5. '  ' → logprob: -14.203977584838867
    6. ')new' → logprob: -14.328977584838867
    7. ' for' → logprob: -14.578977584838867
    8. ' ' → logprob: -14.703977584838867
    9. ' if' → logprob: -14.703977584838867
    10. '    ' → logprob: -14.953977584838867

Token 191: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3051466941833496
    2. 'new' → logprob: -1.9301466941833496
    3. ' for' → logprob: -3.0551466941833496
    4. 'dp' → logprob: -3.9301466941833496
    5. 'if' → logprob: -4.18014669418335
    6. ' new' → logprob: -4.43014669418335
    7. 'pas' → logprob: -5.05514669418335
    8. 'range' → logprob: -5.43014669418335
    9. 's' → logprob: -5.80514669418335
    10. ' if' → logprob: -6.30514669418335

Token 192: ' cumul' (ID: 163119)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14368557929992676
    2. 'new' → logprob: -3.2686855792999268
    3. '=' → logprob: -3.3936855792999268
    4. ' new' → logprob: -3.5186855792999268
    5. ' =' → logprob: -4.018685340881348
    6. ' +=' → logprob: -5.143685340881348
    7. '(new' → logprob: -6.018685340881348
    8. '       ' → logprob: -6.268685340881348
    9. '+=' → logprob: -6.643685340881348
    10. '  ' → logprob: -7.268685340881348

Token 193: 'ée' (ID: 2894)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.00928683951497078
    2. '       ' → logprob: -5.634286880493164
    3. 'ée' → logprob: -5.759286880493164
    4. 'ulative' → logprob: -6.759286880493164
    5. '   ' → logprob: -7.009286880493164
    6. '[' → logprob: -9.134286880493164
    7. 'érée' → logprob: -10.384286880493164
    8. '#' → logprob: -10.509286880493164
    9. 'rée' → logprob: -10.509286880493164
    10. 'j' → logprob: -10.634286880493164

Token 194: ',' (ID: 11)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6731535792350769
    2. ' new' → logprob: -1.1731536388397217
    3. '       ' → logprob: -2.9231536388397217
    4. '   ' → logprob: -3.1731536388397217
    5. '+' → logprob: -3.9231536388397217
    6. ' +=' → logprob: -4.548153400421143
    7. ' =' → logprob: -4.673153400421143
    8. '=' → logprob: -4.673153400421143
    9. '           ' → logprob: -4.798153400421143
    10. ',' → logprob: -5.173153400421143

Token 195: ' en' (ID: 469)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4771358072757721
    2. 'new' → logprob: -0.9771357774734497
    3. '   ' → logprob: -5.97713565826416
    4. '       ' → logprob: -8.47713565826416
    5. '    ' → logprob: -8.97713565826416
    6. '           ' → logprob: -10.60213565826416
    7. '=' → logprob: -10.97713565826416
    8. '	new' → logprob: -11.10213565826416
    9. 'dp' → logprob: -11.22713565826416
    10. ' cum' → logprob: -11.22713565826416

Token 196: ' esp' (ID: 7461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.36304721236228943
    2. 'dp' → logprob: -2.1130471229553223
    3. ' range' → logprob: -2.4880471229553223
    4. 'new' → logprob: -2.8630471229553223
    5. ' new' → logprob: -4.488047122955322
    6. '   ' → logprob: -4.613047122955322
    7. 'for' → logprob: -4.613047122955322
    8. ' dp' → logprob: -5.613047122955322
    9. '       ' → logprob: -6.488047122955322
    10. 'f' → logprob: -6.738047122955322

Token 197: 'érant' (ID: 91190)
  Prédit: 'èce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èce' → logprob: -0.6836192011833191
    2. 'ace' → logprob: -0.9336192011833191
    3. 'r' → logprob: -3.933619260787964
    4. 'rité' → logprob: -4.683619022369385
    5. 'rance' → logprob: -4.683619022369385
    6. 'lice' → logprob: -4.808619022369385
    7. 'ce' → logprob: -4.808619022369385
    8. 'âce' → logprob: -5.058619022369385
    9. 'érance' → logprob: -5.058619022369385
    10. '#' → logprob: -5.183619022369385

Token 198: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5707453489303589
    2. ' new' → logprob: -1.8207453489303589
    3. '   ' → logprob: -2.3207454681396484
    4. '           ' → logprob: -2.6957454681396484
    5. 'new' → logprob: -3.4457454681396484
    6. '       ' → logprob: -3.5707454681396484
    7. ' that' → logprob: -4.070745468139648
    8. 'que' → logprob: -4.570745468139648
    9. 'that' → logprob: -4.695745468139648
    10. '    ' → logprob: -5.695745468139648

Token 199: ' ça' (ID: 13590)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.09749820083379745
    2. ' new' → logprob: -2.9724981784820557
    3. 'dp' → logprob: -3.2224981784820557
    4. ' dp' → logprob: -6.847498416900635
    5. '   ' → logprob: -7.847498416900635
    6. 'f' → logprob: -8.222497940063477
    7. 'j' → logprob: -9.597497940063477
    8. '       ' → logprob: -10.472497940063477
    9. ' f' → logprob: -10.722497940063477
    10. '(new' → logprob: -12.472497940063477

Token 200: ' soit' (ID: 17293)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.2576788663864136
    2. ' marche' → logprob: -2.132678985595703
    3. ' suff' → logprob: -2.257678985595703
    4. 'se' → logprob: -2.632678985595703
    5. '       ' → logprob: -2.882678985595703
    6. ' fonctionne' → logprob: -3.007678985595703
    7. 'continue' → logprob: -3.007678985595703
    8. 'so' → logprob: -3.382678985595703
    9. '   ' → logprob: -3.507678985595703
    10. 'func' → logprob: -3.632678985595703

Token 201: ' efficace' (ID: 54338)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.117561474442482
    2. ' correct' → logprob: -3.1175615787506104
    3. ' correcte' → logprob: -3.6175615787506104
    4. '   ' → logprob: -4.742561340332031
    5. 'dp' → logprob: -4.742561340332031
    6. 'j' → logprob: -4.867561340332031
    7. 'new' → logprob: -5.117561340332031
    8. 'f' → logprob: -6.617561340332031
    9. 'exact' → logprob: -6.742561340332031
    10. 'just' → logprob: -7.117561340332031

Token 202: '...
' (ID: 4908)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25617343187332153
    2. ' new' → logprob: -1.7561733722686768
    3. 'new' → logprob: -3.3811733722686768
    4. '   ' → logprob: -4.756173610687256
    5. '+' → logprob: -5.756173610687256
    6. '<|end|>' → logprob: -6.506173610687256
    7. '
' → logprob: -7.006173610687256
    8. ',' → logprob: -7.006173610687256
    9. ' +' → logprob: -7.256173610687256
    10. '	new' → logprob: -7.256173610687256

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04521086439490318
    2. ' new' → logprob: -3.295210838317871
    3. 'new' → logprob: -5.295210838317871
    4. '   ' → logprob: -7.295210838317871
    5. '	' → logprob: -7.670210838317871
    6. '+' → logprob: -8.045210838317871
    7. '	   ' → logprob: -8.920210838317871
    8. '<|end|>' → logprob: -9.420210838317871
    9. ' +' → logprob: -9.545210838317871
    10. '	new' → logprob: -9.670210838317871

Token 204: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06972555071115494
    2. ' new' → logprob: -2.944725513458252
    3. '   ' → logprob: -4.319725513458252
    4. '       ' → logprob: -6.569725513458252
    5. '           ' → logprob: -11.94472599029541
    6. '	new' → logprob: -12.31972599029541
    7. '
' → logprob: -12.44472599029541
    8. '    ' → logprob: -12.56972599029541
    9. '  ' → logprob: -13.06972599029541
    10. ' ' → logprob: -13.69472599029541

Token 205: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.0280383548888494e-06
    2. '_dc' → logprob: -15.625000953674316
    3. '_dt' → logprob: -15.625000953674316
    4. 'dp' → logprob: -16.000001907348633
    5. '_' → logprob: -17.000001907348633
    6. '_dx' → logprob: -17.000001907348633
    7. '\' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '_pd' → logprob: -17.625001907348633

Token 206: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.817902173381299e-05
    2. '[' → logprob: -9.37509822845459
    3. '[new' → logprob: -11.62509822845459
    4. ' [' → logprob: -13.37509822845459
    5. '[i' → logprob: -14.37509822845459
    6. '=' → logprob: -14.75009822845459
    7. '```' → logprob: -15.25009822845459
    8. '[
' → logprob: -15.50009822845459
    9. '[js' → logprob: -15.50009822845459
    10. '=j' → logprob: -16.125097274780273

Token 207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011736786691471934
    2. ']=' → logprob: -6.876173496246338
    3. '=' → logprob: -9.876173973083496
    4. ' ]' → logprob: -10.001173973083496
    5. ']+=' → logprob: -10.501173973083496
    6. ' =' → logprob: -11.126173973083496
    7. ')' → logprob: -13.876173973083496
    8. '   ' → logprob: -15.251173973083496
    9. ']=(' → logprob: -15.501173973083496
    10. ' ' → logprob: -16.50117301940918

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00920120906084776
    2. '+=' → logprob: -5.1342010498046875
    3. ' =' → logprob: -5.7592010498046875
    4. ' +=' → logprob: -9.134201049804688
    5. '=(' → logprob: -13.384201049804688
    6. ']+=' → logprob: -13.634201049804688
    7. '.=' → logprob: -14.259201049804688
    8. '=sum' → logprob: -14.884201049804688
    9. '%=' → logprob: -15.009201049804688
    10. '=int' → logprob: -15.009201049804688

Token 209: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0021499041467905045
    2. ' (' → logprob: -6.252150058746338
    3. 'new' → logprob: -9.12714958190918
    4. '(' → logprob: -10.12714958190918
    5. '(dp' → logprob: -10.50214958190918
    6. '   ' → logprob: -11.50214958190918
    7. '(max' → logprob: -11.50214958190918
    8. '(mod' → logprob: -12.87714958190918
    9. '
' → logprob: -13.00214958190918
    10. '(next' → logprob: -13.25214958190918

Token 210: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.001132593723013997
    2. ' new' → logprob: -6.876132488250732
    3. '(new' → logprob: -9.62613296508789
    4. 'dp' → logprob: -10.75113296508789
    5. '   ' → logprob: -11.87613296508789
    6. '
' → logprob: -13.87613296508789
    7. '(' → logprob: -14.12613296508789
    8. ' (' → logprob: -14.62613296508789
    9. '           ' → logprob: -14.62613296508789
    10. '	new' → logprob: -14.75113296508789

Token 211: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.13388703338569e-06
    2. 'dp' → logprob: -12.500009536743164
    3. 'w' → logprob: -13.000009536743164
    4. 'Dp' → logprob: -13.875009536743164
    5. 'p' → logprob: -15.125009536743164
    6. 'DP' → logprob: -15.250009536743164
    7. 's' → logprob: -15.375009536743164
    8. '_dt' → logprob: -15.500009536743164
    9. '	dp' → logprob: -15.625009536743164
    10. '(dp' → logprob: -15.875009536743164

Token 212: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. ' [' → logprob: -18.25
    4. 'j' → logprob: -19.0
    5. '
' → logprob: -19.125
    6. '   ' → logprob: -19.125
    7. '```' → logprob: -19.625
    8. ')[' → logprob: -20.0
    9. '[i' → logprob: -20.125
    10. '[
' → logprob: -20.625

Token 213: ' -' (ID: 533)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005422292742878199
    2. '-' → logprob: -5.255422115325928
    3. ']' → logprob: -9.130422592163086
    4. '][' → logprob: -9.755422592163086
    5. ' -' → logprob: -11.505422592163086
    6. '
' → logprob: -12.255422592163086
    7. '[' → logprob: -12.755422592163086
    8. '[-' → logprob: -13.755422592163086
    9. ' [' → logprob: -14.255422592163086
    10. '[js' → logprob: -14.630422592163086

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '```' → logprob: -16.500001907348633
    5. ']' → logprob: -16.750001907348633
    6. '
' → logprob: -17.312501907348633
    7. ')' → logprob: -18.062501907348633
    8. '[' → logprob: -19.000001907348633
    9. 'new' → logprob: -19.125001907348633
    10. '0' → logprob: -19.125001907348633

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.750012397766113
    4. ']' → logprob: -15.875012397766113
    5. '
' → logprob: -16.000011444091797
    6. '```' → logprob: -16.625011444091797
    7. '0' → logprob: -16.937511444091797
    8. ')' → logprob: -17.437511444091797
    9. 'j' → logprob: -17.687511444091797
    10. '

' → logprob: -17.937511444091797

Token 216: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931478977203369
    2. ' +' → logprob: -0.6931478977203369
    3. '
' → logprob: -15.193147659301758
    4. ' ' → logprob: -15.443147659301758
    5. '+
' → logprob: -15.818147659301758
    6. ' ' → logprob: -16.443147659301758
    7. ')' → logprob: -16.568147659301758
    8. ' +
' → logprob: -17.318147659301758
    9. ' plus' → logprob: -17.318147659301758
    10. '```' → logprob: -17.318147659301758

Token 217: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132683336734772
    2. ' +' → logprob: -1.3132683038711548
    3. '
' → logprob: -12.563268661499023
    4. '+
' → logprob: -13.563268661499023
    5. ' ' → logprob: -14.938268661499023
    6. '+s' → logprob: -15.813268661499023
    7. ' ' → logprob: -15.938268661499023
    8. ')' → logprob: -15.938268661499023
    9. '+p' → logprob: -15.938268661499023
    10. '```' → logprob: -16.188268661499023

Token 218: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00016873658751137555
    2. ' dp' → logprob: -8.875168800354004
    3. '(dp' → logprob: -11.375168800354004
    4. '   ' → logprob: -12.000168800354004
    5. '(' → logprob: -12.500168800354004
    6. 'j' → logprob: -13.375168800354004
    7. 'f' → logprob: -13.375168800354004
    8. 'new' → logprob: -13.750168800354004
    9. 'pow' → logprob: -14.250168800354004
    10. '	dp' → logprob: -14.500168800354004

Token 219: '[k' (ID: 14298)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.003679767018184066
    2. '[f' → logprob: -5.7536797523498535
    3. 'j' → logprob: -7.7536797523498535
    4. 'f' → logprob: -10.003680229187012
    5. '[' → logprob: -11.253680229187012
    6. '[k' → logprob: -12.378680229187012
    7. '[-' → logprob: -13.003680229187012
    8. ' [' → logprob: -13.253680229187012
    9. '[s' → logprob: -13.753680229187012
    10. '[i' → logprob: -14.628680229187012

Token 220: ' -' (ID: 533)
  Prédit: '-j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.3398674726486206
    2. '-' → logprob: -1.5898674726486206
    3. ' -' → logprob: -2.58986759185791
    4. '[j' → logprob: -5.33986759185791
    5. ']' → logprob: -5.71486759185791
    6. 'j' → logprob: -7.33986759185791
    7. '[' → logprob: -9.71486759185791
    8. '
' → logprob: -9.96486759185791
    9. '][' → logprob: -10.08986759185791
    10. ']-' → logprob: -10.08986759185791

Token 221: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033153212280012667
    2. '1' → logprob: -8.37533187866211
    3. ' j' → logprob: -9.25033187866211
    4. 'f' → logprob: -12.50033187866211
    5. '	j' → logprob: -15.75033187866211
    6. ' ' → logprob: -15.75033187866211
    7. '-j' → logprob: -16.00033187866211
    8. '   ' → logprob: -16.00033187866211
    9. '_j' → logprob: -16.12533187866211
    10. ']' → logprob: -16.25033187866211

Token 222: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0015951994573697448
    2. '-' → logprob: -6.6265950202941895
    3. ']' → logprob: -8.626595497131348
    4. ' -' → logprob: -9.376595497131348
    5. ' ])' → logprob: -12.501595497131348
    6. ')' → logprob: -15.001595497131348
    7. '```' → logprob: -15.376595497131348
    8. ''])' → logprob: -15.751595497131348
    9. '})' → logprob: -15.876595497131348
    10. '   ' → logprob: -15.876595497131348

Token 223: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001366744691040367
    2. ' )' → logprob: -9.375136375427246
    3. ')%' → logprob: -10.750136375427246
    4. '*' → logprob: -11.250136375427246
    5. '])' → logprob: -11.875136375427246
    6. '%' → logprob: -12.250136375427246
    7. ' *' → logprob: -12.750136375427246
    8. ']' → logprob: -14.125136375427246
    9. '*j' → logprob: -14.750136375427246
    10. '   ' → logprob: -14.750136375427246

Token 224: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09857184439897537
    2. '(f' → logprob: -2.84857177734375
    3. ' f' → logprob: -3.97357177734375
    4. 'pow' → logprob: -4.84857177734375
    5. ' (' → logprob: -5.59857177734375
    6. '(' → logprob: -6.72357177734375
    7. '(n' → logprob: -7.47357177734375
    8. ' pow' → logprob: -7.72357177734375
    9. '(pow' → logprob: -7.72357177734375
    10. '((' → logprob: -7.84857177734375

Token 225: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08132810890674591
    2. '(f' → logprob: -2.9563281536102295
    3. '(n' → logprob: -3.9563281536102295
    4. 'n' → logprob: -6.20632791519165
    5. '(s' → logprob: -6.58132791519165
    6. 'sq' → logprob: -7.08132791519165
    7. 'pow' → logprob: -7.33132791519165
    8. ' (' → logprob: -7.58132791519165
    9. ' f' → logprob: -7.95632791519165
    10. '(' → logprob: -8.081328392028809

Token 226: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011403311509639025
    2. '[k' → logprob: -9.625114440917969
    3. 'j' → logprob: -10.500114440917969
    4. '[' → logprob: -11.500114440917969
    5. '[f' → logprob: -12.000114440917969
    6. '[-' → logprob: -13.875114440917969
    7. 'f' → logprob: -15.000114440917969
    8. ' [' → logprob: -15.000114440917969
    9. '```' → logprob: -15.000114440917969
    10. '[i' → logprob: -15.000114440917969

Token 227: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1650099754333496
    2. ']' → logprob: -2.0400099754333496
    3. ' -' → logprob: -4.29000997543335
    4. ']-' → logprob: -4.79000997543335
    5. ' ]' → logprob: -10.415010452270508
    6. '```' → logprob: -10.915010452270508
    7. ']+' → logprob: -12.040010452270508
    8. '//' → logprob: -13.165010452270508
    9. ']]' → logprob: -13.165010452270508
    10. '   ' → logprob: -13.290010452270508

Token 228: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6374599933624268
    2. '-' → logprob: -1.1374599933624268
    3. '//' → logprob: -2.6374599933624268
    4. '+' → logprob: -3.3874599933624268
    5. '<=' → logprob: -3.8874599933624268
    6. ' //' → logprob: -4.262459754943848
    7. '>=' → logprob: -5.637459754943848
    8. ' <=' → logprob: -5.887459754943848
    9. '**' → logprob: -6.262459754943848
    10. '```' → logprob: -6.887459754943848

Token 229: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010367410723119974
    2. ' f' → logprob: -6.876036643981934
    3. '   ' → logprob: -13.001036643981934
    4. ' ' → logprob: -14.501036643981934
    5. '  ' → logprob: -14.501036643981934
    6. '	f' → logprob: -15.376036643981934
    7. '    ' → logprob: -15.876036643981934
    8. '       ' → logprob: -16.37603759765625
    9. '           ' → logprob: -16.62603759765625
    10. '     ' → logprob: -17.25103759765625

Token 230: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.011053833179175854
    2. 'j' → logprob: -4.511054039001465
    3. '[' → logprob: -12.386054039001465
    4. '{' → logprob: -14.136054039001465
    5. ' j' → logprob: -15.011054039001465
    6. '(j' → logprob: -15.136054039001465
    7. '   ' → logprob: -15.511054039001465
    8. '	j' → logprob: -15.761054039001465
    9. '[
' → logprob: -15.886054039001465
    10. '
' → logprob: -18.13605308532715

Token 231: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000264315924141556
    2. ' -' → logprob: -8.250264167785645
    3. '1' → logprob: -13.125264167785645
    4. 'j' → logprob: -15.375264167785645
    5. '   ' → logprob: -15.750264167785645
    6. '-j' → logprob: -15.875264167785645
    7. '[j' → logprob: -16.00026512145996
    8. ']' → logprob: -16.50026512145996
    9. '−' → logprob: -16.50026512145996
    10. '[' → logprob: -17.00026512145996

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '-' → logprob: -18.375001907348633
    5. '```' → logprob: -18.375001907348633
    6. '  ' → logprob: -18.625001907348633
    7. ']' → logprob: -19.500001907348633
    8. '
' → logprob: -20.312501907348633
    9. ')' → logprob: -20.687501907348633
    10. '[' → logprob: -20.750001907348633

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '-' → logprob: -16.75
    4. '   ' → logprob: -16.875
    5. '```' → logprob: -18.5
    6. '  ' → logprob: -19.625
    7. '[' → logprob: -21.125
    8. '１' → logprob: -21.25
    9. '' → logprob: -21.375
    10. '
' → logprob: -21.8125

Token 234: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02482732944190502
    2. ']))' → logprob: -3.899827241897583
    3. '])' → logprob: -6.399827480316162
    4. ')' → logprob: -6.774827480316162
    5. ')))' → logprob: -7.274827480316162
    6. ')])' → logprob: -7.274827480316162
    7. ' ))' → logprob: -10.149827003479004
    8. '}))' → logprob: -11.024827003479004
    9. ')]' → logprob: -11.274827003479004
    10. ')
' → logprob: -12.024827003479004

Token 235: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02589532360434532
    2. '%' → logprob: -3.775895357131958
    3. ' %' → logprob: -6.650895118713379
    4. ')%' → logprob: -6.650895118713379
    5. ' )' → logprob: -10.525895118713379
    6. '   ' → logprob: -10.900895118713379
    7. ']' → logprob: -11.525895118713379
    8. '%)' → logprob: -13.150895118713379
    9. '')' → logprob: -14.150895118713379
    10. '")' → logprob: -14.400895118713379

Token 236: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.941850526549388e-06
    2. ' MOD' → logprob: -11.750007629394531
    3. '_MOD' → logprob: -20.87500762939453
    4. '.MOD' → logprob: -21.75000762939453
    5. 'MO' → logprob: -22.50000762939453
    6. '100' → logprob: -23.12500762939453
    7. 'MD' → logprob: -23.87500762939453
    8. 'MODULE' → logprob: -24.12500762939453
    9. '```' → logprob: -24.37500762939453
    10. ' ' → logprob: -24.75000762939453

Token 237: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012167119421064854
    2. ']' → logprob: -4.512166976928711
    3. ' dp' → logprob: -8.262166976928711
    4. '<|end|>' → logprob: -8.387166976928711
    5. ')' → logprob: -8.512166976928711
    6. '	dp' → logprob: -9.137166976928711
    7. '   ' → logprob: -9.262166976928711
    8. 'return' → logprob: -9.887166976928711
    9. '_dp' → logprob: -9.887166976928711
    10. 'print' → logprob: -10.387166976928711

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00865499209612608
    2. ' =' → logprob: -4.758655071258545
    3. ',' → logprob: -10.133654594421387
    4. '[:]' → logprob: -15.258654594421387
    5. '＝' → logprob: -15.383654594421387
    6. '[' → logprob: -16.258655548095703
    7. '=}' → logprob: -16.383655548095703
    8. ']' → logprob: -16.883655548095703
    9. '.=' → logprob: -17.258655548095703
    10. '=

' → logprob: -17.383655548095703

Token 241: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.005233882926404476
    2. ' new' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.505233764648438
    4. '[new' → logprob: -18.505233764648438
    5. 'dp' → logprob: -18.880233764648438
    6. '_new' → logprob: -19.755233764648438
    7. 'New' → logprob: -19.755233764648438
    8. ' ' → logprob: -19.880233764648438
    9. '新' → logprob: -20.130233764648438
    10. '	new' → logprob: -20.255233764648438

Token 242: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.627176768844947e-05
    2. 'dp' → logprob: -9.250096321105957
    3. 'Dp' → logprob: -17.25009536743164
    4. '	dp' → logprob: -17.25009536743164
    5. 'DP' → logprob: -18.12509536743164
    6. 'p' → logprob: -18.12509536743164
    7. 'w' → logprob: -18.50009536743164
    8. '_dc' → logprob: -19.12509536743164
    9. '_DP' → logprob: -19.62509536743164
    10. ' dp' → logprob: -19.75009536743164

Token 243: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' écr' (ID: 33691)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.428682804107666
    2. ' continue' → logprob: -1.428682804107666
    3. 'contin' → logprob: -2.553682804107666
    4. '#' → logprob: -5.678682804107666
    5. 's' → logprob: -5.803682804107666
    6. 'r' → logprob: -6.053682804107666
    7. '_continue' → logprob: -6.303682804107666
    8. '=' → logprob: -6.428682804107666
    9. ']' → logprob: -6.428682804107666
    10. ')' → logprob: -6.553682804107666

Token 247: 'ase' (ID: 618)
  Prédit: 'crit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'crit' → logprob: -1.6298118829727173
    2. 'v' → logprob: -1.8798118829727173
    3. 'vit' → logprob: -2.1298117637634277
    4. 've' → logprob: -2.3798117637634277
    5. 'vite' → logprob: -2.5048117637634277
    6. 'ève' → logprob: -2.8798117637634277
    7. 'm' → logprob: -3.3798117637634277
    8. 'place' → logprob: -3.5048117637634277
    9. 'rite' → logprob: -3.6298117637634277
    10. 'rit' → logprob: -4.004811763763428

Token 248: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' tant' (ID: 16235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' pis' (ID: 19525)
  Prédit: 'pis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pis' → logprob: -0.009238999336957932
    2. 'p' → logprob: -4.759239196777344
    3. 'que' → logprob: -7.884239196777344
    4. 'pi' → logprob: -9.134239196777344
    5. 'pas' → logprob: -9.759239196777344
    6. 'qu' → logprob: -9.759239196777344
    7. ' ' → logprob: -12.259239196777344
    8. 'pe' → logprob: -12.634239196777344
    9. ' pis' → logprob: -12.634239196777344
    10. ' mieux' → logprob: -13.259239196777344

Token 251: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.01193898357450962
    2. '(sum' → logprob: -4.51193904876709
    3. '(' → logprob: -7.76193904876709
    4. '(len' → logprob: -8.13693904876709
    5. 'dp' → logprob: -9.38693904876709
    6. '(max' → logprob: -10.26193904876709
    7. '((' → logprob: -11.38693904876709
    8. 'sum' → logprob: -11.51193904876709
    9. '(*' → logprob: -11.63693904876709
    10. '()' → logprob: -11.76193904876709

Token 254: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0011709370883181691
    2. '[k' → logprob: -6.751171112060547
    3. '[' → logprob: -14.251171112060547
    4. '-' → logprob: -16.876171112060547
    5. '[n' → logprob: -17.126171112060547
    6. '][-' → logprob: -17.126171112060547
    7. ')' → logprob: -17.876171112060547
    8. '[j' → logprob: -18.001171112060547
    9. '[K' → logprob: -18.376171112060547
    10. 'k' → logprob: -18.501171112060547

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '
' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. '])' → logprob: -19.0
    6. '0' → logprob: -19.0
    7. ']' → logprob: -19.0625
    8. '   ' → logprob: -19.25
    9. '１' → logprob: -19.5
    10. ')' → logprob: -19.6875

Token 256: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0007207724265754223
    2. ')' → logprob: -7.250720977783203
    3. '))' → logprob: -12.250720977783203
    4. ']' → logprob: -12.875720977783203
    5. '})' → logprob: -13.500720977783203
    6. ')%' → logprob: -14.250720977783203
    7. '%' → logprob: -14.875720977783203
    8. '])
' → logprob: -15.500720977783203
    9. ']%' → logprob: -15.625720977783203
    10. '%)' → logprob: -15.750720977783203

Token 257: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' affiche' (ID: 127479)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06470558792352676
    2. '#' → logprob: -2.9397056102752686
    3. ']' → logprob: -5.9397053718566895
    4. '[' → logprob: -6.3147053718566895
    5. '.' → logprob: -6.5647053718566895
    6. '```' → logprob: -7.5647053718566895
    7. ' #' → logprob: -7.8147053718566895
    8. ' )' → logprob: -7.8147053718566895
    9. 'print' → logprob: -8.189705848693848
    10. '')' → logprob: -8.439705848693848

Token 261: ' juste' (ID: 31553)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' dernière' (ID: 39497)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.12790842354297638
    2. 'result' → logprob: -2.50290846824646
    3. 'ré' → logprob: -4.752908229827881
    4. ' résultat' → logprob: -4.877908229827881
    5. 'solution' → logprob: -5.002908229827881
    6. 's' → logprob: -5.127908229827881
    7. 'val' → logprob: -6.002908229827881
    8. 'nombre' → logprob: -6.127908229827881
    9. 'suite' → logprob: -7.127908229827881
    10. 'r' → logprob: -7.877908229827881

Token 264: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' demandé' (ID: 82780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33237743377685547
    2. ' prévu' → logprob: -2.7073774337768555
    3. 'à' → logprob: -3.8323774337768555
    4. 'pré' → logprob: -4.0823774337768555
    5. '```' → logprob: -4.0823774337768555
    6. 'ci' → logprob: -4.2073774337768555
    7. 'att' → logprob: -4.3323774337768555
    8. ' attendu' → logprob: -4.4573774337768555
    9. 'une' → logprob: -4.7073774337768555
    10. 'la' → logprob: -4.8323774337768555

Token 267: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: 'normal' (ID: 14559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3199920178740285e-05
    2. ')
' → logprob: -11.250022888183594
    3. '))' → logprob: -12.250022888183594
    4. ' )' → logprob: -13.125022888183594
    5. '```' → logprob: -13.875022888183594
    6. '<|end|>' → logprob: -13.875022888183594
    7. '})' → logprob: -15.000022888183594
    8. '}' → logprob: -15.375022888183594
    9. ')#' → logprob: -15.625022888183594
    10. '`)' → logprob: -16.000022888183594

Token 269: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ' )' → logprob: -11.875017166137695
    3. '))' → logprob: -12.750017166137695
    4. ')
' → logprob: -12.750017166137695
    5. ')#' → logprob: -14.375017166137695
    6. '())' → logprob: -14.375017166137695
    7. '!)' → logprob: -14.625017166137695
    8. '')' → logprob: -14.875017166137695
    9. ')")' → logprob: -14.875017166137695
    10. '`)' → logprob: -15.000017166137695

Token 270: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.310693111619912e-05
    2. ' )' → logprob: -10.375042915344238
    3. '))' → logprob: -12.000042915344238
    4. '!)' → logprob: -14.125042915344238
    5. '')' → logprob: -14.250042915344238
    6. ')
' → logprob: -14.250042915344238
    7. '`)' → logprob: -14.375042915344238
    8. ')")' → logprob: -14.375042915344238
    9. '<|end|>' → logprob: -14.875042915344238
    10. '])' → logprob: -15.000042915344238

Token 271: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.7328302264213562
    2. ')' → logprob: -0.8578302264213562
    3. '')' → logprob: -2.607830286026001
    4. 'e' → logprob: -4.607830047607422
    5. ''' → logprob: -5.732830047607422
    6. 'est' → logprob: -6.107830047607422
    7. '#' → logprob: -6.232830047607422
    8. ''était' → logprob: -7.107830047607422
    9. 'a' → logprob: -7.232830047607422
    10. ''a' → logprob: -7.607830047607422

Token 272: ' celle' (ID: 31790)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7303438782691956
    2. 'la' → logprob: -1.4803438186645508
    3. ')' → logprob: -2.105343818664551
    4. 'le' → logprob: -2.355343818664551
    5. 'correct' → logprob: -3.480343818664551
    6. '0' → logprob: -4.230343818664551
    7. 'l' → logprob: -4.605343818664551
    8. '1' → logprob: -6.230343818664551
    9. 'OK' → logprob: -6.855343818664551
    10. ').' → logprob: -6.855343818664551

Token 273: ' qu' (ID: 474)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3944694995880127
    2. '#' → logprob: -1.1444694995880127
    3. ')#' → logprob: -6.519469261169434
    4. '[' → logprob: -6.769469261169434
    5. '```' → logprob: -6.894469261169434
    6. ' #' → logprob: -7.269469261169434
    7. ']' → logprob: -7.519469261169434
    8. ' )' → logprob: -8.519469261169434
    9. '.' → logprob: -8.644469261169434
    10. 'qui' → logprob: -8.644469261169434

Token 274: ''on' (ID: 25812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4220109283924103
    2. ''est' → logprob: -1.547010898590088
    3. 'e' → logprob: -2.547010898590088
    4. ''' → logprob: -4.297010898590088
    5. 'est' → logprob: -4.922010898590088
    6. 'a' → logprob: -5.297010898590088
    7. ''a' → logprob: -5.297010898590088
    8. '[' → logprob: -5.547010898590088
    9. '')' → logprob: -5.922010898590088
    10. '['' → logprob: -6.172010898590088

Token 275: ' veut' (ID: 41653)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2429247498512268
    2. 'a' → logprob: -1.617924690246582
    3. 'print' → logprob: -5.617924690246582
    4. 'veux' → logprob: -6.492924690246582
    5. 've' → logprob: -6.492924690246582
    6. '#a' → logprob: -6.617924690246582
    7. 's' → logprob: -6.742924690246582
    8. 'vient' → logprob: -7.117924690246582
    9. 'avait' → logprob: -7.242924690246582
    10. 'fait' → logprob: -7.492924690246582

Token 276: ' ?)' (ID: 145410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.598092684522271e-05
    2. ')
' → logprob: -10.250056266784668
    3. '```' → logprob: -11.875056266784668
    4. ' )' → logprob: -12.000056266784668
    5. '`)' → logprob: -12.875056266784668
    6. '<|end|>' → logprob: -13.250056266784668
    7. '))' → logprob: -14.000056266784668
    8. '})' → logprob: -14.875056266784668
    9. '')' → logprob: -15.000056266784668
    10. '])' → logprob: -15.125056266784668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 26.64%
Précision adaptée (1ère position): 27.74%
Précision (top 10): 62.41%
================================================================================
