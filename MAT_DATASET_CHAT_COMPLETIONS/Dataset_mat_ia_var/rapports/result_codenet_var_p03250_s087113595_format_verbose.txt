================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_numbers = list(map(int, input().split()))

input_numbers.sort()

largest_number = input_numbers[2]
second_largest_number = input_numbers[1]
smallest_number = input_numbers[0]

result = 10 * largest_number + second_largest_number + smallest_number

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_numbers' (ID: 76842)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5144957304000854
    2. '[' → logprob: -1.3894957304000854
    3. ' [' → logprob: -2.014495849609375
    4. '[]' → logprob: -4.139495849609375
    5. ' ' → logprob: -6.139495849609375
    6. '[input' → logprob: -7.014495849609375
    7. 'input' → logprob: -8.639495849609375
    8. '[int' → logprob: -8.639495849609375
    9. ' "' → logprob: -9.764495849609375
    10. ' input' → logprob: -10.014495849609375

Token 4: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00942998006939888
    2. '[' → logprob: -5.134429931640625
    3. '```' → logprob: -6.509429931640625
    4. '(
' → logprob: -7.884429931640625
    5. '(range' → logprob: -8.009429931640625
    6. ')' → logprob: -8.259429931640625
    7. '`' → logprob: -8.509429931640625
    8. '(input' → logprob: -8.634429931640625
    9. '[(' → logprob: -9.384429931640625
    10. '[input' → logprob: -9.759429931640625

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24828505516052246
    2. '(lambda' → logprob: -1.6232850551605225
    3. '(str' → logprob: -4.498285293579102
    4. '(int' → logprob: -5.248285293579102
    5. ')' → logprob: -5.873285293579102
    6. '(eval' → logprob: -6.748285293579102
    7. '(input' → logprob: -6.873285293579102
    8. '```' → logprob: -8.373285293579102
    9. '(
' → logprob: -8.998285293579102
    10. '<|end|>' → logprob: -9.248285293579102

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006956434343010187
    2. '(' → logprob: -5.256956577301025
    3. '))' → logprob: -7.131956577301025
    4. '(user' → logprob: -8.881956100463867
    5. 'input' → logprob: -9.006956100463867
    6. ')' → logprob: -9.131956100463867
    7. '()))' → logprob: -9.381956100463867
    8. '(token' → logprob: -9.381956100463867
    9. '(range' → logprob: -9.881956100463867
    10. '```' → logprob: -10.256956100463867

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5289611220359802
    2. ' input' → logprob: -0.9039611220359802
    3. '(input' → logprob: -5.153961181640625
    4. ')' → logprob: -11.278961181640625
    5. ',input' → logprob: -11.278961181640625
    6. '=input' → logprob: -12.278961181640625
    7. '```' → logprob: -13.153961181640625
    8. '<input' → logprob: -13.153961181640625
    9. ' (' → logprob: -13.278961181640625
    10. '[input' → logprob: -13.278961181640625

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3121260106563568
    2. '()' → logprob: -2.0621259212493896
    3. '()))' → logprob: -2.4371259212493896
    4. '(()' → logprob: -4.437126159667969
    5. '(input' → logprob: -5.187126159667969
    6. '())))' → logprob: -5.187126159667969
    7. '()));' → logprob: -5.312126159667969
    8. '())' → logprob: -5.312126159667969
    9. '`()' → logprob: -5.812126159667969
    10. '()>' → logprob: -5.812126159667969

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000920869642868638
    2. 'strip' → logprob: -7.00092077255249
    3. 'rstrip' → logprob: -12.000921249389648
    4. ' split' → logprob: -13.125921249389648
    5. 'spl' → logprob: -14.750921249389648
    6. ')' → logprob: -14.875921249389648
    7. '(split' → logprob: -15.125921249389648
    8. 'startswith' → logprob: -16.12592124938965
    9. 'read' → logprob: -16.25092124938965
    10. 's' → logprob: -17.37592124938965

Token 10: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.19605650007724762
    2. '))' → logprob: -1.9460564851760864
    3. '())' → logprob: -4.321056365966797
    4. '()' → logprob: -4.321056365966797
    5. ')' → logprob: -5.571056365966797
    6. ')))' → logprob: -6.321056365966797
    7. '())))' → logprob: -6.446056365966797
    8. '(' → logprob: -6.696056365966797
    9. '()));' → logprob: -9.571056365966797
    10. '```' → logprob: -10.571056365966797

Token 11: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.136694997549057
    2. '.' → logprob: -2.38669490814209
    3. '[' → logprob: -4.01169490814209
    4. '```' → logprob: -5.38669490814209
    5. '#' → logprob: -5.76169490814209
    6. '+' → logprob: -6.01169490814209
    7. '(' → logprob: -6.51169490814209
    8. '.sort' → logprob: -6.76169490814209
    9. 'print' → logprob: -7.13669490814209
    10. '\n' → logprob: -7.63669490814209

Token 12: '_numbers' (ID: 76842)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28453800082206726
    2. '_numbers' → logprob: -1.9095380306243896
    3. '()' → logprob: -2.6595380306243896
    4. '_' → logprob: -4.0345377922058105
    5. '('' → logprob: -5.5345377922058105
    6. '```' → logprob: -6.5345377922058105
    7. '[' → logprob: -6.6595377922058105
    8. '("("' → logprob: -6.9095377922058105
    9. '('_' → logprob: -7.7845377922058105
    10. '())' → logprob: -7.9095377922058105

Token 13: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04305399954319
    2. '(' → logprob: -3.1680541038513184
    3. '()`' → logprob: -11.16805362701416
    4. '())' → logprob: -11.29305362701416
    5. '().' → logprob: -12.79305362701416
    6. '()>' → logprob: -13.29305362701416
    7. '```' → logprob: -13.29305362701416
    8. '()<' → logprob: -13.29305362701416
    9. ' ()' → logprob: -13.41805362701416
    10. '();' → logprob: -13.41805362701416

Token 15: 'largest' (ID: 191832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5100163817405701
    2. '[' → logprob: -1.5100164413452148
    3. 'for' → logprob: -2.635016441345215
    4. ')' → logprob: -3.760016441345215
    5. '```' → logprob: -3.885016441345215
    6. '(' → logprob: -4.135016441345215
    7. 'if' → logprob: -4.385016441345215
    8. '#' → logprob: -4.385016441345215
    9. '()' → logprob: -5.260016441345215
    10. '\' → logprob: -5.885016441345215

Token 16: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10608524829149246
    2. '(' → logprob: -2.3560853004455566
    3. '()' → logprob: -5.981085300445557
    4. '_parent' → logprob: -6.481085300445557
    5. '(_)' → logprob: -8.231084823608398
    6. '```' → logprob: -8.606084823608398
    7. '_numbers' → logprob: -8.981084823608398
    8. '[' → logprob: -9.106084823608398
    9. ')' → logprob: -9.231084823608398
    10. '\' → logprob: -9.606084823608398

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8175115585327148
    2. '_' → logprob: -0.9425115585327148
    3. ')' → logprob: -2.692511558532715
    4. 's' → logprob: -3.192511558532715
    5. '()' → logprob: -3.567511558532715
    6. '<|end|>' → logprob: -4.067511558532715
    7. '=' → logprob: -5.942511558532715
    8. '[]' → logprob: -6.192511558532715
    9. '(' → logprob: -6.192511558532715
    10. '[-' → logprob: -6.442511558532715

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.038042064756155014
    2. 'input' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.788042068481445
    4. '(input' → logprob: -16.663042068481445
    5. '	input' → logprob: -16.913042068481445
    6. '_input' → logprob: -17.038042068481445
    7. 'Input' → logprob: -17.288042068481445
    8. '=input' → logprob: -17.288042068481445
    9. ' max' → logprob: -17.913042068481445
    10. '[input' → logprob: -18.038042068481445

Token 19: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.014771657064557076
    2. '_' → logprob: -4.264771461486816
    3. '_number' → logprob: -8.139771461486816
    4. '_n' → logprob: -8.389771461486816
    5. '_tokens' → logprob: -10.764771461486816
    6. ')_' → logprob: -11.764771461486816
    7. '```' → logprob: -11.889771461486816
    8. '_s' → logprob: -12.014771461486816
    9. '__' → logprob: -12.139771461486816
    10. 's' → logprob: -12.514771461486816

Token 20: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00014692598779220134
    2. '[' → logprob: -9.000146865844727
    3. '[::-' → logprob: -11.375146865844727
    4. '[len' → logprob: -11.875146865844727
    5. '[:]' → logprob: -12.500146865844727
    6. '[
' → logprob: -14.500146865844727
    7. '```' → logprob: -15.250146865844727
    8. '[:-' → logprob: -15.500146865844727
    9. '[:' → logprob: -16.500146865844727
    10. '.pop' → logprob: -16.875146865844727

Token 21: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -2.045823566731997e-05
    2. ' -' → logprob: -11.000020027160645
    3. '0' → logprob: -12.750020027160645
    4. '1' → logprob: -14.500020027160645
    5. '-l' → logprob: -16.12502098083496
    6. '```' → logprob: -17.00002098083496
    7. '-ex' → logprob: -17.50002098083496
    8. '-user' → logprob: -17.62502098083496
    9. '-
' → logprob: -18.12502098083496
    10. '[-' → logprob: -18.12502098083496

Token 22: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09393765032291412
    2. ')' → logprob: -2.468937635421753
    3. '])' → logprob: -5.468937873840332
    4. ')]' → logprob: -7.218937873840332
    5. ' ]' → logprob: -10.843937873840332
    6. ')])' → logprob: -12.343937873840332
    7. ' )' → logprob: -12.343937873840332
    8. '）' → logprob: -13.343937873840332
    9. '```' → logprob: -13.343937873840332
    10. '+' → logprob: -13.968937873840332

Token 23: 'second' (ID: 13901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016526829451322556
    2. '_number' → logprob: -4.766526699066162
    3. '_l' → logprob: -5.266526699066162
    4. ' _' → logprob: -7.391526699066162
    5. '_m' → logprob: -8.39152717590332
    6. '_num' → logprob: -8.39152717590332
    7. '_s' → logprob: -8.51652717590332
    8. '_best' → logprob: -8.51652717590332
    9. '_high' → logprob: -8.76652717590332
    10. '_max' → logprob: -8.76652717590332

Token 25: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.0007070713327266276
    2. 'arget' → logprob: -8.000706672668457
    3. 'arg' → logprob: -8.250706672668457
    4. 'ist' → logprob: -10.000706672668457
    5. 'arge' → logprob: -11.250706672668457
    6. 'gest' → logprob: -11.375706672668457
    7. 'a' → logprob: -11.875706672668457
    8. 'ast' → logprob: -12.125706672668457
    9. '_arg' → logprob: -12.375706672668457
    10. 'ar' → logprob: -12.625706672668457

Token 26: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.665920615196228
    2. ' =' → logprob: -0.915920615196228
    3. '=' → logprob: -2.5409207344055176
    4. '_number' → logprob: -5.165920734405518
    5. '_space' → logprob: -7.165920734405518
    6. ' _' → logprob: -8.41592025756836
    7. '=_' → logprob: -9.16592025756836
    8. '_num' → logprob: -9.16592025756836
    9. ')' → logprob: -9.66592025756836
    10. '_=' → logprob: -10.04092025756836

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010628211311995983
    2. '=' → logprob: -6.876062870025635
    3. ' ' → logprob: -11.126062393188477
    4. '_' → logprob: -11.376062393188477
    5. ' =
' → logprob: -13.751062393188477
    6. ',' → logprob: -14.001062393188477
    7. ')' → logprob: -15.001062393188477
    8. '=input' → logprob: -15.001062393188477
    9. ' ' → logprob: -15.126062393188477
    10. ' _' → logprob: -15.251062393188477

Token 28: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.018155209720134735
    2. 'input' → logprob: -4.018155097961426
    3. ' ' → logprob: -12.393155097961426
    4. ' ' → logprob: -15.393155097961426
    5. '=input' → logprob: -15.393155097961426
    6. ''' → logprob: -15.643155097961426
    7. '	input' → logprob: -15.893155097961426
    8. '_input' → logprob: -16.143156051635742
    9. '(input' → logprob: -16.768156051635742
    10. '[input' → logprob: -16.893156051635742

Token 29: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -7.135819760151207e-05
    2. '_number' → logprob: -9.75007152557373
    3. '_' → logprob: -11.50007152557373
    4. '_tokens' → logprob: -14.37507152557373
    5. '_n' → logprob: -14.62507152557373
    6. '```' → logprob: -14.75007152557373
    7. '[' → logprob: -15.50007152557373
    8. ' _' → logprob: -15.62507152557373
    9. ')_' → logprob: -16.000070571899414
    10. 'umbers' → logprob: -16.375070571899414

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011049000546336174
    2. '[-' → logprob: -4.511048793792725
    3. '[len' → logprob: -14.136049270629883
    4. '[::-' → logprob: -15.386049270629883
    5. '```' → logprob: -16.136049270629883
    6. '[
' → logprob: -16.636049270629883
    7. '1' → logprob: -16.761049270629883
    8. '[:-' → logprob: -17.386049270629883
    9. ' [' → logprob: -17.636049270629883
    10. '[end' → logprob: -18.511049270629883

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012439649435691535
    2. '-' → logprob: -9.000123977661133
    3. ' ' → logprob: -14.625123977661133
    4. ' -' → logprob: -14.750123977661133
    5. '0' → logprob: -17.062623977661133
    6. '```' → logprob: -17.500123977661133
    7. '۱' → logprob: -17.937623977661133
    8. 'len' → logprob: -18.062623977661133
    9. '2' → logprob: -18.437623977661133
    10. ' ' → logprob: -18.562623977661133

Token 32: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002931558701675385
    2. ')' → logprob: -8.750292778015137
    3. ' ]' → logprob: -9.125292778015137
    4. '[' → logprob: -11.500292778015137
    5. '']' → logprob: -11.750292778015137
    6. '<|end|>' → logprob: -13.125292778015137
    7. '])' → logprob: -13.250292778015137
    8. '+' → logprob: -13.875292778015137
    9. ')]' → logprob: -14.125292778015137
    10. '```' → logprob: -14.875292778015137

Token 33: 'small' (ID: 18158)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48251527547836304
    2. 'third' → logprob: -0.982515275478363
    3. 'small' → logprob: -5.857515335083008
    4. '```' → logprob: -5.982515335083008
    5. '
' → logprob: -7.357515335083008
    6. 'largest' → logprob: -7.357515335083008
    7. '<|end|>' → logprob: -7.982515335083008
    8. ' third' → logprob: -8.607515335083008
    9. '#' → logprob: -8.982515335083008
    10. '+' → logprob: -9.107515335083008

Token 34: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.7432603272027336e-06
    2. 'e' → logprob: -13.625001907348633
    3. 'er' → logprob: -15.875001907348633
    4. 'east' → logprob: -16.250001907348633
    5. 'es' → logprob: -16.375001907348633
    6. '```' → logprob: -17.125001907348633
    7. 'erst' → logprob: -17.375001907348633
    8. 'lest' → logprob: -17.375001907348633
    9. '_est' → logprob: -18.000001907348633
    10. 'ест' → logprob: -18.250001907348633

Token 35: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.04382569342851639
    2. '_' → logprob: -3.168825626373291
    3. '_numbers' → logprob: -7.543825626373291
    4. '_num' → logprob: -8.91882610321045
    5. '_n' → logprob: -10.29382610321045
    6. ' _' → logprob: -10.41882610321045
    7. '_amount' → logprob: -11.16882610321045
    8. '<|end|>' → logprob: -11.79382610321045
    9. '```' → logprob: -12.29382610321045
    10. '_Number' → logprob: -12.29382610321045

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995421648025513
    2. '=' → logprob: -2.6949541568756104
    3. '=input' → logprob: -11.819953918457031
    4. ' ' → logprob: -12.444953918457031
    5. '_' → logprob: -13.194953918457031
    6. ']' → logprob: -13.944953918457031
    7. ' =
' → logprob: -13.944953918457031
    8. ')' → logprob: -13.944953918457031
    9. '[' → logprob: -14.069953918457031
    10. 'input' → logprob: -15.194953918457031

Token 37: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0028076060116291046
    2. 'input' → logprob: -5.8778076171875
    3. ' ' → logprob: -13.2528076171875
    4. ' ' → logprob: -15.0028076171875
    5. '=input' → logprob: -15.0028076171875
    6. '_input' → logprob: -15.6278076171875
    7. '	input' → logprob: -16.3778076171875
    8. '(input' → logprob: -16.6278076171875
    9. '[input' → logprob: -17.8778076171875
    10. '`' → logprob: -18.1278076171875

Token 38: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0016055555315688252
    2. '_' → logprob: -6.87660551071167
    3. '_number' → logprob: -7.87660551071167
    4. '_n' → logprob: -9.876605987548828
    5. '```' → logprob: -10.251605987548828
    6. '_tokens' → logprob: -10.876605987548828
    7. 'put' → logprob: -11.126605987548828
    8. ' _' → logprob: -11.626605987548828
    9. ')_' → logprob: -11.751605987548828
    10. '`' → logprob: -12.001605987548828

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -13.12500286102295
    3. '[-' → logprob: -14.37500286102295
    4. '[
' → logprob: -15.00000286102295
    5. ' [' → logprob: -15.25000286102295
    6. '\[' → logprob: -16.625003814697266
    7. '[len' → logprob: -17.625003814697266
    8. '[:' → logprob: -18.375003814697266
    9. '0' → logprob: -18.375003814697266
    10. '
' → logprob: -18.875003814697266

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -15.375000953674316
    4. '1' → logprob: -17.375
    5. '```' → logprob: -18.75
    6. ']' → logprob: -19.625
    7. '۰' → logprob: -20.125
    8. ')' → logprob: -21.0
    9. '`' → logprob: -21.125
    10. '٠' → logprob: -21.375

Token 41: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026872646412812173
    2. ']' → logprob: -8.250268936157227
    3. '[' → logprob: -13.250268936157227
    4. '）' → logprob: -13.250268936157227
    5. '}' → logprob: -13.625268936157227
    6. '])' → logprob: -14.250268936157227
    7. ' )' → logprob: -14.375268936157227
    8. ')]' → logprob: -14.625268936157227
    9. '```' → logprob: -15.250268936157227
    10. '))' → logprob: -15.875268936157227

Token 42: 'result' (ID: 2521)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2746264934539795
    2. '
' → logprob: -2.7746264934539795
    3. '#' → logprob: -2.8996264934539795
    4. '```' → logprob: -3.8996264934539795
    5. '\n' → logprob: -4.024626731872559
    6. 'if' → logprob: -4.149626731872559
    7. '<|end|>' → logprob: -4.274626731872559
    8. '+
' → logprob: -4.899626731872559
    9. 'print' → logprob: -5.024626731872559
    10. '*' → logprob: -5.274626731872559

Token 43: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11290834844112396
    2. ' =' → logprob: -2.612908363342285
    3. '=' → logprob: -3.487908363342285
    4. ' ' → logprob: -7.112908363342285
    5. '_space' → logprob: -7.237908363342285
    6. 's' → logprob: -7.612908363342285
    7. '[' → logprob: -8.362908363342285
    8. '(' → logprob: -8.737908363342285
    9. '.' → logprob: -8.987908363342285
    10. ' _' → logprob: -9.237908363342285

Token 44: ' ' (ID: 220)
  Prédit: ' largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.07766532152891159
    2. 'largest' → logprob: -2.702665328979492
    3. ' smallest' → logprob: -5.702665328979492
    4. ' second' → logprob: -6.077665328979492
    5. 'second' → logprob: -6.827665328979492
    6. ' ' → logprob: -7.702665328979492
    7. ' input' → logprob: -8.952665328979492
    8. 'small' → logprob: -8.952665328979492
    9. ' ' → logprob: -9.702665328979492
    10. ' max' → logprob: -10.577665328979492

Token 45: '10' (ID: 702)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.0077851274982094765
    2. 'second' → logprob: -5.382785320281982
    3. ' largest' → logprob: -6.132785320281982
    4. 'small' → logprob: -7.132785320281982
    5. 'large' → logprob: -9.757784843444824
    6. 'str' → logprob: -10.507784843444824
    7. 'max' → logprob: -10.757784843444824
    8. 'third' → logprob: -11.507784843444824
    9. '(s' → logprob: -11.632784843444824
    10. ' smallest' → logprob: -11.632784843444824

Token 46: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2845427691936493
    2. '**' → logprob: -1.9095427989959717
    3. '+' → logprob: -2.4095427989959717
    4. ' *' → logprob: -5.409542560577393
    5. ' +' → logprob: -5.784542560577393
    6. ' **' → logprob: -7.284542560577393
    7. '^' → logprob: -7.659542560577393
    8. '-' → logprob: -7.909542560577393
    9. '0' → logprob: -9.03454303741455
    10. '***' → logprob: -9.65954303741455

Token 47: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.6331319212913513
    2. 'largest' → logprob: -0.7581319212913513
    3. 'second' → logprob: -8.758131980895996
    4. ' smallest' → logprob: -9.008131980895996
    5. ' ' → logprob: -9.383131980895996
    6. ' second' → logprob: -10.008131980895996
    7. 'large' → logprob: -10.008131980895996
    8. 'space' → logprob: -10.883131980895996
    9. 'l' → logprob: -11.008131980895996
    10. 'small' → logprob: -11.508131980895996

Token 48: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3137935400009155
    2. '_number' → logprob: -1.3137935400009155
    3. '_n' → logprob: -7.813793659210205
    4. '_num' → logprob: -9.563793182373047
    5. '_numbers' → logprob: -10.438793182373047
    6. ' _' → logprob: -11.813793182373047
    7. '_user' → logprob: -12.438793182373047
    8. '__' → logprob: -12.938793182373047
    9. '_)' → logprob: -13.813793182373047
    10. '_

' → logprob: -14.063793182373047

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20268110930919647
    2. ' +' → logprob: -1.702681064605713
    3. '-' → logprob: -7.202681064605713
    4. ' ' → logprob: -8.202681541442871
    5. '*' → logprob: -9.202681541442871
    6. ' -' → logprob: -9.452681541442871
    7. ' +
' → logprob: -10.952681541442871
    8. '<|end|>' → logprob: -11.202681541442871
    9. '**' → logprob: -11.702681541442871
    10. ')' → logprob: -11.827681541442871

Token 50: ' second' (ID: 3099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41108056902885437
    2. ' second' → logprob: -1.7860805988311768
    3. 'second' → logprob: -1.9110805988311768
    4. '10' → logprob: -3.9110805988311768
    5. '100' → logprob: -8.161080360412598
    6. '5' → logprob: -8.286080360412598
    7. '20' → logprob: -8.536080360412598
    8. ' smallest' → logprob: -8.661080360412598
    9. '1' → logprob: -9.286080360412598
    10. ' largest' → logprob: -9.286080360412598

Token 51: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07896061986684799
    2. '_l' → logprob: -2.578960657119751
    3. ' _' → logprob: -10.578960418701172
    4. '_large' → logprob: -11.578960418701172
    5. '_small' → logprob: -11.828960418701172
    6. '_g' → logprob: -12.203960418701172
    7. '_

' → logprob: -12.453960418701172
    8. '_s' → logprob: -13.078960418701172
    9. '_-' → logprob: -13.328960418701172
    10. '_)' → logprob: -13.328960418701172

Token 52: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.0014841511147096753
    2. 'a' → logprob: -7.251483917236328
    3. 'arges' → logprob: -8.126483917236328
    4. 'arg' → logprob: -8.501483917236328
    5. 'arge' → logprob: -8.626483917236328
    6. 'arget' → logprob: -10.376483917236328
    7. 'ar' → logprob: -10.501483917236328
    8. '_' → logprob: -11.626483917236328
    9. '_arg' → logprob: -11.751483917236328
    10. 'largest' → logprob: -12.626483917236328

Token 53: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.22654008865356445
    2. '_' → logprob: -1.6015400886535645
    3. '_n' → logprob: -8.101539611816406
    4. '_token' → logprob: -8.476539611816406
    5. '_numbers' → logprob: -8.726539611816406
    6. '_num' → logprob: -8.851539611816406
    7. '_code' → logprob: -9.351539611816406
    8. ' _' → logprob: -9.726539611816406
    9. '_variable' → logprob: -11.101539611816406
    10. ')_' → logprob: -11.101539611816406

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07018672674894333
    2. '
' → logprob: -3.4451866149902344
    3. 'print' → logprob: -4.320186614990234
    4. '<|end|>' → logprob: -4.320186614990234
    5. '+
' → logprob: -5.445186614990234
    6. '*' → logprob: -6.320186614990234
    7. ' ' → logprob: -7.320186614990234
    8. '```' → logprob: -7.320186614990234
    9. '\n' → logprob: -7.570186614990234
    10. ')' → logprob: -7.945186614990234

Token 55: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.2065267413854599
    2. 'small' → logprob: -1.706526756286621
    3. ' small' → logprob: -5.331526756286621
    4. '10' → logprob: -8.956526756286621
    5. ' ' → logprob: -9.456526756286621
    6. '1' → logprob: -11.331526756286621
    7. '2' → logprob: -11.581526756286621
    8. '0' → logprob: -11.956526756286621
    9. '3' → logprob: -12.331526756286621
    10. '_small' → logprob: -12.581526756286621

Token 56: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.16054996848106384
    2. '_' → logprob: -1.9105499982833862
    3. '_numbers' → logprob: -9.160550117492676
    4. '_num' → logprob: -9.660550117492676
    5. '_n' → logprob: -9.910550117492676
    6. '__' → logprob: -10.535550117492676
    7. '_Number' → logprob: -11.660550117492676
    8. '_name' → logprob: -11.660550117492676
    9. '_s' → logprob: -11.785550117492676
    10. ' _' → logprob: -12.660550117492676

Token 57: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.650377094745636
    2. '
' → logprob: -0.900377094745636
    3. ')' → logprob: -3.525377035140991
    4. '<|end|>' → logprob: -4.15037727355957
    5. '*' → logprob: -4.65037727355957
    6. '\n' → logprob: -4.77537727355957
    7. '#' → logprob: -6.15037727355957
    8. '+' → logprob: -6.65037727355957
    9. '\' → logprob: -6.77537727355957
    10. '```' → logprob: -6.90037727355957

Token 58: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4987037777900696
    2. '\n' → logprob: -1.2487037181854248
    3. '
' → logprob: -2.998703718185425
    4. '<|end|>' → logprob: -3.623703718185425
    5. '```' → logprob: -4.998703956604004
    6. '#' → logprob: -5.123703956604004
    7. '\' → logprob: -5.248703956604004
    8. ')' → logprob: -5.873703956604004
    9. 'newline' → logprob: -6.623703956604004
    10. '+' → logprob: -6.623703956604004

Token 59: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001382241171086207
    2. '("("' → logprob: -9.625138282775879
    3. '('' → logprob: -9.875138282775879
    4. '(result' → logprob: -11.000138282775879
    5. ' (' → logprob: -13.250138282775879
    6. '()' → logprob: -14.250138282775879
    7. '((' → logprob: -14.875138282775879
    8. '(

' → logprob: -15.375138282775879
    9. '(
' → logprob: -15.500138282775879
    10. '(input' → logprob: -15.625138282775879

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '))' → logprob: -13.00000286102295
    3. ' )' → logprob: -14.50000286102295
    4. '`)' → logprob: -16.000003814697266
    5. '')' → logprob: -16.375003814697266
    6. ')`' → logprob: -17.000003814697266
    7. '）' → logprob: -18.500003814697266
    8. ')))' → logprob: -18.500003814697266
    9. '(' → logprob: -18.625003814697266
    10. '()' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 39.66%
Précision adaptée (1ère position): 39.66%
Précision (top 10): 65.52%
================================================================================
