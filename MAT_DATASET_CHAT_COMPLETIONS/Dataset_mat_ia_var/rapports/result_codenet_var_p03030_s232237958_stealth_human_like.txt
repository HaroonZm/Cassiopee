================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
results = []
# J'utilise une liste pour stocker les trucs
for i in range(N):
    s, p = input().split()
    results.append([s, int(p)])  # ajouter les paires (je garde ça comme des listes... c'est pratique)

copy_results = results[:]  # petit raccourci pour copier
copy_results.sort(key=lambda x: (x[0], -x[1]))  # tri chelou, mais ça marche normalement

# Affichage (ça imprime l'indice d'apparition dans la liste originale)
for elem in copy_results:
    idx = results.index(elem)  # bon, tant pis pour les doublons, c'est pas optimisé mais ça passe
    print(idx + 1)  # 1-based index, attention!
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16133710741996765
    2. ')' → logprob: -2.03633713722229
    3. '()' → logprob: -4.161336898803711
    4. '())' → logprob: -6.286336898803711
    5. '(
' → logprob: -8.286336898803711
    6. '```' → logprob: -8.786336898803711
    7. '")' → logprob: -9.661336898803711
    8. '))' → logprob: -9.786336898803711
    9. '(

' → logprob: -9.911336898803711
    10. '('' → logprob: -9.911336898803711

Token 5: 'results' (ID: 16570)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7158713936805725
    2. 'if' → logprob: -1.2158713340759277
    3. '\n' → logprob: -2.5908713340759277
    4. 's' → logprob: -3.7158713340759277
    5. 'i' → logprob: -3.8408713340759277
    6. 'x' → logprob: -4.215871334075928
    7. '```' → logprob: -4.340871334075928
    8. '`' → logprob: -4.715871334075928
    9. 'a' → logprob: -4.715871334075928
    10. ')' → logprob: -4.965871334075928

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06771694123744965
    2. '.' → logprob: -2.8177168369293213
    3. '[]' → logprob: -6.1927170753479
    4. '[:]' → logprob: -7.0677170753479
    5. '=' → logprob: -7.3177170753479
    6. '```' → logprob: -7.6927170753479
    7. ')' → logprob: -8.317716598510742
    8. ''' → logprob: -8.317716598510742
    9. '.append' → logprob: -8.442716598510742
    10. '(' → logprob: -8.692716598510742

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2075200229883194
    2. '[]' → logprob: -1.7075200080871582
    3. '[' → logprob: -5.457520008087158
    4. ' ' → logprob: -6.457520008087158
    5. ' [' → logprob: -8.457520484924316
    6. '"' → logprob: -11.207520484924316
    7. ' "' → logprob: -12.707520484924316
    8. '{}' → logprob: -12.957520484924316
    9. ' []
' → logprob: -12.957520484924316
    10. ''' → logprob: -13.082520484924316

Token 8: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002631238894537091
    2. ' for' → logprob: -9.125263214111328
    3. '```' → logprob: -9.125263214111328
    4. '`' → logprob: -10.750263214111328
    5. '\n' → logprob: -11.625263214111328
    6. '
' → logprob: -12.125263214111328
    7. '\' → logprob: -13.500263214111328
    8. 'f' → logprob: -13.750263214111328
    9. '``' → logprob: -13.875263214111328
    10. '' → logprob: -13.875263214111328

Token 9: ' J' (ID: 643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3940735459327698
    2. ' for' → logprob: -1.144073486328125
    3. 'f' → logprob: -5.644073486328125
    4. ' ' → logprob: -6.019073486328125
    5. ' f' → logprob: -8.019073486328125
    6. 'i' → logprob: -8.269073486328125
    7. ' ```' → logprob: -8.769073486328125
    8. 'F' → logprob: -9.894073486328125
    9. '```' → logprob: -9.894073486328125
    10. 'For' → logprob: -9.894073486328125

Token 10: ''util' (ID: 37761)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8862077593803406
    2. 'udge' → logprob: -1.3862078189849854
    3. 'o' → logprob: -2.0112078189849854
    4. 'u' → logprob: -2.2612078189849854
    5. ' for' → logprob: -3.3862078189849854
    6. 'oin' → logprob: -4.261207580566406
    7. '=' → logprob: -4.761207580566406
    8. 'ump' → logprob: -5.011207580566406
    9. 'a' → logprob: -5.011207580566406
    10. 'umps' → logprob: -5.261207580566406

Token 11: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.04316578060388565
    2. 'ser' → logprob: -3.418165683746338
    3. 't' → logprob: -6.168165683746338
    4. 'taire' → logprob: -6.418165683746338
    5. 'ter' → logprob: -6.668165683746338
    6. '```' → logprob: -7.168165683746338
    7. 'ilise' → logprob: -7.793165683746338
    8. 'sé' → logprob: -7.793165683746338
    9. 's' → logprob: -8.293166160583496
    10. '#' → logprob: -8.293166160583496

Token 12: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6955665946006775
    2. ' un' → logprob: -1.1955666542053223
    3. ' for' → logprob: -2.3205666542053223
    4. 'une' → logprob: -3.4455666542053223
    5. ' la' → logprob: -3.6955666542053223
    6. ' range' → logprob: -4.320566654205322
    7. 'range' → logprob: -4.820566654205322
    8. ' des' → logprob: -5.070566654205322
    9. ' a' → logprob: -5.570566654205322
    10. 'un' → logprob: -5.570566654205322

Token 13: ' liste' (ID: 31719)
  Prédit: ' boucle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.6772801280021667
    2. 'for' → logprob: -1.8022801876068115
    3. 'bou' → logprob: -1.8022801876068115
    4. 'range' → logprob: -3.4272801876068115
    5. ' for' → logprob: -3.4272801876068115
    6. 'b' → logprob: -3.9272801876068115
    7. ' bou' → logprob: -4.052279949188232
    8. '_' → logprob: -4.677279949188232
    9. 'f' → logprob: -4.802279949188232
    10. 'fonction' → logprob: -5.177279949188232

Token 14: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20586392283439636
    2. ' for' → logprob: -3.2058639526367188
    3. 'pour' → logprob: -3.3308639526367188
    4. '.append' → logprob: -3.7058639526367188
    5. 'to' → logprob: -4.455863952636719
    6. '_' → logprob: -4.455863952636719
    7. ')' → logprob: -4.580863952636719
    8. '[' → logprob: -4.705863952636719
    9. '.' → logprob: -4.705863952636719
    10. '[]' → logprob: -5.205863952636719

Token 15: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.033604562282562256
    2. 'stock' → logprob: -3.783604621887207
    3. 'st' → logprob: -5.033604621887207
    4. ' garder' → logprob: -7.283604621887207
    5. ' collect' → logprob: -7.658604621887207
    6. ' conserver' → logprob: -7.658604621887207
    7. ' suivre' → logprob: -7.783604621887207
    8. ' enregistr' → logprob: -7.908604621887207
    9. 's' → logprob: -8.158604621887207
    10. 'collect' → logprob: -8.783604621887207

Token 16: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005386164411902428
    2. 'e' → logprob: -7.6255388259887695
    3. 'é' → logprob: -10.62553882598877
    4. 'érer' → logprob: -11.87553882598877
    5. ''er' → logprob: -12.25053882598877
    6. 'erer' → logprob: -13.25053882598877
    7. '#' → logprob: -13.25053882598877
    8. '­er' → logprob: -13.25053882598877
    9. '[' → logprob: -13.50053882598877
    10. '```' → logprob: -14.25053882598877

Token 17: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.47150692343711853
    2. ' des' → logprob: -1.221506953239441
    3. 'les' → logprob: -3.5965068340301514
    4. 's' → logprob: -4.2215070724487305
    5. 'des' → logprob: -4.2215070724487305
    6. ' ' → logprob: -4.3465070724487305
    7. '<|end|>' → logprob: -5.9715070724487305
    8. 'results' → logprob: -6.2215070724487305
    9. '(' → logprob: -7.2215070724487305
    10. '[' → logprob: -7.4715070724487305

Token 18: ' trucs' (ID: 151878)
  Prédit: ' résultats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.13920274376869202
    2. ' nombres' → logprob: -2.764202833175659
    3. 'rés' → logprob: -4.13920259475708
    4. 'result' → logprob: -4.63920259475708
    5. ' scores' → logprob: -5.13920259475708
    6. ' résultat' → logprob: -5.13920259475708
    7. 'élé' → logprob: -5.51420259475708
    8. ' rés' → logprob: -5.63920259475708
    9. ' notes' → logprob: -6.13920259475708
    10. ' result' → logprob: -6.26420259475708

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12510816752910614
    2. ' for' → logprob: -2.250108242034912
    3. ' ' → logprob: -5.250108242034912
    4. 's' → logprob: -5.625108242034912
    5. '_' → logprob: -7.250108242034912
    6. ',' → logprob: -7.500108242034912
    7. '.' → logprob: -7.625108242034912
    8. '[' → logprob: -8.000107765197754
    9. 'pour' → logprob: -8.125107765197754
    10. '(' → logprob: -9.125107765197754

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14276330173015594
    2. ' for' → logprob: -2.017763376235962
    3. ' ' → logprob: -10.142763137817383
    4. 'pour' → logprob: -11.142763137817383
    5. '```' → logprob: -11.517763137817383
    6. ':' → logprob: -12.642763137817383
    7. '
' → logprob: -13.017763137817383
    8. '.' → logprob: -13.142763137817383
    9. ',' → logprob: -13.267763137817383
    10. '_' → logprob: -13.267763137817383

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019556308165192604
    2. ' i' → logprob: -4.144556522369385
    3. ' _' → logprob: -5.769556522369385
    4. '_' → logprob: -8.269556045532227
    5. '  ' → logprob: -9.519556045532227
    6. ' ‌' → logprob: -10.144556045532227
    7. ' I' → logprob: -12.144556045532227
    8. ' ' → logprob: -12.269556045532227
    9. 'i' → logprob: -13.019556045532227
    10. ' ▁' → logprob: -13.269556045532227

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027222177013754845
    2. 'in' → logprob: -3.652222156524658
    3. ' ' → logprob: -7.277222156524658
    4. '  ' → logprob: -9.152222633361816
    5. 'n' → logprob: -10.277222633361816
    6. ' i' → logprob: -10.777222633361816
    7. '```' → logprob: -11.652222633361816
    8. ',' → logprob: -11.777222633361816
    9. 'range' → logprob: -11.902222633361816
    10. '_' → logprob: -12.027222633361816

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029782773926854134
    2. 'range' → logprob: -3.529782772064209
    3. ' ' → logprob: -10.654783248901367
    4. '	range' → logprob: -12.029783248901367
    5. 'rang' → logprob: -14.529783248901367
    6. ' in' → logprob: -15.154783248901367
    7. ' xrange' → logprob: -15.154783248901367
    8. '_range' → logprob: -15.404783248901367
    9. '_' → logprob: -15.654783248901367
    10. '(range' → logprob: -15.779783248901367

Token 24: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009832235053181648
    2. '(N' → logprob: -4.634832382202148
    3. ' (' → logprob: -9.759832382202148
    4. '(i' → logprob: -11.634832382202148
    5. '(n' → logprob: -11.884832382202148
    6. '(
' → logprob: -13.759832382202148
    7. '(`' → logprob: -14.884832382202148
    8. '(len' → logprob: -15.134832382202148
    9. '(s' → logprob: -15.259832382202148
    10. '()' → logprob: -15.509832382202148

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00351027213037014
    2. ')' → logprob: -5.753510475158691
    3. '+' → logprob: -8.253510475158691
    4. ' ):' → logprob: -9.878510475158691
    5. ':' → logprob: -11.128510475158691
    6. '):
' → logprob: -12.628510475158691
    7. ' )' → logprob: -14.753510475158691
    8. ')):' → logprob: -15.003510475158691
    9. '+:' → logprob: -15.128510475158691
    10. ' +' → logprob: -15.503510475158691

Token 26: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03443334996700287
    2. '    ' → logprob: -3.534433364868164
    3. '     
' → logprob: -6.284433364868164
    4. '   ' → logprob: -7.159433364868164
    5. ' )' → logprob: -7.409433364868164
    6. '<|end|>' → logprob: -8.409433364868164
    7. ' ,' → logprob: -8.659433364868164
    8. '  ' → logprob: -8.909433364868164
    9. ')' → logprob: -9.034433364868164
    10. ' (' → logprob: -9.159433364868164

Token 27: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1644095927476883
    2. ' data' → logprob: -2.789409637451172
    3. ' result' → logprob: -3.789409637451172
    4. ' input' → logprob: -4.539409637451172
    5. ' s' → logprob: -5.039409637451172
    6. ' word' → logprob: -5.289409637451172
    7. 'line' → logprob: -5.414409637451172
    8. ' query' → logprob: -5.414409637451172
    9. ' user' → logprob: -5.539409637451172
    10. ' ' → logprob: -5.539409637451172

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05138862878084183
    2. '=' → logprob: -3.426388740539551
    3. ' ' → logprob: -4.676388740539551
    4. 'tr' → logprob: -5.051388740539551
    5. '=input' → logprob: -7.301388740539551
    6. '_' → logprob: -7.926388740539551
    7. 't' → logprob: -8.55138874053955
    8. 'tring' → logprob: -8.92638874053955
    9. 's' → logprob: -9.05138874053955
    10. '   ' → logprob: -9.55138874053955

Token 29: ' p' (ID: 275)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31513044238090515
    2. ' t' → logprob: -1.6901304721832275
    3. ' ' → logprob: -3.5651304721832275
    4. 'a' → logprob: -4.440130233764648
    5. '_' → logprob: -4.815130233764648
    6. ' =' → logprob: -5.315130233764648
    7. 'n' → logprob: -5.690130233764648
    8. 'p' → logprob: -5.690130233764648
    9. 'm' → logprob: -5.940130233764648
    10. 'b' → logprob: -6.065130233764648

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.632910430431366
    2. '=' → logprob: -0.757910430431366
    3. ',' → logprob: -9.00791072845459
    4. ')' → logprob: -9.75791072845459
    5. '=input' → logprob: -11.00791072845459
    6. 'iece' → logprob: -11.25791072845459
    7. 'ieces' → logprob: -11.63291072845459
    8. 's' → logprob: -11.75791072845459
    9. 'rocess' → logprob: -11.88291072845459
    10. ' ' → logprob: -12.00791072845459

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06711003929376602
    2. 'input' → logprob: -2.817110061645508
    3. ' map' → logprob: -5.317110061645508
    4. 'map' → logprob: -8.817110061645508
    5. ' ' → logprob: -9.817110061645508
    6. ' ' → logprob: -12.567110061645508
    7. '=input' → logprob: -12.692110061645508
    8. '(input' → logprob: -13.067110061645508
    9. '	input' → logprob: -13.067110061645508
    10. '[input' → logprob: -13.317110061645508

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011960632400587201
    2. '()' → logprob: -6.751195907592773
    3. '(' → logprob: -11.501195907592773
    4. '('' → logprob: -11.626195907592773
    5. '("' → logprob: -12.126195907592773
    6. '("("' → logprob: -14.751195907592773
    7. ' ().' → logprob: -14.876195907592773
    8. '("").' → logprob: -15.251195907592773
    9. '('').' → logprob: -16.001195907592773
    10. '()
' → logprob: -16.501195907592773

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011307948443572968
    2. 'strip' → logprob: -9.250113487243652
    3. 'rstrip' → logprob: -11.500113487243652
    4. ' split' → logprob: -12.500113487243652
    5. 'rs' → logprob: -13.000113487243652
    6. 'spl' → logprob: -14.500113487243652
    7. '(split' → logprob: -16.625112533569336
    8. ' ' → logprob: -16.625112533569336
    9. '```' → logprob: -16.625112533569336
    10. '.split' → logprob: -17.000112533569336

Token 34: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06155683845281601
    2. '(' → logprob: -2.936556816101074
    3. '('' → logprob: -5.061556816101074
    4. '("("' → logprob: -9.186556816101074
    5. '(',' → logprob: -9.186556816101074
    6. ')' → logprob: -10.936556816101074
    7. '("' → logprob: -11.061556816101074
    8. '())' → logprob: -11.186556816101074
    9. '(),' → logprob: -11.436556816101074
    10. '()]' → logprob: -11.811556816101074

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0448212623596191
    2. '<|end|>' → logprob: -2.294821262359619
    3. '    
' → logprob: -2.419821262359619
    4. '
' → logprob: -2.419821262359619
    5. ' ' → logprob: -2.419821262359619
    6. ' 
' → logprob: -2.544821262359619
    7. ' p' → logprob: -3.044821262359619
    8. '  
' → logprob: -3.544821262359619
    9. ',' → logprob: -3.794821262359619
    10. 'p' → logprob: -3.919821262359619

Token 36: ' results' (ID: 4376)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4067639112472534
    2. 'p' → logprob: -2.156764030456543
    3. ' ' → logprob: -2.656764030456543
    4. ' =' → logprob: -3.156764030456543
    5. ',' → logprob: -3.281764030456543
    6. '=' → logprob: -3.656764030456543
    7. ',p' → logprob: -4.656764030456543
    8. 's' → logprob: -4.781764030456543
    9. ' ,' → logprob: -4.906764030456543
    10. ')' → logprob: -6.031764030456543

Token 37: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003622404532507062
    2. '.' → logprob: -5.628622531890869
    3. '.extend' → logprob: -11.628622055053711
    4. '.setdefault' → logprob: -12.128622055053711
    5. '.add' → logprob: -13.503622055053711
    6. '.app' → logprob: -13.628622055053711
    7. '.ap' → logprob: -14.003622055053711
    8. '.push' → logprob: -14.003622055053711
    9. 'append' → logprob: -14.253622055053711
    10. ' .' → logprob: -14.378622055053711

Token 38: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00598022760823369
    2. '(' → logprob: -5.130980014801025
    3. '(('' → logprob: -11.005980491638184
    4. '(int' → logprob: -11.380980491638184
    5. '(p' → logprob: -11.505980491638184
    6. '(s' → logprob: -12.505980491638184
    7. '([' → logprob: -12.755980491638184
    8. '(("' → logprob: -13.130980491638184
    9. '(tuple' → logprob: -13.255980491638184
    10. '(((' → logprob: -14.130980491638184

Token 39: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16228710114955902
    2. 'p' → logprob: -2.6622869968414307
    3. 'int' → logprob: -2.7872869968414307
    4. ' s' → logprob: -4.53728723526001
    5. ' int' → logprob: -5.41228723526001
    6. ' p' → logprob: -6.03728723526001
    7. '   ' → logprob: -8.287286758422852
    8. 'i' → logprob: -9.412286758422852
    9. '(int' → logprob: -9.912286758422852
    10. '-s' → logprob: -9.974786758422852

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004841507878154516
    2. ',p' → logprob: -5.754841327667236
    3. ',int' → logprob: -6.504841327667236
    4. ' ,' → logprob: -8.879841804504395
    5. ',float' → logprob: -10.754841804504395
    6. 'int' → logprob: -13.629841804504395
    7. ',n' → logprob: -14.004841804504395
    8. ',
' → logprob: -14.254841804504395
    9. ',i' → logprob: -14.754841804504395
    10. ',s' → logprob: -15.004841804504395

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1276591569185257
    2. 'int' → logprob: -2.1276590824127197
    3. ' p' → logprob: -7.752659320831299
    4. ' float' → logprob: -8.37765884399414
    5. 'float' → logprob: -10.75265884399414
    6. 'p' → logprob: -11.25265884399414
    7. ' in' → logprob: -11.75265884399414
    8. '[int' → logprob: -11.87765884399414
    9. '(int' → logprob: -12.75265884399414
    10. ' ' → logprob: -12.75265884399414

Token 42: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03804860636591911
    2. '(' → logprob: -3.288048505783081
    3. '(
' → logprob: -13.41304874420166
    4. ' (' → logprob: -13.41304874420166
    5. 'p' → logprob: -13.78804874420166
    6. '('' → logprob: -14.28804874420166
    7. ')' → logprob: -14.28804874420166
    8. '(`' → logprob: -14.91304874420166
    9. ' p' → logprob: -15.03804874420166
    10. '()' → logprob: -15.53804874420166

Token 43: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.009649728424847126
    2. ')' → logprob: -4.759649753570557
    3. ')]' → logprob: -7.259649753570557
    4. '),' → logprob: -8.759649276733398
    5. ')])
' → logprob: -9.634649276733398
    6. ' )' → logprob: -10.134649276733398
    7. '])' → logprob: -10.134649276733398
    8. '   ' → logprob: -11.759649276733398
    9. ')])

' → logprob: -12.009649276733398
    10. '))' → logprob: -12.259649276733398

Token 44: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11432269960641861
    2. 'results' → logprob: -2.3643226623535156
    3. '```' → logprob: -5.739322662353516
    4. '\n' → logprob: -5.989322662353516
    5. '
' → logprob: -6.364322662353516
    6. '  
' → logprob: -6.364322662353516
    7. '.sort' → logprob: -6.864322662353516
    8. ' 
' → logprob: -7.239322662353516
    9. 'sorted' → logprob: -7.614322662353516
    10. '    
' → logprob: -7.989322662353516

Token 45: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02792147360742092
    2. 'results' → logprob: -4.527921676635742
    3. ',' → logprob: -5.527921676635742
    4. '  
' → logprob: -6.152921676635742
    5. ',
' → logprob: -6.402921676635742
    6. ')' → logprob: -6.527921676635742
    7. 'sorted' → logprob: -6.527921676635742
    8. '.sort' → logprob: -6.652921676635742
    9. '<|end|>' → logprob: -6.777921676635742
    10. '    
' → logprob: -7.402921676635742

Token 46: ' ajouter' (ID: 78457)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6587002277374268
    2. '<|end|>' → logprob: -0.9087002277374268
    3. ')' → logprob: -3.0337002277374268
    4. '<|end|>' → logprob: -4.658699989318848
    5. '.sort' → logprob: -5.408699989318848
    6. ' 
' → logprob: -5.533699989318848
    7. ' 

' → logprob: -6.283699989318848
    8. ']' → logprob: -6.658699989318848
    9. '
' → logprob: -6.908699989318848
    10. ',' → logprob: -6.908699989318848

Token 47: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2935698628425598
    2. '<|end|>' → logprob: -2.293569803237915
    3. '(' → logprob: -2.543569803237915
    4. ',' → logprob: -3.918569803237915
    5. ' (' → logprob: -4.168570041656494
    6. ')' → logprob: -4.668570041656494
    7. 's' → logprob: -4.918570041656494
    8. '<|end|>' → logprob: -5.793570041656494
    9. ' 
' → logprob: -6.043570041656494
    10. 'results' → logprob: -6.293570041656494

Token 48: ' p' (ID: 275)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7116674184799194
    2. ' éléments' → logprob: -1.4616674184799194
    3. ' résultats' → logprob: -2.586667537689209
    4. ' scores' → logprob: -2.836667537689209
    5. ' points' → logprob: -3.336667537689209
    6. ' tuples' → logprob: -3.586667537689209
    7. ' espaces' → logprob: -3.961667537689209
    8. ' données' → logprob: -4.586667537689209
    9. 's' → logprob: -4.961667537689209
    10. 'scores' → logprob: -5.211667537689209

Token 49: 'aires' (ID: 8507)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.06638821214437485
    2. ',' → logprob: -4.191388130187988
    3. 'ar' → logprob: -4.566388130187988
    4. 'oint' → logprob: -4.941388130187988
    5. 'er' → logprob: -5.191388130187988
    6. ')' → logprob: -5.191388130187988
    7. 'rof' → logprob: -5.441388130187988
    8. 's' → logprob: -6.316388130187988
    9. '[' → logprob: -6.691388130187988
    10. 'a' → logprob: -6.816388130187988

Token 50: ' (' (ID: 350)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.15147611498832703
    2. '
' → logprob: -2.7764761447906494
    3. '.sort' → logprob: -3.5264761447906494
    4. ',' → logprob: -4.15147590637207
    5. '.' → logprob: -5.27647590637207
    6. ')' → logprob: -5.52647590637207
    7. '<|end|>' → logprob: -5.52647590637207
    8. '  
' → logprob: -5.77647590637207
    9. ',
' → logprob: -6.02647590637207
    10. '.results' → logprob: -6.27647590637207

Token 51: 'je' (ID: 1587)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2869139015674591
    2. ' s' → logprob: -1.9119138717651367
    3. 'score' → logprob: -3.4119138717651367
    4. ' ,' → logprob: -4.661913871765137
    5. ',' → logprob: -4.786913871765137
    6. ''s' → logprob: -4.911913871765137
    7. 'string' → logprob: -5.286913871765137
    8. ' score' → logprob: -5.286913871765137
    9. ')' → logprob: -5.411913871765137
    10. 'p' → logprob: -5.411913871765137

Token 52: ' garde' (ID: 65309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.91477370262146
    2. ')' → logprob: -2.03977370262146
    3. ' continue' → logprob: -2.03977370262146
    4. 'supp' → logprob: -2.78977370262146
    5. ' suppose' → logprob: -2.78977370262146
    6. 'an' → logprob: -2.91477370262146
    7. ' ' → logprob: -3.16477370262146
    8. ' pense' → logprob: -3.53977370262146
    9. ' ne' → logprob: -3.78977370262146
    10. ' les' → logprob: -3.78977370262146

Token 53: ' ça' (ID: 13590)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6783390641212463
    2. 's' → logprob: -2.1783390045166016
    3. 'l' → logprob: -2.6783390045166016
    4. 'les' → logprob: -2.8033390045166016
    5. ')' → logprob: -3.0533390045166016
    6. ' le' → logprob: -3.0533390045166016
    7. 'la' → logprob: -3.4283390045166016
    8. ' l' → logprob: -3.8033390045166016
    9. ' la' → logprob: -4.178339004516602
    10. ' les' → logprob: -4.178339004516602

Token 54: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07443707436323166
    2. ',' → logprob: -3.574437141418457
    3. ' pour' → logprob: -4.074437141418457
    4. 'pour' → logprob: -4.699437141418457
    5. ' )' → logprob: -5.324437141418457
    6. 'dans' → logprob: -6.699437141418457
    7. 'comme' → logprob: -6.824437141418457
    8. ' parce' → logprob: -6.949437141418457
    9. ' en' → logprob: -7.074437141418457
    10. ' ' → logprob: -7.199437141418457

Token 55: ' des' (ID: 731)
  Prédit: ' ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.8311958312988281
    2. ' is' → logprob: -2.081195831298828
    3. 'c' → logprob: -2.581195831298828
    4. 'is' → logprob: -2.956195831298828
    5. 'ça' → logprob: -3.206195831298828
    6. 's' → logprob: -3.206195831298828
    7. 'une' → logprob: -3.331195831298828
    8. ' une' → logprob: -4.081195831298828
    9. ' des' → logprob: -4.331195831298828
    10. 'strings' → logprob: -4.331195831298828

Token 56: ' listes' (ID: 179198)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -1.1110038757324219
    2. 'strings' → logprob: -1.2360038757324219
    3. ' strings' → logprob: -1.9860038757324219
    4. 'string' → logprob: -2.736003875732422
    5. ' chaînes' → logprob: -2.861003875732422
    6. 'str' → logprob: -3.111003875732422
    7. ' string' → logprob: -3.611003875732422
    8. 's' → logprob: -4.486003875732422
    9. 'tu' → logprob: -4.986003875732422
    10. 'cha' → logprob: -5.486003875732422

Token 57: '...' (ID: 1008)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002735686022788286
    2. ',' → logprob: -6.627735614776611
    3. ' )' → logprob: -7.502735614776611
    4. '])' → logprob: -8.12773609161377
    5. ']' → logprob: -8.87773609161377
    6. '[' → logprob: -9.75273609161377
    7. ')
' → logprob: -9.75273609161377
    8. '   ' → logprob: -10.25273609161377
    9. ')]' → logprob: -10.37773609161377
    10. 's' → logprob: -10.50273609161377

Token 58: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0084129199385643
    2. ',' → logprob: -5.008412837982178
    3. ' )' → logprob: -6.758412837982178
    4. '[' → logprob: -9.133413314819336
    5. '   ' → logprob: -9.758413314819336
    6. ' pour' → logprob: -9.883413314819336
    7. '<|end|>' → logprob: -9.883413314819336
    8. ')]' → logprob: -10.383413314819336
    9. '...' → logprob: -10.633413314819336
    10. ' ,' → logprob: -10.633413314819336

Token 59: ''est' (ID: 6616)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.5837717056274414
    2. 'om' → logprob: -1.9587717056274414
    3. 'omm' → logprob: -2.4587717056274414
    4. '')' → logprob: -3.4587717056274414
    5. ''' → logprob: -3.7087717056274414
    6. 'e' → logprob: -3.9587717056274414
    7. 'ont' → logprob: -4.083771705627441
    8. '#' → logprob: -4.208771705627441
    9. ''est' → logprob: -4.208771705627441
    10. 'o' → logprob: -4.583771705627441

Token 60: ' pratique' (ID: 42780)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3738238215446472
    2. ' pratique' → logprob: -2.248823881149292
    3. 'comme' → logprob: -2.873823881149292
    4. 'pr' → logprob: -3.873823881149292
    5. 'fac' → logprob: -3.998823881149292
    6. ' plus' → logprob: -4.123823642730713
    7. 'possible' → logprob: -4.373823642730713
    8. 'moins' → logprob: -4.998823642730713
    9. 'une' → logprob: -5.123823642730713
    10. 'bien' → logprob: -5.123823642730713

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005865143029950559
    2. ',' → logprob: -7.75058650970459
    3. ' )' → logprob: -9.12558650970459
    4. ')
' → logprob: -10.75058650970459
    5. '   ' → logprob: -12.37558650970459
    6. '])' → logprob: -13.12558650970459
    7. ')n' → logprob: -13.12558650970459
    8. ')s' → logprob: -13.25058650970459
    9. ',)' → logprob: -13.25058650970459
    10. 's' → logprob: -13.37558650970459

Token 62: 'copy' (ID: 14730)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.006106658838689327
    2. '
' → logprob: -5.131106853485107
    3. ' results' → logprob: -9.38110637664795
    4. '

' → logprob: -10.25610637664795
    5. 'sorted' → logprob: -10.75610637664795
    6. '```' → logprob: -11.38110637664795
    7. '(results' → logprob: -12.25610637664795
    8. '  
' → logprob: -12.38110637664795
    9. '    
' → logprob: -12.75610637664795
    10. '
' → logprob: -13.00610637664795

Token 63: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.96725994348526
    2. '_' → logprob: -1.2172598838806152
    3. 's' → logprob: -1.4672598838806152
    4. 'results' → logprob: -3.7172598838806152
    5. ' =' → logprob: -4.092259883880615
    6. '=' → logprob: -4.467259883880615
    7. 'r' → logprob: -4.717259883880615
    8. 'd' → logprob: -4.717259883880615
    9. '_of' → logprob: -5.092259883880615
    10. 'ed' → logprob: -5.092259883880615

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05669967085123062
    2. '=' → logprob: -2.931699752807617
    3. '[:]' → logprob: -7.056699752807617
    4. 's' → logprob: -7.806699752807617
    5. '_' → logprob: -8.181699752807617
    6. '.' → logprob: -8.681699752807617
    7. '(' → logprob: -10.681699752807617
    8. ')' → logprob: -10.931699752807617
    9. '.copy' → logprob: -11.306699752807617
    10. '[' → logprob: -11.431699752807617

Token 65: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.693165123462677
    2. 'results' → logprob: -0.693165123462677
    3. '[' → logprob: -12.193164825439453
    4. '(results' → logprob: -12.318164825439453
    5. 'list' → logprob: -12.943164825439453
    6. ' [' → logprob: -13.193164825439453
    7. ' list' → logprob: -13.318164825439453
    8. '	results' → logprob: -13.693164825439453
    9. 'result' → logprob: -14.443164825439453
    10. ' ' → logprob: -15.568164825439453

Token 66: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.5880312323570251
    2. '.copy' → logprob: -0.8380312323570251
    3. '.' → logprob: -4.71303129196167
    4. '[:' → logprob: -5.96303129196167
    5. '[' → logprob: -8.338030815124512
    6. '.deepcopy' → logprob: -8.838030815124512
    7. '.sort' → logprob: -9.838030815124512
    8. '<|end|>' → logprob: -11.838030815124512
    9. '[::-' → logprob: -12.088030815124512
    10. 'copy' → logprob: -12.713030815124512

Token 67: ' ' (ID: 220)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.08380315452814102
    2. 'results' → logprob: -2.583803176879883
    3. '
' → logprob: -5.958803176879883
    4. 'sorted' → logprob: -6.458803176879883
    5. '.copy' → logprob: -8.208803176879883
    6. ' copy' → logprob: -8.583803176879883
    7. 'sort' → logprob: -9.333803176879883
    8. 'for' → logprob: -10.208803176879883
    9. '<|end|>' → logprob: -10.333803176879883
    10. '.sort' → logprob: -10.333803176879883

Token 68: ' #' (ID: 1069)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.4563562870025635
    2. 'results' → logprob: -1.0813562870025635
    3. '
' → logprob: -3.9563562870025635
    4. 'sorted' → logprob: -5.081356048583984
    5. '

' → logprob: -7.706356048583984
    6. 'sort' → logprob: -7.831356048583984
    7. '
' → logprob: -8.331356048583984
    8. '.copy' → logprob: -8.581356048583984
    9. ' copy' → logprob: -8.581356048583984
    10. '#' → logprob: -8.956356048583984

Token 69: ' petit' (ID: 20577)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5195110440254211
    2. ' sorted' → logprob: -1.7695109844207764
    3. '#' → logprob: -2.8945109844207764
    4. 'results' → logprob: -3.3945109844207764
    5. 'tr' → logprob: -3.5195109844207764
    6. 'cop' → logprob: -3.7695109844207764
    7. ' Trier' → logprob: -3.8945109844207764
    8. 'sort' → logprob: -4.5195112228393555
    9. 'copy' → logprob: -4.7695112228393555
    10. ' tri' → logprob: -4.8945112228393555

Token 70: ' racc' (ID: 146476)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.8366824388504028
    2. 'é' → logprob: -1.8366824388504028
    3. ' rappel' → logprob: -3.2116823196411133
    4. ' truc' → logprob: -3.4616823196411133
    5. 'aj' → logprob: -3.5866823196411133
    6. 'tr' → logprob: -3.5866823196411133
    7. ' changement' → logprob: -3.5866823196411133
    8. 'cop' → logprob: -3.7116823196411133
    9. 's' → logprob: -3.7116823196411133
    10. 'd' → logprob: -3.7116823196411133

Token 71: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.24284537136554718
    2. 'ur' → logprob: -2.367845296859741
    3. 'urt' → logprob: -2.617845296859741
    4. 'ourt' → logprob: -4.11784553527832
    5. 'urs' → logprob: -4.24284553527832
    6. 'ort' → logprob: -4.24284553527832
    7. ' our' → logprob: -7.86784553527832
    8. 'o' → logprob: -7.99284553527832
    9. 'op' → logprob: -8.11784553527832
    10. ' ur' → logprob: -8.24284553527832

Token 72: 'ci' (ID: 2114)
  Prédit: 'ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.0009550517424941063
    2. 'cit' → logprob: -8.250954627990723
    3. 'çi' → logprob: -8.625954627990723
    4. 'i' → logprob: -9.000954627990723
    5. 'ic' → logprob: -9.500954627990723
    6. 'cis' → logprob: -9.625954627990723
    7. ' ci' → logprob: -10.375954627990723
    8. '-ci' → logprob: -10.500954627990723
    9. 'eci' → logprob: -10.625954627990723
    10. 'é' → logprob: -10.875954627990723

Token 73: ' pour' (ID: 1930)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.6422491073608398
    2. 'results' → logprob: -0.7672491073608398
    3. 'sorted' → logprob: -5.26724910736084
    4. '
' → logprob: -5.76724910736084
    5. ' copy' → logprob: -7.76724910736084
    6. 'for' → logprob: -8.51724910736084
    7. '

' → logprob: -8.51724910736084
    8. 'sort' → logprob: -9.39224910736084
    9. '.copy' → logprob: -9.64224910736084
    10. '#' → logprob: -9.76724910736084

Token 74: ' copier' (ID: 116229)
  Prédit: 'cop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cop' → logprob: -0.47650256752967834
    2. ' copier' → logprob: -1.601502537727356
    3. 'faire' → logprob: -2.7265026569366455
    4. ' faire' → logprob: -2.8515026569366455
    5. 'du' → logprob: -4.601502418518066
    6. ' créer' → logprob: -4.601502418518066
    7. 'cl' → logprob: -4.976502418518066
    8. 'une' → logprob: -5.601502418518066
    9. ' du' → logprob: -5.976502418518066
    10. ' une' → logprob: -6.101502418518066

Token 75: '
' (ID: 198)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.2848699688911438
    2. 'results' → logprob: -1.409869909286499
    3. 'sorted' → logprob: -6.409870147705078
    4. ' copy' → logprob: -7.409870147705078
    5. '
' → logprob: -7.534870147705078
    6. '#' → logprob: -8.034870147705078
    7. 'for' → logprob: -8.784870147705078
    8. 'sort' → logprob: -8.784870147705078
    9. ' results' → logprob: -9.909870147705078
    10. '.copy' → logprob: -10.159870147705078

Token 76: 'copy' (ID: 14730)
  Prédit: 'copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.5798496007919312
    2. 'results' → logprob: -0.8298496007919312
    3. 'sorted' → logprob: -6.204849720001221
    4. '
' → logprob: -6.704849720001221
    5. 'for' → logprob: -8.704849243164062
    6. ' copy' → logprob: -9.079849243164062
    7. '#' → logprob: -9.329849243164062
    8. 'sort' → logprob: -9.704849243164062
    9. '.copy' → logprob: -10.329849243164062
    10. '

' → logprob: -10.454849243164062

Token 77: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.000204851632588543
    2. '_' → logprob: -8.625205039978027
    3. ' _' → logprob: -11.750205039978027
    4. '_s' → logprob: -12.250205039978027
    5. '_res' → logprob: -12.250205039978027
    6. '__' → logprob: -13.250205039978027
    7. '_result' → logprob: -13.375205039978027
    8. '_re' → logprob: -14.000205039978027
    9. '_r' → logprob: -14.250205039978027
    10. 'results' → logprob: -14.625205039978027

Token 78: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.02832898125052452
    2. '.' → logprob: -3.6533288955688477
    3. '<|end|>' → logprob: -6.403328895568848
    4. '[' → logprob: -9.028328895568848
    5. 'sort' → logprob: -9.528328895568848
    6. '[:]' → logprob: -9.653328895568848
    7. '<|end|>' → logprob: -10.778328895568848
    8. ')' → logprob: -10.903328895568848
    9. '.sorted' → logprob: -11.403328895568848
    10. '_sorted' → logprob: -11.778328895568848

Token 79: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00224113161675632
    2. '(' → logprob: -6.377241134643555
    3. '(reverse' → logprob: -7.877241134643555
    4. '()' → logprob: -8.752241134643555
    5. 'key' → logprob: -14.502241134643555
    6. '(lambda' → logprob: -15.002241134643555
    7. '(
' → logprob: -15.627241134643555
    8. ' (' → logprob: -16.377241134643555
    9. '(

' → logprob: -16.627241134643555
    10. 'reverse' → logprob: -17.127241134643555

Token 80: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.02975129522383213
    2. '=' → logprob: -3.5297513008117676
    3. '=

' → logprob: -15.65475082397461
    4. ' =' → logprob: -15.90475082397461
    5. '=}' → logprob: -15.90475082397461
    6. '=len' → logprob: -16.15475082397461
    7. '=_' → logprob: -16.77975082397461
    8. 'lambda' → logprob: -16.77975082397461
    9. '=item' → logprob: -17.65475082397461
    10. '＝' → logprob: -17.77975082397461

Token 81: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0430060550570488
    2. 'x' → logprob: -3.16800594329834
    3. '<|end|>' → logprob: -12.66800594329834
    4. ' ' → logprob: -12.91800594329834
    5. ' item' → logprob: -14.91800594329834
    6. 'item' → logprob: -15.54300594329834
    7. 'e' → logprob: -15.79300594329834
    8. ' e' → logprob: -15.79300594329834
    9. '	x' → logprob: -16.043006896972656
    10. '   ' → logprob: -16.418006896972656

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001922802533954382
    2. ' :' → logprob: -6.376922607421875
    3. ':x' → logprob: -8.501922607421875
    4. '[' → logprob: -11.751922607421875
    5. ' x' → logprob: -11.876922607421875
    6. 'x' → logprob: -14.126922607421875
    7. ' ' → logprob: -14.626922607421875
    8. ':int' → logprob: -15.501922607421875
    9. ':
' → logprob: -16.126922607421875
    10. ':item' → logprob: -16.126922607421875

Token 83: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14679741859436035
    2. ' x' → logprob: -2.0217974185943604
    3. ' -' → logprob: -6.396797180175781
    4. '-' → logprob: -6.396797180175781
    5. '-x' → logprob: -7.396797180175781
    6. '(-' → logprob: -9.896797180175781
    7. ' (-' → logprob: -10.271797180175781
    8. 'int' → logprob: -10.396797180175781
    9. ' (' → logprob: -11.146797180175781
    10. '(x' → logprob: -11.646797180175781

Token 84: 'x' (ID: 87)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.3919465243816376
    2. 'x' → logprob: -1.39194655418396
    3. ' -' → logprob: -3.26694655418396
    4. '-' → logprob: -3.39194655418396
    5. ' x' → logprob: -6.016946315765381
    6. '-p' → logprob: -8.516946792602539
    7. '-int' → logprob: -8.516946792602539
    8. '(-' → logprob: -8.641946792602539
    9. '-s' → logprob: -8.641946792602539
    10. '   ' → logprob: -9.516946792602539

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014978687977418303
    2. ' [' → logprob: -9.250149726867676
    3. '[-' → logprob: -11.250149726867676
    4. ')' → logprob: -11.375149726867676
    5. ':' → logprob: -12.500149726867676
    6. '-' → logprob: -12.625149726867676
    7. '][' → logprob: -12.750149726867676
    8. '1' → logprob: -12.750149726867676
    9. '[
' → logprob: -13.125149726867676
    10. ' ' → logprob: -13.125149726867676

Token 86: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0489417128264904
    2. '0' → logprob: -3.0489416122436523
    3. ' ' → logprob: -8.173941612243652
    4. '-' → logprob: -10.798941612243652
    5. 'p' → logprob: -11.861441612243652
    6. '
' → logprob: -11.986441612243652
    7. '   ' → logprob: -12.423941612243652
    8. '[' → logprob: -12.548941612243652
    9. '

' → logprob: -12.673941612243652
    10. 's' → logprob: -13.048941612243652

Token 87: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008147139102220535
    2. '))' → logprob: -5.133147239685059
    3. '[' → logprob: -6.633147239685059
    4. ')' → logprob: -8.133147239685059
    5. ']))' → logprob: -8.633147239685059
    6. '.lower' → logprob: -8.633147239685059
    7. ',)' → logprob: -10.133147239685059
    8. ',p' → logprob: -10.133147239685059
    9. ' ,' → logprob: -10.258147239685059
    10. '),' → logprob: -10.758147239685059

Token 88: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7510366439819336
    2. ' x' → logprob: -1.0010366439819336
    3. 'x' → logprob: -2.3760366439819336
    4. '-' → logprob: -2.7510366439819336
    5. '-x' → logprob: -5.751036643981934
    6. ' ' → logprob: -7.751036643981934
    7. '1' → logprob: -10.126036643981934
    8. '100' → logprob: -10.688536643981934
    9. ' int' → logprob: -10.876036643981934
    10. 'int' → logprob: -11.063536643981934

Token 89: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1756367712223437e-05
    2. ' x' → logprob: -11.500011444091797
    3. 'int' → logprob: -13.375011444091797
    4. '	x' → logprob: -18.375011444091797
    5. ')x' → logprob: -19.250011444091797
    6. '   ' → logprob: -19.375011444091797
    7. ' int' → logprob: -20.250011444091797
    8. '1' → logprob: -20.375011444091797
    9. '(x' → logprob: -20.750011444091797
    10. ' ' → logprob: -21.125011444091797

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.214019307051785e-05
    2. '1' → logprob: -10.375032424926758
    3. ' [' → logprob: -14.500032424926758
    4. '[
' → logprob: -15.625032424926758
    5. ' ' → logprob: -16.875032424926758
    6. ')' → logprob: -17.250032424926758
    7. '][' → logprob: -17.625032424926758
    8. 'x' → logprob: -17.750032424926758
    9. '```' → logprob: -17.750032424926758
    10. ']' → logprob: -18.000032424926758

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '
' → logprob: -14.000001907348633
    3. ' ' → logprob: -15.187501907348633
    4. '

' → logprob: -16.000001907348633
    5. '-' → logprob: -16.375001907348633
    6. '[' → logprob: -17.125001907348633
    7. '
' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.312501907348633
    9. '4' → logprob: -17.750001907348633
    10. '```' → logprob: -17.750001907348633

Token 92: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01440019067376852
    2. ')' → logprob: -4.264400005340576
    3. ')))' → logprob: -8.764400482177734
    4. '),' → logprob: -10.014400482177734
    5. ' ))' → logprob: -10.639400482177734
    6. ' )' → logprob: -12.764400482177734
    7. '])' → logprob: -13.264400482177734
    8. ']))' → logprob: -13.264400482177734
    9. ')]' → logprob: -13.639400482177734
    10. ')])' → logprob: -13.889400482177734

Token 93: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6413095593452454
    2. '
' → logprob: -1.3913094997406006
    3. ')' → logprob: -1.7663094997406006
    4. 'for' → logprob: -4.51630973815918
    5. ')
' → logprob: -4.76630973815918
    6. 'results' → logprob: -4.76630973815918
    7. '#' → logprob: -4.76630973815918
    8. '' → logprob: -5.01630973815918
    9. '  
' → logprob: -6.01630973815918
    10. '<|end|>' → logprob: -6.39130973815918

Token 94: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22956952452659607
    2. ')' → logprob: -2.104569435119629
    3. 'print' → logprob: -3.104569435119629
    4. ')
' → logprob: -3.604569435119629
    5. '' → logprob: -5.854569435119629
    6. '  
' → logprob: -5.979569435119629
    7. '
' → logprob: -5.979569435119629
    8. ' 
' → logprob: -7.229569435119629
    9. '#' → logprob: -7.479569435119629
    10. '\n' → logprob: -7.729569435119629

Token 95: ' tri' (ID: 12665)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22019287943840027
    2. ')' → logprob: -1.7201929092407227
    3. 'results' → logprob: -4.970192909240723
    4. '<|end|>' → logprob: -5.720192909240723
    5. '#' → logprob: -6.095192909240723
    6. 'for' → logprob: -6.470192909240723
    7. ' print' → logprob: -6.845192909240723
    8. '
' → logprob: -7.595192909240723
    9. ' for' → logprob: -7.720192909240723
    10. '```' → logprob: -7.970192909240723

Token 96: ' che' (ID: 1378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: 'lou' (ID: 133128)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.6485244631767273
    2. 'val' → logprob: -1.273524522781372
    3. 'v' → logprob: -2.898524522781372
    4. 'vron' → logprob: -3.398524522781372
    5. 'z' → logprob: -3.648524522781372
    6. 'r' → logprob: -4.148524284362793
    7. 'ap' → logprob: -4.273524284362793
    8. 'vre' → logprob: -4.648524284362793
    9. 'vé' → logprob: -5.273524284362793
    10. 'vr' → logprob: -5.273524284362793

Token 98: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19998517632484436
    2. ')' → logprob: -2.8249852657318115
    3. 'print' → logprob: -2.8249852657318115
    4. '<|end|>' → logprob: -3.4499852657318115
    5. '#' → logprob: -4.574985027313232
    6. '  
' → logprob: -4.949985027313232
    7. ')
' → logprob: -5.824985027313232
    8. '' → logprob: -6.074985027313232
    9. 'results' → logprob: -6.699985027313232
    10. '
' → logprob: -6.949985027313232

Token 99: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009121703915297985
    2. 'print' → logprob: -6.009121894836426
    3. ' )' → logprob: -6.509121894836426
    4. ' but' → logprob: -6.759121894836426
    5. 'key' → logprob: -7.259121894836426
    6. ')
' → logprob: -7.509121894836426
    7. ' key' → logprob: -7.634121894836426
    8. ' mais' → logprob: -8.009121894836426
    9. 'reverse' → logprob: -8.009121894836426
    10. 'mais' → logprob: -8.509121894836426

Token 100: ' ça' (ID: 13590)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.1892318725585938
    2. ' ça' → logprob: -2.4392318725585938
    3. 'je' → logprob: -2.5642318725585938
    4. ' c' → logprob: -2.6892318725585938
    5. ' voilà' → logprob: -2.6892318725585938
    6. ' on' → logprob: -2.8142318725585938
    7. 'ça' → logprob: -2.8142318725585938
    8. 'on' → logprob: -3.0642318725585938
    9. ' je' → logprob: -3.1892318725585938
    10. 'vo' → logprob: -3.4392318725585938

Token 101: ' marche' (ID: 58191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' normalement' (ID: 164432)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09697890281677246
    2. 'print' → logprob: -2.5969789028167725
    3. 'results' → logprob: -5.096979141235352
    4. '  
' → logprob: -6.096979141235352
    5. '<|end|>' → logprob: -6.221979141235352
    6. 'copy' → logprob: -6.346979141235352
    7. 'for' → logprob: -6.721979141235352
    8. '
' → logprob: -6.846979141235352
    9. '#' → logprob: -7.096979141235352
    10. ')' → logprob: -7.346979141235352

Token 103: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05193179473280907
    2. 'print' → logprob: -3.676931858062744
    3. 'results' → logprob: -4.426931858062744
    4. '<|end|>' → logprob: -5.176931858062744
    5. 'copy' → logprob: -5.426931858062744
    6. '  
' → logprob: -6.426931858062744
    7. '#' → logprob: -8.051931381225586
    8. 'for' → logprob: -8.551931381225586
    9. '

' → logprob: -8.801931381225586
    10. ')' → logprob: -8.801931381225586

Token 104: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3024596571922302
    2. 'for' → logprob: -1.802459716796875
    3. 'copy' → logprob: -2.552459716796875
    4. 'results' → logprob: -4.177459716796875
    5. 'sorted' → logprob: -6.552459716796875
    6. ' for' → logprob: -8.052459716796875
    7. 'if' → logprob: -8.552459716796875
    8. '
' → logprob: -8.552459716796875
    9. '#' → logprob: -8.552459716796875
    10. ' copy' → logprob: -9.552459716796875

Token 105: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2444530576467514
    2. 'copy' → logprob: -2.244452953338623
    3. 'results' → logprob: -2.369452953338623
    4. ' for' → logprob: -5.244452953338623
    5. 'sorted' → logprob: -5.244452953338623
    6. '#' → logprob: -5.869452953338623
    7. 'print' → logprob: -6.369452953338623
    8. ' copy' → logprob: -6.994452953338623
    9. 'result' → logprob: -8.244453430175781
    10. ' results' → logprob: -8.619453430175781

Token 106: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.18764281272888184
    2. 'ichage' → logprob: -2.312642812728882
    3. '#' → logprob: -3.187642812728882
    4. 'iche' → logprob: -3.812642812728882
    5. 'ich' → logprob: -5.687643051147461
    6. 'ic' → logprob: -6.062643051147461
    7. '   ' → logprob: -7.187643051147461
    8. 'i' → logprob: -7.437643051147461
    9. '```' → logprob: -7.812643051147461
    10. 'ichier' → logprob: -8.687643051147461

Token 107: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. ' for' → logprob: -13.625000953674316
    3. '```' → logprob: -17.625001907348633
    4. 'copy' → logprob: -18.125001907348633
    5. 'print' → logprob: -19.125001907348633
    6. '
' → logprob: -19.375001907348633
    7. ':' → logprob: -21.875001907348633
    8. '#' → logprob: -22.000001907348633
    9. '	for' → logprob: -22.250001907348633
    10. 'f' → logprob: -22.500001907348633

Token 108: 'ça' (ID: 4041)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48686444759368896
    2. ')' → logprob: -1.611864447593689
    3. ' for' → logprob: -2.3618645668029785
    4. 'copy' → logprob: -2.7368645668029785
    5. ' copy' → logprob: -4.8618645668029785
    6. ')
' → logprob: -5.2368645668029785
    7. 'pour' → logprob: -5.4868645668029785
    8. ' pour' → logprob: -6.4868645668029785
    9. 'sorted' → logprob: -6.4868645668029785
    10. '"' → logprob: -6.6118645668029785

Token 109: ' imprime' (ID: 195564)
  Prédit: ' semble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' semble' → logprob: -1.4032000303268433
    2. ')' → logprob: -2.028200149536133
    3. ' va' → logprob: -2.153200149536133
    4. ' n' → logprob: -2.403200149536133
    5. ' continue' → logprob: -2.903200149536133
    6. ' ne' → logprob: -3.278200149536133
    7. ' veut' → logprob: -3.653200149536133
    8. ' print' → logprob: -3.653200149536133
    9. ' fait' → logprob: -3.903200149536133
    10. ' a' → logprob: -3.903200149536133

Token 110: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6132314205169678
    2. ' les' → logprob: -1.9882314205169678
    3. 'les' → logprob: -1.9882314205169678
    4. 'copy' → logprob: -2.1132314205169678
    5. ' copy' → logprob: -2.6132314205169678
    6. ' la' → logprob: -2.6132314205169678
    7. ' le' → logprob: -2.7382314205169678
    8. 'le' → logprob: -3.1132314205169678
    9. 'results' → logprob: -3.3632314205169678
    10. '(copy' → logprob: -3.8632314205169678

Token 111: ''ind' (ID: 82245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8449956774711609
    2. ''ensemble' → logprob: -1.7199957370758057
    3. 'a' → logprob: -2.0949957370758057
    4. ''' → logprob: -2.0949957370758057
    5. '')' → logprob: -3.0949957370758057
    6. 'es' → logprob: -3.7199957370758057
    7. ' '' → logprob: -4.969995498657227
    8. ' a' → logprob: -4.969995498657227
    9. ')' → logprob: -5.219995498657227
    10. ''ordre' → logprob: -5.219995498657227

Token 112: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.01335915457457304
    2. 'ent' → logprob: -4.513359069824219
    3. 'ices' → logprob: -7.013359069824219
    4. 'ice' → logprob: -7.138359069824219
    5. 'entation' → logprob: -8.388359069824219
    6. 'exe' → logprob: -8.888359069824219
    7. 'e' → logprob: -10.013359069824219
    8. 'é' → logprob: -10.138359069824219
    9. 'ic' → logprob: -10.513359069824219
    10. 'ented' → logprob: -11.138359069824219

Token 113: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3144241571426392
    2. ' ' → logprob: -1.5644241571426392
    3. ',' → logprob: -1.6894241571426392
    4. ' )' → logprob: -1.8144241571426392
    5. 's' → logprob: -2.5644240379333496
    6. ' de' → logprob: -2.8144240379333496
    7. ' ,' → logprob: -4.56442403793335
    8. ' dans' → logprob: -4.68942403793335
    9. ' des' → logprob: -5.68942403793335
    10. '+' → logprob: -6.56442403793335

Token 114: ''appar' (ID: 195019)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13617797195911407
    2. ''' → logprob: -3.7611780166625977
    3. 'a' → logprob: -3.8861780166625977
    4. 'es' → logprob: -3.8861780166625977
    5. ' e' → logprob: -4.261178016662598
    6. ''origine' → logprob: -4.511178016662598
    7. ''un' → logprob: -4.636178016662598
    8. ' l' → logprob: -5.386178016662598
    9. ''entrée' → logprob: -5.511178016662598
    10. 'u' → logprob: -6.011178016662598

Token 115: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.007722083013504744
    2. 'ence' → logprob: -5.382721900939941
    3. 'e' → logprob: -6.632721900939941
    4. 'a' → logprob: -6.757721900939941
    5. 'i' → logprob: -8.757721900939941
    6. '```' → logprob: -8.757721900939941
    7. 'ent' → logprob: -9.632721900939941
    8. 'it' → logprob: -9.882721900939941
    9. 'ai' → logprob: -10.007721900939941
    10. 'u' → logprob: -10.507721900939941

Token 116: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2143719345331192
    2. ',' → logprob: -1.714371919631958
    3. ' )' → logprob: -4.714372158050537
    4. ' ,' → logprob: -6.714372158050537
    5. 's' → logprob: -6.839372158050537
    6. ' ' → logprob: -7.589372158050537
    7. ' dans' → logprob: -7.964372158050537
    8. '(' → logprob: -8.589371681213379
    9. ' de' → logprob: -8.589371681213379
    10. 'dans' → logprob: -9.964371681213379

Token 117: ' la' (ID: 557)
  Prédit: ' copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.5824717283248901
    2. ' results' → logprob: -0.9574717283248901
    3. 'results' → logprob: -3.2074718475341797
    4. 'copy' → logprob: -4.08247184753418
    5. ' la' → logprob: -9.70747184753418
    6. ' the' → logprob: -9.95747184753418
    7. ' copie' → logprob: -10.20747184753418
    8. ' ' → logprob: -10.83247184753418
    9. '	results' → logprob: -11.08247184753418
    10. 'l' → logprob: -11.20747184753418

Token 118: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.44982805848121643
    2. 'copy' → logprob: -1.824828028678894
    3. 'cop' → logprob: -2.5748281478881836
    4. 'original' → logprob: -2.6998281478881836
    5. ' liste' → logprob: -3.8248281478881836
    6. 'list' → logprob: -4.824828147888184
    7. 'results' → logprob: -4.949828147888184
    8. 'code' → logprob: -5.574828147888184
    9. 'input' → logprob: -5.699828147888184
    10. ' original' → logprob: -5.824828147888184

Token 119: ' originale' (ID: 90997)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018023978918790817
    2. ' originale' → logprob: -5.14302396774292
    3. 'results' → logprob: -5.89302396774292
    4. 'original' → logprob: -6.01802396774292
    5. ' )' → logprob: -6.26802396774292
    6. ',' → logprob: -6.51802396774292
    7. ' original' → logprob: -6.64302396774292
    8. 'for' → logprob: -7.26802396774292
    9. ' results' → logprob: -8.518024444580078
    10. ' for' → logprob: -8.893024444580078

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018871497362852097
    2. ',' → logprob: -4.643871307373047
    3. 'for' → logprob: -4.768871307373047
    4. ' )' → logprob: -7.768871307373047
    5. ' for' → logprob: -9.643871307373047
    6. ')
' → logprob: -10.518871307373047
    7. ' ,' → logprob: -11.518871307373047
    8. 's' → logprob: -11.643871307373047
    9. '):' → logprob: -11.643871307373047
    10. 'results' → logprob: -12.018871307373047

Token 121: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.3458322731312364e-06
    2. ' for' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -16.37500762939453
    4. '```' → logprob: -16.87500762939453
    5. '
' → logprob: -17.12500762939453
    6. 'print' → logprob: -17.50000762939453
    7. 'results' → logprob: -18.50000762939453
    8. 'indices' → logprob: -19.37500762939453
    9. ')' → logprob: -19.50000762939453
    10. '[' → logprob: -19.75000762939453

Token 122: ' elem' (ID: 23108)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.587097704410553
    2. ' result' → logprob: -1.7120976448059082
    3. ' r' → logprob: -2.212097644805908
    4. ' res' → logprob: -3.212097644805908
    5. 'i' → logprob: -3.337097644805908
    6. 'result' → logprob: -3.587097644805908
    7. ' item' → logprob: -4.087097644805908
    8. 'r' → logprob: -4.337097644805908
    9. ' x' → logprob: -4.587097644805908
    10. 'res' → logprob: -5.587097644805908

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008718935772776604
    2. 'in' → logprob: -4.758718967437744
    3. ' ' → logprob: -9.633718490600586
    4. 's' → logprob: -10.883718490600586
    5. ',' → logprob: -11.883718490600586
    6. '  ' → logprob: -12.008718490600586
    7. ' i' → logprob: -12.883718490600586
    8. ' ' → logprob: -14.008718490600586
    9. '	in' → logprob: -14.133718490600586
    10. ' ,' → logprob: -14.258718490600586

Token 124: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.6349323391914368
    2. ' copy' → logprob: -0.7599323391914368
    3. 'results' → logprob: -6.384932518005371
    4. ' results' → logprob: -7.384932518005371
    5. '(copy' → logprob: -11.134932518005371
    6. '	copy' → logprob: -12.509932518005371
    7. 'Copy' → logprob: -14.134932518005371
    8. '   ' → logprob: -14.259932518005371
    9. '  ' → logprob: -14.884932518005371
    10. ' ' → logprob: -14.884932518005371

Token 125: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.00010568885772954673
    2. '_' → logprob: -9.250105857849121
    3. ' _' → logprob: -13.000105857849121
    4. '_res' → logprob: -13.250105857849121
    5. '_r' → logprob: -13.875105857849121
    6. '_RESULTS' → logprob: -14.000105857849121
    7. '_result' → logprob: -14.125105857849121
    8. '__' → logprob: -14.500105857849121
    9. 'results' → logprob: -14.875105857849121
    10. '_re' → logprob: -14.875105857849121

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024989593657664955
    2. ':
' → logprob: -8.625249862670898
    3. ' :' → logprob: -10.125249862670898
    4. '):' → logprob: -11.500249862670898
    5. '[' → logprob: -11.625249862670898
    6. '[:]' → logprob: -12.875249862670898
    7. ',' → logprob: -13.125249862670898
    8. ')' → logprob: -13.250249862670898
    9. ':**' → logprob: -13.500249862670898
    10. '=' → logprob: -13.500249862670898

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1675775647163391
    2. ' print' → logprob: -1.9175775051116943
    3. 'print' → logprob: -5.542577743530273
    4. '<|end|>' → logprob: -5.917577743530273
    5. '    
' → logprob: -8.417577743530273
    6. '	print' → logprob: -9.292577743530273
    7. ' ind' → logprob: -9.542577743530273
    8. '    ' → logprob: -9.542577743530273
    9. ' ' → logprob: -9.667577743530273
    10. ' 
' → logprob: -10.167577743530273

Token 128: ' idx' (ID: 14016)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28208401799201965
    2. ' print' → logprob: -1.4070839881896973
    3. '   ' → logprob: -7.032083988189697
    4. 'index' → logprob: -11.532084465026855
    5. '    
' → logprob: -11.782084465026855
    6. ' for' → logprob: -12.032084465026855
    7. ' ind' → logprob: -12.282084465026855
    8. 'for' → logprob: -12.407084465026855
    9. 'idx' (adapté à ' idx') → logprob: -12.657084465026855
    10. '	print' → logprob: -12.782084465026855

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16099333763122559
    2. '=' → logprob: -1.9109933376312256
    3. '_' → logprob: -8.035993576049805
    4. 's' → logprob: -8.660993576049805
    5. ' ' → logprob: -9.285993576049805
    6. ')' → logprob: -9.285993576049805
    7. 'ex' → logprob: -10.285993576049805
    8. '(' → logprob: -10.660993576049805
    9. ',' → logprob: -12.035993576049805
    10. 'x' → logprob: -12.285993576049805

Token 130: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.3132636249065399
    2. ' results' → logprob: -1.3132636547088623
    3. '(results' → logprob: -13.938263893127441
    4. '	results' → logprob: -14.688263893127441
    5. 'result' → logprob: -15.813263893127441
    6. '[' → logprob: -16.063262939453125
    7. ' [' → logprob: -16.563262939453125
    8. '-results' → logprob: -16.813262939453125
    9. '0' → logprob: -16.938262939453125
    10. ' ' → logprob: -17.188262939453125

Token 131: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0009549325914122164
    2. '.' → logprob: -7.000955104827881
    3. '.find' → logprob: -10.625954627990723
    4. ' .' → logprob: -11.375954627990723
    5. '.Index' → logprob: -13.250954627990723
    6. '.tolist' → logprob: -13.375954627990723
    7. 'index' → logprob: -13.875954627990723
    8. '.findall' → logprob: -14.500954627990723
    9. '.idx' → logprob: -14.750954627990723
    10. ' index' → logprob: -14.750954627990723

Token 132: '(elem' (ID: 61564)
  Prédit: '(elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elem' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -11.875008583068848
    3. '(ele' → logprob: -13.875008583068848
    4. 'elem' → logprob: -15.000008583068848
    5. '(element' → logprob: -16.00000762939453
    6. '((' → logprob: -18.25000762939453
    7. ' (' → logprob: -18.62500762939453
    8. '	elem' → logprob: -18.62500762939453
    9. '(e' → logprob: -19.37500762939453
    10. '(
' → logprob: -19.50000762939453

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0381203331053257
    2. ')
' → logprob: -3.2881202697753906
    3. '   ' → logprob: -9.66312026977539
    4. ' )' → logprob: -11.78812026977539
    5. ')
' → logprob: -12.41312026977539
    6. ')+' → logprob: -13.66312026977539
    7. ' )
' → logprob: -13.78812026977539
    8. ' ' → logprob: -15.03812026977539
    9. ')

' → logprob: -15.28812026977539
    10. ')`
' → logprob: -16.03812026977539

Token 134: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004737226292490959
    2. 'print' → logprob: -5.504737377166748
    3. ' print' → logprob: -8.00473690032959
    4. '    
' → logprob: -8.37973690032959
    5. '
' → logprob: -10.50473690032959
    6. ')' → logprob: -10.62973690032959
    7. ',' → logprob: -11.87973690032959
    8. '  
' → logprob: -12.00473690032959
    9. '   ' → logprob: -12.37973690032959
    10. '#' → logprob: -12.62973690032959

Token 135: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18229800462722778
    2. 'print' → logprob: -1.807297945022583
    3. ' print' → logprob: -6.182298183441162
    4. '    
' → logprob: -8.057297706604004
    5. '	print' → logprob: -10.057297706604004
    6. '
' → logprob: -10.182297706604004
    7. ')' → logprob: -11.182297706604004
    8. '.print' → logprob: -11.307297706604004
    9. '#print' → logprob: -11.557297706604004
    10. '```' → logprob: -11.557297706604004

Token 136: ' bon' (ID: 4846)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023549527395516634
    2. ' print' → logprob: -6.127355098724365
    3. '   ' → logprob: -8.752354621887207
    4. ')' → logprob: -12.502354621887207
    5. 'pr' → logprob: -12.627354621887207
    6. '#print' → logprob: -14.127354621887207
    7. '.print' → logprob: -14.377354621887207
    8. 'pri' → logprob: -14.627354621887207
    9. '    ' → logprob: -14.752354621887207
    10. 'prin' → logprob: -14.752354621887207

Token 137: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18815355002880096
    2. '()' → logprob: -2.0631535053253174
    3. ')' → logprob: -4.3131537437438965
    4. '   ' → logprob: -4.4381537437438965
    5. ' print' → logprob: -5.3131537437438965
    6. '(' → logprob: -5.5631537437438965
    7. '()
' → logprob: -6.0631537437438965
    8. '_print' → logprob: -6.3131537437438965
    9. ',' → logprob: -6.5631537437438965
    10. '.' → logprob: -6.8131537437438965

Token 138: ' tant' (ID: 16235)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033824577927589417
    2. ' print' → logprob: -3.5338246822357178
    3. '   ' → logprob: -5.658824443817139
    4. 'results' → logprob: -7.783824443817139
    5. ' results' → logprob: -10.033824920654297
    6. 'while' → logprob: -10.283824920654297
    7. ' while' → logprob: -11.033824920654297
    8. ')' → logprob: -11.533824920654297
    9. '    ' → logprob: -11.783824920654297
    10. 'for' → logprob: -11.908824920654297

Token 139: ' pis' (ID: 19525)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.24749203026294708
    2. '   ' → logprob: -3.1224920749664307
    3. 't' → logprob: -3.2474920749664307
    4. ' qu' → logprob: -3.6224920749664307
    5. 'pas' → logprob: -3.7474920749664307
    6. 'que' → logprob: -4.122491836547852
    7. 'ôt' → logprob: -4.497491836547852
    8. '```' → logprob: -4.622491836547852
    9. '#' → logprob: -4.997491836547852
    10. 'qu' → logprob: -5.497491836547852

Token 140: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003525717416778207
    2. 'print' → logprob: -5.878525733947754
    3. ' print' → logprob: -8.128525733947754
    4. '
' → logprob: -8.378525733947754
    5. ')' → logprob: -9.628525733947754
    6. ',' → logprob: -9.878525733947754
    7. '<|end|>' → logprob: -10.878525733947754
    8. '    
' → logprob: -11.378525733947754
    9. '.' → logprob: -11.378525733947754
    10. ' ' → logprob: -12.128525733947754

Token 141: ' les' (ID: 1341)
  Prédit: 'elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elem' → logprob: -0.07662265747785568
    2. 'idx' → logprob: -2.951622724533081
    3. 'l' → logprob: -4.326622486114502
    4. '(elem' → logprob: -5.451622486114502
    5. ' elem' → logprob: -6.701622486114502
    6. 'len' → logprob: -6.951622486114502
    7. 'la' → logprob: -7.701622486114502
    8. ' idx' → logprob: -8.70162296295166
    9. 'copy' → logprob: -8.95162296295166
    10. 'lem' → logprob: -9.07662296295166

Token 142: ' doubl' (ID: 127992)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.7763687968254089
    2. 'duplicates' → logprob: -1.2763688564300537
    3. ' doubl' → logprob: -2.0263688564300537
    4. 'duplic' → logprob: -3.6513688564300537
    5. '_duplicates' → logprob: -4.026368618011475
    6. 'indices' → logprob: -4.401368618011475
    7. ' premiers' → logprob: -4.776368618011475
    8. 'duplicate' → logprob: -4.901368618011475
    9. 'dou' → logprob: -5.026368618011475
    10. ' indices' → logprob: -5.026368618011475

Token 143: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0032422395888715982
    2. 'on' → logprob: -6.128242015838623
    3. 'és' → logprob: -7.378242015838623
    4. 'es' → logprob: -8.128242492675781
    5. 'é' → logprob: -11.003242492675781
    6. 'ic' → logprob: -11.128242492675781
    7. '```' → logprob: -11.378242492675781
    8. '{' → logprob: -11.878242492675781
    9. '﻿' → logprob: -12.128242492675781
    10. '#' → logprob: -12.315742492675781

Token 144: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06968951970338821
    2. 'print' → logprob: -2.9446895122528076
    3. ')' → logprob: -4.694689750671387
    4. ' print' → logprob: -5.569689750671387
    5. ',' → logprob: -7.319689750671387
    6. ')
' → logprob: -8.194689750671387
    7. '
' → logprob: -8.319689750671387
    8. '    
' → logprob: -8.944689750671387
    9. ',
' → logprob: -9.944689750671387
    10. '```' → logprob: -10.194689750671387

Token 145: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6755266785621643
    2. '   ' → logprob: -0.8005266785621643
    3. ' print' → logprob: -3.1755266189575195
    4. '  ' → logprob: -9.55052661895752
    5. '    
' → logprob: -9.92552661895752
    6. ')' → logprob: -10.42552661895752
    7. ' ' → logprob: -10.55052661895752
    8. '	print' → logprob: -11.05052661895752
    9. '    ' → logprob: -11.42552661895752
    10. '```' → logprob: -12.05052661895752

Token 146: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.1952366828918457
    2. ''' → logprob: -2.8202366828918457
    3. 'a' → logprob: -3.3202366828918457
    4. 'ont' → logprob: -3.6952366828918457
    5. '#' → logprob: -4.445236682891846
    6. ''a' → logprob: -4.445236682891846
    7. 'e' → logprob: -4.945236682891846
    8. '   ' → logprob: -5.945236682891846
    9. 'est' → logprob: -6.195236682891846
    10. ')' → logprob: -6.320236682891846

Token 147: ' pas' (ID: 2173)
  Prédit: ' ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.2815608084201813
    2. ' OK' → logprob: -2.5315608978271484
    3. ' okay' → logprob: -2.7815608978271484
    4. ' bon' → logprob: -4.031560897827148
    5. ' correct' → logprob: -4.156560897827148
    6. 'ok' → logprob: -4.156560897827148
    7. ' acceptable' → logprob: -4.281560897827148
    8. ' la' → logprob: -4.531560897827148
    9. ' pas' → logprob: -5.156560897827148
    10. 'bon' → logprob: -5.406560897827148

Token 148: ' optim' (ID: 9367)
  Prédit: 'grave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grave' → logprob: -0.00654306635260582
    2. ' grave' → logprob: -5.506543159484863
    3. 'gr' → logprob: -6.631543159484863
    4. 'grav' → logprob: -7.131543159484863
    5. 'g' → logprob: -9.506543159484863
    6. 'un' → logprob: -9.756543159484863
    7. 'important' → logprob: -9.756543159484863
    8. 'tr' → logprob: -10.506543159484863
    9. 'optimal' → logprob: -10.881543159484863
    10. 'terr' → logprob: -11.006543159484863

Token 149: 'isé' (ID: 30065)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.022056056186556816
    2. 'ale' → logprob: -4.0220561027526855
    3. 'isé' → logprob: -5.6470561027526855
    4. '```' → logprob: -9.647055625915527
    5. 'ial' → logprob: -9.897055625915527
    6. '#' → logprob: -10.147055625915527
    7. 'a' → logprob: -10.522055625915527
    8. '   ' → logprob: -10.647055625915527
    9. '

' → logprob: -10.772055625915527
    10. 'e' → logprob: -11.272055625915527

Token 150: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004119480960071087
    2. 'print' → logprob: -6.129119396209717
    3. ')' → logprob: -7.129119396209717
    4. ' print' → logprob: -7.754119396209717
    5. ',' → logprob: -7.879119396209717
    6. '    
' → logprob: -8.754119873046875
    7. '<|end|>' → logprob: -10.129119873046875
    8. '
' → logprob: -10.504119873046875
    9. ')
' → logprob: -11.379119873046875
    10. '    ' → logprob: -11.504119873046875

Token 151: ' ça' (ID: 13590)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.21896255016326904
    2. '   ' → logprob: -2.0939626693725586
    3. 'print' → logprob: -2.7189626693725586
    4. '    ' → logprob: -5.093962669372559
    5. ' )' → logprob: -8.218962669372559
    6. '  ' → logprob: -8.593962669372559
    7. ' ' → logprob: -8.718962669372559
    8. ' pass' → logprob: -9.218962669372559
    9. ' continue' → logprob: -9.343962669372559
    10. ')' → logprob: -9.468962669372559

Token 152: ' passe' (ID: 22210)
  Prédit: ' marche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marche' → logprob: -0.4546840786933899
    2. 'mar' → logprob: -1.9546840190887451
    3. 'fonction' → logprob: -2.329684019088745
    4. ' fonctionne' → logprob: -2.704684019088745
    5. ' mar' → logprob: -3.329684019088745
    6. 'march' → logprob: -5.329684257507324
    7. ' ira' → logprob: -5.829684257507324
    8. 'fait' → logprob: -6.079684257507324
    9. ' va' → logprob: -6.079684257507324
    10. ' fera' → logprob: -6.329684257507324

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026844505220651627
    2. 'print' → logprob: -4.276844501495361
    3. '
' → logprob: -5.276844501495361
    4. ')' → logprob: -5.901844501495361
    5. '    
' → logprob: -6.151844501495361
    6. ' print' → logprob: -6.651844501495361
    7. '<|end|>' → logprob: -7.901844501495361
    8. ',' → logprob: -8.77684497833252
    9. '  
' → logprob: -9.27684497833252
    10. ')
' → logprob: -9.40184497833252

Token 154: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39879053831100464
    2. '   ' → logprob: -1.1487905979156494
    3. ' print' → logprob: -4.64879035949707
    4. '
' → logprob: -6.77379035949707
    5. ')' → logprob: -8.02379035949707
    6. '    
' → logprob: -8.02379035949707
    7. ',' → logprob: -8.77379035949707
    8. ' 
' → logprob: -9.77379035949707
    9. '  
' → logprob: -9.89879035949707
    10. '	print' → logprob: -10.14879035949707

Token 155: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011740362970158458
    2. ' print' → logprob: -6.751173973083496
    3. '   ' → logprob: -13.501173973083496
    4. 'pr' → logprob: -13.626173973083496
    5. 'prin' → logprob: -14.001173973083496
    6. 'pri' → logprob: -15.626173973083496
    7. ')' → logprob: -16.751174926757812
    8. ' prin' → logprob: -17.501174926757812
    9. '    
' → logprob: -17.501174926757812
    10. '#print' → logprob: -17.626174926757812

Token 156: '(idx' (ID: 42793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12704192101955414
    2. '(elem' → logprob: -2.377041816711426
    3. '(idx' → logprob: -3.752041816711426
    4. '(f' → logprob: -6.127041816711426
    5. '('' → logprob: -7.627041816711426
    6. '("' → logprob: -8.877041816711426
    7. '("("' → logprob: -9.002041816711426
    8. ' (' → logprob: -11.127041816711426
    9. '((' → logprob: -11.252041816711426
    10. '(ele' → logprob: -12.127041816711426

Token 157: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ',' → logprob: -12.500012397766113
    3. ')`' → logprob: -12.750012397766113
    4. ' )' → logprob: -13.000012397766113
    5. '`)' → logprob: -14.375012397766113
    6. ')
' → logprob: -14.625012397766113
    7. '))' → logprob: -14.625012397766113
    8. '+' → logprob: -14.750012397766113
    9. ',)' → logprob: -14.750012397766113
    10. '),' → logprob: -14.875012397766113

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. ')' → logprob: -15.761048316955566
    4. '<|end|>' → logprob: -18.01104736328125
    5. ' ' → logprob: -18.13604736328125
    6. '0' → logprob: -18.51104736328125
    7. '   ' → logprob: -19.26104736328125
    8. '```' → logprob: -19.51104736328125
    9. ' )' → logprob: -19.88604736328125
    10. '  ' → logprob: -20.26104736328125

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. ')' → logprob: -19.25000762939453
    4. '   ' → logprob: -20.00000762939453
    5. '```' → logprob: -20.37500762939453
    6. '0' → logprob: -20.93750762939453
    7. '１' → logprob: -21.12500762939453
    8. '१' → logprob: -21.93750762939453
    9. '১' → logprob: -22.00000762939453
    10. '  ' → logprob: -22.06250762939453

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')`' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -15.625000953674316
    5. ')
' → logprob: -16.000001907348633
    6. ')}' → logprob: -17.125001907348633
    7. '),' → logprob: -18.000001907348633
    8. ')**' → logprob: -18.875001907348633
    9. ')")' → logprob: -18.875001907348633
    10. '`)' → logprob: -19.375001907348633

Token 161: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '1' (ID: 16)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: '-based' (ID: 8235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: ' attention' (ID: 8684)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1618655025959015
    2. '"\' → logprob: -2.911865472793579
    3. '```' → logprob: -3.286865472793579
    4. ' )' → logprob: -4.911865711212158
    5. ')
' → logprob: -4.911865711212158
    6. 'print' → logprob: -5.036865711212158
    7. '"' → logprob: -5.161865711212158
    8. ''\' → logprob: -5.411865711212158
    9. 'newline' → logprob: -5.411865711212158
    10. 'end' → logprob: -5.536865711212158

Token 169: '!' (ID: 0)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 29.34%
Précision adaptée (1ère position): 29.94%
Précision (top 10): 53.89%
================================================================================
