================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
minsum = float("inf")
i = 0
while i < n-1:
    cnt = 0
    a = i+1
    b = n-i-1
    def digit_sum(val):
        return sum(map(int, list(str(val))))
    for x in [a,b]:
        digits = list(str(x))
        for d in digits:
            cnt += int(d)
    alt_sum = digit_sum(a) + digit_sum(b)
    if min(cnt, alt_sum) < minsum:
        minsum = min(cnt, alt_sum)
    i += 1
print(minsum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'min' (ID: 1493)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1483495235443115
    2. 'i' → logprob: -1.2733495235443115
    3. 'for' → logprob: -1.6483495235443115
    4. 's' → logprob: -2.6483495235443115
    5. 'x' → logprob: -3.5233495235443115
    6. '`' → logprob: -3.7733495235443115
    7. ' ' → logprob: -4.398349761962891
    8. '\n' → logprob: -4.523349761962891
    9. ''' → logprob: -4.648349761962891
    10. 'f' → logprob: -5.148349761962891

Token 6: 'sum' (ID: 12298)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023152378853410482
    2. '(' → logprob: -6.377315044403076
    3. '_val' → logprob: -7.752315044403076
    4. '(_)' → logprob: -10.127315521240234
    5. '_)' → logprob: -10.252315521240234
    6. '_value' → logprob: -11.127315521240234
    7. '_v' → logprob: -11.252315521240234
    8. '_space' → logprob: -11.627315521240234
    9. '_len' → logprob: -11.752315521240234
    10. ')' → logprob: -11.877315521240234

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010835404973477125
    2. '=' → logprob: -8.126083374023438
    3. ' =' → logprob: -8.126083374023438
    4. '_=' → logprob: -8.626083374023438
    5. '_val' → logprob: -8.876083374023438
    6. '(' → logprob: -9.001083374023438
    7. ' _' → logprob: -11.376083374023438
    8. '_value' → logprob: -12.126083374023438
    9. '_sum' → logprob: -12.626083374023438
    10. ')' → logprob: -12.626083374023438

Token 8: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.11453184485435486
    2. ' ' → logprob: -2.6145317554473877
    3. 'float' → logprob: -3.4895317554473877
    4. '0' → logprob: -6.489531993865967
    5. ' n' → logprob: -6.489531993865967
    6. '10' → logprob: -7.614531993865967
    7. ' None' → logprob: -7.989531993865967
    8. '100' → logprob: -8.239531517028809
    9. ' int' → logprob: -8.989531517028809
    10. 'n' → logprob: -9.739531517028809

Token 9: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08175421506166458
    2. '('' → logprob: -2.956754207611084
    3. ''' → logprob: -3.956754207611084
    4. '.' → logprob: -5.581754207611084
    5. '```' → logprob: -7.206754207611084
    6. '('.')' → logprob: -7.456754207611084
    7. ''.' → logprob: -7.581754207611084
    8. '"' → logprob: -7.706754207611084
    9. '("("' → logprob: -7.831754207611084
    10. ''s' → logprob: -8.331754684448242

Token 10: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0029248257633298635
    2. '-inf' → logprob: -5.877924919128418
    3. ''in' → logprob: -9.752924919128418
    4. ' inf' → logprob: -10.252924919128418
    5. '"' → logprob: -11.877924919128418
    6. '_inf' → logprob: -12.002924919128418
    7. ''' → logprob: -12.127924919128418
    8. '+' → logprob: -13.502924919128418
    9. 'Inf' → logprob: -13.627924919128418
    10. 'in' → logprob: -13.752924919128418

Token 11: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004253269638866186
    2. '")' → logprob: -5.504253387451172
    3. ')")' → logprob: -8.754253387451172
    4. '))' → logprob: -12.004253387451172
    5. ' )' → logprob: -12.379253387451172
    6. '"' → logprob: -13.254253387451172
    7. ')"' → logprob: -13.379253387451172
    8. '()' → logprob: -14.254253387451172
    9. ')
' → logprob: -14.379253387451172
    10. '')' → logprob: -14.879253387451172

Token 12: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019076790660619736
    2. ' for' → logprob: -4.394076824188232
    3. '
' → logprob: -5.519076824188232
    4. '\n' → logprob: -7.269076824188232
    5. ' 
' → logprob: -7.769076824188232
    6. 'max' → logprob: -7.769076824188232
    7. 's' → logprob: -8.394076347351074
    8. '\' → logprob: -9.019076347351074
    9. 'i' → logprob: -9.144076347351074
    10. ')' → logprob: -9.394076347351074

Token 13: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17075207829475403
    2. '=' → logprob: -2.0457520484924316
    3. ' =' → logprob: -3.7957520484924316
    4. 'f' → logprob: -6.420752048492432
    5. ' ' → logprob: -6.545752048492432
    6. ' n' → logprob: -6.670752048492432
    7. 's' → logprob: -8.67075252532959
    8. 'nt' → logprob: -8.67075252532959
    9. '+' → logprob: -8.92075252532959
    10. ',' → logprob: -9.04575252532959

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39922788739204407
    2. '1' → logprob: -1.2742278575897217
    3. '0' → logprob: -3.0242278575897217
    4. '2' → logprob: -7.024228096008301
    5. ' n' → logprob: -11.0242280960083
    6. 'n' → logprob: -12.1492280960083
    7. ' ' → logprob: -13.3992280960083
    8. '4' → logprob: -13.5867280960083
    9. '```' → logprob: -14.2117280960083
    10. '3' → logprob: -14.3992280960083

Token 15: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0707680955529213
    2. '0' → logprob: -2.820768117904663
    3. '2' → logprob: -4.945767879486084
    4. ' ' → logprob: -6.445767879486084
    5. 'n' → logprob: -10.070768356323242
    6. '3' → logprob: -12.320768356323242
    7. '```' → logprob: -12.945768356323242
    8. '4' → logprob: -13.445768356323242
    9. ' n' → logprob: -13.445768356323242
    10. '9' → logprob: -13.695768356323242

Token 16: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5615819692611694
    2. '
' → logprob: -2.061582088470459
    3. '<|end|>' → logprob: -2.436582088470459
    4. ' 
' → logprob: -2.686582088470459
    5. ' while' → logprob: -2.686582088470459
    6. 'while' → logprob: -3.311582088470459
    7. ',' → logprob: -4.686582088470459
    8. '  
' → logprob: -5.436582088470459
    9. ' ,' → logprob: -5.561582088470459
    10. '' → logprob: -5.686582088470459

Token 17: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18297290802001953
    2. ' while' → logprob: -2.4329729080200195
    3. 'while' → logprob: -3.3079729080200195
    4. '<|end|>' → logprob: -3.9329729080200195
    5. ' 
' → logprob: -5.4329729080200195
    6. ')' → logprob: -5.6829729080200195
    7. ' ,' → logprob: -6.1829729080200195
    8. ',' → logprob: -6.1829729080200195
    9. '```' → logprob: -6.4329729080200195
    10. '\' → logprob: -6.5579729080200195

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005850931629538536
    2. 'i' → logprob: -5.880850791931152
    3. ' ' → logprob: -6.380850791931152
    4. ' n' → logprob: -6.630850791931152
    5. 'n' → logprob: -11.630850791931152
    6. ' )' → logprob: -11.880850791931152
    7. ' ' → logprob: -12.380850791931152
    8. ')' → logprob: -13.005850791931152
    9. ' not' → logprob: -13.755850791931152
    10. ' <' → logprob: -14.255850791931152

Token 19: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11816833168268204
    2. '<' → logprob: -2.243168354034424
    3. ' <=' → logprob: -5.368168354034424
    4. '<=' → logprob: -7.868168354034424
    5. ' ' → logprob: -8.368167877197266
    6. '<n' → logprob: -10.993167877197266
    7. '<len' → logprob: -11.243167877197266
    8. '*' → logprob: -12.868167877197266
    9. '<size' → logprob: -13.118167877197266
    10. ' *' → logprob: -13.118167877197266

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04970276728272438
    2. 'n' → logprob: -3.5497028827667236
    3. ' ' → logprob: -3.9247028827667236
    4. ' ' → logprob: -13.174702644348145
    5. '1' → logprob: -13.424702644348145
    6. '(n' → logprob: -13.674702644348145
    7. '10' → logprob: -15.174702644348145
    8. ' (' → logprob: -15.299702644348145
    9. '2' → logprob: -15.924702644348145
    10. '(' → logprob: -15.924702644348145

Token 21: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007264543790370226
    2. ' :' → logprob: -5.007264614105225
    3. ':
' → logprob: -7.632264614105225
    4. ' :
' → logprob: -10.882264137268066
    5. '+:' → logprob: -11.132264137268066
    6. ':**' → logprob: -11.632264137268066
    7. '):' → logprob: -11.882264137268066
    8. '   ' → logprob: -12.382264137268066
    9. ':i' → logprob: -12.882264137268066
    10. '**' → logprob: -13.757264137268066

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022606621496379375
    2. '2' → logprob: -8.875226020812988
    3. ' ' → logprob: -9.500226020812988
    4. '3' → logprob: -12.250226020812988
    5. '4' → logprob: -13.500226020812988
    6. '-' → logprob: -13.875226020812988
    7. '0' → logprob: -14.437726020812988
    8. '9' → logprob: -14.625226020812988
    9. '   ' → logprob: -14.687726020812988
    10. '5' → logprob: -14.812726020812988

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010562685783952475
    2. ':
' → logprob: -7.25105619430542
    3. ' :' → logprob: -8.001056671142578
    4. ' :
' → logprob: -12.251056671142578
    5. ':**' → logprob: -13.376056671142578
    6. '   ' → logprob: -13.626056671142578
    7. ' ' → logprob: -14.626056671142578
    8. ' and' → logprob: -14.751056671142578
    9. ',' → logprob: -14.876056671142578
    10. ':

' → logprob: -15.126056671142578

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7089071869850159
    2. '   ' → logprob: -1.333907127380371
    3. '    ' → logprob: -1.583907127380371
    4. '<|end|>' → logprob: -4.083907127380371
    5. ' 
' → logprob: -4.958907127380371
    6. '    
' → logprob: -5.458907127380371
    7. '     
' → logprob: -5.583907127380371
    8. 'i' → logprob: -6.583907127380371
    9. '  ' → logprob: -6.958907127380371
    10. '<|end|>' → logprob: -6.958907127380371

Token 25: ' cnt' (ID: 27340)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16214458644390106
    2. '    ' → logprob: -2.162144660949707
    3. ' i' → logprob: -4.037144660949707
    4. '   ' → logprob: -4.912144660949707
    5. 'i' → logprob: -5.662144660949707
    6. ' 
' → logprob: -6.537144660949707
    7. '     
' → logprob: -6.787144660949707
    8. '<|end|>' → logprob: -6.787144660949707
    9. '  ' → logprob: -7.662144660949707
    10. ' s' → logprob: -8.287144660949707

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18337298929691315
    2. ' +=' → logprob: -2.808372974395752
    3. ' ' → logprob: -3.058372974395752
    4. '=' → logprob: -3.058372974395752
    5. '_' → logprob: -5.558372974395752
    6. '+' → logprob: -6.183372974395752
    7. '  ' → logprob: -6.183372974395752
    8. ' +' → logprob: -6.433372974395752
    9. 's' → logprob: -6.808372974395752
    10. '   ' → logprob: -7.058372974395752

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2818949222564697
    2. ' ' → logprob: -2.7818949222564697
    3. '1' → logprob: -3.0318949222564697
    4. 'abs' → logprob: -3.0318949222564697
    5. 'i' → logprob: -3.4068949222564697
    6. ' i' → logprob: -4.031894683837891
    7. ' abs' → logprob: -4.406894683837891
    8. 'int' → logprob: -4.406894683837891
    9. '2' → logprob: -6.031894683837891
    10. 'n' → logprob: -6.031894683837891

Token 28: '0' (ID: 15)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.42075660824775696
    2. '0' → logprob: -2.2957565784454346
    3. 'i' → logprob: -2.4207565784454346
    4. ' abs' → logprob: -2.7957565784454346
    5. 'int' → logprob: -3.6707565784454346
    6. '1' → logprob: -3.7957565784454346
    7. ' i' → logprob: -4.420756816864014
    8. 'n' → logprob: -4.420756816864014
    9. ' ' → logprob: -5.295756816864014
    10. '2' → logprob: -5.920756816864014

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4140894412994385
    2. '<|end|>' → logprob: -1.4140894412994385
    3. ' ' → logprob: -2.5390894412994385
    4. '       ' → logprob: -5.039089202880859
    5. '    ' → logprob: -5.664089202880859
    6. '  ' → logprob: -6.289089202880859
    7. '<|end|>' → logprob: -6.414089202880859
    8. '    
' → logprob: -6.664089202880859
    9. ')' → logprob: -7.414089202880859
    10. ' 
' → logprob: -7.539089202880859

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.289051353931427
    2. ' ' → logprob: -2.0390512943267822
    3. '<|end|>' → logprob: -2.2890512943267822
    4. '    ' → logprob: -5.289051532745361
    5. '       ' → logprob: -5.539051532745361
    6. ' 
' → logprob: -5.914051532745361
    7. '    
' → logprob: -6.414051532745361
    8. '  ' → logprob: -6.539051532745361
    9. '<|end|>' → logprob: -6.789051532745361
    10. 'i' → logprob: -7.539051532745361

Token 31: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4615978002548218
    2. '   ' → logprob: -2.2115979194641113
    3. '    ' → logprob: -2.5865979194641113
    4. '<|end|>' → logprob: -2.7115979194641113
    5. ' i' → logprob: -3.5865979194641113
    6. 'i' → logprob: -3.7115979194641113
    7. 's' → logprob: -4.211597919464111
    8. ' s' → logprob: -4.336597919464111
    9. '       ' → logprob: -4.711597919464111
    10. 'j' → logprob: -4.961597919464111

Token 32: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020439691841602325
    2. '[' → logprob: -4.145439624786377
    3. 'rray' → logprob: -6.020439624786377
    4. 'b' → logprob: -7.270439624786377
    5. ' [' → logprob: -7.770439624786377
    6. 'rr' → logprob: -8.020440101623535
    7. ' =' → logprob: -9.270440101623535
    8. ' ' → logprob: -10.020440101623535
    9. ' +=' → logprob: -10.145440101623535
    10. '[j' → logprob: -10.270440101623535

Token 33: ' i' (ID: 575)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9610559344291687
    2. ' int' → logprob: -0.9610559344291687
    3. ' i' → logprob: -2.3360559940338135
    4. '[int' → logprob: -3.4610559940338135
    5. ' list' → logprob: -3.5860559940338135
    6. 'i' → logprob: -3.5860559940338135
    7. '[i' → logprob: -4.211055755615234
    8. ' [' → logprob: -4.711055755615234
    9. 'list' → logprob: -5.086055755615234
    10. '[]' → logprob: -5.336055755615234

Token 34: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07929962873458862
    2. '<|end|>' → logprob: -2.9542996883392334
    3. ' +' → logprob: -3.8292996883392334
    4. '<|end|>' → logprob: -6.954299449920654
    5. ' ' → logprob: -7.454299449920654
    6. '+
' → logprob: -8.079299926757812
    7. '   ' → logprob: -9.079299926757812
    8. ' +
' → logprob: -9.204299926757812
    9. ')' → logprob: -9.704299926757812
    10. '-' → logprob: -10.204299926757812

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002258277963846922
    2. '2' → logprob: -8.625226020812988
    3. ' ' → logprob: -10.000226020812988
    4. '   ' → logprob: -15.000226020812988
    5. '  ' → logprob: -15.625226020812988
    6. '<|end|>' → logprob: -15.625226020812988
    7. '```' → logprob: -17.062725067138672
    8. '<|end|>' → logprob: -17.625225067138672
    9. '0' → logprob: -18.000225067138672
    10. '+' → logprob: -18.250225067138672

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366944193840027
    2. '=' → logprob: -3.4086694717407227
    3. ' ' → logprob: -11.783669471740723
    4. '+' → logprob: -12.283669471740723
    5. '   ' → logprob: -12.658669471740723
    6. ')' → logprob: -13.533669471740723
    7. '=i' → logprob: -13.658669471740723
    8. '  ' → logprob: -13.908669471740723
    9. ' +=' → logprob: -13.908669471740723
    10. 'a' → logprob: -14.033669471740723

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4846363961696625
    2. ' n' → logprob: -1.1096364259719849
    3. 'a' → logprob: -3.4846363067626953
    4. 'i' → logprob: -4.234636306762695
    5. ' a' → logprob: -5.359636306762695
    6. ' i' → logprob: -5.734636306762695
    7. ' ' → logprob: -7.609636306762695
    8. '1' → logprob: -8.234636306762695
    9. '0' → logprob: -8.609636306762695
    10. 'int' → logprob: -9.234636306762695

Token 41: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1461554616689682
    2. '<|end|>' → logprob: -2.39615535736084
    3. '
' → logprob: -4.02115535736084
    4. ' ' → logprob: -4.64615535736084
    5. ' -' → logprob: -5.39615535736084
    6. '<|end|>' → logprob: -5.52115535736084
    7. 'a' → logprob: -6.39615535736084
    8. ')' → logprob: -6.52115535736084
    9. '   ' → logprob: -6.64615535736084
    10. '```' → logprob: -7.27115535736084

Token 42: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0893368050456047
    2. '2' → logprob: -2.46433687210083
    3. ' ' → logprob: -7.83933687210083
    4. '-' → logprob: -14.276836395263672
    5. '  ' → logprob: -14.526836395263672
    6. '```' → logprob: -14.651836395263672
    7. '   ' → logprob: -14.839336395263672
    8. '3' → logprob: -14.964336395263672
    9. ')' → logprob: -15.214336395263672
    10. '...' → logprob: -15.964336395263672

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6660919189453125
    2. '<|end|>' → logprob: -0.9160919189453125
    3. '
' → logprob: -3.2910919189453125
    4. ' ' → logprob: -4.0410919189453125
    5. '    
' → logprob: -5.2910919189453125
    6. '<|end|>' → logprob: -5.4160919189453125
    7. ')' → logprob: -5.5410919189453125
    8. '\n' → logprob: -5.5410919189453125
    9. ' 
' → logprob: -5.6660919189453125
    10. '    ' → logprob: -6.2910919189453125

Token 46: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' digit' (ID: 19181)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.9697635173797607
    2. ' calculate' → logprob: -1.9697635173797607
    3. ' min' → logprob: -2.0947635173797607
    4. ' ' → logprob: -2.7197635173797607
    5. ' sum' → logprob: -2.8447635173797607
    6. ' find' → logprob: -2.8447635173797607
    7. ' func' → logprob: -3.0947635173797607
    8. ' factorial' → logprob: -3.7197635173797607
    9. ' calc' → logprob: -4.34476375579834
    10. ' compute' → logprob: -4.71976375579834

Token 48: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.033300768584012985
    2. '_s' → logprob: -4.283300876617432
    3. '_' → logprob: -4.908300876617432
    4. '_count' → logprob: -5.033300876617432
    5. 'sum' → logprob: -5.908300876617432
    6. 's' → logprob: -6.283300876617432
    7. '_length' → logprob: -8.533300399780273
    8. ' sum' → logprob: -9.408300399780273
    9. ' _' → logprob: -9.783300399780273
    10. '_counter' → logprob: -10.283300399780273

Token 49: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37962234020233154
    2. '(x' → logprob: -1.5046223402023315
    3. '(num' → logprob: -3.129622459411621
    4. '(a' → logprob: -3.754622459411621
    5. '(n' → logprob: -3.879622459411621
    6. '(s' → logprob: -6.004622459411621
    7. '(number' → logprob: -6.129622459411621
    8. 's' → logprob: -8.129622459411621
    9. '(d' → logprob: -8.254622459411621
    10. '(i' → logprob: -8.254622459411621

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036084887688048184
    2. ')' → logprob: -8.625360488891602
    3. '):
' → logprob: -8.875360488891602
    4. ' ):' → logprob: -10.875360488891602
    5. ':' → logprob: -11.750360488891602
    6. '   ' → logprob: -12.125360488891602
    7. '):
' → logprob: -13.250360488891602
    8. ' ' → logprob: -13.500360488891602
    9. 's' → logprob: -13.625360488891602
    10. '=' → logprob: -14.125360488891602

Token 51: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08021069318056107
    2. '):' → logprob: -3.8302106857299805
    3. ':return' → logprob: -4.2052106857299805
    4. ')' → logprob: -4.4552106857299805
    5. '<|end|>' → logprob: -4.7052106857299805
    6. '(' → logprob: -5.3302106857299805
    7. '   ' → logprob: -5.5802106857299805
    8. '():' → logprob: -5.7052106857299805
    9. ':
' → logprob: -6.3302106857299805
    10. ' ' → logprob: -6.8302106857299805

Token 52: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.013171672821045
    2. 'return' (adapté à ' return') → logprob: -1.388171672821045
    3. '   ' → logprob: -1.513171672821045
    4. 'sum' → logprob: -2.638171672821045
    5. ' s' → logprob: -3.013171672821045
    6. ' return' → logprob: -3.638171672821045
    7. ' ' → logprob: -5.763171672821045
    8. ' sum' → logprob: -5.763171672821045
    9. '  ' → logprob: -6.263171672821045
    10. 'd' → logprob: -6.263171672821045

Token 53: ' sum' (ID: 4215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6147843599319458
    2. ' val' → logprob: -1.1147843599319458
    3. ' sum' → logprob: -2.6147842407226562
    4. 'sum' → logprob: -2.8647842407226562
    5. 'int' → logprob: -8.114784240722656
    6. ' ' → logprob: -8.739784240722656
    7. ' int' → logprob: -8.864784240722656
    8. ' (' → logprob: -8.989784240722656
    9. '(val' → logprob: -9.114784240722656
    10. '(sum' → logprob: -9.739784240722656

Token 54: '(map' (ID: 16946)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1968947649002075
    2. 'int' → logprob: -1.3218947649002075
    3. '(int' → logprob: -1.6968947649002075
    4. 'map' → logprob: -1.9468947649002075
    5. '(map' → logprob: -2.571894645690918
    6. '[' → logprob: -4.321894645690918
    7. ' map' → logprob: -5.071894645690918
    8. '(' → logprob: -5.446894645690918
    9. ' int' → logprob: -6.196894645690918
    10. 'digits' → logprob: -7.446894645690918

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015343817649409175
    2. 'int' → logprob: -6.876534461975098
    3. '(str' → logprob: -8.251534461975098
    4. '(lambda' → logprob: -8.501534461975098
    5. '(' → logprob: -10.501534461975098
    6. 'str' → logprob: -13.001534461975098
    7. ' int' → logprob: -13.501534461975098
    8. 'lambda' → logprob: -13.751534461975098
    9. '(ord' → logprob: -13.751534461975098
    10. ',int' → logprob: -13.876534461975098

Token 56: ',' (ID: 11)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.21743369102478027
    2. '(str' → logprob: -2.3424336910247803
    3. ',str' → logprob: -2.7174336910247803
    4. ',' → logprob: -3.5924336910247803
    5. ' str' → logprob: -5.842433929443359
    6. 'list' → logprob: -6.092433929443359
    7. '   ' → logprob: -8.59243392944336
    8. ')' → logprob: -8.71743392944336
    9. '	str' → logprob: -9.84243392944336
    10. ' ' → logprob: -9.96743392944336

Token 57: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01186417881399393
    2. ' str' → logprob: -5.136864185333252
    3. 'list' → logprob: -5.136864185333252
    4. ' list' → logprob: -10.511863708496094
    5. ')' → logprob: -11.761863708496094
    6. '(str' → logprob: -12.386863708496094
    7. '	str' → logprob: -14.261863708496094
    8. ' ' → logprob: -14.761863708496094
    9. 'st' → logprob: -15.136863708496094
    10. '[str' → logprob: -15.261863708496094

Token 58: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.250038146972656
    3. 'str' → logprob: -13.250038146972656
    4. '(val' → logprob: -14.875038146972656
    5. ' str' → logprob: -15.750038146972656
    6. '(s' → logprob: -16.375038146972656
    7. ')' → logprob: -17.375038146972656
    8. '=str' → logprob: -17.375038146972656
    9. '[str' → logprob: -17.750038146972656
    10. '(
' → logprob: -18.750038146972656

Token 59: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.00017505438881926239
    2. '(' → logprob: -8.750175476074219
    3. 'val' → logprob: -11.250175476074219
    4. '(abs' → logprob: -12.875175476074219
    5. ' val' → logprob: -15.375175476074219
    6. ',val' → logprob: -15.625175476074219
    7. '[val' → logprob: -15.750175476074219
    8. ' (' → logprob: -15.875175476074219
    9. '(v' → logprob: -16.75017547607422
    10. '	val' → logprob: -18.00017547607422

Token 60: '))))
' (ID: 55084)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.06479217857122421
    2. '))' → logprob: -3.5647921562194824
    3. ')))' → logprob: -3.5647921562194824
    4. ')' → logprob: -5.564792156219482
    5. ')))))
' → logprob: -6.939792156219482
    6. '()))' → logprob: -7.814792156219482
    7. '   ' → logprob: -7.939792156219482
    8. '))))
' → logprob: -8.81479263305664
    9. ')))),' → logprob: -8.81479263305664
    10. ' ))' → logprob: -9.56479263305664

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.692579984664917
    2. ')' → logprob: -1.317579984664917
    3. '(' → logprob: -2.317579984664917
    4. '):' → logprob: -3.067579984664917
    5. '+' → logprob: -3.942579984664917
    6. ' ' → logprob: -4.442580223083496
    7. '()' → logprob: -4.567580223083496
    8. '(a' → logprob: -4.692580223083496
    9. ':' → logprob: -4.817580223083496
    10. '():' → logprob: -5.317580223083496

Token 62: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16897130012512207
    2. '+' → logprob: -2.543971300125122
    3. ' ' → logprob: -3.543971300125122
    4. ')' → logprob: -3.668971300125122
    5. '    
' → logprob: -5.293971061706543
    6. '  ' → logprob: -5.793971061706543
    7. ':' → logprob: -6.043971061706543
    8. '-' → logprob: -6.168971061706543
    9. '<|end|>' → logprob: -6.293971061706543
    10. '  
' → logprob: -6.918971061706543

Token 63: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14013123512268066
    2. 'a' → logprob: -2.7651312351226807
    3. ' j' → logprob: -4.265130996704102
    4. ' _' → logprob: -4.390130996704102
    5. ' val' → logprob: -4.515130996704102
    6. ' ' → logprob: -4.765130996704102
    7. ' x' → logprob: -5.015130996704102
    8. '_' → logprob: -5.640130996704102
    9. ' in' → logprob: -5.890130996704102
    10. ' c' → logprob: -6.140130996704102

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18038491904735565
    2. 'in' → logprob: -1.805384874343872
    3. ' ' → logprob: -7.555385112762451
    4. '	in' → logprob: -10.430384635925293
    5. '    ' → logprob: -10.805384635925293
    6. '   ' → logprob: -11.180384635925293
    7. 'range' → logprob: -11.555384635925293
    8. '  ' → logprob: -11.680384635925293
    9. '<|end|>' → logprob: -11.930384635925293
    10. 'from' → logprob: -12.992884635925293

Token 65: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5768064260482788
    2. ' range' → logprob: -0.8268064260482788
    3. ' ' → logprob: -8.20180606842041
    4. 'a' → logprob: -8.95180606842041
    5. ' a' → logprob: -9.20180606842041
    6. '(range' → logprob: -9.57680606842041
    7. '[a' → logprob: -9.70180606842041
    8. '[' → logprob: -10.07680606842041
    9. '	range' → logprob: -10.45180606842041
    10. 'b' → logprob: -10.82680606842041

Token 66: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023643692838959396
    2. ' a' → logprob: -9.000236511230469
    3. '   ' → logprob: -9.125236511230469
    4. 'b' → logprob: -13.500236511230469
    5. '(a' → logprob: -14.625236511230469
    6. ' ' → logprob: -14.875236511230469
    7. '	a' → logprob: -15.000236511230469
    8. '  ' → logprob: -15.250236511230469
    9. ''a' → logprob: -15.875236511230469
    10. ',a' → logprob: -15.875236511230469

Token 67: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10566628724336624
    2. ',b' → logprob: -2.480666399002075
    3. ' ,' → logprob: -4.105666160583496
    4. 'b' → logprob: -10.480666160583496
    5. ',
' → logprob: -10.480666160583496
    6. '   ' → logprob: -11.480666160583496
    7. ' ' → logprob: -11.605666160583496
    8. '+b' → logprob: -12.480666160583496
    9. '+,' → logprob: -12.480666160583496
    10. '+' → logprob: -12.605666160583496

Token 68: ']:
' (ID: 22152)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5504036545753479
    2. ']:' → logprob: -0.9254036545753479
    3. '):' → logprob: -4.925403594970703
    4. ' ]' → logprob: -5.425403594970703
    5. ']):
' → logprob: -5.425403594970703
    6. ']' → logprob: -5.675403594970703
    7. '   ' → logprob: -6.050403594970703
    8. ',' → logprob: -6.175403594970703
    9. '       ' → logprob: -6.675403594970703
    10. ']:
' → logprob: -7.425403594970703

Token 69: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16664810478687286
    2. ':
' → logprob: -2.1666481494903564
    3. '       ' → logprob: -4.041647911071777
    4. '
' → logprob: -5.041647911071777
    5. '   ' → logprob: -5.291647911071777
    6. ' :
' → logprob: -6.291647911071777
    7. '):
' → logprob: -6.416647911071777
    8. '<|end|>' → logprob: -6.791647911071777
    9. ' ' → logprob: -7.166647911071777
    10. '):' → logprob: -7.166647911071777

Token 70: ' digits' (ID: 37806)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.335147887468338
    2. ' cnt' → logprob: -1.5851478576660156
    3. '   ' → logprob: -3.3351478576660156
    4. '       ' → logprob: -3.3351478576660156
    5. '           ' → logprob: -5.210147857666016
    6. '    ' → logprob: -7.460147857666016
    7. '	cnt' → logprob: -7.460147857666016
    8. ' ' → logprob: -7.585147857666016
    9. '[cnt' → logprob: -8.585147857666016
    10. '
' → logprob: -9.085147857666016

Token 71: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.23671570420265198
    2. '_' → logprob: -1.7367156744003296
    3. ' =' → logprob: -3.861715793609619
    4. '=' → logprob: -4.736715793609619
    5. '_s' → logprob: -6.236715793609619
    6. 'um' → logprob: -6.611715793609619
    7. 'sum' → logprob: -7.986715793609619
    8. '=_' → logprob: -8.361715316772461
    9. '=sum' → logprob: -8.486715316772461
    10. '_=' → logprob: -8.861715316772461

Token 72: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4303102493286133
    2. 'list' → logprob: -1.1803102493286133
    3. '[str' → logprob: -3.8053102493286133
    4. ' str' → logprob: -4.555310249328613
    5. ' list' → logprob: -5.555310249328613
    6. '[' → logprob: -6.180310249328613
    7. ' [' → logprob: -6.305310249328613
    8. 'digit' → logprob: -6.930310249328613
    9. '[list' → logprob: -7.180310249328613
    10. 'digits' → logprob: -10.180310249328613

Token 73: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.005298504140228033
    2. '(map' → logprob: -5.255298614501953
    3. '(' → logprob: -10.005298614501953
    4. 'str' → logprob: -11.005298614501953
    5. 'map' → logprob: -14.130298614501953
    6. '[str' → logprob: -14.255298614501953
    7. '(int' → logprob: -14.630298614501953
    8. '(x' → logprob: -15.255298614501953
    9. '=str' → logprob: -15.255298614501953
    10. '(range' → logprob: -15.755298614501953

Token 74: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005302758072502911
    2. 'x' → logprob: -7.750530242919922
    3. '(' → logprob: -9.250530242919922
    4. ' x' → logprob: -12.625530242919922
    5. ' (' → logprob: -16.750530242919922
    6. '(
' → logprob: -17.500530242919922
    7. '(abs' → logprob: -17.750530242919922
    8. '(val' → logprob: -18.000530242919922
    9. ')x' → logprob: -18.250530242919922
    10. '(int' → logprob: -18.375530242919922

Token 75: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.2532294988632202
    2. '))' → logprob: -1.5032294988632202
    3. '))
' → logprob: -7.25322961807251
    4. ' ))
' → logprob: -8.628229141235352
    5. '       ' → logprob: -9.003229141235352
    6. '   ' → logprob: -9.378229141235352
    7. ')))
' → logprob: -9.753229141235352
    8. ')))' → logprob: -10.003229141235352
    9. ' ))' → logprob: -10.753229141235352
    10. '))

' → logprob: -11.003229141235352

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02639296092092991
    2. '   ' → logprob: -4.526392936706543
    3. ')' → logprob: -4.651392936706543
    4. ' for' → logprob: -6.401392936706543
    5. '        ' → logprob: -7.276392936706543
    6. '        
' → logprob: -7.651392936706543
    7. '           ' → logprob: -7.776392936706543
    8. '
' → logprob: -7.901392936706543
    9. '    ' → logprob: -8.026392936706543
    10. 'for' → logprob: -8.026392936706543

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36936432123184204
    2. 'cnt' → logprob: -1.4943642616271973
    3. ' for' → logprob: -2.9943642616271973
    4. '       ' → logprob: -4.369364261627197
    5. '   ' → logprob: -4.494364261627197
    6. ' cnt' → logprob: -5.119364261627197
    7. 'digits' → logprob: -6.744364261627197
    8. 'i' → logprob: -7.494364261627197
    9. 'd' → logprob: -7.744364261627197
    10. 'digit' → logprob: -7.869364261627197

Token 78: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4320644438266754
    2. 'd' → logprob: -1.057064414024353
    3. ' y' → logprob: -6.807064533233643
    4. 'digit' → logprob: -7.057064533233643
    5. ' digit' → logprob: -7.682064533233643
    6. 'y' → logprob: -7.682064533233643
    7. ' ' → logprob: -8.932064056396484
    8. '_' → logprob: -9.182064056396484
    9. 'j' → logprob: -9.682064056396484
    10. ' j' → logprob: -9.682064056396484

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043496135622262955
    2. 'in' → logprob: -3.1684961318969727
    3. ' ' → logprob: -8.168496131896973
    4. 'd' → logprob: -9.543496131896973
    5. 'igits' → logprob: -10.168496131896973
    6. '  ' → logprob: -10.793496131896973
    7. '   ' → logprob: -11.168496131896973
    8. 'i' → logprob: -11.668496131896973
    9. '       ' → logprob: -11.918496131896973
    10. 's' → logprob: -11.918496131896973

Token 80: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.023788442835211754
    2. ' digits' → logprob: -3.7737884521484375
    3. 'igits' → logprob: -7.5237884521484375
    4. 'd' → logprob: -13.398788452148438
    5. '_digits' → logprob: -14.648788452148438
    6. 'Digits' → logprob: -15.523788452148438
    7. '[' → logprob: -15.773788452148438
    8. 'digit' → logprob: -15.898788452148438
    9. '   ' → logprob: -16.148788452148438
    10. ' ' → logprob: -17.023788452148438

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006915706675499678
    2. '           ' → logprob: -5.13191556930542
    3. ':
' → logprob: -8.006916046142578
    4. ' :' → logprob: -8.131916046142578
    5. '=' → logprob: -8.756916046142578
    6. 'if' → logprob: -9.881916046142578
    7. '       ' → logprob: -10.256916046142578
    8. '):' → logprob: -10.881916046142578
    9. '   ' → logprob: -11.506916046142578
    10. ':int' → logprob: -11.631916046142578

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02923162467777729
    2. '       ' → logprob: -4.154231548309326
    3. 'cnt' → logprob: -5.154231548309326
    4. ' if' → logprob: -6.029231548309326
    5. ' cnt' → logprob: -6.279231548309326
    6. 'if' → logprob: -6.404231548309326
    7. '	       ' → logprob: -7.279231548309326
    8. '   ' → logprob: -8.404232025146484
    9. '	   ' → logprob: -8.654232025146484
    10. '	cnt' → logprob: -8.779232025146484

Token 83: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.16764652729034424
    2. '           ' → logprob: -3.0426464080810547
    3. ' cnt' → logprob: -3.1676464080810547
    4. '               ' → logprob: -3.4176464080810547
    5. 'if' → logprob: -3.6676464080810547
    6. ' if' → logprob: -5.667646408081055
    7. '   ' → logprob: -6.292646408081055
    8. '	cnt' → logprob: -8.042646408081055
    9. ' ' → logprob: -8.542646408081055
    10. '       ' → logprob: -8.792646408081055

Token 84: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2258848398923874
    2. ' +=' → logprob: -1.6008847951889038
    3. '+' → logprob: -7.850884914398193
    4. ']+=' → logprob: -9.850884437561035
    5. '+=(' → logprob: -11.725884437561035
    6. '+='' → logprob: -12.350884437561035
    7. '    ' → logprob: -12.475884437561035
    8. ' +' → logprob: -12.600884437561035
    9. '=' → logprob: -12.725884437561035
    10. ' ' → logprob: -13.100884437561035

Token 85: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00014299227041192353
    2. ' int' → logprob: -8.875143051147461
    3. '1' → logprob: -13.625143051147461
    4. '   ' → logprob: -13.625143051147461
    5. 'd' → logprob: -15.125143051147461
    6. 'ord' → logprob: -16.37514305114746
    7. '<int' → logprob: -16.50014305114746
    8. '(int' → logprob: -16.50014305114746
    9. '	int' → logprob: -17.00014305114746
    10. ' ' → logprob: -17.12514305114746

Token 86: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. 'd' → logprob: -14.750027656555176
    4. ' (' → logprob: -19.375028610229492
    5. '((' → logprob: -19.875028610229492
    6. ' d' → logprob: -20.125028610229492
    7. '	d' → logprob: -20.250028610229492
    8. ')d' → logprob: -20.375028610229492
    9. '(
' → logprob: -20.875028610229492
    10. '(x' → logprob: -21.000028610229492

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013652353081852198
    2. ')
' → logprob: -7.1263651847839355
    3. '))' → logprob: -7.5013651847839355
    4. '))
' → logprob: -13.376365661621094
    5. ' )' → logprob: -13.626365661621094
    6. ')
' → logprob: -13.626365661621094
    7. ')

' → logprob: -13.876365661621094
    8. '+' → logprob: -14.251365661621094
    9. '+)' → logprob: -14.251365661621094
    10. ')))' → logprob: -14.501365661621094

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03221782669425011
    2. '
' → logprob: -3.5322177410125732
    3. '    
' → logprob: -6.532217979431152
    4. '<|end|>' → logprob: -7.907217979431152
    5. '<|end|>' → logprob: -8.907217979431152
    6. ' 
' → logprob: -9.032217979431152
    7. ' if' → logprob: -9.282217979431152
    8. '   
' → logprob: -9.532217979431152
    9. '
' → logprob: -9.782217979431152
    10. ' ' → logprob: -10.282217979431152

Token 89: ' alt' (ID: 5001)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006656757555902004
    2. '    
' → logprob: -6.131656646728516
    3. ' if' → logprob: -6.256656646728516
    4. '
' → logprob: -6.256656646728516
    5. ' 
' → logprob: -8.256656646728516
    6. 'if' → logprob: -8.881656646728516
    7. '   
' → logprob: -9.756656646728516
    8. '  
' → logprob: -10.006656646728516
    9. '        
' → logprob: -11.131656646728516
    10. '
' → logprob: -11.256656646728516

Token 90: '_sum' (ID: 29859)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.420475721359253
    2. 'sum' → logprob: -1.670475721359253
    3. '=' → logprob: -1.920475721359253
    4. 'if' → logprob: -2.045475721359253
    5. 'e' → logprob: -2.170475721359253
    6. '   ' → logprob: -2.670475721359253
    7. 's' → logprob: -3.670475721359253
    8. 'ern' → logprob: -4.045475959777832
    9. '_sum' → logprob: -4.045475959777832
    10. ' =' → logprob: -4.295475959777832

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38706517219543457
    2. ' =' → logprob: -1.1370651721954346
    3. ' +=' → logprob: -9.012064933776855
    4. '+=' → logprob: -10.512064933776855
    5. ' ' → logprob: -11.262064933776855
    6. 's' → logprob: -11.387064933776855
    7. ')' → logprob: -11.637064933776855
    8. '+' → logprob: -13.262064933776855
    9. ' ' → logprob: -13.637064933776855
    10. '_' → logprob: -13.762064933776855

Token 92: ' digit' (ID: 19181)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.40939727425575256
    2. ' a' → logprob: -2.4093973636627197
    3. ' abs' → logprob: -2.5343973636627197
    4. 'cnt' → logprob: -2.6593973636627197
    5. ' min' → logprob: -2.9093973636627197
    6. 'a' → logprob: -3.9093973636627197
    7. ' digit' → logprob: -4.534397125244141
    8. 'abs' → logprob: -5.409397125244141
    9. 'min' → logprob: -6.034397125244141
    10. 'digit' → logprob: -6.784397125244141

Token 93: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0006438109558075666
    2. '_' → logprob: -7.875643730163574
    3. '_s' → logprob: -8.500643730163574
    4. 'sum' → logprob: -10.000643730163574
    5. 's' → logprob: -12.000643730163574
    6. 'a' → logprob: -12.500643730163574
    7. '_cnt' → logprob: -13.000643730163574
    8. ' _' → logprob: -13.875643730163574
    9. ' sum' → logprob: -14.500643730163574
    10. '_a' → logprob: -15.375643730163574

Token 94: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00032044618274085224
    2. '(' → logprob: -8.125320434570312
    3. '(b' → logprob: -11.125320434570312
    4. '(i' → logprob: -12.375320434570312
    5. '(x' → logprob: -13.250320434570312
    6. '(s' → logprob: -13.625320434570312
    7. '(n' → logprob: -13.875320434570312
    8. 'a' → logprob: -15.000320434570312
    9. ' (' → logprob: -15.125320434570312
    10. '((' → logprob: -15.625320434570312

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047630914486944675
    2. ')+' → logprob: -5.379763126373291
    3. '+' → logprob: -9.254762649536133
    4. ' )' → logprob: -10.254762649536133
    5. ' +' → logprob: -12.254762649536133
    6. '+)' → logprob: -12.879762649536133
    7. '+b' → logprob: -13.254762649536133
    8. '-' → logprob: -14.379762649536133
    9. ' ' → logprob: -15.004762649536133
    10. ')
' → logprob: -15.129762649536133

Token 96: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5763161778450012
    2. '+' → logprob: -0.8263161778450012
    3. '<|end|>' → logprob: -8.076315879821777
    4. ' ' → logprob: -10.701315879821777
    5. '   ' → logprob: -11.576315879821777
    6. '-' → logprob: -11.701315879821777
    7. ' +
' → logprob: -12.076315879821777
    8. ')' → logprob: -12.076315879821777
    9. ' -' → logprob: -12.576315879821777
    10. '<|end|>' → logprob: -12.826315879821777

Token 97: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.16026850044727325
    2. ' digit' → logprob: -1.9102685451507568
    3. '   ' → logprob: -10.535268783569336
    4. '(d' → logprob: -12.160268783569336
    5. ' ' → logprob: -12.785268783569336
    6. 'd' → logprob: -13.035268783569336
    7. 'digits' → logprob: -13.285268783569336
    8. '-digit' → logprob: -13.410268783569336
    9. 'dig' → logprob: -13.785268783569336
    10. '_digit' → logprob: -14.285268783569336

Token 98: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.030941316857933998
    2. 'sum' → logprob: -3.5309412479400635
    3. 't' → logprob: -6.780941486358643
    4. 'et' → logprob: -11.030941009521484
    5. ' sum' → logprob: -11.655941009521484
    6. 'f' → logprob: -11.780941009521484
    7. 's' → logprob: -12.405941009521484
    8. '_s' → logprob: -12.655941009521484
    9. 'um' → logprob: -13.530941009521484
    10. 'g' → logprob: -13.655941009521484

Token 99: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00026419671485200524
    2. '(' → logprob: -8.250264167785645
    3. ' (' → logprob: -13.250264167785645
    4. 'b' → logprob: -14.125264167785645
    5. '(
' → logprob: -16.87526512145996
    6. '(s' → logprob: -16.87526512145996
    7. '((' → logprob: -16.87526512145996
    8. '(B' → logprob: -16.87526512145996
    9. '(a' → logprob: -17.00026512145996
    10. '(f' → logprob: -17.00026512145996

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023478863760828972
    2. ')
' → logprob: -3.7734787464141846
    3. '   ' → logprob: -8.398478507995605
    4. ')
' → logprob: -12.023478507995605
    5. ')

' → logprob: -14.398478507995605
    6. ' )' → logprob: -14.523478507995605
    7. '))' → logprob: -15.523478507995605
    8. ' ' → logprob: -16.148479461669922
    9. ')**' → logprob: -16.148479461669922
    10. ' )
' → logprob: -16.398479461669922

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004916008096188307
    2. '
' → logprob: -5.629916191101074
    3. ' if' → logprob: -7.254916191101074
    4. '<|end|>' → logprob: -8.004916191101074
    5. '    
' → logprob: -9.129916191101074
    6. '<|end|>' → logprob: -9.754916191101074
    7. 'if' → logprob: -10.129916191101074
    8. '  
' → logprob: -11.004916191101074
    9. ' 
' → logprob: -11.129916191101074
    10. ' ' → logprob: -12.129916191101074

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010749367997050285
    2. ' if' → logprob: -5.010749340057373
    3. 'if' (adapté à ' if') → logprob: -5.885749340057373
    4. '
' → logprob: -6.760749340057373
    5. '    
' → logprob: -9.510749816894531
    6. ' ' → logprob: -13.010749816894531
    7. '  ' → logprob: -13.010749816894531
    8. '  
' → logprob: -13.135749816894531
    9. '<|end|>' → logprob: -13.510749816894531
    10. ' 
' → logprob: -13.635749816894531

Token 103: ' min' (ID: 1349)
  Prédit: ' alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alt' → logprob: -0.056654833257198334
    2. ' cnt' → logprob: -2.931654930114746
    3. 'alt' → logprob: -6.806654930114746
    4. 'cnt' → logprob: -7.681654930114746
    5. ' ' → logprob: -8.806654930114746
    6. ' min' → logprob: -10.431654930114746
    7. '  ' → logprob: -11.806654930114746
    8. '(cnt' → logprob: -12.806654930114746
    9. '   ' → logprob: -12.931654930114746
    10. ' al' → logprob: -13.056654930114746

Token 104: '(cnt' (ID: 102125)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.246537173457909e-06
    2. 's' → logprob: -13.250003814697266
    3. '_sum' → logprob: -13.250003814697266
    4. 'min' → logprob: -15.625003814697266
    5. ' sum' → logprob: -16.375003814697266
    6. '(sum' → logprob: -16.500003814697266
    7. '>' → logprob: -17.000003814697266
    8. 'sup' → logprob: -17.125003814697266
    9. '```' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.250003814697266

Token 105: ',' (ID: 11)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6442786455154419
    2. ' >' → logprob: -0.7692786455154419
    3. '>' → logprob: -4.769278526306152
    4. '<' → logprob: -6.019278526306152
    5. ')' → logprob: -7.644278526306152
    6. ' ' → logprob: -8.769278526306152
    7. '   ' → logprob: -10.519278526306152
    8. ' )' → logprob: -11.769278526306152
    9. '  ' → logprob: -12.644278526306152
    10. ')>' → logprob: -12.894278526306152

Token 106: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.4289798140525818
    2. ' alt' → logprob: -1.0539798736572266
    3. 'min' → logprob: -9.303979873657227
    4. ' min' → logprob: -9.803979873657227
    5. 'alts' → logprob: -10.303979873657227
    6. ')' → logprob: -10.428979873657227
    7. '   ' → logprob: -10.678979873657227
    8. '    ' → logprob: -11.178979873657227
    9. ' ' → logprob: -11.678979873657227
    10. '  ' → logprob: -12.178979873657227

Token 107: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.01612258143723011
    2. 'sum' → logprob: -4.141122817993164
    3. 'um' → logprob: -9.391122817993164
    4. '_s' → logprob: -14.016122817993164
    5. ' sum' → logprob: -14.266122817993164
    6. 's' → logprob: -14.641122817993164
    7. ')' → logprob: -15.016122817993164
    8. 'Sum' → logprob: -15.516122817993164
    9. 'imum' → logprob: -15.641122817993164
    10. 'ut' → logprob: -15.641122817993164

Token 108: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009568131528794765
    2. ')' → logprob: -5.009568214416504
    3. '<' → logprob: -5.884568214416504
    4. ' )' → logprob: -10.134568214416504
    5. ' ' → logprob: -11.134568214416504
    6. ')<' → logprob: -12.134568214416504
    7. '   ' → logprob: -12.884568214416504
    8. '<n' → logprob: -14.134568214416504
    9. 'min' → logprob: -14.384568214416504
    10. ' <=' → logprob: -14.509568214416504

Token 109: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009882520884275436
    2. '<' → logprob: -4.63488245010376
    3. ' >=' → logprob: -10.134882926940918
    4. '   ' → logprob: -10.634882926940918
    5. ' <=' → logprob: -11.134882926940918
    6. '<|end|>' → logprob: -11.384882926940918
    7. ' ' → logprob: -12.134882926940918
    8. '<n' → logprob: -12.259882926940918
    9. ' ==' → logprob: -12.384882926940918
    10. '<int' → logprob: -12.884882926940918

Token 110: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2014407217502594
    2. ' min' → logprob: -1.701440691947937
    3. '	min' → logprob: -11.701440811157227
    4. ' mins' → logprob: -12.076440811157227
    5. 'mins' → logprob: -12.951440811157227
    6. 'ms' → logprob: -13.326440811157227
    7. '   ' → logprob: -13.326440811157227
    8. '=min' → logprob: -13.326440811157227
    9. ' ' → logprob: -13.576440811157227
    10. 'm' → logprob: -13.826440811157227

Token 111: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012393681332468987
    2. 'min' → logprob: -5.262393474578857
    3. '(min' → logprob: -6.012393474578857
    4. '_sum' → logprob: -6.262393474578857
    5. '(sum' → logprob: -6.637393474578857
    6. 's' → logprob: -6.887393474578857
    7. ' sum' → logprob: -9.637393951416016
    8. 'um' → logprob: -9.637393951416016
    9. 'umsum' → logprob: -10.137393951416016
    10. 'ms' → logprob: -10.262393951416016

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06272716820240021
    2. ':
' → logprob: -2.812727212905884
    3. '       ' → logprob: -7.562726974487305
    4. '   ' → logprob: -9.312726974487305
    5. '):' → logprob: -9.562726974487305
    6. '):
' → logprob: -10.062726974487305
    7. ' :
' → logprob: -11.937726974487305
    8. ' :' → logprob: -12.312726974487305
    9. ':

' → logprob: -12.312726974487305
    10. '<|end|>' → logprob: -12.437726974487305

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005356143694370985
    2. ' min' → logprob: -5.380356311798096
    3. '   ' → logprob: -7.505356311798096
    4. 'min' → logprob: -9.005355834960938
    5. '```' → logprob: -10.880355834960938
    6. '	min' → logprob: -11.255355834960938
    7. '           ' → logprob: -11.880355834960938
    8. '(min' → logprob: -12.130355834960938
    9. '    ' → logprob: -12.380355834960938
    10. '      ' → logprob: -12.880355834960938

Token 114: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.07534800469875336
    2. '       ' → logprob: -3.200347900390625
    3. 'min' (adapté à ' min') → logprob: -3.450347900390625
    4. '	min' → logprob: -9.950347900390625
    5. '   ' → logprob: -10.700347900390625
    6. '(min' → logprob: -12.325347900390625
    7. '           ' → logprob: -12.325347900390625
    8. ',min' → logprob: -12.825347900390625
    9. '        ' → logprob: -12.950347900390625
    10. '    ' → logprob: -12.950347900390625

Token 115: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.704273118884885e-07
    2. ' sum' → logprob: -15.250000953674316
    3. '=sum' → logprob: -16.5
    4. 's' → logprob: -17.0
    5. '<|end|>' → logprob: -17.0
    6. '  ' → logprob: -17.375
    7. ' ' → logprob: -17.5
    8. 'su' → logprob: -18.125
    9. '=' → logprob: -18.25
    10. 'sup' → logprob: -18.5

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012513418681919575
    2. '=' → logprob: -4.387513637542725
    3. ' ' → logprob: -12.887513160705566
    4. ',' → logprob: -14.887513160705566
    5. '<|end|>' → logprob: -15.387513160705566
    6. '    ' → logprob: -15.637513160705566
    7. '   ' → logprob: -16.137514114379883
    8. ' =
' → logprob: -16.762514114379883
    9. '=min' → logprob: -17.012514114379883
    10. '＝' → logprob: -17.137514114379883

Token 117: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22603434324264526
    2. ' min' → logprob: -1.60103440284729
    3. 'cnt' → logprob: -7.851034164428711
    4. ' cnt' → logprob: -8.476034164428711
    5. '[min' → logprob: -11.976034164428711
    6. '(min' → logprob: -12.101034164428711
    7. '	min' → logprob: -12.351034164428711
    8. '   ' → logprob: -13.101034164428711
    9. ' ' → logprob: -13.601034164428711
    10. '    ' → logprob: -14.351034164428711

Token 118: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.000204851632588543
    2. '(' → logprob: -8.875205039978027
    3. '(min' → logprob: -9.875205039978027
    4. 'cnt' → logprob: -11.500205039978027
    5. '(count' → logprob: -13.875205039978027
    6. '[cnt' → logprob: -14.375205039978027
    7. '(counter' → logprob: -14.875205039978027
    8. '(curr' → logprob: -14.875205039978027
    9. 'min' → logprob: -15.000205039978027
    10. '	cnt' → logprob: -15.625205039978027

Token 119: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42927300930023193
    2. ')
' → logprob: -1.429273009300232
    3. '<|end|>' → logprob: -3.0542731285095215
    4. '
' → logprob: -3.1792731285095215
    5. '       ' → logprob: -4.4292731285095215
    6. '<|end|>' → logprob: -5.1792731285095215
    7. '   ' → logprob: -6.5542731285095215
    8. ',' → logprob: -7.4292731285095215
    9. '        
' → logprob: -9.054272651672363
    10. '  
' → logprob: -9.304272651672363

Token 120: ' alt' (ID: 5001)
  Prédit: ' alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alt' → logprob: -0.5759543180465698
    2. 'alt' → logprob: -0.8259543180465698
    3. '   ' → logprob: -12.95095443725586
    4. 'min' → logprob: -12.95095443725586
    5. ' min' → logprob: -12.95095443725586
    6. ' ' → logprob: -13.20095443725586
    7. 'alts' → logprob: -13.32595443725586
    8. '    ' → logprob: -13.57595443725586
    9. '       ' → logprob: -14.45095443725586
    10. '     ' → logprob: -14.95095443725586

Token 121: '_sum' (ID: 29859)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.000273971410933882
    2. '_sum' → logprob: -8.250273704528809
    3. 'um' → logprob: -12.625273704528809
    4. ' sum' → logprob: -12.750273704528809
    5. '   ' → logprob: -13.250273704528809
    6. ')' → logprob: -13.875273704528809
    7. '       ' → logprob: -13.875273704528809
    8. 's' → logprob: -14.375273704528809
    9. 'summ' → logprob: -14.375273704528809
    10. 'sup' → logprob: -14.625273704528809

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15444329380989075
    2. '       ' → logprob: -2.0294432640075684
    3. ')
' → logprob: -4.779443264007568
    4. '   ' → logprob: -5.904443264007568
    5. '
' → logprob: -9.029443740844727
    6. '<|end|>' → logprob: -9.154443740844727
    7. ',' → logprob: -9.279443740844727
    8. '        
' → logprob: -9.779443740844727
    9. ' )' → logprob: -9.904443740844727
    10. '    
' → logprob: -11.029443740844727

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011372390436008573
    2. 'i' → logprob: -7.2511372566223145
    3. ' i' → logprob: -8.251136779785156
    4. '
' → logprob: -9.001136779785156
    5. '    
' → logprob: -10.376136779785156
    6. '	i' → logprob: -12.001136779785156
    7. '       ' → logprob: -13.626136779785156
    8. '```' → logprob: -13.751136779785156
    9. ' 
' → logprob: -14.251136779785156
    10. '<|end|>' → logprob: -14.376136779785156

Token 124: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018233293667435646
    2. 'i' (adapté à ' i') → logprob: -4.268233299255371
    3. ' i' → logprob: -5.518233299255371
    4. '
' → logprob: -10.393233299255371
    5. '    
' → logprob: -11.393233299255371
    6. '```' → logprob: -12.768233299255371
    7. '	i' → logprob: -13.393233299255371
    8. ' 
' → logprob: -14.518233299255371
    9. '\n' → logprob: -14.643233299255371
    10. '\' → logprob: -15.393233299255371

Token 125: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2213408499956131
    2. '+' → logprob: -2.0963408946990967
    3. ' +=' → logprob: -2.5963408946990967
    4. '=' → logprob: -6.971340656280518
    5. '<|end|>' → logprob: -9.846341133117676
    6. '+='' → logprob: -9.971341133117676
    7. '+="' → logprob: -10.471341133117676
    8. ' +' → logprob: -11.221341133117676
    9. ')' → logprob: -12.096341133117676
    10. '++' → logprob: -12.346341133117676

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.62502098083496
    4. '```' → logprob: -21.00002098083496
    5. '+' → logprob: -23.00002098083496
    6. '2' → logprob: -23.75002098083496
    7. '１' → logprob: -23.87502098083496
    8. '  ' → logprob: -24.12502098083496
    9. ' ' → logprob: -24.25002098083496
    10. '۱' → logprob: -24.37502098083496

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -21.25
    4. '   ' → logprob: -22.25
    5. '2' → logprob: -22.375
    6. '１' → logprob: -22.625
    7. '۱' → logprob: -23.25
    8. '+' → logprob: -23.3125
    9. '10' → logprob: -24.0625
    10. '0' → logprob: -24.125

Token 128: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.018152866512537003
    2. '(' → logprob: -4.018152713775635
    3. '()' → logprob: -14.143153190612793
    4. 'min' → logprob: -14.768153190612793
    5. '(max' → logprob: -14.768153190612793
    6. '(m' → logprob: -15.018153190612793
    7. '(sum' → logprob: -15.518153190612793
    8. ' (' → logprob: -15.643153190612793
    9. '('' → logprob: -15.643153190612793
    10. '("("' → logprob: -15.768153190612793

Token 131: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -14.500000953674316
    3. '(sum' → logprob: -16.125
    4. 'min' → logprob: -17.125
    5. 's' → logprob: -17.5
    6. 'su' → logprob: -20.0
    7. '(' → logprob: -20.0
    8. ' sum' → logprob: -20.375
    9. '(s' → logprob: -21.125
    10. '(min' → logprob: -21.625

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.375000953674316
    3. '))' → logprob: -16.0
    4. ')`' → logprob: -16.125
    5. ' )' → logprob: -17.125
    6. '`)' → logprob: -18.125
    7. ')}' → logprob: -18.375
    8. '')' → logprob: -18.75
    9. ')#' → logprob: -19.0
    10. ')**' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 39.23%
Précision adaptée (1ère position): 40.77%
Précision (top 10): 78.46%
================================================================================
