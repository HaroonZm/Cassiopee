================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:00:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from itertools import permutations, chain, groupby

def side(p1, p2):
    global D
    y1, x1 = p1
    dy = p2[0] - y1
    dx = p2[1] - x1

    predicate = lambda p3: p1 == p3 or p2 == p3 or (p3[1] - x1) * dy - dx * (p3[0] - y1) >= 0
    verdicts = list(map(predicate, reversed(D)))
    return int(all(verdicts))

def consume_first(iterable):
    # Remove first item and return it and remainder
    item = next(iterable)
    return item, list(iterable)

def input_points(n):
    # List comprehension within map to allow arbitrary manipulation
    return sorted(list(map(lambda _: list(input()), range(n))))

def mainloop():
    while True:
        n = input()
        if n == 0: break
        global D
        D = input_points(n)
        p = p1 = D[0]
        D1 = D[:]
        # Rope in recursion for procedural style
        def trampoline(p1, D1, anchor):
            # Wrap whole process in list iterator
            def finder():
                return filter(lambda pp: p1 != pp and side(p1, pp), D1)
            found = next(finder(), None)
            if found is not None:
                D1.remove(found)
                if found == anchor:
                    return len(D1)
                return trampoline(found, D1, anchor)
            else:
                return len(D1)
        print(trampoline(p1, D1, p))
mainloop()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.018294736742973328
    2. 'import' → logprob: -4.143294811248779
    3. 'os' → logprob: -6.518294811248779
    4. 'from' → logprob: -7.893294811248779
    5. 'sys' → logprob: -8.518294334411621
    6. ' as' → logprob: -9.893294334411621
    7. '```' → logprob: -10.143294334411621
    8. 'numpy' → logprob: -10.268294334411621
    9. 'As' → logprob: -11.268294334411621
    10. 'newline' → logprob: -11.268294334411621

Token 4: ' functools' (ID: 142636)
  Prédit: 'datetime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'datetime' → logprob: -1.4410321712493896
    2. 'import' → logprob: -1.5660321712493896
    3. ' datetime' → logprob: -1.6910321712493896
    4. ' import' → logprob: -1.8160321712493896
    5. 'os' → logprob: -3.0660321712493896
    6. ' os' → logprob: -3.9410321712493896
    7. 'time' → logprob: -4.191032409667969
    8. 'P' → logprob: -4.441032409667969
    9. ' pathlib' → logprob: -4.816032409667969
    10. ' .' → logprob: -4.941032409667969

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01105206273496151
    2. ' import' → logprob: -4.511052131652832
    3. '```' → logprob: -13.636052131652832
    4. '-import' → logprob: -13.761052131652832
    5. '	import' → logprob: -14.511052131652832
    6. 'from' → logprob: -14.761052131652832
    7. '.import' → logprob: -14.886052131652832
    8. 'Import' → logprob: -15.386052131652832
    9. ''import' → logprob: -15.511052131652832
    10. '_import' → logprob: -16.511051177978516

Token 6: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002755307126790285
    2. 'wrap' → logprob: -6.627755165100098
    3. 'partial' → logprob: -7.252755165100098
    4. 'reduce' → logprob: -7.877755165100098
    5. 'cache' → logprob: -8.377755165100098
    6. 'cached' → logprob: -10.127755165100098
    7. 'import' → logprob: -10.127755165100098
    8. 'cmp' → logprob: -11.377755165100098
    9. ' l' → logprob: -12.252755165100098
    10. '@' → logprob: -12.377755165100098

Token 7: '
' (ID: 198)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.08231759816408157
    2. 'import' → logprob: -2.582317590713501
    3. ' as' → logprob: -6.08231782913208
    4. '```' → logprob: -8.332317352294922
    5. 'def' → logprob: -8.707317352294922
    6. 'from' → logprob: -9.082317352294922
    7. ',' → logprob: -9.332317352294922
    8. 'sys' → logprob: -9.332317352294922
    9. '<|end|>' → logprob: -9.457317352294922
    10. 'As' → logprob: -9.582317352294922

Token 8: 'from' (ID: 2845)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.05229175090789795
    2. 'import' → logprob: -3.0522918701171875
    3. ' as' → logprob: -6.5522918701171875
    4. 'def' → logprob: -7.3022918701171875
    5. '```' → logprob: -7.5522918701171875
    6. 'print' → logprob: -8.052291870117188
    7. 'from' → logprob: -8.927291870117188
    8. 'As' → logprob: -9.177291870117188
    9. 'numpy' → logprob: -9.427291870117188
    10. 'sys' → logprob: -9.552291870117188

Token 9: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4120729863643646
    2. ' operator' → logprob: -1.412073016166687
    3. ' typing' → logprob: -3.2870728969573975
    4. ' math' → logprob: -3.9120728969573975
    5. ' import' → logprob: -4.662073135375977
    6. 'operator' → logprob: -4.787073135375977
    7. ' collections' → logprob: -5.287073135375977
    8. 'math' → logprob: -5.412073135375977
    9. 'typing' → logprob: -5.787073135375977
    10. 'collections' → logprob: -6.162073135375977

Token 10: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0019289902411401272
    2. ' import' → logprob: -6.251928806304932
    3. '.import' → logprob: -15.12692928314209
    4. '-import' → logprob: -16.876928329467773
    5. '	import' → logprob: -17.251928329467773
    6. 'Import' → logprob: -18.126928329467773
    7. '_import' → logprob: -18.751928329467773
    8. ''import' → logprob: -18.876928329467773
    9. '进口' → logprob: -19.126928329467773
    10. ' импорт' → logprob: -19.251928329467773

Token 11: ' permutations' (ID: 174595)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.5145531296730042
    2. 'com' → logprob: -1.7645530700683594
    3. 'product' → logprob: -2.2645530700683594
    4. 'cycle' → logprob: -2.7645530700683594
    5. 'count' → logprob: -2.8895530700683594
    6. 'zip' → logprob: -5.264553070068359
    7. 'comb' → logprob: -6.514553070068359
    8. 'compress' → logprob: -7.014553070068359
    9. 'group' → logprob: -8.88955307006836
    10. 'combine' → logprob: -9.01455307006836

Token 12: ',' (ID: 11)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.4475669860839844
    2. 'def' → logprob: -1.8225669860839844
    3. 'import' → logprob: -1.8225669860839844
    4. '#' → logprob: -4.322566986083984
    5. '<|end|>' → logprob: -4.947566986083984
    6. 'from' → logprob: -5.322566986083984
    7. ',' → logprob: -5.447566986083984
    8. ' as' → logprob: -5.572566986083984
    9. 'print' → logprob: -7.197566986083984
    10. 'class' → logprob: -7.697566986083984

Token 13: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.005750913638621569
    2. 'product' → logprob: -5.380751132965088
    3. 'comb' → logprob: -7.130751132965088
    4. 'chain' → logprob: -8.38075065612793
    5. 'cycle' → logprob: -9.50575065612793
    6. ' combinations' → logprob: -11.88075065612793
    7. 'group' → logprob: -12.38075065612793
    8. 'zip' → logprob: -12.75575065612793
    9. 'combine' → logprob: -13.25575065612793
    10. 'count' → logprob: -13.38075065612793

Token 14: ',' (ID: 11)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.3417660892009735
    2. 'import' → logprob: -2.091766119003296
    3. '<|end|>' → logprob: -2.591766119003296
    4. 'def' → logprob: -2.966766119003296
    5. ',' → logprob: -4.216765880584717
    6. ' as' → logprob: -4.466765880584717
    7. '#' → logprob: -5.841765880584717
    8. 'from' → logprob: -5.966765880584717
    9. ' ' → logprob: -6.466765880584717
    10. '__' → logprob: -6.841765880584717

Token 15: ' group' (ID: 3566)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.05066464841365814
    2. 'product' → logprob: -3.0506646633148193
    3. 'cycle' → logprob: -6.80066442489624
    4. 'comb' → logprob: -7.67566442489624
    5. 'zip' → logprob: -8.050664901733398
    6. 'repeat' → logprob: -10.050664901733398
    7. 'count' → logprob: -10.800664901733398
    8. '.product' → logprob: -10.800664901733398
    9. 'is' → logprob: -10.800664901733398
    10. ' combinations' → logprob: -11.175664901733398

Token 16: 'by' (ID: 2345)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.26361826062202454
    2. 'import' → logprob: -1.6386182308197021
    3. ',' → logprob: -3.513618230819702
    4. 'from' → logprob: -5.763618469238281
    5. ' as' → logprob: -6.138618469238281
    6. 'def' → logprob: -6.888618469238281
    7. '<|end|>' → logprob: -7.763618469238281
    8. '#' → logprob: -8.138618469238281
    9. '```' → logprob: -9.013618469238281
    10. 'As' → logprob: -9.013618469238281

Token 17: '

' (ID: 279)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.054918281733989716
    2. 'import' → logprob: -3.3049182891845703
    3. ' as' → logprob: -5.05491828918457
    4. '<|end|>' → logprob: -5.30491828918457
    5. 'def' → logprob: -5.92991828918457
    6. ',' → logprob: -7.17991828918457
    7. 'from' → logprob: -7.42991828918457
    8. '#' → logprob: -8.42991828918457
    9. 'As' → logprob: -8.42991828918457
    10. '__' → logprob: -8.55491828918457

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.035639647394418716
    2. '#' → logprob: -4.660639762878418
    3. 'class' → logprob: -4.785639762878418
    4. '<|end|>' → logprob: -5.160639762878418
    5. 'import' → logprob: -5.410639762878418
    6. '__' → logprob: -6.160639762878418
    7. 'as' → logprob: -6.160639762878418
    8. 'from' → logprob: -6.910639762878418
    9. 'print' → logprob: -7.410639762878418
    10. 'sys' → logprob: -8.285639762878418

Token 19: ' side' (ID: 4307)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'my' → logprob: -1.0977059602737427
    2. 'f' → logprob: -2.222705841064453
    3. 'function' → logprob: -2.222705841064453
    4. ' my' → logprob: -2.347705841064453
    5. 'calculate' → logprob: -2.472705841064453
    6. 'def' → logprob: -2.597705841064453
    7. 'process' → logprob: -3.097705841064453
    8. 'func' → logprob: -3.347705841064453
    9. 'generate' → logprob: -4.097705841064453
    10. ' func' → logprob: -4.597705841064453

Token 20: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.563011646270752
    2. '_length' → logprob: -1.438011646270752
    3. '(_:' → logprob: -2.938011646270752
    4. '_' → logprob: -3.563011646270752
    5. '():
' → logprob: -4.313011646270752
    6. '(' → logprob: -4.563011646270752
    7. '_lengths' → logprob: -4.563011646270752
    8. '_e' → logprob: -4.813011646270752
    9. '(:' → logprob: -5.188011646270752
    10. 'e' → logprob: -5.188011646270752

Token 21: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11081046611070633
    2. 'aram' → logprob: -2.6108105182647705
    3. '):
' → logprob: -4.360810279846191
    4. ':' → logprob: -4.860810279846191
    5. 'oint' → logprob: -5.360810279846191
    6. 'ar' → logprob: -6.610810279846191
    7. ')' → logprob: -6.860810279846191
    8. 'oints' → logprob: -6.860810279846191
    9. 'def' → logprob: -7.360810279846191
    10. '):

' → logprob: -7.485810279846191

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03475313261151314
    2. '):' → logprob: -3.4097530841827393
    3. ',p' → logprob: -7.784753322601318
    4. '):
' → logprob: -7.909753322601318
    5. ':' → logprob: -8.28475284576416
    6. '):

' → logprob: -10.90975284576416
    7. ')' → logprob: -11.03475284576416
    8. 'def' → logprob: -11.03475284576416
    9. '，' → logprob: -12.78475284576416
    10. '),' → logprob: -13.03475284576416

Token 23: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.250000953674316
    3. '	p' → logprob: -21.0
    4. ')p' → logprob: -21.75
    5. ',p' → logprob: -21.75
    6. '(p' → logprob: -22.25
    7. ',' → logprob: -22.75
    8. ' п' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. '_p' → logprob: -23.125

Token 24: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003940194379538298
    2. 'oints' → logprob: -5.878940105438232
    3. 'oint' → logprob: -7.503940105438232
    4. '2' → logprob: -8.50394058227539
    5. '_' → logprob: -9.75394058227539
    6. '):' → logprob: -9.75394058227539
    7. '[' → logprob: -10.25394058227539
    8. '):
' → logprob: -10.50394058227539
    9. ')' → logprob: -10.62894058227539
    10. ':' → logprob: -10.75394058227539

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004386321175843477
    2. '):
' → logprob: -5.5043864250183105
    3. '):

' → logprob: -9.004385948181152
    4. ',' → logprob: -9.629385948181152
    5. ')' → logprob: -9.754385948181152
    6. '   ' → logprob: -10.379385948181152
    7. ')):' → logprob: -11.254385948181152
    8. '):
' → logprob: -11.629385948181152
    9. ''):' → logprob: -12.629385948181152
    10. '"):' → logprob: -13.504385948181152

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.472211968386546e-05
    2. 'pass' → logprob: -9.500094413757324
    3. 'return' → logprob: -11.500094413757324
    4. '  ' → logprob: -12.250094413757324
    5. ' ' → logprob: -13.625094413757324
    6. ' pass' → logprob: -13.750094413757324
    7. '   ' → logprob: -14.375094413757324
    8. '```' → logprob: -14.500094413757324
    9. '    ' → logprob: -14.750094413757324
    10. '	pass' → logprob: -15.125094413757324

Token 27: ' global' (ID: 5466)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.607366144657135
    2. '   ' → logprob: -0.857366144657135
    3. 'pass' → logprob: -3.4823660850524902
    4. ' return' → logprob: -9.232366561889648
    5. '	return' → logprob: -10.732366561889648
    6. '#' → logprob: -10.732366561889648
    7. ' pass' → logprob: -11.482366561889648
    8. ' ' → logprob: -11.607366561889648
    9. '  ' → logprob: -11.732366561889648
    10. '"""' → logprob: -12.232366561889648

Token 28: ' D' (ID: 415)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.4059083163738251
    2. 's' → logprob: -1.6559083461761475
    3. 'sys' → logprob: -2.9059083461761475
    4. 'p' → logprob: -4.655908107757568
    5. 'points' → logprob: -4.905908107757568
    6. 'state' → logprob: -5.030908107757568
    7. 'point' → logprob: -5.280908107757568
    8. 'data' → logprob: -5.530908107757568
    9. 'current' → logprob: -5.530908107757568
    10. 'players' → logprob: -5.530908107757568

Token 29: '
' (ID: 198)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.22875189781188965
    2. '   ' → logprob: -1.6037518978118896
    3. ' ' → logprob: -7.353752136230469
    4. 'global' → logprob: -7.478752136230469
    5. ':' → logprob: -7.728752136230469
    6. '=' → logprob: -7.853752136230469
    7. '  ' → logprob: -7.853752136230469
    8. 'E' → logprob: -8.228752136230469
    9. ' =' → logprob: -8.478752136230469
    10. '    ' → logprob: -9.103752136230469

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020586498081684113
    2. 'D' → logprob: -3.8955864906311035
    3. ' D' → logprob: -10.645586967468262
    4. '  ' → logprob: -11.145586967468262
    5. ' ' → logprob: -12.395586967468262
    6. '	D' → logprob: -14.145586967468262
    7. '    ' → logprob: -14.520586967468262
    8. 'pass' → logprob: -15.645586967468262
    9. '   ' → logprob: -15.770586967468262
    10. '```' → logprob: -16.020586013793945

Token 31: ' y' (ID: 342)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.25194624066352844
    2. '   ' → logprob: -1.501946210861206
    3. '  ' → logprob: -12.001946449279785
    4. ' D' → logprob: -12.126946449279785
    5. ' ' → logprob: -12.626946449279785
    6. 'pass' → logprob: -13.876946449279785
    7. '	D' → logprob: -14.876946449279785
    8. '```' → logprob: -15.501946449279785
    9. 'global' → logprob: -15.751946449279785
    10. '    ' → logprob: -15.876946449279785

Token 32: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0333844423294067
    2. 'ield' → logprob: -1.2833844423294067
    3. '   ' → logprob: -1.5333844423294067
    4. ' =' → logprob: -2.283384323120117
    5. 'def' → logprob: -3.283384323120117
    6. ' ' → logprob: -6.033384323120117
    7. 'ields' → logprob: -6.408384323120117
    8. 'D' → logprob: -6.658384323120117
    9. '  ' → logprob: -6.783384323120117
    10. '+=' → logprob: -7.408384323120117

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49793893098831177
    2. '=' → logprob: -1.247938871383667
    3. '   ' → logprob: -3.122938871383667
    4. ' =' → logprob: -3.747938871383667
    5. '1' → logprob: -4.247939109802246
    6. ':' → logprob: -4.497939109802246
    7. 'D' → logprob: -4.997939109802246
    8. 'd' → logprob: -6.497939109802246
    9. ' ' → logprob: -7.372939109802246
    10. 'def' → logprob: -7.747939109802246

Token 34: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.721228368813172e-05
    2. ' y' → logprob: -10.125086784362793
    3. 'p' → logprob: -10.250086784362793
    4. 'x' → logprob: -11.625086784362793
    5. '   ' → logprob: -13.000086784362793
    6. ' ' → logprob: -16.00008773803711
    7. 'd' → logprob: -16.62508773803711
    8. '	y' → logprob: -16.87508773803711
    9. '  ' → logprob: -17.00008773803711
    10. '(y' → logprob: -17.00008773803711

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003054301778320223
    2. '[' → logprob: -8.12530517578125
    3. '2' → logprob: -12.75030517578125
    4. 'def' → logprob: -13.50030517578125
    5. 'y' → logprob: -13.50030517578125
    6. '0' → logprob: -14.25030517578125
    7. '_' → logprob: -14.37530517578125
    8. '[y' → logprob: -14.50030517578125
    9. ' ' → logprob: -14.75030517578125
    10. '１' → logprob: -15.25030517578125

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004554965533316135
    2. ' =' → logprob: -5.629554748535156
    3. ',' → logprob: -7.004554748535156
    4. 'def' → logprob: -11.879554748535156
    5. '   ' → logprob: -12.254554748535156
    6. '=y' → logprob: -12.254554748535156
    7. '=D' → logprob: -12.379554748535156
    8. '=x' → logprob: -12.629554748535156
    9. '=`' → logprob: -12.754554748535156
    10. 'D' → logprob: -12.754554748535156

Token 37: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00029637437546625733
    2. ' p' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.750296592712402
    4. 'D' → logprob: -16.250295639038086
    5. ' ' → logprob: -17.250295639038086
    6. '(p' → logprob: -18.125295639038086
    7. '	p' → logprob: -18.250295639038086
    8. ' п' → logprob: -19.125295639038086
    9. '  ' → logprob: -19.500295639038086
    10. 'side' → logprob: -19.750295639038086

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3596853831550106e-05
    2. '[' → logprob: -9.875053405761719
    3. 'oints' → logprob: -13.875053405761719
    4. '2' → logprob: -14.000053405761719
    5. '１' → logprob: -16.50005340576172
    6. 'oint' → logprob: -16.75005340576172
    7. '(' → logprob: -17.25005340576172
    8. 'e' → logprob: -17.50005340576172
    9. '_' → logprob: -17.50005340576172
    10. '```' → logprob: -17.50005340576172

Token 39: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18904301524162292
    2. ',' → logprob: -1.8140430450439453
    3. '   ' → logprob: -5.189043045043945
    4. ',y' → logprob: -6.439043045043945
    5. 'y' → logprob: -6.689043045043945
    6. 'D' → logprob: -7.814043045043945
    7. '=' → logprob: -9.314043045043945
    8. '.y' → logprob: -9.814043045043945
    9. ' =' → logprob: -10.064043045043945
    10. 'def' → logprob: -10.439043045043945

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9623810658231378e-05
    2. 'y' → logprob: -11.000020027160645
    3. '  ' → logprob: -13.250020027160645
    4. ' ' → logprob: -14.875020027160645
    5. '       ' → logprob: -14.875020027160645
    6. ',' → logprob: -15.625020027160645
    7. '    ' → logprob: -16.000019073486328
    8. ' y' → logprob: -16.750019073486328
    9. 'D' → logprob: -17.000019073486328
    10. '	y' → logprob: -17.000019073486328

Token 41: ' dy' (ID: 11996)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20143623650074005
    2. '   ' → logprob: -1.7014362812042236
    3. 'x' → logprob: -11.451436042785645
    4. 'D' → logprob: -12.451436042785645
    5. '  ' → logprob: -13.076436042785645
    6. ' y' → logprob: -13.201436042785645
    7. 'p' → logprob: -13.701436042785645
    8. ' ' → logprob: -13.826436042785645
    9. '	y' → logprob: -13.826436042785645
    10. '       ' → logprob: -14.326436042785645

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.656379759311676
    2. '=' → logprob: -0.781379759311676
    3. ',' → logprob: -4.156379699707031
    4. '   ' → logprob: -4.906379699707031
    5. ' ' → logprob: -8.656379699707031
    6. '=y' → logprob: -9.406379699707031
    7. '=d' → logprob: -9.656379699707031
    8. '  ' → logprob: -10.406379699707031
    9. '1' → logprob: -11.031379699707031
    10. '=-' → logprob: -11.531379699707031

Token 43: ' p' (ID: 275)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3886483311653137
    2. 'p' → logprob: -1.138648271560669
    3. 'y' → logprob: -7.513648509979248
    4. '   ' → logprob: -8.01364803314209
    5. 'sys' → logprob: -8.26364803314209
    6. ' D' → logprob: -8.38864803314209
    7. ' p' → logprob: -8.63864803314209
    8. 'x' → logprob: -8.76364803314209
    9. '0' → logprob: -10.51364803314209
    10. ' ' → logprob: -10.88864803314209

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06317972391843796
    2. '1' → logprob: -2.9381797313690186
    3. '[' → logprob: -4.8131794929504395
    4. '-' → logprob: -10.438179969787598
    5. '_' → logprob: -10.813179969787598
    6. '=' → logprob: -10.938179969787598
    7. 'ar' → logprob: -11.313179969787598
    8. 'oint' → logprob: -12.063179969787598
    9. '```' → logprob: -12.188179969787598
    10. 'D' → logprob: -12.313179969787598

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -13.375003814697266
    3. '[y' → logprob: -13.875003814697266
    4. '(' → logprob: -15.250003814697266
    5. '1' → logprob: -15.500003814697266
    6. '\[' → logprob: -16.000003814697266
    7. 'y' → logprob: -16.375003814697266
    8. '```' → logprob: -16.625003814697266
    9. '[i' → logprob: -17.125003814697266
    10. '\' → logprob: -17.250003814697266

Token 46: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692926824092865
    2. '0' → logprob: -2.12692928314209
    3. '2' → logprob: -14.25192928314209
    4. 'y' → logprob: -16.126928329467773
    5. '[' → logprob: -16.126928329467773
    6. ' ' → logprob: -16.251928329467773
    7. '-' → logprob: -16.626928329467773
    8. '```' → logprob: -17.126928329467773
    9. '][' → logprob: -17.126928329467773
    10. '3' → logprob: -17.501928329467773

Token 47: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005975929088890553
    2. ']' → logprob: -7.5005974769592285
    3. '[' → logprob: -10.250597953796387
    4. '],' → logprob: -12.250597953796387
    5. ']][' → logprob: -13.375597953796387
    6. ']+' → logprob: -14.000597953796387
    7. '],[' → logprob: -14.250597953796387
    8. ')][' → logprob: -14.625597953796387
    9. ''][' → logprob: -15.000597953796387
    10. '].' → logprob: -15.875597953796387

Token 48: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4577923119068146
    2. '-' → logprob: -1.0827922821044922
    3. 'y' → logprob: -4.332792282104492
    4. 'D' → logprob: -4.707792282104492
    5. ',' → logprob: -6.332792282104492
    6. '[' → logprob: -6.957792282104492
    7. '1' → logprob: -7.207792282104492
    8. '#' → logprob: -7.457792282104492
    9. ' -' → logprob: -7.457792282104492
    10. 'global' → logprob: -7.707792282104492

Token 49: ' y' (ID: 342)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002738185692578554
    2. 'y' → logprob: -6.002737998962402
    3. ' p' → logprob: -8.252737998962402
    4. 'x' → logprob: -13.877737998962402
    5. ' y' → logprob: -13.877737998962402
    6. ' ' → logprob: -17.87773895263672
    7. '   ' → logprob: -18.12773895263672
    8. 'py' → logprob: -18.37773895263672
    9. ' п' → logprob: -19.00273895263672
    10. '	p' → logprob: -19.25273895263672

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001972288591787219
    2. '2' → logprob: -6.626972198486328
    3. '   ' → logprob: -7.376972198486328
    4. ' ' → logprob: -11.501972198486328
    5. '  ' → logprob: -12.876972198486328
    6. 'y' → logprob: -12.876972198486328
    7. '    ' → logprob: -13.626972198486328
    8. '[' → logprob: -14.001972198486328
    9. 'i' → logprob: -14.501972198486328
    10. '-' → logprob: -14.501972198486328

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8312570318812504e-05
    2. '       ' → logprob: -12.500018119812012
    3. 'x' → logprob: -12.625018119812012
    4. '  ' → logprob: -12.625018119812012
    5. 'return' → logprob: -12.625018119812012
    6. ' ' → logprob: -13.625018119812012
    7. '```' → logprob: -14.125018119812012
    8. '    
' → logprob: -14.375018119812012
    9. '
' → logprob: -14.750018119812012
    10. '\' → logprob: -15.000018119812012

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.512236498361744e-07
    2. '  ' → logprob: -15.000000953674316
    3. '       ' → logprob: -16.125
    4. 'y' → logprob: -17.5
    5. ' ' → logprob: -18.0
    6. '    ' → logprob: -18.125
    7. 'x' → logprob: -18.625
    8. '    
' → logprob: -19.875
    9. '	' → logprob: -20.0
    10. 'd' → logprob: -20.0

Token 53: ' dx' (ID: 29472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038088999688625336
    2. 'x' → logprob: -3.2880890369415283
    3. 'dx' (adapté à ' dx') → logprob: -10.78808879852295
    4. 'y' → logprob: -12.03808879852295
    5. '       ' → logprob: -12.28808879852295
    6. '  ' → logprob: -12.28808879852295
    7. 'd' → logprob: -12.53808879852295
    8. '=x' → logprob: -13.03808879852295
    9. '=' → logprob: -13.66308879852295
    10. '           ' → logprob: -14.03808879852295

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269361972808838
    2. ' =' → logprob: -2.126936197280884
    3. '   ' → logprob: -12.126935958862305
    4. ' ' → logprob: -13.501935958862305
    5. '=p' → logprob: -14.126935958862305
    6. '  ' → logprob: -16.001935958862305
    7. '1' → logprob: -16.626935958862305
    8. '=y' → logprob: -16.626935958862305
    9. '＝' → logprob: -16.876935958862305
    10. '=(' → logprob: -17.001935958862305

Token 55: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01416350994259119
    2. ' p' → logprob: -4.264163494110107
    3. ' п' → logprob: -17.389163970947266
    4. '	p' → logprob: -17.639163970947266
    5. '(p' → logprob: -18.764163970947266
    6. '   ' → logprob: -18.889163970947266
    7. ' ' → logprob: -18.889163970947266
    8. ' ' → logprob: -19.889163970947266
    9. ' پ' → logprob: -20.264163970947266
    10. '_p' → logprob: -20.639163970947266

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39273419976234436
    2. '[' → logprob: -1.142734169960022
    3. '1' → logprob: -5.142734050750732
    4. '_' → logprob: -13.14273452758789
    5. '₂' → logprob: -14.01773452758789
    6. '(' → logprob: -14.51773452758789
    7. '_[' → logprob: -15.14273452758789
    8. '２' → logprob: -15.64273452758789
    9. '[]' → logprob: -16.01773452758789
    10. '()[' → logprob: -16.51773452758789

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '\[' → logprob: -15.5
    3. '[x' → logprob: -18.125
    4. ''[' → logprob: -18.625
    5. '_[' → logprob: -19.75
    6. '[
' → logprob: -19.875
    7. '][' → logprob: -20.125
    8. '(' → logprob: -20.375
    9. '()[' → logprob: -20.375
    10. '[i' → logprob: -20.625

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.50001049041748
    3. ' ' → logprob: -12.62501049041748
    4. '   ' → logprob: -13.25001049041748
    5. '１' → logprob: -14.87501049041748
    6. '١' → logprob: -15.62501049041748
    7. '۱' → logprob: -15.87501049041748
    8. '  ' → logprob: -15.87501049041748
    9. '(' → logprob: -16.250009536743164
    10. '१' → logprob: -16.375009536743164

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020704446360468864
    2. '][' → logprob: -6.252070426940918
    3. ']-' → logprob: -9.127070426940918
    4. '].' → logprob: -11.002070426940918
    5. '];' → logprob: -12.502070426940918
    6. ']}' → logprob: -13.252070426940918
    7. ']
' → logprob: -13.377070426940918
    8. ' ]' → logprob: -13.502070426940918
    9. '])' → logprob: -14.002070426940918
    10. ']=' → logprob: -14.252070426940918

Token 60: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.580929347255733e-05
    2. ' -' → logprob: -11.750016212463379
    3. '-x' → logprob: -11.750016212463379
    4. '-y' → logprob: -17.875015258789062
    5. '   ' → logprob: -18.375015258789062
    6. '−' → logprob: -18.750015258789062
    7. '-d' → logprob: -19.250015258789062
    8. '-X' → logprob: -20.125015258789062
    9. 'x' → logprob: -20.500015258789062
    10. ' ' → logprob: -20.625015258789062

Token 61: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.25
    3. '_x' → logprob: -24.25
    4. '	x' → logprob: -24.625
    5. '"x' → logprob: -25.0
    6. '$x' → logprob: -25.0
    7. '.x' → logprob: -25.5
    8. '(x' → logprob: -26.875
    9. ')x' → logprob: -27.0
    10. '-x' → logprob: -27.0

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. '2' → logprob: -11.500017166137695
    3. '[' → logprob: -12.000017166137695
    4. '１' → logprob: -14.375017166137695
    5. '0' → logprob: -15.500017166137695
    6. ' ' → logprob: -16.625017166137695
    7. '\xe2\x82' → logprob: -16.875017166137695
    8. '(' → logprob: -17.375017166137695
    9. 'y' → logprob: -17.750017166137695
    10. '[i' → logprob: -17.875017166137695

Token 63: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.696889623621246e-06
    2. '    
' → logprob: -13.37500286102295
    3. '  ' → logprob: -14.75000286102295
    4. 'D' → logprob: -14.87500286102295
    5. '       ' → logprob: -15.50000286102295
    6. 'return' → logprob: -16.000001907348633
    7. '    ' → logprob: -16.750001907348633
    8. ' ' → logprob: -17.250001907348633
    9. '
' → logprob: -18.375001907348633
    10. '	return' → logprob: -18.750001907348633

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.896309739408025e-07
    2. 'return' → logprob: -14.625000953674316
    3. '  ' → logprob: -15.875000953674316
    4. '       ' → logprob: -16.375
    5. '    ' → logprob: -18.5
    6. ' ' → logprob: -18.75
    7. '	return' → logprob: -18.875
    8. 'D' → logprob: -19.125
    9. ' return' → logprob: -20.0
    10. '   ' → logprob: -20.25

Token 65: ' predicate' (ID: 53558)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03449772298336029
    2. '   ' → logprob: -3.7844977378845215
    3. 'D' → logprob: -4.5344977378845215
    4. 'if' → logprob: -8.659497261047363
    5. 'result' → logprob: -9.659497261047363
    6. 'd' → logprob: -9.909497261047363
    7. 's' → logprob: -10.159497261047363
    8. 'sign' → logprob: -10.784497261047363
    9. 'area' → logprob: -11.034497261047363
    10. 'direction' → logprob: -11.284497261047363

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005314985755831003
    2. ' =' → logprob: -5.255314826965332
    3. '=lambda' → logprob: -9.755314826965332
    4. '   ' → logprob: -11.630314826965332
    5. 'def' → logprob: -11.630314826965332
    6. '=`' → logprob: -13.005314826965332
    7. '=(' → logprob: -14.255314826965332
    8. '=d' → logprob: -14.880314826965332
    9. 'return' → logprob: -15.255314826965332
    10. ':' → logprob: -15.630314826965332

Token 67: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.26391053199768066
    2. 'dy' → logprob: -2.3889105319976807
    3. 'abs' → logprob: -2.7639105319976807
    4. 'dx' → logprob: -2.8889105319976807
    5. '(lambda' → logprob: -4.388910293579102
    6. '(dx' → logprob: -5.263910293579102
    7. ' dy' → logprob: -6.263910293579102
    8. '   ' → logprob: -7.263910293579102
    9. '(' → logprob: -7.388910293579102
    10. ' dx' → logprob: -8.638910293579102

Token 68: ' p' (ID: 275)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010146893560886383
    2. 'x' → logprob: -5.2601470947265625
    3. 'p' → logprob: -5.3851470947265625
    4. ':p' → logprob: -8.760147094726562
    5. 'lambda' → logprob: -10.260147094726562
    6. 'd' → logprob: -11.135147094726562
    7. 'a' → logprob: -11.385147094726562
    8. 'dx' → logprob: -11.635147094726562
    9. 'predicate' → logprob: -11.885147094726562
    10. '   ' → logprob: -12.010147094726562

Token 69: '3' (ID: 18)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -4.000763510703109e-05
    2. '   ' → logprob: -11.125040054321289
    3. ' :' → logprob: -12.125040054321289
    4. ':(' → logprob: -12.875040054321289
    5. 'redicate' → logprob: -13.000040054321289
    6. '):' → logprob: -13.250040054321289
    7. ':
' → logprob: -13.250040054321289
    8. ':return' → logprob: -13.500040054321289
    9. ':p' → logprob: -13.625040054321289
    10. 'redict' → logprob: -14.000040054321289

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9361264946837764e-07
    2. ':(' → logprob: -17.0
    3. '):' → logprob: -17.25
    4. ':return' → logprob: -17.5
    5. ' :' → logprob: -18.25
    6. ':`' → logprob: -18.375
    7. ':def' → logprob: -19.5
    8. ':x' → logprob: -19.625
    9. ':p' → logprob: -19.875
    10. '   ' → logprob: -20.375

Token 71: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8342779874801636
    2. 'p' → logprob: -1.0842779874801636
    3. '(' → logprob: -3.084278106689453
    4. 'abs' → logprob: -3.209278106689453
    5. 'dy' → logprob: -3.334278106689453
    6. ' dy' → logprob: -3.584278106689453
    7. ' (' → logprob: -3.584278106689453
    8. '   ' → logprob: -3.834278106689453
    9. '  ' → logprob: -5.334278106689453
    10. '(abs' → logprob: -5.334278106689453

Token 72: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6490767598152161
    2. '[' → logprob: -1.1490767002105713
    3. '1' → logprob: -2.1490767002105713
    4. 'redicate' → logprob: -3.5240767002105713
    5. 'redict' → logprob: -5.14907693862915
    6. '(p' → logprob: -6.39907693862915
    7. '(' → logprob: -6.77407693862915
    8. 'red' → logprob: -6.89907693862915
    9. '[p' → logprob: -7.27407693862915
    10. 'p' → logprob: -7.64907693862915

Token 73: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06825186312198639
    2. '==' → logprob: -2.818251848220825
    3. '<' → logprob: -5.943252086639404
    4. '!=' → logprob: -6.568252086639404
    5. '(p' → logprob: -7.943252086639404
    6. 'p' → logprob: -8.068251609802246
    7. ' ==' → logprob: -8.193251609802246
    8. '[p' → logprob: -8.193251609802246
    9. '<p' → logprob: -8.318251609802246
    10. '==(' → logprob: -8.568251609802246

Token 74: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.857719275401905e-05
    2. '(p' → logprob: -10.375038146972656
    3. ' p' → logprob: -11.875038146972656
    4. '(' → logprob: -16.125038146972656
    5. 'tuple' → logprob: -16.375038146972656
    6. '	p' → logprob: -17.875038146972656
    7. '   ' → logprob: -17.875038146972656
    8. ')p' → logprob: -18.125038146972656
    9. 'predicate' → logprob: -18.250038146972656
    10. 'None' → logprob: -18.375038146972656

Token 75: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4164201021194458
    2. '3' → logprob: -1.1664201021194458
    3. 'p' → logprob: -4.541419982910156
    4. '   ' → logprob: -5.166419982910156
    5. '1' → logprob: -5.791419982910156
    6. 'predicate' → logprob: -5.791419982910156
    7. 'redicate' → logprob: -6.041419982910156
    8. '       ' → logprob: -7.166419982910156
    9. '  ' → logprob: -7.666419982910156
    10. 'd' → logprob: -7.916419982910156

Token 76: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06511256843805313
    2. '       ' → logprob: -3.065112590789795
    3. 'return' → logprob: -5.565112590789795
    4. 'p' → logprob: -6.190112590789795
    5. 'or' → logprob: -6.190112590789795
    6. 'and' → logprob: -6.690112590789795
    7. '    ' → logprob: -6.690112590789795
    8. '(p' → logprob: -7.065112590789795
    9. '     ' → logprob: -7.315112590789795
    10. '  ' → logprob: -7.315112590789795

Token 77: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5928495486150496e-05
    2. ' p' → logprob: -11.125016212463379
    3. '   ' → logprob: -13.875016212463379
    4. '       ' → logprob: -16.750015258789062
    5. '	p' → logprob: -17.250015258789062
    6. '(p' → logprob: -17.500015258789062
    7. '     ' → logprob: -17.625015258789062
    8. '  ' → logprob: -18.000015258789062
    9. '    ' → logprob: -18.125015258789062
    10. '$p' → logprob: -18.750015258789062

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. '1' → logprob: -11.875012397766113
    3. '3' → logprob: -12.625012397766113
    4. 'p' → logprob: -13.750012397766113
    5. '[' → logprob: -14.750012397766113
    6. '_' → logprob: -16.375011444091797
    7. '(p' → logprob: -16.500011444091797
    8. 'a' → logprob: -16.750011444091797
    9. '₂' → logprob: -17.125011444091797
    10. '==' → logprob: -17.250011444091797

Token 79: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00046033994294703007
    2. ' ==' → logprob: -8.125460624694824
    3. '!=' → logprob: -9.375460624694824
    4. '[' → logprob: -9.625460624694824
    5. '==(' → logprob: -11.500460624694824
    6. '==
' → logprob: -13.750460624694824
    7. '=='' → logprob: -14.875460624694824
    8. '<' → logprob: -15.000460624694824
    9. ' !=' → logprob: -15.000460624694824
    10. '```' → logprob: -15.375460624694824

Token 80: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. ' p' → logprob: -14.75
    3. '	p' → logprob: -22.875
    4. ' п' → logprob: -23.375
    5. '<p' → logprob: -24.5
    6. '(p' → logprob: -24.625
    7. '$p' → logprob: -24.875
    8. 'pch' → logprob: -25.625
    9. 'п' → logprob: -26.0
    10. '.p' → logprob: -26.0

Token 81: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.058461885899305344
    2. '[' → logprob: -2.933461904525757
    3. '1' → logprob: -6.058461666107178
    4. '3' → logprob: -6.933461666107178
    5. 'oint' → logprob: -8.683462142944336
    6. 'oints' → logprob: -10.933462142944336
    7. 'redicate' → logprob: -11.683462142944336
    8. '[]' → logprob: -12.183462142944336
    9. '   ' → logprob: -12.183462142944336
    10. 'p' → logprob: -12.308462142944336

Token 82: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010514537803828716
    2. '       ' → logprob: -5.010514736175537
    3. 'return' → logprob: -6.135514736175537
    4. '    ' → logprob: -7.260514736175537
    5. '     ' → logprob: -7.885514736175537
    6. 'd' → logprob: -9.010514259338379
    7. '           ' → logprob: -9.135514259338379
    8. '  ' → logprob: -9.385514259338379
    9. '               ' → logprob: -9.885514259338379
    10. '      ' → logprob: -10.385514259338379

Token 83: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015129957348108292
    2. ' p' → logprob: -4.265130043029785
    3. '   ' → logprob: -7.890130043029785
    4. '(p' → logprob: -8.765130043029785
    5. '  ' → logprob: -9.015130043029785
    6. ' ' → logprob: -9.765130043029785
    7. '    ' → logprob: -9.890130043029785
    8. 'not' → logprob: -10.015130043029785
    9. 'D' → logprob: -10.140130043029785
    10. '     ' → logprob: -10.390130043029785

Token 84: 'p' (ID: 79)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04599566012620926
    2. '(p' → logprob: -3.9209957122802734
    3. 'p' → logprob: -4.295995712280273
    4. 'dx' → logprob: -5.045995712280273
    5. '(dx' → logprob: -6.795995712280273
    6. '(y' → logprob: -6.920995712280273
    7. 'predicate' → logprob: -7.420995712280273
    8. 'not' → logprob: -7.670995712280273
    9. 'y' → logprob: -7.795995712280273
    10. '(d' → logprob: -7.920995712280273

Token 85: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.47728368639945984
    2. '1' → logprob: -1.1022837162017822
    3. '2' → logprob: -3.1022837162017822
    4. '(p' → logprob: -6.602283477783203
    5. '[' → logprob: -7.102283477783203
    6. '(' → logprob: -9.602283477783203
    7. 'redicate' → logprob: -9.852283477783203
    8. '[p' → logprob: -9.977283477783203
    9. 'p' → logprob: -10.477283477783203
    10. '4' → logprob: -11.227283477783203

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.898516833782196
    2. '==' → logprob: -1.2735168933868408
    3. ' in' → logprob: -1.7735168933868408
    4. ' ==' → logprob: -2.648516893386841
    5. ' !=' → logprob: -3.648516893386841
    6. ' not' → logprob: -3.773516893386841
    7. '!=' → logprob: -4.398516654968262
    8. 'not' → logprob: -4.773516654968262
    9. 'in' → logprob: -6.023516654968262
    10. '==(' → logprob: -9.273516654968262

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47921502590179443
    2. '0' → logprob: -0.9792150259017944
    3. '[' → logprob: -5.354215145111084
    4. ']' → logprob: -8.604214668273926
    5. '][' → logprob: -8.979214668273926
    6. '2' → logprob: -9.479214668273926
    7. ' ' → logprob: -13.479214668273926
    8. ']==' → logprob: -13.479214668273926
    9. '3' → logprob: -13.729214668273926
    10. '```' → logprob: -13.854214668273926

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012724967673420906
    2. '][' → logprob: -6.751272678375244
    3. ']==' → logprob: -9.501272201538086
    4. ']!=' → logprob: -11.126272201538086
    5. '].' → logprob: -11.501272201538086
    6. '],' → logprob: -14.126272201538086
    7. '])' → logprob: -14.501272201538086
    8. ']>' → logprob: -14.876272201538086
    9. ']<' → logprob: -15.251272201538086
    10. '](' → logprob: -16.001272201538086

Token 89: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014699537307024002
    2. '<' → logprob: -5.514699459075928
    3. 'in' → logprob: -5.764699459075928
    4. '-' → logprob: -5.764699459075928
    5. '!=' → logprob: -6.264699459075928
    6. '>' → logprob: -6.639699459075928
    7. ' ==' → logprob: -8.014699935913086
    8. 'not' → logprob: -8.264699935913086
    9. '<=' → logprob: -8.514699935913086
    10. '>=' → logprob: -8.639699935913086

Token 90: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01553121954202652
    2. 'dx' → logprob: -4.765531063079834
    3. 'p' → logprob: -5.015531063079834
    4. 'dy' → logprob: -8.640531539916992
    5. 'y' → logprob: -9.515531539916992
    6. ' dx' → logprob: -12.515531539916992
    7. ' x' → logprob: -12.890531539916992
    8. ' dy' → logprob: -13.640531539916992
    9. 'px' → logprob: -15.515531539916992
    10. ' p' → logprob: -15.515531539916992

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '2' → logprob: -12.375003814697266
    3. '１' → logprob: -17.000003814697266
    4. ' ' → logprob: -17.750003814697266
    5. '```' → logprob: -18.000003814697266
    6. '0' → logprob: -18.250003814697266
    7. '   ' → logprob: -19.000003814697266
    8. 'x' → logprob: -19.625003814697266
    9. '3' → logprob: -20.000003814697266
    10. '۱' → logprob: -20.250003814697266

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02177930437028408
    2. '==' → logprob: -5.271779537200928
    3. ')*' → logprob: -5.521779537200928
    4. '>' → logprob: -5.521779537200928
    5. ' !=' → logprob: -5.771779537200928
    6. '*' → logprob: -6.521779537200928
    7. ' ==' → logprob: -6.646779537200928
    8. ')*(' → logprob: -6.896779537200928
    9. '!=' → logprob: -7.021779537200928
    10. ' >' → logprob: -8.52177906036377

Token 93: ' *' (ID: 425)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6000283360481262
    2. '*' → logprob: -0.8500283360481262
    3. '>' → logprob: -3.8500282764434814
    4. '>=' → logprob: -6.6000285148620605
    5. '<' → logprob: -7.8500285148620605
    6. ' ==' → logprob: -8.100028038024902
    7. '!=' → logprob: -8.475028038024902
    8. '<=' → logprob: -8.975028038024902
    9. '*d' → logprob: -10.475028038024902
    10. ' *' → logprob: -10.600028038024902

Token 94: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00024727347772568464
    2. ' dy' → logprob: -8.50024700164795
    3. '(d' → logprob: -10.75024700164795
    4. '(' → logprob: -11.25024700164795
    5. 'dx' → logprob: -12.12524700164795
    6. '(dx' → logprob: -12.87524700164795
    7. '.dy' → logprob: -13.75024700164795
    8. '(-' → logprob: -15.87524700164795
    9. '(D' → logprob: -16.125247955322266
    10. 'di' → logprob: -18.250247955322266

Token 95: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6187131404876709
    2. '>' → logprob: -0.8687131404876709
    3. '*' → logprob: -3.368713140487671
    4. '>=' → logprob: -5.36871337890625
    5. '<' → logprob: -6.61871337890625
    6. '<=' → logprob: -7.36871337890625
    7. ' ==' → logprob: -7.86871337890625
    8. ' >' → logprob: -8.24371337890625
    9. '!=' → logprob: -9.11871337890625
    10. ' *' → logprob: -10.86871337890625

Token 96: ' dx' (ID: 29472)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.0017382439691573381
    2. '(p' → logprob: -6.62673807144165
    3. 'dx' → logprob: -8.751738548278809
    4. '(d' → logprob: -9.001738548278809
    5. '(px' → logprob: -9.001738548278809
    6. '(x' → logprob: -13.001738548278809
    7. ' (' → logprob: -13.251738548278809
    8. '(' → logprob: -14.251738548278809
    9. '(dp' → logprob: -14.501738548278809
    10. ' dx' → logprob: -14.626738548278809

Token 97: ' *' (ID: 425)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.045190922915935516
    2. '>' → logprob: -3.1701908111572266
    3. ' ==' → logprob: -6.170190811157227
    4. '<' → logprob: -10.170190811157227
    5. '>=' → logprob: -10.295190811157227
    6. ' >' → logprob: -11.295190811157227
    7. '!=' → logprob: -12.295190811157227
    8. '*' → logprob: -12.420190811157227
    9. '<=' → logprob: -12.795190811157227
    10. '**' → logprob: -13.920190811157227

Token 98: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.20243363082408905
    2. '(p' → logprob: -1.7024335861206055
    3. '(d' → logprob: -7.2024335861206055
    4. '(' → logprob: -8.577433586120605
    5. '(q' → logprob: -10.952433586120605
    6. '(py' → logprob: -11.077433586120605
    7. '(x' → logprob: -11.202433586120605
    8. '(v' → logprob: -12.327433586120605
    9. '(dx' → logprob: -12.577433586120605
    10. '(t' → logprob: -12.702433586120605

Token 99: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. '(p' → logprob: -17.5
    3. ' p' → logprob: -18.125
    4. 'py' → logprob: -20.875
    5. '	p' → logprob: -21.5
    6. ')p' → logprob: -22.125
    7. '.p' → logprob: -23.625
    8. '<p' → logprob: -24.125
    9. ' п' → logprob: -24.375
    10. 'dy' → logprob: -24.5

Token 100: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.23955373466014862
    2. '1' → logprob: -2.239553689956665
    3. '2' → logprob: -2.239553689956665
    4. '[' → logprob: -11.739553451538086
    5. '4' → logprob: -15.489553451538086
    6. 'p' → logprob: -15.489553451538086
    7. 'redicate' → logprob: -15.864553451538086
    8. '(' → logprob: -15.989553451538086
    9. 'i' → logprob: -16.614553451538086
    10. 'r' → logprob: -16.739553451538086

Token 101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '\[' → logprob: -16.0
    3. '[y' → logprob: -18.0
    4. '```' → logprob: -18.375
    5. '(' → logprob: -18.625
    6. '   ' → logprob: -19.125
    7. '[
' → logprob: -19.5
    8. ')[' → logprob: -19.75
    9. '()[' → logprob: -20.25
    10. '[i' → logprob: -20.375

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. '1' → logprob: -8.625179290771484
    3. '[' → logprob: -16.250179290771484
    4. '2' → logprob: -18.625179290771484
    5. ' ' → logprob: -20.000179290771484
    6. '０' → logprob: -20.250179290771484
    7. '`' → logprob: -20.500179290771484
    8. '(' → logprob: -20.750179290771484
    9. '```' → logprob: -21.125179290771484
    10. '   ' → logprob: -21.375179290771484

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36065763235092163
    2. '][' → logprob: -1.2356576919555664
    3. '])' → logprob: -4.485657691955566
    4. '].' → logprob: -7.860657691955566
    5. '])[' → logprob: -8.110657691955566
    6. ']==' → logprob: -10.235657691955566
    7. '[' → logprob: -10.610657691955566
    8. ']-' → logprob: -10.860657691955566
    9. ']][' → logprob: -11.360657691955566
    10. ')' → logprob: -11.485657691955566

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005679258611053228
    2. '==' → logprob: -7.87556791305542
    3. ' -' → logprob: -9.375568389892578
    4. '[' → logprob: -9.500568389892578
    5. '-y' → logprob: -11.125568389892578
    6. ')' → logprob: -12.625568389892578
    7. '   ' → logprob: -12.875568389892578
    8. '=' → logprob: -13.375568389892578
    9. '```' → logprob: -13.375568389892578
    10. 'y' → logprob: -14.000568389892578

Token 105: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: 0.0
    2. ' y' → logprob: -18.75
    3. '	y' → logprob: -22.25
    4. 'yb' → logprob: -23.75
    5. 'p' → logprob: -24.0
    6. 'y's' → logprob: -24.0
    7. '*y' → logprob: -24.875
    8. 'yu' → logprob: -25.0
    9. 'yy' → logprob: -25.125
    10. '_y' → logprob: -25.375

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. '2' → logprob: -11.375018119812012
    3. 'ield' → logprob: -12.375018119812012
    4. ' ' → logprob: -14.125018119812012
    5. '１' → logprob: -14.875018119812012
    6. '```' → logprob: -14.875018119812012
    7. '   ' → logprob: -14.875018119812012
    8. '[' → logprob: -16.000017166137695
    9. '_' → logprob: -16.625017166137695
    10. '``' → logprob: -16.750017166137695

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')==' → logprob: -12.000006675720215
    3. '))' → logprob: -15.000006675720215
    4. '）' → logprob: -15.625006675720215
    5. ' )' → logprob: -16.50000762939453
    6. '')' → logprob: -16.62500762939453
    7. '}' → logprob: -16.87500762939453
    8. '")' → logprob: -17.50000762939453
    9. ')=' → logprob: -17.50000762939453
    10. ')>' → logprob: -17.75000762939453

Token 108: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47510164976119995
    2. '==' → logprob: -0.9751016497612
    3. '>' → logprob: -6.975101470947266
    4. ' >' → logprob: -9.850101470947266
    5. ' !=' → logprob: -10.600101470947266
    6. ' >=' → logprob: -12.850101470947266
    7. '<' → logprob: -12.975101470947266
    8. '>=' → logprob: -12.975101470947266
    9. '!=' → logprob: -12.975101470947266
    10. '   ' → logprob: -13.725101470947266

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.875017166137695
    4. '０' → logprob: -22.750017166137695
    5. '  ' → logprob: -22.875017166137695
    6. '1' → logprob: -22.875017166137695
    7. 'zero' → logprob: -22.875017166137695
    8. '```' → logprob: -23.000017166137695
    9. '۰' → logprob: -23.125017166137695
    10. '`' → logprob: -23.250017166137695

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.875
    3. 'zero' → logprob: -22.5
    4. '1' → logprob: -23.25
    5. '０' → logprob: -23.625
    6. '۰' → logprob: -24.625
    7. '```' → logprob: -25.375
    8. '   ' → logprob: -25.75
    9. ' cero' → logprob: -26.0
    10. '٠' → logprob: -26.25

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1517960956552997e-05
    2. 'return' → logprob: -11.875011444091797
    3. '       ' → logprob: -13.000011444091797
    4. '    
' → logprob: -14.250011444091797
    5. '  ' → logprob: -14.375011444091797
    6. 'def' → logprob: -14.750011444091797
    7. '    ' → logprob: -16.250011444091797
    8. '```' → logprob: -16.375011444091797
    9. '	return' → logprob: -16.750011444091797
    10. ':return' → logprob: -17.250011444091797

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.512236498361744e-07
    2. '       ' → logprob: -14.750000953674316
    3. '  ' → logprob: -16.25
    4. 'return' → logprob: -17.25
    5. '    
' → logprob: -17.5
    6. '    ' → logprob: -18.25
    7. '           ' → logprob: -19.5
    8. ' ' → logprob: -19.875
    9. 'def' → logprob: -19.875
    10. '	return' → logprob: -20.125

Token 113: ' verdict' (ID: 75722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03044394589960575
    2. 'D' → logprob: -3.5304439067840576
    3. 'return' → logprob: -7.280444145202637
    4. '       ' → logprob: -13.530444145202637
    5. ' D' → logprob: -13.655444145202637
    6. 'def' → logprob: -13.780444145202637
    7. '  ' → logprob: -14.780444145202637
    8. 'global' → logprob: -16.78044319152832
    9. '#' → logprob: -17.03044319152832
    10. 'pass' → logprob: -17.15544319152832

Token 114: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007740659173578024
    2. ':' → logprob: -4.882740497589111
    3. '=' → logprob: -9.25774097442627
    4. ' :' → logprob: -11.13274097442627
    5. ' ' → logprob: -11.50774097442627
    6. '   ' → logprob: -12.38274097442627
    7. '[:]' → logprob: -12.63274097442627
    8. ':return' → logprob: -13.63274097442627
    9. ':def' → logprob: -13.88274097442627
    10. '```' → logprob: -14.13274097442627

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798824518918991
    2. '=' → logprob: -1.8048824071884155
    3. ' ' → logprob: -9.804882049560547
    4. '   ' → logprob: -10.054882049560547
    5. '=list' → logprob: -11.429882049560547
    6. '=[]' → logprob: -11.804882049560547
    7. '.append' → logprob: -11.929882049560547
    8. ':' → logprob: -12.304882049560547
    9. '  ' → logprob: -12.554882049560547
    10. '.extend' → logprob: -14.179882049560547

Token 116: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00687119085341692
    2. ' list' → logprob: -5.006871223449707
    3. 'map' → logprob: -10.006871223449707
    4. 'group' → logprob: -10.131871223449707
    5. 'filter' → logprob: -10.631871223449707
    6. 'reduce' → logprob: -11.131871223449707
    7. '   ' → logprob: -12.006871223449707
    8. 'sorted' → logprob: -12.381871223449707
    9. '(list' → logprob: -12.631871223449707
    10. ' ' → logprob: -12.631871223449707

Token 117: '(map' (ID: 16946)
  Prédit: '(predicate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(predicate' → logprob: -0.3496604263782501
    2. '(' → logprob: -1.3496603965759277
    3. '(pred' → logprob: -3.5996603965759277
    4. '()' → logprob: -6.099660396575928
    5. '(ver' → logprob: -6.724660396575928
    6. '(map' → logprob: -7.849660396575928
    7. '(filter' → logprob: -7.974660396575928
    8. '(eval' → logprob: -8.224660873413086
    9. '(re' → logprob: -8.224660873413086
    10. '(...)' → logprob: -8.849660873413086

Token 118: '(predicate' (ID: 176135)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.506117045879364
    2. '(' → logprob: -1.3811171054840088
    3. '(predicate' → logprob: -2.006117105484009
    4. '(pred' → logprob: -5.63111686706543
    5. '(re' → logprob: -6.75611686706543
    6. '(func' → logprob: -6.88111686706543
    7. '(`' → logprob: -7.25611686706543
    8. '(function' → logprob: -7.63111686706543
    9. '(map' → logprob: -7.63111686706543
    10. '(eval' → logprob: -8.38111686706543

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03198879212141037
    2. '(' → logprob: -4.156988620758057
    3. '))' → logprob: -4.781988620758057
    4. '(p' → logprob: -5.906988620758057
    5. '(),' → logprob: -6.031988620758057
    6. '),' → logprob: -6.781988620758057
    7. '   ' → logprob: -8.781989097595215
    8. '，' → logprob: -9.781989097595215
    9. ')' → logprob: -9.781989097595215
    10. '))
' → logprob: -9.906989097595215

Token 120: ' reversed' (ID: 57184)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.7385154428193346e-05
    2. 'chain' → logprob: -10.50003719329834
    3. ' D' → logprob: -12.00003719329834
    4. 'points' → logprob: -13.25003719329834
    5. 'group' → logprob: -14.12503719329834
    6. 'sys' → logprob: -14.37503719329834
    7. 'global' → logprob: -15.37503719329834
    8. 'list' → logprob: -15.75003719329834
    9. 'set' → logprob: -17.250038146972656
    10. 'C' → logprob: -17.250038146972656

Token 121: '(D' (ID: 9908)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6655047535896301
    2. '(list' → logprob: -1.4155046939849854
    3. '(D' → logprob: -2.1655046939849854
    4. '(' → logprob: -2.6655046939849854
    5. '(ver' → logprob: -4.1655049324035645
    6. '(pred' → logprob: -5.1655049324035645
    7. '(p' → logprob: -5.1655049324035645
    8. '(re' → logprob: -5.2905049324035645
    9. '(predicate' → logprob: -5.4155049324035645
    10. '(sorted' → logprob: -5.4155049324035645

Token 122: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.03006436862051487
    2. '))' → logprob: -3.530064344406128
    3. ')))
' → logprob: -8.780064582824707
    4. '))))' → logprob: -9.030064582824707
    5. ']))' → logprob: -11.155064582824707
    6. '}))' → logprob: -11.905064582824707
    7. ')' → logprob: -12.155064582824707
    8. ')))

' → logprob: -12.405064582824707
    9. '')))' → logprob: -12.780064582824707
    10. ')));' → logprob: -13.405064582824707

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.981667537620524e-06
    2. 'return' → logprob: -14.250001907348633
    3. '  ' → logprob: -14.375001907348633
    4. '       ' → logprob: -14.750001907348633
    5. '    
' → logprob: -15.625001907348633
    6. '    ' → logprob: -16.000001907348633
    7. 'def' → logprob: -17.125001907348633
    8. '```' → logprob: -17.750001907348633
    9. ' ' → logprob: -18.250001907348633
    10. '	return' → logprob: -19.000001907348633

Token 124: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014549743384122849
    2. 'return' (adapté à ' return') → logprob: -4.389549732208252
    3. 'ver' → logprob: -6.264549732208252
    4. 'D' → logprob: -9.76455020904541
    5. 'if' → logprob: -10.26455020904541
    6. '  ' → logprob: -11.01455020904541
    7. 'result' → logprob: -12.13955020904541
    8. 'print' → logprob: -12.38955020904541
    9. '    
' → logprob: -13.01455020904541
    10. '       ' → logprob: -13.38955020904541

Token 125: ' int' (ID: 677)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.001971934689208865
    2. 'verd' → logprob: -7.25197172164917
    3. 'sum' → logprob: -7.37697172164917
    4. ' verdict' → logprob: -8.126972198486328
    5. 'max' → logprob: -9.251972198486328
    6. 'any' → logprob: -9.251972198486328
    7. 'verb' → logprob: -9.626972198486328
    8. 'not' → logprob: -11.126972198486328
    9. '(ver' → logprob: -11.251972198486328
    10. 'len' → logprob: -11.376972198486328

Token 126: '(all' (ID: 34727)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7393859624862671
    2. '(ver' → logprob: -0.7393859624862671
    3. '(v' → logprob: -4.239386081695557
    4. '()' → logprob: -5.489386081695557
    5. '(pred' → logprob: -5.489386081695557
    6. '(max' → logprob: -5.989386081695557
    7. '(def' → logprob: -6.489386081695557
    8. '(np' → logprob: -6.614386081695557
    9. '(predicate' → logprob: -6.614386081695557
    10. '(bool' → logprob: -6.614386081695557

Token 127: '(ver' (ID: 185185)
  Prédit: '(ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ver' → logprob: -0.0011692718835547566
    2. '(' → logprob: -8.001169204711914
    3. '(v' → logprob: -8.001169204711914
    4. '(pred' → logprob: -8.376169204711914
    5. '(predicate' → logprob: -8.376169204711914
    6. '(val' → logprob: -11.501169204711914
    7. '(dec' → logprob: -12.001169204711914
    8. '(var' → logprob: -12.501169204711914
    9. '(re' → logprob: -12.501169204711914
    10. '(not' → logprob: -13.876169204711914

Token 128: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.0019771684892475605
    2. 'icts' → logprob: -7.00197696685791
    3. ' dict' → logprob: -7.87697696685791
    4. 'd' → logprob: -8.37697696685791
    5. 'dic' → logprob: -8.75197696685791
    6. '(d' → logprob: -9.87697696685791
    7. '_dict' → logprob: -10.12697696685791
    8. ' dicta' → logprob: -10.25197696685791
    9. 'edict' → logprob: -10.75197696685791
    10. ' Dict' → logprob: -10.87697696685791

Token 129: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. 'S' → logprob: -19.0
    3. 'ds' → logprob: -20.375
    4. 'с' → logprob: -21.0
    5. 'ss' → logprob: -21.375
    6. '```' → logprob: -22.125
    7. 'ts' → logprob: -22.375
    8. 'sd' → logprob: -22.625
    9. ' s' → logprob: -22.75
    10. 'is' → logprob: -23.125

Token 130: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.796184723294573e-06
    2. '))
' → logprob: -13.250005722045898
    3. ')))' → logprob: -13.375005722045898
    4. ')' → logprob: -13.625005722045898
    5. '))

' → logprob: -14.375005722045898
    6. ' ))' → logprob: -15.625005722045898
    7. '));' → logprob: -15.875005722045898
    8. '))


' → logprob: -16.5000057220459
    9. ')).' → logprob: -16.7500057220459
    10. '[:-' → logprob: -16.8750057220459

Token 131: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4238840639591217
    2. 'def' → logprob: -1.2988840341567993
    3. 'return' → logprob: -2.798884153366089
    4. 'D' → logprob: -4.67388391494751
    5. '```' → logprob: -7.42388391494751
    6. '#' → logprob: -8.298884391784668
    7. 'if' → logprob: -8.423884391784668
    8. 'global' → logprob: -8.548884391784668
    9. 'pass' → logprob: -8.673884391784668
    10. ':return' → logprob: -8.798884391784668

Token 132: ' consume' (ID: 34881)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.2353964000940323
    2. 'area' → logprob: -3.360396385192871
    3. 'is' → logprob: -3.860396385192871
    4. 'main' → logprob: -4.235396385192871
    5. 'intersection' → logprob: -4.610396385192871
    6. 'line' → logprob: -4.735396385192871
    7. 'next' → logprob: -4.860396385192871
    8. 'calculate' → logprob: -4.985396385192871
    9. 'corner' → logprob: -4.985396385192871
    10. 'find' → logprob: -5.360396385192871

Token 133: '_first' (ID: 29347)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6806328296661377
    2. '():' → logprob: -0.9306328296661377
    3. '(' → logprob: -3.6806328296661377
    4. '(_' → logprob: -4.180632591247559
    5. '(:' → logprob: -4.430632591247559
    6. '(_:' → logprob: -4.555632591247559
    7. '(':' → logprob: -4.680632591247559
    8. '()' → logprob: -5.305632591247559
    9. '(":' → logprob: -5.555632591247559
    10. '(d' → logprob: -6.055632591247559

Token 134: '(iter' (ID: 61014)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08550968021154404
    2. '(:' → logprob: -3.210509777069092
    3. '(_:' → logprob: -4.335509777069092
    4. '(' → logprob: -4.710509777069092
    5. '(_' → logprob: -5.335509777069092
    6. '(':' → logprob: -5.460509777069092
    7. '(":' → logprob: -6.210509777069092
    8. 'def' → logprob: -6.335509777069092
    9. '_' → logprob: -6.460509777069092
    10. '_token' → logprob: -6.960509777069092

Token 135: 'able' (ID: 562)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.5923112630844116
    2. 'able' → logprob: -0.8423112630844116
    3. ')' → logprob: -4.717311382293701
    4. 'ation' → logprob: -6.342311382293701
    5. 'ators' → logprob: -6.467311382293701
    6. '```' → logprob: -7.092311382293701
    7. 'ables' → logprob: -7.717311382293701
    8. '   ' → logprob: -7.967311382293701
    9. 'ate' → logprob: -8.467310905456543
    10. '):' → logprob: -8.592310905456543

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011386501602828503
    2. '):
' → logprob: -5.261386394500732
    3. ',' → logprob: -5.386386394500732
    4. ':' → logprob: -6.761386394500732
    5. '):

' → logprob: -9.13638687133789
    6. ')' → logprob: -9.26138687133789
    7. '):
' → logprob: -9.26138687133789
    8. '   ' → logprob: -9.88638687133789
    9. ')):' → logprob: -10.76138687133789
    10. ''):' → logprob: -12.01138687133789

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.537868779967539e-06
    2. 'return' → logprob: -12.000008583068848
    3. '  ' → logprob: -13.125008583068848
    4. ' return' → logprob: -15.875008583068848
    5. '	return' → logprob: -15.875008583068848
    6. ' ' → logprob: -16.50000762939453
    7. '    ' → logprob: -17.75000762939453
    8. '```' → logprob: -18.25000762939453
    9. '   ' → logprob: -19.25000762939453
    10. '       ' → logprob: -19.50000762939453

Token 138: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20163290202617645
    2. 'return' → logprob: -1.7016328573226929
    3. 'next' → logprob: -8.701632499694824
    4. ' return' → logprob: -10.826632499694824
    5. 'try' → logprob: -11.201632499694824
    6. 'iter' → logprob: -11.951632499694824
    7. '  ' → logprob: -12.076632499694824
    8. ' ' → logprob: -12.701632499694824
    9. '	return' → logprob: -13.826632499694824
    10. '```' → logprob: -14.076632499694824

Token 139: ' Remove' (ID: 18141)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06335172057151794
    2. 'return' → logprob: -2.813351631164551
    3. 'next' → logprob: -7.313351631164551
    4. ' return' → logprob: -8.18835163116455
    5. '```' → logprob: -8.56335163116455
    6. ' ' → logprob: -9.68835163116455
    7. 'iter' → logprob: -10.31335163116455
    8. '  ' → logprob: -10.56335163116455
    9. 'returns' → logprob: -10.93835163116455
    10. 'Return' → logprob: -11.18835163116455

Token 140: ' first' (ID: 1577)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06832980364561081
    2. 'first' → logprob: -2.9433298110961914
    3. '   ' → logprob: -4.443329811096191
    4. ' the' → logprob: -6.568329811096191
    5. 'd' → logprob: -9.943329811096191
    6. 'one' → logprob: -10.443329811096191
    7. 'First' → logprob: -10.943329811096191
    8. ' first' → logprob: -11.068329811096191
    9. ' ' → logprob: -11.318329811096191
    10. '  ' → logprob: -11.443329811096191

Token 141: ' item' (ID: 2169)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.1270650178194046
    2. 'item' → logprob: -2.1270649433135986
    3. 'token' → logprob: -10.12706470489502
    4. ' element' → logprob: -10.25206470489502
    5. '#' → logprob: -10.87706470489502
    6. ' item' → logprob: -11.37706470489502
    7. '   ' → logprob: -11.75206470489502
    8. '元素' → logprob: -12.12706470489502
    9. 'elem' → logprob: -12.50206470489502
    10. 'line' → logprob: -12.50206470489502

Token 142: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0644444078207016
    2. '   ' → logprob: -2.8144443035125732
    3. 'of' → logprob: -6.189444541931152
    4. 'and' → logprob: -8.564444541931152
    5. 'return' → logprob: -9.064444541931152
    6. 'def' → logprob: -9.314444541931152
    7. 'in' → logprob: -12.064444541931152
    8. ' from' → logprob: -12.064444541931152
    9. '#' → logprob: -12.189444541931152
    10. '```' → logprob: -13.064444541931152

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.741137283621356e-05
    2. ' return' → logprob: -10.750057220458984
    3. 'returns' → logprob: -10.750057220458984
    4. '返回' → logprob: -12.500057220458984
    5. 'yield' → logprob: -12.625057220458984
    6. 'consume' → logprob: -13.125057220458984
    7. '   ' → logprob: -13.750057220458984
    8. 'replace' → logprob: -13.875057220458984
    9. 're' → logprob: -14.500057220458984
    10. '	return' → logprob: -14.875057220458984

Token 144: ' it' (ID: 480)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.022534985095262527
    2. 'iter' → logprob: -4.2725348472595215
    3. 'it' → logprob: -5.3975348472595215
    4. '   ' → logprob: -6.1475348472595215
    5. 'iterator' → logprob: -7.5225348472595215
    6. 'next' → logprob: -7.8975348472595215
    7. 'remaining' → logprob: -9.14753532409668
    8. '  ' → logprob: -9.27253532409668
    9. 'rest' → logprob: -9.39753532409668
    10. '(iter' → logprob: -9.39753532409668

Token 145: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041113083716481924
    2. 'return' → logprob: -7.875411033630371
    3. '  ' → logprob: -12.125411033630371
    4. '#' → logprob: -12.125411033630371
    5. '```' → logprob: -12.125411033630371
    6. ':return' → logprob: -12.250411033630371
    7. '    ' → logprob: -13.125411033630371
    8. '       ' → logprob: -13.500411033630371
    9. '    
' → logprob: -13.500411033630371
    10. 'def' → logprob: -13.750411033630371

Token 146: ' remainder' (ID: 47056)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.00035072024911642075
    2. ' the' → logprob: -8.000350952148438
    3. 'remaining' → logprob: -11.750350952148438
    4. 'an' → logprob: -13.375350952148438
    5. 'a' → logprob: -13.500350952148438
    6. '   ' → logprob: -13.625350952148438
    7. 'rest' → logprob: -13.625350952148438
    8. '  ' → logprob: -14.250350952148438
    9. ' ' → logprob: -15.125350952148438
    10. 'sub' → logprob: -15.625350952148438

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016241880075540394
    2. 'return' → logprob: -9.625162124633789
    3. 'def' → logprob: -9.875162124633789
    4. ':' → logprob: -11.625162124633789
    5. '    ' → logprob: -12.125162124633789
    6. '  ' → logprob: -12.250162124633789
    7. 'd' → logprob: -12.625162124633789
    8. '#' → logprob: -12.625162124633789
    9. ':return' → logprob: -12.750162124633789
    10. '       ' → logprob: -12.875162124633789

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.696889623621246e-06
    2. '  ' → logprob: -14.12500286102295
    3. '       ' → logprob: -14.50000286102295
    4. 'return' → logprob: -14.50000286102295
    5. '    
' → logprob: -15.00000286102295
    6. 'def' → logprob: -15.50000286102295
    7. '    ' → logprob: -16.125001907348633
    8. '```' → logprob: -16.125001907348633
    9. '	return' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.750001907348633

Token 149: ' item' (ID: 2169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031910240650177
    2. 'return' → logprob: -5.753190994262695
    3. 'first' → logprob: -11.878190994262695
    4. 'item' (adapté à ' item') → logprob: -13.128190994262695
    5. '  ' → logprob: -13.503190994262695
    6. '       ' → logprob: -14.253190994262695
    7. ' return' → logprob: -15.003190994262695
    8. 'def' → logprob: -15.003190994262695
    9. '	return' → logprob: -15.003190994262695
    10. '#' → logprob: -15.003190994262695

Token 150: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4783186614513397
    2. '   ' → logprob: -0.9783186912536621
    3. ' =' → logprob: -5.853318691253662
    4. '=item' → logprob: -7.228318691253662
    5. '=' → logprob: -8.103318214416504
    6. ',item' → logprob: -8.478318214416504
    7. '  ' → logprob: -10.978318214416504
    8. '    ' → logprob: -11.228318214416504
    9. '```' → logprob: -11.478318214416504
    10. 'item' → logprob: -11.603318214416504

Token 151: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0789351761341095
    2. 'iter' → logprob: -2.578935146331787
    3. ' next' → logprob: -10.828935623168945
    4. ' iterable' → logprob: -11.703935623168945
    5. 'iterator' → logprob: -11.953935623168945
    6. '   ' → logprob: -12.953935623168945
    7. 'iterate' → logprob: -13.078935623168945
    8. 'Next' → logprob: -13.578935623168945
    9. 'None' → logprob: -13.703935623168945
    10. 'item' → logprob: -14.328935623168945

Token 152: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -7.226628895296017e-06
    2. '(iterator' → logprob: -12.500007629394531
    3. '(item' → logprob: -12.875007629394531
    4. '(' → logprob: -14.125007629394531
    5. '(inter' → logprob: -16.25000762939453
    6. '(it' → logprob: -16.50000762939453
    7. '(ir' → logprob: -18.12500762939453
    8. '(import' → logprob: -18.75000762939453
    9. '(inner' → logprob: -18.87500762939453
    10. '(is' → logprob: -19.00000762939453

Token 153: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0008879951201379299
    2. 'ables' → logprob: -7.250887870788574
    3. 'ABLE' → logprob: -9.625887870788574
    4. 'abl' → logprob: -10.125887870788574
    5. 'abled' → logprob: -11.375887870788574
    6. 'ably' → logprob: -11.500887870788574
    7. '-able' → logprob: -11.625887870788574
    8. 'ab' → logprob: -11.750887870788574
    9. 'abele' → logprob: -11.875887870788574
    10. 'abel' → logprob: -11.875887870788574

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020202452316880226
    2. ',' → logprob: -4.52020263671875
    3. ')
' → logprob: -4.77020263671875
    4. '),' → logprob: -8.27020263671875
    5. '   ' → logprob: -8.64520263671875
    6. ',)' → logprob: -10.02020263671875
    7. ')`' → logprob: -10.27020263671875
    8. '```' → logprob: -10.27020263671875
    9. ').' → logprob: -10.39520263671875
    10. ')

' → logprob: -10.52020263671875

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. 'return' → logprob: -16.25
    3. '  ' → logprob: -16.875
    4. '       ' → logprob: -18.375
    5. '    
' → logprob: -18.875
    6. '    ' → logprob: -19.375
    7. '	return' → logprob: -20.875
    8. ' ' → logprob: -21.25
    9. ' return' → logprob: -21.625
    10. '     ' → logprob: -22.125

Token 156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20141518115997314
    2. '   ' → logprob: -1.7014151811599731
    3. ' return' → logprob: -13.826415061950684
    4. '	return' → logprob: -14.576415061950684
    5. '  ' → logprob: -16.451416015625
    6. 'remaining' → logprob: -16.576416015625
    7. 'returned' → logprob: -16.576416015625
    8. 'returns' → logprob: -16.826416015625
    9. ':return' → logprob: -17.701416015625
    10. '       ' → logprob: -17.826416015625

Token 157: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.004951593466103077
    2. ' item' → logprob: -6.004951477050781
    3. '(item' → logprob: -6.004951477050781
    4. ' (' → logprob: -12.754951477050781
    5. '[item' → logprob: -13.879951477050781
    6. '	item' → logprob: -14.004951477050781
    7. '.item' → logprob: -14.629951477050781
    8. '$item' → logprob: -14.879951477050781
    9. '=item' → logprob: -15.254951477050781
    10. '_item' → logprob: -15.379951477050781

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020663968462031335
    2. '   ' → logprob: -8.50020694732666
    3. ' ,' → logprob: -14.25020694732666
    4. ',
' → logprob: -14.75020694732666
    5. 'def' → logprob: -14.87520694732666
    6. ',item' → logprob: -15.00020694732666
    7. ',\' → logprob: -15.25020694732666
    8. ',_' → logprob: -15.62520694732666
    9. ',,' → logprob: -16.375205993652344
    10. '，' → logprob: -16.375205993652344

Token 159: ' list' (ID: 1562)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.08662237972021103
    2. ' iterable' → logprob: -3.211622476577759
    3. 'list' → logprob: -3.336622476577759
    4. ' iter' → logprob: -5.08662223815918
    5. ' list' → logprob: -7.83662223815918
    6. 'next' → logprob: -8.33662223815918
    7. '_iter' → logprob: -9.58662223815918
    8. 'iterate' → logprob: -9.96162223815918
    9. '(iter' → logprob: -10.21162223815918
    10. 'iterator' → logprob: -10.33662223815918

Token 160: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.00039849523454904556
    2. '(item' → logprob: -8.250398635864258
    3. '(iterator' → logprob: -9.250398635864258
    4. '(' → logprob: -10.500398635864258
    5. '(lambda' → logprob: -13.625398635864258
    6. '	iter' → logprob: -13.750398635864258
    7. '(remove' → logprob: -13.875398635864258
    8. '(inter' → logprob: -13.875398635864258
    9. '(it' → logprob: -14.000398635864258
    10. '(list' → logprob: -14.125398635864258

Token 161: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0002738522016443312
    2. 'ables' → logprob: -8.500273704528809
    3. 'ABLE' → logprob: -10.500273704528809
    4. 'abl' → logprob: -11.250273704528809
    5. 'abled' → logprob: -12.375273704528809
    6. '-able' → logprob: -12.375273704528809
    7. ' able' → logprob: -13.000273704528809
    8. 'atable' → logprob: -13.000273704528809
    9. 'abel' → logprob: -13.000273704528809
    10. 'abele' → logprob: -13.250273704528809

Token 162: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. '))' → logprob: -11.75001049041748
    3. ')`' → logprob: -13.87501049041748
    4. '```' → logprob: -14.50001049041748
    5. ')
' → logprob: -15.12501049041748
    6. '),' → logprob: -15.25001049041748
    7. ')}' → logprob: -15.50001049041748
    8. ').' → logprob: -16.000009536743164
    9. ')]' → logprob: -16.500009536743164
    10. ')

' → logprob: -16.625009536743164

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08079902827739716
    2. '   ' → logprob: -2.580799102783203
    3. '```' → logprob: -7.080799102783203
    4. 'return' → logprob: -7.330799102783203
    5. 'item' → logprob: -8.955799102783203
    6. '<|end|>' → logprob: -9.830799102783203
    7. 'import' → logprob: -10.330799102783203
    8. '#' → logprob: -10.580799102783203
    9. '<|end|>' → logprob: -10.580799102783203
    10. ' def' → logprob: -10.955799102783203

Token 164: ' input' (ID: 3422)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.31431514024734497
    2. ' consume' → logprob: -1.3143150806427002
    3. 'side' → logprob: -8.314314842224121
    4. ' ' → logprob: -9.439314842224121
    5. 'generate' → logprob: -9.564314842224121
    6. ' side' → logprob: -9.689314842224121
    7. ' generate' → logprob: -9.939314842224121
    8. ' produce' → logprob: -10.064314842224121
    9. 'produce' → logprob: -10.314314842224121
    10. 'cons' → logprob: -10.564314842224121

Token 165: '_points' (ID: 30070)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002810225123539567
    2. '_' → logprob: -7.002810001373291
    3. '(_)' → logprob: -7.502810001373291
    4. '(' → logprob: -7.752810001373291
    5. '()`' → logprob: -7.752810001373291
    6. '().' → logprob: -8.12781047821045
    7. '(_' → logprob: -11.00281047821045
    8. '('_' → logprob: -11.25281047821045
    9. '_(' → logprob: -11.37781047821045
    10. '_function' → logprob: -11.37781047821045

Token 166: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011119971750304103
    2. '(:' → logprob: -7.12611198425293
    3. '()' → logprob: -8.62611198425293
    4. '(_:' → logprob: -10.25111198425293
    5. ':' → logprob: -10.75111198425293
    6. '(' → logprob: -11.12611198425293
    7. '(':' → logprob: -11.25111198425293
    8. '():
' → logprob: -11.37611198425293
    9. ' ():' → logprob: -11.50111198425293
    10. '(":' → logprob: -11.62611198425293

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02542347088456154
    2. '):
' → logprob: -3.775423526763916
    3. ',' → logprob: -6.400423526763916
    4. ':' → logprob: -8.400423049926758
    5. '):

' → logprob: -8.650423049926758
    6. '):
' → logprob: -10.150423049926758
    7. '   ' → logprob: -10.525423049926758
    8. ')' → logprob: -11.025423049926758
    9. 'def' → logprob: -11.275423049926758
    10. ':int' → logprob: -11.775423049926758

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2200749754119897e-06
    2. '  ' → logprob: -13.375001907348633
    3. ' ' → logprob: -15.250001907348633
    4. '```' → logprob: -15.500001907348633
    5. '    ' → logprob: -16.375001907348633
    6. 'def' → logprob: -17.250001907348633
    7. '       ' → logprob: -17.625001907348633
    8. 'pass' → logprob: -18.500001907348633
    9. '	' → logprob: -18.625001907348633
    10. '    
' → logprob: -18.750001907348633

Token 169: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012614254374057055
    2. 'points' → logprob: -7.126261234283447
    3. 'return' → logprob: -7.876261234283447
    4. 'pass' → logprob: -10.751261711120605
    5. 'global' → logprob: -11.376261711120605
    6. 'def' → logprob: -11.626261711120605
    7. 'point' → logprob: -11.751261711120605
    8. '#' (adapté à ' #') → logprob: -12.001261711120605
    9. '```' → logprob: -12.126261711120605
    10. '  ' → logprob: -12.501261711120605

Token 170: ' List' (ID: 2655)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059244826436042786
    2. 'return' → logprob: -2.9342448711395264
    3. 'pass' → logprob: -6.434244632720947
    4. '```' → logprob: -7.059244632720947
    5. '#' → logprob: -7.559244632720947
    6. 'def' → logprob: -7.684244632720947
    7. 'points' → logprob: -8.309245109558105
    8. ' return' → logprob: -8.684245109558105
    9. ' ' → logprob: -9.309245109558105
    10. 'Return' → logprob: -9.559245109558105

Token 171: ' comprehension' (ID: 91423)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.0012307076249271631
    2. '   ' → logprob: -7.376230716705322
    3. ' of' → logprob: -7.501230716705322
    4. 'the' → logprob: -11.251230239868164
    5. '_of' → logprob: -11.501230239868164
    6. 'def' → logprob: -11.751230239868164
    7. '  ' → logprob: -12.126230239868164
    8. '	of' → logprob: -12.251230239868164
    9. 'to' → logprob: -13.126230239868164
    10. ' ' → logprob: -13.751230239868164

Token 172: ' within' (ID: 3518)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12057725340127945
    2. '[' → logprob: -2.620577335357666
    3. 'for' → logprob: -3.745577335357666
    4. '[]' → logprob: -4.870577335357666
    5. '```' → logprob: -5.870577335357666
    6. '[...]' → logprob: -6.495577335357666
    7. 'to' → logprob: -6.870577335357666
    8. 'points' → logprob: -7.245577335357666
    9. '[[' → logprob: -7.995577335357666
    10. 'def' → logprob: -8.245576858520508

Token 173: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20573973655700684
    2. 'def' → logprob: -1.8307397365570068
    3. 'function' → logprob: -4.705739974975586
    4. '   ' → logprob: -5.330739974975586
    5. 'the' → logprob: -5.330739974975586
    6. 'list' → logprob: -5.955739974975586
    7. '#' → logprob: -6.955739974975586
    8. 'an' → logprob: -7.330739974975586
    9. 'range' → logprob: -7.705739974975586
    10. 'lambda' → logprob: -7.705739974975586

Token 174: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019913148134946823
    2. 'def' → logprob: -4.769913196563721
    3. '(lambda' → logprob: -5.144913196563721
    4. 'lambda' → logprob: -6.144913196563721
    5. 'to' → logprob: -6.769913196563721
    6. '```' → logprob: -7.519913196563721
    7. '       ' → logprob: -8.019912719726562
    8. ':' → logprob: -8.769912719726562
    9. 'return' → logprob: -8.769912719726562
    10. '    ' → logprob: -9.019912719726562

Token 175: ' allow' (ID: 3763)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.5311596989631653
    2. 'create' → logprob: -1.1561596393585205
    3. 'process' → logprob: -2.7811596393585205
    4. 'convert' → logprob: -4.6561598777771
    5. 'parse' → logprob: -4.9061598777771
    6. 'transform' → logprob: -5.1561598777771
    7. 'extract' → logprob: -5.7811598777771
    8. 'get' → logprob: -6.5311598777771
    9. 'filter' → logprob: -6.6561598777771
    10. 'collect' → logprob: -6.9061598777771

Token 176: ' arbitrary' (ID: 56424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2211216539144516
    2. 'multiple' → logprob: -2.4711215496063232
    3. 'lazy' → logprob: -3.5961215496063232
    4. '   ' → logprob: -3.7211215496063232
    5. 'parallel' → logprob: -4.596121788024902
    6. 'the' → logprob: -4.721121788024902
    7. 'input' → logprob: -4.971121788024902
    8. 'multi' → logprob: -5.471121788024902
    9. 'processing' → logprob: -6.221121788024902
    10. 'nested' → logprob: -6.221121788024902

Token 177: ' manipulation' (ID: 61519)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.39846980571746826
    2. 'function' → logprob: -2.648469924926758
    3. 'code' → logprob: -2.898469924926758
    4. 'nest' → logprob: -3.398469924926758
    5. 'nested' → logprob: -3.398469924926758
    6. 'depth' → logprob: -3.648469924926758
    7. 'functions' → logprob: -3.898469924926758
    8. 'number' → logprob: -4.023469924926758
    9. 'input' → logprob: -4.148469924926758
    10. 'complex' → logprob: -4.523469924926758

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03576778620481491
    2. 'of' → logprob: -3.5357677936553955
    3. 'def' → logprob: -5.160767555236816
    4. ' of' → logprob: -8.660767555236816
    5. '       ' → logprob: -10.285767555236816
    6. '```' → logprob: -11.785767555236816
    7. 'to' → logprob: -11.910767555236816
    8. '  ' → logprob: -12.035767555236816
    9. ':' → logprob: -12.160767555236816
    10. 'return' → logprob: -12.535767555236816

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005649457452818751
    2. 'def' → logprob: -7.875565052032471
    3. 'of' → logprob: -9.000564575195312
    4. 'return' → logprob: -9.875564575195312
    5. '       ' → logprob: -12.250564575195312
    6. '  ' → logprob: -13.500564575195312
    7. '```' → logprob: -14.250564575195312
    8. ' of' → logprob: -14.625564575195312
    9. 'for' → logprob: -14.625564575195312
    10. '#' → logprob: -14.875564575195312

Token 180: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21308502554893494
    2. 'return' (adapté à ' return') → logprob: -1.7130850553512573
    3. 'points' → logprob: -4.463085174560547
    4. 'result' → logprob: -10.838085174560547
    5. 'returns' → logprob: -11.213085174560547
    6. 'pts' → logprob: -11.463085174560547
    7. 'point' → logprob: -12.088085174560547
    8. 'def' → logprob: -12.463085174560547
    9. '  ' → logprob: -12.713085174560547
    10. 'p' → logprob: -12.838085174560547

Token 181: ' sorted' (ID: 20099)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6542660593986511
    2. 'list' → logprob: -0.9042660593986511
    3. '[list' → logprob: -3.029266119003296
    4. ' [' → logprob: -4.404265880584717
    5. '   ' → logprob: -5.029265880584717
    6. 'map' → logprob: -5.154265880584717
    7. ' list' → logprob: -7.404265880584717
    8. '[(' → logprob: -7.654265880584717
    9. '[int' → logprob: -8.529266357421875
    10. '(list' → logprob: -8.654266357421875

Token 182: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12452998012304306
    2. '(lambda' → logprob: -2.374530076980591
    3. '(list' → logprob: -4.124529838562012
    4. '((' → logprob: -5.749529838562012
    5. '(input' → logprob: -7.499529838562012
    6. '(eval' → logprob: -7.624529838562012
    7. '([]' → logprob: -7.749529838562012
    8. '(def' → logprob: -7.874529838562012
    9. '(`' → logprob: -8.249529838562012
    10. '(map' → logprob: -8.499529838562012

Token 183: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.750004768371582
    3. '(input' → logprob: -14.375004768371582
    4. '(filter' → logprob: -15.250004768371582
    5. '(zip' → logprob: -15.500004768371582
    6. '(mapping' → logprob: -16.000003814697266
    7. '(chain' → logprob: -16.250003814697266
    8. '(set' → logprob: -16.625003814697266
    9. '(range' → logprob: -17.625003814697266
    10. '(com' → logprob: -17.750003814697266

Token 184: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.009254355914890766
    2. '(' → logprob: -5.259254455566406
    3. '(int' → logprob: -5.759254455566406
    4. '(func' → logprob: -8.509254455566406
    5. '(eval' → logprob: -8.884254455566406
    6. '(float' → logprob: -9.134254455566406
    7. '(range' → logprob: -9.884254455566406
    8. '(parse' → logprob: -10.009254455566406
    9. '(list' → logprob: -10.384254455566406
    10. '(re' → logprob: -10.634254455566406

Token 185: ' _:' (ID: 133568)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4323596954345703
    2. ':' → logprob: -1.6823596954345703
    3. 'p' → logprob: -1.8073596954345703
    4. ':p' → logprob: -7.80735969543457
    5. 'point' → logprob: -8.80735969543457
    6. '   ' → logprob: -8.93235969543457
    7. ' p' → logprob: -9.30735969543457
    8. 'pt' → logprob: -9.93235969543457
    9. 'lambda' → logprob: -10.05735969543457
    10. 'f' → logprob: -10.05735969543457

Token 186: ' list' (ID: 1562)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.4715571105480194
    2. '(' → logprob: -1.0965571403503418
    3. ' (' → logprob: -4.596557140350342
    4. 'list' → logprob: -5.096557140350342
    5. '(int' → logprob: -5.221557140350342
    6. 'input' → logprob: -5.221557140350342
    7. ' tuple' → logprob: -5.471557140350342
    8. '(tuple' → logprob: -5.971557140350342
    9. 'int' → logprob: -6.221557140350342
    10. 'consume' → logprob: -6.471557140350342

Token 187: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.003528206143528223
    2. '(range' → logprob: -5.878528118133545
    3. '(input' → logprob: -8.003528594970703
    4. '(lambda' → logprob: -9.128528594970703
    5. '(' → logprob: -9.378528594970703
    6. '(zip' → logprob: -10.003528594970703
    7. '(eval' → logprob: -10.128528594970703
    8. '()' → logprob: -10.503528594970703
    9. '(int' → logprob: -10.878528594970703
    10. '(float' → logprob: -11.003528594970703

Token 188: '()),' (ID: 24379)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011808603449026123
    2. '()' → logprob: -9.375118255615234
    3. '())' → logprob: -10.750118255615234
    4. '()).' → logprob: -11.500118255615234
    5. '()[' → logprob: -14.375118255615234
    6. '()),' → logprob: -15.375118255615234
    7. '()`' → logprob: -15.500118255615234
    8. '()))' → logprob: -15.875118255615234
    9. '('').' → logprob: -16.125118255615234
    10. '())))' → logprob: -16.375118255615234

Token 189: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009309518150985241
    2. ' range' → logprob: -4.7593092918396
    3. 'map' → logprob: -7.7593092918396
    4. '(range' → logprob: -8.634309768676758
    5. '[' → logprob: -11.009309768676758
    6. ' ' → logprob: -11.634309768676758
    7. '_range' → logprob: -11.634309768676758
    8. 'enumer' → logprob: -11.884309768676758
    9. 'input' → logprob: -12.009309768676758
    10. '   ' → logprob: -12.134309768676758

Token 190: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010306637705070898
    2. '(' → logprob: -9.250102996826172
    3. '(num' → logprob: -12.500102996826172
    4. '(N' → logprob: -13.875102996826172
    5. '(int' → logprob: -14.375102996826172
    6. '(len' → logprob: -14.375102996826172
    7. '(range' → logprob: -14.500102996826172
    8. '(m' → logprob: -16.250102996826172
    9. '(max' → logprob: -16.375102996826172
    10. '(nt' → logprob: -16.875102996826172

Token 191: '))))

' (ID: 161772)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.442557692527771
    2. '))' → logprob: -1.067557692527771
    3. '))),' → logprob: -5.4425578117370605
    4. ')))' → logprob: -5.6925578117370605
    5. ')))),' → logprob: -5.6925578117370605
    6. '   ' → logprob: -7.0675578117370605
    7. '))));
' → logprob: -7.4425578117370605
    8. '()))' → logprob: -8.442557334899902
    9. '))))
' → logprob: -8.692557334899902
    10. ')))))
' → logprob: -8.692557334899902

Token 192: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005701842252165079
    2. 'def' → logprob: -6.005702018737793
    3. '```' → logprob: -6.380702018737793
    4. 'return' → logprob: -6.755702018737793
    5. '<|end|>' → logprob: -9.505702018737793
    6. '<|end|>' → logprob: -9.630702018737793
    7. '       ' → logprob: -9.630702018737793
    8. ')' → logprob: -10.755702018737793
    9. '    ' → logprob: -11.130702018737793
    10. '	return' → logprob: -11.255702018737793

Token 193: ' main' (ID: 2758)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21621829271316528
    2. 'side' → logprob: -2.5912182331085205
    3. ' input' → logprob: -2.7162182331085205
    4. 'output' → logprob: -3.5912182331085205
    5. ' side' → logprob: -4.5912184715271
    6. 'parse' → logprob: -5.3412184715271
    7. ' output' → logprob: -6.0912184715271
    8. 'process' → logprob: -6.0912184715271
    9. 'points' → logprob: -7.2162184715271
    10. ' ' → logprob: -7.3412184715271

Token 194: 'loop' (ID: 14294)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0038302370812743902
    2. '(:' → logprob: -5.628830432891846
    3. '()' → logprob: -9.503829956054688
    4. ' ():' → logprob: -10.253829956054688
    5. '(":' → logprob: -10.378829956054688
    6. '(':' → logprob: -10.378829956054688
    7. '():
' → logprob: -10.878829956054688
    8. ':' → logprob: -11.503829956054688
    9. '(_:' → logprob: -11.753829956054688
    10. '(' → logprob: -11.753829956054688

Token 195: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01629640720784664
    2. '(:' → logprob: -4.14129638671875
    3. ':' → logprob: -10.14129638671875
    4. '()' → logprob: -10.14129638671875
    5. ' ():' → logprob: -10.26629638671875
    6. '(' → logprob: -10.39129638671875
    7. '(':' → logprob: -10.51629638671875
    8. '(_:' → logprob: -10.64129638671875
    9. '(":' → logprob: -10.76629638671875
    10. '():
' → logprob: -11.01629638671875

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.0484450437361374e-05
    2. 'pass' → logprob: -10.625040054321289
    3. '  ' → logprob: -11.375040054321289
    4. '```' → logprob: -13.500040054321289
    5. ' ' → logprob: -13.750040054321289
    6. '    ' → logprob: -13.875040054321289
    7. '	pass' → logprob: -14.875040054321289
    8. '       ' → logprob: -15.625040054321289
    9. 'global' → logprob: -15.750040054321289
    10. '	' → logprob: -16.25004005432129

Token 197: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008731221780180931
    2. 'pass' → logprob: -4.758731365203857
    3. '  ' → logprob: -10.6337308883667
    4. 'global' → logprob: -10.6337308883667
    5. 'while' (adapté à ' while') → logprob: -10.7587308883667
    6. '```' → logprob: -11.1337308883667
    7. '#' → logprob: -11.5087308883667
    8. ' ' → logprob: -11.7587308883667
    9. 'input' → logprob: -12.5087308883667
    10. '	pass' → logprob: -13.3837308883667

Token 198: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.31408247351646423
    2. ':' → logprob: -2.064082384109497
    3. ' True' → logprob: -2.939082384109497
    4. '   ' → logprob: -3.439082384109497
    5. '<|end|>' → logprob: -3.939082384109497
    6. ' ' → logprob: -4.689082622528076
    7. '```' → logprob: -5.189082622528076
    8. '(' → logprob: -5.564082622528076
    9. 'def' → logprob: -5.814082622528076
    10. '<|end|>' → logprob: -6.064082622528076

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013893934374209493
    2. ':
' → logprob: -9.125139236450195
    3. '   ' → logprob: -11.625139236450195
    4. ':`' → logprob: -12.250139236450195
    5. ':**' → logprob: -12.250139236450195
    6. ':

' → logprob: -12.375139236450195
    7. '::' → logprob: -13.125139236450195
    8. ':\' → logprob: -13.250139236450195
    9. ':<' → logprob: -14.500139236450195
    10. ':_' → logprob: -14.625139236450195

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015515214763581753
    2. '   ' → logprob: -6.501551628112793
    3. '     ' → logprob: -10.501551628112793
    4. '    ' → logprob: -12.126551628112793
    5. '      ' → logprob: -12.126551628112793
    6. 'pass' → logprob: -12.376551628112793
    7. '        ' → logprob: -12.751551628112793
    8. '  ' → logprob: -14.001551628112793
    9. ' ' → logprob: -14.126551628112793
    10. '           ' → logprob: -14.251551628112793

Token 201: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22077004611492157
    2. 'input' → logprob: -1.845770001411438
    3. 'pass' → logprob: -3.9707701206207275
    4. '   ' → logprob: -4.595769882202148
    5. '           ' → logprob: -4.970769882202148
    6. 'if' → logprob: -6.595769882202148
    7. 'inputs' → logprob: -7.595769882202148
    8. 'line' → logprob: -7.720769882202148
    9. 'user' → logprob: -7.845769882202148
    10. 'break' → logprob: -8.095769882202148

Token 202: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007313292473554611
    2. ' =' → logprob: -5.632313251495361
    3. '       ' → logprob: -6.132313251495361
    4. ':int' → logprob: -7.132313251495361
    5. '=' → logprob: -7.632313251495361
    6. '   ' → logprob: -9.38231372833252
    7. '           ' → logprob: -10.13231372833252
    8. '        ' → logprob: -11.00731372833252
    9. ' :' → logprob: -11.13231372833252
    10. '=int' → logprob: -11.13231372833252

Token 203: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004988207365386188
    2. ' int' → logprob: -8.25049877166748
    3. 'input' → logprob: -8.37549877166748
    4. '       ' → logprob: -12.00049877166748
    5. '   ' → logprob: -14.37549877166748
    6. ' ' → logprob: -16.000499725341797
    7. '(int' → logprob: -16.750499725341797
    8. '0' → logprob: -17.000499725341797
    9. '     ' → logprob: -17.125499725341797
    10. 'sys' → logprob: -17.625499725341797

Token 204: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021275393664836884
    2. '_points' → logprob: -5.146275520324707
    3. '_' → logprob: -5.396275520324707
    4. '(_)' → logprob: -5.771275520324707
    5. '('_' → logprob: -6.771275520324707
    6. '().' → logprob: -6.896275520324707
    7. '("_' → logprob: -7.146275520324707
    8. '()`' → logprob: -7.771275520324707
    9. '('.')' → logprob: -8.021275520324707
    10. '       ' → logprob: -8.521275520324707

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6537622034084052e-05
    2. '   ' → logprob: -10.62502670288086
    3. '           ' → logprob: -13.75002670288086
    4. '      ' → logprob: -15.00002670288086
    5. '        ' → logprob: -15.12502670288086
    6. '     ' → logprob: -15.25002670288086
    7. '        
' → logprob: -15.75002670288086
    8. 'n' → logprob: -16.00002670288086
    9. '               ' → logprob: -17.00002670288086
    10. '         ' → logprob: -17.50002670288086

Token 206: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006964474450796843
    2. 'n' → logprob: -5.256964683532715
    3. 'if' (adapté à ' if') → logprob: -6.381964683532715
    4. '   ' → logprob: -11.131964683532715
    5. 'int' → logprob: -11.631964683532715
    6. 'try' → logprob: -12.631964683532715
    7. '        ' → logprob: -13.131964683532715
    8. '           ' → logprob: -13.131964683532715
    9. '     ' → logprob: -13.256964683532715
    10. '      ' → logprob: -13.381964683532715

Token 207: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00782369077205658
    2. ' n' → logprob: -4.882823467254639
    3. 'not' → logprob: -8.632823944091797
    4. '   ' → logprob: -11.007823944091797
    5. '       ' → logprob: -11.882823944091797
    6. ' not' → logprob: -12.632823944091797
    7. '  ' → logprob: -13.382823944091797
    8. 'int' → logprob: -13.507823944091797
    9. ' ' → logprob: -13.632823944091797
    10. '(n' → logprob: -14.007823944091797

Token 208: ' ==' (ID: 951)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.21401908993721008
    2. '.strip' → logprob: -2.0890190601348877
    3. '==' → logprob: -2.7140190601348877
    4. '<=' → logprob: -6.714019298553467
    5. ' ==' → logprob: -7.589019298553467
    6. 'isdigit' → logprob: -7.839019298553467
    7. '<' → logprob: -8.339018821716309
    8. '.' → logprob: -9.214018821716309
    9. 'is' → logprob: -9.464018821716309
    10. '.lower' → logprob: -11.214018821716309

Token 209: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26584094762802124
    2. '"' → logprob: -1.515841007232666
    3. '''' → logprob: -5.015841007232666
    4. ''ex' → logprob: -5.390841007232666
    5. '""' → logprob: -6.890841007232666
    6. ''end' → logprob: -7.140841007232666
    7. ''q' → logprob: -8.015840530395508
    8. ''e' → logprob: -9.390840530395508
    9. ''s' → logprob: -9.515840530395508
    10. '"":' → logprob: -9.640840530395508

Token 210: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5995782017707825
    2. '"' → logprob: -0.8495782017707825
    3. ''ex' → logprob: -4.099578380584717
    4. '''' → logprob: -5.849578380584717
    5. ''end' → logprob: -6.099578380584717
    6. ''q' → logprob: -7.349578380584717
    7. '""' → logprob: -7.724578380584717
    8. '"":' → logprob: -8.724577903747559
    9. ''e' → logprob: -9.349577903747559
    10. ''s' → logprob: -9.724577903747559

Token 211: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008171620778739452
    2. ':
' → logprob: -5.133171558380127
    3. '       ' → logprob: -6.508171558380127
    4. '           ' → logprob: -7.258171558380127
    5. ':return' → logprob: -10.883172035217285
    6. '         ' → logprob: -11.258172035217285
    7. '   ' → logprob: -12.008172035217285
    8. ':

' → logprob: -13.508172035217285
    9. ':\' → logprob: -13.508172035217285
    10. '        ' → logprob: -14.258172035217285

Token 212: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008920865133404732
    2. 'break' → logprob: -4.758920669555664
    3. '       ' → logprob: -8.383920669555664
    4. '         ' → logprob: -9.883920669555664
    5. '          ' → logprob: -11.258920669555664
    6. '   ' → logprob: -12.758920669555664
    7. '               ' → logprob: -12.883920669555664
    8. 'return' → logprob: -13.008920669555664
    9. ' break' → logprob: -13.133920669555664
    10. '            ' → logprob: -13.758920669555664

Token 213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013194826431572437
    2. '   ' → logprob: -4.388195037841797
    3. 'n' → logprob: -7.638195037841797
    4. '           ' → logprob: -8.888195037841797
    5. '        
' → logprob: -11.513195037841797
    6. '        ' → logprob: -11.638195037841797
    7. '               ' → logprob: -11.888195037841797
    8. '     ' → logprob: -11.888195037841797
    9. 'def' → logprob: -12.013195037841797
    10. '      ' → logprob: -12.138195037841797

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009898928925395012
    2. '   ' → logprob: -4.634899139404297
    3. 'n' → logprob: -9.634899139404297
    4. '           ' → logprob: -9.634899139404297
    5. '     ' → logprob: -13.259899139404297
    6. '      ' → logprob: -13.259899139404297
    7. '        ' → logprob: -13.384899139404297
    8. '               ' → logprob: -13.509899139404297
    9. '        
' → logprob: -14.009899139404297
    10. 'def' → logprob: -14.259899139404297

Token 215: ' global' (ID: 5466)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0383581705391407
    2. 'n' → logprob: -3.288358211517334
    3. '   ' → logprob: -8.288357734680176
    4. 'points' → logprob: -9.913357734680176
    5. 'D' → logprob: -12.538357734680176
    6. '           ' → logprob: -13.038357734680176
    7. '      ' → logprob: -13.038357734680176
    8. '     ' → logprob: -13.163357734680176
    9. 'd' → logprob: -13.663357734680176
    10. '        ' → logprob: -13.913357734680176

Token 216: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: 0.0
    2. ' D' → logprob: -19.5
    3. 'E' → logprob: -24.25
    4. 'A' → logprob: -24.25
    5. 'N' → logprob: -24.25
    6. 'C' → logprob: -24.375
    7. 'R' → logprob: -25.625
    8. 'B' → logprob: -25.75
    9. '   ' → logprob: -26.0
    10. 'P' → logprob: -26.125

Token 217: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01618381403386593
    2. 'D' → logprob: -4.266183853149414
    3. '   ' → logprob: -6.266183853149414
    4. '
' → logprob: -10.266183853149414
    5. ' =' → logprob: -10.516183853149414
    6. 'n' → logprob: -10.641183853149414
    7. '        ' → logprob: -11.891183853149414
    8. '      ' → logprob: -11.891183853149414
    9. '     ' → logprob: -12.141183853149414
    10. '        
' → logprob: -12.516183853149414

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015514736878685653
    2. 'D' → logprob: -9.250155448913574
    3. '   ' → logprob: -9.750155448913574
    4. '      ' → logprob: -15.125155448913574
    5. '     ' → logprob: -15.750155448913574
    6. '        ' → logprob: -15.875155448913574
    7. '           ' → logprob: -16.375154495239258
    8. '    ' → logprob: -18.375154495239258
    9. '  ' → logprob: -18.625154495239258
    10. '         ' → logprob: -18.875154495239258

Token 219: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.5759416222572327
    2. '       ' → logprob: -0.8259416222572327
    3. '   ' → logprob: -13.825942039489746
    4. ' D' → logprob: -14.450942039489746
    5. '      ' → logprob: -15.200942039489746
    6. '     ' → logprob: -15.575942039489746
    7. '        ' → logprob: -15.950942039489746
    8. '           ' → logprob: -16.70094108581543
    9. '         ' → logprob: -18.32594108581543
    10. '    ' → logprob: -18.57594108581543

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20147094130516052
    2. ' =' → logprob: -1.701470971107483
    3. '=[]' → logprob: -10.576471328735352
    4. '   ' → logprob: -11.326471328735352
    5. '=list' → logprob: -11.451471328735352
    6. '.append' → logprob: -12.701471328735352
    7. ' ' → logprob: -13.326471328735352
    8. '       ' → logprob: -13.701471328735352
    9. '=`' → logprob: -14.451471328735352
    10. '＝' → logprob: -14.951471328735352

Token 221: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5770499110221863
    2. '[]' → logprob: -0.8270499110221863
    3. 'input' → logprob: -7.577049732208252
    4. 'sorted' → logprob: -8.32705020904541
    5. ' []' → logprob: -8.70205020904541
    6. ' list' → logprob: -9.32705020904541
    7. 'eval' → logprob: -10.32705020904541
    8. '[list' → logprob: -10.82705020904541
    9. '[]}' → logprob: -11.32705020904541
    10. '[' → logprob: -11.57705020904541

Token 222: '_points' (ID: 30070)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.818755030632019
    2. '()' → logprob: -0.943755030632019
    3. '_points' → logprob: -1.818755030632019
    4. 'points' → logprob: -6.193755149841309
    5. '_' → logprob: -6.568755149841309
    6. '_lines' → logprob: -7.568755149841309
    7. '()`' → logprob: -7.818755149841309
    8. 'Points' → logprob: -7.943755149841309
    9. '_POINTS' → logprob: -8.068755149841309
    10. '_list' → logprob: -8.193755149841309

Token 223: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012091637589037418
    2. '(int' → logprob: -4.512091636657715
    3. '(' → logprob: -7.012091636657715
    4. '(num' → logprob: -10.137091636657715
    5. '(`' → logprob: -11.512091636657715
    6. '       ' → logprob: -11.637091636657715
    7. '()' → logprob: -11.637091636657715
    8. 'n' → logprob: -11.762091636657715
    9. '(N' → logprob: -11.762091636657715
    10. '   ' → logprob: -12.262091636657715

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04847108572721481
    2. '))' → logprob: -3.173470973968506
    3. ')
' → logprob: -5.548470973968506
    4. '))
' → logprob: -7.048470973968506
    5. '       ' → logprob: -7.548470973968506
    6. '())' → logprob: -10.173471450805664
    7. ')

' → logprob: -10.673471450805664
    8. '           ' → logprob: -10.923471450805664
    9. '   ' → logprob: -11.048471450805664
    10. '```' → logprob: -11.173471450805664

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03836390748620033
    2. '   ' → logprob: -3.2883639335632324
    3. '           ' → logprob: -8.413363456726074
    4. 'def' → logprob: -10.163363456726074
    5. 'D' → logprob: -11.038363456726074
    6. 'n' → logprob: -11.163363456726074
    7. '               ' → logprob: -12.288363456726074
    8. '        ' → logprob: -12.288363456726074
    9. '     ' → logprob: -12.413363456726074
    10. '      ' → logprob: -12.663363456726074

Token 226: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018422940047457814
    2. '   ' → logprob: -9.500184059143066
    3. 'D' → logprob: -10.375184059143066
    4. '        ' → logprob: -11.625184059143066
    5. 'main' → logprob: -11.625184059143066
    6. 'def' → logprob: -11.750184059143066
    7. 'n' → logprob: -12.000184059143066
    8. '      ' → logprob: -12.000184059143066
    9. '     ' → logprob: -12.375184059143066
    10. 'print' → logprob: -12.375184059143066

Token 227: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1208537369966507
    2. '2' → logprob: -3.4958536624908447
    3. 'r' → logprob: -3.4958536624908447
    4. '=' → logprob: -3.7458536624908447
    5. ' =' → logprob: -4.370853900909424
    6. 'D' → logprob: -4.745853900909424
    7. '=p' → logprob: -6.495853900909424
    8. '       ' → logprob: -6.870853900909424
    9. 'p' → logprob: -6.870853900909424
    10. 'print' → logprob: -7.120853900909424

Token 228: ' p' (ID: 275)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6223496794700623
    2. 'D' → logprob: -1.622349739074707
    3. 'input' → logprob: -2.247349739074707
    4. 'per' → logprob: -2.372349739074707
    5. 'reduce' → logprob: -3.872349739074707
    6. 'sorted' → logprob: -3.997349739074707
    7. 'consume' → logprob: -4.247349739074707
    8. 'perm' → logprob: -5.997349739074707
    9. 'tuple' → logprob: -6.122349739074707
    10. 'chain' → logprob: -6.497349739074707

Token 229: '1' (ID: 16)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.6903984546661377
    2. 'op' → logprob: -1.3153984546661377
    3. '1' → logprob: -2.6903984546661377
    4. 'r' → logprob: -2.9403984546661377
    5. '[' → logprob: -3.5653984546661377
    6. 'oint' → logprob: -3.8153984546661377
    7. '=' → logprob: -4.315398216247559
    8. ' =' → logprob: -5.315398216247559
    9. 'print' → logprob: -5.565398216247559
    10. 'ermut' → logprob: -5.815398216247559

Token 230: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03657951205968857
    2. '1' → logprob: -4.286579608917236
    3. '       ' → logprob: -4.536579608917236
    4. '   ' → logprob: -6.036579608917236
    5. 'p' → logprob: -6.161579608917236
    6. ';' → logprob: -6.536579608917236
    7. 'r' → logprob: -6.911579608917236
    8. '[' → logprob: -7.161579608917236
    9. 'D' → logprob: -7.411579608917236
    10. '#' → logprob: -7.536579608917236

Token 231: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.034504178911447525
    2. 'list' → logprob: -3.7845041751861572
    3. 'consume' → logprob: -5.284504413604736
    4. 'input' → logprob: -5.909504413604736
    5. 'tuple' → logprob: -6.409504413604736
    6. 'p' → logprob: -6.534504413604736
    7. 'sorted' → logprob: -9.034503936767578
    8. ' D' → logprob: -10.159503936767578
    9. 'map' → logprob: -11.034503936767578
    10. 'cons' → logprob: -11.034503936767578

Token 232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012933614663779736
    2. '.pop' → logprob: -5.387933731079102
    3. '.copy' → logprob: -6.012933731079102
    4. 'p' → logprob: -6.637933731079102
    5. 'copy' → logprob: -7.012933731079102
    6. '[:-' → logprob: -7.262933731079102
    7. 'pop' → logprob: -7.387933731079102
    8. '[-' → logprob: -7.512933731079102
    9. 'list' → logprob: -7.637933731079102
    10. '[:' → logprob: -8.262933731079102

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -13.625000953674316
    3. 'n' → logprob: -18.250001907348633
    4. '-' → logprob: -18.625001907348633
    5. ' ' → logprob: -19.625001907348633
    6. '2' → logprob: -19.750001907348633
    7. '[' → logprob: -22.000001907348633
    8. '3' → logprob: -22.375001907348633
    9. '(' → logprob: -22.625001907348633
    10. '   ' → logprob: -22.750001907348633

Token 234: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030159223824739456
    2. ']' → logprob: -3.5301592350006104
    3. '[' → logprob: -8.155158996582031
    4. '])' → logprob: -10.405158996582031
    5. ')][' → logprob: -10.655158996582031
    6. ']
' → logprob: -10.780158996582031
    7. '])[' → logprob: -11.155158996582031
    8. '][-' → logprob: -11.530158996582031
    9. ']][' → logprob: -12.280158996582031
    10. '   ' → logprob: -12.405158996582031

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000877039332408458
    2. '   ' → logprob: -7.6258769035339355
    3. 'p' → logprob: -8.000877380371094
    4. '           ' → logprob: -10.250877380371094
    5. 'D' → logprob: -11.375877380371094
    6. '      ' → logprob: -13.625877380371094
    7. '     ' → logprob: -13.750877380371094
    8. '               ' → logprob: -13.875877380371094
    9. '        ' → logprob: -14.000877380371094
    10. 'd' → logprob: -14.375877380371094

Token 236: ' D' (ID: 415)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47536802291870117
    2. '       ' → logprob: -0.9753680229187012
    3. 'd' → logprob: -7.725368022918701
    4. 'D' (adapté à ' D') → logprob: -7.850368022918701
    5. '   ' → logprob: -8.47536849975586
    6. 's' → logprob: -9.35036849975586
    7. 'c' → logprob: -9.85036849975586
    8. 'r' → logprob: -11.35036849975586
    9. 'n' → logprob: -11.60036849975586
    10. 'v' → logprob: -11.60036849975586

Token 237: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24130629003047943
    2. ' =' → logprob: -1.8663063049316406
    3. '.pop' → logprob: -3.6163063049316406
    4. '[' → logprob: -4.241306304931641
    5. '.append' → logprob: -4.491306304931641
    6. '=p' → logprob: -6.366306304931641
    7. '.sort' → logprob: -6.866306304931641
    8. '[:]' → logprob: -7.116306304931641
    9. '=[]' → logprob: -7.241306304931641
    10. '=[' → logprob: -7.241306304931641

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011357853189110756
    2. ' =' → logprob: -4.76135778427124
    3. ',' → logprob: -6.01135778427124
    4. '=p' → logprob: -9.136358261108398
    5. '   ' → logprob: -9.886358261108398
    6. '.append' → logprob: -10.261358261108398
    7. 'D' → logprob: -11.136358261108398
    8. '=D' → logprob: -11.136358261108398
    9. '[' → logprob: -11.261358261108398
    10. '       ' → logprob: -11.261358261108398

Token 239: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.03925607353448868
    2. 'list' → logprob: -3.4142560958862305
    3. '[]' → logprob: -6.1642560958862305
    4. 'sorted' → logprob: -6.7892560958862305
    5. '[D' → logprob: -7.0392560958862305
    6. '[' → logprob: -7.5392560958862305
    7. ' D' → logprob: -7.9142560958862305
    8. 'reduce' → logprob: -8.16425609588623
    9. 'p' → logprob: -9.78925609588623
    10. '[p' → logprob: -9.91425609588623

Token 240: '[:' (ID: 7808)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.3788764774799347
    2. '[' → logprob: -2.0038764476776123
    3. '       ' → logprob: -2.0038764476776123
    4. '[:' → logprob: -4.003876686096191
    5. 'D' → logprob: -4.628876686096191
    6. 'copy' → logprob: -5.503876686096191
    7. '[:]' → logprob: -5.628876686096191
    8. '   ' → logprob: -6.003876686096191
    9. '[:-' → logprob: -6.503876686096191
    10. '[::-' → logprob: -7.128876686096191

Token 241: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49700549244880676
    2. 'len' → logprob: -1.4970054626464844
    3. 'n' → logprob: -2.4970054626464844
    4. '1' → logprob: -2.6220054626464844
    5. '0' → logprob: -4.997005462646484
    6. 'p' → logprob: -5.247005462646484
    7. '2' → logprob: -7.497005462646484
    8. '-n' → logprob: -9.497005462646484
    9. ' -' → logprob: -9.997005462646484
    10. '(len' → logprob: -10.247005462646484

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8908587662735954e-05
    2. '   ' → logprob: -11.125019073486328
    3. '           ' → logprob: -13.125019073486328
    4. 'D' → logprob: -14.000019073486328
    5. 'p' → logprob: -14.125019073486328
    6. '      ' → logprob: -15.750019073486328
    7. '        ' → logprob: -16.000019073486328
    8. '               ' → logprob: -16.000019073486328
    9. '     ' → logprob: -16.125019073486328
    10. '         ' → logprob: -17.000019073486328

Token 243: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00499441334977746
    2. 'D' → logprob: -5.3799943923950195
    3. 'p' → logprob: -8.00499439239502
    4. '   ' → logprob: -10.50499439239502
    5. '           ' → logprob: -12.00499439239502
    6. '      ' → logprob: -13.25499439239502
    7. '        ' → logprob: -13.50499439239502
    8. '     ' → logprob: -13.62999439239502
    9. '               ' → logprob: -14.12999439239502
    10. '         ' → logprob: -14.50499439239502

Token 244: ' Rope' (ID: 168223)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.13594366610050201
    2. '       ' → logprob: -2.135943651199341
    3. 'p' → logprob: -4.76094388961792
    4. '   ' → logprob: -8.260943412780762
    5. '           ' → logprob: -9.510943412780762
    6. 'for' → logprob: -10.635943412780762
    7. '               ' → logprob: -11.760943412780762
    8. '        ' → logprob: -11.885943412780762
    9. '     ' → logprob: -12.010943412780762
    10. '```' → logprob: -12.260943412780762

Token 245: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5085580348968506
    2. 'D' → logprob: -1.5085580348968506
    3. '       ' → logprob: -2.1335580348968506
    4. 'length' → logprob: -2.2585580348968506
    5. '   ' → logprob: -2.5085580348968506
    6. '```' → logprob: -3.3835580348968506
    7. ' =' → logprob: -3.6335580348968506
    8. '#' → logprob: -3.7585580348968506
    9. 'way' → logprob: -3.7585580348968506
    10. '     ' → logprob: -4.38355827331543

Token 246: ' recursion' (ID: 122185)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.19756901264190674
    2. 'p' → logprob: -2.072568893432617
    3. 'the' → logprob: -3.197568893432617
    4. 'a' → logprob: -5.697568893432617
    5. '   ' → logprob: -6.322568893432617
    6. 'range' → logprob: -6.447568893432617
    7. '#' → logprob: -7.697568893432617
    8. 'use' → logprob: -7.697568893432617
    9. 'progress' → logprob: -7.947568893432617
    10. 's' → logprob: -8.197568893432617

Token 247: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026718350127339363
    2. '   ' → logprob: -3.7767183780670166
    3. '#' → logprob: -6.5267181396484375
    4. 'D' → logprob: -7.1517181396484375
    5. 'p' → logprob: -7.9017181396484375
    6. '           ' → logprob: -8.026718139648438
    7. 'def' → logprob: -8.651718139648438
    8. '     ' → logprob: -9.526718139648438
    9. '               ' → logprob: -9.776718139648438
    10. '        ' → logprob: -10.151718139648438

Token 248: ' procedural' (ID: 128482)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.145050048828125
    2. '   ' → logprob: -1.645050048828125
    3. '       ' → logprob: -2.270050048828125
    4. 'D' → logprob: -2.645050048828125
    5. 'def' → logprob: -2.645050048828125
    6. 'continu' → logprob: -3.270050048828125
    7. 'p' → logprob: -3.395050048828125
    8. 'handling' → logprob: -4.145050048828125
    9. 'processing' → logprob: -4.395050048828125
    10. 'back' → logprob: -4.770050048828125

Token 249: ' style' (ID: 2713)
  Prédit: 'style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'style' → logprob: -1.0580750703811646
    2. 'program' → logprob: -1.6830750703811646
    3. 'generation' → logprob: -1.8080750703811646
    4. 'ab' → logprob: -2.433074951171875
    5. 'code' → logprob: -3.308074951171875
    6. 'definition' → logprob: -3.433074951171875
    7. 'appro' → logprob: -3.558074951171875
    8. 'design' → logprob: -3.808074951171875
    9. 'function' → logprob: -4.683074951171875
    10. 'calls' → logprob: -4.933074951171875

Token 250: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021935829892754555
    2. '   ' → logprob: -4.021935939788818
    3. 'D' → logprob: -5.771935939788818
    4. 'def' → logprob: -8.39693546295166
    5. '           ' → logprob: -8.89693546295166
    6. 'p' → logprob: -9.27193546295166
    7. ',' → logprob: -10.14693546295166
    8. '     ' → logprob: -10.52193546295166
    9. '#' → logprob: -10.52193546295166
    10. '               ' → logprob: -10.64693546295166

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001114616054110229
    2. '   ' → logprob: -7.001114845275879
    3. 'D' → logprob: -9.251114845275879
    4. 'p' → logprob: -9.876114845275879
    5. '           ' → logprob: -10.126114845275879
    6. '      ' → logprob: -12.501114845275879
    7. '     ' → logprob: -12.626114845275879
    8. '        ' → logprob: -12.751114845275879
    9. '               ' → logprob: -13.126114845275879
    10. '         ' → logprob: -13.626114845275879

Token 252: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31726616621017456
    2. 'D' → logprob: -1.3172662258148193
    3. 'p' → logprob: -5.81726598739624
    4. '   ' → logprob: -7.06726598739624
    5. 'return' → logprob: -9.692266464233398
    6. 'def' (adapté à ' def') → logprob: -10.192266464233398
    7. 'R' → logprob: -11.192266464233398
    8. '     ' → logprob: -11.942266464233398
    9. '      ' → logprob: -11.942266464233398
    10. '           ' → logprob: -12.067266464233398

Token 253: ' trampoline' (ID: 162506)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3169615566730499
    2. 'side' → logprob: -1.9419615268707275
    3. 'recursive' → logprob: -2.9419615268707275
    4. 'inner' → logprob: -3.5669615268707275
    5. 'f' → logprob: -4.441961765289307
    6. 'rec' → logprob: -4.566961765289307
    7. 'wrapper' → logprob: -4.566961765289307
    8. 'helper' → logprob: -5.316961765289307
    9. 'wrap' → logprob: -6.066961765289307
    10. 're' → logprob: -6.816961765289307

Token 254: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015419373812619597
    2. '()' → logprob: -9.000154495239258
    3. '():
' → logprob: -11.125154495239258
    4. '(' → logprob: -12.250154495239258
    5. '(:' → logprob: -12.375154495239258
    6. ' ():' → logprob: -13.000154495239258
    7. '(_:' → logprob: -13.625154495239258
    8. '(":' → logprob: -14.375154495239258
    9. '(_' → logprob: -14.625154495239258
    10. '(':' → logprob: -14.750154495239258

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.585728108882904
    2. '):' → logprob: -1.2107281684875488
    3. '):
' → logprob: -2.085728168487549
    4. ',' → logprob: -4.710728168487549
    5. ')' → logprob: -5.585728168487549
    6. ':' → logprob: -6.085728168487549
    7. '```' → logprob: -6.585728168487549
    8. 'p' → logprob: -7.210728168487549
    9. '       ' → logprob: -7.460728168487549
    10. '):
' → logprob: -7.585728168487549

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024093042593449354
    2. ',p' → logprob: -6.8774094581604
    3. '):' → logprob: -6.8774094581604
    4. '):
' → logprob: -8.502408981323242
    5. '   ' → logprob: -9.127408981323242
    6. '       ' → logprob: -10.877408981323242
    7. 'def' → logprob: -12.502408981323242
    8. ':' → logprob: -13.127408981323242
    9. '),' → logprob: -13.752408981323242
    10. '):

' → logprob: -13.877408981323242

Token 257: ' D' (ID: 415)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.1318875446449965e-05
    2. ' p' → logprob: -10.125041007995605
    3. '       ' → logprob: -14.000041007995605
    4. 'D' → logprob: -15.625041007995605
    5. '           ' → logprob: -16.875041961669922
    6. '   ' → logprob: -17.000041961669922
    7. '	p' → logprob: -18.000041961669922
    8. '```' → logprob: -18.000041961669922
    9. '        ' → logprob: -18.125041961669922
    10. 'd' → logprob: -18.250041961669922

Token 258: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7001096606254578
    2. '1' → logprob: -1.0751097202301025
    3. 'D' → logprob: -1.9501097202301025
    4. '):
' → logprob: -4.200109481811523
    5. ',' → logprob: -5.700109481811523
    6. ')' → logprob: -7.325109481811523
    7. ' D' → logprob: -8.075109481811523
    8. '):

' → logprob: -8.325109481811523
    9. '[' → logprob: -8.950109481811523
    10. '):
' → logprob: -9.950109481811523

Token 259: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6020233035087585
    2. '):
' → logprob: -1.2270233631134033
    3. ',' → logprob: -1.8520233631134033
    4. '       ' → logprob: -6.977023124694824
    5. '   ' → logprob: -7.352023124694824
    6. '):

' → logprob: -7.852023124694824
    7. '):
' → logprob: -9.227023124694824
    8. ')' → logprob: -9.477023124694824
    9. '           ' → logprob: -10.477023124694824
    10. '),' → logprob: -11.727023124694824

Token 260: ' anchor' (ID: 31067)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.693203866481781
    2. 'p' → logprob: -0.693203866481781
    3. '   ' → logprob: -10.818203926086426
    4. '       ' → logprob: -10.818203926086426
    5. ' p' → logprob: -12.193203926086426
    6. ' D' → logprob: -12.693203926086426
    7. '           ' → logprob: -13.193203926086426
    8. 'P' → logprob: -13.568203926086426
    9. '               ' → logprob: -13.943203926086426
    10. '):' → logprob: -14.568203926086426

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03820294514298439
    2. '):
' → logprob: -3.413203001022339
    3. ',' → logprob: -5.53820276260376
    4. ')' → logprob: -8.663203239440918
    5. '   ' → logprob: -9.038203239440918
    6. '):

' → logprob: -9.163203239440918
    7. '       ' → logprob: -9.788203239440918
    8. '):
' → logprob: -9.788203239440918
    9. ':' → logprob: -10.288203239440918
    10. '=None' → logprob: -10.538203239440918

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005564567167311907
    2. '       ' → logprob: -5.2555646896362305
    3. '   ' → logprob: -8.50556468963623
    4. '         ' → logprob: -9.75556468963623
    5. '               ' → logprob: -9.88056468963623
    6. '          ' → logprob: -11.75556468963623
    7. '        ' → logprob: -12.63056468963623
    8. '            ' → logprob: -13.00556468963623
    9. '             ' → logprob: -13.63056468963623
    10. '                   ' → logprob: -13.88056468963623

Token 263: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41161489486694336
    2. '               ' → logprob: -1.4116148948669434
    3. 'return' → logprob: -2.9116148948669434
    4. 'p' → logprob: -4.036614894866943
    5. '   ' → logprob: -4.161614894866943
    6. '       ' → logprob: -5.786614894866943
    7. 'D' → logprob: -6.786614894866943
    8. '             ' → logprob: -7.286614894866943
    9. 'pass' → logprob: -7.536614894866943
    10. '         ' → logprob: -9.036615371704102

Token 264: ' Wrap' (ID: 60850)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1471112221479416
    2. 'return' → logprob: -2.522111177444458
    3. '       ' → logprob: -3.272111177444458
    4. '   ' → logprob: -5.022111415863037
    5. '               ' → logprob: -5.147111415863037
    6. 'p' → logprob: -6.272111415863037
    7. 'def' → logprob: -6.772111415863037
    8. '         ' → logprob: -6.772111415863037
    9. 'anchor' → logprob: -7.147111415863037
    10. 'D' → logprob: -7.522111415863037

Token 265: ' whole' (ID: 6062)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32583606243133545
    2. '               ' → logprob: -2.825836181640625
    3. '       ' → logprob: -2.950836181640625
    4. '             ' → logprob: -3.450836181640625
    5. 'around' → logprob: -3.450836181640625
    6. 'def' → logprob: -3.825836181640625
    7. '   ' → logprob: -3.825836181640625
    8. '         ' → logprob: -3.950836181640625
    9. 'up' → logprob: -4.200836181640625
    10. 'function' → logprob: -5.450836181640625

Token 266: ' process' (ID: 2273)
  Prédit: 'function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'function' → logprob: -0.00122070184443146
    2. 'tr' → logprob: -7.376220703125
    3. 'def' → logprob: -7.876220703125
    4. 'func' → logprob: -9.501220703125
    5. 'body' → logprob: -10.626220703125
    6. ' function' → logprob: -11.251220703125
    7. 'procedure' → logprob: -11.251220703125
    8. 'code' → logprob: -11.376220703125
    9. 'loop' → logprob: -11.376220703125
    10. '   ' → logprob: -11.751220703125

Token 267: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03741860389709473
    2. '           ' → logprob: -3.4124186038970947
    3. '       ' → logprob: -5.912418365478516
    4. '               ' → logprob: -8.037418365478516
    5. 'inside' → logprob: -8.787418365478516
    6. ' in' → logprob: -8.912418365478516
    7. '   ' → logprob: -9.037418365478516
    8. 'around' → logprob: -9.162418365478516
    9. '         ' → logprob: -9.412418365478516
    10. 'within' → logprob: -9.912418365478516

Token 268: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21008238196372986
    2. 'tr' → logprob: -1.8350824117660522
    3. 'lambda' → logprob: -4.460082530975342
    4. 'def' → logprob: -4.710082530975342
    5. 'an' → logprob: -5.835082530975342
    6. 'the' → logprob: -6.210082530975342
    7. 'function' → logprob: -6.335082530975342
    8. 'one' → logprob: -7.085082530975342
    9. 'try' → logprob: -7.460082530975342
    10. '   ' → logprob: -8.460082054138184

Token 269: ' iterator' (ID: 30787)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8048648834228516
    2. '           ' → logprob: -0.9298648834228516
    3. '   ' → logprob: -2.8048648834228516
    4. '       ' → logprob: -2.9298648834228516
    5. '```' → logprob: -4.429864883422852
    6. '#' → logprob: -4.554864883422852
    7. '               ' → logprob: -4.679864883422852
    8. '         ' → logprob: -5.804864883422852
    9. 'com' → logprob: -6.054864883422852
    10. '``' → logprob: -7.429864883422852

Token 270: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23273594677448273
    2. '       ' → logprob: -1.6077359914779663
    3. '   ' → logprob: -5.982736110687256
    4. '               ' → logprob: -6.232736110687256
    5. '         ' → logprob: -6.982736110687256
    6. 'def' → logprob: -7.357736110687256
    7. 'for' → logprob: -8.482735633850098
    8. '```' → logprob: -8.607735633850098
    9. 'return' → logprob: -8.982735633850098
    10. ':' → logprob: -8.982735633850098

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022980479523539543
    2. '               ' → logprob: -4.272980690002441
    3. '       ' → logprob: -4.772980690002441
    4. '   ' → logprob: -8.522980690002441
    5. '         ' → logprob: -10.147980690002441
    6. '             ' → logprob: -10.897980690002441
    7. '                   ' → logprob: -10.897980690002441
    8. '```' → logprob: -11.647980690002441
    9. '            ' → logprob: -11.647980690002441
    10. '          ' → logprob: -12.147980690002441

Token 272: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03711391240358353
    2. 'return' → logprob: -3.537113904953003
    3. '               ' → logprob: -6.162114143371582
    4. '       ' → logprob: -6.162114143371582
    5. 'for' → logprob: -6.787114143371582
    6. '   ' → logprob: -7.037114143371582
    7. 'item' → logprob: -7.787114143371582
    8. 'while' → logprob: -8.662114143371582
    9. 'yield' → logprob: -8.912114143371582
    10. '```' → logprob: -9.412114143371582

Token 273: ' finder' (ID: 61306)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.012621717527508736
    2. 'wrapper' → logprob: -5.887621879577637
    3. 'iterator' → logprob: -6.012621879577637
    4. 'process' → logprob: -6.637621879577637
    5. 'next' → logprob: -7.137621879577637
    6. 'f' → logprob: -7.137621879577637
    7. 'inner' → logprob: -7.262621879577637
    8. 'wrap' → logprob: -7.387621879577637
    9. 'consume' → logprob: -7.887621879577637
    10. 'iter' → logprob: -8.012621879577637

Token 274: '():
' (ID: 8595)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.030431795865297318
    2. '():' → logprob: -3.9054317474365234
    3. '(*' → logprob: -5.280431747436523
    4. '():
' → logprob: -6.030431747436523
    5. '(' → logprob: -6.655431747436523
    6. '(_' → logprob: -8.155431747436523
    7. '   ' → logprob: -8.655431747436523
    8. '(c' → logprob: -9.780431747436523
    9. '(x' → logprob: -9.905431747436523
    10. '(item' → logprob: -10.030431747436523

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018446780450176448
    2. '           ' → logprob: -9.250184059143066
    3. '             ' → logprob: -10.125184059143066
    4. 'return' → logprob: -10.625184059143066
    5. '              ' → logprob: -11.500184059143066
    6. '   ' → logprob: -12.125184059143066
    7. '                ' → logprob: -12.625184059143066
    8. '                   ' → logprob: -13.125184059143066
    9. '       ' → logprob: -13.500184059143066
    10. '            ' → logprob: -14.750184059143066

Token 276: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.052334509789943695
    2. 'return' (adapté à ' return') → logprob: -3.5523345470428467
    3. '               ' → logprob: -3.9273345470428467
    4. 'yield' → logprob: -6.802334308624268
    5. '                 ' → logprob: -7.427334308624268
    6. 'pass' → logprob: -8.052334785461426
    7. 'for' → logprob: -8.552334785461426
    8. '                  ' → logprob: -8.677334785461426
    9. '```' → logprob: -9.677334785461426
    10. '                    ' → logprob: -9.802334785461426

Token 277: ' filter' (ID: 6690)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12821215391159058
    2. 'list' → logprob: -3.3782122135162354
    3. '                   ' → logprob: -3.5032122135162354
    4. 'iter' → logprob: -4.003211975097656
    5. 'chain' → logprob: -4.253211975097656
    6. 'next' → logprob: -5.003211975097656
    7. '           ' → logprob: -5.253211975097656
    8. 'D' → logprob: -6.128211975097656
    9. 'per' → logprob: -6.753211975097656
    10. '                ' → logprob: -6.878211975097656

Token 278: '(lambda' (ID: 43341)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07091757655143738
    2. '(lambda' → logprob: -3.1959176063537598
    3. '(' → logprob: -4.07091760635376
    4. '                   ' → logprob: -6.07091760635376
    5. '           ' → logprob: -6.44591760635376
    6. '                ' → logprob: -6.57091760635376
    7. '   ' → logprob: -6.69591760635376
    8. '              ' → logprob: -6.94591760635376
    9. '             ' → logprob: -7.44591760635376
    10. '                 ' → logprob: -7.69591760635376

Token 279: ' pp' (ID: 25476)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035263022873550653
    2. '_:' → logprob: -6.003526210784912
    3. 'x' → logprob: -7.628526210784912
    4. 'p' → logprob: -7.628526210784912
    5. ':p' → logprob: -10.25352668762207
    6. ':_' → logprob: -10.87852668762207
    7. ' _:' → logprob: -11.62852668762207
    8. '__:' → logprob: -12.37852668762207
    9. ' p' → logprob: -13.75352668762207
    10. ' :' → logprob: -13.87852668762207

Token 280: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: 0.0
    2. ' :' → logprob: -19.5
    3. ':(' → logprob: -20.0
    4. ':`' → logprob: -20.375
    5. ':p' → logprob: -20.875
    6. ':self' → logprob: -21.0
    7. ':_' → logprob: -21.25
    8. ':return' → logprob: -21.375
    9. ':not' → logprob: -21.375
    10. ':**' → logprob: -21.5

Token 281: ' p' (ID: 275)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.19574621319770813
    2. 'pp' → logprob: -1.8207461833953857
    3. 'p' → logprob: -4.195746421813965
    4. 'not' → logprob: -7.945746421813965
    5. ' pp' → logprob: -8.945746421813965
    6. '   ' → logprob: -9.445746421813965
    7. ' side' → logprob: -9.695746421813965
    8. ' p' → logprob: -10.320746421813965
    9. 'predicate' → logprob: -10.570746421813965
    10. 'True' → logprob: -10.945746421813965

Token 282: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6715073585510254
    2. '1' → logprob: -0.9215073585510254
    3. 'p' → logprob: -2.5465073585510254
    4. '(p' → logprob: -5.296507358551025
    5. 'D' → logprob: -6.046507358551025
    6. '[' → logprob: -6.296507358551025
    7. '[p' → logprob: -6.421507358551025
    8. '```' → logprob: -7.171507358551025
    9. '(' → logprob: -8.671506881713867
    10. '``' → logprob: -9.046506881713867

Token 283: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3062680959701538
    2. 'in' → logprob: -2.1812682151794434
    3. '!=' → logprob: -2.1812682151794434
    4. 'not' → logprob: -3.4312682151794434
    5. ' in' → logprob: -5.681268215179443
    6. ' not' → logprob: -6.931268215179443
    7. ' !=' → logprob: -7.306268215179443
    8. ' ==' → logprob: -8.056267738342285
    9. '[' → logprob: -9.056267738342285
    10. '<' → logprob: -9.931267738342285

Token 284: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.6240566083070007e-06
    2. ' pp' → logprob: -13.500001907348633
    3. 'p' → logprob: -16.375001907348633
    4. '	pp' → logprob: -17.125001907348633
    5. 'anchor' → logprob: -17.375001907348633
    6. '.pp' → logprob: -18.000001907348633
    7. '(pp' → logprob: -18.125001907348633
    8. '_pp' → logprob: -19.500001907348633
    9. 'pps' → logprob: -20.375001907348633
    10. 'ppi' → logprob: -21.000001907348633

Token 285: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12337080389261246
    2. 'and' → logprob: -2.498370885848999
    3. ')' → logprob: -4.24837064743042
    4. '),' → logprob: -4.62337064743042
    5. ' and' → logprob: -4.99837064743042
    6. '               ' → logprob: -6.24837064743042
    7. '           ' → logprob: -8.873371124267578
    8. '   ' → logprob: -8.873371124267578
    9. ',p' → logprob: -9.123371124267578
    10. ':' → logprob: -9.498371124267578

Token 286: ' side' (ID: 4307)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.08855625987052917
    2. 'p' → logprob: -3.3385562896728516
    3. '               ' → logprob: -3.8385562896728516
    4. 'D' → logprob: -3.9635562896728516
    5. '                   ' → logprob: -6.463556289672852
    6. 'anchor' → logprob: -6.588556289672852
    7. 'all' → logprob: -7.338556289672852
    8. '                 ' → logprob: -7.588556289672852
    9. '              ' → logprob: -7.588556289672852
    10. '                  ' → logprob: -7.713556289672852

Token 287: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0031796174589544535
    2. '(pp' → logprob: -5.753179550170898
    3. '(' → logprob: -13.878179550170898
    4. '(pd' → logprob: -15.753179550170898
    5. '(pe' → logprob: -15.878179550170898
    6. '(pa' → logprob: -16.3781795501709
    7. '(px' → logprob: -16.3781795501709
    8. '(dp' → logprob: -16.5031795501709
    9. '(P' → logprob: -16.6281795501709
    10. '(np' → logprob: -17.1281795501709

Token 288: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889551669359207
    2. '1' → logprob: -2.5788955688476562
    3. 'p' → logprob: -12.328895568847656
    4. '(p' → logprob: -14.453895568847656
    5. 'D' → logprob: -15.203895568847656
    6. '```' → logprob: -15.953895568847656
    7. '２' → logprob: -16.078895568847656
    8. '3' → logprob: -16.203895568847656
    9. '₂' → logprob: -16.453895568847656
    10. '(' → logprob: -16.828895568847656

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ',p' → logprob: -12.125005722045898
    3. ' ,' → logprob: -16.8750057220459
    4. ',
' → logprob: -18.2500057220459
    5. '，' → logprob: -18.3750057220459
    6. ',<' → logprob: -18.5000057220459
    7. ',,' → logprob: -19.5000057220459
    8. '==' → logprob: -19.7500057220459
    9. '[' → logprob: -20.1250057220459
    10. ',)' → logprob: -20.2500057220459

Token 290: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -3.531315314830863e-06
    2. ' pp' → logprob: -12.625003814697266
    3. 'p' → logprob: -16.500003814697266
    4. '	pp' → logprob: -16.625003814697266
    5. '.pp' → logprob: -17.875003814697266
    6. '(pp' → logprob: -18.625003814697266
    7. 'pps' → logprob: -18.875003814697266
    8. 'ppm' → logprob: -19.125003814697266
    9. 'ppi' → logprob: -19.625003814697266
    10. '_pp' → logprob: -19.625003814697266

Token 291: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04180324822664261
    2. ')' → logprob: -3.2918033599853516
    3. '):
' → logprob: -5.666803359985352
    4. ')):' → logprob: -8.666803359985352
    5. '),' → logprob: -10.166803359985352
    6. '):

' → logprob: -10.541803359985352
    7. ')==' → logprob: -10.791803359985352
    8. ');' → logprob: -11.541803359985352
    9. '):
' → logprob: -11.916803359985352
    10. ').' → logprob: -12.916803359985352

Token 292: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.034592388459714e-06
    2. 'chain' → logprob: -12.750005722045898
    3. ' D' → logprob: -12.875005722045898
    4. 'iter' → logprob: -15.125005722045898
    5. 'list' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.8750057220459
    7. '  ' → logprob: -18.0000057220459
    8. 're' → logprob: -18.3750057220459
    9. 'filter' → logprob: -18.5000057220459
    10. 'iterator' → logprob: -18.7500057220459

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06567033380270004
    2. ')' → logprob: -3.4406702518463135
    3. '[' → logprob: -4.315670490264893
    4. 'D' → logprob: -4.440670490264893
    5. '               ' → logprob: -5.315670490264893
    6. '):
' → logprob: -8.065670013427734
    7. '):' → logprob: -8.190670013427734
    8. '           ' → logprob: -8.815670013427734
    9. '[D' → logprob: -8.940670013427734
    10. '              ' → logprob: -9.315670013427734

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24304349720478058
    2. '               ' → logprob: -1.8680435419082642
    3. '           ' → logprob: -3.3680434226989746
    4. '):' → logprob: -3.7430434226989746
    5. '):
' → logprob: -6.743043422698975
    6. '))' → logprob: -7.243043422698975
    7. ')
' → logprob: -8.243043899536133
    8. '             ' → logprob: -8.368043899536133
    9. '),' → logprob: -8.493043899536133
    10. '       ' → logprob: -8.868043899536133

Token 295: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018928825855255127
    2. '           ' → logprob: -4.0189290046691895
    3. '   ' → logprob: -7.6439290046691895
    4. '       ' → logprob: -8.893928527832031
    5. '                   ' → logprob: -8.893928527832031
    6. '             ' → logprob: -11.143928527832031
    7. '         ' → logprob: -13.268928527832031
    8. 'return' → logprob: -13.393928527832031
    9. '              ' → logprob: -13.393928527832031
    10. '                       ' → logprob: -13.518928527832031

Token 296: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03455852344632149
    2. 'return' → logprob: -3.9095585346221924
    3. '               ' → logprob: -4.409558296203613
    4. '       ' → logprob: -6.534558296203613
    5. '   ' → logprob: -8.534558296203613
    6. '```' → logprob: -9.909558296203613
    7. '         ' → logprob: -10.659558296203613
    8. '             ' → logprob: -11.659558296203613
    9. '                   ' → logprob: -12.034558296203613
    10. '          ' → logprob: -12.534558296203613

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09194571524858475
    2. ' =' → logprob: -2.4669456481933594
    3. ':' → logprob: -7.091945648193359
    4. ',' → logprob: -7.341945648193359
    5. '   ' → logprob: -7.591945648193359
    6. '               ' → logprob: -8.34194564819336
    7. '=list' → logprob: -8.59194564819336
    8. ' ' → logprob: -9.46694564819336
    9. '           ' → logprob: -9.59194564819336
    10. '_' → logprob: -9.71694564819336

Token 298: ' next' (ID: 2613)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0017058902885764837
    2. 'finder' → logprob: -6.626706123352051
    3. 'found' → logprob: -8.75170612335205
    4. 'next' → logprob: -9.62670612335205
    5. '           ' → logprob: -9.87670612335205
    6. '               ' → logprob: -10.50170612335205
    7. 'iterator' → logprob: -10.87670612335205
    8. '   ' → logprob: -11.37670612335205
    9. '       ' → logprob: -11.62670612335205
    10. 'find' → logprob: -11.62670612335205

Token 299: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.17224083840847015
    2. '(found' → logprob: -2.047240734100342
    3. '(' → logprob: -4.672240734100342
    4. '(iter' → logprob: -4.922240734100342
    5. '(iterator' → logprob: -5.672240734100342
    6. '(find' → logprob: -5.797240734100342
    7. '(filter' → logprob: -6.047240734100342
    8. '()' → logprob: -6.422240734100342
    9. '(generator' → logprob: -7.172240734100342
    10. '(filtered' → logprob: -8.4222412109375

Token 300: 'inder' (ID: 5508)
  Prédit: 'ilter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilter' → logprob: -0.14492984116077423
    2. 'ound' → logprob: -2.019929885864258
    3. 'inder' → logprob: -7.644929885864258
    4. 'unction' → logprob: -7.644929885864258
    5. 'inding' → logprob: -8.269929885864258
    6. 'ilt' → logprob: -8.269929885864258
    7. 'ind' → logprob: -8.644929885864258
    8. 'ilters' → logprob: -8.894929885864258
    9. 'il' → logprob: -9.269929885864258
    10. 'ILTER' → logprob: -10.144929885864258

Token 301: '(),' (ID: 2547)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14495067298412323
    2. '()' → logprob: -2.2699506282806396
    3. ')' → logprob: -3.6449506282806396
    4. '())
' → logprob: -5.394950866699219
    5. '()(' → logprob: -7.894950866699219
    6. '(),' → logprob: -8.769950866699219
    7. '().' → logprob: -9.769950866699219
    8. '()`' → logprob: -9.894950866699219
    9. '```' → logprob: -10.144950866699219
    10. '())
' → logprob: -10.269950866699219

Token 302: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.337155355140567e-05
    2. ' None' → logprob: -9.750062942504883
    3. 'none' → logprob: -12.875062942504883
    4. 'iter' → logprob: -14.375062942504883
    5. '_none' → logprob: -14.500062942504883
    6. 'null' → logprob: -15.250062942504883
    7. 'No' → logprob: -15.375062942504883
    8. '[])' → logprob: -15.500062942504883
    9. '(None' → logprob: -15.500062942504883
    10. ')' → logprob: -16.250062942504883

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1203906238079071
    2. ')
' → logprob: -2.2453906536102295
    3. '           ' → logprob: -4.99539041519165
    4. '       ' → logprob: -7.87039041519165
    5. ')

' → logprob: -8.745390892028809
    6. '   ' → logprob: -9.870390892028809
    7. ')
' → logprob: -10.495390892028809
    8. '               ' → logprob: -10.620390892028809
    9. '         ' → logprob: -10.745390892028809
    10. '')' → logprob: -11.120390892028809

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012047011114191264
    2. '       ' → logprob: -9.375120162963867
    3. '               ' → logprob: -10.500120162963867
    4. '   ' → logprob: -12.500120162963867
    5. '         ' → logprob: -12.875120162963867
    6. '          ' → logprob: -14.625120162963867
    7. '             ' → logprob: -14.875120162963867
    8. '            ' → logprob: -15.250120162963867
    9. '                   ' → logprob: -15.750120162963867
    10. '            
' → logprob: -16.125120162963867

Token 305: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002989968634210527
    2. '       ' → logprob: -8.750299453735352
    3. 'if' (adapté à ' if') → logprob: -9.500299453735352
    4. '   ' → logprob: -11.000299453735352
    5. '               ' → logprob: -11.125299453735352
    6. '         ' → logprob: -11.625299453735352
    7. 'return' → logprob: -11.750299453735352
    8. 'D' → logprob: -12.250299453735352
    9. 'p' → logprob: -12.625299453735352
    10. '          ' → logprob: -12.625299453735352

Token 306: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.0038524551782757044
    2. ' found' → logprob: -5.628852367401123
    3. ':' → logprob: -9.628852844238281
    4. 'not' → logprob: -9.628852844238281
    5. '	found' → logprob: -10.253852844238281
    6. '_found' → logprob: -10.628852844238281
    7. '   ' → logprob: -10.878852844238281
    8. '(found' → logprob: -11.003852844238281
    9. '  ' → logprob: -11.628852844238281
    10. ' ' → logprob: -12.253852844238281

Token 307: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015748523874208331
    2. ':
' → logprob: -7.126574993133545
    3. 'is' → logprob: -7.876574993133545
    4. ' is' → logprob: -8.126574516296387
    5. ':return' → logprob: -9.751574516296387
    6. '==' → logprob: -11.126574516296387
    7. ':`' → logprob: -11.376574516296387
    8. ':

' → logprob: -12.126574516296387
    9. ':is' → logprob: -13.501574516296387
    10. ':#' → logprob: -13.751574516296387

Token 308: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01438526064157486
    2. '...' → logprob: -4.514385223388672
    3. ' None' → logprob: -6.264385223388672
    4. 'not' → logprob: -6.639385223388672
    5. 'Not' → logprob: -10.139385223388672
    6. 'none' → logprob: -10.264385223388672
    7. '_none' → logprob: -11.264385223388672
    8. 'found' → logprob: -12.139385223388672
    9. '```' → logprob: -12.139385223388672
    10. '_NONE' → logprob: -12.639385223388672

Token 309: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007541201775893569
    2. ' None' → logprob: -7.250754356384277
    3. '...' → logprob: -10.125754356384277
    4. '   ' → logprob: -13.125754356384277
    5. '```' → logprob: -14.750754356384277
    6. '`' → logprob: -15.375754356384277
    7. '_None' → logprob: -15.375754356384277
    8. '_none' → logprob: -15.500754356384277
    9. 'found' → logprob: -15.625754356384277
    10. '  ' → logprob: -15.750754356384277

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036956753581762314
    2. ':
' → logprob: -3.411956787109375
    3. '               ' → logprob: -5.786956787109375
    4. '           ' → logprob: -8.911956787109375
    5. ':return' → logprob: -9.536956787109375
    6. ':

' → logprob: -11.036956787109375
    7. ':`' → logprob: -12.661956787109375
    8. '       ' → logprob: -12.911956787109375
    9. '             ' → logprob: -12.911956787109375
    10. ':
' → logprob: -13.536956787109375

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004994167247787118
    2. 'return' → logprob: -7.875499248504639
    3. '           ' → logprob: -9.375499725341797
    4. '             ' → logprob: -11.000499725341797
    5. '              ' → logprob: -11.625499725341797
    6. '                   ' → logprob: -12.750499725341797
    7. '                ' → logprob: -12.750499725341797
    8. '   ' → logprob: -13.875499725341797
    9. '       ' → logprob: -14.000499725341797
    10. '                 ' → logprob: -14.875499725341797

Token 312: ' D' (ID: 415)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1937655806541443
    2. 'p' → logprob: -2.193765640258789
    3. 'return' → logprob: -3.443765640258789
    4. '                   ' → logprob: -4.068765640258789
    5. 'anchor' → logprob: -4.568765640258789
    6. 'D' (adapté à ' D') → logprob: -5.693765640258789
    7. '           ' → logprob: -7.443765640258789
    8. 'tr' → logprob: -7.568765640258789
    9. 'found' → logprob: -8.193765640258789
    10. 'print' → logprob: -8.818765640258789

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. 'D' → logprob: -10.250036239624023
    3. ' =' → logprob: -14.625036239624023
    4. ' ' → logprob: -16.125036239624023
    5. '.append' → logprob: -16.125036239624023
    6. '   ' → logprob: -16.250036239624023
    7. '=' → logprob: -16.625036239624023
    8. ' D' → logprob: -17.000036239624023
    9. '               ' → logprob: -17.750036239624023
    10. '１' → logprob: -17.750036239624023

Token 314: '.remove' (ID: 7986)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.3524104654788971
    2. ' =' → logprob: -1.7274104356765747
    3. '.remove' → logprob: -2.6024105548858643
    4. '.append' → logprob: -3.8524105548858643
    5. '=' → logprob: -4.727410316467285
    6. '.' → logprob: -4.852410316467285
    7. '               ' → logprob: -5.727410316467285
    8. '[:]' → logprob: -6.727410316467285
    9. '   ' → logprob: -7.602410316467285
    10. '           ' → logprob: -7.602410316467285

Token 315: '(found' (ID: 105397)
  Prédit: '(found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(found' → logprob: -5.3358446166384965e-05
    2. '(' → logprob: -9.875053405761719
    3. '(find' → logprob: -13.750053405761719
    4. '(f' → logprob: -15.000053405761719
    5. '(filtered' → logprob: -16.62505340576172
    6. '(first' → logprob: -16.75005340576172
    7. 'found' → logprob: -16.87505340576172
    8. '	found' → logprob: -17.12505340576172
    9. '(hidden' → logprob: -17.50005340576172
    10. '(fe' → logprob: -17.75005340576172

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02979215234518051
    2. ')
' → logprob: -3.529792070388794
    3. ')

' → logprob: -10.779791831970215
    4. '))' → logprob: -12.029791831970215
    5. ')`' → logprob: -12.279791831970215
    6. ')
' → logprob: -12.404791831970215
    7. '```' → logprob: -13.779791831970215
    8. '       ' → logprob: -14.154791831970215
    9. '   ' → logprob: -14.279791831970215
    10. '               ' → logprob: -14.279791831970215

Token 317: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.93448489275761e-05
    2. '           ' → logprob: -9.500079154968262
    3. '                   ' → logprob: -12.750079154968262
    4. '             ' → logprob: -14.250079154968262
    5. '       ' → logprob: -14.750079154968262
    6. '              ' → logprob: -15.375079154968262
    7. '                ' → logprob: -16.250080108642578
    8. 'return' → logprob: -16.625080108642578
    9. '   ' → logprob: -16.625080108642578
    10. '                 ' → logprob: -17.500080108642578

Token 318: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7603965997695923
    2. 'return' → logprob: -0.7603965997695923
    3. 'p' → logprob: -2.8853964805603027
    4. 'anchor' → logprob: -4.760396480560303
    5. '           ' → logprob: -8.260396957397461
    6. '                   ' → logprob: -8.635396957397461
    7. 'D' → logprob: -8.885396957397461
    8. 'tr' → logprob: -11.135396957397461
    9. 'anch' → logprob: -11.260396957397461
    10. '             ' → logprob: -11.760396957397461

Token 319: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.04382181912660599
    2. ' found' → logprob: -3.7938218116760254
    3. 'D' → logprob: -4.793821811676025
    4. '               ' → logprob: -5.668821811676025
    5. 'side' → logprob: -5.918821811676025
    6. 'not' → logprob: -6.918821811676025
    7. ' D' → logprob: -6.918821811676025
    8. '   ' → logprob: -7.043821811676025
    9. 'True' → logprob: -7.793821811676025
    10. ' ' → logprob: -8.168822288513184

Token 320: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27013495564460754
    2. '==' → logprob: -1.5201349258422852
    3. ':
' → logprob: -5.395134925842285
    4. '[' → logprob: -5.395134925842285
    5. 'is' → logprob: -5.645134925842285
    6. ' ==' → logprob: -5.645134925842285
    7. ':return' → logprob: -8.145134925842285
    8. ':

' → logprob: -8.645134925842285
    9. '!=' → logprob: -8.770134925842285
    10. 'in' → logprob: -8.895134925842285

Token 321: ' anchor' (ID: 31067)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00016086915275081992
    2. 'D' → logprob: -8.875161170959473
    3. 'anchor' → logprob: -11.000161170959473
    4. ' p' → logprob: -12.625161170959473
    5. 'None' → logprob: -14.125161170959473
    6. 'pp' → logprob: -16.375160217285156
    7. '   ' → logprob: -17.250160217285156
    8. '(p' → logprob: -17.375160217285156
    9. 'anch' → logprob: -17.750160217285156
    10. 'input' → logprob: -17.875160217285156

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07962620258331299
    2. ':
' → logprob: -2.5796260833740234
    3. '                   ' → logprob: -8.079626083374023
    4. '               ' → logprob: -8.204626083374023
    5. ':return' → logprob: -9.329626083374023
    6. ':

' → logprob: -10.079626083374023
    7. ':`' → logprob: -12.079626083374023
    8. ':
' → logprob: -12.204626083374023
    9. '                 ' → logprob: -12.579626083374023
    10. ':\' → logprob: -12.704626083374023

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0049922894686460495
    2. '               ' → logprob: -5.379992485046387
    3. 'return' → logprob: -8.379992485046387
    4. '                 ' → logprob: -9.254992485046387
    5. '                  ' → logprob: -10.379992485046387
    6. '                ' → logprob: -12.129992485046387
    7. '                       ' → logprob: -12.629992485046387
    8. '                    ' → logprob: -12.879992485046387
    9. 'pass' → logprob: -13.504992485046387
    10. '           ' → logprob: -13.879992485046387

Token 324: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13194172084331512
    2. 'return' (adapté à ' return') → logprob: -2.381941795349121
    3. '               ' → logprob: -3.506941795349121
    4. 'break' → logprob: -6.881941795349121
    5. '                 ' → logprob: -9.756941795349121
    6. '                  ' → logprob: -10.131941795349121
    7. '           ' → logprob: -10.631941795349121
    8. '                       ' → logprob: -10.881941795349121
    9. 'p' → logprob: -10.881941795349121
    10. 'D' → logprob: -11.006941795349121

Token 325: ' len' (ID: 4631)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.5514687895774841
    2. '               ' → logprob: -1.676468849182129
    3. 'None' → logprob: -2.176468849182129
    4. '                   ' → logprob: -2.301468849182129
    5. 'D' → logprob: -4.676468849182129
    6. 'return' → logprob: -5.176468849182129
    7. '           ' → logprob: -6.051468849182129
    8. 'tr' → logprob: -6.301468849182129
    9. 'anchor' → logprob: -7.551468849182129
    10. '                 ' → logprob: -7.676468849182129

Token 326: '(D' (ID: 9908)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2728695869445801
    2. '()' → logprob: -1.89786958694458
    3. '                   ' → logprob: -3.02286958694458
    4. '           ' → logprob: -3.64786958694458
    5. '             ' → logprob: -5.64786958694458
    6. '                       ' → logprob: -6.52286958694458
    7. '                 ' → logprob: -6.64786958694458
    8. '       ' → logprob: -6.89786958694458
    9. '                ' → logprob: -7.02286958694458
    10. '              ' → logprob: -7.02286958694458

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5295427441596985
    2. ')' → logprob: -0.9045427441596985
    3. 'D' → logprob: -5.279542922973633
    4. ')+' → logprob: -7.029542922973633
    5. ')-' → logprob: -8.654542922973633
    6. ' D' → logprob: -10.154542922973633
    7. ')`' → logprob: -10.279542922973633
    8. '```' → logprob: -10.404542922973633
    9. ')
' → logprob: -10.779542922973633
    10. '[' → logprob: -11.029542922973633

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029399030609056354
    2. '               ' → logprob: -8.625293731689453
    3. ')
' → logprob: -10.250293731689453
    4. ')+' → logprob: -10.500293731689453
    5. ')-' → logprob: -11.000293731689453
    6. '                   ' → logprob: -11.250293731689453
    7. '),' → logprob: -12.000293731689453
    8. '))' → logprob: -12.250293731689453
    9. ')

' → logprob: -13.375293731689453
    10. '           ' → logprob: -13.500293731689453

Token 329: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01825530268251896
    2. '           ' → logprob: -4.018255233764648
    3. '                   ' → logprob: -9.893255233764648
    4. '       ' → logprob: -10.018255233764648
    5. '   ' → logprob: -11.643255233764648
    6. '             ' → logprob: -13.893255233764648
    7. '              ' → logprob: -15.268255233764648
    8. '            ' → logprob: -16.51825523376465
    9. '                ' → logprob: -16.51825523376465
    10. '                       ' → logprob: -16.64325523376465

Token 330: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004818968940526247
    2. 'return' (adapté à ' return') → logprob: -5.504818916320801
    3. '           ' → logprob: -7.504818916320801
    4. '                   ' → logprob: -8.6298189163208
    5. '       ' → logprob: -12.2548189163208
    6. '   ' → logprob: -13.1298189163208
    7. '             ' → logprob: -13.1298189163208
    8. '              ' → logprob: -14.2548189163208
    9. '                ' → logprob: -14.6298189163208
    10. ' return' → logprob: -14.6298189163208

Token 331: ' trampoline' (ID: 162506)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02814970165491104
    2. 'tr' → logprob: -3.6531496047973633
    3. '               ' → logprob: -6.653149604797363
    4. ' len' → logprob: -8.403149604797363
    5. '           ' → logprob: -9.778149604797363
    6. '             ' → logprob: -9.903149604797363
    7. '                   ' → logprob: -10.028149604797363
    8. ' tramp' → logprob: -10.153149604797363
    9. ' trampoline' → logprob: -10.528149604797363
    10. 'length' → logprob: -10.528149604797363

Token 332: '(found' (ID: 105397)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.005676703527569771
    2. '               ' → logprob: -5.630676746368408
    3. '(' → logprob: -6.880676746368408
    4. '           ' → logprob: -7.005676746368408
    5. '                   ' → logprob: -10.75567626953125
    6. '(pp' → logprob: -10.88067626953125
    7. '             ' → logprob: -11.25567626953125
    8. '(f' → logprob: -11.63067626953125
    9. '```' → logprob: -12.00567626953125
    10. '       ' → logprob: -12.00567626953125

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. '               ' → logprob: -14.750000953674316
    3. '),' → logprob: -16.0
    4. ',p' → logprob: -16.0
    5. ' ,' → logprob: -17.0
    6. ')' → logprob: -17.5
    7. ',
' → logprob: -17.875
    8. '                   ' → logprob: -18.75
    9. '(),' → logprob: -18.75
    10. '，' → logprob: -18.875

Token 334: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.023293538717553e-05
    2. ' D' → logprob: -10.500030517578125
    3. '               ' → logprob: -12.875030517578125
    4. '           ' → logprob: -17.875030517578125
    5. '   ' → logprob: -18.000030517578125
    6. '                ' → logprob: -18.375030517578125
    7. '                   ' → logprob: -18.500030517578125
    8. '             ' → logprob: -19.625030517578125
    9. '       ' → logprob: -19.750030517578125
    10. '              ' → logprob: -19.750030517578125

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -17.75
    3. '   ' → logprob: -18.5
    4. ' ' → logprob: -19.125
    5. '```' → logprob: -19.125
    6. '               ' → logprob: -19.75
    7. '۱' → logprob: -20.125
    8. '       ' → logprob: -20.75
    9. '0' → logprob: -20.875
    10. '2' → logprob: -21.125

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. '               ' → logprob: -13.00000286102295
    3. '),' → logprob: -16.000001907348633
    4. '           ' → logprob: -17.000001907348633
    5. ')' → logprob: -17.000001907348633
    6. ',)' → logprob: -17.375001907348633
    7. ' ,' → logprob: -17.625001907348633
    8. '                   ' → logprob: -17.875001907348633
    9. ',
' → logprob: -18.375001907348633
    10. '             ' → logprob: -18.625001907348633

Token 337: ' anchor' (ID: 31067)
  Prédit: 'anchor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -2.7372048862162046e-05
    2. 'found' → logprob: -10.750027656555176
    3. ' anchor' → logprob: -12.750027656555176
    4. 'anch' → logprob: -13.375027656555176
    5. 'p' → logprob: -13.875027656555176
    6. '(anchor' → logprob: -16.00002670288086
    7. '.anchor' → logprob: -16.37502670288086
    8. '               ' → logprob: -16.50002670288086
    9. '   ' → logprob: -17.12502670288086
    10. '_anchor' → logprob: -17.25002670288086

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012797684408724308
    2. '               ' → logprob: -4.387797832489014
    3. '           ' → logprob: -8.762797355651855
    4. ')
' → logprob: -9.387797355651855
    5. '                   ' → logprob: -10.887797355651855
    6. '             ' → logprob: -11.762797355651855
    7. ')`' → logprob: -12.262797355651855
    8. ')

' → logprob: -12.387797355651855
    9. '))' → logprob: -12.762797355651855
    10. '```' → logprob: -13.137797355651855

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17301712930202484
    2. '       ' → logprob: -1.923017144203186
    3. '               ' → logprob: -4.5480170249938965
    4. '   ' → logprob: -6.1730170249938965
    5. '                   ' → logprob: -10.923017501831055
    6. 'return' → logprob: -11.423017501831055
    7. '         ' → logprob: -12.673017501831055
    8. '     ' → logprob: -13.423017501831055
    9. '                       ' → logprob: -13.798017501831055
    10. '             ' → logprob: -14.298017501831055

Token 340: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3703838288784027
    2. '       ' → logprob: -1.245383858680725
    3. 'return' → logprob: -3.9953837394714355
    4. '               ' → logprob: -6.4953837394714355
    5. '   ' → logprob: -6.7453837394714355
    6. '```' → logprob: -8.495384216308594
    7. '         ' → logprob: -8.620384216308594
    8. 'else' (adapté à ' else') → logprob: -10.370384216308594
    9. '        ' → logprob: -10.495384216308594
    10. '                   ' → logprob: -10.620384216308594

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008401925675570965
    2. '               ' → logprob: -5.008401870727539
    3. ':
' → logprob: -6.758401870727539
    4. '           ' → logprob: -8.258401870727539
    5. ':return' → logprob: -8.883401870727539
    6. ':`' → logprob: -9.633401870727539
    7. ':

' → logprob: -11.008401870727539
    8. '       ' → logprob: -12.008401870727539
    9. '             ' → logprob: -12.008401870727539
    10. '                   ' → logprob: -12.383401870727539

Token 342: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005657802103087306
    2. 'return' → logprob: -7.500566005706787
    3. '                   ' → logprob: -12.500565528869629
    4. '             ' → logprob: -12.750565528869629
    5. '           ' → logprob: -13.250565528869629
    6. '                ' → logprob: -13.375565528869629
    7. '              ' → logprob: -13.500565528869629
    8. ' return' → logprob: -14.500565528869629
    9. '                 ' → logprob: -14.625565528869629
    10. '   ' → logprob: -15.125565528869629

Token 343: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38710442185401917
    2. 'return' (adapté à ' return') → logprob: -1.1371043920516968
    3. 'len' → logprob: -9.262104034423828
    4. '           ' → logprob: -9.637104034423828
    5. '                   ' → logprob: -10.762104034423828
    6. '             ' → logprob: -10.762104034423828
    7. ' return' → logprob: -11.262104034423828
    8. '                ' → logprob: -12.262104034423828
    9. '              ' → logprob: -12.262104034423828
    10. 'D' → logprob: -13.137104034423828

Token 344: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07252978533506393
    2. '0' → logprob: -2.6975297927856445
    3. ' len' → logprob: -6.6975297927856445
    4. 'None' → logprob: -7.4475297927856445
    5. '               ' → logprob: -8.322529792785645
    6. ' ' → logprob: -8.322529792785645
    7. 'D' → logprob: -8.947529792785645
    8. '             ' → logprob: -10.197529792785645
    9. '           ' → logprob: -10.322529792785645
    10. '(len' → logprob: -11.072529792785645

Token 345: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00010807292710524052
    2. '()' → logprob: -10.375107765197754
    3. '(' → logprob: -10.625107765197754
    4. '               ' → logprob: -11.000107765197754
    5. 'D' → logprob: -11.250107765197754
    6. '           ' → logprob: -11.750107765197754
    7. ' D' → logprob: -13.750107765197754
    8. '   ' → logprob: -13.875107765197754
    9. '(A' → logprob: -14.000107765197754
    10. '(B' → logprob: -14.000107765197754

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022556488402187824
    2. ')' → logprob: -6.252255439758301
    3. '```' → logprob: -9.1272554397583
    4. 'D' → logprob: -9.5022554397583
    5. ').' → logprob: -10.3772554397583
    6. '   ' → logprob: -10.6272554397583
    7. '')' → logprob: -10.8772554397583
    8. ' D' → logprob: -11.8772554397583
    9. '`)' → logprob: -12.1272554397583
    10. '       ' → logprob: -12.3772554397583

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000730781932361424
    2. '               ' → logprob: -7.375730991363525
    3. '           ' → logprob: -9.500730514526367
    4. '))' → logprob: -11.375730514526367
    5. ')
' → logprob: -12.125730514526367
    6. ')

' → logprob: -12.500730514526367
    7. '             ' → logprob: -13.125730514526367
    8. ')`' → logprob: -13.625730514526367
    9. ')}' → logprob: -14.000730514526367
    10. '```' → logprob: -14.125730514526367

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764483690261841
    2. '               ' → logprob: -1.401448369026184
    3. '           ' → logprob: -1.526448369026184
    4. '   ' → logprob: -2.7764482498168945
    5. 'def' → logprob: -4.2764482498168945
    6. '                   ' → logprob: -9.026448249816895
    7. 'return' → logprob: -10.401448249816895
    8. 'if' → logprob: -10.526448249816895
    9. '         ' → logprob: -11.026448249816895
    10. '```' → logprob: -11.276448249816895

Token 349: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06901651620864868
    2. 'anchor' → logprob: -2.819016456604004
    3. 'p' → logprob: -5.819016456604004
    4. 'return' → logprob: -6.069016456604004
    5. '   ' → logprob: -6.569016456604004
    6. '           ' → logprob: -8.819016456604004
    7. 'D' → logprob: -9.069016456604004
    8. 'print' (adapté à ' print') → logprob: -10.569016456604004
    9. 'n' → logprob: -11.444016456604004
    10. 'anch' → logprob: -11.569016456604004

Token 350: '(tr' (ID: 14363)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03142210841178894
    2. '(' → logprob: -4.156422138214111
    3. '("' → logprob: -5.031422138214111
    4. '('' → logprob: -5.281422138214111
    5. '(f' → logprob: -6.906422138214111
    6. '("")' → logprob: -7.156422138214111
    7. '(_)' → logprob: -8.281421661376953
    8. '('.')' → logprob: -8.531421661376953
    9. '(len' → logprob: -8.781421661376953
    10. '(...)' → logprob: -9.031421661376953

Token 351: 'ampoline' (ID: 165483)
  Prédit: 'ampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ampoline' → logprob: -0.05028676241636276
    2. 'iangle' → logprob: -4.300286769866943
    3. 'uncated' → logprob: -4.675286769866943
    4. 'uncate' → logprob: -5.425286769866943
    5. 'ouble' → logprob: -6.175286769866943
    6. 'amp' → logprob: -6.425286769866943
    7. 'oubles' → logprob: -6.800286769866943
    8. '   ' → logprob: -6.800286769866943
    9. 'averse' → logprob: -7.050286769866943
    10. 'ans' → logprob: -7.050286769866943

Token 352: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.27236708998680115
    2. '())' → logprob: -1.7723671197891235
    3. '(' → logprob: -2.772367000579834
    4. '('' → logprob: -7.147367000579834
    5. '(found' → logprob: -7.272367000579834
    6. '(`' → logprob: -7.522367000579834
    7. ')' → logprob: -7.647367000579834
    8. '()' → logprob: -7.897367000579834
    9. '()(' → logprob: -8.147367477416992
    10. '(pr' → logprob: -8.522367477416992

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '2' → logprob: -14.37500286102295
    3. '(' → logprob: -14.50000286102295
    4. '１' → logprob: -14.50000286102295
    5. 'r' → logprob: -15.12500286102295
    6. '[' → logprob: -16.000001907348633
    7. '```' → logprob: -16.000001907348633
    8. 'ython' → logprob: -16.250001907348633
    9. '_' → logprob: -17.125001907348633
    10. '(p' → logprob: -17.250001907348633

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ',p' → logprob: -14.000001907348633
    3. '),' → logprob: -14.625001907348633
    4. '))' → logprob: -16.750001907348633
    5. ' ,' → logprob: -16.750001907348633
    6. ')' → logprob: -17.000001907348633
    7. ',)' → logprob: -17.250001907348633
    8. ',D' → logprob: -17.625001907348633
    9. ',
' → logprob: -17.875001907348633
    10. ',,' → logprob: -18.250001907348633

Token 355: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.842555426876061e-06
    2. ' D' → logprob: -12.250004768371582
    3. '	D' → logprob: -23.0000057220459
    4. 'Д' → logprob: -23.0000057220459
    5. '   ' → logprob: -23.2500057220459
    6. ' Д' → logprob: -24.1250057220459
    7. '_D' → logprob: -24.5000057220459
    8. '.D' → logprob: -24.7500057220459
    9. 'Ｄ' → logprob: -25.0000057220459
    10. '-D' → logprob: -25.2500057220459

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 'D' → logprob: -13.625000953674316
    3. '１' → logprob: -18.750001907348633
    4. ',' → logprob: -19.250001907348633
    5. '2' → logprob: -19.500001907348633
    6. ' ' → logprob: -20.000001907348633
    7. 'I' → logprob: -20.125001907348633
    8. '0' → logprob: -20.375001907348633
    9. '   ' → logprob: -20.500001907348633
    10. ' D' → logprob: -20.625001907348633

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4617256056226324e-05
    2. '))' → logprob: -11.500014305114746
    3. '),' → logprob: -12.500014305114746
    4. ')' → logprob: -15.500014305114746
    5. ',))
' → logprob: -15.625014305114746
    6. ',)' → logprob: -15.875014305114746
    7. ' ,' → logprob: -16.750015258789062
    8. 'D' → logprob: -16.875015258789062
    9. '`,' → logprob: -17.375015258789062
    10. ',D' → logprob: -17.500015258789062

Token 358: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002624086628202349
    2. 'D' → logprob: -8.250262260437012
    3. ' p' → logprob: -13.875262260437012
    4. '       ' → logprob: -17.000263214111328
    5. '           ' → logprob: -17.375263214111328
    6. '               ' → logprob: -17.500263214111328
    7. 'anchor' → logprob: -17.750263214111328
    8. '   ' → logprob: -18.250263214111328
    9. '	p' → logprob: -18.375263214111328
    10. '(p' → logprob: -18.500263214111328

Token 359: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38879281282424927
    2. '[' → logprob: -1.1387927532196045
    3. ')' → logprob: -6.763792991638184
    4. '1' → logprob: -8.263792991638184
    5. '[p' → logprob: -8.388792991638184
    6. '))
' → logprob: -9.638792991638184
    7. '```' → logprob: -10.138792991638184
    8. '[-' → logprob: -10.763792991638184
    9. ').' → logprob: -10.763792991638184
    10. 'p' → logprob: -10.888792991638184

Token 360: 'main' (ID: 7731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6941632032394409
    2. '```' → logprob: -1.319163203239441
    3. '       ' → logprob: -2.6941633224487305
    4. ')' → logprob: -2.9441633224487305
    5. 'return' → logprob: -3.1941633224487305
    6. '0' → logprob: -4.5691633224487305
    7. '<|end|>' → logprob: -4.6941633224487305
    8. '`' → logprob: -4.6941633224487305
    9. '               ' → logprob: -5.4441633224487305
    10. '}' → logprob: -5.4441633224487305

Token 361: 'loop' (ID: 14294)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07972010970115662
    2. 'loop' → logprob: -2.5797200202941895
    3. '   ' → logprob: -8.454720497131348
    4. '()`' → logprob: -8.704720497131348
    5. 'main' → logprob: -9.454720497131348
    6. '       ' → logprob: -9.829720497131348
    7. ' loop' → logprob: -10.579720497131348
    8. '():' → logprob: -10.704720497131348
    9. '().' → logprob: -10.829720497131348
    10. '();' → logprob: -10.829720497131348

Token 362: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.452426608419046e-05
    2. '()`' → logprob: -11.00003433227539
    3. '(' → logprob: -11.25003433227539
    4. '()(' → logprob: -13.50003433227539
    5. '().' → logprob: -13.62503433227539
    6. '())' → logprob: -14.87503433227539
    7. ' ()' → logprob: -15.62503433227539
    8. ']()' → logprob: -15.75003433227539
    9. '()
' → logprob: -15.87503433227539
    10. '```' → logprob: -16.00003433227539


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 360
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 247
Précision stricte (1ère position): 28.61%
Précision adaptée (1ère position): 29.17%
Précision (top 10): 68.61%
================================================================================
