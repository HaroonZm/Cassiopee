================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())
output_func = print
range_func = range

if input_value & -input_value == input_value:
    output_func("No")
    exit(0)

output_func("Yes")

if input_value == 3:
    output_func(1, 2)
    output_func(2, 3)
    output_func(3, 4)
    output_func(4, 5)
    output_func(5, 6)
    exit(0)

max_power_two = 1
while max_power_two * 2 < input_value:
    max_power_two *= 2

for index in range_func(max_power_two - 2):
    output_func(index + 1, index + 2)

output_func(max_power_two - 1, input_value + 1)

for index in range_func(max_power_two - 2):
    output_func(input_value + index + 1, input_value + index + 2)

output_func(input_value + max_power_two, input_value + 1)
output_func(input_value + max_power_two + 1, max_power_two)

for index in range_func(input_value - max_power_two):
    output_func(input_value + index + 1, input_value + max_power_two + index + 1)
    output_func(input_value + max_power_two + index, max_power_two + index + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6301442980766296
    2. 'input' → logprob: -1.1301443576812744
    3. ' ' → logprob: -2.1301443576812744
    4. '"' → logprob: -4.505144119262695
    5. ' int' → logprob: -5.255144119262695
    6. ' "' → logprob: -5.380144119262695
    7. ' '' → logprob: -7.005144119262695
    8. ''' → logprob: -7.130144119262695
    9. '0' → logprob: -7.255144119262695
    10. ' user' → logprob: -7.380144119262695

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006283782888203859
    2. '```' → logprob: -5.756283760070801
    3. ''' → logprob: -7.006283760070801
    4. '`' → logprob: -7.131283760070801
    5. '('' → logprob: -7.631283760070801
    6. '(input' → logprob: -8.3812837600708
    7. ')' → logprob: -8.5062837600708
    8. '[' → logprob: -9.2562837600708
    9. ' (' → logprob: -9.6312837600708
    10. '("("' → logprob: -10.1312837600708

Token 5: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013299763202667236
    2. '(' → logprob: -4.763299942016602
    3. '())' → logprob: -5.513299942016602
    4. '()' → logprob: -8.138299942016602
    5. '))' → logprob: -9.013299942016602
    6. '")' → logprob: -9.638299942016602
    7. '')' → logprob: -10.138299942016602
    8. '`)' → logprob: -10.388299942016602
    9. '[' → logprob: -11.388299942016602
    10. ' )' → logprob: -11.513299942016602

Token 6: 'output' (ID: 6130)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1929890364408493
    2. '*' → logprob: -2.4429891109466553
    3. '%' → logprob: -2.6929891109466553
    4. 'if' → logprob: -4.942988872528076
    5. '**' → logprob: -5.817988872528076
    6. ')' → logprob: -6.442988872528076
    7. ' if' → logprob: -6.567988872528076
    8. '```' → logprob: -6.567988872528076
    9. '\' → logprob: -6.817988872528076
    10. '\n' → logprob: -6.942988872528076

Token 7: '_func' (ID: 22252)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013842481188476086
    2. '+' → logprob: -5.263842582702637
    3. '*' → logprob: -6.513842582702637
    4. '()' → logprob: -6.513842582702637
    5. ')' → logprob: -6.888842582702637
    6. '```' → logprob: -6.888842582702637
    7. '\' → logprob: -7.013842582702637
    8. '(
' → logprob: -7.388842582702637
    9. '_' → logprob: -7.763842582702637
    10. '.' → logprob: -8.013842582702637

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016992862219922245
    2. '('' → logprob: -8.87516975402832
    3. '(output' → logprob: -12.00016975402832
    4. '(input' → logprob: -12.12516975402832
    5. '("("' → logprob: -12.12516975402832
    6. '(
' → logprob: -12.25016975402832
    7. '(open' → logprob: -13.25016975402832
    8. ')' → logprob: -13.37516975402832
    9. '()' → logprob: -13.75016975402832
    10. '(

' → logprob: -13.75016975402832

Token 9: ' print' (ID: 2123)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -1.0009008646011353
    2. 'str' → logprob: -1.5009008646011353
    3. 'print' → logprob: -2.7509007453918457
    4. ' lambda' → logprob: -2.7509007453918457
    5. 'abs' → logprob: -3.1259007453918457
    6. 'lambda' → logprob: -3.2509007453918457
    7. ' input' → logprob: -3.5009007453918457
    8. ' abs' → logprob: -3.7509007453918457
    9. ' max' → logprob: -3.8759007453918457
    10. ' int' → logprob: -4.000900745391846

Token 10: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010043471120297909
    2. '(
' → logprob: -7.001004219055176
    3. '(output' → logprob: -10.626004219055176
    4. '('' → logprob: -10.876004219055176
    5. '()' → logprob: -11.501004219055176
    6. '("("' → logprob: -11.876004219055176
    7. '\(' → logprob: -12.001004219055176
    8. '(

' → logprob: -12.751004219055176
    9. '(input' → logprob: -13.126004219055176
    10. ' (' → logprob: -13.126004219055176

Token 11: 'range' (ID: 20967)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027641696855425835
    2. '(output' → logprob: -4.277641773223877
    3. '(
' → logprob: -4.527641773223877
    4. '('' → logprob: -6.902641773223877
    5. '(input' → logprob: -7.777641773223877
    6. '("("' → logprob: -8.152641296386719
    7. 'if' → logprob: -8.777641296386719
    8. '(f' → logprob: -8.777641296386719
    9. '()' → logprob: -8.777641296386719
    10. 'output' → logprob: -9.152641296386719

Token 12: '_func' (ID: 22252)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.910643762443215e-05
    2. ' (' → logprob: -10.375079154968262
    3. '(
' → logprob: -10.750079154968262
    4. '((' → logprob: -11.875079154968262
    5. '()' → logprob: -12.000079154968262
    6. '(range' → logprob: -12.250079154968262
    7. '('' → logprob: -12.750079154968262
    8. '("("' → logprob: -13.875079154968262
    9. '\(' → logprob: -14.000079154968262
    10. '(

' → logprob: -14.125079154968262

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.787507714354433e-05
    2. '(
' → logprob: -11.00004768371582
    3. ' (' → logprob: -11.12504768371582
    4. '('' → logprob: -12.00004768371582
    5. '("("' → logprob: -12.00004768371582
    6. '(

' → logprob: -14.37504768371582
    7. '```' → logprob: -14.50004768371582
    8. '((' → logprob: -14.50004768371582
    9. '()' → logprob: -14.62504768371582
    10. '<|end|>' → logprob: -14.75004768371582

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014212868176400661
    2. ' range' → logprob: -4.2642130851745605
    3. '(range' → logprob: -11.139212608337402
    4. '```' → logprob: -12.139212608337402
    5. 'rang' → logprob: -12.514212608337402
    6. 'ran' → logprob: -12.514212608337402
    7. '	range' → logprob: -12.764212608337402
    8. ' ' → logprob: -12.889212608337402
    9. ' xrange' → logprob: -12.889212608337402
    10. 'r' → logprob: -13.014212608337402

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022916549642104656
    2. '(
' → logprob: -8.500228881835938
    3. ' (' → logprob: -11.500228881835938
    4. ',' → logprob: -12.375228881835938
    5. ')' → logprob: -13.500228881835938
    6. ' ' → logprob: -13.750228881835938
    7. '('' → logprob: -14.000228881835938
    8. '[' → logprob: -14.000228881835938
    9. '(

' → logprob: -14.000228881835938
    10. ':' → logprob: -14.125228881835938

Token 16: 'if' (ID: 366)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010889010736718774
    2. '(
' → logprob: -7.251089096069336
    3. '(output' → logprob: -8.251089096069336
    4. '(range' → logprob: -9.876089096069336
    5. '(input' → logprob: -11.126089096069336
    6. '```' → logprob: -11.751089096069336
    7. '(max' → logprob: -12.001089096069336
    8. '('' → logprob: -12.376089096069336
    9. '((' → logprob: -12.376089096069336
    10. ')' → logprob: -12.376089096069336

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.005482164211571217
    2. ' output' → logprob: -5.880482196807861
    3. 'input' → logprob: -6.255482196807861
    4. ' ' → logprob: -7.255482196807861
    5. ' not' → logprob: -11.505481719970703
    6. ' isinstance' → logprob: -11.505481719970703
    7. 'output' → logprob: -11.880481719970703
    8. ' (' → logprob: -12.130481719970703
    9. '  ' → logprob: -12.755481719970703
    10. '_input' → logprob: -13.130481719970703

Token 18: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6709786653518677
    2. '_' → logprob: -1.0459786653518677
    3. '(' → logprob: -2.170978546142578
    4. ' _' → logprob: -4.670978546142578
    5. ' ' → logprob: -5.420978546142578
    6. '>' → logprob: -5.670978546142578
    7. ')' → logprob: -6.545978546142578
    8. '_val' → logprob: -6.545978546142578
    9. ' (' → logprob: -7.045978546142578
    10. '(_' → logprob: -7.795978546142578

Token 19: ' &' (ID: 827)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.027612589299678802
    2. ' <' → logprob: -4.777612686157227
    3. ' ==' → logprob: -5.027612686157227
    4. ' >=' → logprob: -5.402612686157227
    5. ' ' → logprob: -5.527612686157227
    6. '>' → logprob: -5.902612686157227
    7. ' <=' → logprob: -7.152612686157227
    8. '  ' → logprob: -9.402612686157227
    9. ' %' → logprob: -10.152612686157227
    10. ' !=' → logprob: -10.152612686157227

Token 20: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03744879737496376
    2. '1' → logprob: -3.4124488830566406
    3. ' (' → logprob: -6.537448883056641
    4. '32' → logprob: -7.787448883056641
    5. '>' → logprob: -7.787448883056641
    6. ' >' → logprob: -7.912448883056641
    7. 'nbsp' → logprob: -7.912448883056641
    8. ' &' → logprob: -9.16244888305664
    9. '  ' → logprob: -9.53744888305664
    10. '0' → logprob: -9.66244888305664

Token 21: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003625366138294339
    2. ' input' → logprob: -5.878625392913818
    3. '1' → logprob: -7.253625392913818
    4. '-' → logprob: -10.87862491607666
    5. '4' → logprob: -11.12862491607666
    6. ' ' → logprob: -11.50362491607666
    7. 'int' → logprob: -11.62862491607666
    8. '2' → logprob: -11.87862491607666
    9. '5' → logprob: -11.87862491607666
    10. '(input' → logprob: -12.00362491607666

Token 22: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.73314929776825e-05
    2. '_' → logprob: -9.50008773803711
    3. '_val' → logprob: -11.75008773803711
    4. 'value' → logprob: -13.25008773803711
    5. '```' → logprob: -14.37508773803711
    6. ' _' → logprob: -14.50008773803711
    7. '_v' → logprob: -14.75008773803711
    8. '__' → logprob: -15.62508773803711
    9. '_bit' → logprob: -16.00008773803711
    10. '_values' → logprob: -16.00008773803711

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1132700964808464
    2. ':' → logprob: -2.7382700443267822
    3. ' :' → logprob: -3.7382700443267822
    4. '==' → logprob: -4.738270282745361
    5. ' !=' → logprob: -4.988270282745361
    6. ' ' → logprob: -6.238270282745361
    7. ' >' → logprob: -7.613270282745361
    8. '>' → logprob: -8.613269805908203
    9. '```' → logprob: -9.613269805908203
    10. ' =' → logprob: -10.113269805908203

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4902385473251343
    2. 'input' → logprob: -0.9902385473251343
    3. ' ' → logprob: -4.365238666534424
    4. '1' → logprob: -5.990238666534424
    5. '0' → logprob: -7.365238666534424
    6. '4' → logprob: -9.740238189697266
    7. '2' → logprob: -10.490238189697266
    8. '32' → logprob: -11.615238189697266
    9. '10' → logprob: -11.615238189697266
    10. '<input' → logprob: -11.740238189697266

Token 25: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00034356804098933935
    2. '_' → logprob: -8.125343322753906
    3. '_val' → logprob: -10.375343322753906
    4. ' _' → logprob: -11.750343322753906
    5. 'value' → logprob: -12.500343322753906
    6. '_v' → logprob: -13.750343322753906
    7. '```' → logprob: -13.875343322753906
    8. '__' → logprob: -14.625343322753906
    9. '_Value' → logprob: -15.000343322753906
    10. ''_' → logprob: -15.375343322753906

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001628956088097766
    2. ' :' → logprob: -9.125163078308105
    3. ':
' → logprob: -9.875163078308105
    4. ':**' → logprob: -13.750163078308105
    5. '):' → logprob: -14.875163078308105
    6. ':return' → logprob: -15.500163078308105
    7. ' :
' → logprob: -15.875163078308105
    8. '>:' → logprob: -16.37516212463379
    9. ':def' → logprob: -16.50016212463379
    10. ':

' → logprob: -16.62516212463379

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4923369586467743
    2. ' output' → logprob: -0.9923369884490967
    3. ' print' → logprob: -4.742336750030518
    4. '	output' → logprob: -5.867336750030518
    5. ':' → logprob: -6.242336750030518
    6. 'output' → logprob: -6.992336750030518
    7. ' ' → logprob: -7.117336750030518
    8. ' 
' → logprob: -7.242336750030518
    9. '    
' → logprob: -7.492336750030518
    10. ':
' → logprob: -8.367337226867676

Token 28: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.2991951107978821
    2. '   ' → logprob: -1.5491950511932373
    3. 'output' (adapté à ' output') → logprob: -3.4241950511932373
    4. ' print' → logprob: -4.424195289611816
    5. 'print' → logprob: -7.674195289611816
    6. ' ' → logprob: -8.424195289611816
    7. '    ' → logprob: -8.924195289611816
    8. '    
' → logprob: -9.049195289611816
    9. '	output' → logprob: -9.424195289611816
    10. ' range' → logprob: -9.674195289611816

Token 29: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -9.29340603761375e-05
    2. '_' → logprob: -9.375092506408691
    3. '_fun' → logprob: -12.875092506408691
    4. '_funcs' → logprob: -13.250092506408691
    5. '_function' → logprob: -13.875092506408691
    6. '```' → logprob: -14.000092506408691
    7. '_value' → logprob: -14.250092506408691
    8. '_FUNC' → logprob: -14.375092506408691
    9. '_fn' → logprob: -15.750092506408691
    10. '_val' → logprob: -16.000093460083008

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4306424558162689
    2. '("' → logprob: -1.5556424856185913
    3. '('' → logprob: -2.9306423664093018
    4. '(True' → logprob: -3.3056423664093018
    5. '(input' → logprob: -3.5556423664093018
    6. '("("' → logprob: -4.180642604827881
    7. '(False' → logprob: -6.930642604827881
    8. '("")' → logprob: -7.055642604827881
    9. '(output' → logprob: -7.055642604827881
    10. '("(' → logprob: -7.180642604827881

Token 31: 'No' (ID: 3160)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8815745115280151
    2. 'Yes' → logprob: -1.5065745115280151
    3. 'P' → logprob: -2.0065746307373047
    4. 'Power' → logprob: -3.1315746307373047
    5. '"' → logprob: -3.3815746307373047
    6. 'The' → logprob: -3.5065746307373047
    7. 'p' → logprob: -4.131574630737305
    8. '1' → logprob: -4.131574630737305
    9. 'Input' → logprob: -4.256574630737305
    10. 'input' → logprob: -4.631574630737305

Token 32: '")
' (ID: 1896)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4034201502799988
    2. 'n' → logprob: -2.7784202098846436
    3. ' ' → logprob: -3.1534202098846436
    4. 'te' → logprob: -3.2784202098846436
    5. 'ne' → logprob: -3.4034202098846436
    6. ' t' → logprob: -3.7784202098846436
    7. ' duplicates' → logprob: -4.4659199714660645
    8. ' error' → logprob: -4.6534199714660645
    9. ' problem' → logprob: -4.7784199714660645
    10. ' loops' → logprob: -4.9659199714660645

Token 33: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.035506535321474075
    2. ' else' → logprob: -3.4105064868927
    3. 'elif' → logprob: -7.035506725311279
    4. '<|end|>' → logprob: -7.535506725311279
    5. 'e' → logprob: -8.785506248474121
    6. ')' → logprob: -9.410506248474121
    7. '
' → logprob: -10.035506248474121
    8. '   ' → logprob: -10.160506248474121
    9. ' ' → logprob: -10.660506248474121
    10. ' elif' → logprob: -11.410506248474121

Token 34: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0018745011184364557
    2. ' else' → logprob: -6.7518744468688965
    3. 'elif' → logprob: -7.3768744468688965
    4. '   ' → logprob: -10.751874923706055
    5. '    
' → logprob: -11.376874923706055
    6. 'e' → logprob: -11.626874923706055
    7. ')' → logprob: -11.751874923706055
    8. '\n' → logprob: -11.876874923706055
    9. '
' → logprob: -12.126874923706055
    10. '  
' → logprob: -12.501874923706055

Token 35: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4294668138027191
    2. '(' → logprob: -1.0544668436050415
    3. '(
' → logprob: -7.554466724395752
    4. '()
' → logprob: -8.55446720123291
    5. '(

' → logprob: -10.80446720123291
    6. '()

' → logprob: -11.30446720123291
    7. '```' → logprob: -13.17946720123291
    8. '()`' → logprob: -13.42946720123291
    9. ' ()' → logprob: -13.67946720123291
    10. '('' → logprob: -13.67946720123291

Token 36: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020295155700296164
    2. '(' → logprob: -7.3770294189453125
    3. '()' → logprob: -7.5020294189453125
    4. '0' → logprob: -7.6270294189453125
    5. ')
' → logprob: -9.002029418945312
    6. '1' → logprob: -9.002029418945312
    7. '())' → logprob: -9.377029418945312
    8. '))' → logprob: -10.877029418945312
    9. ' )' → logprob: -12.252029418945312
    10. '(
' → logprob: -13.627029418945312

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.607391408877447e-05
    2. ')
' → logprob: -10.250036239624023
    3. ' )' → logprob: -15.625036239624023
    4. '))' → logprob: -15.875036239624023
    5. ')

' → logprob: -16.500036239624023
    6. '`)' → logprob: -17.375036239624023
    7. ')`' → logprob: -17.375036239624023
    8. '()' → logprob: -17.500036239624023
    9. ')
' → logprob: -17.750036239624023
    10. '）' → logprob: -18.125036239624023

Token 38: 'output' (ID: 6130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018798042088747025
    2. 'else' → logprob: -5.018797874450684
    3. 'if' → logprob: -5.768797874450684
    4. 'output' → logprob: -6.268797874450684
    5. 'i' → logprob: -6.518797874450684
    6. 'while' → logprob: -6.893797874450684
    7. 'n' → logprob: -7.518797874450684
    8. '_' → logprob: -7.518797874450684
    9. ' for' → logprob: -7.518797874450684
    10. '```' → logprob: -7.643797874450684

Token 39: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0017439620569348335
    2. '_' → logprob: -6.376743793487549
    3. '(' → logprob: -10.751744270324707
    4. '_fun' → logprob: -12.126744270324707
    5. '_(' → logprob: -12.626744270324707
    6. '```' → logprob: -13.001744270324707
    7. '_funcs' → logprob: -13.126744270324707
    8. '_FUNC' → logprob: -13.126744270324707
    9. '(_' → logprob: -13.876744270324707
    10. 'func' → logprob: -14.126744270324707

Token 40: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010680623352527618
    2. '(range' → logprob: -5.385680675506592
    3. '("("' → logprob: -5.635680675506592
    4. '('' → logprob: -6.385680675506592
    5. '(output' → logprob: -7.510680675506592
    6. '((' → logprob: -9.260680198669434
    7. '(input' → logprob: -9.385680198669434
    8. '(True' → logprob: -11.385680198669434
    9. '("' → logprob: -11.885680198669434
    10. '("")' → logprob: -12.385680198669434

Token 41: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0023321169428527355
    2. 'No' → logprob: -6.6273322105407715
    3. '")' → logprob: -8.002331733703613
    4. '"' → logprob: -8.627331733703613
    5. 'Ye' → logprob: -9.127331733703613
    6. 'YES' → logprob: -9.377331733703613
    7. 'Y' → logprob: -9.502331733703613
    8. '2' → logprob: -9.877331733703613
    9. '1' → logprob: -10.627331733703613
    10. '8' → logprob: -11.377331733703613

Token 42: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31760072708129883
    2. ')' → logprob: -1.3176007270812988
    3. '()' → logprob: -6.192600727081299
    4. ')")' → logprob: -6.192600727081299
    5. '("' → logprob: -9.06760025024414
    6. '!")' → logprob: -9.69260025024414
    7. '(' → logprob: -10.44260025024414
    8. '())' → logprob: -11.56760025024414
    9. '"' → logprob: -12.19260025024414
    10. ']' → logprob: -12.56760025024414

Token 43: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9326949119567871
    2. '#' → logprob: -1.557694911956787
    3. ')' → logprob: -2.057694911956787
    4. ':' → logprob: -2.432694911956787
    5. '\n' → logprob: -2.682694911956787
    6. '```' → logprob: -3.307694911956787
    7. '<|end|>' → logprob: -3.682694911956787
    8. '[' → logprob: -4.307694911956787
    9. '\' → logprob: -4.932694911956787
    10. '(' → logprob: -5.057694911956787

Token 44: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04597755894064903
    2. 'input' → logprob: -3.1709775924682617
    3. ' output' → logprob: -6.545977592468262
    4. ' ' → logprob: -7.545977592468262
    5. ' (' → logprob: -7.920977592468262
    6. ' range' → logprob: -8.795977592468262
    7. 'output' → logprob: -8.920977592468262
    8. '  ' → logprob: -9.295977592468262
    9. ' not' → logprob: -10.045977592468262
    10. ' len' → logprob: -10.170977592468262

Token 45: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.5491004129871726e-05
    2. '_' → logprob: -10.750045776367188
    3. '_val' → logprob: -10.750045776367188
    4. ' _' → logprob: -13.375045776367188
    5. 'value' → logprob: -14.750045776367188
    6. '__' → logprob: -15.375045776367188
    7. '_func' → logprob: -16.250045776367188
    8. '_v' → logprob: -16.500045776367188
    9. '_VALUE' → logprob: -16.750045776367188
    10. 'Value' → logprob: -17.125045776367188

Token 46: ' ==' (ID: 951)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.7677145004272461
    2. ' %' → logprob: -0.8927145004272461
    3. ' >' → logprob: -3.017714500427246
    4. ' ==' → logprob: -3.267714500427246
    5. ' ' → logprob: -4.017714500427246
    6. '%' → logprob: -4.517714500427246
    7. ' <' → logprob: -5.392714500427246
    8. '==' → logprob: -6.642714500427246
    9. ' <=' → logprob: -6.642714500427246
    10. '>' → logprob: -6.767714500427246

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3564583957195282
    2. ' ' → logprob: -1.2314584255218506
    3. '0' → logprob: -4.9814581871032715
    4. '2' → logprob: -6.8564581871032715
    5. '3' → logprob: -10.60645866394043
    6. '  ' → logprob: -11.60645866394043
    7. '4' → logprob: -12.10645866394043
    8. '   ' → logprob: -12.35645866394043
    9. '100' → logprob: -12.98145866394043
    10. 'input' → logprob: -13.35645866394043

Token 48: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05917414277791977
    2. ' ' → logprob: -3.059174060821533
    3. '0' → logprob: -4.934174060821533
    4. '2' → logprob: -5.934174060821533
    5. '3' → logprob: -7.434174060821533
    6. '4' → logprob: -10.309174537658691
    7. '  ' → logprob: -11.309174537658691
    8. 'int' → logprob: -12.059174537658691
    9. '409' → logprob: -12.184174537658691
    10. '   ' → logprob: -12.371674537658691

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037658745422959328
    2. ' :' → logprob: -5.628766059875488
    3. ' and' → logprob: -9.503766059875488
    4. ' or' → logprob: -10.003766059875488
    5. ':
' → logprob: -10.253766059875488
    6. ':return' → logprob: -13.378766059875488
    7. ' :
' → logprob: -13.378766059875488
    8. 'and' → logprob: -13.878766059875488
    9. ' ' → logprob: -14.128766059875488
    10. ':**' → logprob: -14.378766059875488

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08288680762052536
    2. ' output' → logprob: -3.0828866958618164
    3. ':' → logprob: -3.8328866958618164
    4. 'output' → logprob: -4.957886695861816
    5. ' ' → logprob: -6.332886695861816
    6. '	output' → logprob: -7.457886695861816
    7. '  ' → logprob: -7.707886695861816
    8. ' print' → logprob: -7.957886695861816
    9. ':
' → logprob: -8.207886695861816
    10. '       ' → logprob: -8.207886695861816

Token 51: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.4174249470233917
    2. 'output' (adapté à ' output') → logprob: -1.5424249172210693
    3. '   ' → logprob: -2.2924249172210693
    4. 'print' → logprob: -4.667425155639648
    5. ' print' → logprob: -4.917425155639648
    6. ' ' → logprob: -6.042425155639648
    7. ' for' → logprob: -6.542425155639648
    8. ' pass' → logprob: -7.042425155639648
    9. '\n' → logprob: -7.292425155639648
    10. 'pass' → logprob: -7.417425155639648

Token 52: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.2948405128554441e-05
    2. '_value' → logprob: -12.00001335144043
    3. '_' → logprob: -12.50001335144043
    4. 'func' → logprob: -14.50001335144043
    5. '```' → logprob: -14.50001335144043
    6. '_FUNC' → logprob: -14.75001335144043
    7. 'Func' → logprob: -14.87501335144043
    8. '_val' → logprob: -14.87501335144043
    9. '_funcs' → logprob: -15.37501335144043
    10. '_function' → logprob: -15.87501335144043

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49687495827674866
    2. '("' → logprob: -0.9968749284744263
    3. '("")' → logprob: -4.746874809265137
    4. '("("' → logprob: -5.496874809265137
    5. '(input' → logprob: -5.746874809265137
    6. '('' → logprob: -5.996874809265137
    7. '(True' → logprob: -6.496874809265137
    8. '(False' → logprob: -6.871874809265137
    9. '(range' → logprob: -8.246874809265137
    10. '(output' → logprob: -8.246874809265137

Token 54: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9742043614387512
    2. '1' → logprob: -1.3492043018341064
    3. '"' → logprob: -1.5992043018341064
    4. '0' → logprob: -2.9742043018341064
    5. '3' → logprob: -2.9742043018341064
    6. '4' → logprob: -3.3492043018341064
    7. '-' → logprob: -4.9742045402526855
    8. '6' → logprob: -5.4742045402526855
    9. '5' → logprob: -5.8492045402526855
    10. '7' → logprob: -5.9742045402526855

Token 55: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013761592097580433
    2. '+' → logprob: -4.763761520385742
    3. '0' → logprob: -5.888761520385742
    4. ' )' → logprob: -6.513761520385742
    5. ')
' → logprob: -8.138761520385742
    6. ' +' → logprob: -8.388761520385742
    7. '+)' → logprob: -9.388761520385742
    8. '*' → logprob: -9.638761520385742
    9. '1' → logprob: -10.138761520385742
    10. '2' → logprob: -10.263761520385742

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.45871657133102417
    2. ')' → logprob: -1.333716630935669
    3. '0' → logprob: -3.333716630935669
    4. '3' → logprob: -3.583716630935669
    5. '1' → logprob: -3.833716630935669
    6. ',' → logprob: -5.20871639251709
    7. ' ' → logprob: -5.33371639251709
    8. 'end' → logprob: -6.08371639251709
    9. '"' → logprob: -6.70871639251709
    10. ' )' → logprob: -6.70871639251709

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27607566118240356
    2. '3' → logprob: -2.151075601577759
    3. ')' → logprob: -3.026075601577759
    4. '1' → logprob: -3.526075601577759
    5. '")' → logprob: -4.151075839996338
    6. 'end' → logprob: -4.651075839996338
    7. ' ' → logprob: -4.776075839996338
    8. '0' → logprob: -4.901075839996338
    9. 'input' → logprob: -6.401075839996338
    10. '"' → logprob: -7.026075839996338

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00120475422590971
    2. ',' → logprob: -7.376204967498779
    3. ')
' → logprob: -7.876204967498779
    4. ' )' → logprob: -9.376204490661621
    5. '   ' → logprob: -10.751204490661621
    6. ',)' → logprob: -10.751204490661621
    7. '3' → logprob: -11.501204490661621
    8. '+' → logprob: -11.751204490661621
    9. '))' → logprob: -11.876204490661621
    10. ' ' → logprob: -12.001204490661621

Token 59: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4237353205680847
    2. ' else' → logprob: -2.0487353801727295
    3. 'elif' → logprob: -2.2987353801727295
    4. ' ' → logprob: -3.7987353801727295
    5. '<|end|>' → logprob: -4.17373514175415
    6. ':' → logprob: -4.29873514175415
    7. '[' → logprob: -4.79873514175415
    8. ' elif' → logprob: -4.79873514175415
    9. '```' → logprob: -4.92373514175415
    10. ')' → logprob: -4.92373514175415

Token 60: ' output' (ID: 4733)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2759069800376892
    2. 'elif' → logprob: -2.150907039642334
    3. '   ' → logprob: -3.525907039642334
    4. ' else' → logprob: -3.525907039642334
    5. ')' → logprob: -3.650907039642334
    6. ' ' → logprob: -4.775907039642334
    7. '<|end|>' → logprob: -5.150907039642334
    8. '
' → logprob: -5.275907039642334
    9. '```' → logprob: -5.525907039642334
    10. ' elif' → logprob: -6.025907039642334

Token 61: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00028135839966125786
    2. '_value' → logprob: -8.75028133392334
    3. '_' → logprob: -10.00028133392334
    4. 'func' → logprob: -10.50028133392334
    5. '(' → logprob: -10.75028133392334
    6. '```' → logprob: -11.50028133392334
    7. '_val' → logprob: -12.50028133392334
    8. '_funcs' → logprob: -13.00028133392334
    9. ')' → logprob: -13.25028133392334
    10. '_FUNC' → logprob: -13.25028133392334

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029249449726194143
    2. '(input' → logprob: -6.377924919128418
    3. '((' → logprob: -7.752924919128418
    4. '3' → logprob: -9.002924919128418
    5. '(range' → logprob: -9.002924919128418
    6. '()' → logprob: -9.252924919128418
    7. '("' → logprob: -9.252924919128418
    8. '(output' → logprob: -9.377924919128418
    9. '(
' → logprob: -9.627924919128418
    10. ' (' → logprob: -9.877924919128418

Token 63: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6945140957832336
    2. '1' → logprob: -1.3195140361785889
    3. '2' → logprob: -1.5695140361785889
    4. ')' → logprob: -4.819514274597168
    5. ' ' → logprob: -5.069514274597168
    6. 'input' → logprob: -5.194514274597168
    7. '0' → logprob: -5.569514274597168
    8. '"' → logprob: -7.694514274597168
    9. 'output' → logprob: -9.132014274597168
    10. '-' → logprob: -9.132014274597168

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030409950762987137
    2. ' ,' → logprob: -4.030409812927246
    3. '3' → logprob: -4.530409812927246
    4. ' ' → logprob: -7.655409812927246
    5. ')' → logprob: -8.405409812927246
    6. '+' → logprob: -8.780409812927246
    7. '1' → logprob: -8.780409812927246
    8. ' +' → logprob: -9.280409812927246
    9. ' -' → logprob: -9.655409812927246
    10. '   ' → logprob: -9.655409812927246

Token 65: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2851311266422272
    2. '3' → logprob: -1.4101310968399048
    3. '2' → logprob: -6.535130977630615
    4. '1' → logprob: -6.910130977630615
    5. '32' → logprob: -7.410130977630615
    6. '"' → logprob: -8.285131454467773
    7. ')' → logprob: -8.410131454467773
    8. ''' → logprob: -9.535131454467773
    9. '  ' → logprob: -9.660131454467773
    10. ' )' → logprob: -9.785131454467773

Token 66: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011961832642555237
    2. '1' → logprob: -4.636961936950684
    3. ' ' → logprob: -6.136961936950684
    4. '2' → logprob: -10.261961936950684
    5. '  ' → logprob: -13.136961936950684
    6. '   ' → logprob: -13.511961936950684
    7. 'input' → logprob: -14.574461936950684
    8. '-' → logprob: -14.699461936950684
    9. '}' → logprob: -14.761961936950684
    10. '```' → logprob: -15.386961936950684

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005993382073938847
    2. ')
' → logprob: -5.255993366241455
    3. '   ' → logprob: -7.255993366241455
    4. ' )' → logprob: -10.255993843078613
    5. ',' → logprob: -12.755993843078613
    6. ' ' → logprob: -13.005993843078613
    7. ')

' → logprob: -13.130993843078613
    8. ')
' → logprob: -13.130993843078613
    9. '```' → logprob: -13.505993843078613
    10. '()' → logprob: -13.755993843078613

Token 68: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11846157163381577
    2. 'elif' → logprob: -2.2434616088867188
    3. '   ' → logprob: -5.993461608886719
    4. '```' → logprob: -6.243461608886719
    5. ' else' → logprob: -8.243461608886719
    6. '    
' → logprob: -8.493461608886719
    7. 'if' → logprob: -8.743461608886719
    8. '
' → logprob: -9.243461608886719
    9. 'output' → logprob: -9.368461608886719
    10. '  
' → logprob: -10.243461608886719

Token 69: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27992039918899536
    2. 'exit' → logprob: -1.5299203395843506
    3. 'else' → logprob: -3.9049203395843506
    4. 'output' (adapté à ' output') → logprob: -5.40492057800293
    5. 'elif' → logprob: -6.40492057800293
    6. 'for' → logprob: -7.40492057800293
    7. ' exit' → logprob: -8.90492057800293
    8. 'print' → logprob: -9.27992057800293
    9. '```' → logprob: -9.27992057800293
    10. '	exit' → logprob: -9.40492057800293

Token 70: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00012487331696320325
    2. '_' → logprob: -10.12512493133545
    3. 'func' → logprob: -10.25012493133545
    4. '_value' → logprob: -10.62512493133545
    5. '_FUNC' → logprob: -11.62512493133545
    6. '(' → logprob: -11.87512493133545
    7. 'Func' → logprob: -12.12512493133545
    8. '_val' → logprob: -13.75012493133545
    9. '```' → logprob: -15.00012493133545
    10. '_funcs' → logprob: -15.37512493133545

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010247035970678553
    2. ' (' → logprob: -10.000102043151855
    3. '(
' → logprob: -10.875102043151855
    4. '3' → logprob: -11.000102043151855
    5. '()' → logprob: -11.750102043151855
    6. '((' → logprob: -13.375102043151855
    7. '(None' → logprob: -13.375102043151855
    8. '1' → logprob: -13.625102043151855
    9. ' ' → logprob: -13.750102043151855
    10. '4' → logprob: -13.875102043151855

Token 72: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4293455481529236
    2. '3' → logprob: -1.0543456077575684
    3. ' ' → logprob: -7.929345607757568
    4. '2' → logprob: -8.55434513092041
    5. '   ' → logprob: -9.55434513092041
    6. ')' → logprob: -12.05434513092041
    7. '  ' → logprob: -12.11684513092041
    8. '4' → logprob: -13.86684513092041
    9. '    ' → logprob: -13.86684513092041
    10. '```' → logprob: -14.05434513092041

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014747225679457188
    2. '-' → logprob: -4.889747142791748
    3. ' ,' → logprob: -5.514747142791748
    4. ' -' → logprob: -6.889747142791748
    5. '1' → logprob: -7.264747142791748
    6. '4' → logprob: -7.389747142791748
    7. ')' → logprob: -8.389747619628906
    8. ' ' → logprob: -8.639747619628906
    9. '   ' → logprob: -8.764747619628906
    10. '2' → logprob: -9.764747619628906

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39627769589424133
    2. ' ' → logprob: -1.146277666091919
    3. '2' → logprob: -4.771277904510498
    4. '4' → logprob: -7.271277904510498
    5. ')' → logprob: -10.02127742767334
    6. '3' → logprob: -10.14627742767334
    7. '  ' → logprob: -10.39627742767334
    8. '"' → logprob: -10.52127742767334
    9. '   ' → logprob: -11.20877742767334
    10. '5' → logprob: -12.20877742767334

Token 75: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011237873695790768
    2. '2' → logprob: -6.876123905181885
    3. ' ' → logprob: -9.876123428344727
    4. '3' → logprob: -10.876123428344727
    5. '4' → logprob: -11.001123428344727
    6. ')' → logprob: -13.813623428344727
    7. '0' → logprob: -13.876123428344727
    8. '   ' → logprob: -14.751123428344727
    9. '-' → logprob: -15.501123428344727
    10. '5' → logprob: -15.688623428344727

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11507460474967957
    2. ')
' → logprob: -2.240074634552002
    3. '   ' → logprob: -6.115074634552002
    4. ')
' → logprob: -10.615074157714844
    5. ' )' → logprob: -12.115074157714844
    6. ')

' → logprob: -12.865074157714844
    7. ' )
' → logprob: -13.365074157714844
    8. ' ' → logprob: -14.115074157714844
    9. '4' → logprob: -14.490074157714844
    10. ')`
' → logprob: -14.990074157714844

Token 77: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03198636695742607
    2. 'elif' → logprob: -3.7819864749908447
    3. '```' → logprob: -6.406986236572266
    4. ' else' → logprob: -6.406986236572266
    5. '   ' → logprob: -6.531986236572266
    6. 'for' → logprob: -6.781986236572266
    7. 'e' → logprob: -7.781986236572266
    8. '    
' → logprob: -7.781986236572266
    9. ' ' → logprob: -8.156986236572266
    10. ')' → logprob: -8.531986236572266

Token 78: ' output' (ID: 4733)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.024497706443071365
    2. 'elif' → logprob: -4.3994975090026855
    3. 'exit' → logprob: -5.0244975090026855
    4. ' else' → logprob: -6.0244975090026855
    5. 'for' → logprob: -7.3994975090026855
    6. '   ' → logprob: -7.5244975090026855
    7. '0' → logprob: -8.024497985839844
    8. 'output' (adapté à ' output') → logprob: -8.274497985839844
    9. '4' → logprob: -8.649497985839844
    10. '```' → logprob: -8.649497985839844

Token 79: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.7544981837272644
    2. '_' → logprob: -0.8794981837272644
    3. '(' → logprob: -2.254498243331909
    4. 'func' → logprob: -5.62949800491333
    5. ')' → logprob: -6.12949800491333
    6. '()' → logprob: -7.75449800491333
    7. '   ' → logprob: -7.87949800491333
    8. 'Func' → logprob: -8.004498481750488
    9. '_FUNC' → logprob: -8.129498481750488
    10. '<|end|>' → logprob: -8.129498481750488

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004563276655972004
    2. '()' → logprob: -6.379563331604004
    3. '("' → logprob: -6.754563331604004
    4. '(
' → logprob: -7.379563331604004
    5. '('' → logprob: -7.379563331604004
    6. '((' → logprob: -8.629563331604004
    7. '("("' → logprob: -9.254563331604004
    8. '(input' → logprob: -9.879563331604004
    9. '(

' → logprob: -11.004563331604004
    10. '(True' → logprob: -11.254563331604004

Token 81: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4180864691734314
    2. '3' → logprob: -1.9180865287780762
    3. '1' → logprob: -2.168086528778076
    4. '2' → logprob: -2.543086528778076
    5. '(' → logprob: -7.293086528778076
    6. ' ' → logprob: -8.418086051940918
    7. ')' → logprob: -8.543086051940918
    8. '5' → logprob: -8.543086051940918
    9. 'input' → logprob: -8.543086051940918
    10. '"' → logprob: -9.043086051940918

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011231022886931896
    2. ')' → logprob: -5.011230945587158
    3. ' ,' → logprob: -5.636230945587158
    4. ' ' → logprob: -7.386230945587158
    5. '(' → logprob: -8.636231422424316
    6. ' )' → logprob: -9.761231422424316
    7. ' (' → logprob: -10.636231422424316
    8. '   ' → logprob: -11.386231422424316
    9. '  ' → logprob: -11.511231422424316
    10. '-' → logprob: -12.261231422424316

Token 83: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10741045325994492
    2. '3' → logprob: -3.232410430908203
    3. '1' → logprob: -3.732410430908203
    4. '2' → logprob: -4.357410430908203
    5. ' ' → logprob: -4.732410430908203
    6. '7' → logprob: -4.857410430908203
    7. '6' → logprob: -5.482410430908203
    8. '4' → logprob: -5.607410430908203
    9. ')' → logprob: -7.357410430908203
    10. '8' → logprob: -7.982410430908203

Token 84: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.31420934200286865
    2. '3' → logprob: -2.064209461212158
    3. '1' → logprob: -2.564209461212158
    4. '2' → logprob: -3.439209461212158
    5. '6' → logprob: -4.064209461212158
    6. '7' → logprob: -4.814209461212158
    7. '4' → logprob: -4.939209461212158
    8. '8' → logprob: -7.439209461212158
    9. ')' → logprob: -8.689208984375
    10. ' ' → logprob: -8.939208984375

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016277639952022582
    2. ')
' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.375163078308105
    4. '()' → logprob: -14.500163078308105
    5. '(' → logprob: -14.875163078308105
    6. ' )' → logprob: -14.875163078308105
    7. ')

' → logprob: -15.375163078308105
    8. '#' → logprob: -15.500163078308105
    9. ')
' → logprob: -15.875163078308105
    10. ' ' → logprob: -16.00016212463379

Token 86: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12488777935504913
    2. 'elif' → logprob: -2.749887704849243
    3. 'e' → logprob: -3.499887704849243
    4. ' else' → logprob: -4.499887943267822
    5. '```' → logprob: -5.624887943267822
    6. 'n' → logprob: -6.124887943267822
    7. ')' → logprob: -7.249887943267822
    8. '   ' → logprob: -7.249887943267822
    9. ' ' → logprob: -7.374887943267822
    10. '<|end|>' → logprob: -7.374887943267822

Token 87: ' output' (ID: 4733)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04684460535645485
    2. 'elif' → logprob: -4.421844482421875
    3. '```' → logprob: -4.671844482421875
    4. ')' → logprob: -5.671844482421875
    5. '   ' → logprob: -5.796844482421875
    6. ' else' → logprob: -5.796844482421875
    7. 'e' → logprob: -5.921844482421875
    8. 'for' → logprob: -6.171844482421875
    9. '
' → logprob: -6.421844482421875
    10. '\n' → logprob: -6.421844482421875

Token 88: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.04213084653019905
    2. '(' → logprob: -3.542130947113037
    3. '_' → logprob: -4.792130947113037
    4. 'Func' → logprob: -6.542130947113037
    5. 'func' → logprob: -6.667130947113037
    6. '_FUNC' → logprob: -7.667130947113037
    7. '("_' → logprob: -8.542130470275879
    8. ')' → logprob: -9.167130470275879
    9. '('_' → logprob: -9.167130470275879
    10. '(_' → logprob: -9.542130470275879

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015675919130444527
    2. '("' → logprob: -7.126567363739014
    3. '()' → logprob: -8.001567840576172
    4. '('' → logprob: -8.251567840576172
    5. '((' → logprob: -9.626567840576172
    6. '(
' → logprob: -10.126567840576172
    7. '("("' → logprob: -11.501567840576172
    8. '(-' → logprob: -11.876567840576172
    9. '(True' → logprob: -11.876567840576172
    10. '(None' → logprob: -12.501567840576172

Token 90: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.35893741250038147
    2. '3' → logprob: -1.983937382698059
    3. '1' → logprob: -2.4839375019073486
    4. '2' → logprob: -3.1089375019073486
    5. '4' → logprob: -3.3589375019073486
    6. '(' → logprob: -7.6089372634887695
    7. ' ' → logprob: -7.7339372634887695
    8. '6' → logprob: -8.98393726348877
    9. ')' → logprob: -9.67143726348877
    10. '0' → logprob: -11.04643726348877

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016953300684690475
    2. ' ,' → logprob: -4.266953468322754
    3. ' ' → logprob: -6.891953468322754
    4. '6' → logprob: -7.141953468322754
    5. ')' → logprob: -7.141953468322754
    6. '(' → logprob: -10.016953468322754
    7. '   ' → logprob: -11.266953468322754
    8. '0' → logprob: -11.391953468322754
    9. '7' → logprob: -11.579453468322754
    10. ',
' → logprob: -11.579453468322754

Token 92: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7310796976089478
    2. ' ' → logprob: -0.7310796976089478
    3. '1' → logprob: -4.106079578399658
    4. '4' → logprob: -4.231079578399658
    5. '3' → logprob: -5.481079578399658
    6. '2' → logprob: -6.731079578399658
    7. '7' → logprob: -7.856079578399658
    8. '5' → logprob: -9.106080055236816
    9. '10' → logprob: -9.606080055236816
    10. '  ' → logprob: -10.106080055236816

Token 93: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0960121676325798
    2. '3' → logprob: -3.0960121154785156
    3. '1' → logprob: -3.2210121154785156
    4. '2' → logprob: -5.346012115478516
    5. '7' → logprob: -6.846012115478516
    6. '4' → logprob: -8.221012115478516
    7. ' ' → logprob: -9.096012115478516
    8. '8' → logprob: -9.221012115478516
    9. '10' → logprob: -10.096012115478516
    10. '9' → logprob: -11.596012115478516

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003884894831571728
    2. ')
' → logprob: -7.8753886222839355
    3. '   ' → logprob: -12.000388145446777
    4. ')
' → logprob: -14.625388145446777
    5. ' )' → logprob: -14.625388145446777
    6. ':' → logprob: -15.375388145446777
    7. '):' → logprob: -15.625388145446777
    8. '')' → logprob: -16.125389099121094
    9. '")' → logprob: -16.250389099121094
    10. ')

' → logprob: -16.250389099121094

Token 95: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05965300276875496
    2. 'elif' → logprob: -3.0596530437469482
    3. 'for' → logprob: -5.809652805328369
    4. '```' → logprob: -5.934652805328369
    5. ' else' → logprob: -6.559652805328369
    6. '   ' → logprob: -6.934652805328369
    7. '
' → logprob: -7.434652805328369
    8. 'e' → logprob: -7.809652805328369
    9. '    
' → logprob: -8.559653282165527
    10. 'output' → logprob: -8.559653282165527

Token 96: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2356460988521576
    2. 'elif' → logprob: -2.2356460094451904
    3. '   ' → logprob: -3.1106460094451904
    4. 'output' → logprob: -3.1106460094451904
    5. 'exit' (adapté à ' exit') → logprob: -4.9856462478637695
    6. 'for' → logprob: -5.9856462478637695
    7. '```' → logprob: -6.4856462478637695
    8. 'if' → logprob: -6.6106462478637695
    9. ' else' → logprob: -8.11064624786377
    10. ' output' → logprob: -8.23564624786377

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005707762204110622
    2. '()' → logprob: -5.255707740783691
    3. '(
' → logprob: -8.255707740783691
    4. '(

' → logprob: -9.880707740783691
    5. '(False' → logprob: -10.380707740783691
    6. '("("' → logprob: -10.880707740783691
    7. '((' → logprob: -11.005707740783691
    8. '('' → logprob: -11.005707740783691
    9. ' (' → logprob: -11.255707740783691
    10. '0' → logprob: -11.255707740783691

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043496055877767503
    2. '(' → logprob: -7.750434875488281
    3. '1' → logprob: -12.875434875488281
    4. ' ' → logprob: -14.250434875488281
    5. '6' → logprob: -14.500434875488281
    6. ')' → logprob: -15.000434875488281
    7. '2' → logprob: -16.75043487548828
    8. '3' → logprob: -17.00043487548828
    9. '()' → logprob: -17.00043487548828
    10. '```' → logprob: -17.00043487548828

Token 99: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -17.375003814697266
    4. ')

' → logprob: -17.750003814697266
    5. ')`' → logprob: -18.000003814697266
    6. '))' → logprob: -18.750003814697266
    7. '()' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '')' → logprob: -19.000003814697266
    10. '`)' → logprob: -19.125003814697266

Token 100: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0751104354858398
    2. 'i' → logprob: -1.2001104354858398
    3. 'f' → logprob: -2.20011043548584
    4. 'n' → logprob: -2.32511043548584
    5. 'else' → logprob: -2.70011043548584
    6. 'e' → logprob: -3.07511043548584
    7. '#' → logprob: -4.70011043548584
    8. 'elif' → logprob: -5.57511043548584
    9. 'd' → logprob: -5.95011043548584
    10. 'if' → logprob: -6.07511043548584

Token 101: '_power' (ID: 51623)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6127199530601501
    2. '_value' → logprob: -1.112720012664795
    3. '_' → logprob: -2.987720012664795
    4. '_range' → logprob: -4.237720012664795
    5. '_depth' → logprob: -4.237720012664795
    6. '_num' → logprob: -4.362720012664795
    7. '_length' → logprob: -4.612720012664795
    8. '_len' → logprob: -4.612720012664795
    9. '_output' → logprob: -5.612720012664795
    10. '_count' → logprob: -5.987720012664795

Token 102: '_two' (ID: 54305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775676965713501
    2. '=' → logprob: -0.8275676965713501
    3. '_' → logprob: -6.4525675773620605
    4. '_of' → logprob: -11.577568054199219
    5. '_value' → logprob: -11.577568054199219
    6. '_=' → logprob: -11.577568054199219
    7. '_val' → logprob: -12.327568054199219
    8. 'of' → logprob: -12.702568054199219
    9. '(' → logprob: -13.077568054199219
    10. ' ' → logprob: -13.327568054199219

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012518009170889854
    2. '=' → logprob: -4.387517929077148
    3. ' ' → logprob: -12.387517929077148
    4. ' ' → logprob: -13.387517929077148
    5. '_' → logprob: -13.512517929077148
    6. 's' → logprob: -15.512517929077148
    7. '=input' → logprob: -15.512517929077148
    8. '=int' → logprob: -15.762517929077148
    9. ',' → logprob: -15.887517929077148
    10. '_value' → logprob: -16.51251792907715

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16046863794326782
    2. ' ' → logprob: -1.910468578338623
    3. 'input' → logprob: -9.160469055175781
    4. ' input' → logprob: -9.660469055175781
    5. '2' → logprob: -10.285469055175781
    6. '   ' → logprob: -11.035469055175781
    7. ' (' → logprob: -11.660469055175781
    8. '  ' → logprob: -11.910469055175781
    9. '(' → logprob: -12.285469055175781
    10. '(input' → logprob: -12.910469055175781

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006827684701420367
    2. ' ' → logprob: -7.625682830810547
    3. 'input' → logprob: -8.750682830810547
    4. '2' → logprob: -10.375682830810547
    5. '(' → logprob: -13.500682830810547
    6. ' input' → logprob: -14.000682830810547
    7. '
' → logprob: -14.250682830810547
    8. 'int' → logprob: -14.500682830810547
    9. '(input' → logprob: -14.625682830810547
    10. 'max' → logprob: -14.875682830810547

Token 106: '
' (ID: 198)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.4273254871368408
    2. '<<' → logprob: -1.3023254871368408
    3. ' <<' → logprob: -2.677325487136841
    4. ' while' → logprob: -5.802325248718262
    5. 'while' → logprob: -5.802325248718262
    6. '<<(' → logprob: -8.427325248718262
    7. ' <' → logprob: -8.552325248718262
    8. '<' → logprob: -8.552325248718262
    9. '
' → logprob: -9.052325248718262
    10. '1' → logprob: -10.052325248718262

Token 107: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15831024944782257
    2. ' while' → logprob: -2.4083101749420166
    3. '<<' → logprob: -2.9083101749420166
    4. ' <<=' → logprob: -6.783310413360596
    5. ' <<' → logprob: -7.408310413360596
    6. '<<(' → logprob: -9.783309936523438
    7. '<' → logprob: -10.908309936523438
    8. '	while' → logprob: -10.908309936523438
    9. '
' → logprob: -11.033309936523438
    10. 'for' → logprob: -11.283309936523438

Token 108: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06229020282626152
    2. 'max' → logprob: -2.8122901916503906
    3. '(max' → logprob: -8.06229019165039
    4. ' (' → logprob: -12.06229019165039
    5. ' input' → logprob: -14.31229019165039
    6. '	max' → logprob: -14.93729019165039
    7. ' ' → logprob: -15.18729019165039
    8. '(' → logprob: -15.31229019165039
    9. 'input' → logprob: -16.93729019165039
    10. '_max' → logprob: -17.56229019165039

Token 109: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.00014585316239390522
    2. '_' → logprob: -9.50014591217041
    3. '_value' → logprob: -10.37514591217041
    4. 'power' → logprob: -11.00014591217041
    5. '_pow' → logprob: -12.25014591217041
    6. '_p' → logprob: -12.50014591217041
    7. ' _' → logprob: -12.87514591217041
    8. '_max' → logprob: -13.12514591217041
    9. '_POWER' → logprob: -13.37514591217041
    10. '<' → logprob: -13.75014591217041

Token 110: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.00011856284982059151
    2. 'two' → logprob: -9.125118255615234
    3. '_tw' → logprob: -12.875118255615234
    4. '_TWO' → logprob: -13.375118255615234
    5. '2' → logprob: -13.750118255615234
    6. '<' → logprob: -13.875118255615234
    7. '_' → logprob: -14.125118255615234
    8. ' two' → logprob: -14.500118255615234
    9. '*_' → logprob: -14.750118255615234
    10. ' ' → logprob: -15.375118255615234

Token 111: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23598377406597137
    2. ' <' → logprob: -2.2359838485717773
    3. '<' → logprob: -2.7359838485717773
    4. '<=' → logprob: -3.3609838485717773
    5. ' <<=' → logprob: -6.485983848571777
    6. '<<' → logprob: -6.860983848571777
    7. ' *' → logprob: -7.610983848571777
    8. ' ' → logprob: -7.985983848571777
    9. ' <<' → logprob: -8.485983848571777
    10. '*' → logprob: -8.860983848571777

Token 112: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006277294596657157
    2. ' ' → logprob: -7.375627517700195
    3. '<' → logprob: -15.000627517700195
    4. '4' → logprob: -15.375627517700195
    5. 'input' → logprob: -15.750627517700195
    6. '   ' → logprob: -16.000627517700195
    7. '3' → logprob: -16.938127517700195
    8. '=' → logprob: -17.563127517700195
    9. '<=' → logprob: -17.688127517700195
    10. ' ' → logprob: -17.875627517700195

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001612267515156418
    2. ' ' → logprob: -8.750161170959473
    3. '<' → logprob: -13.875161170959473
    4. '4' → logprob: -14.375161170959473
    5. '3' → logprob: -15.000161170959473
    6. '   ' → logprob: -15.000161170959473
    7. '=' → logprob: -15.500161170959473
    8. 'two' → logprob: -17.25016212463379
    9. 'input' → logprob: -17.31266212463379
    10. '10' → logprob: -17.43766212463379

Token 114: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11302929371595383
    2. '<=' → logprob: -2.2380292415618896
    3. ' <' → logprob: -9.113029479980469
    4. '<' → logprob: -9.363029479980469
    5. ')<=' → logprob: -12.738029479980469
    6. ']<=' → logprob: -13.113029479980469
    7. ' ' → logprob: -13.238029479980469
    8. '<|end|>' → logprob: -13.363029479980469
    9. ' <<=' → logprob: -13.613029479980469
    10. ' ' → logprob: -14.738029479980469

Token 115: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07943716645240784
    2. ' input' → logprob: -2.579437255859375
    3. '=input' → logprob: -7.954437255859375
    4. '=' → logprob: -8.579437255859375
    5. ' =' → logprob: -13.079437255859375
    6. '	input' → logprob: -13.579437255859375
    7. '<input' → logprob: -13.829437255859375
    8. '(input' → logprob: -13.954437255859375
    9. ' ' → logprob: -14.079437255859375
    10. '_input' → logprob: -14.329437255859375

Token 116: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.2664456789934775e-06
    2. '_val' → logprob: -14.375000953674316
    3. '_' → logprob: -14.500000953674316
    4. ' _' → logprob: -16.250001907348633
    5. 'value' → logprob: -18.375001907348633
    6. '_Value' → logprob: -19.000001907348633
    7. ')_' → logprob: -19.625001907348633
    8. '_VALUE' → logprob: -19.750001907348633
    9. '\' → logprob: -20.375001907348633
    10. '_values' → logprob: -20.500001907348633

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22546599805355072
    2. ':
' → logprob: -1.600466012954712
    3. '   ' → logprob: -11.475465774536133
    4. ':max' → logprob: -11.475465774536133
    5. ' :
' → logprob: -11.600465774536133
    6. 'max' → logprob: -11.725465774536133
    7. ' :' → logprob: -12.225465774536133
    8. '):
' → logprob: -12.850465774536133
    9. ':
' → logprob: -13.350465774536133
    10. ',' → logprob: -13.350465774536133

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013042837381362915
    2. ' max' → logprob: -6.8763041496276855
    3. 'max' → logprob: -8.501304626464844
    4. '
' → logprob: -9.876304626464844
    5. '    
' → logprob: -11.751304626464844
    6. '	max' → logprob: -12.126304626464844
    7. '       ' → logprob: -13.876304626464844
    8. '(max' → logprob: -14.376304626464844
    9. ',max' → logprob: -14.501304626464844
    10. '<|end|>' → logprob: -15.001304626464844

Token 119: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9791651964187622
    2. '   ' → logprob: -1.1041651964187622
    3. 'max' (adapté à ' max') → logprob: -1.2291651964187622
    4. '	max' → logprob: -8.729165077209473
    5. '       ' → logprob: -9.479165077209473
    6. '
' → logprob: -10.104165077209473
    7. ' ' → logprob: -10.979165077209473
    8. '    
' → logprob: -11.354165077209473
    9. '_max' → logprob: -11.979165077209473
    10. ' 
' → logprob: -11.979165077209473

Token 120: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -3.1424973713001236e-05
    2. '_' → logprob: -11.125031471252441
    3. '_p' → logprob: -11.500031471252441
    4. '_pow' → logprob: -12.500031471252441
    5. '_value' → logprob: -14.125031471252441
    6. '_max' → logprob: -14.875031471252441
    7. ' _' → logprob: -15.125031471252441
    8. '_user' → logprob: -15.125031471252441
    9. '```' → logprob: -15.500031471252441
    10. 'power' → logprob: -15.875031471252441

Token 121: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0003360582049936056
    2. 'two' → logprob: -8.000335693359375
    3. '_TWO' → logprob: -14.750335693359375
    4. '_tw' → logprob: -16.000335693359375
    5. ' two' → logprob: -16.375335693359375
    6. 'Two' → logprob: -17.000335693359375
    7. '(two' → logprob: -17.000335693359375
    8. '.two' → logprob: -17.375335693359375
    9. '-two' → logprob: -18.750335693359375
    10. '```' → logprob: -19.125335693359375

Token 122: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.07207534462213516
    2. '*=' → logprob: -2.822075366973877
    3. '=' → logprob: -4.947075366973877
    4. ' <<=' → logprob: -6.572075366973877
    5. ' =' → logprob: -6.947075366973877
    6. '*' → logprob: -7.947075366973877
    7. ' ' → logprob: -9.072074890136719
    8. ' ' → logprob: -10.072074890136719
    9. ' *' → logprob: -10.572074890136719
    10. '   ' → logprob: -10.572074890136719

Token 123: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011048642918467522
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.636048316955566
    4. '  ' → logprob: -15.886048316955566
    5. ' ' → logprob: -16.636049270629883
    6. '```' → logprob: -16.761049270629883
    7. '<|end|>' → logprob: -17.636049270629883
    8. '    ' → logprob: -17.886049270629883
    9. '
' → logprob: -18.011049270629883
    10. '۲' → logprob: -18.136049270629883

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.125032424926758
    4. '```' → logprob: -16.250032424926758
    5. '<|end|>' → logprob: -17.125032424926758
    6. '
' → logprob: -17.750032424926758
    7. '  ' → logprob: -17.750032424926758
    8. '۲' → logprob: -18.125032424926758
    9. 'two' → logprob: -18.687532424926758
    10. '２' → logprob: -18.687532424926758

Token 125: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0501466989517212
    2. 'output' → logprob: -1.0501466989517212
    3. 'print' → logprob: -2.3001465797424316
    4. 'i' → logprob: -2.9251465797424316
    5. 'current' → logprob: -3.0501465797424316
    6. 'max' → logprob: -3.5501465797424316
    7. 'edges' → logprob: -4.300146579742432
    8. 'next' → logprob: -4.800146579742432
    9. 'start' → logprob: -4.925146579742432
    10. '#' → logprob: -5.050146579742432

Token 126: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5597332715988159
    2. 'prev' → logprob: -2.1847333908081055
    3. 'output' → logprob: -2.4347333908081055
    4. 'print' → logprob: -2.5597333908081055
    5. 'current' → logprob: -3.1847333908081055
    6. 'edges' → logprob: -3.5597333908081055
    7. 'if' → logprob: -4.1847333908081055
    8. 'remaining' → logprob: -4.4347333908081055
    9. 'last' → logprob: -4.5597333908081055
    10. 'result' → logprob: -5.3097333908081055

Token 127: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.062131367623806
    2. 'i' → logprob: -2.812131404876709
    3. ' u' → logprob: -10.43713092803955
    4. ' node' → logprob: -10.43713092803955
    5. ' edge' → logprob: -11.06213092803955
    6. ' x' → logprob: -11.18713092803955
    7. 'u' → logprob: -11.31213092803955
    8. '(i' → logprob: -11.43713092803955
    9. ' v' → logprob: -11.93713092803955
    10. ' ' → logprob: -12.06213092803955

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0382077656686306
    2. 'in' → logprob: -3.288207769393921
    3. ' ' → logprob: -8.9132080078125
    4. ',' → logprob: -11.2882080078125
    5. '	in' → logprob: -11.6632080078125
    6. 'n' → logprob: -13.1632080078125
    7. '_' → logprob: -13.7882080078125
    8. '_in' → logprob: -14.0382080078125
    9. 'space' → logprob: -14.1632080078125
    10. 'range' → logprob: -14.2882080078125

Token 129: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048681724816560745
    2. 'range' → logprob: -3.0486817359924316
    3. ' ' → logprob: -9.673681259155273
    4. '(range' → logprob: -11.798681259155273
    5. '	range' → logprob: -11.923681259155273
    6. ' output' → logprob: -12.298681259155273
    7. ' xrange' → logprob: -12.923681259155273
    8. '[' → logprob: -13.298681259155273
    9. '  ' → logprob: -13.423681259155273
    10. 'output' → logprob: -13.423681259155273

Token 130: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.47411152720451355
    2. '(' → logprob: -0.9741115570068359
    3. '(input' → logprob: -11.724111557006836
    4. '1' → logprob: -12.099111557006836
    5. '_(' → logprob: -12.349111557006836
    6. '_FUNC' → logprob: -12.349111557006836
    7. ' (' → logprob: -12.724111557006836
    8. '_fun' → logprob: -13.599111557006836
    9. ' ' → logprob: -13.849111557006836
    10. 'func' → logprob: -13.974111557006836

Token 131: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006706207641400397
    2. '(max' → logprob: -7.375670433044434
    3. '(input' → logprob: -10.375670433044434
    4. ' (' → logprob: -12.000670433044434
    5. '(output' → logprob: -12.875670433044434
    6. '1' → logprob: -13.000670433044434
    7. '(
' → logprob: -13.750670433044434
    8. '((' → logprob: -15.250670433044434
    9. 'max' → logprob: -16.12567138671875
    10. ' ' → logprob: -16.37567138671875

Token 132: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.012734724208712578
    2. '_value' → logprob: -4.762734889984131
    3. '_' → logprob: -5.887734889984131
    4. '_pow' → logprob: -7.512734889984131
    5. '_input' → logprob: -8.637734413146973
    6. 'power' → logprob: -9.012734413146973
    7. 'er' → logprob: -9.512734413146973
    8. '_)' → logprob: -9.637734413146973
    9. '_p' → logprob: -9.762734413146973
    10. ')' → logprob: -9.762734413146973

Token 133: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0019608670845627785
    2. 'two' → logprob: -6.376960754394531
    3. '_value' → logprob: -8.876960754394531
    4. '2' → logprob: -9.626960754394531
    5. '_func' → logprob: -10.626960754394531
    6. 'value' → logprob: -11.501960754394531
    7. 'Two' → logprob: -12.376960754394531
    8. '(' → logprob: -12.501960754394531
    9. '_TWO' → logprob: -13.001960754394531
    10. ' two' → logprob: -13.001960754394531

Token 134: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3208916485309601
    2. ' +' → logprob: -1.9458916187286377
    3. ' -' → logprob: -3.0708916187286377
    4. '+' → logprob: -3.3208916187286377
    5. ',' → logprob: -3.9458916187286377
    6. ' ):' → logprob: -4.320891857147217
    7. '-' → logprob: -5.070891857147217
    8. '):
' → logprob: -5.570891857147217
    9. ' //' → logprob: -5.820891857147217
    10. '//' → logprob: -6.945891857147217

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07101751863956451
    2. ' ' → logprob: -2.6960175037384033
    3. '2' → logprob: -6.946017742156982
    4. '3' → logprob: -10.196017265319824
    5. 'input' → logprob: -10.946017265319824
    6. ' input' → logprob: -11.196017265319824
    7. '0' → logprob: -11.821017265319824
    8. ' -' → logprob: -11.946017265319824
    9. '  ' → logprob: -12.321017265319824
    10. '-' → logprob: -12.508517265319824

Token 136: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035614657681435347
    2. ' ' → logprob: -6.003561496734619
    3. '2' → logprob: -6.878561496734619
    4. 'input' → logprob: -10.753561019897461
    5. '0' → logprob: -11.753561019897461
    6. '3' → logprob: -11.753561019897461
    7. '   ' → logprob: -13.128561019897461
    8. '(' → logprob: -13.128561019897461
    9. '4' → logprob: -13.128561019897461
    10. '
' → logprob: -13.316061019897461

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1843578964471817
    2. ',' → logprob: -2.0593578815460205
    3. ' ):' → logprob: -4.0593581199646
    4. ' ,' → logprob: -4.1843581199646
    5. ' +' → logprob: -5.9343581199646
    6. '+' → logprob: -6.3093581199646
    7. ')' → logprob: -6.4343581199646
    8. '):
' → logprob: -6.5593581199646
    9. '   ' → logprob: -8.684357643127441
    10. '  ' → logprob: -8.934357643127441

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019633809104561806
    2. ' output' → logprob: -4.269633769989014
    3. 'output' → logprob: -5.769633769989014
    4. ':' → logprob: -6.394633769989014
    5. '	output' → logprob: -8.644634246826172
    6. '       ' → logprob: -9.644634246826172
    7. ':
' → logprob: -9.644634246826172
    8. ')' → logprob: -9.894634246826172
    9. ',' → logprob: -10.144634246826172
    10. '):
' → logprob: -10.269634246826172

Token 139: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.8128722310066223
    2. 'output' (adapté à ' output') → logprob: -0.8128722310066223
    3. '   ' → logprob: -2.1878721714019775
    4. ' ' → logprob: -8.437871932983398
    5. '	output' → logprob: -8.437871932983398
    6. '       ' → logprob: -9.687871932983398
    7. '  ' → logprob: -9.937871932983398
    8. 'if' → logprob: -10.937871932983398
    9. 'print' → logprob: -10.937871932983398
    10. ' if' → logprob: -11.062871932983398

Token 140: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.702754474943504e-05
    2. '_' → logprob: -11.12503719329834
    3. 'func' → logprob: -11.25003719329834
    4. '(' → logprob: -12.12503719329834
    5. '_FUNC' → logprob: -13.37503719329834
    6. '(_' → logprob: -14.75003719329834
    7. 'Func' → logprob: -14.75003719329834
    8. '_(' → logprob: -15.12503719329834
    9. 'f' → logprob: -15.25003719329834
    10. '_fun' → logprob: -15.50003719329834

Token 141: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.10051967203617096
    2. '(' → logprob: -2.3505196571350098
    3. '((' → logprob: -9.475520133972168
    4. '()' → logprob: -10.100520133972168
    5. '(
' → logprob: -10.100520133972168
    6. '('' → logprob: -10.225520133972168
    7. '("' → logprob: -10.600520133972168
    8. '(input' → logprob: -10.600520133972168
    9. '("("' → logprob: -11.475520133972168
    10. 'index' → logprob: -11.850520133972168

Token 142: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9062212705612183
    2. '+' → logprob: -1.0312212705612183
    3. ',' → logprob: -1.5312212705612183
    4. ' ,' → logprob: -4.031221389770508
    5. '   ' → logprob: -5.781221389770508
    6. ' ' → logprob: -7.031221389770508
    7. ')' → logprob: -7.156221389770508
    8. ',index' → logprob: -8.531221389770508
    9. '+,' → logprob: -9.531221389770508
    10. '  ' → logprob: -9.781221389770508

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2840186655521393
    2. ' ' → logprob: -1.409018635749817
    3. '2' → logprob: -5.909018516540527
    4. '3' → logprob: -9.534018516540527
    5. '   ' → logprob: -10.784018516540527
    6. '  ' → logprob: -11.284018516540527
    7. ',' → logprob: -11.284018516540527
    8. ' ,' → logprob: -11.409018516540527
    9. ')' → logprob: -12.534018516540527
    10. '4' → logprob: -12.721518516540527

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004218605346977711
    2. '2' → logprob: -5.504218578338623
    3. '3' → logprob: -9.254219055175781
    4. ' ' → logprob: -10.129219055175781
    5. '4' → logprob: -13.004219055175781
    6. '   ' → logprob: -13.754219055175781
    7. '  ' → logprob: -14.879219055175781
    8. '0' → logprob: -15.066719055175781
    9. '(' → logprob: -15.754219055175781
    10. '5' → logprob: -16.12921905517578

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06422878801822662
    2. ',index' → logprob: -2.8142287731170654
    3. ' ,' → logprob: -6.4392290115356445
    4. 'index' → logprob: -7.8142290115356445
    5. '   ' → logprob: -9.564229011535645
    6. ',end' → logprob: -9.814229011535645
    7. ')' → logprob: -10.314229011535645
    8. ' index' → logprob: -10.814229011535645
    9. '(index' → logprob: -11.064229011535645
    10. ',input' → logprob: -11.564229011535645

Token 146: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.07957897335290909
    2. ' index' → logprob: -2.5795788764953613
    3. 'max' → logprob: -7.704578876495361
    4. ' max' → logprob: -9.20457935333252
    5. ' ' → logprob: -9.45457935333252
    6. 'input' → logprob: -11.07957935333252
    7. '   ' → logprob: -11.45457935333252
    8. '(index' → logprob: -11.57957935333252
    9. '  ' → logprob: -12.57957935333252
    10. '	index' → logprob: -12.70457935333252

Token 147: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6327838897705078
    2. '+' → logprob: -0.7577838897705078
    3. '2' → logprob: -8.882783889770508
    4. ' ' → logprob: -10.757783889770508
    5. ' +
' → logprob: -11.507783889770508
    6. '<|end|>' → logprob: -12.632783889770508
    7. 's' → logprob: -13.132783889770508
    8. '   ' → logprob: -13.132783889770508
    9. ' plus' → logprob: -13.507783889770508
    10. '+
' → logprob: -13.507783889770508

Token 148: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009814411401748657
    2. ' ' → logprob: -4.884814262390137
    3. '3' → logprob: -6.134814262390137
    4. '   ' → logprob: -11.134814262390137
    5. '1' → logprob: -11.259814262390137
    6. '  ' → logprob: -11.634814262390137
    7. '4' → logprob: -13.134814262390137
    8. ')' → logprob: -15.447314262390137
    9. '+' → logprob: -15.572314262390137
    10. '    ' → logprob: -15.947314262390137

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003254527400713414
    2. ' ' → logprob: -8.500325202941895
    3. '1' → logprob: -9.500325202941895
    4. '3' → logprob: -10.000325202941895
    5. '   ' → logprob: -13.875325202941895
    6. '  ' → logprob: -14.875325202941895
    7. '4' → logprob: -16.25032615661621
    8. '```' → logprob: -16.50032615661621
    9. ')' → logprob: -16.56282615661621
    10. '0' → logprob: -17.00032615661621

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028065370861440897
    2. ')
' → logprob: -5.877806663513184
    3. ')
' → logprob: -14.252806663513184
    4. '   ' → logprob: -14.627806663513184
    5. ' )' → logprob: -14.627806663513184
    6. ')

' → logprob: -16.377805709838867
    7. '),' → logprob: -17.627805709838867
    8. ')`' → logprob: -17.877805709838867
    9. ' ' → logprob: -18.127805709838867
    10. '))' → logprob: -18.502805709838867

Token 151: 'output' (ID: 6130)
  Prédit: 'output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.4007183909416199
    2. '
' → logprob: -1.6507184505462646
    3. ')' → logprob: -2.7757184505462646
    4. '  
' → logprob: -3.4007184505462646
    5. ' 
' → logprob: -4.4007182121276855
    6. '<|end|>' → logprob: -5.0257182121276855
    7. ' ' → logprob: -5.1507182121276855
    8. '\n' → logprob: -5.2757182121276855
    9. '    
' → logprob: -5.7757182121276855
    10. ' output' → logprob: -5.7757182121276855

Token 152: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.726595241460018e-05
    2. '_' → logprob: -11.50003719329834
    3. '_output' → logprob: -11.62503719329834
    4. '```' → logprob: -12.12503719329834
    5. 'func' → logprob: -12.87503719329834
    6. '_funcs' → logprob: -13.12503719329834
    7. '_function' → logprob: -13.50003719329834
    8. '_value' → logprob: -14.00003719329834
    9. '_f' → logprob: -14.37503719329834
    10. 'Func' → logprob: -14.50003719329834

Token 153: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.06203490495681763
    2. '(' → logprob: -2.812034845352173
    3. '((' → logprob: -10.687034606933594
    4. 'max' → logprob: -11.062034606933594
    5. '(
' → logprob: -11.187034606933594
    6. '(f' → logprob: -12.812034606933594
    7. '('' → logprob: -12.937034606933594
    8. '(input' → logprob: -13.187034606933594
    9. '(index' → logprob: -13.437034606933594
    10. ' (' → logprob: -13.562034606933594

Token 154: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -9.13388703338569e-06
    2. 'power' → logprob: -11.750009536743164
    3. '_p' → logprob: -14.875009536743164
    4. '_pow' → logprob: -15.125009536743164
    5. '_value' → logprob: -16.375009536743164
    6. 'pow' → logprob: -16.500009536743164
    7. '_' → logprob: -16.875009536743164
    8. '_output' → logprob: -16.875009536743164
    9. '_POWER' → logprob: -17.000009536743164
    10. 'Power' → logprob: -17.125009536743164

Token 155: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0011711753904819489
    2. 'two' → logprob: -6.751171112060547
    3. '_TWO' → logprob: -15.251171112060547
    4. ' two' → logprob: -15.376171112060547
    5. '(two' → logprob: -15.501171112060547
    6. 'Two' → logprob: -15.876171112060547
    7. '_tw' → logprob: -16.251171112060547
    8. '-two' → logprob: -16.626171112060547
    9. '.two' → logprob: -17.001171112060547
    10. '2' → logprob: -18.001171112060547

Token 156: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3305617868900299
    2. '-' → logprob: -1.7055617570877075
    3. ',' → logprob: -2.455561876296997
    4. ' ,' → logprob: -4.455561637878418
    5. ' ' → logprob: -6.330561637878418
    6. ')' → logprob: -8.080561637878418
    7. '   ' → logprob: -9.330561637878418
    8. '  ' → logprob: -9.830561637878418
    9. '2' → logprob: -10.643061637878418
    10. ' +' → logprob: -10.893061637878418

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023274161503650248
    2. ' ' → logprob: -8.500232696533203
    3. '2' → logprob: -10.500232696533203
    4. '   ' → logprob: -14.437732696533203
    5. '0' → logprob: -14.750232696533203
    6. '  ' → logprob: -15.062732696533203
    7. '```' → logprob: -16.125232696533203
    8. '
' → logprob: -16.625232696533203
    9. '<|end|>' → logprob: -17.250232696533203
    10. '１' → logprob: -17.375232696533203

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001487140398239717
    2. '2' → logprob: -8.87514877319336
    3. ' ' → logprob: -11.75014877319336
    4. '0' → logprob: -14.50014877319336
    5. '   ' → logprob: -15.37514877319336
    6. '```' → logprob: -16.37514877319336
    7. '<|end|>' → logprob: -16.93764877319336
    8. '  ' → logprob: -17.06264877319336
    9. 'index' → logprob: -17.75014877319336
    10. '
' → logprob: -18.81264877319336

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007779388688504696
    2. ' ,' → logprob: -7.250777721405029
    3. ')' → logprob: -10.625778198242188
    4. ',input' → logprob: -11.250778198242188
    5. ',max' → logprob: -11.375778198242188
    6. '+' → logprob: -12.500778198242188
    7. '1' → logprob: -12.750778198242188
    8. ',
' → logprob: -12.875778198242188
    9. '2' → logprob: -13.000778198242188
    10. '   ' → logprob: -13.750778198242188

Token 160: ' input' (ID: 3422)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14450199902057648
    2. 'input' → logprob: -2.0195019245147705
    3. ' max' → logprob: -6.51950216293335
    4. ' input' → logprob: -8.144501686096191
    5. ' ' → logprob: -10.769501686096191
    6. '1' → logprob: -11.269501686096191
    7. '   ' → logprob: -11.519501686096191
    8. '0' → logprob: -12.269501686096191
    9. '2' → logprob: -12.769501686096191
    10. '<input' → logprob: -13.269501686096191

Token 161: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.263011578586884e-05
    2. 'value' → logprob: -10.125042915344238
    3. '_val' → logprob: -14.250042915344238
    4. '_' → logprob: -14.625042915344238
    5. 'Value' → logprob: -15.125042915344238
    6. ')' → logprob: -15.125042915344238
    7. '_max' → logprob: -15.750042915344238
    8. ' _' → logprob: -16.000041961669922
    9. '-value' → logprob: -16.500041961669922
    10. '   ' → logprob: -16.500041961669922

Token 162: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004379805643111467
    2. ')
' → logprob: -5.504379749298096
    3. ' )' → logprob: -8.379380226135254
    4. '+' → logprob: -10.004380226135254
    5. '-' → logprob: -11.754380226135254
    6. ' +' → logprob: -11.754380226135254
    7. ' -' → logprob: -12.254380226135254
    8. ' )
' → logprob: -12.879380226135254
    9. ')
' → logprob: -13.379380226135254
    10. ')

' → logprob: -15.254380226135254

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014551045373082161
    2. ' ' → logprob: -4.389551162719727
    3. ')' → logprob: -6.639551162719727
    4. '0' → logprob: -8.264551162719727
    5. '2' → logprob: -8.514551162719727
    6. '"' → logprob: -9.389551162719727
    7. '-' → logprob: -10.139551162719727
    8. '  ' → logprob: -10.389551162719727
    9. '   ' → logprob: -10.389551162719727
    10. ' -' → logprob: -10.514551162719727

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.053603049367666245
    2. ' ' → logprob: -3.678602933883667
    3. '-' → logprob: -4.428603172302246
    4. '0' → logprob: -4.553603172302246
    5. ' -' → logprob: -5.803603172302246
    6. 'max' → logprob: -7.678603172302246
    7. ')' → logprob: -7.803603172302246
    8. '2' → logprob: -8.678603172302246
    9. ' max' → logprob: -9.053603172302246
    10. '  ' → logprob: -9.178603172302246

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001503313542343676
    2. ')
' → logprob: -6.5015034675598145
    3. ' )' → logprob: -14.626502990722656
    4. ')
' → logprob: -16.001502990722656
    5. ')

' → logprob: -16.001502990722656
    6. '
' → logprob: -16.501502990722656
    7. '),' → logprob: -17.376502990722656
    8. ')`' → logprob: -17.376502990722656
    9. '))' → logprob: -17.751502990722656
    10. '```' → logprob: -17.876502990722656

Token 166: 'for' (ID: 1938)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.3151818513870239
    2. 'for' → logprob: -1.315181851387024
    3. 'if' → logprob: -6.940181732177734
    4. 'current' → logprob: -8.440181732177734
    5. 'range' → logprob: -8.565181732177734
    6. 'prev' → logprob: -8.815181732177734
    7. 'max' → logprob: -8.940181732177734
    8. 'last' → logprob: -10.065181732177734
    9. 'print' → logprob: -10.065181732177734
    10. 'previous' → logprob: -10.190181732177734

Token 167: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.002682064427062869
    2. 'i' → logprob: -6.377682209014893
    3. ' index' → logprob: -7.377682209014893
    4. '_index' → logprob: -8.252681732177734
    5. '_' → logprob: -9.627681732177734
    6. 'node' → logprob: -11.752681732177734
    7. ' i' → logprob: -12.002681732177734
    8. 'idx' → logprob: -12.127681732177734
    9. '_i' → logprob: -13.002681732177734
    10. 'x' → logprob: -14.127681732177734

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08895767480134964
    2. 'in' → logprob: -2.4639577865600586
    3. ' ' → logprob: -11.963957786560059
    4. ',' → logprob: -13.213957786560059
    5. 'range' → logprob: -13.338957786560059
    6. '
' → logprob: -13.463957786560059
    7. ' 
' → logprob: -13.588957786560059
    8. 'index' → logprob: -13.963957786560059
    9. '	in' → logprob: -14.463957786560059
    10. ')' → logprob: -14.838957786560059

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016038591042160988
    2. ' range' → logprob: -4.141038417816162
    3. '(range' → logprob: -13.14103889465332
    4. 're' → logprob: -14.26603889465332
    5. '	range' → logprob: -14.39103889465332
    6. ' ' → logprob: -15.01603889465332
    7. '   ' → logprob: -15.89103889465332
    8. 'list' → logprob: -16.26603889465332
    9. 'rang' → logprob: -16.39103889465332
    10. 'r' → logprob: -16.76603889465332

Token 170: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.011198955588042736
    2. '(max' → logprob: -4.511198997497559
    3. '(' → logprob: -9.886198997497559
    4. 'func' → logprob: -10.386198997497559
    5. 'max' → logprob: -10.636198997497559
    6. '(input' → logprob: -11.261198997497559
    7. 'range' → logprob: -11.511198997497559
    8. '(range' → logprob: -11.886198997497559
    9. '(index' → logprob: -12.386198997497559
    10. 'Func' → logprob: -12.886198997497559

Token 171: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.05239978805184364
    2. '(input' → logprob: -3.5523998737335205
    3. '(' → logprob: -3.8023998737335205
    4. '((' → logprob: -10.302399635314941
    5. 'max' → logprob: -10.552399635314941
    6. '(output' → logprob: -12.427399635314941
    7. ' (' → logprob: -12.677399635314941
    8. 'input' → logprob: -13.177399635314941
    9. ' max' → logprob: -13.552399635314941
    10. '(m' → logprob: -13.552399635314941

Token 172: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -4.930552313453518e-05
    2. '_value' → logprob: -10.250049591064453
    3. 'power' → logprob: -11.500049591064453
    4. '_func' → logprob: -14.125049591064453
    5. '_pow' → logprob: -14.250049591064453
    6. '(power' → logprob: -14.750049591064453
    7. 'Power' → logprob: -15.000049591064453
    8. '_function' → logprob: -15.000049591064453
    9. '_POWER' → logprob: -15.000049591064453
    10. '_two' → logprob: -15.250049591064453

Token 173: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0008072483469732106
    2. 'two' → logprob: -7.125807285308838
    3. '(two' → logprob: -14.37580680847168
    4. '_TWO' → logprob: -14.50080680847168
    5. '_func' → logprob: -14.62580680847168
    6. 'Two' → logprob: -14.87580680847168
    7. '-two' → logprob: -15.50080680847168
    8. '_one' → logprob: -15.62580680847168
    9. ' two' → logprob: -15.87580680847168
    10. '_value' → logprob: -16.12580680847168

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.29752954840660095
    2. '-' → logprob: -1.5475295782089233
    3. ',' → logprob: -3.672529458999634
    4. '//' → logprob: -4.672529697418213
    5. ' //' → logprob: -5.547529697418213
    6. ' ' → logprob: -5.922529697418213
    7. ' ,' → logprob: -6.797529697418213
    8. '   ' → logprob: -7.297529697418213
    9. '+' → logprob: -7.422529697418213
    10. ' +' → logprob: -7.797529697418213

Token 175: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038658592849969864
    2. '1' → logprob: -3.413658618927002
    3. '3' → logprob: -6.038658618927002
    4. ' ' → logprob: -6.038658618927002
    5. '   ' → logprob: -8.913658142089844
    6. '
' → logprob: -10.538658142089844
    7. '-' → logprob: -11.413658142089844
    8. '4' → logprob: -11.413658142089844
    9. '  ' → logprob: -11.726158142089844
    10. 'index' → logprob: -12.038658142089844

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021985506638884544
    2. '1' → logprob: -3.8969855308532715
    3. '3' → logprob: -6.7719855308532715
    4. ' ' → logprob: -8.396985054016113
    5. '   ' → logprob: -10.896985054016113
    6. 'index' → logprob: -11.271985054016113
    7. '4' → logprob: -11.521985054016113
    8. '
' → logprob: -11.834485054016113
    9. '-' → logprob: -12.334485054016113
    10. '  ' → logprob: -12.834485054016113

Token 177: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22663836181163788
    2. '):' → logprob: -1.6016383171081543
    3. ')' → logprob: -7.976638317108154
    4. '):
' → logprob: -8.351638793945312
    5. ',' → logprob: -8.476638793945312
    6. '+' → logprob: -8.476638793945312
    7. ':' → logprob: -9.351638793945312
    8. '   ' → logprob: -10.101638793945312
    9. ' ):
' → logprob: -10.101638793945312
    10. ' +' → logprob: -11.101638793945312

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019716685637831688
    2. ' output' → logprob: -4.519716739654541
    3. 'output' → logprob: -4.769716739654541
    4. '	output' → logprob: -8.894716262817383
    5. '   ' → logprob: -12.269716262817383
    6. '       ' → logprob: -13.519716262817383
    7. '(output' → logprob: -13.644716262817383
    8. '    
' → logprob: -14.269716262817383
    9. '_output' → logprob: -14.394716262817383
    10. '  ' → logprob: -14.769716262817383

Token 179: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0016600665403530002
    2. ' output' → logprob: -6.501659870147705
    3. '   ' → logprob: -9.876660346984863
    4. 'max' → logprob: -10.126660346984863
    5. 'print' → logprob: -10.251660346984863
    6. 'index' → logprob: -10.626660346984863
    7. 'input' → logprob: -12.251660346984863
    8. 'if' → logprob: -14.001660346984863
    9. '(output' → logprob: -14.626660346984863
    10. '
' → logprob: -15.501660346984863

Token 180: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.6240566083070007e-06
    2. 'func' → logprob: -13.750001907348633
    3. '_value' → logprob: -15.500001907348633
    4. 'Func' → logprob: -16.875001907348633
    5. '_FUNC' → logprob: -17.125001907348633
    6. '_' → logprob: -17.375001907348633
    7. '(' → logprob: -17.500001907348633
    8. '_output' → logprob: -17.500001907348633
    9. '```' → logprob: -18.000001907348633
    10. '(_' → logprob: -18.625001907348633

Token 181: '(input' (ID: 10054)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.05033562332391739
    2. '(max' → logprob: -3.550335645675659
    3. '(input' → logprob: -4.05033540725708
    4. '(' → logprob: -6.30033540725708
    5. ' (' → logprob: -7.05033540725708
    6. '((' → logprob: -9.675335884094238
    7. 'max' → logprob: -9.800335884094238
    8. 'index' → logprob: -10.050335884094238
    9. '(output' → logprob: -10.800335884094238
    10. '(ind' → logprob: -11.175335884094238

Token 182: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.652451464906335e-05
    2. 'value' → logprob: -11.500016212463379
    3. '+' → logprob: -13.250016212463379
    4. '_func' → logprob: -13.250016212463379
    5. '_index' → logprob: -14.250016212463379
    6. ')' → logprob: -15.125016212463379
    7. '_VALUE' → logprob: -15.125016212463379
    8. '_max' → logprob: -15.250016212463379
    9. 'max' → logprob: -15.750016212463379
    10. '_' → logprob: -15.750016212463379

Token 183: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.080461859703064
    2. ' -' → logprob: -1.080461859703064
    3. ' +' → logprob: -1.205461859703064
    4. '-' → logprob: -3.9554619789123535
    5. ' ' → logprob: -6.0804619789123535
    6. ' index' → logprob: -10.330461502075195
    7. 'index' → logprob: -11.205461502075195
    8. '  ' → logprob: -11.330461502075195
    9. ')' → logprob: -11.330461502075195
    10. '   ' → logprob: -11.455461502075195

Token 184: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.18507324159145355
    2. '1' → logprob: -2.560073137283325
    3. ' index' → logprob: -2.560073137283325
    4. ' ' → logprob: -4.435073375701904
    5. '2' → logprob: -6.310073375701904
    6. '   ' → logprob: -8.310072898864746
    7. '  ' → logprob: -8.810072898864746
    8. '	index' → logprob: -9.685072898864746
    9. '(index' → logprob: -10.185072898864746
    10. 'idx' → logprob: -10.185072898864746

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24522361159324646
    2. ' +' → logprob: -1.6202236413955688
    3. ',' → logprob: -3.9952235221862793
    4. ' ' → logprob: -7.370223522186279
    5. '   ' → logprob: -8.370223999023438
    6. ' ,' → logprob: -8.495223999023438
    7. '1' → logprob: -9.870223999023438
    8. ')' → logprob: -11.120223999023438
    9. '  ' → logprob: -11.245223999023438
    10. '2' → logprob: -11.245223999023438

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04447297751903534
    2. '2' → logprob: -3.1694729328155518
    3. ' ' → logprob: -6.544473171234131
    4. '3' → logprob: -11.044472694396973
    5. '   ' → logprob: -11.044472694396973
    6. '  ' → logprob: -13.919472694396973
    7. '    ' → logprob: -14.794472694396973
    8. '0' → logprob: -15.044472694396973
    9. '+' → logprob: -15.294472694396973
    10. '4' → logprob: -15.481972694396973

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0790473148226738
    2. '2' → logprob: -2.579047203063965
    3. ' ' → logprob: -8.829047203063965
    4. '3' → logprob: -11.954047203063965
    5. '   ' → logprob: -12.579047203063965
    6. '  ' → logprob: -14.579047203063965
    7. '0' → logprob: -15.766547203063965
    8. '    ' → logprob: -16.14154815673828
    9. '     ' → logprob: -16.82904815673828
    10. '4' → logprob: -16.89154815673828

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00929014477878809
    2. ' ,' → logprob: -4.8842902183532715
    3. '   ' → logprob: -6.7592902183532715
    4. ',input' → logprob: -8.009289741516113
    5. '+' → logprob: -9.134289741516113
    6. ' ' → logprob: -10.634289741516113
    7. ',
' → logprob: -10.759289741516113
    8. ',index' → logprob: -11.759289741516113
    9. '  ' → logprob: -11.884289741516113
    10. '+,' → logprob: -12.009289741516113

Token 189: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003258876968175173
    2. ' input' → logprob: -5.75325870513916
    3. 'max' → logprob: -9.50325870513916
    4. ' max' → logprob: -13.12825870513916
    5. '   ' → logprob: -13.50325870513916
    6. ' ' → logprob: -13.62825870513916
    7. 'output' → logprob: -14.37825870513916
    8. '  ' → logprob: -15.25325870513916
    9. '
' → logprob: -15.37825870513916
    10. '(input' → logprob: -15.50325870513916

Token 190: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.4259644558478612e-05
    2. '_func' → logprob: -11.500014305114746
    3. 'value' → logprob: -13.000014305114746
    4. '_val' → logprob: -14.375014305114746
    5. '_' → logprob: -14.625014305114746
    6. '_index' → logprob: -15.000014305114746
    7. '_max' → logprob: -16.12501335144043
    8. '+' → logprob: -16.75001335144043
    9. '_input' → logprob: -17.00001335144043
    10. '_output' → logprob: -17.12501335144043

Token 191: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2524360120296478
    2. ' +' → logprob: -1.5024360418319702
    3. ' ' → logprob: -8.377435684204102
    4. 'index' → logprob: -9.627435684204102
    5. '   ' → logprob: -10.002435684204102
    6. ')' → logprob: -10.377435684204102
    7. 'max' → logprob: -10.502435684204102
    8. ' index' → logprob: -10.627435684204102
    9. ' max' → logprob: -10.752435684204102
    10. '    ' → logprob: -10.877435684204102

Token 192: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.06985283643007278
    2. 'max' → logprob: -3.319852828979492
    3. ' index' → logprob: -3.694852828979492
    4. ' max' → logprob: -5.819852828979492
    5. 'input' → logprob: -6.194852828979492
    6. ' ' → logprob: -6.944852828979492
    7. ' input' → logprob: -8.319852828979492
    8. '1' → logprob: -9.194852828979492
    9. 'idx' → logprob: -9.194852828979492
    10. '+' → logprob: -11.444852828979492

Token 193: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11288716644048691
    2. ' +' → logprob: -2.237887144088745
    3. '2' → logprob: -10.112887382507324
    4. ')' → logprob: -11.612887382507324
    5. ' ' → logprob: -12.237887382507324
    6. ')+' → logprob: -12.987887382507324
    7. ' plus' → logprob: -13.487887382507324
    8. '   ' → logprob: -13.612887382507324
    9. '+
' → logprob: -14.362887382507324
    10. '()+' → logprob: -14.487887382507324

Token 194: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031913816928863525
    2. ' ' → logprob: -5.7531914710998535
    3. '1' → logprob: -11.378190994262695
    4. '  ' → logprob: -14.378190994262695
    5. '   ' → logprob: -14.878190994262695
    6. '+' → logprob: -15.378190994262695
    7. ')' → logprob: -15.378190994262695
    8. '3' → logprob: -15.440690994262695
    9. ' ' → logprob: -16.503190994262695
    10. '0' → logprob: -16.753190994262695

Token 195: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011450992315076292
    2. ' ' → logprob: -9.125114440917969
    3. '1' → logprob: -12.125114440917969
    4. '3' → logprob: -17.25011444091797
    5. '0' → logprob: -17.50011444091797
    6. '  ' → logprob: -17.62511444091797
    7. '+' → logprob: -18.56261444091797
    8. '   ' → logprob: -18.62511444091797
    9. '10' → logprob: -19.43761444091797
    10. '20' → logprob: -19.62511444091797

Token 196: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.542423165636137e-05
    2. ')
' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.500085830688477
    4. ' )' → logprob: -15.500085830688477
    5. '<|end|>' → logprob: -17.125085830688477
    6. ')

' → logprob: -17.250085830688477
    7. ')
' → logprob: -17.750085830688477
    8. '),' → logprob: -17.875085830688477
    9. '))' → logprob: -18.125085830688477
    10. ')#' → logprob: -18.500085830688477

Token 197: 'output' (ID: 6130)
  Prédit: 'output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.05069762468338013
    2. ')' → logprob: -3.9256975650787354
    3. '<|end|>' → logprob: -4.3006978034973145
    4. '[' → logprob: -5.4256978034973145
    5. ' ' → logprob: -5.8006978034973145
    6. '(output' → logprob: -5.9256978034973145
    7. '#' → logprob: -6.3006978034973145
    8. ' output' → logprob: -6.5506978034973145
    9. '```' → logprob: -7.4256978034973145
    10. 'input' → logprob: -7.4256978034973145

Token 198: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.771655115589965e-05
    2. '_' → logprob: -11.000018119812012
    3. '_fun' → logprob: -14.750018119812012
    4. 'func' → logprob: -16.125017166137695
    5. '_FUNC' → logprob: -16.125017166137695
    6. '_function' → logprob: -16.125017166137695
    7. '_funcs' → logprob: -16.125017166137695
    8. 'Func' → logprob: -16.750017166137695
    9. '```' → logprob: -18.000017166137695
    10. '_fu' → logprob: -18.125017166137695

Token 199: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04887916147708893
    2. '(max' → logprob: -3.0488791465759277
    3. '(' → logprob: -8.173879623413086
    4. 'input' → logprob: -12.673879623413086
    5. '((' → logprob: -13.298879623413086
    6. 'max' → logprob: -13.423879623413086
    7. '(output' → logprob: -13.673879623413086
    8. ' (' → logprob: -14.423879623413086
    9. '(
' → logprob: -14.548879623413086
    10. '(in' → logprob: -14.923879623413086

Token 200: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.4868770196917467e-05
    2. 'value' → logprob: -10.625024795532227
    3. ')_' → logprob: -15.875024795532227
    4. '_val' → logprob: -16.000024795532227
    5. '_' → logprob: -16.250024795532227
    6. ')' → logprob: -16.875024795532227
    7. 'Value' → logprob: -17.125024795532227
    8. '```' → logprob: -17.375024795532227
    9. '_VALUE' → logprob: -17.500024795532227
    10. '_max' → logprob: -17.500024795532227

Token 201: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8476234078407288
    2. ',' → logprob: -0.8476234078407288
    3. ' +' → logprob: -2.097623348236084
    4. ' ,' → logprob: -4.472623348236084
    5. ')' → logprob: -5.347623348236084
    6. ' ' → logprob: -5.597623348236084
    7. '-' → logprob: -9.222623825073242
    8. '+,' → logprob: -9.347623825073242
    9. '   ' → logprob: -9.972623825073242
    10. ' )' → logprob: -10.097623825073242

Token 202: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007493520388379693
    2. ' max' → logprob: -7.250749588012695
    3. '1' → logprob: -11.000749588012695
    4. ' ' → logprob: -12.000749588012695
    5. 'input' → logprob: -12.250749588012695
    6. '(max' → logprob: -12.500749588012695
    7. '[max' → logprob: -13.000749588012695
    8. '0' → logprob: -13.125749588012695
    9. 'index' → logprob: -13.875749588012695
    10. '   ' → logprob: -14.000749588012695

Token 203: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -3.9888433093437925e-05
    2. '_value' → logprob: -10.625040054321289
    3. 'power' → logprob: -11.125040054321289
    4. '_pow' → logprob: -15.875040054321289
    5. '_function' → logprob: -16.00004005432129
    6. '_p' → logprob: -16.00004005432129
    7. '_POWER' → logprob: -16.50004005432129
    8. '-power' → logprob: -16.62504005432129
    9. '_two' → logprob: -16.87504005432129
    10. 'pow' → logprob: -17.00004005432129

Token 204: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0013439236208796501
    2. 'two' → logprob: -6.626343727111816
    3. '-' → logprob: -12.251343727111816
    4. '-two' → logprob: -12.251343727111816
    5. ' two' → logprob: -13.251343727111816
    6. '2' → logprob: -13.501343727111816
    7. '_TWO' → logprob: -13.501343727111816
    8. ' -' → logprob: -13.876343727111816
    9. '_func' → logprob: -14.251343727111816
    10. 'Two' → logprob: -14.626343727111816

Token 205: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4347199499607086
    2. '-' → logprob: -1.0597199201583862
    3. ',' → logprob: -5.309720039367676
    4. ' ' → logprob: -7.559720039367676
    5. '   ' → logprob: -8.434720039367676
    6. '+' → logprob: -9.309720039367676
    7. ' ,' → logprob: -9.809720039367676
    8. '  ' → logprob: -10.309720039367676
    9. '1' → logprob: -10.309720039367676
    10. '2' → logprob: -10.559720039367676

Token 206: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11358736455440521
    2. 'max' → logprob: -2.3635873794555664
    3. '1' → logprob: -5.113587379455566
    4. ' input' → logprob: -5.738587379455566
    5. '2' → logprob: -5.863587379455566
    6. ' max' → logprob: -6.988587379455566
    7. ' ' → logprob: -9.488587379455566
    8. 'output' → logprob: -9.738587379455566
    9. '   ' → logprob: -10.988587379455566
    10. ')' → logprob: -10.988587379455566

Token 207: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. 'value' → logprob: -14.500000953674316
    3. '_' → logprob: -16.375
    4. '_val' → logprob: -17.375
    5. ')' → logprob: -17.625
    6. '+' → logprob: -18.25
    7. '_VALUE' → logprob: -19.25
    8. ' value' → logprob: -19.5
    9. '_max' → logprob: -19.5
    10. 'Value' → logprob: -19.75

Token 208: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38827237486839294
    2. ' +' → logprob: -1.3882724046707153
    3. ')' → logprob: -2.638272285461426
    4. ' )' → logprob: -7.888272285461426
    5. ' ' → logprob: -9.763272285461426
    6. '   ' → logprob: -9.763272285461426
    7. ')+' → logprob: -9.763272285461426
    8. '+)' → logprob: -9.763272285461426
    9. '-' → logprob: -10.013272285461426
    10. ' -' → logprob: -10.763272285461426

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02093374915421009
    2. ' ' → logprob: -3.8959338665008545
    3. 'max' → logprob: -8.395934104919434
    4. '2' → logprob: -9.520934104919434
    5. ' max' → logprob: -9.645934104919434
    6. 'input' → logprob: -11.520934104919434
    7. '
' → logprob: -12.270934104919434
    8. ' -' → logprob: -12.520934104919434
    9. '0' → logprob: -13.458434104919434
    10. '-' → logprob: -13.708434104919434

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002821928064804524
    2. '2' → logprob: -8.750282287597656
    3. ' ' → logprob: -9.250282287597656
    4. 'max' → logprob: -10.875282287597656
    5. '0' → logprob: -12.875282287597656
    6. 'input' → logprob: -12.875282287597656
    7. '-' → logprob: -13.875282287597656
    8. '6' → logprob: -14.750282287597656
    9. '3' → logprob: -15.187782287597656
    10. '   ' → logprob: -15.250282287597656

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -15.750007629394531
    4. ')`' → logprob: -17.12500762939453
    5. '))' → logprob: -17.50000762939453
    6. '`)' → logprob: -17.75000762939453
    7. '")' → logprob: -17.75000762939453
    8. '()' → logprob: -18.50000762939453
    9. ')
' → logprob: -18.62500762939453
    10. '),' → logprob: -18.62500762939453

Token 212: 'output' (ID: 6130)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -2.7848862373502925e-05
    2. '_' → logprob: -11.250027656555176
    3. 'Func' → logprob: -12.000027656555176
    4. '_FUNC' → logprob: -12.500027656555176
    5. '(' → logprob: -13.500027656555176
    6. 'func' → logprob: -13.875027656555176
    7. '_fun' → logprob: -14.875027656555176
    8. '_funcs' → logprob: -15.000027656555176
    9. '(_' → logprob: -15.125027656555176
    10. '```' → logprob: -15.375027656555176

Token 214: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1661144345998764
    2. '(max' → logprob: -1.9161144495010376
    3. '(' → logprob: -5.166114330291748
    4. '(output' → logprob: -9.666114807128906
    5. '((' → logprob: -10.291114807128906
    6. 'max' → logprob: -10.666114807128906
    7. 'input' → logprob: -11.041114807128906
    8. '(
' → logprob: -12.166114807128906
    9. '()' → logprob: -12.416114807128906
    10. '(int' → logprob: -12.541114807128906

Token 215: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.7610454708337784e-05
    2. '+' → logprob: -11.125027656555176
    3. '_val' → logprob: -12.125027656555176
    4. '_' → logprob: -12.250027656555176
    5. ' _' → logprob: -14.250027656555176
    6. ')' → logprob: -14.625027656555176
    7. ' +' → logprob: -14.625027656555176
    8. '_max' → logprob: -14.875027656555176
    9. 'value' → logprob: -15.250027656555176
    10. '_input' → logprob: -15.750027656555176

Token 216: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24107249081134796
    2. ' +' → logprob: -1.6160725355148315
    3. ',' → logprob: -4.241072654724121
    4. '-' → logprob: -7.616072654724121
    5. ' ,' → logprob: -8.491072654724121
    6. ' -' → logprob: -8.741072654724121
    7. ')' → logprob: -8.741072654724121
    8. ' ' → logprob: -10.116072654724121
    9. '+,' → logprob: -10.366072654724121
    10. '),' → logprob: -11.366072654724121

Token 217: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.053064290434122086
    2. '1' → logprob: -3.1780643463134766
    3. ' max' → logprob: -4.678064346313477
    4. ' ' → logprob: -7.428064346313477
    5. 'input' → logprob: -9.303064346313477
    6. '2' → logprob: -11.428064346313477
    7. '(max' → logprob: -11.803064346313477
    8. '   ' → logprob: -13.053064346313477
    9. ' input' → logprob: -13.178064346313477
    10. '0' → logprob: -13.740564346313477

Token 218: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -5.3358446166384965e-05
    2. 'power' → logprob: -9.875053405761719
    3. '_two' → logprob: -14.625053405761719
    4. '_pow' → logprob: -14.625053405761719
    5. '_value' → logprob: -15.375053405761719
    6. 'Power' → logprob: -15.625053405761719
    7. 'pow' → logprob: -16.00005340576172
    8. '2' → logprob: -16.25005340576172
    9. '_POWER' → logprob: -16.50005340576172
    10. '_p' → logprob: -16.50005340576172

Token 219: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.00043972869752906263
    2. 'two' → logprob: -7.750439643859863
    3. '_TWO' → logprob: -11.875439643859863
    4. ' two' → logprob: -14.375439643859863
    5. '-two' → logprob: -14.625439643859863
    6. 'Two' → logprob: -14.750439643859863
    7. '_tw' → logprob: -15.375439643859863
    8. '2' → logprob: -15.750439643859863
    9. '*' → logprob: -16.25044059753418
    10. '.two' → logprob: -16.62544059753418

Token 220: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.647695779800415
    2. ' +' → logprob: -1.647695779800415
    3. '-' → logprob: -2.147695779800415
    4. ',' → logprob: -2.272695779800415
    5. ' -' → logprob: -2.772695779800415
    6. ' ,' → logprob: -6.897695541381836
    7. ' ' → logprob: -7.897695541381836
    8. ')' → logprob: -7.897695541381836
    9. '+,' → logprob: -9.647695541381836
    10. '```' → logprob: -10.460195541381836

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021441563963890076
    2. ' ' → logprob: -3.8964414596557617
    3. '0' → logprob: -7.771441459655762
    4. '2' → logprob: -8.021441459655762
    5. ',' → logprob: -9.771441459655762
    6. 'max' → logprob: -10.146441459655762
    7. ' max' → logprob: -11.271441459655762
    8. 'index' → logprob: -11.521441459655762
    9. '3' → logprob: -12.146441459655762
    10. '
' → logprob: -12.646441459655762

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035047948360443115
    2. '2' → logprob: -3.410048007965088
    3. '0' → logprob: -7.285048007965088
    4. ' ' → logprob: -7.535048007965088
    5. 'max' → logprob: -9.03504753112793
    6. 'index' → logprob: -10.28504753112793
    7. '   ' → logprob: -11.91004753112793
    8. 'input' → logprob: -12.16004753112793
    9. '
' → logprob: -12.41004753112793
    10. '3' → logprob: -12.66004753112793

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000518482003826648
    2. ',input' → logprob: -7.625518321990967
    3. ' ,' → logprob: -10.500518798828125
    4. '(input' → logprob: -13.875518798828125
    5. ')' → logprob: -14.250518798828125
    6. 'input' → logprob: -15.000518798828125
    7. ',
' → logprob: -15.500518798828125
    8. ',max' → logprob: -15.750518798828125
    9. 'output' → logprob: -16.000518798828125
    10. '`,' → logprob: -16.375518798828125

Token 224: ' max' (ID: 2999)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03193684294819832
    2. ' input' → logprob: -4.0319366455078125
    3. 'max' → logprob: -4.4069366455078125
    4. ' max' → logprob: -7.1569366455078125
    5. '1' → logprob: -7.4069366455078125
    6. ' ' → logprob: -10.156936645507812
    7. 'output' → logprob: -11.031936645507812
    8. '2' → logprob: -11.406936645507812
    9. '   ' → logprob: -11.531936645507812
    10. '0' → logprob: -12.156936645507812

Token 225: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -2.816093228830141e-06
    2. 'power' → logprob: -14.37500286102295
    3. '_pow' → logprob: -14.62500286102295
    4. '_value' → logprob: -14.75000286102295
    5. '_input' → logprob: -14.87500286102295
    6. '_p' → logprob: -15.25000286102295
    7. '_output' → logprob: -15.50000286102295
    8. '(input' → logprob: -16.000001907348633
    9. '_' → logprob: -16.250001907348633
    10. 'Power' → logprob: -16.375001907348633

Token 226: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0003362966235727072
    2. 'two' → logprob: -8.000336647033691
    3. '(two' → logprob: -15.000336647033691
    4. 'Two' → logprob: -15.250336647033691
    5. '_TWO' → logprob: -15.875336647033691
    6. ' two' → logprob: -16.250335693359375
    7. '_power' → logprob: -16.375335693359375
    8. '.two' → logprob: -17.875335693359375
    9. '-two' → logprob: -18.250335693359375
    10. '_one' → logprob: -18.375335693359375

Token 227: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39569708704948425
    2. '+' → logprob: -1.3956971168518066
    3. ' +' → logprob: -2.8956971168518066
    4. ' )' → logprob: -5.020697116851807
    5. '*' → logprob: -5.520697116851807
    6. '-' → logprob: -5.645697116851807
    7. ' -' → logprob: -5.895697116851807
    8. ')
' → logprob: -6.020697116851807
    9. ',' → logprob: -6.395697116851807
    10. '   ' → logprob: -7.395697116851807

Token 228: 'for' (ID: 1938)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.48263126611709595
    2. ')' → logprob: -1.2326312065124512
    3. '<|end|>' → logprob: -3.357631206512451
    4. 'input' → logprob: -4.107631206512451
    5. '+' → logprob: -4.482631206512451
    6. '
' → logprob: -4.607631206512451
    7. '(output' → logprob: -5.107631206512451
    8. '\n' → logprob: -5.482631206512451
    9. '(' → logprob: -6.107631206512451
    10. '#' → logprob: -6.607631206512451

Token 229: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6971480846405029
    2. ' index' → logprob: -0.6971480846405029
    3. '_index' → logprob: -6.947148323059082
    4. ' i' → logprob: -7.072148323059082
    5. 'i' → logprob: -7.322148323059082
    6. '_' → logprob: -7.947148323059082
    7. ' node' → logprob: -8.447148323059082
    8. ' edge' → logprob: -8.697148323059082
    9. 'edge' → logprob: -8.947148323059082
    10. 'node' → logprob: -9.197148323059082

Token 230: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254858911037445
    2. 'in' → logprob: -1.600485920906067
    3. 'range' → logprob: -10.475485801696777
    4. ' ' → logprob: -11.100485801696777
    5. '	in' → logprob: -11.725485801696777
    6. '(range' → logprob: -11.975485801696777
    7. ' range' → logprob: -12.725485801696777
    8. '(' → logprob: -12.725485801696777
    9. '_in' → logprob: -12.975485801696777
    10. 'In' → logprob: -13.850485801696777

Token 231: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014305740594864
    2. 'range' → logprob: -1.7014305591583252
    3. '	range' → logprob: -11.701430320739746
    4. '(range' → logprob: -12.451430320739746
    5. ' ' → logprob: -13.076430320739746
    6. '   ' → logprob: -13.951430320739746
    7. '  ' → logprob: -14.638930320739746
    8. '    ' → logprob: -15.013930320739746
    9. '[' → logprob: -15.076430320739746
    10. ' xrange' → logprob: -16.138931274414062

Token 232: '_func' (ID: 22252)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.056023720651865005
    2. '(' → logprob: -3.3060238361358643
    3. '(input' → logprob: -4.306023597717285
    4. '(range' → logprob: -5.681023597717285
    5. 'range' → logprob: -8.181023597717285
    6. '(index' → logprob: -8.556023597717285
    7. '_func' → logprob: -8.806023597717285
    8. 'max' → logprob: -8.806023597717285
    9. 'input' → logprob: -9.181023597717285
    10. '(min' → logprob: -11.681023597717285

Token 233: '(input' (ID: 10054)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.13960759341716766
    2. '(' → logprob: -2.2646076679229736
    3. '(input' → logprob: -3.6396076679229736
    4. 'max' → logprob: -9.764607429504395
    5. '(range' → logprob: -10.389607429504395
    6. ' (' → logprob: -10.639607429504395
    7. 'input' → logprob: -11.139607429504395
    8. '((' → logprob: -11.889607429504395
    9. '(index' → logprob: -12.139607429504395
    10. '1' → logprob: -12.514607429504395

Token 234: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.656383680412546e-05
    2. 'value' → logprob: -10.375046730041504
    3. '_func' → logprob: -11.375046730041504
    4. '(max' → logprob: -13.500046730041504
    5. 'max' → logprob: -14.250046730041504
    6. '_max' → logprob: -14.375046730041504
    7. 'func' → logprob: -15.125046730041504
    8. '_val' → logprob: -15.750046730041504
    9. '(' → logprob: -16.000045776367188
    10. '_' → logprob: -16.125045776367188

Token 235: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8777865171432495
    2. ' -' → logprob: -1.3777865171432495
    3. ' +' → logprob: -1.7527865171432495
    4. '-' → logprob: -1.8777865171432495
    5. ',' → logprob: -6.002786636352539
    6. ' ' → logprob: -6.877786636352539
    7. '-max' → logprob: -7.002786636352539
    8. '   ' → logprob: -7.752786636352539
    9. '  ' → logprob: -8.752786636352539
    10. 'max' → logprob: -9.127786636352539

Token 236: ' max' (ID: 2999)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23027540743350983
    2. 'max' → logprob: -1.8552753925323486
    3. ' max' → logprob: -3.9802753925323486
    4. ' ' → logprob: -4.230275630950928
    5. '2' → logprob: -4.855275630950928
    6. '(max' → logprob: -5.105275630950928
    7. '(' → logprob: -6.480275630950928
    8. '3' → logprob: -8.10527515411377
    9. ' (' → logprob: -8.60527515411377
    10. '   ' → logprob: -9.60527515411377

Token 237: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.005035694222897291
    2. '_two' → logprob: -5.880035877227783
    3. '_value' → logprob: -6.130035877227783
    4. 'power' → logprob: -10.630035400390625
    5. '_pow' → logprob: -11.880035400390625
    6. '2' → logprob: -12.130035400390625
    7. 'func' → logprob: -13.005035400390625
    8. 'two' → logprob: -13.005035400390625
    9. '_func' → logprob: -13.130035400390625
    10. 'value' → logprob: -13.255035400390625

Token 238: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0015060516307130456
    2. 'two' → logprob: -6.5015058517456055
    3. ' two' → logprob: -13.876505851745605
    4. '_TWO' → logprob: -14.001505851745605
    5. 'Two' → logprob: -14.751505851745605
    6. '-two' → logprob: -14.751505851745605
    7. '2' → logprob: -14.751505851745605
    8. '_value' → logprob: -15.126505851745605
    9. '(two' → logprob: -15.126505851745605
    10. '.two' → logprob: -16.001506805419922

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11323647201061249
    2. '):
' → logprob: -3.488236427307129
    3. '+' → logprob: -3.613236427307129
    4. ' +' → logprob: -4.113236427307129
    5. ' ):' → logprob: -4.238236427307129
    6. '-' → logprob: -4.738236427307129
    7. ' -' → logprob: -4.738236427307129
    8. ' ):
' → logprob: -7.613236427307129
    9. '   ' → logprob: -8.113236427307129
    10. ')' → logprob: -8.613236427307129

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017148085171356797
    2. 'output' → logprob: -6.876714706420898
    3. ' output' → logprob: -8.001714706420898
    4. '	output' → logprob: -8.001714706420898
    5. '   ' → logprob: -12.376714706420898
    6. '    
' → logprob: -13.626714706420898
    7. '(output' → logprob: -13.626714706420898
    8. '       ' → logprob: -14.376714706420898
    9. '  ' → logprob: -14.376714706420898
    10. ' ' → logprob: -14.501714706420898

Token 241: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0017883480759337544
    2. '   ' → logprob: -6.751788139343262
    3. ' output' → logprob: -7.751788139343262
    4. 'input' → logprob: -9.251788139343262
    5. 'print' → logprob: -9.376788139343262
    6. 'max' → logprob: -12.626788139343262
    7. '	output' → logprob: -13.126788139343262
    8. ' ' → logprob: -14.251788139343262
    9. '(output' → logprob: -14.751788139343262
    10. 'index' → logprob: -15.251788139343262

Token 242: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -6.153795766294934e-06
    2. '(index' → logprob: -13.125005722045898
    3. 'func' → logprob: -13.625005722045898
    4. 'Func' → logprob: -13.875005722045898
    5. '_FUNC' → logprob: -14.250005722045898
    6. '_output' → logprob: -14.875005722045898
    7. '(' → logprob: -14.875005722045898
    8. 'output' → logprob: -15.250005722045898
    9. '_out' → logprob: -15.875005722045898
    10. '(output' → logprob: -15.875005722045898

Token 243: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3354801833629608
    2. '(max' → logprob: -1.3354802131652832
    3. '(index' → logprob: -3.835480213165283
    4. '(' → logprob: -8.210479736328125
    5. '(output' → logprob: -10.085479736328125
    6. 'max' → logprob: -10.835479736328125
    7. 'input' → logprob: -11.210479736328125
    8. '((' → logprob: -11.835479736328125
    9. '(idx' → logprob: -12.210479736328125
    10. '(range' → logprob: -12.585479736328125

Token 244: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00020330198458395898
    2. '+' → logprob: -8.875203132629395
    3. ' +' → logprob: -9.750203132629395
    4. 'value' → logprob: -12.625203132629395
    5. '_val' → logprob: -14.500203132629395
    6. '_' → logprob: -14.500203132629395
    7. '_func' → logprob: -15.375203132629395
    8. ' ' → logprob: -16.37520408630371
    9. '   ' → logprob: -17.25020408630371
    10. '_size' → logprob: -17.37520408630371

Token 245: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5761551856994629
    2. '+' → logprob: -0.8261551856994629
    3. ',' → logprob: -9.576154708862305
    4. ' ' → logprob: -9.701154708862305
    5. ' ,' → logprob: -10.451154708862305
    6. '   ' → logprob: -10.951154708862305
    7. ')' → logprob: -12.076154708862305
    8. ' plus' → logprob: -12.326154708862305
    9. 'index' → logprob: -12.701154708862305
    10. ' index' → logprob: -12.951154708862305

Token 246: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4285750985145569
    2. ' index' → logprob: -1.178575038909912
    3. ' max' → logprob: -3.928575038909912
    4. 'max' → logprob: -4.428575038909912
    5. '1' → logprob: -5.303575038909912
    6. ' ' → logprob: -6.053575038909912
    7. '2' → logprob: -6.928575038909912
    8. '   ' → logprob: -7.928575038909912
    9. ' input' → logprob: -8.92857551574707
    10. 'input' → logprob: -9.05357551574707

Token 247: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8458321690559387
    2. '+' → logprob: -1.345832109451294
    3. '2' → logprob: -1.720832109451294
    4. ' +' → logprob: -2.595832109451294
    5. '1' → logprob: -3.595832109451294
    6. '   ' → logprob: -3.845832109451294
    7. ' ,' → logprob: -4.970832347869873
    8. ' ' → logprob: -7.595832347869873
    9. '3' → logprob: -8.345831871032715
    10. ')' → logprob: -8.345831871032715

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5677509903907776
    2. '2' → logprob: -0.9427509903907776
    3. ' ' → logprob: -3.192750930786133
    4. 'max' → logprob: -6.317750930786133
    5. ' max' → logprob: -7.317750930786133
    6. '   ' → logprob: -9.442750930786133
    7. 'input' → logprob: -10.692750930786133
    8. '  ' → logprob: -12.192750930786133
    9. '3' → logprob: -12.692750930786133
    10. '(max' → logprob: -13.067750930786133

Token 249: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01654406636953354
    2. '1' → logprob: -4.766543865203857
    3. 'max' → logprob: -5.391543865203857
    4. ' ' → logprob: -5.766543865203857
    5. ' max' → logprob: -9.141544342041016
    6. '   ' → logprob: -9.516544342041016
    7. 'input' → logprob: -11.141544342041016
    8. '  ' → logprob: -11.766544342041016
    9. '3' → logprob: -13.141544342041016
    10. '(max' → logprob: -13.266544342041016

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006069459952414036
    2. ' ,' → logprob: -5.881069660186768
    3. ',input' → logprob: -6.006069660186768
    4. '   ' → logprob: -8.00606918334961
    5. '+' → logprob: -8.13106918334961
    6. ')' → logprob: -10.00606918334961
    7. 'input' → logprob: -10.50606918334961
    8. ' +' → logprob: -11.00606918334961
    9. ',
' → logprob: -11.25606918334961
    10. ' ' → logprob: -11.50606918334961

Token 251: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14775557816028595
    2. ' input' → logprob: -2.1477556228637695
    3. 'max' → logprob: -4.3977556228637695
    4. 'index' → logprob: -5.2727556228637695
    5. ' max' → logprob: -5.8977556228637695
    6. ' index' → logprob: -8.64775562286377
    7. ' ' → logprob: -9.89775562286377
    8. 'output' → logprob: -10.02275562286377
    9. '   ' → logprob: -10.14775562286377
    10. '2' → logprob: -10.64775562286377

Token 252: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.000181372175575234
    2. 'value' → logprob: -9.625181198120117
    3. '+' → logprob: -9.875181198120117
    4. '_max' → logprob: -11.250181198120117
    5. ')' → logprob: -11.375181198120117
    6. '_' → logprob: -11.625181198120117
    7. '_index' → logprob: -11.875181198120117
    8. '_func' → logprob: -12.000181198120117
    9. '_size' → logprob: -12.625181198120117
    10. '_val' → logprob: -13.000181198120117

Token 253: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38704970479011536
    2. '+' → logprob: -1.137049674987793
    3. ')' → logprob: -8.762049674987793
    4. ')+' → logprob: -11.637049674987793
    5. ' ' → logprob: -12.137049674987793
    6. '   ' → logprob: -13.762049674987793
    7. '),' → logprob: -14.387049674987793
    8. ' plus' → logprob: -14.512049674987793
    9. 'index' → logprob: -14.637049674987793
    10. ' )' → logprob: -14.699549674987793

Token 254: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28637492656707764
    2. ' max' → logprob: -1.4113749265670776
    3. 'index' → logprob: -6.161375045776367
    4. ' ' → logprob: -6.911375045776367
    5. ' index' → logprob: -7.536375045776367
    6. 'input' → logprob: -7.536375045776367
    7. '2' → logprob: -7.786375045776367
    8. '1' → logprob: -8.161375045776367
    9. ' input' → logprob: -8.286375045776367
    10. '   ' → logprob: -11.036375045776367

Token 255: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.0027675481978803873
    2. 'power' → logprob: -6.252767562866211
    3. '_value' → logprob: -7.377767562866211
    4. '_two' → logprob: -8.752767562866211
    5. 'index' → logprob: -10.877767562866211
    6. '_pow' → logprob: -11.627767562866211
    7. '_index' → logprob: -11.627767562866211
    8. 'pow' → logprob: -12.252767562866211
    9. '2' → logprob: -12.752767562866211
    10. 'two' → logprob: -13.002767562866211

Token 256: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.003216568613424897
    2. 'two' → logprob: -5.753216743469238
    3. '+' → logprob: -11.128216743469238
    4. '2' → logprob: -11.128216743469238
    5. '_value' → logprob: -12.253216743469238
    6. 'Two' → logprob: -13.503216743469238
    7. '_TWO' → logprob: -14.003216743469238
    8. ' two' → logprob: -14.628216743469238
    9. '_index' → logprob: -14.628216743469238
    10. 'index' → logprob: -14.753216743469238

Token 257: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4143543541431427
    2. ' +' → logprob: -1.6643543243408203
    3. ')' → logprob: -1.9143543243408203
    4. '2' → logprob: -7.16435432434082
    5. '   ' → logprob: -7.16435432434082
    6. 'index' → logprob: -8.78935432434082
    7. ' )' → logprob: -8.78935432434082
    8. '+)' → logprob: -8.78935432434082
    9. ' ' → logprob: -9.41435432434082
    10. ')+' → logprob: -9.53935432434082

Token 258: ' index' (ID: 3472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6667544841766357
    2. '2' → logprob: -0.7917544841766357
    3. 'index' → logprob: -4.041754722595215
    4. ' ' → logprob: -4.166754722595215
    5. ' index' → logprob: -8.166754722595215
    6. '   ' → logprob: -9.166754722595215
    7. ')' → logprob: -10.791754722595215
    8. '  ' → logprob: -11.041754722595215
    9. '	index' → logprob: -11.166754722595215
    10. 'idx' → logprob: -11.916754722595215

Token 259: ' +' (ID: 659)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7694326043128967
    2. '+' → logprob: -1.394432544708252
    3. ' +' → logprob: -2.019432544708252
    4. ')' → logprob: -2.144432544708252
    5. '1' → logprob: -3.269432544708252
    6. ' ' → logprob: -7.894432544708252
    7. '   ' → logprob: -8.76943302154541
    8. ' )' → logprob: -9.01943302154541
    9. '3' → logprob: -9.51943302154541
    10. '+)' → logprob: -9.76943302154541

Token 260: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09185817092657089
    2. '1' → logprob: -2.466858148574829
    3. ' ' → logprob: -5.841858386993408
    4. ')' → logprob: -12.21685791015625
    5. '3' → logprob: -12.59185791015625
    6. '  ' → logprob: -14.59185791015625
    7. ' )' → logprob: -15.27935791015625
    8. '   ' → logprob: -15.46685791015625
    9. '<|end|>' → logprob: -15.65435791015625
    10. '0' → logprob: -15.77935791015625

Token 261: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07014172524213791
    2. '1' → logprob: -2.6951417922973633
    3. ' ' → logprob: -8.570141792297363
    4. '3' → logprob: -11.320141792297363
    5. '   ' → logprob: -14.070141792297363
    6. '  ' → logprob: -14.132641792297363
    7. '0' → logprob: -15.070141792297363
    8. ')' → logprob: -15.382641792297363
    9. '22' → logprob: -15.382641792297363
    10. '+' → logprob: -15.632641792297363

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.500021934509277
    5. ')

' → logprob: -18.125022888183594
    6. ')`' → logprob: -18.375022888183594
    7. '))' → logprob: -18.500022888183594
    8. '),' → logprob: -18.875022888183594
    9. ')}' → logprob: -19.000022888183594
    10. '
' → logprob: -19.000022888183594

Token 263: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3162749409675598
    2. '<|end|>' → logprob: -1.316274881362915
    3. '
' → logprob: -6.566275119781494
    4. '```' → logprob: -7.441275119781494
    5. '#' → logprob: -7.941275119781494
    6. '(' → logprob: -8.816274642944336
    7. '<|end|>' → logprob: -9.316274642944336
    8. ' )' → logprob: -9.441274642944336
    9. '\n' → logprob: -9.691274642944336
    10. ' ' → logprob: -9.816274642944336

Token 264: ' output' (ID: 4733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025025339797139168
    2. '<|end|>' → logprob: -3.7750253677368164
    3. '\n' → logprob: -7.150025367736816
    4. '```' → logprob: -7.525025367736816
    5. '
' → logprob: -8.650025367736816
    6. '#' → logprob: -9.400025367736816
    7. '<|end|>' → logprob: -10.525025367736816
    8. '   ' → logprob: -11.025025367736816
    9. '...' → logprob: -11.025025367736816
    10. ' )' → logprob: -11.150025367736816

Token 265: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.2948405128554441e-05
    2. '_' → logprob: -12.62501335144043
    3. 'func' → logprob: -13.12501335144043
    4. 'Func' → logprob: -13.12501335144043
    5. '(' → logprob: -13.37501335144043
    6. '_FUNC' → logprob: -13.37501335144043
    7. '_fun' → logprob: -14.50001335144043
    8. '(_' → logprob: -14.75001335144043
    9. '_fn' → logprob: -14.75001335144043
    10. '_function' → logprob: -15.25001335144043

Token 266: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0012455896940082312
    2. '(max' → logprob: -6.876245498657227
    3. '(' → logprob: -8.501245498657227
    4. '(
' → logprob: -12.501245498657227
    5. '(output' → logprob: -12.751245498657227
    6. '(index' → logprob: -13.376245498657227
    7. 'input' → logprob: -14.751245498657227
    8. '((' → logprob: -15.376245498657227
    9. '(i' → logprob: -15.376245498657227
    10. '(in' → logprob: -15.876245498657227

Token 267: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. '+' → logprob: -15.625000953674316
    4. 'value' → logprob: -16.0
    5. '_val' → logprob: -16.375
    6. '_VALUE' → logprob: -17.375
    7. '_func' → logprob: -18.125
    8. ' +' → logprob: -18.375
    9. '=' → logprob: -18.5
    10. '_input' → logprob: -18.625

Token 268: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519913613796234
    2. '+' → logprob: -1.5019913911819458
    3. ' ' → logprob: -10.126991271972656
    4. '   ' → logprob: -12.126991271972656
    5. ')' → logprob: -12.501991271972656
    6. '_' → logprob: -12.751991271972656
    7. '  ' → logprob: -13.751991271972656
    8. '-' → logprob: -13.814491271972656
    9. '+++' → logprob: -14.064491271972656
    10. '    ' → logprob: -14.251991271972656

Token 269: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2730928659439087
    2. 'index' → logprob: -2.023092746734619
    3. ' max' → logprob: -2.398092746734619
    4. ' index' → logprob: -4.398092746734619
    5. 'input' → logprob: -6.023092746734619
    6. ' input' → logprob: -7.648092746734619
    7. '1' → logprob: -7.898092746734619
    8. ' ' → logprob: -8.648093223571777
    9. '   ' → logprob: -10.898093223571777
    10. '  ' → logprob: -11.585593223571777

Token 270: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.009723742492496967
    2. '_value' → logprob: -4.759723663330078
    3. '_two' → logprob: -7.259723663330078
    4. 'index' → logprob: -8.759723663330078
    5. 'power' → logprob: -8.884723663330078
    6. '_index' → logprob: -10.009723663330078
    7. '_pow' → logprob: -11.634723663330078
    8. '2' → logprob: -11.634723663330078
    9. 'pow' → logprob: -12.009723663330078
    10. 'Power' → logprob: -12.384723663330078

Token 271: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.6755234599113464
    2. '2' → logprob: -0.8005234599113464
    3. 'max' → logprob: -4.175523281097412
    4. 'two' → logprob: -4.550523281097412
    5. 'index' → logprob: -5.050523281097412
    6. '_index' → logprob: -5.550523281097412
    7. '+' → logprob: -5.675523281097412
    8. '_value' → logprob: -6.925523281097412
    9. '_power' → logprob: -7.925523281097412
    10. '_size' → logprob: -8.17552375793457

Token 272: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741032123565674
    2. '+' → logprob: -0.9741032123565674
    3. ',' → logprob: -11.599102973937988
    4. ' ' → logprob: -12.349102973937988
    5. '-' → logprob: -12.849102973937988
    6. ' -' → logprob: -12.974102973937988
    7. ')' → logprob: -12.974102973937988
    8. '   ' → logprob: -13.224102973937988
    9. '*' → logprob: -13.724102973937988
    10. '2' → logprob: -15.036602973937988

Token 273: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.10147396475076675
    2. ' index' → logprob: -2.3514740467071533
    3. '1' → logprob: -6.976473808288574
    4. ' ' → logprob: -8.476473808288574
    5. '   ' → logprob: -10.226473808288574
    6. 'input' → logprob: -10.851473808288574
    7. '  ' → logprob: -11.101473808288574
    8. '    ' → logprob: -11.351473808288574
    9. ' input' → logprob: -11.476473808288574
    10. '	index' → logprob: -11.601473808288574

Token 274: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7414616942405701
    2. ',' → logprob: -1.2414617538452148
    3. ' +' → logprob: -1.4914617538452148
    4. ' ,' → logprob: -5.366461753845215
    5. '2' → logprob: -6.116461753845215
    6. '1' → logprob: -6.491461753845215
    7. '+,' → logprob: -7.616461753845215
    8. '   ' → logprob: -8.241461753845215
    9. ')' → logprob: -9.116461753845215
    10. '```' → logprob: -9.116461753845215

Token 275: ' max' (ID: 2999)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07900732755661011
    2. ' input' → logprob: -2.579007387161255
    3. ' ' → logprob: -10.204007148742676
    4. 'max' → logprob: -10.579007148742676
    5. '   ' → logprob: -10.954007148742676
    6. 'output' → logprob: -11.954007148742676
    7. ',input' → logprob: -12.204007148742676
    8. '  ' → logprob: -12.329007148742676
    9. ' max' → logprob: -12.829007148742676
    10. '(input' → logprob: -12.954007148742676

Token 276: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.02066146954894066
    2. '_value' → logprob: -3.8956613540649414
    3. '_two' → logprob: -10.395661354064941
    4. 'power' → logprob: -10.395661354064941
    5. '_pow' → logprob: -10.395661354064941
    6. '_input' → logprob: -11.520661354064941
    7. 'input' → logprob: -12.020661354064941
    8. 'Power' → logprob: -13.270661354064941
    9. '_index' → logprob: -13.520661354064941
    10. '```' → logprob: -13.645661354064941

Token 277: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.001581162796355784
    2. 'two' → logprob: -6.501581192016602
    3. '_value' → logprob: -9.626581192016602
    4. '+' → logprob: -12.376581192016602
    5. '_func' → logprob: -12.751581192016602
    6. '2' → logprob: -13.001581192016602
    7. '(two' → logprob: -14.126581192016602
    8. '_index' → logprob: -14.251581192016602
    9. '_TWO' → logprob: -14.876581192016602
    10. ' two' → logprob: -15.001581192016602

Token 278: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18654033541679382
    2. ' +' → logprob: -1.8115403652191162
    3. ')' → logprob: -5.061540126800537
    4. '-' → logprob: -8.811540603637695
    5. ' -' → logprob: -9.561540603637695
    6. '+)' → logprob: -9.686540603637695
    7. ' )' → logprob: -9.811540603637695
    8. '+
' → logprob: -10.311540603637695
    9. '   ' → logprob: -10.936540603637695
    10. ' +
' → logprob: -11.561540603637695

Token 279: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.18227089941501617
    2. ' index' → logprob: -2.1822710037231445
    3. '1' → logprob: -3.0572710037231445
    4. 'input' → logprob: -5.8072710037231445
    5. ' ' → logprob: -6.8072710037231445
    6. '2' → logprob: -6.8072710037231445
    7. ' input' → logprob: -6.9322710037231445
    8. 'max' → logprob: -8.432271003723145
    9. ' max' → logprob: -9.057271003723145
    10. '   ' → logprob: -9.182271003723145

Token 280: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22547665238380432
    2. '+' → logprob: -1.600476622581482
    3. ')' → logprob: -10.100476264953613
    4. '1' → logprob: -11.725476264953613
    5. '   ' → logprob: -12.225476264953613
    6. ' +
' → logprob: -12.850476264953613
    7. '+)' → logprob: -13.100476264953613
    8. '2' → logprob: -13.475476264953613
    9. ' )' → logprob: -13.600476264953613
    10. ')+' → logprob: -14.100476264953613

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049020372331142426
    2. '2' → logprob: -3.049020290374756
    3. ' ' → logprob: -7.799020290374756
    4. '   ' → logprob: -11.549020767211914
    5. '+' → logprob: -11.799020767211914
    6. 'input' → logprob: -12.549020767211914
    7. '3' → logprob: -14.299020767211914
    8. ' +' → logprob: -15.049020767211914
    9. '  ' → logprob: -15.361520767211914
    10. ' input' → logprob: -16.236520767211914

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42899101972579956
    2. '2' → logprob: -1.0539910793304443
    3. ' ' → logprob: -8.178991317749023
    4. '   ' → logprob: -12.428991317749023
    5. '+' → logprob: -13.053991317749023
    6. 'input' → logprob: -13.428991317749023
    7. '3' → logprob: -13.678991317749023
    8. ')' → logprob: -15.616491317749023
    9. '```' → logprob: -15.741491317749023
    10. '0' → logprob: -16.178991317749023

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019751458894461393
    2. ')
' → logprob: -6.251975059509277
    3. '   ' → logprob: -10.001975059509277
    4. ' )' → logprob: -14.251975059509277
    5. '))' → logprob: -15.876975059509277
    6. '()' → logprob: -16.251976013183594
    7. ')
' → logprob: -16.251976013183594
    8. ')`' → logprob: -17.251976013183594
    9. ')

' → logprob: -17.501976013183594
    10. '```' → logprob: -17.626976013183594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 281
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 48.75%
Précision adaptée (1ère position): 49.47%
Précision (top 10): 88.61%
================================================================================
