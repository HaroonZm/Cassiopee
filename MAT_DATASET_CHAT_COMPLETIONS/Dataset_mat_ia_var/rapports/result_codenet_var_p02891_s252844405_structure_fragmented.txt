================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    s = input()
    k = int(input())
    return s, k

def init_vars(s):
    pre_c = ''
    count = 1
    first_char = s[0]
    last_char = s[-1]
    return pre_c, count, first_char, last_char

def group_counts(s):
    t = []
    pre_c, count, _, _ = init_vars(s)
    for c in s:
        count, pre_c, t = process_char(c, pre_c, count, t)
    finalize_group(count, t)
    return t

def process_char(c, pre_c, count, t):
    if c == pre_c:
        count += 1
    elif pre_c == '':
        pass
    else:
        t.append(count)
        count = 1
    pre_c = c
    return count, pre_c, t

def finalize_group(count, t):
    t.append(count)

def sum_half_groups(t):
    return sum(i // 2 for i in t)

def is_single_group(t):
    return len(t) == 1

def merge_ends_if_needed(t, s):
    first_char, last_char = s[0], s[-1]
    if first_char == last_char and not is_single_group(t):
        t[0] = t[0] + t[-1]
        t.pop(-1)
    return t

def solve():
    s, k = read_input()
    t = group_counts(s)
    count_1 = sum_half_groups(t)
    t2 = merge_ends_if_needed(list(t), s)
    count_2 = sum_half_groups(t2)
    if len(s) == 1:
        print(k // 2)
    elif is_single_group(t):
        print(k * len(s) // 2)
    else:
        print(count_1 + count_2 * (k - 1))

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01290913950651884
    2. '_' → logprob: -4.762908935546875
    3. '():' → logprob: -6.137908935546875
    4. '(:' → logprob: -7.012908935546875
    5. '(_:' → logprob: -7.637908935546875
    6. '```' → logprob: -8.012908935546875
    7. ':' → logprob: -8.887908935546875
    8. '(_' → logprob: -9.512908935546875
    9. ' (' → logprob: -10.012908935546875
    10. '_:' → logprob: -10.512908935546875

Token 4: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2027546167373657
    2. '```' → logprob: -1.2027546167373657
    3. '\n' → logprob: -1.5777546167373657
    4. '   ' → logprob: -2.077754497528076
    5. '    
' → logprob: -4.452754497528076
    6. ':' → logprob: -4.452754497528076
    7. '(' → logprob: -4.577754497528076
    8. '``' → logprob: -4.827754497528076
    9. '():' → logprob: -5.702754497528076
    10. ''\' → logprob: -6.327754497528076

Token 5: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6167676448822021
    2. '   ' → logprob: -1.3667676448822021
    3. 'input' → logprob: -2.491767644882202
    4. 'r' → logprob: -3.616767644882202
    5. 'data' → logprob: -3.866767644882202
    6. 'x' → logprob: -4.116767883300781
    7. '```' → logprob: -4.491767883300781
    8. 'i' → logprob: -4.741767883300781
    9. 'user' → logprob: -4.991767883300781
    10. 'n' → logprob: -5.116767883300781

Token 6: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.33358028531074524
    2. 't' → logprob: -1.4585802555084229
    3. ' =' → logprob: -4.208580493927002
    4. 'trip' → logprob: -4.583580493927002
    5. ':' → logprob: -4.708580493927002
    6. '(t' → logprob: -5.333580493927002
    7. '=' → logprob: -5.458580493927002
    8. 'tring' → logprob: -5.458580493927002
    9. '.' → logprob: -7.208580493927002
    10. '(' → logprob: -7.833580493927002

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31349706649780273
    2. 'input' → logprob: -1.3134970664978027
    3. ' ' → logprob: -8.563497543334961
    4. '""' → logprob: -11.188497543334961
    5. '"' → logprob: -12.438497543334961
    6. '''' → logprob: -12.688497543334961
    7. '=input' → logprob: -12.688497543334961
    8. ' s' → logprob: -12.813497543334961
    9. '	input' → logprob: -13.063497543334961
    10. '(input' → logprob: -13.313497543334961

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005747167742811143
    2. ''' → logprob: -8.500575065612793
    3. '('' → logprob: -9.125575065612793
    4. '(
' → logprob: -9.500575065612793
    5. ' (' → logprob: -10.250575065612793
    6. '()' → logprob: -10.375575065612793
    7. '"' → logprob: -10.500575065612793
    8. '`' → logprob: -10.750575065612793
    9. '```' → logprob: -11.250575065612793
    10. '(

' → logprob: -11.375575065612793

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5263980031013489
    2. 'return' → logprob: -2.026397943496704
    3. ' ' → logprob: -2.151397943496704
    4. ' return' → logprob: -3.276397943496704
    5. ')' → logprob: -3.526397943496704
    6. '()' → logprob: -4.151398181915283
    7. '\n' → logprob: -4.651398181915283
    8. '<|end|>' → logprob: -4.651398181915283
    9. '```' → logprob: -4.651398181915283
    10. '
' → logprob: -4.776398181915283

Token 10: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2232164442539215
    2. 'return' → logprob: -1.7232164144515991
    3. ' return' → logprob: -4.348216533660889
    4. ' ' → logprob: -4.973216533660889
    5. 'r' → logprob: -7.348216533660889
    6. 'if' → logprob: -7.973216533660889
    7. '    ' → logprob: -8.34821605682373
    8. ' if' → logprob: -8.97321605682373
    9. '  ' → logprob: -9.09821605682373
    10. '	return' → logprob: -9.34821605682373

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35583069920539856
    2. '=' → logprob: -1.2308306694030762
    3. '_' → logprob: -6.105830669403076
    4. '[' → logprob: -6.855830669403076
    5. ' ' → logprob: -6.980830669403076
    6. '.' → logprob: -7.105830669403076
    7. '    ' → logprob: -7.980830669403076
    8. '   ' → logprob: -8.105831146240234
    9. '(' → logprob: -8.355831146240234
    10. ',' → logprob: -8.355831146240234

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2553461790084839
    2. 'int' → logprob: -1.5053461790084839
    3. ' s' → logprob: -6.380346298217773
    4. ' ' → logprob: -6.880346298217773
    5. '0' → logprob: -8.005346298217773
    6. ' input' → logprob: -8.630346298217773
    7. 's' → logprob: -9.255346298217773
    8. 'input' → logprob: -10.380346298217773
    9. '10' → logprob: -11.380346298217773
    10. '  ' → logprob: -12.005346298217773

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015198609326034784
    2. '('' → logprob: -7.126519680023193
    3. '(s' → logprob: -7.626519680023193
    4. 's' → logprob: -9.626520156860352
    5. '("("' → logprob: -10.126520156860352
    6. ''' → logprob: -10.251520156860352
    7. '(k' → logprob: -10.501520156860352
    8. ' (' → logprob: -10.751520156860352
    9. '()' → logprob: -11.751520156860352
    10. '```' → logprob: -12.126520156860352

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5315752625465393
    2. ')' → logprob: -1.0315752029418945
    3. '()' → logprob: -2.9065752029418945
    4. '(' → logprob: -7.9065752029418945
    5. '))' → logprob: -8.156575202941895
    6. '`)' → logprob: -8.406575202941895
    7. ' ())' → logprob: -8.531575202941895
    8. '()))' → logprob: -10.031575202941895
    9. '')' → logprob: -10.281575202941895
    10. ' )' → logprob: -10.906575202941895

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067053078673779964
    2. '    
' → logprob: -6.506705284118652
    3. ' ' → logprob: -6.631705284118652
    4. '<|end|>' → logprob: -6.756705284118652
    5. '    ' → logprob: -7.381705284118652
    6. '```' → logprob: -8.131705284118652
    7. '  ' → logprob: -8.256705284118652
    8. '	return' → logprob: -8.256705284118652
    9. ')' → logprob: -8.506705284118652
    10. '  
' → logprob: -8.631705284118652

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02357422560453415
    2. ' ' → logprob: -5.148574352264404
    3. 'return' (adapté à ' return') → logprob: -5.148574352264404
    4. 'r' → logprob: -6.273574352264404
    5. '    
' → logprob: -6.273574352264404
    6. '```' → logprob: -6.523574352264404
    7. 'i' → logprob: -6.773574352264404
    8. 'if' → logprob: -7.273574352264404
    9. '    ' → logprob: -7.398574352264404
    10. '  ' → logprob: -7.523574352264404

Token 17: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6372776627540588
    2. 's' → logprob: -0.7622776627540588
    3. ' ' → logprob: -5.387277603149414
    4. '(s' → logprob: -10.262277603149414
    5. '  ' → logprob: -11.262277603149414
    6. 'k' → logprob: -11.512277603149414
    7. ''' → logprob: -12.262277603149414
    8. ''s' → logprob: -12.387277603149414
    9. '"' → logprob: -12.637277603149414
    10. ' ' → logprob: -12.637277603149414

Token 18: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8086613416671753
    2. '[' → logprob: -0.8086613416671753
    3. '<|end|>' → logprob: -3.058661460876465
    4. ',' → logprob: -3.433661460876465
    5. '[
' → logprob: -4.558661460876465
    6. '```' → logprob: -5.933661460876465
    7. '[:]' → logprob: -6.433661460876465
    8. '\' → logprob: -6.558661460876465
    9. 'newline' → logprob: -6.558661460876465
    10. '.split' → logprob: -6.683661460876465

Token 19: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5807352662086487
    2. 'k' → logprob: -0.8307352662086487
    3. 's' → logprob: -5.955735206604004
    4. ' s' → logprob: -6.580735206604004
    5. ' ' → logprob: -7.705735206604004
    6. '<|end|>' → logprob: -9.080735206604004
    7. '(k' → logprob: -9.580735206604004
    8. '_' → logprob: -9.705735206604004
    9. '_k' → logprob: -10.080735206604004
    10. ' ' → logprob: -11.205735206604004

Token 20: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.865854799747467
    2. '#' → logprob: -2.3658547401428223
    3. '.' → logprob: -2.3658547401428223
    4. '*' → logprob: -2.4908547401428223
    5. '\n' → logprob: -2.4908547401428223
    6. '```' → logprob: -3.3658547401428223
    7. '<|end|>' → logprob: -3.3658547401428223
    8. '' → logprob: -3.8658547401428223
    9. '[' → logprob: -3.9908547401428223
    10. '\' → logprob: -3.9908547401428223

Token 21: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.83809894323349
    2. 'd' → logprob: -1.7130990028381348
    3. 'def' → logprob: -2.0880990028381348
    4. '\' → logprob: -2.8380990028381348
    5. '#' → logprob: -3.0880990028381348
    6. '\n' → logprob: -3.3380990028381348
    7. '```' → logprob: -3.4630990028381348
    8. 'n' → logprob: -3.8380990028381348
    9. 'a' → logprob: -4.713099002838135
    10. 's' → logprob: -4.713099002838135

Token 22: ' init' (ID: 6327)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.642843246459961
    2. ' process' → logprob: -1.892843246459961
    3. ' reverse' → logprob: -2.017843246459961
    4. ' longest' → logprob: -2.267843246459961
    5. ' find' → logprob: -2.392843246459961
    6. ' ' → logprob: -2.642843246459961
    7. ' main' → logprob: -3.392843246459961
    8. ' calculate' → logprob: -3.767843246459961
    9. ' solve' → logprob: -3.767843246459961
    10. ' max' → logprob: -3.892843246459961

Token 23: '_vars' (ID: 25901)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06821957230567932
    2. '_array' → logprob: -3.0682196617126465
    3. 'ialize' → logprob: -4.9432196617126465
    4. '_vector' → logprob: -6.3182196617126465
    5. '_val' → logprob: -6.4432196617126465
    6. '_list' → logprob: -6.6932196617126465
    7. '(' → logprob: -6.8182196617126465
    8. '_params' → logprob: -7.0682196617126465
    9. '_map' → logprob: -7.1932196617126465
    10. ' _' → logprob: -7.5682196617126465

Token 24: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.046752117574214935
    2. '_' → logprob: -3.1717522144317627
    3. '()' → logprob: -6.421751976013184
    4. ' (' → logprob: -7.046751976013184
    5. '():' → logprob: -8.296751976013184
    6. '```' → logprob: -8.796751976013184
    7. '("("' → logprob: -9.171751976013184
    8. '   ' → logprob: -9.296751976013184
    9. ' ' → logprob: -9.671751976013184
    10. '(_' → logprob: -9.796751976013184

Token 25: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6949737668037415
    2. '):' → logprob: -0.6949737668037415
    3. ')' → logprob: -6.569973945617676
    4. ' ,' → logprob: -9.069973945617676
    5. ',s' → logprob: -9.694973945617676
    6. 's' → logprob: -9.694973945617676
    7. '):
' → logprob: -9.944973945617676
    8. ' ):' → logprob: -9.944973945617676
    9. ',k' → logprob: -10.944973945617676
    10. '   ' → logprob: -11.319973945617676

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10542795062065125
    2. 'count' → logprob: -3.4804279804229736
    3. 'v' → logprob: -4.6054277420043945
    4. '    
' → logprob: -4.9804277420043945
    5. ' counter' → logprob: -5.1054277420043945
    6. ' frequency' → logprob: -5.1054277420043945
    7. '
' → logprob: -5.2304277420043945
    8. ' count' → logprob: -5.2304277420043945
    9. 'counter' → logprob: -5.6054277420043945
    10. 'n' → logprob: -5.7304277420043945

Token 27: ' pre' (ID: 876)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' freq' → logprob: -1.7241170406341553
    2. ' count' → logprob: -1.8491170406341553
    3. 'count' → logprob: -2.2241170406341553
    4. '   ' → logprob: -2.3491170406341553
    5. ' frequency' → logprob: -2.4741170406341553
    6. ' counter' → logprob: -2.9741170406341553
    7. ' counts' → logprob: -3.3491170406341553
    8. 'v' → logprob: -3.4741170406341553
    9. ' return' → logprob: -3.4741170406341553
    10. 'freq' → logprob: -3.4741170406341553

Token 28: '_c' (ID: 1303)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.6389365196228027
    2. 'f' → logprob: -1.8889365196228027
    3. 'v' → logprob: -2.1389365196228027
    4. '_sum' → logprob: -2.2639365196228027
    5. 'sum' → logprob: -3.3889365196228027
    6. 's' → logprob: -3.7639365196228027
    7. 'fs' → logprob: -4.388936519622803
    8. '_fix' → logprob: -4.513936519622803
    9. '_' → logprob: -5.388936519622803
    10. ' =' → logprob: -6.638936519622803

Token 29: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.06318677216768265
    2. 'nt' → logprob: -3.0631868839263916
    3. 'um' → logprob: -5.3131866455078125
    4. ' =' → logprob: -5.5631866455078125
    5. '=' → logprob: -6.0631866455078125
    6. 'nts' → logprob: -6.8131866455078125
    7. 'sum' → logprob: -7.9381866455078125
    8. 'ounter' → logprob: -8.188186645507812
    9. 'umsum' → logprob: -8.688186645507812
    10. '[' → logprob: -8.938186645507812

Token 30: ' ''
' (ID: 25366)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4848494529724121
    2. ' [' → logprob: -1.109849452972412
    3. '0' → logprob: -3.734849452972412
    4. '{' → logprob: -4.734849452972412
    5. ' ' → logprob: -4.859849452972412
    6. '{}' → logprob: -5.109849452972412
    7. ' {' → logprob: -5.734849452972412
    8. ' {}' → logprob: -6.234849452972412
    9. '[s' → logprob: -7.234849452972412
    10. 's' → logprob: -7.984849452972412

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18979160487651825
    2. ',' → logprob: -3.064791679382324
    3. 'count' → logprob: -3.064791679382324
    4. ' count' → logprob: -3.689791679382324
    5. ' pre' → logprob: -5.189791679382324
    6. ' counts' → logprob: -5.314791679382324
    7. ' counter' → logprob: -5.439791679382324
    8. 'dp' → logprob: -5.939791679382324
    9. 'c' → logprob: -5.939791679382324
    10. 'counter' → logprob: -6.064791679382324

Token 32: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -1.2658454179763794
    2. 'pre' → logprob: -1.7658454179763794
    3. ' pre' → logprob: -2.01584529876709
    4. 'counts' → logprob: -3.01584529876709
    5. 'freq' → logprob: -3.01584529876709
    6. ' count' → logprob: -3.26584529876709
    7. 'cnt' → logprob: -3.26584529876709
    8. '   ' → logprob: -3.26584529876709
    9. 'c' → logprob: -3.76584529876709
    10. 'max' → logprob: -4.14084529876709

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3931671380996704
    2. '=' → logprob: -1.5181671380996704
    3. 's' → logprob: -2.268167018890381
    4. '_' → logprob: -6.018167018890381
    5. ',' → logprob: -11.893167495727539
    6. ')' → logprob: -11.893167495727539
    7. '   ' → logprob: -12.518167495727539
    8. '[' → logprob: -12.768167495727539
    9. ' ' → logprob: -12.768167495727539
    10. 'ed' → logprob: -12.893167495727539

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02061009407043457
    2. ' ' → logprob: -3.8956100940704346
    3. '1' → logprob: -9.645609855651855
    4. '   ' → logprob: -13.270609855651855
    5. '[' → logprob: -14.833109855651855
    6. '<|end|>' → logprob: -15.083109855651855
    7. '  ' → logprob: -15.208109855651855
    8. ' defaultdict' → logprob: -16.020610809326172
    9. '=' → logprob: -16.208110809326172
    10. '۰' → logprob: -16.520610809326172

Token 35: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006710976012982428
    2. '1' → logprob: -7.375670909881592
    3. ' ' → logprob: -10.37567138671875
    4. '{}' → logprob: -11.62567138671875
    5. '[' → logprob: -13.25067138671875
    6. '[]' → logprob: -14.00067138671875
    7. '{' → logprob: -14.18817138671875
    8. '-' → logprob: -15.62567138671875
    9. '   ' → logprob: -15.87567138671875
    10. '```' → logprob: -16.06317138671875

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19659458100795746
    2. '<|end|>' → logprob: -2.071594476699829
    3. '   ' → logprob: -3.071594476699829
    4. '    
' → logprob: -6.071594715118408
    5. '<|end|>' → logprob: -6.196594715118408
    6. '  
' → logprob: -8.07159423828125
    7. ',' → logprob: -8.19659423828125
    8. ' 
' → logprob: -8.94659423828125
    9. 'def' → logprob: -9.19659423828125
    10. '	return' → logprob: -9.19659423828125

Token 38: ' first' (ID: 1577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35027575492858887
    2. 'result' → logprob: -2.475275754928589
    3. 'max' → logprob: -3.100275754928589
    4. '
' → logprob: -3.225275754928589
    5. 'n' → logprob: -3.600275754928589
    6. '<|end|>' → logprob: -4.475275993347168
    7. 'c' → logprob: -4.600275993347168
    8. '    
' → logprob: -4.725275993347168
    9. 'i' → logprob: -4.725275993347168
    10. ',' → logprob: -5.100275993347168

Token 39: '_char' (ID: 23398)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3599190413951874
    2. '_char' → logprob: -1.2349190711975098
    3. '_c' → logprob: -5.98491907119751
    4. '_index' → logprob: -5.98491907119751
    5. '_idx' → logprob: -6.48491907119751
    6. '_occ' → logprob: -6.73491907119751
    7. '_oc' → logprob: -7.35991907119751
    8. '_i' → logprob: -7.35991907119751
    9. '_pos' → logprob: -7.60991907119751
    10. '_letter' → logprob: -8.609918594360352

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5776870846748352
    2. ' =' → logprob: -0.8276870846748352
    3. 's' → logprob: -7.8276872634887695
    4. '_' → logprob: -7.9526872634887695
    5. '_idx' → logprob: -7.9526872634887695
    6. '_index' → logprob: -8.07768726348877
    7. ')' → logprob: -9.45268726348877
    8. '   ' → logprob: -10.32768726348877
    9. ',' → logprob: -10.32768726348877
    10. '<|end|>' → logprob: -10.70268726348877

Token 41: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25375527143478394
    2. 's' → logprob: -1.5037553310394287
    3. ''s' → logprob: -7.12875509262085
    4. ' None' → logprob: -7.75375509262085
    5. ' '' → logprob: -8.878755569458008
    6. 'None' → logprob: -9.253755569458008
    7. ' ''' → logprob: -9.378755569458008
    8. ''' → logprob: -9.378755569458008
    9. ' ' → logprob: -9.878755569458008
    10. ' True' → logprob: -10.003755569458008

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. ' [' → logprob: -12.500007629394531
    3. '[
' → logprob: -13.375007629394531
    4. '\[' → logprob: -14.250007629394531
    5. ''[' → logprob: -15.000007629394531
    6. '0' → logprob: -15.500007629394531
    7. '[]' → logprob: -15.625007629394531
    8. '['' → logprob: -16.37500762939453
    9. '```' → logprob: -16.37500762939453
    10. '[int' → logprob: -16.50000762939453

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014323067443910986
    2. ' ' → logprob: -8.875143051147461
    3. ')' → logprob: -14.125143051147461
    4. '   ' → logprob: -14.875143051147461
    5. '1' → logprob: -15.062643051147461
    6. '```' → logprob: -15.062643051147461
    7. ']' → logprob: -15.125143051147461
    8. '[' → logprob: -15.750143051147461
    9. ':' → logprob: -15.937643051147461
    10. '  ' → logprob: -16.00014305114746

Token 44: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000321995816193521
    2. ' ]' → logprob: -8.375322341918945
    3. ']
' → logprob: -10.250322341918945
    4. ')]' → logprob: -10.625322341918945
    5. ')' → logprob: -10.750322341918945
    6. '']' → logprob: -12.375322341918945
    7. '])' → logprob: -13.000322341918945
    8. ']

' → logprob: -13.875322341918945
    9. '<|end|>' → logprob: -13.875322341918945
    10. ']
' → logprob: -15.125322341918945

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' last' (ID: 2174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0053043365478516
    2. '<|end|>' → logprob: -1.5053043365478516
    3. '
' → logprob: -1.7553043365478516
    4. 'n' → logprob: -2.7553043365478516
    5. ' pre' → logprob: -3.6303043365478516
    6. 'pre' → logprob: -3.8803043365478516
    7. '```' → logprob: -4.130304336547852
    8. ' 
' → logprob: -4.130304336547852
    9. ' ' → logprob: -4.755304336547852
    10. '    
' → logprob: -4.880304336547852

Token 47: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.03165462240576744
    2. '_' → logprob: -3.5316545963287354
    3. '_c' → logprob: -6.7816548347473145
    4. 'char' → logprob: -7.7816548347473145
    5. '_chars' → logprob: -9.031654357910156
    6. '_character' → logprob: -9.656654357910156
    7. '_token' → logprob: -11.281654357910156
    8. ' _' → logprob: -11.406654357910156
    9. ' =' → logprob: -11.406654357910156
    10. 'Char' → logprob: -11.656654357910156

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016114603728055954
    2. '=' → logprob: -4.141114711761475
    3. ' ' → logprob: -9.516114234924316
    4. ',' → logprob: -13.516114234924316
    5. ')' → logprob: -13.891114234924316
    6. 's' → logprob: -14.016114234924316
    7. '_' → logprob: -14.141114234924316
    8. '  ' → logprob: -14.266114234924316
    9. ' =
' → logprob: -14.516114234924316
    10. '<|end|>' → logprob: -14.516114234924316

Token 49: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20172244310379028
    2. 's' → logprob: -1.7017223834991455
    3. ' ' → logprob: -8.451722145080566
    4. ''s' → logprob: -9.951722145080566
    5. ''' → logprob: -10.451722145080566
    6. ' '' → logprob: -11.576722145080566
    7. ' first' → logprob: -12.576722145080566
    8. 'first' → logprob: -13.576722145080566
    9. ' ' → logprob: -13.701722145080566
    10. '_s' → logprob: -14.701722145080566

Token 50: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001529024913907051
    2. '[-' → logprob: -6.501529216766357
    3. '0' → logprob: -11.3765287399292
    4. ' [' → logprob: -12.7515287399292
    5. '```' → logprob: -12.7515287399292
    6. ''[' → logprob: -13.2515287399292
    7. '[len' → logprob: -13.6265287399292
    8. '[]' → logprob: -13.7515287399292
    9. '-' → logprob: -13.8765287399292
    10. ')' → logprob: -14.0015287399292

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ']' → logprob: -10.875035285949707
    3. ' ' → logprob: -11.125035285949707
    4. 'char' → logprob: -14.375035285949707
    5. 'c' → logprob: -15.750035285949707
    6. '_' → logprob: -15.750035285949707
    7. '  ' → logprob: -16.125036239624023
    8. '   ' → logprob: -16.312536239624023
    9. '']' → logprob: -16.312536239624023
    10. '_char' → logprob: -16.375036239624023

Token 52: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07965471595525742
    2. ']' → logprob: -2.5796546936035156
    3. '']' → logprob: -7.704654693603516
    4. ')
' → logprob: -9.579654693603516
    5. '')' → logprob: -9.579654693603516
    6. ')]' → logprob: -9.829654693603516
    7. '<|end|>' → logprob: -9.829654693603516
    8. ' )' → logprob: -10.704654693603516
    9. '])' → logprob: -11.829654693603516
    10. '}' → logprob: -12.204654693603516

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2774665653705597
    2. '<|end|>' → logprob: -1.5274665355682373
    3. '   ' → logprob: -4.277466773986816
    4. '    
' → logprob: -5.902466773986816
    5. ',' → logprob: -6.027466773986816
    6. '<|end|>' → logprob: -6.152466773986816
    7. ' 
' → logprob: -6.902466773986816
    8. '  
' → logprob: -7.027466773986816
    9. ' return' → logprob: -7.652466773986816
    10. '```' → logprob: -8.277466773986816

Token 54: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24626076221466064
    2. ' result' → logprob: -3.121260643005371
    3. ' return' → logprob: -3.246260643005371
    4. '
' → logprob: -4.121260643005371
    5. 'result' → logprob: -4.621260643005371
    6. ' pre' → logprob: -4.621260643005371
    7. '    
' → logprob: -4.996260643005371
    8. 'return' (adapté à ' return') → logprob: -4.996260643005371
    9. ' prev' → logprob: -4.996260643005371
    10. ' max' → logprob: -5.246260643005371

Token 55: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.2544531524181366
    2. 'pre' → logprob: -1.504453182220459
    3. '(pre' → logprob: -6.879453182220459
    4. ' s' → logprob: -7.504453182220459
    5. 's' → logprob: -7.504453182220459
    6. ' ' → logprob: -8.7544527053833
    7. ' (' → logprob: -9.7544527053833
    8. ' None' → logprob: -10.0044527053833
    9. '	pre' → logprob: -10.0044527053833
    10. '  ' → logprob: -10.8794527053833

Token 56: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.88418151892256e-05
    2. '_' → logprob: -10.500059127807617
    3. 'v' → logprob: -10.750059127807617
    4. '_v' → logprob: -11.875059127807617
    5. 's' → logprob: -13.750059127807617
    6. 'c' → logprob: -14.375059127807617
    7. '_char' → logprob: -15.625059127807617
    8. '_chars' → logprob: -15.750059127807617
    9. '_
' → logprob: -16.625059127807617
    10. ' _' → logprob: -16.750059127807617

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02115962654352188
    2. '<|end|>' → logprob: -3.8961596488952637
    3. ' ,' → logprob: -7.896159648895264
    4. ',s' → logprob: -9.896159172058105
    5. '<|end|>' → logprob: -9.896159172058105
    6. ' ' → logprob: -10.271159172058105
    7. 's' → logprob: -10.521159172058105
    8. ',count' → logprob: -10.646159172058105
    9. ',None' → logprob: -11.271159172058105
    10. ')' → logprob: -11.646159172058105

Token 58: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005530327325686812
    2. ' count' → logprob: -7.500553131103516
    3. '	count' → logprob: -19.375553131103516
    4. 'counts' → logprob: -20.375553131103516
    5. ' ' → logprob: -20.625553131103516
    6. '_count' → logprob: -20.750553131103516
    7. '1' → logprob: -20.875553131103516
    8. 'Count' → logprob: -20.875553131103516
    9. '$count' → logprob: -20.875553131103516
    10. '0' → logprob: -21.000553131103516

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05955979600548744
    2. '<|end|>' → logprob: -3.0595598220825195
    3. ' ,' → logprob: -5.0595598220825195
    4. ',s' → logprob: -6.0595598220825195
    5. ' s' → logprob: -6.8095598220825195
    6. 's' → logprob: -8.05955982208252
    7. ' ' → logprob: -8.18455982208252
    8. '<|end|>' → logprob: -8.93455982208252
    9. '   ' → logprob: -9.68455982208252
    10. ',last' → logprob: -10.18455982208252

Token 60: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.5759424567222595
    2. 'first' → logprob: -0.8259424567222595
    3. ' ' → logprob: -13.575942039489746
    4. '	first' → logprob: -14.575942039489746
    5. 's' → logprob: -14.700942039489746
    6. 'First' → logprob: -15.450942039489746
    7. '(first' → logprob: -16.075942993164062
    8. '[first' → logprob: -16.075942993164062
    9. ' s' → logprob: -16.200942993164062
    10. 'f' → logprob: -16.950942993164062

Token 61: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0011823695385828614
    2. '_' → logprob: -7.001182556152344
    3. '_c' → logprob: -8.376182556152344
    4. ' _' → logprob: -11.376182556152344
    5. '_chars' → logprob: -11.376182556152344
    6. '_character' → logprob: -11.626182556152344
    7. '__' → logprob: -13.126182556152344
    8. '```' → logprob: -13.876182556152344
    9. '_CHAR' → logprob: -14.126182556152344
    10. '_chat' → logprob: -14.251182556152344

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016655426006764174
    2. ' ,' → logprob: -7.1266655921936035
    3. ',last' → logprob: -7.2516655921936035
    4. ' last' → logprob: -8.876665115356445
    5. 'last' → logprob: -12.001665115356445
    6. ' ' → logprob: -12.751665115356445
    7. '   ' → logprob: -13.626665115356445
    8. ',
' → logprob: -14.376665115356445
    9. '`,' → logprob: -15.001665115356445
    10. '	last' → logprob: -15.626665115356445

Token 63: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.0011798698687925935
    2. 'last' → logprob: -6.7511796951293945
    3. ' ' → logprob: -12.001179695129395
    4. ''' → logprob: -14.126179695129395
    5. ' ' → logprob: -14.251179695129395
    6. ' s' → logprob: -15.001179695129395
    7. '"' → logprob: -15.251179695129395
    8. ',last' → logprob: -15.251179695129395
    9. ' first' → logprob: -15.376179695129395
    10. 's' → logprob: -15.626179695129395

Token 64: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0004108924185857177
    2. '_c' → logprob: -8.000411033630371
    3. '_' → logprob: -9.625411033630371
    4. 'char' → logprob: -12.500411033630371
    5. '_chars' → logprob: -13.250411033630371
    6. '_character' → logprob: -14.000411033630371
    7. ' _' → logprob: -14.375411033630371
    8. '__' → logprob: -14.875411033630371
    9. '_CHAR' → logprob: -15.250411033630371
    10. '```' → logprob: -15.375411033630371

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20630310475826263
    2. '
' → logprob: -1.8313031196594238
    3. '

' → logprob: -3.956303119659424
    4. '<|end|>' → logprob: -5.331303119659424
    5. '```' → logprob: -6.456303119659424
    6. '<|end|>' → logprob: -8.081302642822266
    7. ' def' → logprob: -9.706302642822266
    8. '\' → logprob: -9.831302642822266
    9. '#' → logprob: -9.956302642822266
    10. '
' → logprob: -10.081302642822266

Token 67: ' group' (ID: 3566)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.4451887309551239
    2. ' compress' → logprob: -2.1951887607574463
    3. ' encode' → logprob: -2.5701887607574463
    4. ' r' → logprob: -3.0701887607574463
    5. ' count' → logprob: -3.0701887607574463
    6. ' process' → logprob: -3.1951887607574463
    7. ' solve' → logprob: -4.695188522338867
    8. 'r' → logprob: -5.320188522338867
    9. ' find' → logprob: -5.445188522338867
    10. ' decode' → logprob: -6.320188522338867

Token 68: '_counts' (ID: 61971)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.3212762475013733
    2. '_by' → logprob: -1.3212761878967285
    3. '_char' → logprob: -5.3212761878967285
    4. 's' → logprob: -7.3212761878967285
    5. '_' → logprob: -7.6962761878967285
    6. '_s' → logprob: -7.9462761878967285
    7. 'by' → logprob: -8.446276664733887
    8. 'ing' → logprob: -8.446276664733887
    9. '_letters' → logprob: -8.696276664733887
    10. 'ed' → logprob: -8.946276664733887

Token 69: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0042359353974461555
    2. '(' → logprob: -5.504235744476318
    3. ' (' → logprob: -9.629236221313477
    4. '():' → logprob: -10.629236221313477
    5. 's' → logprob: -10.754236221313477
    6. '(line' → logprob: -11.254236221313477
    7. '_(' → logprob: -12.004236221313477
    8. 'def' → logprob: -12.379236221313477
    9. '(S' → logprob: -12.379236221313477
    10. '(ss' → logprob: -13.129236221313477

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043460296001285315
    2. '):
' → logprob: -7.875434398651123
    3. ')' → logprob: -10.250434875488281
    4. ' ):' → logprob: -11.125434875488281
    5. ':' → logprob: -13.375434875488281
    6. '):
' → logprob: -13.625434875488281
    7. '   ' → logprob: -15.000434875488281
    8. ',' → logprob: -15.750434875488281
    9. ''):' → logprob: -15.875434875488281
    10. '}:' → logprob: -16.12543487548828

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028519481420516968
    2. 'groups' → logprob: -7.127851963043213
    3. ' groups' → logprob: -7.127851963043213
    4. ' counts' → logprob: -7.502851963043213
    5. 'counts' → logprob: -7.502851963043213
    6. 'count' → logprob: -10.377851486206055
    7. 'from' → logprob: -10.377851486206055
    8. ' from' → logprob: -11.002851486206055
    9. '    
' → logprob: -11.377851486206055
    10. '
' → logprob: -11.627851486206055

Token 72: ' t' (ID: 260)
  Prédit: ' groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' groups' → logprob: -0.46322834491729736
    2. 'groups' → logprob: -1.2132283449172974
    3. '   ' → logprob: -3.588228225708008
    4. ' counts' → logprob: -3.963228225708008
    5. 'counts' → logprob: -4.588228225708008
    6. ' res' → logprob: -4.963228225708008
    7. ' result' → logprob: -5.213228225708008
    8. 'res' → logprob: -7.213228225708008
    9. 'result' → logprob: -7.213228225708008
    10. ' n' → logprob: -7.713228225708008

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30265891551971436
    2. '=' → logprob: -2.177659034729004
    3. 'okens' → logprob: -3.302659034729004
    4. 'emp' → logprob: -3.677659034729004
    5. 'oken' → logprob: -4.302659034729004
    6. 'ok' → logprob: -4.302659034729004
    7. 'r' → logprob: -4.427659034729004
    8. ' ' → logprob: -5.052659034729004
    9. 'mp' → logprob: -5.302659034729004
    10. ',' → logprob: -5.427659034729004

Token 74: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.697011411190033
    2. '[]
' → logprob: -0.697011411190033
    3. ' []' → logprob: -6.197011470794678
    4. ' []
' → logprob: -7.447011470794678
    5. '[' → logprob: -7.947011470794678
    6. '''' → logprob: -8.07201099395752
    7. '[]

' → logprob: -8.57201099395752
    8. '[(' → logprob: -8.94701099395752
    9. '[s' → logprob: -9.07201099395752
    10. '""' → logprob: -9.82201099395752

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4388171434402466
    2. 'count' → logprob: -1.6888171434402466
    3. ' count' → logprob: -2.063817024230957
    4. '   ' → logprob: -2.188817024230957
    5. ' 
' → logprob: -2.688817024230957
    6. ' i' → logprob: -2.688817024230957
    7. ' pre' → logprob: -3.063817024230957
    8. '    
' → logprob: -3.188817024230957
    9. ' if' → logprob: -3.688817024230957
    10. ' current' → logprob: -4.438817024230957

Token 76: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -1.0148050785064697
    2. 'count' → logprob: -1.7648050785064697
    3. 'if' → logprob: -1.8898050785064697
    4. 'i' → logprob: -2.1398050785064697
    5. 'prev' → logprob: -2.2648050785064697
    6. 'cnt' → logprob: -3.7648050785064697
    7. 'n' → logprob: -4.264804840087891
    8. 'cur' → logprob: -4.264804840087891
    9. 'c' → logprob: -4.264804840087891
    10. 'for' → logprob: -4.889804840087891

Token 77: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.804671233519912e-05
    2. '_' → logprob: -9.50008773803711
    3. '_s' → logprob: -11.50008773803711
    4. '_char' → logprob: -14.50008773803711
    5. ' _' → logprob: -14.87508773803711
    6. '_=' → logprob: -14.87508773803711
    7. 's' → logprob: -15.00008773803711
    8. '=' → logprob: -15.50008773803711
    9. '_t' → logprob: -15.62508773803711
    10. 'c' → logprob: -15.62508773803711

Token 78: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871699273586273
    2. '=' → logprob: -1.1371699571609497
    3. ',' → logprob: -8.13716983795166
    4. ' ' → logprob: -12.13716983795166
    5. ' ,' → logprob: -15.38716983795166
    6. '  ' → logprob: -15.88716983795166
    7. ')' → logprob: -16.012170791625977
    8. ' =
' → logprob: -16.262170791625977
    9. '=s' → logprob: -16.387170791625977
    10. ' ='' → logprob: -16.887170791625977

Token 79: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.19900371134281158
    2. ' count' → logprob: -2.1990036964416504
    3. '<|end|>' → logprob: -2.6990036964416504
    4. ' ' → logprob: -6.32400369644165
    5. '<|end|>' → logprob: -9.074004173278809
    6. '	count' → logprob: -9.074004173278809
    7. '_count' → logprob: -9.199004173278809
    8. '$count' → logprob: -9.699004173278809
    9. '[count' → logprob: -11.199004173278809
    10. '(count' → logprob: -11.449004173278809

Token 80: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14875750243663788
    2. ' =' → logprob: -2.0237574577331543
    3. ',' → logprob: -5.148757457733154
    4. '<|end|>' → logprob: -8.398757934570312
    5. ' ,' → logprob: -11.148757934570312
    6. ' ' → logprob: -12.148757934570312
    7. '   ' → logprob: -12.898757934570312
    8. '  ' → logprob: -13.023757934570312
    9. '<|end|>' → logprob: -13.023757934570312
    10. ')' → logprob: -13.523757934570312

Token 81: ' _,' (ID: 18042)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4768291413784027
    2. '<|end|>' → logprob: -1.601829171180725
    3. 's' → logprob: -1.851829171180725
    4. ' None' → logprob: -4.7268290519714355
    5. ' ' → logprob: -4.9768290519714355
    6. 'None' → logprob: -5.8518290519714355
    7. '<|end|>' → logprob: -7.2268290519714355
    8. '  ' → logprob: -8.351829528808594
    9. ' _' → logprob: -8.726829528808594
    10. '_' → logprob: -8.851829528808594

Token 82: ' _' (ID: 1175)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.7218815088272095
    2. 'last' → logprob: -0.7218815088272095
    3. ' s' → logprob: -4.84688138961792
    4. '_' → logprob: -5.22188138961792
    5. 's' → logprob: -5.22188138961792
    6. ' ' → logprob: -6.34688138961792
    7. '<|end|>' → logprob: -6.84688138961792
    8. ' =' → logprob: -6.97188138961792
    9. ' _' → logprob: -7.22188138961792
    10. 'c' → logprob: -7.34688138961792

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.126928329467773
    4. 's' → logprob: -16.501928329467773
    5. ',' → logprob: -16.751928329467773
    6. ')' → logprob: -17.251928329467773
    7. '＝' → logprob: -17.376928329467773
    8. ')=' → logprob: -17.626928329467773
    9. 'init' → logprob: -18.126928329467773
    10. ' in' → logprob: -18.126928329467773

Token 84: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.016036832705140114
    2. ' init' → logprob: -4.1410369873046875
    3. '_init' → logprob: -13.891036987304688
    4. ' ' → logprob: -14.391036987304688
    5. '(init' → logprob: -15.016036987304688
    6. '	init' → logprob: -15.141036987304688
    7. 'group' → logprob: -16.016036987304688
    8. '   ' → logprob: -16.766036987304688
    9. '  ' → logprob: -16.766036987304688
    10. '.init' → logprob: -16.891036987304688

Token 85: '_vars' (ID: 25901)
  Prédit: '_vars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vars' → logprob: -1.2664456789934775e-06
    2. 'vars' → logprob: -14.750000953674316
    3. '_var' → logprob: -15.500000953674316
    4. '_chars' → logprob: -15.500000953674316
    5. '_vals' → logprob: -16.000001907348633
    6. '_' → logprob: -16.125001907348633
    7. '__' → logprob: -17.250001907348633
    8. '```' → logprob: -17.375001907348633
    9. '(vars' → logprob: -17.375001907348633
    10. 's' → logprob: -17.500001907348633

Token 86: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.064297824399546e-05
    2. 's' → logprob: -9.625070571899414
    3. '(' → logprob: -12.625070571899414
    4. ' (' → logprob: -14.375070571899414
    5. '<|end|>' → logprob: -14.750070571899414
    6. '(
' → logprob: -16.375070571899414
    7. '```' → logprob: -17.000070571899414
    8. '_s' → logprob: -17.250070571899414
    9. '`s' → logprob: -17.750070571899414
    10. ' s' → logprob: -17.750070571899414

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1273147463798523
    2. ')
' → logprob: -2.127314805984497
    3. ')
' → logprob: -8.127314567565918
    4. ')

' → logprob: -9.377314567565918
    5. 's' → logprob: -13.127314567565918
    6. ')s' → logprob: -13.252314567565918
    7. '   ' → logprob: -14.127314567565918
    8. ')

' → logprob: -14.502314567565918
    9. ' )
' → logprob: -14.627314567565918
    10. ' )' → logprob: -14.752314567565918

Token 88: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7834632396697998
    2. 'for' → logprob: -0.7834632396697998
    3. '<|end|>' → logprob: -2.9084632396698
    4. '   ' → logprob: -3.6584632396698
    5. '
' → logprob: -6.533463478088379
    6. ' 
' → logprob: -6.783463478088379
    7. '    
' → logprob: -7.158463478088379
    8. ' ' → logprob: -7.283463478088379
    9. '<|end|>' → logprob: -7.283463478088379
    10. '  
' → logprob: -8.158463478088379

Token 89: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03815911337733269
    2. ' for' → logprob: -3.288159132003784
    3. '   ' → logprob: -10.163159370422363
    4. '
' → logprob: -10.788159370422363
    5. 'n' → logprob: -11.038159370422363
    6. 'i' → logprob: -11.538159370422363
    7. ' 
' → logprob: -12.288159370422363
    8. '<|end|>' → logprob: -12.288159370422363
    9. '	for' → logprob: -12.413159370422363
    10. ' ' → logprob: -12.413159370422363

Token 90: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06406321376562119
    2. ' i' → logprob: -3.189063310623169
    3. ' ' → logprob: -4.31406307220459
    4. 'c' → logprob: -5.06406307220459
    5. 'i' → logprob: -7.18906307220459
    6. '  ' → logprob: -8.56406307220459
    7. ' ch' → logprob: -10.06406307220459
    8. ' s' → logprob: -10.56406307220459
    9. '   ' → logprob: -10.93906307220459
    10. ' idx' → logprob: -10.93906307220459

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036702712532132864
    2. 'in' → logprob: -5.7536702156066895
    3. ' ' → logprob: -7.8786702156066895
    4. 's' → logprob: -9.253670692443848
    5. '  ' → logprob: -11.503670692443848
    6. ' s' → logprob: -12.878670692443848
    7. '   ' → logprob: -13.503670692443848
    8. ' i' → logprob: -14.003670692443848
    9. '	in' → logprob: -14.566170692443848
    10. ',' → logprob: -15.003670692443848

Token 92: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47408831119537354
    2. 's' → logprob: -0.9740883111953735
    3. ' ' → logprob: -11.849088668823242
    4. '<|end|>' → logprob: -12.849088668823242
    5. '(s' → logprob: -15.599088668823242
    6. '[' → logprob: -15.599088668823242
    7. '<s' → logprob: -16.099088668823242
    8. '_s' → logprob: -16.349088668823242
    9. '{s' → logprob: -16.474088668823242
    10. 'ss' → logprob: -16.849088668823242

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022273395210504532
    2. '[' → logprob: -4.772273540496826
    3. ':
' → logprob: -4.897273540496826
    4. ' :' → logprob: -5.147273540496826
    5. '   ' → logprob: -9.522273063659668
    6. ' :
' → logprob: -9.522273063659668
    7. ' ' → logprob: -10.147273063659668
    8. '    ' → logprob: -10.397273063659668
    9. '):' → logprob: -11.397273063659668
    10. '[:-' → logprob: -11.897273063659668

Token 94: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7643101215362549
    2. ' if' → logprob: -1.5143101215362549
    3. ' ' → logprob: -1.6393101215362549
    4. '       ' → logprob: -2.639310121536255
    5. '<|end|>' → logprob: -3.764310121536255
    6. '   ' → logprob: -4.514309883117676
    7. 'if' → logprob: -5.139309883117676
    8. ' 
' → logprob: -6.264309883117676
    9. '```' → logprob: -6.514309883117676
    10. '        ' → logprob: -6.764309883117676

Token 95: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10046512633562088
    2. 'if' → logprob: -2.4754650592803955
    3. '<|end|>' → logprob: -5.475465297698975
    4. '    ' → logprob: -5.850465297698975
    5. '       ' → logprob: -5.850465297698975
    6. ' ' → logprob: -7.350465297698975
    7. '   ' → logprob: -7.975465297698975
    8. '```' → logprob: -8.600464820861816
    9. '        ' → logprob: -9.600464820861816
    10. '
' → logprob: -9.725464820861816

Token 96: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22657781839370728
    2. '+=' → logprob: -1.6015777587890625
    3. '=' → logprob: -6.8515777587890625
    4. ' =' → logprob: -9.726577758789062
    5. ' ' → logprob: -11.101577758789062
    6. ']+=' → logprob: -11.601577758789062
    7. '+' → logprob: -12.476577758789062
    8. ' if' → logprob: -12.476577758789062
    9. '+=(' → logprob: -12.851577758789062
    10. '==' → logprob: -12.976577758789062

Token 97: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.0640429258346558
    2. ' pre' → logprob: -1.1890429258346558
    3. ' c' → logprob: -2.0640430450439453
    4. 'count' → logprob: -2.4390430450439453
    5. 'c' → logprob: -2.5640430450439453
    6. ' count' → logprob: -4.439043045043945
    7. '(pre' → logprob: -4.564043045043945
    8. 't' → logprob: -5.064043045043945
    9. ' ' → logprob: -5.064043045043945
    10. ' if' → logprob: -5.814043045043945

Token 98: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0002198676229454577
    2. 'c' → logprob: -8.87522029876709
    3. '_' → logprob: -9.62522029876709
    4. ' _' → logprob: -13.12522029876709
    5. 'if' → logprob: -13.50022029876709
    6. '__' → logprob: -13.75022029876709
    7. '=' → logprob: -13.75022029876709
    8. '_=' → logprob: -13.93772029876709
    9. '```' → logprob: -14.12522029876709
    10. '=_' → logprob: -14.50022029876709

Token 99: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7291672229766846
    2. '=' → logprob: -0.8541672229766846
    3. ' +=' → logprob: -2.6041672229766846
    4. '+=' → logprob: -4.3541669845581055
    5. ',' → logprob: -5.3541669845581055
    6. ' ' → logprob: -8.479166984558105
    7. ' if' → logprob: -8.979166984558105
    8. ' ,' → logprob: -10.354166984558105
    9. 'if' → logprob: -10.479166984558105
    10. '  ' → logprob: -11.354166984558105

Token 100: ' t' (ID: 260)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7824966311454773
    2. 'c' → logprob: -1.657496690750122
    3. '<|end|>' → logprob: -2.532496690750122
    4. ' t' → logprob: -2.657496690750122
    5. 't' → logprob: -3.282496690750122
    6. ' if' → logprob: -3.407496690750122
    7. '=' → logprob: -4.157496452331543
    8. ' ' → logprob: -4.282496452331543
    9. ' pre' → logprob: -4.407496452331543
    10. ' s' → logprob: -4.657496452331543

Token 101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5272440314292908
    2. ' =' → logprob: -0.9022440314292908
    3. ' +=' → logprob: -6.4022440910339355
    4. ',' → logprob: -6.5272440910339355
    5. '+=' → logprob: -7.4022440910339355
    6. ' ' → logprob: -8.777243614196777
    7. ' if' → logprob: -9.152243614196777
    8. 'if' → logprob: -9.902243614196777
    9. '+' → logprob: -11.402243614196777
    10. '  ' → logprob: -11.777243614196777

Token 102: ' process' (ID: 2273)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38017797470092773
    2. '(count' → logprob: -1.2551779747009277
    3. 'count' → logprob: -4.380177974700928
    4. ' count' → logprob: -5.130177974700928
    5. ' ' → logprob: -6.130177974700928
    6. '(' → logprob: -6.380177974700928
    7. '   ' → logprob: -6.505177974700928
    8. '(t' → logprob: -6.630177974700928
    9. '(
' → logprob: -6.880177974700928
    10. '(c' → logprob: -7.255177974700928

Token 103: '_char' (ID: 23398)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.0589298009872437
    2. '(count' → logprob: -1.9339298009872437
    3. ' c' → logprob: -2.058929920196533
    4. 'count' → logprob: -2.183929920196533
    5. 'c' → logprob: -2.558929920196533
    6. '_c' → logprob: -3.183929920196533
    7. '_count' → logprob: -3.433929920196533
    8. '(' → logprob: -3.558929920196533
    9. ' count' → logprob: -3.808929920196533
    10. 's' → logprob: -4.308929920196533

Token 104: '(c' (ID: 2410)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.7208044528961182
    2. '(c' → logprob: -1.2208044528961182
    3. ' (' → logprob: -2.095804452896118
    4. '(' → logprob: -2.470804452896118
    5. 'count' → logprob: -6.095804214477539
    6. ' ' → logprob: -6.095804214477539
    7. ' count' → logprob: -6.595804214477539
    8. 's' → logprob: -6.845804214477539
    9. ' c' → logprob: -6.845804214477539
    10. '   ' → logprob: -7.595804214477539

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2527735233306885
    2. ' ,' → logprob: -1.5027735233306885
    3. ')' → logprob: -7.627773284912109
    4. '   ' → logprob: -8.75277328491211
    5. ',count' → logprob: -10.00277328491211
    6. ' )' → logprob: -10.12777328491211
    7. '<|end|>' → logprob: -10.25277328491211
    8. '       ' → logprob: -11.25277328491211
    9. '<|end|>' → logprob: -11.37777328491211
    10. '    ' → logprob: -11.75277328491211

Token 106: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.10296592861413956
    2. ' pre' → logprob: -2.352965831756592
    3. 'count' → logprob: -6.102965831756592
    4. ' count' → logprob: -7.977965831756592
    5. ' ' → logprob: -9.72796630859375
    6. '   ' → logprob: -9.85296630859375
    7. 't' → logprob: -10.97796630859375
    8. '	pre' → logprob: -11.60296630859375
    9. '  ' → logprob: -11.72796630859375
    10. ' t' → logprob: -11.85296630859375

Token 107: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: 0.0
    2. 'c' → logprob: -17.25
    3. '   ' → logprob: -18.125
    4. '_' → logprob: -19.0
    5. 's' → logprob: -19.25
    6. '‌' → logprob: -19.375
    7. ' _' → logprob: -19.625
    8. '<|end|>' → logprob: -19.625
    9. '_s' → logprob: -19.875
    10. ' ' → logprob: -20.1875

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027639029547572136
    2. ' ,' → logprob: -3.6526389122009277
    3. ',count' → logprob: -6.652638912200928
    4. ')' → logprob: -10.277639389038086
    5. '   ' → logprob: -12.402639389038086
    6. '),' → logprob: -13.152639389038086
    7. '[count' → logprob: -13.527639389038086
    8. 'count' → logprob: -14.027639389038086
    9. ' ' → logprob: -14.277639389038086
    10. '=count' → logprob: -14.402639389038086

Token 109: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011051236651837826
    2. ' count' → logprob: -4.511051177978516
    3. 't' → logprob: -13.136051177978516
    4. ' ' → logprob: -14.136051177978516
    5. ' t' → logprob: -14.886051177978516
    6. '	count' → logprob: -15.761051177978516
    7. '   ' → logprob: -15.886051177978516
    8. '  ' → logprob: -17.011051177978516
    9. 'counts' → logprob: -17.011051177978516
    10. '$count' → logprob: -18.261051177978516

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015331897884607315
    2. ' ,' → logprob: -7.001533031463623
    3. ',t' → logprob: -7.501533031463623
    4. ')' → logprob: -10.126533508300781
    5. '<|end|>' → logprob: -11.376533508300781
    6. '   ' → logprob: -12.001533508300781
    7. 't' → logprob: -12.501533508300781
    8. '<|end|>' → logprob: -13.751533508300781
    9. '),' → logprob: -13.876533508300781
    10. ' ' → logprob: -14.126533508300781

Token 111: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5760803818702698
    2. 't' → logprob: -0.8260803818702698
    3. 's' → logprob: -9.201080322265625
    4. '<|end|>' → logprob: -10.826080322265625
    5. ' ' → logprob: -11.701080322265625
    6. ' s' → logprob: -12.076080322265625
    7. '	t' → logprob: -13.201080322265625
    8. '   ' → logprob: -13.951080322265625
    9. ',' → logprob: -14.201080322265625
    10. '`t' → logprob: -14.701080322265625

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018577903392724693
    2. ')
' → logprob: -9.1251859664917
    3. ' )' → logprob: -9.6251859664917
    4. '   ' → logprob: -12.6251859664917
    5. '<|end|>' → logprob: -12.8751859664917
    6. ')

' → logprob: -13.5001859664917
    7. ',' → logprob: -13.6251859664917
    8. '),' → logprob: -14.7501859664917
    9. '<|end|>' → logprob: -14.7501859664917
    10. ');' → logprob: -15.0001859664917

Token 113: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' finalize' (ID: 97196)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22722609341144562
    2. '<|end|>' → logprob: -1.8522261381149292
    3. ' 
' → logprob: -4.102226257324219
    4. '
' → logprob: -4.227226257324219
    5. '   ' → logprob: -5.227226257324219
    6. ')' → logprob: -5.852226257324219
    7. '<|end|>' → logprob: -6.102226257324219
    8. '  ' → logprob: -6.852226257324219
    9. '    ' → logprob: -7.227226257324219
    10. ':' → logprob: -7.227226257324219

Token 115: '_group' (ID: 15990)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.053549040108919144
    2. '_group' → logprob: -4.053548812866211
    3. '_count' → logprob: -4.553548812866211
    4. '_' → logprob: -4.678548812866211
    5. '(t' → logprob: -5.178548812866211
    6. '_t' → logprob: -5.428548812866211
    7. '_list' → logprob: -6.678548812866211
    8. '_(' → logprob: -6.928548812866211
    9. '_groups' → logprob: -7.303548812866211
    10. '_char' → logprob: -8.178548812866211

Token 116: '(count' (ID: 25892)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.22741450369358063
    2. 's' → logprob: -1.6024144887924194
    3. '_s' → logprob: -6.352414608001709
    4. '_count' → logprob: -9.10241413116455
    5. 'ing' → logprob: -10.60241413116455
    6. '_' → logprob: -10.60241413116455
    7. 'ed' → logprob: -10.85241413116455
    8. '_c' → logprob: -11.35241413116455
    9. '(_' → logprob: -11.72741413116455
    10. '_chars' → logprob: -11.72741413116455

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036791712045669556
    2. ')' → logprob: -6.003679275512695
    3. ',t' → logprob: -7.003679275512695
    4. ' ,' → logprob: -8.253679275512695
    5. '(t' → logprob: -11.878679275512695
    6. '   ' → logprob: -12.378679275512695
    7. 't' → logprob: -12.503679275512695
    8. '(' → logprob: -12.503679275512695
    9. ')t' → logprob: -12.503679275512695
    10. 's' → logprob: -13.003679275512695

Token 118: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7727033495903015
    2. 't' → logprob: -1.5227034091949463
    3. ' pre' → logprob: -1.7727034091949463
    4. 'pre' → logprob: -1.8977034091949463
    5. ' ' → logprob: -9.147703170776367
    6. 's' → logprob: -9.397703170776367
    7. ' s' → logprob: -10.022703170776367
    8. '   ' → logprob: -10.397703170776367
    9. ')' → logprob: -11.022703170776367
    10. '	pre' → logprob: -11.897703170776367

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012542021460831165
    2. ',' → logprob: -4.387542247772217
    3. ')
' → logprob: -10.887541770935059
    4. ' )' → logprob: -11.637541770935059
    5. ',)' → logprob: -13.137541770935059
    6. ')

' → logprob: -14.137541770935059
    7. '),' → logprob: -14.387541770935059
    8. ' ' → logprob: -15.012541770935059
    9. '   ' → logprob: -15.512541770935059
    10. '))' → logprob: -15.637541770935059

Token 120: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.002556519117206335
    2. 't' → logprob: -6.002556324005127
    3. 's' → logprob: -10.252556800842285
    4. '<|end|>' → logprob: -11.252556800842285
    5. 'None' → logprob: -11.502556800842285
    6. ' None' → logprob: -12.002556800842285
    7. ' ' → logprob: -12.502556800842285
    8. '_t' → logprob: -12.627556800842285
    9. ' ' → logprob: -12.877556800842285
    10. '(t' → logprob: -13.002556800842285

Token 123: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.017013544216752052
    2. 'process' → logprob: -4.1420135498046875
    3. ' group' → logprob: -7.3920135498046875
    4. ' proces' → logprob: -9.892013549804688
    5. '_process' → logprob: -10.142013549804688
    6. ' read' → logprob: -10.517013549804688
    7. ' reverse' → logprob: -10.642013549804688
    8. ' count' → logprob: -11.017013549804688
    9. ' split' → logprob: -11.267013549804688
    10. ' main' → logprob: -11.267013549804688

Token 126: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.004390001762658358
    2. '_' → logprob: -5.504390239715576
    3. '_c' → logprob: -8.629389762878418
    4. '_chars' → logprob: -9.629389762878418
    5. '_token' → logprob: -10.129389762878418
    6. '_CHAR' → logprob: -11.254389762878418
    7. ' _' → logprob: -11.629389762878418
    8. '_ch' → logprob: -14.129389762878418
    9. 'char' → logprob: -14.254389762878418
    10. '```' → logprob: -14.629389762878418

Token 127: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.47415077686309814
    2. '(' → logprob: -0.9741507768630981
    3. ' (' → logprob: -9.974150657653809
    4. '(s' → logprob: -11.974150657653809
    5. '(a' → logprob: -11.974150657653809
    6. '(
' → logprob: -12.349150657653809
    7. '(:' → logprob: -12.349150657653809
    8. '(_:' → logprob: -14.349150657653809
    9. '(C' → logprob: -14.599150657653809
    10. '(_' → logprob: -14.724150657653809

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020544764993246645
    2. ' ,' → logprob: -8.500205039978027
    3. ',
' → logprob: -14.000205039978027
    4. '_,' → logprob: -14.125205039978027
    5. '‌,' → logprob: -15.250205039978027
    6. '   ' → logprob: -16.375205993652344
    7. ',

' → logprob: -17.375205993652344
    8. ',p' → logprob: -17.500205993652344
    9. '):' → logprob: -18.125205993652344
    10. ' ' → logprob: -18.250205993652344

Token 129: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.05494118854403496
    2. 'pre' → logprob: -2.929941177368164
    3. '<|end|>' → logprob: -10.304941177368164
    4. '	pre' → logprob: -11.554941177368164
    5. ' ' → logprob: -12.429941177368164
    6. '(pre' → logprob: -12.554941177368164
    7. ')' → logprob: -13.304941177368164
    8. '_pre' → logprob: -13.429941177368164
    9. ' pretrained' → logprob: -14.304941177368164
    10. 'prech' → logprob: -14.679941177368164

Token 130: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00012833021173719317
    2. '_' → logprob: -9.000128746032715
    3. ' _' → logprob: -12.375128746032715
    4. ')_' → logprob: -14.750128746032715
    5. '_s' → logprob: -16.6251277923584
    6. '_
' → logprob: -16.7501277923584
    7. '_char' → logprob: -17.1251277923584
    8. ')' → logprob: -17.6251277923584
    9. '_f' → logprob: -17.6251277923584
    10. 'c' → logprob: -17.7501277923584

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003230686706956476
    2. ' ,' → logprob: -8.125323295593262
    3. '_,' → logprob: -10.875323295593262
    4. ',
' → logprob: -12.625323295593262
    5. ',_' → logprob: -12.875323295593262
    6. '‌,' → logprob: -14.000323295593262
    7. ',

' → logprob: -15.125323295593262
    8. '=' → logprob: -15.375323295593262
    9. '<|end|>' → logprob: -16.000322341918945
    10. '   ' → logprob: -16.375322341918945

Token 132: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.47428253293037415
    2. ' count' → logprob: -0.9742825031280518
    3. '<|end|>' → logprob: -8.599282264709473
    4. '[count' → logprob: -11.974282264709473
    5. ' ' → logprob: -12.224282264709473
    6. '	count' → logprob: -13.099282264709473
    7. ' t' → logprob: -13.849282264709473
    8. '$count' → logprob: -13.974282264709473
    9. '_count' → logprob: -14.099282264709473
    10. ')' → logprob: -14.099282264709473

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ' ,' → logprob: -11.875008583068848
    3. '):' → logprob: -13.750008583068848
    4. ',
' → logprob: -15.125008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '‌,' → logprob: -16.375009536743164
    7. ',

' → logprob: -16.500009536743164
    8. '):
' → logprob: -17.750009536743164
    9. ',user' → logprob: -17.750009536743164
    10. 's' → logprob: -18.125009536743164

Token 134: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25193992257118225
    2. ' t' → logprob: -1.5019398927688599
    3. '	t' → logprob: -12.00193977355957
    4. '   ' → logprob: -13.12693977355957
    5. ' ' → logprob: -13.75193977355957
    6. ')t' → logprob: -14.50193977355957
    7. 's' → logprob: -15.12693977355957
    8. '`t' → logprob: -15.50193977355957
    9. ')' → logprob: -15.62693977355957
    10. '  ' → logprob: -15.75193977355957

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4742405414581299
    2. '):
' → logprob: -0.9742405414581299
    3. '):
' → logprob: -9.09924030303955
    4. '):

' → logprob: -10.59924030303955
    5. ')' → logprob: -11.22424030303955
    6. '   ' → logprob: -11.84924030303955
    7. ' ):' → logprob: -12.72424030303955
    8. ':' → logprob: -13.47424030303955
    9. ' ):
' → logprob: -13.59924030303955
    10. ',' → logprob: -15.34924030303955

Token 136: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18268965184688568
    2. '    ' → logprob: -2.932689666748047
    3. ' ' → logprob: -3.182689666748047
    4. ' 
' → logprob: -3.932689666748047
    5. '   ' → logprob: -4.432689666748047
    6. '```' → logprob: -4.432689666748047
    7. '[' → logprob: -4.807689666748047
    8. 'if' → logprob: -5.057689666748047
    9. '
' → logprob: -6.307689666748047
    10. ''' → logprob: -6.557689666748047

Token 137: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06723476946353912
    2. 'if' (adapté à ' if') → logprob: -3.067234754562378
    3. ''' → logprob: -5.192234992980957
    4. ' ' → logprob: -5.692234992980957
    5. '(' → logprob: -6.067234992980957
    6. '    ' → logprob: -6.442234992980957
    7. '[' → logprob: -6.442234992980957
    8. '   ' → logprob: -7.192234992980957
    9. ' (' → logprob: -7.692234992980957
    10. '	if' → logprob: -7.942234992980957

Token 138: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14281725883483887
    2. 'c' → logprob: -2.017817258834839
    3. ' ' → logprob: -9.642817497253418
    4. ' pre' → logprob: -10.017817497253418
    5. ' not' → logprob: -11.517817497253418
    6. '   ' → logprob: -12.142817497253418
    7. '  ' → logprob: -12.267817497253418
    8. '	c' → logprob: -12.517817497253418
    9. 'pre' → logprob: -12.642817497253418
    10. ' ' → logprob: -13.517817497253418

Token 139: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0029204224701970816
    2. '==' → logprob: -5.877920627593994
    3. ' !=' → logprob: -9.252920150756836
    4. ' ' → logprob: -10.877920150756836
    5. '!=' → logprob: -15.377920150756836
    6. '[' → logprob: -15.377920150756836
    7. ' ' → logprob: -15.877920150756836
    8. '=' → logprob: -16.752920150756836
    9. ' ==
' → logprob: -16.752920150756836
    10. ' =' → logprob: -17.252920150756836

Token 140: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.47408327460289
    2. ' pre' → logprob: -0.9740833044052124
    3. ' ' → logprob: -12.599082946777344
    4. '	pre' → logprob: -13.224082946777344
    5. '(pre' → logprob: -14.849082946777344
    6. '  ' → logprob: -15.099082946777344
    7. ''' → logprob: -15.724082946777344
    8. '_pre' → logprob: -16.349082946777344
    9. 'pread' → logprob: -16.724082946777344
    10. '"' → logprob: -17.724082946777344

Token 141: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.1080467781284824e-05
    2. '_' → logprob: -10.250041007995605
    3. ' _' → logprob: -12.875041007995605
    4. 'c' → logprob: -13.125041007995605
    5. ''_' → logprob: -14.625041007995605
    6. '__' → logprob: -16.000041961669922
    7. ''' → logprob: -16.250041961669922
    8. '_
' → logprob: -16.750041961669922
    9. '_t' → logprob: -16.875041961669922
    10. '\' → logprob: -17.000041961669922

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16416451334953308
    2. ':
' → logprob: -1.9141645431518555
    3. '       ' → logprob: -5.9141645431518555
    4. '   ' → logprob: -6.9141645431518555
    5. ' and' → logprob: -9.039164543151855
    6. ' :' → logprob: -10.664164543151855
    7. ',' → logprob: -10.789164543151855
    8. ' :
' → logprob: -11.039164543151855
    9. ':
' → logprob: -11.414164543151855
    10. ':return' → logprob: -11.539164543151855

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04738352820277214
    2. ' count' → logprob: -3.2973835468292236
    3. 'count' → logprob: -4.7973833084106445
    4. '[count' → logprob: -8.297383308410645
    5. '    ' → logprob: -8.797383308410645
    6. '        ' → logprob: -8.922383308410645
    7. '        
' → logprob: -9.422383308410645
    8. '(count' → logprob: -9.672383308410645
    9. '
' → logprob: -9.922383308410645
    10. ' return' → logprob: -10.047383308410645

Token 144: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.38733339309692383
    2. 'count' (adapté à ' count') → logprob: -1.1373333930969238
    3. '       ' → logprob: -7.887333393096924
    4. '(count' → logprob: -10.137332916259766
    5. '   ' → logprob: -11.387332916259766
    6. ' return' → logprob: -11.512332916259766
    7. '	count' → logprob: -11.762332916259766
    8. '           ' → logprob: -12.262332916259766
    9. 'return' → logprob: -12.512332916259766
    10. '[count' → logprob: -13.137332916259766

Token 145: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3872658908367157
    2. '+=' → logprob: -1.137265920639038
    3. '+' → logprob: -8.512266159057617
    4. '=' → logprob: -8.637266159057617
    5. ' +' → logprob: -11.262266159057617
    6. ' =' → logprob: -12.887266159057617
    7. ']+=' → logprob: -14.762266159057617
    8. '[' → logprob: -15.137266159057617
    9. '   ' → logprob: -16.387266159057617
    10. ' ' → logprob: -16.387266159057617

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048587486147880554
    2. ' ' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.548587799072266
    4. '<|end|>' → logprob: -17.423587799072266
    5. '  ' → logprob: -17.923587799072266
    6. '```' → logprob: -18.923587799072266
    7. '
' → logprob: -19.173587799072266
    8. '+' → logprob: -20.236087799072266
    9. '１' → logprob: -20.298587799072266
    10. '۱' → logprob: -20.298587799072266

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -20.25000762939453
    4. '   ' → logprob: -20.50000762939453
    5. '۱' → logprob: -21.62500762939453
    6. '１' → logprob: -21.62500762939453
    7. '
' → logprob: -21.62500762939453
    8. 'count' → logprob: -22.00000762939453
    9. '  ' → logprob: -22.00000762939453
    10. '<|end|>' → logprob: -22.50000762939453

Token 148: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04105090722441673
    2. ' else' → logprob: -3.666050910949707
    3. '       ' → logprob: -4.791050910949707
    4. 'else' → logprob: -5.166050910949707
    5. ' return' → logprob: -8.166050910949707
    6. '
' → logprob: -8.416050910949707
    7. 'return' → logprob: -9.666050910949707
    8. ',' → logprob: -10.291050910949707
    9. '    
' → logprob: -12.541050910949707
    10. '```' → logprob: -12.541050910949707

Token 150: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.39043286442756653
    2. ' else' → logprob: -1.1404328346252441
    3. '   ' → logprob: -5.640432834625244
    4. 'elif' (adapté à ' elif') → logprob: -13.015433311462402
    5. '	else' → logprob: -13.890433311462402
    6. ' elif' → logprob: -14.515433311462402
    7. '       ' → logprob: -15.265433311462402
    8. ' ' → logprob: -16.765432357788086
    9. 'return' → logprob: -16.890432357788086
    10. '```' → logprob: -17.140432357788086

Token 151: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.11451738327741623
    2. 'pre' → logprob: -2.3645174503326416
    3. ' c' → logprob: -4.4895172119140625
    4. 'c' → logprob: -6.2395172119140625
    5. ' not' → logprob: -7.3645172119140625
    6. 'count' → logprob: -8.739517211914062
    7. ' count' → logprob: -8.739517211914062
    8. ' ' → logprob: -10.739517211914062
    9. '(pre' → logprob: -10.739517211914062
    10. 'not' → logprob: -11.364517211914062

Token 152: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.219262624857947e-05
    2. '_' → logprob: -9.750072479248047
    3. ' _' → logprob: -11.500072479248047
    4. '__' → logprob: -14.500072479248047
    5. ''_' → logprob: -14.750072479248047
    6. '_f' → logprob: -14.875072479248047
    7. '=' → logprob: -15.000072479248047
    8. '=_' → logprob: -15.375072479248047
    9. '_s' → logprob: -15.625072479248047
    10. 'c' → logprob: -15.625072479248047

Token 153: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4229913651943207
    2. '==' → logprob: -1.797991394996643
    3. '!=' → logprob: -2.1729912757873535
    4. ' ==' → logprob: -2.9229912757873535
    5. ':' → logprob: -5.1729912757873535
    6. ' and' → logprob: -5.5479912757873535
    7. ' ' → logprob: -7.0479912757873535
    8. 'and' → logprob: -7.4229912757873535
    9. '!='' → logprob: -8.172991752624512
    10. ' :' → logprob: -9.547991752624512

Token 154: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.38719668984413147
    2. ''' → logprob: -1.137196660041809
    3. ' '':
' → logprob: -8.13719654083252
    4. ' '' → logprob: -10.88719654083252
    5. ''',' → logprob: -12.26219654083252
    6. '''
' → logprob: -12.38719654083252
    7. ' ''' → logprob: -13.26219654083252
    8. '"":' → logprob: -13.63719654083252
    9. '""' → logprob: -14.51219654083252
    10. '''.' → logprob: -14.76219654083252

Token 155: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6090649366378784
    2. '       ' → logprob: -0.8590649366378784
    3. '   ' → logprob: -3.984065055847168
    4. ':' → logprob: -4.609065055847168
    5. 'count' → logprob: -6.734065055847168
    6. ' pre' → logprob: -7.109065055847168
    7. 'pre' → logprob: -7.234065055847168
    8. '):
' → logprob: -7.859065055847168
    9. ' and' → logprob: -8.109065055847168
    10. ' :
' → logprob: -8.984065055847168

Token 156: ' pass' (ID: 1853)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.6885526776313782
    2. 'pre' → logprob: -0.8135526776313782
    3. 'count' → logprob: -3.1885526180267334
    4. ' count' → logprob: -4.4385528564453125
    5. '   ' → logprob: -7.0635528564453125
    6. '       ' → logprob: -7.6885528564453125
    7. '    ' → logprob: -11.313552856445312
    8. ' ' → logprob: -11.313552856445312
    9. 'c' → logprob: -11.938552856445312
    10. '	pre' → logprob: -12.188552856445312

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06949637085199356
    2. 'else' → logprob: -3.1944963932037354
    3. ' else' → logprob: -3.6944963932037354
    4. '       ' → logprob: -6.819496154785156
    5. ' pre' → logprob: -9.569496154785156
    6. '	else' → logprob: -9.819496154785156
    7. 'pre' → logprob: -10.194496154785156
    8. '	pre' → logprob: -11.444496154785156
    9. '
' → logprob: -11.944496154785156
    10. '(pre' → logprob: -13.069496154785156

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03818894922733307
    2. '       ' → logprob: -3.663188934326172
    3. 'else' → logprob: -4.663188934326172
    4. ' else' → logprob: -6.163188934326172
    5. 'pre' → logprob: -8.913188934326172
    6. ' pre' → logprob: -9.163188934326172
    7. 'count' → logprob: -12.163188934326172
    8. '
' → logprob: -12.538188934326172
    9. '(pre' → logprob: -12.788188934326172
    10. '	pre' → logprob: -12.913188934326172

Token 159: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8363174200057983
    2. '   ' → logprob: -1.2113174200057983
    3. ' else' → logprob: -1.3363174200057983
    4. ' pre' → logprob: -5.586317539215088
    5. 'pre' → logprob: -6.961317539215088
    6. '       ' → logprob: -7.211317539215088
    7. ':' → logprob: -8.58631706237793
    8. ':
' → logprob: -8.58631706237793
    9. 'count' → logprob: -9.83631706237793
    10. '    ' → logprob: -10.08631706237793

Token 160: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07766002416610718
    2. ':' → logprob: -2.702660083770752
    3. '   ' → logprob: -5.077660083770752
    4. '       ' → logprob: -6.702660083770752
    5. '{
' → logprob: -9.202659606933594
    6. '):
' → logprob: -9.702659606933594
    7. ' :
' → logprob: -10.952659606933594
    8. ':return' → logprob: -11.577659606933594
    9. 'def' → logprob: -11.827659606933594
    10. ':

' → logprob: -11.827659606933594

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45856794714927673
    2. '   ' → logprob: -1.2085679769515991
    3. 't' → logprob: -2.8335678577423096
    4. ' t' → logprob: -4.583568096160889
    5. 'def' → logprob: -9.95856761932373
    6. '
' → logprob: -10.45856761932373
    7. '	t' → logprob: -10.58356761932373
    8. ' ' → logprob: -11.20856761932373
    9. '    ' → logprob: -11.33356761932373
    10. '     ' → logprob: -11.70856761932373

Token 162: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.07444348931312561
    2. ' t' → logprob: -2.6994435787200928
    3. '       ' → logprob: -5.949443340301514
    4. '   ' → logprob: -6.324443340301514
    5. ' finalize' → logprob: -10.324443817138672
    6. '	t' → logprob: -10.949443817138672
    7. '           ' → logprob: -11.449443817138672
    8. 'final' → logprob: -11.699443817138672
    9. 'if' → logprob: -12.324443817138672
    10. '
' → logprob: -12.574443817138672

Token 163: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031790214125066996
    2. '.' → logprob: -5.75317907333374
    3. '.extend' → logprob: -14.003178596496582
    4. '.app' → logprob: -15.628178596496582
    5. '.Append' → logprob: -16.7531795501709
    6. ' .' → logprob: -16.8781795501709
    7. '.ap' → logprob: -17.0031795501709
    8. 'append' → logprob: -17.1281795501709
    9. '.add' → logprob: -18.8781795501709
    10. '.push' → logprob: -19.0031795501709

Token 164: '(count' (ID: 25892)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00209006923250854
    2. '(pre' → logprob: -6.752089977264404
    3. '(count' → logprob: -7.627089977264404
    4. '(' → logprob: -7.752089977264404
    5. '([' → logprob: -13.502090454101562
    6. '(('' → logprob: -14.627090454101562
    7. '(
' → logprob: -16.002090454101562
    8. '({'' → logprob: -16.252090454101562
    9. '(str' → logprob: -16.627090454101562
    10. '```' → logprob: -16.752090454101562

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2813691794872284
    2. ')
' → logprob: -1.4063692092895508
    3. ' )' → logprob: -9.90636920928955
    4. ' )
' → logprob: -10.03136920928955
    5. '   ' → logprob: -10.15636920928955
    6. ',' → logprob: -10.28136920928955
    7. ')
' → logprob: -10.65636920928955
    8. ')

' → logprob: -11.15636920928955
    9. '),' → logprob: -13.15636920928955
    10. ')`
' → logprob: -13.28136920928955

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3023359775543213
    2. 'count' → logprob: -1.5523359775543213
    3. 'pre' → logprob: -3.6773359775543213
    4. '   ' → logprob: -4.177335739135742
    5. 'return' → logprob: -5.802335739135742
    6. ' pre' → logprob: -5.927335739135742
    7. ' count' → logprob: -6.052335739135742
    8. 't' → logprob: -8.427335739135742
    9. ' return' → logprob: -8.677335739135742
    10. '
' → logprob: -10.802335739135742

Token 167: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.07164911180734634
    2. 'pre' → logprob: -2.6966490745544434
    3. '   ' → logprob: -6.446649074554443
    4. '       ' → logprob: -9.821649551391602
    5. ' count' → logprob: -9.946649551391602
    6. ' pre' → logprob: -11.446649551391602
    7. 'return' → logprob: -12.071649551391602
    8. '  ' → logprob: -13.696649551391602
    9. '    ' → logprob: -13.696649551391602
    10. '	count' → logprob: -14.446649551391602

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804241120815277
    2. ' =' → logprob: -3.2880423069000244
    3. ',' → logprob: -13.913042068481445
    4. '＝' → logprob: -18.663042068481445
    5. '1' → logprob: -19.663042068481445
    6. ')' → logprob: -19.663042068481445
    7. '=
' → logprob: -20.038042068481445
    8. ' ' → logprob: -20.038042068481445
    9. '```' → logprob: -20.163042068481445
    10. 's' → logprob: -20.288042068481445

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -20.250001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '0' → logprob: -21.375001907348633
    6. '۱' → logprob: -21.875001907348633
    7. 'new' → logprob: -22.062501907348633
    8. '１' → logprob: -22.312501907348633
    9. 'count' → logprob: -22.500001907348633
    10. 'def' → logprob: -22.500001907348633

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -20.75
    4. '0' → logprob: -20.875
    5. '   ' → logprob: -21.375
    6. '۱' → logprob: -21.875
    7. '' → logprob: -22.375
    8. 'count' → logprob: -22.4375
    9. '１' → logprob: -22.5625
    10. '१' → logprob: -22.5625

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11708644032478333
    2. '       ' → logprob: -2.242086410522461
    3. 'pre' → logprob: -5.617086410522461
    4. 'return' → logprob: -8.117086410522461
    5. ' pre' → logprob: -8.242086410522461
    6. '	pre' → logprob: -10.492086410522461
    7. ' return' → logprob: -10.867086410522461
    8. ',' → logprob: -12.367086410522461
    9. '
' → logprob: -13.242086410522461
    10. '(pre' → logprob: -13.742086410522461

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18638986349105835
    2. '       ' → logprob: -1.8113899230957031
    3. 'pre' → logprob: -5.186389923095703
    4. 'return' → logprob: -7.061389923095703
    5. ' pre' → logprob: -8.936389923095703
    6. '
' → logprob: -11.311389923095703
    7. ' return' → logprob: -11.436389923095703
    8. 'else' → logprob: -11.811389923095703
    9. '	pre' → logprob: -12.436389923095703
    10. '+' → logprob: -13.561389923095703

Token 173: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.5138826370239258
    2. '   ' → logprob: -1.2638826370239258
    3. ' pre' → logprob: -2.263882637023926
    4. 'return' → logprob: -4.388882637023926
    5. ' return' → logprob: -5.888882637023926
    6. '	pre' → logprob: -9.388882637023926
    7. '
' → logprob: -10.263882637023926
    8. '+' → logprob: -12.388882637023926
    9. '       ' → logprob: -12.638882637023926
    10. '(pre' → logprob: -12.638882637023926

Token 174: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.684157026233152e-05
    2. '_' → logprob: -9.500077247619629
    3. ' _' → logprob: -13.375077247619629
    4. '_
' → logprob: -16.875076293945312
    5. '=_' → logprob: -17.000076293945312
    6. 'c' → logprob: -17.250076293945312
    7. '=' → logprob: -17.375076293945312
    8. ')_' → logprob: -17.750076293945312
    9. '_f' → logprob: -18.000076293945312
    10. ''_' → logprob: -18.125076293945312

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. '=c' → logprob: -15.325940132141113
    4. ',' → logprob: -15.700940132141113
    5. '＝' → logprob: -17.700939178466797
    6. ' ' → logprob: -17.700939178466797
    7. ' +=' → logprob: -19.450939178466797
    8. ')' → logprob: -19.575939178466797
    9. 'c' → logprob: -19.575939178466797
    10. '=
' → logprob: -20.075939178466797

Token 176: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1269282102584839
    2. ' c' → logprob: -2.1269283294677734
    3. '	c' → logprob: -16.626928329467773
    4. '_c' → logprob: -17.626928329467773
    5. ' ' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.126928329467773
    7. ')c' → logprob: -18.751928329467773
    8. '$c' → logprob: -19.751928329467773
    9. '.c' → logprob: -20.501928329467773
    10. '(c' → logprob: -20.751928329467773

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049713656306266785
    2. ',' → logprob: -3.549713611602783
    3. ' return' → logprob: -4.424713611602783
    4. '	return' → logprob: -4.924713611602783
    5. 'return' → logprob: -7.924713611602783
    6. ',
' → logprob: -9.549714088439941
    7. ' ,' → logprob: -10.674714088439941
    8. '```' → logprob: -10.799714088439941
    9. '<|end|>' → logprob: -11.174714088439941
    10. '\t' → logprob: -11.549714088439941

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002451638225466013
    2. ' return' → logprob: -6.377451419830322
    3. 'return' → logprob: -7.377451419830322
    4. '	return' → logprob: -9.00245189666748
    5. '```' → logprob: -14.87745189666748
    6. ':return' → logprob: -15.50245189666748
    7. '{return' → logprob: -16.502450942993164
    8. '   ' → logprob: -16.627450942993164
    9. 'Return' → logprob: -16.752450942993164
    10. 'eturn' → logprob: -17.002450942993164

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09808120131492615
    2. '   ' → logprob: -2.848081111907959
    3. ' return' → logprob: -3.348081111907959
    4. '	return' → logprob: -8.348081588745117
    5. ',' → logprob: -9.473081588745117
    6. ':return' → logprob: -13.473081588745117
    7. ',
' → logprob: -13.973081588745117
    8. '_return' → logprob: -15.348081588745117
    9. '{return' → logprob: -15.348081588745117
    10. '```' → logprob: -15.473081588745117

Token 180: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005537479883059859
    2. ' count' → logprob: -7.500553607940674
    3. '(count' → logprob: -14.125554084777832
    4. ' ' → logprob: -17.875553131103516
    5. '[count' → logprob: -18.250553131103516
    6. 'c' → logprob: -18.875553131103516
    7. '   ' → logprob: -19.125553131103516
    8. '	count' → logprob: -19.375553131103516
    9. '  ' → logprob: -20.125553131103516
    10. 'counts' → logprob: -21.375553131103516

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017958469688892365
    2. ' ,' → logprob: -6.626795768737793
    3. ' pre' → logprob: -7.876795768737793
    4. ' c' → logprob: -10.251795768737793
    5. ' ' → logprob: -10.751795768737793
    6. 'pre' → logprob: -11.001795768737793
    7. ',c' → logprob: -12.001795768737793
    8. 'c' → logprob: -12.626795768737793
    9. '<|end|>' → logprob: -13.126795768737793
    10. '(pre' → logprob: -13.501795768737793

Token 182: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.07889199256896973
    2. ' pre' → logprob: -2.5788919925689697
    3. '(pre' → logprob: -13.45389175415039
    4. '	pre' → logprob: -15.20389175415039
    5. '<|end|>' → logprob: -15.32889175415039
    6. 'space' → logprob: -16.70389175415039
    7. 'pread' → logprob: -16.82889175415039
    8. 'preh' → logprob: -16.95389175415039
    9. 'c' → logprob: -17.07889175415039
    10. '_pre' → logprob: -17.32889175415039

Token 183: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1875571544806007e-05
    2. 'c' → logprob: -11.375011444091797
    3. '_' → logprob: -15.625011444091797
    4. ' _' → logprob: -15.750011444091797
    5. '```' → logprob: -18.750011444091797
    6. 's' → logprob: -19.125011444091797
    7. 't' → logprob: -19.625011444091797
    8. '\' → logprob: -19.750011444091797
    9. '-c' → logprob: -19.750011444091797
    10. '_char' → logprob: -19.750011444091797

Token 184: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5536708831787109
    2. ',' → logprob: -1.178670883178711
    3. ' t' → logprob: -2.428670883178711
    4. ',t' → logprob: -3.553670883178711
    5. '	t' → logprob: -7.553670883178711
    6. '<|end|>' → logprob: -9.303670883178711
    7. ' ,' → logprob: -9.803670883178711
    8. '_t' → logprob: -11.553670883178711
    9. '   ' → logprob: -11.928670883178711
    10. '(t' → logprob: -12.553670883178711

Token 185: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1269282102584839
    2. ' t' → logprob: -2.1269283294677734
    3. '	t' → logprob: -16.626928329467773
    4. '`t' → logprob: -17.376928329467773
    5. ' ' → logprob: -18.751928329467773
    6. ' ' → logprob: -19.501928329467773
    7. '[t' → logprob: -19.876928329467773
    8. '   ' → logprob: -20.001928329467773
    9. '_t' → logprob: -20.001928329467773
    10. '(t' → logprob: -20.626928329467773

Token 186: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004240011621732265
    2. ' def' → logprob: -8.6254243850708
    3. '<|end|>' → logprob: -9.0004243850708
    4. '```' → logprob: -10.0004243850708
    5. 'final' → logprob: -10.5004243850708
    6. ')' → logprob: -11.7504243850708
    7. '
' → logprob: -12.1254243850708
    8. '[' → logprob: -12.2504243850708
    9. 'count' → logprob: -12.6254243850708
    10. 'Finalize' → logprob: -12.7504243850708

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004718364682048559
    2. 'final' → logprob: -5.37971830368042
    3. 'count' → logprob: -9.879718780517578
    4. '_finalize' → logprob: -11.504718780517578
    5. '```' → logprob: -11.504718780517578
    6. ' def' → logprob: -11.754718780517578
    7. 'Finalize' → logprob: -12.129718780517578
    8. '#' → logprob: -12.629718780517578
    9. '
' → logprob: -13.504718780517578
    10. ' finalize' → logprob: -13.754718780517578

Token 188: ' finalize' (ID: 97196)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.016079887747764587
    2. ' finalize' → logprob: -4.141079902648926
    3. ' final' → logprob: -10.266079902648926
    4. 'def' → logprob: -12.516079902648926
    5. '_finalize' → logprob: -13.766079902648926
    6. 'group' → logprob: -13.891079902648926
    7. 'Finalize' → logprob: -14.141079902648926
    8. 'f' → logprob: -14.391079902648926
    9. 'fin' → logprob: -14.516079902648926
    10. 'fix' → logprob: -15.016079902648926

Token 189: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -2.696889623621246e-06
    2. '_groups' → logprob: -13.00000286102295
    3. '_final' → logprob: -16.375001907348633
    4. 'def' → logprob: -16.500001907348633
    5. '_g' → logprob: -17.000001907348633
    6. '_count' → logprob: -17.500001907348633
    7. '_' → logprob: -17.750001907348633
    8. 'group' → logprob: -18.125001907348633
    9. '_def' → logprob: -18.250001907348633
    10. ' _' → logprob: -18.250001907348633

Token 190: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -6.289473822107539e-05
    2. '(' → logprob: -10.000062942504883
    3. ' (' → logprob: -11.000062942504883
    4. '(cnt' → logprob: -15.125062942504883
    5. 'def' → logprob: -16.250062942504883
    6. '(
' → logprob: -17.000062942504883
    7. '[count' → logprob: -17.125062942504883
    8. '=count' → logprob: -17.500062942504883
    9. '(code' → logprob: -17.750062942504883
    10. '(counter' → logprob: -17.750062942504883

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.941161776310764e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',t' → logprob: -12.500039100646973
    4. ',
' → logprob: -15.875039100646973
    5. ',count' → logprob: -16.75004005432129
    6. 't' → logprob: -17.00004005432129
    7. '   ' → logprob: -17.37504005432129
    8. ',c' → logprob: -18.12504005432129
    9. '_,' → logprob: -18.62504005432129
    10. ' t' → logprob: -18.62504005432129

Token 192: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141343772411346
    2. ' t' → logprob: -1.7014133930206299
    3. ')' → logprob: -16.951414108276367
    4. ' ' → logprob: -17.201414108276367
    5. '   ' → logprob: -17.576414108276367
    6. '	t' → logprob: -17.951414108276367
    7. '`t' → logprob: -18.326414108276367
    8. ')t' → logprob: -18.701414108276367
    9. 'count' → logprob: -18.826414108276367
    10. 's' → logprob: -19.576414108276367

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25193992257118225
    2. '):
' → logprob: -1.5019398927688599
    3. '):
' → logprob: -11.87693977355957
    4. ')' → logprob: -13.00193977355957
    5. '):

' → logprob: -14.50193977355957
    6. '   ' → logprob: -14.62693977355957
    7. ' ):' → logprob: -15.12693977355957
    8. ':' → logprob: -15.37693977355957
    9. ' ):
' → logprob: -16.87693977355957
    10. ',' → logprob: -17.37693977355957

Token 194: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15073253214359283
    2. 't' → logprob: -2.1507325172424316
    3. '   ' → logprob: -3.7757325172424316
    4. ' if' → logprob: -7.525732517242432
    5. '```' → logprob: -10.65073299407959
    6. '`t' → logprob: -10.77573299407959
    7. ' t' → logprob: -11.40073299407959
    8. 'def' → logprob: -12.15073299407959
    9. '	if' → logprob: -13.77573299407959
    10. ' ' → logprob: -14.52573299407959

Token 195: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2039773166179657
    2. 't' (adapté à ' t') → logprob: -1.703977346420288
    3. '   ' → logprob: -6.578977108001709
    4. ' if' → logprob: -6.828977108001709
    5. ' t' → logprob: -9.828977584838867
    6. 'def' → logprob: -11.078977584838867
    7. '`t' → logprob: -11.578977584838867
    8. '```' → logprob: -12.078977584838867
    9. '#' → logprob: -13.453977584838867
    10. '	if' → logprob: -14.203977584838867

Token 196: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007188651943579316
    2. '.' → logprob: -7.25071907043457
    3. 'append' → logprob: -11.75071907043457
    4. '.app' → logprob: -14.62571907043457
    5. '[-' → logprob: -15.87571907043457
    6. '.ap' → logprob: -16.00071907043457
    7. '.extend' → logprob: -16.25071907043457
    8. ' .' → logprob: -16.37571907043457
    9. '.Append' → logprob: -17.12571907043457
    10. ' append' → logprob: -18.25071907043457

Token 197: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.375000953674316
    3. 'count' → logprob: -14.875000953674316
    4. '[count' → logprob: -19.625001907348633
    5. ' (' → logprob: -20.000001907348633
    6. '=count' → logprob: -20.000001907348633
    7. '<count' → logprob: -20.875001907348633
    8. '$count' → logprob: -21.000001907348633
    9. ' count' → logprob: -21.375001907348633
    10. '	count' → logprob: -21.625001907348633

Token 198: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')return' → logprob: -18.500001907348633
    5. ')

' → logprob: -18.750001907348633
    6. ')}' → logprob: -19.125001907348633
    7. ')#' → logprob: -19.375001907348633
    8. '<|end|>' → logprob: -19.625001907348633
    9. '}' → logprob: -19.875001907348633
    10. '）' → logprob: -20.125001907348633

Token 199: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003084905445575714
    2. 'if' → logprob: -5.878085136413574
    3. 's' → logprob: -8.753085136413574
    4. 'for' → logprob: -9.253085136413574
    5. '```' → logprob: -11.503085136413574
    6. 'result' → logprob: -12.003085136413574
    7. '#' → logprob: -12.253085136413574
    8. 'print' → logprob: -12.628085136413574
    9. '
' → logprob: -14.628085136413574
    10. 'count' → logprob: -15.378085136413574

Token 200: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4175693392753601
    2. 'main' → logprob: -2.042569398880005
    3. 'def' → logprob: -2.292569398880005
    4. ' def' → logprob: -2.292569398880005
    5. ' run' → logprob: -5.292569160461426
    6. ' solve' → logprob: -6.542569160461426
    7. 'solve' → logprob: -7.167569160461426
    8. 'run' → logprob: -8.042569160461426
    9. 'count' → logprob: -8.167569160461426
    10. ' count' → logprob: -8.292569160461426

Token 201: '_half' (ID: 105284)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5995222926139832
    2. '_counts' → logprob: -1.224522352218628
    3. '_group' → logprob: -2.599522352218628
    4. '_list' → logprob: -3.724522352218628
    5. '_groups' → logprob: -3.974522352218628
    6. '(t' → logprob: -4.599522113800049
    7. '(' → logprob: -4.599522113800049
    8. '_pairs' → logprob: -5.974522113800049
    9. '_numbers' → logprob: -6.224522113800049
    10. '_t' → logprob: -6.349522113800049

Token 202: '_groups' (ID: 50609)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.9803583025932312
    2. '(s' → logprob: -1.480358362197876
    3. '(lst' → logprob: -2.105358362197876
    4. 's' → logprob: -2.855358362197876
    5. '_counts' → logprob: -2.855358362197876
    6. '_groups' → logprob: -3.605358362197876
    7. '_list' → logprob: -3.730358362197876
    8. '(l' → logprob: -3.980358362197876
    9. '(list' → logprob: -4.480358123779297
    10. '(count' → logprob: -4.855358123779297

Token 203: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.004963458515703678
    2. '(s' → logprob: -5.504963397979736
    3. '(count' → logprob: -8.004963874816895
    4. '(' → logprob: -8.379963874816895
    5. '(group' → logprob: -8.879963874816895
    6. '(groups' → logprob: -9.379963874816895
    7. '(g' → logprob: -9.879963874816895
    8. ' (' → logprob: -11.629963874816895
    9. '(k' → logprob: -12.129963874816895
    10. '(l' → logprob: -12.129963874816895

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07028251141309738
    2. ',' → logprob: -2.945282459259033
    3. '):
' → logprob: -4.195282459259033
    4. ')' → logprob: -9.445282936096191
    5. '):
' → logprob: -9.445282936096191
    6. ':' → logprob: -11.070282936096191
    7. ' ):' → logprob: -11.570282936096191
    8. '   ' → logprob: -11.695282936096191
    9. 's' → logprob: -12.070282936096191
    10. ',t' → logprob: -12.695282936096191

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9186701774597168
    2. 'total' → logprob: -1.4186701774597168
    3. 'return' → logprob: -1.5436701774597168
    4. 'res' → logprob: -2.918670177459717
    5. 's' → logprob: -3.418670177459717
    6. 'result' → logprob: -3.543670177459717
    7. ' return' → logprob: -4.918670177459717
    8. ' total' → logprob: -5.168670177459717
    9. 'half' → logprob: -5.293670177459717
    10. ' res' → logprob: -5.418670177459717

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10131057351827621
    2. 'total' → logprob: -2.8513104915618896
    3. '   ' → logprob: -4.726310729980469
    4. 'res' → logprob: -4.851310729980469
    5. 'n' → logprob: -4.976310729980469
    6. 's' → logprob: -5.351310729980469
    7. 'result' → logprob: -5.476310729980469
    8. ' return' → logprob: -5.726310729980469
    9. 'half' → logprob: -6.851310729980469
    10. 'def' → logprob: -7.226310729980469

Token 207: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.020885303616523743
    2. ' sum' → logprob: -3.8958852291107178
    3. '(sum' → logprob: -8.020885467529297
    4. 't' → logprob: -12.270885467529297
    5. '   ' → logprob: -12.395885467529297
    6. ' ' → logprob: -13.645885467529297
    7. ' (' → logprob: -13.645885467529297
    8. '
' → logprob: -14.145885467529297
    9. '	sum' → logprob: -14.395885467529297
    10. '(' → logprob: -14.520885467529297

Token 208: '(i' (ID: 3649)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0020669952500611544
    2. '(' → logprob: -6.8770670890808105
    3. '([' → logprob: -7.3770670890808105
    4. '(x' → logprob: -8.377066612243652
    5. 't' → logprob: -9.502066612243652
    6. '((' → logprob: -10.127066612243652
    7. '(i' → logprob: -10.627066612243652
    8. '(count' → logprob: -11.127066612243652
    9. '(
' → logprob: -11.877066612243652
    10. '(c' → logprob: -12.627066612243652

Token 209: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.08862881362438202
    2. ' //' → logprob: -3.3386287689208984
    3. 'for' → logprob: -3.5886287689208984
    4. ' for' → logprob: -3.8386287689208984
    5. 't' → logprob: -9.338628768920898
    6. 'i' → logprob: -10.588628768920898
    7. '#' → logprob: -10.963628768920898
    8. ' ' → logprob: -11.213628768920898
    9. '[' → logprob: -12.213628768920898
    10. '   ' → logprob: -12.213628768920898

Token 210: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.125261306762695
    4. '  ' → logprob: -16.625261306762695
    5. '3' → logprob: -17.062761306762695
    6. 't' → logprob: -17.437761306762695
    7. '202' → logprob: -17.562761306762695
    8. '```' → logprob: -18.000261306762695
    9. '1' → logprob: -18.437761306762695
    10. 'k' → logprob: -18.625261306762695

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.47626737493556e-05
    2. ' ' → logprob: -10.37503433227539
    3. '3' → logprob: -13.37503433227539
    4. '1' → logprob: -14.62503433227539
    5. 'k' → logprob: -14.62503433227539
    6. '   ' → logprob: -15.18753433227539
    7. '
' → logprob: -15.93753433227539
    8. '```' → logprob: -15.93753433227539
    9. '4' → logprob: -16.25003433227539
    10. '  ' → logprob: -16.31253433227539

Token 212: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006828324869275093
    2. 'for' → logprob: -5.006828308105469
    3. ' t' → logprob: -9.631828308105469
    4. ' ' → logprob: -10.131828308105469
    5. ')' → logprob: -12.506828308105469
    6. '   ' → logprob: -13.631828308105469
    7. 't' → logprob: -13.631828308105469
    8. '	for' → logprob: -14.006828308105469
    9. '  ' → logprob: -14.756828308105469
    10. ',' → logprob: -17.00682830810547

Token 213: ' i' (ID: 575)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.06206078827381134
    2. 't' → logprob: -2.812060832977295
    3. ' i' → logprob: -9.687060356140137
    4. 'i' → logprob: -10.437060356140137
    5. ' ' → logprob: -14.062060356140137
    6. '	t' → logprob: -14.687060356140137
    7. '   ' → logprob: -15.562060356140137
    8. '  ' → logprob: -16.562061309814453
    9. '`t' → logprob: -16.562061309814453
    10. ' ' → logprob: -16.687061309814453

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013360334560275078
    2. 'in' → logprob: -4.638360500335693
    3. ' t' → logprob: -6.263360500335693
    4. 't' → logprob: -6.388360500335693
    5. 's' → logprob: -12.388360023498535
    6. ' ' → logprob: -12.763360023498535
    7. ')' → logprob: -13.138360023498535
    8. 'i' → logprob: -15.013360023498535
    9. '  ' → logprob: -15.013360023498535
    10. ',' → logprob: -15.013360023498535

Token 215: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3868718445301056
    2. ' t' → logprob: -1.1368718147277832
    3. '`t' → logprob: -14.386872291564941
    4. '	t' → logprob: -15.761872291564941
    5. '(t' → logprob: -17.761871337890625
    6. ' ' → logprob: -17.761871337890625
    7. ')t' → logprob: -17.761871337890625
    8. '   ' → logprob: -18.011871337890625
    9. '_t' → logprob: -18.136871337890625
    10. '[t' → logprob: -18.386871337890625

Token 216: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')t' → logprob: -15.00000286102295
    4. ')
' → logprob: -15.37500286102295
    5. '))' → logprob: -17.625001907348633
    6. ')}' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ')return' → logprob: -18.875001907348633
    9. 't' → logprob: -19.125001907348633
    10. ')`' → logprob: -19.375001907348633

Token 217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.173704271830502e-06
    2. '#' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -14.25000286102295
    4. '```' → logprob: -15.00000286102295
    5. 's' → logprob: -15.62500286102295
    6. ' def' → logprob: -16.250003814697266
    7. 'The' → logprob: -18.125003814697266
    8. '
' → logprob: -18.250003814697266
    9. '<|end|>' → logprob: -18.500003814697266
    10. '\' → logprob: -18.875003814697266

Token 218: ' is' (ID: 382)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005786700639873743
    2. 'solve' → logprob: -6.005786895751953
    3. ' main' → logprob: -6.630786895751953
    4. 'count' → logprob: -6.880786895751953
    5. 'max' → logprob: -7.505786895751953
    6. 'process' → logprob: -9.130786895751953
    7. 'calculate' → logprob: -9.255786895751953
    8. 'combine' → logprob: -9.880786895751953
    9. 'def' → logprob: -9.880786895751953
    10. 'compute' → logprob: -10.380786895751953

Token 219: '_single' (ID: 46053)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.5846971273422241
    2. '_double' → logprob: -1.9596971273422241
    3. '_possible' → logprob: -2.0846972465515137
    4. '_repeat' → logprob: -2.9596972465515137
    5. '_same' → logprob: -3.8346972465515137
    6. '_c' → logprob: -4.084697246551514
    7. '_k' → logprob: -4.209697246551514
    8. '_v' → logprob: -4.584697246551514
    9. '_re' → logprob: -5.084697246551514
    10. '_s' → logprob: -5.084697246551514

Token 220: '_group' (ID: 15990)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.11222279071807861
    2. '_group' → logprob: -2.737222671508789
    3. '_run' → logprob: -4.612222671508789
    4. '(s' → logprob: -4.862222671508789
    5. '_word' → logprob: -4.862222671508789
    6. '_string' → logprob: -5.362222671508789
    7. '_block' → logprob: -6.112222671508789
    8. '_letter' → logprob: -6.362222671508789
    9. '_character' → logprob: -6.487222671508789
    10. '_repeat' → logprob: -6.487222671508789

Token 221: '(t' (ID: 2025)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.026532620191574097
    2. '(t' → logprob: -3.6515326499938965
    3. '(' → logprob: -9.276532173156738
    4. '(group' → logprob: -10.151532173156738
    5. '(length' → logprob: -10.901532173156738
    6. '(line' → logprob: -11.401532173156738
    7. '(count' → logprob: -11.401532173156738
    8. '(size' → logprob: -11.526532173156738
    9. '(c' → logprob: -11.651532173156738
    10. '(len' → logprob: -11.901532173156738

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036152780521661043
    2. '):
' → logprob: -5.628615379333496
    3. ')' → logprob: -11.378615379333496
    4. '):

' → logprob: -13.128615379333496
    5. ' ):' → logprob: -13.878615379333496
    6. '):
' → logprob: -15.253615379333496
    7. ':' → logprob: -15.628615379333496
    8. '   ' → logprob: -16.12861442565918
    9. ',' → logprob: -16.37861442565918
    10. '[]):' → logprob: -16.75361442565918

Token 223: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0518602579832077
    2. '   ' → logprob: -3.0518603324890137
    3. 'def' → logprob: -6.301860332489014
    4. ' return' → logprob: -6.551860332489014
    5. '	return' → logprob: -12.176859855651855
    6. '
' → logprob: -13.301859855651855
    7. ' ' → logprob: -16.301860809326172
    8. '  ' → logprob: -16.676860809326172
    9. 'len' → logprob: -16.926860809326172
    10. '```' → logprob: -16.926860809326172

Token 224: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005076381494291127
    2. 'len' → logprob: -8.000507354736328
    3. ' return' → logprob: -8.750507354736328
    4. 'def' → logprob: -11.250507354736328
    5. '
' → logprob: -14.625507354736328
    6. '   ' → logprob: -15.000507354736328
    7. ' len' → logprob: -17.750507354736328
    8. '(len' → logprob: -19.125507354736328
    9. '```' → logprob: -19.500507354736328
    10. '	return' → logprob: -19.625507354736328

Token 225: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000158842682139948
    2. ' len' → logprob: -8.75015926361084
    3. '(len' → logprob: -14.87515926361084
    4. '[len' → logprob: -19.875158309936523
    5. '   ' → logprob: -20.125158309936523
    6. 'sum' → logprob: -20.375158309936523
    7. ' ' → logprob: -21.000158309936523
    8. '	len' → logprob: -21.250158309936523
    9. 'length' → logprob: -21.375158309936523
    10. '
' → logprob: -21.500158309936523

Token 226: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 't' → logprob: -16.25
    4. ' (' → logprob: -17.0
    5. '(s' → logprob: -21.875
    6. '	t' → logprob: -22.0
    7. '(
' → logprob: -22.5
    8. ' t' → logprob: -23.0
    9. '```' → logprob: -23.375
    10. '(T' → logprob: -23.625

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6934863924980164
    2. '==' → logprob: -1.0684864521026611
    3. ' ==' → logprob: -1.9434864521026611
    4. ')==' → logprob: -4.318486213684082
    5. ' )' → logprob: -10.068486213684082
    6. '<=' → logprob: -10.943486213684082
    7. '()' → logprob: -11.068486213684082
    8. '()==' → logprob: -11.068486213684082
    9. ')<=' → logprob: -12.068486213684082
    10. '=' → logprob: -12.443486213684082

Token 228: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006720586679875851
    2. ' ==' → logprob: -5.006720542907715
    3. '<=' → logprob: -12.756720542907715
    4. '1' → logprob: -13.881720542907715
    5. '=' → logprob: -14.506720542907715
    6. '===' → logprob: -15.006720542907715
    7. '()==' → logprob: -15.506720542907715
    8. '```' → logprob: -15.631720542907715
    9. ')==' → logprob: -16.63172149658203
    10. '==
' → logprob: -17.00672149658203

Token 229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '0' → logprob: -17.000024795532227
    4. '```' → logprob: -18.375024795532227
    5. '   ' → logprob: -18.625024795532227
    6. '１' → logprob: -19.875024795532227
    7. '۱' → logprob: -20.187524795532227
    8. ' ' → logprob: -20.437524795532227
    9. '  ' → logprob: -20.937524795532227
    10. 't' → logprob: -21.250024795532227

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.875
    3. '0' → logprob: -16.0
    4. '```' → logprob: -16.375
    5. 'def' → logprob: -18.0625
    6. '<|end|>' → logprob: -18.4375
    7. '=' → logprob: -18.875
    8. '۱' → logprob: -19.25
    9. 't' → logprob: -19.5625
    10. 'len' → logprob: -19.625

Token 231: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.935296834039036e-06
    2. '<|end|>' → logprob: -13.62500286102295
    3. '
' → logprob: -14.00000286102295
    4. ' def' → logprob: -15.12500286102295
    5. '```' → logprob: -15.25000286102295
    6. '\' → logprob: -16.125003814697266
    7. '<|end|>' → logprob: -17.125003814697266
    8. 'k' → logprob: -17.375003814697266
    9. '#' → logprob: -17.375003814697266
    10. ':def' → logprob: -17.375003814697266

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.625
    3. '#' → logprob: -16.0
    4. ' def' → logprob: -17.5
    5. 's' → logprob: -17.75
    6. '<|end|>' → logprob: -17.875
    7. '<|end|>' → logprob: -19.375
    8. 'ndef' → logprob: -19.875
    9. 't' → logprob: -20.25
    10. '...' → logprob: -20.625

Token 233: ' merge' (ID: 20345)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0516815260052681
    2. ' main' → logprob: -3.9266815185546875
    3. 'solve' → logprob: -4.3016815185546875
    4. 'count' → logprob: -4.8016815185546875
    5. 'combine' → logprob: -6.1766815185546875
    6. 'max' → logprob: -6.1766815185546875
    7. 'process' → logprob: -6.6766815185546875
    8. 'calculate' → logprob: -6.6766815185546875
    9. 'can' → logprob: -7.4266815185546875
    10. 'repeat' → logprob: -7.4266815185546875

Token 234: '_' (ID: 62)
  Prédit: '_groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.00510793412104249
    2. '_counts' → logprob: -5.755107879638672
    3. '_group' → logprob: -6.755107879638672
    4. '_two' → logprob: -8.505107879638672
    5. '_first' → logprob: -9.505107879638672
    6. '_' → logprob: -9.505107879638672
    7. '(_' → logprob: -9.505107879638672
    8. '_chars' → logprob: -10.130107879638672
    9. '_double' → logprob: -10.505107879638672
    10. '(t' → logprob: -10.505107879638672

Token 235: 'ends' (ID: 1847)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.008367761969566345
    2. 'adj' → logprob: -6.133367538452148
    3. 'counts' → logprob: -6.508367538452148
    4. 'group' → logprob: -6.633367538452148
    5. 'first' → logprob: -6.633367538452148
    6. '_groups' → logprob: -7.633367538452148
    7. 'last' → logprob: -7.758367538452148
    8. 'ends' → logprob: -8.258367538452148
    9. 't' → logprob: -8.383367538452148
    10. 'count' → logprob: -9.133367538452148

Token 236: '_if' (ID: 25821)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.049712639302015305
    2. '(s' → logprob: -3.049712657928467
    3. '(' → logprob: -7.049712657928467
    4. ' (' → logprob: -8.799712181091309
    5. '(_' → logprob: -9.674712181091309
    6. '(a' → logprob: -11.299712181091309
    7. '((' → logprob: -11.924712181091309
    8. '_(' → logprob: -12.299712181091309
    9. '(def' → logprob: -12.549712181091309
    10. '(k' → logprob: -12.674712181091309

Token 237: '_needed' (ID: 148421)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.39716678857803345
    2. '_possible' → logprob: -2.1471667289733887
    3. '_same' → logprob: -2.3971667289733887
    4. '_' → logprob: -3.2721667289733887
    5. '(s' → logprob: -3.7721667289733887
    6. '_equal' → logprob: -3.8971667289733887
    7. '_needed' → logprob: -4.397166728973389
    8. '_first' → logprob: -4.397166728973389
    9. '_(' → logprob: -5.772166728973389
    10. '_last' → logprob: -5.897166728973389

Token 238: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.005389091558754444
    2. '(s' → logprob: -5.255389213562012
    3. ' (' → logprob: -9.255389213562012
    4. '(' → logprob: -9.755389213562012
    5. '(def' → logprob: -14.630389213562012
    6. '():' → logprob: -15.130389213562012
    7. '(T' → logprob: -15.255389213562012
    8. '((' → logprob: -15.630389213562012
    9. '(a' → logprob: -15.755389213562012
    10. '(
' → logprob: -16.380388259887695

Token 239: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19336991012096405
    2. ',' → logprob: -1.8183698654174805
    3. '):
' → logprob: -4.3183698654174805
    4. ')' → logprob: -9.81836986541748
    5. ',t' → logprob: -9.81836986541748
    6. ' ):' → logprob: -9.94336986541748
    7. ' ,' → logprob: -10.81836986541748
    8. '   ' → logprob: -11.06836986541748
    9. '):
' → logprob: -12.06836986541748
    10. ':' → logprob: -12.44336986541748

Token 240: ' s' (ID: 265)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6738445162773132
    2. ' first' → logprob: -1.548844575881958
    3. 's' → logprob: -1.673844575881958
    4. ' s' → logprob: -2.673844575881958
    5. 'k' → logprob: -4.173844337463379
    6. ' k' → logprob: -5.548844337463379
    7. 't' → logprob: -7.798844337463379
    8. 'last' → logprob: -8.173844337463379
    9. 'f' → logprob: -8.548844337463379
    10. 'count' → logprob: -8.548844337463379

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07085982710123062
    2. '):
' → logprob: -3.070859909057617
    3. ',' → logprob: -3.820859909057617
    4. ')' → logprob: -9.445859909057617
    5. ' ):' → logprob: -11.070859909057617
    6. '):

' → logprob: -11.695859909057617
    7. ':' → logprob: -12.570859909057617
    8. '):
' → logprob: -12.570859909057617
    9. '   ' → logprob: -12.945859909057617
    10. ' ,' → logprob: -13.320859909057617

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005468182265758514
    2. ' if' → logprob: -5.255468368530273
    3. 'if' → logprob: -8.380468368530273
    4. '```' → logprob: -13.130468368530273
    5. '   ' → logprob: -14.130468368530273
    6. '	if' → logprob: -14.380468368530273
    7. '    ' → logprob: -15.005468368530273
    8. ' n' → logprob: -15.130468368530273
    9. ',' → logprob: -15.130468368530273
    10. '    
' → logprob: -15.630468368530273

Token 243: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10112246870994568
    2. '   ' → logprob: -2.6011223793029785
    3. 'first' (adapté à ' first') → logprob: -3.9761223793029785
    4. ' if' → logprob: -5.8511223793029785
    5. ' first' → logprob: -8.226122856140137
    6. 'n' → logprob: -10.351122856140137
    7. ' ' → logprob: -10.726122856140137
    8. 'last' → logprob: -10.976122856140137
    9. '```' → logprob: -13.226122856140137
    10. 'count' → logprob: -13.226122856140137

Token 244: '_char' (ID: 23398)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5548152327537537
    2. '_char' → logprob: -1.6798152923583984
    3. ' =' → logprob: -2.0548152923583984
    4. '_c' → logprob: -3.5548152923583984
    5. '=' → logprob: -3.5548152923583984
    6. ',' → logprob: -3.5548152923583984
    7. '_group' → logprob: -4.929815292358398
    8. 'count' → logprob: -5.179815292358398
    9. '_' → logprob: -5.804815292358398
    10. '_len' → logprob: -6.054815292358398

Token 245: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5306270718574524
    2. '=' → logprob: -0.9056270718574524
    3. ',' → logprob: -4.905627250671387
    4. '==' → logprob: -10.405627250671387
    5. ' ==' → logprob: -11.030627250671387
    6. '=t' → logprob: -11.405627250671387
    7. ' ,' → logprob: -12.655627250671387
    8. '=s' → logprob: -12.780627250671387
    9. ' ' → logprob: -13.030627250671387
    10. '   ' → logprob: -13.655627250671387

Token 246: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.31332477927207947
    2. 'last' → logprob: -1.3133248090744019
    3. '   ' → logprob: -10.063324928283691
    4. ' ' → logprob: -12.438324928283691
    5. ' =' → logprob: -12.563324928283691
    6. '_last' → logprob: -12.688324928283691
    7. '=' → logprob: -12.813324928283691
    8. '  ' → logprob: -13.313324928283691
    9. 'second' → logprob: -13.563324928283691
    10. '	last' → logprob: -13.688324928283691

Token 247: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.009145212359726429
    2. '_' → logprob: -5.509145259857178
    3. '=' → logprob: -5.884145259857178
    4. ' =' → logprob: -6.509145259857178
    5. 'char' → logprob: -7.884145259857178
    6. '_chars' → logprob: -8.63414478302002
    7. '_=' → logprob: -8.88414478302002
    8. '=_' → logprob: -10.13414478302002
    9. '_c' → logprob: -11.00914478302002
    10. 'Char' → logprob: -12.00914478302002

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759817957878113
    2. ' =' → logprob: -0.8259817957878113
    3. ',' → logprob: -10.575982093811035
    4. '=s' → logprob: -11.825982093811035
    5. 's' → logprob: -12.075982093811035
    6. 't' → logprob: -13.075982093811035
    7. ' ' → logprob: -13.825982093811035
    8. '   ' → logprob: -15.200982093811035
    9. ' s' → logprob: -16.57598114013672
    10. 'equal' → logprob: -16.82598114013672

Token 249: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0059455097652971745
    2. ' s' → logprob: -5.130945682525635
    3. 'init' → logprob: -11.380945205688477
    4. '   ' → logprob: -13.005945205688477
    5. ' ' → logprob: -13.505945205688477
    6. '  ' → logprob: -14.630945205688477
    7. ' init' → logprob: -14.880945205688477
    8. '(s' → logprob: -15.005945205688477
    9. '
' → logprob: -15.380945205688477
    10. '`s' → logprob: -15.880945205688477

Token 250: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.141186450899113e-05
    2. '0' → logprob: -11.250020980834961
    3. 'def' → logprob: -12.625020980834961
    4. ' [' → logprob: -13.375020980834961
    5. ' ' → logprob: -13.875020980834961
    6. '[-' → logprob: -14.375020980834961
    7. '   ' → logprob: -14.500020980834961
    8. 's' → logprob: -15.125020980834961
    9. '
' → logprob: -15.125020980834961
    10. '=' → logprob: -15.625020980834961

Token 251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014180023572407663
    2. '-' → logprob: -9.250142097473145
    3. ' ' → logprob: -10.375142097473145
    4. '[' → logprob: -11.250142097473145
    5. '
' → logprob: -14.375142097473145
    6. '```' → logprob: -15.750142097473145
    7. '(' → logprob: -16.000141143798828
    8. '   ' → logprob: -16.000141143798828
    9. ':' → logprob: -16.125141143798828
    10. ' -' → logprob: -16.562641143798828

Token 252: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -4.8828707804204896e-05
    2. ' ],' → logprob: -10.500048637390137
    3. ']' → logprob: -10.875048637390137
    4. ':],' → logprob: -13.250048637390137
    5. '-' → logprob: -16.125049591064453
    6. ''],' → logprob: -16.250049591064453
    7. ',' → logprob: -16.250049591064453
    8. '],
' → logprob: -16.625049591064453
    9. ' ' → logprob: -17.125049591064453
    10. ']
' → logprob: -17.125049591064453

Token 253: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750604182481766
    2. ' s' → logprob: -3.5297505855560303
    3. '   ' → logprob: -15.77975082397461
    4. ' ' → logprob: -17.02975082397461
    5. '-' → logprob: -18.15475082397461
    6. '	s' → logprob: -18.27975082397461
    7. '`s' → logprob: -18.77975082397461
    8. '  ' → logprob: -18.90475082397461
    9. '-s' → logprob: -19.15475082397461
    10. '_s' → logprob: -20.02975082397461

Token 254: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -12.375004768371582
    3. '[' → logprob: -16.625003814697266
    4. '```' → logprob: -19.750003814697266
    5. ' [-' → logprob: -20.125003814697266
    6. '][-' → logprob: -20.375003814697266
    7. '1' → logprob: -21.125003814697266
    8. '[
' → logprob: -21.250003814697266
    9. '`' → logprob: -22.000003814697266
    10. '
' → logprob: -22.000003814697266

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ']' → logprob: -15.75
    3. ' ' → logprob: -15.875
    4. '-' → logprob: -17.125
    5. '```' → logprob: -19.125
    6. '])' → logprob: -19.1875
    7. '１' → logprob: -19.5
    8. '(' → logprob: -20.3125
    9. '   ' → logprob: -20.375
    10. '2' → logprob: -20.5625

Token 256: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3874875605106354
    2. ']' → logprob: -1.137487530708313
    3. ']

' → logprob: -7.637487411499023
    4. ']
' → logprob: -9.137487411499023
    5. '   ' → logprob: -11.012487411499023
    6. ' ]
' → logprob: -12.387487411499023
    7. ' ]' → logprob: -13.387487411499023
    8. '']
' → logprob: -13.387487411499023
    9. '']' → logprob: -13.887487411499023
    10. 'def' → logprob: -14.762487411499023

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007144528906792402
    2. 'if' → logprob: -5.007144451141357
    3. ' if' → logprob: -7.757144451141357
    4. 'def' → logprob: -14.507144927978516
    5. '
' → logprob: -14.757144927978516
    6. '```' → logprob: -15.257144927978516
    7. ',' → logprob: -15.632144927978516
    8. ' ' → logprob: -17.007144927978516
    9. '	if' → logprob: -17.007144927978516
    10. '    
' → logprob: -17.382144927978516

Token 258: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007160080131143332
    2. '   ' → logprob: -7.875716209411621
    3. ' if' → logprob: -8.000716209411621
    4. '
' → logprob: -15.000716209411621
    5. ' ' → logprob: -16.125715255737305
    6. '```' → logprob: -16.125715255737305
    7. 'i' → logprob: -17.000715255737305
    8. 'n' → logprob: -17.875715255737305
    9. '  ' → logprob: -18.000715255737305
    10. 'If' → logprob: -18.125715255737305

Token 259: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.056684233248233795
    2. 'first' → logprob: -2.9316842555999756
    3. ' t' → logprob: -6.9316840171813965
    4. ' s' → logprob: -7.6816840171813965
    5. 't' → logprob: -8.306684494018555
    6. 's' → logprob: -9.431684494018555
    7. '(first' → logprob: -11.556684494018555
    8. ' ' → logprob: -11.806684494018555
    9. ' len' → logprob: -11.806684494018555
    10. '	first' → logprob: -12.181684494018555

Token 260: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -2.935296834039036e-06
    2. 'char' → logprob: -13.50000286102295
    3. '_CHAR' → logprob: -15.00000286102295
    4. '==' → logprob: -15.37500286102295
    5. 'Char' → logprob: -15.50000286102295
    6. ' ==' → logprob: -15.50000286102295
    7. '_chars' → logprob: -15.75000286102295
    8. 't' → logprob: -16.500003814697266
    9. '
' → logprob: -16.625003814697266
    10. '_' → logprob: -16.625003814697266

Token 261: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020553918555378914
    2. ' ==' → logprob: -3.8955538272857666
    3. '=' → logprob: -11.645553588867188
    4. '```' → logprob: -14.020553588867188
    5. '==
' → logprob: -14.020553588867188
    6. ' ' → logprob: -14.645553588867188
    7. '===' → logprob: -15.270553588867188
    8. ')' → logprob: -15.520553588867188
    9. ']==' → logprob: -15.770553588867188
    10. '()==' → logprob: -16.520553588867188

Token 262: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.023245595395565033
    2. ' last' → logprob: -3.7732455730438232
    3. 's' → logprob: -16.773244857788086
    4. '(last' → logprob: -16.898244857788086
    5. ' ' → logprob: -17.148244857788086
    6. '	last' → logprob: -17.898244857788086
    7. '[last' → logprob: -18.148244857788086
    8. 't' → logprob: -19.023244857788086
    9. '   ' → logprob: -19.523244857788086
    10. ' s' → logprob: -19.898244857788086

Token 263: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -3.3213025744771585e-05
    2. 'char' → logprob: -10.375033378601074
    3. 'Char' → logprob: -13.750033378601074
    4. '_c' → logprob: -14.750033378601074
    5. 's' → logprob: -15.125033378601074
    6. '_CHAR' → logprob: -16.375032424926758
    7. 't' → logprob: -16.750032424926758
    8. '_chars' → logprob: -17.500032424926758
    9. '(t' → logprob: -17.875032424926758
    10. '-char' → logprob: -17.875032424926758

Token 264: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028192581608891487
    2. ':
' → logprob: -3.9031925201416016
    3. ':' → logprob: -5.528192520141602
    4. 'and' → logprob: -5.653192520141602
    5. '   ' → logprob: -9.403192520141602
    6. ' ' → logprob: -10.653192520141602
    7. ' :
' → logprob: -10.653192520141602
    8. ' :' → logprob: -12.528192520141602
    9. '       ' → logprob: -13.028192520141602
    10. '):
' → logprob: -13.403192520141602

Token 265: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5234183073043823
    2. ' len' → logprob: -0.8984183073043823
    3. ' t' → logprob: -9.023418426513672
    4. 't' → logprob: -9.898418426513672
    5. ' is' → logprob: -10.023418426513672
    6. '(len' → logprob: -10.398418426513672
    7. 'is' → logprob: -10.523418426513672
    8. '   ' → logprob: -12.273418426513672
    9. ' not' → logprob: -12.398418426513672
    10. '	len' → logprob: -12.523418426513672

Token 266: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3152257800102234
    2. ' is' → logprob: -1.3152258396148682
    3. ' (' → logprob: -6.815225601196289
    4. '(is' → logprob: -7.815225601196289
    5. '(' → logprob: -7.940225601196289
    6. 's' → logprob: -10.565225601196289
    7. 'len' → logprob: -11.565225601196289
    8. ' ' → logprob: -11.690225601196289
    9. '   ' → logprob: -12.065225601196289
    10. '  ' → logprob: -12.065225601196289

Token 267: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -2.868328920158092e-05
    2. 'single' → logprob: -10.500028610229492
    3. '(single' → logprob: -14.875028610229492
    4. ' single' → logprob: -15.125028610229492
    5. '_s' → logprob: -16.125028610229492
    6. 'Single' → logprob: -16.750028610229492
    7. '_' → logprob: -16.750028610229492
    8. 'ingle' → logprob: -16.875028610229492
    9. '(_' → logprob: -17.625028610229492
    10. '_empty' → logprob: -17.875028610229492

Token 268: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -2.2127087504486553e-05
    2. 'group' → logprob: -11.000021934509277
    3. '(t' → logprob: -12.875021934509277
    4. '_groups' → logprob: -13.875021934509277
    5. 't' → logprob: -14.500021934509277
    6. '_' → logprob: -14.875021934509277
    7. ' group' → logprob: -15.125021934509277
    8. '(_' → logprob: -15.625021934509277
    9. 's' → logprob: -16.375022888183594
    10. 'Group' → logprob: -16.875022888183594

Token 269: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.0100624169572257e-05
    2. ' (' → logprob: -10.875020027160645
    3. 't' → logprob: -14.250020027160645
    4. '(' → logprob: -14.625020027160645
    5. '(s' → logprob: -18.50002098083496
    6. '```' → logprob: -19.37502098083496
    7. '(T' → logprob: -19.50002098083496
    8. '   ' → logprob: -19.87502098083496
    9. '(
' → logprob: -19.87502098083496
    10. ' ' → logprob: -20.12502098083496

Token 270: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010052595287561417
    2. '):
' → logprob: -4.635052680969238
    3. ' ):' → logprob: -9.010052680969238
    4. ')' → logprob: -9.635052680969238
    5. ':' → logprob: -9.885052680969238
    6. '():' → logprob: -10.135052680969238
    7. '):

' → logprob: -12.135052680969238
    8. '):
' → logprob: -12.135052680969238
    9. '()):
' → logprob: -13.260052680969238
    10. ' ):
' → logprob: -13.635052680969238

Token 271: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.547500491142273
    2. ':' → logprob: -0.922500491142273
    3. '       ' → logprob: -4.1725006103515625
    4. ' and' → logprob: -5.4225006103515625
    5. '   ' → logprob: -5.7975006103515625
    6. ',' → logprob: -7.9225006103515625
    7. '):
' → logprob: -8.172500610351562
    8. ' :
' → logprob: -8.422500610351562
    9. ' t' → logprob: -9.672500610351562
    10. ':

' → logprob: -9.922500610351562

Token 272: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.160832479596138
    2. ' t' → logprob: -1.9108325242996216
    3. ' first' → logprob: -8.910832405090332
    4. '
' → logprob: -9.035832405090332
    5. '       ' → logprob: -9.285832405090332
    6. 'first' → logprob: -9.785832405090332
    7. 'merged' → logprob: -9.910832405090332
    8. '        
' → logprob: -10.285832405090332
    9. '           ' → logprob: -10.535832405090332
    10. ' merged' → logprob: -10.785832405090332

Token 273: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017439620569348335
    2. '[-' → logprob: -6.376743793487549
    3. '=' → logprob: -10.751744270324707
    4. ' =' → logprob: -11.001744270324707
    5. '[:-' → logprob: -13.126744270324707
    6. '=[' → logprob: -14.626744270324707
    7. '
' → logprob: -14.876744270324707
    8. '0' → logprob: -15.001744270324707
    9. '[:' → logprob: -15.876744270324707
    10. '1' → logprob: -16.37674331665039

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. '-' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.000006675720215
    4. '1' → logprob: -15.875006675720215
    5. '
' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.00000762939453
    7. ' -' → logprob: -17.12500762939453
    8. '۰' → logprob: -17.25000762939453
    9. '```' → logprob: -17.62500762939453
    10. '٠' → logprob: -17.75000762939453

Token 275: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.452426608419046e-05
    2. ']+=' → logprob: -10.62503433227539
    3. ' ]' → logprob: -11.62503433227539
    4. '']' → logprob: -14.37503433227539
    5. '"]' → logprob: -15.00003433227539
    6. ']+' → logprob: -15.87503433227539
    7. 't' → logprob: -16.50003433227539
    8. '`]' → logprob: -17.00003433227539
    9. ')' → logprob: -17.62503433227539
    10. ']
' → logprob: -17.87503433227539

Token 276: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11682428419589996
    2. ']+=' → logprob: -2.6168243885040283
    3. ' +=' → logprob: -3.7418243885040283
    4. '=' → logprob: -4.491824150085449
    5. ']' → logprob: -6.866824150085449
    6. ',' → logprob: -7.491824150085449
    7. '+' → logprob: -7.491824150085449
    8. '   ' → logprob: -10.24182415008545
    9. '>' → logprob: -10.49182415008545
    10. ')' → logprob: -10.49182415008545

Token 277: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02324908785521984
    2. ' t' → logprob: -3.7732491493225098
    3. '	t' → logprob: -13.648248672485352
    4. '`t' → logprob: -13.648248672485352
    5. '   ' → logprob: -15.273248672485352
    6. ')t' → logprob: -15.773248672485352
    7. '(t' → logprob: -15.898248672485352
    8. ' ' → logprob: -16.27324867248535
    9. '+t' → logprob: -16.39824867248535
    10. '    ' → logprob: -16.39824867248535

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007182692061178386
    2. '0' → logprob: -7.250718116760254
    3. 't' → logprob: -12.250718116760254
    4. '[-' → logprob: -13.500718116760254
    5. ']' → logprob: -14.500718116760254
    6. ' ' → logprob: -14.750718116760254
    7. '+' → logprob: -15.375718116760254
    8. '[
' → logprob: -15.500718116760254
    9. '
' → logprob: -16.00071907043457
    10. '```' → logprob: -16.12571907043457

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.625005722045898
    3. ']' → logprob: -13.125005722045898
    4. '-' → logprob: -15.250005722045898
    5. '[' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.5000057220459
    7. '1' → logprob: -16.5000057220459
    8. 't' → logprob: -16.8750057220459
    9. '(' → logprob: -17.3750057220459
    10. ']+' → logprob: -17.4375057220459

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023743510246276855
    2. ']+' → logprob: -3.7737436294555664
    3. '+' → logprob: -7.773743629455566
    4. ' +' → logprob: -9.648743629455566
    5. ')' → logprob: -12.148743629455566
    6. ' ]' → logprob: -12.148743629455566
    7. '}' → logprob: -14.148743629455566
    8. ')+' → logprob: -15.023743629455566
    9. ']+=' → logprob: -15.148743629455566
    10. '+]' → logprob: -15.148743629455566

Token 281: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20207303762435913
    2. ' +' → logprob: -1.702073097229004
    3. '+t' → logprob: -7.327073097229004
    4. '+r' → logprob: -14.577073097229004
    5. 't' → logprob: -14.827073097229004
    6. ' ' → logprob: -14.952073097229004
    7. '+s' → logprob: -15.827073097229004
    8. '+k' → logprob: -16.077072143554688
    9. '+m' → logprob: -16.202072143554688
    10. '+p' → logprob: -16.452072143554688

Token 282: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0040785204619169235
    2. ' t' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.379077911376953
    4. ' ' → logprob: -18.004077911376953
    5. '	t' → logprob: -18.129077911376953
    6. '  ' → logprob: -18.504077911376953
    7. '    ' → logprob: -18.629077911376953
    8. '       ' → logprob: -18.754077911376953
    9. '_t' → logprob: -20.129077911376953
    10. '`t' → logprob: -20.504077911376953

Token 283: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0010480545461177826
    2. '-' → logprob: -7.2510480880737305
    3. '.pop' → logprob: -8.00104808807373
    4. ' -' → logprob: -13.87604808807373
    5. 'pop' → logprob: -14.37604808807373
    6. '   ' → logprob: -14.62604808807373
    7. '[' → logprob: -15.37604808807373
    8. ' [-' → logprob: -15.75104808807373
    9. '[len' → logprob: -16.126047134399414
    10. '[:-' → logprob: -16.251047134399414

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -16.000001907348633
    4. '2' → logprob: -16.437501907348633
    5. '```' → logprob: -17.187501907348633
    6. ']' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '-' → logprob: -17.750001907348633
    9. '１' → logprob: -17.875001907348633
    10. '۱' → logprob: -18.312501907348633

Token 285: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.020767968147993088
    2. ']' → logprob: -3.8957679271698
    3. ')
' → logprob: -9.520768165588379
    4. '
' → logprob: -10.020768165588379
    5. '       ' → logprob: -10.270768165588379
    6. ']
' → logprob: -10.770768165588379
    7. ']

' → logprob: -11.395768165588379
    8. ' ]
' → logprob: -11.645768165588379
    9. ')' → logprob: -11.770768165588379
    10. '   ' → logprob: -12.145768165588379

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003942112671211362
    2. '   ' → logprob: -8.000393867492676
    3. '```' → logprob: -10.000393867492676
    4. 't' → logprob: -12.250393867492676
    5. '<|end|>' → logprob: -13.375393867492676
    6. ',' → logprob: -13.625393867492676
    7. '           ' → logprob: -13.750393867492676
    8. '	   ' → logprob: -13.875393867492676
    9. ' t' → logprob: -13.875393867492676
    10. '<|end|>' → logprob: -14.625393867492676

Token 287: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.7219163775444031
    2. 'del' → logprob: -1.0969164371490479
    3. ' del' → logprob: -2.346916437149048
    4. '       ' → logprob: -2.721916437149048
    5. ' t' → logprob: -3.971916437149048
    6. '	del' → logprob: -11.221916198730469
    7. '           ' → logprob: -11.971916198730469
    8. '        ' → logprob: -13.221916198730469
    9. '   ' → logprob: -13.346916198730469
    10. '```' → logprob: -13.471916198730469

Token 288: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.50000286102295
    3. 'pop' → logprob: -13.62500286102295
    4. '=' → logprob: -16.250001907348633
    5. '[:-' → logprob: -17.875001907348633
    6. ' .' → logprob: -19.500001907348633
    7. ' =' → logprob: -19.750001907348633
    8. '	pop' → logprob: -20.375001907348633
    9. '.p' → logprob: -20.500001907348633
    10. '.clear' → logprob: -21.000001907348633

Token 289: '(-' (ID: 8087)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.963691804325208e-05
    2. '()-' → logprob: -11.000029563903809
    3. '(-' → logprob: -11.750029563903809
    4. '()
' → logprob: -12.375029563903809
    5. '()

' → logprob: -14.875029563903809
    6. '()]' → logprob: -15.750029563903809
    7. '()`' → logprob: -16.375030517578125
    8. '()\' → logprob: -16.875030517578125
    9. '()%' → logprob: -16.875030517578125
    10. '()>' → logprob: -17.250030517578125

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -16.875
    4. '0' → logprob: -17.5
    5. '   ' → logprob: -17.5
    6. '```' → logprob: -17.5
    7. '2' → logprob: -17.875
    8. '-' → logprob: -19.5625
    9. '１' → logprob: -20.0625
    10. '`' → logprob: -20.25

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011069540778407827
    2. ')
' → logprob: -9.125110626220703
    3. '<|end|>' → logprob: -14.125110626220703
    4. ')return' → logprob: -15.125110626220703
    5. '())' → logprob: -15.500110626220703
    6. ')

' → logprob: -15.750110626220703
    7. ' )' → logprob: -16.500110626220703
    8. '()' → logprob: -17.000110626220703
    9. ')#' → logprob: -17.250110626220703
    10. '))' → logprob: -17.250110626220703

Token 292: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1010897159576416
    2. '<|end|>' → logprob: -2.3510897159576416
    3. '       ' → logprob: -8.226089477539062
    4. '
' → logprob: -8.476089477539062
    5. '```' → logprob: -8.851089477539062
    6. '   ' → logprob: -9.101089477539062
    7. 'return' → logprob: -9.726089477539062
    8. '<|end|>' → logprob: -9.726089477539062
    9. '[' → logprob: -11.851089477539062
    10. '        
' → logprob: -12.976089477539062

Token 293: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018220998346805573
    2. ' t' → logprob: -4.018220901489258
    3. 'None' → logprob: -10.018220901489258
    4. 'def' → logprob: -11.268220901489258
    5. ' None' → logprob: -11.768220901489258
    6. '<|end|>' → logprob: -13.143220901489258
    7. '(t' → logprob: -13.643220901489258
    8. '`t' → logprob: -13.768220901489258
    9. '_t' → logprob: -14.393220901489258
    10. '[t' → logprob: -15.143220901489258

Token 295: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.598092684522271e-05
    2. '<|end|>' → logprob: -9.875056266784668
    3. '
' → logprob: -12.875056266784668
    4. '```' → logprob: -13.750056266784668
    5. '<|end|>' → logprob: -15.125056266784668
    6. '#' → logprob: -15.250056266784668
    7. ' def' → logprob: -15.625056266784668
    8. '\' → logprob: -18.00005531311035
    9. '    
' → logprob: -18.25005531311035
    10. '  
' → logprob: -18.25005531311035

Token 296: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.922563963802531e-05
    2. '<|end|>' → logprob: -9.500079154968262
    3. '```' → logprob: -13.250079154968262
    4. '#' → logprob: -13.500079154968262
    5. '<|end|>' → logprob: -14.500079154968262
    6. ' def' → logprob: -15.000079154968262
    7. 'k' → logprob: -16.250080108642578
    8. 's' → logprob: -16.625080108642578
    9. '
' → logprob: -16.625080108642578
    10. ')' → logprob: -17.125080108642578

Token 297: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3198550045490265
    2. 'solve' → logprob: -1.694854974746704
    3. 'count' → logprob: -3.194854974746704
    4. ' main' → logprob: -3.944854974746704
    5. 'max' → logprob: -4.569855213165283
    6. 'calculate' → logprob: -4.694855213165283
    7. 'compute' → logprob: -5.444855213165283
    8. 'process' → logprob: -6.444855213165283
    9. ' solve' → logprob: -7.069855213165283
    10. 'combine' → logprob: -7.194855213165283

Token 298: '():
' (ID: 8595)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007117303088307381
    2. '():' → logprob: -5.00711727142334
    3. '():
' → logprob: -8.00711727142334
    4. ' (' → logprob: -10.38211727142334
    5. '(' → logprob: -10.50711727142334
    6. '()' → logprob: -13.50711727142334
    7. ' ():' → logprob: -13.50711727142334
    8. '(input' → logprob: -13.63211727142334
    9. '()(' → logprob: -13.88211727142334
    10. '(t' → logprob: -14.25711727142334

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005364664364606142
    2. 's' → logprob: -5.255364894866943
    3. ' s' → logprob: -9.005364418029785
    4. 'def' → logprob: -12.255364418029785
    5. '(s' → logprob: -13.505364418029785
    6. '()' → logprob: -13.505364418029785
    7. '	s' → logprob: -15.255364418029785
    8. '       ' → logprob: -16.1303653717041
    9. '():' → logprob: -17.0053653717041
    10. '_s' → logprob: -17.5053653717041

Token 300: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.006811410654336214
    2. '   ' → logprob: -5.006811618804932
    3. ' s' → logprob: -9.256811141967773
    4. 'def' → logprob: -15.131811141967773
    5. ' ' → logprob: -16.381811141967773
    6. '  ' → logprob: -16.881811141967773
    7. '	s' → logprob: -17.006811141967773
    8. 'import' → logprob: -17.256811141967773
    9. '       ' → logprob: -17.256811141967773
    10. '    ' → logprob: -17.756811141967773

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5553664565086365
    2. ' =' → logprob: -1.0553665161132812
    3. '=' → logprob: -2.5553665161132812
    4. ',k' → logprob: -7.930366516113281
    5. '   ' → logprob: -10.430366516113281
    6. ' ,' → logprob: -11.805366516113281
    7. 'k' → logprob: -12.430366516113281
    8. '=k' → logprob: -13.180366516113281
    9. ' =
' → logprob: -13.680366516113281
    10. ' ' → logprob: -13.930366516113281

Token 302: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06196891888976097
    2. ' k' → logprob: -2.8119688034057617
    3. 'int' → logprob: -13.686968803405762
    4. '   ' → logprob: -16.686969757080078
    5. ' int' → logprob: -17.186969757080078
    6. 'K' → logprob: -17.686969757080078
    7. ' ' → logprob: -17.686969757080078
    8. '  ' → logprob: -17.811969757080078
    9. '    ' → logprob: -18.186969757080078
    10. '	k' → logprob: -18.936969757080078

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ',' → logprob: -16.578889846801758
    4. ')' → logprob: -17.078889846801758
    5. ' ' → logprob: -18.328889846801758
    6. '   ' → logprob: -18.328889846801758
    7. '_' → logprob: -18.828889846801758
    8. ' =
' → logprob: -19.078889846801758
    9. 's' → logprob: -19.453889846801758
    10. '＝' → logprob: -19.578889846801758

Token 304: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.4740884006023407
    2. 'read' → logprob: -0.9740884304046631
    3. '   ' → logprob: -11.474088668823242
    4. '	read' → logprob: -14.599088668823242
    5. '  ' → logprob: -14.974088668823242
    6. ' ' → logprob: -16.474088668823242
    7. '_read' → logprob: -16.849088668823242
    8. '    ' → logprob: -16.849088668823242
    9. '(read' → logprob: -17.724088668823242
    10. 'Read' → logprob: -17.849088668823242

Token 305: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.04902105778455734
    2. '()' → logprob: -3.049021005630493
    3. '_' → logprob: -8.549020767211914
    4. '_line' → logprob: -9.049020767211914
    5. '()
' → logprob: -9.674020767211914
    6. '_inputs' → logprob: -10.799020767211914
    7. '_output' → logprob: -11.424020767211914
    8. '_in' → logprob: -12.549020767211914
    9. '_raw' → logprob: -12.674020767211914
    10. 'input' → logprob: -13.424020767211914

Token 306: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3496006429195404
    2. '   ' → logprob: -1.2246006727218628
    3. '    
' → logprob: -7.474600791931152
    4. '
' → logprob: -8.224600791931152
    5. 's' → logprob: -8.974600791931152
    6. 't' → logprob: -9.349600791931152
    7. '()
' → logprob: -10.099600791931152
    8. '  
' → logprob: -10.599600791931152
    9. ' 
' → logprob: -11.599600791931152
    10. 'def' → logprob: -12.099600791931152

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08012773841619492
    2. 't' → logprob: -2.580127716064453
    3. ' t' → logprob: -6.705127716064453
    4. 'if' → logprob: -12.455127716064453
    5. '
' → logprob: -12.580127716064453
    6. 'groups' → logprob: -13.955127716064453
    7. '    
' → logprob: -14.455127716064453
    8. 'g' → logprob: -14.580127716064453
    9. '```' → logprob: -14.580127716064453
    10. ' if' → logprob: -14.705127716064453

Token 308: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.001785490894690156
    2. 'groups' → logprob: -6.8767852783203125
    3. '   ' → logprob: -7.8767852783203125
    4. ' t' → logprob: -8.876785278320312
    5. 'if' → logprob: -9.001785278320312
    6. 'group' → logprob: -10.001785278320312
    7. 'counts' → logprob: -10.251785278320312
    8. 'g' → logprob: -11.376785278320312
    9. 'for' → logprob: -11.876785278320312
    10. 'count' → logprob: -12.501785278320312

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. ',' → logprob: -15.538042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '=g' → logprob: -18.288042068481445
    6. '   ' → logprob: -18.538042068481445
    7. 't' → logprob: -19.163042068481445
    8. ')' → logprob: -19.288042068481445
    9. 's' → logprob: -19.288042068481445
    10. '  ' → logprob: -19.725542068481445

Token 310: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.3132685124874115
    2. ' group' → logprob: -1.3132685422897339
    3. '   ' → logprob: -12.563268661499023
    4. ' ' → logprob: -14.063268661499023
    5. '(group' → logprob: -14.313268661499023
    6. '	group' → logprob: -14.438268661499023
    7. '"group' → logprob: -15.063268661499023
    8. '  ' → logprob: -15.313268661499023
    9. 'merge' → logprob: -15.813268661499023
    10. '[group' → logprob: -15.938268661499023

Token 311: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.875001907348633
    3. '_group' → logprob: -14.250001907348633
    4. '_codes' → logprob: -15.500001907348633
    5. '_count' → logprob: -16.000001907348633
    6. '_groups' → logprob: -16.500001907348633
    7. '_code' → logprob: -17.250001907348633
    8. 'counts' → logprob: -17.500001907348633
    9. '_lengths' → logprob: -17.500001907348633
    10. 's' → logprob: -17.750001907348633

Token 312: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000145137935760431
    2. ' =' → logprob: -9.625144958496094
    3. '(' → logprob: -9.750144958496094
    4. 's' → logprob: -12.375144958496094
    5. '=' → logprob: -12.375144958496094
    6. ' (' → logprob: -12.750144958496094
    7. 'def' → logprob: -13.125144958496094
    8. ',' → logprob: -13.125144958496094
    9. 't' → logprob: -13.250144958496094
    10. ')' → logprob: -13.875144958496094

Token 313: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47417494654655457
    2. ')' → logprob: -0.974174976348877
    3. ')
' → logprob: -9.474174499511719
    4. '   ' → logprob: -11.224174499511719
    5. ')

' → logprob: -12.099174499511719
    6. ' )
' → logprob: -13.974174499511719
    7. ' )' → logprob: -14.849174499511719
    8. ')s' → logprob: -14.849174499511719
    9. '())
' → logprob: -15.474174499511719
    10. ')t' → logprob: -15.974174499511719

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17572224140167236
    2. 't' → logprob: -2.175722122192383
    3. ' t' → logprob: -3.050722122192383
    4. '```' → logprob: -8.925722122192383
    5. 's' → logprob: -10.050722122192383
    6. 'k' → logprob: -10.300722122192383
    7. ' k' → logprob: -10.300722122192383
    8. ' for' → logprob: -10.675722122192383
    9. ' s' → logprob: -11.175722122192383
    10. '`t' → logprob: -12.300722122192383

Token 315: ' count' (ID: 3605)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003833452006801963
    2. ' t' → logprob: -5.753833293914795
    3. '   ' → logprob: -8.003833770751953
    4. 'if' → logprob: -8.378833770751953
    5. 'total' → logprob: -10.003833770751953
    6. 'for' → logprob: -11.003833770751953
    7. 's' → logprob: -12.128833770751953
    8. 'k' → logprob: -12.128833770751953
    9. ' if' → logprob: -12.128833770751953
    10. 'count' (adapté à ' count') → logprob: -12.878833770751953

Token 316: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1626935452222824
    2. 's' → logprob: -2.537693500518799
    3. '_' → logprob: -3.662693500518799
    4. '=' → logprob: -3.787693500518799
    5. '_half' → logprob: -4.037693500518799
    6. '_hal' → logprob: -6.787693500518799
    7. '_even' → logprob: -7.662693500518799
    8. '_single' → logprob: -8.037693977355957
    9. '_pairs' → logprob: -8.162693977355957
    10. '_of' → logprob: -8.412693977355957

Token 317: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6377518177032471
    2. ' =' → logprob: -1.387751817703247
    3. '=' → logprob: -2.262751817703247
    4. 'half' → logprob: -2.262751817703247
    5. '_' → logprob: -5.137751579284668
    6. 'ed' → logprob: -5.762751579284668
    7. '_half' → logprob: -6.762751579284668
    8. 'hal' → logprob: -7.637751579284668
    9. '   ' → logprob: -7.637751579284668
    10. 'pairs' → logprob: -7.762751579284668

Token 318: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3978677988052368
    2. ' =' → logprob: -1.1478677988052368
    3. '=' → logprob: -4.647867679595947
    4. '_half' → logprob: -7.522867679595947
    5. '_' → logprob: -8.147868156433105
    6. 'er' → logprob: -9.397868156433105
    7. ',' → logprob: -9.772868156433105
    8. 'ed' → logprob: -9.772868156433105
    9. '1' → logprob: -10.022868156433105
    10. ' ' → logprob: -10.022868156433105

Token 319: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005348313134163618
    2. ' sum' → logprob: -5.255348205566406
    3. 'k' → logprob: -9.880348205566406
    4. 'count' → logprob: -10.880348205566406
    5. '   ' → logprob: -11.255348205566406
    6. '0' → logprob: -11.505348205566406
    7. '1' → logprob: -11.880348205566406
    8. ' ' → logprob: -12.380348205566406
    9. '(sum' → logprob: -12.755348205566406
    10. 't' → logprob: -13.630348205566406

Token 320: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.0005324215162545443
    2. '(i' → logprob: -7.875532627105713
    3. 'half' → logprob: -9.500532150268555
    4. '(sum' → logprob: -10.625532150268555
    5. 't' → logprob: -11.375532150268555
    6. '_' → logprob: -11.625532150268555
    7. '(t' → logprob: -12.000532150268555
    8. 'sum' → logprob: -12.750532150268555
    9. '(count' → logprob: -12.750532150268555
    10. '_HALF' → logprob: -12.750532150268555

Token 321: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -6.957014556974173e-05
    2. '_counts' → logprob: -9.875069618225098
    3. '_group' → logprob: -11.750069618225098
    4. 's' → logprob: -12.000069618225098
    5. 'groups' → logprob: -12.750069618225098
    6. '```' → logprob: -15.500069618225098
    7. 'group' → logprob: -15.625069618225098
    8. '_' → logprob: -15.750069618225098
    9. '_codes' → logprob: -15.875069618225098
    10. 'Groups' → logprob: -16.62506866455078

Token 322: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -14.125001907348633
    3. 't' → logprob: -14.250001907348633
    4. ' (' → logprob: -14.875001907348633
    5. ' t' → logprob: -17.500001907348633
    6. '(s' → logprob: -17.875001907348633
    7. 's' → logprob: -18.750001907348633
    8. '[t' → logprob: -19.125001907348633
    9. '=t' → logprob: -20.375001907348633
    10. ',t' → logprob: -20.500001907348633

Token 323: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4759814739227295
    2. ')' → logprob: -0.9759814739227295
    3. '   ' → logprob: -6.350981712341309
    4. ')
' → logprob: -9.600981712341309
    5. ')

' → logprob: -10.100981712341309
    6. ')*' → logprob: -10.350981712341309
    7. '()' → logprob: -12.100981712341309
    8. '())
' → logprob: -12.100981712341309
    9. '())' → logprob: -14.225981712341309
    10. ')t' → logprob: -14.225981712341309

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0383494533598423
    2. 't' → logprob: -3.4133493900299072
    3. ' t' → logprob: -6.163349628448486
    4. '    
' → logprob: -6.913349628448486
    5. '
' → logprob: -7.163349628448486
    6. 'count' → logprob: -8.788349151611328
    7. '```' → logprob: -8.913349151611328
    8. ' if' → logprob: -8.913349151611328
    9. 'if' → logprob: -9.038349151611328
    10. 'k' → logprob: -9.663349151611328

Token 325: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6478474736213684
    2. 't' (adapté à ' t') → logprob: -0.8978474736213684
    3. 'count' → logprob: -2.7728474140167236
    4. 'total' → logprob: -5.897847652435303
    5. 'result' → logprob: -7.272847652435303
    6. '   ' → logprob: -7.397847652435303
    7. 'merged' → logprob: -7.522847652435303
    8. 'answer' → logprob: -7.647847652435303
    9. 'res' → logprob: -7.772847652435303
    10. 'first' → logprob: -8.397847175598145

Token 326: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132701516151428
    2. '=' → logprob: -1.313270092010498
    3. '_' → logprob: -12.938270568847656
    4. 'merged' → logprob: -13.188270568847656
    5. 't' → logprob: -13.688270568847656
    6. '2' → logprob: -13.813270568847656
    7. ',' → logprob: -14.563270568847656
    8. '[' → logprob: -15.063270568847656
    9. ' ' → logprob: -15.313270568847656
    10. '	' → logprob: -15.813270568847656

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076065086759626865
    2. '=' → logprob: -4.882606506347656
    3. ',' → logprob: -15.632606506347656
    4. ' ' → logprob: -16.007606506347656
    5. ')' → logprob: -18.132606506347656
    6. ' =[' → logprob: -18.882606506347656
    7. ' =)' → logprob: -19.007606506347656
    8. '  ' → logprob: -19.007606506347656
    9. '[' → logprob: -19.507606506347656
    10. ' ' → logprob: -19.570106506347656

Token 328: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -1.2479722499847412
    2. ' [' → logprob: -1.9979722499847412
    3. ' merge' → logprob: -2.122972249984741
    4. ' t' → logprob: -2.247972249984741
    5. 't' → logprob: -2.372972249984741
    6. '[' → logprob: -2.747972249984741
    7. '[group' → logprob: -2.747972249984741
    8. '[t' → logprob: -3.122972249984741
    9. ' group' → logprob: -3.247972249984741
    10. 'group' → logprob: -3.497972249984741

Token 329: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.981667537620524e-06
    2. 'ends' → logprob: -13.375001907348633
    3. '```' → logprob: -15.500001907348633
    4. 'Ends' → logprob: -17.500001907348633
    5. '_end' → logprob: -17.750001907348633
    6. '_merge' → logprob: -18.500001907348633
    7. 's' → logprob: -18.500001907348633
    8. '_chars' → logprob: -18.625001907348633
    9. '_reads' → logprob: -18.625001907348633
    10. '_
' → logprob: -18.750001907348633

Token 330: 'ends' (ID: 1847)
  Prédit: 'ends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0002422779070911929
    2. '_' → logprob: -8.375242233276367
    3. 't' → logprob: -12.125242233276367
    4. 's' → logprob: -13.125242233276367
    5. ' ends' → logprob: -13.250242233276367
    6. '```' → logprob: -13.875242233276367
    7. 'Ends' → logprob: -14.000242233276367
    8. 'end' → logprob: -14.875242233276367
    9. 'ENDS' → logprob: -16.250242233276367
    10. 'nds' → logprob: -16.750242233276367

Token 331: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.0005587508203461766
    2. 'if' → logprob: -7.500558853149414
    3. 'If' → logprob: -12.375558853149414
    4. ' if' → logprob: -14.125558853149414
    5. 't' → logprob: -15.625558853149414
    6. '   ' → logprob: -16.500558853149414
    7. 's' → logprob: -16.625558853149414
    8. '```' → logprob: -16.625558853149414
    9. '_' → logprob: -17.000558853149414
    10. '(if' → logprob: -17.500558853149414

Token 332: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.0025844585616141558
    2. 'needed' → logprob: -6.002584457397461
    3. 'Needed' → logprob: -10.377584457397461
    4. 'ed' → logprob: -10.502584457397461
    5. 't' → logprob: -10.877584457397461
    6. 'eded' → logprob: -11.252584457397461
    7. 'ned' → logprob: -11.627584457397461
    8. 'if' → logprob: -12.502584457397461
    9. '_need' → logprob: -13.877584457397461
    10. '_if' → logprob: -14.252584457397461

Token 333: '(list' (ID: 13116)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00018101456225849688
    2. ' (' → logprob: -8.625181198120117
    3. '(' → logprob: -13.625181198120117
    4. '(
' → logprob: -17.000181198120117
    5. ' ' → logprob: -17.375181198120117
    6. 't' → logprob: -17.500181198120117
    7. '```' → logprob: -17.500181198120117
    8. '   ' → logprob: -17.750181198120117
    9. '	t' → logprob: -19.125181198120117
    10. ' t' → logprob: -19.125181198120117

Token 334: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.3438327843905427e-05
    2. ' (' → logprob: -10.87502384185791
    3. 't' → logprob: -13.12502384185791
    4. '(' → logprob: -13.25002384185791
    5. '(
' → logprob: -15.12502384185791
    6. ')' → logprob: -15.25002384185791
    7. ')t' → logprob: -16.750022888183594
    8. ',' → logprob: -17.500022888183594
    9. ')(' → logprob: -17.750022888183594
    10. ' ' → logprob: -18.000022888183594

Token 335: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005424272385425866
    2. ',' → logprob: -7.625542640686035
    3. ')' → logprob: -10.875542640686035
    4. '(s' → logprob: -11.125542640686035
    5. ' ),' → logprob: -11.375542640686035
    6. ',s' → logprob: -12.375542640686035
    7. '   ' → logprob: -13.250542640686035
    8. 's' → logprob: -14.375542640686035
    9. '*' → logprob: -14.875542640686035
    10. ' ,' → logprob: -15.000542640686035

Token 336: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12730024755001068
    2. ' s' → logprob: -2.127300262451172
    3. ')' → logprob: -8.627300262451172
    4. '   ' → logprob: -9.377300262451172
    5. ' ' → logprob: -10.252300262451172
    6. 't' → logprob: -11.752300262451172
    7. '    ' → logprob: -11.877300262451172
    8. '
' → logprob: -12.127300262451172
    9. '           ' → logprob: -12.377300262451172
    10. 'k' → logprob: -12.377300262451172

Token 337: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741141200065613
    2. ')' → logprob: -0.9741141200065613
    3. ')

' → logprob: -10.599114418029785
    4. '   ' → logprob: -11.724114418029785
    5. ')
' → logprob: -12.974114418029785
    6. ',' → logprob: -14.099114418029785
    7. ')s' → logprob: -15.099114418029785
    8. ' )
' → logprob: -15.224114418029785
    9. ' ' → logprob: -15.974114418029785
    10. ' )' → logprob: -16.22411346435547

Token 338: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28227290511131287
    2. '   ' → logprob: -1.4072729349136353
    3. ' count' → logprob: -7.657272815704346
    4. 'result' → logprob: -8.282273292541504
    5. 'total' → logprob: -9.032273292541504
    6. '
' → logprob: -9.032273292541504
    7. 'if' → logprob: -9.907273292541504
    8. 'answer' → logprob: -10.532273292541504
    9. 't' → logprob: -11.032273292541504
    10. 'def' → logprob: -11.282273292541504

Token 339: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0036466377787292004
    2. '   ' → logprob: -5.6286468505859375
    3. 'if' → logprob: -11.128646850585938
    4. 'result' → logprob: -11.503646850585938
    5. ' count' → logprob: -11.878646850585938
    6. 'answer' → logprob: -12.003646850585938
    7. 't' → logprob: -12.878646850585938
    8. 'total' → logprob: -13.253646850585938
    9. '```' → logprob: -13.628646850585938
    10. 'sum' → logprob: -14.253646850585938

Token 340: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.093505099765025e-05
    2. ' =' → logprob: -10.875020980834961
    3. '=' → logprob: -13.875020980834961
    4. '2' → logprob: -14.000020980834961
    5. '```' → logprob: -16.87502098083496
    6. ' ' → logprob: -17.87502098083496
    7. '=_' → logprob: -17.87502098083496
    8. '_k' → logprob: -18.00002098083496
    9. ' _' → logprob: -18.00002098083496
    10. '_=' → logprob: -18.00002098083496

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022006903309375048
    2. '1' → logprob: -6.127200603485107
    3. 'k' → logprob: -12.002201080322266
    4. '_' → logprob: -12.252201080322266
    5. ' ' → logprob: -13.627201080322266
    6. '0' → logprob: -14.252201080322266
    7. 'half' → logprob: -14.377201080322266
    8. '=' → logprob: -15.002201080322266
    9. '3' → logprob: -15.127201080322266
    10. 'two' → logprob: -15.252201080322266

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. '   ' → logprob: -14.87692928314209
    4. ' ' → logprob: -16.001930236816406
    5. '  ' → logprob: -17.376930236816406
    6. '＝' → logprob: -17.751930236816406
    7. '=sum' → logprob: -18.501930236816406
    8. '	' → logprob: -18.501930236816406
    9. '    ' → logprob: -18.876930236816406
    10. '```' → logprob: -19.501930236816406

Token 343: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02531898021697998
    2. ' sum' → logprob: -3.7753190994262695
    3. 'count' → logprob: -6.2753190994262695
    4. 'k' → logprob: -9.27531909942627
    5. '(sum' → logprob: -10.27531909942627
    6. '0' → logprob: -10.77531909942627
    7. ' count' → logprob: -10.77531909942627
    8. ' ' → logprob: -12.02531909942627
    9. ' k' → logprob: -12.52531909942627
    10. '   ' → logprob: -12.52531909942627

Token 344: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.0059811738319695
    2. '(i' → logprob: -5.130980968475342
    3. 'half' → logprob: -11.0059814453125
    4. '((' → logprob: -11.2559814453125
    5. '_HALF' → logprob: -12.0059814453125
    6. '_' → logprob: -12.0059814453125
    7. '(' → logprob: -12.6309814453125
    8. 'Half' → logprob: -13.0059814453125
    9. '_hal' → logprob: -13.3809814453125
    10. ' half' → logprob: -14.2559814453125

Token 345: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -4.320199877838604e-07
    2. 'groups' → logprob: -14.875
    3. 'Groups' → logprob: -18.75
    4. '_' → logprob: -19.375
    5. 'roups' → logprob: -19.875
    6. '_group' → logprob: -20.25
    7. '_blocks' → logprob: -20.625
    8. '(t' → logprob: -20.75
    9. 't' → logprob: -21.375
    10. 'group' → logprob: -21.5

Token 346: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.750005722045898
    4. 't' → logprob: -15.250005722045898
    5. '(
' → logprob: -16.3750057220459
    6. '[t' → logprob: -17.6250057220459
    7. '	t' → logprob: -17.6250057220459
    8. '(token' → logprob: -18.0000057220459
    9. '((' → logprob: -18.5000057220459
    10. ')t' → logprob: -18.5000057220459

Token 347: '2' (ID: 17)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0010981805389747024
    2. 't' → logprob: -7.001098155975342
    3. ' t' → logprob: -9.0010986328125
    4. ')' → logprob: -10.5010986328125
    5. ' (' → logprob: -10.8760986328125
    6. ')t' → logprob: -11.5010986328125
    7. ')(' → logprob: -12.6260986328125
    8. '(' → logprob: -13.3760986328125
    9. '   ' → logprob: -13.8760986328125
    10. '	t' → logprob: -15.1260986328125

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024036016315221786
    2. ')
' → logprob: -3.774035930633545
    3. ')*' → logprob: -7.899035930633545
    4. '   ' → logprob: -8.024036407470703
    5. ' )' → logprob: -10.274036407470703
    6. ')

' → logprob: -10.899036407470703
    7. ' *' → logprob: -11.649036407470703
    8. '
' → logprob: -12.399036407470703
    9. ')
' → logprob: -12.524036407470703
    10. 'def' → logprob: -12.524036407470703

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06284797191619873
    2. 'if' → logprob: -2.9378480911254883
    3. 'result' → logprob: -5.437848091125488
    4. 'total' → logprob: -6.187848091125488
    5. '
' → logprob: -7.562848091125488
    6. 'answer' → logprob: -8.187848091125488
    7. '```' → logprob: -8.312848091125488
    8. 'print' → logprob: -8.562848091125488
    9. ' if' → logprob: -8.812848091125488
    10. 'ans' → logprob: -9.437848091125488

Token 350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0955759659409523
    2. 'result' → logprob: -2.970576047897339
    3. 'print' → logprob: -4.22057580947876
    4. 'total' → logprob: -4.59557580947876
    5. 'ans' → logprob: -5.22057580947876
    6. 'res' → logprob: -5.22057580947876
    7. 'answer' → logprob: -5.84557580947876
    8. '   ' → logprob: -6.84557580947876
    9. 'length' → logprob: -8.845576286315918
    10. 'count' → logprob: -9.595576286315918

Token 351: ' len' (ID: 4631)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.829319417476654
    2. 'k' → logprob: -1.3293194770812988
    3. ' k' → logprob: -1.9543194770812988
    4. 'is' → logprob: -1.9543194770812988
    5. ' s' → logprob: -4.829319477081299
    6. 's' → logprob: -5.704319477081299
    7. ' not' → logprob: -5.954319477081299
    8. 'len' → logprob: -7.579319477081299
    9. 'not' → logprob: -7.579319477081299
    10. ' len' → logprob: -7.954319477081299

Token 352: '(s' (ID: 1858)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.011349477805197239
    2. '(s' → logprob: -4.511349678039551
    3. 't' → logprob: -8.63634967803955
    4. '(' → logprob: -9.26134967803955
    5. ' (' → logprob: -10.76134967803955
    6. 's' → logprob: -12.76134967803955
    7. ' t' → logprob: -13.51134967803955
    8. '(k' → logprob: -13.51134967803955
    9. '(count' → logprob: -14.51134967803955
    10. '_t' → logprob: -14.88634967803955

Token 353: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009041139855980873
    2. ')==' → logprob: -5.5090413093566895
    3. '==' → logprob: -5.8840413093566895
    4. ' ==' → logprob: -6.6340413093566895
    5. '>' → logprob: -8.134040832519531
    6. ')>' → logprob: -8.384040832519531
    7. ' *' → logprob: -9.134040832519531
    8. ' >' → logprob: -9.384040832519531
    9. '*' → logprob: -9.884040832519531
    10. '   ' → logprob: -10.384040832519531

Token 354: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1166318729519844
    2. ' ==' → logprob: -2.2416319847106934
    3. '*' → logprob: -6.491631984710693
    4. '>' → logprob: -6.491631984710693
    5. ' *' → logprob: -7.491631984710693
    6. ' >' → logprob: -9.991631507873535
    7. '1' → logprob: -10.241631507873535
    8. '=' → logprob: -10.866631507873535
    9. ' ' → logprob: -10.991631507873535
    10. '   ' → logprob: -11.116631507873535

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029169765766710043
    2. ' ' → logprob: -5.8779168128967285
    3. '0' → logprob: -9.252917289733887
    4. 'k' → logprob: -11.127917289733887
    5. ' k' → logprob: -14.502917289733887
    6. 'len' → logprob: -14.877917289733887
    7. '100' → logprob: -15.502917289733887
    8. '   ' → logprob: -15.877917289733887
    9. 'count' → logprob: -15.877917289733887
    10. '(' → logprob: -16.44041633605957

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018149138486478478
    2. '0' → logprob: -8.625181198120117
    3. ' ' → logprob: -13.625181198120117
    4. 'k' → logprob: -14.375181198120117
    5. '```' → logprob: -17.875181198120117
    6. 'len' → logprob: -18.000181198120117
    7. '
' → logprob: -18.000181198120117
    8. '100' → logprob: -18.062681198120117
    9. '2' → logprob: -18.250181198120117
    10. '   ' → logprob: -18.437681198120117

Token 357: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.203879714012146
    2. ':' → logprob: -1.703879714012146
    3. ' and' → logprob: -6.0788798332214355
    4. 'and' → logprob: -9.828879356384277
    5. ':
' → logprob: -9.953879356384277
    6. '   ' → logprob: -10.578879356384277
    7. ' or' → logprob: -11.078879356384277
    8. '):
' → logprob: -11.828879356384277
    9. ':return' → logprob: -11.828879356384277
    10. '       ' → logprob: -12.078879356384277

Token 358: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4990905225276947
    2. '       ' → logprob: -0.9990905523300171
    3. '   ' → logprob: -3.9990904331207275
    4. ' print' → logprob: -5.249090671539307
    5. 'return' → logprob: -6.999090671539307
    6. 'count' → logprob: -9.249090194702148
    7. 'result' → logprob: -10.124090194702148
    8. '
' → logprob: -10.874090194702148
    9. ' return' → logprob: -10.999090194702148
    10. '        
' → logprob: -11.749090194702148

Token 359: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013262155698612332
    2. 'count' → logprob: -9.50013256072998
    3. ' print' → logprob: -10.00013256072998
    4. 'return' → logprob: -12.00013256072998
    5. '   ' → logprob: -12.12513256072998
    6. 'k' → logprob: -14.50013256072998
    7. '
' → logprob: -16.125133514404297
    8. 'result' → logprob: -16.250133514404297
    9. 'output' → logprob: -16.625133514404297
    10. 'answer' → logprob: -17.125133514404297

Token 360: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00852994155138731
    2. '(k' → logprob: -5.008530139923096
    3. 'count' → logprob: -6.383530139923096
    4. ' k' → logprob: -10.258529663085938
    5. '(count' → logprob: -10.258529663085938
    6. 'len' → logprob: -10.883529663085938
    7. '1' → logprob: -11.258529663085938
    8. '(' → logprob: -11.258529663085938
    9. '((' → logprob: -12.508529663085938
    10. '(len' → logprob: -13.258529663085938

Token 361: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5105958580970764
    2. '*' → logprob: -1.1355957984924316
    3. ' *' → logprob: -2.6355957984924316
    4. '*)' → logprob: -5.010595798492432
    5. ' )' → logprob: -8.51059627532959
    6. ' *)' → logprob: -10.76059627532959
    7. '   ' → logprob: -11.38559627532959
    8. ' ' → logprob: -11.51059627532959
    9. '*(' → logprob: -11.63559627532959
    10. '))' → logprob: -11.76059627532959

Token 362: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013505916576832533
    2. '1' → logprob: -6.626350402832031
    3. ' ' → logprob: -10.876350402832031
    4. '11' → logprob: -13.376350402832031
    5. '10' → logprob: -13.876350402832031
    6. '   ' → logprob: -14.251350402832031
    7. '3' → logprob: -14.376350402832031
    8. '(' → logprob: -14.876350402832031
    9. '  ' → logprob: -15.001350402832031
    10. '```' → logprob: -15.626350402832031

Token 363: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.763666947837919e-05
    2. '1' → logprob: -10.12504768371582
    3. ' ' → logprob: -12.00004768371582
    4. '10' → logprob: -14.37504768371582
    5. '11' → logprob: -14.87504768371582
    6. '   ' → logprob: -16.50004768371582
    7. '

' → logprob: -16.62504768371582
    8. '  ' → logprob: -16.75004768371582
    9. '{' → logprob: -16.87504768371582
    10. '```' → logprob: -17.25004768371582

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04989331215620041
    2. ')
' → logprob: -3.049893379211426
    3. '*' → logprob: -6.799893379211426
    4. '   ' → logprob: -8.924893379211426
    5. ' )' → logprob: -10.799893379211426
    6. ')
' → logprob: -11.049893379211426
    7. ' *' → logprob: -11.299893379211426
    8. ' )
' → logprob: -12.674893379211426
    9. '+' → logprob: -13.924893379211426
    10. '*)' → logprob: -14.424893379211426

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012454704847186804
    2. '       ' → logprob: -7.126245498657227
    3. 'else' → logprob: -8.251245498657227
    4. 'elif' → logprob: -8.626245498657227
    5. ' else' → logprob: -15.126245498657227
    6. '```' → logprob: -16.001245498657227
    7. ' elif' → logprob: -16.251245498657227
    8. 'return' → logprob: -16.626245498657227
    9. '
' → logprob: -17.376245498657227
    10. '    
' → logprob: -17.626245498657227

Token 366: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12981976568698883
    2. 'elif' (adapté à ' elif') → logprob: -2.129819869995117
    3. 'else' → logprob: -5.879819869995117
    4. ' elif' → logprob: -9.379819869995117
    5. ' else' → logprob: -12.629819869995117
    6. '
' → logprob: -13.254819869995117
    7. '       ' → logprob: -13.629819869995117
    8. '    
' → logprob: -14.379819869995117
    9. ' ' → logprob: -14.754819869995117
    10. '  ' → logprob: -15.379819869995117

Token 367: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0924347639083862
    2. ' count' → logprob: -1.4674347639083862
    3. ' k' → logprob: -1.4674347639083862
    4. ' len' → logprob: -3.092434883117676
    5. 'k' → logprob: -3.342434883117676
    6. ' s' → logprob: -3.467434883117676
    7. 'count' → logprob: -3.592434883117676
    8. ' not' → logprob: -3.592434883117676
    9. ' t' → logprob: -4.592434883117676
    10. 'is' → logprob: -4.842434883117676

Token 368: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.00011641718447208405
    2. 'single' → logprob: -9.500116348266602
    3. '(t' → logprob: -10.500116348266602
    4. '(s' → logprob: -12.375116348266602
    5. 't' → logprob: -12.875116348266602
    6. 's' → logprob: -13.125116348266602
    7. 'Single' → logprob: -13.250116348266602
    8. '(single' → logprob: -13.500116348266602
    9. 'is' → logprob: -14.500116348266602
    10. '(is' → logprob: -15.000116348266602

Token 369: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -1.9266199160483666e-05
    2. 'group' → logprob: -12.000019073486328
    3. 'def' → logprob: -12.750019073486328
    4. '(t' → logprob: -13.125019073486328
    5. '_groups' → logprob: -13.125019073486328
    6. 'roup' → logprob: -13.250019073486328
    7. 's' → logprob: -13.375019073486328
    8. 't' → logprob: -13.375019073486328
    9. '_' → logprob: -15.625019073486328
    10. '```' → logprob: -15.625019073486328

Token 370: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.625001907348633
    3. 't' → logprob: -14.500001907348633
    4. '(' → logprob: -16.125001907348633
    5. '(s' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.875001907348633
    7. 'def' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '((' → logprob: -19.125001907348633
    10. '(count' → logprob: -19.750001907348633

Token 371: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43008002638816833
    2. '):' → logprob: -1.0550800561904907
    3. ')' → logprob: -7.555079936981201
    4. '(t' → logprob: -8.05508041381836
    5. '):

' → logprob: -8.18008041381836
    6. '   ' → logprob: -9.30508041381836
    7. '):
' → logprob: -9.68008041381836
    8. '(s' → logprob: -10.18008041381836
    9. 't' → logprob: -10.68008041381836
    10. ' ):
' → logprob: -11.68008041381836

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05314353108406067
    2. 'print' → logprob: -3.5531435012817383
    3. '   ' → logprob: -3.8031435012817383
    4. ' print' → logprob: -7.178143501281738
    5. '           ' → logprob: -10.678143501281738
    6. 'if' → logprob: -10.803143501281738
    7. ' if' → logprob: -12.303143501281738
    8. '     ' → logprob: -12.428143501281738
    9. ' ' → logprob: -12.803143501281738
    10. '    ' → logprob: -13.678143501281738

Token 373: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00022535098833031952
    2. '   ' → logprob: -9.250225067138672
    3. '       ' → logprob: -9.500225067138672
    4. ' print' → logprob: -10.125225067138672
    5. '
' → logprob: -11.625225067138672
    6. 'total' → logprob: -13.125225067138672
    7. '```' → logprob: -13.750225067138672
    8. '           ' → logprob: -14.000225067138672
    9. 'count' → logprob: -14.250225067138672
    10. 'length' → logprob: -14.500225067138672

Token 374: '(k' (ID: 12125)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.030358485877513885
    2. '((' → logprob: -4.28035831451416
    3. '(t' → logprob: -5.28035831451416
    4. '(count' → logprob: -5.53035831451416
    5. 'len' → logprob: -5.65535831451416
    6. '(k' → logprob: -6.03035831451416
    7. '(sum' → logprob: -7.65535831451416
    8. '(s' → logprob: -7.90535831451416
    9. '(' → logprob: -9.03035831451416
    10. 'count' → logprob: -10.03035831451416

Token 375: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2814841568470001
    2. ' *' → logprob: -1.4064841270446777
    3. ')' → logprob: -8.156484603881836
    4. '   ' → logprob: -10.656484603881836
    5. '  ' → logprob: -12.031484603881836
    6. ' ' → logprob: -12.031484603881836
    7. '2' → logprob: -13.531484603881836
    8. ' ' → logprob: -13.531484603881836
    9. '
' → logprob: -13.781484603881836
    10. ',' → logprob: -13.906484603881836

Token 376: ' len' (ID: 4631)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14445793628692627
    2. '(count' → logprob: -2.1444578170776367
    3. ' (' → logprob: -4.644457817077637
    4. '(t' → logprob: -5.519457817077637
    5. ' count' → logprob: -6.144457817077637
    6. 't' → logprob: -7.144457817077637
    7. '((' → logprob: -7.769457817077637
    8. '(s' → logprob: -8.644457817077637
    9. '(' → logprob: -9.894457817077637
    10. ' ' → logprob: -9.894457817077637

Token 377: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.47768425941467285
    2. '(t' → logprob: -0.9776842594146729
    3. 's' → logprob: -5.852684020996094
    4. 't' → logprob: -7.352684020996094
    5. '(' → logprob: -10.102684020996094
    6. ')' → logprob: -10.352684020996094
    7. ' t' → logprob: -12.477684020996094
    8. ' s' → logprob: -13.102684020996094
    9. ')s' → logprob: -13.727684020996094
    10. ')t' → logprob: -13.727684020996094

Token 378: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02908271923661232
    2. ')//' → logprob: -3.779082775115967
    3. ' //' → logprob: -5.904082775115967
    4. '//' → logprob: -6.654082775115967
    5. '))' → logprob: -7.404082775115967
    6. '()' → logprob: -7.404082775115967
    7. '   ' → logprob: -8.029082298278809
    8. ' )' → logprob: -8.779082298278809
    9. ' ' → logprob: -10.404082298278809
    10. '[' → logprob: -10.529082298278809

Token 379: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2870185673236847
    2. ' //' → logprob: -1.4120185375213623
    3. ')' → logprob: -5.662018775939941
    4. '   ' → logprob: -6.787018775939941
    5. ' ' → logprob: -7.037018775939941
    6. ')//' → logprob: -8.662018775939941
    7. ' ' → logprob: -9.412018775939941
    8. '  ' → logprob: -10.537018775939941
    9. ')
' → logprob: -10.662018775939941
    10. '()' → logprob: -10.787018775939941

Token 380: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.250019073486328
    4. '۲' → logprob: -19.250019073486328
    5. '２' → logprob: -20.000019073486328
    6. '```' → logprob: -20.500019073486328
    7. '(' → logprob: -20.625019073486328
    8. ' ' → logprob: -21.000019073486328
    9. '
' → logprob: -21.125019073486328
    10. '{' → logprob: -21.375019073486328

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.0
    4. '
' → logprob: -20.5
    5. '۲' → logprob: -20.5
    6. '```' → logprob: -20.625
    7. '(' → logprob: -20.75
    8. '２' → logprob: -21.0
    9. '{' → logprob: -21.0
    10. ')' → logprob: -21.875

Token 382: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25865989923477173
    2. ')' → logprob: -1.508659839630127
    3. '   ' → logprob: -5.008659839630127
    4. ' )
' → logprob: -11.133660316467285
    5. ')
' → logprob: -12.008660316467285
    6. 'else' → logprob: -12.758660316467285
    7. ' )' → logprob: -13.008660316467285
    8. ')

' → logprob: -14.758660316467285
    9. '+' → logprob: -14.883660316467285
    10. ' else' → logprob: -15.008660316467285

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011161597445607185
    2. 'else' → logprob: -4.511161804199219
    3. 'elif' → logprob: -9.136161804199219
    4. ' else' → logprob: -12.136161804199219
    5. '```' → logprob: -14.761161804199219
    6. '
' → logprob: -15.886161804199219
    7. ' ' → logprob: -16.13616180419922
    8. '	else' → logprob: -16.88616180419922
    9. ' elif' → logprob: -17.01116180419922
    10. '       ' → logprob: -17.01116180419922

Token 384: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06589636206626892
    2. 'else' (adapté à ' else') → logprob: -3.0658962726593018
    3. 'elif' → logprob: -4.065896511077881
    4. ' else' → logprob: -11.815896034240723
    5. ' elif' → logprob: -12.440896034240723
    6. ' ' → logprob: -14.690896034240723
    7. '```' → logprob: -15.315896034240723
    8. '	elif' → logprob: -15.690896034240723
    9. '
' → logprob: -15.815896034240723
    10. '       ' → logprob: -16.94089698791504

Token 385: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16988059878349304
    2. ':' → logprob: -1.9198806285858154
    3. '       ' → logprob: -4.669880390167236
    4. '   ' → logprob: -8.669880867004395
    5. '):
' → logprob: -10.669880867004395
    6. ':

' → logprob: -10.794880867004395
    7. '():
' → logprob: -12.419880867004395
    8. ':
' → logprob: -12.794880867004395
    9. ',' → logprob: -12.919880867004395
    10. ' :
' → logprob: -13.169880867004395

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4999683201313019
    2. 'print' → logprob: -0.9999682903289795
    3. '   ' → logprob: -3.8749682903289795
    4. ' print' → logprob: -5.874968528747559
    5. 'count' → logprob: -6.624968528747559
    6. 'if' → logprob: -7.874968528747559
    7. 'result' → logprob: -9.374968528747559
    8. '```' → logprob: -9.749968528747559
    9. '     ' → logprob: -10.749968528747559
    10. ' if' → logprob: -10.874968528747559

Token 387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002939071273431182
    2. ' print' → logprob: -5.877939224243164
    3. '       ' → logprob: -9.252939224243164
    4. '   ' → logprob: -11.127939224243164
    5. 'count' → logprob: -11.752939224243164
    6. '
' → logprob: -12.002939224243164
    7. '```' → logprob: -12.627939224243164
    8. '           ' → logprob: -13.002939224243164
    9. 'result' → logprob: -13.252939224243164
    10. 'if' → logprob: -14.002939224243164

Token 388: '(count' (ID: 25892)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02988482266664505
    2. '(count' → logprob: -3.5298848152160645
    3. '((' → logprob: -9.529885292053223
    4. ' count' → logprob: -10.154885292053223
    5. 'k' → logprob: -11.404885292053223
    6. '(k' → logprob: -11.904885292053223
    7. '   ' → logprob: -13.404885292053223
    8. '(' → logprob: -13.529885292053223
    9. ' (' → logprob: -14.279885292053223
    10. 'max' → logprob: -15.154885292053223

Token 389: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. ' _' → logprob: -15.625000953674316
    4. ')' → logprob: -16.375
    5. '1' → logprob: -17.0
    6. '_
' → logprob: -17.125
    7. '(' → logprob: -17.875
    8. '_)' → logprob: -18.125
    9. '2' → logprob: -18.625
    10. 's' → logprob: -18.625

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020559638738632202
    2. '2' → logprob: -3.895559549331665
    3. '_' → logprob: -11.520559310913086
    4. 'k' → logprob: -12.145559310913086
    5. ' ' → logprob: -14.083059310913086
    6. 't' → logprob: -15.333059310913086
    7. '(' → logprob: -15.458059310913086
    8. '   ' → logprob: -15.645559310913086
    9. '(k' → logprob: -15.645559310913086
    10. '{' → logprob: -16.020559310913086

Token 391: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.717698335647583
    2. '*' → logprob: -1.717698335647583
    3. ' *' → logprob: -1.717698335647583
    4. '+' → logprob: -1.967698335647583
    5. '*k' → logprob: -4.342698097229004
    6. '   ' → logprob: -9.092698097229004
    7. '+k' → logprob: -9.217698097229004
    8. ' ' → logprob: -9.842698097229004
    9. '*(' → logprob: -10.467698097229004
    10. ')' → logprob: -10.467698097229004

Token 392: ' count' (ID: 3605)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.6078792810440063
    2. 'count' → logprob: -1.2328792810440063
    3. '(k' → logprob: -1.9828792810440063
    4. ' (' → logprob: -3.982879161834717
    5. '(max' → logprob: -5.607879161834717
    6. 'max' → logprob: -5.857879161834717
    7. ' count' → logprob: -6.982879161834717
    8. ' max' → logprob: -9.732879638671875
    9. '((' → logprob: -9.857879638671875
    10. 'k' → logprob: -10.107879638671875

Token 393: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_
' → logprob: -19.5
    3. '__' → logprob: -20.5
    4. ')' → logprob: -20.5
    5. '\' → logprob: -20.625
    6. '*' → logprob: -20.875
    7. ' _' → logprob: -21.0
    8. '```' → logprob: -21.0
    9. '
' → logprob: -21.25
    10. 's' → logprob: -21.5

Token 394: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021807955636177212
    2. 'k' → logprob: -9.250218391418457
    3. '_' → logprob: -10.250218391418457
    4. '1' → logprob: -10.250218391418457
    5. '(k' → logprob: -10.875218391418457
    6. 'count' → logprob: -11.375218391418457
    7. '((' → logprob: -12.125218391418457
    8. ' ' → logprob: -12.375218391418457
    9. '(count' → logprob: -12.875218391418457
    10. '*k' → logprob: -13.687718391418457

Token 395: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11620765179395676
    2. '*' → logprob: -2.2412075996398926
    3. '*(' → logprob: -5.741207599639893
    4. ' ' → logprob: -9.74120807647705
    5. ')' → logprob: -9.99120807647705
    6. '   ' → logprob: -10.61620807647705
    7. ' *(' → logprob: -11.24120807647705
    8. '    ' → logprob: -11.99120807647705
    9. '  ' → logprob: -11.99120807647705
    10. '      ' → logprob: -13.49120807647705

Token 396: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.002077932469546795
    2. ' (' → logprob: -6.377078056335449
    3. '(max' → logprob: -8.00207805633545
    4. '(' → logprob: -10.25207805633545
    5. '((' → logprob: -12.50207805633545
    6. '   ' → logprob: -14.00207805633545
    7. '(K' → logprob: -14.50207805633545
    8. '(q' → logprob: -15.87707805633545
    9. '(int' → logprob: -16.002077102661133
    10. 'max' → logprob: -16.627077102661133

Token 397: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006905409973114729
    2. '(k' → logprob: -5.006905555725098
    3. ' k' → logprob: -8.756905555725098
    4. ' (' → logprob: -10.506905555725098
    5. '   ' → logprob: -12.631905555725098
    6. '{k' → logprob: -13.631905555725098
    7. '(' → logprob: -15.506905555725098
    8. 'max' → logprob: -15.506905555725098
    9. '	k' → logprob: -15.881905555725098
    10. '       ' → logprob: -16.63190460205078

Token 398: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011783202644437551
    2. ' -' → logprob: -6.75117826461792
    3. '1' → logprob: -12.501178741455078
    4. '>' → logprob: -13.501178741455078
    5. ' ' → logprob: -14.126178741455078
    6. '–' → logprob: -15.001178741455078
    7. '<|end|>' → logprob: -15.126178741455078
    8. '   ' → logprob: -15.501178741455078
    9. '(' → logprob: -15.626178741455078
    10. '2' → logprob: -15.751178741455078

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197642162442207
    2. '2' → logprob: -2.811976432800293
    3. ' ' → logprob: -11.686976432800293
    4. '   ' → logprob: -15.186976432800293
    5. ')' → logprob: -16.811975479125977
    6. '  ' → logprob: -16.936975479125977
    7. '```' → logprob: -19.811975479125977
    8. '    ' → logprob: -20.186975479125977
    9. '-' → logprob: -20.561975479125977
    10. '       ' → logprob: -20.686975479125977

Token 400: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759427547454834
    2. '1' → logprob: -0.8259427547454834
    3. ' ' → logprob: -12.700942993164062
    4. '   ' → logprob: -15.325942993164062
    5. '  ' → logprob: -17.450942993164062
    6. '```' → logprob: -18.200942993164062
    7. '-' → logprob: -18.325942993164062
    8. ')' → logprob: -18.450942993164062
    9. '
' → logprob: -19.575942993164062
    10. '3' → logprob: -19.763442993164062

Token 401: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.644463479053229e-05
    2. '))' → logprob: -10.000046730041504
    3. ' )' → logprob: -14.500046730041504
    4. ')
' → logprob: -15.125046730041504
    5. ')))' → logprob: -15.500046730041504
    6. ')")' → logprob: -17.125045776367188
    7. '})' → logprob: -18.250045776367188
    8. ')}' → logprob: -18.375045776367188
    9. ')}}' → logprob: -18.625045776367188
    10. ')`' → logprob: -18.875045776367188

Token 402: 'solve' (ID: 117273)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 401
Tokens correctement prédits (1ère position, stricte): 180
Tokens correctement prédits (1ère position, avec adaptation): 200
Tokens correctement prédits (top 10): 344
Précision stricte (1ère position): 44.89%
Précision adaptée (1ère position): 49.88%
Précision (top 10): 85.79%
================================================================================
