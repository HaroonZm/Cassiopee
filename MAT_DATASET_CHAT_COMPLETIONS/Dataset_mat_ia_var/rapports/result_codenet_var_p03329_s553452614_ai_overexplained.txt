================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    # Demander à l'utilisateur de saisir une valeur via l'entrée standard (clavier)
    # input() renvoie une chaîne de caractères, donc on convertit en entier avec int()
    n = int(input())
    # On retourne la valeur entière saisie par l'utilisateur
    return n

def count_coin(x, op, min_op):
    # Cette fonction détermine le nombre minimum de pièces nécessaires pour atteindre la somme x
    # x : la somme à atteindre
    # op : liste des valeurs disponibles pour les pièces
    # min_op : dictionnaire de mémoïsation pour stocker les résultats déjà calculés

    # Si la somme à atteindre est 0, aucune pièce n'est nécessaire donc on retourne 0
    if x == 0:
        return 0

    # Vérifier si la solution pour x a déjà été calculée
    # Cela permet de ne pas recalculer plusieurs fois le même résultat et d'optimiser l'algorithme
    if x in min_op.keys():
        return min_op[x]

    # On initialise min_count à une très grande valeur (ici 10 000 000)
    # Cela permet de toujours trouver une valeur minimale plus petite au premier passage
    min_count = 10000000

    # On parcourt chaque valeur de pièce disponible dans op
    for o in op:
        # On vérifie que l'on peut soustraire la pièce "o" de la somme "x" (on ne veut pas de somme négative)
        if x >= o:
            # On effectue l'appel récursif en soustrayant la valeur de la pièce "o" à "x"
            # On ajoute 1 pour la pièce actuellement utilisée
            count = 1 + count_coin(x - o, op, min_op)
            # Si le nombre de pièces total calculé est inférieur au min_count, on met à jour min_count
            if count < min_count:
                min_count = count

    # On mémorise le résultat pour la valeur "x" (mémoïsation) pour ne pas le recalculer plus tard
    min_op[x] = min_count
    # On retourne le nombre minimal de pièces trouvées
    return min_count

def submit():
    # Fonction principale orchestrant la solution au problème

    # On lit la somme cible saisie par l'utilisateur
    n = read_input()

    # On initialise la liste des valeurs de pièces disponibles
    # Il y a toujours une pièce de valeur 1, 6 et 9 disponibles initialement
    ops = [1, 6, 9]

    # Pour chaque valeur de pièce de base (ici après la première, c'est-à-dire 6 et 9)
    # On cherche toutes les puissances de ces valeurs inférieures ou égales à n
    for op in ops[1:]:
        i = 1  # On commence à la puissance 1 (c'est-à-dire op^1)
        t = op ** i  # On calcule la puissance (op élevé à i)
        # Tant que la puissance est inférieure ou égale à n (notre cible)
        while t <= n:
            # On l'ajoute à la liste des pièces disponibles
            ops.append(t)
            # On passe à la puissance suivante
            t *= op  # En multipliant à chaque fois par op, on évite de recalculer la puissance avec **
            # (par exemple 6, 36, 216, ...)

    # On supprime les doublons de la liste des pièces disponibles en les transformant en set puis en liste
    ops = list(set(ops))
    # On trie la liste des pièces par ordre décroissant, ce n'est pas obligatoire pour l'algorithme mais cela peut accélérer certains calculs dans des variantes gloutonnes
    ops.sort(reverse=True)
    # On affiche le résultat du calcul du nombre minimal de pièces pour atteindre la somme n
    # On passe un dictionnaire vide {} au début pour la mémoïsation lors du premier appel
    print(count_coin(n, ops, {}))

# Point d'entrée principal du script Python
# __name__ est une variable spéciale qui contient le nom du module courant
# Lorsque le script est exécuté directement (et non importé depuis un autre module), __name__ vaut '__main__'
# Donc ce bloc garantit que submit() ne sera appelé que si ce fichier est exécuté comme programme principal
if __name__ == '__main__':
    submit()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005430120043456554
    2. '():' → logprob: -5.880430221557617
    3. '_' → logprob: -6.255430221557617
    4. '(:' → logprob: -8.005430221557617
    5. '```' → logprob: -9.005430221557617
    6. '(_:' → logprob: -9.255430221557617
    7. ' (' → logprob: -10.380430221557617
    8. ':' → logprob: -10.380430221557617
    9. '()' → logprob: -11.130430221557617
    10. '(_' → logprob: -11.380430221557617

Token 4: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2038404941558838
    2. '```' → logprob: -1.2038404941558838
    3. '\n' → logprob: -1.5788404941558838
    4. '   ' → logprob: -2.078840494155884
    5. ':' → logprob: -4.453840255737305
    6. '    
' → logprob: -4.453840255737305
    7. '(' → logprob: -4.453840255737305
    8. '``' → logprob: -4.828840255737305
    9. '():' → logprob: -5.703840255737305
    10. 'newline' → logprob: -6.328840255737305

Token 5: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: ' Dem' (ID: 9458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44087907671928406
    2. '   ' → logprob: -1.1908791065216064
    3. '    ' → logprob: -4.065878868103027
    4. ' input' → logprob: -4.940878868103027
    5. '  ' → logprob: -5.065878868103027
    6. '#' → logprob: -5.065878868103027
    7. ' pass' → logprob: -5.190878868103027
    8. ' """' → logprob: -6.190878868103027
    9. 'input' → logprob: -6.440878868103027
    10. ' #' → logprob: -6.565878868103027

Token 7: 'ander' (ID: 9330)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26344606280326843
    2. 'a' → logprob: -1.7634460926055908
    3. ' ' → logprob: -3.888446092605591
    4. '  ' → logprob: -4.513445854187012
    5. 'f' → logprob: -4.888445854187012
    6. 'o' → logprob: -5.513445854187012
    7. '```' → logprob: -5.888445854187012
    8. 'and' → logprob: -6.013445854187012
    9. '    ' → logprob: -6.263445854187012
    10. 'onstr' → logprob: -6.513445854187012

Token 8: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5019779205322266
    2. ' à' → logprob: -1.6269779205322266
    3. '   ' → logprob: -2.0019779205322266
    4. ' la' → logprob: -2.5019779205322266
    5. ' des' → logprob: -2.7519779205322266
    6. ' un' → logprob: -2.7519779205322266
    7. '    ' → logprob: -3.0019779205322266
    8. ' l' → logprob: -3.2519779205322266
    9. '  ' → logprob: -4.251977920532227
    10. ' aux' → logprob: -4.251977920532227

Token 9: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5014464855194092
    2. ' ' → logprob: -1.2514464855194092
    3. 'l' → logprob: -2.626446485519409
    4. 'return' → logprob: -5.126446723937988
    5. '    ' → logprob: -5.126446723937988
    6. '  ' → logprob: -5.376446723937988
    7. 'input' → logprob: -5.376446723937988
    8. ' return' → logprob: -6.001446723937988
    9. 'user' → logprob: -6.126446723937988
    10. ' l' → logprob: -6.876446723937988

Token 10: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.40517064929008484
    2. 'e' → logprob: -1.5301706790924072
    3. ''utilisateur' → logprob: -2.4051706790924072
    4. 'a' → logprob: -4.280170440673828
    5. ''' → logprob: -5.405170440673828
    6. '’utilisateur' → logprob: -6.655170440673828
    7. '_' → logprob: -6.905170440673828
    8. 'util' → logprob: -6.905170440673828
    9. 'é' → logprob: -7.405170440673828
    10. ''entrée' → logprob: -7.405170440673828

Token 11: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2804560959339142
    2. ' d' → logprob: -2.155456066131592
    3. ' de' → logprob: -2.780456066131592
    4. '   ' → logprob: -3.280456066131592
    5. ' )' → logprob: -4.655456066131592
    6. '  ' → logprob: -5.155456066131592
    7. '    ' → logprob: -5.905456066131592
    8. ''' → logprob: -6.155456066131592
    9. 's' → logprob: -6.905456066131592
    10. ' a' → logprob: -7.280456066131592

Token 12: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.32823359966278076
    2. ' entrer' → logprob: -1.8282335996627808
    3. 's' → logprob: -2.3282337188720703
    4. ' input' → logprob: -4.82823371887207
    5. 'entr' → logprob: -5.07823371887207
    6. ' rentrer' → logprob: -5.70323371887207
    7. ' sais' → logprob: -7.07823371887207
    8. 'r' → logprob: -7.45323371887207
    9. ' ' → logprob: -7.57823371887207
    10. ' entr' → logprob: -7.70323371887207

Token 13: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09198713302612305
    2. ' une' → logprob: -3.341987133026123
    3. ' un' → logprob: -4.216987133026123
    4. '_' → logprob: -4.341987133026123
    5. '   ' → logprob: -4.716987133026123
    6. '  ' → logprob: -5.716987133026123
    7. ''' → logprob: -6.341987133026123
    8. ' )' → logprob: -6.591987133026123
    9. 's' → logprob: -6.841987133026123
    10. '    ' → logprob: -6.841987133026123

Token 14: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019377781078219414
    2. 'n' → logprob: -4.394377708435059
    3. '   ' → logprob: -6.644377708435059
    4. ' ligne' → logprob: -6.644377708435059
    5. ' chaîne' → logprob: -6.644377708435059
    6. ' valeur' → logprob: -7.394377708435059
    7. 'l' → logprob: -7.394377708435059
    8. '  ' → logprob: -7.519377708435059
    9. 's' → logprob: -7.644377708435059
    10. ' chaine' → logprob: -9.144377708435059

Token 15: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01145885232836008
    2. '\n' → logprob: -5.386458873748779
    3. '\' → logprob: -5.511458873748779
    4. '    
' → logprob: -6.636458873748779
    5. ' ' → logprob: -8.511458396911621
    6. '       ' → logprob: -8.636458396911621
    7. '`' → logprob: -8.761458396911621
    8. '(' → logprob: -8.761458396911621
    9. '    ' → logprob: -8.886458396911621
    10. '
' → logprob: -9.011458396911621

Token 16: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3489737808704376
    2. 'input' → logprob: -1.2239737510681152
    3. '   ' → logprob: -8.848974227905273
    4. '=input' → logprob: -8.973974227905273
    5. '(input' → logprob: -9.098974227905273
    6. 'l' → logprob: -10.223974227905273
    7. ' l' → logprob: -10.348974227905273
    8. ' return' → logprob: -11.348974227905273
    9. 'return' → logprob: -11.473974227905273
    10. ' ' → logprob: -11.473974227905273

Token 17: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5158717036247253
    2. '_' → logprob: -1.2658717632293701
    3. 'input' → logprob: -2.76587176322937
    4. ''entrée' → logprob: -3.76587176322937
    5. ''' → logprob: -4.140871524810791
    6. ' input' → logprob: -5.515871524810791
    7. 'n' → logprob: -5.765871524810791
    8. '_input' → logprob: -6.015871524810791
    9. '`' → logprob: -6.140871524810791
    10. 'i' → logprob: -6.265871524810791

Token 18: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12030331045389175
    2. '_' → logprob: -2.9953033924102783
    3. 'def' → logprob: -4.245303153991699
    4. '`' → logprob: -4.870303153991699
    5. ' ' → logprob: -4.995303153991699
    6. '(' → logprob: -5.745303153991699
    7. '    
' → logprob: -5.870303153991699
    8. ':' → logprob: -5.870303153991699
    9. ' (' → logprob: -5.995303153991699
    10. '```' → logprob: -6.120303153991699

Token 19: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020412947051227093
    2. '    
' → logprob: -7.502041339874268
    3. 'return' → logprob: -7.877041339874268
    4. '\' → logprob: -8.00204086303711
    5. '\n' → logprob: -8.12704086303711
    6. ' ' → logprob: -9.12704086303711
    7. 'input' → logprob: -9.62704086303711
    8. '
' → logprob: -9.75204086303711
    9. '```' → logprob: -10.00204086303711
    10. '       ' → logprob: -10.50204086303711

Token 20: 'cl' (ID: 565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0690976232290268
    2. '   ' → logprob: -3.3190975189208984
    3. ' )' → logprob: -3.9440975189208984
    4. '):' → logprob: -5.569097518920898
    5. '")' → logprob: -5.944097518920898
    6. 'input' → logprob: -6.194097518920898
    7. '`)' → logprob: -7.069097518920898
    8. ' ' → logprob: -7.444097518920898
    9. '')' → logprob: -7.444097518920898
    10. ' ):' → logprob: -9.069097518920898

Token 21: 'avier' (ID: 37096)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9454656839370728
    2. ')' → logprob: -1.4454656839370728
    3. 'u' → logprob: -2.320465564727783
    4. '   ' → logprob: -3.070465564727783
    5. 'r' → logprob: -3.070465564727783
    6. '`' → logprob: -3.695465564727783
    7. 'v' → logprob: -3.945465564727783
    8. ' )' → logprob: -4.070465564727783
    9. ' ' → logprob: -4.195465564727783
    10. 'm' → logprob: -4.195465564727783

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17758160829544067
    2. '):' → logprob: -2.427581548690796
    3. '   ' → logprob: -2.677581548690796
    4. ')
' → logprob: -6.427581787109375
    5. ' )' → logprob: -6.677581787109375
    6. '):
' → logprob: -7.177581787109375
    7. '')' → logprob: -7.552581787109375
    8. ' ' → logprob: -7.802581787109375
    9. '`)' → logprob: -7.927581787109375
    10. '")' → logprob: -8.552581787109375

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004760599695146084
    2. '    
' → logprob: -6.3797607421875
    3. 'return' → logprob: -7.1297607421875
    4. '\' → logprob: -7.2547607421875
    5. '\n' → logprob: -7.3797607421875
    6. ' ' → logprob: -8.3797607421875
    7. '
' → logprob: -9.1297607421875
    8. 'input' → logprob: -9.2547607421875
    9. '       ' → logprob: -9.3797607421875
    10. '```' → logprob: -9.5047607421875

Token 24: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041074708104133606
    2. 'return' → logprob: -4.166074752807617
    3. 'value' → logprob: -4.416074752807617
    4. 'input' → logprob: -5.541074752807617
    5. ' return' → logprob: -6.041074752807617
    6. 'val' → logprob: -6.291074752807617
    7. 'user' → logprob: -6.791074752807617
    8. ' value' → logprob: -7.041074752807617
    9. ' ' → logprob: -7.416074752807617
    10. 'v' → logprob: -7.666074752807617

Token 25: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010129781439900398
    2. 'return' → logprob: -5.760129928588867
    3. 'value' → logprob: -6.010129928588867
    4. 'input' → logprob: -6.510129928588867
    5. ' return' → logprob: -7.010129928588867
    6. 'val' → logprob: -7.260129928588867
    7. ' value' → logprob: -8.010129928588867
    8. ' input' → logprob: -8.135129928588867
    9. 'user' → logprob: -8.260129928588867
    10. '  ' → logprob: -9.385129928588867

Token 26: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23182903230190277
    2. '()' → logprob: -1.606829047203064
    3. '("")' → logprob: -6.1068291664123535
    4. '("' → logprob: -6.8568291664123535
    5. '('' → logprob: -7.2318291664123535
    6. '   ' → logprob: -7.3568291664123535
    7. ')' → logprob: -8.481828689575195
    8. ' =' → logprob: -8.481828689575195
    9. '(
' → logprob: -8.731828689575195
    10. '=' → logprob: -8.856828689575195

Token 27: ' ren' (ID: 5427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22130024433135986
    2. '   ' → logprob: -1.7213002443313599
    3. ' ' → logprob: -4.59630012512207
    4. '()' → logprob: -5.97130012512207
    5. 'return' → logprob: -6.09630012512207
    6. ')' → logprob: -6.97130012512207
    7. '    ' → logprob: -7.47130012512207
    8. '  ' → logprob: -7.72130012512207
    9. '(
' → logprob: -7.72130012512207
    10. ' return' → logprob: -7.97130012512207

Token 28: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.07064569741487503
    2. 'voit' → logprob: -3.070645809173584
    3. 'v' → logprob: -4.070645809173584
    4. 'voy' → logprob: -6.070645809173584
    5. 't' → logprob: -6.945645809173584
    6. 'voi' → logprob: -7.070645809173584
    7. 'vo' → logprob: -7.820645809173584
    8. 'et' → logprob: -9.445645332336426
    9. 'it' → logprob: -10.070645332336426
    10. 'vient' → logprob: -10.820645332336426

Token 29: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09096714854240417
    2. ' la' → logprob: -2.4659671783447266
    3. 'une' → logprob: -7.590967178344727
    4. ' un' → logprob: -7.590967178344727
    5. ' a' → logprob: -8.590967178344727
    6. ''une' → logprob: -8.590967178344727
    7. ' ' → logprob: -9.215967178344727
    8. 'la' → logprob: -9.340967178344727
    9. ' toujours' → logprob: -9.465967178344727
    10. ' l' → logprob: -9.465967178344727

Token 30: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.04189721494913101
    2. 'cha' → logprob: -3.5418972969055176
    3. 'chaine' → logprob: -5.416897296905518
    4. ' chaine' → logprob: -5.666897296905518
    5. ' ' → logprob: -6.041897296905518
    6. '   ' → logprob: -6.916897296905518
    7. 'str' → logprob: -7.791897296905518
    8. 'string' → logprob: -9.41689682006836
    9. ' string' → logprob: -9.79189682006836
    10. ' cha' → logprob: -9.91689682006836

Token 31: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2413628250360489
    2. '()' → logprob: -2.6163628101348877
    3. 'def' → logprob: -3.6163628101348877
    4. ')' → logprob: -3.9913628101348877
    5. '(' → logprob: -4.116363048553467
    6. '.' → logprob: -4.366363048553467
    7. ',' → logprob: -4.491363048553467
    8. '  ' → logprob: -4.491363048553467
    9. '"' → logprob: -5.116363048553467
    10. '(
' → logprob: -5.241363048553467

Token 32: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1434379667043686
    2. ' caractères' → logprob: -2.0184378623962402
    3. '   ' → logprob: -7.89343786239624
    4. ' caractère' → logprob: -9.518438339233398
    5. ' caracteres' → logprob: -9.893438339233398
    6. 'texte' → logprob: -9.893438339233398
    7. '  ' → logprob: -9.893438339233398
    8. ' ' → logprob: -10.018438339233398
    9. ' caract' → logprob: -10.018438339233398
    10. '```' → logprob: -10.268438339233398

Token 33: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036482736468315125
    2. ' ' → logprob: -3.786482810974121
    3. '    
' → logprob: -5.536482810974121
    4. 'r' → logprob: -6.286482810974121
    5. '\' → logprob: -6.411482810974121
    6. 'n' → logprob: -6.786482810974121
    7. '\n' → logprob: -7.036482810974121
    8. 'return' → logprob: -7.286482810974121
    9. '
' → logprob: -7.411482810974121
    10. 'v' → logprob: -8.161482810974121

Token 34: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7038740515708923
    2. '   ' → logprob: -1.203874111175537
    3. '    ' → logprob: -2.578874111175537
    4. ' )' → logprob: -3.578874111175537
    5. '    
' → logprob: -3.828874111175537
    6. '  ' → logprob: -4.703874111175537
    7. 'n' → logprob: -4.703874111175537
    8. ')' → logprob: -4.703874111175537
    9. ' 
' → logprob: -4.953874111175537
    10. 'r' → logprob: -5.203874111175537

Token 35: ' on' (ID: 402)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.323937177658081
    2. ' il' → logprob: -1.323937177658081
    3. ' int' → logprob: -1.573937177658081
    4. '   ' → logprob: -2.073937177658081
    5. ' on' → logprob: -3.323937177658081
    6. ' convertir' → logprob: -3.323937177658081
    7. ' l' → logprob: -5.07393741607666
    8. ' ' → logprob: -5.07393741607666
    9. ' convert' → logprob: -5.19893741607666
    10. 'l' → logprob: -5.32393741607666

Token 36: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.4244908392429352
    2. ' doit' → logprob: -2.0494909286499023
    3. ' devra' → logprob: -3.1744909286499023
    4. 'convert' → logprob: -3.4244909286499023
    5. '   ' → logprob: -3.9244909286499023
    6. ' do' → logprob: -4.299490928649902
    7. 'do' → logprob: -4.549490928649902
    8. 's' → logprob: -4.799490928649902
    9. ' return' → logprob: -4.799490928649902
    10. ' ' → logprob: -4.799490928649902

Token 37: 'it' (ID: 278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2893666625022888
    2. 'it' → logprob: -1.5393667221069336
    3. '_' → logprob: -3.6643667221069336
    4. 't' → logprob: -5.164366722106934
    5. 'ie' → logprob: -6.539366722106934
    6. 'ir' → logprob: -6.789366722106934
    7. '   ' → logprob: -7.664366722106934
    8. 'a' → logprob: -7.914366722106934
    9. 'is' → logprob: -8.414366722106934
    10. ' ' → logprob: -8.414366722106934

Token 38: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03726058825850487
    2. ' ' → logprob: -4.16226053237915
    3. ' l' → logprob: -5.66226053237915
    4. '(int' → logprob: -5.66226053237915
    5. 'l' → logprob: -5.91226053237915
    6. ' la' → logprob: -6.16226053237915
    7. '_' → logprob: -6.66226053237915
    8. ' en' → logprob: -6.78726053237915
    9. ' (' → logprob: -6.78726053237915
    10. ' int' → logprob: -6.91226053237915

Token 39: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7252416014671326
    2. 'int' → logprob: -0.9752416014671326
    3. ' entier' → logprob: -2.6002416610717773
    4. 'ent' → logprob: -3.3502416610717773
    5. ' ent' → logprob: -4.725241661071777
    6. ' ' → logprob: -4.850241661071777
    7. ' ' → logprob: -5.225241661071777
    8. ' un' → logprob: -6.100241661071777
    9. ' nombre' → logprob: -6.350241661071777
    10. '=int' → logprob: -7.600241661071777

Token 40: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08511146903038025
    2. '(' → logprob: -3.585111379623413
    3. ' ' → logprob: -3.585111379623413
    4. '\' → logprob: -4.835111618041992
    5. '    
' → logprob: -5.460111618041992
    6. '(
' → logprob: -6.210111618041992
    7. '\n' → logprob: -6.460111618041992
    8. '    ' → logprob: -6.585111618041992
    9. ' return' → logprob: -6.835111618041992
    10. '  ' → logprob: -6.835111618041992

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07897119969129562
    2. 'int' → logprob: -2.5789711475372314
    3. '```' → logprob: -10.453970909118652
    4. '   ' → logprob: -11.453970909118652
    5. '`' → logprob: -11.703970909118652
    6. '=int' → logprob: -11.828970909118652
    7. ' ' → logprob: -12.203970909118652
    8. ' `' → logprob: -12.328970909118652
    9. '(int' → logprob: -12.453970909118652
    10. ' intval' → logprob: -12.703970909118652

Token 42: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1743248701095581
    2. '   ' → logprob: -1.924324870109558
    3. '(
' → logprob: -4.549324989318848
    4. ' ' → logprob: -7.174324989318848
    5. '\' → logprob: -7.549324989318848
    6. ' (' → logprob: -7.674324989318848
    7. '    
' → logprob: -8.424324989318848
    8. ')' → logprob: -8.674324989318848
    9. '    ' → logprob: -8.799324989318848
    10. '\n' → logprob: -8.799324989318848

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002108118060277775
    2. ' ' → logprob: -9.875210762023926
    3. '    
' → logprob: -9.875210762023926
    4. ' return' → logprob: -10.875210762023926
    5. '       ' → logprob: -11.000210762023926
    6. '    ' → logprob: -11.000210762023926
    7. 'return' → logprob: -11.125210762023926
    8. '```' → logprob: -11.250210762023926
    9. '  ' → logprob: -12.000210762023926
    10. 'r' → logprob: -12.125210762023926

Token 44: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02304467000067234
    2. 'return' → logprob: -4.773044586181641
    3. 'n' (adapté à ' n') → logprob: -5.773044586181641
    4. 'r' → logprob: -6.023044586181641
    5. 'v' → logprob: -6.273044586181641
    6. 'value' → logprob: -6.398044586181641
    7. ' return' → logprob: -6.648044586181641
    8. ' ' → logprob: -7.273044586181641
    9. 'user' → logprob: -7.398044586181641
    10. 'a' → logprob: -7.523044586181641

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286500841379166
    2. '=' → logprob: -2.2378649711608887
    3. ' ' → logprob: -10.487865447998047
    4. '  ' → logprob: -11.862865447998047
    5. ' =
' → logprob: -13.237865447998047
    6. '=int' → logprob: -13.362865447998047
    7. '   ' → logprob: -13.612865447998047
    8. ')' → logprob: -14.487865447998047
    9. '.' → logprob: -14.737865447998047
    10. ',' → logprob: -14.862865447998047

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02774454466998577
    2. 'int' → logprob: -3.9027445316314697
    3. ' input' → logprob: -5.027744770050049
    4. 'input' → logprob: -7.402744770050049
    5. '=int' → logprob: -12.40274429321289
    6. '(int' → logprob: -13.27774429321289
    7. ' ' → logprob: -13.27774429321289
    8. ' ' → logprob: -13.52774429321289
    9. '<int' → logprob: -13.77774429321289
    10. '   ' → logprob: -13.90274429321289

Token 47: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519693076610565
    2. '(input' → logprob: -1.501969337463379
    3. ' (' → logprob: -11.376969337463379
    4. '('' → logprob: -11.876969337463379
    5. '(user' → logprob: -12.126969337463379
    6. '(
' → logprob: -12.376969337463379
    7. '(in' → logprob: -12.626969337463379
    8. 'input' → logprob: -13.251969337463379
    9. '()' → logprob: -13.251969337463379
    10. '(

' → logprob: -14.501969337463379

Token 48: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6070289611816406
    2. '()' → logprob: -0.8570289611816406
    3. '('' → logprob: -4.232028961181641
    4. '())' → logprob: -4.232028961181641
    5. '("("' → logprob: -7.482028961181641
    6. ')' → logprob: -7.982028961181641
    7. '(()' → logprob: -8.60702896118164
    8. '("' → logprob: -8.98202896118164
    9. '()))' → logprob: -9.48202896118164
    10. '(""))' → logprob: -9.73202896118164

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7076550126075745
    2. '\n' → logprob: -1.7076549530029297
    3. ')' → logprob: -2.8326549530029297
    4. '<|end|>' → logprob: -2.8326549530029297
    5. 'return' → logprob: -2.9576549530029297
    6. '
' → logprob: -2.9576549530029297
    7. '\' → logprob: -3.8326549530029297
    8. '  
' → logprob: -3.9576549530029297
    9. '    
' → logprob: -3.9576549530029297
    10. ' ' → logprob: -4.45765495300293

Token 50: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1661587506532669
    2. ' ' → logprob: -3.166158676147461
    3. '\n' → logprob: -3.291158676147461
    4. 'return' → logprob: -3.791158676147461
    5. '    
' → logprob: -4.416158676147461
    6. '
' → logprob: -4.666158676147461
    7. '  
' → logprob: -5.041158676147461
    8. ' return' → logprob: -5.541158676147461
    9. '  ' → logprob: -5.666158676147461
    10. '<|end|>' → logprob: -5.666158676147461

Token 51: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7041721940040588
    2. '   ' → logprob: -0.8291721940040588
    3. ' return' → logprob: -2.704172134399414
    4. ' ' → logprob: -7.454172134399414
    5. 'r' → logprob: -7.704172134399414
    6. '  ' → logprob: -8.454172134399414
    7. '_return' → logprob: -8.704172134399414
    8. 'if' → logprob: -8.829172134399414
    9. ':return' → logprob: -9.204172134399414
    10. ' if' → logprob: -9.204172134399414

Token 52: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7101892232894897
    2. 'return' → logprob: -0.7101892232894897
    3. ' retourne' → logprob: -4.585189342498779
    4. '_return' → logprob: -6.085189342498779
    5. ' ' → logprob: -6.960189342498779
    6. 'r' → logprob: -7.710189342498779
    7. 'eturn' → logprob: -7.960189342498779
    8. ' retour' → logprob: -7.960189342498779
    9. ' retourner' → logprob: -8.460188865661621
    10. 's' → logprob: -8.710188865661621

Token 53: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6934006214141846
    2. ' n' → logprob: -0.6934006214141846
    3. ' ' → logprob: -8.818400382995605
    4. '	n' → logprob: -9.693400382995605
    5. '(n' → logprob: -11.318400382995605
    6. ' ' → logprob: -11.818400382995605
    7. ' la' → logprob: -11.943400382995605
    8. ')n' → logprob: -12.443400382995605
    9. '<|end|>' → logprob: -13.318400382995605
    10. '  ' → logprob: -13.693400382995605

Token 54: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.7763684988021851
    2. 'n' → logprob: -1.401368498802185
    3. ' n' → logprob: -1.901368498802185
    4. ' nombre' → logprob: -2.4013686180114746
    5. ' ' → logprob: -4.026368618011475
    6. 'nombre' → logprob: -4.276368618011475
    7. 'val' → logprob: -4.651368618011475
    8. ' value' → logprob: -5.026368618011475
    9. ' variable' → logprob: -6.651368618011475
    10. ' val' → logprob: -7.026368618011475

Token 55: ' entière' (ID: 61583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05024946480989456
    2. ' ' → logprob: -3.8002495765686035
    3. ' n' → logprob: -4.8002495765686035
    4. '\n' → logprob: -5.0502495765686035
    5. '\' → logprob: -5.5502495765686035
    6. '(n' → logprob: -5.6752495765686035
    7. '<|end|>' → logprob: -6.4252495765686035
    8. '   ' → logprob: -6.5502495765686035
    9. '	n' → logprob: -7.8002495765686035
    10. '  ' → logprob: -8.300249099731445

Token 56: ' sais' (ID: 30010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.060380902141332626
    2. '\n' → logprob: -3.9353809356689453
    3. '   ' → logprob: -4.185380935668945
    4. ' ' → logprob: -4.810380935668945
    5. ' n' → logprob: -5.060380935668945
    6. '\' → logprob: -5.185380935668945
    7. '<|end|>' → logprob: -6.935380935668945
    8. '    
' → logprob: -7.685380935668945
    9. '(n' → logprob: -7.935380935668945
    10. '  ' → logprob: -8.060380935668945

Token 57: 'ie' (ID: 396)
  Prédit: 'sie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sie' → logprob: -0.032050564885139465
    2. 'e' → logprob: -3.657050609588623
    3. 'ie' → logprob: -5.532050609588623
    4. 's' → logprob: -6.657050609588623
    5. 'es' → logprob: -7.782050609588623
    6. 'rie' → logprob: -11.282050132751465
    7. 'asie' → logprob: -11.282050132751465
    8. '   ' → logprob: -11.657050132751465
    9. 'isie' → logprob: -12.032050132751465
    10. 'ss' → logprob: -12.032050132751465

Token 58: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36779865622520447
    2. 'n' → logprob: -1.8677986860275269
    3. '\n' → logprob: -2.2427985668182373
    4. '<|end|>' → logprob: -4.367798805236816
    5. '\' → logprob: -4.867798805236816
    6. '    
' → logprob: -4.992798805236816
    7. 'return' → logprob: -5.367798805236816
    8. ' ' → logprob: -5.492798805236816
    9. ' return' → logprob: -5.867798805236816
    10. ' n' → logprob: -6.367798805236816

Token 59: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20296190679073334
    2. ' l' → logprob: -1.7029619216918945
    3. '	l' → logprob: -6.9529619216918945
    4. ' ' → logprob: -8.077961921691895
    5. '   ' → logprob: -9.452961921691895
    6. 'la' → logprob: -9.702961921691895
    7. ''utilisateur' → logprob: -10.827961921691895
    8. 'user' → logprob: -11.202961921691895
    9. ' ' → logprob: -11.452961921691895
    10. '  ' → logprob: -11.577961921691895

Token 60: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.03458408638834953
    2. 'u' → logprob: -4.159584045410156
    3. ''' → logprob: -4.284584045410156
    4. 'a' → logprob: -6.034584045410156
    5. ''util' → logprob: -7.534584045410156
    6. '’utilisateur' → logprob: -7.534584045410156
    7. ''u' → logprob: -7.659584045410156
    8. 'e' → logprob: -8.659584045410156
    9. ''a' → logprob: -8.784584045410156
    10. ''user' → logprob: -9.159584045410156

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2322922945022583
    2. '\n' → logprob: -2.6072921752929688
    3. 'n' → logprob: -2.8572921752929688
    4. 'return' → logprob: -3.2322921752929688
    5. ' return' → logprob: -4.232292175292969
    6. '    
' → logprob: -4.857292175292969
    7. '\' → logprob: -5.357292175292969
    8. '
' → logprob: -5.607292175292969
    9. ' ' → logprob: -6.607292175292969
    10. '	return' → logprob: -6.982292175292969

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005056810099631548
    2. 'return' → logprob: -5.505056858062744
    3. ' return' → logprob: -8.005056381225586
    4. 'n' → logprob: -8.130056381225586
    5. '    
' → logprob: -9.255056381225586
    6. ' ' → logprob: -9.505056381225586
    7. '  ' → logprob: -10.005056381225586
    8. '	return' → logprob: -10.130056381225586
    9. '<|end|>' → logprob: -10.755056381225586
    10. '
' → logprob: -10.880056381225586

Token 63: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09006138890981674
    2. '   ' → logprob: -2.8400614261627197
    3. ' return' → logprob: -3.5900614261627197
    4. 'n' → logprob: -9.59006118774414
    5. '	return' → logprob: -11.09006118774414
    6. ' ' → logprob: -11.46506118774414
    7. '  ' → logprob: -12.34006118774414
    8. 'r' → logprob: -13.59006118774414
    9. ':return' → logprob: -13.59006118774414
    10. '    ' → logprob: -13.96506118774414

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.016108855605125427
    2. 'n' → logprob: -4.141108989715576
    3. '(n' → logprob: -10.016108512878418
    4. ' ' → logprob: -11.016108512878418
    5. ' ' → logprob: -11.391108512878418
    6. '	n' → logprob: -13.641108512878418
    7. '_n' → logprob: -15.266108512878418
    8. '(' → logprob: -15.766108512878418
    9. ',n' → logprob: -16.391109466552734
    10. '[n' → logprob: -16.391109466552734

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9631780982017517
    2. '
' → logprob: -1.2131781578063965
    3. '#' → logprob: -1.9631781578063965
    4. '```' → logprob: -2.7131781578063965
    5. '<|end|>' → logprob: -2.7131781578063965
    6. '\n' → logprob: -4.0881781578063965
    7. '\' → logprob: -4.7131781578063965
    8. '' → logprob: -5.0881781578063965
    9. 'n' → logprob: -5.0881781578063965
    10. '

' → logprob: -6.2131781578063965

Token 67: ' count' (ID: 3605)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.10444854199886322
    2. ' compute' → logprob: -2.8544485569000244
    3. ' read' → logprob: -4.354448318481445
    4. ' process' → logprob: -4.854448318481445
    5. ' sum' → logprob: -5.354448318481445
    6. ' factorial' → logprob: -5.479448318481445
    7. ' space' → logprob: -5.479448318481445
    8. ' main' → logprob: -5.729448318481445
    9. ' write' → logprob: -6.604448318481445
    10. ' add' → logprob: -7.229448318481445

Token 68: '_coin' (ID: 187802)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37926357984542847
    2. '_occ' → logprob: -2.1292636394500732
    3. '_words' → logprob: -2.7542636394500732
    4. '_elements' → logprob: -3.0042636394500732
    5. '_v' → logprob: -3.1292636394500732
    6. '_numbers' → logprob: -4.629263401031494
    7. '_sub' → logprob: -5.629263401031494
    8. '_items' → logprob: -5.754263401031494
    9. '_digits' → logprob: -5.754263401031494
    10. '_unique' → logprob: -6.379263401031494

Token 69: '(x' (ID: 4061)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00018232580623589456
    2. '_s' → logprob: -9.250182151794434
    3. '(' → logprob: -10.000182151794434
    4. '_' → logprob: -10.375182151794434
    5. '(s' → logprob: -11.875182151794434
    6. '_change' → logprob: -13.875182151794434
    7. '()' → logprob: -14.250182151794434
    8. ' s' → logprob: -15.125182151794434
    9. 'change' → logprob: -16.37518310546875
    10. 'age' → logprob: -16.62518310546875

Token 70: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024375900626182556
    2. ')' → logprob: -4.149375915527344
    3. 's' → logprob: -4.899375915527344
    4. ' ):' → logprob: -8.399375915527344
    5. '_' → logprob: -8.899375915527344
    6. '(' → logprob: -9.524375915527344
    7. ',' → logprob: -9.524375915527344
    8. 'coins' → logprob: -9.524375915527344
    9. '1' → logprob: -9.649375915527344
    10. '):
' → logprob: -10.524375915527344

Token 71: ' op' (ID: 991)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.19600661098957062
    2. 'y' → logprob: -2.3210065364837646
    3. ' n' → logprob: -3.9460065364837646
    4. ' coins' → logprob: -4.321006774902344
    5. ' c' → logprob: -4.696006774902344
    6. ' target' → logprob: -5.196006774902344
    7. ' ' → logprob: -5.321006774902344
    8. ' coin' → logprob: -5.571006774902344
    9. ' amount' → logprob: -5.696006774902344
    10. ' a' → logprob: -6.321006774902344

Token 72: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7137902975082397
    2. '):' → logprob: -1.5887902975082397
    3. 't' → logprob: -2.5887904167175293
    4. 'en' → logprob: -2.7137904167175293
    5. ')' → logprob: -2.8387904167175293
    6. 'tion' → logprob: -4.213790416717529
    7. '):
' → logprob: -4.463790416717529
    8. 'u' → logprob: -4.588790416717529
    9. 'ti' → logprob: -4.963790416717529
    10. 'er' → logprob: -4.963790416717529

Token 73: ' min' (ID: 1349)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.05803363397717476
    2. 'y' → logprob: -3.6830337047576904
    3. ' n' → logprob: -4.058033466339111
    4. ' ' → logprob: -6.308033466339111
    5. ' coin' → logprob: -6.433033466339111
    6. ' value' → logprob: -6.808033466339111
    7. ' coins' → logprob: -6.933033466339111
    8. ' target' → logprob: -6.933033466339111
    9. 'n' → logprob: -7.308033466339111
    10. ' amount' → logprob: -7.433033466339111

Token 74: '_op' (ID: 20111)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5488865971565247
    2. '_coin' → logprob: -2.54888653755188
    3. '_' → logprob: -2.67388653755188
    4. '_value' → logprob: -2.79888653755188
    5. '_val' → logprob: -3.42388653755188
    6. 'ut' → logprob: -3.42388653755188
    7. ')' → logprob: -3.54888653755188
    8. ',' → logprob: -3.79888653755188
    9. 'ount' → logprob: -4.173886775970459
    10. 'o' → logprob: -4.923886775970459

Token 75: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6069682240486145
    2. ')' → logprob: -0.8569682240486145
    3. '):' → logprob: -3.9819681644439697
    4. ',' → logprob: -6.106968402862549
    5. '):
' → logprob: -6.106968402862549
    6. '=' → logprob: -7.106968402862549
    7. 'utations' → logprob: -7.106968402862549
    8. ''):' → logprob: -7.981968402862549
    9. '()' → logprob: -7.981968402862549
    10. 'er' → logprob: -8.35696792602539

Token 76: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3411281704902649
    2. '   ' → logprob: -1.3411281108856201
    3. ' :' → logprob: -4.091128349304199
    4. '):' → logprob: -5.716128349304199
    5. '    ' → logprob: -6.091128349304199
    6. ')' → logprob: -6.466128349304199
    7. ' ' → logprob: -6.841128349304199
    8. '(' → logprob: -7.091128349304199
    9. '():' → logprob: -7.841128349304199
    10. '  ' → logprob: -8.3411283493042

Token 77: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11765144765377045
    2. ':' → logprob: -3.1176514625549316
    3. ' ' → logprob: -3.2426514625549316
    4. '    ' → logprob: -4.117651462554932
    5. ' :' → logprob: -5.242651462554932
    6. ' if' → logprob: -5.992651462554932
    7. '  ' → logprob: -6.617651462554932
    8. ' 
' → logprob: -8.117650985717773
    9. ')' → logprob: -8.367650985717773
    10. 'if' → logprob: -8.492650985717773

Token 78: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2119952291250229
    2. ' if' → logprob: -2.5869951248168945
    3. '   ' → logprob: -2.7119951248168945
    4. '    ' → logprob: -3.2119951248168945
    5. '  ' → logprob: -6.2119951248168945
    6. ' i' → logprob: -6.7119951248168945
    7. '  ' → logprob: -6.8369951248168945
    8. ' ' → logprob: -6.9619951248168945
    9. 'if' → logprob: -7.0869951248168945
    10. 'i' → logprob: -7.3369951248168945

Token 79: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2879360914230347
    2. ' if' → logprob: -1.2879360914230347
    3. ':' → logprob: -2.287936210632324
    4. '   ' → logprob: -2.412936210632324
    5. ' =' → logprob: -2.412936210632324
    6. 'if' → logprob: -2.787936210632324
    7. ' :' → logprob: -3.912936210632324
    8. 'def' → logprob: -3.912936210632324
    9. '  ' → logprob: -4.287936210632324
    10. '=' → logprob: -5.037936210632324

Token 80: ' dé' (ID: 2393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49667009711265564
    2. ':' → logprob: -2.1216700077056885
    3. ' :' → logprob: -2.8716700077056885
    4. ' (' → logprob: -3.1216700077056885
    5. ' ' → logprob: -3.4966700077056885
    6. '(' → logprob: -3.7466700077056885
    7. '<|end|>' → logprob: -4.246670246124268
    8. '  ' → logprob: -4.371670246124268
    9. '<|end|>' → logprob: -4.371670246124268
    10. ' def' → logprob: -4.496670246124268

Token 81: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20268890261650085
    2. 'term' → logprob: -1.7026889324188232
    3. 'fin' → logprob: -8.577689170837402
    4. 'c' → logprob: -8.952689170837402
    5. '' → logprob: -9.327689170837402
    6. 'comp' → logprob: -9.577689170837402
    7. 'ƒ' → logprob: -9.577689170837402
    8. '#' → logprob: -9.702689170837402
    9. 'fine' → logprob: -9.827689170837402
    10. '   ' → logprob: -9.952689170837402

Token 82: 'ine' (ID: 514)
  Prédit: 'ermine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ermine' → logprob: -0.6035283207893372
    2. 'e' → logprob: -1.9785282611846924
    3. 'erm' → logprob: -2.1035282611846924
    4. 'ine' → logprob: -2.3535282611846924
    5. 'er' → logprob: -2.8535282611846924
    6. 'ermit' → logprob: -4.3535284996032715
    7. 'term' → logprob: -4.9785284996032715
    8. '   ' → logprob: -5.8535284996032715
    9. '```' → logprob: -5.8535284996032715
    10. 'erit' → logprob: -6.2285284996032715

Token 83: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8144349455833435
    2. '   ' → logprob: -1.5644350051879883
    3. ' if' → logprob: -1.8144350051879883
    4. 'if' → logprob: -3.0644350051879883
    5. 'i' → logprob: -3.5644350051879883
    6. ')' → logprob: -3.6894350051879883
    7. '  ' → logprob: -3.9394350051879883
    8. ',' → logprob: -4.189435005187988
    9. ' le' → logprob: -4.314435005187988
    10. ' ' → logprob: -5.314435005187988

Token 84: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5504308342933655
    2. ' ' → logprob: -1.4254307746887207
    3. '   ' → logprob: -2.3004307746887207
    4. 'nombre' → logprob: -2.9254307746887207
    5. 's' → logprob: -5.300430774688721
    6. '  ' → logprob: -5.425430774688721
    7. ' meilleur' → logprob: -5.925430774688721
    8. 'n' → logprob: -6.050430774688721
    9. ',' → logprob: -6.050430774688721
    10. ' if' → logprob: -6.675430774688721

Token 85: ' minimum' (ID: 11085)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2985445559024811
    2. '_' → logprob: -2.6735446453094482
    3. ' maximal' → logprob: -2.6735446453094482
    4. ' maximale' → logprob: -3.4235446453094482
    5. ' ' → logprob: -3.7985446453094482
    6. ' d' → logprob: -3.9235446453094482
    7. '  ' → logprob: -4.173544406890869
    8. '   ' → logprob: -5.298544406890869
    9. '    ' → logprob: -5.423544406890869
    10. ' maximum' → logprob: -5.798544406890869

Token 86: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34728309512138367
    2. ' de' → logprob: -2.222283124923706
    3. ' d' → logprob: -2.972283124923706
    4. '<|end|>' → logprob: -3.097283124923706
    5. '  ' → logprob: -3.347283124923706
    6. '<|end|>' → logprob: -3.972283124923706
    7. '    ' → logprob: -4.347282886505127
    8. '_' → logprob: -4.722282886505127
    9. '   ' → logprob: -5.097282886505127
    10. 'de' → logprob: -6.972282886505127

Token 87: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.18028897047042847
    2. ' ' → logprob: -2.4302890300750732
    3. ' monna' → logprob: -3.8052890300750732
    4. ' pieces' → logprob: -4.055288791656494
    5. '```' → logprob: -5.055288791656494
    6. ' coins' → logprob: -5.180288791656494
    7. 'pieces' → logprob: -5.305288791656494
    8. 'coins' → logprob: -5.805288791656494
    9. ' monnaie' → logprob: -5.805288791656494
    10. '   ' → logprob: -5.805288791656494

Token 88: ' nécessaires' (ID: 74402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09264791756868362
    2. '_' → logprob: -2.7176480293273926
    3. '  ' → logprob: -4.717648029327393
    4. ' nécessaires' → logprob: -6.092648029327393
    5. '   ' → logprob: -6.217648029327393
    6. ' ,' → logprob: -6.342648029327393
    7. ' (' → logprob: -6.717648029327393
    8. 's' → logprob: -6.967648029327393
    9. ',' → logprob: -6.967648029327393
    10. ' nécessaire' → logprob: -7.592648029327393

Token 89: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12996748089790344
    2. '   ' → logprob: -2.879967451095581
    3. '  ' → logprob: -3.879967451095581
    4. ' pour' → logprob: -3.879967451095581
    5. ',' → logprob: -5.37996768951416
    6. '.' → logprob: -5.75496768951416
    7. ' ,' → logprob: -5.87996768951416
    8. ' :' → logprob: -6.37996768951416
    9. '    ' → logprob: -6.37996768951416
    10. '<|end|>' → logprob: -6.50496768951416

Token 90: ' atteindre' (ID: 95734)
  Prédit: ' rendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rendre' → logprob: -0.11382219195365906
    2. ' résoudre' → logprob: -3.7388222217559814
    3. ' faire' → logprob: -4.488821983337402
    4. ' ' → logprob: -4.738821983337402
    5. ' le' → logprob: -4.738821983337402
    6. ' la' → logprob: -4.863821983337402
    7. '   ' → logprob: -5.113821983337402
    8. 'x' → logprob: -5.113821983337402
    9. 'r' → logprob: -5.613821983337402
    10. '_' → logprob: -6.238821983337402

Token 91: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8498572707176208
    2. ' ' → logprob: -1.5998573303222656
    3. ' x' → logprob: -2.2248573303222656
    4. ' le' → logprob: -2.2248573303222656
    5. ' un' → logprob: -2.8498573303222656
    6. ' une' → logprob: -3.3498573303222656
    7. ' l' → logprob: -3.8498573303222656
    8. ' a' → logprob: -4.224857330322266
    9. 'x' → logprob: -5.474857330322266
    10. ' amount' → logprob: -5.974857330322266

Token 92: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34374943375587463
    2. ' valeur' → logprob: -2.218749523162842
    3. ' somme' → logprob: -2.468749523162842
    4. ' x' → logprob: -3.093749523162842
    5. '   ' → logprob: -3.968749523162842
    6. ' target' → logprob: -5.218749523162842
    7. ' val' → logprob: -5.468749523162842
    8. ' montant' → logprob: -5.468749523162842
    9. '  ' → logprob: -5.843749523162842
    10. ' amount' → logprob: -5.968749523162842

Token 93: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028651881963014603
    2. '  ' → logprob: -4.903651714324951
    3. '   ' → logprob: -5.153651714324951
    4. ' à' → logprob: -5.278651714324951
    5. '_' → logprob: -5.653651714324951
    6. ' donnée' → logprob: -7.153651714324951
    7. '.' → logprob: -7.278651714324951
    8. ',' → logprob: -7.653651714324951
    9. ' (' → logprob: -7.653651714324951
    10. ' a' → logprob: -7.653651714324951

Token 94: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6474259495735168
    2. ' ' → logprob: -1.522425889968872
    3. '   ' → logprob: -1.897425889968872
    4. ' :' → logprob: -2.647425889968872
    5. ',' → logprob: -3.772425889968872
    6. '  ' → logprob: -5.022426128387451
    7. ' if' → logprob: -6.147426128387451
    8. ' ,' → logprob: -6.522426128387451
    9. '.' → logprob: -6.647426128387451
    10. '    ' → logprob: -7.647426128387451

Token 95: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42409223318099976
    2. ' :' → logprob: -1.9240922927856445
    3. ':' → logprob: -2.1740922927856445
    4. ',' → logprob: -3.1740922927856445
    5. '   ' → logprob: -4.0490922927856445
    6. '.' → logprob: -5.4240922927856445
    7. ' ,' → logprob: -5.5490922927856445
    8. ' :
' → logprob: -5.5490922927856445
    9. '  
' → logprob: -5.5490922927856445
    10. ' 
' → logprob: -5.6740922927856445

Token 96: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8097999691963196
    2. ':' → logprob: -0.9347999691963196
    3. '   ' → logprob: -2.309799909591675
    4. ' :' → logprob: -3.809799909591675
    5. ' 
' → logprob: -4.434800148010254
    6. '
' → logprob: -4.559800148010254
    7. ':
' → logprob: -5.809800148010254
    8. '  
' → logprob: -5.809800148010254
    9. ' :
' → logprob: -5.934800148010254
    10. '   
' → logprob: -6.309800148010254

Token 97: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8582179546356201
    2. '   ' → logprob: -1.3582179546356201
    3. ' if' → logprob: -1.3582179546356201
    4. 'if' → logprob: -3.23321795463562
    5. '    ' → logprob: -4.358218193054199
    6. '  ' → logprob: -5.858218193054199
    7. ' 
' → logprob: -6.733218193054199
    8. 'n' → logprob: -6.733218193054199
    9. '    
' → logprob: -7.733218193054199
    10. 'i' → logprob: -8.2332181930542

Token 98: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5344033241271973
    2. ',' → logprob: -1.9094033241271973
    3. ' ==' → logprob: -2.2844033241271973
    4. ' >' → logprob: -2.4094033241271973
    5. ' >=' → logprob: -2.4094033241271973
    6. ' <=' → logprob: -2.5344033241271973
    7. ' =' → logprob: -2.5344033241271973
    8. '>' → logprob: -3.2844033241271973
    9. ')' → logprob: -3.5344033241271973
    10. '=' → logprob: -3.6594033241271973

Token 99: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.15083546936511993
    2. ' ' → logprob: -2.5258355140686035
    3. 'int' → logprob: -3.2758355140686035
    4. ' l' → logprob: -4.2758355140686035
    5. '   ' → logprob: -5.4008355140686035
    6. '  ' → logprob: -6.9008355140686035
    7. ' la' → logprob: -7.2758355140686035
    8. ' ' → logprob: -8.400835037231445
    9. 'l' → logprob: -8.525835037231445
    10. '    ' → logprob: -8.650835037231445

Token 100: ' somme' (ID: 64484)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.5896278023719788
    2. ' somme' → logprob: -1.714627742767334
    3. 'val' → logprob: -2.089627742767334
    4. 's' → logprob: -2.339627742767334
    5. ' val' → logprob: -3.839627742767334
    6. '   ' → logprob: -5.089627742767334
    7. ' ' → logprob: -5.714627742767334
    8. ' quantité' → logprob: -6.214627742767334
    9. ' vale' → logprob: -6.464627742767334
    10. ' plus' → logprob: -6.839627742767334

Token 101: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9709405899047852
    2. ',' → logprob: -1.4709405899047852
    3. ' à' → logprob: -1.5959405899047852
    4. ' ' → logprob: -2.345940589904785
    5. ')' → logprob: -3.845940589904785
    6. '<|end|>' → logprob: -4.220940589904785
    7. ' ,' → logprob: -4.345940589904785
    8. '  ' → logprob: -4.845940589904785
    9. ' )' → logprob: -4.970940589904785
    10. ' =' → logprob: -5.095940589904785

Token 102: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.5128234028816223
    2. 'faire' → logprob: -1.8878233432769775
    3. 'payer' → logprob: -2.8878233432769775
    4. 'c' → logprob: -3.1378233432769775
    5. 'changer' → logprob: -4.137823581695557
    6. ' atteindre' → logprob: -4.137823581695557
    7. ' rendre' → logprob: -4.512823581695557
    8. 'former' → logprob: -4.762823581695557
    9. 'com' → logprob: -5.012823581695557
    10. 'composer' → logprob: -5.137823581695557

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.183624729514122
    2. ' ' → logprob: -2.558624744415283
    3. ',' → logprob: -2.683624744415283
    4. ':' → logprob: -4.808624744415283
    5. ' ,' → logprob: -5.558624744415283
    6. ' :' → logprob: -5.933624744415283
    7. '  ' → logprob: -6.058624744415283
    8. ')' → logprob: -6.558624744415283
    9. '    ' → logprob: -7.058624744415283
    10. '
' → logprob: -7.808624744415283

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01041874848306179
    2. ' ' → logprob: -5.135418891906738
    3. ',' → logprob: -6.260418891906738
    4. '  ' → logprob: -7.385418891906738
    5. '    ' → logprob: -7.760418891906738
    6. '<|end|>' → logprob: -8.010418891906738
    7. ':' → logprob: -8.385418891906738
    8. '
' → logprob: -8.635418891906738
    9. ' ,' → logprob: -8.760418891906738
    10. ' if' → logprob: -9.135418891906738

Token 105: ' #' (ID: 1069)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.47141510248184204
    2. 'coins' → logprob: -1.8464150428771973
    3. '   ' → logprob: -2.0964150428771973
    4. ' if' → logprob: -2.5964150428771973
    5. ' coin' → logprob: -4.471415042877197
    6. ' denominations' → logprob: -5.721415042877197
    7. 'if' → logprob: -6.346415042877197
    8. 'coin' → logprob: -7.346415042877197
    9. '    ' → logprob: -7.596415042877197
    10. ' dp' → logprob: -7.971415042877197

Token 106: ' op' (ID: 991)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.18518656492233276
    2. ' coins' → logprob: -2.0601866245269775
    3. ' if' → logprob: -4.060186386108398
    4. 'if' → logprob: -4.185186386108398
    5. '   ' → logprob: -5.685186386108398
    6. 'op' → logprob: -7.060186386108398
    7. ' op' → logprob: -7.310186386108398
    8. 'for' → logprob: -7.435186386108398
    9. 'ops' → logprob: -7.435186386108398
    10. 'def' → logprob: -7.435186386108398

Token 107: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8519285321235657
    2. ' =' → logprob: -1.226928472518921
    3. ' :' → logprob: -2.851928472518921
    4. ')' → logprob: -3.101928472518921
    5. ',' → logprob: -3.101928472518921
    6. '   ' → logprob: -3.226928472518921
    7. '=' → logprob: -3.226928472518921
    8. '):' → logprob: -3.976928472518921
    9. ' ' → logprob: -4.1019287109375
    10. '[' → logprob: -5.6019287109375

Token 108: ' liste' (ID: 31719)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5120968818664551
    2. '[' → logprob: -1.887096881866455
    3. ' list' → logprob: -2.012096881866455
    4. ' len' → logprob: -3.137096881866455
    5. ' la' → logprob: -4.512096881866455
    6. '[]' → logprob: -4.762096881866455
    7. ' []' → logprob: -4.887096881866455
    8. '[len' → logprob: -4.887096881866455
    9. 'list' → logprob: -5.012096881866455
    10. '   ' → logprob: -5.137096881866455

Token 109: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.26807335019111633
    2. 'des' → logprob: -1.768073320388794
    3. '_des' → logprob: -3.643073320388794
    4. '   ' → logprob: -4.893073558807373
    5. '[' → logprob: -5.268073558807373
    6. 'de' → logprob: -5.268073558807373
    7. ' de' → logprob: -5.393073558807373
    8. ' ' → logprob: -5.643073558807373
    9. ' =' → logprob: -6.268073558807373
    10. ' of' → logprob: -6.393073558807373

Token 110: ' valeurs' (ID: 73668)
  Prédit: ' pièces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.33944374322891235
    2. ' opérations' → logprob: -2.8394436836242676
    3. 'pieces' → logprob: -3.2144436836242676
    4. ' valeurs' → logprob: -3.4644436836242676
    5. '   ' → logprob: -3.9644436836242676
    6. ' pieces' → logprob: -4.089443683624268
    7. 'pi' → logprob: -4.214443683624268
    8. ' ' → logprob: -4.214443683624268
    9. 'options' → logprob: -4.339443683624268
    10. ' options' → logprob: -4.589443683624268

Token 111: ' disponibles' (ID: 36617)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9406688213348389
    2. '   ' → logprob: -1.3156688213348389
    3. 'des' → logprob: -2.565668821334839
    4. '  ' → logprob: -2.940668821334839
    5. ' de' → logprob: -3.065668821334839
    6. '_des' → logprob: -3.315668821334839
    7. ' disponibles' → logprob: -3.940668821334839
    8. ' ' → logprob: -4.190669059753418
    9. 'de' → logprob: -4.190669059753418
    10. '[]' → logprob: -5.065669059753418

Token 112: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3822542428970337
    2. '   ' → logprob: -1.3822542428970337
    3. 'de' → logprob: -1.5072542428970337
    4. ' de' → logprob: -2.257254123687744
    5. ',' → logprob: -2.882254123687744
    6. 'coins' → logprob: -3.757254123687744
    7. ']' → logprob: -4.007254123687744
    8. ' des' → logprob: -4.382254123687744
    9. 'des' → logprob: -4.507254123687744
    10. '])' → logprob: -4.632254123687744

Token 113: ' les' (ID: 1341)
  Prédit: ' pièces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.4730205535888672
    2. 'les' → logprob: -1.9730205535888672
    3. 'pi' → logprob: -2.598020553588867
    4. 'pieces' → logprob: -2.598020553588867
    5. 'coins' → logprob: -3.598020553588867
    6. '   ' → logprob: -3.973020553588867
    7. ' les' → logprob: -4.348020553588867
    8. ' ' → logprob: -4.848020553588867
    9. ' pieces' → logprob: -5.098020553588867
    10. 'coin' → logprob: -6.223020553588867

Token 114: ' pièces' (ID: 49165)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.04112836718559265
    2. ' pièces' → logprob: -3.416128396987915
    3. 'pieces' → logprob: -5.291128158569336
    4. '   ' → logprob: -7.166128158569336
    5. ' ' → logprob: -7.791128158569336
    6. ' pi' → logprob: -7.916128158569336
    7. ' monna' → logprob: -8.666128158569336
    8. 'coins' → logprob: -9.041128158569336
    9. '  ' → logprob: -9.166128158569336
    10. '```' → logprob: -9.291128158569336

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06716320663690567
    2. ')' → logprob: -3.0671632289886475
    3. ',' → logprob: -4.692162990570068
    4. '
' → logprob: -5.442162990570068
    5. 'def' → logprob: -5.942162990570068
    6. '  ' → logprob: -7.942162990570068
    7. ')
' → logprob: -8.067163467407227
    8. ' ' → logprob: -8.317163467407227
    9. ' ,' → logprob: -8.567163467407227
    10. '),' → logprob: -8.942163467407227

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028545670211315155
    2. ',' → logprob: -6.877854347229004
    3. ':' → logprob: -7.502854347229004
    4. 'if' → logprob: -8.127854347229004
    5. ' if' → logprob: -8.377854347229004
    6. '  ' → logprob: -9.002854347229004
    7. ')' → logprob: -9.377854347229004
    8. 'def' → logprob: -9.627854347229004
    9. ' ' → logprob: -9.752854347229004
    10. 'n' → logprob: -9.877854347229004

Token 117: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10910627990961075
    2. ' min' → logprob: -2.9841063022613525
    3. ' dp' → logprob: -4.109106063842773
    4. 'min' → logprob: -4.359106063842773
    5. 'dp' → logprob: -5.234106063842773
    6. ' ' → logprob: -5.234106063842773
    7. ' if' → logprob: -5.734106063842773
    8. '  ' → logprob: -6.109106063842773
    9. ' max' → logprob: -6.484106063842773
    10. '    ' → logprob: -6.609106063842773

Token 118: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.17918533086776733
    2. 'min' → logprob: -2.054185390472412
    3. '   ' → logprob: -4.679185390472412
    4. ' max' → logprob: -4.929185390472412
    5. ' dp' → logprob: -5.054185390472412
    6. ' result' → logprob: -5.804185390472412
    7. ' n' → logprob: -5.929185390472412
    8. 'dp' → logprob: -6.679185390472412
    9. 'max' → logprob: -6.929185390472412
    10. ' ' → logprob: -7.179185390472412

Token 119: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.07650218904018402
    2. '_' → logprob: -2.8265020847320557
    3. '_ops' → logprob: -4.326502323150635
    4. '_operations' → logprob: -7.826502323150635
    5. '_coin' → logprob: -9.201501846313477
    6. ' _' → logprob: -9.201501846313477
    7. '_co' → logprob: -9.826501846313477
    8. '   ' → logprob: -9.951501846313477
    9. '_oper' → logprob: -9.951501846313477
    10. '_opcode' → logprob: -10.201501846313477

Token 120: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18681055307388306
    2. '=' → logprob: -2.1868104934692383
    3. ' ' → logprob: -3.9368104934692383
    4. ']' → logprob: -4.311810493469238
    5. '[' → logprob: -4.936810493469238
    6. '   ' → logprob: -4.936810493469238
    7. ',' → logprob: -5.811810493469238
    8. ':' → logprob: -5.936810493469238
    9. '[]' → logprob: -6.436810493469238
    10. ')' → logprob: -7.436810493469238

Token 121: ' diction' (ID: 155259)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07779811322689056
    2. '[' → logprob: -2.7027981281280518
    3. '[len' → logprob: -5.202797889709473
    4. '[min' → logprob: -7.202797889709473
    5. '[int' → logprob: -7.327797889709473
    6. '[]' → logprob: -8.452797889709473
    7. ' []' → logprob: -8.577797889709473
    8. '[n' → logprob: -8.702797889709473
    9. ' None' → logprob: -8.952797889709473
    10. '[-' → logprob: -9.702797889709473

Token 122: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.024188805371522903
    2. 'aire' → logprob: -3.899188756942749
    3. '   ' → logprob: -6.899188995361328
    4. 'a' → logprob: -6.899188995361328
    5. 'na' → logprob: -7.399188995361328
    6. '{"' → logprob: -8.399188995361328
    7. '{' → logprob: -8.899188995361328
    8. 'ary' → logprob: -9.024188995361328
    9. ' a' → logprob: -9.524188995361328
    10. 'n' → logprob: -9.649188995361328

Token 123: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21976417303085327
    2. ' ' → logprob: -2.969764232635498
    3. ' =' → logprob: -3.344764232635498
    4. ')' → logprob: -3.594764232635498
    5. '  ' → logprob: -4.219764232635498
    6. '.setdefault' → logprob: -4.344764232635498
    7. ',' → logprob: -4.469764232635498
    8. '<|end|>' → logprob: -4.594764232635498
    9. '    ' → logprob: -4.969764232635498
    10. ' {' → logprob: -5.344764232635498

Token 124: ' mé' (ID: 11291)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.5748096704483032
    2. ' coût' → logprob: -2.0748095512390137
    3. ' minimum' → logprob: -2.1998095512390137
    4. ' coûts' → logprob: -2.9498095512390137
    5. ' valeurs' → logprob: -3.0748095512390137
    6. ' type' → logprob: -3.4498095512390137
    7. ' mém' → logprob: -3.4498095512390137
    8. ' solutions' → logprob: -3.5748095512390137
    9. ' l' → logprob: -3.5748095512390137
    10. ' nombre' → logprob: -3.8248095512390137

Token 125: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.4652199149131775
    2. 'mor' → logprob: -1.3402199745178223
    3. 'moire' → logprob: -2.4652199745178223
    4. 'm' → logprob: -3.7152199745178223
    5. 'th' → logprob: -8.090219497680664
    6. '   ' → logprob: -8.965219497680664
    7. 'мо' → logprob: -9.090219497680664
    8. 'mos' → logprob: -9.590219497680664
    9. '```' → logprob: -10.090219497680664
    10. '#' → logprob: -10.465219497680664

Token 126: 'ïs' (ID: 96230)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0571855753660202
    2. 'ization' → logprob: -3.057185649871826
    3. '   ' → logprob: -6.807185649871826
    4. '{' → logprob: -6.932185649871826
    5. 'ï' → logprob: -6.932185649871826
    6. 'ry' → logprob: -7.182185649871826
    7. '}' → logprob: -7.182185649871826
    8. '#' → logprob: -7.682185649871826
    9. 'ïs' → logprob: -7.682185649871826
    10. '{"' → logprob: -8.057185173034668

Token 127: 'ation' (ID: 387)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4363003075122833
    2. 'z' → logprob: -2.061300277709961
    3. 'ration' → logprob: -2.061300277709961
    4. 'ation' → logprob: -2.561300277709961
    5. 's' → logprob: -5.186300277709961
    6. 're' → logprob: -5.561300277709961
    7. 'tion' → logprob: -6.311300277709961
    8. 'ry' → logprob: -6.561300277709961
    9. 't' → logprob: -6.686300277709961
    10. '#' → logprob: -6.686300277709961

Token 128: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03836310654878616
    2. ':' → logprob: -3.913363218307495
    3. ')' → logprob: -5.038362979888916
    4. '
' → logprob: -5.413362979888916
    5. '):' → logprob: -6.788362979888916
    6. '    
' → logprob: -6.913362979888916
    7. ':
' → logprob: -7.163362979888916
    8. ' ' → logprob: -7.163362979888916
    9. ' :' → logprob: -7.788362979888916
    10. '[' → logprob: -7.788362979888916

Token 129: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.15311241149902344
    2. ' les' → logprob: -2.9031124114990234
    3. 'stock' → logprob: -3.2781124114990234
    4. ' éviter' → logprob: -3.6531124114990234
    5. ' ' → logprob: -5.278112411499023
    6. '   ' → logprob: -5.403112411499023
    7. ' conserver' → logprob: -6.028112411499023
    8. ' mém' → logprob: -6.278112411499023
    9. ' la' → logprob: -6.653112411499023
    10. 'les' → logprob: -6.653112411499023

Token 130: 'er' (ID: 259)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.40436217188835144
    2. 'er' → logprob: -1.1543622016906738
    3. '   ' → logprob: -5.029362201690674
    4. 'iner' → logprob: -6.404362201690674
    5. 'érer' → logprob: -6.529362201690674
    6. 'r' → logprob: -6.529362201690674
    7. 'izer' → logprob: -6.654362201690674
    8. 'or' → logprob: -7.404362201690674
    9. 'ér' → logprob: -7.654362201690674
    10. 'n' → logprob: -7.779362201690674

Token 131: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.013699732720851898
    2. 'les' → logprob: -4.638699531555176
    3. ' le' → logprob: -6.138699531555176
    4. ' ' → logprob: -7.013699531555176
    5. ' des' → logprob: -8.013699531555176
    6. '   ' → logprob: -8.638699531555176
    7. ' la' → logprob: -9.263699531555176
    8. 'le' → logprob: -9.513699531555176
    9. 's' → logprob: -9.638699531555176
    10. ' the' → logprob: -10.138699531555176

Token 132: ' résultats' (ID: 48985)
  Prédit: ' résultats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.4640418291091919
    2. 'rés' → logprob: -1.589041829109192
    3. ' results' → logprob: -3.2140417098999023
    4. ' solutions' → logprob: -3.4640417098999023
    5. ' nombres' → logprob: -3.8390417098999023
    6. ' minimum' → logprob: -3.9640417098999023
    7. ' le' → logprob: -4.714041709899902
    8. ' ' → logprob: -4.839041709899902
    9. ' nombre' → logprob: -4.964041709899902
    10. ' result' → logprob: -5.089041709899902

Token 133: ' déjà' (ID: 21229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3324819803237915
    2. ')' → logprob: -1.3324819803237915
    3. '
' → logprob: -5.082481861114502
    4. '):' → logprob: -5.332481861114502
    5. ' ' → logprob: -5.957481861114502
    6. '):
' → logprob: -6.582481861114502
    7. '}' → logprob: -7.207481861114502
    8. 'def' → logprob: -7.457481861114502
    9. ',' → logprob: -7.957481861114502
    10. '  ' → logprob: -8.08248233795166

Token 134: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.17001788318157196
    2. ' calcul' → logprob: -1.9200178384780884
    3. 'cal' → logprob: -4.670017719268799
    4. 'computed' → logprob: -8.920018196105957
    5. ' calculated' → logprob: -9.920018196105957
    6. 'trait' → logprob: -10.170018196105957
    7. 'calc' → logprob: -10.170018196105957
    8. '_cal' → logprob: -10.420018196105957
    9. 'rés' → logprob: -10.545018196105957
    10. 'comput' → logprob: -11.295018196105957

Token 135: 'és' (ID: 1756)
  Prédit: 'isés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.5774170756340027
    2. 'és' → logprob: -0.8274170756340027
    3. 'isées' → logprob: -7.327416896820068
    4. 'ifiés' → logprob: -8.702417373657227
    5. 'is' → logprob: -9.077417373657227
    6. 'érés' → logprob: -9.077417373657227
    7. '   ' → logprob: -9.327417373657227
    8. '}' → logprob: -9.577417373657227
    9. ')' → logprob: -10.077417373657227
    10. 'rés' → logprob: -10.077417373657227

Token 136: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2041282057762146
    2. ':' → logprob: -2.4541282653808594
    3. '
' → logprob: -3.5791282653808594
    4. ')' → logprob: -3.5791282653808594
    5. '):' → logprob: -3.7041282653808594
    6. '):
' → logprob: -4.829128265380859
    7. ':
' → logprob: -5.454128265380859
    8. ' ' → logprob: -6.829128265380859
    9. '    
' → logprob: -7.079128265380859
    10. ' :' → logprob: -7.079128265380859

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040850088000297546
    2. ':' → logprob: -4.1658501625061035
    3. ' ' → logprob: -4.5408501625061035
    4. ' if' → logprob: -4.9158501625061035
    5. ')' → logprob: -5.7908501625061035
    6. 'if' → logprob: -6.6658501625061035
    7. ' 
' → logprob: -7.2908501625061035
    8. '
' → logprob: -7.9158501625061035
    9. ' :' → logprob: -8.540849685668945
    10. '    
' → logprob: -8.665849685668945

Token 138: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02169695310294628
    2. '   ' → logprob: -4.021697044372559
    3. ' if' → logprob: -5.646697044372559
    4. '    
' → logprob: -12.396697044372559
    5. ' ' → logprob: -13.271697044372559
    6. '  ' → logprob: -13.396697044372559
    7. '#' (adapté à ' #') → logprob: -13.646697044372559
    8. '
' → logprob: -14.021697044372559
    9. '	if' → logprob: -14.396697044372559
    10. '    ' → logprob: -15.271697044372559

Token 139: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02069954015314579
    2. ' if' → logprob: -3.8956995010375977
    3. '   ' → logprob: -8.770699501037598
    4. 'If' → logprob: -14.270699501037598
    5. 'for' → logprob: -15.145699501037598
    6. ' ' → logprob: -15.145699501037598
    7. '#' → logprob: -15.270699501037598
    8. '	if' → logprob: -15.520699501037598
    9. '    
' → logprob: -15.770699501037598
    10. '```' → logprob: -15.895699501037598

Token 140: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014163747429847717
    2. 'x' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.014163970947266
    4. '	x' → logprob: -17.014163970947266
    5. '(x' → logprob: -17.889163970947266
    6. ' ' → logprob: -18.139163970947266
    7. '   ' → logprob: -18.639163970947266
    8. ' n' → logprob: -19.139163970947266
    9. ' (' → logprob: -19.389163970947266
    10. '_x' → logprob: -19.764163970947266

Token 141: ' somme' (ID: 64484)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. ' ' → logprob: -19.003177642822266
    4. '(x' → logprob: -19.128177642822266
    5. '   ' → logprob: -20.003177642822266
    6. '	x' → logprob: -20.253177642822266
    7. 'n' → logprob: -20.378177642822266
    8. '_x' → logprob: -20.878177642822266
    9. '"x' → logprob: -22.128177642822266
    10. '
' → logprob: -22.503177642822266

Token 142: ' à' (ID: 1221)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08911950886249542
    2. 'x' → logprob: -2.4641194343566895
    3. ' ' → logprob: -9.839119911193848
    4. ' ==' → logprob: -9.964119911193848
    5. '0' → logprob: -10.089119911193848
    6. '==' → logprob: -11.714119911193848
    7. '   ' → logprob: -11.714119911193848
    8. ' est' → logprob: -11.839119911193848
    9. '(x' → logprob: -12.464119911193848
    10. '_x' → logprob: -13.089119911193848

Token 143: ' atteindre' (ID: 95734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005957598797976971
    2. ' ' → logprob: -5.75595760345459
    3. 'atte' → logprob: -6.00595760345459
    4. 'x' → logprob: -9.13095760345459
    5. '   ' → logprob: -9.38095760345459
    6. '1' → logprob: -11.38095760345459
    7. '  ' → logprob: -11.38095760345459
    8. 'at' → logprob: -11.50595760345459
    9. 'val' → logprob: -11.50595760345459
    10. 'zero' → logprob: -11.50595760345459

Token 144: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4526253640651703
    2. ' est' → logprob: -2.327625274658203
    3. 'x' → logprob: -2.452625274658203
    4. '==' → logprob: -2.577625274658203
    5. ' x' → logprob: -2.827625274658203
    6. '0' → logprob: -3.452625274658203
    7. ' ' → logprob: -4.577625274658203
    8. 'est' → logprob: -6.327625274658203
    9. ' is' → logprob: -7.827625274658203
    10. ' in' → logprob: -8.202625274658203

Token 145: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2254231870174408
    2. '0' → logprob: -1.6004232168197632
    3. 'x' → logprob: -13.225422859191895
    4. ' x' → logprob: -13.600422859191895
    5. ' zéro' → logprob: -13.600422859191895
    6. '   ' → logprob: -14.225422859191895
    7. ' in' → logprob: -14.475422859191895
    8. ' ' → logprob: -14.787922859191895
    9. '=' → logprob: -14.912922859191895
    10. ' exactement' → logprob: -14.975422859191895

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '=' → logprob: -19.625011444091797
    4. '==' → logprob: -20.125011444091797
    5. '   ' → logprob: -20.125011444091797
    6. ' in' → logprob: -20.250011444091797
    7. 'in' → logprob: -20.500011444091797
    8. 'd' → logprob: -21.000011444091797
    9. '۰' → logprob: -21.250011444091797
    10. '

' → logprob: -21.375011444091797

Token 147: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019600363448262215
    2. ' :' → logprob: -6.876959800720215
    3. '   ' → logprob: -7.876959800720215
    4. ':return' → logprob: -7.876959800720215
    5. ':
' → logprob: -8.876959800720215
    6. ',' → logprob: -10.626959800720215
    7. '  ' → logprob: -14.376959800720215
    8. ' or' → logprob: -14.501959800720215
    9. ' :
' → logprob: -14.501959800720215
    10. ' return' → logprob: -14.501959800720215

Token 148: ' aucune' (ID: 51173)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13481640815734863
    2. '   ' → logprob: -2.2598164081573486
    3. 'return' → logprob: -3.8848164081573486
    4. '       ' → logprob: -7.5098161697387695
    5. '	return' → logprob: -8.13481616973877
    6. '    ' → logprob: -8.38481616973877
    7. ' ' → logprob: -10.00981616973877
    8. ':return' → logprob: -10.13481616973877
    9. '  ' → logprob: -10.38481616973877
    10. ' ' → logprob: -12.00981616973877

Token 149: ' pièce' (ID: 56132)
  Prédit: ' pièce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièce' → logprob: -0.5743053555488586
    2. ' ' → logprob: -1.3243052959442139
    3. ' coin' → logprob: -2.699305295944214
    4. '   ' → logprob: -3.324305295944214
    5. ' piece' → logprob: -3.324305295944214
    6. 'piece' → logprob: -5.074305534362793
    7. ' pièces' → logprob: -5.199305534362793
    8. ' monnaie' → logprob: -5.824305534362793
    9. 'pi' → logprob: -5.949305534362793
    10. 'coin' → logprob: -6.074305534362793

Token 150: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39276307821273804
    2. ' n' → logprob: -1.8927631378173828
    3. ' nécessaire' → logprob: -2.767763137817383
    4. ' return' → logprob: -3.267763137817383
    5. ' est' → logprob: -3.642763137817383
    6. 'n' → logprob: -4.642763137817383
    7. ' à' → logprob: -4.642763137817383
    8. 'return' → logprob: -5.392763137817383
    9. ':return' → logprob: -5.892763137817383
    10. '	return' → logprob: -6.517763137817383

Token 151: ''est' (ID: 6616)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0829461812973022
    2. ' n' → logprob: -1.0829461812973022
    3. ''est' → logprob: -1.7079461812973022
    4. '   ' → logprob: -2.832946300506592
    5. 'e' → logprob: -3.582946300506592
    6. 'est' → logprob: -4.332946300506592
    7. ' est' → logprob: -4.707946300506592
    8. 'u' → logprob: -4.957946300506592
    9. ''' → logprob: -4.957946300506592
    10. 'é' → logprob: -5.207946300506592

Token 152: ' nécessaire' (ID: 43098)
  Prédit: ' nécessaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.02283821441233158
    2. ' nécessaires' → logprob: -5.022838115692139
    3. 'né' → logprob: -5.147838115692139
    4. ' necess' → logprob: -6.147838115692139
    5. ' needed' → logprob: -6.147838115692139
    6. ' requ' → logprob: -6.397838115692139
    7. 'needed' → logprob: -7.147838115692139
    8. 'n' → logprob: -7.147838115692139
    9. ' ' → logprob: -7.522838115692139
    10. 're' → logprob: -7.772838115692139

Token 153: ' donc' (ID: 14206)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059704676270484924
    2. '   ' → logprob: -3.0597047805786133
    3. ':return' → logprob: -5.059704780578613
    4. ' :' → logprob: -6.309704780578613
    5. ':
' → logprob: -6.684704780578613
    6. ',' → logprob: -7.184704780578613
    7. '.' → logprob: -8.309704780578613
    8. '\n' → logprob: -8.684704780578613
    9. '    ' → logprob: -9.559704780578613
    10. ' return' → logprob: -9.559704780578613

Token 154: ' on' (ID: 402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05476028844714165
    2. 'return' → logprob: -3.304760217666626
    3. ' ' → logprob: -5.054760456085205
    4. ' return' → logprob: -5.179760456085205
    5. '   ' → logprob: -5.429760456085205
    6. '1' → logprob: -8.804759979248047
    7. '       ' → logprob: -10.929759979248047
    8. '  ' → logprob: -11.554759979248047
    9. '    ' → logprob: -12.304759979248047
    10. 'min' → logprob: -13.804759979248047

Token 155: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4450860619544983
    2. 'return' → logprob: -1.0700860023498535
    3. ' retourne' → logprob: -4.8200860023498535
    4. '   ' → logprob: -5.0700860023498535
    5. 'ret' → logprob: -7.6950860023498535
    6. 'eturn' → logprob: -7.6950860023498535
    7. '{return' → logprob: -8.445086479187012
    8. ':return' → logprob: -9.195086479187012
    9. ' a' → logprob: -9.320086479187012
    10. ' ' → logprob: -9.445086479187012

Token 156: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11283540725708008
    2. ' ' → logprob: -2.23783540725708
    3. '   ' → logprob: -11.487834930419922
    4. ' ' → logprob: -13.487834930419922
    5. '  ' → logprob: -14.237834930419922
    6. '1' → logprob: -14.737834930419922
    7. '    ' → logprob: -16.112834930419922
    8. '(' → logprob: -16.737834930419922
    9. '	' → logprob: -17.362834930419922
    10. ' (' → logprob: -17.487834930419922

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.37507438659668
    4. ' ' → logprob: -21.12507438659668
    5. '  ' → logprob: -21.37507438659668
    6. '۰' → logprob: -21.75007438659668
    7. '00' → logprob: -22.12507438659668
    8. '000' → logprob: -22.62507438659668
    9. '
' → logprob: -22.75007438659668
    10. '```' → logprob: -23.37507438659668

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6554421186447144
    2. ':' → logprob: -0.7804421186447144
    3. '\n' → logprob: -4.780442237854004
    4. ':return' → logprob: -5.030442237854004
    5. '
' → logprob: -6.280442237854004
    6. '.' → logprob: -6.780442237854004
    7. ':
' → logprob: -6.780442237854004
    8. ' :' → logprob: -6.905442237854004
    9. '    
' → logprob: -7.405442237854004
    10. ' ' → logprob: -8.155442237854004

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08601483702659607
    2. '\n' → logprob: -3.086014747619629
    3. '    
' → logprob: -3.711014747619629
    4. '
' → logprob: -5.461014747619629
    5. ':' → logprob: -6.211014747619629
    6. '  
' → logprob: -6.461014747619629
    7. '   
' → logprob: -6.961014747619629
    8. ' 
' → logprob: -7.586014747619629
    9. ' if' → logprob: -7.711014747619629
    10. '\' → logprob: -7.711014747619629

Token 160: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5183089971542358
    2. ' if' → logprob: -1.0183089971542358
    3. '   ' → logprob: -3.1433091163635254
    4. '	if' → logprob: -9.268308639526367
    5. 'return' → logprob: -11.643308639526367
    6. ' ' → logprob: -11.893308639526367
    7. '0' → logprob: -12.518308639526367
    8. ' return' → logprob: -12.768308639526367
    9. ')' → logprob: -12.893308639526367
    10. '  ' → logprob: -13.018308639526367

Token 161: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.002477081725373864
    2. 'x' → logprob: -6.002477169036865
    3. ' ' → logprob: -14.127476692199707
    4. ' ' → logprob: -14.877476692199707
    5. '0' → logprob: -15.002476692199707
    6. '	x' → logprob: -17.127477645874023
    7. ')x' → logprob: -19.377477645874023
    8. '_x' → logprob: -19.439977645874023
    9. ')' → logprob: -19.502477645874023
    10. '(x' → logprob: -19.627477645874023

Token 162: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0059455097652971745
    2. '==' → logprob: -5.130945682525635
    3. ' ' → logprob: -11.130945205688477
    4. '0' → logprob: -13.755945205688477
    5. ' <=' → logprob: -15.005945205688477
    6. ' =' → logprob: -15.880945205688477
    7. '   ' → logprob: -16.255945205688477
    8. '=' → logprob: -16.380945205688477
    9. ')==' → logprob: -16.380945205688477
    10. ')' → logprob: -16.755945205688477

Token 163: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08894001692533493
    2. '0' → logprob: -2.463939905166626
    3. ' ' → logprob: -14.713939666748047
    4. '  ' → logprob: -16.588939666748047
    5. '   ' → logprob: -17.338939666748047
    6. '00' → logprob: -19.463939666748047
    7. '	' → logprob: -19.463939666748047
    8. '=' → logprob: -19.713939666748047
    9. '    ' → logprob: -19.963939666748047
    10. '۰' → logprob: -20.276439666748047

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '۰' → logprob: -17.500627517700195
    4. '  ' → logprob: -17.875627517700195
    5. '=' → logprob: -18.938127517700195
    6. '   ' → logprob: -18.938127517700195
    7. ')' → logprob: -19.125627517700195
    8. '00' → logprob: -19.250627517700195
    9. '```' → logprob: -19.563127517700195
    10. ' ' → logprob: -19.688127517700195

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005253921262919903
    2. ':
' → logprob: -7.87552547454834
    3. ':return' → logprob: -9.12552547454834
    4. ' :' → logprob: -10.25052547454834
    5. '   ' → logprob: -14.25052547454834
    6. ' :
' → logprob: -15.25052547454834
    7. '):' → logprob: -16.125524520874023
    8. ':
' → logprob: -16.750524520874023
    9. ')' → logprob: -16.750524520874023
    10. '.' → logprob: -18.000524520874023

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004640642087906599
    2. '   ' → logprob: -5.754640579223633
    3. ' return' → logprob: -7.129640579223633
    4. 'return' → logprob: -7.629640579223633
    5. '
' → logprob: -9.379640579223633
    6. '	return' → logprob: -10.504640579223633
    7. '	' → logprob: -10.754640579223633
    8. ':return' → logprob: -10.879640579223633
    9. '	   ' → logprob: -12.004640579223633
    10. '    
' → logprob: -12.879640579223633

Token 167: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.35644713044166565
    2. 'return' (adapté à ' return') → logprob: -1.7314471006393433
    3. '       ' → logprob: -2.106447219848633
    4. '   ' → logprob: -6.856447219848633
    5. ' ' → logprob: -10.606447219848633
    6. '	return' → logprob: -10.606447219848633
    7. '    ' → logprob: -11.481447219848633
    8. '
' → logprob: -11.731447219848633
    9. ':return' → logprob: -11.981447219848633
    10. '0' → logprob: -12.481447219848633

Token 168: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141352713108063
    2. '0' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.45141315460205
    4. '   ' → logprob: -19.201414108276367
    5. '1' → logprob: -19.451414108276367
    6. '  ' → logprob: -19.451414108276367
    7. '۰' → logprob: -21.826414108276367
    8. '​' → logprob: -21.951414108276367
    9. '```' → logprob: -22.201414108276367
    10. '`' → logprob: -22.263914108276367

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -22.5
    4. '000' → logprob: -24.125
    5. '０' → logprob: -24.875
    6. '00' → logprob: -24.875
    7. '   ' → logprob: -25.375
    8. '০' → logprob: -25.625
    9. '٠' → logprob: -25.625
    10. '"' → logprob: -26.125

Token 170: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26859477162361145
    2. '   ' → logprob: -2.393594741821289
    3. '    
' → logprob: -2.518594741821289
    4. '\n' → logprob: -3.018594741821289
    5. '  
' → logprob: -5.393594741821289
    6. ' 
' → logprob: -5.518594741821289
    7. '   
' → logprob: -6.018594741821289
    8. '<|end|>' → logprob: -6.643594741821289
    9. 'elif' → logprob: -7.518594741821289
    10. 'n' → logprob: -7.643594741821289

Token 171: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11742366850376129
    2. '   ' → logprob: -2.2424237728118896
    3. ' if' → logprob: -5.8674235343933105
    4. 'elif' → logprob: -6.6174235343933105
    5. '#' → logprob: -8.242424011230469
    6. '    
' → logprob: -9.242424011230469
    7. '
' → logprob: -10.742424011230469
    8. '  
' → logprob: -11.742424011230469
    9. '```' → logprob: -11.867424011230469
    10. '   
' → logprob: -11.992424011230469

Token 172: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0073247747495770454
    2. 'min' → logprob: -5.007324695587158
    3. ' if' → logprob: -8.757325172424316
    4. 'res' → logprob: -9.007325172424316
    5. 'elif' → logprob: -9.257325172424316
    6. '   ' → logprob: -9.632325172424316
    7. '#' (adapté à ' #') → logprob: -9.632325172424316
    8. 'result' → logprob: -9.757325172424316
    9. 'best' → logprob: -10.757325172424316
    10. 'minimum' → logprob: -11.757325172424316

Token 173: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007921205251477659
    2. ' if' → logprob: -7.375792026519775
    3. 'elif' → logprob: -9.125792503356934
    4. '   ' → logprob: -10.375792503356934
    5. 'min' → logprob: -11.500792503356934
    6. '#' → logprob: -11.500792503356934
    7. '```' → logprob: -13.250792503356934
    8. 'result' → logprob: -13.500792503356934
    9. 'If' → logprob: -15.000792503356934
    10. '
' → logprob: -15.125792503356934

Token 174: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7162684202194214
    2. 'ifier' → logprob: -1.3412684202194214
    3. 'er' → logprob: -2.216268539428711
    4. 'ifie' → logprob: -2.216268539428711
    5. '   ' → logprob: -4.216268539428711
    6. ' if' → logprob: -5.091268539428711
    7. 'ifiez' → logprob: -6.091268539428711
    8. 'urer' → logprob: -6.091268539428711
    9. 'ifi' → logprob: -6.466268539428711
    10. ' in' → logprob: -6.966268539428711

Token 175: ' si' (ID: 1784)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08625709265470505
    2. ' if' → logprob: -2.836256980895996
    3. 'x' → logprob: -3.836256980895996
    4. ' ' → logprob: -6.336256980895996
    5. 'if' → logprob: -7.586256980895996
    6. ' ' → logprob: -9.961256980895996
    7. '(x' → logprob: -10.711256980895996
    8. ' si' → logprob: -11.086256980895996
    9. '   ' → logprob: -11.336256980895996
    10. ' (' → logprob: -11.586256980895996

Token 176: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407716512680054
    2. 'x' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.224077224731445
    4. '   ' → logprob: -17.349077224731445
    5. '	x' → logprob: -17.849077224731445
    6. '(x' → logprob: -19.224077224731445
    7. ' ' → logprob: -19.974077224731445
    8. '"x' → logprob: -21.099077224731445
    9. ')x' → logprob: -21.224077224731445
    10. '_x' → logprob: -21.224077224731445

Token 177: ' solution' (ID: 7578)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31326422095298767
    2. 'x' → logprob: -1.31326425075531
    3. '(x' → logprob: -13.313263893127441
    4. '	x' → logprob: -14.813263893127441
    5. '   ' → logprob: -15.938263893127441
    6. ' ' → logprob: -15.938263893127441
    7. ' in' → logprob: -16.813264846801758
    8. ' )' → logprob: -17.063264846801758
    9. ' valeur' → logprob: -17.313264846801758
    10. ')x' → logprob: -17.313264846801758

Token 178: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15355592966079712
    2. ' in' → logprob: -3.5285558700561523
    3. '   ' → logprob: -3.6535558700561523
    4. ' est' → logprob: -3.6535558700561523
    5. ' x' → logprob: -4.028555870056152
    6. ' existe' → logprob: -4.403555870056152
    7. ' exists' → logprob: -5.028555870056152
    8. ' is' → logprob: -5.653555870056152
    9. '  ' → logprob: -5.653555870056152
    10. 'x' → logprob: -6.278555870056152

Token 179: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28115493059158325
    2. 'x' → logprob: -1.4061548709869385
    3. '(x' → logprob: -13.40615463256836
    4. '   ' → logprob: -13.65615463256836
    5. ' ' → logprob: -14.15615463256836
    6. '	x' → logprob: -14.78115463256836
    7. '_x' → logprob: -16.15615463256836
    8. ' (' → logprob: -16.15615463256836
    9. ')' → logprob: -16.28115463256836
    10. ' ' → logprob: -16.40615463256836

Token 180: ' a' (ID: 261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006563795264810324
    2. 'in' → logprob: -5.631563663482666
    3. ' est' → logprob: -6.631563663482666
    4. ' ' → logprob: -6.631563663482666
    5. ' is' → logprob: -9.131564140319824
    6. ' dans' → logprob: -10.006564140319824
    7. ' en' → logprob: -10.381564140319824
    8. ' a' → logprob: -11.006564140319824
    9. ' i' → logprob: -11.006564140319824
    10. ' existe' → logprob: -11.131564140319824

Token 181: ' déjà' (ID: 21229)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4097967147827148
    2. ' in' → logprob: -1.4097967147827148
    3. ' ' → logprob: -1.7847967147827148
    4. ' x' → logprob: -2.534796714782715
    5. 'i' → logprob: -2.784796714782715
    6. 'in' → logprob: -2.909796714782715
    7. ' déjà' → logprob: -4.284796714782715
    8. '

' → logprob: -4.409796714782715
    9. ' été' → logprob: -4.784796714782715
    10. '   ' → logprob: -4.909796714782715

Token 182: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.6274294853210449
    2. 'x' → logprob: -2.002429485321045
    3. 'été' → logprob: -2.127429485321045
    4. ' been' → logprob: -2.377429485321045
    5. ' x' → logprob: -2.502429485321045
    6. 'ex' → logprob: -4.627429485321045
    7. 'êt' → logprob: -5.127429485321045
    8. ' ' → logprob: -5.627429485321045
    9. '_' → logprob: -5.877429485321045
    10. ' in' → logprob: -6.127429485321045

Token 183: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.13203541934490204
    2. ' calcul' → logprob: -2.257035493850708
    3. 'cal' → logprob: -4.007035255432129
    4. 'calc' → logprob: -8.257035255432129
    5. 'd' → logprob: -9.132035255432129
    6. ' trouv' → logprob: -9.632035255432129
    7. 'computed' → logprob: -9.632035255432129
    8. 'c' → logprob: -10.132035255432129
    9. '   ' → logprob: -10.132035255432129
    10. 'Calcul' → logprob: -10.632035255432129

Token 184: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.012158408761024475
    2. 'e' → logprob: -5.137158393859863
    3. 'é' → logprob: -5.512158393859863
    4. 'urée' → logprob: -7.262158393859863
    5. 'ee' → logprob: -7.387158393859863
    6. '   ' → logprob: -8.012158393859863
    7. 'rée' → logprob: -9.262158393859863
    8. 'lée' → logprob: -9.512158393859863
    9. '_e' → logprob: -10.137158393859863
    10. 'uée' → logprob: -10.137158393859863

Token 185: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01820109784603119
    2. ' if' → logprob: -4.393200874328613
    3. ':' → logprob: -6.143200874328613
    4. ' in' → logprob: -7.018200874328613
    5. 'if' → logprob: -7.143200874328613
    6. ' ' → logprob: -7.268200874328613
    7. '  ' → logprob: -8.018200874328613
    8. '    ' → logprob: -8.393200874328613
    9. ' and' → logprob: -8.393200874328613
    10. '<|end|>' → logprob: -9.018200874328613

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2168387621641159
    2. ' if' → logprob: -1.7168387174606323
    3. 'if' → logprob: -4.216838836669922
    4. ':' → logprob: -7.841838836669922
    5. ' in' → logprob: -9.716838836669922
    6. ' ' → logprob: -10.591838836669922
    7. '  ' → logprob: -10.841838836669922
    8. '	if' → logprob: -10.841838836669922
    9. ' for' → logprob: -12.091838836669922
    10. '    ' → logprob: -12.216838836669922

Token 187: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3283257484436035
    2. ' if' → logprob: -1.3283257484436035
    3. '   ' → logprob: -4.2033257484436035
    4. ' ' → logprob: -12.828325271606445
    5. '  ' → logprob: -14.078325271606445
    6. '	if' → logprob: -14.328325271606445
    7. ' i' → logprob: -14.953325271606445
    8. 'i' → logprob: -15.203325271606445
    9. ' ' → logprob: -15.953325271606445
    10. '```' → logprob: -16.828325271606445

Token 188: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6995570659637451
    2. ' if' → logprob: -0.6995570659637451
    3. '   ' → logprob: -5.074557304382324
    4. ' x' → logprob: -9.574557304382324
    5. 'x' → logprob: -9.949557304382324
    6. ' ' → logprob: -12.199557304382324
    7. '  ' → logprob: -12.699557304382324
    8. 'in' → logprob: -13.074557304382324
    9. ' in' → logprob: -13.074557304382324
    10. 'elif' → logprob: -13.574557304382324

Token 189: ' permet' (ID: 11798)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49309802055358887
    2. ' if' → logprob: -0.9930980205535889
    3. '   ' → logprob: -4.868098258972168
    4. 'in' → logprob: -6.493098258972168
    5. ' n' → logprob: -6.618098258972168
    6. 'n' → logprob: -6.743098258972168
    7. 'return' → logprob: -6.868098258972168
    8. ' return' → logprob: -6.993098258972168
    9. 'try' → logprob: -7.243098258972168
    10. ' in' → logprob: -7.368098258972168

Token 190: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6603410840034485
    2. ' de' → logprob: -0.9103410840034485
    3. 'de' → logprob: -3.1603410243988037
    4. '   ' → logprob: -3.7853410243988037
    5. 'd' → logprob: -4.160341262817383
    6. '    ' → logprob: -9.535341262817383
    7. 't' → logprob: -10.035341262817383
    8. 'if' → logprob: -10.410341262817383
    9. '       ' → logprob: -10.785341262817383
    10. '  ' → logprob: -11.535341262817383

Token 191: ' ne' (ID: 453)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.3781536817550659
    2. 'optim' → logprob: -2.3781538009643555
    3. 'if' → logprob: -2.5031538009643555
    4. 'év' → logprob: -2.8781538009643555
    5. '   ' → logprob: -3.6281538009643555
    6. 'min' → logprob: -3.8781538009643555
    7. 'ev' → logprob: -4.3781538009643555
    8. 'return' → logprob: -5.0031538009643555
    9. ' if' → logprob: -5.3781538009643555
    10. 'elif' → logprob: -6.1281538009643555

Token 192: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.38688382506370544
    2. ' pas' → logprob: -1.1368838548660278
    3. '   ' → logprob: -12.136883735656738
    4. '_pas' → logprob: -12.761883735656738
    5. 'pass' → logprob: -13.511883735656738
    6. 'if' → logprob: -14.886883735656738
    7. 'Pas' → logprob: -14.886883735656738
    8. ' pass' → logprob: -15.011883735656738
    9. 's' → logprob: -15.261883735656738
    10. 'plus' → logprob: -15.511883735656738

Token 193: ' recal' (ID: 147248)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8881776928901672
    2. '   ' → logprob: -1.7631776332855225
    3. ' if' → logprob: -2.3881776332855225
    4. ' return' → logprob: -2.6381776332855225
    5. ' éviter' → logprob: -2.8881776332855225
    6. ' pas' → logprob: -3.2631776332855225
    7. 'x' → logprob: -3.6381776332855225
    8. ' continuer' → logprob: -3.6381776332855225
    9. 'if' → logprob: -3.7631776332855225
    10. ' stock' → logprob: -4.638177871704102

Token 194: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -3.380904672667384e-05
    2. 'uler' → logprob: -11.375033378601074
    3. '#' → logprob: -12.250033378601074
    4. 'c' → logprob: -12.375033378601074
    5. 'cular' → logprob: -12.625033378601074
    6. '```' → logprob: -13.250033378601074
    7. '   ' → logprob: -13.750033378601074
    8. 'ul' → logprob: -14.125033378601074
    9. 'cule' → logprob: -14.250033378601074
    10. 'cu' → logprob: -14.250033378601074

Token 195: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.981667537620524e-06
    2. 'rer' → logprob: -13.500001907348633
    3. '#' → logprob: -15.375001907348633
    4. 'uler' → logprob: -16.000001907348633
    5. 'uer' → logprob: -16.375001907348633
    6. 'cul' → logprob: -16.500001907348633
    7. '   ' → logprob: -17.250001907348633
    8. 'e' → logprob: -18.000001907348633
    9. '```' → logprob: -18.375001907348633
    10. ' er' → logprob: -18.500001907348633

Token 196: ' plusieurs' (ID: 20875)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.029461978003382683
    2. 'x' → logprob: -4.029461860656738
    3. '   ' → logprob: -4.904461860656738
    4. ' if' → logprob: -5.779461860656738
    5. 'if' → logprob: -8.029461860656738
    6. ' ' → logprob: -8.404461860656738
    7. ' for' → logprob: -9.779461860656738
    8. '(x' → logprob: -10.154461860656738
    9. '    ' → logprob: -10.404461860656738
    10. '  ' → logprob: -10.904461860656738

Token 197: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.09104704111814499
    2. 'fois' → logprob: -2.4660470485687256
    3. 'x' → logprob: -6.8410468101501465
    4. ' x' → logprob: -7.5910468101501465
    5. ' pas' → logprob: -9.091047286987305
    6. ' times' → logprob: -9.466047286987305
    7. '   ' → logprob: -9.716047286987305
    8. 'if' → logprob: -9.841047286987305
    9. ' veces' → logprob: -10.091047286987305
    10. 'pas' → logprob: -10.216047286987305

Token 198: ' le' (ID: 505)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4105854034423828
    2. '   ' → logprob: -1.4105854034423828
    3. 'if' → logprob: -2.785585403442383
    4. ' x' → logprob: -3.660585403442383
    5. 'x' → logprob: -5.785585403442383
    6. ' ' → logprob: -7.910585403442383
    7. ' ' → logprob: -8.160585403442383
    8. '  ' → logprob: -8.285585403442383
    9. ':' → logprob: -8.410585403442383
    10. '    ' → logprob: -8.535585403442383

Token 199: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1701340675354004
    2. ' même' → logprob: -1.2951340675354004
    3. 'x' → logprob: -1.9201340675354004
    4. 'result' → logprob: -2.0451340675354004
    5. 'rés' → logprob: -2.7951340675354004
    6. ' résultat' → logprob: -3.2951340675354004
    7. 'min' → logprob: -3.5451340675354004
    8. 'nombre' → logprob: -5.6701340675354
    9. 'minimum' → logprob: -6.0451340675354
    10. 'same' → logprob: -6.5451340675354

Token 200: ' résultat' (ID: 62556)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12575362622737885
    2. 'result' → logprob: -3.12575364112854
    3. ' x' → logprob: -3.75075364112854
    4. ' résultat' → logprob: -4.125753402709961
    5. ' )' → logprob: -5.375753402709961
    6. 'élé' → logprob: -5.625753402709961
    7. 'if' → logprob: -5.750753402709961
    8. ' montant' → logprob: -5.875753402709961
    9. 'rés' → logprob: -6.125753402709961
    10. '```' → logprob: -6.375753402709961

Token 201: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032883479725569487
    2. ' if' → logprob: -6.003288269042969
    3. 'if' → logprob: -7.128288269042969
    4. '<|end|>' → logprob: -12.253288269042969
    5. '    
' → logprob: -13.628288269042969
    6. '	if' → logprob: -13.753288269042969
    7. ',' → logprob: -14.253288269042969
    8. '  ' → logprob: -14.378288269042969
    9. '   ' → logprob: -14.753288269042969
    10. '    ' → logprob: -14.878288269042969

Token 202: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01649540290236473
    2. '    ' → logprob: -5.516495227813721
    3. ' éviter' → logprob: -5.641495227813721
    4. '       ' → logprob: -6.141495227813721
    5. ' return' → logprob: -6.391495227813721
    6. ' if' → logprob: -6.766495227813721
    7. 'if' → logprob: -7.016495227813721
    8. '  ' → logprob: -7.516495227813721
    9. ' ' → logprob: -7.766495227813721
    10. 'return' → logprob: -7.891495227813721

Token 203: ''' (ID: 6)
  Prédit: ''év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''év' → logprob: -0.3039320707321167
    2. ' éviter' → logprob: -2.8039321899414062
    3. ''améli' → logprob: -3.1789321899414062
    4. 'optim' → logprob: -3.4289321899414062
    5. ''utiliser' → logprob: -3.5539321899414062
    6. ' optimiser' → logprob: -3.6789321899414062
    7. '’éviter' → logprob: -3.8039321899414062
    8. 'é' → logprob: -4.553932189941406
    9. 'ev' → logprob: -5.053932189941406
    10. 'imin' → logprob: -5.303932189941406

Token 204: 'optim' (ID: 29513)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.4648376703262329
    2. 'év' → logprob: -1.964837670326233
    3. ''év' → logprob: -2.0898375511169434
    4. 'optim' → logprob: -3.5898375511169434
    5. 'é' → logprob: -3.7148375511169434
    6. 'ev' → logprob: -4.089837551116943
    7. ' optimiser' → logprob: -4.589837551116943
    8. '’éviter' → logprob: -4.589837551116943
    9. ''utiliser' → logprob: -5.464837551116943
    10. ' économ' → logprob: -6.089837551116943

Token 205: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0005019200034439564
    2. 'al' → logprob: -8.00050163269043
    3. 'izer' → logprob: -9.75050163269043
    4. 'is' → logprob: -10.25050163269043
    5. 'er' → logprob: -11.12550163269043
    6. '#' → logprob: -11.37550163269043
    7. 'user' → logprob: -11.62550163269043
    8. '```' → logprob: -11.62550163269043
    9. 'isé' → logprob: -12.25050163269043
    10. 'ise' → logprob: -12.25050163269043

Token 206: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7985496520996094
    2. ' le' → logprob: -1.6735496520996094
    3. ' x' → logprob: -1.7985496520996094
    4. ' la' → logprob: -1.9235496520996094
    5. ' l' → logprob: -4.298549652099609
    6. 'x' → logprob: -4.423549652099609
    7. 'le' → logprob: -4.923549652099609
    8. '    ' → logprob: -5.673549652099609
    9. ' ' → logprob: -6.173549652099609
    10. ' min' → logprob: -6.423549652099609

Token 207: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.380392462015152
    2. 'e' → logprob: -1.2553924322128296
    3. ''' → logprob: -5.130392551422119
    4. ''ex' → logprob: -5.130392551422119
    5. 'es' → logprob: -5.255392551422119
    6. ''eff' → logprob: -5.380392551422119
    7. ''utilisation' → logprob: -5.880392551422119
    8. 'eur' → logprob: -7.255392551422119
    9. ''espace' → logprob: -7.255392551422119
    10. 'o' → logprob: -7.880392551422119

Token 208: 'alg' (ID: 15258)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01712886244058609
    2. ' if' → logprob: -4.267128944396973
    3. '   ' → logprob: -6.267128944396973
    4. 'code' → logprob: -7.642128944396973
    5. ' code' → logprob: -8.642128944396973
    6. 'return' → logprob: -8.642128944396973
    7. 'x' → logprob: -10.142128944396973
    8. 'min' → logprob: -10.142128944396973
    9. 'fonction' → logprob: -10.517128944396973
    10. 'calcul' → logprob: -10.892128944396973

Token 209: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.026709871366620064
    2. 'orithm' → logprob: -3.776709794998169
    3. 'o' → logprob: -6.526710033416748
    4. 'or' → logprob: -6.651710033416748
    5. '   ' → logprob: -8.27670955657959
    6. '#' → logprob: -8.65170955657959
    7. 'orit' → logprob: -9.52670955657959
    8. '```' → logprob: -9.77670955657959
    9. 'orithms' → logprob: -10.52670955657959
    10. ')' → logprob: -10.65170955657959

Token 210: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0038170572370290756
    2. 'm' → logprob: -5.753817081451416
    3. 't' → logprob: -7.628817081451416
    4. 'mie' → logprob: -9.503816604614258
    5. 'mes' → logprob: -10.753816604614258
    6. 'th' → logprob: -11.378816604614258
    7. 'mite' → logprob: -11.878816604614258
    8. 'tm' → logprob: -12.003816604614258
    9. 'mme' → logprob: -12.253816604614258
    10. 'mit' → logprob: -12.503816604614258

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017171852523460984
    2. 'if' → logprob: -7.1267170906066895
    3. ' if' → logprob: -7.2517170906066895
    4. '<|end|>' → logprob: -9.126717567443848
    5. '    
' → logprob: -10.126717567443848
    6. '  ' → logprob: -11.501717567443848
    7. '	if' → logprob: -11.626717567443848
    8. '    ' → logprob: -11.751717567443848
    9. '<|end|>' → logprob: -12.001717567443848
    10. '   ' → logprob: -12.501717567443848

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016933856531977654
    2. 'if' → logprob: -4.516933917999268
    3. ' if' → logprob: -5.141933917999268
    4. '    
' → logprob: -11.51693344116211
    5. '	if' → logprob: -12.39193344116211
    6. '<|end|>' → logprob: -13.26693344116211
    7. '   ' → logprob: -13.26693344116211
    8. ' ' → logprob: -13.89193344116211
    9. '  ' → logprob: -14.14193344116211
    10. '    ' → logprob: -14.51693344116211

Token 213: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05168186500668526
    2. ' if' → logprob: -3.3016817569732666
    3. '   ' → logprob: -4.301681995391846
    4. '	if' → logprob: -13.926681518554688
    5. '  ' → logprob: -14.426681518554688
    6. ' ' → logprob: -14.676681518554688
    7. '```' → logprob: -16.676681518554688
    8. 'elif' → logprob: -17.051681518554688
    9. 'If' → logprob: -17.801681518554688
    10. '    
' → logprob: -17.926681518554688

Token 214: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04858816787600517
    2. 'x' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.673587799072266
    4. '    ' → logprob: -15.798587799072266
    5. ' ' → logprob: -16.173587799072266
    6. '	x' → logprob: -16.423587799072266
    7. '(x' → logprob: -17.798587799072266
    8. '_x' → logprob: -18.548587799072266
    9. ' not' → logprob: -18.548587799072266
    10. ' ' → logprob: -18.548587799072266

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0205856803804636
    2. 'in' → logprob: -3.895585775375366
    3. ' not' → logprob: -11.145586013793945
    4. ' ' → logprob: -11.520586013793945
    5. 'not' → logprob: -11.770586013793945
    6. ' <' → logprob: -13.020586013793945
    7. ')' → logprob: -13.520586013793945
    8. '<' → logprob: -13.708086013793945
    9. '[' → logprob: -13.895586013793945
    10. ']' → logprob: -14.270586013793945

Token 216: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029751529917120934
    2. ' min' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.529751777648926
    4. '	min' → logprob: -15.404751777648926
    5. ' ' → logprob: -16.27975082397461
    6. '_min' → logprob: -16.90475082397461
    7. '(min' → logprob: -17.15475082397461
    8. '  ' → logprob: -17.52975082397461
    9. '[min' → logprob: -17.65475082397461
    10. 'max' → logprob: -18.15475082397461

Token 217: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '_ops' → logprob: -18.125
    4. '_opt' → logprob: -19.5
    5. '_opcode' → logprob: -19.625
    6. '_oc' → logprob: -20.0
    7. '_operator' → logprob: -20.25
    8. '_OP' → logprob: -20.5
    9. '_oper' → logprob: -20.875
    10. 'op' → logprob: -21.0

Token 218: '.keys' (ID: 18392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00370280840434134
    2. ':
' → logprob: -5.628702640533447
    3. ':return' → logprob: -9.503703117370605
    4. '):' → logprob: -11.128703117370605
    5. '   ' → logprob: -11.628703117370605
    6. ' :' → logprob: -13.003703117370605
    7. '):
' → logprob: -14.378703117370605
    8. '.keys' → logprob: -14.753703117370605
    9. '():' → logprob: -15.003703117370605
    10. '}:' → logprob: -15.628703117370605

Token 219: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012554689310491085
    2. '():
' → logprob: -7.126255512237549
    3. '()' → logprob: -8.00125503540039
    4. ' ():' → logprob: -9.25125503540039
    5. ':' → logprob: -10.87625503540039
    6. ' ()' → logprob: -14.75125503540039
    7. '():
' → logprob: -15.00125503540039
    8. ' :' → logprob: -15.87625503540039
    9. '   ' → logprob: -16.50125503540039
    10. '(' → logprob: -16.50125503540039

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3319124011322856e-05
    2. ' return' → logprob: -11.000022888183594
    3. 'return' → logprob: -12.500022888183594
    4. '   ' → logprob: -13.750022888183594
    5. '<|end|>' → logprob: -14.000022888183594
    6. ':' → logprob: -15.750022888183594
    7. ':return' → logprob: -16.000022888183594
    8. '	   ' → logprob: -16.625022888183594
    9. '           ' → logprob: -16.625022888183594
    10. '```' → logprob: -16.625022888183594

Token 221: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3937290906906128
    2. ' return' → logprob: -1.1437290906906128
    3. 'return' (adapté à ' return') → logprob: -5.018729209899902
    4. '   ' → logprob: -8.518729209899902
    5. '    ' → logprob: -11.768729209899902
    6. '	return' → logprob: -12.143729209899902
    7. ':return' → logprob: -13.143729209899902
    8. '           ' → logprob: -13.518729209899902
    9. '	   ' → logprob: -13.893729209899902
    10. ' ' → logprob: -14.018729209899902

Token 222: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0011703446507453918
    2. 'min' → logprob: -6.7511701583862305
    3. '	min' → logprob: -16.626171112060547
    4. ' ' → logprob: -18.501171112060547
    5. '(min' → logprob: -18.626171112060547
    6. '   ' → logprob: -18.876171112060547
    7. '[min' → logprob: -19.501171112060547
    8. ' max' → logprob: -20.751171112060547
    9. '_min' → logprob: -21.126171112060547
    10. ',min' → logprob: -21.126171112060547

Token 223: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -7.896309739408025e-07
    2. 'op' → logprob: -14.500000953674316
    3. '(op' → logprob: -16.25
    4. '_ops' → logprob: -17.125
    5. '_' → logprob: -17.625
    6. '(_' → logprob: -17.875
    7. 'Op' → logprob: -18.0
    8. '_OP' → logprob: -18.375
    9. '_opcode' → logprob: -19.25
    10. '	op' → logprob: -19.375

Token 224: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.6656825866666622e-05
    2. '_op' → logprob: -10.75002670288086
    3. '[' → logprob: -12.62502670288086
    4. ' [' → logprob: -14.25002670288086
    5. '   ' → logprob: -14.87502670288086
    6. '

' → logprob: -15.62502670288086
    7. '```' → logprob: -16.50002670288086
    8. '\[' → logprob: -16.62502670288086
    9. 'x' → logprob: -16.87502670288086
    10. '[
' → logprob: -16.87502670288086

Token 225: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05364000052213669
    2. ']' → logprob: -3.0536398887634277
    3. '])' → logprob: -5.303639888763428
    4. ')]' → logprob: -10.678640365600586
    5. ' )' → logprob: -10.803640365600586
    6. '   ' → logprob: -11.678640365600586
    7. '）' → logprob: -12.053640365600586
    8. ')
' → logprob: -12.928640365600586
    9. ')])' → logprob: -13.303640365600586
    10. ')return' → logprob: -14.178640365600586

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2032519429922104
    2. 'min' → logprob: -1.8282519578933716
    3. '    
' → logprob: -4.453251838684082
    4. ' min' → logprob: -5.078251838684082
    5. 'max' → logprob: -6.328251838684082
    6. '   
' → logprob: -7.203251838684082
    7. 'minimum' → logprob: -7.578251838684082
    8. 'result' → logprob: -7.703251838684082
    9. '  
' → logprob: -7.953251838684082
    10. 'if' → logprob: -8.078251838684082

Token 227: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07564280927181244
    2. ' min' → logprob: -3.2006428241729736
    3. '   ' → logprob: -3.9506428241729736
    4. 'res' → logprob: -5.0756425857543945
    5. 'best' → logprob: -5.4506425857543945
    6. 'result' → logprob: -7.0756425857543945
    7. 'minimum' → logprob: -8.200642585754395
    8. 'ans' → logprob: -8.325642585754395
    9. ' res' → logprob: -8.325642585754395
    10. ' best' → logprob: -8.825642585754395

Token 228: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12879648804664612
    2. 'res' → logprob: -2.2537965774536133
    3. 'result' → logprob: -4.753796577453613
    4. 'best' → logprob: -6.128796577453613
    5. ' min' → logprob: -6.253796577453613
    6. 'ans' → logprob: -6.628796577453613
    7. 'minimum' → logprob: -7.128796577453613
    8. ' res' → logprob: -7.753796577453613
    9. 'answer' → logprob: -8.628796577453613
    10. '   ' → logprob: -9.378796577453613

Token 229: ' initialise' (ID: 145250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10545799136161804
    2. '=' → logprob: -3.3554580211639404
    3. '   ' → logprob: -3.9804580211639404
    4. ' max' → logprob: -4.980457782745361
    5. 'min' → logprob: -4.980457782745361
    6. ' best' → logprob: -5.230457782745361
    7. ' min' → logprob: -5.480457782745361
    8. 'max' → logprob: -5.730457782745361
    9. '_min' → logprob: -6.105457782745361
    10. 'minimum' → logprob: -6.105457782745361

Token 230: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6415201425552368
    2. 'res' → logprob: -1.1415201425552368
    3. ' res' → logprob: -2.5165200233459473
    4. ' min' → logprob: -2.8915200233459473
    5. 'result' → logprob: -4.891520023345947
    6. 'ans' → logprob: -6.141520023345947
    7. 'count' → logprob: -6.141520023345947
    8. ' result' → logprob: -6.391520023345947
    9. 'best' → logprob: -6.391520023345947
    10. 'answer' → logprob: -7.266520023345947

Token 231: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7343639731407166
    2. '_count' → logprob: -1.8593640327453613
    3. '_val' → logprob: -1.8593640327453613
    4. '_nb' → logprob: -2.3593640327453613
    5. '_value' → logprob: -3.4843640327453613
    6. '_co' → logprob: -3.9843640327453613
    7. '_nombre' → logprob: -4.234364032745361
    8. '_num' → logprob: -4.234364032745361
    9. '_op' → logprob: -4.609364032745361
    10. '_coin' → logprob: -5.109364032745361

Token 232: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00227431976236403
    2. '=' → logprob: -6.377274513244629
    3. ' à' → logprob: -7.627274513244629
    4. ' to' → logprob: -10.377274513244629
    5. ' ' → logprob: -10.877274513244629
    6. ' a' → logprob: -11.377274513244629
    7. '   ' → logprob: -11.627274513244629
    8. ',' → logprob: -12.877274513244629
    9. ' ' → logprob: -13.002274513244629
    10. ' with' → logprob: -13.377274513244629

Token 233: ' une' (ID: 2463)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.22925952076911926
    2. ' float' → logprob: -1.6042594909667969
    3. 'x' → logprob: -6.104259490966797
    4. ' None' → logprob: -7.354259490966797
    5. 'None' → logprob: -7.354259490966797
    6. ' x' → logprob: -8.354259490966797
    7. '100' → logprob: -9.979259490966797
    8. ' ' → logprob: -10.854259490966797
    9. 'len' → logprob: -12.229259490966797
    10. '   ' → logprob: -12.479259490966797

Token 234: ' très' (ID: 9412)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06320568919181824
    2. ' float' → logprob: -2.8132057189941406
    3. '100' → logprob: -7.313205718994141
    4. '999' → logprob: -8.18820571899414
    5. ' None' → logprob: -9.31320571899414
    6. 'None' → logprob: -9.68820571899414
    7. 'inf' → logprob: -9.81320571899414
    8. ' ' → logprob: -10.31320571899414
    9. 'max' → logprob: -11.56320571899414
    10. 'len' → logprob: -12.06320571899414

Token 235: ' grande' (ID: 10094)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.803195595741272
    2. 'gr' → logprob: -1.428195595741272
    3. ' grand' → logprob: -1.553195595741272
    4. ' grande' → logprob: -2.4281954765319824
    5. 'import' → logprob: -5.428195476531982
    6. '_gr' → logprob: -6.053195476531982
    7. ' ' → logprob: -6.553195476531982
    8. 'large' → logprob: -7.178195476531982
    9. '```' → logprob: -7.178195476531982
    10. ' grandes' → logprob: -7.303195476531982

Token 236: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.37184131145477295
    2. 'val' → logprob: -1.246841311454773
    3. 'value' → logprob: -4.1218414306640625
    4. ' value' → logprob: -6.1218414306640625
    5. ' ' → logprob: -6.2468414306640625
    6. '_val' → logprob: -7.2468414306640625
    7. '_value' → logprob: -7.3718414306640625
    8. 'inf' → logprob: -7.9968414306640625
    9. 'int' → logprob: -8.246841430664062
    10. ' val' → logprob: -8.746841430664062

Token 237: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17986631393432617
    2. ' =' → logprob: -2.054866313934326
    3. '(' → logprob: -5.304866313934326
    4. '    ' → logprob: -5.304866313934326
    5. ' (' → logprob: -5.554866313934326
    6. '=' → logprob: -5.929866313934326
    7. '    
' → logprob: -6.179866313934326
    8. ':' → logprob: -6.429866313934326
    9. '  
' → logprob: -6.429866313934326
    10. ' 
' → logprob: -6.679866313934326

Token 238: 'ici' (ID: 3757)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.08099637925624847
    2. ' float' → logprob: -2.58099627494812
    3. '   ' → logprob: -6.330996513366699
    4. '999' → logprob: -8.5809965133667
    5. '100' → logprob: -9.3309965133667
    6. '10' → logprob: -11.2059965133667
    7. ' ' → logprob: -11.7059965133667
    8. '  ' → logprob: -11.8309965133667
    9. ')' → logprob: -12.3309965133667
    10. '```' → logprob: -12.9559965133667

Token 239: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.354451984167099
    2. 'float' → logprob: -1.2294520139694214
    3. ' ' → logprob: -5.854452133178711
    4. '   ' → logprob: -6.979452133178711
    5. '100' → logprob: -6.979452133178711
    6. '=float' → logprob: -7.604452133178711
    7. '10' → logprob: -8.354452133178711
    8. '999' → logprob: -8.979452133178711
    9. ',' → logprob: -9.354452133178711
    10. ')' → logprob: -9.479452133178711

Token 240: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001648399163968861
    2. '100' → logprob: -7.376648426055908
    3. '999' → logprob: -7.501648426055908
    4. ' float' → logprob: -8.25164794921875
    5. '   ' → logprob: -9.25164794921875
    6. '10' → logprob: -9.25164794921875
    7. '1' → logprob: -11.87664794921875
    8. 'int' → logprob: -12.75164794921875
    9. ' ' → logprob: -13.37664794921875
    10. '=float' → logprob: -14.37664794921875

Token 241: ' ' (ID: 220)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.011064798571169376
    2. '000' → logprob: -4.5110650062561035
    3. ' **' → logprob: -11.261064529418945
    4. '00' → logprob: -13.011064529418945
    5. '^' → logprob: -13.761064529418945
    6. 'e' → logprob: -14.511064529418945
    7. '*' → logprob: -16.011064529418945
    8. '6' → logprob: -16.136064529418945
    9. '\xe2\x81' → logprob: -17.136064529418945
    10. '0' → logprob: -17.261064529418945

Token 242: '000' (ID: 1302)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0032004083041101694
    2. '000' → logprob: -5.753200531005859
    3. '^' → logprob: -11.37820053100586
    4. 'e' → logprob: -12.25320053100586
    5. '6' → logprob: -12.87820053100586
    6. ' **' → logprob: -13.12820053100586
    7. '9' → logprob: -14.25320053100586
    8. '00' → logprob: -14.37820053100586
    9. '*' → logprob: -14.87820053100586
    10. '\xe2\x81' → logprob: -15.87820053100586

Token 243: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27636492252349854
    2. '0' → logprob: -1.9013649225234985
    3. '000' → logprob: -2.401364803314209
    4. '00' → logprob: -7.276364803314209
    5. ' )' → logprob: -7.901364803314209
    6. ')
' → logprob: -8.776365280151367
    7. '
' → logprob: -8.901365280151367
    8. '   ' → logprob: -9.776365280151367
    9. '**' → logprob: -10.776365280151367
    10. '_' → logprob: -11.276365280151367

Token 244: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03042682632803917
    2. '000' → logprob: -3.9054267406463623
    3. '0' → logprob: -4.655426979064941
    4. ')
' → logprob: -8.655426979064941
    5. '00' → logprob: -9.905426979064941
    6. ' )' → logprob: -10.280426979064941
    7. '   ' → logprob: -10.280426979064941
    8. '):' → logprob: -11.655426979064941
    9. '```' → logprob: -11.905426979064941
    10. ' ' → logprob: -12.155426979064941

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002106959465891123
    2. '   ' → logprob: -6.7521071434021
    3. '000' → logprob: -7.5021071434021
    4. ' )' → logprob: -8.877106666564941
    5. '0' → logprob: -9.127106666564941
    6. ')
' → logprob: -9.252106666564941
    7. '),' → logprob: -11.627106666564941
    8. '  ' → logprob: -12.252106666564941
    9. '
' → logprob: -12.502106666564941
    10. '    ' → logprob: -12.502106666564941

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005166635382920504
    2. ':' → logprob: -5.630166530609131
    3. ' =' → logprob: -8.255167007446289
    4. ')' → logprob: -8.755167007446289
    5. '  ' → logprob: -8.755167007446289
    6. '    ' → logprob: -8.755167007446289
    7. ' ' → logprob: -9.130167007446289
    8. '=' → logprob: -9.380167007446289
    9. '_' → logprob: -9.380167007446289
    10. '    
' → logprob: -9.380167007446289

Token 247: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01909410022199154
    2. ' min' → logprob: -4.769093990325928
    3. 'min' → logprob: -4.894093990325928
    4. '
' → logprob: -6.769093990325928
    5. '    
' → logprob: -7.144093990325928
    6. '  ' → logprob: -8.644094467163086
    7. '    ' → logprob: -8.894094467163086
    8. ' =' → logprob: -9.394094467163086
    9. '       ' → logprob: -9.519094467163086
    10. ' ' → logprob: -9.519094467163086

Token 248: ' Cela' (ID: 44403)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5898328423500061
    2. ' min' → logprob: -1.0898327827453613
    3. '   ' → logprob: -2.2148327827453613
    4. '	min' → logprob: -9.71483325958252
    5. '  ' → logprob: -11.08983325958252
    6. 'max' → logprob: -11.46483325958252
    7. '    ' → logprob: -11.58983325958252
    8. '_min' → logprob: -11.83983325958252
    9. ' minimum' → logprob: -12.08983325958252
    10. ' ' → logprob: -12.08983325958252

Token 249: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19054150581359863
    2. '=' → logprob: -2.3155415058135986
    3. '   ' → logprob: -3.4405415058135986
    4. ' min' → logprob: -3.8155415058135986
    5. 'min' → logprob: -4.4405412673950195
    6. ' permet' → logprob: -6.5655412673950195
    7. 'max' → logprob: -6.9405412673950195
    8. 'count' → logprob: -7.3155412673950195
    9. ' max' → logprob: -7.4405412673950195
    10. ' n' → logprob: -7.4405412673950195

Token 250: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16578270494937897
    2. ' d' → logprob: -2.4157826900482178
    3. '   ' → logprob: -3.0407826900482178
    4. 'de' → logprob: -4.665782928466797
    5. '    ' → logprob: -5.540782928466797
    6. 'd' → logprob: -6.415782928466797
    7. '  ' → logprob: -9.165782928466797
    8. ' ' → logprob: -9.290782928466797
    9. '       ' → logprob: -9.290782928466797
    10. '_' → logprob: -9.290782928466797

Token 251: ' toujours' (ID: 16867)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02487965300679207
    2. ' min' → logprob: -3.8998796939849854
    3. 'inf' → logprob: -6.649879455566406
    4. 'for' → logprob: -7.274879455566406
    5. 'max' → logprob: -7.399879455566406
    6. '100' → logprob: -8.399879455566406
    7. 'count' → logprob: -8.649879455566406
    8. '10' → logprob: -9.274879455566406
    9. ' for' → logprob: -9.649879455566406
    10. 'float' → logprob: -9.774879455566406

Token 252: ' trouver' (ID: 23195)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.561518669128418
    2. ' min' → logprob: -1.686518669128418
    3. ' avoir' → logprob: -2.811518669128418
    4. ' garder' → logprob: -2.936518669128418
    5. ' trouver' → logprob: -3.186518669128418
    6. ' continuer' → logprob: -3.311518669128418
    7. 'avoir' → logprob: -4.811518669128418
    8. ' conserver' → logprob: -5.436518669128418
    9. ' comparer' → logprob: -5.561518669128418
    10. ' choisir' → logprob: -5.811518669128418

Token 253: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0876522064208984
    2. ' a' → logprob: -1.5876522064208984
    3. ' une' → logprob: -1.9626522064208984
    4. ' min' → logprob: -2.0876522064208984
    5. ' the' → logprob: -2.2126522064208984
    6. ' le' → logprob: -2.9626522064208984
    7. ' la' → logprob: -3.7126522064208984
    8. ' l' → logprob: -6.462652206420898
    9. ' ' → logprob: -6.587652206420898
    10. 'min' → logprob: -7.212652206420898

Token 254: ' valeur' (ID: 41664)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7765336632728577
    2. 'min' → logprob: -1.276533603668213
    3. ' minimum' → logprob: -2.526533603668213
    4. 'minimum' → logprob: -3.026533603668213
    5. ' solution' → logprob: -3.276533603668213
    6. ' value' → logprob: -4.276533603668213
    7. ' meilleure' → logprob: -4.401533603668213
    8. ' valeur' → logprob: -4.526533603668213
    9. 'solution' → logprob: -5.276533603668213
    10. ' ' → logprob: -5.401533603668213

Token 255: ' minimale' (ID: 143217)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.1093525886535645
    2. ' minimale' → logprob: -1.6093525886535645
    3. 'inf' → logprob: -2.1093525886535645
    4. 'min' → logprob: -2.3593525886535645
    5. ' inf' → logprob: -2.4843525886535645
    6. ' min' → logprob: -2.6093525886535645
    7. 'plus' → logprob: -3.4843525886535645
    8. ' minimum' → logprob: -4.2343525886535645
    9. '   ' → logprob: -4.4843525886535645
    10. ' meilleure' → logprob: -5.2343525886535645

Token 256: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16385166347026825
    2. ' min' → logprob: -2.038851737976074
    3. 'min' → logprob: -4.538851737976074
    4. 'count' → logprob: -6.288851737976074
    5. '    
' → logprob: -6.288851737976074
    6. '
' → logprob: -6.663851737976074
    7. '_min' → logprob: -7.163851737976074
    8. '	min' → logprob: -7.288851737976074
    9. ' ' → logprob: -7.538851737976074
    10. '    ' → logprob: -7.538851737976074

Token 257: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.2829291522502899
    2. 'gr' → logprob: -1.7829291820526123
    3. ' petite' → logprob: -3.5329291820526123
    4. ' grande' → logprob: -3.7829291820526123
    5. 'import' → logprob: -5.032928943634033
    6. ' faible' → logprob: -5.407928943634033
    7. '```' → logprob: -5.407928943634033
    8. ' petit' → logprob: -6.282928943634033
    9. ' pet' → logprob: -6.407928943634033
    10. 'grand' → logprob: -6.532928943634033

Token 258: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048781298100948334
    2. ',' → logprob: -3.548781394958496
    3. ' ' → logprob: -5.048781394958496
    4. '_' → logprob: -5.548781394958496
    5. '  ' → logprob: -6.423781394958496
    6. '    ' → logprob: -6.548781394958496
    7. '    
' → logprob: -6.548781394958496
    8. '.' → logprob: -7.173781394958496
    9. ':' → logprob: -7.548781394958496
    10. ' (' → logprob: -8.173781394958496

Token 259: ' premier' (ID: 15506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8928529024124146
    2. ' for' → logprob: -1.3928529024124146
    3. '   ' → logprob: -1.6428529024124146
    4. ' ' → logprob: -3.892852783203125
    5. ' range' → logprob: -3.892852783203125
    6. ' max' → logprob: -4.517852783203125
    7. 'inf' → logprob: -4.517852783203125
    8. 'range' → logprob: -4.767852783203125
    9. 'max' → logprob: -5.142852783203125
    10. 'jour' → logprob: -5.142852783203125

Token 260: ' passage' (ID: 26368)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5077441930770874
    2. '=' → logprob: -2.382744312286377
    3. 'if' → logprob: -2.507744312286377
    4. ' if' → logprob: -2.632744312286377
    5. ' space' → logprob: -2.882744312286377
    6. 'space' → logprob: -2.882744312286377
    7. ' ' → logprob: -3.132744312286377
    8. ' for' → logprob: -3.257744312286377
    9. ' _' → logprob: -3.382744312286377
    10. ' =' → logprob: -3.382744312286377

Token 261: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008397786878049374
    2. ' min' → logprob: -5.383397579193115
    3. 'min' → logprob: -5.633397579193115
    4. '    
' → logprob: -9.633398056030273
    5. ':' → logprob: -10.508398056030273
    6. '  ' → logprob: -11.133398056030273
    7. '
' → logprob: -11.258398056030273
    8. '	min' → logprob: -11.258398056030273
    9. 'count' → logprob: -11.633398056030273
    10. '    ' → logprob: -11.633398056030273

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40500298142433167
    2. 'min' → logprob: -1.5300029516220093
    3. ' min' → logprob: -2.155003070831299
    4. '	min' → logprob: -8.28000259399414
    5. '    
' → logprob: -9.15500259399414
    6. '
' → logprob: -9.28000259399414
    7. '  ' → logprob: -10.65500259399414
    8. '    ' → logprob: -11.15500259399414
    9. ' ' → logprob: -11.40500259399414
    10. 'max' → logprob: -11.78000259399414

Token 263: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9889063835144043
    2. ' min' → logprob: -0.9889063835144043
    3. 'min' (adapté à ' min') → logprob: -1.3639063835144043
    4. '	min' → logprob: -8.738906860351562
    5. '  ' → logprob: -10.113906860351562
    6. '    
' → logprob: -10.238906860351562
    7. '    ' → logprob: -10.488906860351562
    8. '
' → logprob: -10.988906860351562
    9. ' minimum' → logprob: -11.238906860351562
    10. ' ' → logprob: -11.238906860351562

Token 264: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00018268341955263168
    2. '_op' → logprob: -8.87518310546875
    3. '_' → logprob: -10.62518310546875
    4. '_counts' → logprob: -12.12518310546875
    5. ' _' → logprob: -12.25018310546875
    6. '_token' → logprob: -13.75018310546875
    7. '_val' → logprob: -13.75018310546875
    8. '_counter' → logprob: -13.87518310546875
    9. '_cost' → logprob: -14.25018310546875
    10. '_value' → logprob: -14.50018310546875

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756917133927345
    2. '=' → logprob: -4.634757041931152
    3. ',' → logprob: -14.634757041931152
    4. ' ' → logprob: -15.509757041931152
    5. ')' → logprob: -16.384756088256836
    6. ' =
' → logprob: -16.384756088256836
    7. '   ' → logprob: -16.634756088256836
    8. ' ' → logprob: -17.384756088256836
    9. '  ' → logprob: -17.884756088256836
    10. '=int' → logprob: -18.384756088256836

Token 266: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.021723898127675056
    2. ' ' → logprob: -4.021723747253418
    3. '10' → logprob: -5.646723747253418
    4. '   ' → logprob: -10.521723747253418
    5. 'int' → logprob: -12.146723747253418
    6. '  ' → logprob: -12.771723747253418
    7. '    ' → logprob: -13.021723747253418
    8. ' int' → logprob: -14.271723747253418
    9. 'float' → logprob: -15.646723747253418
    10. '1' → logprob: -15.896723747253418

Token 267: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0001628956088097766
    2. '10' → logprob: -8.750163078308105
    3. 'int' → logprob: -12.500163078308105
    4. ' ' → logprob: -14.625163078308105
    5. 'float' → logprob: -16.50016212463379
    6. '   ' → logprob: -16.75016212463379
    7. '1' → logprob: -19.12516212463379
    8. '１００' → logprob: -19.12516212463379
    9. '  ' → logprob: -19.37516212463379
    10. '    ' → logprob: -20.37516212463379

Token 268: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.37500286102295
    3. '00' → logprob: -14.12500286102295
    4. '0' → logprob: -15.50000286102295
    5. '   ' → logprob: -15.62500286102295
    6. ' ' → logprob: -16.375003814697266
    7. '```' → logprob: -16.625003814697266
    8. '    ' → logprob: -17.500003814697266
    9. '       ' → logprob: -17.500003814697266
    10. '  ' → logprob: -17.625003814697266

Token 269: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.18896152079105377
    2. '000' → logprob: -1.9389615058898926
    3. '0' → logprob: -3.5639615058898926
    4. '۰۰' → logprob: -14.18896198272705
    5. '_' → logprob: -15.31396198272705
    6. '```' → logprob: -15.56396198272705
    7. ' ' → logprob: -15.68896198272705
    8. '001' → logprob: -16.063961029052734
    9. '００' → logprob: -16.563961029052734
    10. '007' → logprob: -16.688961029052734

Token 270: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04122331365942955
    2. '<|end|>' → logprob: -4.416223526000977
    3. ' for' → logprob: -4.666223526000977
    4. ' 
' → logprob: -4.916223526000977
    5. '   ' → logprob: -5.541223526000977
    6. 'for' → logprob: -5.916223526000977
    7. '  
' → logprob: -6.416223526000977
    8. '    
' → logprob: -7.166223526000977
    9. '\n' → logprob: -7.666223526000977
    10. '' → logprob: -7.791223526000977

Token 271: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6975346207618713
    2. '<|end|>' → logprob: -1.4475345611572266
    3. '   ' → logprob: -2.1975345611572266
    4. 'for' → logprob: -2.4475345611572266
    5. ' ' → logprob: -2.9475345611572266
    6. ')' → logprob: -5.197534561157227
    7. '
' → logprob: -6.072534561157227
    8. ' 
' → logprob: -6.072534561157227
    9. ':' → logprob: -6.072534561157227
    10. '.' → logprob: -7.322534561157227

Token 272: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04861041530966759
    2. ' for' → logprob: -3.0486104488372803
    3. '   ' → logprob: -10.79861068725586
    4. '	for' → logprob: -13.17361068725586
    5. '
' → logprob: -14.67361068725586
    6. ' ' → logprob: -16.17361068725586
    7. '    
' → logprob: -16.79861068725586
    8. ')' → logprob: -17.17361068725586
    9. '  ' → logprob: -17.17361068725586
    10. '    ' → logprob: -17.42361068725586

Token 273: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023226479243021458
    2. ' for' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.375232696533203
    4. '
' → logprob: -16.125232696533203
    5. '	for' → logprob: -17.250232696533203
    6. '```' → logprob: -18.000232696533203
    7. ' ' → logprob: -18.500232696533203
    8. '#' → logprob: -18.625232696533203
    9. 'if' → logprob: -19.000232696533203
    10. '    
' → logprob: -19.375232696533203

Token 274: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6326265931129456
    2. ' for' → logprob: -0.7576265931129456
    3. '	for' → logprob: -11.3826265335083
    4. '   ' → logprob: -12.2576265335083
    5. ' in' → logprob: -12.2576265335083
    6. ' ' → logprob: -13.7576265335083
    7. '_for' → logprob: -13.8826265335083
    8. 'range' → logprob: -14.2576265335083
    9. 'in' → logprob: -14.5076265335083
    10. ' ' → logprob: -14.7576265335083

Token 275: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.030102189630270004
    2. 'ours' → logprob: -3.530102252960205
    3. 'oure' → logprob: -8.405101776123047
    4. '
' → logprob: -9.405101776123047
    5. '_' → logprob: -11.030101776123047
    6. 'court' → logprob: -11.280101776123047
    7. 'c' → logprob: -12.155101776123047
    8. 'our' → logprob: -12.780101776123047
    9. '

' → logprob: -13.030101776123047
    10. 'ourse' → logprob: -13.530101776123047

Token 276: ' chaque' (ID: 21194)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.01955069974064827
    2. 'op' → logprob: -4.019550800323486
    3. ' range' → logprob: -7.519550800323486
    4. ' la' → logprob: -8.019550323486328
    5. 'range' → logprob: -8.894550323486328
    6. '(op' → logprob: -9.269550323486328
    7. ' les' → logprob: -9.769550323486328
    8. ' ' → logprob: -10.144550323486328
    9. ' len' → logprob: -10.144550323486328
    10. '   ' → logprob: -10.519550323486328

Token 277: ' valeur' (ID: 41664)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.7816474437713623
    2. 'piece' → logprob: -1.7816474437713623
    3. ' piece' → logprob: -2.5316474437713623
    4. ' op' → logprob: -2.6566474437713623
    5. ' c' → logprob: -2.7816474437713623
    6. 'coin' → logprob: -3.1566474437713623
    7. ' ' → logprob: -3.2816474437713623
    8. ' monnaie' → logprob: -3.4066474437713623
    9. ' pièce' → logprob: -4.281647682189941
    10. ' o' → logprob: -4.656647682189941

Token 278: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7541853189468384
    2. ' de' → logprob: -0.8791853189468384
    3. 'de' → logprob: -3.629185199737549
    4. ' des' → logprob: -3.879185199737549
    5. 'in' → logprob: -4.004185199737549
    6. ' dans' → logprob: -4.129185199737549
    7. '   ' → logprob: -4.879185199737549
    8. '_' → logprob: -5.504185199737549
    9. ' of' → logprob: -5.504185199737549
    10. 'dans' → logprob: -6.004185199737549

Token 279: ' pièce' (ID: 56132)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.07892834395170212
    2. 'op' → logprob: -2.578928232192993
    3. '(op' → logprob: -10.828927993774414
    4. '	op' → logprob: -11.453927993774414
    5. ' coins' → logprob: -13.328927993774414
    6. ''op' → logprob: -13.578927993774414
    7. '_op' → logprob: -13.703927993774414
    8. 'coins' → logprob: -13.953927993774414
    9. 'coin' → logprob: -14.203927993774414
    10. ' ' → logprob: -14.328927993774414

Token 280: ' disponible' (ID: 32165)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3031805753707886
    2. ' for' → logprob: -1.8031805753707886
    3. '   ' → logprob: -3.053180694580078
    4. ':' → logprob: -4.553180694580078
    5. 'in' → logprob: -4.678180694580078
    6. ' ' → logprob: -4.803180694580078
    7. ',' → logprob: -5.303180694580078
    8. 'for' → logprob: -5.303180694580078
    9. ' dans' → logprob: -6.303180694580078
    10. 's' → logprob: -6.303180694580078

Token 281: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47836342453956604
    2. ' for' → logprob: -1.1033633947372437
    3. 'for' → logprob: -4.103363513946533
    4. ' in' → logprob: -4.228363513946533
    5. ':' → logprob: -4.603363513946533
    6. ',' → logprob: -5.853363513946533
    7. ' dans' → logprob: -6.853363513946533
    8. ' pour' → logprob: -7.353363513946533
    9. 'in' → logprob: -7.978363513946533
    10. '  ' → logprob: -8.103363037109375

Token 282: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.47408589720726013
    2. 'op' → logprob: -0.9740859270095825
    3. '	op' → logprob: -12.849085807800293
    4. '(op' → logprob: -12.974085807800293
    5. '_op' → logprob: -13.099085807800293
    6. ''op' → logprob: -14.724085807800293
    7. 'opf' → logprob: -14.849085807800293
    8. 'range' → logprob: -14.849085807800293
    9. '.op' → logprob: -15.599085807800293
    10. ' range' → logprob: -16.59908676147461

Token 283: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05792800709605217
    2. '   ' → logprob: -3.4329280853271484
    3. ' for' → logprob: -4.307928085327148
    4. ':
' → logprob: -4.932928085327148
    5. 'for' → logprob: -6.182928085327148
    6. ' :' → logprob: -7.307928085327148
    7. ',' → logprob: -8.557928085327148
    8. ' :
' → logprob: -8.807928085327148
    9. '<|end|>' → logprob: -9.932928085327148
    10. '.' → logprob: -10.182928085327148

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23857854306697845
    2. ':' → logprob: -1.8635785579681396
    3. ' for' → logprob: -2.9885785579681396
    4. 'for' → logprob: -5.3635783195495605
    5. '<|end|>' → logprob: -7.7385783195495605
    6. ' :' → logprob: -7.8635783195495605
    7. ',' → logprob: -8.488578796386719
    8. '    
' → logprob: -8.488578796386719
    9. '  ' → logprob: -8.738578796386719
    10. ':
' → logprob: -8.988578796386719

Token 285: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16156664490699768
    2. '   ' → logprob: -2.161566734313965
    3. 'for' (adapté à ' for') → logprob: -3.411566734313965
    4. '    
' → logprob: -7.661566734313965
    5. '
' → logprob: -7.911566734313965
    6. ' 
' → logprob: -8.911566734313965
    7. '	for' → logprob: -10.661566734313965
    8. ':' → logprob: -10.911566734313965
    9. '   
' → logprob: -11.286566734313965
    10. '  
' → logprob: -12.161566734313965

Token 286: ' o' (ID: 293)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.15935471653938293
    2. 'coin' → logprob: -2.2843546867370605
    3. ' piece' → logprob: -4.0343546867370605
    4. 'piece' → logprob: -4.0343546867370605
    5. ' op' → logprob: -6.0343546867370605
    6. ' c' → logprob: -6.4093546867370605
    7. ' o' → logprob: -6.9093546867370605
    8. 'c' → logprob: -7.2843546867370605
    9. ' value' → logprob: -7.2843546867370605
    10. ' ' → logprob: -7.6593546867370605

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018443027511239052
    2. 'in' → logprob: -4.0184431076049805
    3. ' ' → logprob: -8.51844310760498
    4. 's' → logprob: -9.64344310760498
    5. '  ' → logprob: -11.76844310760498
    6. '   ' → logprob: -11.76844310760498
    7. 'n' → logprob: -12.89344310760498
    8. ',' → logprob: -13.01844310760498
    9. 'o' → logprob: -13.39344310760498
    10. 'i' → logprob: -13.64344310760498

Token 288: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.10021582990884781
    2. 'op' → logprob: -2.3502159118652344
    3. '	op' → logprob: -12.350215911865234
    4. '_op' → logprob: -13.225215911865234
    5. '(op' → logprob: -13.350215911865234
    6. ' ' → logprob: -14.850215911865234
    7. '.op' → logprob: -15.225215911865234
    8. '   ' → logprob: -15.225215911865234
    9. 'ops' → logprob: -16.100215911865234
    10. ''op' → logprob: -16.350215911865234

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00977178942412138
    2. ':
' → logprob: -4.634771823883057
    3. '   ' → logprob: -12.009771347045898
    4. ' :' → logprob: -12.134771347045898
    5. '):
' → logprob: -13.509771347045898
    6. '):' → logprob: -13.509771347045898
    7. ':
' → logprob: -14.634771347045898
    8. ',' → logprob: -15.259771347045898
    9. ' :
' → logprob: -15.259771347045898
    10. ' if' → logprob: -15.634771347045898

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002256952691823244
    2. '        
' → logprob: -7.377256870269775
    3. '<|end|>' → logprob: -7.502256870269775
    4. '   ' → logprob: -8.127257347106934
    5. ' ' → logprob: -8.627257347106934
    6. ':' → logprob: -8.627257347106934
    7. '    ' → logprob: -9.502257347106934
    8. ',' → logprob: -9.502257347106934
    9. ' if' → logprob: -9.877257347106934
    10. ' 
' → logprob: -10.127257347106934

Token 291: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6079065799713135
    2. ' if' → logprob: -0.8579065799713135
    3. 'if' → logprob: -3.6079065799713135
    4. '   ' → logprob: -6.732906341552734
    5. ' ' → logprob: -6.857906341552734
    6. '        
' → logprob: -7.357906341552734
    7. '    ' → logprob: -8.607906341552734
    8. '
' → logprob: -8.607906341552734
    9. ' 
' → logprob: -8.607906341552734
    10. '           ' → logprob: -8.732906341552734

Token 292: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31336498260498047
    2. 'if' → logprob: -1.3133649826049805
    3. '       ' → logprob: -9.56336498260498
    4. '   ' → logprob: -11.43836498260498
    5. 'If' → logprob: -12.06336498260498
    6. ' ' → logprob: -12.43836498260498
    7. '    ' → logprob: -12.43836498260498
    8. '
' → logprob: -13.56336498260498
    9. '	if' → logprob: -13.68836498260498
    10. '        ' → logprob: -14.06336498260498

Token 293: ' vér' (ID: 42524)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3995510935783386
    2. 'if' → logprob: -1.3995511531829834
    3. '>=' → logprob: -4.024550914764404
    4. ' <=' → logprob: -4.149550914764404
    5. ' >=' → logprob: -4.399550914764404
    6. '<=' → logprob: -4.774550914764404
    7. '=' → logprob: -5.149550914764404
    8. '>' → logprob: -5.274550914764404
    9. '   ' → logprob: -6.149550914764404
    10. ' >' → logprob: -6.399550914764404

Token 294: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0012861868599429727
    2. 'ife' → logprob: -7.251286029815674
    3. 'if' → logprob: -7.626286029815674
    4. 'ifle' → logprob: -11.001286506652832
    5. 'ifi' → logprob: -11.251286506652832
    6. 'ole' → logprob: -11.876286506652832
    7. 'iole' → logprob: -12.126286506652832
    8. 'e' → logprob: -12.126286506652832
    9. 'i' → logprob: -12.376286506652832
    10. 'ifique' → logprob: -12.501286506652832

Token 295: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1849621683359146
    2. ' x' → logprob: -1.8099621534347534
    3. 'x' → logprob: -6.059962272644043
    4. 'if' → logprob: -6.934962272644043
    5. ' o' → logprob: -7.309962272644043
    6. ' ' → logprob: -7.309962272644043
    7. ' si' → logprob: -7.809962272644043
    8. ' que' → logprob: -9.309962272644043
    9. ' ' → logprob: -11.309962272644043
    10. '(x' → logprob: -11.434962272644043

Token 296: ' l' (ID: 305)
  Prédit: ' o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.35228466987609863
    2. ' x' → logprob: -1.7272846698760986
    3. 'o' → logprob: -2.6022846698760986
    4. 'x' → logprob: -3.1022846698760986
    5. ' ' → logprob: -9.60228443145752
    6. '   ' → logprob: -11.22728443145752
    7. '	o' → logprob: -11.22728443145752
    8. '  ' → logprob: -13.22728443145752
    9. ' (' → logprob: -13.85228443145752
    10. '(o' → logprob: -13.91478443145752

Token 297: ''on' (ID: 25812)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25924423336982727
    2. ' o' → logprob: -1.6342442035675049
    3. 'x' → logprob: -3.509244203567505
    4. 'o' → logprob: -5.884244441986084
    5. ' ' → logprob: -8.759243965148926
    6. 'e' → logprob: -9.009243965148926
    7. '   ' → logprob: -9.259243965148926
    8. ' (' → logprob: -10.259243965148926
    9. '  ' → logprob: -10.634243965148926
    10. ' e' → logprob: -10.759243965148926

Token 298: ' peut' (ID: 9216)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0902252197265625
    2. ' a' → logprob: -1.4652252197265625
    3. ' peut' → logprob: -1.9652252197265625
    4. ' peux' → logprob: -2.2152252197265625
    5. 'a' → logprob: -2.9652252197265625
    6. ' <=' → logprob: -3.9652252197265625
    7. ' x' → logprob: -3.9652252197265625
    8. ' has' → logprob: -4.2152252197265625
    9. ' o' → logprob: -4.3402252197265625
    10. ' puisse' → logprob: -4.5902252197265625

Token 299: ' sou' (ID: 4069)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.10196378827095032
    2. ' rendre' → logprob: -3.601963758468628
    3. ' x' → logprob: -4.351963996887207
    4. ' use' → logprob: -4.601963996887207
    5. ' ' → logprob: -4.976963996887207
    6. 'prendre' → logprob: -4.976963996887207
    7. ' continuer' → logprob: -5.101963996887207
    8. ' sou' → logprob: -5.726963996887207
    9. 'util' → logprob: -5.976963996887207
    10. 'x' → logprob: -6.101963996887207

Token 300: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.005636997055262327
    2. 'st' → logprob: -5.755637168884277
    3. 'stract' → logprob: -7.005637168884277
    4. 'str' → logprob: -7.005637168884277
    5. 'tr' → logprob: -8.755637168884277
    6. 'tra' → logprob: -8.755637168884277
    7. 'mettre' → logprob: -9.630637168884277
    8. 'straction' → logprob: -9.755637168884277
    9. 't' → logprob: -10.130637168884277
    10. 'r' → logprob: -10.255637168884277

Token 301: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.5065053105354309
    2. 'ct' → logprob: -1.6315052509307861
    3. 'cter' → logprob: -3.006505250930786
    4. 'iter' → logprob: -3.131505250930786
    5. 't' → logprob: -3.631505250930786
    6. 'it' → logprob: -4.006505489349365
    7. 'acter' → logprob: -4.006505489349365
    8. 'itre' → logprob: -4.631505489349365
    9. '   ' → logprob: -4.631505489349365
    10. 'ction' → logprob: -5.256505489349365

Token 302: ' la' (ID: 557)
  Prédit: ' o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.07181698828935623
    2. 'o' → logprob: -2.696816921234131
    3. 'x' → logprob: -6.946816921234131
    4. ' x' → logprob: -7.321816921234131
    5. ' (' → logprob: -9.196817398071289
    6. '(o' → logprob: -9.946817398071289
    7. ' ' → logprob: -10.321817398071289
    8. '	o' → logprob: -10.696817398071289
    9. '1' → logprob: -11.446817398071289
    10. ' ' → logprob: -12.196817398071289

Token 303: ' pièce' (ID: 56132)
  Prédit: ' o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.5836251974105835
    2. 'o' → logprob: -0.8336251974105835
    3. 'piece' → logprob: -5.833625316619873
    4. ' pièce' → logprob: -6.458625316619873
    5. '1' → logprob: -7.083625316619873
    6. ' ' → logprob: -7.333625316619873
    7. ' piece' → logprob: -7.583625316619873
    8. 'coin' → logprob: -7.958625316619873
    9. ' coin' → logprob: -8.708624839782715
    10. '   ' → logprob: -8.708624839782715

Token 304: ' "' (ID: 392)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6007525324821472
    2. ' o' → logprob: -1.225752592086792
    3. ' ' → logprob: -3.100752592086792
    4. ' <=' → logprob: -3.350752592086792
    5. 'o' → logprob: -4.100752353668213
    6. '       ' → logprob: -4.350752353668213
    7. ' x' → logprob: -4.725752353668213
    8. ' if' → logprob: -4.725752353668213
    9. '   ' → logprob: -4.975752353668213
    10. ' from' → logprob: -5.100752353668213

Token 305: 'o' (ID: 78)
  Prédit: ' o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.2838383913040161
    2. 'o' → logprob: -1.4088383913040161
    3. 'x' → logprob: -6.658838272094727
    4. ' ' → logprob: -7.908838272094727
    5. ' x' → logprob: -8.158838272094727
    6. '"' → logprob: -8.283838272094727
    7. '       ' → logprob: -9.033838272094727
    8. '   ' → logprob: -9.533838272094727
    9. '    ' → logprob: -9.908838272094727
    10. '        ' → logprob: -10.033838272094727

Token 306: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.050702374428510666
    2. '"' → logprob: -3.0507023334503174
    3. ' de' → logprob: -6.3007025718688965
    4. ')' → logprob: -8.800702095031738
    5. 'de' → logprob: -10.050702095031738
    6. '   ' → logprob: -10.425702095031738
    7. ' ' → logprob: -10.925702095031738
    8. ' )' → logprob: -11.050702095031738
    9. ' ")' → logprob: -12.175702095031738
    10. ' from' → logprob: -12.925702095031738

Token 307: ' de' (ID: 334)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.13096120953559875
    2. ' if' → logprob: -2.6309611797332764
    3. '   ' → logprob: -4.1309614181518555
    4. 'from' → logprob: -4.2559614181518555
    5. '       ' → logprob: -5.0059614181518555
    6. ' and' → logprob: -5.3809614181518555
    7. ' <=' → logprob: -5.5059614181518555
    8. ' de' → logprob: -7.0059614181518555
    9. ' >=' → logprob: -7.0059614181518555
    10. ',' → logprob: -7.5059614181518555

Token 308: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740902781486511
    2. ' x' → logprob: -0.9740902781486511
    3. ' la' → logprob: -12.474090576171875
    4. ' ' → logprob: -12.849090576171875
    5. '   ' → logprob: -13.099090576171875
    6. 'l' → logprob: -13.849090576171875
    7. '	x' → logprob: -14.224090576171875
    8. '1' → logprob: -14.599090576171875
    9. '"x' → logprob: -14.599090576171875
    10. ' l' → logprob: -14.599090576171875

Token 309: ' somme' (ID: 64484)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03816714510321617
    2. ' x' → logprob: -3.2881672382354736
    3. '   ' → logprob: -10.163166999816895
    4. ' ' → logprob: -10.413166999816895
    5. 's' → logprob: -10.413166999816895
    6. ' somme' → logprob: -11.163166999816895
    7. '	x' → logprob: -13.163166999816895
    8. '  ' → logprob: -13.163166999816895
    9. ' valeur' → logprob: -13.788166999816895
    10. 'sum' → logprob: -13.788166999816895

Token 310: ' "' (ID: 392)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12851127982139587
    2. 'x' → logprob: -2.7535111904144287
    3. ' à' → logprob: -3.3785111904144287
    4. '   ' → logprob: -4.378511428833008
    5. ' ' → logprob: -5.253511428833008
    6. ' if' → logprob: -6.753511428833008
    7. '       ' → logprob: -7.003511428833008
    8. '    ' → logprob: -7.503511428833008
    9. ' de' → logprob: -7.628511428833008
    10. '(x' → logprob: -7.753511428833008

Token 311: 'x' (ID: 87)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5760014653205872
    2. 'x' → logprob: -0.8260014653205872
    3. '   ' → logprob: -9.951001167297363
    4. ' ' → logprob: -11.826001167297363
    5. '    ' → logprob: -12.701001167297363
    6. '	x' → logprob: -13.201001167297363
    7. '  ' → logprob: -14.701001167297363
    8. ')' → logprob: -15.201001167297363
    9. '       ' → logprob: -15.451001167297363
    10. '"x' → logprob: -15.701001167297363

Token 312: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8471792936325073
    2. ' and' → logprob: -1.2221792936325073
    3. ' "' → logprob: -1.3471792936325073
    4. '       ' → logprob: -4.597179412841797
    5. 'and' → logprob: -5.972179412841797
    6. ')' → logprob: -6.347179412841797
    7. '   ' → logprob: -7.222179412841797
    8. ' if' → logprob: -7.472179412841797
    9. ' ' → logprob: -8.472179412841797
    10. ' )' → logprob: -8.597179412841797

Token 313: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12462417781352997
    2. ' and' → logprob: -2.249624252319336
    3. ' if' → logprob: -4.874624252319336
    4. ':' → logprob: -6.124624252319336
    5. '   ' → logprob: -6.874624252319336
    6. ',' → logprob: -7.624624252319336
    7. 'and' → logprob: -9.249624252319336
    8. '<|end|>' → logprob: -9.624624252319336
    9. 'if' → logprob: -9.749624252319336
    10. ':
' → logprob: -10.374624252319336

Token 314: 'on' (ID: 263)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4521230459213257
    2. ' o' → logprob: -1.4521230459213257
    3. 'x' → logprob: -2.0771231651306152
    4. 'o' → logprob: -5.452123165130615
    5. ')' → logprob: -10.577122688293457
    6. ' )' → logprob: -11.327122688293457
    7. '        ' → logprob: -11.827122688293457
    8. '    ' → logprob: -11.952122688293457
    9. ' ' → logprob: -12.077122688293457
    10. '       ' → logprob: -12.577122688293457

Token 315: ' ne' (ID: 453)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11000235378742218
    2. '>=' → logprob: -2.735002279281616
    3. ' <=' → logprob: -3.860002279281616
    4. '   ' → logprob: -5.110002517700195
    5. ' >' → logprob: -5.610002517700195
    6. ' ' → logprob: -6.360002517700195
    7. ' -' → logprob: -6.860002517700195
    8. '<=' → logprob: -6.860002517700195
    9. '>' → logprob: -6.985002517700195
    10. '=' → logprob: -7.860002517700195

Token 316: ' veut' (ID: 41653)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5794779658317566
    2. ' <=' → logprob: -1.5794780254364014
    3. ' >=' → logprob: -2.4544780254364014
    4. '>=' → logprob: -3.9544780254364014
    5. '<=' → logprob: -3.9544780254364014
    6. ' peut' → logprob: -3.9544780254364014
    7. 'continue' → logprob: -4.079477787017822
    8. ' ' → logprob: -4.204477787017822
    9. ' dépasse' → logprob: -4.579477787017822
    10. ')' → logprob: -5.204477787017822

Token 317: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.03989522159099579
    2. 'pas' → logprob: -3.2898952960968018
    3. ' x' → logprob: -7.039895057678223
    4. 'x' → logprob: -7.914895057678223
    5. '   ' → logprob: -8.414895057678223
    6. ' ' → logprob: -9.164895057678223
    7. ' que' → logprob: -9.289895057678223
    8. 't' → logprob: -10.039895057678223
    9. '    ' → logprob: -10.539895057678223
    10. '_pas' → logprob: -10.789895057678223

Token 318: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2363389730453491
    2. ' dépasser' → logprob: -1.4863389730453491
    3. 'que' → logprob: -1.6113389730453491
    4. ' que' → logprob: -1.8613389730453491
    5. ' x' → logprob: -4.111339092254639
    6. '   ' → logprob: -4.111339092254639
    7. 'aller' → logprob: -4.236339092254639
    8. ' ' → logprob: -4.611339092254639
    9. ' dépass' → logprob: -4.611339092254639
    10. 'dé' → logprob: -4.736339092254639

Token 319: ' somme' (ID: 64484)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08670654892921448
    2. 'x' → logprob: -2.7117066383361816
    3. ' if' → logprob: -5.961706638336182
    4. ' nég' → logprob: -5.961706638336182
    5. ' negative' → logprob: -6.086706638336182
    6. ' dépasse' → logprob: -6.086706638336182
    7. ' )' → logprob: -6.586706638336182
    8. 's' → logprob: -7.586706638336182
    9. ' >' → logprob: -7.711706638336182
    10. ' dépass' → logprob: -7.961706638336182

Token 320: ' nég' (ID: 55805)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5264842510223389
    2. ' <' → logprob: -1.7764842510223389
    3. '   ' → logprob: -2.901484251022339
    4. ' >=' → logprob: -2.901484251022339
    5. ' nég' → logprob: -3.026484251022339
    6. ' -' → logprob: -3.401484251022339
    7. '>' → logprob: -4.151484489440918
    8. ' ' → logprob: -5.026484489440918
    9. '-' → logprob: -5.401484489440918
    10. ' <=' → logprob: -5.651484489440918

Token 321: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0025965843815356493
    2. '   ' → logprob: -6.752596378326416
    3. '       ' → logprob: -8.002596855163574
    4. 'ale' → logprob: -8.377596855163574
    5. 'atif' → logprob: -8.627596855163574
    6. 'a' → logprob: -9.752596855163574
    7. '     ' → logprob: -9.877596855163574
    8. '#' → logprob: -10.002596855163574
    9. 'ective' → logprob: -10.127596855163574
    10. 'e' → logprob: -10.127596855163574

Token 322: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06748964637517929
    2. ' )' → logprob: -3.4424896240234375
    3. '):' → logprob: -3.8174896240234375
    4. '   ' → logprob: -5.0674896240234375
    5. '):
' → logprob: -6.3174896240234375
    6. ' ):' → logprob: -6.9424896240234375
    7. '       ' → logprob: -7.8174896240234375
    8. ')
' → logprob: -7.9424896240234375
    9. ' ):
' → logprob: -7.9424896240234375
    10. '")' → logprob: -8.067489624023438

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.089560367166996
    2. ':' → logprob: -3.0895602703094482
    3. '   ' → logprob: -3.4645602703094482
    4. ' :' → logprob: -5.714560508728027
    5. ' if' → logprob: -6.839560508728027
    6. '<|end|>' → logprob: -6.964560508728027
    7. ':
' → logprob: -7.214560508728027
    8. ' and' → logprob: -7.464560508728027
    9. '    ' → logprob: -7.464560508728027
    10. '        
' → logprob: -7.964560508728027

Token 324: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08135910332202911
    2. ' if' → logprob: -2.7063591480255127
    3. '   ' → logprob: -5.081358909606934
    4. 'if' (adapté à ' if') → logprob: -5.831358909606934
    5. ' 
' → logprob: -6.831358909606934
    6. '        
' → logprob: -7.706358909606934
    7. '    ' → logprob: -8.831358909606934
    8. ' ' → logprob: -8.956358909606934
    9. '<|end|>' → logprob: -9.831358909606934
    10. '    
' → logprob: -9.956358909606934

Token 325: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22221121191978455
    2. ' o' → logprob: -1.722211241722107
    3. 'x' → logprob: -3.9722111225128174
    4. 'o' → logprob: -6.8472113609313965
    5. ' ' → logprob: -7.3472113609313965
    6. '    ' → logprob: -11.597210884094238
    7. '	o' → logprob: -11.722210884094238
    8. ' (' → logprob: -11.847210884094238
    9. '   ' → logprob: -11.972210884094238
    10. '  ' → logprob: -12.222210884094238

Token 326: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.46646296977996826
    2. ' -' → logprob: -1.4664629697799683
    3. '-' → logprob: -2.591463088989258
    4. '>=' → logprob: -2.716463088989258
    5. ' ' → logprob: -6.966463088989258
    6. ')>=' → logprob: -11.091463088989258
    7. '   ' → logprob: -11.341463088989258
    8. '    ' → logprob: -11.716463088989258
    9. ']>=' → logprob: -11.966463088989258
    10. '<|end|>' → logprob: -12.091463088989258

Token 327: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.25195634365081787
    2. ' o' → logprob: -1.5019563436508179
    3. '	o' → logprob: -10.87695598602295
    4. '   ' → logprob: -12.37695598602295
    5. ' ' → logprob: -13.25195598602295
    6. '       ' → logprob: -14.75195598602295
    7. '    ' → logprob: -15.00195598602295
    8. '(o' → logprob: -15.37695598602295
    9. '_o' → logprob: -15.50195598602295
    10. ''o' → logprob: -15.62695598602295

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576826810836792
    2. ':
' → logprob: -0.826826810836792
    3. '):
' → logprob: -7.451827049255371
    4. '):' → logprob: -9.326827049255371
    5. '       ' → logprob: -9.451827049255371
    6. ' :
' → logprob: -9.451827049255371
    7. ' :' → logprob: -10.576827049255371
    8. ' and' → logprob: -11.701827049255371
    9. '   ' → logprob: -11.701827049255371
    10. '():
' → logprob: -12.076827049255371

Token 329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006835664622485638
    2. '       ' → logprob: -5.381835460662842
    3. 'count' → logprob: -6.256835460662842
    4. ' count' → logprob: -8.6318359375
    5. 'result' → logprob: -10.7568359375
    6. ':' → logprob: -11.5068359375
    7. '
' → logprob: -11.5068359375
    8. '            
' → logprob: -11.6318359375
    9. ' result' → logprob: -11.8818359375
    10. '   ' → logprob: -12.1318359375

Token 330: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3112606704235077
    2. '           ' → logprob: -1.56126070022583
    3. ' count' → logprob: -3.43626070022583
    4. 'res' → logprob: -5.31126070022583
    5. '       ' → logprob: -5.43626070022583
    6. 'temp' → logprob: -5.56126070022583
    7. 'current' → logprob: -5.93626070022583
    8. 'result' → logprob: -6.56126070022583
    9. 'curr' → logprob: -6.68626070022583
    10. ' current' → logprob: -6.93626070022583

Token 331: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0740680918097496
    2. '           ' → logprob: -3.199068069458008
    3. ' count' → logprob: -4.824068069458008
    4. 'res' → logprob: -5.199068069458008
    5. 'current' → logprob: -5.574068069458008
    6. 'temp' → logprob: -5.824068069458008
    7. 'curr' → logprob: -5.824068069458008
    8. 'result' → logprob: -6.324068069458008
    9. '   ' → logprob: -6.824068069458008
    10. '       ' → logprob: -7.199068069458008

Token 332: ' effect' (ID: 3159)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07616367191076279
    2. '           ' → logprob: -3.7011637687683105
    3. 'min' → logprob: -3.9511637687683105
    4. ' count' → logprob: -4.3261637687683105
    5. '_count' → logprob: -5.8261637687683105
    6. '=' → logprob: -6.3261637687683105
    7. '   ' → logprob: -6.3261637687683105
    8. ' min' → logprob: -6.5761637687683105
    9. '       ' → logprob: -7.4511637687683105
    10. '    ' → logprob: -7.5761637687683105

Token 333: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -2.935296834039036e-06
    2. 'u' → logprob: -13.25000286102295
    3. 'ure' → logprob: -15.12500286102295
    4. 'uez' → logprob: -15.62500286102295
    5. 'uer' → logprob: -15.75000286102295
    6. 'uera' → logprob: -16.250003814697266
    7. 'uent' → logprob: -16.500003814697266
    8. 'ues' → logprob: -16.500003814697266
    9. '
' → logprob: -16.875003814697266
    10. '[' → logprob: -17.500003814697266

Token 334: ' l' (ID: 305)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6791289448738098
    2. ' count' → logprob: -1.554128885269165
    3. '1' → logprob: -2.179128885269165
    4. ' min' → logprob: -2.304128885269165
    5. 'min' → logprob: -2.929128885269165
    6. ' ' → logprob: -4.679129123687744
    7. '           ' → logprob: -5.554129123687744
    8. '   ' → logprob: -6.429129123687744
    9. '       ' → logprob: -9.304128646850586
    10. '               ' → logprob: -9.804128646850586

Token 335: ''appel' (ID: 172839)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.532677948474884
    2. ' recursive' → logprob: -1.2826778888702393
    3. '   ' → logprob: -3.0326778888702393
    4. 'a' → logprob: -3.6576778888702393
    5. 'recursive' → logprob: -4.157678127288818
    6. ''appel' → logprob: -4.532678127288818
    7. ' a' → logprob: -5.282678127288818
    8. 'rec' → logprob: -5.407678127288818
    9. '       ' → logprob: -5.782678127288818
    10. '_recursive' → logprob: -6.157678127288818

Token 336: ' réc' (ID: 36254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.319556474685669
    2. ' recursive' → logprob: -1.569556474685669
    3. ' réc' → logprob: -1.569556474685669
    4. '_recursive' → logprob: -2.444556474685669
    5. '_rec' → logprob: -2.694556474685669
    6. '           ' → logprob: -2.694556474685669
    7. 'rec' → logprob: -3.194556474685669
    8. ' rec' → logprob: -3.819556474685669
    9. 'recursive' → logprob: -4.44455623626709
    10. '       ' → logprob: -5.06955623626709

Token 337: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.19174106419086456
    2. 'ursive' → logprob: -2.0667409896850586
    3. 'ur' → logprob: -3.6917409896850586
    4. '   ' → logprob: -4.066740989685059
    5. 'ursion' → logprob: -5.816740989685059
    6. '       ' → logprob: -7.441740989685059
    7. ' count' → logprob: -7.566740989685059
    8. 'urrent' → logprob: -7.566740989685059
    9. 'count' → logprob: -8.566740989685059
    10. 'usr' → logprob: -8.691740989685059

Token 338: 'if' (ID: 366)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0037734778597950935
    2. 'ur' → logprob: -6.5037736892700195
    3. 'ursion' → logprob: -6.8787736892700195
    4. '   ' → logprob: -7.3787736892700195
    5. 'ursive' → logprob: -7.7537736892700195
    6. '       ' → logprob: -9.37877368927002
    7. 's' → logprob: -10.87877368927002
    8. 'us' → logprob: -11.12877368927002
    9. 'rs' → logprob: -11.37877368927002
    10. 'if' → logprob: -11.62877368927002

Token 339: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39657261967658997
    2. ' =' → logprob: -1.3965725898742676
    3. ' count' → logprob: -3.6465725898742676
    4. 'count' → logprob: -3.6465725898742676
    5. ' to' → logprob: -4.896572589874268
    6. '=' → logprob: -4.896572589874268
    7. '(count' → logprob: -5.021572589874268
    8. ' à' → logprob: -6.521572589874268
    9. '               ' → logprob: -7.021572589874268
    10. ',' → logprob: -7.271572589874268

Token 340: ' sou' (ID: 4069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18596920371055603
    2. ' count' → logprob: -2.435969114303589
    3. '           ' → logprob: -3.685969114303589
    4. 'calcul' → logprob: -3.935969114303589
    5. 'appel' → logprob: -4.810969352722168
    6. '   ' → logprob: -4.810969352722168
    7. ' appel' → logprob: -4.935969352722168
    8. '       ' → logprob: -6.060969352722168
    9. 'app' → logprob: -6.685969352722168
    10. 'rec' → logprob: -6.935969352722168

Token 341: 'str' (ID: 689)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.14473573863506317
    2. 'tra' → logprob: -2.769735813140869
    3. 'str' → logprob: -3.019735813140869
    4. 'tract' → logprob: -4.269735813140869
    5. '   ' → logprob: -4.894735813140869
    6. 'stract' → logprob: -7.519735813140869
    7. 't' → logprob: -8.144735336303711
    8. '  ' → logprob: -9.269735336303711
    9. 'x' → logprob: -9.269735336303711
    10. '       ' → logprob: -9.644735336303711

Token 342: 'ayant' (ID: 130896)
  Prédit: 'ayant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -0.0014766523381695151
    2. 'a' → logprob: -7.126476764678955
    3. 'act' → logprob: -8.001476287841797
    4. 'ait' → logprob: -8.751476287841797
    5. '   ' → logprob: -9.751476287841797
    6. 'ay' → logprob: -10.126476287841797
    7. 'acting' → logprob: -10.876476287841797
    8. 'uant' → logprob: -11.876476287841797
    9. 'aient' → logprob: -11.876476287841797
    10. 'ai' → logprob: -12.001476287841797

Token 343: ' la' (ID: 557)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.22656461596488953
    2. ' o' → logprob: -1.976564645767212
    3. '(o' → logprob: -2.976564645767212
    4. ' (' → logprob: -4.601564407348633
    5. '   ' → logprob: -6.851564407348633
    6. 'x' → logprob: -7.101564407348633
    7. ' x' → logprob: -7.851564407348633
    8. '(' → logprob: -7.851564407348633
    9. '           ' → logprob: -8.351564407348633
    10. '(x' → logprob: -8.601564407348633

Token 344: ' valeur' (ID: 41664)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.22545449435710907
    2. ' o' → logprob: -1.6004544496536255
    3. '	o' → logprob: -10.850454330444336
    4. '   ' → logprob: -12.100454330444336
    5. ''o' → logprob: -12.475454330444336
    6. ' ' → logprob: -12.475454330444336
    7. '           ' → logprob: -13.225454330444336
    8. 'x' → logprob: -13.350454330444336
    9. '    ' → logprob: -13.600454330444336
    10. '1' → logprob: -14.725454330444336

Token 345: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1804101467132568
    2. '(o' → logprob: -1.1804101467132568
    3. 'o' → logprob: -1.5554101467132568
    4. ' o' → logprob: -2.930410146713257
    5. '(x' → logprob: -3.180410146713257
    6. '(' → logprob: -3.305410146713257
    7. '           ' → logprob: -4.180410385131836
    8. ' of' → logprob: -4.680410385131836
    9. 'x' → logprob: -4.805410385131836
    10. '   ' → logprob: -5.430410385131836

Token 346: ' la' (ID: 557)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.14389300346374512
    2. ' o' → logprob: -2.018893003463745
    3. 'l' → logprob: -7.268893241882324
    4. '   ' → logprob: -8.518893241882324
    5. ' ' → logprob: -8.893893241882324
    6. ''o' → logprob: -10.018893241882324
    7. ' la' → logprob: -10.143893241882324
    8. '	o' → logprob: -10.643893241882324
    9. ' l' → logprob: -11.143893241882324
    10. '    ' → logprob: -11.518893241882324

Token 347: ' pièce' (ID: 56132)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.7456547021865845
    2. 'o' → logprob: -0.8706547021865845
    3. 'piece' → logprob: -2.745654582977295
    4. ' pièce' → logprob: -3.370654582977295
    5. ' o' → logprob: -5.120654582977295
    6. ' piece' → logprob: -7.120654582977295
    7. ' pi' → logprob: -7.495654582977295
    8. 'coin' → logprob: -8.120655059814453
    9. 'pie' → logprob: -8.370655059814453
    10. ' ' → logprob: -9.120655059814453

Token 348: ' "' (ID: 392)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.247175693511963
    2. ' o' → logprob: -1.247175693511963
    3. '           ' → logprob: -1.622175693511963
    4. ' (' → logprob: -2.122175693511963
    5. '(o' → logprob: -2.872175693511963
    6. ' x' → logprob: -4.372175693511963
    7. '(x' → logprob: -4.497175693511963
    8. 'x' → logprob: -4.872175693511963
    9. '   ' → logprob: -5.372175693511963
    10. '               ' → logprob: -5.622175693511963

Token 349: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0266114454716444
    2. ' o' → logprob: -3.651611328125
    3. '   ' → logprob: -9.026611328125
    4. 'x' → logprob: -9.151611328125
    5. ' ' → logprob: -10.026611328125
    6. ' x' → logprob: -11.401611328125
    7. '"' → logprob: -12.401611328125
    8. ''o' → logprob: -12.401611328125
    9. '       ' → logprob: -12.526611328125
    10. '    ' → logprob: -12.651611328125

Token 350: '"' (ID: 1)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42749252915382385
    2. ')' → logprob: -1.6774924993515015
    3. '-' → logprob: -2.677492618560791
    4. '   ' → logprob: -3.802492618560791
    5. '           ' → logprob: -4.052492618560791
    6. 'from' → logprob: -4.302492618560791
    7. ' de' → logprob: -4.677492618560791
    8. ' from' → logprob: -5.052492618560791
    9. ',' → logprob: -5.552492618560791
    10. '):' → logprob: -5.927492618560791

Token 351: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03936678543686867
    2. 'count' → logprob: -3.5393667221069336
    3. ',' → logprob: -5.539366722106934
    4. '               ' → logprob: -6.164366722106934
    5. ' count' → logprob: -6.789366722106934
    6. ':' → logprob: -7.289366722106934
    7. 'min' → logprob: -7.539366722106934
    8. ' min' → logprob: -8.164366722106934
    9. '            
' → logprob: -8.414366722106934
    10. '(count' → logprob: -9.414366722106934

Token 352: ' "' (ID: 392)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02057201974093914
    2. ' x' → logprob: -3.8955719470977783
    3. '   ' → logprob: -10.7705717086792
    4. '(x' → logprob: -12.0205717086792
    5. ' (' → logprob: -14.0205717086792
    6. ' ' → logprob: -14.5205717086792
    7. '	x' → logprob: -14.6455717086792
    8. '       ' → logprob: -15.3955717086792
    9. '```' → logprob: -15.3955717086792
    10. '    ' → logprob: -15.3955717086792

Token 353: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416738796979189
    2. ' x' → logprob: -4.264167308807373
    3. '   ' → logprob: -12.764167785644531
    4. '(x' → logprob: -14.389167785644531
    5. '	x' → logprob: -15.514167785644531
    6. ' ' → logprob: -16.13916778564453
    7. '"x' → logprob: -17.01416778564453
    8. '       ' → logprob: -17.38916778564453
    9. '```' → logprob: -17.38916778564453
    10. '    ' → logprob: -17.51416778564453

Token 354: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10627305507659912
    2. ' -' → logprob: -2.8562731742858887
    3. '           ' → logprob: -3.8562731742858887
    4. '-' → logprob: -4.981273174285889
    5. ',' → logprob: -5.231273174285889
    6. '),' → logprob: -5.731273174285889
    7. ' )' → logprob: -6.106273174285889
    8. '   ' → logprob: -6.981273174285889
    9. '       ' → logprob: -7.231273174285889
    10. '               ' → logprob: -7.356273174285889

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16166888177394867
    2. 'count' → logprob: -2.2866687774658203
    3. '               ' → logprob: -3.7866687774658203
    4. ' count' → logprob: -4.41166877746582
    5. ' min' → logprob: -4.78666877746582
    6. 'min' → logprob: -5.78666877746582
    7. 'result' → logprob: -8.16166877746582
    8. '
' → logprob: -8.66166877746582
    9. '            
' → logprob: -8.66166877746582
    10. '(count' → logprob: -8.78666877746582

Token 356: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.15074679255485535
    2. ' count' → logprob: -2.9007468223571777
    3. '           ' → logprob: -3.4007468223571777
    4. 'current' → logprob: -4.025746822357178
    5. 'curr' → logprob: -5.025746822357178
    6. 'temp' → logprob: -5.275746822357178
    7. ' current' → logprob: -5.275746822357178
    8. 'res' → logprob: -5.525746822357178
    9. 'result' → logprob: -6.400746822357178
    10. '   ' → logprob: -6.400746822357178

Token 357: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07422493398189545
    2. ' count' → logprob: -3.0742249488830566
    3. '           ' → logprob: -4.824224948883057
    4. 'current' → logprob: -4.824224948883057
    5. ' current' → logprob: -6.074224948883057
    6. 'curr' → logprob: -6.574224948883057
    7. 'temp' → logprob: -6.949224948883057
    8. 'result' → logprob: -7.199224948883057
    9. 'res' → logprob: -7.324224948883057
    10. 'cnt' → logprob: -7.949224948883057

Token 358: ' ajoute' (ID: 91611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8806647062301636
    2. 'count' → logprob: -1.0056647062301636
    3. '           ' → logprob: -2.630664825439453
    4. 'min' → logprob: -3.630664825439453
    5. 'continue' → logprob: -3.880664825439453
    6. ' count' → logprob: -3.880664825439453
    7. 's' → logprob: -4.630664825439453
    8. ' =' → logprob: -4.880664825439453
    9. '+=' → logprob: -4.880664825439453
    10. ' +=' → logprob: -5.130664825439453

Token 359: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11355353146791458
    2. ' ' → logprob: -2.238553524017334
    3. '           ' → logprob: -7.488553524017334
    4. '   ' → logprob: -9.113554000854492
    5. '            ' → logprob: -10.488554000854492
    6. '    ' → logprob: -11.113554000854492
    7. '               ' → logprob: -11.738554000854492
    8. '+' → logprob: -12.988554000854492
    9. ' +' → logprob: -13.113554000854492
    10. '                   ' → logprob: -13.738554000854492

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007784157060086727
    2. ' ' → logprob: -7.3757781982421875
    3. '   ' → logprob: -9.250778198242188
    4. '           ' → logprob: -10.000778198242188
    5. 'count' → logprob: -12.000778198242188
    6. '       ' → logprob: -13.875778198242188
    7. '               ' → logprob: -14.250778198242188
    8. '  ' → logprob: -14.625778198242188
    9. ' count' → logprob: -14.625778198242188
    10. '    ' → logprob: -14.875778198242188

Token 361: ' pour' (ID: 1930)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12480896711349487
    2. '(count' → logprob: -3.3748090267181396
    3. '+' → logprob: -3.7498090267181396
    4. '(' → logprob: -3.7498090267181396
    5. '           ' → logprob: -4.3748087882995605
    6. '   ' → logprob: -5.1248087882995605
    7. ')' → logprob: -5.7498087882995605
    8. ' (' → logprob: -5.7498087882995605
    9. '    ' → logprob: -5.8748087882995605
    10. ' count' → logprob: -6.1248087882995605

Token 362: ' la' (ID: 557)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.29167014360427856
    2. ' compter' → logprob: -1.9166700839996338
    3. 'count' → logprob: -2.416670083999634
    4. ' la' → logprob: -4.791670322418213
    5. ' l' → logprob: -5.541670322418213
    6. ' le' → logprob: -6.541670322418213
    7. ' compte' → logprob: -6.791670322418213
    8. ' ' → logprob: -7.791670322418213
    9. ' comp' → logprob: -8.166669845581055
    10. ' prendre' → logprob: -8.291669845581055

Token 363: ' pièce' (ID: 56132)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2547076642513275
    2. ' count' → logprob: -1.62970769405365
    3. ' compter' → logprob: -4.7547078132629395
    4. 'piece' → logprob: -5.5047078132629395
    5. 'comp' → logprob: -5.8797078132629395
    6. ' ' → logprob: -6.3797078132629395
    7. ' coin' → logprob: -6.5047078132629395
    8. ' piece' → logprob: -6.6297078132629395
    9. 'coin' → logprob: -6.6297078132629395
    10. 'token' → logprob: -6.8797078132629395

Token 364: ' actuellement' (ID: 67741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.07589234411716461
    2. 'util' → logprob: -2.950892448425293
    3. ' used' → logprob: -5.075892448425293
    4. 'used' → logprob: -5.950892448425293
    5. ' utilisé' → logprob: -5.950892448425293
    6. '   ' → logprob: -6.325892448425293
    7. ' utilis' → logprob: -6.325892448425293
    8. ' ' → logprob: -7.200892448425293
    9. ' utilisées' → logprob: -7.200892448425293
    10. 'count' → logprob: -7.450892448425293

Token 366: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07636547833681107
    2. '+' → logprob: -3.2013654708862305
    3. '           ' → logprob: -4.9513654708862305
    4. 'count' → logprob: -4.9513654708862305
    5. ' +
' → logprob: -5.0763654708862305
    6. '(count' → logprob: -5.4513654708862305
    7. ' count' → logprob: -5.5763654708862305
    8. '+
' → logprob: -6.9513654708862305
    9. ' (' → logprob: -7.0763654708862305
    10. '(' → logprob: -7.2013654708862305

Token 367: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45652174949645996
    2. ' count' → logprob: -1.08152174949646
    3. '           ' → logprob: -3.83152174949646
    4. '(count' → logprob: -6.331521987915039
    5. '   ' → logprob: -6.456521987915039
    6. ' return' → logprob: -6.956521987915039
    7. 'return' → logprob: -7.831521987915039
    8. '       ' → logprob: -8.331521987915039
    9. '               ' → logprob: -8.831521987915039
    10. ' (' → logprob: -9.081521987915039

Token 368: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.13052703440189362
    2. ' count' → logprob: -2.3805270195007324
    3. '           ' → logprob: -4.380527019500732
    4. 'current' → logprob: -5.755527019500732
    5. 'res' → logprob: -6.130527019500732
    6. 'temp' → logprob: -6.380527019500732
    7. ' current' → logprob: -6.630527019500732
    8. ' res' → logprob: -6.755527019500732
    9. 'result' → logprob: -6.755527019500732
    10. 'cnt' → logprob: -6.880527019500732

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1574704349040985
    2. '_' → logprob: -2.657470464706421
    3. '_coin' → logprob: -2.907470464706421
    4. '=' → logprob: -3.907470464706421
    5. '   ' → logprob: -8.157470703125
    6. '_count' → logprob: -8.657470703125
    7. '_=' → logprob: -9.282470703125
    8. 'coin' → logprob: -9.407470703125
    9. ' ' → logprob: -10.282470703125
    10. '_co' → logprob: -10.407470703125

Token 370: ' ' (ID: 220)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5768919587135315
    2. 'count' → logprob: -0.8268919587135315
    3. '1' → logprob: -7.076891899108887
    4. ' ' → logprob: -9.201891899108887
    5. '   ' → logprob: -12.201891899108887
    6. '(count' → logprob: -14.201891899108887
    7. '	count' → logprob: -14.826891899108887
    8. '    ' → logprob: -15.576891899108887
    9. '  ' → logprob: -15.826891899108887
    10. '0' → logprob: -16.451892852783203

Token 371: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00266055460087955
    2. '1' → logprob: -6.002660751342773
    3. ' count' → logprob: -8.627660751342773
    4. ' ' → logprob: -12.627660751342773
    5. '   ' → logprob: -13.127660751342773
    6. '(count' → logprob: -15.377660751342773
    7. '  ' → logprob: -16.002660751342773
    8. '	count' → logprob: -17.002660751342773
    9. '    ' → logprob: -17.502660751342773
    10. '
' → logprob: -17.627660751342773

Token 372: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31327390670776367
    2. '+' → logprob: -1.3132739067077637
    3. '+
' → logprob: -12.313274383544922
    4. ' +
' → logprob: -12.688274383544922
    5. '   ' → logprob: -13.063274383544922
    6. '    ' → logprob: -14.563274383544922
    7. ',' → logprob: -14.813274383544922
    8. ' ' → logprob: -14.938274383544922
    9. 'count' → logprob: -15.188274383544922
    10. '
' → logprob: -15.688274383544922

Token 373: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0031777136027812958
    2. ' count' → logprob: -5.753177642822266
    3. '(count' → logprob: -17.378177642822266
    4. '   ' → logprob: -18.128177642822266
    5. '	count' → logprob: -19.128177642822266
    6. ' ' → logprob: -19.753177642822266
    7. '[count' → logprob: -20.003177642822266
    8. '  ' → logprob: -21.753177642822266
    9. '    ' → logprob: -21.753177642822266
    10. '$count' → logprob: -21.753177642822266

Token 374: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -1.4021237802808173e-05
    2. 'coin' → logprob: -11.250014305114746
    3. '_co' → logprob: -14.875014305114746
    4. '_' → logprob: -15.000014305114746
    5. 'Coin' → logprob: -15.625014305114746
    6. ' coin' → logprob: -16.50001335144043
    7. '(x' → logprob: -17.00001335144043
    8. '(' → logprob: -17.50001335144043
    9. '_count' → logprob: -17.62501335144043
    10. '_token' → logprob: -17.87501335144043

Token 375: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002187852980569005
    2. '(' → logprob: -6.127187728881836
    3. '(
' → logprob: -13.252187728881836
    4. ' (' → logprob: -14.002187728881836
    5. 'x' → logprob: -16.377187728881836
    6. ' ' → logprob: -18.377187728881836
    7. '((' → logprob: -19.252187728881836
    8. '(
' → logprob: -19.627187728881836
    9. '(xs' → logprob: -19.752187728881836
    10. ' x' → logprob: -19.877187728881836

Token 376: ' -' (ID: 533)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12503410875797272
    2. '(' → logprob: -2.5000340938568115
    3. ' -' → logprob: -3.6250340938568115
    4. ' (' → logprob: -5.000034332275391
    5. '-' → logprob: -6.375034332275391
    6. '(o' → logprob: -9.00003433227539
    7. '(
' → logprob: -9.25003433227539
    8. ',' → logprob: -10.25003433227539
    9. ')' → logprob: -10.87503433227539
    10. '   ' → logprob: -10.87503433227539

Token 377: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.04860077425837517
    2. ' o' → logprob: -3.048600673675537
    3. '	o' → logprob: -11.548601150512695
    4. '   ' → logprob: -13.173601150512695
    5. '    ' → logprob: -14.298601150512695
    6. ' ' → logprob: -15.173601150512695
    7. '{o' → logprob: -15.173601150512695
    8. '(o' → logprob: -15.548601150512695
    9. ''o' → logprob: -16.048601150512695
    10. '  ' → logprob: -16.298601150512695

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.380904672667384e-05
    2. ' ,' → logprob: -10.375033378601074
    3. '   ' → logprob: -14.125033378601074
    4. ',x' → logprob: -14.375033378601074
    5. ')' → logprob: -15.375033378601074
    6. ',o' → logprob: -15.500033378601074
    7. '(op' → logprob: -16.12503433227539
    8. '       ' → logprob: -16.25003433227539
    9. '(' → logprob: -16.37503433227539
    10. '',' → logprob: -16.37503433227539

Token 379: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.07889056205749512
    2. 'op' → logprob: -2.578890562057495
    3. '	op' → logprob: -14.453890800476074
    4. '(op' → logprob: -16.328889846801758
    5. '    ' → logprob: -16.828889846801758
    6. '_op' → logprob: -17.203889846801758
    7. '.op' → logprob: -18.078889846801758
    8. 'OP' → logprob: -18.453889846801758
    9. ' ' → logprob: -18.578889846801758
    10. '   ' → logprob: -18.828889846801758

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',min' → logprob: -14.125001907348633
    4. '   ' → logprob: -17.125001907348633
    5. 'min' → logprob: -17.875001907348633
    6. ')' → logprob: -18.625001907348633
    7. '),' → logprob: -19.375001907348633
    8. '```' → logprob: -19.625001907348633
    9. ',m' → logprob: -19.750001907348633
    10. ',
' → logprob: -20.000001907348633

Token 381: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1269284337759018
    2. ' min' → logprob: -2.1269283294677734
    3. '   ' → logprob: -15.626928329467773
    4. ' ' → logprob: -15.876928329467773
    5. '    ' → logprob: -17.251928329467773
    6. '  ' → logprob: -17.376928329467773
    7. '	min' → logprob: -17.626928329467773
    8. '[min' → logprob: -18.501928329467773
    9. 'max' → logprob: -19.626928329467773
    10. '_min' → logprob: -19.751928329467773

Token 382: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -4.320199877838604e-07
    2. 'op' → logprob: -15.125
    3. '_ops' → logprob: -16.875
    4. '_OP' → logprob: -18.125
    5. 'Op' → logprob: -18.25
    6. '_' → logprob: -18.5
    7. '	op' → logprob: -19.375
    8. '-op' → logprob: -19.375
    9. '_opt' → logprob: -19.5
    10. '_opcode' → logprob: -19.75

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ')
' → logprob: -10.875019073486328
    3. ')

' → logprob: -15.500019073486328
    4. ' )' → logprob: -16.375019073486328
    5. '   ' → logprob: -16.500019073486328
    6. ')
' → logprob: -17.625019073486328
    7. '))' → logprob: -18.250019073486328
    8. '),' → logprob: -19.000019073486328
    9. ')`' → logprob: -19.000019073486328
    10. ')}' → logprob: -19.250019073486328

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3773648142814636
    2. '<|end|>' → logprob: -1.5023648738861084
    3. '       ' → logprob: -3.3773648738861084
    4. '
' → logprob: -3.3773648738861084
    5. '   ' → logprob: -4.877364635467529
    6. '            
' → logprob: -5.377364635467529
    7. ' if' → logprob: -5.502364635467529
    8. '  
' → logprob: -6.252364635467529
    9. '<|end|>' → logprob: -6.377364635467529
    10. ')' → logprob: -7.252364635467529

Token 385: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15486887097358704
    2. ' if' → logprob: -2.5298688411712646
    3. 'if' → logprob: -2.9048688411712646
    4. '       ' → logprob: -4.779869079589844
    5. '
' → logprob: -7.779869079589844
    6. '   ' → logprob: -9.154869079589844
    7. '            
' → logprob: -9.529869079589844
    8. '               ' → logprob: -10.779869079589844
    9. '        
' → logprob: -12.154869079589844
    10. '```' → logprob: -12.154869079589844

Token 386: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0044747465290129185
    2. '           ' → logprob: -5.754474639892578
    3. ' if' → logprob: -7.379474639892578
    4. 'min' → logprob: -7.379474639892578
    5. '       ' → logprob: -10.129474639892578
    6. '   ' → logprob: -12.004474639892578
    7. '               ' → logprob: -14.004474639892578
    8. ' min' → logprob: -15.004474639892578
    9. 'If' → logprob: -15.129474639892578
    10. '```' → logprob: -15.504474639892578

Token 387: ' le' (ID: 505)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.014166799373924732
    2. 'count' → logprob: -4.264166831970215
    3. '(count' → logprob: -13.139166831970215
    4. '	count' → logprob: -13.639166831970215
    5. '<count' → logprob: -16.0141658782959
    6. '[count' → logprob: -16.8891658782959
    7. '$count' → logprob: -17.7641658782959
    8. '=count' → logprob: -18.5141658782959
    9. ' ' → logprob: -18.6391658782959
    10. ' ' → logprob: -19.0141658782959

Token 388: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04858805239200592
    2. ' count' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.673587799072266
    4. ' ' → logprob: -15.798587799072266
    5. '	count' → logprob: -16.173587799072266
    6. 'min' → logprob: -16.673587799072266
    7. '           ' → logprob: -16.673587799072266
    8. '(count' → logprob: -17.423587799072266
    9. '<count' → logprob: -17.423587799072266
    10. 'ount' → logprob: -17.798587799072266

Token 389: ' de' (ID: 334)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0129441022872925
    2. 'count' → logprob: -1.3879441022872925
    3. '<count' → logprob: -2.012944221496582
    4. '_token' → logprob: -2.512944221496582
    5. ' count' → logprob: -2.887944221496582
    6. '	count' → logprob: -3.512944221496582
    7. ' de' → logprob: -3.762944221496582
    8. '   ' → logprob: -4.262944221496582
    9. '=count' → logprob: -4.262944221496582
    10. '_' → logprob: -4.637944221496582

Token 390: ' pièces' (ID: 49165)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1798391342163086
    2. ' count' → logprob: -1.8048391342163086
    3. 'coin' → logprob: -9.679839134216309
    4. ' coin' → logprob: -11.554839134216309
    5. '_count' → logprob: -11.679839134216309
    6. '	count' → logprob: -12.429839134216309
    7. ' ' → logprob: -12.554839134216309
    8. 'coins' → logprob: -13.804839134216309
    9. '<count' → logprob: -13.929839134216309
    10. '   ' → logprob: -14.054839134216309

Token 391: ' total' (ID: 3609)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9079156517982483
    2. '<count' → logprob: -1.5329155921936035
    3. ' count' → logprob: -2.0329155921936035
    4. ' <' → logprob: -2.2829155921936035
    5. '   ' → logprob: -2.7829155921936035
    6. '<' → logprob: -3.2829155921936035
    7. ' ' → logprob: -4.4079155921936035
    8. ' est' → logprob: -4.7829155921936035
    9. ' utilisé' → logprob: -4.9079155921936035
    10. ' used' → logprob: -5.5329155921936035

Token 392: ' calcul' (ID: 7559)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.3293354511260986
    2. ' est' → logprob: -1.5793354511260986
    3. 'count' → logprob: -1.7043354511260986
    4. 'est' → logprob: -1.8293354511260986
    5. '<count' → logprob: -2.7043354511260986
    6. ' is' → logprob: -3.4543354511260986
    7. ' <' → logprob: -3.7043354511260986
    8. '_count' → logprob: -3.9543354511260986
    9. '   ' → logprob: -4.3293352127075195
    10. ' ' → logprob: -4.8293352127075195

Token 393: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0002346488763578236
    2. 'ulé' → logprob: -9.000234603881836
    3. 'ated' → logprob: -10.125234603881836
    4. 'até' → logprob: -10.750234603881836
    5. 'ée' → logprob: -11.750234603881836
    6. 'è' → logprob: -11.875234603881836
    7. 'ré' → logprob: -11.875234603881836
    8. 'ées' → logprob: -12.000234603881836
    9. 'été' → logprob: -12.875234603881836
    10. '   ' → logprob: -13.000234603881836

Token 394: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07364059239625931
    2. '<' → logprob: -2.8236405849456787
    3. '<count' → logprob: -5.073640823364258
    4. '   ' → logprob: -6.073640823364258
    5. ' est' → logprob: -6.948640823364258
    6. ' ' → logprob: -7.073640823364258
    7. ' is' → logprob: -7.448640823364258
    8. '    ' → logprob: -8.573640823364258
    9. 'est' → logprob: -9.073640823364258
    10. '  ' → logprob: -9.573640823364258

Token 395: ' inférieur' (ID: 191498)
  Prédit: ' inférieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.6235266923904419
    2. '<' → logprob: -1.373526692390442
    3. ' <' → logprob: -1.748526692390442
    4. ' moins' → logprob: -5.248526573181152
    5. ' less' → logprob: -5.373526573181152
    6. 'moins' → logprob: -5.623526573181152
    7. ' min' → logprob: -5.748526573181152
    8. ' smaller' → logprob: -5.748526573181152
    9. 'min' → logprob: -5.873526573181152
    10. ' moindre' → logprob: -5.873526573181152

Token 396: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3278454840183258
    2. '           ' → logprob: -1.3278454542160034
    3. ' au' → logprob: -5.577845573425293
    4. ' to' → logprob: -5.827845573425293
    5. 'à' → logprob: -6.077845573425293
    6. '   ' → logprob: -6.452845573425293
    7. ' a' → logprob: -6.577845573425293
    8. '            ' → logprob: -7.702845573425293
    9. ' ' → logprob: -7.952845573425293
    10. '               ' → logprob: -8.077845573425293

Token 397: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031786637846380472
    2. ' min' → logprob: -5.753178596496582
    3. 'count' → logprob: -14.003178596496582
    4. '   ' → logprob: -15.878178596496582
    5. '	min' → logprob: -17.1281795501709
    6. '           ' → logprob: -17.5031795501709
    7. 'minimum' → logprob: -17.8781795501709
    8. '_min' → logprob: -18.6281795501709
    9. '```' → logprob: -19.1281795501709
    10. '       ' → logprob: -19.5031795501709

Token 398: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00016396844875998795
    2. '_' → logprob: -8.750164031982422
    3. ' _' → logprob: -13.125164031982422
    4. '   ' → logprob: -14.250164031982422
    5. 'imum' → logprob: -15.000164031982422
    6. '_counts' → logprob: -15.000164031982422
    7. 'ount' → logprob: -15.125164031982422
    8. '_counter' → logprob: -15.375164031982422
    9. 'count' → logprob: -15.875164031982422
    10. '_min' → logprob: -16.000164031982422

Token 399: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1373799741268158
    2. ':
' → logprob: -2.1373798847198486
    3. '           ' → logprob: -5.137380123138428
    4. ',' → logprob: -6.637380123138428
    5. '               ' → logprob: -6.637380123138428
    6. ' :' → logprob: -7.137380123138428
    7. ' :
' → logprob: -7.387380123138428
    8. '=' → logprob: -8.76237964630127
    9. ' and' → logprob: -9.13737964630127
    10. '   ' → logprob: -9.76237964630127

Token 400: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1161234974861145
    2. '           ' → logprob: -2.3661234378814697
    3. ' min' → logprob: -4.241123676300049
    4. 'min' → logprob: -7.991123676300049
    5. '                
' → logprob: -8.61612319946289
    6. '                   ' → logprob: -8.74112319946289
    7. '   ' → logprob: -8.99112319946289
    8. '       ' → logprob: -9.24112319946289
    9. ' ' → logprob: -9.61612319946289
    10. ' if' → logprob: -9.74112319946289

Token 401: ' met' (ID: 1421)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3786706328392029
    2. 'min' → logprob: -2.2536706924438477
    3. '=' → logprob: -2.8786706924438477
    4. ' =' → logprob: -3.0036706924438477
    5. '       ' → logprob: -3.2536706924438477
    6. '               ' → logprob: -3.2536706924438477
    7. ' min' → logprob: -4.253670692443848
    8. '   ' → logprob: -5.503670692443848
    9. '=min' → logprob: -6.378670692443848
    10. 'if' → logprob: -6.878670692443848

Token 402: ' à' (ID: 1221)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5653094053268433
    2. 'à' → logprob: -1.1903094053268433
    3. ' à' → logprob: -2.690309524536133
    4. '_min' → logprob: -4.190309524536133
    5. ' min' → logprob: -4.315309524536133
    6. '   ' → logprob: -4.940309524536133
    7. '_' → logprob: -5.065309524536133
    8. '=min' → logprob: -6.190309524536133
    9. '_a' → logprob: -6.315309524536133
    10. '       ' → logprob: -6.565309524536133

Token 403: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0005998577689751983
    2. 'min' → logprob: -8.12559986114502
    3. ' jour' → logprob: -8.75059986114502
    4. '```' → logprob: -9.87559986114502
    5. 'jours' → logprob: -10.12559986114502
    6. '   ' → logprob: -10.75059986114502
    7. 'day' → logprob: -11.50059986114502
    8. 'jou' → logprob: -11.75059986114502
    9. 'journ' → logprob: -12.37559986114502
    10. 'j' → logprob: -12.50059986114502

Token 404: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.07922959327697754
    2. 'min' → logprob: -2.5792295932769775
    3. '           ' → logprob: -8.204229354858398
    4. '(min' → logprob: -10.579229354858398
    5. '   ' → logprob: -11.079229354858398
    6. '	min' → logprob: -11.204229354858398
    7. '_min' → logprob: -12.454229354858398
    8. '               ' → logprob: -12.454229354858398
    9. '       ' → logprob: -13.329229354858398
    10. '[min' → logprob: -14.204229354858398

Token 405: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5094070477061905e-05
    2. '_' → logprob: -11.250015258789062
    3. '_co' → logprob: -14.500015258789062
    4. ' _' → logprob: -14.875015258789062
    5. '_c' → logprob: -15.000015258789062
    6. '_counts' → logprob: -15.250015258789062
    7. '_coin' → logprob: -16.125015258789062
    8. '   ' → logprob: -17.125015258789062
    9. '_COUNT' → logprob: -17.125015258789062
    10. '_cont' → logprob: -17.250015258789062

Token 406: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019491063430905342
    2. '               ' → logprob: -7.126949310302734
    3. ' if' → logprob: -8.251949310302734
    4. ' and' → logprob: -8.501949310302734
    5. ' =' → logprob: -8.751949310302734
    6. ':' → logprob: -9.251949310302734
    7. '   ' → logprob: -9.376949310302734
    8. '       ' → logprob: -9.501949310302734
    9. '=' → logprob: -9.501949310302734
    10. ',' → logprob: -9.751949310302734

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002261355984956026
    2. '       ' → logprob: -7.377261161804199
    3. '               ' → logprob: -7.877261161804199
    4. '            
' → logprob: -7.877261161804199
    5. ' =' → logprob: -8.1272611618042
    6. '=' → logprob: -8.8772611618042
    7. '   ' → logprob: -9.2522611618042
    8. ' if' → logprob: -9.3772611618042
    9. '<|end|>' → logprob: -9.3772611618042
    10. '            ' → logprob: -10.5022611618042

Token 408: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024514339864253998
    2. ' if' → logprob: -3.8995144367218018
    3. 'if' (adapté à ' if') → logprob: -5.774514198303223
    4. '       ' → logprob: -7.274514198303223
    5. '   ' → logprob: -9.649514198303223
    6. '               ' → logprob: -10.024514198303223
    7. '
' → logprob: -10.399514198303223
    8. '            
' → logprob: -11.399514198303223
    9. '		' → logprob: -12.774514198303223
    10. '	if' → logprob: -13.274514198303223

Token 409: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10020720958709717
    2. ' count' → logprob: -2.3502073287963867
    3. '	count' → logprob: -15.350207328796387
    4. '(count' → logprob: -15.350207328796387
    5. '   ' → logprob: -16.22520637512207
    6. ' ' → logprob: -17.35020637512207
    7. '<count' → logprob: -18.10020637512207
    8. '_count' → logprob: -19.47520637512207
    9. '[count' → logprob: -19.72520637512207
    10. '$count' → logprob: -19.97520637512207

Token 410: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0028136710170656443
    2. '<' → logprob: -5.877813816070557
    3. ' ' → logprob: -12.252813339233398
    4. '<|end|>' → logprob: -13.127813339233398
    5. ' <",' → logprob: -14.002813339233398
    6. '   ' → logprob: -15.502813339233398
    7. '[' → logprob: -15.752813339233398
    8. '<int' → logprob: -16.0028133392334
    9. '  ' → logprob: -16.1278133392334
    10. ' ' → logprob: -16.2528133392334

Token 411: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3132616877555847
    2. ' min' → logprob: -1.3132617473602295
    3. '	min' → logprob: -17.813261032104492
    4. '_min' → logprob: -18.813261032104492
    5. '   ' → logprob: -19.188261032104492
    6. 'm' → logprob: -20.188261032104492
    7. 'max' → logprob: -20.813261032104492
    8. ' ' → logprob: -20.938261032104492
    9. '    ' → logprob: -21.438261032104492
    10. '=min' → logprob: -21.438261032104492

Token 412: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -16.0
    3. '_' → logprob: -16.375
    4. '_co' → logprob: -17.75
    5. '_op' → logprob: -18.25
    6. '_comp' → logprob: -18.75
    7. '_COUNT' → logprob: -18.875
    8. '_coin' → logprob: -19.0
    9. '_counts' → logprob: -19.25
    10. '_cost' → logprob: -19.25

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6957175135612488
    2. ':
' → logprob: -0.6957175135612488
    3. '               ' → logprob: -6.1957173347473145
    4. '           ' → logprob: -7.6957173347473145
    5. '):
' → logprob: -10.695717811584473
    6. '       ' → logprob: -10.695717811584473
    7. ' :
' → logprob: -11.195717811584473
    8. ':

' → logprob: -12.570717811584473
    9. ' :' → logprob: -12.945717811584473
    10. '=' → logprob: -12.945717811584473

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008106979075819254
    2. '           ' → logprob: -7.250810623168945
    3. ' min' → logprob: -9.500810623168945
    4. 'min' → logprob: -11.375810623168945
    5. '                   ' → logprob: -12.375810623168945
    6. '
' → logprob: -12.750810623168945
    7. '       ' → logprob: -12.750810623168945
    8. '   ' → logprob: -14.125810623168945
    9. '```' → logprob: -14.500810623168945
    10. '[min' → logprob: -14.750810623168945

Token 415: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.31413891911506653
    2. 'min' (adapté à ' min') → logprob: -1.3141388893127441
    3. '               ' → logprob: -7.064138889312744
    4. '                   ' → logprob: -11.439139366149902
    5. '           ' → logprob: -12.564139366149902
    6. '	min' → logprob: -12.939139366149902
    7. '   ' → logprob: -12.939139366149902
    8. '_min' → logprob: -13.314139366149902
    9. '       ' → logprob: -14.814139366149902
    10. '(min' → logprob: -15.689139366149902

Token 416: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.125003814697266
    3. '_c' → logprob: -15.250003814697266
    4. '_co' → logprob: -15.750003814697266
    5. ' _' → logprob: -16.000003814697266
    6. '_coin' → logprob: -16.250003814697266
    7. '_op' → logprob: -16.750003814697266
    8. '               ' → logprob: -16.875003814697266
    9. '_counts' → logprob: -16.875003814697266
    10. '_token' → logprob: -16.875003814697266

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003178071230649948
    2. '=' → logprob: -5.753178119659424
    3. '               ' → logprob: -16.628177642822266
    4. '                ' → logprob: -16.878177642822266
    5. '                   ' → logprob: -17.253177642822266
    6. '           ' → logprob: -17.378177642822266
    7. ' =
' → logprob: -17.628177642822266
    8. '            ' → logprob: -17.628177642822266
    9. '    ' → logprob: -17.753177642822266
    10. '   ' → logprob: -18.128177642822266

Token 418: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01416350994259119
    2. ' count' → logprob: -4.264163494110107
    3. '	count' → logprob: -19.014163970947266
    4. '[count' → logprob: -20.264163970947266
    5. '(count' → logprob: -20.514163970947266
    6. '_count' → logprob: -21.264163970947266
    7. '<count' → logprob: -21.764163970947266
    8. 'c' → logprob: -22.139163970947266
    9. '$count' → logprob: -22.139163970947266
    10. '=count' → logprob: -22.514163970947266

Token 419: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13034236431121826
    2. '    
' → logprob: -2.130342483520508
    3. '
' → logprob: -6.005342483520508
    4. '       ' → logprob: -8.255342483520508
    5. '   
' → logprob: -8.380342483520508
    6. '        
' → logprob: -9.255342483520508
    7. '                
' → logprob: -9.380342483520508
    8. '               ' → logprob: -9.505342483520508
    9. '  
' → logprob: -10.130342483520508
    10. '<|end|>' → logprob: -10.130342483520508

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.096126576769166e-05
    2. '```' → logprob: -11.000041007995605
    3. '    
' → logprob: -11.875041007995605
    4. '       ' → logprob: -12.125041007995605
    5. ' min' → logprob: -12.250041007995605
    6. 'min' → logprob: -12.625041007995605
    7. '
' → logprob: -12.750041007995605
    8. '           ' → logprob: -14.625041007995605
    9. '               ' → logprob: -15.625041007995605
    10. '                
' → logprob: -17.00004005432129

Token 421: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1280943900346756
    2. 'min' → logprob: -2.378094434738159
    3. ' min' → logprob: -3.628094434738159
    4. '
' → logprob: -7.12809419631958
    5. '	min' → logprob: -9.628094673156738
    6. '```' → logprob: -10.253094673156738
    7. '    
' → logprob: -11.503094673156738
    8. '[min' → logprob: -12.003094673156738
    9. '  ' → logprob: -12.253094673156738
    10. ' ' → logprob: -12.628094673156738

Token 422: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004078997299075127
    2. ' min' → logprob: -5.5040788650512695
    3. '   ' → logprob: -14.37907886505127
    4. '#' → logprob: -19.754079818725586
    5. '	min' → logprob: -19.754079818725586
    6. '```' → logprob: -20.129079818725586
    7. '(min' → logprob: -20.379079818725586
    8. '[min' → logprob: -21.254079818725586
    9. ' ' → logprob: -21.379079818725586
    10. '_min' → logprob: -21.629079818725586

Token 423: ' mém' (ID: 136981)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7015366554260254
    2. 'min' → logprob: -0.7015366554260254
    3. '[min' → logprob: -4.951536655426025
    4. '   ' → logprob: -6.701536655426025
    5. '_min' → logprob: -10.451536178588867
    6. '[' → logprob: -12.076536178588867
    7. '	min' → logprob: -12.201536178588867
    8. ' return' → logprob: -12.326536178588867
    9. '  ' → logprob: -13.576536178588867
    10. '=min' → logprob: -13.701536178588867

Token 424: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.45252612233161926
    2. '_op' → logprob: -1.3275260925292969
    3. 'o' → logprob: -3.077526092529297
    4. '   ' → logprob: -3.577526092529297
    5. '[' → logprob: -5.202526092529297
    6. 'oire' → logprob: -5.702526092529297
    7. '_optimizer' → logprob: -6.452526092529297
    8. '```' → logprob: -6.452526092529297
    9. 'op' → logprob: -6.577526092529297
    10. '_or' → logprob: -6.827526092529297

Token 425: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.23313137888908386
    2. 'is' → logprob: -1.7331314086914062
    3. 'iser' → logprob: -3.6081314086914062
    4. 'isé' → logprob: -6.108131408691406
    5. 'er' → logprob: -8.233131408691406
    6. 'isation' → logprob: -8.358131408691406
    7. 'isa' → logprob: -8.358131408691406
    8. 'min' → logprob: -8.483131408691406
    9. 'isent' → logprob: -8.483131408691406
    10. 'isez' → logprob: -8.733131408691406

Token 426: ' le' (ID: 505)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.008927959017455578
    2. 'x' → logprob: -5.008927822113037
    3. ' x' → logprob: -6.383927822113037
    4. '   ' → logprob: -8.008928298950195
    5. '{x' → logprob: -10.008928298950195
    6. '[' → logprob: -10.133928298950195
    7. ' [' → logprob: -10.133928298950195
    8. 'min' → logprob: -10.633928298950195
    9. '(x' → logprob: -11.133928298950195
    10. '[min' → logprob: -11.258928298950195

Token 427: ' résultat' (ID: 62556)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20178373157978058
    2. ' min' → logprob: -1.7017837762832642
    3. 'result' → logprob: -8.451784133911133
    4. '[min' → logprob: -9.201784133911133
    5. ' result' → logprob: -10.076784133911133
    6. 'minimum' → logprob: -12.701784133911133
    7. ' minimum' → logprob: -13.076784133911133
    8. 'x' → logprob: -13.201784133911133
    9. ' resultat' → logprob: -13.326784133911133
    10. 'value' → logprob: -13.826784133911133

Token 428: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10458330065011978
    2. '[min' → logprob: -3.104583263397217
    3. ' min' → logprob: -3.604583263397217
    4. 'min' → logprob: -3.604583263397217
    5. '(min' → logprob: -10.854583740234375
    6. '	min' → logprob: -10.979583740234375
    7. '_min' → logprob: -12.229583740234375
    8. ',min' → logprob: -12.729583740234375
    9. '  ' → logprob: -12.729583740234375
    10. '    
' → logprob: -12.854583740234375

Token 429: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011113963089883327
    2. ' x' → logprob: -4.511114120483398
    3. '[x' → logprob: -9.636114120483398
    4. '   ' → logprob: -14.261114120483398
    5. '	x' → logprob: -16.2611141204834
    6. ' ' → logprob: -17.2611141204834
    7. '_x' → logprob: -17.6361141204834
    8. '{x' → logprob: -18.3861141204834
    9. '[' → logprob: -18.5111141204834
    10. '    
' → logprob: -18.6361141204834

Token 430: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003757383383344859
    2. 'clé' → logprob: -8.000375747680664
    3. ' x' → logprob: -10.375375747680664
    4. '```' → logprob: -13.125375747680664
    5. ' prochaine' → logprob: -13.375375747680664
    6. 'next' → logprob: -14.250375747680664
    7. ' clé' → logprob: -14.500375747680664
    8. 'fonction' → logprob: -14.625375747680664
    9. 's' → logprob: -14.875375747680664
    10. 'val' → logprob: -15.000375747680664

Token 431: ' "' (ID: 392)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12700022757053375
    2. ' x' → logprob: -2.127000331878662
    3. '[x' → logprob: -9.626999855041504
    4. '   ' → logprob: -12.126999855041504
    5. '	x' → logprob: -15.001999855041504
    6. ' ' → logprob: -15.126999855041504
    7. '(x' → logprob: -16.75200080871582
    8. '```' → logprob: -16.87700080871582
    9. '{x' → logprob: -17.12700080871582
    10. '[' → logprob: -17.25200080871582

Token 432: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. ' x' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.500001907348633
    4. '```' → logprob: -22.500001907348633
    5. '	x' → logprob: -22.875001907348633
    6. '"x' → logprob: -23.000001907348633
    7. '[x' → logprob: -24.500001907348633
    8. '$x' → logprob: -24.500001907348633
    9. ' ' → logprob: -24.875001907348633
    10. ''x' → logprob: -25.125001907348633

Token 433: '"' (ID: 1)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004128030501306057
    2. '   ' → logprob: -5.5041279792785645
    3. '[' → logprob: -10.879128456115723
    4. ']' → logprob: -11.254128456115723
    5. ' =' → logprob: -12.129128456115723
    6. '[min' → logprob: -12.629128456115723
    7. ' [' → logprob: -13.254128456115723
    8. ' x' → logprob: -13.379128456115723
    9. '[y' → logprob: -13.754128456115723
    10. '[
' → logprob: -14.129128456115723

Token 434: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008009305456653237
    2. '
' → logprob: -8.375801086425781
    3. 'min' → logprob: -8.625801086425781
    4. '[min' → logprob: -8.625801086425781
    5. ' min' → logprob: -9.125801086425781
    6. '    
' → logprob: -9.250801086425781
    7. '	min' → logprob: -13.000801086425781
    8. '   
' → logprob: -13.500801086425781
    9. '  ' → logprob: -14.000801086425781
    10. '(min' → logprob: -14.750801086425781

Token 435: 'mé' (ID: 35328)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10545454919338226
    2. 'x' → logprob: -2.355454444885254
    3. '   ' → logprob: -5.355454444885254
    4. ' min' → logprob: -8.105454444885254
    5. ' x' → logprob: -8.480454444885254
    6. '[min' → logprob: -14.355454444885254
    7. '       ' → logprob: -14.605454444885254
    8. '[x' → logprob: -14.855454444885254
    9. ' ' → logprob: -14.980454444885254
    10. '```' → logprob: -15.105454444885254

Token 436: 'mo' (ID: 3690)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.782076358795166
    2. 'min' → logprob: -0.907076358795166
    3. '   ' → logprob: -3.157076358795166
    4. '_min' → logprob: -3.532076358795166
    5. 'mo' → logprob: -3.782076358795166
    6. 'op' → logprob: -3.907076358795166
    7. '_' → logprob: -5.157076358795166
    8. 'oire' → logprob: -5.407076358795166
    9. 'moire' → logprob: -5.532076358795166
    10. 'm' → logprob: -6.032076358795166

Token 437: 'ïs' (ID: 96230)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.046662695705890656
    2. '_op' → logprob: -4.0466628074646
    3. '   ' → logprob: -4.1716628074646
    4. 'op' → logprob: -5.4216628074646
    5. '[' → logprob: -5.9216628074646
    6. '_' → logprob: -6.5466628074646
    7. ']' → logprob: -6.6716628074646
    8. '_[' → logprob: -7.6716628074646
    9. 'x' → logprob: -8.421662330627441
    10. 'ization' → logprob: -8.546662330627441

Token 438: 'ation' (ID: 387)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1392074823379517
    2. 'z' → logprob: -1.3892074823379517
    3. 'ation' → logprob: -1.3892074823379517
    4. '   ' → logprob: -2.514207363128662
    5. 'ization' → logprob: -3.139207363128662
    6. 's' → logprob: -4.264207363128662
    7. 'vation' → logprob: -4.639207363128662
    8. ')' → logprob: -4.889207363128662
    9. 'isation' → logprob: -4.889207363128662
    10. 'tion' → logprob: -5.389207363128662

Token 439: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14935676753520966
    2. '[x' → logprob: -2.1493568420410156
    3. ')' → logprob: -4.274356842041016
    4. '[min' → logprob: -4.899356842041016
    5. ')
' → logprob: -8.024356842041016
    6. '[' → logprob: -8.774356842041016
    7. ']' → logprob: -9.274356842041016
    8. '[key' → logprob: -10.274356842041016
    9. ' )' → logprob: -10.649356842041016
    10. '  ' → logprob: -10.899356842041016

Token 440: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011022476479411125
    2. 'min' → logprob: -5.011022567749023
    3. '
' → logprob: -5.761022567749023
    4. ' min' → logprob: -7.136022567749023
    5. '[min' → logprob: -8.386022567749023
    6. '    
' → logprob: -9.261022567749023
    7. '	min' → logprob: -10.886022567749023
    8. '  ' → logprob: -12.886022567749023
    9. '(min' → logprob: -13.011022567749023
    10. '   
' → logprob: -13.011022567749023

Token 441: ' ne' (ID: 453)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4887043535709381
    2. ' éviter' → logprob: -1.6137043237686157
    3. ' min' → logprob: -2.4887044429779053
    4. ' x' → logprob: -2.8637044429779053
    5. '   ' → logprob: -3.4887044429779053
    6. 'x' → logprob: -5.113704204559326
    7. ' return' → logprob: -5.363704204559326
    8. ' minim' → logprob: -6.613704204559326
    9. ' ev' → logprob: -6.738704204559326
    10. ' ' → logprob: -7.113704204559326

Token 442: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.038098860532045364
    2. '   ' → logprob: -3.9130988121032715
    3. 'pas' → logprob: -4.2880988121032715
    4. ' return' → logprob: -6.1630988121032715
    5. 'min' → logprob: -7.9130988121032715
    6. '_pas' → logprob: -7.9130988121032715
    7. ' min' → logprob: -8.16309928894043
    8. ' retourner' → logprob: -8.28809928894043
    9. '    ' → logprob: -9.53809928894043
    10. 'return' → logprob: -9.91309928894043

Token 443: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36807313561439514
    2. 'min' → logprob: -1.4930731058120728
    3. ' min' → logprob: -3.3680732250213623
    4. ' return' → logprob: -3.6180732250213623
    5. ' oublier' → logprob: -4.868072986602783
    6. 'return' → logprob: -5.368072986602783
    7. ' perdre' → logprob: -5.993072986602783
    8. '       ' → logprob: -6.368072986602783
    9. '```' → logprob: -7.118072986602783
    10. '    ' → logprob: -7.368072986602783

Token 444: ' recal' (ID: 147248)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0109511613845825
    2. ' return' → logprob: -1.2609511613845825
    3. '#' → logprob: -2.260951042175293
    4. 'return' → logprob: -2.510951042175293
    5. 'mettre' → logprob: -3.385951042175293
    6. ' #' → logprob: -4.135951042175293
    7. '  ' → logprob: -4.385951042175293
    8. '<|end|>' → logprob: -4.635951042175293
    9. ' oublier' → logprob: -4.760951042175293
    10. ' retourner' → logprob: -5.010951042175293

Token 445: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.003208372974768281
    2. 'uler' → logprob: -6.003208160400391
    3. 'p' → logprob: -8.87820816040039
    4. '   ' → logprob: -8.87820816040039
    5. '#' → logprob: -9.37820816040039
    6. 'ul' → logprob: -9.87820816040039
    7. 'cular' → logprob: -10.25320816040039
    8. 'cule' → logprob: -10.37820816040039
    9. 'icul' → logprob: -10.75320816040039
    10. 'er' → logprob: -10.75320816040039

Token 446: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.002010241150856018
    2. 'iser' → logprob: -6.252010345458984
    3. 'iter' → logprob: -10.627010345458984
    4. 'uler' → logprob: -11.002010345458984
    5. 'rer' → logprob: -11.252010345458984
    6. '   ' → logprob: -11.502010345458984
    7. 'urer' → logprob: -11.627010345458984
    8. 'uer' → logprob: -12.877010345458984
    9. '#' → logprob: -13.627010345458984
    10. 'iner' → logprob: -13.877010345458984

Token 447: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007575393188744783
    2. 'min' → logprob: -5.757575511932373
    3. '[min' → logprob: -6.007575511932373
    4. '
' → logprob: -7.132575511932373
    5. '    
' → logprob: -7.507575511932373
    6. ' min' → logprob: -7.632575511932373
    7. '(min' → logprob: -10.132575035095215
    8. '   
' → logprob: -11.007575035095215
    9. '  ' → logprob: -11.382575035095215
    10. '  
' → logprob: -11.632575035095215

Token 448: ' tard' (ID: 30225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020445771515369415
    2. '    ' → logprob: -5.395445823669434
    3. '       ' → logprob: -5.645445823669434
    4. '  ' → logprob: -6.520445823669434
    5. ' tard' → logprob: -6.645445823669434
    6. ' tôt' → logprob: -6.770445823669434
    7. ' x' → logprob: -6.895445823669434
    8. 'x' → logprob: -7.145445823669434
    9. 'import' → logprob: -7.145445823669434
    10. 'def' → logprob: -7.395445823669434

Token 449: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006372982170432806
    2. '
' → logprob: -5.256372928619385
    3. ' min' → logprob: -7.506372928619385
    4. 'min' → logprob: -7.756372928619385
    5. '    
' → logprob: -9.131373405456543
    6. '[min' → logprob: -10.131373405456543
    7. '  ' → logprob: -13.006373405456543
    8. '	min' → logprob: -13.131373405456543
    9. '   
' → logprob: -13.131373405456543
    10. '  
' → logprob: -13.256373405456543

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010700895451009274
    2. '
' → logprob: -4.635700702667236
    3. '    
' → logprob: -8.135701179504395
    4. 'min' → logprob: -8.260701179504395
    5. ' min' → logprob: -8.510701179504395
    6. '[min' → logprob: -8.635701179504395
    7. '	min' → logprob: -12.760701179504395
    8. '   
' → logprob: -12.760701179504395
    9. '(min' → logprob: -13.010701179504395
    10. '  
' → logprob: -13.135701179504395

Token 451: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8696476817131042
    2. '   ' → logprob: -1.119647741317749
    3. 'min' (adapté à ' min') → logprob: -1.369647741317749
    4. '[min' → logprob: -8.744647979736328
    5. '	min' → logprob: -9.369647979736328
    6. '
' → logprob: -10.869647979736328
    7. '(min' → logprob: -11.119647979736328
    8. '_min' → logprob: -11.119647979736328
    9. '    
' → logprob: -11.744647979736328
    10. '  ' → logprob: -13.369647979736328

Token 452: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.37500286102295
    3. '_ops' → logprob: -15.12500286102295
    4. '_opcode' → logprob: -15.37500286102295
    5. '_OP' → logprob: -15.87500286102295
    6. '_operator' → logprob: -16.375001907348633
    7. '_oper' → logprob: -16.750001907348633
    8. 'op' → logprob: -17.250001907348633
    9. '_operation' → logprob: -17.500001907348633
    10. 'Op' → logprob: -17.625001907348633

Token 453: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.11996734328568e-05
    2. '[' → logprob: -10.125041007995605
    3. '\[' → logprob: -14.375041007995605
    4. ' [' → logprob: -14.875041007995605
    5. '```' → logprob: -16.750041961669922
    6. '[
' → logprob: -17.875041961669922
    7. '[...]' → logprob: -18.125041961669922
    8. '{x' → logprob: -18.875041961669922
    9. 'x' → logprob: -19.250041961669922
    10. '[s' → logprob: -19.375041961669922

Token 454: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.070975071750581e-05
    2. ']=' → logprob: -10.500030517578125
    3. ' ]' → logprob: -12.750030517578125
    4. '=' → logprob: -15.250030517578125
    5. ' =' → logprob: -20.250030517578125
    6. '[' → logprob: -20.875030517578125
    7. ')' → logprob: -21.125030517578125
    8. ']
' → logprob: -21.250030517578125
    9. '']' → logprob: -21.625030517578125
    10. ']

' → logprob: -22.500030517578125

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=

' → logprob: -18.514163970947266
    4. '=
' → logprob: -18.639163970947266
    5. '＝' → logprob: -18.639163970947266
    6. ']' → logprob: -18.889163970947266
    7. ']=' → logprob: -18.889163970947266
    8. '=min' → logprob: -19.889163970947266
    9. ')=' → logprob: -20.764163970947266
    10. '   ' → logprob: -21.139163970947266

Token 456: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.935296834039036e-06
    2. ' min' → logprob: -12.75000286102295
    3. '	min' → logprob: -24.750003814697266
    4. '(min' → logprob: -25.750003814697266
    5. '[min' → logprob: -25.750003814697266
    6. 'max' → logprob: -26.000003814697266
    7. '_min' → logprob: -26.000003814697266
    8. 'm' → logprob: -27.625003814697266
    9. '   ' → logprob: -27.750003814697266
    10. 'mini' → logprob: -28.125003814697266

Token 457: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. 'count' → logprob: -14.500000953674316
    3. '_' → logprob: -15.875000953674316
    4. 'ount' → logprob: -17.0
    5. '_co' → logprob: -17.25
    6. '_c' → logprob: -18.125
    7. '_counts' → logprob: -18.125
    8. '_COUNT' → logprob: -18.5
    9. '\' → logprob: -18.625
    10. 'Count' → logprob: -19.125

Token 458: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15051616728305817
    2. '
' → logprob: -2.0255162715911865
    3. '    
' → logprob: -5.150516033172607
    4. ' return' → logprob: -7.025516033172607
    5. 'return' → logprob: -7.025516033172607
    6. '  
' → logprob: -9.775516510009766
    7. ' 
' → logprob: -10.025516510009766
    8. '	return' → logprob: -10.025516510009766
    9. '<|end|>' → logprob: -10.275516510009766
    10. '   
' → logprob: -11.025516510009766

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006021226872690022
    2. '    
' → logprob: -8.375601768493652
    3. 'return' → logprob: -8.625601768493652
    4. '
' → logprob: -9.000601768493652
    5. ' return' → logprob: -9.875601768493652
    6. '	return' → logprob: -11.625601768493652
    7. '<|end|>' → logprob: -12.125601768493652
    8. '  
' → logprob: -14.125601768493652
    9. '\n' → logprob: -14.625601768493652
    10. '```' → logprob: -14.875601768493652

Token 460: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04908723011612892
    2. 'return' → logprob: -3.0490872859954834
    3. ' return' → logprob: -7.799087047576904
    4. '	return' → logprob: -9.674087524414062
    5. '
' → logprob: -11.049087524414062
    6. ':return' → logprob: -12.174087524414062
    7. '```' → logprob: -12.549087524414062
    8. '    
' → logprob: -13.424087524414062
    9. '{return' → logprob: -15.674087524414062
    10. '@return' → logprob: -15.674087524414062

Token 461: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00013357517309486866
    2. ' return' → logprob: -9.000133514404297
    3. '   ' → logprob: -11.500133514404297
    4. '	return' → logprob: -19.625133514404297
    5. '```' → logprob: -20.875133514404297
    6. ' ' → logprob: -21.125133514404297
    7. 'Return' → logprob: -21.875133514404297
    8. ':return' → logprob: -22.375133514404297
    9. 'eturn' → logprob: -22.500133514404297
    10. '  ' → logprob: -22.875133514404297

Token 462: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03805124759674072
    2. ' return' → logprob: -3.288051128387451
    3. '   ' → logprob: -11.91305160522461
    4. '_return' → logprob: -13.91305160522461
    5. ':return' → logprob: -14.03805160522461
    6. ' ' → logprob: -14.66305160522461
    7. 'ret' → logprob: -15.16305160522461
    8. 'eturn' → logprob: -15.53805160522461
    9. '  ' → logprob: -15.66305160522461
    10. '	return' → logprob: -15.78805160522461

Token 463: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5759417414665222
    2. ' min' → logprob: -0.8259417414665222
    3. '   ' → logprob: -13.200942039489746
    4. '	min' → logprob: -14.825942039489746
    5. ' ' → logprob: -16.70094108581543
    6. '(min' → logprob: -17.82594108581543
    7. '  ' → logprob: -18.45094108581543
    8. ' ' → logprob: -18.82594108581543
    9. '[min' → logprob: -18.82594108581543
    10. 'max' → logprob: -19.32594108581543

Token 464: ' nombre' (ID: 9733)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00975679699331522
    2. ' min' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.134757041931152
    4. '_min' → logprob: -15.134757041931152
    5. '	min' → logprob: -16.634756088256836
    6. '(min' → logprob: -16.759756088256836
    7. '```' → logprob: -16.759756088256836
    8. '[min' → logprob: -17.259756088256836
    9. '  ' → logprob: -17.509756088256836
    10. 'max' → logprob: -17.634756088256836

Token 465: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08579014241695404
    2. '_min' → logprob: -2.5857901573181152
    3. ' min' → logprob: -5.210790157318115
    4. '(min' → logprob: -6.835790157318115
    5. '   ' → logprob: -8.085789680480957
    6. 'minimum' → logprob: -11.210789680480957
    7. '	min' → logprob: -12.085789680480957
    8. ' minimum' → logprob: -12.460789680480957
    9. '  ' → logprob: -12.710789680480957
    10. '_' → logprob: -12.710789680480957

Token 466: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0013333364622667432
    2. '   ' → logprob: -7.376333236694336
    3. ' ' → logprob: -8.501333236694336
    4. '  ' → logprob: -8.876333236694336
    5. '_de' → logprob: -9.251333236694336
    6. '_' → logprob: -9.876333236694336
    7. ' return' → logprob: -9.876333236694336
    8. ' of' → logprob: -10.001333236694336
    9. 'de' → logprob: -10.126333236694336
    10. '    ' → logprob: -10.501333236694336

Token 467: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.10895204544067383
    2. 'pi' → logprob: -2.733952045440674
    3. 'pieces' → logprob: -3.858952045440674
    4. ' pieces' → logprob: -4.858952045440674
    5. ' pi' → logprob: -4.983952045440674
    6. 'coins' → logprob: -6.483952045440674
    7. ' coins' → logprob: -7.108952045440674
    8. '   ' → logprob: -9.608951568603516
    9. ' ' → logprob: -10.108951568603516
    10. '```' → logprob: -10.233951568603516

Token 468: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07647093385457993
    2. 'min' → logprob: -2.9514708518981934
    3. ' min' → logprob: -4.076470851898193
    4. 'return' → logprob: -6.451470851898193
    5. '(min' → logprob: -6.826470851898193
    6. '[min' → logprob: -7.576470851898193
    7. ' for' → logprob: -7.826470851898193
    8. ' return' → logprob: -8.076471328735352
    9. 'for' → logprob: -8.951471328735352
    10. '_min' → logprob: -9.076471328735352

Token 469: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -5.657694418914616e-05
    2. 'u' → logprob: -10.625056266784668
    3. '   ' → logprob: -11.500056266784668
    4. 'ée' → logprob: -11.500056266784668
    5. 'ées' → logprob: -12.250056266784668
    6. 'e' → logprob: -12.500056266784668
    7. 'né' → logprob: -13.375056266784668
    8. '=' → logprob: -14.625056266784668
    9. 'ué' → logprob: -15.125056266784668
    10. 'return' → logprob: -15.375056266784668

Token 470: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017374329268932343
    2. 'return' → logprob: -4.392374515533447
    3. ' return' → logprob: -5.642374515533447
    4. '    
' → logprob: -7.267374515533447
    5. '
' → logprob: -8.142374038696289
    6. ' min' → logprob: -9.267374038696289
    7. 'min' → logprob: -9.767374038696289
    8. '   
' → logprob: -10.267374038696289
    9. '  ' → logprob: -10.392374038696289
    10. '  
' → logprob: -10.642374038696289

Token 471: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17202036082744598
    2. ' return' → logprob: -2.422020435333252
    3. '   ' → logprob: -2.672020435333252
    4. 'min' → logprob: -9.422019958496094
    5. ' min' → logprob: -9.797019958496094
    6. '
' → logprob: -10.672019958496094
    7. '    
' → logprob: -11.422019958496094
    8. ':return' → logprob: -12.297019958496094
    9. '	return' → logprob: -12.797019958496094
    10. '```' → logprob: -13.297019958496094

Token 472: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002888682356569916
    2. ' return' → logprob: -8.250288963317871
    3. '   ' → logprob: -10.500288963317871
    4. 'min' → logprob: -18.500288009643555
    5. '	return' → logprob: -19.375288009643555
    6. '```' → logprob: -19.750288009643555
    7. '  ' → logprob: -21.500288009643555
    8. ':return' → logprob: -21.875288009643555
    9. '{return' → logprob: -23.250288009643555
    10. '    
' → logprob: -23.375288009643555

Token 473: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3132616877555847
    2. ' min' → logprob: -1.3132617473602295
    3. '	min' → logprob: -18.313261032104492
    4. '   ' → logprob: -20.063261032104492
    5. '(min' → logprob: -20.188261032104492
    6. '_min' → logprob: -20.563261032104492
    7. '[min' → logprob: -21.938261032104492
    8. ' ' → logprob: -23.313261032104492
    9. '.min' → logprob: -23.938261032104492
    10. ',min' → logprob: -24.063261032104492

Token 474: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00021307668066583574
    2. '_' → logprob: -8.750212669372559
    3. '_op' → logprob: -10.250212669372559
    4. '_co' → logprob: -11.000212669372559
    5. 'count' → logprob: -14.125212669372559
    6. '_counts' → logprob: -14.500212669372559
    7. '_c' → logprob: -14.625212669372559
    8. '_coin' → logprob: -15.375212669372559
    9. ' _' → logprob: -16.375213623046875
    10. '_COUNT' → logprob: -16.625213623046875

Token 475: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23995061218738556
    2. '<|end|>' → logprob: -2.239950656890869
    3. 'def' → logprob: -2.489950656890869
    4. '

' → logprob: -4.114950656890869
    5. '<|end|>' → logprob: -6.614950656890869
    6. '\n' → logprob: -6.614950656890869
    7. '```' → logprob: -6.739950656890869
    8. '#' → logprob: -6.864950656890869
    9. 'n' → logprob: -6.864950656890869
    10. '  
' → logprob: -8.239950180053711

Token 476: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014903784729540348
    2. 'op' → logprob: -4.264904022216797
    3. 'coins' → logprob: -8.639904022216797
    4. '```' → logprob: -8.889904022216797
    5. 'n' → logprob: -9.139904022216797
    6. '#' → logprob: -9.139904022216797
    7. '
' → logprob: -9.889904022216797
    8. '<|end|>' → logprob: -10.264904022216797
    9. '  
' → logprob: -10.389904022216797
    10. 'if' → logprob: -10.889904022216797

Token 477: ' submit' (ID: 14114)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.043824225664138794
    2. ' make' → logprob: -4.418824195861816
    3. 'main' → logprob: -4.793824195861816
    4. ' solve' → logprob: -4.918824195861816
    5. ' coin' → logprob: -4.918824195861816
    6. ' min' → logprob: -6.293824195861816
    7. ' count' → logprob: -6.543824195861816
    8. ' max' → logprob: -6.793824195861816
    9. ' find' → logprob: -7.043824195861816
    10. 'solve' → logprob: -8.043824195861816

Token 478: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10803394764661789
    2. '():' → logprob: -2.8580338954925537
    3. '()' → logprob: -3.7330338954925537
    4. '_answer' → logprob: -4.858034133911133
    5. '_payment' → logprob: -5.983034133911133
    6. '_input' → logprob: -5.983034133911133
    7. '_output' → logprob: -6.108034133911133
    8. '(' → logprob: -6.233034133911133
    9. '_solution' → logprob: -7.483034133911133
    10. '_code' → logprob: -7.858034133911133

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012992561794817448
    2. '()' → logprob: -5.1379923820495605
    3. '(' → logprob: -5.5129923820495605
    4. '():' → logprob: -6.6379923820495605
    5. '(op' → logprob: -6.8879923820495605
    6. '(n' → logprob: -9.137992858886719
    7. '(
' → logprob: -9.637992858886719
    8. '    
' → logprob: -9.887992858886719
    9. '[' → logprob: -9.887992858886719
    10. ':' → logprob: -10.137992858886719

Token 480: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2970980405807495
    2. 'op' → logprob: -1.9220980405807495
    3. 'n' → logprob: -3.047098159790039
    4. 'coins' → logprob: -3.547098159790039
    5. ' op' → logprob: -3.672098159790039
    6. ' n' → logprob: -5.797098159790039
    7. 'x' → logprob: -5.797098159790039
    8. ' coins' → logprob: -6.547098159790039
    9. '	op' → logprob: -7.297098159790039
    10. ' x' → logprob: -8.297098159790039

Token 481: ' Fonction' (ID: 189149)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6196333169937134
    2. 'op' → logprob: -0.9946333169937134
    3. 'x' → logprob: -3.494633197784424
    4. ' op' → logprob: -3.619633197784424
    5. ' n' → logprob: -3.869633197784424
    6. 'coins' → logprob: -4.994633197784424
    7. '   ' → logprob: -5.744633197784424
    8. ' x' → logprob: -6.494633197784424
    9. '#' → logprob: -7.494633197784424
    10. ' coins' → logprob: -7.619633197784424

Token 482: ' principale' (ID: 68926)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4013500511646271
    2. 'def' → logprob: -1.4013500213623047
    3. '   ' → logprob: -3.0263500213623047
    4. '():
' → logprob: -3.9013500213623047
    5. '()' → logprob: -4.651350021362305
    6. ' def' → logprob: -5.776350021362305
    7. ' ():' → logprob: -6.401350021362305
    8. ' ()' → logprob: -8.401350021362305
    9. ':' → logprob: -8.776350021362305
    10. '  ' → logprob: -8.776350021362305

Token 483: ' orchestr' (ID: 109873)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5250175595283508
    2. '   ' → logprob: -1.525017499923706
    3. '():
' → logprob: -1.900017499923706
    4. 'def' → logprob: -3.525017499923706
    5. '()' → logprob: -5.275017738342285
    6. ':' → logprob: -5.275017738342285
    7. '(n' → logprob: -7.525017738342285
    8. ':
' → logprob: -8.275017738342285
    9. 'n' → logprob: -8.900017738342285
    10. '(' → logprob: -9.275017738342285

Token 484: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3153056800365448
    2. 'e' → logprob: -2.440305709838867
    3. 'er' → logprob: -2.440305709838867
    4. 'ateur' → logprob: -3.065305709838867
    5. 'ate' → logprob: -3.690305709838867
    6. '   ' → logprob: -4.565305709838867
    7. 'atrice' → logprob: -5.315305709838867
    8. 'ante' → logprob: -5.690305709838867
    9. 'ée' → logprob: -5.690305709838867
    10. 'a' → logprob: -6.815305709838867

Token 485: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6084553599357605
    2. ' la' → logprob: -1.6084554195404053
    3. ' l' → logprob: -2.6084554195404053
    4. '()' → logprob: -2.6084554195404053
    5. 'def' → logprob: -3.2334554195404053
    6. ' le' → logprob: -3.3584554195404053
    7. 'l' → logprob: -4.608455181121826
    8. '():
' → logprob: -4.608455181121826
    9. '():' → logprob: -5.358455181121826
    10. 'le' → logprob: -5.733455181121826

Token 486: ' solution' (ID: 7578)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.0717829242348671
    2. 's' → logprob: -3.5717828273773193
    3. 'def' → logprob: -4.071783065795898
    4. 'solution' → logprob: -5.071783065795898
    5. ' lecture' → logprob: -5.321783065795898
    6. 'calcul' → logprob: -5.821783065795898
    7. 'entrée' → logprob: -6.321783065795898
    8. '   ' → logprob: -6.821783065795898
    9. 'import' → logprob: -6.821783065795898
    10. 'lect' → logprob: -6.946783065795898

Token 487: ' au' (ID: 2791)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.26163625717163086
    2. '   ' → logprob: -1.6366362571716309
    3. '()' → logprob: -3.761636257171631
    4. '():
' → logprob: -4.761636257171631
    5. 'def' → logprob: -6.011636257171631
    6. ':' → logprob: -7.386636257171631
    7. '(' → logprob: -8.136636734008789
    8. '<|end|>' → logprob: -9.261636734008789
    9. '();' → logprob: -10.136636734008789
    10. '()
' → logprob: -10.136636734008789

Token 488: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.5338881611824036
    2. 'pro' → logprob: -0.9088881611824036
    3. 'proble' → logprob: -5.033888339996338
    4. ' probleme' → logprob: -6.158888339996338
    5. 'problem' → logprob: -6.783888339996338
    6. ' probl' → logprob: -7.533888339996338
    7. 'pb' → logprob: -9.28388786315918
    8. 'def' → logprob: -9.40888786315918
    9. ' problèmes' → logprob: -10.03388786315918
    10. '   ' → logprob: -10.65888786315918

Token 489: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05486028641462326
    2. '():' → logprob: -3.8048603534698486
    3. '()' → logprob: -4.1798601150512695
    4. 'def' → logprob: -5.1798601150512695
    5. '<|end|>' → logprob: -5.4298601150512695
    6. '():
' → logprob: -6.5548601150512695
    7. ':' → logprob: -6.6798601150512695
    8. '(' → logprob: -7.3048601150512695
    9. '
' → logprob: -7.3048601150512695
    10. '<|end|>' → logprob: -7.9298601150512695

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005205055698752403
    2. 'coins' → logprob: -6.380205154418945
    3. ' op' → logprob: -6.505205154418945
    4. ' coins' → logprob: -6.880205154418945
    5. 'op' → logprob: -7.880205154418945
    6. '	op' → logprob: -8.005205154418945
    7. '    ' → logprob: -9.255205154418945
    8. 'def' → logprob: -10.130205154418945
    9. 'n' → logprob: -10.505205154418945
    10. '    
' → logprob: -11.255205154418945

Token 491: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013613306917250156
    2. 'x' → logprob: -4.888613224029541
    3. '   ' → logprob: -5.388613224029541
    4. 'op' → logprob: -6.763613224029541
    5. ' n' → logprob: -9.1386137008667
    6. 'coins' → logprob: -9.2636137008667
    7. 'amount' → logprob: -10.6386137008667
    8. '#' (adapté à ' #') → logprob: -11.7636137008667
    9. '```' → logprob: -11.8886137008667
    10. 'coin' → logprob: -12.6386137008667

Token 492: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014622475951910019
    2. 'x' → logprob: -4.764622688293457
    3. 'op' → logprob: -5.639622688293457
    4. ' n' → logprob: -6.639622688293457
    5. 'coins' → logprob: -7.389622688293457
    6. '#' → logprob: -8.514622688293457
    7. '   ' → logprob: -9.389622688293457
    8. 'amount' → logprob: -9.889622688293457
    9. ' op' → logprob: -10.264622688293457
    10. ' x' → logprob: -10.764622688293457

Token 493: ' lit' (ID: 11980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18970680236816406
    2. 'n' → logprob: -3.064706802368164
    3. ' op' → logprob: -3.189706802368164
    4. '=' → logprob: -3.439706802368164
    5. 'op' → logprob: -3.564706802368164
    6. ' n' → logprob: -4.064706802368164
    7. '   ' → logprob: -6.189706802368164
    8. 'def' → logprob: -6.814706802368164
    9. '_op' → logprob: -7.314706802368164
    10. 'coins' → logprob: -7.314706802368164

Token 494: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3255578577518463
    2. '   ' → logprob: -2.2005579471588135
    3. 'n' → logprob: -2.7005579471588135
    4. ' n' → logprob: -3.0755579471588135
    5. ' la' → logprob: -3.7005579471588135
    6. ' ' → logprob: -5.075557708740234
    7. ' l' → logprob: -5.325557708740234
    8. 'x' → logprob: -5.700557708740234
    9. ' ()' → logprob: -6.075557708740234
    10. ' the' → logprob: -6.075557708740234

Token 495: ' somme' (ID: 64484)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6236805319786072
    2. 'n' → logprob: -0.8736805319786072
    3. 's' → logprob: -4.123680591583252
    4. 'value' → logprob: -4.248680591583252
    5. 'x' → logprob: -5.248680591583252
    6. 'mont' → logprob: -5.498680591583252
    7. ' valeur' → logprob: -6.498680591583252
    8. 'sum' → logprob: -6.498680591583252
    9. ' n' → logprob: -6.998680591583252
    10. ' somme' → logprob: -7.123680591583252

Token 496: ' cible' (ID: 136857)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.014643669128418
    2. '()' → logprob: -1.639643669128418
    3. ' à' → logprob: -2.014643669128418
    4. 'à' → logprob: -2.389643669128418
    5. 'to' → logprob: -2.889643669128418
    6. 'a' → logprob: -2.889643669128418
    7. ' =' → logprob: -3.764643669128418
    8. ' ' → logprob: -3.764643669128418
    9. '(' → logprob: -4.139643669128418
    10. 'n' → logprob: -4.264643669128418

Token 497: ' sais' (ID: 30010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6761608719825745
    2. ' =' → logprob: -0.8011608719825745
    3. 'n' → logprob: -3.6761608123779297
    4. '=' → logprob: -4.67616081237793
    5. ',' → logprob: -6.17616081237793
    6. 'x' → logprob: -6.42616081237793
    7. ' n' → logprob: -7.30116081237793
    8. ':' → logprob: -7.42616081237793
    9. ' ' → logprob: -7.67616081237793
    10. ' (' → logprob: -8.05116081237793

Token 498: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.006978806108236313
    2. 'sie' → logprob: -5.881978988647461
    3. '   ' → logprob: -7.006978988647461
    4. 'isie' → logprob: -7.131978988647461
    5. 'i' → logprob: -7.506978988647461
    6. 'e' → logprob: -8.131978988647461
    7. 'vie' → logprob: -8.131978988647461
    8. 'lie' → logprob: -8.256978988647461
    9. 'nie' → logprob: -8.506978988647461
    10. 'die' → logprob: -9.006978988647461

Token 499: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41772031784057617
    2. '   ' → logprob: -1.7927203178405762
    3. ' =' → logprob: -2.542720317840576
    4. ' par' → logprob: -3.667720317840576
    5. 'par' → logprob: -4.167720317840576
    6. ':' → logprob: -4.792720317840576
    7. '(' → logprob: -5.042720317840576
    8. ' ()' → logprob: -5.042720317840576
    9. ' à' → logprob: -5.167720317840576
    10. 'target' → logprob: -5.417720317840576

Token 500: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4748806059360504
    2. ' l' → logprob: -0.974880576133728
    3. '   ' → logprob: -7.599880695343018
    4. '	l' → logprob: -8.97488021850586
    5. ' ' → logprob: -9.09988021850586
    6. ' ' → logprob: -10.97488021850586
    7. ' utilisateur' → logprob: -12.47488021850586
    8. 'la' → logprob: -12.47488021850586
    9. '  ' → logprob: -12.59988021850586
    10. 'util' → logprob: -12.72488021850586

Token 501: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0003398726985324174
    2. '’utilisateur' → logprob: -8.12533950805664
    3. 'util' → logprob: -10.62533950805664
    4. ''util' → logprob: -11.50033950805664
    5. ''' → logprob: -12.62533950805664
    6. '_util' → logprob: -13.12533950805664
    7. ''user' → logprob: -13.37533950805664
    8. ''entrée' → logprob: -13.87533950805664
    9. ' utilisateur' → logprob: -14.87533950805664
    10. ''us' → logprob: -14.87533950805664

Token 502: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01126957405358553
    2. 'n' → logprob: -4.886269569396973
    3. 'x' → logprob: -7.011269569396973
    4. 'target' → logprob: -7.011269569396973
    5. ' n' → logprob: -7.636269569396973
    6. ' target' → logprob: -8.261269569396973
    7. ' x' → logprob: -8.511269569396973
    8. 'total' → logprob: -8.636269569396973
    9. ':' → logprob: -8.886269569396973
    10. '    
' → logprob: -9.136269569396973

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010071719996631145
    2. 'n' → logprob: -4.760071754455566
    3. 'target' → logprob: -7.760071754455566
    4. 'x' → logprob: -8.135071754455566
    5. ' n' → logprob: -8.385071754455566
    6. 'total' → logprob: -9.010071754455566
    7. 'amount' → logprob: -9.510071754455566
    8. '    
' → logprob: -9.760071754455566
    9. ' target' → logprob: -10.010071754455566
    10. 's' → logprob: -10.510071754455566

Token 504: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5519613027572632
    2. 'n' (adapté à ' n') → logprob: -1.9269613027572632
    3. '   ' → logprob: -1.9269613027572632
    4. ' x' → logprob: -2.4269614219665527
    5. ' n' → logprob: -3.3019614219665527
    6. 'target' → logprob: -5.926961421966553
    7. ' target' → logprob: -6.426961421966553
    8. 'amount' → logprob: -6.676961421966553
    9. 'total' → logprob: -7.176961421966553
    10. ' amount' → logprob: -7.426961421966553

Token 505: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995043158531189
    2. '=' → logprob: -2.6949503421783447
    3. ')' → logprob: -12.194950103759766
    4. ',' → logprob: -12.444950103759766
    5. '=int' → logprob: -13.319950103759766
    6. '   ' → logprob: -13.444950103759766
    7. ' ' → logprob: -14.569950103759766
    8. '=input' → logprob: -14.819950103759766
    9. '  ' → logprob: -15.069950103759766
    10. '.' → logprob: -15.569950103759766

Token 506: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.06230824068188667
    2. 'read' → logprob: -2.8123083114624023
    3. ' int' → logprob: -8.187308311462402
    4. 'int' → logprob: -9.687308311462402
    5. '	read' → logprob: -16.187307357788086
    6. ' ' → logprob: -16.687307357788086
    7. ' ' → logprob: -17.812307357788086
    8. ' n' → logprob: -17.937307357788086
    9. 'n' → logprob: -18.312307357788086
    10. '(read' → logprob: -18.437307357788086

Token 507: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00038264848990365863
    2. '_' → logprob: -7.875382423400879
    3. ' _' → logprob: -13.625382423400879
    4. '_output' → logprob: -15.000382423400879
    5. '_in' → logprob: -15.250382423400879
    6. '_inputs' → logprob: -15.250382423400879
    7. '_Input' → logprob: -16.500383377075195
    8. '_INPUT' → logprob: -16.750383377075195
    9. '_user' → logprob: -16.750383377075195
    10. '```' → logprob: -17.250383377075195

Token 508: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002517277142032981
    2. '()
' → logprob: -6.002517223358154
    3. '   ' → logprob: -10.377517700195312
    4. '()

' → logprob: -12.502517700195312
    5. '()\' → logprob: -13.002517700195312
    6. '())' → logprob: -13.877517700195312
    7. '(' → logprob: -13.877517700195312
    8. '()
' → logprob: -14.252517700195312
    9. ')' → logprob: -14.877517700195312
    10. ' ()' → logprob: -15.377517700195312

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003436253871768713
    2. 'op' → logprob: -6.128436088562012
    3. '
' → logprob: -7.378436088562012
    4. 'coins' → logprob: -8.628436088562012
    5. '    
' → logprob: -8.628436088562012
    6. '```' → logprob: -9.128436088562012
    7. ' op' → logprob: -9.628436088562012
    8. '	op' → logprob: -10.003436088562012
    9. 'coin' → logprob: -10.753436088562012
    10. 'tokens' → logprob: -12.003436088562012

Token 510: ' #' (ID: 1069)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4186060130596161
    2. '   ' → logprob: -1.6686060428619385
    3. 'coins' → logprob: -2.4186060428619385
    4. '#' (adapté à ' #') → logprob: -3.2936060428619385
    5. 'coin' → logprob: -4.293605804443359
    6. ' op' → logprob: -4.793605804443359
    7. 'pieces' → logprob: -6.168605804443359
    8. ' #' → logprob: -7.418605804443359
    9. '    
' → logprob: -7.668605804443359
    10. 'ops' → logprob: -7.668605804443359

Token 511: ' On' (ID: 2160)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.35562658309936523
    2. 'coins' → logprob: -1.6056265830993652
    3. ' op' → logprob: -2.6056265830993652
    4. '   ' → logprob: -4.855626583099365
    5. ' coins' → logprob: -5.105626583099365
    6. 'coin' → logprob: -5.355626583099365
    7. '#' → logprob: -5.605626583099365
    8. 'ops' → logprob: -6.980626583099365
    9. 'pieces' → logprob: -7.605626583099365
    10. ' coin' → logprob: -8.605627059936523

Token 512: ' initialise' (ID: 145250)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7737746238708496
    2. ' op' → logprob: -0.7737746238708496
    3. ' =' → logprob: -3.6487746238708496
    4. 's' → logprob: -4.02377462387085
    5. '_op' → logprob: -4.14877462387085
    6. '#' → logprob: -5.77377462387085
    7. 'def' → logprob: -6.14877462387085
    8. '   ' → logprob: -6.39877462387085
    9. 'n' → logprob: -6.52377462387085
    10. '=' → logprob: -6.64877462387085

Token 513: ' la' (ID: 557)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.5735440850257874
    2. 'op' → logprob: -0.9485440850257874
    3. '   ' → logprob: -3.3235440254211426
    4. 'coins' → logprob: -4.698544025421143
    5. ' coins' → logprob: -6.948544025421143
    6. '	op' → logprob: -7.198544025421143
    7. 'coin' → logprob: -7.323544025421143
    8. 'l' → logprob: -8.0735445022583
    9. 'ops' → logprob: -8.4485445022583
    10. 'les' → logprob: -8.8235445022583

Token 514: ' liste' (ID: 31719)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.003541035810485482
    2. ' op' → logprob: -6.003540992736816
    3. 'coins' → logprob: -7.628540992736816
    4. 'ops' → logprob: -8.253540992736816
    5. 'list' → logprob: -8.878540992736816
    6. '#' → logprob: -9.503540992736816
    7. 'liste' → logprob: -10.878540992736816
    8. '   ' → logprob: -11.128540992736816
    9. '_op' → logprob: -11.378540992736816
    10. '[' → logprob: -11.503540992736816

Token 515: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8219607472419739
    2. ' des' → logprob: -0.9469607472419739
    3. ' =' → logprob: -2.571960687637329
    4. 'op' → logprob: -3.196960687637329
    5. ' op' → logprob: -3.446960687637329
    6. '[' → logprob: -4.696960926055908
    7. 'coins' → logprob: -5.321960926055908
    8. '   ' → logprob: -6.071960926055908
    9. '=' → logprob: -6.696960926055908
    10. ' [' → logprob: -6.821960926055908

Token 516: ' valeurs' (ID: 73668)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6495422124862671
    2. '[' → logprob: -0.8995422124862671
    3. 'op' → logprob: -3.3995423316955566
    4. 'pieces' → logprob: -3.5245423316955566
    5. 'coin' → logprob: -6.149542331695557
    6. ' [' → logprob: -6.149542331695557
    7. ' coins' → logprob: -6.399542331695557
    8. ' op' → logprob: -7.149542331695557
    9. ' pieces' → logprob: -7.649542331695557
    10. 'ops' → logprob: -8.649541854858398

Token 517: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.2647134065628052
    2. '_des' → logprob: -1.5147134065628052
    3. '[' → logprob: -2.2647132873535156
    4. ' =' → logprob: -2.5147132873535156
    5. '_op' → logprob: -2.5147132873535156
    6. 'op' → logprob: -2.8897132873535156
    7. 'pieces' → logprob: -3.6397132873535156
    8. 'de' → logprob: -3.7647132873535156
    9. '_' → logprob: -3.7647132873535156
    10. '   ' → logprob: -4.514713287353516

Token 518: ' pièces' (ID: 49165)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9650529623031616
    2. 'pieces' → logprob: -1.2150529623031616
    3. 'coins' → logprob: -1.8400529623031616
    4. ' pièces' → logprob: -2.340053081512451
    5. 'pi' → logprob: -3.840053081512451
    6. ' [' → logprob: -3.965053081512451
    7. ' pieces' → logprob: -3.965053081512451
    8. ' coins' → logprob: -5.965053081512451
    9. 'coin' → logprob: -6.965053081512451
    10. 'piece' → logprob: -6.965053081512451

Token 519: ' disponibles' (ID: 36617)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08664719760417938
    2. '   ' → logprob: -2.8366472721099854
    3. '=' → logprob: -4.086647033691406
    4. 'op' → logprob: -5.586647033691406
    5. '[' → logprob: -6.336647033691406
    6. ' op' → logprob: -6.961647033691406
    7. '=[' → logprob: -7.336647033691406
    8. ' [' → logprob: -8.711647033691406
    9. ' ' → logprob: -9.711647033691406
    10. '  ' → logprob: -10.336647033691406

Token 520: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2936822772026062
    2. ' =' → logprob: -1.418682336807251
    3. ' op' → logprob: -5.543682098388672
    4. 'op' → logprob: -5.793682098388672
    5. '=' → logprob: -6.293682098388672
    6. '[' → logprob: -6.793682098388672
    7. ',' → logprob: -7.043682098388672
    8. 'coins' → logprob: -7.043682098388672
    9. 'coin' → logprob: -8.793682098388672
    10. '=[' → logprob: -8.918682098388672

Token 521: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027998901903629303
    2. '[' → logprob: -4.027998924255371
    3. ' [' → logprob: -5.527998924255371
    4. 'op' → logprob: -6.527998924255371
    5. '=' → logprob: -6.527998924255371
    6. 'coins' → logprob: -7.027998924255371
    7. ' op' → logprob: -7.027998924255371
    8. '   ' → logprob: -7.777998924255371
    9. '=[' → logprob: -8.027998924255371
    10. ' =[' → logprob: -9.527998924255371

Token 522: ' #' (ID: 1069)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4720633924007416
    2. '   ' → logprob: -1.847063422203064
    3. ' op' → logprob: -1.847063422203064
    4. 'coins' → logprob: -3.3470633029937744
    5. '[' → logprob: -3.9720633029937744
    6. ' coins' → logprob: -5.5970635414123535
    7. 'coin' → logprob: -6.3470635414123535
    8. ' [' → logprob: -7.3470635414123535
    9. ' coin' → logprob: -8.097063064575195
    10. 'ops' → logprob: -9.472063064575195

Token 523: ' Il' (ID: 5329)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.42609548568725586
    2. 'coins' → logprob: -1.8010954856872559
    3. '   ' → logprob: -2.426095485687256
    4. ' op' → logprob: -2.551095485687256
    5. ' coins' → logprob: -4.926095485687256
    6. 'coin' → logprob: -5.176095485687256
    7. '[' → logprob: -6.801095485687256
    8. ' coin' → logprob: -7.676095485687256
    9. 'pieces' → logprob: -8.176095962524414
    10. 'ops' → logprob: -8.301095962524414

Token 524: ' y' (ID: 342)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25392478704452515
    2. '=' → logprob: -1.50392484664917
    3. 's' → logprob: -6.25392484664917
    4. 'op' → logprob: -11.003924369812012
    5. '   ' → logprob: -11.253924369812012
    6. ' =
' → logprob: -11.878924369812012
    7. 'n' → logprob: -12.003924369812012
    8. ' s' → logprob: -12.378924369812012
    9. '=
' → logprob: -12.503924369812012
    10. ' =[' → logprob: -13.128924369812012

Token 525: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0554448701441288
    2. ' a' → logprob: -2.9304449558258057
    3. '=' → logprob: -8.180444717407227
    4. ' =' → logprob: -8.805444717407227
    5. ''a' → logprob: -10.555444717407227
    6. '=a' → logprob: -10.805444717407227
    7. 'avait' → logprob: -10.805444717407227
    8. '_a' → logprob: -11.180444717407227
    9. 'ont' → logprob: -11.555444717407227
    10. ' avait' → logprob: -12.055444717407227

Token 526: ' toujours' (ID: 16867)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3577933609485626
    2. ' [' → logprob: -1.6077933311462402
    3. ' ' → logprob: -3.2327933311462402
    4. '5' → logprob: -4.60779333114624
    5. '10' → logprob: -4.60779333114624
    6. '100' → logprob: -4.73279333114624
    7. '4' → logprob: -5.23279333114624
    8. ' une' → logprob: -5.73279333114624
    9. 'une' → logprob: -5.85779333114624
    10. '   ' → logprob: -5.85779333114624

Token 527: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.214314579963684
    2. ' [' → logprob: -1.464314579963684
    3. '1' → logprob: -2.3393144607543945
    4. '[' → logprob: -2.3393144607543945
    5. ' ' → logprob: -2.3393144607543945
    6. 'une' → logprob: -2.9643144607543945
    7. ' trois' → logprob: -4.0893144607543945
    8. '```' → logprob: -4.5893144607543945
    9. ' coins' → logprob: -4.5893144607543945
    10. '10' → logprob: -4.8393144607543945

Token 528: ' pièce' (ID: 56132)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.5369513034820557
    2. ' pièce' → logprob: -1.6619513034820557
    3. ' piece' → logprob: -2.6619513034820557
    4. 'pi' → logprob: -3.9119513034820557
    5. ' ' → logprob: -4.036951065063477
    6. '1' → logprob: -4.161951065063477
    7. 'space' → logprob: -4.536951065063477
    8. 'coin' → logprob: -4.536951065063477
    9. '```' → logprob: -4.786951065063477
    10. ' coin' → logprob: -5.036951065063477

Token 529: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.655440628528595
    2. ' =' → logprob: -1.7804405689239502
    3. 's' → logprob: -1.9054405689239502
    4. '[' → logprob: -3.15544056892395
    5. 'de' → logprob: -3.15544056892395
    6. '=' → logprob: -4.280440807342529
    7. '```' → logprob: -4.405440807342529
    8. ' ' → logprob: -4.530440807342529
    9. '   ' → logprob: -4.530440807342529
    10. 'def' → logprob: -5.155440807342529

Token 530: ' valeur' (ID: 41664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14535361528396606
    2. 'val' → logprob: -2.5203535556793213
    3. ' ' → logprob: -3.6453535556793213
    4. '100' → logprob: -4.3953537940979
    5. 'value' → logprob: -5.3953537940979
    6. '10' → logprob: -6.0203537940979
    7. '50' → logprob: -6.2703537940979
    8. 'c' → logprob: -6.6453537940979
    9. ' valeur' → logprob: -6.7703537940979
    10. '2' → logprob: -7.2703537940979

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038207534700632095
    2. ' ' → logprob: -3.288207530975342
    3. '100' → logprob: -9.6632080078125
    4. '   ' → logprob: -10.0382080078125
    5. '10' → logprob: -11.1632080078125
    6. '  ' → logprob: -11.5382080078125
    7. '[' → logprob: -11.9132080078125
    8. '50' → logprob: -12.0382080078125
    9. '500' → logprob: -12.5382080078125
    10. '25' → logprob: -13.3507080078125

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027595835272222757
    2. ' ' → logprob: -6.1277594566345215
    3. '100' → logprob: -8.75275993347168
    4. '10' → logprob: -9.12775993347168
    5. '5' → logprob: -9.50275993347168
    6. '[' → logprob: -9.75275993347168
    7. '50' → logprob: -10.12775993347168
    8. '(' → logprob: -10.25275993347168
    9. '25' → logprob: -10.50275993347168
    10. '500' → logprob: -10.87775993347168

Token 533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6117156744003296
    2. '   ' → logprob: -1.3617156744003296
    3. ' =' → logprob: -1.9867156744003296
    4. 'op' → logprob: -3.986715793609619
    5. '[' → logprob: -4.361715793609619
    6. ' ,' → logprob: -4.736715793609619
    7. ' op' → logprob: -4.736715793609619
    8. 'coins' → logprob: -4.736715793609619
    9. ' [' → logprob: -6.361715793609619
    10. '=' → logprob: -7.236715793609619

Token 534: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12800954282283783
    2. 'op' → logprob: -2.878009557723999
    3. ' op' → logprob: -3.003009557723999
    4. '1' → logprob: -5.62800931930542
    5. ' ' → logprob: -5.75300931930542
    6. '2' → logprob: -6.12800931930542
    7. ' [' → logprob: -7.50300931930542
    8. '  ' → logprob: -7.75300931930542
    9. 'coins' → logprob: -7.87800931930542
    10. '[' → logprob: -8.003009796142578

Token 535: '6' (ID: 21)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6955665946006775
    2. '2' → logprob: -1.1955666542053223
    3. '1' → logprob: -2.4455666542053223
    4. '5' → logprob: -2.6955666542053223
    5. 'op' → logprob: -4.320566654205322
    6. '10' → logprob: -5.070566654205322
    7. '4' → logprob: -5.070566654205322
    8. ' ' → logprob: -5.195566654205322
    9. '3' → logprob: -5.195566654205322
    10. ' op' → logprob: -6.820566654205322

Token 536: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006090658251196146
    2. ' ,' → logprob: -5.2560906410217285
    3. '   ' → logprob: -7.3810906410217285
    4. '6' → logprob: -8.756091117858887
    5. '1' → logprob: -10.756091117858887
    6. '7' → logprob: -11.131091117858887
    7. ',
' → logprob: -11.756091117858887
    8. ' ' → logprob: -12.006091117858887
    9. '2' → logprob: -12.381091117858887
    10. '0' → logprob: -12.506091117858887

Token 537: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9217823147773743
    2. '9' → logprob: -1.1717822551727295
    3. '8' → logprob: -1.4217822551727295
    4. '12' → logprob: -3.2967822551727295
    5. '7' → logprob: -4.796782493591309
    6. '```' → logprob: -6.171782493591309
    7. '11' → logprob: -6.796782493591309
    8. '15' → logprob: -7.171782493591309
    9. '   ' → logprob: -7.671782493591309
    10. '5' → logprob: -8.171782493591309

Token 538: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5635519623756409
    2. '8' → logprob: -1.563551902770996
    3. '9' → logprob: -1.563551902770996
    4. '12' → logprob: -5.188551902770996
    5. '7' → logprob: -6.063551902770996
    6. ' ' → logprob: -6.188551902770996
    7. '```' → logprob: -7.188551902770996
    8. '15' → logprob: -8.063551902770996
    9. '11' → logprob: -8.438551902770996
    10. '5' → logprob: -8.688551902770996

Token 539: ' disponibles' (ID: 36617)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036251279525458813
    2. ' =' → logprob: -6.25362491607666
    3. '
' → logprob: -7.25362491607666
    4. 'op' → logprob: -7.87862491607666
    5. ',' → logprob: -8.50362491607666
    6. ' op' → logprob: -8.87862491607666
    7. '    
' → logprob: -9.25362491607666
    8. '[' → logprob: -9.87862491607666
    9. '	op' → logprob: -11.00362491607666
    10. '  ' → logprob: -11.12862491607666

Token 540: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026687702164053917
    2. '
' → logprob: -3.9016876220703125
    3. 'op' → logprob: -5.6516876220703125
    4. ' =' → logprob: -7.1516876220703125
    5. ' op' → logprob: -7.1516876220703125
    6. '    
' → logprob: -8.151687622070312
    7. '[' → logprob: -8.401687622070312
    8. ',' → logprob: -8.401687622070312
    9. '	op' → logprob: -8.776687622070312
    10. '  
' → logprob: -11.151687622070312

Token 541: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.35310351848602295
    2. 'aires' → logprob: -2.2281036376953125
    3. '   ' → logprob: -2.8531036376953125
    4. 'isées' → logprob: -3.1031036376953125
    5. 'ly' → logprob: -3.9781036376953125
    6. 'lement' → logprob: -4.3531036376953125
    7. 'aire' → logprob: -4.4781036376953125
    8. 'ales' → logprob: -4.7281036376953125
    9. '```' → logprob: -5.3531036376953125
    10. 'al' → logprob: -5.3531036376953125

Token 542: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07051251083612442
    2. '
' → logprob: -2.820512533187866
    3. 'op' → logprob: -4.945512294769287
    4. ' op' → logprob: -7.070512294769287
    5. '	op' → logprob: -8.320512771606445
    6. '    
' → logprob: -8.695512771606445
    7. 'coins' → logprob: -10.820512771606445
    8. '[' → logprob: -10.945512771606445
    9. ',' → logprob: -11.070512771606445
    10. ' =' → logprob: -11.445512771606445

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04416096583008766
    2. '
' → logprob: -3.669161081314087
    3. 'op' → logprob: -4.169160842895508
    4. 'coins' → logprob: -6.919160842895508
    5. ' op' → logprob: -7.544160842895508
    6. '	op' → logprob: -8.169160842895508
    7. '    
' → logprob: -8.669160842895508
    8. 'coin' → logprob: -9.544160842895508
    9. '[' → logprob: -9.794160842895508
    10. 'ops' → logprob: -10.794160842895508

Token 544: ' ops' (ID: 26973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34156742691993713
    2. 'op' → logprob: -1.3415673971176147
    3. 'coins' → logprob: -4.216567516326904
    4. ' op' → logprob: -4.466567516326904
    5. 'coin' → logprob: -6.966567516326904
    6. ' coins' → logprob: -7.966567516326904
    7. '	op' → logprob: -8.841567039489746
    8. 'ops' (adapté à ' ops') → logprob: -9.466567039489746
    9. '  ' → logprob: -10.091567039489746
    10. ' ' → logprob: -10.591567039489746

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023157298564911
    2. '=' → logprob: -2.350231647491455
    3. '   ' → logprob: -10.975231170654297
    4. 's' → logprob: -12.850231170654297
    5. ' ' → logprob: -13.225231170654297
    6. '=[' → logprob: -13.350231170654297
    7. ' =[' → logprob: -14.975231170654297
    8. '  ' → logprob: -15.475231170654297
    9. '=['' → logprob: -15.600231170654297
    10. '=[]' → logprob: -15.850231170654297

Token 546: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0067156096920371056
    2. ' [' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.256715774536133
    4. ' ' → logprob: -17.256715774536133
    5. ' ' → logprob: -19.256715774536133
    6. '  ' → logprob: -19.881715774536133
    7. '[
' → logprob: -20.131715774536133
    8. '1' → logprob: -20.756715774536133
    9. '[]' → logprob: -21.006715774536133
    10. '{' → logprob: -21.256715774536133

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.500012397766113
    4. '9' → logprob: -15.625012397766113
    5. '6' → logprob: -16.125011444091797
    6. '```' → logprob: -17.000011444091797
    7. '  ' → logprob: -18.375011444091797
    8. '[' → logprob: -19.062511444091797
    9. '0' → logprob: -19.250011444091797
    10. ']' → logprob: -19.312511444091797

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001214237418025732
    2. ' ,' → logprob: -9.125121116638184
    3. '   ' → logprob: -12.000121116638184
    4. '6' → logprob: -12.250121116638184
    5. ',
' → logprob: -13.375121116638184
    6. ' ' → logprob: -17.6251220703125
    7. '9' → logprob: -18.2501220703125
    8. '  ' → logprob: -18.3751220703125
    9. '1' → logprob: -19.3751220703125
    10. '3' → logprob: -19.6251220703125

Token 549: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.026301926001906395
    2. ' ' → logprob: -3.651301860809326
    3. '   ' → logprob: -14.401302337646484
    4. '  ' → logprob: -15.151302337646484
    5. ' ' → logprob: -15.463802337646484
    6. '	' → logprob: -16.213802337646484
    7. '
' → logprob: -16.651302337646484
    8. '    ' → logprob: -16.651302337646484
    9. '9' → logprob: -16.838802337646484
    10. ' 
' → logprob: -17.151302337646484

Token 550: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.000067710876465
    4. '  ' → logprob: -15.625067710876465
    5. '
' → logprob: -15.812567710876465
    6. '```' → logprob: -16.62506866455078
    7. '۶' → logprob: -16.81256866455078
    8. ',' → logprob: -17.06256866455078
    9. ']' → logprob: -17.31256866455078
    10. '６' → logprob: -17.31256866455078

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007187459850683808
    2. ' ,' → logprob: -7.250718593597412
    3. ',
' → logprob: -12.25071907043457
    4. '   ' → logprob: -12.75071907043457
    5. '6' → logprob: -14.75071907043457
    6. '9' → logprob: -15.00071907043457
    7. ']' → logprob: -15.75071907043457
    8. ' ' → logprob: -16.62571907043457
    9. '  ' → logprob: -17.00071907043457
    10. ' ,
' → logprob: -17.37571907043457

Token 552: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02975292131304741
    2. ' ' → logprob: -3.5297529697418213
    3. '   ' → logprob: -13.654752731323242
    4. '```' → logprob: -15.092252731323242
    5. '  ' → logprob: -15.279752731323242
    6. '    ' → logprob: -15.467252731323242
    7. ' ' → logprob: -16.029752731323242
    8. '۹' → logprob: -16.779752731323242
    9. ',' → logprob: -16.842252731323242
    10. '
' → logprob: -17.092252731323242

Token 553: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.500005722045898
    3. '   ' → logprob: -14.500005722045898
    4. '10' → logprob: -14.500005722045898
    5. '```' → logprob: -16.3750057220459
    6. '
' → logprob: -17.0000057220459
    7. '  ' → logprob: -17.1250057220459
    8. '	' → logprob: -17.6250057220459
    9. '

' → logprob: -17.7500057220459
    10. '1' → logprob: -17.8750057220459

Token 554: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011205092072486877
    2. ',' → logprob: -4.511205196380615
    3. '   ' → logprob: -9.136204719543457
    4. ' ]' → logprob: -10.386204719543457
    5. ']
' → logprob: -11.011204719543457
    6. '.' → logprob: -15.011204719543457
    7. ']

' → logprob: -15.011204719543457
    8. ' ,' → logprob: -15.136204719543457
    9. ',
' → logprob: -15.261204719543457
    10. ']
' → logprob: -15.761204719543457

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031452715396881104
    2. '
' → logprob: -3.5314526557922363
    3. '    
' → logprob: -7.031452655792236
    4. 'count' → logprob: -8.031453132629395
    5. 'result' → logprob: -8.531453132629395
    6. '```' → logprob: -9.281453132629395
    7. 'min' → logprob: -9.531453132629395
    8. 'n' → logprob: -10.906453132629395
    9. 'tokens' → logprob: -11.031453132629395
    10. 'for' → logprob: -11.031453132629395

Token 556: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10282246768474579
    2. '   ' → logprob: -2.9778225421905518
    3. 'result' → logprob: -3.3528225421905518
    4. 'res' → logprob: -5.727822303771973
    5. '#' (adapté à ' #') → logprob: -6.352822303771973
    6. 'coins' → logprob: -6.477822303771973
    7. '
' → logprob: -7.227822303771973
    8. ' min' → logprob: -7.477822303771973
    9. 'dp' → logprob: -7.477822303771973
    10. 'results' → logprob: -7.602822303771973

Token 557: ' Pour' (ID: 13931)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.021099749952554703
    2. 'result' → logprob: -4.14609956741333
    3. 'res' → logprob: -6.02109956741333
    4. ' min' → logprob: -6.52109956741333
    5. '#' → logprob: -7.52109956741333
    6. 'ans' → logprob: -9.396100044250488
    7. 'dp' → logprob: -9.396100044250488
    8. 'answer' → logprob: -9.396100044250488
    9. 'max' → logprob: -9.646100044250488
    10. ' result' → logprob: -9.896100044250488

Token 558: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34572833776474
    2. 'i' → logprob: -1.3457283973693848
    3. ' op' → logprob: -3.8457283973693848
    4. 'o' → logprob: -5.970728397369385
    5. ' o' → logprob: -6.220728397369385
    6. 'op' → logprob: -6.220728397369385
    7. ' _' → logprob: -6.970728397369385
    8. '_' → logprob: -7.345728397369385
    9. ' x' → logprob: -7.345728397369385
    10. 'x' → logprob: -7.470728397369385

Token 559: ' valeur' (ID: 41664)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8924013376235962
    2. 'i' → logprob: -1.2674013376235962
    3. ' op' → logprob: -1.8924013376235962
    4. ' o' → logprob: -2.5174012184143066
    5. 'o' → logprob: -3.0174012184143066
    6. 'op' → logprob: -4.267401218414307
    7. ' val' → logprob: -5.767401218414307
    8. ' value' → logprob: -6.017401218414307
    9. 'val' → logprob: -6.392401218414307
    10. ' ' → logprob: -6.517401218414307

Token 560: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45387738943099976
    2. ' i' → logprob: -1.9538774490356445
    3. 'i' → logprob: -2.7038774490356445
    4. ' de' → logprob: -3.2038774490356445
    5. 'o' → logprob: -3.4538774490356445
    6. 'op' → logprob: -3.8288774490356445
    7. 'in' → logprob: -4.0788774490356445
    8. ' op' → logprob: -4.5788774490356445
    9. 'de' → logprob: -4.7038774490356445
    10. ' o' → logprob: -5.7038774490356445

Token 561: ' pièce' (ID: 56132)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.10680308192968369
    2. 'op' → logprob: -2.6068031787872314
    3. 'range' → logprob: -3.8568031787872314
    4. 'i' → logprob: -6.106802940368652
    5. 'n' → logprob: -6.481802940368652
    6. ' ops' → logprob: -7.231802940368652
    7. 'o' → logprob: -7.856802940368652
    8. '[' → logprob: -7.981802940368652
    9. 'x' → logprob: -8.356802940368652
    10. ' range' → logprob: -8.356802940368652

Token 562: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07739350199699402
    2. ' o' → logprob: -3.7023935317993164
    3. ' op' → logprob: -4.577393531799316
    4. 'o' → logprob: -4.827393531799316
    5. 'in' → logprob: -4.827393531799316
    6. 'op' → logprob: -5.577393531799316
    7. ' i' → logprob: -5.827393531799316
    8. 'ops' → logprob: -5.952393531799316
    9. '   ' → logprob: -6.077393531799316
    10. ' ' → logprob: -6.452393531799316

Token 563: ' base' (ID: 3611)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.10114002227783203
    2. 'range' → logprob: -2.601140022277832
    3. '[' → logprob: -4.351140022277832
    4. 'op' → logprob: -5.601140022277832
    5. '10' → logprob: -6.226140022277832
    6. '2' → logprob: -7.476140022277832
    7. ' range' → logprob: -7.726140022277832
    8. '4' → logprob: -7.976140022277832
    9. '1' → logprob: -7.976140022277832
    10. ' ops' → logprob: -8.226140022277832

Token 564: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027834754437208176
    2. 'in' → logprob: -4.527834892272949
    3. ',' → logprob: -5.152834892272949
    4. '   ' → logprob: -5.277834892272949
    5. ' dans' → logprob: -6.652834892272949
    6. 'ops' → logprob: -7.152834892272949
    7. 'op' → logprob: -7.277834892272949
    8. ' ,' → logprob: -7.652834892272949
    9. ' op' → logprob: -7.902834892272949
    10. ' ops' → logprob: -8.02783489227295

Token 565: 'ici' (ID: 3757)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.05359649658203125
    2. ' ops' → logprob: -3.3035964965820312
    3. 'op' → logprob: -4.928596496582031
    4. '[' → logprob: -5.053596496582031
    5. 'range' → logprob: -7.928596496582031
    6. ' [' → logprob: -7.928596496582031
    7. ' op' → logprob: -7.928596496582031
    8. '   ' → logprob: -8.053596496582031
    9. ' range' → logprob: -8.303596496582031
    10. '1' → logprob: -10.866096496582031

Token 566: ' après' (ID: 16460)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.1821339875459671
    2. ' ops' → logprob: -2.432133913040161
    3. '[' → logprob: -2.807133913040161
    4. 'op' → logprob: -4.68213415145874
    5. ' [' → logprob: -5.68213415145874
    6. ' range' → logprob: -6.43213415145874
    7. ' op' → logprob: -6.80713415145874
    8. 'range' → logprob: -6.93213415145874
    9. '   ' → logprob: -7.55713415145874
    10. '(' → logprob: -8.182133674621582

Token 567: ' la' (ID: 557)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.16800765693187714
    2. '1' → logprob: -3.4180076122283936
    3. ' ops' → logprob: -3.7930076122283936
    4. '9' → logprob: -3.7930076122283936
    5. '6' → logprob: -4.168007850646973
    6. ' ' → logprob: -4.293007850646973
    7. '[' → logprob: -4.668007850646973
    8. '3' → logprob: -4.793007850646973
    9. 'op' → logprob: -4.793007850646973
    10. 'range' → logprob: -5.543007850646973

Token 568: ' première' (ID: 23423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.332492709159851
    2. 'ops' → logprob: -1.832492709159851
    3. '9' → logprob: -1.957492709159851
    4. ' for' → logprob: -2.5824928283691406
    5. '3' → logprob: -2.7074928283691406
    6. 'def' → logprob: -3.2074928283691406
    7. '6' → logprob: -3.5824928283691406
    8. ':' → logprob: -3.8324928283691406
    9. ' ' → logprob: -3.8324928283691406
    10. '1' → logprob: -3.8324928283691406

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.477734088897705
    2. '   ' → logprob: -2.477734088897705
    3. '=' → logprob: -2.602734088897705
    4. ' for' → logprob: -2.727734088897705
    5. ':' → logprob: -2.852734088897705
    6. 'for' → logprob: -2.977734088897705
    7. 'op' → logprob: -3.102734088897705
    8. ' ' → logprob: -3.102734088897705
    9. 'def' → logprob: -3.477734088897705
    10. '9' → logprob: -3.477734088897705

Token 570: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4400432109832764
    2. ' ' → logprob: -1.5650432109832764
    3. '   ' → logprob: -1.8150432109832764
    4. ' i' → logprob: -2.1900432109832764
    5. ' ops' → logprob: -2.6900432109832764
    6. '1' → logprob: -2.9400432109832764
    7. '6' → logprob: -3.5650432109832764
    8. 'for' → logprob: -4.0650434494018555
    9. ')' → logprob: -4.4400434494018555
    10. 'ops' → logprob: -4.4400434494018555

Token 571: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.3379887640476227
    2. ''est' → logprob: -2.58798885345459
    3. '[' → logprob: -3.71298885345459
    4. 'for' → logprob: -3.71298885345459
    5. 'es' → logprob: -3.71298885345459
    6. 'e' → logprob: -4.08798885345459
    7. 'om' → logprob: -4.08798885345459
    8. '#' → logprob: -4.46298885345459
    9. 'on' → logprob: -4.71298885345459
    10. '1' → logprob: -4.71298885345459

Token 572: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7108384370803833
    2. '6' → logprob: -1.7108384370803833
    3. '1' → logprob: -2.0858383178710938
    4. '3' → logprob: -3.0858383178710938
    5. 'range' → logprob: -3.9608383178710938
    6. '10' → logprob: -4.210838317871094
    7. '9' → logprob: -4.335838317871094
    8. ')' → logprob: -4.460838317871094
    9. '2' → logprob: -4.710838317871094
    10. ' range' → logprob: -4.835838317871094

Token 573: '-dire' (ID: 76064)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02058708667755127
    2. '6' → logprob: -5.020586967468262
    3. '1' → logprob: -5.395586967468262
    4. 'ops' → logprob: -6.520586967468262
    5. '9' → logprob: -7.395586967468262
    6. '`' → logprob: -7.395586967468262
    7. 'l' → logprob: -7.645586967468262
    8. ' [' → logprob: -8.020586967468262
    9. 'la' → logprob: -8.270586967468262
    10. 'for' → logprob: -8.270586967468262

Token 574: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2156651020050049
    2. ' ' → logprob: -1.4656651020050049
    3. '6' → logprob: -1.8406651020050049
    4. 'ops' → logprob: -2.090665102005005
    5. ' for' → logprob: -3.090665102005005
    6. 'for' → logprob: -3.215665102005005
    7. ' ops' → logprob: -3.590665102005005
    8. '9' → logprob: -4.215664863586426
    9. 'i' → logprob: -4.715664863586426
    10. 'op' → logprob: -5.090664863586426

Token 575: '6' (ID: 21)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7026990652084351
    2. 'ops' → logprob: -1.202699065208435
    3. '6' → logprob: -2.0776991844177246
    4. ' ' → logprob: -3.9526991844177246
    5. ' ops' → logprob: -4.577699184417725
    6. '9' → logprob: -4.952699184417725
    7. '[' → logprob: -5.577699184417725
    8. ')' → logprob: -5.702699184417725
    9. 'i' → logprob: -5.702699184417725
    10. 'index' → logprob: -5.827699184417725

Token 576: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020410029217600822
    2. '):' → logprob: -4.645410060882568
    3. '),' → logprob: -5.645410060882568
    4. ')' → logprob: -6.020410060882568
    5. ' ,' → logprob: -6.770410060882568
    6. '+' → logprob: -6.895410060882568
    7. '   ' → logprob: -7.770410060882568
    8. ' in' → logprob: -8.02040958404541
    9. ',),' → logprob: -8.39540958404541
    10. ',)' → logprob: -8.39540958404541

Token 577: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04300855100154877
    2. ' ' → logprob: -3.16800856590271
    3. ',' → logprob: -12.543008804321289
    4. '   ' → logprob: -13.668008804321289
    5. '
' → logprob: -13.793008804321289
    6. '  ' → logprob: -14.043008804321289
    7. '1' → logprob: -14.793008804321289
    8. '```' → logprob: -14.793008804321289
    9. ')' → logprob: -15.168008804321289
    10. '

' → logprob: -15.418008804321289

Token 578: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '1' → logprob: -14.500036239624023
    4. '   ' → logprob: -16.000036239624023
    5. ',' → logprob: -17.250036239624023
    6. '```' → logprob: -17.250036239624023
    7. '
' → logprob: -17.500036239624023
    8. '  ' → logprob: -17.750036239624023
    9. '[' → logprob: -18.500036239624023
    10. '`' → logprob: -19.500036239624023

Token 579: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13736563920974731
    2. '):
' → logprob: -2.6373655796051025
    3. ',' → logprob: -3.5123655796051025
    4. '),' → logprob: -3.7623655796051025
    5. '   ' → logprob: -6.012365818023682
    6. ')' → logprob: -6.887365818023682
    7. ':' → logprob: -9.137365341186523
    8. ' in' → logprob: -10.262365341186523
    9. '):

' → logprob: -10.387365341186523
    10. ' ):' → logprob: -10.762365341186523

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6956459283828735
    2. ':' → logprob: -0.8206459283828735
    3. ',' → logprob: -3.570645809173584
    4. ':
' → logprob: -3.570645809173584
    5. ' for' → logprob: -6.320645809173584
    6. ' in' → logprob: -6.445645809173584
    7. '       ' → logprob: -8.445646286010742
    8. 'for' → logprob: -8.570646286010742
    9. 'in' → logprob: -8.695646286010742
    10. '  ' → logprob: -8.820646286010742

Token 581: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8556385636329651
    2. '   ' → logprob: -1.2306385040283203
    3. 'for' → logprob: -1.4806385040283203
    4. ' in' → logprob: -4.23063850402832
    5. '
' → logprob: -4.60563850402832
    6. ':
' → logprob: -4.73063850402832
    7. ':' → logprob: -4.73063850402832
    8. 'in' → logprob: -5.48063850402832
    9. ',' → logprob: -5.73063850402832
    10. '	for' → logprob: -6.48063850402832

Token 582: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3509047031402588
    2. 'for' → logprob: -1.8509047031402588
    3. '   ' → logprob: -1.9759047031402588
    4. '	for' → logprob: -8.47590446472168
    5. '
' → logprob: -12.85090446472168
    6. '  ' → logprob: -13.35090446472168
    7. ' i' → logprob: -13.72590446472168
    8. ',' → logprob: -13.85090446472168
    9. '    
' → logprob: -13.85090446472168
    10. '```' → logprob: -14.72590446472168

Token 583: ' cherche' (ID: 52345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0060823759995400906
    2. 'range' → logprob: -5.756082534790039
    3. ' for' → logprob: -5.881082534790039
    4. '   ' → logprob: -10.131082534790039
    5. ' range' → logprob: -10.881082534790039
    6. 'def' → logprob: -11.506082534790039
    7. '#' → logprob: -12.006082534790039
    8. 'op' → logprob: -12.131082534790039
    9. 's' → logprob: -12.631082534790039
    10. '
' → logprob: -13.006082534790039

Token 584: ' toutes' (ID: 17502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9670839309692383
    2. ' à' → logprob: -1.7170839309692383
    3. ' de' → logprob: -2.7170839309692383
    4. ' i' → logprob: -2.8420839309692383
    5. ' to' → logprob: -2.9670839309692383
    6. 'à' → logprob: -3.0920839309692383
    7. ' for' → logprob: -3.0920839309692383
    8. ' ' → logprob: -3.5920839309692383
    9. '  ' → logprob: -3.9670839309692383
    10. ' d' → logprob: -4.092083930969238

Token 585: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9327705502510071
    2. 'i' → logprob: -2.5577704906463623
    3. ' i' → logprob: -2.5577704906463623
    4. ' les' → logprob: -2.5577704906463623
    5. 'op' → logprob: -2.6827704906463623
    6. ' ' → logprob: -2.6827704906463623
    7. ' op' → logprob: -2.9327704906463623
    8. ' possible' → logprob: -3.1827704906463623
    9. 'possible' → logprob: -3.1827704906463623
    10. 'les' → logprob: -4.057770729064941

Token 586: ' puiss' (ID: 102546)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5453838109970093
    2. 'multip' → logprob: -2.045383930206299
    3. ' comb' → logprob: -2.295383930206299
    4. ' valeurs' → logprob: -2.795383930206299
    5. ' val' → logprob: -3.795383930206299
    6. 'pieces' → logprob: -4.045383930206299
    7. 'comb' → logprob: -4.045383930206299
    8. ' multiples' → logprob: -4.295383930206299
    9. 'poss' → logprob: -4.545383930206299
    10. 'op' → logprob: -5.170383930206299

Token 587: 'ances' (ID: 3528)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4967859983444214
    2. '   ' → logprob: -1.6217859983444214
    3. 'powers' → logprob: -2.871786117553711
    4. 'i' → logprob: -3.121786117553711
    5. '       ' → logprob: -3.371786117553711
    6. ' =' → logprob: -3.496786117553711
    7. 'éros' → logprob: -3.621786117553711
    8. 'ieurs' → logprob: -3.746786117553711
    9. 'ances' → logprob: -3.746786117553711
    10. 'ores' → logprob: -3.871786117553711

Token 588: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4374313950538635
    2. ' of' → logprob: -1.6874313354492188
    3. 'de' → logprob: -2.8124313354492188
    4. ' ' → logprob: -3.0624313354492188
    5. '   ' → logprob: -4.062431335449219
    6. ' des' → logprob: -4.312431335449219
    7. 'of' → logprob: -4.437431335449219
    8. '  ' → logprob: -5.687431335449219
    9. '**' → logprob: -6.187431335449219
    10. '_de' → logprob: -6.437431335449219

Token 589: ' ces' (ID: 10532)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32353463768959045
    2. 'ces' → logprob: -1.823534607887268
    3. 'de' → logprob: -3.1985347270965576
    4. ' ' → logprob: -3.9485347270965576
    5. 'op' → logprob: -4.1985344886779785
    6. '10' → logprob: -4.4485344886779785
    7. ' ces' → logprob: -4.9485344886779785
    8. 'c' → logprob: -5.3235344886779785
    9. 'l' → logprob: -5.6985344886779785
    10. 'les' → logprob: -6.0735344886779785

Token 590: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6101801991462708
    2. 'pi' → logprob: -2.485180139541626
    3. '2' → logprob: -2.860180139541626
    4. 'bases' → logprob: -3.110180139541626
    5. 'pieces' → logprob: -3.110180139541626
    6. ' valeurs' → logprob: -3.360180139541626
    7. ' ' → logprob: -3.360180139541626
    8. ' bases' → logprob: -3.485180139541626
    9. ' val' → logprob: -3.485180139541626
    10. 'op' → logprob: -3.735180139541626

Token 591: ' inf' (ID: 5603)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5043473243713379
    2. ' for' → logprob: -1.254347324371338
    3. 'for' → logprob: -2.379347324371338
    4. ' in' → logprob: -6.004347324371338
    5. ' of' → logprob: -6.129347324371338
    6. '[' → logprob: -6.379347324371338
    7. ' de' → logprob: -6.379347324371338
    8. ' ' → logprob: -6.754347324371338
    9. ' pour' → logprob: -6.879347324371338
    10. ':' → logprob: -6.879347324371338

Token 592: 'érieures' (ID: 108978)
  Prédit: 'érieures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieures' → logprob: -0.0036066018510609865
    2. 'érieure' → logprob: -6.253606796264648
    3. 'érieurs' → logprob: -7.378606796264648
    4. 'érieur' → logprob: -7.753606796264648
    5. '[' → logprob: -8.628606796264648
    6. 'érées' → logprob: -8.878606796264648
    7. 'ér' → logprob: -9.503606796264648
    8. 'er' → logprob: -9.753606796264648
    9. 'érie' → logprob: -9.878606796264648
    10. 'éri' → logprob: -10.503606796264648

Token 593: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6827659606933594
    2. '   ' → logprob: -1.4327659606933594
    3. 'à' → logprob: -1.8077659606933594
    4. '=' → logprob: -2.8077659606933594
    5. ' ou' → logprob: -3.9327659606933594
    6. ' or' → logprob: -6.057765960693359
    7. ' =' → logprob: -6.307765960693359
    8. 'au' → logprob: -6.307765960693359
    9. 'ou' → logprob: -6.557765960693359
    10. ' aux' → logprob: -6.932765960693359

Token 594: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.5405758023262024
    2. '=' → logprob: -1.0405757427215576
    3. 'ég' → logprob: -2.7905757427215576
    4. 'égal' → logprob: -6.290575981140137
    5. 'à' → logprob: -8.040575981140137
    6. ' eg' → logprob: -8.290575981140137
    7. 'ou' → logprob: -8.665575981140137
    8. ' égal' → logprob: -9.290575981140137
    9. 'eg' → logprob: -9.665575981140137
    10. '   ' → logprob: -10.165575981140137

Token 595: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.23795489966869354
    2. 'al' → logprob: -1.73795485496521
    3. 'ale' → logprob: -3.36295485496521
    4. 'a' → logprob: -7.112955093383789
    5. '```' → logprob: -9.112955093383789
    6. '{' → logprob: -9.487955093383789
    7. 'ali' → logprob: -10.612955093383789
    8. '=' → logprob: -10.737955093383789
    9. '>' → logprob: -10.737955093383789
    10. 'à' → logprob: -11.112955093383789

Token 596: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6171396970748901
    2. ' à' → logprob: -1.3671396970748901
    3. 'n' → logprob: -2.3671398162841797
    4. 'à' → logprob: -2.6171398162841797
    5. ' n' → logprob: -3.9921398162841797
    6. ' to' → logprob: -5.49213981628418
    7. 'au' → logprob: -5.99213981628418
    8. '    ' → logprob: -6.24213981628418
    9. ' ' → logprob: -6.24213981628418
    10. ' a' → logprob: -6.49213981628418

Token 597: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3870009779930115
    2. ' n' → logprob: -1.1370010375976562
    3. ' ' → logprob: -9.637001037597656
    4. '   ' → logprob: -9.762001037597656
    5. '	n' → logprob: -13.387001037597656
    6. '  ' → logprob: -13.637001037597656
    7. '100' → logprob: -13.762001037597656
    8. 'x' → logprob: -13.762001037597656
    9. '    ' → logprob: -14.387001037597656
    10. '10' → logprob: -14.887001037597656

Token 598: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049957387149333954
    2. ':' → logprob: -3.799957275390625
    3. ' for' → logprob: -4.924957275390625
    4. 'for' → logprob: -5.174957275390625
    5. ':
' → logprob: -5.299957275390625
    6. '
' → logprob: -5.674957275390625
    7. ',' → logprob: -6.549957275390625
    8. '[' → logprob: -6.799957275390625
    9. '(' → logprob: -7.549957275390625
    10. '       ' → logprob: -7.799957275390625

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012873002327978611
    2. ' for' → logprob: -4.63787317276001
    3. 'for' → logprob: -6.63787317276001
    4. '
' → logprob: -7.38787317276001
    5. '    
' → logprob: -7.88787317276001
    6. ':' → logprob: -7.88787317276001
    7. '	for' → logprob: -9.012872695922852
    8. '  
' → logprob: -9.637872695922852
    9. '       ' → logprob: -9.887872695922852
    10. ':
' → logprob: -10.262872695922852

Token 600: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1863573044538498
    2. 'for' (adapté à ' for') → logprob: -2.061357259750366
    3. ' for' → logprob: -3.186357259750366
    4. '    
' → logprob: -6.936357498168945
    5. '
' → logprob: -8.186357498168945
    6. '	for' → logprob: -9.436357498168945
    7. '   
' → logprob: -10.936357498168945
    8. '  
' → logprob: -11.561357498168945
    9. '  ' → logprob: -11.686357498168945
    10. '       ' → logprob: -11.811357498168945

Token 601: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -1.072485089302063
    2. 'op' → logprob: -1.197485089302063
    3. 'o' → logprob: -1.322485089302063
    4. ' o' → logprob: -3.5724849700927734
    5. ' base' → logprob: -3.9474849700927734
    6. 'i' → logprob: -4.447484970092773
    7. 'val' → logprob: -4.697484970092773
    8. 'base' → logprob: -4.697484970092773
    9. ' val' → logprob: -5.822484970092773
    10. 'v' → logprob: -6.322484970092773

Token 602: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011625722981989384
    2. 'in' → logprob: -4.51162576675415
    3. '_' → logprob: -8.386625289916992
    4. ' ' → logprob: -8.386625289916992
    5. 'i' → logprob: -10.261625289916992
    6. 's' → logprob: -10.761625289916992
    7. '1' → logprob: -11.636625289916992
    8. 'er' → logprob: -12.136625289916992
    9. '_in' → logprob: -12.136625289916992
    10. ' i' → logprob: -12.636625289916992

Token 603: ' ops' (ID: 26973)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1832500398159027
    2. 'ops' → logprob: -1.808250069618225
    3. ' [' → logprob: -6.0582499504089355
    4. ' ops' → logprob: -6.9332499504089355
    5. '(' → logprob: -9.683250427246094
    6. '   ' → logprob: -9.933250427246094
    7. 'op' → logprob: -10.558250427246094
    8. ' ' → logprob: -10.808250427246094
    9. '([' → logprob: -12.308250427246094
    10. 'opts' → logprob: -13.058250427246094

Token 604: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037359268753789365
    2. '   ' → logprob: -8.750373840332031
    3. ':
' → logprob: -9.125373840332031
    4. ':' → logprob: -9.250373840332031
    5. ' in' → logprob: -12.500373840332031
    6. 'in' → logprob: -13.125373840332031
    7. '       ' → logprob: -13.250373840332031
    8. ' [' → logprob: -13.625373840332031
    9. '[:' → logprob: -14.625373840332031
    10. '(' → logprob: -15.875373840332031

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. ':' → logprob: -10.625041007995605
    3. ' ' → logprob: -12.000041007995605
    4. ':]' → logprob: -12.000041007995605
    5. '   ' → logprob: -13.750041007995605
    6. '
' → logprob: -14.750041007995605
    7. ']' → logprob: -14.875041007995605
    8. '2' → logprob: -15.500041007995605
    9. '::-' → logprob: -15.625041007995605
    10. ':]
' → logprob: -15.937541007995605

Token 606: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001793457195162773
    2. ']:' → logprob: -8.875179290771484
    3. ':]' → logprob: -10.750179290771484
    4. ' :' → logprob: -11.500179290771484
    5. '[' → logprob: -12.500179290771484
    6. '1' → logprob: -13.000179290771484
    7. ':],' → logprob: -14.875179290771484
    8. '2' → logprob: -15.500179290771484
    9. '：' → logprob: -15.625179290771484
    10. '+' → logprob: -15.750179290771484

Token 607: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.023287173360586166
    2. ']:
' → logprob: -3.773287057876587
    3. ']:
' → logprob: -11.273286819458008
    4. ']' → logprob: -11.523286819458008
    5. '1' → logprob: -11.898286819458008
    6. ':' → logprob: -12.273286819458008
    7. ']:

' → logprob: -12.398286819458008
    8. ' ]' → logprob: -12.898286819458008
    9. '2' → logprob: -15.773286819458008
    10. ']:


' → logprob: -15.773286819458008

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021715033799409866
    2. ':' → logprob: -4.64671516418457
    3. '   ' → logprob: -4.64671516418457
    4. ':
' → logprob: -6.39671516418457
    5. '        
' → logprob: -8.77171516418457
    6. ',' → logprob: -9.14671516418457
    7. '    ' → logprob: -9.89671516418457
    8. '    
' → logprob: -9.89671516418457
    9. 'pow' → logprob: -9.89671516418457
    10. '
' → logprob: -10.39671516418457

Token 609: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2399086952209473
    2. 'pow' → logprob: -1.4899086952209473
    3. 'power' → logprob: -1.7399086952209473
    4. 'value' → logprob: -2.8649086952209473
    5. ' power' → logprob: -3.1149086952209473
    6. ' value' → logprob: -3.2399086952209473
    7. 'val' → logprob: -3.6149086952209473
    8. '           ' → logprob: -3.7399086952209473
    9. ' i' → logprob: -3.9899086952209473
    10. 'p' → logprob: -4.239908695220947

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689467310905457
    2. ' =' → logprob: -1.136894702911377
    3. 'n' → logprob: -11.761894226074219
    4. ',' → logprob: -12.511894226074219
    5. ' ' → logprob: -12.761894226074219
    6. 'nt' → logprob: -12.886894226074219
    7. '   ' → logprob: -13.011894226074219
    8. 'f' → logprob: -14.136894226074219
    9. 'x' → logprob: -14.636894226074219
    10. 's' → logprob: -14.761894226074219

Token 611: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.556685745716095
    2. '1' → logprob: -0.931685745716095
    3. ' ' → logprob: -3.43168568611145
    4. '0' → logprob: -7.431685924530029
    5. ' op' → logprob: -10.056685447692871
    6. 'op' → logprob: -10.556685447692871
    7. '   ' → logprob: -12.056685447692871
    8. '  ' → logprob: -12.431685447692871
    9. '    ' → logprob: -15.056685447692871
    10. '```' → logprob: -15.369185447692871

Token 612: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2533009350299835
    2. '1' → logprob: -1.5033009052276611
    3. '0' → logprob: -6.87830114364624
    4. ' ' → logprob: -8.128300666809082
    5. 'op' → logprob: -10.128300666809082
    6. '   ' → logprob: -13.253300666809082
    7. '  ' → logprob: -13.940800666809082
    8. 'i' → logprob: -14.565800666809082
    9. 'pow' → logprob: -14.690800666809082
    10. ' op' → logprob: -14.878300666809082

Token 613: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2399517297744751
    2. '
' → logprob: -1.739951729774475
    3. 'while' → logprob: -3.7399516105651855
    4. ' while' → logprob: -4.4899516105651855
    5. '	while' → logprob: -7.2399516105651855
    6. '        
' → logprob: -7.3649516105651855
    7. '   ' → logprob: -7.7399516105651855
    8. ' 
' → logprob: -8.239952087402344
    9. '    
' → logprob: -8.864952087402344
    10. '<|end|>' → logprob: -9.114952087402344

Token 614: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6710888147354126
    2. '
' → logprob: -0.7960888147354126
    3. '       ' → logprob: -3.421088695526123
    4. ' while' → logprob: -5.796088695526123
    5. '        
' → logprob: -6.671088695526123
    6. '
' → logprob: -8.421089172363281
    7. '	while' → logprob: -8.921089172363281
    8. '    
' → logprob: -9.171089172363281
    9. '   ' → logprob: -9.671089172363281
    10. '*' → logprob: -10.046089172363281

Token 615: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12261899560689926
    2. ' while' → logprob: -2.4976189136505127
    3. '       ' → logprob: -3.6226189136505127
    4. '
' → logprob: -5.372619152069092
    5. '1' → logprob: -7.997619152069092
    6. '        
' → logprob: -8.122618675231934
    7. 'While' → logprob: -8.247618675231934
    8. '<|end|>' → logprob: -8.872618675231934
    9. '	while' → logprob: -9.372618675231934
    10. '0' → logprob: -9.372618675231934

Token 616: ' commence' (ID: 44755)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5451204776763916
    2. ' while' → logprob: -0.9201204776763916
    3. '=' → logprob: -4.4201202392578125
    4. ' =' → logprob: -5.4201202392578125
    5. '*=' → logprob: -7.0451202392578125
    6. '**' → logprob: -7.1701202392578125
    7. '*' → logprob: -7.2951202392578125
    8. 'i' → logprob: -7.6701202392578125
    9. 'hile' → logprob: -8.045120239257812
    10. 's' → logprob: -8.045120239257812

Token 617: ' à' (ID: 1221)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.18585772812366486
    2. ' à' → logprob: -2.3108577728271484
    3. ' i' → logprob: -3.8108577728271484
    4. '       ' → logprob: -4.435857772827148
    5. ' =' → logprob: -4.435857772827148
    6. '=' → logprob: -5.060857772827148
    7. 'par' → logprob: -5.185857772827148
    8. '           ' → logprob: -5.935857772827148
    9. ' with' → logprob: -6.060857772827148
    10. 'à' → logprob: -6.310857772827148

Token 618: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2620813846588135
    2. 'i' → logprob: -2.5120813846588135
    3. 'op' → logprob: -2.5120813846588135
    4. '2' → logprob: -3.5120813846588135
    5. ' ' → logprob: -4.012081146240234
    6. ' op' → logprob: -4.387081146240234
    7. ' i' → logprob: -5.137081146240234
    8. '0' → logprob: -6.637081146240234
    9. '...' → logprob: -8.637081146240234
    10. 'pow' → logprob: -9.137081146240234

Token 619: ' puissance' (ID: 63494)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.9262810945510864
    2. '1' → logprob: -1.6762810945510864
    3. ' op' → logprob: -1.8012810945510864
    4. 'i' → logprob: -2.301280975341797
    5. '2' → logprob: -2.551280975341797
    6. ' ' → logprob: -3.176280975341797
    7. ' i' → logprob: -3.551280975341797
    8. 'pow' → logprob: -7.301280975341797
    9. '0' → logprob: -7.801280975341797
    10. '```' → logprob: -7.926280975341797

Token 620: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2264925241470337
    2. '=' → logprob: -1.3514925241470337
    3. ' =' → logprob: -1.9764925241470337
    4. 'while' → logprob: -2.351492404937744
    5. ',' → logprob: -2.976492404937744
    6. ' while' → logprob: -3.101492404937744
    7. '1' → logprob: -4.101492404937744
    8. ' ,' → logprob: -4.351492404937744
    9. '**' → logprob: -4.351492404937744
    10. '2' → logprob: -4.476492404937744

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7645731568336487
    2. '=' → logprob: -1.014573097229004
    3. '2' → logprob: -2.889573097229004
    4. ' =' → logprob: -3.264573097229004
    5. '   ' → logprob: -4.014573097229004
    6. 'de' → logprob: -4.264573097229004
    7. 'while' → logprob: -4.264573097229004
    8. 'i' → logprob: -4.389573097229004
    9. 'op' → logprob: -5.639573097229004
    10. '=i' → logprob: -6.014573097229004

Token 622: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11124434322118759
    2. '
' → logprob: -2.3612444400787354
    3. '        
' → logprob: -4.986244201660156
    4. ' while' → logprob: -6.736244201660156
    5. 'while' → logprob: -6.736244201660156
    6. ' 
' → logprob: -7.611244201660156
    7. '  
' → logprob: -7.986244201660156
    8. '<|end|>' → logprob: -8.861244201660156
    9. '		
' → logprob: -9.486244201660156
    10. '	while' → logprob: -9.611244201660156

Token 623: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5684385895729065
    2. ' )' → logprob: -1.1934385299682617
    3. ' )
' → logprob: -3.0684385299682617
    4. ')
' → logprob: -3.5684385299682617
    5. 'while' → logprob: -4.193438529968262
    6. ' i' → logprob: -4.568438529968262
    7. ' while' → logprob: -4.818438529968262
    8. 'i' → logprob: -4.943438529968262
    9. 'op' → logprob: -5.693438529968262
    10. '2' → logprob: -6.318438529968262

Token 624: ''est' (ID: 6616)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6850380897521973
    2. ')' → logprob: -1.3100380897521973
    3. ' **' → logprob: -1.9350380897521973
    4. '=' → logprob: -3.9350380897521973
    5. ' =' → logprob: -4.560038089752197
    6. ' )' → logprob: -4.560038089752197
    7. '*' → logprob: -4.685038089752197
    8. '+' → logprob: -4.685038089752197
    9. '**)' → logprob: -5.435038089752197
    10. ' ' → logprob: -5.560038089752197

Token 625: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.03780287876725197
    2. 'à' → logprob: -4.787802696228027
    3. 'op' → logprob: -5.037802696228027
    4. ' à' → logprob: -5.037802696228027
    5. ' op' → logprob: -6.287802696228027
    6. 'i' → logprob: -6.287802696228027
    7. 'le' → logprob: -6.412802696228027
    8. '1' → logprob: -6.412802696228027
    9. ' ' → logprob: -6.912802696228027
    10. 'l' → logprob: -6.912802696228027

Token 626: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9300066232681274
    2. 'i' → logprob: -1.0550066232681274
    3. '2' → logprob: -2.680006504058838
    4. 'op' → logprob: -2.680006504058838
    5. 'True' → logprob: -3.055006504058838
    6. ' i' → logprob: -3.680006504058838
    7. ' True' → logprob: -4.430006504058838
    8. ' ' → logprob: -4.930006504058838
    9. 'x' → logprob: -5.305006504058838
    10. '-à' → logprob: -5.680006504058838

Token 627: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.35000237822532654
    2. 'op' → logprob: -1.225002408027649
    3. '   ' → logprob: -7.600002288818359
    4. '    ' → logprob: -8.85000228881836
    5. ' ' → logprob: -8.85000228881836
    6. '1' → logprob: -9.10000228881836
    7. 'pow' → logprob: -9.22500228881836
    8. ' l' → logprob: -9.72500228881836
    9. '	op' → logprob: -9.85000228881836
    10. '(op' → logprob: -9.97500228881836

Token 628: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.10609200596809387
    2. '**' → logprob: -2.4810919761657715
    3. ')' → logprob: -4.2310919761657715
    4. ')
' → logprob: -7.1060919761657715
    5. ' *' → logprob: -7.4810919761657715
    6. ' **)' → logprob: -8.35609245300293
    7. ' )' → logprob: -8.60609245300293
    8. ')**' → logprob: -8.73109245300293
    9. ' ' → logprob: -8.98109245300293
    10. '**)' → logprob: -9.23109245300293

Token 629: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08925329148769379
    2. '1' → logprob: -2.9642531871795654
    3. ' i' → logprob: -3.4642531871795654
    4. ' ' → logprob: -6.0892534255981445
    5. '0' → logprob: -8.589253425598145
    6. '   ' → logprob: -11.339253425598145
    7. '2' → logprob: -11.839253425598145
    8. '```' → logprob: -12.839253425598145
    9. '(i' → logprob: -12.839253425598145
    10. '  ' → logprob: -12.964253425598145

Token 630: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13435085117816925
    2. ')' → logprob: -2.5093507766723633
    3. '       ' → logprob: -3.2593507766723633
    4. ' )
' → logprob: -5.759350776672363
    5. '
' → logprob: -7.134350776672363
    6. ')
' → logprob: -7.259350776672363
    7. 'while' → logprob: -8.134350776672363
    8. ' )' → logprob: -8.384350776672363
    9. ' while' → logprob: -8.509350776672363
    10. '   ' → logprob: -8.509350776672363

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011606277897953987
    2. '
' → logprob: -5.011606216430664
    3. ' while' → logprob: -6.136606216430664
    4. '        
' → logprob: -7.136606216430664
    5. '   ' → logprob: -7.386606216430664
    6. 'while' → logprob: -8.386606216430664
    7. ',' → logprob: -8.761606216430664
    8. '  
' → logprob: -9.011606216430664
    9. '    
' → logprob: -9.136606216430664
    10. ':
' → logprob: -9.386606216430664

Token 632: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5126346349716187
    2. ' while' → logprob: -1.2626346349716187
    3. 'while' → logprob: -2.137634754180908
    4. '        
' → logprob: -9.76263427734375
    5. '   ' → logprob: -9.88763427734375
    6. '	while' → logprob: -9.88763427734375
    7. '
' → logprob: -11.01263427734375
    8. '        ' → logprob: -11.63763427734375
    9. '      ' → logprob: -11.76263427734375
    10. 'While' → logprob: -11.88763427734375

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47430673241615295
    2. '=' → logprob: -0.9743067026138306
    3. ' ' → logprob: -8.4743070602417
    4. '    ' → logprob: -12.3493070602417
    5. '        ' → logprob: -12.7243070602417
    6. '   ' → logprob: -13.0993070602417
    7. '       ' → logprob: -13.4743070602417
    8. 't' → logprob: -13.7243070602417
    9. '  ' → logprob: -13.8493070602417
    10. ' *=' → logprob: -13.9743070602417

Token 634: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.5232428312301636
    2. 'op' → logprob: -0.8982428312301636
    3. 'pow' → logprob: -9.648242950439453
    4. '1' → logprob: -10.523242950439453
    5. ' ' → logprob: -12.023242950439453
    6. '(op' → logprob: -12.523242950439453
    7. '   ' → logprob: -12.523242950439453
    8. 'int' → logprob: -12.523242950439453
    9. '	op' → logprob: -12.523242950439453
    10. '0' → logprob: -13.898242950439453

Token 635: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5766388177871704
    2. ' **' → logprob: -0.8266388177871704
    3. '
' → logprob: -7.826638698577881
    4. ' *' → logprob: -9.201639175415039
    5. '*' → logprob: -9.951639175415039
    6. '<|end|>' → logprob: -10.326639175415039
    7. '```' → logprob: -10.576639175415039
    8. '*i' → logprob: -10.951639175415039
    9. '       ' → logprob: -11.826639175415039
    10. 'while' → logprob: -12.076639175415039

Token 636: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009393315413035452
    2. ' i' → logprob: -7.00093936920166
    3. '1' → logprob: -10.50093936920166
    4. '   ' → logprob: -15.75093936920166
    5. ' ' → logprob: -15.87593936920166
    6. '	i' → logprob: -16.875938415527344
    7. '  ' → logprob: -18.125938415527344
    8. '    ' → logprob: -18.875938415527344
    9. '```' → logprob: -19.000938415527344
    10. '(i' → logprob: -19.125938415527344

Token 637: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27247387170791626
    2. '       ' → logprob: -1.5224738121032715
    3. '<|end|>' → logprob: -4.3974738121032715
    4. '<|end|>' → logprob: -6.6474738121032715
    5. ' while' → logprob: -6.7724738121032715
    6. '        
' → logprob: -6.7724738121032715
    7. '  
' → logprob: -7.0224738121032715
    8. ' 
' → logprob: -7.0224738121032715
    9. '\n' → logprob: -7.1474738121032715
    10. '
' → logprob: -7.6474738121032715

Token 638: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5145308375358582
    2. '       ' → logprob: -1.014530897140503
    3. 'while' → logprob: -3.639530897140503
    4. ' while' → logprob: -4.889530658721924
    5. '        
' → logprob: -5.764530658721924
    6. ' 
' → logprob: -7.639530658721924
    7. '<|end|>' → logprob: -7.639530658721924
    8. '
' → logprob: -7.764530658721924
    9. '	while' → logprob: -8.014531135559082
    10. '   ' → logprob: -8.014531135559082

Token 639: ' On' (ID: 2160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08916769921779633
    2. ' t' → logprob: -2.589167594909668
    3. 'op' → logprob: -5.214167594909668
    4. ' op' → logprob: -5.589167594909668
    5. '       ' → logprob: -7.464167594909668
    6. '1' → logprob: -9.089167594909668
    7. 'while' → logprob: -9.589167594909668
    8. '   ' → logprob: -9.714167594909668
    9. 'ops' → logprob: -10.214167594909668
    10. '           ' → logprob: -10.214167594909668

Token 640: ' calc' (ID: 25691)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.374424010515213
    2. '<=' → logprob: -2.1244239807128906
    3. 'while' → logprob: -2.1244239807128906
    4. 't' → logprob: -3.3744239807128906
    5. '+=' → logprob: -4.374423980712891
    6. ' =' → logprob: -4.624423980712891
    7. ' <=' → logprob: -4.874423980712891
    8. ' while' → logprob: -5.499423980712891
    9. ' +=' → logprob: -6.499423980712891
    10. '=t' → logprob: -7.249423980712891

Token 641: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.03103954717516899
    2. '=' → logprob: -4.406039714813232
    3. 'ulate' → logprob: -4.656039714813232
    4. 't' → logprob: -5.156039714813232
    5. 'ulte' → logprob: -6.281039714813232
    6. 'cule' → logprob: -7.406039714813232
    7. 'ul' → logprob: -7.906039714813232
    8. 'ulé' → logprob: -10.031039237976074
    9. 'ult' → logprob: -10.156039237976074
    10. 'uler' → logprob: -10.281039237976074

Token 642: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08167874068021774
    2. ' t' → logprob: -2.581678628921509
    3. ' op' → logprob: -6.456678867340088
    4. 'op' → logprob: -6.956678867340088
    5. '(op' → logprob: -9.33167839050293
    6. '       ' → logprob: -9.70667839050293
    7. '   ' → logprob: -10.45667839050293
    8. '(t' → logprob: -10.83167839050293
    9. ' ' → logprob: -11.33167839050293
    10. '    ' → logprob: -11.45667839050293

Token 643: ' puissance' (ID: 63494)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3472544252872467
    2. 'op' → logprob: -1.5972543954849243
    3. ' op' → logprob: -3.097254514694214
    4. ' t' → logprob: -3.222254514694214
    5. 'value' → logprob: -6.097254276275635
    6. ' value' → logprob: -6.722254276275635
    7. 'pow' → logprob: -6.972254276275635
    8. ' ' → logprob: -7.847254276275635
    9. 'power' → logprob: -7.972254276275635
    10. '  ' → logprob: -8.972254753112793

Token 644: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6902599334716797
    2. '
' → logprob: -1.1902599334716797
    3. '<|end|>' → logprob: -2.0652599334716797
    4. '        
' → logprob: -3.8152599334716797
    5. 'while' → logprob: -3.9402599334716797
    6. ' while' → logprob: -5.06525993347168
    7. '<|end|>' → logprob: -5.56525993347168
    8. ' 
' → logprob: -5.56525993347168
    9. '  
' → logprob: -5.69025993347168
    10. '   ' → logprob: -6.19025993347168

Token 645: 'op' (ID: 467)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5323623418807983
    2. 'op' → logprob: -1.4073623418807983
    3. ')' → logprob: -2.282362461090088
    4. ' op' → logprob: -3.782362461090088
    5. ' t' → logprob: -3.782362461090088
    6. ' )' → logprob: -4.407362461090088
    7. 'i' → logprob: -5.907362461090088
    8. '   ' → logprob: -7.282362461090088
    9. ')t' → logprob: -7.282362461090088
    10. ' ' → logprob: -7.407362461090088

Token 646: ' élevé' (ID: 95488)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1418205052614212
    2. ' )' → logprob: -2.6418204307556152
    3. ' **' → logprob: -3.7668204307556152
    4. '**' → logprob: -3.7668204307556152
    5. ')**' → logprob: -4.766820430755615
    6. '=' → logprob: -6.516820430755615
    7. ' **)' → logprob: -7.141820430755615
    8. '**)' → logprob: -7.141820430755615
    9. ')
' → logprob: -7.391820430755615
    10. ' ' → logprob: -7.516820430755615

Token 647: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17328199744224548
    2. ' i' → logprob: -2.6732819080352783
    3. ' to' → logprob: -3.5482819080352783
    4. 'i' → logprob: -3.7982819080352783
    5. 'à' → logprob: -4.173282146453857
    6. ' ' → logprob: -4.673282146453857
    7. ')' → logprob: -5.173282146453857
    8. 'to' → logprob: -6.173282146453857
    9. ' au' → logprob: -6.798282146453857
    10. '=' → logprob: -6.923282146453857

Token 648: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07543058693408966
    2. ' i' → logprob: -2.7004306316375732
    3. '1' → logprob: -5.450430393218994
    4. ' ' → logprob: -6.950430393218994
    5. '   ' → logprob: -8.950430870056152
    6. '  ' → logprob: -10.325430870056152
    7. ')' → logprob: -10.325430870056152
    8. '```' → logprob: -12.200430870056152
    9. '2' → logprob: -12.325430870056152
    10. '<|end|>' → logprob: -12.450430870056152

Token 649: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006980699021369219
    2. ')
' → logprob: -5.506980895996094
    3. ' )' → logprob: -5.881980895996094
    4. ' )
' → logprob: -9.881980895996094
    5. ')
' → logprob: -10.631980895996094
    6. '       ' → logprob: -11.631980895996094
    7. ')

' → logprob: -12.256980895996094
    8. ')i' → logprob: -12.506980895996094
    9. 'i' → logprob: -12.756980895996094
    10. 't' → logprob: -13.006980895996094

Token 650: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2857491374015808
    2. '       ' → logprob: -1.4107491970062256
    3. '        
' → logprob: -6.7857489585876465
    4. ' while' → logprob: -7.2857489585876465
    5. '\n' → logprob: -7.2857489585876465
    6. 'while' → logprob: -7.7857489585876465
    7. ' 
' → logprob: -7.9107489585876465
    8. '  
' → logprob: -7.9107489585876465
    9. '
' → logprob: -8.160749435424805
    10. '<|end|>' → logprob: -9.035749435424805

Token 651: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06558313965797424
    2. 'while' → logprob: -3.1905832290649414
    3. ' while' → logprob: -3.9405832290649414
    4. '
' → logprob: -6.190583229064941
    5. '	while' → logprob: -7.565583229064941
    6. '   ' → logprob: -8.315583229064941
    7. '        
' → logprob: -10.190583229064941
    8. '	' → logprob: -11.565583229064941
    9. ' 
' → logprob: -11.940583229064941
    10. '\n' → logprob: -12.315583229064941

Token 652: ' Tant' (ID: 169541)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.570890486240387
    2. 'while' → logprob: -0.945890486240387
    3. '       ' → logprob: -3.070890426635742
    4. '	while' → logprob: -9.070890426635742
    5. 'While' → logprob: -9.570890426635742
    6. '   ' → logprob: -9.820890426635742
    7. '
' → logprob: -11.445890426635742
    8. '        
' → logprob: -12.195890426635742
    9. '    ' → logprob: -12.445890426635742
    10. ' 
' → logprob: -13.695890426635742

Token 653: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.08326572924852371
    2. 't' → logprob: -3.333265781402588
    3. ' t' → logprob: -3.333265781402588
    4. 'que' → logprob: -4.833265781402588
    5. '       ' → logprob: -8.08326530456543
    6. '   ' → logprob: -8.83326530456543
    7. '(t' → logprob: -9.33326530456543
    8. '    ' → logprob: -11.58326530456543
    9. ' qu' → logprob: -12.20826530456543
    10. '	t' → logprob: -12.45826530456543

Token 654: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.575940728187561
    2. ' t' → logprob: -0.825940728187561
    3. '   ' → logprob: -14.20094108581543
    4. '(t' → logprob: -15.20094108581543
    5. '	t' → logprob: -15.45094108581543
    6. ' ' → logprob: -16.07594108581543
    7. '       ' → logprob: -17.32594108581543
    8. '`t' → logprob: -17.45094108581543
    9. ' ' → logprob: -17.70094108581543
    10. '<t' → logprob: -18.95094108581543

Token 655: ' puissance' (ID: 63494)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.062045659869909286
    2. ' t' → logprob: -2.8120455741882324
    3. '   ' → logprob: -9.81204605102539
    4. '       ' → logprob: -11.06204605102539
    5. ' ' → logprob: -12.93704605102539
    6. '    ' → logprob: -13.68704605102539
    7. '`t' → logprob: -13.68704605102539
    8. '	t' → logprob: -13.81204605102539
    9. '           ' → logprob: -14.56204605102539
    10. '  ' → logprob: -14.56204605102539

Token 656: ' est' (ID: 893)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5774257183074951
    2. ' t' → logprob: -0.9524257183074951
    3. ' <=' → logprob: -3.202425718307495
    4. '<=' → logprob: -4.452425956726074
    5. '(t' → logprob: -7.952425956726074
    6. ' ' → logprob: -9.702425956726074
    7. ' (' → logprob: -10.327425956726074
    8. 'est' → logprob: -10.577425956726074
    9. '   ' → logprob: -11.327425956726074
    10. 'le' → logprob: -11.702425956726074

Token 657: ' inf' (ID: 5603)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11720763891935349
    2. ' <=' → logprob: -2.9922075271606445
    3. 'inf' → logprob: -3.3672075271606445
    4. 't' → logprob: -3.7422075271606445
    5. ' inf' → logprob: -6.4922075271606445
    6. '   ' → logprob: -7.9922075271606445
    7. 'infer' → logprob: -9.742207527160645
    8. '≤' → logprob: -9.867207527160645
    9. 'less' → logprob: -9.867207527160645
    10. 'moins' → logprob: -9.992207527160645

Token 658: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.010535651817917824
    2. 'érie' → logprob: -5.010535717010498
    3. 'érieur' → logprob: -6.885535717010498
    4. 'erie' → logprob: -7.135535717010498
    5. 'éri' → logprob: -7.260535717010498
    6. 'er' → logprob: -7.760535717010498
    7. 'ér' → logprob: -8.63553524017334
    8. 'ière' → logprob: -8.76053524017334
    9. '   ' → logprob: -8.88553524017334
    10. 'ie' → logprob: -9.38553524017334

Token 659: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8232345581054688
    2. 'ou' → logprob: -1.0732345581054688
    3. ' ou' → logprob: -1.8232345581054688
    4. '       ' → logprob: -4.073234558105469
    5. '<=' → logprob: -4.573234558105469
    6. 'à' → logprob: -4.573234558105469
    7. 'or' → logprob: -5.323234558105469
    8. ' =' → logprob: -5.448234558105469
    9. 'e' → logprob: -6.198234558105469
    10. ' à' → logprob: -6.448234558105469

Token 660: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.02456645853817463
    2. 'égal' → logprob: -4.399566650390625
    3. '=' → logprob: -5.524566650390625
    4. ' ég' → logprob: -5.524566650390625
    5. 'eg' → logprob: -6.649566650390625
    6. 'ou' → logprob: -6.899566650390625
    7. '```' → logprob: -7.774566650390625
    8. '<=' → logprob: -8.024566650390625
    9. '==' → logprob: -8.649566650390625
    10. 'ug' → logprob: -8.774566650390625

Token 661: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00015705463010817766
    2. 'al' → logprob: -9.125157356262207
    3. 'alee' → logprob: -10.625157356262207
    4. 'le' → logprob: -11.125157356262207
    5. 'uale' → logprob: -12.750157356262207
    6. 'u' → logprob: -13.250157356262207
    7. 'alie' → logprob: -14.250157356262207
    8. 'ales' → logprob: -14.750157356262207
    9. 'uelle' → logprob: -14.750157356262207
    10. 'ále' → logprob: -14.750157356262207

Token 662: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.21546080708503723
    2. 'à' → logprob: -2.215460777282715
    3. '       ' → logprob: -3.090460777282715
    4. '(n' → logprob: -4.340460777282715
    5. '(t' → logprob: -4.715460777282715
    6. 'n' → logprob: -5.590460777282715
    7. 't' → logprob: -5.840460777282715
    8. '(' → logprob: -5.965460777282715
    9. ' a' → logprob: -6.090460777282715
    10. 'au' → logprob: -6.715460777282715

Token 663: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25192973017692566
    2. ' n' → logprob: -1.501929759979248
    3. '	n' → logprob: -14.75192928314209
    4. '   ' → logprob: -16.126930236816406
    5. '```' → logprob: -16.376930236816406
    6. ' ' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.001930236816406
    8. '_n' → logprob: -18.001930236816406
    9. ')n' → logprob: -18.751930236816406
    10. '    ' → logprob: -18.751930236816406

Token 664: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24843914806842804
    2. '       ' → logprob: -1.7484391927719116
    3. ':
' → logprob: -3.873439073562622
    4. ':' → logprob: -4.373439311981201
    5. '   ' → logprob: -4.623439311981201
    6. 'and' → logprob: -6.873439311981201
    7. ',' → logprob: -7.248439311981201
    8. '           ' → logprob: -7.748439311981201
    9. ' while' → logprob: -8.748438835144043
    10. ' or' → logprob: -8.998438835144043

Token 665: 'not' (ID: 2878)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8984017372131348
    2. ' and' → logprob: -1.5234017372131348
    3. '       ' → logprob: -2.1484017372131348
    4. '           ' → logprob: -2.2734017372131348
    5. ')' → logprob: -2.7734017372131348
    6. '):' → logprob: -3.2734017372131348
    7. ' ):
' → logprob: -4.398401737213135
    8. 'and' → logprob: -4.773401737213135
    9. 'n' → logprob: -4.773401737213135
    10. 't' → logprob: -4.898401737213135

Token 666: 're' (ID: 264)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.050952550023794174
    2. ' while' → logprob: -3.800952434539795
    3. '   ' → logprob: -4.425952434539795
    4. 't' → logprob: -5.175952434539795
    5. ' n' → logprob: -6.425952434539795
    6. ' x' → logprob: -6.550952434539795
    7. ' e' → logprob: -6.800952434539795
    8. 'while' → logprob: -6.925952434539795
    9. ' not' → logprob: -7.050952434539795
    10. 'e' → logprob: -7.300952434539795

Token 667: ' cible' (ID: 136857)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6650619506835938
    2. ' ):' → logprob: -1.6650619506835938
    3. ')' → logprob: -2.2900619506835938
    4. ' )' → logprob: -2.9150619506835938
    5. ' ' → logprob: -3.5400619506835938
    6. ' and' → logprob: -4.040061950683594
    7. ' ):
' → logprob: -4.165061950683594
    8. 'n' → logprob: -4.290061950683594
    9. '):
' → logprob: -4.415061950683594
    10. ':' → logprob: -4.540061950683594

Token 668: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.544800341129303
    2. ')' → logprob: -2.169800281524658
    3. '):' → logprob: -2.169800281524658
    4. ' and' → logprob: -2.169800281524658
    5. '       ' → logprob: -2.794800281524658
    6. '   ' → logprob: -4.794800281524658
    7. '),' → logprob: -6.419800281524658
    8. '           ' → logprob: -6.794800281524658
    9. ':' → logprob: -6.794800281524658
    10. 'and' → logprob: -7.169800281524658

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000570667558349669
    2. ' and' → logprob: -8.125570297241211
    3. ':' → logprob: -9.125570297241211
    4. ':
' → logprob: -9.500570297241211
    5. ' while' → logprob: -10.500570297241211
    6. '           ' → logprob: -10.750570297241211
    7. '   ' → logprob: -10.875570297241211
    8. ',' → logprob: -11.750570297241211
    9. '        
' → logprob: -12.500570297241211
    10. '```' → logprob: -12.875570297241211

Token 670: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017242035828530788
    2. ' while' → logprob: -6.6267242431640625
    3. '   ' → logprob: -8.376724243164062
    4. '           ' → logprob: -9.876724243164062
    5. 'while' (adapté à ' while') → logprob: -10.001724243164062
    6. '        
' → logprob: -10.876724243164062
    7. '
' → logprob: -11.126724243164062
    8. ',' → logprob: -12.376724243164062
    9. ' 
' → logprob: -12.751724243164062
    10. '<|end|>' → logprob: -12.751724243164062

Token 671: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.31326884031295776
    2. 't' → logprob: -1.3132688999176025
    3. '(t' → logprob: -12.313268661499023
    4. ' ' → logprob: -14.438268661499023
    5. '       ' → logprob: -14.438268661499023
    6. '	t' → logprob: -14.688268661499023
    7. '   ' → logprob: -15.063268661499023
    8. ' ' → logprob: -15.438268661499023
    9. '`t' → logprob: -15.688268661499023
    10. '    ' → logprob: -15.813268661499023

Token 672: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.00861528143286705
    2. '<=' → logprob: -4.758615493774414
    3. ' <<=' → logprob: -15.258615493774414
    4. ' ' → logprob: -15.758615493774414
    5. ')<=' → logprob: -16.258615493774414
    6. ' ' → logprob: -16.633615493774414
    7. ' <=",' → logprob: -17.133615493774414
    8. ' =' → logprob: -17.258615493774414
    9. ' ≤' → logprob: -17.508615493774414
    10. 'le' → logprob: -17.508615493774414

Token 673: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519306540489197
    2. 'n' → logprob: -1.5019307136535645
    3. '   ' → logprob: -14.251930236816406
    4. '	n' → logprob: -14.251930236816406
    5. ' ' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.376930236816406
    7. '_n' → logprob: -17.251930236816406
    8. '(n' → logprob: -17.376930236816406
    9. '```' → logprob: -18.251930236816406
    10. '    ' → logprob: -18.251930236816406

Token 674: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47704756259918213
    2. ':' → logprob: -0.9770475625991821
    3. '       ' → logprob: -6.352047443389893
    4. '           ' → logprob: -7.477047443389893
    5. ' and' → logprob: -8.60204792022705
    6. '):
' → logprob: -8.85204792022705
    7. ' :
' → logprob: -8.97704792022705
    8. '   ' → logprob: -9.60204792022705
    9. ' :' → logprob: -9.85204792022705
    10. ',' → logprob: -10.35204792022705

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003266447747591883
    2. '
' → logprob: -8.875327110290527
    3. '            
' → logprob: -9.750327110290527
    4. '       ' → logprob: -10.000327110290527
    5. '	       ' → logprob: -10.875327110290527
    6. 'op' → logprob: -11.500327110290527
    7. '        
' → logprob: -11.625327110290527
    8. ',' → logprob: -12.000327110290527
    9. '               ' → logprob: -12.000327110290527
    10. '<|end|>' → logprob: -12.000327110290527

Token 676: ' #' (ID: 1069)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.5986486077308655
    2. '           ' → logprob: -1.3486485481262207
    3. '       ' → logprob: -1.8486485481262207
    4. ' ops' → logprob: -3.5986485481262207
    5. '   ' → logprob: -5.848648548126221
    6. '               ' → logprob: -6.223648548126221
    7. '```' → logprob: -8.098649024963379
    8. '_ops' → logprob: -8.598649024963379
    9. '.ops' → logprob: -8.598649024963379
    10. 'op' → logprob: -8.973649024963379

Token 677: ' On' (ID: 2160)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.06739558279514313
    2. '           ' → logprob: -2.9423956871032715
    3. ' ops' → logprob: -5.3173956871032715
    4. '       ' → logprob: -5.3173956871032715
    5. '   ' → logprob: -6.3173956871032715
    6. '            
' → logprob: -9.067395210266113
    7. '.ops' → logprob: -9.067395210266113
    8. '_ops' → logprob: -9.317395210266113
    9. 'if' → logprob: -9.442395210266113
    10. '```' → logprob: -9.692395210266113

Token 678: ' l' (ID: 305)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04132821410894394
    2. 'ops' → logprob: -3.791328191757202
    3. 'append' → logprob: -4.291328430175781
    4. '.insert' → logprob: -6.666328430175781
    5. 'op' → logprob: -7.416328430175781
    6. ' ops' → logprob: -7.541328430175781
    7. '.add' → logprob: -8.166328430175781
    8. '.ops' → logprob: -8.416328430175781
    9. 'aps' → logprob: -8.541328430175781
    10. '<|end|>' → logprob: -8.791328430175781

Token 679: ''aj' (ID: 116735)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.11134448647499084
    2. 'append' → logprob: -2.861344575881958
    3. '           ' → logprob: -4.611344337463379
    4. 's' → logprob: -5.111344337463379
    5. 'p' → logprob: -5.361344337463379
    6. '_ops' → logprob: -5.486344337463379
    7. '#' → logprob: -5.986344337463379
    8. '.insert' → logprob: -5.986344337463379
    9. 'insert' → logprob: -5.986344337463379
    10. 'ops' → logprob: -6.111344337463379

Token 680: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -2.2246291337069124e-05
    2. 'out' → logprob: -11.125021934509277
    3. 'outer' → logprob: -12.125021934509277
    4. 'outes' → logprob: -13.625021934509277
    5. 'outez' → logprob: -14.625021934509277
    6. 'ou' → logprob: -16.375022888183594
    7. 'o' → logprob: -16.500022888183594
    8. 'oue' → logprob: -17.125022888183594
    9. '#' → logprob: -17.250022888183594
    10. 'ous' → logprob: -18.125022888183594

Token 681: ' à' (ID: 1221)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.39175283908844
    2. ' ops' → logprob: -1.51675283908844
    3. ' to' → logprob: -1.64175283908844
    4. '(' → logprob: -2.1417527198791504
    5. 'to' → logprob: -2.2667527198791504
    6. '(op' → logprob: -3.2667527198791504
    7. '_ops' → logprob: -3.6417527198791504
    8. 'op' → logprob: -4.14175271987915
    9. '           ' → logprob: -4.76675271987915
    10. ' à' → logprob: -4.89175271987915

Token 682: ' la' (ID: 557)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.02335309237241745
    2. ' ops' → logprob: -3.773353099822998
    3. '_ops' → logprob: -9.89835262298584
    4. '.ops' → logprob: -10.77335262298584
    5. '   ' → logprob: -11.02335262298584
    6. 'op' → logprob: -11.64835262298584
    7. 'operations' → logprob: -13.27335262298584
    8. '```' → logprob: -13.64835262298584
    9. ' ' → logprob: -14.02335262298584
    10. 'ocs' → logprob: -14.27335262298584

Token 683: ' liste' (ID: 31719)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0001387009397149086
    2. ' ops' → logprob: -9.000138282775879
    3. 'op' → logprob: -11.875138282775879
    4. '_ops' → logprob: -12.125138282775879
    5. '.ops' → logprob: -13.250138282775879
    6. '```' → logprob: -15.375138282775879
    7. '   ' → logprob: -15.750138282775879
    8. 'opts' → logprob: -16.000139236450195
    9. 'operations' → logprob: -16.500139236450195
    10. 'aps' → logprob: -16.750139236450195

Token 684: ' des' (ID: 731)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.19278977811336517
    2. 'ops' → logprob: -2.4427897930145264
    3. '           ' → logprob: -3.3177897930145264
    4. '_ops' → logprob: -3.4427897930145264
    5. '   ' → logprob: -5.067789554595947
    6. ' op' → logprob: -5.317789554595947
    7. '.ops' → logprob: -5.817789554595947
    8. 'op' → logprob: -5.942789554595947
    9. '(op' → logprob: -7.317789554595947
    10. '.append' → logprob: -7.567789554595947

Token 685: ' pièces' (ID: 49165)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.011555730365216732
    2. ' ops' → logprob: -4.5115556716918945
    3. '_ops' → logprob: -7.8865556716918945
    4. 'op' → logprob: -9.886555671691895
    5. '.ops' → logprob: -10.511555671691895
    6. 'operations' → logprob: -10.886555671691895
    7. ' ' → logprob: -11.886555671691895
    8. 'rops' → logprob: -12.261555671691895
    9. 'aps' → logprob: -12.761555671691895
    10. '```' → logprob: -12.886555671691895

Token 686: ' disponibles' (ID: 36617)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18582259118556976
    2. '           ' → logprob: -1.935822606086731
    3. '   ' → logprob: -4.560822486877441
    4. '_ops' → logprob: -4.935822486877441
    5. ' ops' → logprob: -6.560822486877441
    6. ',' → logprob: -6.560822486877441
    7. '.' → logprob: -6.685822486877441
    8. '               ' → logprob: -6.935822486877441
    9. '.ops' → logprob: -7.310822486877441
    10. 'ops' → logprob: -7.560822486877441

Token 687: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010301886359229684
    2. ' ops' → logprob: -7.501029968261719
    3. 'ops' → logprob: -8.501029968261719
    4. '               ' → logprob: -9.376029968261719
    5. ',' → logprob: -9.501029968261719
    6. '       ' → logprob: -10.376029968261719
    7. '_ops' → logprob: -11.001029968261719
    8. '   ' → logprob: -11.126029968261719
    9. '.ops' → logprob: -11.251029968261719
    10. 'op' → logprob: -11.751029968261719

Token 688: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008481956087052822
    2. ' ops' → logprob: -5.133481979370117
    3. 'ops' → logprob: -6.758481979370117
    4. '       ' → logprob: -7.508481979370117
    5. '               ' → logprob: -7.758481979370117
    6. '.ops' → logprob: -8.633481979370117
    7. '_ops' → logprob: -9.633481979370117
    8. ',' → logprob: -10.258481979370117
    9. '   ' → logprob: -10.383481979370117
    10. '```' → logprob: -10.633481979370117

Token 689: ' ops' (ID: 26973)
  Prédit: ' ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.6733829379081726
    2. 'ops' (adapté à ' ops') → logprob: -0.9233829379081726
    3. '           ' → logprob: -2.4233829975128174
    4. '   ' → logprob: -6.048382759094238
    5. '       ' → logprob: -6.923382759094238
    6. '.ops' → logprob: -7.923382759094238
    7. '_ops' → logprob: -8.173382759094238
    8. '```' → logprob: -9.548382759094238
    9. '               ' → logprob: -10.173382759094238
    10. 'op' → logprob: -10.673382759094238

Token 690: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003178782993927598
    2. '.' → logprob: -5.753178596496582
    3. '.app' → logprob: -14.628178596496582
    4. 'append' → logprob: -15.128178596496582
    5. '.ap' → logprob: -15.628178596496582
    6. ' .' → logprob: -15.878178596496582
    7. '.add' → logprob: -17.6281795501709
    8. '.extend' → logprob: -17.7531795501709
    9. '.insert' → logprob: -17.8781795501709
    10. '.Append' → logprob: -18.2531795501709

Token 691: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 't' → logprob: -16.37501335144043
    4. '(
' → logprob: -18.87501335144043
    5. ' (' → logprob: -19.50001335144043
    6. '(T' → logprob: -20.00001335144043
    7. '	t' → logprob: -20.37501335144043
    8. ' t' → logprob: -21.87501335144043
    9. '()' → logprob: -22.00001335144043
    10. '((' → logprob: -22.12501335144043

Token 692: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06363330781459808
    2. ')' → logprob: -2.8136332035064697
    3. '           ' → logprob: -6.563633441925049
    4. ')
' → logprob: -8.56363296508789
    5. ' )
' → logprob: -9.81363296508789
    6. ')

' → logprob: -12.56363296508789
    7. ' )' → logprob: -13.43863296508789
    8. '               ' → logprob: -13.56363296508789
    9. '       ' → logprob: -14.56363296508789
    10. ')t' → logprob: -15.18863296508789

Token 693: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008912951685488224
    2. '            
' → logprob: -4.883913040161133
    3. '
' → logprob: -7.133913040161133
    4. '           
' → logprob: -8.508913040161133
    5. '```' → logprob: -8.758913040161133
    6. ' 
' → logprob: -10.133913040161133
    7. '\n' → logprob: -10.383913040161133
    8. '  
' → logprob: -11.633913040161133
    9. '<|end|>' → logprob: -11.758913040161133
    10. '        
' → logprob: -12.133913040161133

Token 694: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3000028729438782
    2. 'i' → logprob: -1.4250028133392334
    3. ' i' → logprob: -4.0500030517578125
    4. '
' → logprob: -7.8000030517578125
    5. '	i' → logprob: -8.050003051757812
    6. '            
' → logprob: -8.550003051757812
    7. '```' → logprob: -9.800003051757812
    8. '   ' → logprob: -9.800003051757812
    9. '       ' → logprob: -9.925003051757812
    10. ',i' → logprob: -10.550003051757812

Token 695: ' On' (ID: 2160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00022403974435292184
    2. ' i' → logprob: -8.750224113464355
    3. '           ' → logprob: -9.750224113464355
    4. '   ' → logprob: -12.125224113464355
    5. '	i' → logprob: -13.750224113464355
    6. '       ' → logprob: -14.750224113464355
    7. '    ' → logprob: -16.25022315979004
    8. '  ' → logprob: -16.25022315979004
    9. '            ' → logprob: -17.50022315979004
    10. ' ' → logprob: -17.62522315979004

Token 696: ' passe' (ID: 22210)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10934343934059143
    2. ' +=' → logprob: -2.4843435287475586
    3. 'i' → logprob: -4.109343528747559
    4. ' i' → logprob: -6.234343528747559
    5. '
' → logprob: -7.609343528747559
    6. '=' → logprob: -8.234343528747559
    7. ']+=' → logprob: -8.234343528747559
    8. '+' → logprob: -8.609343528747559
    9. 'increment' → logprob: -8.609343528747559
    10. ' ' → logprob: -9.109343528747559

Token 697: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10036905854940414
    2. ' à' → logprob: -2.9753689765930176
    3. ' i' → logprob: -3.2253689765930176
    4. 'à' → logprob: -5.725368976593018
    5. 'a' → logprob: -7.350368976593018
    6. ' ' → logprob: -8.600369453430176
    7. ' a' → logprob: -8.725369453430176
    8. 'au' → logprob: -9.225369453430176
    9. '=' → logprob: -9.850369453430176
    10. '   ' → logprob: -9.850369453430176

Token 698: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000713266315869987
    2. ' i' → logprob: -7.250713348388672
    3. '++' → logprob: -13.875713348388672
    4. '	i' → logprob: -14.250713348388672
    5. ' ' → logprob: -14.375713348388672
    6. '   ' → logprob: -15.000713348388672
    7. '```' → logprob: -15.375713348388672
    8. '+' → logprob: -15.625713348388672
    9. '(i' → logprob: -16.125713348388672
    10. '1' → logprob: -16.625713348388672

Token 699: ' puissance' (ID: 63494)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015731871826574206
    2. '++' → logprob: -6.626573085784912
    3. ' i' → logprob: -9.12657356262207
    4. '+' → logprob: -9.75157356262207
    5. 'next' → logprob: -9.87657356262207
    6. '```' → logprob: -11.37657356262207
    7. '+=' → logprob: -12.25157356262207
    8. ' next' → logprob: -13.00157356262207
    9. '++
' → logprob: -13.50157356262207
    10. '+++' → logprob: -13.75157356262207

Token 700: ' suivante' (ID: 107439)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00524454889819026
    2. ' i' → logprob: -5.255244731903076
    3. '+' → logprob: -12.505244255065918
    4. '++' → logprob: -12.880244255065918
    5. '(i' → logprob: -13.255244255065918
    6. '   ' → logprob: -13.630244255065918
    7. ' (' → logprob: -14.755244255065918
    8. '+=' → logprob: -15.130244255065918
    9. '    ' → logprob: -15.505244255065918
    10. ' +=' → logprob: -15.755244255065918

Token 701: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19172710180282593
    2. 'i' → logprob: -1.9417271614074707
    3. ' i' → logprob: -4.441727161407471
    4. '           ' → logprob: -5.316727161407471
    5. ' 
' → logprob: -5.816727161407471
    6. ' +=' → logprob: -6.316727161407471
    7. '=i' → logprob: -6.566727161407471
    8. '            
' → logprob: -6.691727161407471
    9. '=' → logprob: -6.816727161407471
    10. '+' → logprob: -6.941727161407471

Token 702: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8974441885948181
    2. ' i' → logprob: -1.022444248199463
    3. '           ' → logprob: -1.772444248199463
    4. '
' → logprob: -3.272444248199463
    5. ' 
' → logprob: -4.522444248199463
    6. '            
' → logprob: -5.772444248199463
    7. '	i' → logprob: -5.897444248199463
    8. '\n' → logprob: -6.397444248199463
    9. '=i' → logprob: -7.022444248199463
    10. '   ' → logprob: -7.147444248199463

Token 703: ' t' (ID: 260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003181994194164872
    2. ' i' → logprob: -5.7531819343566895
    3. '   ' → logprob: -12.628182411193848
    4. '       ' → logprob: -15.378182411193848
    5. '	i' → logprob: -15.378182411193848
    6. '```' → logprob: -15.378182411193848
    7. '    ' → logprob: -16.25318145751953
    8. '++' → logprob: -16.50318145751953
    9. '\' → logprob: -17.00318145751953
    10. ' ' → logprob: -17.12818145751953

Token 704: ' *=' (ID: 25253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007102862582542002
    2. ' =' → logprob: -7.250710487365723
    3. '*=' → logprob: -15.125710487365723
    4. '=
' → logprob: -18.500709533691406
    5. '.=' → logprob: -19.250709533691406
    6. '=

' → logprob: -19.750709533691406
    7. '+=' → logprob: -19.875709533691406
    8. '=}' → logprob: -19.875709533691406
    9. '＝' → logprob: -20.000709533691406
    10. ' *=' → logprob: -20.500709533691406

Token 705: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00020354038861114532
    2. ' op' → logprob: -8.500203132629395
    3. '	op' → logprob: -16.62520408630371
    4. 'opf' → logprob: -18.37520408630371
    5. '_op' → logprob: -20.00020408630371
    6. 'ot' → logprob: -20.12520408630371
    7. '(op' → logprob: -20.25020408630371
    8. ' ' → logprob: -20.87520408630371
    9. 'os' → logprob: -21.00020408630371
    10. 'o' → logprob: -21.12520408630371

Token 706: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036270313430577517
    2. 'i' → logprob: -6.003626823425293
    3. '   ' → logprob: -7.753626823425293
    4. '<|end|>' → logprob: -8.003626823425293
    5. ',' → logprob: -9.503626823425293
    6. '
' → logprob: -9.628626823425293
    7. ' i' → logprob: -9.878626823425293
    8. '       ' → logprob: -10.503626823425293
    9. '<|end|>' → logprob: -10.628626823425293
    10. '            
' → logprob: -10.878626823425293

Token 707: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0831432044506073
    2. '1' → logprob: -3.9581432342529297
    3. ' i' → logprob: -4.08314323425293
    4. '   ' → logprob: -4.20814323425293
    5. '           ' → logprob: -4.95814323425293
    6. '=' → logprob: -5.33314323425293
    7. '
' → logprob: -5.58314323425293
    8. ',i' → logprob: -6.20814323425293
    9. ',' → logprob: -6.33314323425293
    10. '       ' → logprob: -6.58314323425293

Token 708: ' En' (ID: 2130)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3711009919643402
    2. 'i' → logprob: -2.621100902557373
    3. '<|end|>' → logprob: -2.746100902557373
    4. ' op' → logprob: -3.246100902557373
    5. 't' → logprob: -3.371100902557373
    6. ' 
' → logprob: -3.621100902557373
    7. '1' → logprob: -4.496100902557373
    8. ' ' → logprob: -4.496100902557373
    9. '10' → logprob: -4.746100902557373
    10. '  
' → logprob: -5.121100902557373

Token 709: ' multip' (ID: 17524)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.6173825860023499
    2. 'ops' → logprob: -1.742382526397705
    3. 'op' → logprob: -1.867382526397705
    4. 't' → logprob: -3.742382526397705
    5. 'mult' → logprob: -3.992382526397705
    6. 'i' → logprob: -3.992382526397705
    7. 'increment' → logprob: -4.242382526397705
    8. '#' → logprob: -5.242382526397705
    9. ' multip' → logprob: -5.242382526397705
    10. 'continue' → logprob: -5.367382526397705

Token 710: 'li' (ID: 1307)
  Prédit: 'lication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.12143722921609879
    2. 'li' → logprob: -2.2464373111724854
    3. 'ly' → logprob: -5.871437072753906
    4. 'lying' → logprob: -6.246437072753906
    5. 'lic' → logprob: -6.371437072753906
    6. 'lié' → logprob: -6.746437072753906
    7. 'licant' → logprob: -8.121437072753906
    8. 'lications' → logprob: -8.246437072753906
    9. 'lation' → logprob: -9.121437072753906
    10. 'lica' → logprob: -9.621437072753906

Token 711: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0011390270665287971
    2. 'cant' → logprob: -7.751139163970947
    3. 'e' → logprob: -8.626138687133789
    4. 'cat' → logprob: -8.751138687133789
    5. 'er' → logprob: -9.001138687133789
    6. 'quant' → logprob: -9.376138687133789
    7. 'cation' → logprob: -9.751138687133789
    8. 'ent' → logprob: -10.626138687133789
    9. 'c' → logprob: -10.751138687133789
    10. 'çant' → logprob: -11.001138687133789

Token 712: ' à' (ID: 1221)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.004622968845069408
    2. ' op' → logprob: -5.379622936248779
    3. '(op' → logprob: -13.129623413085938
    4. '	op' → logprob: -15.004623413085938
    5. ' ' → logprob: -16.379623413085938
    6. '```' → logprob: -16.379623413085938
    7. '_op' → logprob: -16.754623413085938
    8. 'by' → logprob: -16.879623413085938
    9. '.op' → logprob: -16.879623413085938
    10. 'opf' → logprob: -17.504623413085938

Token 713: ' chaque' (ID: 21194)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0022664708085358143
    2. 't' → logprob: -6.7522664070129395
    3. ' op' → logprob: -7.7522664070129395
    4. '2' → logprob: -9.002266883850098
    5. ' ' → logprob: -9.127266883850098
    6. 'i' → logprob: -9.252266883850098
    7. '=' → logprob: -9.502266883850098
    8. 'l' → logprob: -10.252266883850098
    9. '1' → logprob: -10.502266883850098
    10. '```' → logprob: -10.627266883850098

Token 714: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.29407060146331787
    2. ' fois' → logprob: -2.0440707206726074
    3. 'tour' → logprob: -2.7940707206726074
    4. 'op' → logprob: -4.169070720672607
    5. 'iteration' → logprob: -4.794070720672607
    6. ' ' → logprob: -4.919070720672607
    7. '2' → logprob: -5.169070720672607
    8. '1' → logprob: -5.419070720672607
    9. 'pass' → logprob: -5.669070720672607
    10. 'it' → logprob: -5.919070720672607

Token 715: ' par' (ID: 686)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.10162139683961868
    2. ' op' → logprob: -2.351621389389038
    3. ' 
' → logprob: -7.476621627807617
    4. '(op' → logprob: -7.976621627807617
    5. ' ' → logprob: -8.726621627807617
    6. '2' → logprob: -9.476621627807617
    7. '```' → logprob: -10.726621627807617
    8. '10' → logprob: -10.851621627807617
    9. ' (' → logprob: -10.851621627807617
    10. '  
' → logprob: -10.976621627807617

Token 716: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.018150178715586662
    2. ' op' → logprob: -4.018150329589844
    3. '	op' → logprob: -15.518150329589844
    4. 'opf' → logprob: -16.143150329589844
    5. ' ' → logprob: -17.143150329589844
    6. '(op' → logprob: -17.268150329589844
    7. '```' → logprob: -17.518150329589844
    8. '   ' → logprob: -17.893150329589844
    9. '
' → logprob: -18.768150329589844
    10. '.op' → logprob: -19.393150329589844

Token 717: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004386558721307665
    2. '   ' → logprob: -8.875438690185547
    3. '
' → logprob: -9.125438690185547
    4. '       ' → logprob: -9.125438690185547
    5. 'i' → logprob: -10.000438690185547
    6. '```' → logprob: -11.625438690185547
    7. ',' → logprob: -11.750438690185547
    8. '<|end|>' → logprob: -12.625438690185547
    9. '<|end|>' → logprob: -12.750438690185547
    10. '               ' → logprob: -12.875438690185547

Token 718: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03793911635875702
    2. '           ' → logprob: -3.7879390716552734
    3. ' i' → logprob: -4.287939071655273
    4. '            
' → logprob: -8.537939071655273
    5. '       ' → logprob: -8.912939071655273
    6. ' ' → logprob: -9.662939071655273
    7. '   ' → logprob: -9.912939071655273
    8. ' 
' → logprob: -9.912939071655273
    9. '<|end|>' → logprob: -9.912939071655273
    10. '```' → logprob: -10.162939071655273

Token 719: ' év' (ID: 23692)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2069588005542755
    2. ' i' → logprob: -2.831958770751953
    3. '=' → logprob: -3.331958770751953
    4. '**' → logprob: -3.956958770751953
    5. '       ' → logprob: -4.581958770751953
    6. '
' → logprob: -4.706958770751953
    7. 't' → logprob: -4.831958770751953
    8. '   ' → logprob: -5.331958770751953
    9. ' ' → logprob: -5.706958770751953
    10. '```' → logprob: -5.831958770751953

Token 720: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.004361879080533981
    2. 'ient' → logprob: -6.629362106323242
    3. 'it' → logprob: -7.004362106323242
    4. 'alue' → logprob: -7.254362106323242
    5. 'olve' → logprob: -8.004362106323242
    6. 'el' → logprob: -8.254362106323242
    7. 'él' → logprob: -9.254362106323242
    8. 'ole' → logprob: -9.254362106323242
    9. 'ève' → logprob: -9.504362106323242
    10. 'élite' → logprob: -10.254362106323242

Token 721: ' de' (ID: 334)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.9606119394302368
    2. 't' → logprob: -1.3356119394302368
    3. ' op' → logprob: -1.8356119394302368
    4. ' t' → logprob: -3.2106118202209473
    5. '   ' → logprob: -3.7106118202209473
    6. '\t' → logprob: -3.9606118202209473
    7. '**' → logprob: -4.085611820220947
    8. ' ' → logprob: -4.585611820220947
    9. ')' → logprob: -4.710611820220947
    10. ' +=' → logprob: -4.710611820220947

Token 722: ' recal' (ID: 147248)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5832865834236145
    2. ' op' → logprob: -1.0832865238189697
    3. '(op' → logprob: -2.3332865238189697
    4. ' (' → logprob: -5.333286762237549
    5. '(' → logprob: -7.958286762237549
    6. '**' → logprob: -8.45828628540039
    7. '
' → logprob: -8.58328628540039
    8. '<|end|>' → logprob: -8.70828628540039
    9. ' ' → logprob: -9.08328628540039
    10. '```' → logprob: -9.33328628540039

Token 723: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.5719159245491028
    2. 'iter' → logprob: -1.446915864944458
    3. 'iser' → logprob: -3.446915864944458
    4. 'ol' → logprob: -3.696915864944458
    5. 'ancer' → logprob: -3.946915864944458
    6. '#' → logprob: -4.696916103363037
    7. 'olver' → logprob: -4.821916103363037
    8. 'c' → logprob: -5.071916103363037
    9. 'outer' → logprob: -5.321916103363037
    10. 'caler' → logprob: -5.321916103363037

Token 724: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.002084474079310894
    2. 'uer' → logprob: -6.752084255218506
    3. 'uler' → logprob: -7.877084255218506
    4. 'érer' → logprob: -8.627084732055664
    5. 't' → logprob: -9.627084732055664
    6. '#' → logprob: -10.002084732055664
    7. 'iquer' → logprob: -10.252084732055664
    8. 'iner' → logprob: -10.252084732055664
    9. '```' → logprob: -11.002084732055664
    10. 'ating' → logprob: -11.127084732055664

Token 725: ' la' (ID: 557)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.3171827495098114
    2. 'op' → logprob: -1.3171827793121338
    3. '(op' → logprob: -6.317182540893555
    4. '```' → logprob: -7.317182540893555
    5. ')' → logprob: -8.192182540893555
    6. ' )' → logprob: -8.317182540893555
    7. ' 
' → logprob: -8.942182540893555
    8. '<|end|>' → logprob: -9.067182540893555
    9. ' ' → logprob: -9.317182540893555
    10. ' ```' → logprob: -9.442182540893555

Token 726: ' puissance' (ID: 63494)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.18001897633075714
    2. ' op' → logprob: -1.8050190210342407
    3. ' ' → logprob: -8.68001937866211
    4. '
' → logprob: -10.43001937866211
    5. '**' → logprob: -10.93001937866211
    6. '(op' → logprob: -11.18001937866211
    7. ' 
' → logprob: -11.55501937866211
    8. '```' → logprob: -11.80501937866211
    9. 'space' → logprob: -12.30501937866211
    10. 'opf' → logprob: -12.68001937866211

Token 727: ' avec' (ID: 3937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014776058960705996
    2. '
' → logprob: -7.0014777183532715
    3. '   ' → logprob: -9.251477241516113
    4. '       ' → logprob: -9.251477241516113
    5. '<|end|>' → logprob: -9.251477241516113
    6. '            
' → logprob: -9.501477241516113
    7. '\n' → logprob: -10.001477241516113
    8. ',' → logprob: -10.001477241516113
    9. '<|end|>' → logprob: -10.376477241516113
    10. '               ' → logprob: -10.876477241516113

Token 728: ' **
' (ID: 88561)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.041175611317157745
    2. '**' → logprob: -3.291175603866577
    3. ' op' → logprob: -6.541175842285156
    4. 'pow' → logprob: -7.041175842285156
    5. 't' → logprob: -8.666175842285156
    6. '```' → logprob: -8.916175842285156
    7. 'i' → logprob: -9.041175842285156
    8. ' ' → logprob: -9.916175842285156
    9. '*' → logprob: -10.541175842285156
    10. '`' → logprob: -10.541175842285156

Token 729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004092235758434981
    2. '       ' → logprob: -8.375409126281738
    3. '   ' → logprob: -9.000409126281738
    4. '		' → logprob: -11.500409126281738
    5. 'i' → logprob: -11.625409126281738
    6. '	       ' → logprob: -11.625409126281738
    7. '<|end|>' → logprob: -12.500409126281738
    8. '
' → logprob: -12.625409126281738
    9. '	   ' → logprob: -12.625409126281738
    10. '<|end|>' → logprob: -12.625409126281738

Token 730: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002693959278985858
    2. 'i' → logprob: -6.002694129943848
    3. '       ' → logprob: -8.877694129943848
    4. '   ' → logprob: -9.752694129943848
    5. ' i' → logprob: -11.127694129943848
    6. '               ' → logprob: -13.377694129943848
    7. '	       ' → logprob: -14.252694129943848
    8. '            
' → logprob: -14.377694129943848
    9. '		' → logprob: -14.377694129943848
    10. '
' → logprob: -14.627694129943848

Token 731: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03796425834298134
    2. '       ' → logprob: -4.037964344024658
    3. '           ' → logprob: -4.412964344024658
    4. ' i' → logprob: -5.162964344024658
    5. '   ' → logprob: -6.412964344024658
    6. '        ' → logprob: -10.6629638671875
    7. '	i' → logprob: -10.9129638671875
    8. '    ' → logprob: -11.2879638671875
    9. '      ' → logprob: -11.2879638671875
    10. '         ' → logprob: -11.4129638671875

Token 732: 'par' (ID: 796)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01221905741840601
    2. ' i' → logprob: -5.387218952178955
    3. '           ' → logprob: -5.512218952178955
    4. '   ' → logprob: -6.637218952178955
    5. '       ' → logprob: -6.637218952178955
    6. ')' → logprob: -7.512218952178955
    7. ')i' → logprob: -8.512219429016113
    8. '               ' → logprob: -10.137219429016113
    9. '```' → logprob: -10.387219429016113
    10. ' ' → logprob: -11.387219429016113

Token 733: ' exemple' (ID: 26320)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19583746790885925
    2. 'ex' → logprob: -2.6958374977111816
    3. 'fois' → logprob: -3.3208374977111816
    4. 'fait' → logprob: -3.4458374977111816
    5. 'contre' → logprob: -4.945837497711182
    6. 'contin' → logprob: -5.195837497711182
    7. 'ce' → logprob: -5.320837497711182
    8. '#' → logprob: -5.695837497711182
    9. 'con' → logprob: -5.820837497711182
    10. 'increment' → logprob: -5.945837497711182

Token 734: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2502380609512329
    2. ' i' → logprob: -2.0002379417419434
    3. '           ' → logprob: -2.7502379417419434
    4. ')' → logprob: -5.375237941741943
    5. '   ' → logprob: -5.375237941741943
    6. '       ' → logprob: -5.625237941741943
    7. '               ' → logprob: -6.125237941741943
    8. '#' → logprob: -6.375237941741943
    9. 't' → logprob: -6.625237941741943
    10. ' t' → logprob: -7.375237941741943

Token 735: '6' (ID: 21)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005178847350180149
    2. ' i' → logprob: -5.630178928375244
    3. 'op' → logprob: -7.505178928375244
    4. '   ' → logprob: -8.005178451538086
    5. ')' → logprob: -8.255178451538086
    6. '       ' → logprob: -9.630178451538086
    7. 't' → logprob: -9.630178451538086
    8. '
' → logprob: -10.005178451538086
    9. ' op' → logprob: -10.005178451538086
    10. ' ' → logprob: -10.130178451538086

Token 736: ',' (ID: 11)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.36602169275283813
    2. ' **' → logprob: -1.9910216331481934
    3. '*i' → logprob: -3.1160216331481934
    4. ')' → logprob: -3.4910216331481934
    5. ' *=' → logprob: -3.6160216331481934
    6. ' ' → logprob: -4.241021633148193
    7. ' +=' → logprob: -4.491021633148193
    8. '*' → logprob: -4.616021633148193
    9. '   ' → logprob: -4.866021633148193
    10. ' *' → logprob: -4.991021633148193

Token 737: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41278380155563354
    2. '   ' → logprob: -2.0377838611602783
    3. '       ' → logprob: -2.2877838611602783
    4. ' i' → logprob: -3.1627838611602783
    5. ' ' → logprob: -3.9127838611602783
    6. '9' → logprob: -4.287783622741699
    7. '  ' → logprob: -5.037783622741699
    8. '12' → logprob: -5.162783622741699
    9. '           ' → logprob: -5.787783622741699
    10. '18' → logprob: -6.162783622741699

Token 738: '36' (ID: 2636)
  Prédit: '36'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '36' → logprob: -0.22051294147968292
    2. 'i' → logprob: -2.095512866973877
    3. '6' → logprob: -2.720512866973877
    4. '   ' → logprob: -5.720512866973877
    5. ' ' → logprob: -6.345512866973877
    6. '9' → logprob: -6.595512866973877
    7. 't' → logprob: -7.095512866973877
    8. ' i' → logprob: -7.095512866973877
    9. '  ' → logprob: -8.720513343811035
    10. '
' → logprob: -8.970513343811035

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003979377914220095
    2. ')' → logprob: -5.628979206085205
    3. '6' → logprob: -8.878979682922363
    4. ' ,' → logprob: -9.503979682922363
    5. ',
' → logprob: -9.878979682922363
    6. '           ' → logprob: -10.378979682922363
    7. '),' → logprob: -10.753979682922363
    8. '   ' → logprob: -11.253979682922363
    9. ')
' → logprob: -11.628979682922363
    10. '       ' → logprob: -11.628979682922363

Token 740: ' ' (ID: 220)
  Prédit: '216'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '216' → logprob: -1.8908587662735954e-05
    2. '217' → logprob: -12.375019073486328
    3. '2' → logprob: -12.500019073486328
    4. ' ' → logprob: -12.625019073486328
    5. '```' → logprob: -12.625019073486328
    6. '...' → logprob: -12.875019073486328
    7. '   ' → logprob: -14.625019073486328
    8. '  ' → logprob: -14.750019073486328
    9. '``' → logprob: -15.875019073486328
    10. '(' → logprob: -16.125019073486328

Token 741: '216' (ID: 22705)
  Prédit: '216'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '216' → logprob: -1.676292231422849e-05
    2. '```' → logprob: -11.625017166137695
    3. '217' → logprob: -12.625017166137695
    4. '...' → logprob: -13.125017166137695
    5. ' ' → logprob: -14.500017166137695
    6. '2' → logprob: -14.875017166137695
    7. '   ' → logprob: -15.125017166137695
    8. '``' → logprob: -15.125017166137695
    9. '  ' → logprob: -15.375017166137695
    10. '
' → logprob: -15.500017166137695

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47670894861221313
    2. ')' → logprob: -0.9767089486122131
    3. '...)' → logprob: -6.351708889007568
    4. '...' → logprob: -7.351708889007568
    5. ',...' → logprob: -8.976709365844727
    6. ',
' → logprob: -10.851709365844727
    7. '   ' → logprob: -11.101709365844727
    8. ' etc' → logprob: -11.476709365844727
    9. ' ,' → logprob: -11.601709365844727
    10. ')
' → logprob: -11.726709365844727

Token 743: ' ...' (ID: 2550)
  Prédit: '129'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '129' → logprob: -0.0001664717128733173
    2. ' ' → logprob: -8.875166893005371
    3. '```' → logprob: -11.625166893005371
    4. '...' → logprob: -12.000166893005371
    5. '   ' → logprob: -12.250166893005371
    6. '  ' → logprob: -13.250166893005371
    7. '1' → logprob: -13.375166893005371
    8. '``' → logprob: -13.500166893005371
    9. '...
' → logprob: -14.625166893005371
    10. '
' → logprob: -14.625166893005371

Token 744: ')

' (ID: 1029)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054071154445409775
    2. ')' → logprob: -5.255407333374023
    3. '       ' → logprob: -9.505407333374023
    4. ',' → logprob: -10.005407333374023
    5. 'i' → logprob: -11.380407333374023
    6. '   ' → logprob: -11.630407333374023
    7. ')
' → logprob: -11.755407333374023
    8. '          ' → logprob: -12.255407333374023
    9. '```' → logprob: -12.630407333374023
    10. ' i' → logprob: -12.880407333374023

Token 745: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02637159638106823
    2. '       ' → logprob: -3.776371479034424
    3. '   ' → logprob: -6.276371479034424
    4. '```' → logprob: -7.651371479034424
    5. '
' → logprob: -8.026371955871582
    6. '<|end|>' → logprob: -8.276371955871582
    7. '<|end|>' → logprob: -9.276371955871582
    8. '            
' → logprob: -11.151371955871582
    9. '        
' → logprob: -11.151371955871582
    10. '    
' → logprob: -11.276371955871582

Token 746: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05321666970849037
    2. 'ops' → logprob: -3.3032166957855225
    3. '
' → logprob: -5.053216457366943
    4. ' ops' → logprob: -5.428216457366943
    5. '    
' → logprob: -6.553216457366943
    6. 'min' → logprob: -7.053216457366943
    7. '```' → logprob: -7.803216457366943
    8. 'op' → logprob: -8.678216934204102
    9. '  ' → logprob: -8.678216934204102
    10. '#' (adapté à ' #') → logprob: -8.678216934204102

Token 747: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.24841412901878357
    2. 'ops' → logprob: -1.623414158821106
    3. '#' → logprob: -4.748414039611816
    4. '   ' → logprob: -5.498414039611816
    5. 'memo' → logprob: -5.623414039611816
    6. 'result' → logprob: -6.498414039611816
    7. 'op' → logprob: -6.498414039611816
    8. '
' → logprob: -7.498414039611816
    9. 'results' → logprob: -7.998414039611816
    10. ' min' → logprob: -7.998414039611816

Token 748: ' sup' (ID: 1982)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.7528021931648254
    2. '.sort' → logprob: -0.7528021931648254
    3. 'sort' → logprob: -3.1278021335601807
    4. '=' → logprob: -5.25280237197876
    5. '.' → logprob: -5.62780237197876
    6. ' ops' → logprob: -6.12780237197876
    7. ' =' → logprob: -7.12780237197876
    8. '.ops' → logprob: -7.12780237197876
    9. '_ops' → logprob: -7.87780237197876
    10. 'op' → logprob: -7.87780237197876

Token 749: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.11446347832679749
    2. 'port' → logprob: -2.7394635677337646
    3. 'prim' → logprob: -3.9894635677337646
    4. 'er' → logprob: -4.9894633293151855
    5. 'p' → logprob: -5.7394633293151855
    6. 'r' → logprob: -5.9894633293151855
    7. 'ort' → logprob: -5.9894633293151855
    8. 'primer' → logprob: -6.4894633293151855
    9. 'pr' → logprob: -6.7394633293151855
    10. 'print' → logprob: -6.9894633293151855

Token 750: ' les' (ID: 1341)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.4176139533519745
    2. ' ops' → logprob: -1.9176139831542969
    3. '[' → logprob: -2.792613983154297
    4. '[]' → logprob: -2.917613983154297
    5. ' duplicates' → logprob: -3.667613983154297
    6. 'duplicates' → logprob: -4.167613983154297
    7. '[]
' → logprob: -4.417613983154297
    8. '   ' → logprob: -5.292613983154297
    9. '(' → logprob: -5.292613983154297
    10. '_ops' → logprob: -5.667613983154297

Token 751: ' doubl' (ID: 127992)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.4053262770175934
    2. ' duplicates' → logprob: -1.905326247215271
    3. 'ops' → logprob: -2.1553263664245605
    4. 'duplicate' → logprob: -3.0303263664245605
    5. '_duplicates' → logprob: -4.7803263664245605
    6. ' duplicate' → logprob: -4.7803263664245605
    7. ' ops' → logprob: -6.7803263664245605
    8. '_duplicate' → logprob: -7.6553263664245605
    9. '_ops' → logprob: -7.9053263664245605
    10. '   ' → logprob: -8.030325889587402

Token 752: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.022530432790517807
    2. 'és' → logprob: -3.8975303173065186
    3. 'ets' → logprob: -6.647530555725098
    4. 'ic' → logprob: -8.397530555725098
    5. 'onts' → logprob: -9.022530555725098
    6. 'i' → logprob: -10.022530555725098
    7. 'ies' → logprob: -10.397530555725098
    8. 'ions' → logprob: -10.397530555725098
    9. 'ics' → logprob: -10.647530555725098
    10. 'ications' → logprob: -10.772530555725098

Token 753: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009826688095927238
    2. ' =' → logprob: -5.00982666015625
    3. ',' → logprob: -7.00982666015625
    4. '    
' → logprob: -7.00982666015625
    5. 'ops' → logprob: -8.13482666015625
    6. '_ops' → logprob: -8.63482666015625
    7. ' ops' → logprob: -8.88482666015625
    8. ' and' → logprob: -9.13482666015625
    9. '=' → logprob: -9.25982666015625
    10. '
' → logprob: -9.38482666015625

Token 754: ' la' (ID: 557)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.035854510962963104
    2. 'list' → logprob: -3.5358545780181885
    3. 'set' → logprob: -5.410854339599609
    4. ' list' → logprob: -7.160854339599609
    5. ' ops' → logprob: -7.535854339599609
    6. '   ' → logprob: -9.03585433959961
    7. 'op' → logprob: -9.53585433959961
    8. ' set' → logprob: -9.66085433959961
    9. '```' → logprob: -11.03585433959961
    10. '_ops' → logprob: -11.78585433959961

Token 755: ' liste' (ID: 31719)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0010609137825667858
    2. ' ops' → logprob: -6.876060962677002
    3. '   ' → logprob: -12.501060485839844
    4. 'opts' → logprob: -12.501060485839844
    5. '.ops' → logprob: -12.501060485839844
    6. 'op' → logprob: -12.626060485839844
    7. '```' → logprob: -12.876060485839844
    8. '_ops' → logprob: -13.126060485839844
    9. 'list' → logprob: -13.251060485839844
    10. ' ' → logprob: -13.501060485839844

Token 756: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016707733273506165
    2. 'ops' → logprob: -4.391707897186279
    3. '(' → logprob: -6.266707897186279
    4. ' =' → logprob: -6.516707897186279
    5. ' ops' → logprob: -8.016707420349121
    6. ',' → logprob: -8.891707420349121
    7. '=' → logprob: -9.016707420349121
    8. 's' → logprob: -9.891707420349121
    9. '_ops' → logprob: -10.016707420349121
    10. ':' → logprob: -10.891707420349121

Token 757: ' pièces' (ID: 49165)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0048524304293096066
    2. ' ops' → logprob: -5.379852294921875
    3. '```' → logprob: -9.254852294921875
    4. 'op' → logprob: -9.754852294921875
    5. '.ops' → logprob: -11.004852294921875
    6. '_ops' → logprob: -11.129852294921875
    7. '   ' → logprob: -11.504852294921875
    8. ' ' → logprob: -12.004852294921875
    9. 'operations' → logprob: -12.379852294921875
    10. 'aps' → logprob: -12.629852294921875

Token 758: ' disponibles' (ID: 36617)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4729017913341522
    2. '=' → logprob: -1.7229018211364746
    3. '   ' → logprob: -1.7229018211364746
    4. 'ops' → logprob: -4.097901821136475
    5. ',' → logprob: -6.597901821136475
    6. '_ops' → logprob: -7.972901821136475
    7. 's' → logprob: -8.472901344299316
    8. '    
' → logprob: -8.597901344299316
    9. '(' → logprob: -8.597901344299316
    10. ' ops' → logprob: -9.097901344299316

Token 759: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024013224174268544
    2. 'ops' → logprob: -8.625240325927734
    3. ',' → logprob: -10.250240325927734
    4. '    
' → logprob: -11.500240325927734
    5. '
' → logprob: -11.625240325927734
    6. ' ops' → logprob: -13.125240325927734
    7. '_ops' → logprob: -14.000240325927734
    8. '(' → logprob: -14.750240325927734
    9. ' =' → logprob: -14.875240325927734
    10. '	' → logprob: -15.250240325927734

Token 760: ' les' (ID: 1341)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.7258965373039246
    2. 'ops' → logprob: -1.4758965969085693
    3. 'list' → logprob: -1.7258965969085693
    4. '   ' → logprob: -2.7258965969085693
    5. 'transform' → logprob: -3.4758965969085693
    6. 'op' → logprob: -5.85089635848999
    7. ' converting' → logprob: -6.22589635848999
    8. 'set' → logprob: -6.60089635848999
    9. '    ' → logprob: -6.85089635848999
    10. 'sorted' → logprob: -7.10089635848999

Token 761: ' transform' (ID: 7118)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.17624738812446594
    2. 'list' → logprob: -2.4262473583221436
    3. 'set' → logprob: -2.9262473583221436
    4. 'ops' → logprob: -4.176247596740723
    5. 'sort' → logprob: -5.676247596740723
    6. ' sorted' → logprob: -7.676247596740723
    7. 'op' → logprob: -8.926247596740723
    8. '   ' → logprob: -9.676247596740723
    9. ' ops' → logprob: -10.051247596740723
    10. '=list' → logprob: -10.426247596740723

Token 762: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00853550061583519
    2. '   ' → logprob: -6.008535385131836
    3. 'ops' → logprob: -6.508535385131836
    4. 'ing' → logprob: -6.758535385131836
    5. 'int' → logprob: -6.883535385131836
    6. ' en' → logprob: -7.633535385131836
    7. 'ats' → logprob: -8.008535385131836
    8. 'set' → logprob: -8.133535385131836
    9. 'into' → logprob: -8.258535385131836
    10. '```' → logprob: -9.008535385131836

Token 763: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.12703678011894226
    2. ' en' → logprob: -2.1270368099212646
    3. '=' → logprob: -10.377037048339844
    4. '   ' → logprob: -10.502037048339844
    5. 'in' → logprob: -11.002037048339844
    6. ' =' → logprob: -11.377037048339844
    7. 'into' → logprob: -12.252037048339844
    8. ' in' → logprob: -12.877037048339844
    9. ' into' → logprob: -13.002037048339844
    10. '_en' → logprob: -13.002037048339844

Token 764: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.001171056181192398
    2. ' set' → logprob: -6.751171112060547
    3. 'list' → logprob: -14.501171112060547
    4. 'sorted' → logprob: -15.501171112060547
    5. 'sets' → logprob: -17.501171112060547
    6. '   ' → logprob: -17.876171112060547
    7. '```' → logprob: -17.876171112060547
    8. ')set' → logprob: -18.376171112060547
    9. '	set' → logprob: -18.501171112060547
    10. '=set' → logprob: -18.626171112060547

Token 765: ' puis' (ID: 18766)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31649455428123474
    2. '   ' → logprob: -1.3164945840835571
    3. ',' → logprob: -7.191494464874268
    4. 'ops' → logprob: -7.191494464874268
    5. '()' → logprob: -7.441494464874268
    6. '_ops' → logprob: -7.941494464874268
    7. 's' → logprob: -8.566494941711426
    8. ' (' → logprob: -8.941494941711426
    9. '()
' → logprob: -9.066494941711426
    10. '```' → logprob: -9.441494941711426

Token 766: ' en' (ID: 469)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7058805823326111
    2. ' back' → logprob: -1.3308806419372559
    3. ' list' → logprob: -1.4558806419372559
    4. ' en' → logprob: -6.330880641937256
    5. '   ' → logprob: -7.205880641937256
    6. 'back' → logprob: -7.205880641937256
    7. 'sorted' → logprob: -7.455880641937256
    8. ' sorted' → logprob: -7.455880641937256
    9. ' retour' → logprob: -7.455880641937256
    10. ' revenir' → logprob: -7.580880641937256

Token 767: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01815216802060604
    2. ' list' → logprob: -4.018152236938477
    3. 'sorted' → logprob: -13.643152236938477
    4. 'set' → logprob: -14.643152236938477
    5. '```' → logprob: -15.018152236938477
    6. 'liste' → logprob: -15.143152236938477
    7. '   ' → logprob: -17.018152236938477
    8. ' liste' → logprob: -17.268152236938477
    9. ' sorted' → logprob: -17.393152236938477
    10. ' set' → logprob: -18.268152236938477

Token 768: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019625357817858458
    2. 'ops' → logprob: -6.876962661743164
    3. '(' → logprob: -7.251962661743164
    4. ',' → logprob: -9.376962661743164
    5. ' =' → logprob: -9.876962661743164
    6. ' ops' → logprob: -10.126962661743164
    7. '_ops' → logprob: -11.126962661743164
    8. '=' → logprob: -11.876962661743164
    9. '()' → logprob: -12.251962661743164
    10. '    
' → logprob: -12.501962661743164

Token 769: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0799187645316124
    2. 'ops' → logprob: -2.57991886138916
    3. ' ops' → logprob: -7.32991886138916
    4. '```' → logprob: -9.07991886138916
    5. '_ops' → logprob: -9.07991886138916
    6. '(' → logprob: -9.70491886138916
    7. ',' → logprob: -10.57991886138916
    8. '.ops' → logprob: -10.70491886138916
    9. '[' → logprob: -12.07991886138916
    10. 'op' → logprob: -12.20491886138916

Token 770: ' ops' (ID: 26973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10083766281604767
    2. 'ops' (adapté à ' ops') → logprob: -2.4758377075195312
    3. ' ops' → logprob: -4.475837707519531
    4. '```' → logprob: -8.850837707519531
    5. '_ops' → logprob: -9.225837707519531
    6. '.ops' → logprob: -9.850837707519531
    7. ' =' → logprob: -10.225837707519531
    8. 'op' → logprob: -10.850837707519531
    9. '    
' → logprob: -10.975837707519531
    10. ' ' → logprob: -11.100837707519531

Token 771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '＝' → logprob: -18.880233764648438
    4. '=set' → logprob: -19.130233764648438
    5. '.=' → logprob: -19.630233764648438
    6. '=list' → logprob: -19.880233764648438
    7. ',' → logprob: -20.130233764648438
    8. '   ' → logprob: -20.255233764648438
    9. '=
' → logprob: -20.380233764648438
    10. '.sort' → logprob: -20.505233764648438

Token 772: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014171505346894264
    2. ' list' → logprob: -4.264171600341797
    3. 'sorted' → logprob: -11.764171600341797
    4. '   ' → logprob: -16.139171600341797
    5. ' sorted' → logprob: -16.764171600341797
    6. '(list' → logprob: -18.264171600341797
    7. '	list' → logprob: -18.389171600341797
    8. 'set' → logprob: -18.639171600341797
    9. '```' → logprob: -19.014171600341797
    10. 'List' → logprob: -19.139171600341797

Token 773: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -3.297462171758525e-05
    2. '(dict' → logprob: -10.500033378601074
    3. '(sorted' → logprob: -12.500033378601074
    4. '(' → logprob: -13.375033378601074
    5. 'set' → logprob: -15.625033378601074
    6. '=set' → logprob: -17.500032424926758
    7. 'dict' → logprob: -19.750032424926758
    8. '(sort' → logprob: -20.125032424926758
    9. '(
' → logprob: -20.375032424926758
    10. '(Set' → logprob: -21.000032424926758

Token 774: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. ' (' → logprob: -14.250000953674316
    3. 'ops' → logprob: -15.750000953674316
    4. '(
' → logprob: -17.375
    5. ')' → logprob: -17.875
    6. '```' → logprob: -19.375
    7. '())' → logprob: -20.25
    8. '_ops' → logprob: -20.375
    9. ')(' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 775: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0007166040013544261
    2. '(' → logprob: -7.250716686248779
    3. ' ops' → logprob: -12.000716209411621
    4. '_ops' → logprob: -15.750716209411621
    5. ')' → logprob: -16.375717163085938
    6. 'op' → logprob: -16.500717163085938
    7. 'Ops' → logprob: -16.750717163085938
    8. '   ' → logprob: -16.875717163085938
    9. '.ops' → logprob: -17.000717163085938
    10. 'OPS' → logprob: -17.375717163085938

Token 776: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12700317800045013
    2. ')' → logprob: -2.1270031929016113
    3. '())' → logprob: -10.502002716064453
    4. '()))' → logprob: -11.002002716064453
    5. '   ' → logprob: -11.502002716064453
    6. '))
' → logprob: -11.752002716064453
    7. ' ))' → logprob: -12.502002716064453
    8. ')))' → logprob: -12.752002716064453
    9. '(' → logprob: -12.752002716064453
    10. ' )' → logprob: -13.627002716064453

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02261890284717083
    2. '
' → logprob: -4.147618770599365
    3. '    
' → logprob: -5.272618770599365
    4. '.sort' → logprob: -7.647618770599365
    5. '```' → logprob: -7.647618770599365
    6. '  
' → logprob: -8.772619247436523
    7. 'ops' → logprob: -9.522619247436523
    8. '   
' → logprob: -9.522619247436523
    9. '<|end|>' → logprob: -10.397619247436523
    10. 'sort' → logprob: -11.147619247436523

Token 778: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03001890704035759
    2. 'min' → logprob: -4.0300188064575195
    3. 'ops' → logprob: -4.5300188064575195
    4. '```' → logprob: -7.5300188064575195
    5. '
' → logprob: -8.15501880645752
    6. '    
' → logprob: -10.15501880645752
    7. 'op' → logprob: -10.40501880645752
    8. ' min' → logprob: -10.78001880645752
    9. 'result' → logprob: -11.15501880645752
    10. '	min' → logprob: -11.28001880645752

Token 779: ' On' (ID: 2160)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.13368654251098633
    2. '   ' → logprob: -2.1336865425109863
    3. 'min' → logprob: -5.508686542510986
    4. ' ops' → logprob: -6.758686542510986
    5. '#' → logprob: -7.258686542510986
    6. 'result' → logprob: -8.133686065673828
    7. '
' → logprob: -9.133686065673828
    8. 'print' → logprob: -9.758686065673828
    9. '```' → logprob: -9.758686065673828
    10. 'minimum' → logprob: -10.508686065673828

Token 780: ' trie' (ID: 139428)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.011821064166724682
    2. '.sort' → logprob: -4.886821269989014
    3. 'sort' → logprob: -6.011821269989014
    4. '   ' → logprob: -7.261821269989014
    5. ' ops' → logprob: -7.261821269989014
    6. 'op' → logprob: -9.386820793151855
    7. '_ops' → logprob: -9.886820793151855
    8. '.ops' → logprob: -10.011820793151855
    9. '
' → logprob: -10.261820793151855
    10. '#' → logprob: -10.261820793151855

Token 781: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008621551096439362
    2. 'ops' → logprob: -4.758621692657471
    3. '(
' → logprob: -12.508621215820312
    4. '_ops' → logprob: -13.883621215820312
    5. '   ' → logprob: -14.258621215820312
    6. ' ops' → logprob: -14.508621215820312
    7. '(sorted' → logprob: -14.883621215820312
    8. '()' → logprob: -15.133621215820312
    9. '```' → logprob: -15.133621215820312
    10. 'sorted' → logprob: -15.258621215820312

Token 782: ' liste' (ID: 31719)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0031929241959005594
    2. ' ops' → logprob: -5.753192901611328
    3. '_ops' → logprob: -12.128192901611328
    4. '.ops' → logprob: -12.878192901611328
    5. '   ' → logprob: -13.003192901611328
    6. 'sorted' → logprob: -13.128192901611328
    7. 'op' → logprob: -14.253192901611328
    8. '```' → logprob: -14.253192901611328
    9. 's' → logprob: -14.378192901611328
    10. 'aps' → logprob: -15.253192901611328

Token 783: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.881560041918419e-05
    2. 'ops' → logprob: -11.000039100646973
    3. '(sorted' → logprob: -11.000039100646973
    4. '(
' → logprob: -12.625039100646973
    5. '()' → logprob: -14.000039100646973
    6. 'sorted' → logprob: -14.500039100646973
    7. '   ' → logprob: -14.750039100646973
    8. ' (' → logprob: -16.125038146972656
    9. '_ops' → logprob: -17.250038146972656
    10. '(sort' → logprob: -17.250038146972656

Token 784: ' pièces' (ID: 49165)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0002582402084954083
    2. ' ops' → logprob: -8.375258445739746
    3. 'op' → logprob: -10.875258445739746
    4. '```' → logprob: -12.875258445739746
    5. '_ops' → logprob: -13.500258445739746
    6. '.ops' → logprob: -13.750258445739746
    7. 'operations' → logprob: -14.000258445739746
    8. 'opts' → logprob: -14.375258445739746
    9. '   ' → logprob: -15.000258445739746
    10. ' ' → logprob: -15.250258445739746

Token 785: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1321374773979187
    2. '()' → logprob: -2.2571375370025635
    3. '.sort' → logprob: -4.507137298583984
    4. '()
' → logprob: -5.507137298583984
    5. '(sorted' → logprob: -6.382137298583984
    6. 'ops' → logprob: -6.632137298583984
    7. '   ' → logprob: -8.007137298583984
    8. 'sorted' → logprob: -8.507137298583984
    9. '(sort' → logprob: -9.132137298583984
    10. 'sort' → logprob: -9.257137298583984

Token 786: ' ordre' (ID: 103061)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.9841930866241455
    2. 'ordre' → logprob: -0.9841930866241455
    3. ' ordre' → logprob: -1.8591930866241455
    4. ' ops' → logprob: -3.1091930866241455
    5. 'op' → logprob: -3.3591930866241455
    6. 'reverse' → logprob: -5.609192848205566
    7. 'sorted' → logprob: -5.609192848205566
    8. '.sort' → logprob: -6.859192848205566
    9. 'aps' → logprob: -6.984192848205566
    10. 'ascending' → logprob: -6.984192848205566

Token 787: ' décro' (ID: 176854)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.002190233441069722
    2. ' cro' → logprob: -6.377190113067627
    3. 'asc' → logprob: -8.002190589904785
    4. 'ops' → logprob: -9.127190589904785
    5. 'Cro' → logprob: -10.877190589904785
    6. ' Cro' → logprob: -12.377190589904785
    7. 'op' → logprob: -12.502190589904785
    8. '   ' → logprob: -12.502190589904785
    9. ' crescente' → logprob: -12.877190589904785
    10. 'ascending' → logprob: -13.002190589904785

Token 788: 'issant' (ID: 31359)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.475973904132843
    2. 'cro' → logprob: -2.2259738445281982
    3. 'desc' → logprob: -3.2259738445281982
    4. 'dent' → logprob: -3.3509738445281982
    5. 'de' → logprob: -3.4759738445281982
    6. 'v' → logprob: -3.7259738445281982
    7. 'ro' → logprob: -3.7259738445281982
    8. 'cent' → logprob: -4.975974082946777
    9. 'ron' → logprob: -5.225974082946777
    10. 'vant' → logprob: -5.225974082946777

Token 789: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08076780289411545
    2. '(' → logprob: -3.330767869949341
    3. 'ops' → logprob: -3.580767869949341
    4. '()' → logprob: -4.955767631530762
    5. ')' → logprob: -5.705767631530762
    6. '()
' → logprob: -5.955767631530762
    7. '.sort' → logprob: -8.705767631530762
    8. ' ops' → logprob: -9.080767631530762
    9. '```' → logprob: -9.205767631530762
    10. ',' → logprob: -9.330767631530762

Token 790: ' ce' (ID: 2357)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.34149786829948425
    2. 'ops' → logprob: -1.7164978981018066
    3. '   ' → logprob: -2.2164978981018066
    4. '.ops' → logprob: -7.841497898101807
    5. '_ops' → logprob: -8.591497421264648
    6. '```' → logprob: -12.091497421264648
    7. '    
' → logprob: -12.216497421264648
    8. '    ' → logprob: -12.591497421264648
    9. '  ' → logprob: -13.216497421264648
    10. 'Ops' → logprob: -13.216497421264648

Token 791: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.331763356924057
    2. ' reverse' → logprob: -2.33176326751709
    3. '.reverse' → logprob: -3.20676326751709
    4. '_ops' → logprob: -3.83176326751709
    5. ' =' → logprob: -3.95676326751709
    6. '=' → logprob: -3.95676326751709
    7. ' def' → logprob: -4.08176326751709
    8. '.sort' → logprob: -4.58176326751709
    9. 'def' → logprob: -4.70676326751709
    10. '[::-' → logprob: -4.95676326751709

Token 792: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025325141847133636
    2. ' =' → logprob: -4.025325298309326
    3. '   ' → logprob: -5.900325298309326
    4. 'ops' → logprob: -6.525325298309326
    5. '_ops' → logprob: -6.650325298309326
    6. '=
' → logprob: -6.775325298309326
    7. ' ops' → logprob: -8.525324821472168
    8. '.sort' → logprob: -10.025324821472168
    9. 'sort' → logprob: -10.775324821472168
    10. '=[]
' → logprob: -10.900324821472168

Token 793: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.08080881834030151
    2. 'pas' → logprob: -2.5808088779449463
    3. '   ' → logprob: -6.830808639526367
    4. '#' → logprob: -8.580808639526367
    5. '_pas' → logprob: -9.455808639526367
    6. 'aps' → logprob: -9.705808639526367
    7. 'Pas' → logprob: -10.205808639526367
    8. 'a' → logprob: -10.330808639526367
    9. ' =' → logprob: -10.455808639526367
    10. '```' → logprob: -10.580808639526367

Token 794: ' obligatoire' (ID: 109362)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.108332633972168
    2. 'op' → logprob: -1.358332633972168
    3. ')' → logprob: -2.483332633972168
    4. '<|end|>' → logprob: -3.358332633972168
    5. ',' → logprob: -3.608332633972168
    6. '=True' → logprob: -3.733332633972168
    7. ' reverse' → logprob: -3.733332633972168
    8. ' ops' → logprob: -3.858332633972168
    9. 'reverse' → logprob: -3.858332633972168
    10. '.reverse' → logprob: -4.233332633972168

Token 795: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0781866312026978
    2. '()
' → logprob: -1.4531866312026978
    3. 'ops' → logprob: -1.5781866312026978
    4. '   ' → logprob: -2.078186511993408
    5. ',' → logprob: -3.453186511993408
    6. '()' → logprob: -3.703186511993408
    7. ')' → logprob: -4.328186511993408
    8. ')
' → logprob: -4.828186511993408
    9. '_ops' → logprob: -5.203186511993408
    10. '
' → logprob: -5.578186511993408

Token 796: ' l' (ID: 305)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.4495457410812378
    2. 'ops' → logprob: -2.0745458602905273
    3. ' op' → logprob: -2.5745458602905273
    4. ' la' → logprob: -2.6995458602905273
    5. ' l' → logprob: -3.4495458602905273
    6. ' count' → logprob: -4.449545860290527
    7. 'op' → logprob: -4.574545860290527
    8. 'count' → logprob: -4.949545860290527
    9. '   ' → logprob: -5.074545860290527
    10. ' range' → logprob: -5.449545860290527

Token 797: ''' (ID: 6)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9269777536392212
    2. 'range' → logprob: -1.6769777536392212
    3. '#' → logprob: -2.1769776344299316
    4. 'a' → logprob: -2.6769776344299316
    5. ' min' → logprob: -3.3019776344299316
    6. 'count' → logprob: -3.3019776344299316
    7. 'e' → logprob: -3.6769776344299316
    8. 'def' → logprob: -4.301977634429932
    9. '   ' → logprob: -4.426977634429932
    10. ' range' → logprob: -4.551977634429932

Token 798: 'alg' (ID: 15258)
  Prédit: 'alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.5929970145225525
    2. 'fonction' → logprob: -1.0929970741271973
    3. 'algorithm' → logprob: -2.5929970741271973
    4. 'algo' → logprob: -4.342997074127197
    5. '#' → logprob: -5.092997074127197
    6. 'count' → logprob: -5.217997074127197
    7. 'util' → logprob: -6.092997074127197
    8. 'optim' → logprob: -6.342997074127197
    9. 'usage' → logprob: -6.467997074127197
    10. 'calcul' → logprob: -6.842997074127197

Token 799: 'orith' (ID: 9996)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.7755938172340393
    2. 'orithm' → logprob: -0.9005938172340393
    3. '   ' → logprob: -3.4005937576293945
    4. 'op' → logprob: -3.4005937576293945
    5. 'orithms' → logprob: -3.9005937576293945
    6. 'os' → logprob: -4.4005937576293945
    7. '_ops' → logprob: -5.0255937576293945
    8. 'def' → logprob: -5.0255937576293945
    9. ' ops' → logprob: -5.6505937576293945
    10. 'orith' → logprob: -5.7755937576293945

Token 800: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -2.816093228830141e-06
    2. 'm' → logprob: -13.25000286102295
    3. 'mes' → logprob: -14.50000286102295
    4. 't' → logprob: -15.87500286102295
    5. 'hme' → logprob: -15.87500286102295
    6. 'ме' → logprob: -16.750001907348633
    7. 'mie' → logprob: -17.250001907348633
    8. '#' → logprob: -17.750001907348633
    9. 'mé' → logprob: -17.875001907348633
    10. 'mme' → logprob: -18.125001907348633

Token 801: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7696444988250732
    2. '()
' → logprob: -1.1446444988250732
    3. '()' → logprob: -2.0196444988250732
    4. 'ops' → logprob: -3.1446444988250732
    5. '(' → logprob: -3.2696444988250732
    6. '.sort' → logprob: -6.144644737243652
    7. '_ops' → logprob: -7.144644737243652
    8. '().' → logprob: -8.394644737243652
    9. '(
' → logprob: -8.394644737243652
    10. ' ops' → logprob: -8.519644737243652

Token 802: ' cela' (ID: 17542)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.004301457200199366
    2. 'ops' → logprob: -5.50430154800415
    3. ' helps' → logprob: -8.879301071166992
    4. ' op' → logprob: -10.879301071166992
    5. '_ops' → logprob: -11.004301071166992
    6. ' beneficial' → logprob: -12.004301071166992
    7. ' helpful' → logprob: -12.129301071166992
    8. ' important' → logprob: -12.254301071166992
    9. ' 
' → logprob: -12.504301071166992
    10. 'helps' → logprob: -12.629301071166992

Token 803: ' peut' (ID: 9216)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.04526018723845482
    2. ' helps' → logprob: -3.795260190963745
    3. '.reverse' → logprob: -6.045259952545166
    4. ')' → logprob: -6.170259952545166
    5. 'helps' → logprob: -6.420259952545166
    6. '<|end|>' → logprob: -6.670259952545166
    7. '.append' → logprob: -6.795259952545166
    8. '[::-' → logprob: -6.795259952545166
    9. ' can' → logprob: -7.045259952545166
    10. '=' → logprob: -7.170259952545166

Token 804: ' accél' (ID: 152966)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.645931601524353
    2. ' help' → logprob: -1.520931601524353
    3. ' améliorer' → logprob: -2.8959317207336426
    4. ' =' → logprob: -3.2709317207336426
    5. ' aider' → logprob: -3.6459317207336426
    6. '=' → logprob: -4.020931720733643
    7. ' continue' → logprob: -4.395931720733643
    8. ' improve' → logprob: -4.395931720733643
    9. 'help' → logprob: -4.395931720733643
    10. ' faciliter' → logprob: -4.395931720733643

Token 805: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.00014811802248004824
    2. 'erer' → logprob: -8.875147819519043
    3. 'er' → logprob: -12.125147819519043
    4. 'é' → logprob: -13.625147819519043
    5. 'rer' → logprob: -14.625147819519043
    6. 'ér' → logprob: -15.125147819519043
    7. 'è' → logprob: -15.250147819519043
    8. '   ' → logprob: -16.37514877319336
    9. 'erar' → logprob: -16.50014877319336
    10. 'érez' → logprob: -16.87514877319336

Token 806: ' certains' (ID: 30681)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.064439296722412
    2. 'ops' → logprob: -1.314439296722412
    3. 'le' → logprob: -2.064439296722412
    4. 'the' → logprob: -2.314439296722412
    5. 'op' → logprob: -3.189439296722412
    6. 'l' → logprob: -3.189439296722412
    7. 'la' → logprob: -3.314439296722412
    8. '()' → logprob: -4.564439296722412
    9. '(
' → logprob: -4.939439296722412
    10. '_ops' → logprob: -5.064439296722412

Token 807: ' calcul' (ID: 7559)
  Prédit: ' traitements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traitements' → logprob: -1.1144742965698242
    2. ' op' → logprob: -1.7394742965698242
    3. ' calcul' → logprob: -2.364474296569824
    4. ' optim' → logprob: -2.739474296569824
    5. 'op' → logprob: -2.864474296569824
    6. ' appels' → logprob: -2.989474296569824
    7. 'ops' → logprob: -3.489474296569824
    8. 'calcul' → logprob: -3.489474296569824
    9. ' ops' → logprob: -3.739474296569824
    10. ' tri' → logprob: -3.864474296569824

Token 808: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00807938538491726
    2. 's' → logprob: -4.883079528808594
    3. 'ements' → logprob: -8.383079528808594
    4. 'es' → logprob: -9.758079528808594
    5. 'ateurs' → logprob: -9.883079528808594
    6. 'utions' → logprob: -10.133079528808594
    7. '#' → logprob: -11.758079528808594
    8. '
' → logprob: -12.008079528808594
    9. 'eurs' → logprob: -12.133079528808594
    10. '```' → logprob: -12.133079528808594

Token 809: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09538623690605164
    2. 'ops' → logprob: -3.220386266708374
    3. '
' → logprob: -3.970386266708374
    4. '()
' → logprob: -4.095386028289795
    5. '(' → logprob: -5.095386028289795
    6. '_ops' → logprob: -6.470386028289795
    7. ')
' → logprob: -6.595386028289795
    8. '    
' → logprob: -6.720386028289795
    9. '()' → logprob: -6.845386028289795
    10. ')' → logprob: -7.095386028289795

Token 810: ' des' (ID: 731)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.32692164182662964
    2. 'range' → logprob: -2.3269217014312744
    3. ' count' → logprob: -2.5769217014312744
    4. '   ' → logprob: -3.3269217014312744
    5. 'def' → logprob: -3.7019217014312744
    6. ' range' → logprob: -3.8269217014312744
    7. ' la' → logprob: -4.951921463012695
    8. 'reverse' → logprob: -5.326921463012695
    9. 'la' → logprob: -5.826921463012695
    10. '[count' → logprob: -6.701921463012695

Token 811: ' variantes' (ID: 169119)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.39624664187431335
    2. 'reverse' → logprob: -2.8962466716766357
    3. 'range' → logprob: -3.0212466716766357
    4. 'def' → logprob: -3.1462466716766357
    5. ' reverse' → logprob: -3.3962466716766357
    6. ' range' → logprob: -3.5212466716766357
    7. 'for' → logprob: -4.021246433258057
    8. 'descending' → logprob: -4.146246433258057
    9. '[::-' → logprob: -4.521246433258057
    10. ' for' → logprob: -4.896246433258057

Token 812: ' gl' (ID: 2000)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.085875153541565
    2. '()
' → logprob: -1.210875153541565
    3. '   ' → logprob: -1.710875153541565
    4. '(' → logprob: -1.960875153541565
    5. '()' → logprob: -3.4608750343322754
    6. ')
' → logprob: -5.710875034332275
    7. '
' → logprob: -6.210875034332275
    8. ')' → logprob: -6.210875034332275
    9. ',' → logprob: -7.335875034332275
    10. '(
' → logprob: -7.335875034332275

Token 813: 'out' (ID: 468)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obal' → logprob: -0.0038885537069290876
    2. 'ob' → logprob: -5.6288886070251465
    3. 'obals' → logprob: -8.503888130187988
    4. 'ocale' → logprob: -10.253888130187988
    5. 'oba' → logprob: -11.378888130187988
    6. 'issant' → logprob: -11.878888130187988
    7. '```' → logprob: -12.003888130187988
    8. 'oble' → logprob: -12.253888130187988
    9. 'ocal' → logprob: -13.128888130187988
    10. 'issante' → logprob: -13.378888130187988

Token 814: 'onnes' (ID: 192635)
  Prédit: 'ales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.017450589686632156
    2. 'ale' → logprob: -4.89245080947876
    3. 'orith' → logprob: -6.26745080947876
    4. 'orithm' → logprob: -6.89245080947876
    5. 'érales' → logprob: -7.01745080947876
    6. 'orithms' → logprob: -7.51745080947876
    7. 'iques' → logprob: -7.64245080947876
    8. 'al' → logprob: -7.64245080947876
    9. 'aux' → logprob: -8.017450332641602
    10. '[' → logprob: -8.017450332641602

Token 815: '
' (ID: 198)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.30899834632873535
    2. '()
' → logprob: -2.4339983463287354
    3. '
' → logprob: -2.6839983463287354
    4. '   ' → logprob: -2.8089983463287354
    5. '(' → logprob: -3.4339983463287354
    6. ')
' → logprob: -5.058998107910156
    7. '()' → logprob: -5.683998107910156
    8. ')' → logprob: -5.933998107910156
    9. '    
' → logprob: -6.933998107910156
    10. '(
' → logprob: -7.183998107910156

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015632620081305504
    2. 'ops' → logprob: -4.265632629394531
    3. '    
' → logprob: -7.015632629394531
    4. '
' → logprob: -7.765632629394531
    5. '```' → logprob: -9.515632629394531
    6. ' ops' → logprob: -11.015632629394531
    7. '   
' → logprob: -11.515632629394531
    8. '_ops' → logprob: -11.890632629394531
    9. '  
' → logprob: -12.140632629394531
    10. '  ' → logprob: -12.265632629394531

Token 817: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.004925735294818878
    2. '   ' → logprob: -5.629925727844238
    3. ' ops' → logprob: -6.629925727844238
    4. '```' → logprob: -13.504925727844238
    5. '.ops' → logprob: -13.504925727844238
    6. '_ops' → logprob: -14.254925727844238
    7. 'OPS' → logprob: -15.629925727844238
    8. ' ' → logprob: -15.754925727844238
    9. 'opts' → logprob: -15.754925727844238
    10. 'op' → logprob: -16.004926681518555

Token 818: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -9.126521035796031e-05
    2. '.' → logprob: -9.375091552734375
    3. '=' → logprob: -12.250091552734375
    4. '.reverse' → logprob: -14.000091552734375
    5. 'sort' → logprob: -14.750091552734375
    6. '	sort' → logprob: -16.125091552734375
    7. '.Sort' → logprob: -16.250091552734375
    8. ' .' → logprob: -16.750091552734375
    9. '.=' → logprob: -16.750091552734375
    10. ').' → logprob: -16.875091552734375

Token 819: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0002210596576333046
    2. 'reverse' → logprob: -8.500221252441406
    3. '(' → logprob: -11.000221252441406
    4. '.reverse' → logprob: -15.000221252441406
    5. ' reverse' → logprob: -15.250221252441406
    6. '()' → logprob: -15.250221252441406
    7. '_reverse' → logprob: -17.125221252441406
    8. '(re' → logprob: -17.500221252441406
    9. 'Reverse' → logprob: -18.000221252441406
    10. '(
' → logprob: -18.000221252441406

Token 820: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.025315377861261368
    2. '())' → logprob: -3.900315284729004
    3. ')' → logprob: -5.650315284729004
    4. '(True' → logprob: -7.525315284729004
    5. '()' → logprob: -7.775315284729004
    6. '=' → logprob: -8.525315284729004
    7. '=False' → logprob: -9.775315284729004
    8. '(' → logprob: -11.275315284729004
    9. '(),' → logprob: -11.775315284729004
    10. 'True' → logprob: -12.775315284729004

Token 821: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.955703818472102e-05
    2. '   ' → logprob: -10.375059127807617
    3. ')
' → logprob: -10.750059127807617
    4. '()' → logprob: -12.375059127807617
    5. '())' → logprob: -13.875059127807617
    6. ' )' → logprob: -14.000059127807617
    7. ')

' → logprob: -14.375059127807617
    8. '))' → logprob: -16.250059127807617
    9. '```' → logprob: -17.125059127807617
    10. ')`' → logprob: -17.500059127807617

Token 822: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24708588421344757
    2. '
' → logprob: -1.7470859289169312
    3. 'min' → logprob: -3.8720858097076416
    4. 'result' → logprob: -3.9970858097076416
    5. '```' → logprob: -5.872086048126221
    6. '    
' → logprob: -6.622086048126221
    7. ' result' → logprob: -7.997086048126221
    8. 'count' → logprob: -7.997086048126221
    9. ' min' → logprob: -8.747085571289062
    10. 'res' → logprob: -9.372085571289062

Token 823: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17701271176338196
    2. '
' → logprob: -2.1770126819610596
    3. 'min' → logprob: -3.3020126819610596
    4. 'result' → logprob: -4.677012920379639
    5. '    
' → logprob: -6.302012920379639
    6. ' min' → logprob: -8.17701244354248
    7. ' result' → logprob: -8.67701244354248
    8. '```' → logprob: -9.30201244354248
    9. 'res' → logprob: -9.67701244354248
    10. 'count' → logprob: -10.05201244354248

Token 824: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15011358261108398
    2. 'result' → logprob: -2.275113582611084
    3. '   ' → logprob: -3.400113582611084
    4. 'res' → logprob: -6.025113582611084
    5. 'count' → logprob: -8.150114059448242
    6. 'print' → logprob: -8.650114059448242
    7. 'minimum' → logprob: -8.900114059448242
    8. ' min' → logprob: -9.400114059448242
    9. 'answer' → logprob: -9.775114059448242
    10. 'minimal' → logprob: -10.650114059448242

Token 825: ' affiche' (ID: 127479)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07932496070861816
    2. ' min' → logprob: -3.454324960708618
    3. 'print' → logprob: -3.954324960708618
    4. 'count' → logprob: -4.079324722290039
    5. 'result' → logprob: -6.079324722290039
    6. '_min' → logprob: -6.204324722290039
    7. ' print' → logprob: -6.829324722290039
    8. ' count' → logprob: -7.204324722290039
    9. '   ' → logprob: -7.704324722290039
    10. 'minimum' → logprob: -8.079324722290039

Token 826: ' le' (ID: 505)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.018927767872810364
    2. 'count' → logprob: -4.018927574157715
    3. '(min' → logprob: -7.268927574157715
    4. 'min' → logprob: -9.518927574157715
    5. '(' → logprob: -12.018927574157715
    6. ' count' → logprob: -14.518927574157715
    7. '=count' → logprob: -14.768927574157715
    8. '[count' → logprob: -15.393927574157715
    9. '(
' → logprob: -16.51892852783203
    10. '(len' → logprob: -17.76892852783203

Token 827: ' résultat' (ID: 62556)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3068687319755554
    2. 'min' → logprob: -2.0568687915802
    3. 'result' → logprob: -2.0568687915802
    4. 'minimum' → logprob: -5.431868553161621
    5. ' count' → logprob: -6.931868553161621
    6. 'return' → logprob: -7.181868553161621
    7. 'res' → logprob: -7.181868553161621
    8. 'answer' → logprob: -7.431868553161621
    9. '(count' → logprob: -8.681868553161621
    10. 'r' → logprob: -8.681868553161621

Token 828: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06231451779603958
    2. 'print' → logprob: -2.812314510345459
    3. '```' → logprob: -8.187314987182617
    4. ' print' → logprob: -10.812314987182617
    5. '(print' → logprob: -10.812314987182617
    6. '(' → logprob: -10.812314987182617
    7. '`' → logprob: -13.312314987182617
    8. '    
' → logprob: -13.312314987182617
    9. 'result' → logprob: -13.687314987182617
    10. '``' → logprob: -13.812314987182617

Token 829: ' calcul' (ID: 7559)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005310485139489174
    2. 'print' → logprob: -5.255310535430908
    3. ' count' → logprob: -10.00531005859375
    4. 'min' → logprob: -10.38031005859375
    5. '(count' → logprob: -15.38031005859375
    6. ' print' → logprob: -16.50531005859375
    7. '   ' → logprob: -16.63031005859375
    8. 'result' → logprob: -17.63031005859375
    9. '[count' → logprob: -18.13031005859375
    10. 'coin' → logprob: -18.25531005859375

Token 830: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765486359596252
    2. 'print' → logprob: -0.8265486359596252
    3. ' print' → logprob: -7.8265485763549805
    4. '```' → logprob: -9.70154857635498
    5. '(print' → logprob: -9.82654857635498
    6. 'count' → logprob: -10.57654857635498
    7. '(' → logprob: -10.70154857635498
    8. ',' → logprob: -10.82654857635498
    9. '(count' → logprob: -11.45154857635498
    10. ')' → logprob: -11.95154857635498

Token 831: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006464178673923016
    2. 'min' → logprob: -5.506464004516602
    3. ' count' → logprob: -6.131464004516602
    4. 'minimum' → logprob: -9.131464004516602
    5. 'nombre' → logprob: -9.506464004516602
    6. ' minimum' → logprob: -12.131464004516602
    7. '   ' → logprob: -12.256464004516602
    8. ' min' → logprob: -12.506464004516602
    9. 'print' → logprob: -13.256464004516602
    10. 'result' → logprob: -13.381464004516602

Token 832: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.06503069400787354
    2. ' minimum' → logprob: -2.815030574798584
    3. 'minimal' → logprob: -6.690030574798584
    4. ' min' → logprob: -7.565030574798584
    5. 'minimum' → logprob: -7.940030574798584
    6. '_min' → logprob: -8.065031051635742
    7. ' de' → logprob: -8.690031051635742
    8. '   ' → logprob: -8.815031051635742
    9. ' minimale' → logprob: -8.940031051635742
    10. 'min' → logprob: -9.565031051635742

Token 833: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8810476660728455
    2. '(count' → logprob: -1.6310477256774902
    3. 'count' → logprob: -1.7560477256774902
    4. ' count' → logprob: -2.2560477256774902
    5. '   ' → logprob: -2.3810477256774902
    6. ' (' → logprob: -4.88104772567749
    7. ' de' → logprob: -5.38104772567749
    8. 'min' → logprob: -6.38104772567749
    9. '(
' → logprob: -7.13104772567749
    10. '_count' → logprob: -7.63104772567749

Token 834: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.4009218215942383
    2. 'pieces' → logprob: -1.5259218215942383
    3. 'pi' → logprob: -3.0259218215942383
    4. ' pièces' → logprob: -3.0259218215942383
    5. ' coins' → logprob: -4.525921821594238
    6. ' pieces' → logprob: -5.525921821594238
    7. '```' → logprob: -7.900921821594238
    8. 'coin' → logprob: -8.525921821594238
    9. ' pi' → logprob: -9.025921821594238
    10. 'piec' → logprob: -9.650921821594238

Token 835: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040097836405038834
    2. '(count' → logprob: -4.040097713470459
    3. 'print' → logprob: -4.165097713470459
    4. '(' → logprob: -5.540097713470459
    5. 'count' → logprob: -6.915097713470459
    6. '(print' → logprob: -7.665097713470459
    7. '(min' → logprob: -8.040098190307617
    8. ' print' → logprob: -9.040098190307617
    9. ':' → logprob: -9.415098190307617
    10. 'min' → logprob: -9.915098190307617

Token 836: ' atteindre' (ID: 95734)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018551979213953018
    2. ' n' → logprob: -4.018551826477051
    3. 'count' → logprob: -8.01855182647705
    4. ' count' → logprob: -9.64355182647705
    5. '(n' → logprob: -12.76855182647705
    6. '   ' → logprob: -12.89355182647705
    7. 'the' → logprob: -14.64355182647705
    8. ' the' → logprob: -14.89355182647705
    9. '```' → logprob: -14.89355182647705
    10. 'print' → logprob: -15.26855182647705

Token 837: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3869069814682007
    2. 'n' → logprob: -1.1369069814682007
    3. '(n' → logprob: -10.636906623840332
    4. '   ' → logprob: -12.136906623840332
    5. ' la' → logprob: -12.136906623840332
    6. '	n' → logprob: -15.136906623840332
    7. ' ' → logprob: -15.136906623840332
    8. ' ' → logprob: -15.511906623840332
    9. '```' → logprob: -16.38690757751465
    10. ')n' → logprob: -16.76190757751465

Token 838: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010545044642640278
    2. 'nombre' → logprob: -9.875105857849121
    3. ' n' → logprob: -10.125105857849121
    4. 'target' → logprob: -12.750105857849121
    5. 's' → logprob: -13.000105857849121
    6. 'print' → logprob: -13.375105857849121
    7. 'val' → logprob: -13.375105857849121
    8. 'num' → logprob: -13.625105857849121
    9. '   ' → logprob: -13.750105857849121
    10. 'objectif' → logprob: -14.250105857849121

Token 839: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1278993934392929
    2. 'n' → logprob: -2.127899408340454
    3. '   ' → logprob: -7.502899169921875
    4. ' n' → logprob: -8.502899169921875
    5. '(' → logprob: -9.127899169921875
    6. 'result' → logprob: -9.502899169921875
    7. ' (' → logprob: -12.127899169921875
    8. 'print' → logprob: -12.127899169921875
    9. 'res' → logprob: -12.877899169921875
    10. '[n' → logprob: -13.002899169921875

Token 840: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2029169350862503
    2. 'print' → logprob: -1.7029169797897339
    3. ' print' → logprob: -6.952917098999023
    4. '```' → logprob: -7.952917098999023
    5. '(print' → logprob: -9.702917098999023
    6. ')' → logprob: -10.577917098999023
    7. ')
' → logprob: -10.702917098999023
    8. '
' → logprob: -10.827917098999023
    9. '(' → logprob: -10.827917098999023
    10. '``' → logprob: -11.577917098999023

Token 841: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06254701316356659
    2. '   ' → logprob: -2.812546968460083
    3. '```' → logprob: -7.937547206878662
    4. ' print' → logprob: -8.437546730041504
    5. '
' → logprob: -12.687546730041504
    6. '    
' → logprob: -14.062546730041504
    7. '``' → logprob: -14.437546730041504
    8. '	print' → logprob: -15.062546730041504
    9. ')' → logprob: -15.562546730041504
    10. ',' → logprob: -15.687546730041504

Token 842: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.75
    4. '```' → logprob: -18.375
    5. 'result' → logprob: -19.25
    6. '
' → logprob: -19.25
    7. 'count' → logprob: -22.5
    8. '    
' → logprob: -22.625
    9. '`' → logprob: -24.25
    10. '``' → logprob: -24.375

Token 843: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004235243541188538
    2. '   ' → logprob: -8.250423431396484
    3. ' print' → logprob: -8.750423431396484
    4. '```' → logprob: -12.500423431396484
    5. '
' → logprob: -16.125423431396484
    6. '	print' → logprob: -17.250423431396484
    7. 'result' → logprob: -17.750423431396484
    8. '``' → logprob: -18.500423431396484
    9. '#print' → logprob: -18.750423431396484
    10. '    
' → logprob: -18.875423431396484

Token 844: ' passe' (ID: 22210)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006084272637963295
    2. ' print' → logprob: -5.131084442138672
    3. '   ' → logprob: -9.881084442138672
    4. ')' → logprob: -10.131084442138672
    5. '(print' → logprob: -10.256084442138672
    6. '.print' → logprob: -12.006084442138672
    7. '=' → logprob: -12.381084442138672
    8. 'println' → logprob: -12.631084442138672
    9. '_print' → logprob: -12.631084442138672
    10. ' =' → logprob: -12.631084442138672

Token 845: ' un' (ID: 537)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0023040547966957092
    2. 'n' → logprob: -6.7523040771484375
    3. '(' → logprob: -6.8773040771484375
    4. 'count' → logprob: -10.377304077148438
    5. '(count' → logprob: -10.752304077148438
    6. '   ' → logprob: -11.002304077148438
    7. '(
' → logprob: -11.377304077148438
    8. 'the' → logprob: -11.752304077148438
    9. ')' → logprob: -12.627304077148438
    10. ' n' → logprob: -13.627304077148438

Token 846: ' diction' (ID: 155259)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.705376923084259
    2. ')' → logprob: -1.7053768634796143
    3. 'n' → logprob: -1.7053768634796143
    4. '   ' → logprob: -2.7053768634796143
    5. '=' → logprob: -3.4553768634796143
    6. ' =' → logprob: -4.830377101898193
    7. '_n' → logprob: -4.830377101898193
    8. '_' → logprob: -4.955377101898193
    9. ' n' → logprob: -5.455377101898193
    10. ',' → logprob: -6.080377101898193

Token 847: 'naire' (ID: 30464)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.0004842962371185422
    2. '{' → logprob: -8.375484466552734
    3. 'naire' → logprob: -8.625484466552734
    4. '{"' → logprob: -10.750484466552734
    5. 'aire' → logprob: -10.875484466552734
    6. '   ' → logprob: -11.250484466552734
    7. 'n' → logprob: -11.250484466552734
    8. '{}' → logprob: -12.250484466552734
    9. '{
' → logprob: -14.000484466552734
    10. 'min' → logprob: -14.750484466552734

Token 848: ' vide' (ID: 21835)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46994245052337646
    2. '{}' → logprob: -1.4699424505233765
    3. 'min' → logprob: -2.594942569732666
    4. 'empty' → logprob: -4.219942569732666
    5. '({' → logprob: -4.344942569732666
    6. '())' → logprob: -4.594942569732666
    7. '={}' → logprob: -4.594942569732666
    8. ')' → logprob: -4.719942569732666
    9. '(min' → logprob: -5.094942569732666
    10. '{})' → logprob: -5.219942569732666

Token 849: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5137650370597839
    2. ')' → logprob: -1.8887650966644287
    3. '({' → logprob: -2.6387650966644287
    4. 'min' → logprob: -3.0137650966644287
    5. '()' → logprob: -3.0137650966644287
    6. '(min' → logprob: -3.3887650966644287
    7. '{})' → logprob: -3.5137650966644287
    8. '={}' → logprob: -4.88876485824585
    9. '({})
' → logprob: -5.38876485824585
    10. ',' → logprob: -6.88876485824585

Token 850: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07946127653121948
    2. ',' → logprob: -2.5794613361358643
    3. '   ' → logprob: -9.079461097717285
    4. '),' → logprob: -9.329461097717285
    5. '<|end|>' → logprob: -9.454461097717285
    6. ')
' → logprob: -9.704461097717285
    7. '))' → logprob: -10.329461097717285
    8. ',min' → logprob: -10.454461097717285
    9. 'min' → logprob: -10.954461097717285
    10. ',
' → logprob: -11.079461097717285

Token 851: ' début' (ID: 29589)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0015135504072532058
    2. 'min' → logprob: -6.501513481140137
    3. ' count' → logprob: -11.876513481140137
    4. 'def' → logprob: -13.376513481140137
    5. 'counter' → logprob: -14.126513481140137
    6. 'submit' → logprob: -14.626513481140137
    7. 'minimum' → logprob: -15.001513481140137
    8. '   ' → logprob: -15.126513481140137
    9. '```' → logprob: -15.626513481140137
    10. 'call' → logprob: -15.626513481140137

Token 852: ' pour' (ID: 1930)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.7730634808540344
    2. ',' → logprob: -1.2730634212493896
    3. ')' → logprob: -1.6480634212493896
    4. 'min' → logprob: -3.1480634212493896
    5. '(count' → logprob: -4.773063659667969
    6. 'count' → logprob: -5.023063659667969
    7. '   ' → logprob: -6.273063659667969
    8. ',min' → logprob: -6.398063659667969
    9. '.' → logprob: -7.023063659667969
    10. '(' → logprob: -7.148063659667969

Token 853: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2830195128917694
    2. 'min' → logprob: -1.4080195426940918
    3. '{}' → logprob: -6.908019542694092
    4. '{})' → logprob: -8.033019065856934
    5. ' count' → logprob: -8.658019065856934
    6. '   ' → logprob: -9.033019065856934
    7. ')' → logprob: -9.408019065856934
    8. 'la' → logprob: -10.158019065856934
    9. 'comp' → logprob: -10.783019065856934
    10. '{' → logprob: -11.033019065856934

Token 854: ' mé' (ID: 11291)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5011979341506958
    2. 'min' → logprob: -1.0011979341506958
    3. 'memo' → logprob: -3.6261978149414062
    4. 'call' → logprob: -10.001197814941406
    5. ' count' → logprob: -11.376197814941406
    6. 'def' → logprob: -11.376197814941406
    7. '   ' → logprob: -11.376197814941406
    8. 'minimum' → logprob: -11.501197814941406
    9. 'mem' → logprob: -11.501197814941406
    10. '#' → logprob: -12.126197814941406

Token 855: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -7.505351095460355e-05
    2. 'm' → logprob: -9.750075340270996
    3. 'мо' → logprob: -12.250075340270996
    4. 'moire' → logprob: -12.375075340270996
    5. 'lo' → logprob: -13.000075340270996
    6. 'mor' → logprob: -13.375075340270996
    7. '```' → logprob: -14.250075340270996
    8. 'o' → logprob: -14.500075340270996
    9. '#' → logprob: -15.000075340270996
    10. 'moid' → logprob: -15.250075340270996

Token 856: 'ïs' (ID: 96230)
  Prédit: 'ïs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ïs' → logprob: -0.07887645810842514
    2. 'ï' → logprob: -2.828876495361328
    3. 'ization' → logprob: -4.453876495361328
    4. '{}' → logprob: -5.703876495361328
    5. 'isation' → logprob: -7.578876495361328
    6. '{"' → logprob: -8.078876495361328
    7. '={}' → logprob: -8.328876495361328
    8. '{' → logprob: -8.703876495361328
    9. 'is' → logprob: -8.828876495361328
    10. '```' → logprob: -9.953876495361328

Token 857: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.05126461759209633
    2. 'z' → logprob: -3.051264524459839
    3. 'tion' → logprob: -7.051264762878418
    4. 's' → logprob: -7.176264762878418
    5. 'm' → logprob: -8.051264762878418
    6. '{}' → logprob: -8.676264762878418
    7. 'cation' → logprob: -8.801264762878418
    8. 'vation' → logprob: -9.301264762878418
    9. 't' → logprob: -9.676264762878418
    10. 'min' → logprob: -9.926264762878418

Token 858: ' lors' (ID: 15456)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6658300757408142
    2. '   ' → logprob: -0.7908300757408142
    3. ')' → logprob: -3.540830135345459
    4. ')
' → logprob: -6.665830135345459
    5. ',' → logprob: -6.915830135345459
    6. ' print' → logprob: -8.0408296585083
    7. '(print' → logprob: -8.1658296585083
    8. '(min' → logprob: -8.5408296585083
    9. '(' → logprob: -9.0408296585083
    10. '```' → logprob: -9.2908296585083

Token 859: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.725696861743927
    2. 'de' → logprob: -0.975696861743927
    3. 'du' → logprob: -2.9756968021392822
    4. 'def' → logprob: -3.6006968021392822
    5. 'count' → logprob: -3.7256968021392822
    6. ' de' → logprob: -4.225697040557861
    7. ')' → logprob: -5.100697040557861
    8. '(count' → logprob: -5.850697040557861
    9. '=count' → logprob: -5.975697040557861
    10. 'la' → logprob: -6.350697040557861

Token 860: ' premier' (ID: 15506)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.024975929409265518
    2. 'call' → logprob: -3.7749760150909424
    3. 'appel' → logprob: -7.274975776672363
    4. 'prem' → logprob: -7.774975776672363
    5. 'comp' → logprob: -8.274975776672363
    6. ' count' → logprob: -8.774975776672363
    7. 'first' → logprob: -9.274975776672363
    8. '#' → logprob: -10.399975776672363
    9. 'def' → logprob: -10.524975776672363
    10. ' call' → logprob: -11.274975776672363

Token 861: ' appel' (ID: 34642)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.6568369269371033
    2. 'count' → logprob: -0.7818369269371033
    3. 'appel' → logprob: -3.781836986541748
    4. ' call' → logprob: -7.406836986541748
    5. ' count' → logprob: -8.28183650970459
    6. ' appel' → logprob: -9.40683650970459
    7. 'def' → logprob: -9.65683650970459
    8. 'pass' → logprob: -10.15683650970459
    9. ''appel' → logprob: -10.53183650970459
    10. 'comp' → logprob: -10.65683650970459

Token 862: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47810256481170654
    2. '   ' → logprob: -0.9781025648117065
    3. ')' → logprob: -5.853102684020996
    4. ' print' → logprob: -7.853102684020996
    5. '(print' → logprob: -8.103102684020996
    6. '```' → logprob: -8.478102684020996
    7. ',' → logprob: -9.103102684020996
    8. ')
' → logprob: -9.978102684020996
    9. '(' → logprob: -10.853102684020996
    10. '()' → logprob: -10.978102684020996

Token 863: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010342398309148848
    2. ' print' → logprob: -9.750102996826172
    3. '   ' → logprob: -10.125102996826172
    4. '```' → logprob: -12.250102996826172
    5. '(print' → logprob: -16.125102996826172
    6. '    
' → logprob: -17.125102996826172
    7. '``' → logprob: -18.125102996826172
    8. '
' → logprob: -18.750102996826172
    9. '	print' → logprob: -18.875102996826172
    10. '`' → logprob: -19.750102996826172

Token 864: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1279553291387856e-05
    2. ' print' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. '```' → logprob: -17.125011444091797
    5. '
' → logprob: -20.750011444091797
    6. '    
' → logprob: -21.125011444091797
    7. '	print' → logprob: -22.125011444091797
    8. '``' → logprob: -22.875011444091797
    9. '  ' → logprob: -23.375011444091797
    10. '(print' → logprob: -23.500011444091797

Token 865: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00016671013145241886
    2. '(' → logprob: -8.750166893005371
    3. 'count' → logprob: -11.750166893005371
    4. '(
' → logprob: -16.625165939331055
    5. '(min' → logprob: -16.625165939331055
    6. '=count' → logprob: -17.250165939331055
    7. ' (' → logprob: -17.500165939331055
    8. '[count' → logprob: -17.750165939331055
    9. '()' → logprob: -17.750165939331055
    10. ' count' → logprob: -18.125165939331055

Token 866: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.500001907348633
    3. '_co' → logprob: -14.875001907348633
    4. 'coin' → logprob: -16.375001907348633
    5. '_count' → logprob: -18.500001907348633
    6. 'Coin' → logprob: -18.625001907348633
    7. '_coupon' → logprob: -19.000001907348633
    8. ' coin' → logprob: -19.250001907348633
    9. '```' → logprob: -19.625001907348633
    10. ')' → logprob: -19.750001907348633

Token 867: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002334568416699767
    2. '(' → logprob: -8.37523365020752
    3. ' (' → logprob: -13.00023365020752
    4. ')' → logprob: -15.00023365020752
    5. ',' → logprob: -15.87523365020752
    6. ')(' → logprob: -16.250232696533203
    7. '(
' → logprob: -17.125232696533203
    8. ',n' → logprob: -18.375232696533203
    9. '(x' → logprob: -18.375232696533203
    10. ')n' → logprob: -19.375232696533203

Token 868: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.2729995988775045e-06
    2. ' ,' → logprob: -12.625006675720215
    3. '(' → logprob: -13.250006675720215
    4. ',n' → logprob: -14.750006675720215
    5. '(n' → logprob: -15.375006675720215
    6. '```' → logprob: -15.625006675720215
    7. '(),' → logprob: -15.875006675720215
    8. '',' → logprob: -16.6250057220459
    9. '",' → logprob: -16.8750057220459
    10. '(op' → logprob: -17.0000057220459

Token 869: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.006717386189848185
    2. ' ops' → logprob: -5.006717205047607
    3. 'op' → logprob: -13.506717681884766
    4. '.ops' → logprob: -15.131717681884766
    5. '   ' → logprob: -15.381717681884766
    6. '_ops' → logprob: -16.006717681884766
    7. 'opts' → logprob: -17.381717681884766
    8. ' op' → logprob: -17.631717681884766
    9. 'Ops' → logprob: -17.756717681884766
    10. 'OPS' → logprob: -18.631717681884766

Token 870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.375001907348633
    3. '{},' → logprob: -15.125001907348633
    4. ',{' → logprob: -16.125001907348633
    5. '{}' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.250001907348633
    7. ',
' → logprob: -18.875001907348633
    8. '{' → logprob: -19.625001907348633
    9. '```' → logprob: -20.125001907348633
    10. ' {},' → logprob: -20.125001907348633

Token 871: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00015908108616713434
    2. '{})' → logprob: -8.75015926361084
    3. ' {}' → logprob: -14.37515926361084
    4. '={}' → logprob: -17.125158309936523
    5. '{}_' → logprob: -17.750158309936523
    6. '))' → logprob: -17.750158309936523
    7. '{}\' → logprob: -18.500158309936523
    8. '{})
' → logprob: -18.625158309936523
    9. 'dict' → logprob: -18.875158309936523
    10. ' {})' → logprob: -19.000158309936523

Token 872: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018153687939047813
    2. ')' → logprob: -4.018153667449951
    3. '))
' → logprob: -12.89315414428711
    4. ')
' → logprob: -14.64315414428711
    5. ')))' → logprob: -15.14315414428711
    6. ' ))' → logprob: -15.76815414428711
    7. '()))' → logprob: -15.76815414428711
    8. ')}' → logprob: -16.39315414428711
    9. '())' → logprob: -16.76815414428711
    10. ' )' → logprob: -17.01815414428711

Token 873: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 874: ' Point' (ID: 9971)
  Prédit: 'submit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'submit' → logprob: -0.008617172949016094
    2. 'if' → logprob: -4.758617401123047
    3. '#' → logprob: -13.383617401123047
    4. ' submit' → logprob: -14.383617401123047
    5. '.submit' → logprob: -15.633617401123047
    6. '_submit' → logprob: -15.758617401123047
    7. 'sub' → logprob: -16.383617401123047
    8. ' if' → logprob: -16.508617401123047
    9. '#if' → logprob: -17.758617401123047
    10. '```' → logprob: -17.758617401123047

Token 875: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07973287254571915
    2. '_' → logprob: -3.079732894897461
    3. ' if' → logprob: -4.204732894897461
    4. '#' → logprob: -4.704732894897461
    5. 'd' → logprob: -5.954732894897461
    6. ' d' → logprob: -6.829732894897461
    7. 'def' → logprob: -7.579732894897461
    8. '()' → logprob: -8.329732894897461
    9. '  
' → logprob: -8.329732894897461
    10. 's' → logprob: -8.454732894897461

Token 876: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.0790802463889122
    2. ''entrée' → logprob: -2.57908034324646
    3. 'entr' → logprob: -8.954080581665039
    4. 'entry' → logprob: -10.954080581665039
    5. '’entrée' → logprob: -11.454080581665039
    6. 'ent' → logprob: -11.829080581665039
    7. '__' → logprob: -12.329080581665039
    8. 'if' → logprob: -12.704080581665039
    9. ''accès' → logprob: -12.829080581665039
    10. 'entra' → logprob: -12.954080581665039

Token 877: ' principal' (ID: 10589)
  Prédit: 'submit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'submit' → logprob: -0.47408777475357056
    2. 'if' → logprob: -0.9740877747535706
    3. ' if' → logprob: -12.474087715148926
    4. ' submit' → logprob: -12.599087715148926
    5. '
' → logprob: -13.474087715148926
    6. '```' → logprob: -14.099087715148926
    7. '.submit' → logprob: -14.224087715148926
    8. 'def' → logprob: -15.099087715148926
    9. '#' → logprob: -15.099087715148926
    10. '_submit' → logprob: -16.474088668823242

Token 878: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23968751728534698
    2. '
' → logprob: -2.239687442779541
    3. 'submit' → logprob: -2.239687442779541
    4. 'def' → logprob: -10.2396879196167
    5. ' if' → logprob: -10.3646879196167
    6. 'sub' → logprob: -10.4896879196167
    7. '

' → logprob: -10.9896879196167
    8. '```' → logprob: -11.6146879196167
    9. ' submit' → logprob: -12.3646879196167
    10. '  
' → logprob: -12.7396879196167

Token 879: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.3066025972366333
    2. 'script' → logprob: -2.0566024780273438
    3. ' script' → logprob: -2.9316024780273438
    4. ' programme' → logprob: -2.9316024780273438
    5. 'program' → logprob: -3.5566024780273438
    6. ' program' → logprob: -8.056602478027344
    7. 'code' → logprob: -8.306602478027344
    8. 'programm' → logprob: -8.681602478027344
    9. 'python' → logprob: -9.306602478027344
    10. 'module' → logprob: -9.931602478027344

Token 880: ' Python' (ID: 26534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029975526034832
    2. '
' → logprob: -3.529975414276123
    3. 'submit' → logprob: -9.154975891113281
    4. ' if' → logprob: -10.154975891113281
    5. '

' → logprob: -10.279975891113281
    6. '```' → logprob: -10.279975891113281
    7. '  
' → logprob: -12.654975891113281
    8. '    
' → logprob: -13.279975891113281
    9. ' 
' → logprob: -13.654975891113281
    10. '\n' → logprob: -13.904975891113281

Token 881: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002271820092573762
    2. '
' → logprob: -6.25227165222168
    3. 'submit' → logprob: -8.00227165222168
    4. ' if' → logprob: -12.12727165222168
    5. '```' → logprob: -13.12727165222168
    6. '

' → logprob: -15.62727165222168
    7. '    
' → logprob: -15.87727165222168
    8. '  
' → logprob: -16.00227165222168
    9. '\
' → logprob: -16.12727165222168
    10. 'i' → logprob: -16.12727165222168

Token 882: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011711753904819489
    2. 'submit' → logprob: -6.751171112060547
    3. ' if' → logprob: -14.251171112060547
    4. '```' → logprob: -15.126171112060547
    5. '
' → logprob: -17.501171112060547
    6. ' submit' → logprob: -18.626171112060547
    7. '_submit' → logprob: -20.251171112060547
    8. '.submit' → logprob: -20.376171112060547
    9. 'sub' → logprob: -20.751171112060547
    10. '``' → logprob: -21.251171112060547

Token 883: ' __' (ID: 2516)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007100477814674377
    2. 'submit' → logprob: -7.2507100105285645
    3. ' if' → logprob: -15.625710487365723
    4. '```' → logprob: -20.000709533691406
    5. ' submit' → logprob: -20.375709533691406
    6. '__' → logprob: -22.375709533691406
    7. '_submit' → logprob: -22.750709533691406
    8. 'sub' → logprob: -22.875709533691406
    9. '.submit' → logprob: -22.875709533691406
    10. 'Submit' → logprob: -23.000709533691406

Token 884: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -2.339278580620885e-06
    2. 'main' → logprob: -13.000001907348633
    3. 'na' → logprob: -17.375001907348633
    4. 'if' → logprob: -19.875001907348633
    5. 'nam' → logprob: -20.375001907348633
    6. ' name' → logprob: -20.625001907348633
    7. 'n' → logprob: -21.125001907348633
    8. '_' → logprob: -24.250001907348633
    9. '	name' → logprob: -25.500001907348633
    10. '_name' → logprob: -25.625001907348633

Token 885: '__' (ID: 771)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5557062029838562
    2. '__' → logprob: -1.055706262588501
    3. ' ==' → logprob: -2.555706262588501
    4. '=' → logprob: -8.055706024169922
    5. '=="' → logprob: -8.305706024169922
    6. '=='' → logprob: -8.930706024169922
    7. '_' → logprob: -10.680706024169922
    8. '==
' → logprob: -11.055706024169922
    9. 'if' → logprob: -12.555706024169922
    10. 'main' → logprob: -13.180706024169922

Token 886: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1735020875930786
    2. '==' → logprob: -1.9235020875930786
    3. '__' → logprob: -4.423501968383789
    4. '=="' → logprob: -7.173501968383789
    5. '=='' → logprob: -7.923501968383789
    6. '=' → logprob: -10.173501968383789
    7. 'if' → logprob: -11.548501968383789
    8. ' =' → logprob: -12.298501968383789
    9. '==
' → logprob: -12.423501968383789
    10. '[' → logprob: -12.923501968383789

Token 887: ' une' (ID: 2463)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03853254392743111
    2. ''' → logprob: -3.2885324954986572
    3. '__' → logprob: -8.288532257080078
    4. ' "__' → logprob: -8.413532257080078
    5. ' '__' → logprob: -11.163532257080078
    6. '==' → logprob: -14.038532257080078
    7. '=' → logprob: -14.538532257080078
    8. '___' → logprob: -14.663532257080078
    9. ' "' → logprob: -14.913532257080078
    10. 'main' → logprob: -15.413532257080078

Token 888: ' variable' (ID: 11076)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15189363062381744
    2. 'main' → logprob: -2.1518936157226562
    3. '"' → logprob: -5.276893615722656
    4. '=' → logprob: -5.401893615722656
    5. '==' → logprob: -5.526893615722656
    6. '_' → logprob: -5.526893615722656
    7. 'name' → logprob: -6.151893615722656
    8. '=="' → logprob: -6.776893615722656
    9. 'string' → logprob: -6.901893615722656
    10. 'space' → logprob: -7.651893615722656

Token 889: ' spéciale' (ID: 142408)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1416572630405426
    2. '__' → logprob: -2.5166573524475098
    3. ' ==' → logprob: -3.0166573524475098
    4. '=' → logprob: -6.76665735244751
    5. '=="' → logprob: -7.14165735244751
    6. '=='' → logprob: -8.016656875610352
    7. 'if' → logprob: -10.016656875610352
    8. '==
' → logprob: -10.891656875610352
    9. '_' → logprob: -11.016656875610352
    10. '===' → logprob: -11.516656875610352

Token 890: ' qui' (ID: 2780)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6391148567199707
    2. '==' → logprob: -0.7641148567199707
    3. 'if' → logprob: -5.639114856719971
    4. '=="' → logprob: -6.514114856719971
    5. '__' → logprob: -6.764114856719971
    6. '=='' → logprob: -8.889114379882812
    7. '==
' → logprob: -9.389114379882812
    8. '```' → logprob: -10.639114379882812
    9. '=' → logprob: -10.889114379882812
    10. ' if' → logprob: -11.014114379882812

Token 891: ' contient' (ID: 89067)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0721040740609169
    2. ' ==' → logprob: -2.697103977203369
    3. '__' → logprob: -6.822103977203369
    4. '=="' → logprob: -6.947103977203369
    5. '=' → logprob: -9.822104454040527
    6. '=='' → logprob: -9.947104454040527
    7. '===' → logprob: -12.072104454040527
    8. '==
' → logprob: -12.572104454040527
    9. ' __' → logprob: -14.697104454040527
    10. '_' → logprob: -14.947104454040527

Token 892: ' le' (ID: 505)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38773131370544434
    2. ''' → logprob: -1.1377313137054443
    3. '__' → logprob: -7.387731552124023
    4. ' "__' → logprob: -8.637731552124023
    5. ' '__' → logprob: -9.762731552124023
    6. '("__' → logprob: -13.512731552124023
    7. '('__' → logprob: -13.512731552124023
    8. '"<?' → logprob: -13.762731552124023
    9. ''"' → logprob: -14.387731552124023
    10. '"'' → logprob: -14.887731552124023

Token 893: ' nom' (ID: 8080)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.678954541683197
    2. 'string' → logprob: -0.803954541683197
    3. 'name' → logprob: -3.803954601287842
    4. '"' → logprob: -4.303954601287842
    5. 'main' → logprob: -5.428954601287842
    6. ''' → logprob: -6.428954601287842
    7. 'nom' → logprob: -6.428954601287842
    8. ' string' → logprob: -7.178954601287842
    9. 'chaine' → logprob: -8.053954124450684
    10. ' __' → logprob: -8.428954124450684

Token 894: ' du' (ID: 1462)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11411821097135544
    2. '==' → logprob: -2.3641180992126465
    3. ' ==' → logprob: -4.6141180992126465
    4. '=='' → logprob: -6.4891180992126465
    5. '=="' → logprob: -6.6141180992126465
    6. 'if' → logprob: -7.3641180992126465
    7. ''' → logprob: -8.864118576049805
    8. '=' → logprob: -9.239118576049805
    9. 'main' → logprob: -9.239118576049805
    10. '_' → logprob: -10.614118576049805

Token 895: ' module' (ID: 8827)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16653688251972198
    2. 'module' → logprob: -2.166536808013916
    3. '__' → logprob: -3.291536808013916
    4. 'principal' → logprob: -7.541536808013916
    5. 'script' → logprob: -7.666536808013916
    6. '"' → logprob: -8.791537284851074
    7. ' main' → logprob: -8.791537284851074
    8. '_main' → logprob: -9.416537284851074
    9. 'programme' → logprob: -9.416537284851074
    10. 'program' → logprob: -9.666537284851074

Token 896: ' courant' (ID: 74694)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14391829073429108
    2. ' ==' → logprob: -2.14391827583313
    3. '=="' → logprob: -4.768918514251709
    4. 'if' → logprob: -5.143918514251709
    5. '__' → logprob: -6.393918514251709
    6. '==
' → logprob: -7.643918514251709
    7. '=='' → logprob: -8.26891803741455
    8. '```' → logprob: -9.76891803741455
    9. '=' → logprob: -10.39391803741455
    10. ' if' → logprob: -11.89391803741455

Token 897: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006439318414777517
    2. ' ==' → logprob: -5.756439208984375
    3. '==' → logprob: -5.881439208984375
    4. ' if' → logprob: -8.256439208984375
    5. '
' → logprob: -9.006439208984375
    6. '```' → logprob: -10.506439208984375
    7. '__' → logprob: -11.006439208984375
    8. '==
' → logprob: -11.131439208984375
    9. '=="' → logprob: -11.631439208984375
    10. ':' → logprob: -11.881439208984375

Token 898: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.4121114822482923e-06
    2. ' if' → logprob: -12.625003814697266
    3. '```' → logprob: -17.875003814697266
    4. '__' → logprob: -19.500003814697266
    5. '
' → logprob: -19.625003814697266
    6. '	if' → logprob: -21.000003814697266
    7. '#' → logprob: -21.500003814697266
    8. 'If' → logprob: -22.125003814697266
    9. '  
' → logprob: -22.375003814697266
    10. '\' → logprob: -22.875003814697266

Token 899: ' Lorsque' (ID: 102402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.128163257315464e-07
    2. ' if' → logprob: -15.5
    3. '```' → logprob: -20.0
    4. '
' → logprob: -21.375
    5. '__' → logprob: -22.0
    6. '#' → logprob: -23.0
    7. 'If' → logprob: -23.125
    8. '	if' → logprob: -23.125
    9. '#if' → logprob: -24.5
    10. '  
' → logprob: -25.0

Token 900: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004306692280806601
    2. ' __' → logprob: -7.750430583953857
    3. 'name' → logprob: -17.125431060791016
    4. '```' → logprob: -17.875431060791016
    5. '"' → logprob: -18.375431060791016
    6. '/__' → logprob: -18.625431060791016
    7. '(__' → logprob: -19.000431060791016
    8. '___' → logprob: -19.375431060791016
    9. ''' → logprob: -19.375431060791016
    10. ' "__' → logprob: -20.000431060791016

Token 901: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00044830769184045494
    2. ' __' → logprob: -8.500448226928711
    3. '"' → logprob: -8.875448226928711
    4. ''' → logprob: -9.875448226928711
    5. 'name' → logprob: -10.000448226928711
    6. '==' → logprob: -13.250448226928711
    7. '`' → logprob: -13.500448226928711
    8. '```' → logprob: -13.625448226928711
    9. '___' → logprob: -13.875448226928711
    10. 'if' → logprob: -14.125448226928711

Token 902: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5872650146484375
    2. ' ==' → logprob: -0.8372650146484375
    3. '=="' → logprob: -5.2122650146484375
    4. '__' → logprob: -5.3372650146484375
    5. '=='' → logprob: -7.0872650146484375
    6. 'if' → logprob: -9.712265014648438
    7. 'name' → logprob: -9.962265014648438
    8. '```' → logprob: -10.962265014648438
    9. ' __' → logprob: -11.337265014648438
    10. '==
' → logprob: -11.712265014648438

Token 903: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3814329504966736
    2. '"' → logprob: -1.3814330101013184
    3. ''' → logprob: -2.7564330101013184
    4. ' "__' → logprob: -6.256433010101318
    5. ' '__' → logprob: -8.25643253326416
    6. ' __' → logprob: -9.75643253326416
    7. '('__' → logprob: -9.75643253326416
    8. '("__' → logprob: -10.13143253326416
    9. ''ex' → logprob: -10.88143253326416
    10. '___' → logprob: -11.13143253326416

Token 904: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28440311551094055
    2. ' en' → logprob: -1.4094030857086182
    3. ' __' → logprob: -6.409403324127197
    4. ' directement' → logprob: -7.909403324127197
    5. ' ==' → logprob: -8.284402847290039
    6. '==' → logprob: -8.534402847290039
    7. ' directly' → logprob: -8.909402847290039
    8. 'direct' → logprob: -9.159402847290039
    9. ' =' → logprob: -9.284402847290039
    10. ' as' → logprob: -9.784402847290039

Token 905: ' directement' (ID: 52317)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2570581436157227
    2. ' ==' → logprob: -1.2570581436157227
    3. 'if' → logprob: -1.5070581436157227
    4. '__' → logprob: -1.6320581436157227
    5. ' en' → logprob: -6.257058143615723
    6. '=="' → logprob: -6.257058143615723
    7. ' as' → logprob: -6.382058143615723
    8. ' __' → logprob: -6.632058143615723
    9. ' if' → logprob: -7.007058143615723
    10. 'as' → logprob: -7.257058143615723

Token 906: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23199540376663208
    2. '==' → logprob: -2.1069953441619873
    3. ':' → logprob: -3.2319953441619873
    4. 'if' → logprob: -3.6069953441619873
    5. ':
' → logprob: -4.606995582580566
    6. '__' → logprob: -4.856995582580566
    7. ' if' → logprob: -7.981995582580566
    8. '=="' → logprob: -8.231995582580566
    9. '==
' → logprob: -9.356995582580566
    10. '__":
' → logprob: -9.856995582580566

Token 907: 'et' (ID: 292)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33058181405067444
    2. '__' → logprob: -1.330581784248352
    3. ''' → logprob: -4.0805816650390625
    4. ' "__' → logprob: -8.455581665039062
    5. 'if' → logprob: -10.205581665039062
    6. ' __' → logprob: -11.330581665039062
    7. ' '__' → logprob: -12.705581665039062
    8. '==' → logprob: -12.955581665039062
    9. '```' → logprob: -13.330581665039062
    10. '"name' → logprob: -13.455581665039062

Token 908: ' non' (ID: 2893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.29953429102897644
    2. ' not' → logprob: -1.7995343208312988
    3. 'not' → logprob: -2.549534320831299
    4. ' __' → logprob: -5.049534320831299
    5. ' pas' → logprob: -5.924534320831299
    6. 'pas' → logprob: -5.924534320831299
    7. 'non' → logprob: -6.424534320831299
    8. '_' → logprob: -7.799534320831299
    9. ' non' → logprob: -8.04953384399414
    10. '==' → logprob: -8.29953384399414

Token 909: ' import' (ID: 1588)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6533661484718323
    2. 'import' → logprob: -1.0283660888671875
    3. ' en' → logprob: -2.7783660888671875
    4. ' __' → logprob: -3.7783660888671875
    5. ' import' → logprob: -4.7783660888671875
    6. '"' → logprob: -5.1533660888671875
    7. ' pas' → logprob: -5.7783660888671875
    8. ''' → logprob: -5.9033660888671875
    9. ' via' → logprob: -5.9033660888671875
    10. ' as' → logprob: -6.2783660888671875

Token 910: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10788091272115707
    2. '==' → logprob: -2.8578808307647705
    3. 'é' → logprob: -3.2328808307647705
    4. 'if' → logprob: -5.85788106918335
    5. 'ed' → logprob: -7.48288106918335
    6. ' ==' → logprob: -7.73288106918335
    7. ' __' → logprob: -7.85788106918335
    8. 'e' → logprob: -7.98288106918335
    9. '("__' → logprob: -8.982880592346191
    10. '=="' → logprob: -9.107880592346191

Token 911: ' depuis' (ID: 16277)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04178323596715927
    2. ' as' → logprob: -4.041783332824707
    3. '__' → logprob: -4.416783332824707
    4. '):
' → logprob: -5.541783332824707
    5. ' en' → logprob: -6.291783332824707
    6. 'as' → logprob: -6.666783332824707
    7. ' ),' → logprob: -6.791783332824707
    8. ',' → logprob: -7.041783332824707
    9. '__),' → logprob: -7.791783332824707
    10. ')' → logprob: -8.041783332824707

Token 912: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15822355449199677
    2. '"' → logprob: -2.0332236289978027
    3. ''un' → logprob: -4.533223628997803
    4. '__' → logprob: -6.033223628997803
    5. ''import' → logprob: -6.908223628997803
    6. ''une' → logprob: -8.408223152160645
    7. ''aut' → logprob: -8.408223152160645
    8. ''l' → logprob: -8.783223152160645
    9. ' "__' → logprob: -8.908223152160645
    10. ' '__' → logprob: -9.033223152160645

Token 913: ' autre' (ID: 20278)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.21704767644405365
    2. 'aut' → logprob: -2.217047691345215
    3. '__' → logprob: -3.717047691345215
    4. ' autre' → logprob: -4.217047691345215
    5. 'script' → logprob: -4.342047691345215
    6. 'import' → logprob: -4.467047691345215
    7. '```' → logprob: -4.842047691345215
    8. ''autre' → logprob: -5.217047691345215
    9. ' __' → logprob: -6.342047691345215
    10. ' module' → logprob: -6.467047691345215

Token 914: ' module' (ID: 8827)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.328860342502594
    2. 'script' → logprob: -1.3288602828979492
    3. ' script' → logprob: -4.453860282897949
    4. 'f' → logprob: -5.953860282897949
    5. 'programme' → logprob: -7.453860282897949
    6. ' module' → logprob: -8.20386028289795
    7. ' fichier' → logprob: -8.95386028289795
    8. '```' → logprob: -9.82886028289795
    9. 'code' → logprob: -9.95386028289795
    10. 'program' → logprob: -10.45386028289795

Token 915: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4559675455093384
    2. '):
' → logprob: -1.0809675455093384
    3. '):' → logprob: -4.205967426300049
    4. '__' → logprob: -4.955967426300049
    5. '):

' → logprob: -6.455967426300049
    6. ',' → logprob: -7.580967426300049
    7. '__),' → logprob: -7.580967426300049
    8. '```' → logprob: -7.580967426300049
    9. ')' → logprob: -7.705967426300049
    10. '   ' → logprob: -7.955967426300049

Token 916: ' __' (ID: 2516)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.703443770878948e-06
    2. ' if' → logprob: -12.125007629394531
    3. '__' → logprob: -13.125007629394531
    4. '```' → logprob: -16.37500762939453
    5. 'print' → logprob: -20.75000762939453
    6. '#' → logprob: -21.00000762939453
    7. '``' → logprob: -21.37500762939453
    8. '
' → logprob: -21.50000762939453
    9. 'def' → logprob: -21.62500762939453
    10. '#__' → logprob: -21.62500762939453

Token 917: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -4.320199877838604e-07
    2. 'main' → logprob: -15.0
    3. 'nam' → logprob: -17.75
    4. 'na' → logprob: -18.25
    5. 'n' → logprob: -20.25
    6. ' name' → logprob: -20.375
    7. '==' → logprob: -21.0
    8. 'if' → logprob: -21.25
    9. ' ==' → logprob: -22.125
    10. '```' → logprob: -22.375

Token 918: '__' (ID: 771)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.040311746299266815
    2. ' ==' → logprob: -3.415311813354492
    3. '__' → logprob: -5.165311813354492
    4. '=="' → logprob: -7.040311813354492
    5. '=='' → logprob: -10.040311813354492
    6. '=' → logprob: -12.290311813354492
    7. '==
' → logprob: -13.040311813354492
    8. '===' → logprob: -13.415311813354492
    9. ')==' → logprob: -13.540311813354492
    10. '"' → logprob: -13.790311813354492

Token 919: ' vaut' (ID: 83004)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014399135485291481
    2. ' ==' → logprob: -4.26439905166626
    3. '=="' → logprob: -8.889399528503418
    4. '=='' → logprob: -9.889399528503418
    5. '==
' → logprob: -10.389399528503418
    6. '=' → logprob: -11.514399528503418
    7. '__' → logprob: -12.514399528503418
    8. '===' → logprob: -13.389399528503418
    9. '```' → logprob: -15.014399528503418
    10. ')==' → logprob: -15.139399528503418

Token 920: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16024728119373322
    2. ''' → logprob: -1.9102473258972168
    3. '__' → logprob: -11.160246849060059
    4. ' "__' → logprob: -11.910246849060059
    5. ' '__' → logprob: -13.410246849060059
    6. ''"' → logprob: -15.410246849060059
    7. '('__' → logprob: -15.910246849060059
    8. '"'' → logprob: -16.035247802734375
    9. '("__' → logprob: -16.035247802734375
    10. ''b' → logprob: -17.910247802734375

Token 921: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.875
    3. 'ma' → logprob: -17.25
    4. 'name' → logprob: -17.5
    5. '_main' → logprob: -18.25
    6. 'm' → logprob: -19.0
    7. 'mai' → logprob: -19.125
    8. '	main' → logprob: -19.625
    9. 'maine' → logprob: -21.125
    10. '(main' → logprob: -21.625

Token 922: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2519325911998749
    2. '__':
' → logprob: -1.5019326210021973
    3. '__":
' → logprob: -12.626932144165039
    4. '__
' → logprob: -15.876932144165039
    5. '___' → logprob: -17.37693214416504
    6. '_' → logprob: -18.12693214416504
    7. '__)' → logprob: -18.87693214416504
    8. '__.' → logprob: -19.00193214416504
    9. '__:' → logprob: -19.37693214416504
    10. '__
' → logprob: -19.37693214416504

Token 923: ''
' (ID: 2207)
  Prédit: '__':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.018162818625569344
    2. '__' → logprob: -4.018162727355957
    3. '__":
' → logprob: -11.518162727355957
    4. '':
' → logprob: -12.768162727355957
    5. ''' → logprob: -16.518163681030273
    6. '_' → logprob: -17.393163681030273
    7. '__
' → logprob: -17.768163681030273
    8. '__:' → logprob: -18.268163681030273
    9. '___' → logprob: -18.643163681030273
    10. '':' → logprob: -19.518163681030273

Token 924: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2246291337069124e-05
    2. '```' → logprob: -11.500021934509277
    3. '
' → logprob: -11.625021934509277
    4. ' if' → logprob: -12.750021934509277
    5. '``' → logprob: -16.500022888183594
    6. '__' → logprob: -17.250022888183594
    7. '    
' → logprob: -17.750022888183594
    8. '  
' → logprob: -17.875022888183594
    9. '

' → logprob: -19.250022888183594
    10. ' 
' → logprob: -19.250022888183594

Token 925: ' Donc' (ID: 88837)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.128163257315464e-07
    2. ' if' → logprob: -15.125
    3. '```' → logprob: -18.875
    4. '
' → logprob: -20.25
    5. '__' → logprob: -21.125
    6. 'If' → logprob: -23.0
    7. 'i' → logprob: -23.25
    8. '	if' → logprob: -23.375
    9. '    
' → logprob: -23.625
    10. 'while' → logprob: -24.375

Token 926: ' ce' (ID: 2357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.319370302458992e-06
    2. ' if' → logprob: -12.500005722045898
    3. '__' → logprob: -13.500005722045898
    4. 'i' → logprob: -16.2500057220459
    5. '
' → logprob: -19.5000057220459
    6. '```' → logprob: -20.0000057220459
    7. '_' → logprob: -20.8750057220459
    8. ' __' → logprob: -23.1250057220459
    9. 'If' → logprob: -23.2500057220459
    10. '_if' → logprob: -23.5000057220459

Token 927: ' bloc' (ID: 51218)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7709288001060486
    2. '__' → logprob: -1.0209288597106934
    3. 'if' → logprob: -1.8959288597106934
    4. ':' → logprob: -5.145928859710693
    5. ' if' → logprob: -5.145928859710693
    6. ' ==' → logprob: -5.395928859710693
    7. '_code' → logprob: -6.270928859710693
    8. '_if' → logprob: -6.395928859710693
    9. ' __' → logprob: -6.520928859710693
    10. '_name' → logprob: -6.895928859710693

Token 928: ' garantit' (ID: 182078)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014630933292210102
    2. ' if' → logprob: -4.2646307945251465
    3. ':' → logprob: -8.139631271362305
    4. ' ==' → logprob: -9.889631271362305
    5. '```' → logprob: -10.014631271362305
    6. '_' → logprob: -11.014631271362305
    7. '==' → logprob: -11.139631271362305
    8. '__' → logprob: -11.389631271362305
    9. '=' → logprob: -11.889631271362305
    10. ' =' → logprob: -12.014631271362305

Token 929: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21500921249389648
    2. '__' → logprob: -1.7150092124938965
    3. ' if' → logprob: -4.5900092124938965
    4. ' __' → logprob: -5.9650092124938965
    5. '```' → logprob: -7.9650092124938965
    6. ':' → logprob: -8.965009689331055
    7. '   ' → logprob: -9.090009689331055
    8. '_' → logprob: -9.590009689331055
    9. ' that' → logprob: -10.590009689331055
    10. '
' → logprob: -10.965009689331055

Token 930: ' submit' (ID: 14114)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010640407708706334
    2. 'if' → logprob: -9.625106811523438
    3. ' __' → logprob: -10.125106811523438
    4. '```' → logprob: -16.000106811523438
    5. '___' → logprob: -16.625106811523438
    6. '_' → logprob: -17.250106811523438
    7. 'name' → logprob: -17.375106811523438
    8. '__
' → logprob: -18.000106811523438
    9. 'True' → logprob: -18.000106811523438
    10. '
' → logprob: -18.875106811523438

Token 931: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.684567391872406
    2. ' ==' → logprob: -1.0595674514770508
    3. '__' → logprob: -2.934567451477051
    4. '==' → logprob: -2.934567451477051
    5. '()==' → logprob: -3.184567451477051
    6. '_' → logprob: -7.059567451477051
    7. ' ()' → logprob: -8.68456745147705
    8. '   ' → logprob: -9.93456745147705
    9. ' __' → logprob: -10.05956745147705
    10. ' ' → logprob: -10.55956745147705

Token 932: ' ne' (ID: 453)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.500108141452074e-05
    2. '()
' → logprob: -10.875035285949707
    3. '(' → logprob: -11.250035285949707
    4. '()

' → logprob: -14.250035285949707
    5. '()==' → logprob: -14.500035285949707
    6. '();' → logprob: -15.000035285949707
    7. ' ()' → logprob: -15.000035285949707
    8. '()">' → logprob: -15.375035285949707
    9. '())' → logprob: -15.875035285949707
    10. '   ' → logprob: -15.875035285949707

Token 933: ' sera' (ID: 15511)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5167647004127502
    2. '_' → logprob: -1.1417646408081055
    3. 'if' → logprob: -3.5167646408081055
    4. '==' → logprob: -4.3917646408081055
    5. ' ==' → logprob: -4.5167646408081055
    6. '```' → logprob: -5.0167646408081055
    7. '=' → logprob: -5.6417646408081055
    8. '#' → logprob: -5.8917646408081055
    9. '.py' → logprob: -6.0167646408081055
    10. '()' → logprob: -6.0167646408081055

Token 934: ' appelé' (ID: 101427)
  Prédit: '_called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_called' → logprob: -1.0890017747879028
    2. ' appelé' → logprob: -1.3390017747879028
    3. 'appel' → logprob: -2.2140016555786133
    4. 'called' → logprob: -2.5890016555786133
    5. 'execut' → logprob: -2.7140016555786133
    6. ' appelée' → logprob: -2.7140016555786133
    7. '__' → logprob: -4.214001655578613
    8. ' called' → logprob: -4.339001655578613
    9. ' exécut' → logprob: -4.339001655578613
    10. 'pas' → logprob: -4.839001655578613

Token 935: ' que' (ID: 661)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6942674517631531
    2. 'if' → logprob: -1.4442675113677979
    3. ' if' → logprob: -1.9442675113677979
    4. ' __' → logprob: -3.069267511367798
    5. '```' → logprob: -3.194267511367798
    6. ' only' → logprob: -4.194267272949219
    7. '_' → logprob: -5.069267272949219
    8. '()' → logprob: -6.194267272949219
    9. ' ==' → logprob: -6.319267272949219
    10. ':' → logprob: -6.569267272949219

Token 936: ' si' (ID: 1784)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03689184412360191
    2. ' __' → logprob: -3.4118919372558594
    3. 'if' → logprob: -5.911891937255859
    4. '_' → logprob: -8.66189193725586
    5. ' if' → logprob: -9.03689193725586
    6. '```' → logprob: -9.41189193725586
    7. '_name' → logprob: -10.41189193725586
    8. ' ' → logprob: -10.78689193725586
    9. ' ==' → logprob: -10.78689193725586
    10. '__
' → logprob: -10.78689193725586

Token 937: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2014143168926239
    2. ' __' → logprob: -1.7014143466949463
    3. ' ' → logprob: -13.951414108276367
    4. ' ' → logprob: -16.201414108276367
    5. 'name' → logprob: -17.951414108276367
    6. '_name' → logprob: -18.451414108276367
    7. '/__' → logprob: -18.451414108276367
    8. ' name' → logprob: -18.951414108276367
    9. '___' → logprob: -19.076414108276367
    10. ' "__' → logprob: -19.201414108276367

Token 938: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009430267964489758
    2. 'if' → logprob: -8.000943183898926
    3. ' __' → logprob: -8.000943183898926
    4. '==' → logprob: -8.750943183898926
    5. ' ==' → logprob: -9.625943183898926
    6. '_name' → logprob: -11.500943183898926
    7. '_' → logprob: -11.500943183898926
    8. 'name' → logprob: -11.500943183898926
    9. '___' → logprob: -11.875943183898926
    10. '```' → logprob: -13.125943183898926

Token 939: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6879673600196838
    2. ' ==' → logprob: -0.8129673600196838
    3. '__' → logprob: -3.062967300415039
    4. '```' → logprob: -5.187967300415039
    5. ' __' → logprob: -7.562967300415039
    6. '=="' → logprob: -8.187967300415039
    7. 'if' → logprob: -8.562967300415039
    8. '==
' → logprob: -8.812967300415039
    9. ' is' → logprob: -9.437967300415039
    10. '=='' → logprob: -9.437967300415039

Token 940: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008788274135440588
    2. ''' → logprob: -8.125879287719727
    3. ' __' → logprob: -8.125879287719727
    4. '"' → logprob: -8.250879287719727
    5. ' "__' → logprob: -11.750879287719727
    6. ' '__' → logprob: -12.375879287719727
    7. '```' → logprob: -12.750879287719727
    8. '_name' → logprob: -13.000879287719727
    9. '___' → logprob: -13.000879287719727
    10. '_' → logprob: -14.125879287719727

Token 941: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006223243661224842
    2. 'if' → logprob: -5.756223201751709
    3. ' __' → logprob: -6.256223201751709
    4. ' en' → logprob: -7.756223201751709
    5. ' directement' → logprob: -9.131223678588867
    6. ' as' → logprob: -9.256223678588867
    7. '==' → logprob: -9.381223678588867
    8. ' ==' → logprob: -9.756223678588867
    9. ' directly' → logprob: -9.756223678588867
    10. ' if' → logprob: -10.506223678588867

Token 942: ' comme' (ID: 7971)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20180992782115936
    2. '__' → logprob: -2.451809883117676
    3. '==' → logprob: -2.826809883117676
    4. 'if' → logprob: -3.451809883117676
    5. '=='' → logprob: -6.451809883117676
    6. '```' → logprob: -6.576809883117676
    7. '=="' → logprob: -7.076809883117676
    8. ' __' → logprob: -7.951809883117676
    9. ' if' → logprob: -8.326809883117676
    10. ' as' → logprob: -8.326809883117676

Token 943: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0025982458610087633
    2. ' __' → logprob: -6.127598285675049
    3. 'le' → logprob: -8.62759780883789
    4. 'main' → logprob: -9.62759780883789
    5. ' le' → logprob: -9.75259780883789
    6. '```' → logprob: -9.87759780883789
    7. '_le' → logprob: -11.25259780883789
    8. ' main' → logprob: -11.37759780883789
    9. 'un' → logprob: -11.62759780883789
    10. '_main' → logprob: -12.00259780883789

Token 944: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5937694311141968
    2. '
' → logprob: -1.3437694311141968
    3. '```' → logprob: -1.9687694311141968
    4. '__' → logprob: -3.4687695503234863
    5. '

' → logprob: -5.218769550323486
    6. ':
' → logprob: -5.593769550323486
    7. ' if' → logprob: -5.843769550323486
    8. ':' → logprob: -6.093769550323486
    9. '``' → logprob: -7.593769550323486
    10. '__
' → logprob: -7.718769550323486

Token 945: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.040870580822229385
    2. '
' → logprob: -3.2908706665039062
    3. '```' → logprob: -6.165870666503906
    4. ':' → logprob: -8.415870666503906
    5. ' if' → logprob: -8.540870666503906
    6. ':
' → logprob: -8.790870666503906
    7. '

' → logprob: -9.040870666503906
    8. '``' → logprob: -11.290870666503906
    9. '\n' → logprob: -11.665870666503906
    10. '  
' → logprob: -11.915870666503906

Token 946: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.876193169271573e-05
    2. '
' → logprob: -9.500088691711426
    3. '```' → logprob: -11.625088691711426
    4. ' if' → logprob: -12.250088691711426
    5. '  
' → logprob: -17.000089645385742
    6. '    
' → logprob: -17.125089645385742
    7. '

' → logprob: -17.250089645385742
    8. '``' → logprob: -17.500089645385742
    9. '\n' → logprob: -17.875089645385742
    10. ' 
' → logprob: -18.125089645385742

Token 947: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.026400962844491005
    2. '__' → logprob: -3.6514010429382324
    3. ' ' → logprob: -9.276400566101074
    4. '_' → logprob: -12.526400566101074
    5. ' ' → logprob: -13.276400566101074
    6. ' ' → logprob: -14.276400566101074
    7. ' _' → logprob: -15.526400566101074
    8. ' ​' → logprob: -15.526400566101074
    9. '​' → logprob: -16.02640151977539
    10. '___' → logprob: -16.27640151977539

Token 948: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7449660897254944
    2. '__' → logprob: -1.1199660301208496
    3. '==' → logprob: -1.6199660301208496
    4. ' __' → logprob: -7.86996603012085
    5. '_' → logprob: -8.619966506958008
    6. '=="' → logprob: -8.869966506958008
    7. '=' → logprob: -9.119966506958008
    8. '=='' → logprob: -9.369966506958008
    9. 'main' → logprob: -9.619966506958008
    10. '[' → logprob: -10.744966506958008

Token 949: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. '==' → logprob: -15.500000953674316
    4. '____' → logprob: -16.5
    5. '__
' → logprob: -16.625
    6. '__.__' → logprob: -16.875
    7. '___' → logprob: -18.375
    8. '______' → logprob: -19.125
    9. ' __' → logprob: -19.625
    10. '_____' → logprob: -19.875

Token 950: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006782504729926586
    2. '==' → logprob: -5.006782531738281
    3. ' ==' → logprob: -10.256782531738281
    4. '=="' → logprob: -11.006782531738281
    5. '=='' → logprob: -11.756782531738281
    6. '=' → logprob: -12.381782531738281
    7. '_' → logprob: -13.881782531738281
    8. '"' → logprob: -14.631782531738281
    9. '__.__' → logprob: -14.756782531738281
    10. '==
' → logprob: -14.881782531738281

Token 951: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12698018550872803
    2. '"' → logprob: -2.1269803047180176
    3. ' '__' → logprob: -10.25197982788086
    4. '__' → logprob: -11.25197982788086
    5. ' "__' → logprob: -12.75197982788086
    6. '('__' → logprob: -14.50197982788086
    7. '"'' → logprob: -15.37697982788086
    8. 'main' → logprob: -16.37697982788086
    9. ''"' → logprob: -16.50197982788086
    10. ''name' → logprob: -17.75197982788086

Token 952: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. '__' → logprob: -17.25
    3. ' main' → logprob: -19.25
    4. '_main' → logprob: -21.25
    5. '	main' → logprob: -23.625
    6. 'm' → logprob: -23.875
    7. 'name' → logprob: -24.125
    8. 'ma' → logprob: -24.125
    9. 'maine' → logprob: -24.375
    10. 'mai' → logprob: -24.625

Token 953: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014166207052767277
    2. '__' → logprob: -4.264166355133057
    3. '_' → logprob: -13.139165878295898
    4. '__":
' → logprob: -14.264165878295898
    5. '':
' → logprob: -16.3891658782959
    6. '___' → logprob: -18.1391658782959
    7. '__:' → logprob: -18.2641658782959
    8. '':' → logprob: -18.7641658782959
    9. 'main' → logprob: -20.2641658782959
    10. '_main' → logprob: -20.6391658782959

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009529872797429562
    2. 'submit' → logprob: -4.884530067443848
    3. ':' → logprob: -7.509530067443848
    4. '(sub' → logprob: -8.259530067443848
    5. ':
' → logprob: -8.384530067443848
    6. ' submit' → logprob: -8.509530067443848
    7. 'sub' → logprob: -8.509530067443848
    8. '	sub' → logprob: -8.634530067443848
    9. '    
' → logprob: -8.884530067443848
    10. '_submit' → logprob: -10.009530067443848

Token 955: ' submit' (ID: 14114)
  Prédit: 'submit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'submit' (adapté à ' submit') → logprob: -1.9361264946837764e-07
    2. ' submit' → logprob: -16.0
    3. 'sub' → logprob: -20.5
    4. '   ' → logprob: -20.625
    5. '.submit' → logprob: -21.5
    6. '_submit' → logprob: -23.125
    7. 's' → logprob: -23.375
    8. 'ubmit' → logprob: -24.25
    9. 'Submit' → logprob: -24.625
    10. '-submit' → logprob: -25.125

Token 956: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7311321496963501
    2. '<|end|>' → logprob: -0.7311321496963501
    3. '
' → logprob: -4.1061320304870605
    4. '(' → logprob: -5.1061320304870605
    5. ')' → logprob: -5.2311320304870605
    6. '```' → logprob: -5.6061320304870605
    7. '\n' → logprob: -5.9811320304870605
    8. '<|end|>' → logprob: -7.2311320304870605
    9. '("")' → logprob: -7.7311320304870605
    10. '()
' → logprob: -7.8561320304870605


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 954
Tokens correctement prédits (1ère position, stricte): 249
Tokens correctement prédits (1ère position, avec adaptation): 257
Tokens correctement prédits (top 10): 533
Précision stricte (1ère position): 26.10%
Précision adaptée (1ère position): 26.94%
Précision (top 10): 55.87%
================================================================================
