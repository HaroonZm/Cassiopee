================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s, t = input().split()
res = ''
for k in range(n):
    res += s[k]
    res += t[k] # on pourrait faire autrement mais bon...
# Bah voilà, c'est fini, je crois ?
print(res)
# Est-ce que ça marche pour tous les cas ? J'espère!
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008712020353414118
    2. ''' → logprob: -8.250871658325195
    3. '('' → logprob: -8.625871658325195
    4. '(n' → logprob: -8.875871658325195
    5. '`' → logprob: -9.125871658325195
    6. '```' → logprob: -9.375871658325195
    7. '("("' → logprob: -11.125871658325195
    8. '()' → logprob: -11.125871658325195
    9. '_' → logprob: -11.375871658325195
    10. ')' → logprob: -11.625871658325195

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08201935887336731
    2. ')' → logprob: -2.582019329071045
    3. '()' → logprob: -6.332019329071045
    4. '(
' → logprob: -7.707019329071045
    5. '())' → logprob: -8.457019805908203
    6. '('' → logprob: -9.332019805908203
    7. ''' → logprob: -9.457019805908203
    8. '`' → logprob: -9.707019805908203
    9. '')' → logprob: -9.707019805908203
    10. '```' → logprob: -10.082019805908203

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1446903944015503
    2. ' =' → logprob: -1.2696903944015503
    3. '=' → logprob: -1.8946903944015503
    4. 'tr' → logprob: -2.39469051361084
    5. '.' → logprob: -2.76969051361084
    6. '[' → logprob: -3.01969051361084
    7. 't' → logprob: -4.14469051361084
    8. 'trip' → logprob: -5.64469051361084
    9. 'u' → logprob: -5.76969051361084
    10. '[i' → logprob: -5.89469051361084

Token 7: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4387992024421692
    2. ' =' → logprob: -1.1887991428375244
    3. ' ' → logprob: -3.9387991428375244
    4. '_' → logprob: -4.3137993812561035
    5. 's' → logprob: -5.5637993812561035
    6. 't' → logprob: -5.6887993812561035
    7. ' []' → logprob: -6.5637993812561035
    8. ',' → logprob: -6.5637993812561035
    9. '"' → logprob: -6.9387993812561035
    10. 'i' → logprob: -7.3137993812561035

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38700801134109497
    2. '=' → logprob: -1.1370079517364502
    3. ',' → logprob: -9.012007713317871
    4. ' ' → logprob: -12.137007713317871
    5. ')' → logprob: -13.012007713317871
    6. '_' → logprob: -13.012007713317871
    7. '[' → logprob: -13.387007713317871
    8. ' ,' → logprob: -14.012007713317871
    9. ' =
' → logprob: -14.887007713317871
    10. 's' → logprob: -14.887007713317871

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3861967921257019
    2. ' input' → logprob: -1.3861968517303467
    3. 'map' → logprob: -3.6361968517303467
    4. ' map' → logprob: -3.6361968517303467
    5. ' ' → logprob: -5.136196613311768
    6. '0' → logprob: -5.261196613311768
    7. ' '',' → logprob: -7.136196613311768
    8. '"' → logprob: -7.261196613311768
    9. '(input' → logprob: -7.636196613311768
    10. '''' → logprob: -7.636196613311768

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47511380910873413
    2. '(' → logprob: -0.9751138091087341
    3. ')' → logprob: -7.725113868713379
    4. '```' → logprob: -9.100113868713379
    5. '('' → logprob: -9.475113868713379
    6. '().' → logprob: -9.725113868713379
    7. '())' → logprob: -9.725113868713379
    8. '`()' → logprob: -9.725113868713379
    9. ' ()' → logprob: -10.225113868713379
    10. '()`' → logprob: -10.350113868713379

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001290454383706674
    2. 'strip' → logprob: -9.000128746032715
    3. 'spl' → logprob: -13.125128746032715
    4. 's' → logprob: -14.000128746032715
    5. ' split' → logprob: -14.125128746032715
    6. 'replace' → logprob: -14.125128746032715
    7. 'rstrip' → logprob: -14.125128746032715
    8. 'sp' → logprob: -15.125128746032715
    9. 'rs' → logprob: -15.500128746032715
    10. '(split' → logprob: -17.00012969970703

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43976402282714844
    2. '()' → logprob: -1.4397640228271484
    3. '('' → logprob: -2.3147640228271484
    4. '("("' → logprob: -4.314764022827148
    5. '("' → logprob: -5.439764022827148
    6. '`' → logprob: -7.814764022827148
    7. '`()' → logprob: -7.814764022827148
    8. '(`' → logprob: -8.314764022827148
    9. '```' → logprob: -8.314764022827148
    10. '(()' → logprob: -8.564764022827148

Token 13: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13952526450157166
    2. 'result' → logprob: -2.7645251750946045
    3. 'count' → logprob: -4.014525413513184
    4. 'ans' → logprob: -4.139525413513184
    5. 'if' → logprob: -4.889525413513184
    6. 'd' → logprob: -5.389525413513184
    7. 'res' → logprob: -5.514525413513184
    8. 'dp' → logprob: -5.639525413513184
    9. 'i' → logprob: -5.764525413513184
    10. 'a' → logprob: -6.514525413513184

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11858905851840973
    2. '=' → logprob: -2.368589162826538
    3. '[' → logprob: -4.868588924407959
    4. '_' → logprob: -6.118588924407959
    5. '[]' → logprob: -6.118588924407959
    6. '[:]' → logprob: -6.368588924407959
    7. 's' → logprob: -6.993588924407959
    8. '.' → logprob: -6.993588924407959
    9. 'ult' → logprob: -7.493588924407959
    10. ' ' → logprob: -7.868588924407959

Token 15: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3550703525543213
    2. '[]' → logprob: -1.7300703525543213
    3. '''' → logprob: -2.6050703525543213
    4. '0' → logprob: -3.8550703525543213
    5. '"' → logprob: -4.355070114135742
    6. ' ""' → logprob: -5.480070114135742
    7. ' []' → logprob: -5.605070114135742
    8. ''' → logprob: -6.355070114135742
    9. ''s' → logprob: -6.980070114135742
    10. '[' → logprob: -7.230070114135742

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2127087504486553e-05
    2. '```' → logprob: -11.250021934509277
    3. ' for' → logprob: -11.750021934509277
    4. 'i' → logprob: -14.125021934509277
    5. '\n' → logprob: -15.750021934509277
    6. 'f' → logprob: -16.875022888183594
    7. '	for' → logprob: -17.000022888183594
    8. '\' → logprob: -17.125022888183594
    9. '``' → logprob: -17.750022888183594
    10. '>' → logprob: -18.125022888183594

Token 17: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43196770548820496
    2. ' i' → logprob: -1.0569677352905273
    3. ' _' → logprob: -6.431967735290527
    4. '_' → logprob: -7.056967735290527
    5. 'i' → logprob: -8.056967735290527
    6. '  ' → logprob: -8.681967735290527
    7. ' ‌' → logprob: -9.056967735290527
    8. ' ' → logprob: -9.181967735290527
    9. ' ```' → logprob: -11.056967735290527
    10. ' )' → logprob: -11.431967735290527

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018521318212151527
    2. 'in' → logprob: -4.143521308898926
    3. ' ' → logprob: -6.018521308898926
    4. '  ' → logprob: -11.143521308898926
    5. 'n' → logprob: -11.143521308898926
    6. ' k' → logprob: -12.268521308898926
    7. 'range' → logprob: -12.518521308898926
    8. '	in' → logprob: -13.018521308898926
    9. 'k' → logprob: -13.518521308898926
    10. ' i' → logprob: -13.643521308898926

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3526594340801239
    2. 'range' → logprob: -1.2276594638824463
    3. ' s' → logprob: -5.727659225463867
    4. 's' → logprob: -7.227659225463867
    5. ' n' → logprob: -9.602659225463867
    6. ' ' → logprob: -10.352659225463867
    7. ' t' → logprob: -10.352659225463867
    8. 'n' → logprob: -10.477659225463867
    9. 't' → logprob: -10.727659225463867
    10. ' k' → logprob: -10.852659225463867

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3133796155452728
    2. '(' → logprob: -1.3133796453475952
    3. '(len' → logprob: -9.188379287719727
    4. '(k' → logprob: -11.688379287719727
    5. ' (' → logprob: -12.438379287719727
    6. '(
' → logprob: -14.188379287719727
    7. '(s' → logprob: -14.188379287719727
    8. '(

' → logprob: -14.313379287719727
    9. '(length' → logprob: -15.188379287719727
    10. '(l' → logprob: -15.313379287719727

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001946844975464046
    2. '+' → logprob: -6.751946926116943
    3. ')' → logprob: -7.251946926116943
    4. '):
' → logprob: -10.626946449279785
    5. ':' → logprob: -11.751946449279785
    6. '   ' → logprob: -11.751946449279785
    7. ' ):' → logprob: -12.126946449279785
    8. '+k' → logprob: -12.251946449279785
    9. ' +' → logprob: -12.751946449279785
    10. '**' → logprob: -12.751946449279785

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007060127332806587
    2. ' ' → logprob: -5.2570600509643555
    3. '    
' → logprob: -8.132060050964355
    4. ' res' → logprob: -8.257060050964355
    5. '```' → logprob: -8.382060050964355
    6. '    ' → logprob: -8.507060050964355
    7. 'res' → logprob: -8.507060050964355
    8. ' if' → logprob: -8.882060050964355
    9. ' s' → logprob: -9.507060050964355
    10. '[' → logprob: -9.632060050964355

Token 23: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6422772407531738
    2. '   ' → logprob: -1.5172772407531738
    3. 'if' → logprob: -1.6422772407531738
    4. 'res' (adapté à ' res') → logprob: -3.767277240753174
    5. ' ' → logprob: -4.392277240753174
    6. 'i' → logprob: -4.517277240753174
    7. 's' → logprob: -5.392277240753174
    8. ' res' → logprob: -5.642277240753174
    9. 'r' → logprob: -6.767277240753174
    10. '    ' → logprob: -6.892277240753174

Token 24: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02104313112795353
    2. '+=' → logprob: -3.896043062210083
    3. '+' → logprob: -7.896043300628662
    4. ' +' → logprob: -9.271042823791504
    5. '+='' → logprob: -10.396042823791504
    6. '+="' → logprob: -13.146042823791504
    7. ' ' → logprob: -14.021042823791504
    8. '+=(' → logprob: -14.646042823791504
    9. ' =' → logprob: -15.146042823791504
    10. '.append' → logprob: -15.146042823791504

Token 25: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.443462610244751
    2. 's' → logprob: -1.068462610244751
    3. ' t' → logprob: -4.568462371826172
    4. ' s' → logprob: -5.568462371826172
    5. ''s' → logprob: -8.943462371826172
    6. ''' → logprob: -9.443462371826172
    7. ' ' → logprob: -9.568462371826172
    8. 'str' → logprob: -10.193462371826172
    9. '   ' → logprob: -10.568462371826172
    10. '  ' → logprob: -10.693462371826172

Token 26: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.001919479575008154
    2. '[' → logprob: -6.876919269561768
    3. 'k' → logprob: -7.251919269561768
    4. '[t' → logprob: -9.876919746398926
    5. ''[' → logprob: -11.001919746398926
    6. 's' → logprob: -11.126919746398926
    7. '```' → logprob: -11.126919746398926
    8. '\[' → logprob: -11.501919746398926
    9. '[n' → logprob: -11.626919746398926
    10. ''' → logprob: -11.876919746398926

Token 27: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7652365565299988
    2. 't' → logprob: -0.7652365565299988
    3. 'if' → logprob: -3.2652366161346436
    4. '+t' → logprob: -5.0152363777160645
    5. ' if' → logprob: -5.2652363777160645
    6. ' ]' → logprob: -5.7652363777160645
    7. '+' → logprob: -6.1402363777160645
    8. ' ' → logprob: -6.1402363777160645
    9. ' t' → logprob: -6.3902363777160645
    10. ')' → logprob: -6.5152363777160645

Token 28: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03218066692352295
    2. '+t' → logprob: -3.9071807861328125
    3. '   ' → logprob: -5.4071807861328125
    4. ' t' → logprob: -6.0321807861328125
    5. ' +' → logprob: -6.1571807861328125
    6. '+' → logprob: -6.1571807861328125
    7. ' ' → logprob: -8.532180786132812
    8. ''t' → logprob: -9.657180786132812
    9. '    
' → logprob: -10.407180786132812
    10. '[' → logprob: -10.782180786132812

Token 29: ' res' (ID: 694)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.019434841349720955
    2. '+t' → logprob: -4.519434928894043
    3. ' t' → logprob: -5.644434928894043
    4. ' +' → logprob: -5.894434928894043
    5. '+' → logprob: -6.769434928894043
    6. '   ' → logprob: -7.644434928894043
    7. ' ' → logprob: -7.894434928894043
    8. '  ' → logprob: -11.019434928894043
    9. 'if' → logprob: -11.519434928894043
    10. '    
' → logprob: -11.769434928894043

Token 30: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3303724527359009
    2. '+=' → logprob: -1.4553724527359009
    3. ' +=' → logprob: -3.2053723335266113
    4. ' +' → logprob: -5.205372333526611
    5. '+='' → logprob: -6.330372333526611
    6. '+="' → logprob: -9.58037281036377
    7. '[' → logprob: -10.33037281036377
    8. '<|end|>' → logprob: -10.45537281036377
    9. ' ' → logprob: -10.58037281036377
    10. '+
' → logprob: -10.95537281036377

Token 31: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02057657577097416
    2. ' t' → logprob: -3.8955764770507812
    3. ' ' → logprob: -10.645576477050781
    4. 's' → logprob: -12.020576477050781
    5. '  ' → logprob: -12.895576477050781
    6. '   ' → logprob: -13.770576477050781
    7. '_t' → logprob: -15.270576477050781
    8. '`t' → logprob: -15.520576477050781
    9. ' s' → logprob: -15.645576477050781
    10. '	t' → logprob: -15.645576477050781

Token 32: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00529151177033782
    2. '[' → logprob: -5.25529146194458
    3. '[key' → logprob: -10.380291938781738
    4. '[K' → logprob: -12.380291938781738
    5. 'k' → logprob: -12.755291938781738
    6. '[token' → logprob: -13.130291938781738
    7. '[q' → logprob: -13.255291938781738
    8. '[n' → logprob: -13.380291938781738
    9. '[
' → logprob: -13.380291938781738
    10. '<|end|>' → logprob: -13.505291938781738

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004198424983769655
    2. ')' → logprob: -6.0041985511779785
    3. '']' → logprob: -6.8791985511779785
    4. '}' → logprob: -7.3791985511779785
    5. '<|end|>' → logprob: -10.50419807434082
    6. ']
' → logprob: -11.00419807434082
    7. '"]' → logprob: -11.75419807434082
    8. ' ]' → logprob: -12.37919807434082
    9. '```' → logprob: -13.00419807434082
    10. '])' → logprob: -13.12919807434082

Token 34: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.375000953674316
    3. 'pr' → logprob: -17.375
    4. '```' → logprob: -17.625
    5. 'prin' → logprob: -19.25
    6. 'p' → logprob: -19.5
    7. '-print' → logprob: -19.75
    8. 'pri' → logprob: -19.75
    9. '
' → logprob: -19.75
    10. '`' → logprob: -20.375

Token 35: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004006215371191502
    2. '\n' → logprob: -5.629006385803223
    3. '<|end|>' → logprob: -8.754006385803223
    4. '
' → logprob: -9.629006385803223
    5. ' 
' → logprob: -9.629006385803223
    6. ' print' → logprob: -10.379006385803223
    7. '\' → logprob: -11.004006385803223
    8. '```' → logprob: -11.254006385803223
    9. '  
' → logprob: -11.504006385803223
    10. ''\' → logprob: -11.629006385803223

Token 36: ' pourrait' (ID: 39622)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007349865976721048
    2. 'eline' → logprob: -6.132349967956543
    3. 'line' → logprob: -6.632349967956543
    4. ' e' → logprob: -7.257349967956543
    5. 'ex' → logprob: -7.507349967956543
    6. 'ly' → logprob: -7.632349967956543
    7. '<|end|>' → logprob: -7.757349967956543
    8. 'es' → logprob: -8.007349967956543
    9. '<|end|>' → logprob: -8.132349967956543
    10. ' next' → logprob: -8.757349967956543

Token 37: ' faire' (ID: 8119)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9241206645965576
    2. 'aj' → logprob: -1.2991206645965576
    3. 'égal' → logprob: -1.7991206645965576
    4. 'contin' → logprob: -2.1741206645965576
    5. 'faire' → logprob: -4.299120903015137
    6. 'mettre' → logprob: -4.674120903015137
    7. ' continuer' → logprob: -5.299120903015137
    8. ' ajouter' → logprob: -5.924120903015137
    9. ' aussi' → logprob: -6.049120903015137
    10. 'continue' → logprob: -6.174120903015137

Token 38: ' autrement' (ID: 144670)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.007638567127287388
    2. ' res' → logprob: -5.882638454437256
    3. '   ' → logprob: -6.507638454437256
    4. ' ' → logprob: -7.132638454437256
    5. '```' → logprob: -7.382638454437256
    6. 'print' → logprob: -7.632638454437256
    7. 'return' → logprob: -8.257638931274414
    8. 's' → logprob: -8.507638931274414
    9. '  ' → logprob: -9.007638931274414
    10. '`' → logprob: -9.132638931274414

Token 39: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42168527841567993
    2. ' ' → logprob: -2.421685218811035
    3. '<|end|>' → logprob: -2.421685218811035
    4. '   ' → logprob: -3.171685218811035
    5. '\n' → logprob: -3.296685218811035
    6. 'return' → logprob: -4.171685218811035
    7. '#' → logprob: -4.171685218811035
    8. '```' → logprob: -4.546685218811035
    9. '  
' → logprob: -4.671685218811035
    10. '    
' → logprob: -4.671685218811035

Token 40: ' bon' (ID: 4846)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1993093490600586
    2. ' res' → logprob: -2.3243093490600586
    3. 'pass' → logprob: -3.5743093490600586
    4. 'rés' → logprob: -4.324309349060059
    5. 'continue' → logprob: -4.949309349060059
    6. ' c' → logprob: -5.199309349060059
    7. ' True' → logprob: -5.324309349060059
    8. 'c' → logprob: -5.449309349060059
    9. 'True' → logprob: -5.699309349060059
    10. 'print' → logprob: -6.324309349060059

Token 41: '...
' (ID: 4908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03499984368681908
    2. '\n' → logprob: -3.7849998474121094
    3. '
' → logprob: -4.909999847412109
    4. '```' → logprob: -6.534999847412109
    5. '<|end|>' → logprob: -6.909999847412109
    6. ' print' → logprob: -7.784999847412109
    7. ')' → logprob: -7.909999847412109
    8. '\' → logprob: -8.53499984741211
    9. ' ' → logprob: -8.78499984741211
    10. '`' → logprob: -9.03499984741211

Token 42: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002234437270089984
    2. '```' → logprob: -9.625223159790039
    3. '
' → logprob: -10.000223159790039
    4. '\n' → logprob: -10.125223159790039
    5. ' print' → logprob: -10.500223159790039
    6. '<|end|>' → logprob: -10.875223159790039
    7. '\' → logprob: -11.750223159790039
    8. '`' → logprob: -12.625223159790039
    9. '``' → logprob: -13.250223159790039
    10. '#print' → logprob: -13.375223159790039

Token 43: ' Bah' (ID: 22619)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.505351095460355e-05
    2. ' print' → logprob: -9.500075340270996
    3. '#print' → logprob: -17.00007438659668
    4. 'pr' → logprob: -17.25007438659668
    5. '-print' → logprob: -17.50007438659668
    6. '```' → logprob: -17.62507438659668
    7. 'prin' → logprob: -17.75007438659668
    8. ' ' → logprob: -18.75007438659668
    9. 'p' → logprob: -18.87507438659668
    10. '#' → logprob: -19.25007438659668

Token 44: ' voilà' (ID: 77612)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.123899558791891e-05
    2. ' print' → logprob: -10.37507152557373
    3. 'pr' → logprob: -10.62507152557373
    4. 'res' → logprob: -11.75007152557373
    5. 'prin' → logprob: -12.87507152557373
    6. '   ' → logprob: -13.37507152557373
    7. 'return' → logprob: -13.87507152557373
    8. '#print' → logprob: -14.87507152557373
    9. 'prit' → logprob: -15.12507152557373
    10. 'result' → logprob: -15.50007152557373

Token 45: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010342398309148848
    2. ' print' → logprob: -9.250102996826172
    3. '<|end|>' → logprob: -12.000102996826172
    4. '#print' → logprob: -14.750102996826172
    5. '```' → logprob: -15.125102996826172
    6. 'pr' → logprob: -16.125102996826172
    7. '#' → logprob: -16.375102996826172
    8. ' ' → logprob: -16.875102996826172
    9. '(print' → logprob: -17.500102996826172
    10. ')' → logprob: -17.625102996826172

Token 46: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019287518225610256
    2. ' print' → logprob: -6.251928806304932
    3. 'res' → logprob: -16.376928329467773
    4. '```' → logprob: -17.251928329467773
    5. 'pr' → logprob: -17.751928329467773
    6. '#print' → logprob: -17.876928329467773
    7. '   ' → logprob: -18.626928329467773
    8. '	print' → logprob: -19.501928329467773
    9. '.print' → logprob: -19.501928329467773
    10. ' ' → logprob: -19.626928329467773

Token 47: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.12787988781929016
    2. 'est' → logprob: -2.1278798580169678
    3. 'res' → logprob: -8.502880096435547
    4. ''' → logprob: -8.752880096435547
    5. '’est' → logprob: -9.002880096435547
    6. '   ' → logprob: -9.252880096435547
    7. ' est' → logprob: -9.752880096435547
    8. 'e' → logprob: -10.002880096435547
    9. ''''' → logprob: -10.252880096435547
    10. ''#' → logprob: -10.627880096435547

Token 48: ' fini' (ID: 63561)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.09491278976202011
    2. 'f' → logprob: -2.9699127674102783
    3. 'fait' → logprob: -3.9699127674102783
    4. ' fini' → logprob: -5.219913005828857
    5. 'fin' → logprob: -5.344913005828857
    6. 'la' → logprob: -6.344913005828857
    7. 'res' → logprob: -6.594913005828857
    8. 'termin' → logprob: -6.719913005828857
    9. ' tout' → logprob: -6.719913005828857
    10. 'le' → logprob: -6.719913005828857

Token 49: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011893989285454154
    2. '<|end|>' → logprob: -7.001189231872559
    3. ' print' → logprob: -8.251189231872559
    4. '\n' → logprob: -11.876189231872559
    5. '#print' → logprob: -12.626189231872559
    6. ')' → logprob: -13.376189231872559
    7. '```' → logprob: -13.376189231872559
    8. '#' → logprob: -13.751189231872559
    9. '<|end|>' → logprob: -14.251189231872559
    10. '
' → logprob: -14.876189231872559

Token 50: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001170460251159966
    2. ' print' → logprob: -6.751170635223389
    3. '#print' → logprob: -15.87617015838623
    4. '```' → logprob: -17.376171112060547
    5. '<|end|>' → logprob: -18.001171112060547
    6. '.print' → logprob: -18.126171112060547
    7. '_print' → logprob: -19.126171112060547
    8. '`' → logprob: -19.626171112060547
    9. '	print' → logprob: -19.626171112060547
    10. '-print' → logprob: -19.626171112060547

Token 51: ' crois' (ID: 65485)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007858026656322181
    2. ' print' → logprob: -7.875785827636719
    3. 'm' → logprob: -8.000785827636719
    4. 's' → logprob: -10.500785827636719
    5. '#print' → logprob: -11.750785827636719
    6. 'ms' → logprob: -12.250785827636719
    7. '.print' → logprob: -12.500785827636719
    8. 'n' → logprob: -12.875785827636719
    9. '   ' → logprob: -13.000785827636719
    10. 'res' → logprob: -13.000785827636719

Token 52: ' ?
' (ID: 19740)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.889424836728722e-05
    2. '<|end|>' → logprob: -10.000099182128906
    3. ' print' → logprob: -10.125099182128906
    4. ')' → logprob: -12.375099182128906
    5. '#print' → logprob: -12.625099182128906
    6. '
' → logprob: -13.125099182128906
    7. '#' → logprob: -13.500099182128906
    8. '\n' → logprob: -14.500099182128906
    9. '(print' → logprob: -14.500099182128906
    10. '```' → logprob: -14.750099182128906

Token 53: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.146429223008454e-05
    2. ' print' → logprob: -10.25006103515625
    3. '<|end|>' → logprob: -10.87506103515625
    4. '#print' → logprob: -12.62506103515625
    5. ')' → logprob: -13.87506103515625
    6. '```' → logprob: -14.12506103515625
    7. '
' → logprob: -14.37506103515625
    8. '#' → logprob: -14.62506103515625
    9. '(print' → logprob: -15.25006103515625
    10. 'pr' → logprob: -15.37506103515625

Token 54: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12698081135749817
    2. '(res' → logprob: -2.126980781555176
    3. '('' → logprob: -10.001980781555176
    4. '()' → logprob: -12.501980781555176
    5. 'res' → logprob: -13.501980781555176
    6. '(
' → logprob: -14.376980781555176
    7. '(`' → logprob: -14.626980781555176
    8. ' (' → logprob: -14.751980781555176
    9. '("("' → logprob: -15.001980781555176
    10. '(

' → logprob: -15.751980781555176

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '))' → logprob: -12.87500286102295
    3. '`)' → logprob: -15.00000286102295
    4. '')' → logprob: -16.000003814697266
    5. ')`' → logprob: -16.125003814697266
    6. ' )' → logprob: -16.250003814697266
    7. ')")' → logprob: -18.250003814697266
    8. '})' → logprob: -18.375003814697266
    9. '）' → logprob: -18.750003814697266
    10. ')
' → logprob: -18.875003814697266

Token 56: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0442981719970703
    2. '\n' → logprob: -1.1692981719970703
    3. '<|end|>' → logprob: -1.1692981719970703
    4. '#' → logprob: -4.54429817199707
    5. '```' → logprob: -5.04429817199707
    6. '\' → logprob: -5.41929817199707
    7. '<|end|>' → logprob: -6.54429817199707
    8. '
' → logprob: -6.79429817199707
    9. ' ' → logprob: -7.29429817199707
    10. '}' → logprob: -7.79429817199707

Token 57: ' Est' (ID: 4555)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '-ce' (ID: 35404)
  Prédit: '-ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ce' → logprob: -0.004713376518338919
    2. '#' → logprob: -6.004713535308838
    3. '-' → logprob: -7.129713535308838
    4. '-il' → logprob: -7.254713535308838
    5. '()' → logprob: -8.87971305847168
    6. ' ce' → logprob: -9.00471305847168
    7. 'ce' → logprob: -9.12971305847168
    8. '<|end|>' → logprob: -9.37971305847168
    9. 'pas' → logprob: -11.25471305847168
    10. ' #' → logprob: -11.25471305847168

Token 59: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' ça' (ID: 13590)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -1.3931686878204346
    2. ' c' → logprob: -2.2681686878204346
    3. 'cela' → logprob: -2.2681686878204346
    4. 'tout' → logprob: -2.6431686878204346
    5. 'c' → logprob: -2.8931686878204346
    6. ' ceci' → logprob: -3.0181686878204346
    7. ' le' → logprob: -3.2681686878204346
    8. ' ça' → logprob: -3.3931686878204346
    9. ' cela' → logprob: -3.5181686878204346
    10. 'le' → logprob: -3.6431686878204346

Token 61: ' marche' (ID: 58191)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.17892029881477356
    2. 'mar' → logprob: -2.678920269012451
    3. ' fonctionne' → logprob: -3.428920269012451
    4. ' marche' → logprob: -3.553920269012451
    5. 'f' → logprob: -4.178920269012451
    6. 'march' → logprob: -5.303920269012451
    7. ' mar' → logprob: -5.678920269012451
    8. 's' → logprob: -6.303920269012451
    9. ' fonctionner' → logprob: -6.803920269012451
    10. '<|end|>' → logprob: -6.803920269012451

Token 62: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' tous' (ID: 10688)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.6874520778656006
    2. 'n' → logprob: -1.9374520778656006
    3. ' n' → logprob: -2.0624520778656006
    4. 'les' → logprob: -2.1874520778656006
    5. 'tout' → logprob: -2.3124520778656006
    6. 'd' → logprob: -2.8124520778656006
    7. ' tous' → logprob: -2.9374520778656006
    8. ' d' → logprob: -2.9374520778656006
    9. 't' → logprob: -3.5624520778656006
    10. ' des' → logprob: -3.9374520778656006

Token 64: ' les' (ID: 1341)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.09630052745342255
    2. '<|end|>' → logprob: -2.5963006019592285
    3. ' ?' → logprob: -4.2213006019592285
    4. 'les' → logprob: -6.7213006019592285
    5. '?n' → logprob: -7.9713006019592285
    6. ' les' → logprob: -8.47130012512207
    7. '?s' → logprob: -8.97130012512207
    8. '#' → logprob: -8.97130012512207
    9. 's' → logprob: -9.34630012512207
    10. ' ' → logprob: -9.59630012512207

Token 65: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.6896098256111145
    2. ' cas' → logprob: -0.8146098256111145
    3. 'tests' → logprob: -4.314610004425049
    4. 'inputs' → logprob: -4.689610004425049
    5. 'cases' → logprob: -4.814610004425049
    6. 'test' → logprob: -5.064610004425049
    7. ' tests' → logprob: -5.564610004425049
    8. ' test' → logprob: -5.564610004425049
    9. 'input' → logprob: -5.939610004425049
    10. ' inputs' → logprob: -6.439610004425049

Token 66: ' ?' (ID: 1423)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.029172224923968315
    2. ' ?' → logprob: -3.65417218208313
    3. '<|end|>' → logprob: -5.904172420501709
    4. '?s' → logprob: -9.90417194366455
    5. '?n' → logprob: -11.15417194366455
    6. '？' → logprob: -11.40417194366455
    7. '?

' → logprob: -11.65417194366455
    8. '؟' → logprob: -12.15417194366455
    9. 's' → logprob: -12.15417194366455
    10. '<|end|>' → logprob: -12.15417194366455

Token 67: ' J' (ID: 643)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ''espère' (ID: 116557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '!' (ID: 0)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 22.39%
Précision adaptée (1ère position): 22.39%
Précision (top 10): 52.24%
================================================================================
