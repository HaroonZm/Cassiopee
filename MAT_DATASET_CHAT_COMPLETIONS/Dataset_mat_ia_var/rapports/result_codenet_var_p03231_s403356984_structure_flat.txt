================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd

n, m = map(int, input().split())
s = input()
t = input()

g = gcd(n, m)
l = n * m // g

step_s = l // n
step_t = l // m

pos = 0
while pos < l:
    idx_s = pos // step_s
    idx_t = pos // step_t
    if s[idx_s] != t[idx_t]:
        print(-1)
        exit()
    pos += l // g

print(l)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2518087923526764
    2. ' sqrt' → logprob: -1.751808762550354
    3. 'pow' → logprob: -4.0018086433410645
    4. 'pi' → logprob: -4.7518086433410645
    5. 'sin' → logprob: -4.7518086433410645
    6. ' pi' → logprob: -5.0018086433410645
    7. 'import' → logprob: -6.3768086433410645
    8. 'ceil' → logprob: -7.0018086433410645
    9. ' sin' → logprob: -7.1268086433410645
    10. 'log' → logprob: -7.6268086433410645

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018941258313134313
    2. '\(' → logprob: -6.626893997192383
    3. ' (' → logprob: -8.501893997192383
    4. ',' → logprob: -9.126893997192383
    5. '(
' → logprob: -9.251893997192383
    6. 'a' → logprob: -9.751893997192383
    7. '\' → logprob: -10.251893997192383
    8. '\n' → logprob: -11.251893997192383
    9. '```' → logprob: -11.626893997192383
    10. '#' → logprob: -11.751893997192383

Token 5: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037094582803547382
    2. '(
' → logprob: -5.753709316253662
    3. '\(' → logprob: -8.00370979309082
    4. ',' → logprob: -9.62870979309082
    5. 'a' → logprob: -10.37870979309082
    6. '#' → logprob: -10.75370979309082
    7. 'def' → logprob: -11.37870979309082
    8. ' (' → logprob: -11.50370979309082
    9. '(

' → logprob: -11.50370979309082
    10. '(a' → logprob: -11.87870979309082

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.070610761642456
    2. ' ' → logprob: -1.320610761642456
    3. '=' → logprob: -2.070610761642456
    4. '_' → logprob: -2.445610761642456
    5. '.' → logprob: -2.570610761642456
    6. ' =' → logprob: -3.195610761642456
    7. 's' → logprob: -3.695610761642456
    8. ',' → logprob: -3.945610761642456
    9. '[' → logprob: -5.070611000061035
    10. '  ' → logprob: -5.945611000061035

Token 7: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.531810998916626
    2. ' m' → logprob: -0.906810998916626
    3. 'k' → logprob: -5.406810760498047
    4. ' k' → logprob: -6.406810760498047
    5. 'd' → logprob: -7.031810760498047
    6. 'a' → logprob: -7.656810760498047
    7. ' ' → logprob: -7.781810760498047
    8. ' d' → logprob: -7.781810760498047
    9. ' a' → logprob: -9.156810760498047
    10. '=' → logprob: -10.156810760498047

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6497666239738464
    2. '=' → logprob: -0.7747666239738464
    3. ',' → logprob: -4.149766445159912
    4. ' ,' → logprob: -7.399766445159912
    5. ' ' → logprob: -7.774766445159912
    6. '<|end|>' → logprob: -9.27476692199707
    7. ')' → logprob: -9.52476692199707
    8. '.' → logprob: -11.64976692199707
    9. '_' → logprob: -12.39976692199707
    10. ''' → logprob: -12.64976692199707

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03939669579267502
    2. 'map' → logprob: -3.2893967628479004
    3. ' ' → logprob: -6.7893967628479
    4. ' input' → logprob: -9.539396286010742
    5. '0' → logprob: -9.664396286010742
    6. ' int' → logprob: -9.914396286010742
    7. 'input' → logprob: -11.039396286010742
    8. ' list' → logprob: -11.664396286010742
    9. 'int' → logprob: -11.914396286010742
    10. '1' → logprob: -12.164396286010742

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1285400092601776
    2. '(int' → logprob: -2.2535400390625
    3. '(lambda' → logprob: -4.6285400390625
    4. '(str' → logprob: -6.0035400390625
    5. '<|end|>' → logprob: -6.2535400390625
    6. 'int' → logprob: -8.7535400390625
    7. '(input' → logprob: -8.7535400390625
    8. '()' → logprob: -9.0035400390625
    9. '[int' → logprob: -9.1285400390625
    10. '```' → logprob: -9.3785400390625

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44089192152023315
    2. '(' → logprob: -2.190891981124878
    3. '(input' → logprob: -2.440891981124878
    4. ')' → logprob: -3.065891981124878
    5. '<|end|>' → logprob: -3.065891981124878
    6. '(),' → logprob: -4.315891742706299
    7. '```' → logprob: -4.690891742706299
    8. '(int' → logprob: -5.065891742706299
    9. '(data' → logprob: -5.440891742706299
    10. '<|end|>' → logprob: -6.128391742706299

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02977640926837921
    2. ' input' → logprob: -3.5297763347625732
    3. ')' → logprob: -10.904776573181152
    4. '(input' → logprob: -11.904776573181152
    5. ' )' → logprob: -14.779776573181152
    6. '=input' → logprob: -15.654776573181152
    7. ',input' → logprob: -16.029775619506836
    8. ' ' → logprob: -17.029775619506836
    9. '	input' → logprob: -17.029775619506836
    10. 'str' → logprob: -17.654775619506836

Token 13: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0088794231414795
    2. '(' → logprob: -1.1338794231414795
    3. '())' → logprob: -1.6338794231414795
    4. '()' → logprob: -2.6338794231414795
    5. '(),' → logprob: -4.383879661560059
    6. ',' → logprob: -5.508879661560059
    7. '().' → logprob: -5.758879661560059
    8. '=' → logprob: -6.258879661560059
    9. '`()' → logprob: -6.258879661560059
    10. '('' → logprob: -6.383879661560059

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007166040013544261
    2. 'strip' → logprob: -7.250716686248779
    3. 'rstrip' → logprob: -12.250716209411621
    4. ' split' → logprob: -13.750716209411621
    5. ')' → logprob: -14.500716209411621
    6. 'read' → logprob: -15.750716209411621
    7. 'spl' → logprob: -16.375717163085938
    8. '(split' → logprob: -16.625717163085938
    9. '```' → logprob: -18.625717163085938
    10. 's' → logprob: -19.000717163085938

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032637494150549173
    2. '))' → logprob: -5.7532639503479
    3. '())' → logprob: -10.128263473510742
    4. '()' → logprob: -10.628263473510742
    5. '`)' → logprob: -11.503263473510742
    6. ')))' → logprob: -12.628263473510742
    7. ')`' → logprob: -13.003263473510742
    8. '),' → logprob: -13.753263473510742
    9. '(' → logprob: -14.128263473510742
    10. ' )' → logprob: -14.128263473510742

Token 16: 's' (ID: 82)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6737242937088013
    2. 'a' → logprob: -1.6737242937088013
    3. ' 
' → logprob: -2.1737241744995117
    4. '
' → logprob: -2.7987241744995117
    5. ')' → logprob: -3.7987241744995117
    6. '\n' → logprob: -4.048724174499512
    7. ',' → logprob: -4.173724174499512
    8. 'x' → logprob: -4.423724174499512
    9. 'd' → logprob: -4.423724174499512
    10. '\' → logprob: -4.548724174499512

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5124990344047546
    2. '=' → logprob: -2.2624990940093994
    3. ' =' → logprob: -2.2624990940093994
    4. '[:' → logprob: -2.3874990940093994
    5. 'um' → logprob: -3.1374990940093994
    6. '.' → logprob: -3.8874990940093994
    7. '[:]' → logprob: -4.51249885559082
    8. '1' → logprob: -5.13749885559082
    9. 't' → logprob: -5.26249885559082
    10. '[i' → logprob: -6.13749885559082

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10033002495765686
    2. ' input' → logprob: -2.350330114364624
    3. '[input' → logprob: -10.475330352783203
    4. 'list' → logprob: -11.225330352783203
    5. '""' → logprob: -11.350330352783203
    6. '(input' → logprob: -11.600330352783203
    7. 'int' → logprob: -11.850330352783203
    8. ' ' → logprob: -12.100330352783203
    9. '"' → logprob: -12.225330352783203
    10. '[' → logprob: -12.350330352783203

Token 19: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04716067016124725
    2. '()' → logprob: -3.2971606254577637
    3. '('' → logprob: -4.922160625457764
    4. ''' → logprob: -7.672160625457764
    5. ')' → logprob: -7.797160625457764
    6. '[' → logprob: -8.422161102294922
    7. '"' → logprob: -8.672161102294922
    8. '("("' → logprob: -9.172161102294922
    9. '(
' → logprob: -10.047161102294922
    10. '('.')' → logprob: -10.172161102294922

Token 20: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46675318479537964
    2. 'g' → logprob: -2.2167532444000244
    3. 'result' → logprob: -2.5917532444000244
    4. 'a' → logprob: -2.7167532444000244
    5. 'd' → logprob: -3.2167532444000244
    6. 'k' → logprob: -4.091753005981445
    7. 'for' → logprob: -4.716753005981445
    8. 'p' → logprob: -4.716753005981445
    9. '_' → logprob: -4.841753005981445
    10. 'r' → logprob: -5.091753005981445

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021445410326123238
    2. '=' → logprob: -4.521445274353027
    3. '[' → logprob: -4.771445274353027
    4. '[:' → logprob: -7.396445274353027
    5. ' ' → logprob: -7.771445274353027
    6. '[:]' → logprob: -8.146445274353027
    7. '  ' → logprob: -8.646445274353027
    8. 's' → logprob: -8.896445274353027
    9. '.' → logprob: -9.771445274353027
    10. '[]' → logprob: -10.146445274353027

Token 22: ' input' (ID: 3422)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6752525568008423
    2. ' ""' → logprob: -1.9252525568008423
    3. '""' → logprob: -2.1752524375915527
    4. ' ''' → logprob: -2.1752524375915527
    5. 's' → logprob: -2.9252524375915527
    6. '''' → logprob: -4.300252437591553
    7. ''s' → logprob: -4.675252437591553
    8. ' '' → logprob: -4.800252437591553
    9. ' "' → logprob: -4.800252437591553
    10. '"' → logprob: -4.925252437591553

Token 23: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5808308720588684
    2. '()' → logprob: -0.8308308720588684
    3. '.' → logprob: -5.955831050872803
    4. ')' → logprob: -6.830831050872803
    5. ''' → logprob: -8.330830574035645
    6. '('.')' → logprob: -8.580830574035645
    7. '[' → logprob: -8.830830574035645
    8. '('' → logprob: -8.955830574035645
    9. '```' → logprob: -8.955830574035645
    10. '(
' → logprob: -9.705830574035645

Token 24: 'g' (ID: 70)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2483285814523697
    2. 'g' → logprob: -1.8733285665512085
    3. 'l' → logprob: -2.748328685760498
    4. 'def' → logprob: -7.123328685760498
    5. 'd' → logprob: -7.998328685760498
    6. ' if' → logprob: -8.24832820892334
    7. 'from' → logprob: -8.49832820892334
    8. 'length' → logprob: -9.24832820892334
    9. 'a' → logprob: -9.62332820892334
    10. 'result' → logprob: -9.62332820892334

Token 25: ' =' (ID: 314)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0012352262856438756
    2. 'cd' → logprob: -6.751235008239746
    3. '=' → logprob: -10.626235008239746
    4. 'd' → logprob: -10.876235008239746
    5. '	c' → logprob: -12.126235008239746
    6. '.c' → logprob: -12.376235008239746
    7. ')' → logprob: -12.751235008239746
    8. ' =' → logprob: -13.251235008239746
    9. '.' → logprob: -14.001235008239746
    10. '_c' → logprob: -14.126235008239746

Token 26: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.5237936973571777
    2. 'g' → logprob: -0.8987936973571777
    3. ' g' → logprob: -7.398793697357178
    4. ' ' → logprob: -10.273794174194336
    5. '	g' → logprob: -11.898794174194336
    6. 'm' → logprob: -12.273794174194336
    7. '(g' → logprob: -12.273794174194336
    8. '-g' → logprob: -13.523794174194336
    9. ' math' → logprob: -13.773794174194336
    10. '   ' → logprob: -14.273794174194336

Token 27: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000779965310357511
    2. '(' → logprob: -7.25078010559082
    3. '(m' → logprob: -9.87578010559082
    4. '(g' → logprob: -11.00078010559082
    5. 'n' → logprob: -13.62578010559082
    6. '(len' → logprob: -14.62578010559082
    7. '(s' → logprob: -15.87578010559082
    8. '(
' → logprob: -17.25078010559082
    9. '((' → logprob: -17.62578010559082
    10. ' (' → logprob: -17.75078010559082

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002477502857800573
    2. ',m' → logprob: -8.375247955322266
    3. ' ,' → logprob: -11.250247955322266
    4. 'm' → logprob: -12.625247955322266
    5. ',n' → logprob: -15.250247955322266
    6. ',
' → logprob: -15.250247955322266
    7. ')' → logprob: -15.625247955322266
    8. ',g' → logprob: -15.750247955322266
    9. ' ' → logprob: -17.125247955322266
    10. ' m' → logprob: -17.500247955322266

Token 29: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01814994215965271
    2. ' m' → logprob: -4.0181498527526855
    3. ')m' → logprob: -17.018150329589844
    4. ' ' → logprob: -17.518150329589844
    5. '	m' → logprob: -18.393150329589844
    6. ')' → logprob: -18.643150329589844
    7. '&m' → logprob: -20.018150329589844
    8. ' ' → logprob: -20.143150329589844
    9. '%m' → logprob: -20.143150329589844
    10. '   ' → logprob: -20.393150329589844

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.375
    3. ' )' → logprob: -16.25
    4. ')
' → logprob: -16.5
    5. '),' → logprob: -18.375
    6. ')n' → logprob: -19.375
    7. ')t' → logprob: -19.5
    8. ')`' → logprob: -19.625
    9. ')))' → logprob: -19.75
    10. ')
' → logprob: -20.125

Token 31: 'l' (ID: 75)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.802916944026947
    2. 'if' → logprob: -1.0529170036315918
    3. ')' → logprob: -2.802917003631592
    4. '
' → logprob: -3.427917003631592
    5. ' for' → logprob: -4.177917003631592
    6. '*' → logprob: -4.302917003631592
    7. '<|end|>' → logprob: -4.302917003631592
    8. '```' → logprob: -4.302917003631592
    9. '\n' → logprob: -4.677917003631592
    10. 'n' → logprob: -4.802917003631592

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34406840801239014
    2. '=' → logprob: -1.3440684080123901
    3. 'e' → logprob: -3.7190685272216797
    4. 'cm' → logprob: -5.59406852722168
    5. 'c' → logprob: -6.96906852722168
    6. 'en' → logprob: -7.34406852722168
    7. '=[]' → logprob: -8.96906852722168
    8. 'eft' → logprob: -9.21906852722168
    9. '=e' → logprob: -9.34406852722168
    10. 'f' → logprob: -9.46906852722168

Token 33: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42747750878334045
    2. ' n' → logprob: -1.677477478981018
    3. '(n' → logprob: -1.927477478981018
    4. ' (' → logprob: -4.1774773597717285
    5. 'l' → logprob: -9.302477836608887
    6. ' l' → logprob: -10.427477836608887
    7. ' ' → logprob: -11.427477836608887
    8. '(' → logprob: -11.677477836608887
    9. '(l' → logprob: -12.302477836608887
    10. '	n' → logprob: -12.427477836608887

Token 34: ' *' (ID: 425)
  Prédit: '*m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.025267256423830986
    2. '*' → logprob: -3.9002673625946045
    3. ' *' → logprob: -5.525267124176025
    4. 'm' → logprob: -7.400267124176025
    5. '//' → logprob: -9.400267601013184
    6. '*l' → logprob: -10.775267601013184
    7. '*g' → logprob: -12.650267601013184
    8. '*n' → logprob: -13.275267601013184
    9. '*t' → logprob: -13.525267601013184
    10. '```' → logprob: -14.025267601013184

Token 35: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03804321587085724
    2. ' m' → logprob: -3.288043260574341
    3. '(m' → logprob: -14.038043022155762
    4. ' ' → logprob: -14.663043022155762
    5. ' (' → logprob: -15.163043022155762
    6. 't' → logprob: -15.913043022155762
    7. ' t' → logprob: -17.288043975830078
    8. '	m' → logprob: -18.038043975830078
    9. '(' → logprob: -18.538043975830078
    10. '#m' → logprob: -18.913043975830078

Token 36: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4741947054862976
    2. '//' → logprob: -0.9741947054862976
    3. ' ' → logprob: -9.724194526672363
    4. '#' → logprob: -11.224194526672363
    5. '/' → logprob: -11.224194526672363
    6. ' /' → logprob: -11.974194526672363
    7. '"' → logprob: -12.474194526672363
    8. ')' → logprob: -12.599194526672363
    9. '`' → logprob: -12.724194526672363
    10. ' //
' → logprob: -12.849194526672363

Token 37: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' g' → logprob: -15.875
    3. '	g' → logprob: -22.125
    4. '(g' → logprob: -23.75
    5. '   ' → logprob: -24.125
    6. ''g' → logprob: -24.625
    7. ' ' → logprob: -24.875
    8. '_g' → logprob: -24.875
    9. '```' → logprob: -24.875
    10. '  ' → logprob: -25.25

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15585821866989136
    2. '\n' → logprob: -2.405858278274536
    3. ' 
' → logprob: -4.405858039855957
    4. 'if' → logprob: -4.655858039855957
    5. 's' → logprob: -4.780858039855957
    6. '\' → logprob: -5.530858039855957
    7. '*' → logprob: -5.780858039855957
    8. '
' → logprob: -6.155858039855957
    9. '  
' → logprob: -6.155858039855957
    10. '' → logprob: -6.405858039855957

Token 39: 'step' (ID: 17509)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09919200837612152
    2. 'for' → logprob: -2.724191904067993
    3. 'result' → logprob: -4.724192142486572
    4. 'i' → logprob: -4.974192142486572
    5. 's' → logprob: -5.849192142486572
    6. '*' → logprob: -5.974192142486572
    7. 'ans' → logprob: -6.224192142486572
    8. 'res' → logprob: -6.349192142486572
    9. 'answer' → logprob: -7.099192142486572
    10. 'u' → logprob: -7.724192142486572

Token 40: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5908063650131226
    2. ' =' → logprob: -0.8408063650131226
    3. '1' → logprob: -5.215806484222412
    4. '_s' → logprob: -5.590806484222412
    5. '_' → logprob: -6.340806484222412
    6. '=' → logprob: -6.465806484222412
    7. ' ' → logprob: -6.590806484222412
    8. '_size' → logprob: -8.215806007385254
    9. ' s' → logprob: -8.590806007385254
    10. 'size' → logprob: -9.340806007385254

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03647388517856598
    2. '=' → logprob: -3.9114739894866943
    3. 's' → logprob: -4.161473751068115
    4. ' ' → logprob: -9.411474227905273
    5. ' s' → logprob: -10.036474227905273
    6. ',' → logprob: -10.536474227905273
    7. '_s' → logprob: -10.786474227905273
    8. '_' → logprob: -10.911474227905273
    9. 'p' → logprob: -11.536474227905273
    10. 'ep' → logprob: -12.286474227905273

Token 42: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10767573863267899
    2. 'n' → logprob: -3.357675790786743
    3. '(l' → logprob: -3.607675790786743
    4. '(n' → logprob: -3.982675790786743
    5. ' l' → logprob: -4.732675552368164
    6. '(s' → logprob: -5.357675552368164
    7. 's' → logprob: -5.732675552368164
    8. ' (' → logprob: -6.232675552368164
    9. ' n' → logprob: -6.857675552368164
    10. 'g' → logprob: -7.982675552368164

Token 43: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.12695498764514923
    2. ' //' → logprob: -2.126955032348633
    3. '/' → logprob: -11.501955032348633
    4. '/n' → logprob: -12.126955032348633
    5. '```' → logprob: -12.751955032348633
    6. ' ' → logprob: -12.876955032348633
    7. ' ' → logprob: -13.626955032348633
    8. 's' → logprob: -13.751955032348633
    9. '//=' → logprob: -14.376955032348633
    10. '`' → logprob: -14.501955032348633

Token 44: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.200166469876422e-06
    2. ' n' → logprob: -12.250004768371582
    3. 's' → logprob: -15.250004768371582
    4. '	n' → logprob: -16.6250057220459
    5. '<|end|>' → logprob: -16.8750057220459
    6. ' ' → logprob: -18.1250057220459
    7. '_n' → logprob: -18.1250057220459
    8. '  ' → logprob: -18.7500057220459
    9. '   ' → logprob: -19.2500057220459
    10. '%n' → logprob: -19.3750057220459

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -7.52919222577475e-05
    2. 's' → logprob: -10.250075340270996
    3. ' step' → logprob: -10.500075340270996
    4. '(step' → logprob: -12.375075340270996
    5. '*' → logprob: -12.750075340270996
    6. 'for' → logprob: -13.125075340270996
    7. '<|end|>' → logprob: -14.750075340270996
    8. 'steps' → logprob: -15.000075340270996
    9. '	step' → logprob: -15.000075340270996
    10. '[' → logprob: -15.125075340270996

Token 47: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.08045513182878494
    2. '_s' → logprob: -3.2054550647735596
    3. '_m' → logprob: -3.8304550647735596
    4. '_' → logprob: -4.205455303192139
    5. 't' → logprob: -9.20545482635498
    6. ' _' → logprob: -10.58045482635498
    7. 'm' → logprob: -11.45545482635498
    8. ' t' → logprob: -12.70545482635498
    9. '_c' → logprob: -12.83045482635498
    10. '=' → logprob: -13.70545482635498

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.376928329467773
    4. 's' → logprob: -17.751928329467773
    5. '=l' → logprob: -17.751928329467773
    6. '＝' → logprob: -18.376928329467773
    7. ' =
' → logprob: -18.751928329467773
    8. ')' → logprob: -19.376928329467773
    9. ' l' → logprob: -19.626928329467773
    10. ' ' → logprob: -19.626928329467773

Token 49: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018150178715586662
    2. ' l' → logprob: -4.018150329589844
    3. '	l' → logprob: -15.643150329589844
    4. '(l' → logprob: -15.893150329589844
    5. ' ' → logprob: -16.768150329589844
    6. 's' → logprob: -18.393150329589844
    7. '   ' → logprob: -18.893150329589844
    8. '*l' → logprob: -19.018150329589844
    9. ' ' → logprob: -19.518150329589844
    10. '_l' → logprob: -19.643150329589844

Token 50: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3133174777030945
    2. ' //' → logprob: -1.3133175373077393
    3. ' ' → logprob: -10.43831729888916
    4. '/' → logprob: -11.81331729888916
    5. '<|end|>' → logprob: -12.18831729888916
    6. ' ' → logprob: -12.68831729888916
    7. ' /' → logprob: -13.06331729888916
    8. '//=' → logprob: -13.31331729888916
    9. '```' → logprob: -13.43831729888916
    10. '`' → logprob: -13.56331729888916

Token 51: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.339278580620885e-06
    2. ' m' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -17.875001907348633
    4. ' ' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '	m' → logprob: -20.250001907348633
    7. '  ' → logprob: -20.500001907348633
    8. '%m' → logprob: -20.875001907348633
    9. '#m' → logprob: -21.250001907348633
    10. 'м' → logprob: -21.250001907348633

Token 52: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.266129732131958
    2. 'if' → logprob: -1.641129732131958
    3. 'i' → logprob: -3.891129732131958
    4. ' for' → logprob: -4.891129493713379
    5. 'result' → logprob: -5.641129493713379
    6. 's' → logprob: -6.141129493713379
    7. '<|end|>' → logprob: -6.891129493713379
    8. ' if' → logprob: -7.016129493713379
    9. '#' → logprob: -7.266129493713379
    10. 'res' → logprob: -7.391129493713379

Token 53: 'pos' (ID: 1103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004484592936933041
    2. 'if' → logprob: -6.3794846534729
    3. 'res' → logprob: -6.7544846534729
    4. 'result' → logprob: -7.0044846534729
    5. 'ans' → logprob: -7.8794846534729
    6. 'answer' → logprob: -8.754484176635742
    7. 'i' → logprob: -9.754484176635742
    8. 'possible' → logprob: -10.254484176635742
    9. 'ok' → logprob: -10.629484176635742
    10. 'valid' → logprob: -10.754484176635742

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11164017766714096
    2. 's' → logprob: -2.486640214920044
    3. '=' → logprob: -4.486639976501465
    4. '_' → logprob: -4.861639976501465
    5. '_s' → logprob: -6.236639976501465
    6. '0' → logprob: -7.611639976501465
    7. ' ' → logprob: -7.986639976501465
    8. '<|end|>' → logprob: -8.611639976501465
    9. ' _' → logprob: -9.986639976501465
    10. '1' → logprob: -9.986639976501465

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007881867350079119
    2. ' ' → logprob: -7.37578821182251
    3. '[' → logprob: -9.875787734985352
    4. '{}' → logprob: -10.375787734985352
    5. 'g' → logprob: -10.625787734985352
    6. 'step' → logprob: -10.750787734985352
    7. 's' → logprob: -11.625787734985352
    8. '[]' → logprob: -11.875787734985352
    9. '{' → logprob: -12.625787734985352
    10. 'range' → logprob: -12.625787734985352

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03550918400287628
    2. '{}' → logprob: -3.4105091094970703
    3. '[' → logprob: -6.66050910949707
    4. '{' → logprob: -8.41050910949707
    5. 'dict' → logprob: -8.78550910949707
    6. '[]' → logprob: -8.91050910949707
    7. 'g' → logprob: -10.91050910949707
    8. 'range' → logprob: -11.03550910949707
    9. 'set' → logprob: -11.91050910949707
    10. 's' → logprob: -11.91050910949707

Token 57: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8843051791191101
    2. 'while' → logprob: -1.0093052387237549
    3. ' while' → logprob: -2.009305238723755
    4. '<|end|>' → logprob: -3.259305238723755
    5. 'for' → logprob: -3.634305238723755
    6. ' for' → logprob: -4.634305000305176
    7. ' ' → logprob: -5.884305000305176
    8. '
' → logprob: -6.259305000305176
    9. ' 
' → logprob: -6.759305000305176
    10. '```' → logprob: -6.884305000305176

Token 58: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22650787234306335
    2. 'for' → logprob: -1.6015079021453857
    3. 'valid' → logprob: -7.976507663726807
    4. 'wh' → logprob: -8.226508140563965
    5. 'i' → logprob: -9.351508140563965
    6. 'w' → logprob: -9.476508140563965
    7. 'ok' → logprob: -9.601508140563965
    8. 'ans' → logprob: -9.726508140563965
    9. 'is' → logprob: -10.226508140563965
    10. 'flag' → logprob: -10.476508140563965

Token 59: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.08895669877529144
    2. 'pos' → logprob: -2.463956594467163
    3. ' s' → logprob: -12.588956832885742
    4. ' step' → logprob: -12.713956832885742
    5. '(pos' → logprob: -12.963956832885742
    6. '	pos' → logprob: -13.338956832885742
    7. ' g' → logprob: -13.713956832885742
    8. ' ' → logprob: -13.838956832885742
    9. 's' → logprob: -14.088956832885742
    10. 'g' → logprob: -14.213956832885742

Token 60: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02167210541665554
    2. '<' → logprob: -3.896672010421753
    3. '<n' → logprob: -6.896672248840332
    4. ' ' → logprob: -9.896672248840332
    5. '<len' → logprob: -11.021672248840332
    6. '+' → logprob: -11.271672248840332
    7. ' +' → logprob: -11.521672248840332
    8. '<s' → logprob: -12.021672248840332
    9. ' <=' → logprob: -12.396672248840332
    10. '<m' → logprob: -12.896672248840332

Token 61: ' l' (ID: 305)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.24822962284088135
    2. 'l' → logprob: -1.7482296228408813
    3. 'n' → logprob: -3.123229503631592
    4. ' g' → logprob: -6.998229503631592
    5. ' l' → logprob: -7.998229503631592
    6. ' n' → logprob: -8.37322998046875
    7. 'len' → logprob: -8.87322998046875
    8. 's' → logprob: -10.12322998046875
    9. ' ' → logprob: -10.49822998046875
    10. '   ' → logprob: -12.24822998046875

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006539395544677973
    2. ' :' → logprob: -8.000654220581055
    3. ':
' → logprob: -8.125654220581055
    4. ' and' → logprob: -12.125654220581055
    5. '+:' → logprob: -12.125654220581055
    6. '):' → logprob: -12.375654220581055
    7. ':**' → logprob: -13.625654220581055
    8. ' :
' → logprob: -13.625654220581055
    9. ':s' → logprob: -13.750654220581055
    10. ',' → logprob: -14.125654220581055

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03886478394269943
    2. ' if' → logprob: -3.913864850997925
    3. ' ' → logprob: -4.663864612579346
    4. ':' → logprob: -5.288864612579346
    5. 'if' → logprob: -6.413864612579346
    6. '```' → logprob: -7.038864612579346
    7. ' s' → logprob: -8.163865089416504
    8. 's' → logprob: -8.288865089416504
    9. '  ' → logprob: -8.788865089416504
    10. '	if' → logprob: -9.288865089416504

Token 64: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0835791602730751
    2. '   ' → logprob: -2.5835790634155273
    3. ' if' → logprob: -5.458579063415527
    4. 's' → logprob: -8.583579063415527
    5. 'i' → logprob: -8.708579063415527
    6. '    
' → logprob: -11.208579063415527
    7. ' ' → logprob: -11.208579063415527
    8. '```' → logprob: -11.208579063415527
    9. 'for' → logprob: -11.958579063415527
    10. '	if' → logprob: -12.708579063415527

Token 65: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09721332043409348
    2. ' =' → logprob: -2.9722132682800293
    3. 's' → logprob: -3.2222132682800293
    4. '=' → logprob: -7.472213268280029
    5. '_' → logprob: -7.472213268280029
    6. ' _' → logprob: -8.597213745117188
    7. '1' → logprob: -9.472213745117188
    8. ' s' → logprob: -9.472213745117188
    9. ' ' → logprob: -10.472213745117188
    10. '=_' → logprob: -11.472213745117188

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05536592751741409
    2. '=' → logprob: -2.930366039276123
    3. 's' → logprob: -7.805366039276123
    4. ',' → logprob: -10.305365562438965
    5. ' ' → logprob: -10.555365562438965
    6. ' s' → logprob: -12.680365562438965
    7. ')' → logprob: -12.930365562438965
    8. ' ==' → logprob: -13.305365562438965
    9. '   ' → logprob: -13.305365562438965
    10. ']' → logprob: -13.805365562438965

Token 67: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.2825111746788025
    2. 'pos' → logprob: -1.4075112342834473
    3. '(pos' → logprob: -7.032511234283447
    4. ' (' → logprob: -7.657511234283447
    5. '[pos' → logprob: -13.532510757446289
    6. 's' → logprob: -14.032510757446289
    7. ' s' → logprob: -14.157510757446289
    8. '(' → logprob: -14.782510757446289
    9. '	pos' → logprob: -14.907510757446289
    10. '(s' → logprob: -15.282510757446289

Token 68: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.34863677620887756
    2. '//' → logprob: -1.2236367464065552
    3. '%' → logprob: -9.223636627197266
    4. ' %' → logprob: -10.473636627197266
    5. '#' → logprob: -10.848636627197266
    6. ' ' → logprob: -10.973636627197266
    7. '```' → logprob: -11.598636627197266
    8. ' ' → logprob: -12.348636627197266
    9. ' step' → logprob: -12.598636627197266
    10. ' #' → logprob: -12.848636627197266

Token 69: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0022900181356817484
    2. ' step' → logprob: -6.12729024887085
    3. 'n' → logprob: -9.252289772033691
    4. '(step' → logprob: -12.502289772033691
    5. '	step' → logprob: -12.877289772033691
    6. ' n' → logprob: -13.627289772033691
    7. ' ' → logprob: -14.252289772033691
    8. 's' → logprob: -15.127289772033691
    9. '.step' → logprob: -16.377290725708008
    10. '-step' → logprob: -16.627290725708008

Token 70: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.547789674485102e-05
    2. 's' → logprob: -10.250035285949707
    3. '_' → logprob: -16.625036239624023
    4. '_t' → logprob: -19.250036239624023
    5. '_n' → logprob: -19.750036239624023
    6. ')' → logprob: -20.625036239624023
    7. '_m' → logprob: -20.875036239624023
    8. '\' → logprob: -21.250036239624023
    9. '(s' → logprob: -21.250036239624023
    10. 'S' → logprob: -21.250036239624023

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20027188956737518
    2. 'idx' → logprob: -2.7002718448638916
    3. ' idx' → logprob: -3.5752718448638916
    4. '    
' → logprob: -3.5752718448638916
    5. '<|end|>' → logprob: -4.325272083282471
    6. '
' → logprob: -4.825272083282471
    7. '<|end|>' → logprob: -4.950272083282471
    8. ' 
' → logprob: -5.075272083282471
    9. '  
' → logprob: -5.450272083282471
    10. '	idx' → logprob: -5.700272083282471

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12253536283969879
    2. 'idx' → logprob: -2.247535467147827
    3. ' idx' → logprob: -4.872535228729248
    4. '    
' → logprob: -7.372535228729248
    5. '	idx' → logprob: -7.497535228729248
    6. ',' → logprob: -8.247535705566406
    7. ' ' → logprob: -8.747535705566406
    8. '[idx' → logprob: -9.497535705566406
    9. ' 
' → logprob: -9.872535705566406
    10. '_idx' → logprob: -10.122535705566406

Token 73: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0575033538043499
    2. '   ' → logprob: -2.9325034618377686
    3. ' idx' → logprob: -6.0575032234191895
    4. 'if' → logprob: -8.557503700256348
    5. ' ' → logprob: -10.182503700256348
    6. '  ' → logprob: -11.057503700256348
    7. '	idx' → logprob: -11.182503700256348
    8. 'id' → logprob: -12.307503700256348
    9. '    
' → logprob: -12.807503700256348
    10. '_idx' → logprob: -12.807503700256348

Token 74: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.5213274309644476e-05
    2. '_s' → logprob: -11.375015258789062
    3. '_' → logprob: -13.375015258789062
    4. '_m' → logprob: -13.875015258789062
    5. ' _' → logprob: -14.875015258789062
    6. 't' → logprob: -15.125015258789062
    7. ' =' → logprob: -15.625015258789062
    8. '=' → logprob: -15.875015258789062
    9. '   ' → logprob: -16.250015258789062
    10. ' ' → logprob: -17.125015258789062

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005239683669060469
    2. '=' → logprob: -5.255239486694336
    3. ' ' → logprob: -12.130239486694336
    4. '<|end|>' → logprob: -15.255239486694336
    5. ' ==' → logprob: -16.380239486694336
    6. ')' → logprob: -16.380239486694336
    7. '  ' → logprob: -17.130239486694336
    8. 's' → logprob: -17.755239486694336
    9. '   ' → logprob: -17.755239486694336
    10. ' =
' → logprob: -17.880239486694336

Token 76: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.0006279678200371563
    2. 'pos' → logprob: -7.3756279945373535
    3. ' ' → logprob: -13.875627517700195
    4. '[pos' → logprob: -15.500627517700195
    5. '(pos' → logprob: -16.500627517700195
    6. '	pos' → logprob: -16.625627517700195
    7. ' ' → logprob: -17.625627517700195
    8. '0' → logprob: -18.125627517700195
    9. ' p' → logprob: -19.000627517700195
    10. ' (' → logprob: -19.125627517700195

Token 77: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.00594017468392849
    2. '//' → logprob: -5.130939960479736
    3. ' ' → logprob: -11.755940437316895
    4. ' ' → logprob: -13.880940437316895
    5. ' #' → logprob: -14.005940437316895
    6. '#' → logprob: -14.505940437316895
    7. '```' → logprob: -14.505940437316895
    8. '<|end|>' → logprob: -15.130940437316895
    9. ' *' → logprob: -15.630940437316895
    10. '*' → logprob: -16.255939483642578

Token 78: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3868727385997772
    2. ' step' → logprob: -1.1368727684020996
    3. '(step' → logprob: -14.011872291564941
    4. '	step' → logprob: -14.136872291564941
    5. ' ' → logprob: -16.261873245239258
    6. '_step' → logprob: -16.636873245239258
    7. '.step' → logprob: -17.261873245239258
    8. '-step' → logprob: -18.386873245239258
    9. 'Step' → logprob: -18.636873245239258
    10. 't' → logprob: -18.886873245239258

Token 79: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.60414821645827e-06
    2. 't' → logprob: -12.625004768371582
    3. '_' → logprob: -13.750004768371582
    4. '_s' → logprob: -16.250003814697266
    5. 'step' → logprob: -17.125003814697266
    6. '_m' → logprob: -18.250003814697266
    7. '_step' → logprob: -19.125003814697266
    8. 's' → logprob: -19.125003814697266
    9. '```' → logprob: -19.500003814697266
    10. '_r' → logprob: -19.625003814697266

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0012633800506592
    2. '
' → logprob: -1.6262633800506592
    3. '<|end|>' → logprob: -2.001263380050659
    4. ')' → logprob: -2.126263380050659
    5. ':' → logprob: -2.876263380050659
    6. ' if' → logprob: -3.751263380050659
    7. ' ' → logprob: -4.001263618469238
    8. '  
' → logprob: -4.001263618469238
    9. 'if' → logprob: -4.126263618469238
    10. '    
' → logprob: -4.251263618469238

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19051724672317505
    2. ' if' → logprob: -2.6905171871185303
    3. ' ' → logprob: -3.1905171871185303
    4. '<|end|>' → logprob: -3.4405171871185303
    5. 'if' → logprob: -4.315517425537109
    6. ')' → logprob: -5.190517425537109
    7. ':' → logprob: -5.815517425537109
    8. '```' → logprob: -6.315517425537109
    9. '    
' → logprob: -6.565517425537109
    10. '  ' → logprob: -6.815517425537109

Token 82: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0676821768283844
    2. '   ' → logprob: -2.8176822662353516
    3. ' if' → logprob: -5.192682266235352
    4. ' ' → logprob: -9.567682266235352
    5. '```' → logprob: -10.067682266235352
    6. '    
' → logprob: -11.567682266235352
    7. '	if' → logprob: -11.817682266235352
    8. '  ' → logprob: -13.067682266235352
    9. 'If' → logprob: -13.317682266235352
    10. 's' → logprob: -13.567682266235352

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06993921101093292
    2. 's' → logprob: -2.694939136505127
    3. '(s' → logprob: -13.944939613342285
    4. ' ' → logprob: -14.069939613342285
    5. '	s' → logprob: -14.194939613342285
    6. '>s' → logprob: -15.444939613342285
    7. ' ' → logprob: -16.19493865966797
    8. '>' → logprob: -16.81993865966797
    9. '<s' → logprob: -16.94493865966797
    10. '{s' → logprob: -17.31993865966797

Token 84: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0006380964769050479
    2. '[' → logprob: -7.375638008117676
    3. '[pos' → logprob: -11.500638008117676
    4. 'idx' → logprob: -14.250638008117676
    5. '[
' → logprob: -15.875638008117676
    6. '[i' → logprob: -16.000638961791992
    7. '[id' → logprob: -16.125638961791992
    8. '[int' → logprob: -16.250638961791992
    9. ' [' → logprob: -16.375638961791992
    10. '[s' → logprob: -16.625638961791992

Token 85: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.170270353322849e-05
    2. ']' → logprob: -10.500061988830566
    3. '_' → logprob: -11.375061988830566
    4. 's' → logprob: -11.750061988830566
    5. '_]' → logprob: -11.750061988830566
    6. '_t' → logprob: -12.625061988830566
    7. '   ' → logprob: -14.625061988830566
    8. ']_' → logprob: -14.875061988830566
    9. ' _' → logprob: -15.000061988830566
    10. ' ' → logprob: -15.250061988830566

Token 86: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.14974889159202576
    2. ' !=' → logprob: -2.1497488021850586
    3. ']' → logprob: -4.149748802185059
    4. ']!=' → logprob: -5.024748802185059
    5. ' ]' → logprob: -9.024748802185059
    6. ')!=' → logprob: -10.524748802185059
    7. ' ' → logprob: -11.024748802185059
    8. ' ' → logprob: -11.649748802185059
    9. '=' → logprob: -11.774748802185059
    10. '()!=' → logprob: -12.024748802185059

Token 87: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25198933482170105
    2. ' !=' → logprob: -1.5019893646240234
    3. ']!=' → logprob: -11.126989364624023
    4. ' ' → logprob: -11.501989364624023
    5. '!==' → logprob: -12.001989364624023
    6. '==' → logprob: -12.126989364624023
    7. '[' → logprob: -12.376989364624023
    8. '()!=' → logprob: -12.501989364624023
    9. ')!=' → logprob: -12.751989364624023
    10. '=' → logprob: -12.876989364624023

Token 88: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.16023144125938416
    2. 't' → logprob: -1.9102314710617065
    3. ' ' → logprob: -12.285231590270996
    4. '	t' → logprob: -13.660231590270996
    5. 's' → logprob: -14.660231590270996
    6. ' ' → logprob: -15.035231590270996
    7. '  ' → logprob: -15.660231590270996
    8. '_t' → logprob: -15.910231590270996
    9. ''' → logprob: -16.53523063659668
    10. '   ' → logprob: -16.66023063659668

Token 89: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.1318875446449965e-05
    2. '[' → logprob: -10.125041007995605
    3. 'idx' → logprob: -14.750041007995605
    4. '[index' → logprob: -15.125041007995605
    5. '[i' → logprob: -16.000041961669922
    6. ' [' → logprob: -16.125041961669922
    7. '[id' → logprob: -16.250041961669922
    8. '[pos' → logprob: -16.875041961669922
    9. '[int' → logprob: -17.000041961669922
    10. ' idx' → logprob: -17.375041961669922

Token 90: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -9.329167369287461e-05
    2. 't' → logprob: -9.875093460083008
    3. '_' → logprob: -10.750093460083008
    4. '_s' → logprob: -10.875093460083008
    5. ' _' → logprob: -15.125093460083008
    6. ']' → logprob: -15.500093460083008
    7. '_]' → logprob: -15.500093460083008
    8. ')' → logprob: -15.750093460083008
    9. ' ' → logprob: -15.875093460083008
    10. '   ' → logprob: -16.500093460083008

Token 91: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.390104204416275
    2. '):' → logprob: -1.6401041746139526
    3. ']:
' → logprob: -3.390104293823242
    4. '):
' → logprob: -3.390104293823242
    5. ']' → logprob: -3.515104293823242
    6. ':' → logprob: -3.765104293823242
    7. ')' → logprob: -5.515104293823242
    8. ' ]' → logprob: -6.765104293823242
    9. ' ):' → logprob: -6.765104293823242
    10. ':
' → logprob: -7.765104293823242

Token 92: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19395983219146729
    2. '   ' → logprob: -2.0689597129821777
    3. '       ' → logprob: -3.5689597129821777
    4. ' print' → logprob: -4.318959712982178
    5. '```' → logprob: -5.568959712982178
    6. 'break' → logprob: -6.193959712982178
    7. '
' → logprob: -7.568959712982178
    8. '    
' → logprob: -7.568959712982178
    9. ' 
' → logprob: -7.943959712982178
    10. ':
' → logprob: -8.193960189819336

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00027063372544944286
    2. ' print' → logprob: -9.25027084350586
    3. '-' → logprob: -9.50027084350586
    4. 'pr' → logprob: -10.62527084350586
    5. '```' → logprob: -10.62527084350586
    6. '   ' → logprob: -10.75027084350586
    7. 'p' → logprob: -11.87527084350586
    8. 'pri' → logprob: -12.37527084350586
    9. '-print' → logprob: -12.62527084350586
    10. '
' → logprob: -13.12527084350586

Token 94: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.605798602104187
    2. '(-' → logprob: -0.855798602104187
    3. '(' → logprob: -3.7307987213134766
    4. '('' → logprob: -5.605798721313477
    5. '("-' → logprob: -6.730798721313477
    6. '-' → logprob: -8.105798721313477
    7. '(pos' → logprob: -8.605798721313477
    8. '(":' → logprob: -10.355798721313477
    9. '()' → logprob: -11.480798721313477
    10. '(False' → logprob: -12.105798721313477

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -15.87500286102295
    4. '11' → logprob: -16.187501907348633
    5. '' → logprob: -17.375001907348633
    6. '１' → logprob: -17.437501907348633
    7. 'l' → logprob: -17.562501907348633
    8. '   ' → logprob: -17.625001907348633
    9. '12' → logprob: -17.625001907348633
    10. '2' → logprob: -17.937501907348633

Token 96: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14523249864578247
    2. ')' → logprob: -2.0202324390411377
    3. '       ' → logprob: -6.270232677459717
    4. ')
' → logprob: -7.395232677459717
    5. '   ' → logprob: -11.020232200622559
    6. ')`
' → logprob: -11.020232200622559
    7. ')return' → logprob: -12.020232200622559
    8. ' )
' → logprob: -13.645232200622559
    9. '),' → logprob: -13.895232200622559
    10. '```' → logprob: -13.895232200622559

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010334034450352192
    2. '
' → logprob: -7.501033306121826
    3. '        
' → logprob: -8.126033782958984
    4. 'exit' → logprob: -9.376033782958984
    5. '	exit' → logprob: -10.751033782958984
    6. '```' → logprob: -11.126033782958984
    7. ' exit' → logprob: -11.251033782958984
    8. '    
' → logprob: -11.626033782958984
    9. '
' → logprob: -11.876033782958984
    10. '  
' → logprob: -12.376033782958984

Token 98: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.4013911783695221
    2. 'break' → logprob: -1.6513911485671997
    3. '       ' → logprob: -2.2763912677764893
    4. ' exit' → logprob: -4.77639102935791
    5. ' break' → logprob: -4.77639102935791
    6. '
' → logprob: -4.90139102935791
    7. '        
' → logprob: -5.52639102935791
    8. '```' → logprob: -6.02639102935791
    9. '	exit' → logprob: -6.15139102935791
    10. '    
' → logprob: -7.02639102935791

Token 99: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014552568085491657
    2. '(' → logprob: -4.264552593231201
    3. '()
' → logprob: -8.014552116394043
    4. '0' → logprob: -10.264552116394043
    5. '()(' → logprob: -11.139552116394043
    6. '()`' → logprob: -12.639552116394043
    7. '()\' → logprob: -13.014552116394043
    8. '()

' → logprob: -13.514552116394043
    9. '`()' → logprob: -14.264552116394043
    10. ' ()' → logprob: -14.264552116394043

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054080430418252945
    2. 'pos' → logprob: -3.0540804862976074
    3. ' pos' → logprob: -5.554080486297607
    4. '```' → logprob: -6.804080486297607
    5. '
' → logprob: -8.67908000946045
    6. '    
' → logprob: -8.80408000946045
    7. '	pos' → logprob: -9.67908000946045
    8. '  ' → logprob: -9.92908000946045
    9. '``' → logprob: -11.05408000946045
    10. '  
' → logprob: -11.67908000946045

Token 101: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -3.650518920039758e-06
    2. '```' → logprob: -13.375003814697266
    3. '   ' → logprob: -13.750003814697266
    4. ' pos' → logprob: -14.000003814697266
    5. '    
' → logprob: -16.250003814697266
    6. '
' → logprob: -17.500003814697266
    7. '[pos' → logprob: -17.500003814697266
    8. '	pos' → logprob: -18.000003814697266
    9. '_pos' → logprob: -18.250003814697266
    10. '``' → logprob: -18.875003814697266

Token 102: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6211122274398804
    2. '+=' → logprob: -0.8711122274398804
    3. ' +=' → logprob: -3.12111234664917
    4. '=' → logprob: -9.996111869812012
    5. ' +' → logprob: -12.121111869812012
    6. '++' → logprob: -12.746111869812012
    7. '+="' → logprob: -12.871111869812012
    8. '+='' → logprob: -13.121111869812012
    9. '+++' → logprob: -14.746111869812012
    10. '+
' → logprob: -15.246111869812012

Token 103: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011713240382960066
    2. 'step' → logprob: -9.500117301940918
    3. ' ' → logprob: -10.375117301940918
    4. 'g' → logprob: -11.500117301940918
    5. 'l' → logprob: -14.875117301940918
    6. ' step' → logprob: -15.250117301940918
    7. 's' → logprob: -16.6251163482666
    8. 'Step' → logprob: -17.8751163482666
    9. '```' → logprob: -18.1251163482666
    10. '  ' → logprob: -18.1876163482666

Token 104: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.09964475780725479
    2. '<|end|>' → logprob: -3.224644660949707
    3. 'step' → logprob: -3.849644660949707
    4. 'g' → logprob: -3.974644660949707
    5. ' //' → logprob: -5.099644660949707
    6. ' ' → logprob: -6.474644660949707
    7. '#g' → logprob: -6.849644660949707
    8. 's' → logprob: -6.974644660949707
    9. ' step' → logprob: -7.224644660949707
    10. '1' → logprob: -7.599644660949707

Token 105: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.18627648055553436
    2. 'm' → logprob: -2.061276435852051
    3. 'l' → logprob: -3.186276435852051
    4. 'n' → logprob: -6.686276435852051
    5. 'step' → logprob: -9.93627643585205
    6. 'pos' → logprob: -10.93627643585205
    7. '1' → logprob: -12.06127643585205
    8. '100' → logprob: -12.18627643585205
    9. 'max' → logprob: -13.06127643585205
    10. ' g' → logprob: -13.43627643585205

Token 106: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -13.000004768371582
    3. '```' → logprob: -13.250004768371582
    4. ' print' → logprob: -14.250004768371582
    5. 'else' → logprob: -16.3750057220459
    6. '1' → logprob: -16.3750057220459
    7. '``' → logprob: -16.8750057220459
    8. '-print' → logprob: -17.0000057220459
    9. '
' → logprob: -17.1250057220459
    10. '#print' → logprob: -17.6250057220459

Token 107: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001085497424355708
    2. '0' → logprob: -9.37510871887207
    3. '```' → logprob: -10.87510871887207
    4. 'l' → logprob: -12.87510871887207
    5. '``' → logprob: -14.12510871887207
    6. '  
' → logprob: -14.87510871887207
    7. '    
' → logprob: -14.87510871887207
    8. ' print' → logprob: -15.12510871887207
    9. '
' → logprob: -15.50010871887207
    10. '#print' → logprob: -16.87510871887207

Token 108: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00011868205183418468
    2. 'l' → logprob: -9.500118255615234
    3. '(' → logprob: -10.125118255615234
    4. '(step' → logprob: -13.125118255615234
    5. '(len' → logprob: -14.250118255615234
    6. '(n' → logprob: -15.000118255615234
    7. '(ls' → logprob: -15.500118255615234
    8. '((' → logprob: -15.750118255615234
    9. '(pos' → logprob: -16.500118255615234
    10. ' (' → logprob: -16.625118255615234

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -12.375004768371582
    3. ')
' → logprob: -15.625004768371582
    4. '`)' → logprob: -15.875004768371582
    5. '))' → logprob: -16.1250057220459
    6. '')' → logprob: -16.6250057220459
    7. ')`' → logprob: -16.8750057220459
    8. '")' → logprob: -17.2500057220459
    9. '*)' → logprob: -18.3750057220459
    10. ')#' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 42.99%
Précision adaptée (1ère position): 47.66%
Précision (top 10): 84.11%
================================================================================
